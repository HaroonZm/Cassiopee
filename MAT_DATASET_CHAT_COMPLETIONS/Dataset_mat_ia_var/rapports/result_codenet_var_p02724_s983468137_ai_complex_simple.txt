================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul

X = int(input())
calc = lambda x, d, v: (x // d) * v, x % d
seq = [(500, 1000), (5, 5)]
residuals = [X]
outcomes = []

for divisor, value in seq:
    n, r = calc(residuals[-1], divisor, value)
    outcomes.append(n)
    residuals.append(r)

print(reduce(lambda a, b: a + b, outcomes))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.2578085660934448
    2. 'partial' → logprob: -1.7578085660934448
    3. 'reduce' → logprob: -3.3828086853027344
    4. ' wraps' → logprob: -4.007808685302734
    5. 'l' → logprob: -6.757808685302734
    6. ' partial' → logprob: -7.257808685302734
    7. 'cache' → logprob: -8.382808685302734
    8. '```' → logprob: -8.632808685302734
    9. 'cached' → logprob: -9.007808685302734
    10. 'cmp' → logprob: -9.257808685302734

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025260163471102715
    2. '.' → logprob: -4.025259971618652
    3. '\' → logprob: -6.400259971618652
    4. ',' → logprob: -6.525259971618652
    5. '```' → logprob: -6.525259971618652
    6. ' (' → logprob: -7.525259971618652
    7. '(lambda' → logprob: -7.775259971618652
    8. '[' → logprob: -8.400259971618652
    9. '\(' → logprob: -8.400259971618652
    10. '(
' → logprob: -8.525259971618652

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02557128667831421
    2. '\' → logprob: -4.400571346282959
    3. 'def' → logprob: -5.150571346282959
    4. ',' → logprob: -6.650571346282959
    5. '(
' → logprob: -6.650571346282959
    6. '.' → logprob: -6.900571346282959
    7. ' ' → logprob: -7.025571346282959
    8. '```' → logprob: -7.275571346282959
    9. '\(' → logprob: -7.650571346282959
    10. 'a' → logprob: -8.9005708694458

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.26423150300979614
    2. ' math' → logprob: -2.0142314434051514
    3. ' itertools' → logprob: -2.7642314434051514
    4. ' collections' → logprob: -3.3892314434051514
    5. 'operator' → logprob: -6.5142316818237305
    6. ' os' → logprob: -8.76423168182373
    7. 'math' → logprob: -8.88923168182373
    8. ' ' → logprob: -9.63923168182373
    9. ' typing' → logprob: -9.63923168182373
    10. 'collections' → logprob: -9.76423168182373

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.013695750385522842
    2. 'import' → logprob: -4.38869571685791
    3. '.' → logprob: -7.13869571685791
    4. ' ' → logprob: -8.13869571685791
    5. ' .' → logprob: -9.38869571685791
    6. '	import' → logprob: -12.13869571685791
    7. '.import' → logprob: -12.51369571685791
    8. '<|end|>' → logprob: -13.26369571685791
    9. '_import' → logprob: -13.88869571685791
    10. '-import' → logprob: -14.38869571685791

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.03045191988348961
    2. ' mul' → logprob: -4.405451774597168
    3. ' import' → logprob: -4.780451774597168
    4. ' ' → logprob: -5.030451774597168
    5. 'add' → logprob: -6.030451774597168
    6. ' item' → logprob: -8.780451774597168
    7. 'import' → logprob: -9.405451774597168
    8. 'mul' → logprob: -9.905451774597168
    9. ' icon' → logprob: -9.905451774597168
    10. ' sub' → logprob: -11.405451774597168

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013513470999896526
    2. '(
' → logprob: -4.513513565063477
    3. '\' → logprob: -7.138513565063477
    4. '\n' → logprob: -7.638513565063477
    5. ',' → logprob: -8.013513565063477
    6. '*' → logprob: -8.513513565063477
    7. '\(' → logprob: -8.513513565063477
    8. 'def' → logprob: -8.888513565063477
    9. '#' → logprob: -9.638513565063477
    10. '`' → logprob: -10.138513565063477

Token 10: 'X' (ID: 55)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10577815026044846
    2. '(
' → logprob: -2.730778217315674
    3. '#' → logprob: -4.730778217315674
    4. 'def' → logprob: -4.980778217315674
    5. '\' → logprob: -5.230778217315674
    6. 'result' → logprob: -5.730778217315674
    7. 'a' → logprob: -5.980778217315674
    8. '`' → logprob: -6.605778217315674
    9. 'x' → logprob: -7.355778217315674
    10. ',' → logprob: -7.605778217315674

Token 11: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0926319360733032
    2. ' =' → logprob: -1.3426319360733032
    3. '=' → logprob: -1.7176319360733032
    4. '_' → logprob: -2.0926318168640137
    5. ',' → logprob: -3.3426318168640137
    6. '[' → logprob: -3.4676318168640137
    7. '[:]' → logprob: -4.717631816864014
    8. ' ' → logprob: -4.967631816864014
    9. '(' → logprob: -4.967631816864014
    10. ')' → logprob: -5.342631816864014

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8056974411010742
    2. ' [' → logprob: -0.9306974411010742
    3. '[' → logprob: -3.180697441101074
    4. '1' → logprob: -3.305697441101074
    5. '10' → logprob: -3.305697441101074
    6. ' []' → logprob: -4.555697441101074
    7. '0' → logprob: -4.805697441101074
    8. 'range' → logprob: -4.930697441101074
    9. '[int' → logprob: -5.555697441101074
    10. '100' → logprob: -5.680697441101074

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002775438770186156
    2. '('' → logprob: -9.125277519226074
    3. '(X' → logprob: -9.875277519226074
    4. ''' → logprob: -10.500277519226074
    5. 'X' → logprob: -10.750277519226074
    6. '(
' → logprob: -10.750277519226074
    7. ')' → logprob: -11.500277519226074
    8. '("("' → logprob: -11.750277519226074
    9. '```' → logprob: -12.375277519226074
    10. ' (' → logprob: -12.375277519226074

Token 14: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4137481451034546
    2. '()' → logprob: -1.1637481451034546
    3. '())' → logprob: -4.288748264312744
    4. ')' → logprob: -4.538748264312744
    5. '(()' → logprob: -6.913748264312744
    6. '(
' → logprob: -8.038747787475586
    7. '('' → logprob: -8.038747787475586
    8. '))' → logprob: -9.663747787475586
    9. '(

' → logprob: -9.663747787475586
    10. '(`' → logprob: -10.038747787475586

Token 15: 'calc' (ID: 49633)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7034533023834229
    2. ')' → logprob: -1.4534533023834229
    3. 'result' → logprob: -1.7034533023834229
    4. 'a' → logprob: -3.953453302383423
    5. 'data' → logprob: -3.953453302383423
    6. ''' → logprob: -4.703453063964844
    7. '`' → logprob: -5.078453063964844
    8. '```' → logprob: -5.328453063964844
    9. 'factor' → logprob: -5.328453063964844
    10. '\n' → logprob: -5.453453063964844

Token 16: ' =' (ID: 314)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.516315758228302
    2. '(' → logprob: -1.1413156986236572
    3. 'ulator' → logprob: -3.0163156986236572
    4. 'ul' → logprob: -4.266315937042236
    5. 'u' → logprob: -5.141315937042236
    6. '('' → logprob: -5.516315937042236
    7. '_' → logprob: -6.391315937042236
    8. '(`' → logprob: -7.266315937042236
    9. 'culate' → logprob: -7.391315937042236
    10. ')' → logprob: -7.516315937042236

Token 17: ' lambda' (ID: 27871)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.16067524254322052
    2. ' reduce' → logprob: -1.910675287246704
    3. '(re' → logprob: -8.285675048828125
    4. 'lambda' → logprob: -9.910675048828125
    5. '(lambda' → logprob: -9.910675048828125
    6. ' functools' → logprob: -10.160675048828125
    7. ' lambda' → logprob: -10.535675048828125
    8. 'fun' → logprob: -12.035675048828125
    9. 'mul' → logprob: -12.285675048828125
    10. 're' → logprob: -12.285675048828125

Token 18: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5195333361625671
    2. 'x' → logprob: -1.644533395767212
    3. ' lst' → logprob: -2.519533395767212
    4. ' a' → logprob: -3.269533395767212
    5. 'a' → logprob: -3.519533395767212
    6. 'lst' → logprob: -4.269533157348633
    7. 'X' → logprob: -4.644533157348633
    8. ' X' → logprob: -4.894533157348633
    9. 'arr' → logprob: -4.894533157348633
    10. ' n' → logprob: -5.019533157348633

Token 19: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5798624753952026
    2. ' :' → logprob: -0.8298624753952026
    3. ' x' → logprob: -6.454862594604492
    4. ',' → logprob: -6.704862594604492
    5. ':x' → logprob: -7.954862594604492
    6. ' ,' → logprob: -8.579862594604492
    7. ' :,' → logprob: -9.204862594604492
    8. 'x' → logprob: -9.579862594604492
    9. '*' → logprob: -10.079862594604492
    10. ' ' → logprob: -10.204862594604492

Token 20: ' d' (ID: 272)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6359028220176697
    2. 'y' → logprob: -0.7609028220176697
    3. 'x' → logprob: -7.2609028816223145
    4. 'a' → logprob: -7.5109028816223145
    5. ' acc' → logprob: -7.6359028816223145
    6. 'acc' → logprob: -7.7609028816223145
    7. ' x' → logprob: -8.135902404785156
    8. ' a' → logprob: -8.635902404785156
    9. ' ' → logprob: -9.510902404785156
    10. 'mul' → logprob: -9.760902404785156

Token 21: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09200365841388702
    2. ',' → logprob: -2.967003583908081
    3. ' :' → logprob: -3.342003583908081
    4. ',:' → logprob: -8.21700382232666
    5. '=' → logprob: -8.59200382232666
    6. ':x' → logprob: -9.21700382232666
    7. 's' → logprob: -9.46700382232666
    8. ' ,' → logprob: -9.46700382232666
    9. ',x' → logprob: -9.71700382232666
    10. '_:' → logprob: -9.96700382232666

Token 22: ' v' (ID: 323)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8942481875419617
    2. ' y' → logprob: -1.2692482471466064
    3. ' acc' → logprob: -3.2692482471466064
    4. 'e' → logprob: -3.5192482471466064
    5. 'n' → logprob: -3.5192482471466064
    6. 'p' → logprob: -3.7692482471466064
    7. ' e' → logprob: -3.8942482471466064
    8. ' n' → logprob: -3.8942482471466064
    9. 'r' → logprob: -4.269248008728027
    10. 'm' → logprob: -4.394248008728027

Token 23: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012719064950942993
    2. ' :' → logprob: -4.51271915435791
    3. ',' → logprob: -6.63771915435791
    4. '=' → logprob: -8.88771915435791
    5. ',:' → logprob: -9.38771915435791
    6. ':x' → logprob: -10.01271915435791
    7. ':(' → logprob: -11.51271915435791
    8. ':,' → logprob: -11.88771915435791
    9. '[:' → logprob: -12.38771915435791
    10. 'x' → logprob: -12.38771915435791

Token 24: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.43295013904571533
    2. 'x' → logprob: -1.8079501390457153
    3. ' (' → logprob: -1.9329501390457153
    4. '(x' → logprob: -4.057950019836426
    5. ' v' → logprob: -5.057950019836426
    6. ' reduce' → logprob: -5.057950019836426
    7. 'reduce' → logprob: -5.682950019836426
    8. '(' → logprob: -6.057950019836426
    9. 'v' → logprob: -6.182950019836426
    10. ' d' → logprob: -6.682950019836426

Token 25: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16794900596141815
    2. ' x' → logprob: -2.1679489612579346
    3. 'v' → logprob: -3.9179489612579346
    4. 'd' → logprob: -5.292949199676514
    5. '(x' → logprob: -5.292949199676514
    6. ' (' → logprob: -5.667949199676514
    7. ' v' → logprob: -5.917949199676514
    8. ' d' → logprob: -6.167949199676514
    9. '(' → logprob: -7.792949199676514
    10. '(v' → logprob: -8.167948722839355

Token 26: ' //' (ID: 602)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8359507918357849
    2. ' *' → logprob: -1.2109508514404297
    3. '-' → logprob: -2.5859508514404297
    4. '+' → logprob: -3.2109508514404297
    5. ' -' → logprob: -3.3359508514404297
    6. ' +' → logprob: -3.4609508514404297
    7. ' //' → logprob: -3.9609508514404297
    8. '*d' → logprob: -3.9609508514404297
    9. '//' → logprob: -4.46095085144043
    10. '**' → logprob: -4.46095085144043

Token 27: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08789913356304169
    2. 'v' → logprob: -2.8378992080688477
    3. ' d' → logprob: -3.9628992080688477
    4. '(d' → logprob: -5.962899208068848
    5. ' v' → logprob: -6.087899208068848
    6. '(' → logprob: -7.212899208068848
    7. ' (' → logprob: -7.587899208068848
    8. '(v' → logprob: -7.837899208068848
    9. ' ' → logprob: -9.962899208068848
    10. '   ' → logprob: -11.462899208068848

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07217472791671753
    2. '*' → logprob: -3.1971747875213623
    3. ' *' → logprob: -3.9471747875213623
    4. ')*' → logprob: -4.947174549102783
    5. ' )' → logprob: -6.822174549102783
    6. '%' → logprob: -7.197174549102783
    7. ' %' → logprob: -8.322175025939941
    8. '+' → logprob: -9.822175025939941
    9. '**' → logprob: -9.947175025939941
    10. '*)' → logprob: -10.197175025939941

Token 29: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2537115216255188
    2. '*' → logprob: -1.503711462020874
    3. '**' → logprob: -7.628711700439453
    4. ' **' → logprob: -8.128711700439453
    5. ' if' → logprob: -8.628711700439453
    6. ' ' → logprob: -8.753711700439453
    7. '*v' → logprob: -8.878711700439453
    8. ')' → logprob: -9.003711700439453
    9. ',' → logprob: -9.378711700439453
    10. '+' → logprob: -9.878711700439453

Token 30: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004859665408730507
    2. ' v' → logprob: -5.379859447479248
    3. '(v' → logprob: -9.004859924316406
    4. ' (' → logprob: -10.379859924316406
    5. 'd' → logprob: -10.504859924316406
    6. 'mul' → logprob: -11.504859924316406
    7. '(' → logprob: -11.754859924316406
    8. ' ' → logprob: -12.004859924316406
    9. '*v' → logprob: -12.004859924316406
    10. 'x' → logprob: -12.254859924316406

Token 31: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.26752451062202454
    2. '(' → logprob: -1.6425244808197021
    3. ')' → logprob: -3.767524480819702
    4. ',' → logprob: -5.892524719238281
    5. ' ' → logprob: -6.142524719238281
    6. '<|end|>' → logprob: -6.142524719238281
    7. '(
' → logprob: -6.392524719238281
    8. '*(' → logprob: -6.642524719238281
    9. ' *' → logprob: -6.892524719238281
    10. '**' → logprob: -6.892524719238281

Token 32: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24546118080615997
    2. '(' → logprob: -2.2454612255096436
    3. '[' → logprob: -3.8704612255096436
    4. 'X' → logprob: -3.9954612255096436
    5. ')' → logprob: -3.9954612255096436
    6. ' (' → logprob: -4.3704609870910645
    7. 'x' → logprob: -4.3704609870910645
    8. '<|end|>' → logprob: -4.8704609870910645
    9. ' )' → logprob: -5.9954609870910645
    10. 'd' → logprob: -6.1204609870910645

Token 33: ' %' (ID: 1851)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6500341296195984
    2. ',' → logprob: -1.1500341892242432
    3. '<|end|>' → logprob: -3.025034189224243
    4. ')' → logprob: -3.525034189224243
    5. ' ' → logprob: -3.775034189224243
    6. '.' → logprob: -3.900034189224243
    7. '*' → logprob: -4.650033950805664
    8. '+' → logprob: -5.650033950805664
    9. '
' → logprob: -5.775033950805664
    10. '<|end|>' → logprob: -5.900033950805664

Token 34: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003601617179811001
    2. ' d' → logprob: -5.628601551055908
    3. '<|end|>' → logprob: -14.378602027893066
    4. ' ' → logprob: -14.878602027893066
    5. '	d' → logprob: -15.503602027893066
    6. '*d' → logprob: -16.12860107421875
    7. '<|end|>' → logprob: -16.87860107421875
    8. '(d' → logprob: -17.00360107421875
    9. 'div' → logprob: -17.00360107421875
    10. '>d' → logprob: -17.12860107421875

Token 35: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3849157691001892
    2. ',' → logprob: -1.384915828704834
    3. '<|end|>' → logprob: -2.884915828704834
    4. '[' → logprob: -5.259915828704834
    5. ':' → logprob: -5.634915828704834
    6. '(' → logprob: -6.884915828704834
    7. '
' → logprob: -7.759915828704834
    8. '),' → logprob: -7.884915828704834
    9. '```' → logprob: -7.884915828704834
    10. ' ' → logprob: -7.884915828704834

Token 36: 'seq' (ID: 27794)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34911251068115234
    2. ')' → logprob: -2.3491125106811523
    3. '(' → logprob: -2.7241125106811523
    4. '[' → logprob: -2.9741125106811523
    5. '<|end|>' → logprob: -3.0991125106811523
    6. '
' → logprob: -4.974112510681152
    7. 'newline' → logprob: -5.224112510681152
    8. ',
' → logprob: -5.349112510681152
    9. ':' → logprob: -5.474112510681152
    10. '_' → logprob: -5.724112510681152

Token 37: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.07914126664400101
    2. '=' → logprob: -3.45414137840271
    3. '_' → logprob: -4.454141139984131
    4. ' =' → logprob: -4.579141139984131
    5. 'ence' → logprob: -4.704141139984131
    6. ',' → logprob: -5.079141139984131
    7. '[' → logprob: -6.579141139984131
    8. 'e' → logprob: -6.704141139984131
    9. 'ue' → logprob: -6.829141139984131
    10. ' ' → logprob: -7.579141139984131

Token 38: ' [(' (ID: 43900)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.476439893245697
    2. ' []' → logprob: -1.1014399528503418
    3. '[' → logprob: -3.476439952850342
    4. ' [' → logprob: -4.351439952850342
    5. '(' → logprob: -7.476439952850342
    6. 'range' → logprob: -7.476439952850342
    7. ' ' → logprob: -7.976439952850342
    8. 'list' → logprob: -8.476439476013184
    9. ' (' → logprob: -8.851439476013184
    10. 'lambda' → logprob: -8.976439476013184

Token 39: '500' (ID: 3234)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0221353769302368
    2. 'i' → logprob: -1.0221353769302368
    3. '1' → logprob: -1.8971353769302368
    4. 'd' → logprob: -3.5221352577209473
    5. 'x' → logprob: -4.022135257720947
    6. '100' → logprob: -4.397135257720947
    7. 'k' → logprob: -4.647135257720947
    8. '10' → logprob: -4.772135257720947
    9. '(' → logprob: -4.897135257720947
    10. '3' → logprob: -5.022135257720947

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018141677137464285
    2. '0' → logprob: -6.751814365386963
    3. ' ,' → logprob: -7.876814365386963
    4. '00' → logprob: -8.751813888549805
    5. '000' → logprob: -10.251813888549805
    6. ',),' → logprob: -11.251813888549805
    7. '*' → logprob: -11.751813888549805
    8. ',)' → logprob: -11.751813888549805
    9. '),' → logprob: -12.001813888549805
    10. '100' → logprob: -12.501813888549805

Token 41: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11934589594602585
    2. '100' → logprob: -2.3693459033966064
    3. '5' → logprob: -4.619345664978027
    4. '500' → logprob: -5.869345664978027
    5. '1' → logprob: -5.994345664978027
    6. ')' → logprob: -7.244345664978027
    7. '3' → logprob: -7.244345664978027
    8. '10' → logprob: -7.369345664978027
    9. '50' → logprob: -8.181845664978027
    10. '2' → logprob: -8.306845664978027

Token 42: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2688310444355011
    2. '1' → logprob: -1.6438310146331787
    3. '2' → logprob: -3.6438310146331787
    4. '5' → logprob: -5.393831253051758
    5. '0' → logprob: -5.893831253051758
    6. '10' → logprob: -6.018831253051758
    7. ' ' → logprob: -6.518831253051758
    8. '3' → logprob: -6.893831253051758
    9. '999' → logprob: -7.018831253051758
    10. '500' → logprob: -7.268831253051758

Token 43: '0' (ID: 15)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2867056727409363
    2. '0' → logprob: -1.411705732345581
    3. ')' → logprob: -6.161705493927002
    4. '),
' → logprob: -6.411705493927002
    5. '),

' → logprob: -7.411705493927002
    6. '),(' → logprob: -7.536705493927002
    7. '00' → logprob: -8.16170597076416
    8. ')],' → logprob: -8.66170597076416
    9. ',' → logprob: -9.78670597076416
    10. '),
' → logprob: -10.78670597076416

Token 44: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.16289512813091278
    2. ')' → logprob: -1.9128950834274292
    3. '),
' → logprob: -6.787895202636719
    4. ',' → logprob: -7.412895202636719
    5. '),

' → logprob: -7.662895202636719
    6. ')],' → logprob: -8.787895202636719
    7. ')]' → logprob: -9.037895202636719
    8. '),(' → logprob: -9.662895202636719
    9. '0' → logprob: -10.412895202636719
    10. '+' → logprob: -10.912895202636719

Token 45: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5235565304756165
    2. ' (' → logprob: -0.8985565304756165
    3. '   ' → logprob: -8.27355670928955
    4. '  ' → logprob: -9.64855670928955
    5. ' ' → logprob: -9.89855670928955
    6. '500' → logprob: -10.64855670928955
    7. '...' → logprob: -11.52355670928955
    8. '100' → logprob: -11.89855670928955
    9. '    ' → logprob: -12.64855670928955
    10. ',' → logprob: -12.64855670928955

Token 46: '5' (ID: 20)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.04551820456981659
    2. '200' → logprob: -4.045518398284912
    3. ' ' → logprob: -4.795518398284912
    4. '50' → logprob: -5.045518398284912
    5. '400' → logprob: -5.670518398284912
    6. '300' → logprob: -5.920518398284912
    7. '500' → logprob: -5.920518398284912
    8. '10' → logprob: -7.045518398284912
    9. '250' → logprob: -7.170518398284912
    10. '5' → logprob: -7.545518398284912

Token 47: ',' (ID: 11)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.09131886810064316
    2. '0' → logprob: -2.4663188457489014
    3. ',' → logprob: -6.5913190841674805
    4. '000' → logprob: -7.2163190841674805
    5. ' ' → logprob: -8.34131908416748
    6. ' ,' → logprob: -11.77881908416748
    7. '},' → logprob: -13.09131908416748
    8. '01' → logprob: -13.15381908416748
    9. '1' → logprob: -13.21631908416748
    10. '50' → logprob: -13.27881908416748

Token 48: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3940746486186981
    2. ' ' → logprob: -1.2690746784210205
    3. '20' → logprob: -4.519074440002441
    4. '200' → logprob: -4.644074440002441
    5. '10' → logprob: -5.519074440002441
    6. '0' → logprob: -5.519074440002441
    7. '500' → logprob: -5.519074440002441
    8. '50' → logprob: -5.644074440002441
    9. '1' → logprob: -6.144074440002441
    10. '5' → logprob: -6.519074440002441

Token 49: '5' (ID: 20)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.09159485995769501
    2. '200' → logprob: -3.341594934463501
    3. '20' → logprob: -4.091594696044922
    4. ' ' → logprob: -4.966594696044922
    5. '10' → logprob: -4.966594696044922
    6. '50' → logprob: -5.341594696044922
    7. '500' → logprob: -5.591594696044922
    8. '1' → logprob: -6.091594696044922
    9. '0' → logprob: -6.216594696044922
    10. '400' → logprob: -6.341594696044922

Token 50: ')]
' (ID: 11587)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '00' → logprob: -0.18067879974842072
    2. '0' → logprob: -1.8056788444519043
    3. '),' → logprob: -7.180678844451904
    4. ')' → logprob: -9.055678367614746
    5. ' ' → logprob: -10.805678367614746
    6. '000' → logprob: -10.930678367614746
    7. ',' → logprob: -12.430678367614746
    8. '*' → logprob: -12.930678367614746
    9. '```' → logprob: -13.055678367614746
    10. '))' → logprob: -13.618178367614746

Token 51: 'res' (ID: 430)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023721156641840935
    2. '[' → logprob: -5.023721218109131
    3. ' ,' → logprob: -5.148721218109131
    4. ' ' → logprob: -5.523721218109131
    5. '<|end|>' → logprob: -6.273721218109131
    6. ')' → logprob: -6.398721218109131
    7. '=' → logprob: -7.148721218109131
    8. '(' → logprob: -7.648721218109131
    9. ' =' → logprob: -7.773721218109131
    10. ',
' → logprob: -8.148720741271973

Token 52: 'idual' (ID: 85004)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6405700445175171
    2. '=' → logprob: -0.7655700445175171
    3. ',' → logprob: -5.015570163726807
    4. 's' → logprob: -7.140570163726807
    5. 'ult' → logprob: -8.890569686889648
    6. ' ,' → logprob: -9.640569686889648
    7. 'ults' → logprob: -9.640569686889648
    8. ')' → logprob: -9.765569686889648
    9. '[' → logprob: -10.515569686889648
    10. ' +=' → logprob: -10.640569686889648

Token 53: 's' (ID: 82)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23105555772781372
    2. 's' → logprob: -2.106055498123169
    3. ',' → logprob: -2.856055498123169
    4. '=' → logprob: -3.981055498123169
    5. '_' → logprob: -4.856055736541748
    6. ' ,' → logprob: -8.48105525970459
    7. ' ' → logprob: -8.73105525970459
    8. ')' → logprob: -10.10605525970459
    9. 'es' → logprob: -10.35605525970459
    10. '  ' → logprob: -10.35605525970459

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01090657152235508
    2. '=' → logprob: -4.88590669631958
    3. ',' → logprob: -5.76090669631958
    4. ' ,' → logprob: -9.635906219482422
    5. 's' → logprob: -10.385906219482422
    6. '_' → logprob: -11.135906219482422
    7. '<|end|>' → logprob: -11.885906219482422
    8. '  ' → logprob: -12.010906219482422
    9. ' ' → logprob: -12.010906219482422
    10. ')' → logprob: -12.385906219482422

Token 55: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6979097723960876
    2. '[' → logprob: -1.0729098320007324
    3. '[]' → logprob: -2.3229098320007324
    4. ' []' → logprob: -2.9479098320007324
    5. '0' → logprob: -5.447909832000732
    6. 'X' → logprob: -6.697909832000732
    7. '[X' → logprob: -6.697909832000732
    8. ' X' → logprob: -6.947909832000732
    9. ' ' → logprob: -7.322909832000732
    10. '[(' → logprob: -7.822909832000732

Token 56: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.05352373048663139
    2. '0' → logprob: -3.1785237789154053
    3. ' X' → logprob: -4.928523540496826
    4. 'x' → logprob: -7.053523540496826
    5. ']' → logprob: -7.178523540496826
    6. '100' → logprob: -7.553523540496826
    7. '1' → logprob: -8.053524017333984
    8. '(' → logprob: -8.928524017333984
    9. ')' → logprob: -9.178524017333984
    10. ' ' → logprob: -9.428524017333984

Token 57: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00022690063633490354
    2. ')]' → logprob: -9.250226974487305
    3. ')' → logprob: -10.500226974487305
    4. ',' → logprob: -10.625226974487305
    5. ' ]' → logprob: -10.750226974487305
    6. ']
' → logprob: -11.125226974487305
    7. ']

' → logprob: -11.750226974487305
    8. '<|end|>' → logprob: -11.875226974487305
    9. '<|end|>' → logprob: -12.250226974487305
    10. '%' → logprob: -12.500226974487305

Token 58: 'out' (ID: 468)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3333507776260376
    2. ' for' → logprob: -1.7083507776260376
    3. ',' → logprob: -2.708350658416748
    4. '[' → logprob: -5.083350658416748
    5. ')' → logprob: -5.458350658416748
    6. 'res' → logprob: -5.833350658416748
    7. ',
' → logprob: -5.958350658416748
    8. '+' → logprob: -5.958350658416748
    9. ' ' → logprob: -6.208350658416748
    10. 'result' → logprob: -6.333350658416748

Token 59: 'comes' (ID: 9304)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.5486099720001221
    2. 'puts' → logprob: -1.423609972000122
    3. '=' → logprob: -1.923609972000122
    4. ' =' → logprob: -3.673609972000122
    5. '[' → logprob: -5.798609733581543
    6. 'p' → logprob: -6.673609733581543
    7. '=[]' → logprob: -6.923609733581543
    8. '\xed\x92' → logprob: -7.298609733581543
    9. 'puta' → logprob: -7.548609733581543
    10. '_put' → logprob: -7.673609733581543

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005139473360031843
    2. '=' → logprob: -5.380139350891113
    3. ',' → logprob: -7.880139350891113
    4. '<|end|>' → logprob: -9.380139350891113
    5. '=[]' → logprob: -11.130139350891113
    6. '[' → logprob: -12.130139350891113
    7. ' ' → logprob: -12.130139350891113
    8. ')' → logprob: -12.380139350891113
    9. ' ,' → logprob: -12.505139350891113
    10. '_' → logprob: -12.880139350891113

Token 61: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09969925135374069
    2. ' []' → logprob: -2.4746992588043213
    3. '[' → logprob: -4.599699020385742
    4. ' [' → logprob: -7.474699020385742
    5. '[],' → logprob: -10.724699020385742
    6. '[]
' → logprob: -10.974699020385742
    7. '[]>' → logprob: -11.349699020385742
    8. ' ' → logprob: -11.849699020385742
    9. '0' → logprob: -11.974699020385742
    10. '[]}' → logprob: -11.974699020385742

Token 62: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013373857364058495
    2. ' for' → logprob: -6.62633752822876
    3. '```' → logprob: -12.001337051391602
    4. '
' → logprob: -13.501337051391602
    5. '[' → logprob: -14.001337051391602
    6. ',' → logprob: -14.501337051391602
    7. '+' → logprob: -14.626337051391602
    8. ':' → logprob: -15.001337051391602
    9. '\n' → logprob: -15.376337051391602
    10. '``' → logprob: -15.876337051391602

Token 63: ' divisor' (ID: 100482)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.18734653294086456
    2. ' x' → logprob: -2.8123464584350586
    3. ' i' → logprob: -3.3123464584350586
    4. 'd' → logprob: -3.4373464584350586
    5. ' ' → logprob: -4.062346458435059
    6. ' (' → logprob: -5.062346458435059
    7. ' v' → logprob: -5.437346458435059
    8. 'x' → logprob: -5.562346458435059
    9. ' _' → logprob: -5.687346458435059
    10. 'i' → logprob: -6.437346458435059

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017675277777016163
    2. ' ,' → logprob: -7.001767635345459
    3. ' in' → logprob: -7.251767635345459
    4. 's' → logprob: -10.1267671585083
    5. ',value' → logprob: -10.1267671585083
    6. 'in' → logprob: -11.7517671585083
    7. '<|end|>' → logprob: -11.7517671585083
    8. ',data' → logprob: -12.3767671585083
    9. ',v' → logprob: -12.6267671585083
    10. '=' → logprob: -12.7517671585083

Token 65: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.011821064166724682
    2. ' value' → logprob: -5.011821269989014
    3. 'val' → logprob: -6.136821269989014
    4. 'mult' → logprob: -6.136821269989014
    5. 'unit' → logprob: -8.261820793151855
    6. 'values' → logprob: -9.011820793151855
    7. ' multiplier' → logprob: -9.261820793151855
    8. 'factor' → logprob: -10.011820793151855
    9. 'valu' → logprob: -10.136820793151855
    10. 'v' → logprob: -10.386820793151855

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011349361389875412
    2. 'in' → logprob: -4.511349201202393
    3. ',' → logprob: -8.51134967803955
    4. '<|end|>' → logprob: -10.01134967803955
    5. ' ' → logprob: -10.76134967803955
    6. '	in' → logprob: -11.01134967803955
    7. '<|end|>' → logprob: -12.26134967803955
    8. 's' → logprob: -12.76134967803955
    9. '  ' → logprob: -13.38634967803955
    10. '_in' → logprob: -13.51134967803955

Token 67: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.22866863012313843
    2. ' seq' → logprob: -1.6036686897277832
    3. '[(' → logprob: -7.228668689727783
    4. ' ' → logprob: -7.353668689727783
    5. ' [(' → logprob: -7.478668689727783
    6. 'res' → logprob: -8.353668212890625
    7. '[' → logprob: -8.353668212890625
    8. 'calc' → logprob: -8.853668212890625
    9. ' [' → logprob: -9.228668212890625
    10. 'se' → logprob: -9.228668212890625

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011009939044015482
    2. ':
' → logprob: -9.625109672546387
    3. ',' → logprob: -11.125109672546387
    4. ' :' → logprob: -11.250109672546387
    5. ':**' → logprob: -12.250109672546387
    6. '):' → logprob: -12.375109672546387
    7. ' in' → logprob: -13.000109672546387
    8. '<|end|>' → logprob: -13.875109672546387
    9. '<|end|>' → logprob: -13.875109672546387
    10. '):
' → logprob: -14.625109672546387

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7353719472885132
    2. ' for' → logprob: -1.7353719472885132
    3. ',' → logprob: -2.6103720664978027
    4. ' ' → logprob: -3.2353720664978027
    5. ' token' → logprob: -3.6103720664978027
    6. '    ' → logprob: -3.7353720664978027
    7. ' 
' → logprob: -3.7353720664978027
    8. '```' → logprob: -3.7353720664978027
    9. '<|end|>' → logprob: -4.360372066497803
    10. ' tokens' → logprob: -4.610372066497803

Token 70: ' n' (ID: 297)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9871888756752014
    2. ' result' → logprob: -1.1121888160705566
    3. ' (' → logprob: -2.6121888160705566
    4. ' new' → logprob: -2.8621888160705566
    5. 'result' → logprob: -3.7371888160705566
    6. ' res' → logprob: -4.112188816070557
    7. ' for' → logprob: -4.362188816070557
    8. 'x' → logprob: -4.362188816070557
    9. ' val' → logprob: -4.487188816070557
    10. 'out' → logprob: -4.612188816070557

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7228730916976929
    2. 'um' → logprob: -0.7228730916976929
    3. 'umber' → logprob: -4.472873210906982
    4. ' =' → logprob: -4.847873210906982
    5. '=' → logprob: -5.097873210906982
    6. 'ext' → logprob: -6.847873210906982
    7. '_' → logprob: -7.222873210906982
    8. 'ums' → logprob: -7.847873210906982
    9. '_,' → logprob: -8.347872734069824
    10. 'ew' → logprob: -8.472872734069824

Token 72: ' r' (ID: 428)
  Prédit: ' residual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' residual' → logprob: -0.22853519022464752
    2. 'res' → logprob: -1.8535351753234863
    3. ' X' → logprob: -3.6035351753234863
    4. 'X' → logprob: -4.353535175323486
    5. ' res' → logprob: -6.353535175323486
    6. ' r' → logprob: -6.728535175323486
    7. 'r' → logprob: -6.853535175323486
    8. ' x' → logprob: -7.103535175323486
    9. 'x' → logprob: -7.103535175323486
    10. 'rest' → logprob: -8.228535652160645

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231987237930298
    2. '=' → logprob: -0.8981987237930298
    3. ',' → logprob: -9.523199081420898
    4. 's' → logprob: -14.773199081420898
    5. ')' → logprob: -14.898199081420898
    6. '[' → logprob: -15.523199081420898
    7. ' =
' → logprob: -15.898199081420898
    8. ' ' → logprob: -15.898199081420898
    9. '  ' → logprob: -16.0231990814209
    10. '=

' → logprob: -16.0231990814209

Token 74: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.6931741237640381
    2. 'calc' → logprob: -0.6931741237640381
    3. '(calc' → logprob: -11.318174362182617
    4. 'cal' → logprob: -12.068174362182617
    5. ' ' → logprob: -13.318174362182617
    6. '.calc' → logprob: -13.568174362182617
    7. 'res' → logprob: -13.693174362182617
    8. '   ' → logprob: -13.818174362182617
    9. '_calc' → logprob: -14.443174362182617
    10. '    ' → logprob: -14.568174362182617

Token 75: '(res' (ID: 8331)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.2874830663204193
    2. '(res' → logprob: -1.9124830961227417
    3. '(' → logprob: -2.287482976913452
    4. '(
' → logprob: -7.537483215332031
    5. 'res' → logprob: -10.287483215332031
    6. 'X' → logprob: -11.162483215332031
    7. ' (' → logprob: -11.412483215332031
    8. '(

' → logprob: -12.162483215332031
    9. '<|end|>' → logprob: -13.162483215332031
    10. '(out' → logprob: -13.287483215332031

Token 76: 'idual' (ID: 85004)
  Prédit: 'idual'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idual' → logprob: -7.839121826691553e-05
    2. 'id' → logprob: -9.500078201293945
    3. 'idue' → logprob: -12.875078201293945
    4. 'idal' → logprob: -14.875078201293945
    5. 'idu' → logprob: -15.625078201293945
    6. 'i' → logprob: -16.000078201293945
    7. ' id' → logprob: -16.625078201293945
    8. '   ' → logprob: -16.875078201293945
    9. 'idential' → logprob: -17.250078201293945
    10. '```' → logprob: -17.250078201293945

Token 77: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005458841915242374
    2. 'ials' → logprob: -8.125545501708984
    3. 'als' → logprob: -8.500545501708984
    4. 'ids' → logprob: -10.375545501708984
    5. 'idual' → logprob: -12.000545501708984
    6. 'ual' → logprob: -12.375545501708984
    7. 'al' → logprob: -13.500545501708984
    8. 'ial' → logprob: -14.000545501708984
    9. '[' → logprob: -14.375545501708984
    10. ' ' → logprob: -15.250545501708984

Token 78: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0004160145472269505
    2. '-' → logprob: -8.250415802001953
    3. '[' → logprob: -8.875415802001953
    4. '0' → logprob: -12.375415802001953
    5. ' [-' → logprob: -12.875415802001953
    6. '   ' → logprob: -13.375415802001953
    7. ' ' → logprob: -13.375415802001953
    8. '```' → logprob: -13.625415802001953
    9. '1' → logprob: -14.250415802001953
    10. '	' → logprob: -14.750415802001953

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.875000953674316
    3. '```' → logprob: -16.875
    4. '１' → logprob: -17.0625
    5. ']' → logprob: -17.0625
    6. '2' → logprob: -17.125
    7. ')' → logprob: -17.3125
    8. '۱' → logprob: -17.8125
    9. ')]' → logprob: -18.1875
    10. '])' → logprob: -18.4375

Token 80: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034869377850554883
    2. ' ,' → logprob: -8.000349044799805
    3. '   ' → logprob: -12.875349044799805
    4. ' ' → logprob: -12.875349044799805
    5. '‌,' → logprob: -13.625349044799805
    6. ')' → logprob: -13.750349044799805
    7. '    ' → logprob: -14.250349044799805
    8. 'div' → logprob: -14.250349044799805
    9. '),' → logprob: -14.375349044799805
    10. ',

' → logprob: -14.875349044799805

Token 81: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.18106709420681
    2. ' divisor' → logprob: -1.8060671091079712
    3. ' div' → logprob: -6.806066989898682
    4. '	div' → logprob: -9.55606746673584
    5. ' divis' → logprob: -10.05606746673584
    6. '(div' → logprob: -10.18106746673584
    7. ' divider' → logprob: -10.55606746673584
    8. 'divider' → logprob: -11.30606746673584
    9. ' ' → logprob: -11.80606746673584
    10. '_div' → logprob: -12.30606746673584

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004581942630466074
    2. ' ,' → logprob: -8.375457763671875
    3. ',value' → logprob: -9.125457763671875
    4. ')' → logprob: -9.250457763671875
    5. ' ' → logprob: -12.000457763671875
    6. '   ' → logprob: -12.625457763671875
    7. '‌,' → logprob: -13.625457763671875
    8. '<|end|>' → logprob: -13.750457763671875
    9. ',val' → logprob: -13.750457763671875
    10. ',v' → logprob: -13.875457763671875

Token 83: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.16023468971252441
    2. ' value' → logprob: -1.9102346897125244
    3. ')value' → logprob: -12.035234451293945
    4. ')' → logprob: -13.910234451293945
    5. '"value' → logprob: -14.285234451293945
    6. ' ' → logprob: -14.410234451293945
    7. '	value' → logprob: -14.660234451293945
    8. 'alue' → logprob: -14.785234451293945
    9. ''value' → logprob: -14.785234451293945
    10. '$value' → logprob: -15.035234451293945

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6405310816480778e-05
    2. ')
' → logprob: -11.125016212463379
    3. ')
' → logprob: -14.500016212463379
    4. ' )' → logprob: -14.750016212463379
    5. '),' → logprob: -15.625016212463379
    6. ')`' → logprob: -16.000017166137695
    7. '))' → logprob: -16.250017166137695
    8. ')

' → logprob: -16.250017166137695
    9. ');' → logprob: -16.375017166137695
    10. '   ' → logprob: -16.375017166137695

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.498980849981308
    2. ')' → logprob: -0.9989808797836304
    3. '<|end|>' → logprob: -4.62398099899292
    4. 'out' → logprob: -4.99898099899292
    5. ')
' → logprob: -5.49898099899292
    6. '
' → logprob: -6.87398099899292
    7. '),' → logprob: -7.24898099899292
    8. ',' → logprob: -7.24898099899292
    9. '#' → logprob: -8.498980522155762
    10. '    
' → logprob: -8.873980522155762

Token 86: ' outcomes' (ID: 24693)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40586981177330017
    2. ' outcomes' → logprob: -1.5308698415756226
    3. 'out' → logprob: -2.655869722366333
    4. ' out' → logprob: -3.530869722366333
    5. '
' → logprob: -4.905869960784912
    6. '    
' → logprob: -5.405869960784912
    7. ' 
' → logprob: -6.780869960784912
    8. '	out' → logprob: -7.030869960784912
    9. '<|end|>' → logprob: -7.405869960784912
    10. 'res' → logprob: -7.905869960784912

Token 87: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008423840627074242
    2. '.' → logprob: -7.125842571258545
    3. '.extend' → logprob: -10.375842094421387
    4. '.app' → logprob: -13.125842094421387
    5. '.ap' → logprob: -13.125842094421387
    6. 'append' → logprob: -13.500842094421387
    7. ' .' → logprob: -14.500842094421387
    8. '.Append' → logprob: -15.625842094421387
    9. '.add' → logprob: -15.750842094421387
    10. ' +=' → logprob: -16.000843048095703

Token 88: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001723965280689299
    2. '(' → logprob: -6.376723766326904
    3. ' (' → logprob: -10.876724243164062
    4. '(
' → logprob: -14.001724243164062
    5. '((' → logprob: -14.251724243164062
    6. 'n' → logprob: -14.376724243164062
    7. '(int' → logprob: -15.126724243164062
    8. '()' → logprob: -16.376724243164062
    9. '(nx' → logprob: -17.001724243164062
    10. '('' → logprob: -17.126724243164062

Token 89: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3136237561702728
    2. ')' → logprob: -1.3136237859725952
    3. ')
' → logprob: -8.313623428344727
    4. ' )
' → logprob: -9.188623428344727
    5. ' )' → logprob: -11.938623428344727
    6. ')

' → logprob: -12.188623428344727
    7. '*' → logprob: -14.438623428344727
    8. '),' → logprob: -14.688623428344727
    9. '))
' → logprob: -14.938623428344727
    10. ')n' → logprob: -15.063623428344727

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10816159099340439
    2. 'res' → logprob: -2.358161687850952
    3. '    
' → logprob: -5.608161449432373
    4. ' residual' → logprob: -6.608161449432373
    5. '
' → logprob: -7.108161449432373
    6. '	res' → logprob: -7.858161449432373
    7. 'r' → logprob: -8.733161926269531
    8. '<|end|>' → logprob: -8.858161926269531
    9. ',' → logprob: -9.233161926269531
    10. '```' → logprob: -9.233161926269531

Token 91: ' residual' (ID: 54782)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.001671730075031519
    2. '   ' → logprob: -6.50167179107666
    3. ' residual' → logprob: -8.75167179107666
    4. '    
' → logprob: -12.87667179107666
    5. ' ' → logprob: -13.37667179107666
    6. '  ' → logprob: -13.62667179107666
    7. '```' → logprob: -14.12667179107666
    8. '_res' → logprob: -14.25167179107666
    9. 'Residual' → logprob: -14.25167179107666
    10. '	res' → logprob: -14.37667179107666

Token 92: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9361264946837764e-07
    2. ' s' → logprob: -16.625
    3. '=' → logprob: -18.5
    4. ' =' → logprob: -19.625
    5. '.append' → logprob: -20.25
    6. '<|end|>' → logprob: -20.375
    7. '>s' → logprob: -21.25
    8. 'с' → logprob: -21.25
    9. 'values' → logprob: -21.375
    10. '<s' → logprob: -21.375

Token 93: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.612634362885728e-05
    2. '.' → logprob: -9.500076293945312
    3. '.app' → logprob: -14.250076293945312
    4. 'append' → logprob: -15.625076293945312
    5. '[-' → logprob: -16.125076293945312
    6. '.extend' → logprob: -16.625076293945312
    7. '.ap' → logprob: -17.125076293945312
    8. ' .' → logprob: -17.125076293945312
    9. '.pop' → logprob: -17.250076293945312
    10. '.Append' → logprob: -18.000076293945312

Token 94: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00012070851516909897
    2. '(' → logprob: -9.250121116638184
    3. 'r' → logprob: -10.625121116638184
    4. '(res' → logprob: -16.875120162963867
    5. ' (' → logprob: -17.250120162963867
    6. ' r' → logprob: -17.500120162963867
    7. '(
' → logprob: -18.375120162963867
    8. '(re' → logprob: -18.500120162963867
    9. '	r' → logprob: -18.500120162963867
    10. '((' → logprob: -18.625120162963867

Token 95: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6776029699249193e-05
    2. ')
' → logprob: -10.62502670288086
    3. ' )' → logprob: -13.37502670288086
    4. ')

' → logprob: -14.12502670288086
    5. ')
' → logprob: -17.75002670288086
    6. '`)' → logprob: -17.87502670288086
    7. '）' → logprob: -17.87502670288086
    8. '))' → logprob: -18.00002670288086
    9. ')`' → logprob: -18.37502670288086
    10. ')#' → logprob: -18.50002670288086

Token 96: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31944453716278076
    2. '(out' → logprob: -1.3194445371627808
    3. '(*' → logprob: -5.56944465637207
    4. '(tuple' → logprob: -6.69444465637207
    5. '(sum' → logprob: -7.31944465637207
    6. '(len' → logprob: -9.19444465637207
    7. 'out' → logprob: -9.31944465637207
    8. '('' → logprob: -9.31944465637207
    9. '(
' → logprob: -10.31944465637207
    10. '("("' → logprob: -10.44444465637207

Token 98: 'duce' (ID: 21375)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0012385640293359756
    2. 'sum' → logprob: -6.7512383460998535
    3. 'sources' → logprob: -10.126238822937012
    4. 'su' → logprob: -10.876238822937012
    5. 'solutions' → logprob: -12.751238822937012
    6. 'sus' → logprob: -13.501238822937012
    7. 'sol' → logprob: -13.626238822937012
    8. 'sur' → logprob: -13.751238822937012
    9. 'sou' → logprob: -14.626238822937012
    10. 'sid' → logprob: -15.001238822937012

Token 99: '(lambda' (ID: 43341)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.08900654315948486
    2. '(' → logprob: -2.4640064239501953
    3. '(operator' → logprob: -10.089006423950195
    4. ')' → logprob: -11.714006423950195
    5. '(
' → logprob: -12.214006423950195
    6. '(mult' → logprob: -12.839006423950195
    7. ' (' → logprob: -13.089006423950195
    8. '<m' → logprob: -13.839006423950195
    9. ')(' → logprob: -13.964006423950195
    10. ')m' → logprob: -14.089006423950195

Token 100: ' a' (ID: 261)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.038246314972639084
    2. 'mul' → logprob: -3.2882463932037354
    3. ' ' → logprob: -9.413246154785156
    4. ' mu' → logprob: -9.413246154785156
    5. '_mul' → logprob: -10.538246154785156
    6. '.mul' → logprob: -12.788246154785156
    7. ' muli' → logprob: -12.913246154785156
    8. '	m' → logprob: -13.038246154785156
    9. 'mu' → logprob: -13.038246154785156
    10. ' mull' → logprob: -13.538246154785156

Token 101: ',' (ID: 11)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.987203061580658
    2. ',' → logprob: -1.1122031211853027
    3. 'mul' → logprob: -1.3622031211853027
    4. ',m' → logprob: -3.8622031211853027
    5. '_mul' → logprob: -4.612203121185303
    6. ' ,' → logprob: -5.237203121185303
    7. ' ' → logprob: -5.612203121185303
    8. ' a' → logprob: -7.237203121185303
    9. 'a' → logprob: -7.987203121185303
    10. ':' → logprob: -8.237202644348145

Token 102: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6328903436660767
    2. ' b' → logprob: -0.7578903436660767
    3. 'mul' → logprob: -8.882890701293945
    4. ' ' → logprob: -9.257890701293945
    5. ' mul' → logprob: -10.132890701293945
    6. ' x' → logprob: -12.507890701293945
    7. '  ' → logprob: -12.882890701293945
    8. '	b' → logprob: -13.257890701293945
    9. 'x' → logprob: -13.257890701293945
    10. '   ' → logprob: -13.382890701293945

Token 103: ':' (ID: 25)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -1.0007376670837402
    2. ',' → logprob: -1.1257376670837402
    3. 'mul' → logprob: -1.8757376670837402
    4. ':' → logprob: -2.1257376670837402
    5. ' ,' → logprob: -4.25073766708374
    6. ',m' → logprob: -4.75073766708374
    7. ' :' → logprob: -5.00073766708374
    8. '_mul' → logprob: -5.75073766708374
    9. ' ' → logprob: -7.37573766708374
    10. 'a' → logprob: -7.75073766708374

Token 104: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10021518170833588
    2. ' a' → logprob: -2.350215196609497
    3. 'mul' → logprob: -12.350214958190918
    4. '	a' → logprob: -12.850214958190918
    5. ' ' → logprob: -14.350214958190918
    6. ' mul' → logprob: -14.350214958190918
    7. ' ' → logprob: -15.600214958190918
    8. '   ' → logprob: -16.225215911865234
    9. '  ' → logprob: -16.350215911865234
    10. '_a' → logprob: -17.100215911865234

Token 105: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.49297043681144714
    2. ' *' → logprob: -0.9929704666137695
    3. ' +' → logprob: -4.6179704666137695
    4. '+' → logprob: -4.7429704666137695
    5. ' ' → logprob: -9.99297046661377
    6. ' mul' → logprob: -10.36797046661377
    7. 'mul' → logprob: -10.49297046661377
    8. ' ' → logprob: -11.61797046661377
    9. '*m' → logprob: -12.24297046661377
    10. '_mul' → logprob: -12.99297046661377

Token 106: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22541813552379608
    2. ' b' → logprob: -1.6004180908203125
    3. ' ' → logprob: -12.475418090820312
    4. '  ' → logprob: -14.850418090820312
    5. '   ' → logprob: -14.850418090820312
    6. '	b' → logprob: -15.350418090820312
    7. '*b' → logprob: -15.600418090820312
    8. '    ' → logprob: -15.725418090820312
    9. ')b' → logprob: -16.725418090820312
    10. ' ' → logprob: -16.975418090820312

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020766248926520348
    2. ',out' → logprob: -6.877076625823975
    3. ')' → logprob: -7.502076625823975
    4. ' ,' → logprob: -8.127076148986816
    5. 'out' → logprob: -9.127076148986816
    6. '+' → logprob: -10.752076148986816
    7. '*' → logprob: -10.752076148986816
    8. '*out' → logprob: -11.002076148986816
    9. '   ' → logprob: -12.252076148986816
    10. ' +' → logprob: -12.502076148986816

Token 108: ' outcomes' (ID: 24693)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.03368350490927696
    2. ' outcomes' → logprob: -3.4086835384368896
    3. ' out' → logprob: -10.283683776855469
    4. '[out' → logprob: -13.158683776855469
    5. '(out' → logprob: -15.533683776855469
    6. '   ' → logprob: -15.658683776855469
    7. '$out' → logprob: -15.658683776855469
    8. '_out' → logprob: -15.908683776855469
    9. ')' → logprob: -15.908683776855469
    10. '[' → logprob: -16.03368377685547

Token 109: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20148895680904388
    2. '))' → logprob: -1.701488971710205
    3. ')))' → logprob: -10.076488494873047
    4. ' )' → logprob: -10.576488494873047
    5. ' ))' → logprob: -12.326488494873047
    6. ')}' → logprob: -14.201488494873047
    7. '})' → logprob: -14.451488494873047
    8. '+' → logprob: -14.951488494873047
    9. '),' → logprob: -14.951488494873047
    10. ')`' → logprob: -15.201488494873047


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 107
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 33.64%
Précision adaptée (1ère position): 33.64%
Précision (top 10): 70.09%
================================================================================
