================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:24:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
N_K = input().split()
N = int(N_K[0])
K = int(N_K[1])
print(math.floor(math.log(N, K)) + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007273536641150713
    2. '\n' → logprob: -6.2572736740112305
    3. 'import' → logprob: -6.5072736740112305
    4. '\' → logprob: -7.0072736740112305
    5. '```' → logprob: -7.0072736740112305
    6. '<|end|>' → logprob: -7.2572736740112305
    7. '.pi' → logprob: -8.00727367401123
    8. '.e' → logprob: -9.25727367401123
    9. 'newline' → logprob: -9.25727367401123
    10. '<|end|>' → logprob: -9.63227367401123

Token 4: '_K' (ID: 20555)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9161737561225891
    2. '=' → logprob: -1.7911736965179443
    3. '_' → logprob: -1.9161736965179443
    4. ' ' → logprob: -2.5411736965179443
    5. ',' → logprob: -2.9161736965179443
    6. ' =' → logprob: -3.0411736965179443
    7. ')' → logprob: -3.6661736965179443
    8. '[' → logprob: -4.416173934936523
    9. 'a' → logprob: -4.541173934936523
    10. '(' → logprob: -4.666173934936523

Token 5: ' =' (ID: 314)
  Prédit: 'EY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EY' → logprob: -0.6013530492782593
    2. 'E' → logprob: -0.8513530492782593
    3. ' =' → logprob: -4.476353168487549
    4. 'S' → logprob: -5.601353168487549
    5. '=' → logprob: -5.601353168487549
    6. '_E' → logprob: -5.851353168487549
    7. '_' → logprob: -6.101353168487549
    8. '```' → logprob: -7.601353168487549
    9. ')' → logprob: -9.85135269165039
    10. ',' → logprob: -9.97635269165039

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03125089034438133
    2. '10' → logprob: -3.7812509536743164
    3. ' int' → logprob: -5.781250953674316
    4. '100' → logprob: -6.156250953674316
    5. 'int' → logprob: -7.531250953674316
    6. '16' → logprob: -8.031250953674316
    7. '32' → logprob: -8.406250953674316
    8. '5' → logprob: -8.406250953674316
    9. ' math' → logprob: -8.406250953674316
    10. '20' → logprob: -8.531250953674316

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022229790687561035
    2. '('' → logprob: -4.2722296714782715
    3. ''' → logprob: -5.1472296714782715
    4. '"' → logprob: -6.8972296714782715
    5. '(
' → logprob: -7.2722296714782715
    6. '("("' → logprob: -8.14723014831543
    7. '[' → logprob: -10.64723014831543
    8. ')' → logprob: -10.64723014831543
    9. '(

' → logprob: -10.64723014831543
    10. 's' → logprob: -11.14723014831543

Token 8: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.007859412580728531
    2. 'split' → logprob: -5.007859230041504
    3. 'isdigit' → logprob: -7.132859230041504
    4. 'rstrip' → logprob: -8.132859230041504
    5. ' strip' → logprob: -10.382859230041504
    6. 'is' → logprob: -12.007859230041504
    7. 'replace' → logprob: -12.132859230041504
    8. 'lower' → logprob: -12.632859230041504
    9. 'startswith' → logprob: -14.132859230041504
    10. 'count' → logprob: -14.382859230041504

Token 9: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012941972352564335
    2. '()' → logprob: -5.137941837310791
    3. '('' → logprob: -5.137941837310791
    4. '("("' → logprob: -7.137941837310791
    5. '(
' → logprob: -9.26294231414795
    6. '(

' → logprob: -10.26294231414795
    7. '"' → logprob: -10.26294231414795
    8. '("' → logprob: -10.38794231414795
    9. ' (' → logprob: -10.51294231414795
    10. '`' → logprob: -11.01294231414795

Token 10: 'N' (ID: 45)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37498506903648376
    2. 'n' → logprob: -1.4999850988388062
    3. 'x' → logprob: -4.374985218048096
    4. 'N' → logprob: -4.749985218048096
    5. 'for' → logprob: -4.874985218048096
    6. 'result' → logprob: -4.874985218048096
    7. 'num' → logprob: -4.874985218048096
    8. 'a' → logprob: -4.999985218048096
    9. ' =' → logprob: -5.249985218048096
    10. '=' → logprob: -5.374985218048096

Token 11: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2856926918029785
    2. '_K' → logprob: -1.4106926918029785
    3. '[' → logprob: -5.5356926918029785
    4. '_k' → logprob: -8.28569221496582
    5. '_[' → logprob: -9.53569221496582
    6. '[_' → logprob: -9.66069221496582
    7. '\[' → logprob: -10.91069221496582
    8. 'K' → logprob: -11.16069221496582
    9. '_N' → logprob: -11.16069221496582
    10. ' _' → logprob: -11.28569221496582

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.313341349363327
    2. 'int' → logprob: -1.3133413791656494
    3. ' N' → logprob: -9.68834114074707
    4. '[int' → logprob: -11.81334114074707
    5. 'N' → logprob: -12.43834114074707
    6. ' ' → logprob: -13.31334114074707
    7. '(int' → logprob: -13.56334114074707
    8. ' float' → logprob: -13.93834114074707
    9. 'float' → logprob: -14.43834114074707
    10. 'math' → logprob: -14.56334114074707

Token 13: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006888123229146004
    2. '(N' → logprob: -5.006887912750244
    3. '('' → logprob: -8.881888389587402
    4. '(
' → logprob: -11.631888389587402
    5. '("("' → logprob: -12.131888389587402
    6. '()' → logprob: -12.381888389587402
    7. ''' → logprob: -12.756888389587402
    8. ')' → logprob: -13.506888389587402
    9. '(

' → logprob: -13.506888389587402
    10. ' (' → logprob: -13.506888389587402

Token 14: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.31705427169799805
    2. '[' → logprob: -1.317054271697998
    3. ')' → logprob: -5.692054271697998
    4. '[K' → logprob: -8.817054748535156
    5. 'K' → logprob: -9.692054748535156
    6. '[_' → logprob: -9.817054748535156
    7. '[-' → logprob: -11.067054748535156
    8. '```' → logprob: -11.067054748535156
    9. ' )' → logprob: -11.192054748535156
    10. '   ' → logprob: -11.942054748535156

Token 15: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. ')' → logprob: -13.50000286102295
    3. ' [' → logprob: -13.75000286102295
    4. '[N' → logprob: -15.12500286102295
    5. '(' → logprob: -16.875003814697266
    6. '[
' → logprob: -17.000003814697266
    7. '['' → logprob: -17.375003814697266
    8. '\[' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.625003814697266
    10. '```' → logprob: -18.000003814697266

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.416665640543215e-05
    2. '1' → logprob: -10.37503433227539
    3. ' ' → logprob: -12.87503433227539
    4. ')' → logprob: -16.37503433227539
    5. ']' → logprob: -16.75003433227539
    6. '])' → logprob: -16.87503433227539
    7. '2' → logprob: -16.87503433227539
    8. '[' → logprob: -17.37503433227539
    9. '   ' → logprob: -17.75003433227539
    10. '```' → logprob: -18.25003433227539

Token 17: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.021943414583802223
    2. ')' → logprob: -3.8969433307647705
    3. ']' → logprob: -6.64694356918335
    4. ' ])' → logprob: -9.896943092346191
    5. '])
' → logprob: -10.896943092346191
    6. ''])' → logprob: -11.646943092346191
    7. '[' → logprob: -12.271943092346191
    8. ')])' → logprob: -12.771943092346191
    9. '）' → logprob: -13.021943092346191
    10. '],' → logprob: -13.146943092346191

Token 18: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.005589463748037815
    2. 'M' → logprob: -5.255589485168457
    3. ' K' → logprob: -8.755589485168457
    4. '_' → logprob: -10.505589485168457
    5. '_K' → logprob: -10.630589485168457
    6. 'k' → logprob: -10.630589485168457
    7. 'N' → logprob: -11.255589485168457
    8. 'a' → logprob: -11.255589485168457
    9. 'D' → logprob: -11.380589485168457
    10. '```' → logprob: -11.380589485168457

Token 19: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7099554538726807
    2. '[' → logprob: -1.8349554538726807
    3. '=' → logprob: -1.9599554538726807
    4. ' =' → logprob: -2.4599554538726807
    5. '_' → logprob: -2.7099554538726807
    6. ' ' → logprob: -3.4599554538726807
    7. '<|end|>' → logprob: -4.334955215454102
    8. ']' → logprob: -6.084955215454102
    9. ' )' → logprob: -6.459955215454102
    10. '  ' → logprob: -7.209955215454102

Token 20: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4740842282772064
    2. 'int' → logprob: -0.9740842580795288
    3. ' ' → logprob: -12.97408390045166
    4. '0' → logprob: -13.34908390045166
    5. '(int' → logprob: -13.97408390045166
    6. '1' → logprob: -14.34908390045166
    7. '=int' → logprob: -14.47408390045166
    8. ' N' → logprob: -15.09908390045166
    9. '[int' → logprob: -15.59908390045166
    10. '32' → logprob: -16.099084854125977

Token 21: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23554164171218872
    2. '(N' → logprob: -1.610541582107544
    3. '(K' → logprob: -4.610541820526123
    4. ' (' → logprob: -10.110541343688965
    5. '('' → logprob: -10.235541343688965
    6. '(`' → logprob: -11.485541343688965
    7. '()' → logprob: -11.860541343688965
    8. '("("' → logprob: -12.235541343688965
    9. ')' → logprob: -12.360541343688965
    10. '((' → logprob: -12.610541343688965

Token 22: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -4.8590300139039755e-05
    2. '[' → logprob: -10.250048637390137
    3. '_' → logprob: -12.625048637390137
    4. '-' → logprob: -12.875048637390137
    5. '])' → logprob: -13.500048637390137
    6. ')' → logprob: -13.625048637390137
    7. ' ' → logprob: -14.500048637390137
    8. '[_' → logprob: -14.625048637390137
    9. ' _' → logprob: -14.750048637390137
    10. '```' → logprob: -14.750048637390137

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.200166469876422e-06
    2. ' [' → logprob: -12.875004768371582
    3. '1' → logprob: -13.250004768371582
    4. ')' → logprob: -15.000004768371582
    5. '```' → logprob: -15.750004768371582
    6. ')[' → logprob: -15.875004768371582
    7. '[
' → logprob: -16.8750057220459
    8. '][' → logprob: -16.8750057220459
    9. '\[' → logprob: -16.8750057220459
    10. '   ' → logprob: -17.0000057220459

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.963691804325208e-05
    2. ' ' → logprob: -11.125029563903809
    3. '0' → logprob: -11.250029563903809
    4. '])' → logprob: -13.375029563903809
    5. '```' → logprob: -16.375030517578125
    6. ']' → logprob: -16.937530517578125
    7. '   ' → logprob: -17.062530517578125
    8. '2' → logprob: -17.375030517578125
    9. '-' → logprob: -17.500030517578125
    10. '１' → logprob: -17.812530517578125

Token 25: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1002865731716156
    2. '])' → logprob: -2.3502864837646484
    3. '))' → logprob: -10.600286483764648
    4. ')])' → logprob: -11.100286483764648
    5. ''])' → logprob: -11.475286483764648
    6. '）' → logprob: -11.600286483764648
    7. ']' → logprob: -11.850286483764648
    8. ')]' → logprob: -12.600286483764648
    9. '`)' → logprob: -12.850286483764648
    10. '>)' → logprob: -12.975286483764648

Token 26: 'print' (ID: 1598)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.725771427154541
    2. 'a' → logprob: -1.975771427154541
    3. 'for' → logprob: -2.225771427154541
    4. 'result' → logprob: -2.225771427154541
    5. 'x' → logprob: -2.350771427154541
    6. 'if' → logprob: -2.975771427154541
    7. 'd' → logprob: -3.100771427154541
    8. 'i' → logprob: -4.100771427154541
    9. 'dp' → logprob: -4.100771427154541
    10. 'n' → logprob: -4.225771427154541

Token 27: '(math' (ID: 86464)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024638830218464136
    2. '(math' → logprob: -6.2524638175964355
    3. '("("' → logprob: -8.752464294433594
    4. '('' → logprob: -8.877464294433594
    5. '(max' → logprob: -9.627464294433594
    6. '()' → logprob: -9.877464294433594
    7. '(sum' → logprob: -10.377464294433594
    8. '((' → logprob: -10.502464294433594
    9. '(len' → logprob: -10.877464294433594
    10. '("' → logprob: -11.752464294433594

Token 28: '.floor' (ID: 23934)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05581235885620117
    2. '.sqrt' → logprob: -3.180812358856201
    3. '.pi' → logprob: -5.930812358856201
    4. '.ceil' → logprob: -6.055812358856201
    5. '.factor' → logprob: -6.055812358856201
    6. '.pow' → logprob: -6.305812358856201
    7. '.log' → logprob: -6.555812358856201
    8. '.floor' → logprob: -7.805812358856201
    9. '.sin' → logprob: -7.930812358856201
    10. '.exp' → logprob: -8.18081283569336

Token 29: '(math' (ID: 86464)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018381010740995407
    2. '(N' → logprob: -4.768381118774414
    3. '(math' → logprob: -5.268381118774414
    4. '((' → logprob: -5.768381118774414
    5. '(K' → logprob: -7.018381118774414
    6. ' (' → logprob: -8.018381118774414
    7. '(Math' → logprob: -9.268381118774414
    8. '(len' → logprob: -10.768381118774414
    9. '(.' → logprob: -11.143381118774414
    10. ')' → logprob: -11.143381118774414

Token 30: '.log' (ID: 2659)
  Prédit: '.log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.log' → logprob: -0.47098514437675476
    2. '.sqrt' → logprob: -1.0959851741790771
    3. '.' → logprob: -3.345985174179077
    4. '.pow' → logprob: -6.595984935760498
    5. '.exp' → logprob: -6.845984935760498
    6. '.factor' → logprob: -6.845984935760498
    7. '.pi' → logprob: -7.095984935760498
    8. '.ceil' → logprob: -7.095984935760498
    9. '.floor' → logprob: -8.095985412597656
    10. '.f' → logprob: -8.970985412597656

Token 31: '(N' (ID: 10564)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9079330563545227
    2. '(K' → logprob: -1.282932996749878
    3. '(' → logprob: -1.907932996749878
    4. '(N' → logprob: -2.407932996749878
    5. '2' → logprob: -2.532932996749878
    6. '((' → logprob: -7.532933235168457
    7. '(int' → logprob: -7.907933235168457
    8. ' (' → logprob: -8.532933235168457
    9. ' K' → logprob: -8.782933235168457
    10. 'K' → logprob: -9.157933235168457

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2273733764886856
    2. ' /' → logprob: -2.8523733615875244
    3. '/' → logprob: -2.9773733615875244
    4. ' ,' → logprob: -3.4773733615875244
    5. '(K' → logprob: -3.9773733615875244
    6. '(' → logprob: -4.3523736000061035
    7. ')' → logprob: -4.8523736000061035
    8. '/K' → logprob: -5.1023736000061035
    9. '2' → logprob: -5.2273736000061035
    10. ' (' → logprob: -5.2273736000061035

Token 33: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3072349727153778
    2. '2' → logprob: -1.4322350025177002
    3. ' K' → logprob: -3.8072350025177
    4. '10' → logprob: -5.807234764099121
    5. ' ' → logprob: -7.682234764099121
    6. '1' → logprob: -10.432234764099121
    7. '3' → logprob: -11.432234764099121
    8. ')' → logprob: -12.307234764099121
    9. '```' → logprob: -12.432234764099121
    10. '5' → logprob: -12.807234764099121

Token 34: '))' (ID: 915)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.15015020966529846
    2. '))' → logprob: -2.1501502990722656
    3. ')' → logprob: -3.7751502990722656
    4. '))))' → logprob: -11.025150299072266
    5. ')))
' → logprob: -13.275150299072266
    6. ')));' → logprob: -14.525150299072266
    7. '),' → logprob: -14.775150299072266
    8. ' ' → logprob: -15.150150299072266
    9. '1' → logprob: -15.150150299072266
    10. '))
' → logprob: -15.650150299072266

Token 35: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005567280459217727
    2. '))' → logprob: -7.500556945800781
    3. '`)' → logprob: -13.500556945800781
    4. ' )' → logprob: -14.250556945800781
    5. ')))' → logprob: -15.000556945800781
    6. '*' → logprob: -15.250556945800781
    7. ')`' → logprob: -15.250556945800781
    8. '')' → logprob: -15.500556945800781
    9. '(' → logprob: -15.750556945800781
    10. '+' → logprob: -16.50055694580078

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007104054093360901
    2. ' ' → logprob: -7.250710487365723
    3. '2' → logprob: -15.500710487365723
    4. ')' → logprob: -15.625710487365723
    5. ' ' → logprob: -16.250709533691406
    6. '+' → logprob: -17.750709533691406
    7. '```' → logprob: -18.000709533691406
    8. '(' → logprob: -18.125709533691406
    9. '0' → logprob: -18.250709533691406
    10. '１' → logprob: -18.250709533691406

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010330495424568653
    2. ' ' → logprob: -6.876032829284668
    3. ')' → logprob: -16.126033782958984
    4. ' ' → logprob: -16.501033782958984
    5. '2' → logprob: -16.876033782958984
    6. '１' → logprob: -18.751033782958984
    7. '```' → logprob: -18.751033782958984
    8. '   ' → logprob: -18.876033782958984
    9. '+' → logprob: -18.876033782958984
    10. '  ' → logprob: -18.876033782958984

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '))' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.250000953674316
    4. ')`' → logprob: -16.625
    5. ')
' → logprob: -16.875
    6. '`)' → logprob: -17.625
    7. '')' → logprob: -18.375
    8. '）' → logprob: -18.75
    9. '```' → logprob: -19.75
    10. ')))' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 36
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 27
Précision stricte (1ère position): 36.11%
Précision adaptée (1ère position): 36.11%
Précision (top 10): 75.00%
================================================================================
