================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, itemgetter

# Lecture des entrées, conversion en int, et assignation sophistiquée
N, M, *rest = map(int, input().split() + input().split())
A = rest

# Calcul de la somme avec reduce
sum_a = reduce(add, A)

# Génération d'une liste booléenne via filter/lambda/compréhension et zip
qualifiers = list(filter(lambda ia: ia[1] >= sum_a / (4*M), enumerate(A)))

# Utilisation de la somme des booléens pour compter
result = ['No','Yes'][(len(qualifiers) >= M)]

# Impression ingénieuse en utilisant join et slicing
print(''.join([result[i] for i in range(len(result)) if i == (result == 'Yes')]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.47569698095321655
    2. 'partial' → logprob: -1.2256970405578613
    3. ' wraps' → logprob: -3.1006970405578613
    4. 'reduce' → logprob: -3.3506970405578613
    5. 'l' → logprob: -6.100697040557861
    6. ' partial' → logprob: -6.475697040557861
    7. 'cached' → logprob: -7.975697040557861
    8. 'cache' → logprob: -8.600696563720703
    9. 'cmp' → logprob: -8.725696563720703
    10. '```' → logprob: -8.975696563720703

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0199317317456007
    2. '.' → logprob: -4.519931793212891
    3. '(lambda' → logprob: -5.019931793212891
    4. ' (' → logprob: -7.019931793212891
    5. ',' → logprob: -7.769931793212891
    6. '```' → logprob: -8.01993179321289
    7. '\' → logprob: -9.01993179321289
    8. ''' → logprob: -9.64493179321289
    9. '(
' → logprob: -9.89493179321289
    10. '`' → logprob: -10.01993179321289

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012035924941301346
    2. '\' → logprob: -4.887035846710205
    3. 'def' → logprob: -6.637035846710205
    4. '\(' → logprob: -6.637035846710205
    5. '(
' → logprob: -7.387035846710205
    6. '```' → logprob: -8.012036323547363
    7. '.' → logprob: -8.512036323547363
    8. ',' → logprob: -8.887036323547363
    9. '(lambda' → logprob: -8.887036323547363
    10. '\[' → logprob: -9.762036323547363

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.0021493434906006
    2. ' operator' → logprob: -1.2521493434906006
    3. ' itertools' → logprob: -1.5021493434906006
    4. ' collections' → logprob: -2.1271493434906006
    5. ' os' → logprob: -5.87714958190918
    6. 'operator' → logprob: -6.75214958190918
    7. 'math' → logprob: -7.87714958190918
    8. ' typing' → logprob: -8.00214958190918
    9. 'collections' → logprob: -8.12714958190918
    10. ' sys' → logprob: -9.12714958190918

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023007621988654137
    2. 'import' → logprob: -3.89800763130188
    3. '.' → logprob: -6.523007392883301
    4. ' ' → logprob: -7.148007392883301
    5. ' .' → logprob: -9.0230073928833
    6. '.import' → logprob: -9.6480073928833
    7. '	import' → logprob: -11.5230073928833
    8. '_import' → logprob: -13.1480073928833
    9. '-import' → logprob: -13.2730073928833
    10. '<|end|>' → logprob: -13.3980073928833

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.14849580824375153
    2. ' import' → logprob: -2.52349591255188
    3. ' mul' → logprob: -3.27349591255188
    4. 'add' → logprob: -4.398495674133301
    5. ' ' → logprob: -5.523495674133301
    6. 'import' → logprob: -6.773495674133301
    7. 'mul' → logprob: -6.773495674133301
    8. ' item' → logprob: -7.023495674133301
    9. ' icon' → logprob: -9.1484956741333
    10. 'item' → logprob: -9.8984956741333

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01737925596535206
    2. '(
' → logprob: -4.767379283905029
    3. '\' → logprob: -5.392379283905029
    4. '\n' → logprob: -6.642379283905029
    5. ',' → logprob: -6.767379283905029
    6. '\(' → logprob: -8.017378807067871
    7. '.' → logprob: -8.267378807067871
    8. '`' → logprob: -8.642378807067871
    9. '#' → logprob: -8.767378807067871
    10. '```' → logprob: -9.017378807067871

Token 10: ' item' (ID: 2169)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.2714220881462097
    2. ' mul' → logprob: -1.5214221477508545
    3. 'sub' → logprob: -4.271421909332275
    4. ' sub' → logprob: -5.396421909332275
    5. 'item' → logprob: -8.521422386169434
    6. '```' → logprob: -8.896422386169434
    7. 'getitem' → logprob: -8.896422386169434
    8. ' i' → logprob: -9.521422386169434
    9. 'i' → logprob: -9.771422386169434
    10. ' ' → logprob: -10.021422386169434

Token 11: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0009875539690256119
    2. 'get' → logprob: -7.000987529754639
    3. 'getitem' → logprob: -9.625988006591797
    4. 'g' → logprob: -12.125988006591797
    5. 's' → logprob: -13.375988006591797
    6. 'gett' → logprob: -13.375988006591797
    7. 'ge' → logprob: -15.375988006591797
    8. '[' → logprob: -15.375988006591797
    9. 'gets' → logprob: -15.375988006591797
    10. 'item' → logprob: -15.750988006591797

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42423927783966064
    2. ',' → logprob: -2.174239158630371
    3. '(
' → logprob: -2.674239158630371
    4. '\' → logprob: -2.799239158630371
    5. '\n' → logprob: -3.424239158630371
    6. '.' → logprob: -4.549239158630371
    7. ',
' → logprob: -4.674239158630371
    8. 'def' → logprob: -4.799239158630371
    9. '`' → logprob: -5.424239158630371
    10. '[' → logprob: -5.424239158630371

Token 13: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9804210066795349
    2. 'data' → logprob: -1.7304210662841797
    3. '(' → logprob: -1.9804210662841797
    4. 'sum' → logprob: -2.9804210662841797
    5. '=' → logprob: -3.4804210662841797
    6. ',' → logprob: -3.4804210662841797
    7. '[' → logprob: -3.6054210662841797
    8. 'numbers' → logprob: -3.8554210662841797
    9. 'total' → logprob: -4.23042106628418
    10. '`' → logprob: -4.35542106628418

Token 14: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4568210244178772
    2. 'sum' → logprob: -2.8318209648132324
    3. ' The' → logprob: -3.5818209648132324
    4. ' sum' → logprob: -3.5818209648132324
    5. ' reduce' → logprob: -3.5818209648132324
    6. 'd' → logprob: -3.7068209648132324
    7. 's' → logprob: -3.9568209648132324
    8. 'reduce' → logprob: -3.9568209648132324
    9. 'r' → logprob: -4.456820964813232
    10. 'c' → logprob: -4.769320964813232

Token 15: ' des' (ID: 731)
  Prédit: '_notes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_notes' → logprob: -0.2305135279893875
    2. ' =' → logprob: -2.730513572692871
    3. 'notes' → logprob: -3.355513572692871
    4. 'Notes' → logprob: -3.480513572692871
    5. '_' → logprob: -3.855513572692871
    6. ' notes' → logprob: -4.230513572692871
    7. 's' → logprob: -4.605513572692871
    8. '_note' → logprob: -4.980513572692871
    9. ' Notes' → logprob: -5.605513572692871
    10. ' ' → logprob: -5.855513572692871

Token 16: ' entr' (ID: 7072)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.6158671379089355
    2. ' ' → logprob: -0.8658671379089355
    3. ' data' → logprob: -3.8658671379089355
    4. ' fichiers' → logprob: -4.6158671379089355
    5. 'data' → logprob: -6.3658671379089355
    6. 'd' → logprob: -6.4908671379089355
    7. '_' → logprob: -7.1158671379089355
    8. ' f' → logprob: -7.3658671379089355
    9. ' fichier' → logprob: -7.6158671379089355
    10. ' lignes' → logprob: -7.7408671379089355

Token 17: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0003091254911851138
    2. 'ée' → logprob: -8.875308990478516
    3. 'ees' → logprob: -9.375308990478516
    4. 'és' → logprob: -10.000308990478516
    5. 'é' → logprob: -10.250308990478516
    6. 'es' → logprob: -13.125308990478516
    7. 'êtes' → logprob: -14.375308990478516
    8. 'ê' → logprob: -15.125308990478516
    9. 'etes' → logprob: -15.625308990478516
    10. 'e' → logprob: -16.000308990478516

Token 18: ',' (ID: 11)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.2015131711959839
    2. 'inputs' → logprob: -1.5765131711959839
    3. 's' → logprob: -1.7015131711959839
    4. 'n' → logprob: -2.2015132904052734
    5. 'entries' → logprob: -2.5765132904052734
    6. 'input' → logprob: -3.8265132904052734
    7. '\n' → logprob: -4.076513290405273
    8. 'user' → logprob: -4.451513290405273
    9. ':' → logprob: -4.451513290405273
    10. '\' → logprob: -4.576513290405273

Token 19: ' conversion' (ID: 22165)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6353496313095093
    2. 'n' → logprob: -0.7603496313095093
    3. ' data' → logprob: -6.760349750518799
    4. 'data' → logprob: -7.885349750518799
    5. ' entries' → logprob: -8.01034927368164
    6. ' inputs' → logprob: -8.38534927368164
    7. 'entries' → logprob: -8.76034927368164
    8. 'inputs' → logprob: -9.26034927368164
    9. 'nb' → logprob: -9.63534927368164
    10. ' input' → logprob: -10.01034927368164

Token 20: ' en' (ID: 469)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6186264753341675
    2. 'des' → logprob: -2.243626594543457
    3. ' en' → logprob: -2.368626594543457
    4. ',' → logprob: -2.493626594543457
    5. '(' → logprob: -2.618626594543457
    6. 's' → logprob: -3.118626594543457
    7. ' ,' → logprob: -4.368626594543457
    8. 'en' → logprob: -4.368626594543457
    9. ' ' → logprob: -4.493626594543457
    10. ' =' → logprob: -5.743626594543457

Token 21: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.24241702258586884
    2. 'ent' → logprob: -1.8674169778823853
    3. ' int' → logprob: -3.367417097091675
    4. 'liste' → logprob: -5.242416858673096
    5. '```' → logprob: -5.367416858673096
    6. 'ints' → logprob: -5.742416858673096
    7. 'list' → logprob: -5.742416858673096
    8. ' ent' → logprob: -6.367416858673096
    9. ' integers' → logprob: -6.367416858673096
    10. ' entier' → logprob: -6.617416858673096

Token 22: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6643184423446655
    2. 'n' → logprob: -1.6643184423446655
    3. '(' → logprob: -2.664318561553955
    4. 'lines' → logprob: -2.914318561553955
    5. 'inputs' → logprob: -3.039318561553955
    6. 'numbers' → logprob: -3.414318561553955
    7. '\' → logprob: -4.039318561553955
    8. 'data' → logprob: -4.289318561553955
    9. ',' → logprob: -4.414318561553955
    10. 'values' → logprob: -4.539318561553955

Token 23: ' et' (ID: 859)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.765134334564209
    2. ' list' → logprob: -1.265134334564209
    3. 'map' → logprob: -2.515134334564209
    4. 'list' → logprob: -3.390134334564209
    5. ' lines' → logprob: -3.890134334564209
    6. ' and' → logprob: -4.515134334564209
    7. ' data' → logprob: -4.515134334564209
    8. ' lst' → logprob: -4.515134334564209
    9. 'values' → logprob: -5.140134334564209
    10. ' values' → logprob: -5.265134334564209

Token 24: ' assign' (ID: 14975)
  Prédit: ' application'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' application' → logprob: -0.5000938177108765
    2. ' somm' → logprob: -2.000093936920166
    3. ' multiplication' → logprob: -3.250093936920166
    4. ' somme' → logprob: -3.500093936920166
    5. ' addition' → logprob: -3.625093936920166
    6. ' sum' → logprob: -4.000093936920166
    7. ' calcul' → logprob: -4.000093936920166
    8. ' stockage' → logprob: -4.125093936920166
    9. ' passage' → logprob: -4.375093936920166
    10. 's' → logprob: -4.375093936920166

Token 25: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.08555914461612701
    2. 'ement' → logprob: -3.210559129714966
    3. 'ment' → logprob: -3.210559129714966
    4. 'mentation' → logprob: -7.710559368133545
    5. 'er' → logprob: -8.460558891296387
    6. 'em' → logprob: -8.960558891296387
    7. 'm' → logprob: -8.960558891296387
    8. 'ations' → logprob: -9.085558891296387
    9. ' ment' → logprob: -9.335558891296387
    10. 'ments' → logprob: -9.960558891296387

Token 26: ' sophist' (ID: 96686)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8025489449501038
    2. 'n' → logprob: -2.552548885345459
    3. 'des' → logprob: -2.677548885345459
    4. 'numbers' → logprob: -2.677548885345459
    5. 'inputs' → logprob: -3.052548885345459
    6. 'values' → logprob: -3.052548885345459
    7. 'data' → logprob: -3.302548885345459
    8. ' numbers' → logprob: -3.552548885345459
    9. 'a' → logprob: -3.927548885345459
    10. ':' → logprob: -3.927548885345459

Token 27: 'iqu' (ID: 8966)
  Prédit: 'iqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iqu' → logprob: -0.13311423361301422
    2. 'ique' → logprob: -2.1331143379211426
    3. 'iqué' → logprob: -6.008114337921143
    4. 'i' → logprob: -6.508114337921143
    5. 'érée' → logprob: -7.133114337921143
    6. 'ie' → logprob: -7.258114337921143
    7. 'iq' → logprob: -8.008113861083984
    8. 'ée' → logprob: -8.883113861083984
    9. 'urée' → logprob: -9.883113861083984
    10. 'iquement' → logprob: -10.008113861083984

Token 28: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.02187727764248848
    2. 'ées' → logprob: -4.021877288818359
    3. 'é' → logprob: -5.896877288818359
    4. 'e' → logprob: -7.771877288818359
    5. 'ee' → logprob: -8.64687728881836
    6. 'és' → logprob: -9.02187728881836
    7. 'es' → logprob: -9.39687728881836
    8. 'ation' → logprob: -10.02187728881836
    9. '```' → logprob: -10.39687728881836
    10. 'ed' → logprob: -10.77187728881836

Token 29: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3179690837860107
    2. 'n' → logprob: -1.6929690837860107
    3. 'des' → logprob: -2.3179690837860107
    4. 'x' → logprob: -2.4429690837860107
    5. '(' → logprob: -2.9429690837860107
    6. 'values' → logprob: -3.1929690837860107
    7. 'inputs' → logprob: -3.4429690837860107
    8. ',' → logprob: -3.5679690837860107
    9. '_' → logprob: -3.6929690837860107
    10. 's' → logprob: -3.6929690837860107

Token 30: 'N' (ID: 45)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7878379821777344
    2. 'n' → logprob: -1.6628379821777344
    3. 'data' → logprob: -2.5378379821777344
    4. 'numbers' → logprob: -2.5378379821777344
    5. 'values' → logprob: -2.7878379821777344
    6. 'nums' → logprob: -3.7878379821777344
    7. 'l' → logprob: -3.9128379821777344
    8. 'x' → logprob: -4.162837982177734
    9. 'lines' → logprob: -4.537837982177734
    10. 'inputs' → logprob: -5.037837982177734

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10343857109546661
    2. ' =' → logprob: -2.72843861579895
    3. ' ,' → logprob: -3.72843861579895
    4. '=' → logprob: -4.853438377380371
    5. ' ' → logprob: -7.478438377380371
    6. 's' → logprob: -8.853438377380371
    7. '_' → logprob: -9.103438377380371
    8. '=int' → logprob: -9.603438377380371
    9. ',N' → logprob: -10.103438377380371
    10. '   ' → logprob: -10.478438377380371

Token 32: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.7201048135757446
    2. ' M' → logprob: -0.7201048135757446
    3. 'K' → logprob: -4.470104694366455
    4. ' K' → logprob: -4.720104694366455
    5. ' ' → logprob: -5.970104694366455
    6. 'S' → logprob: -7.470104694366455
    7. ' S' → logprob: -7.970104694366455
    8. '_' → logprob: -8.157605171203613
    9. 'a' → logprob: -8.157605171203613
    10. 'n' → logprob: -9.032605171203613

Token 33: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07908167690038681
    2. '=' → logprob: -2.5790817737579346
    3. ',' → logprob: -8.579081535339355
    4. '=input' → logprob: -13.079081535339355
    5. ' ' → logprob: -14.579081535339355
    6. '=int' → logprob: -14.829081535339355
    7. ' ,' → logprob: -15.454081535339355
    8. ' =
' → logprob: -15.954081535339355
    9. '=

' → logprob: -16.079082489013672
    10. '```' → logprob: -16.579082489013672

Token 34: ' *' (ID: 425)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.14795000851154327
    2. ' L' → logprob: -2.8979499340057373
    3. 'K' → logprob: -3.6479499340057373
    4. ' P' → logprob: -4.272950172424316
    5. '*' → logprob: -5.022950172424316
    6. ' *' → logprob: -5.147950172424316
    7. ' R' → logprob: -5.835450172424316
    8. ' T' → logprob: -6.022950172424316
    9. ' S' → logprob: -6.085450172424316
    10. ' O' → logprob: -6.147950172424316

Token 35: 'rest' (ID: 7134)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.693835735321045
    2. 'L' → logprob: -2.193835735321045
    3. 'lst' → logprob: -2.318835735321045
    4. 'a' → logprob: -2.943835735321045
    5. 'data' → logprob: -2.943835735321045
    6. 'rest' → logprob: -3.193835735321045
    7. 'scores' → logprob: -3.193835735321045
    8. 'D' → logprob: -3.693835735321045
    9. 'arr' → logprob: -3.818835735321045
    10. 'values' → logprob: -3.818835735321045

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023224592208862
    2. ' =' → logprob: -1.9102323055267334
    3. ',' → logprob: -12.035232543945312
    4. 's' → logprob: -14.285232543945312
    5. ')' → logprob: -15.410232543945312
    6. '=input' → logprob: -15.535232543945312
    7. '<|end|>' → logprob: -15.785232543945312
    8. '[' → logprob: -16.160232543945312
    9. ')=' → logprob: -16.410232543945312
    10. ' ' → logprob: -16.535232543945312

Token 37: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.03365088626742363
    2. ' map' → logprob: -3.4086508750915527
    3. '	map' → logprob: -13.283651351928711
    4. ' ' → logprob: -13.783651351928711
    5. '(map' → logprob: -14.033651351928711
    6. 'list' → logprob: -14.158651351928711
    7. '   ' → logprob: -15.033651351928711
    8. 'rest' → logprob: -15.533651351928711
    9. '[' → logprob: -15.908651351928711
    10. '```' → logprob: -16.03365135192871

Token 38: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006234417669475079
    2. '(' → logprob: -7.5006232261657715
    3. 'int' → logprob: -9.75062370300293
    4. '<int' → logprob: -11.75062370300293
    5. '(lambda' → logprob: -13.37562370300293
    6. '[int' → logprob: -13.75062370300293
    7. '=int' → logprob: -14.75062370300293
    8. '```' → logprob: -14.87562370300293
    9. ',int' → logprob: -15.12562370300293
    10. ']int' → logprob: -15.37562370300293

Token 39: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.05761116370558739
    2. ',' → logprob: -3.1826112270355225
    3. '(input' → logprob: -4.557610988616943
    4. 'input' → logprob: -6.182610988616943
    5. ')' → logprob: -6.557610988616943
    6. '(' → logprob: -8.682611465454102
    7. ' input' → logprob: -9.307611465454102
    8. '(rest' → logprob: -10.432611465454102
    9. ',map' → logprob: -10.557611465454102
    10. 'rest' → logprob: -10.682611465454102

Token 40: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03418511524796486
    2. ' input' → logprob: -3.5341851711273193
    3. 'open' → logprob: -5.53418493270874
    4. 'rest' → logprob: -8.534185409545898
    5. ')' → logprob: -8.909185409545898
    6. ' open' → logprob: -9.159185409545898
    7. ' rest' → logprob: -11.534185409545898
    8. 'sys' → logprob: -11.784185409545898
    9. '_input' → logprob: -12.034185409545898
    10. 'stdin' → logprob: -12.784185409545898

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.771655115589965e-05
    2. '()' → logprob: -11.000018119812012
    3. ' ().' → logprob: -14.500018119812012
    4. '(' → logprob: -15.625018119812012
    5. ')' → logprob: -16.250017166137695
    6. '().'' → logprob: -16.500017166137695
    7. '('').' → logprob: -17.500017166137695
    8. '.' → logprob: -18.250017166137695
    9. 'split' → logprob: -18.375017166137695
    10. '>().' → logprob: -18.500017166137695

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0068310522474348545
    2. 'strip' → logprob: -5.006831169128418
    3. 'read' → logprob: -9.131831169128418
    4. 'rstrip' → logprob: -12.256831169128418
    5. ' split' → logprob: -13.006831169128418
    6. '(split' → logprob: -15.881831169128418
    7. 'spl' → logprob: -16.1318302154541
    8. '().' → logprob: -16.2568302154541
    9. 'replace' → logprob: -16.6318302154541
    10. 'sp' → logprob: -16.8818302154541

Token 43: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17243067920207977
    2. ')' → logprob: -1.9224306344985962
    3. '))' → logprob: -5.172430515289307
    4. '()))' → logprob: -5.297430515289307
    5. '()' → logprob: -6.672430515289307
    6. '(' → logprob: -9.797430992126465
    7. '('' → logprob: -9.922430992126465
    8. ' ())' → logprob: -11.297430992126465
    9. '(','' → logprob: -11.422430992126465
    10. '())
' → logprob: -11.422430992126465

Token 44: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008189192740246654
    2. '))' → logprob: -7.250818729400635
    3. '())' → logprob: -9.375819206237793
    4. '()' → logprob: -11.500819206237793
    5. ' )' → logprob: -12.250819206237793
    6. ')`' → logprob: -12.625819206237793
    7. ',' → logprob: -13.250819206237793
    8. '(' → logprob: -13.875819206237793
    9. ')))' → logprob: -13.875819206237793
    10. '`)' → logprob: -14.125819206237793

Token 45: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07775300741195679
    2. '[' → logprob: -3.5777530670166016
    3. ' input' → logprob: -3.8277530670166016
    4. '['' → logprob: -4.577753067016602
    5. 'list' → logprob: -5.702753067016602
    6. '[input' → logprob: -5.702753067016602
    7. '(['' → logprob: -5.827753067016602
    8. '(input' → logprob: -6.952753067016602
    9. '('' → logprob: -7.077753067016602
    10. 'range' → logprob: -7.577753067016602

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.5
    3. ' ().' → logprob: -18.25
    4. '(' → logprob: -19.75
    5. '()).' → logprob: -20.5
    6. '('').' → logprob: -21.0
    7. '.' → logprob: -21.5
    8. '("").' → logprob: -21.75
    9. ').' → logprob: -22.0
    10. 's' → logprob: -22.125

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.465036105713807e-06
    2. 'strip' → logprob: -11.875007629394531
    3. 'rstrip' → logprob: -15.000007629394531
    4. ' split' → logprob: -15.750007629394531
    5. '(split' → logprob: -18.00000762939453
    6. 'read' → logprob: -18.12500762939453
    7. 'spl' → logprob: -19.00000762939453
    8. '.split' → logprob: -19.12500762939453
    9. '().' → logprob: -19.50000762939453
    10. 'rs' → logprob: -20.25000762939453

Token 48: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008972502313554287
    2. '()' → logprob: -4.758972644805908
    3. '()))' → logprob: -8.13397216796875
    4. ')' → logprob: -9.75897216796875
    5. ' ())' → logprob: -12.75897216796875
    6. '())
' → logprob: -14.00897216796875
    7. '()]' → logprob: -14.25897216796875
    8. '))' → logprob: -14.38397216796875
    9. '(' → logprob: -14.38397216796875
    10. '();)' → logprob: -14.88397216796875

Token 49: 'A' (ID: 32)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7508134841918945
    2. '\n' → logprob: -1.0008134841918945
    3. 'for' → logprob: -3.2508134841918945
    4. '#' → logprob: -3.8758134841918945
    5. ')' → logprob: -4.0008134841918945
    6. 'rest' → logprob: -4.0008134841918945
    7. '' → logprob: -4.6258134841918945
    8. '\' → logprob: -4.7508134841918945
    9. '
' → logprob: -4.7508134841918945
    10. ',' → logprob: -5.3758134841918945

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.676964282989502
    2. '=' → logprob: -0.801964282989502
    3. ',' → logprob: -3.301964282989502
    4. 's' → logprob: -5.176964282989502
    5. '[' → logprob: -7.801964282989502
    6. '[:]' → logprob: -9.301963806152344
    7. '_' → logprob: -9.551963806152344
    8. 'A' → logprob: -9.676963806152344
    9. '[]' → logprob: -9.926963806152344
    10. '=[]' → logprob: -10.176963806152344

Token 51: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.08045832812786102
    2. ' rest' → logprob: -2.705458402633667
    3. 'list' → logprob: -5.080458164215088
    4. ' list' → logprob: -6.205458164215088
    5. '[' → logprob: -6.330458164215088
    6. ' [' → logprob: -8.705458641052246
    7. 'sorted' → logprob: -9.705458641052246
    8. 'item' → logprob: -10.080458641052246
    9. '(rest' → logprob: -10.455458641052246
    10. '[]' → logprob: -11.080458641052246

Token 52: '

' (ID: 279)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.33230456709861755
    2. '[' → logprob: -1.45730459690094
    3. '[:]' → logprob: -3.3323044776916504
    4. '<|end|>' → logprob: -5.58230447769165
    5. '
' → logprob: -5.70730447769165
    6. '#' → logprob: -6.08230447769165
    7. '[:-' → logprob: -6.70730447769165
    8. '.' → logprob: -7.20730447769165
    9. '[
' → logprob: -7.45730447769165
    10. ' ' → logprob: -8.082304954528809

Token 53: '#' (ID: 2)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.613293468952179
    2. '[' → logprob: -1.4882934093475342
    3. '#' → logprob: -2.863293409347534
    4. '[:' → logprob: -3.238293409347534
    5. ' ' → logprob: -3.363293409347534
    6. ' =' → logprob: -3.738293409347534
    7. '.' → logprob: -4.113293647766113
    8. ')' → logprob: -4.238293647766113
    9. '[:]' → logprob: -4.738293647766113
    10. '
' → logprob: -4.738293647766113

Token 54: ' Calcul' (ID: 57243)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.348421335220337
    2. 'result' → logprob: -1.598421335220337
    3. 's' → logprob: -2.723421335220337
    4. 'max' → logprob: -2.973421335220337
    5. 'count' → logprob: -3.098421335220337
    6. 'total' → logprob: -3.098421335220337
    7. ' sum' → logprob: -3.223421335220337
    8. '#' → logprob: -3.348421335220337
    9. ' result' → logprob: -3.473421335220337
    10. ' max' → logprob: -4.098421096801758

Token 55: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6547819972038269
    2. ' =' → logprob: -1.2797820568084717
    3. '_' → logprob: -2.5297820568084717
    4. 's' → logprob: -3.4047820568084717
    5. 'sum' → logprob: -3.6547820568084717
    6. '_sum' → logprob: -3.9047820568084717
    7. '(' → logprob: -4.029781818389893
    8. 'result' → logprob: -4.404781818389893
    9. '_result' → logprob: -5.904781818389893
    10. '_total' → logprob: -6.029781818389893

Token 56: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4031967222690582
    2. ' sum' → logprob: -1.4031966924667358
    3. 'reduce' → logprob: -3.2781968116760254
    4. ' max' → logprob: -4.278196811676025
    5. 'max' → logprob: -4.278196811676025
    6. ' reduce' → logprob: -4.778196811676025
    7. 'min' → logprob: -5.653196811676025
    8. ' min' → logprob: -6.153196811676025
    9. 'len' → logprob: -6.778196811676025
    10. '(sum' → logprob: -7.153196811676025

Token 57: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5937455296516418
    2. ' somme' → logprob: -0.8437455296516418
    3. ' longueur' → logprob: -5.343745708465576
    4. 'sum' → logprob: -5.968745708465576
    5. 'long' → logprob: -6.218745708465576
    6. 'som' → logprob: -6.593745708465576
    7. ' fréquence' → logprob: -6.718745708465576
    8. ' moyenne' → logprob: -7.406245708465576
    9. ' sum' → logprob: -7.468745708465576
    10. ' som' → logprob: -7.531245708465576

Token 58: ' avec' (ID: 3937)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2618291974067688
    2. 's' → logprob: -2.886829137802124
    3. 'sum' → logprob: -3.011829137802124
    4. 'A' → logprob: -3.386829137802124
    5. '(' → logprob: -3.386829137802124
    6. '_' → logprob: -3.761829137802124
    7. ' =' → logprob: -3.886829137802124
    8. 'a' → logprob: -5.511829376220703
    9. '(sum' → logprob: -6.011829376220703
    10. '=sum' → logprob: -6.136829376220703

Token 59: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.6702585816383362
    2. 'reduce' → logprob: -0.7952585816383362
    3. ' sum' → logprob: -3.9202585220336914
    4. 'sum' → logprob: -4.170258522033691
    5. ' add' → logprob: -7.295258522033691
    6. 're' → logprob: -7.795258522033691
    7. 'add' → logprob: -7.920258522033691
    8. ')' → logprob: -10.045258522033691
    9. ' item' → logprob: -10.795258522033691
    10. 'redu' → logprob: -10.920258522033691

Token 60: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4590582847595215
    2. 'sum' → logprob: -2.2090582847595215
    3. '(lambda' → logprob: -2.3340582847595215
    4. '(sum' → logprob: -3.3340582847595215
    5. '=' → logprob: -3.4590582847595215
    6. 'A' → logprob: -3.5840582847595215
    7. 'lambda' → logprob: -3.9590582847595215
    8. 'reduce' → logprob: -3.9590582847595215
    9. '_' → logprob: -4.8340582847595215
    10. 'result' → logprob: -5.4590582847595215

Token 61: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.39298030734062195
    2. 'result' → logprob: -1.5179803371429443
    3. 'total' → logprob: -2.8929803371429443
    4. 'reduce' → logprob: -3.6429803371429443
    5. 's' → logprob: -4.642980098724365
    6. '(' → logprob: -5.517980098724365
    7. 'print' → logprob: -6.392980098724365
    8. 'res' → logprob: -6.517980098724365
    9. 'answer' → logprob: -6.517980098724365
    10. '(sum' → logprob: -6.642980098724365

Token 62: '_a' (ID: 10852)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3372274935245514
    2. '(A' → logprob: -1.837227463722229
    3. '_' → logprob: -2.4622275829315186
    4. 'A' → logprob: -3.4622275829315186
    5. '_A' → logprob: -5.3372273445129395
    6. '(lambda' → logprob: -6.3372273445129395
    7. '_(' → logprob: -7.3372273445129395
    8. '_val' → logprob: -7.4622273445129395
    9. '(add' → logprob: -7.8372273445129395
    10. 'r' → logprob: -8.212227821350098

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6916472315788269
    2. '(' → logprob: -1.3166472911834717
    3. ' =' → logprob: -1.8166472911834717
    4. ')' → logprob: -3.3166472911834717
    5. '_' → logprob: -3.8166472911834717
    6. '(A' → logprob: -5.566647052764893
    7. ',' → logprob: -6.191647052764893
    8. 'A' → logprob: -6.691647052764893
    9. 's' → logprob: -7.316647052764893
    10. '(a' → logprob: -7.566647052764893

Token 64: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.6932175755500793
    2. 'reduce' → logprob: -0.6932175755500793
    3. ' sum' → logprob: -10.568217277526855
    4. 'sum' → logprob: -11.068217277526855
    5. ' lambda' → logprob: -11.443217277526855
    6. 'lambda' → logprob: -11.818217277526855
    7. ' add' → logprob: -12.568217277526855
    8. 'add' → logprob: -12.943217277526855
    9. 're' → logprob: -13.193217277526855
    10. 'redu' → logprob: -13.818217277526855

Token 65: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.014327687211334705
    2. '(' → logprob: -4.264327526092529
    3. '(lambda' → logprob: -8.889328002929688
    4. '(operator' → logprob: -11.139328002929688
    5. 'add' → logprob: -11.514328002929688
    6. '(
' → logprob: -15.014328002929688
    7. ' add' → logprob: -15.139328002929688
    8. ' (' → logprob: -15.264328002929688
    9. ')add' → logprob: -15.264328002929688
    10. '```' → logprob: -15.264328002929688

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005059692775830626
    2. ',A' → logprob: -7.6255059242248535
    3. ' ,' → logprob: -11.500506401062012
    4. ',a' → logprob: -11.875506401062012
    5. 'A' → logprob: -14.125506401062012
    6. ',
' → logprob: -16.625505447387695
    7. 'a' → logprob: -18.000505447387695
    8. ',(' → logprob: -18.125505447387695
    9. ',",' → logprob: -18.250505447387695
    10. ',[' → logprob: -18.500505447387695

Token 67: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20141851902008057
    2. ' A' → logprob: -1.7014185190200806
    3. ',A' → logprob: -13.32641887664795
    4. ' ' → logprob: -13.95141887664795
    5. '	A' → logprob: -13.95141887664795
    6. ')' → logprob: -13.95141887664795
    7. '(A' → logprob: -15.07641887664795
    8. ',' → logprob: -15.45141887664795
    9. '[A' → logprob: -15.45141887664795
    10. '   ' → logprob: -16.076417922973633

Token 68: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011045700375689194
    2. ',' → logprob: -9.375110626220703
    3. '))' → logprob: -11.250110626220703
    4. ' )' → logprob: -11.625110626220703
    5. ')`' → logprob: -13.750110626220703
    6. ')
' → logprob: -14.375110626220703
    7. ',)' → logprob: -14.625110626220703
    8. '),' → logprob: -15.125110626220703
    9. ')))' → logprob: -15.250110626220703
    10. ' ' → logprob: -16.000110626220703

Token 69: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38261541724205017
    2. '<|end|>' → logprob: -2.507615327835083
    3. '#' → logprob: -2.882615327835083
    4. 'print' → logprob: -3.007615327835083
    5. ')' → logprob: -3.007615327835083
    6. '*' → logprob: -3.882615327835083
    7. '+' → logprob: -3.882615327835083
    8. '\n' → logprob: -5.007615566253662
    9. '.' → logprob: -5.132615566253662
    10. ',' → logprob: -5.632615566253662

Token 70: ' Gén' (ID: 71828)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23388701677322388
    2. ' print' → logprob: -1.608886957168579
    3. 'for' → logprob: -6.608887195587158
    4. ' for' → logprob: -6.858887195587158
    5. ' if' → logprob: -6.858887195587158
    6. 'average' → logprob: -6.983887195587158
    7. 'result' → logprob: -7.108887195587158
    8. 'if' → logprob: -7.233887195587158
    9. ' average' → logprob: -7.358887195587158
    10. ' result' → logprob: -7.858887195587158

Token 71: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.005344755481928587
    2. '#' → logprob: -5.880344867706299
    3. 'ération' → logprob: -6.380344867706299
    4. 'érer' → logprob: -7.630344867706299
    5. 'for' → logprob: -9.63034439086914
    6. 'érateur' → logprob: -9.75534439086914
    7. 'eral' → logprob: -9.88034439086914
    8. 'éro' → logprob: -10.25534439086914
    9. 'print' → logprob: -10.75534439086914
    10. 'ère' → logprob: -11.13034439086914

Token 72: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7363426089286804
    2. '(' → logprob: -1.2363426685333252
    3. ' of' → logprob: -3.236342668533325
    4. 'of' → logprob: -3.236342668533325
    5. 'de' → logprob: -3.611342668533325
    6. ' d' → logprob: -3.611342668533325
    7. 'des' → logprob: -3.611342668533325
    8. 's' → logprob: -4.486342430114746
    9. '([' → logprob: -4.736342430114746
    10. ' de' → logprob: -4.986342430114746

Token 73: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7249312996864319
    2. '[' → logprob: -1.724931240081787
    3. 'a' → logprob: -2.349931240081787
    4. 'une' → logprob: -2.974931240081787
    5. ''' → logprob: -3.724931240081787
    6. '_' → logprob: -3.724931240081787
    7. ''une' → logprob: -4.099931240081787
    8. ' la' → logprob: -4.224931240081787
    9. 'u' → logprob: -4.349931240081787
    10. 'es' → logprob: -4.349931240081787

Token 74: ' liste' (ID: 31719)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8811284303665161
    2. 'list' → logprob: -1.6311284303665161
    3. 'range' → logprob: -2.1311283111572266
    4. '[' → logprob: -3.2561283111572266
    5. ' range' → logprob: -3.3811283111572266
    6. ' [' → logprob: -3.7561283111572266
    7. 's' → logprob: -3.7561283111572266
    8. 'sum' → logprob: -4.006128311157227
    9. 'liste' → logprob: -4.506128311157227
    10. 'filter' → logprob: -4.756128311157227

Token 75: ' bool' (ID: 3792)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4851503074169159
    2. 's' → logprob: -2.8601503372192383
    3. 'range' → logprob: -3.2351503372192383
    4. 'indices' → logprob: -3.2351503372192383
    5. 'result' → logprob: -3.4851503372192383
    6. '[i' → logprob: -3.7351503372192383
    7. 'A' → logprob: -3.9851503372192383
    8. 'B' → logprob: -4.110150337219238
    9. 'list' → logprob: -4.360150337219238
    10. '(range' → logprob: -4.485150337219238

Token 76: 'é' (ID: 377)
  Prédit: 'ean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ean' → logprob: -0.209930881857872
    2. 'é' → logprob: -1.7099308967590332
    3. 'éan' → logprob: -5.334930896759033
    4. '[' → logprob: -5.834930896759033
    5. 'ée' → logprob: -9.084930419921875
    6. 'een' → logprob: -9.084930419921875
    7. 'e' → logprob: -9.709930419921875
    8. 'éal' → logprob: -10.084930419921875
    9. 'eens' → logprob: -10.084930419921875
    10. '_list' → logprob: -10.209930419921875

Token 77: 'enne' (ID: 17721)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.3897654414176941
    2. 're' → logprob: -2.014765501022339
    3. 'n' → logprob: -2.764765501022339
    4. 'enne' → logprob: -2.764765501022339
    5. 'naire' → logprob: -4.63976526260376
    6. '```' → logprob: -4.88976526260376
    7. 'an' → logprob: -5.26476526260376
    8. 'nne' → logprob: -5.38976526260376
    9. 'r' → logprob: -5.51476526260376
    10. '[' → logprob: -5.51476526260376

Token 78: ' via' (ID: 4493)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0213770866394043
    2. '[' → logprob: -1.2713770866394043
    3. 'mask' → logprob: -2.8963770866394043
    4. 's' → logprob: -3.1463770866394043
    5. 'visited' → logprob: -3.2713770866394043
    6. 'valid' → logprob: -3.3963770866394043
    7. 'presence' → logprob: -3.6463770866394043
    8. 'b' → logprob: -3.8963770866394043
    9. 'bool' → logprob: -4.396377086639404
    10. 'B' → logprob: -4.521377086639404

Token 79: ' filter' (ID: 6690)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.034398097544908524
    2. 'list' → logprob: -3.909398078918457
    3. 'item' → logprob: -4.909398078918457
    4. ' map' → logprob: -5.159398078918457
    5. ' list' → logprob: -8.534398078918457
    6. '[item' → logprob: -8.534398078918457
    7. ' item' → logprob: -9.534398078918457
    8. '[' → logprob: -9.909398078918457
    9. 'range' → logprob: -10.784398078918457
    10. '(map' → logprob: -11.034398078918457

Token 80: '/l' (ID: 16347)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21393747627735138
    2. '(lambda' → logprob: -1.838937520980835
    3. 's' → logprob: -4.463937282562256
    4. '(
' → logprob: -5.338937282562256
    5. '(None' → logprob: -5.713937282562256
    6. ',' → logprob: -5.838937282562256
    7. '(filter' → logprob: -5.963937282562256
    8. 'A' → logprob: -5.963937282562256
    9. 'list' → logprob: -6.588937282562256
    10. 'lambda' → logprob: -7.463937282562256

Token 81: 'ambda' (ID: 12104)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.04031436890363693
    2. 'en' → logprob: -4.165314197540283
    3. 'is' → logprob: -4.290314197540283
    4. 'i' → logprob: -5.290314197540283
    5. 'ambda' → logprob: -6.165314197540283
    6. 'e' → logprob: -6.415314197540283
    7. 'map' → logprob: -7.415314197540283
    8. 'a' → logprob: -8.165314674377441
    9. 'filter' → logprob: -8.540314674377441
    10. 'st' → logprob: -8.790314674377441

Token 82: '/com' (ID: 58037)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.658482551574707
    2. 'list' → logprob: -1.783482551574707
    3. 'A' → logprob: -2.033482551574707
    4. '[' → logprob: -3.408482551574707
    5. 'filter' → logprob: -3.408482551574707
    6. ',' → logprob: -3.783482551574707
    7. '(A' → logprob: -3.908482551574707
    8. '(filter' → logprob: -4.408482551574707
    9. '(
' → logprob: -4.658482551574707
    10. '(lambda' → logprob: -5.033482551574707

Token 83: 'pr' (ID: 638)
  Prédit: 'preh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preh' → logprob: -0.4887824058532715
    2. 'press' → logprob: -2.2387824058532715
    3. 'pare' → logprob: -2.2387824058532715
    4. 'pr' → logprob: -2.7387824058532715
    5. '```' → logprob: -3.1137824058532715
    6. 'pre' → logprob: -3.6137824058532715
    7. 'p' → logprob: -3.6137824058532715
    8. 'pres' → logprob: -6.3637824058532715
    9. '``' → logprob: -7.2387824058532715
    10. 'pret' → logprob: -7.6137824058532715

Token 84: 'éhension' (ID: 119944)
  Prédit: 'eh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eh' → logprob: -0.1961130052804947
    2. 'éhension' → logprob: -2.446113109588623
    3. 'ension' → logprob: -2.571113109588623
    4. 'éh' → logprob: -4.821113109588623
    5. 'h' → logprob: -5.821113109588623
    6. 'e' → logprob: -6.071113109588623
    7. 'ensions' → logprob: -7.571113109588623
    8. 'é' → logprob: -8.446112632751465
    9. 'ensión' → logprob: -8.821112632751465
    10. 'ensione' → logprob: -8.946112632751465

Token 85: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19354872405529022
    2. '[A' → logprob: -2.3185486793518066
    3. '[i' → logprob: -2.9435486793518066
    4. 'A' → logprob: -4.693548679351807
    5. '[a' → logprob: -5.193548679351807
    6. 'a' → logprob: -5.693548679351807
    7. 's' → logprob: -6.943548679351807
    8. '[]' → logprob: -7.068548679351807
    9. '[x' → logprob: -7.193548679351807
    10. 'b' → logprob: -7.193548679351807

Token 86: ' zip' (ID: 16216)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.044326663017273
    2. ' map' → logprob: -1.419326663017273
    3. 'all' → logprob: -2.1693267822265625
    4. '[' → logprob: -2.6693267822265625
    5. 'map' → logprob: -2.9193267822265625
    6. ' list' → logprob: -2.9193267822265625
    7. 'list' → logprob: -3.2943267822265625
    8. ' [' → logprob: -3.6693267822265625
    9. '[item' → logprob: -4.7943267822265625
    10. ' sum' → logprob: -5.1693267822265625

Token 87: '
' (ID: 198)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -1.0574209690093994
    2. '[' → logprob: -1.4324209690093994
    3. '(' → logprob: -1.9324209690093994
    4. '(
' → logprob: -2.8074209690093994
    5. '([(' → logprob: -3.5574209690093994
    6. 'zip' → logprob: -3.8074209690093994
    7. 'A' → logprob: -4.05742073059082
    8. 'filter' → logprob: -4.18242073059082
    9. ',' → logprob: -4.30742073059082
    10. '[(' → logprob: -4.43242073059082

Token 88: 'qual' (ID: 6129)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6195109486579895
    2. '[' → logprob: -1.2445108890533447
    3. '[(' → logprob: -2.6195108890533447
    4. '[A' → logprob: -3.3695108890533447
    5. 'A' → logprob: -4.369511127471924
    6. '[a' → logprob: -4.619511127471924
    7. '[x' → logprob: -5.244511127471924
    8. '([' → logprob: -5.494511127471924
    9. 'bool' → logprob: -5.619511127471924
    10. 'b' → logprob: -5.744511127471924

Token 89: 'ifiers' (ID: 19873)
  Prédit: 'ified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ified' → logprob: -1.0284174680709839
    2. 'ifies' → logprob: -1.1534174680709839
    3. 'if' → logprob: -1.9034174680709839
    4. 'ify' → logprob: -2.6534175872802734
    5. 'ifie' → logprob: -3.5284175872802734
    6. 'ities' → logprob: -4.278417587280273
    7. 'ifiés' → logprob: -4.653417587280273
    8. 'ity' → logprob: -4.778417587280273
    9. 'ifying' → logprob: -4.903417587280273
    10. 'ifiers' → logprob: -4.903417587280273

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3491736650466919
    2. '=' → logprob: -1.224173665046692
    3. 's' → logprob: -8.099173545837402
    4. '_' → logprob: -8.349173545837402
    5. ',' → logprob: -9.849173545837402
    6. ' ' → logprob: -10.224173545837402
    7. '`' → logprob: -11.224173545837402
    8. '＝' → logprob: -11.849173545837402
    9. '(' → logprob: -11.974173545837402
    10. 'es' → logprob: -12.224173545837402

Token 91: ' list' (ID: 1562)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2888389229774475
    2. '[a' → logprob: -2.4138388633728027
    3. '[' → logprob: -2.5388388633728027
    4. ' [' → logprob: -3.5388388633728027
    5. '[A' → logprob: -3.9138388633728027
    6. '[x' → logprob: -4.288838863372803
    7. '[(' → logprob: -4.413838863372803
    8. '[k' → logprob: -6.538838863372803
    9. '[item' → logprob: -6.538838863372803
    10. '[s' → logprob: -7.288838863372803

Token 92: '(filter' (ID: 36366)
  Prédit: '(filter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(filter' → logprob: -0.32807648181915283
    2. '(' → logprob: -1.3280764818191528
    3. '(map' → logprob: -4.703076362609863
    4. '(zip' → logprob: -5.328076362609863
    5. '(i' → logprob: -8.578076362609863
    6. '((' → logprob: -8.703076362609863
    7. '(com' → logprob: -9.078076362609863
    8. '(
' → logprob: -9.328076362609863
    9. '(x' → logprob: -9.953076362609863
    10. '(f' → logprob: -10.078076362609863

Token 93: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.011305990628898144
    2. '(' → logprob: -4.511305809020996
    3. '(None' → logprob: -8.511305809020996
    4. '(
' → logprob: -9.886305809020996
    5. ' (' → logprob: -13.261305809020996
    6. 'lambda' → logprob: -13.636305809020996
    7. '(True' → logprob: -13.886305809020996
    8. '(False' → logprob: -14.136305809020996
    9. '((' → logprob: -14.386305809020996
    10. '(l' → logprob: -15.136305809020996

Token 94: ' ia' (ID: 10340)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.09708059579133987
    2. 'x' → logprob: -3.597080707550049
    3. ' lambda' → logprob: -4.847080707550049
    4. '(lambda' → logprob: -4.847080707550049
    5. ' ' → logprob: -4.972080707550049
    6. ':' → logprob: -4.972080707550049
    7. ' i' → logprob: -5.722080707550049
    8. ',' → logprob: -5.722080707550049
    9. '=lambda' → logprob: -5.722080707550049
    10. 'lambda' → logprob: -5.847080707550049

Token 95: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06726708263158798
    2. 'mb' → logprob: -3.3172671794891357
    3. ',' → logprob: -4.192266941070557
    4. 'm' → logprob: -5.067266941070557
    5. 'b' → logprob: -5.442266941070557
    6. 'd' → logprob: -7.442266941070557
    7. ' :' → logprob: -7.442266941070557
    8. 't' → logprob: -8.442267417907715
    9. 'lambda' → logprob: -8.442267417907715
    10. '=lambda' → logprob: -8.692267417907715

Token 96: ' ia' (ID: 10340)
  Prédit: ' ia'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ia' → logprob: -0.31692829728126526
    2. 'ia' → logprob: -1.3169282674789429
    3. 'lambda' → logprob: -6.441928386688232
    4. ' lambda' → logprob: -6.691928386688232
    5. ' (' → logprob: -8.316927909851074
    6. '(' → logprob: -8.441927909851074
    7. '(lambda' → logprob: -8.816927909851074
    8. '   ' → logprob: -10.566927909851074
    9. 'ambda' → logprob: -11.254427909851074
    10. ' ' → logprob: -11.316927909851074

Token 97: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2541200816631317
    2. '[' → logprob: -1.504120111465454
    3. ' :' → logprob: -6.629119873046875
    4. 'ia' → logprob: -8.629119873046875
    5. 'and' → logprob: -9.254119873046875
    6. ':[' → logprob: -9.504119873046875
    7. ',' → logprob: -9.879119873046875
    8. ' ' → logprob: -10.129119873046875
    9. ')' → logprob: -10.129119873046875
    10. '0' → logprob: -10.379119873046875

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012810648186132312
    2. '0' → logprob: -6.876281261444092
    3. '[' → logprob: -8.876280784606934
    4. ' ' → logprob: -9.938780784606934
    5. '(' → logprob: -11.876280784606934
    6. '-' → logprob: -12.376280784606934
    7. 'i' → logprob: -12.376280784606934
    8. ']' → logprob: -12.751280784606934
    9. '```' → logprob: -12.813780784606934
    10. '>' → logprob: -13.001280784606934

Token 99: ']' (ID: 60)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.28127434849739075
    2. ' >=' → logprob: -1.7812743186950684
    3. '>' → logprob: -2.7812743186950684
    4. ' >' → logprob: -5.031274318695068
    5. '%' → logprob: -5.781274318695068
    6. '<=' → logprob: -6.281274318695068
    7. '[' → logprob: -7.031274318695068
    8. '<' → logprob: -7.531274318695068
    9. ' <=' → logprob: -7.531274318695068
    10. ' %' → logprob: -8.031274795532227

Token 100: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.05991845577955246
    2. ' >=' → logprob: -2.9349184036254883
    3. '>' → logprob: -5.684918403625488
    4. '[' → logprob: -7.809918403625488
    5. '<=' → logprob: -7.809918403625488
    6. ')' → logprob: -9.309918403625488
    7. '==' → logprob: -9.434918403625488
    8. ' >' → logprob: -9.497418403625488
    9. '+' → logprob: -9.747418403625488
    10. '<' → logprob: -9.809918403625488

Token 101: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0755685567855835
    2. 'M' → logprob: -1.4505685567855835
    3. '(M' → logprob: -1.9505685567855835
    4. ' M' → logprob: -2.325568675994873
    5. ' sum' → logprob: -2.700568675994873
    6. ' (' → logprob: -2.825568675994873
    7. '(sum' → logprob: -3.575568675994873
    8. '(' → logprob: -4.450568675994873
    9. 'max' → logprob: -5.200568675994873
    10. ' ' → logprob: -6.075568675994873

Token 102: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.9862216504407115e-05
    2. 'a' → logprob: -10.875020027160645
    3. '(a' → logprob: -15.375020027160645
    4. '_' → logprob: -15.500020027160645
    5. '_A' → logprob: -16.125019073486328
    6. 'A' → logprob: -16.500019073486328
    7. '/' → logprob: -17.000019073486328
    8. '_ai' → logprob: -17.625019073486328
    9. '_/' → logprob: -17.750019073486328
    10. '_i' → logprob: -18.000019073486328

Token 103: ' /' (ID: 820)
  Prédit: '/N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/N' → logprob: -1.011998176574707
    2. '/' → logprob: -1.136998176574707
    3. ' /' → logprob: -1.511998176574707
    4. '//' → logprob: -2.511998176574707
    5. '/M' → logprob: -5.261998176574707
    6. ' //' → logprob: -5.636998176574707
    7. '/n' → logprob: -6.636998176574707
    8. '*' → logprob: -6.761998176574707
    9. ' ' → logprob: -7.636998176574707
    10. ' *' → logprob: -8.574498176574707

Token 104: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0065241181291639805
    2. 'M' → logprob: -5.131524085998535
    3. '2' → logprob: -8.006524085998535
    4. ' N' → logprob: -8.631524085998535
    5. 'len' → logprob: -10.006524085998535
    6. '(' → logprob: -10.631524085998535
    7. ' ' → logprob: -12.506524085998535
    8. ' M' → logprob: -12.881524085998535
    9. '4' → logprob: -13.631524085998535
    10. '(N' → logprob: -13.631524085998535

Token 105: '4' (ID: 19)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0013826170470565557
    2. 'M' → logprob: -6.626382827758789
    3. '2' → logprob: -10.501382827758789
    4. ' N' → logprob: -10.751382827758789
    5. 'len' → logprob: -12.126382827758789
    6. ' ' → logprob: -14.751382827758789
    7. '(' → logprob: -15.126382827758789
    8. ')' → logprob: -15.376382827758789
    9. '(N' → logprob: -15.501382827758789
    10. '4' → logprob: -15.751382827758789

Token 106: '*M' (ID: 151552)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6094135046005249
    2. '*N' → logprob: -1.359413504600525
    3. ' *' → logprob: -1.734413504600525
    4. 'N' → logprob: -4.1094136238098145
    5. ' N' → logprob: -6.4844136238098145
    6. ',' → logprob: -6.7344136238098145
    7. '),' → logprob: -6.7344136238098145
    8. '*M' → logprob: -6.8594136238098145
    9. '0' → logprob: -7.6094136238098145
    10. ')' → logprob: -7.8594136238098145

Token 107: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.42970940470695496
    2. ',' → logprob: -1.0547094345092773
    3. ')' → logprob: -8.179709434509277
    4. ' ),' → logprob: -8.554709434509277
    5. ' ,' → logprob: -8.929709434509277
    6. ',),' → logprob: -9.304709434509277
    7. '0' → logprob: -9.804709434509277
    8. ')),' → logprob: -10.054709434509277
    9. '1' → logprob: -10.179709434509277
    10. '2' → logprob: -10.304709434509277

Token 108: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.30543026328086853
    2. ' enumerate' → logprob: -1.430430293083191
    3. 'zip' → logprob: -4.0554304122924805
    4. ' zip' → logprob: -5.0554304122924805
    5. ' ' → logprob: -9.43043041229248
    6. '   ' → logprob: -9.80543041229248
    7. 'en' → logprob: -10.93043041229248
    8. 'list' → logprob: -10.93043041229248
    9. '  ' → logprob: -10.93043041229248
    10. '    ' → logprob: -11.05543041229248

Token 109: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0004094619944225997
    2. 'A' → logprob: -7.8754096031188965
    3. '(' → logprob: -11.125409126281738
    4. ',A' → logprob: -11.875409126281738
    5. ',' → logprob: -12.500409126281738
    6. ')' → logprob: -13.750409126281738
    7. '(N' → logprob: -14.125409126281738
    8. ')(' → logprob: -14.375409126281738
    9. '(a' → logprob: -14.875409126281738
    10. ' A' → logprob: -14.875409126281738

Token 110: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0016462645726278424
    2. ')' → logprob: -6.626646041870117
    3. ',' → logprob: -8.876646041870117
    4. '))' → logprob: -9.626646041870117
    5. ')));' → logprob: -10.376646041870117
    6. ')))
' → logprob: -10.501646041870117
    7. '))))' → logprob: -10.876646041870117
    8. ' ' → logprob: -11.126646041870117
    9. '),' → logprob: -11.501646041870117
    10. ')))

' → logprob: -11.876646041870117

Token 111: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039625074714422226
    2. ',' → logprob: -3.7896251678466797
    3. '<|end|>' → logprob: -4.91462516784668
    4. ':' → logprob: -6.16462516784668
    5. '(' → logprob: -6.91462516784668
    6. ',
' → logprob: -7.03962516784668
    7. '0' → logprob: -7.28962516784668
    8. '
' → logprob: -7.41462516784668
    9. '),' → logprob: -7.53962516784668
    10. ',:)' → logprob: -7.53962516784668

Token 112: ' Util' (ID: 13564)
  Prédit: 'qual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qual' → logprob: -0.5183895230293274
    2. 'sorted' → logprob: -1.6433894634246826
    3. 'qualified' → logprob: -2.2683894634246826
    4. 'for' → logprob: -3.5183894634246826
    5. 'quals' → logprob: -4.268389701843262
    6. 'print' → logprob: -4.268389701843262
    7. 'indices' → logprob: -4.643389701843262
    8. ' qualifiers' → logprob: -5.268389701843262
    9. 'keys' → logprob: -5.518389701843262
    10. '[' → logprob: -5.643389701843262

Token 113: 'isation' (ID: 6993)
  Prédit: 'isateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isateur' → logprob: -0.4564255177974701
    2. 'isation' → logprob: -1.4564255475997925
    3. 's' → logprob: -2.331425428390503
    4. 'z' → logprob: -5.206425666809082
    5. 'ation' → logprob: -5.331425666809082
    6. 'ization' → logprob: -5.456425666809082
    7. 'is' → logprob: -5.581425666809082
    8. 'sage' → logprob: -6.081425666809082
    9. '#' → logprob: -6.331425666809082
    10. '```' → logprob: -6.456425666809082

Token 114: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3590399920940399
    2. ' for' → logprob: -1.9840400218963623
    3. 'qual' → logprob: -2.3590400218963623
    4. 'print' → logprob: -3.3590400218963623
    5. ' qualifiers' → logprob: -4.484039783477783
    6. 'qualified' → logprob: -4.734039783477783
    7. '<|end|>' → logprob: -5.984039783477783
    8. 'indices' → logprob: -6.109039783477783
    9. '[' → logprob: -6.984039783477783
    10. 'sorted' → logprob: -6.984039783477783

Token 115: ' la' (ID: 557)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.6792137026786804
    2. 'item' → logprob: -1.3042137622833252
    3. 'len' → logprob: -2.304213762283325
    4. 'qual' → logprob: -3.304213762283325
    5. 'map' → logprob: -3.804213762283325
    6. 'list' → logprob: -3.804213762283325
    7. 'qualified' → logprob: -4.679213523864746
    8. 'max' → logprob: -4.804213523864746
    9. 'sum' → logprob: -5.179213523864746
    10. 'min' → logprob: -5.179213523864746

Token 116: ' somme' (ID: 64484)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.6780481934547424
    2. 'len' → logprob: -1.1780481338500977
    3. 'max' → logprob: -2.4280481338500977
    4. 'sum' → logprob: -4.178048133850098
    5. 'enumer' → logprob: -4.428048133850098
    6. 'print' → logprob: -4.428048133850098
    7. 'min' → logprob: -4.553048133850098
    8. '[len' → logprob: -4.928048133850098
    9. 'item' → logprob: -5.053048133850098
    10. 'filter' → logprob: -5.678048133850098

Token 117: ' des' (ID: 731)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.9481943845748901
    2. '(sum' → logprob: -1.3231943845748901
    3. '(' → logprob: -1.9481943845748901
    4. 'print' → logprob: -2.1981945037841797
    5. 'result' → logprob: -3.0731945037841797
    6. 'qual' → logprob: -4.57319450378418
    7. '(len' → logprob: -5.32319450378418
    8. '(
' → logprob: -5.32319450378418
    9. '_' → logprob: -5.57319450378418
    10. 'qualified' → logprob: -6.19819450378418

Token 118: ' bool' (ID: 3792)
  Prédit: 'qual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qual' → logprob: -0.18514564633369446
    2. 'len' → logprob: -3.060145616531372
    3. '1' → logprob: -3.810145616531372
    4. 'map' → logprob: -3.810145616531372
    5. '[' → logprob: -4.060145854949951
    6. '[i' → logprob: -4.810145854949951
    7. 'i' → logprob: -4.935145854949951
    8. 'x' → logprob: -4.935145854949951
    9. 'ia' → logprob: -5.435145854949951
    10. '[val' → logprob: -5.560145854949951

Token 119: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.035135895013809204
    2. '[' → logprob: -4.035135746002197
    3. 'ean' → logprob: -4.785135746002197
    4. 'eens' → logprob: -5.910135746002197
    5. 'éan' → logprob: -6.035135746002197
    6. 'en' → logprob: -7.535135746002197
    7. '()' → logprob: -8.285136222839355
    8. 'e' → logprob: -8.410136222839355
    9. '(' → logprob: -8.410136222839355
    10. 'es' → logprob: -8.535136222839355

Token 120: 'ens' (ID: 696)
  Prédit: 'ens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ens' → logprob: -1.0366524457931519
    2. 'en' → logprob: -1.6616524457931519
    3. 'an' → logprob: -1.9116524457931519
    4. 'ans' → logprob: -1.9116524457931519
    5. 'ennes' → logprob: -2.1616525650024414
    6. 'n' → logprob: -4.161652565002441
    7. 'enne' → logprob: -4.786652565002441
    8. 'enes' → logprob: -5.411652565002441
    9. 'ènes' → logprob: -5.536652565002441
    10. 'es' → logprob: -5.911652565002441

Token 121: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26995378732681274
    2. 'count' → logprob: -2.019953727722168
    3. 'result' → logprob: -2.769953727722168
    4. 'sum' → logprob: -4.394953727722168
    5. 'qualified' → logprob: -4.519953727722168
    6. 'answer' → logprob: -4.769953727722168
    7. 'qual' → logprob: -5.769953727722168
    8. 'ans' → logprob: -6.144953727722168
    9. ' print' → logprob: -7.269953727722168
    10. 'q' → logprob: -7.269953727722168

Token 122: ' compter' (ID: 81694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010682971915230155
    2. ' print' → logprob: -7.501068115234375
    3. 'len' → logprob: -7.876068115234375
    4. 'if' → logprob: -9.626068115234375
    5. 'pr' → logprob: -10.376068115234375
    6. ' len' → logprob: -11.626068115234375
    7. 'im' → logprob: -12.001068115234375
    8. 'aff' → logprob: -12.251068115234375
    9. 'return' → logprob: -12.626068115234375
    10. ' if' → logprob: -12.876068115234375

Token 123: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017687780782580376
    2. 'if' → logprob: -4.392687797546387
    3. 'len' → logprob: -6.017687797546387
    4. ' print' → logprob: -7.767687797546387
    5. 'for' → logprob: -7.892687797546387
    6. 'qual' → logprob: -7.892687797546387
    7. ' if' → logprob: -7.892687797546387
    8. 'range' → logprob: -8.017687797546387
    9. ')' → logprob: -8.142687797546387
    10. 'sum' → logprob: -9.267687797546387

Token 124: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009635086171329021
    2. 'if' → logprob: -5.259634971618652
    3. 'sum' → logprob: -6.634634971618652
    4. 'qualified' → logprob: -6.884634971618652
    5. 'result' → logprob: -7.259634971618652
    6. 'len' → logprob: -7.884634971618652
    7. 'qual' → logprob: -8.009634971618652
    8. 'count' → logprob: -8.009634971618652
    9. 'pass' → logprob: -9.509634971618652
    10. 'ans' → logprob: -9.884634971618652

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1429317593574524
    2. '=' → logprob: -2.0179316997528076
    3. '_' → logprob: -8.892931938171387
    4. 's' → logprob: -9.642931938171387
    5. ' ' → logprob: -10.642931938171387
    6. ')' → logprob: -12.142931938171387
    7. '_count' → logprob: -12.392931938171387
    8. ' ' → logprob: -12.517931938171387
    9. '(' → logprob: -13.267931938171387
    10. '=int' → logprob: -13.642931938171387

Token 126: ' ['' (ID: 5140)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.448002427816391
    2. 'sum' → logprob: -1.4480024576187134
    3. ' len' → logprob: -2.323002338409424
    4. ' sum' → logprob: -3.573002338409424
    5. '(len' → logprob: -12.823002815246582
    6. 'str' → logprob: -13.448002815246582
    7. ' ' → logprob: -14.198002815246582
    8. '   ' → logprob: -14.573002815246582
    9. '  ' → logprob: -14.823002815246582
    10. '(sum' → logprob: -15.198002815246582

Token 127: 'No' (ID: 3160)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.033046841621398926
    2. ''' → logprob: -3.7830467224121094
    3. '"' → logprob: -5.658046722412109
    4. ' Yes' → logprob: -6.908046722412109
    5. ''A' → logprob: -6.908046722412109
    6. 'Y' → logprob: -7.283046722412109
    7. 'o' → logprob: -7.408046722412109
    8. 'YES' → logprob: -7.658046722412109
    9. '.' → logprob: -8.15804672241211
    10. '('' → logprob: -8.28304672241211

Token 128: '','' (ID: 4074)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.6865957379341125
    2. ''' → logprob: -0.9365957379341125
    3. '']' → logprob: -2.4365956783294678
    4. '',' → logprob: -4.436595916748047
    5. '','' → logprob: -5.811595916748047
    6. 'te' → logprob: -7.686595916748047
    7. 'de' → logprob: -8.061595916748047
    8. 'n' → logprob: -8.186595916748047
    9. 't' → logprob: -8.686595916748047
    10. '\n' → logprob: -9.186595916748047

Token 129: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.014230260625481606
    2. ' Yes' → logprob: -4.264230251312256
    3. ''' → logprob: -10.014230728149414
    4. ' yes' → logprob: -11.389230728149414
    5. 'YES' → logprob: -12.389230728149414
    6. 'Ye' → logprob: -13.389230728149414
    7. 'yes' → logprob: -13.514230728149414
    8. 'Qualified' → logprob: -14.014230728149414
    9. 'e' → logprob: -14.639230728149414
    10. ' '' → logprob: -15.389230728149414

Token 130: '']' (ID: 1089)
  Prédit: '']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''][' → logprob: -0.028373707085847855
    2. '']['' → logprob: -3.7783737182617188
    3. '']' → logprob: -5.528373718261719
    4. ''' → logprob: -7.278373718261719
    5. ''[' → logprob: -8.028373718261719
    6. '][' → logprob: -9.903373718261719
    7. ']['' → logprob: -10.028373718261719
    8. '"][' → logprob: -11.028373718261719
    9. '')[' → logprob: -11.778373718261719
    10. ''][$' → logprob: -12.653373718261719

Token 131: '[(' (ID: 20542)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5767756700515747
    2. '[result' → logprob: -0.8267756700515747
    3. '[int' → logprob: -7.576775550842285
    4. '[len' → logprob: -9.201775550842285
    5. '[(' → logprob: -9.201775550842285
    6. '[
' → logprob: -10.326775550842285
    7. '[min' → logprob: -10.701775550842285
    8. 'result' → logprob: -10.951775550842285
    9. ' [' → logprob: -11.951775550842285
    10. '[[' → logprob: -11.951775550842285

Token 132: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.943783253314905e-05
    2. ' len' → logprob: -9.750059127807617
    3. '(len' → logprob: -14.250059127807617
    4. 'sum' → logprob: -14.750059127807617
    5. ')' → logprob: -18.000059127807617
    6. '=len' → logprob: -18.625059127807617
    7. ' ' → logprob: -19.875059127807617
    8. '2' → logprob: -20.000059127807617
    9. '	len' → logprob: -20.000059127807617
    10. '1' → logprob: -20.125059127807617

Token 133: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3080716346157715e-05
    2. ')' → logprob: -11.375022888183594
    3. 'qual' → logprob: -11.875022888183594
    4. ' (' → logprob: -12.625022888183594
    5. ')(' → logprob: -14.250022888183594
    6. '((' → logprob: -15.750022888183594
    7. '(
' → logprob: -16.625022888183594
    8. 'quals' → logprob: -17.250022888183594
    9. '(Q' → logprob: -17.250022888183594
    10. '```' → logprob: -17.250022888183594

Token 134: 'qual' (ID: 6129)
  Prédit: 'qual'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qual' → logprob: -4.36574100604048e-06
    2. ' qualifiers' → logprob: -12.875004768371582
    3. ')' → logprob: -13.625004768371582
    4. 'quals' → logprob: -14.625004768371582
    5. '.qual' → logprob: -16.875003814697266
    6. 'qualified' → logprob: -17.000003814697266
    7. '(' → logprob: -18.750003814697266
    8. 'quant' → logprob: -18.875003814697266
    9. 'qualities' → logprob: -19.125003814697266
    10. '[' → logprob: -19.375003814697266

Token 135: 'ifiers' (ID: 19873)
  Prédit: 'ifiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiers' → logprob: -0.004196998197585344
    2. 'iers' → logprob: -5.504197120666504
    3. 'ifers' → logprob: -9.254197120666504
    4. 'fi' → logprob: -11.129197120666504
    5. 'ifi' → logprob: -11.879197120666504
    6. 'ers' → logprob: -14.004197120666504
    7. 'ifie' → logprob: -16.254196166992188
    8. 'i' → logprob: -16.379196166992188
    9. 'liers' → logprob: -17.004196166992188
    10. 'ifier' → logprob: -17.004196166992188

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5504187345504761
    2. ')>=' → logprob: -1.175418734550476
    3. '>=' → logprob: -2.4254188537597656
    4. ' >=' → logprob: -3.6754188537597656
    5. ' )' → logprob: -7.675418853759766
    6. ']>=' → logprob: -8.175418853759766
    7. ')>' → logprob: -10.300418853759766
    8. '>' → logprob: -11.300418853759766
    9. ' ' → logprob: -12.050418853759766
    10. '()' → logprob: -12.425418853759766

Token 137: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2928357720375061
    2. ' >=' → logprob: -1.4178357124328613
    3. ')>=' → logprob: -5.042835712432861
    4. ')' → logprob: -5.292835712432861
    5. ']>=' → logprob: -9.66783618927002
    6. ' ' → logprob: -10.16783618927002
    7. '>' → logprob: -10.66783618927002
    8. ' )' → logprob: -11.91783618927002
    9. '```' → logprob: -14.54283618927002
    10. ']' → logprob: -14.66783618927002

Token 138: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.02983645536005497
    2. ' M' → logprob: -3.529836416244507
    3. ' ' → logprob: -10.154836654663086
    4. 'N' → logprob: -10.279836654663086
    5. '   ' → logprob: -12.154836654663086
    6. 'K' → logprob: -12.654836654663086
    7. '  ' → logprob: -12.904836654663086
    8. ')' → logprob: -14.904836654663086
    9. ' N' → logprob: -15.029836654663086
    10. '    ' → logprob: -15.029836654663086

Token 139: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005697138840332627
    2. ')' → logprob: -7.875569820404053
    3. ' )' → logprob: -9.125569343566895
    4. '):' → logprob: -9.750569343566895
    5. ']' → logprob: -11.375569343566895
    6. ')]
' → logprob: -12.375569343566895
    7. ':' → logprob: -12.875569343566895
    8. ')]

' → logprob: -13.875569343566895
    9. ')].' → logprob: -14.625569343566895
    10. ')
' → logprob: -14.875569343566895

Token 140: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002194398082792759
    2. '
' → logprob: -6.127194404602051
    3. ' print' → logprob: -12.12719440460205
    4. '```' → logprob: -13.75219440460205
    5. 'for' → logprob: -14.62719440460205
    6. ')
' → logprob: -14.62719440460205
    7. '
' → logprob: -14.75219440460205
    8. ']
' → logprob: -15.25219440460205
    9. ']' → logprob: -15.37719440460205
    10. '  
' → logprob: -15.50219440460205

Token 141: ' Impression' (ID: 150658)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. ' print' → logprob: -13.250001907348633
    3. 'pr' → logprob: -23.125001907348633
    4. 'prin' → logprob: -23.250001907348633
    5. 'result' → logprob: -23.500001907348633
    6. '```' → logprob: -24.625001907348633
    7. 'prit' → logprob: -26.250001907348633
    8. 'output' → logprob: -26.500001907348633
    9. 'Print' → logprob: -26.750001907348633
    10. '#print' → logprob: -26.750001907348633

Token 142: ' ingén' (ID: 146009)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9612554907798767
    2. '(result' → logprob: -1.2112555503845215
    3. '(' → logprob: -1.4612555503845215
    4. '(print' → logprob: -2.4612555503845215
    5. '()' → logprob: -6.3362555503845215
    6. 'result' → logprob: -7.9612555503845215
    7. '(
' → logprob: -8.336255073547363
    8. '(output' → logprob: -10.461255073547363
    9. ' print' → logprob: -10.586255073547363
    10. ')' → logprob: -10.961255073547363

Token 143: 'ieuse' (ID: 70987)
  Prédit: 'ieuse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieuse' → logprob: -0.0058887372724711895
    2. 't' → logprob: -5.630888938903809
    3. 'e' → logprob: -7.380888938903809
    4. 'te' → logprob: -7.505888938903809
    5. 'ieux' → logprob: -7.630888938903809
    6. 'ie' → logprob: -9.130888938903809
    7. 'rie' → logprob: -9.255888938903809
    8. 'nie' → logprob: -9.755888938903809
    9. 'ieur' → logprob: -9.880888938903809
    10. 'ante' → logprob: -10.630888938903809

Token 144: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002552592661231756
    2. '(print' → logprob: -6.002552509307861
    3. '(' → logprob: -9.62755298614502
    4. '(
' → logprob: -12.50255298614502
    5. ' print' → logprob: -12.62755298614502
    6. '(result' → logprob: -12.75255298614502
    7. '```' → logprob: -14.25255298614502
    8. 'result' → logprob: -15.25255298614502
    9. '
' → logprob: -16.252552032470703
    10. ' (' → logprob: -17.502552032470703

Token 145: ' utilisant' (ID: 92474)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06744685024023056
    2. '```' → logprob: -3.5674469470977783
    3. 'python' → logprob: -4.317446708679199
    4. 'f' → logprob: -4.817446708679199
    5. ' print' → logprob: -5.567446708679199
    6. 'one' → logprob: -5.942446708679199
    7. 'code' → logprob: -6.942446708679199
    8. 'une' → logprob: -7.192446708679199
    9. 'put' → logprob: -7.442446708679199
    10. 'fin' → logprob: -7.442446708679199

Token 146: ' join' (ID: 5863)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003779051126912236
    2. 'result' → logprob: -6.50377893447876
    3. '(print' → logprob: -6.62877893447876
    4. '(result' → logprob: -7.37877893447876
    5. '```' → logprob: -8.253779411315918
    6. '(' → logprob: -10.753779411315918
    7. '(f' → logprob: -11.128779411315918
    8. '(
' → logprob: -11.503779411315918
    9. ' print' → logprob: -11.753779411315918
    10. 'f' → logprob: -11.753779411315918

Token 147: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020342117932159454
    2. '(print' → logprob: -9.125203132629395
    3. '('\' → logprob: -9.750203132629395
    4. '("\' → logprob: -10.625203132629395
    5. '```' → logprob: -12.375203132629395
    6. '(' → logprob: -12.875203132629395
    7. '
' → logprob: -12.875203132629395
    8. '('' → logprob: -13.875203132629395
    9. ' print' → logprob: -14.125203132629395
    10. '(
' → logprob: -15.125203132629395

Token 148: ' slicing' (ID: 161002)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003252692986279726
    2. 'str' → logprob: -7.0032525062561035
    3. ''\' → logprob: -7.5032525062561035
    4. ' print' → logprob: -7.6282525062561035
    5. ''' → logprob: -7.8782525062561035
    6. '"' → logprob: -8.253252983093262
    7. '"\' → logprob: -8.378252983093262
    8. '```' → logprob: -8.628252983093262
    9. '''' → logprob: -9.378252983093262
    10. '``' → logprob: -9.878252983093262

Token 149: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011117222311440855
    2. '('\' → logprob: -9.87511157989502
    3. '(print' → logprob: -10.12511157989502
    4. '```' → logprob: -11.50011157989502
    5. '("\' → logprob: -12.62511157989502
    6. '(' → logprob: -13.12511157989502
    7. '('' → logprob: -13.50011157989502
    8. ' print' → logprob: -13.62511157989502
    9. 'result' → logprob: -14.87511157989502
    10. '
' → logprob: -15.25011157989502

Token 150: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. ' print' → logprob: -13.625001907348633
    3. '```' → logprob: -15.500001907348633
    4. 'result' → logprob: -16.375001907348633
    5. '(print' → logprob: -16.875001907348633
    6. '''.' → logprob: -17.000001907348633
    7. ''' → logprob: -17.625001907348633
    8. ''\' → logprob: -18.625001907348633
    9. '"' → logprob: -18.750001907348633
    10. '#print' → logprob: -18.875001907348633

Token 151: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.025450777262449265
    2. '(' → logprob: -4.025450706481934
    3. '(result' → logprob: -5.275450706481934
    4. '("' → logprob: -6.525450706481934
    5. '(('' → logprob: -7.900450706481934
    6. '("("' → logprob: -9.025450706481934
    7. '(*' → logprob: -9.400450706481934
    8. '(join' → logprob: -10.025450706481934
    9. '("")' → logprob: -11.275450706481934
    10. '((' → logprob: -11.775450706481934

Token 152: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0200282521545887
    2. ''' → logprob: -4.145028114318848
    3. 'result' → logprob: -6.270028114318848
    4. '{}'.' → logprob: -7.020028114318848
    5. ''+' → logprob: -7.520028114318848
    6. '')' → logprob: -8.645028114318848
    7. ' '.' → logprob: -8.895028114318848
    8. '''.' → logprob: -9.020028114318848
    9. '{}' → logprob: -9.520028114318848
    10. '',' → logprob: -10.145028114318848

Token 153: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -7.822646693966817e-06
    2. 'j' → logprob: -12.875007629394531
    3. 'jo' → logprob: -12.875007629394531
    4. ' join' → logprob: -13.375007629394531
    5. ''.' → logprob: -14.625007629394531
    6. '''.' → logprob: -15.000007629394531
    7. '```' → logprob: -15.750007629394531
    8. 'print' → logprob: -16.37500762939453
    9. ''' → logprob: -17.37500762939453
    10. '(join' → logprob: -17.50000762939453

Token 154: '([' (ID: 5194)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.38949668407440186
    2. 'result' → logprob: -1.1394966840744019
    3. '[result' → logprob: -6.764496803283691
    4. '(str' → logprob: -7.139496803283691
    5. '([' → logprob: -7.889496803283691
    6. '(['' → logprob: -9.889496803283691
    7. '(list' → logprob: -9.889496803283691
    8. 'list' → logprob: -10.514496803283691
    9. '[str' → logprob: -10.639496803283691
    10. '(map' → logprob: -10.764496803283691

Token 155: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02051829919219017
    2. 'str' → logprob: -4.0205183029174805
    3. 'c' → logprob: -6.6455183029174805
    4. 'res' → logprob: -8.02051830291748
    5. 'r' → logprob: -8.77051830291748
    6. 'f' → logprob: -8.89551830291748
    7. 'chr' → logprob: -9.02051830291748
    8. 's' → logprob: -9.39551830291748
    9. 'char' → logprob: -10.02051830291748
    10. 'x' → logprob: -10.14551830291748

Token 156: '[i' (ID: 1768)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.18989454209804535
    2. '][:' → logprob: -2.564894437789917
    3. ':' → logprob: -3.314894437789917
    4. '[:' → logprob: -3.689894437789917
    5. '[' → logprob: -4.189894676208496
    6. '][' → logprob: -4.814894676208496
    7. '])' → logprob: -5.439894676208496
    8. ']' → logprob: -6.314894676208496
    9. '[:]' → logprob: -6.439894676208496
    10. '[:-' → logprob: -7.564894676208496

Token 157: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2984524071216583
    2. ':]' → logprob: -1.548452377319336
    3. ':' → logprob: -4.048452377319336
    4. 'i' → logprob: -4.298452377319336
    5. ':i' → logprob: -4.548452377319336
    6. ' :]' → logprob: -6.423452377319336
    7. '::' → logprob: -7.423452377319336
    8. ' i' → logprob: -7.673452377319336
    9. '0' → logprob: -8.298452377319336
    10. ' ]' → logprob: -8.798452377319336

Token 158: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20170462131500244
    2. ':i' → logprob: -2.701704502105713
    3. ':' → logprob: -3.076704502105713
    4. 'for' → logprob: -3.701704502105713
    5. 'i' → logprob: -3.951704502105713
    6. ':]' → logprob: -4.451704502105713
    7. '[i' → logprob: -5.451704502105713
    8. ' for' → logprob: -5.701704502105713
    9. '::' → logprob: -6.076704502105713
    10. ' i' → logprob: -6.826704502105713

Token 159: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.277341365814209
    2. ' i' → logprob: -2.027341365814209
    3. ' range' → logprob: -2.902341365814209
    4. 'range' → logprob: -2.902341365814209
    5. ' in' → logprob: -7.527341365814209
    6. 'in' → logprob: -9.277341842651367
    7. ' ' → logprob: -10.027341842651367
    8. '[' → logprob: -10.652341842651367
    9. '  ' → logprob: -11.527341842651367
    10. '[i' → logprob: -12.152341842651367

Token 160: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17844133079051971
    2. ' range' → logprob: -2.053441286087036
    3. '(range' → logprob: -3.678441286087036
    4. ' in' → logprob: -5.053441524505615
    5. '(len' → logprob: -7.053441524505615
    6. 'in' → logprob: -7.428441524505615
    7. 'slice' → logprob: -7.678441524505615
    8. ' ' → logprob: -8.053441047668457
    9. '[:]' → logprob: -8.553441047668457
    10. 'len' → logprob: -8.928441047668457

Token 161: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05211060121655464
    2. ' range' → logprob: -3.0521106719970703
    3. '[' → logprob: -5.80211067199707
    4. 'slice' → logprob: -7.80211067199707
    5. '(range' → logprob: -10.55211067199707
    6. 'len' → logprob: -11.05211067199707
    7. '(' → logprob: -11.17711067199707
    8. ' [' → logprob: -11.67711067199707
    9. '[-' → logprob: -12.30211067199707
    10. ' slice' → logprob: -12.42711067199707

Token 162: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.12696978449821472
    2. '(' → logprob: -2.126969814300537
    3. 'len' → logprob: -10.251969337463379
    4. '2' → logprob: -13.501969337463379
    5. '((' → logprob: -13.626969337463379
    6. '1' → logprob: -13.751969337463379
    7. ' (' → logprob: -13.751969337463379
    8. ' len' → logprob: -14.501969337463379
    9. '(-' → logprob: -14.876969337463379
    10. '()' → logprob: -15.501969337463379

Token 163: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00010604646377032623
    2. 'result' → logprob: -9.875105857849121
    3. '(' → logprob: -10.500105857849121
    4. '('' → logprob: -11.125105857849121
    5. 's' → logprob: -12.500105857849121
    6. '(res' → logprob: -12.625105857849121
    7. '(results' → logprob: -14.000105857849121
    8. '("' → logprob: -14.125105857849121
    9. '(s' → logprob: -14.500105857849121
    10. '[result' → logprob: -14.625105857849121

Token 164: '))' (ID: 915)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3210342228412628
    2. ')])' → logprob: -1.8210341930389404
    3. '))' → logprob: -2.1960341930389404
    4. ')' → logprob: -6.6960344314575195
    5. '])' → logprob: -9.07103443145752
    6. ' )' → logprob: -9.69603443145752
    7. '-' → logprob: -11.07103443145752
    8. '))))' → logprob: -11.07103443145752
    9. ')))' → logprob: -11.44603443145752
    10. ' ))' → logprob: -11.69603443145752

Token 165: ' if' (ID: 538)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.044279005378484726
    2. '])' → logprob: -3.794279098510742
    3. ')])' → logprob: -3.919279098510742
    4. ')]' → logprob: -7.044279098510742
    5. '))' → logprob: -10.419279098510742
    6. '])]' → logprob: -11.044279098510742
    7. '])))' → logprob: -11.294279098510742
    8. ']))
' → logprob: -11.419279098510742
    9. ')' → logprob: -12.294279098510742
    10. ']' → logprob: -12.544279098510742

Token 166: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09585674107074738
    2. ' i' → logprob: -2.9708566665649414
    3. 'len' → logprob: -3.5958566665649414
    4. 'result' → logprob: -4.970856666564941
    5. ' len' → logprob: -5.970856666564941
    6. '(i' → logprob: -6.595856666564941
    7. 'True' → logprob: -7.470856666564941
    8. ' result' → logprob: -7.595856666564941
    9. ' True' → logprob: -8.595856666564941
    10. '(len' → logprob: -8.720856666564941

Token 167: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3177488148212433
    2. '>=' → logprob: -2.317748785018921
    3. ' ==' → logprob: -2.692748785018921
    4. '])' → logprob: -3.192748785018921
    5. '<len' → logprob: -3.942748785018921
    6. '>' → logprob: -4.3177490234375
    7. ' >=' → logprob: -4.9427490234375
    8. ' <' → logprob: -5.0677490234375
    9. '])]' → logprob: -5.8177490234375
    10. '<' → logprob: -5.8177490234375

Token 168: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007983834482729435
    2. ' ' → logprob: -4.882983684539795
    3. 'len' → logprob: -8.257984161376953
    4. ' len' → logprob: -9.757984161376953
    5. ' -' → logprob: -11.132984161376953
    6. '(len' → logprob: -11.257984161376953
    7. '0' → logprob: -11.632984161376953
    8. ' (' → logprob: -11.757984161376953
    9. '-' → logprob: -11.757984161376953
    10. '(' → logprob: -13.132984161376953

Token 169: 'result' (ID: 2521)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.37561073899269104
    2. 'len' → logprob: -1.2506107091903687
    3. '(len' → logprob: -4.000610828399658
    4. 'int' → logprob: -5.375610828399658
    5. ' ' → logprob: -6.750610828399658
    6. 'result' → logprob: -7.250610828399658
    7. ' len' → logprob: -7.375610828399658
    8. '0' → logprob: -7.875610828399658
    9. '(int' → logprob: -8.3756103515625
    10. '(' → logprob: -8.8756103515625

Token 170: ' ==' (ID: 951)
  Prédit: '.index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.09967314451932907
    2. '==' → logprob: -2.84967303276062
    3. 'index' → logprob: -4.349673271179199
    4. ' ==' → logprob: -4.349673271179199
    5. '1' → logprob: -5.974673271179199
    6. '.find' → logprob: -6.599673271179199
    7. '.' → logprob: -6.724673271179199
    8. ' .' → logprob: -7.099673271179199
    9. '2' → logprob: -7.474673271179199
    10. ' index' → logprob: -7.474673271179199

Token 171: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013457965105772018
    2. ' '' → logprob: -4.388457775115967
    3. '"' → logprob: -7.013457775115967
    4. '['' → logprob: -11.388458251953125
    5. ' ' → logprob: -11.638458251953125
    6. 'result' → logprob: -12.388458251953125
    7. ''A' → logprob: -12.388458251953125
    8. ' "' → logprob: -12.638458251953125
    9. '   ' → logprob: -12.763458251953125
    10. '
' → logprob: -12.888458251953125

Token 172: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.008662432432174683
    2. ''' → logprob: -4.758662223815918
    3. ' Yes' → logprob: -11.008662223815918
    4. 'No' → logprob: -11.508662223815918
    5. '"' → logprob: -11.758662223815918
    6. 'Ye' → logprob: -13.008662223815918
    7. 'YES' → logprob: -13.383662223815918
    8. 'yes' → logprob: -13.633662223815918
    9. '['' → logprob: -14.008662223815918
    10. ' '' → logprob: -14.258662223815918

Token 173: '')' (ID: 1542)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.6384018063545227
    2. ')]' → logprob: -1.013401746749878
    3. ')' → logprob: -2.638401746749878
    4. '')' → logprob: -3.388401746749878
    5. '')]' → logprob: -6.888401985168457
    6. '))' → logprob: -7.013401985168457
    7. '])' → logprob: -8.388401985168457
    8. '-' → logprob: -8.388401985168457
    9. ')")' → logprob: -8.388401985168457
    10. ')-' → logprob: -8.513401985168457

Token 174: ']))' (ID: 20259)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.862234354019165
    2. ')])' → logprob: -0.862234354019165
    3. ']))' → logprob: -1.987234354019165
    4. '])' → logprob: -4.237234115600586
    5. '])]' → logprob: -6.737234115600586
    6. ')' → logprob: -7.362234115600586
    7. '))' → logprob: -7.987234115600586
    8. ']' → logprob: -8.112234115600586
    9. '])))' → logprob: -8.237234115600586
    10. ')])
' → logprob: -8.362234115600586


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 172
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 109
Précision stricte (1ère position): 27.33%
Précision adaptée (1ère position): 27.33%
Précision (top 10): 63.37%
================================================================================
