================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import reduce
from operator import mul
from itertools import product, accumulate, combinations, chain

input = lambda: sys.stdin.readline()

H,W = map(int, input().split())
A = [input().strip() for _ in range(H)]

mod = 998244353

def prod(iterable, start=1):
    return reduce(lambda x, y: (x*y)%mod, iterable, start)

# Calcul concaténé (listes paresseuses, accumulate)
FACT = list(accumulate([1] + list(range(1,21)), lambda x,y:(x*y)%mod))
FACT_INV = list(accumulate([pow(FACT[-1], mod-2, mod)] + list(range(20,0,-1)), lambda x,y:(x*y)%mod))[::-1]

class CombMemoDict(dict):
    def __missing__(self, key):
        a, b = key
        if 0 <= b <= a and a < 21:
            self[key] = FACT[a]*FACT_INV[b]%mod*FACT_INV[a-b]%mod
            return self[key]
        self[key] = 0
        return 0
COMBI = CombMemoDict()

def Combi(a, b):
    return COMBI[(a,b)]

M = max(H, W) + 1
RA = {}

def rect(H_, W_):
    if H_==0 and W_==0: return 1
    if (H_, W_) in RA: return RA[(H_, W_)]
    # DP fabrication par compréhension de liste, triple imbrication
    DP = [[[0,0] for _ in range(W_+1)] for _ in range(H_+1)]
    DP[0][0][0] = DP[0][0][1] = 1
    for h,w,nx in product(range(H_+1), range(W_+1), [0,1]):
        if nx == 0:
            for next_h in range(h+1, H_+1):
                DP[next_h][w][0] = (DP[next_h][w][0] + DP[h][w][1]*FACT_INV[next_h-h]%mod) % mod
        else:
            for next_w in range(w+1, W_+1):
                DP[h][next_w][1] = (DP[h][next_w][1] + DP[h][w][0]*FACT_INV[next_w-w]%mod) % mod
    val = (sum(DP[H_][W_])%mod)*FACT[H_]%mod*FACT[W_]%mod
    RA[(H_, W_)] = RA[(W_, H_)] = val
    return val

CA = {}
def calc(h, w):
    if (h,w) in CA: return CA[(h,w)]
    sol = 0
    # Produit cartésien et somme imbriquée
    for bh, bw in product(range(h+1), range(w+1)):
        sol = (sol + rect(bh, w-bw)*rect(h-bh, bw)%mod*Combi(h, bh)%mod*Combi(w, bw)%mod)%mod
    CA[(h,w)] = sol%mod
    return CA[(h,w)]

# Peuple le cache de CA, inutilement
list(map(lambda ij: calc(*ij), product(range(H+1), range(W+1))))

ANS = rect(H,W)

def bitscount(x):
    # Compte le nombre de bits à 1 de x de façon détournée
    return bin(x).count('1')

# Boucles avec product pour subtilité
for i,j in product(range((1<<H)), range((1<<W))):
    if i==(1<<H)-1 or j==(1<<W)-1: continue
    if any(
        all(A[h][w]==A[h][next(iter(set([w2 for w2 in range(W) if not(j&(1<<w2))])))] for w in range(W) if not(j&(1<<w)))
        for h in range(H) if not(i&(1<<h))
    ): continue
    if any(
        all(A[h][w]==A[next(iter(set([h2 for h2 in range(H) if not(i&(1<<h2))]))][w]) for h in range(H) if not(i&(1<<h)))
        for w in range(W) if not(j&(1<<w))
    ): continue
    HR = bitscount(i)
    WR = bitscount(j)
    ANS = (ANS + CA[(HR,WR)]) % (mod*100) # inutilement grand modulo ici

print(ANS%mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06380220502614975
    2. 'import' → logprob: -2.8138022422790527
    3. '.' → logprob: -7.063802242279053
    4. ' ' → logprob: -7.313802242279053
    5. '_import' → logprob: -8.813801765441895
    6. '.import' → logprob: -10.063801765441895
    7. '	import' → logprob: -10.063801765441895
    8. ' .' → logprob: -10.188801765441895
    9. '_' → logprob: -10.938801765441895
    10. '<|end|>' → logprob: -12.438801765441895

Token 6: ' reduce' (ID: 10389)
  Prédit: ' wraps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wraps' → logprob: -1.0255804061889648
    2. 'wrap' → logprob: -1.2755804061889648
    3. 'partial' → logprob: -1.9005804061889648
    4. ' l' → logprob: -2.525580406188965
    5. ' partial' → logprob: -2.525580406188965
    6. 'l' → logprob: -3.525580406188965
    7. 'reduce' → logprob: -4.025580406188965
    8. ' reduce' → logprob: -5.525580406188965
    9. 'cmp' → logprob: -7.900580406188965
    10. 'cache' → logprob: -8.025580406188965

Token 7: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8878608345985413
    2. '(' → logprob: -1.5128607749938965
    3. '\n' → logprob: -2.0128607749938965
    4. '\' → logprob: -2.2628607749938965
    5. ',' → logprob: -2.6378607749938965
    6. '' → logprob: -4.1378607749938965
    7. ' ' → logprob: -4.5128607749938965
    8. 'def' → logprob: -5.2628607749938965
    9. '.' → logprob: -5.5128607749938965
    10. '[' → logprob: -5.7628607749938965

Token 8: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1875457763671875
    2. ',' → logprob: -2.4375457763671875
    3. '\n' → logprob: -3.4375457763671875
    4. '```' → logprob: -4.0625457763671875
    5. 'def' → logprob: -4.4375457763671875
    6. '\' → logprob: -4.9375457763671875
    7. '.' → logprob: -5.9375457763671875
    8. '[' → logprob: -6.0625457763671875
    9. '

' → logprob: -6.8125457763671875
    10. '
' → logprob: -6.8125457763671875

Token 9: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.3864264488220215
    2. ' itertools' → logprob: -1.8864264488220215
    3. ' math' → logprob: -2.1364264488220215
    4. 'operator' → logprob: -3.6364264488220215
    5. ' collections' → logprob: -4.0114264488220215
    6. ' os' → logprob: -5.7614264488220215
    7. 'math' → logprob: -6.3864264488220215
    8. ' ' → logprob: -7.5114264488220215
    9. 'collections' → logprob: -7.7614264488220215
    10. ' typing' → logprob: -8.13642692565918

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06291413307189941
    2. 'import' → logprob: -2.8129141330718994
    3. '.' → logprob: -7.43791389465332
    4. ' ' → logprob: -8.56291389465332
    5. ' .' → logprob: -9.06291389465332
    6. '	import' → logprob: -11.06291389465332
    7. '<|end|>' → logprob: -11.31291389465332
    8. '.import' → logprob: -11.81291389465332
    9. '_import' → logprob: -12.18791389465332
    10. '-import' → logprob: -13.43791389465332

Token 11: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.20003972947597504
    2. ' import' → logprob: -2.2000396251678467
    3. ' mul' → logprob: -3.3250396251678467
    4. ' ' → logprob: -3.5750396251678467
    5. 'add' → logprob: -5.950039863586426
    6. 'import' → logprob: -6.450039863586426
    7. ' item' → logprob: -7.325039863586426
    8. 'mul' → logprob: -7.700039863586426
    9. ' icon' → logprob: -8.825039863586426
    10. ' sub' → logprob: -9.325039863586426

Token 12: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0760316848754883
    2. '(' → logprob: -1.4510316848754883
    3. '

' → logprob: -2.0760316848754883
    4. ',' → logprob: -2.3260316848754883
    5. '
' → logprob: -3.4510316848754883
    6. '\' → logprob: -3.7010316848754883
    7. 'import' → logprob: -3.8260316848754883
    8. 'def' → logprob: -3.9510316848754883
    9. ' ' → logprob: -4.326031684875488
    10. '(
' → logprob: -4.326031684875488

Token 13: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14066630601882935
    2. 'def' → logprob: -2.8906662464141846
    3. ',' → logprob: -3.6406662464141846
    4. '#' → logprob: -3.7656662464141846
    5. '(
' → logprob: -4.265666484832764
    6. '\' → logprob: -6.015666484832764
    7. '.' → logprob: -6.140666484832764
    8. '\n' → logprob: -6.390666484832764
    9. '*' → logprob: -7.140666484832764
    10. '(

' → logprob: -7.265666484832764

Token 14: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.24187879264354706
    2. 'math' → logprob: -1.7418787479400635
    3. ' itertools' → logprob: -3.2418787479400635
    4. ' functools' → logprob: -8.366878509521484
    5. ' ' → logprob: -9.241878509521484
    6. 'it' → logprob: -9.866878509521484
    7. 'operator' → logprob: -10.366878509521484
    8. 'collections' → logprob: -10.866878509521484
    9. '_math' → logprob: -10.866878509521484
    10. ' collections' → logprob: -11.116878509521484

Token 15: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9869283437728882
    2. ' import' → logprob: -1.1119283437728882
    3. '.' → logprob: -1.2369283437728882
    4. ' .' → logprob: -5.111928462982178
    5. '.import' → logprob: -6.486928462982178
    6. '.im' → logprob: -9.23692798614502
    7. '_import' → logprob: -9.48692798614502
    8. '	import' → logprob: -9.73692798614502
    9. ' ' → logprob: -10.11192798614502
    10. '```' → logprob: -10.11192798614502

Token 16: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.5378392934799194
    2. 'per' → logprob: -1.9128392934799194
    3. 'com' → logprob: -2.037839412689209
    4. ' product' → logprob: -3.162839412689209
    5. 'count' → logprob: -3.412839412689209
    6. ' permutations' → logprob: -3.787839412689209
    7. 'acc' → logprob: -3.912839412689209
    8. ' combinations' → logprob: -5.162839412689209
    9. 'chain' → logprob: -5.412839412689209
    10. 'is' → logprob: -6.162839412689209

Token 17: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6336761713027954
    2. '\n' → logprob: -1.7586761713027954
    3. 'def' → logprob: -2.133676052093506
    4. '\' → logprob: -2.633676052093506
    5. '(
' → logprob: -3.508676052093506
    6. ',' → logprob: -4.758676052093506
    7. '[' → logprob: -4.883676052093506
    8. '.' → logprob: -4.883676052093506
    9. '```' → logprob: -4.883676052093506
    10. 'import' → logprob: -4.883676052093506

Token 18: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.6582789421081543
    2. 'count' → logprob: -2.0332789421081543
    3. 'repeat' → logprob: -2.1582789421081543
    4. 'st' → logprob: -2.7832789421081543
    5. 'per' → logprob: -3.1582789421081543
    6. 'chain' → logprob: -3.7832789421081543
    7. 'cycle' → logprob: -3.9082789421081543
    8. 'acc' → logprob: -4.033278942108154
    9. ' permutations' → logprob: -4.033278942108154
    10. 'is' → logprob: -4.533278942108154

Token 19: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8296120166778564
    2. '(' → logprob: -1.8296120166778564
    3. '
' → logprob: -2.0796120166778564
    4. ',' → logprob: -2.3296120166778564
    5. '(
' → logprob: -3.2046120166778564
    6. '\n' → logprob: -3.4546120166778564
    7. '(

' → logprob: -3.8296120166778564
    8. ',

' → logprob: -4.329611778259277
    9. 'def' → logprob: -4.329611778259277
    10. 'import' → logprob: -4.454611778259277

Token 20: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.6959754228591919
    2. 'group' → logprob: -2.4459753036499023
    3. ' group' → logprob: -2.5709753036499023
    4. ' chain' → logprob: -2.6959753036499023
    5. 'chain' → logprob: -2.9459753036499023
    6. 'per' → logprob: -2.9459753036499023
    7. ' permutations' → logprob: -2.9459753036499023
    8. 'st' → logprob: -3.5709753036499023
    9. ' combinations' → logprob: -4.070975303649902
    10. 'count' → logprob: -4.445975303649902

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8586176037788391
    2. '

' → logprob: -1.9836175441741943
    3. '
' → logprob: -2.3586175441741943
    4. '\n' → logprob: -2.3586175441741943
    5. ',
' → logprob: -2.7336175441741943
    6. '\' → logprob: -2.9836175441741943
    7. 'import' → logprob: -3.2336175441741943
    8. ',

' → logprob: -3.6086175441741943
    9. 'def' → logprob: -3.7336175441741943
    10. '(' → logprob: -4.983617782592773

Token 22: ' chain' (ID: 13464)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.2633778154850006
    2. 'per' → logprob: -2.0133779048919678
    3. 'com' → logprob: -3.1383779048919678
    4. ' chain' → logprob: -3.6383779048919678
    5. 'chain' → logprob: -3.7633779048919678
    6. '```' → logprob: -6.138377666473389
    7. 'count' → logprob: -7.388377666473389
    8. 'group' → logprob: -7.638377666473389
    9. ' group' → logprob: -8.263378143310547
    10. ' ' → logprob: -8.388378143310547

Token 23: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7275015711784363
    2. '.' → logprob: -2.102501630783081
    3. '
' → logprob: -2.227501630783081
    4. '

' → logprob: -2.602501630783081
    5. ',
' → logprob: -3.477501630783081
    6. '\' → logprob: -3.602501630783081
    7. '\n' → logprob: -3.602501630783081
    8. '(' → logprob: -4.102501392364502
    9. 'def' → logprob: -4.227501392364502
    10. 'import' → logprob: -4.352501392364502

Token 24: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2082395553588867
    2. '(' → logprob: -1.3332395553588867
    3. 'd' → logprob: -1.9582395553588867
    4. '#' → logprob: -1.9582395553588867
    5. '*' → logprob: -3.5832395553588867
    6. '\' → logprob: -3.7082395553588867
    7. '(
' → logprob: -3.9582395553588867
    8. ',' → logprob: -4.083239555358887
    9. '.' → logprob: -4.208239555358887
    10. '```' → logprob: -4.583239555358887

Token 25: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05682851001620293
    2. '()' → logprob: -3.681828498840332
    3. '=' → logprob: -4.306828498840332
    4. '.' → logprob: -5.431828498840332
    5. '_data' → logprob: -6.056828498840332
    6. ' =' → logprob: -6.056828498840332
    7. ')' → logprob: -6.431828498840332
    8. '_' → logprob: -6.806828498840332
    9. 'data' → logprob: -6.931828498840332
    10. '```' → logprob: -7.056828498840332

Token 26: ' lambda' (ID: 27871)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.05254831910133362
    2. 'sys' → logprob: -3.427548408508301
    3. ' input' → logprob: -4.302548408508301
    4. 'input' → logprob: -5.302548408508301
    5. ' lambda' → logprob: -9.1775484085083
    6. ' ' → logprob: -10.6775484085083
    7. '=sys' → logprob: -10.8025484085083
    8. '	sys' → logprob: -11.0525484085083
    9. '(sys' → logprob: -11.3025484085083
    10. 'lambda' → logprob: -11.4275484085083

Token 27: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22964882850646973
    2. ' :' → logprob: -1.6046488285064697
    3. ' ' → logprob: -5.729648590087891
    4. ':str' → logprob: -8.60464859008789
    5. ' input' → logprob: -9.22964859008789
    6. ' sys' → logprob: -9.22964859008789
    7. 'input' → logprob: -9.85464859008789
    8. '():' → logprob: -9.97964859008789
    9. '  ' → logprob: -10.10464859008789
    10. 's' → logprob: -10.10464859008789

Token 28: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07273874431848526
    2. 'sys' → logprob: -2.6977386474609375
    3. ' input' → logprob: -6.1977386474609375
    4. 'input' → logprob: -7.1977386474609375
    5. ' stdin' → logprob: -12.197738647460938
    6. '=sys' → logprob: -12.572738647460938
    7. 'stdin' → logprob: -13.447738647460938
    8. '(sys' → logprob: -13.572738647460938
    9. '	sys' → logprob: -13.697738647460938
    10. ' ' → logprob: -14.072738647460938

Token 29: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005363515811040998
    2. '.stdout' → logprob: -7.7505364418029785
    3. '.' → logprob: -9.87553596496582
    4. '.argv' → logprob: -10.62553596496582
    5. 'stdin' → logprob: -11.25053596496582
    6. '.std' → logprob: -11.87553596496582
    7. ' stdin' → logprob: -12.50053596496582
    8. '.stderr' → logprob: -13.12553596496582
    9. '.version' → logprob: -13.25053596496582
    10. '.exit' → logprob: -14.12553596496582

Token 30: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.538490950129926e-05
    2. '.read' → logprob: -10.625055313110352
    3. '.' → logprob: -10.875055313110352
    4. 'read' → logprob: -11.500055313110352
    5. '.readlines' → logprob: -13.500055313110352
    6. ' readline' → logprob: -15.125055313110352
    7. '.buffer' → logprob: -16.25005531311035
    8. '```' → logprob: -16.62505531311035
    9. 'buffer' → logprob: -16.75005531311035
    10. '_read' → logprob: -17.00005531311035

Token 31: '()

' (ID: 5874)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12728765606880188
    2. '()' → logprob: -2.1272876262664795
    3. '(' → logprob: -8.877287864685059
    4. '()
' → logprob: -9.002287864685059
    5. '()\' → logprob: -9.877287864685059
    6. '()

' → logprob: -11.502287864685059
    7. '.strip' → logprob: -11.877287864685059
    8. '.' → logprob: -11.877287864685059
    9. '[:-' → logprob: -12.627287864685059
    10. '()<' → logprob: -12.752287864685059

Token 32: 'H' (ID: 39)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7423427700996399
    2. 'def' → logprob: -0.8673427700996399
    3. 'a' → logprob: -2.867342710494995
    4. 'for' → logprob: -4.367342948913574
    5. '(n' → logprob: -4.742342948913574
    6. 'N' → logprob: -5.742342948913574
    7. '#' → logprob: -5.992342948913574
    8. 'x' → logprob: -6.117342948913574
    9. '(' → logprob: -6.367342948913574
    10. '
' → logprob: -6.492342948913574

Token 33: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04919720068573952
    2. ' ,' → logprob: -3.549197196960449
    3. ' =' → logprob: -4.424197196960449
    4. ' ' → logprob: -5.049197196960449
    5. '=' → logprob: -8.17419719696045
    6. '  ' → logprob: -8.79919719696045
    7. '[' → logprob: -9.17419719696045
    8. '.' → logprob: -9.67419719696045
    9. '>' → logprob: -10.04919719696045
    10. ')' → logprob: -10.04919719696045

Token 34: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7608690857887268
    2. ' =' → logprob: -1.010869026184082
    3. ' ,' → logprob: -2.135869026184082
    4. ' ' → logprob: -3.385869026184082
    5. '=' → logprob: -4.135869026184082
    6. '<|end|>' → logprob: -8.760869026184082
    7. ',H' → logprob: -9.010869026184082
    8. ')' → logprob: -9.510869026184082
    9. '  ' → logprob: -9.885869026184082
    10. '<|end|>' → logprob: -10.260869026184082

Token 35: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1002797782421112
    2. 'map' → logprob: -2.3502798080444336
    3. 'int' → logprob: -10.975279808044434
    4. ' list' → logprob: -10.975279808044434
    5. ' int' → logprob: -11.225279808044434
    6. ' ' → logprob: -11.350279808044434
    7. ' tuple' → logprob: -12.100279808044434
    8. '0' → logprob: -12.975279808044434
    9. 'list' → logprob: -13.100279808044434
    10. ' input' → logprob: -13.100279808044434

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20334719121456146
    2. '(' → logprob: -1.8283472061157227
    3. '(lambda' → logprob: -3.8283472061157227
    4. '(str' → logprob: -6.953347206115723
    5. '(input' → logprob: -8.078347206115723
    6. '(tuple' → logprob: -9.453347206115723
    7. 'int' → logprob: -9.703347206115723
    8. '<|end|>' → logprob: -10.453347206115723
    9. '(
' → logprob: -10.578347206115723
    10. ' (' → logprob: -11.078347206115723

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09683933109045029
    2. ',input' → logprob: -2.471839427947998
    3. '(input' → logprob: -5.846839427947998
    4. '(' → logprob: -6.096839427947998
    5. ',int' → logprob: -6.471839427947998
    6. '(),' → logprob: -8.09683895111084
    7. ' ,' → logprob: -8.34683895111084
    8. 'input' → logprob: -8.34683895111084
    9. ')' → logprob: -8.47183895111084
    10. '(','' → logprob: -10.34683895111084

Token 38: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10022737830877304
    2. ' input' → logprob: -2.3502273559570312
    3. ')' → logprob: -11.225227355957031
    4. ',input' → logprob: -12.850227355957031
    5. '(input' → logprob: -13.225227355957031
    6. '=input' → logprob: -13.725227355957031
    7. ' ' → logprob: -13.975227355957031
    8. 'str' → logprob: -14.850227355957031
    9. 'int' → logprob: -15.850227355957031
    10. '[input' → logprob: -15.975227355957031

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.113290095934644e-05
    2. '())' → logprob: -9.875081062316895
    3. '()' → logprob: -10.500081062316895
    4. '()[' → logprob: -14.125081062316895
    5. '()))' → logprob: -14.750081062316895
    6. ')' → logprob: -14.875081062316895
    7. ' ().' → logprob: -15.625081062316895
    8. '()),' → logprob: -15.875081062316895
    9. '(' → logprob: -16.25008201599121
    10. '());' → logprob: -16.62508201599121

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10308422893285751
    2. 'strip' → logprob: -2.3530843257904053
    3. 'rstrip' → logprob: -5.853084087371826
    4. ')' → logprob: -13.853084564208984
    5. ' split' → logprob: -14.353084564208984
    6. 'read' → logprob: -14.478084564208984
    7. 'spl' → logprob: -16.353084564208984
    8. ' strip' → logprob: -16.603084564208984
    9. '(split' → logprob: -16.728084564208984
    10. '())' → logprob: -17.103084564208984

Token 41: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005495758377946913
    2. '())' → logprob: -8.25054931640625
    3. '))' → logprob: -8.37554931640625
    4. '()' → logprob: -10.12554931640625
    5. '`)' → logprob: -12.12554931640625
    6. '')' → logprob: -12.87554931640625
    7. ')`' → logprob: -13.00054931640625
    8. '),' → logprob: -13.12554931640625
    9. '(' → logprob: -13.37554931640625
    10. '")' → logprob: -14.00054931640625

Token 42: 'A' (ID: 32)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.26741382479667664
    2. 'field' → logprob: -2.267413854598999
    3. 'A' → logprob: -3.017413854598999
    4. 'matrix' → logprob: -3.392413854598999
    5. 'board' → logprob: -3.642413854598999
    6. 'S' → logprob: -4.76741361618042
    7. 'G' → logprob: -5.51741361618042
    8. 'a' → logprob: -6.39241361618042
    9. 'graph' → logprob: -6.76741361618042
    10. 'maze' → logprob: -7.26741361618042

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03830873593688011
    2. '=' → logprob: -3.288308620452881
    3. '[' → logprob: -8.913309097290039
    4. ' =[' → logprob: -10.038309097290039
    5. '=[]' → logprob: -10.288309097290039
    6. ' ' → logprob: -10.663309097290039
    7. '[]' → logprob: -11.663309097290039
    8. '=[' → logprob: -11.663309097290039
    9. ',' → logprob: -12.538309097290039
    10. '[:]' → logprob: -13.538309097290039

Token 44: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32620441913604736
    2. '[list' → logprob: -1.3262044191360474
    3. ' [' → logprob: -4.826204299926758
    4. '[int' → logprob: -5.576204299926758
    5. '[List' → logprob: -7.576204299926758
    6. '[str' → logprob: -8.951204299926758
    7. '[line' → logprob: -9.701204299926758
    8. '[i' → logprob: -9.701204299926758
    9. '[array' → logprob: -9.951204299926758
    10. '[]' → logprob: -10.326204299926758

Token 45: 'input' (ID: 2586)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.88418151892256e-05
    2. ' list' → logprob: -9.750059127807617
    3. 'map' → logprob: -15.125059127807617
    4. 'tuple' → logprob: -15.375059127807617
    5. '[list' → logprob: -18.250059127807617
    6. '(list' → logprob: -18.375059127807617
    7. '	list' → logprob: -18.625059127807617
    8. ':list' → logprob: -19.500059127807617
    9. '=list' → logprob: -20.375059127807617
    10. '```' → logprob: -20.500059127807617

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0044411551207304
    2. '()' → logprob: -5.504441261291504
    3. '()]' → logprob: -8.254441261291504
    4. '())' → logprob: -9.254441261291504
    5. '()].' → logprob: -13.129441261291504
    6. '()[' → logprob: -13.754441261291504
    7. ' ().' → logprob: -13.879441261291504
    8. '()).' → logprob: -14.754441261291504
    9. '()][' → logprob: -14.754441261291504
    10. 'rstrip' → logprob: -15.004441261291504

Token 47: 'strip' (ID: 23905)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.5646747350692749
    2. 'strip' → logprob: -1.314674735069275
    3. 'split' → logprob: -1.814674735069275
    4. 'rs' → logprob: -13.314674377441406
    5. 'read' → logprob: -15.064674377441406
    6. ' split' → logprob: -15.939674377441406
    7. '.rstrip' → logprob: -16.064674377441406
    8. 'spl' → logprob: -16.689674377441406
    9. 'replace' → logprob: -16.689674377441406
    10. 'str' → logprob: -16.814674377441406

Token 48: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.20194125175476074
    2. '()' → logprob: -1.7019412517547607
    3. '()]' → logprob: -7.70194149017334
    4. '())' → logprob: -9.70194149017334
    5. '(),' → logprob: -12.57694149017334
    6. 'split' → logprob: -13.32694149017334
    7. '()].' → logprob: -13.32694149017334
    8. ' ()' → logprob: -13.70194149017334
    9. '(' → logprob: -13.82694149017334
    10. '('' → logprob: -13.95194149017334

Token 49: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2989305555820465
    2. 'for' → logprob: -2.0489306449890137
    3. ')' → logprob: -2.2989306449890137
    4. '()' → logprob: -3.6739306449890137
    5. ']' → logprob: -6.298930644989014
    6. ' ' → logprob: -7.298930644989014
    7. '.split' → logprob: -7.423930644989014
    8. '().' → logprob: -8.923930168151855
    9. '()]' → logprob: -9.173930168151855
    10. ' )' → logprob: -9.298930168151855

Token 50: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7477694153785706
    2. ' _' → logprob: -1.1227693557739258
    3. ' range' → logprob: -1.6227693557739258
    4. '_range' → logprob: -5.872769355773926
    5. 'range' → logprob: -6.997769355773926
    6. ' ' → logprob: -9.997769355773926
    7. '(range' → logprob: -10.372769355773926
    8. '	range' → logprob: -11.497769355773926
    9. '_i' → logprob: -11.497769355773926
    10. ' i' → logprob: -11.622769355773926

Token 51: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4965194761753082
    2. 'in' → logprob: -0.9965194463729858
    3. ' in' → logprob: -4.246519565582275
    4. ' range' → logprob: -4.871519565582275
    5. '_' → logprob: -8.996519088745117
    6. '(range' → logprob: -9.621519088745117
    7. '	range' → logprob: -11.621519088745117
    8. 'ange' → logprob: -12.496519088745117
    9. '_range' → logprob: -12.746519088745117
    10. ' ' → logprob: -13.121519088745117

Token 52: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.566264295950532e-05
    2. ' range' → logprob: -9.375085830688477
    3. '(range' → logprob: -14.875085830688477
    4. '[' → logprob: -15.625085830688477
    5. '```' → logprob: -16.125085830688477
    6. '	range' → logprob: -17.000085830688477
    7. 'r' → logprob: -17.750085830688477
    8. '``' → logprob: -18.250085830688477
    9. '   ' → logprob: -18.250085830688477
    10. 'H' → logprob: -18.750085830688477

Token 53: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -5.228561349213123e-05
    2. '(' → logprob: -9.875052452087402
    3. 'H' → logprob: -14.375052452087402
    4. '(
' → logprob: -16.250051498413086
    5. '(W' → logprob: -16.250051498413086
    6. ' (' → logprob: -16.875051498413086
    7. '((' → logprob: -18.375051498413086
    8. '(Q' → logprob: -19.125051498413086
    9. '(int' → logprob: -19.125051498413086
    10. '(A' → logprob: -19.375051498413086

Token 54: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002445317804813385
    2. ')' → logprob: -8.750244140625
    3. ']' → logprob: -9.375244140625
    4. ')],' → logprob: -14.875244140625
    5. '])]' → logprob: -15.625244140625
    6. ')])' → logprob: -16.000244140625
    7. '')]' → logprob: -16.125244140625
    8. '])' → logprob: -16.500244140625
    9. ')]
' → logprob: -16.750244140625
    10. '))' → logprob: -16.750244140625

Token 55: 'mod' (ID: 4847)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6960456371307373
    2. 'B' → logprob: -1.8210456371307373
    3. 'DP' → logprob: -2.5710456371307373
    4. '#' → logprob: -3.1960456371307373
    5. 'count' → logprob: -3.9460456371307373
    6. 'result' → logprob: -4.071045875549316
    7. 'S' → logprob: -4.196045875549316
    8. 'ans' → logprob: -4.321045875549316
    9. 'counts' → logprob: -4.321045875549316
    10. 'answer' → logprob: -4.446045875549316

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6336343288421631
    2. ' =' → logprob: -0.7586343288421631
    3. '_' → logprob: -8.383634567260742
    4. ' ' → logprob: -8.508634567260742
    5. '<|end|>' → logprob: -8.758634567260742
    6. ')' → logprob: -9.258634567260742
    7. ',' → logprob: -10.133634567260742
    8. ' =)' → logprob: -10.383634567260742
    9. '1' → logprob: -10.508634567260742
    10. '.' → logprob: -10.633634567260742

Token 57: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5789493918418884
    2. '10' → logprob: -0.8289493918418884
    3. '100' → logprob: -5.828949451446533
    4. '998' → logprob: -9.828948974609375
    5. '1' → logprob: -11.953948974609375
    6. ' ' → logprob: -13.453948974609375
    7. '109' → logprob: -14.328948974609375
    8. ' (' → logprob: -15.078948974609375
    9. 'int' → logprob: -15.203948974609375
    10. '１０' → logprob: -15.703948974609375

Token 58: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.027774346992373466
    2. '100' → logprob: -3.7777743339538574
    3. '998' → logprob: -5.402774333953857
    4. '1' → logprob: -11.527774810791016
    5. '(' → logprob: -13.277774810791016
    6. ' ' → logprob: -13.527774810791016
    7. 'int' → logprob: -14.152774810791016
    8. 'pow' → logprob: -15.152774810791016
    9. '999' → logprob: -16.027774810791016
    10. '2' → logprob: -16.527774810791016

Token 59: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -3.8889261304575484e-06
    2. '247' → logprob: -14.125003814697266
    3. '_' → logprob: -14.625003814697266
    4. '2' → logprob: -14.750003814697266
    5. '243' → logprob: -14.750003814697266
    6. '```' → logprob: -14.750003814697266
    7. '24' → logprob: -15.000003814697266
    8. '245' → logprob: -15.250003814697266
    9. '254' → logprob: -15.500003814697266
    10. '' → logprob: -16.750003814697266

Token 60: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.1909177154302597
    2. '853' → logprob: -1.815917730331421
    3. '257' → logprob: -4.815917491912842
    4. '857' → logprob: -6.065917491912842
    5. '357' → logprob: -7.690917491912842
    6. '253' → logprob: -8.69091796875
    7. '287' → logprob: -11.06591796875
    8. '273' → logprob: -11.19091796875
    9. '457' → logprob: -11.31591796875
    10. '```' → logprob: -12.31591796875

Token 61: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03356156125664711
    2. 'DP' → logprob: -4.033561706542969
    3. 'result' → logprob: -6.283561706542969
    4. 'def' → logprob: -6.408561706542969
    5. '#' → logprob: -6.533561706542969
    6. '' → logprob: -6.533561706542969
    7. '\n' → logprob: -7.033561706542969
    8. 'd' → logprob: -7.158561706542969
    9. '
' → logprob: -7.283561706542969
    10. 'ans' → logprob: -7.658561706542969

Token 62: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005638651084154844
    2. 'dist' → logprob: -6.880638599395752
    3. 'fact' → logprob: -6.880638599395752
    4. 'DP' → logprob: -7.255638599395752
    5. '#' → logprob: -7.380638599395752
    6. 'ans' → logprob: -8.13063907623291
    7. 'f' → logprob: -8.50563907623291
    8. 'result' → logprob: -8.63063907623291
    9. ' dp' → logprob: -9.00563907623291
    10. 'd' → logprob: -9.00563907623291

Token 63: ' prod' (ID: 10207)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -1.1881810426712036
    2. ' count' → logprob: -1.8131810426712036
    3. ' solve' → logprob: -1.9381810426712036
    4. ' mul' → logprob: -2.188180923461914
    5. ' pow' → logprob: -2.438180923461914
    6. ' main' → logprob: -2.813180923461914
    7. ' factor' → logprob: -3.938180923461914
    8. ' prod' → logprob: -4.188180923461914
    9. 'pow' → logprob: -4.688180923461914
    10. ' multiply' → logprob: -4.813180923461914

Token 64: '(iter' (ID: 61014)
  Prédit: 'uct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uct' → logprob: -0.003945894539356232
    2. 'ect' → logprob: -6.378945827484131
    3. '(x' → logprob: -7.003945827484131
    4. '(' → logprob: -7.753945827484131
    5. 'uctor' → logprob: -8.628946304321289
    6. '(u' → logprob: -8.753946304321289
    7. 'uc' → logprob: -9.128946304321289
    8. 'cut' → logprob: -9.253946304321289
    9. '(a' → logprob: -9.378946304321289
    10. '(lst' → logprob: -10.128946304321289

Token 65: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -3.4121114822482923e-06
    2. ')' → logprob: -12.875003814697266
    3. '):' → logprob: -15.500003814697266
    4. 'ABLE' → logprob: -15.500003814697266
    5. 'ables' → logprob: -15.625003814697266
    6. '(' → logprob: -16.000003814697266
    7. '-able' → logprob: -16.750003814697266
    8. '_' → logprob: -16.875003814697266
    9. ' able' → logprob: -17.375003814697266
    10. '__' → logprob: -17.625003814697266

Token 66: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03519067540764809
    2. ',' → logprob: -3.5351905822753906
    3. ')' → logprob: -5.285190582275391
    4. ' ):' → logprob: -8.41019058227539
    5. '):
' → logprob: -9.41019058227539
    6. '=' → logprob: -10.53519058227539
    7. '):
' → logprob: -11.91019058227539
    8. ')：' → logprob: -12.66019058227539
    9. ')=' → logprob: -12.78519058227539
    10. ' ,' → logprob: -13.03519058227539

Token 67: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.10320164263248444
    2. ' start' → logprob: -2.4782016277313232
    3. 'mul' → logprob: -5.103201866149902
    4. 'repeat' → logprob: -5.478201866149902
    5. 'r' → logprob: -6.853201866149902
    6. 'default' → logprob: -7.478201866149902
    7. 'initial' → logprob: -7.603201866149902
    8. ')' → logprob: -7.853201866149902
    9. 'mod' → logprob: -8.478201866149902
    10. 'initializer' → logprob: -8.478201866149902

Token 68: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3663626305060461e-05
    2. '=None' → logprob: -12.12501335144043
    3. '=start' → logprob: -12.62501335144043
    4. '):' → logprob: -13.37501335144043
    5. '=

' → logprob: -13.62501335144043
    6. ')=' → logprob: -14.37501335144043
    7. '=}' → logprob: -15.00001335144043
    8. ' =' → logprob: -15.37501335144043
    9. '=int' → logprob: -15.62501335144043
    10. '=value' → logprob: -16.00001335144043

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. '=' → logprob: -15.000003814697266
    4. 'mul' → logprob: -16.875003814697266
    5. ')' → logprob: -17.125003814697266
    6. 'multip' → logprob: -17.750003814697266
    7. '۱' → logprob: -18.250003814697266
    8. '   ' → logprob: -18.375003814697266
    9. '<|end|>' → logprob: -19.000003814697266
    10. '```' → logprob: -19.062503814697266

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021772195759695023
    2. '):
' → logprob: -9.12521743774414
    3. ')' → logprob: -9.37521743774414
    4. ' ):' → logprob: -11.62521743774414
    5. '):
' → logprob: -11.62521743774414
    6. '*' → logprob: -12.62521743774414
    7. ',' → logprob: -13.37521743774414
    8. ':' → logprob: -14.12521743774414
    9. '=' → logprob: -15.62521743774414
    10. '):

' → logprob: -16.50021743774414

Token 71: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018076075240969658
    2. ':
' → logprob: -4.643075942993164
    3. '):' → logprob: -5.643075942993164
    4. '   ' → logprob: -5.768075942993164
    5. ':return' → logprob: -7.268075942993164
    6. '):
' → logprob: -7.643075942993164
    7. ')' → logprob: -8.893075942993164
    8. ':
' → logprob: -8.893075942993164
    9. '	return' → logprob: -10.518075942993164
    10. '):
' → logprob: -10.768075942993164

Token 72: ' return' (ID: 622)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.19269371032714844
    2. ' reduce' → logprob: -2.0676937103271484
    3. '   ' → logprob: -3.1926937103271484
    4. 'return' (adapté à ' return') → logprob: -5.317693710327148
    5. ' return' → logprob: -6.067693710327148
    6. ' ' → logprob: -8.692693710327148
    7. '    ' → logprob: -9.067693710327148
    8. 'acc' → logprob: -9.942693710327148
    9. 'import' → logprob: -10.317693710327148
    10. ' accumulate' → logprob: -10.317693710327148

Token 73: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.18003670871257782
    2. ' reduce' → logprob: -1.8050366640090942
    3. 'start' → logprob: -9.680036544799805
    4. 'mul' → logprob: -9.680036544799805
    5. ' start' → logprob: -9.930036544799805
    6. ' ' → logprob: -10.305036544799805
    7. '   ' → logprob: -10.430036544799805
    8. ' mul' → logprob: -10.930036544799805
    9. 'acc' → logprob: -11.555036544799805
    10. 'redu' → logprob: -11.555036544799805

Token 74: '(lambda' (ID: 43341)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.017503775656223297
    2. '(' → logprob: -4.14250373840332
    3. '(lambda' → logprob: -7.39250373840332
    4. '(operator' → logprob: -7.64250373840332
    5. 'mul' → logprob: -8.14250373840332
    6. '(mu' → logprob: -10.26750373840332
    7. '(mult' → logprob: -11.39250373840332
    8. '_mul' → logprob: -11.64250373840332
    9. 'operator' → logprob: -12.14250373840332
    10. 'm' → logprob: -12.51750373840332

Token 75: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1484702229499817
    2. 'x' → logprob: -2.023470163345337
    3. 'mul' → logprob: -6.273470401763916
    4. ' mul' → logprob: -6.398470401763916
    5. 'a' → logprob: -6.773470401763916
    6. ' a' → logprob: -7.273470401763916
    7. 'acc' → logprob: -8.898469924926758
    8. ' acc' → logprob: -9.523469924926758
    9. ' ' → logprob: -9.773469924926758
    10. 'lambda' → logprob: -10.523469924926758

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004433011345099658
    2. ',m' → logprob: -8.375443458557129
    3. ',x' → logprob: -8.750443458557129
    4. 'mul' → logprob: -10.250443458557129
    5. '_mul' → logprob: -11.500443458557129
    6. ' ,' → logprob: -12.000443458557129
    7. 'Mul' → logprob: -14.000443458557129
    8. 'multip' → logprob: -14.250443458557129
    9. ',y' → logprob: -15.500443458557129
    10. 'x' → logprob: -16.250442504882812

Token 77: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6232944130897522
    2. ' y' → logprob: -0.9982944130897522
    3. 'mul' → logprob: -2.4982943534851074
    4. ' mul' → logprob: -4.373294353485107
    5. 'lambda' → logprob: -8.748294830322266
    6. 'x' → logprob: -9.373294830322266
    7. ' lambda' → logprob: -9.748294830322266
    8. ' ' → logprob: -9.873294830322266
    9. 'mu' → logprob: -10.498294830322266
    10. '_mul' → logprob: -10.998294830322266

Token 78: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0363958440721035
    2. ',' → logprob: -3.411395788192749
    3. 'mul' → logprob: -6.661396026611328
    4. ' :' → logprob: -6.911396026611328
    5. '_mul' → logprob: -8.286396026611328
    6. '=' → logprob: -9.661396026611328
    7. 'multip' → logprob: -10.036396026611328
    8. ' mul' → logprob: -11.036396026611328
    9. ',m' → logprob: -11.161396026611328
    10. ' ,' → logprob: -11.411396026611328

Token 79: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.38545340299606323
    2. ' (' → logprob: -1.385453462600708
    3. 'x' → logprob: -3.010453462600708
    4. ' x' → logprob: -4.010453224182129
    5. '(' → logprob: -6.135453224182129
    6. ' ' → logprob: -10.010453224182129
    7. 'mul' → logprob: -11.510453224182129
    8. '  ' → logprob: -11.760453224182129
    9. '   ' → logprob: -11.760453224182129
    10. '	x' → logprob: -12.635453224182129

Token 80: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15784554183483124
    2. '(x' → logprob: -2.0328454971313477
    3. ' x' → logprob: -4.407845497131348
    4. ' (' → logprob: -5.907845497131348
    5. '(' → logprob: -8.907845497131348
    6. ' ' → logprob: -11.782845497131348
    7. '	x' → logprob: -12.157845497131348
    8. '   ' → logprob: -13.157845497131348
    9. '```' → logprob: -13.532845497131348
    10. '  ' → logprob: -14.032845497131348

Token 81: '*y' (ID: 83575)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11306348443031311
    2. ' *' → logprob: -2.2380635738372803
    3. '*y' → logprob: -8.36306381225586
    4. '*x' → logprob: -13.11306381225586
    5. '**' → logprob: -13.23806381225586
    6. '*(' → logprob: -13.61306381225586
    7. ' ' → logprob: -13.98806381225586
    8. ' ' → logprob: -14.23806381225586
    9. '*m' → logprob: -15.36306381225586
    10. ' **' → logprob: -15.86306381225586

Token 82: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10247661173343658
    2. ')%' → logprob: -2.3524765968322754
    3. '%' → logprob: -6.102476596832275
    4. ' )' → logprob: -10.602477073669434
    5. ' %' → logprob: -12.477477073669434
    6. '%)' → logprob: -14.977477073669434
    7. '%n' → logprob: -15.352477073669434
    8. '%x' → logprob: -15.477477073669434
    9. '),' → logprob: -15.977477073669434
    10. '%m' → logprob: -16.102476119995117

Token 83: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.000553151941858232
    2. ' mod' → logprob: -7.500553131103516
    3. '	mod' → logprob: -15.875553131103516
    4. 'moder' → logprob: -18.250553131103516
    5. '(mod' → logprob: -18.750553131103516
    6. ' ' → logprob: -18.750553131103516
    7. '```' → logprob: -19.625553131103516
    8. ' мод' → logprob: -19.750553131103516
    9. 'MOD' → logprob: -19.875553131103516
    10. '998' → logprob: -20.250553131103516

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008671891875565052
    2. ' ,' → logprob: -4.758671760559082
    3. ')' → logprob: -10.758671760559082
    4. ',y' → logprob: -11.133671760559082
    5. ',x' → logprob: -12.508671760559082
    6. '%' → logprob: -12.633671760559082
    7. ',input' → logprob: -12.633671760559082
    8. ' ' → logprob: -12.883671760559082
    9. '),' → logprob: -13.633671760559082
    10. ',p' → logprob: -13.883671760559082

Token 85: ' iterable' (ID: 113880)
  Prédit: ' iterable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iterable' → logprob: -0.018157318234443665
    2. 'iter' → logprob: -4.018157482147217
    3. 'Iterable' → logprob: -12.518157005310059
    4. ' iter' → logprob: -13.643157005310059
    5. '(iter' → logprob: -13.768157005310059
    6. ' itertools' → logprob: -14.143157005310059
    7. ' ' → logprob: -15.143157005310059
    8. 'iterate' → logprob: -15.768157005310059
    9. ' Iterable' → logprob: -16.143157958984375
    10. '	iter' → logprob: -16.393157958984375

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005622077151201665
    2. ',start' → logprob: -7.5005621910095215
    3. ' ,' → logprob: -11.75056266784668
    4. ')' → logprob: -14.00056266784668
    5. '[start' → logprob: -16.37556266784668
    6. ',end' → logprob: -16.75056266784668
    7. 'start' → logprob: -16.87556266784668
    8. ',current' → logprob: -17.37556266784668
    9. '),' → logprob: -17.50056266784668
    10. ',next' → logprob: -17.62556266784668

Token 87: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04858794063329697
    2. ' start' → logprob: -3.0485880374908447
    3. '1' → logprob: -14.798587799072266
    4. ' ' → logprob: -16.298587799072266
    5. '[start' → logprob: -16.923587799072266
    6. '(start' → logprob: -16.923587799072266
    7. '=start' → logprob: -17.048587799072266
    8. '	start' → logprob: -18.798587799072266
    9. ',start' → logprob: -20.048587799072266
    10. ':start' → logprob: -20.048587799072266

Token 88: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -15.000000953674316
    4. ')

' → logprob: -17.000001907348633
    5. ')return' → logprob: -17.500001907348633
    6. '<|end|>' → logprob: -18.250001907348633
    7. '))' → logprob: -19.000001907348633
    8. ')}' → logprob: -19.500001907348633
    9. '),' → logprob: -19.625001907348633
    10. ')#' → logprob: -19.625001907348633

Token 89: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.39257848262786865
    2. 'def' → logprob: -2.392578601837158
    3. 'DP' → logprob: -3.267578601837158
    4. '#' → logprob: -3.392578601837158
    5. '
' → logprob: -3.892578601837158
    6. '\n' → logprob: -4.142578601837158
    7. 'result' → logprob: -4.767578601837158
    8. 'd' → logprob: -5.017578601837158
    9. 'B' → logprob: -5.142578601837158
    10. 'S' → logprob: -5.142578601837158

Token 90: ' Calcul' (ID: 57243)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0538809634745121
    2. '#' → logprob: -4.4288811683654785
    3. 'DP' → logprob: -5.0538811683654785
    4. 'ans' → logprob: -5.0538811683654785
    5. 'answer' → logprob: -5.8038811683654785
    6. 'dist' → logprob: -6.1788811683654785
    7. 'def' → logprob: -6.4288811683654785
    8. 'result' → logprob: -6.4288811683654785
    9. 'ways' → logprob: -6.6788811683654785
    10. 'rows' → logprob: -6.8038811683654785

Token 91: ' concat' (ID: 73950)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.420448362827301
    2. 'ating' → logprob: -1.1704483032226562
    3. 'ation' → logprob: -4.295448303222656
    4. 'ator' → logprob: -4.420448303222656
    5. 'ations' → logprob: -6.295448303222656
    6. 'def' → logprob: -6.545448303222656
    7. '#' → logprob: -7.295448303222656
    8. 'ATE' → logprob: -7.420448303222656
    9. 'ATING' → logprob: -7.795448303222656
    10. 'ated' → logprob: -7.920448303222656

Token 92: 'éné' (ID: 27817)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.0947874784469604
    2. 'entation' → logprob: -1.0947874784469604
    3. '#' → logprob: -2.46978759765625
    4. 's' → logprob: -2.71978759765625
    5. 'def' → logprob: -3.09478759765625
    6. 'ination' → logprob: -3.21978759765625
    7. '(' → logprob: -3.21978759765625
    8. '[' → logprob: -4.34478759765625
    9. '()' → logprob: -4.46978759765625
    10. '[]' → logprob: -6.34478759765625

Token 93: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7284610867500305
    2. '#' → logprob: -2.2284610271453857
    3. ' ' → logprob: -2.6034610271453857
    4. ',' → logprob: -2.8534610271453857
    5. ' #' → logprob: -2.9784610271453857
    6. 's' → logprob: -3.2284610271453857
    7. ' =' → logprob: -3.9784610271453857
    8. 'A' → logprob: -4.228461265563965
    9. '(' → logprob: -4.228461265563965
    10. '_' → logprob: -4.228461265563965

Token 94: 'list' (ID: 2641)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16110780835151672
    2. 'des' → logprob: -3.0361077785491943
    3. ' des' → logprob: -3.2861077785491943
    4. 'd' → logprob: -3.4111077785491943
    5. 'de' → logprob: -5.411108016967773
    6. 'du' → logprob: -5.786108016967773
    7. ' d' → logprob: -5.911108016967773
    8. ' du' → logprob: -6.161108016967773
    9. ' )' → logprob: -6.286108016967773
    10. ')d' → logprob: -6.286108016967773

Token 95: 'es' (ID: 268)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32366693019866943
    2. 'es' → logprob: -2.073667049407959
    3. 'e' → logprob: -2.448667049407959
    4. ',' → logprob: -4.323667049407959
    5. 's' → logprob: -4.698667049407959
    6. 'of' → logprob: -4.823667049407959
    7. ' =' → logprob: -5.573667049407959
    8. '=' → logprob: -5.698667049407959
    9. '[int' → logprob: -5.823667049407959
    10. 'de' → logprob: -5.948667049407959

Token 96: ' pa' (ID: 2428)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5588749647140503
    2. ' de' → logprob: -1.9338749647140503
    3. 'de' → logprob: -1.9338749647140503
    4. ',' → logprob: -3.30887508392334
    5. ' des' → logprob: -3.43387508392334
    6. '):' → logprob: -4.18387508392334
    7. 'd' → logprob: -4.30887508392334
    8. 'def' → logprob: -4.30887508392334
    9. 'des' → logprob: -5.18387508392334
    10. ' d' → logprob: -5.55887508392334

Token 97: 'resse' (ID: 15994)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4021410048007965
    2. 'ss' → logprob: -1.6521409749984741
    3. 'ra' → logprob: -2.9021410942077637
    4. 'rt' → logprob: -3.2771410942077637
    5. 's' → logprob: -4.152141094207764
    6. 'quets' → logprob: -5.402141094207764
    7. 'ram' → logprob: -5.777141094207764
    8. 'rs' → logprob: -6.027141094207764
    9. 'res' → logprob: -6.152141094207764
    10. 're' → logprob: -6.277141094207764

Token 98: 'uses' (ID: 5977)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5092993974685669
    2. 'sses' → logprob: -1.384299397468567
    3. 'ss' → logprob: -2.7592992782592773
    4. 'n' → logprob: -3.5092992782592773
    5. 'ives' → logprob: -4.134299278259277
    6. 'nt' → logprob: -4.384299278259277
    7. 's' → logprob: -4.884299278259277
    8. 'tes' → logprob: -5.509299278259277
    9. 'resse' → logprob: -5.884299278259277
    10. 'uves' → logprob: -6.384299278259277

Token 99: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07312507182359695
    2. 's' → logprob: -3.823125123977661
    3. ' de' → logprob: -4.573124885559082
    4. 'd' → logprob: -5.198124885559082
    5. ',' → logprob: -5.323124885559082
    6. 'de' → logprob: -5.448124885559082
    7. ' et' → logprob: -5.948124885559082
    8. 'def' → logprob: -6.198124885559082
    9. ' d' → logprob: -6.198124885559082
    10. ' )' → logprob: -6.198124885559082

Token 100: ' accumulate' (ID: 74226)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8555842638015747
    2. '#' → logprob: -2.230584144592285
    3. ' mais' → logprob: -2.730584144592285
    4. 'c' → logprob: -3.105584144592285
    5. ' génér' → logprob: -3.105584144592285
    6. ' par' → logprob: -4.105584144592285
    7. ' generator' → logprob: -4.105584144592285
    8. ' en' → logprob: -4.168084144592285
    9. ' continu' → logprob: -4.168084144592285
    10. ' la' → logprob: -4.230584144592285

Token 101: ')
' (ID: 446)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8338244557380676
    2. 'es' → logprob: -0.9588244557380676
    3. ')' → logprob: -2.333824396133423
    4. 'd' → logprob: -3.458824396133423
    5. ',' → logprob: -4.208824634552002
    6. 'de' → logprob: -5.458824634552002
    7. ' et' → logprob: -5.958824634552002
    8. 'tes' → logprob: -5.958824634552002
    9. 'ions' → logprob: -6.083824634552002
    10. ' de' → logprob: -6.083824634552002

Token 102: 'FACT' (ID: 105795)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2765181362628937
    2. 'dp' → logprob: -2.5265181064605713
    3. ',' → logprob: -3.6515181064605713
    4. 's' → logprob: -3.7765181064605713
    5. 'def' → logprob: -3.9015181064605713
    6. ')' → logprob: -4.77651834487915
    7. 'for' → logprob: -4.77651834487915
    8. 'd' → logprob: -5.27651834487915
    9. 'a' → logprob: -5.27651834487915
    10. 'n' → logprob: -5.77651834487915

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7164949774742126
    2. 'OR' → logprob: -1.3414950370788574
    3. ' =' → logprob: -1.4664950370788574
    4. 'S' → logprob: -4.216495037078857
    5. 'ORY' → logprob: -6.341495037078857
    6. 'or' → logprob: -7.341495037078857
    7. '_' → logprob: -7.841495037078857
    8. 'O' → logprob: -8.0914945602417
    9. '   ' → logprob: -8.3414945602417
    10. '```' → logprob: -8.7164945602417

Token 104: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.695061445236206
    2. ' [' → logprob: -0.695061445236206
    3. ' list' → logprob: -7.695061683654785
    4. 'list' → logprob: -7.695061683654785
    5. ' accumulate' → logprob: -7.945061683654785
    6. '[list' → logprob: -8.070061683654785
    7. 'acc' → logprob: -8.945061683654785
    8. ' ' → logprob: -9.070061683654785
    9. '[int' → logprob: -11.445061683654785
    10. '1' → logprob: -11.820061683654785

Token 105: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -1.7954958821064793e-05
    2. '(' → logprob: -11.375018119812012
    3. 'acc' → logprob: -12.750018119812012
    4. '(ac' → logprob: -13.000018119812012
    5. '(range' → logprob: -14.375018119812012
    6. '(product' → logprob: -15.250018119812012
    7. '(chain' → logprob: -15.250018119812012
    8. '(scan' → logprob: -16.625017166137695
    9. '.acc' → logprob: -16.750017166137695
    10. '()' → logprob: -16.875017166137695

Token 106: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.00011450992315076292
    2. 'om' → logprob: -10.250114440917969
    3. 'cum' → logprob: -10.500114440917969
    4. 'um' → logprob: -10.750114440917969
    5. 'ulate' → logprob: -11.125114440917969
    6. '(' → logprob: -12.375114440917969
    7. 'umm' → logprob: -13.500114440917969
    8. 'umu' → logprob: -13.750114440917969
    9. '[' → logprob: -13.750114440917969
    10. '```' → logprob: -13.875114440917969

Token 107: '([' (ID: 5194)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.08631230890750885
    2. '(lambda' → logprob: -2.7113122940063477
    3. '(chain' → logprob: -4.711312294006348
    4. '(' → logprob: -5.586312294006348
    5. '([' → logprob: -6.086312294006348
    6. '(product' → logprob: -7.711312294006348
    7. '(m' → logprob: -8.086312294006348
    8. 'range' → logprob: -8.836312294006348
    9. ' (' → logprob: -9.336312294006348
    10. '(int' → logprob: -9.836312294006348

Token 108: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5915719866752625
    2. '1' → logprob: -0.8415719866752625
    3. ' i' → logprob: -4.591571807861328
    4. '(i' → logprob: -5.466571807861328
    5. ' ' → logprob: -7.716571807861328
    6. 'x' → logprob: -8.341571807861328
    7. '(' → logprob: -8.591571807861328
    8. '   ' → logprob: -9.591571807861328
    9. ' (' → logprob: -9.841571807861328
    10. '*i' → logprob: -10.216571807861328

Token 109: ']' (ID: 60)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.2730218172073364
    2. ']' → logprob: -1.5230218172073364
    3. ']*(' → logprob: -4.148021697998047
    4. ',' → logprob: -5.398021697998047
    5. ']*' → logprob: -7.773021697998047
    6. '*(' → logprob: -10.273021697998047
    7. '],' → logprob: -10.773021697998047
    8. ',(' → logprob: -11.648021697998047
    9. ',i' → logprob: -11.773021697998047
    10. '*' → logprob: -11.898021697998047

Token 110: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.782080888748169
    2. '(range' → logprob: -1.532080888748169
    3. 'range' → logprob: -1.532080888748169
    4. '+[' → logprob: -3.032080888748169
    5. ',[' → logprob: -3.532080888748169
    6. ' +' → logprob: -4.28208065032959
    7. '+' → logprob: -4.78208065032959
    8. '[i' → logprob: -6.28208065032959
    9. ' range' → logprob: -6.40708065032959
    10. '+i' → logprob: -6.65708065032959

Token 111: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6793973445892334
    2. '[' → logprob: -1.5543973445892334
    3. '[list' → logprob: -2.1793973445892334
    4. ' list' → logprob: -2.4293973445892334
    5. ' [' → logprob: -2.5543973445892334
    6. '[i' → logprob: -6.6793975830078125
    7. '[n' → logprob: -8.429397583007812
    8. '[index' → logprob: -8.554397583007812
    9. '[count' → logprob: -8.554397583007812
    10. '[A' → logprob: -9.054397583007812

Token 112: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.8550976164988242e-05
    2. 'range' → logprob: -11.000018119812012
    3. '(chain' → logprob: -13.875018119812012
    4. '(' → logprob: -14.250018119812012
    5. '(map' → logprob: -16.000019073486328
    6. '(i' → logprob: -16.625019073486328
    7. '	range' → logprob: -18.125019073486328
    8. ' range' → logprob: -18.375019073486328
    9. '(filter' → logprob: -21.125019073486328
    10. '1' → logprob: -21.875019073486328

Token 113: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00029720881138928235
    2. '1' → logprob: -8.125297546386719
    3. ' (' → logprob: -13.750297546386719
    4. ' ' → logprob: -16.87529754638672
    5. ',' → logprob: -17.12529754638672
    6. '2' → logprob: -17.87529754638672
    7. 'n' → logprob: -18.37529754638672
    8. '```' → logprob: -19.25029754638672
    9. '(
' → logprob: -19.37529754638672
    10. 'to' → logprob: -19.50029754638672

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.750017166137695
    3. '(' → logprob: -11.875017166137695
    4. '2' → logprob: -12.875017166137695
    5. '   ' → logprob: -16.875017166137695
    6. '[' → logprob: -17.562517166137695
    7. '  ' → logprob: -18.062517166137695
    8. '
' → logprob: -18.125017166137695
    9. ',' → logprob: -18.187517166137695
    10. '```' → logprob: -18.250017166137695

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017720464384183288
    2. ',H' → logprob: -6.376771926879883
    3. ',W' → logprob: -9.876771926879883
    4. '1' → logprob: -11.626771926879883
    5. ' ,' → logprob: -11.751771926879883
    6. ',n' → logprob: -14.126771926879883
    7. ',N' → logprob: -15.001771926879883
    8. ',int' → logprob: -15.876771926879883
    9. ',m' → logprob: -16.126771926879883
    10. 'H' → logprob: -16.251771926879883

Token 116: '21' (ID: 2040)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.027741529047489166
    2. ' W' → logprob: -3.9027414321899414
    3. 'max' → logprob: -5.527741432189941
    4. '100' → logprob: -6.527741432189941
    5. ' max' → logprob: -7.152741432189941
    6. 'H' → logprob: -7.777741432189941
    7. ' ' → logprob: -8.652741432189941
    8. '10' → logprob: -8.902741432189941
    9. 'min' → logprob: -9.777741432189941
    10. '101' → logprob: -9.777741432189941

Token 117: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4789406955242157
    2. ')),' → logprob: -0.9789407253265381
    3. '))' → logprob: -6.103940486907959
    4. '1' → logprob: -7.478940486907959
    5. ')],' → logprob: -7.728940486907959
    6. ',' → logprob: -7.853940486907959
    7. '+' → logprob: -7.853940486907959
    8. ')))' → logprob: -8.228940963745117
    9. '))),' → logprob: -8.478940963745117
    10. '))))' → logprob: -9.478940963745117

Token 118: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6225792169570923
    2. 'mul' → logprob: -1.2475792169570923
    3. ' lambda' → logprob: -1.9975792169570923
    4. ' mul' → logprob: -3.3725790977478027
    5. '(lambda' → logprob: -5.122579097747803
    6. ' ' → logprob: -9.622579574584961
    7. 'mu' → logprob: -9.747579574584961
    8. '=lambda' → logprob: -9.747579574584961
    9. '    ' → logprob: -10.372579574584961
    10. '  ' → logprob: -10.997579574584961

Token 119: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7088139057159424
    2. ' x' → logprob: -0.7088139057159424
    3. ' acc' → logprob: -4.958813667297363
    4. 'a' → logprob: -5.208813667297363
    5. ' a' → logprob: -6.458813667297363
    6. 'acc' → logprob: -6.583813667297363
    7. ' ' → logprob: -9.583813667297363
    8. 'f' → logprob: -11.958813667297363
    9. ' fact' → logprob: -12.333813667297363
    10. 'fact' → logprob: -12.333813667297363

Token 120: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010482928482815623
    2. ',x' → logprob: -6.8760480880737305
    3. ' ,' → logprob: -11.25104808807373
    4. 'x' → logprob: -14.37604808807373
    5. ',m' → logprob: -14.50104808807373
    6. ',y' → logprob: -15.00104808807373
    7. ',
' → logprob: -15.25104808807373
    8. ',n' → logprob: -15.62604808807373
    9. ',p' → logprob: -16.001049041748047
    10. ',a' → logprob: -16.501049041748047

Token 121: ':(' (ID: 7990)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035905346274375916
    2. ' :' → logprob: -3.785905361175537
    3. ',' → logprob: -4.410905361175537
    4. ',x' → logprob: -8.285904884338379
    5. ':x' → logprob: -9.535904884338379
    6. ',:' → logprob: -10.535904884338379
    7. ' ,' → logprob: -10.660904884338379
    8. ',y' → logprob: -10.660904884338379
    9. ':(' → logprob: -11.035904884338379
    10. ',(' → logprob: -12.285904884338379

Token 122: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08198059350252151
    2. ' x' → logprob: -3.0819807052612305
    3. '(x' → logprob: -3.4569807052612305
    4. ' (' → logprob: -6.7069807052612305
    5. '(' → logprob: -9.58198070526123
    6. ' ' → logprob: -10.95698070526123
    7. '	x' → logprob: -12.20698070526123
    8. '   ' → logprob: -13.70698070526123
    9. '  ' → logprob: -14.20698070526123
    10. ')x' → logprob: -14.83198070526123

Token 123: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.00218452257104218
    2. '*' → logprob: -6.2521843910217285
    3. ' *' → logprob: -8.377184867858887
    4. '*(' → logprob: -10.627184867858887
    5. '*x' → logprob: -13.752184867858887
    6. 'y' → logprob: -15.752184867858887
    7. '**' → logprob: -15.877184867858887
    8. '*p' → logprob: -17.00218391418457
    9. '*m' → logprob: -17.62718391418457
    10. '*out' → logprob: -17.62718391418457

Token 124: ')%' (ID: 57656)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2033059298992157
    2. ' %' → logprob: -1.828305959701538
    3. ')%' → logprob: -4.078305721282959
    4. ')' → logprob: -5.078305721282959
    5. ',y' → logprob: -9.828306198120117
    6. '*y' → logprob: -10.203306198120117
    7. '*' → logprob: -12.078306198120117
    8. ',' → logprob: -12.328306198120117
    9. '%n' → logprob: -12.703306198120117
    10. '%m' → logprob: -12.953306198120117

Token 125: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -8.506661833962426e-05
    2. ' mod' → logprob: -9.37508487701416
    3. '998' → logprob: -15.50008487701416
    4. '	mod' → logprob: -17.875085830688477
    5. '(mod' → logprob: -17.875085830688477
    6. ' ' → logprob: -19.125085830688477
    7. 'moder' → logprob: -19.125085830688477
    8. '
' → logprob: -19.500085830688477
    9. '999' → logprob: -19.750085830688477
    10. 'MOD' → logprob: -20.125085830688477

Token 126: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.146429223008454e-05
    2. ')' → logprob: -10.75006103515625
    3. ' ))' → logprob: -10.75006103515625
    4. '))
' → logprob: -11.25006103515625
    5. ')))' → logprob: -12.87506103515625
    6. '))

' → logprob: -13.50006103515625
    7. '));' → logprob: -14.25006103515625
    8. ')),' → logprob: -14.50006103515625
    9. ',' → logprob: -15.75006103515625
    10. '),' → logprob: -15.87506103515625

Token 127: 'FACT' (ID: 105795)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6564912796020508
    2. 'def' → logprob: -1.4064912796020508
    3. 'INV' → logprob: -2.656491279602051
    4. 'fact' → logprob: -3.031491279602051
    5. 'FACT' → logprob: -3.281491279602051
    6. 'F' → logprob: -3.531491279602051
    7. 'inv' → logprob: -4.406491279602051
    8. 'factor' → logprob: -4.406491279602051
    9. '#' → logprob: -5.281491279602051
    10. 'n' → logprob: -5.781491279602051

Token 128: '_INV' (ID: 116669)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3245645761489868
    2. '[-' → logprob: -1.5745645761489868
    3. '.pop' → logprob: -3.9495644569396973
    4. '.' → logprob: -4.074564456939697
    5. '<|end|>' → logprob: -4.074564456939697
    6. '.append' → logprob: -4.824564456939697
    7. ',' → logprob: -5.574564456939697
    8. '[:]' → logprob: -6.199564456939697
    9. '.insert' → logprob: -7.699564456939697
    10. '#' → logprob: -8.324564933776855

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282997578382492
    2. '=' → logprob: -2.2378299236297607
    3. '_' → logprob: -12.73783016204834
    4. ',' → logprob: -14.11283016204834
    5. 's' → logprob: -14.11283016204834
    6. ')' → logprob: -14.11283016204834
    7. '[' → logprob: -14.23783016204834
    8. '=[]' → logprob: -14.48783016204834
    9. ' =[' → logprob: -14.98783016204834
    10. '_=' → logprob: -15.86283016204834

Token 130: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.031874027103185654
    2. ' [' → logprob: -3.531873941421509
    3. '[list' → logprob: -7.156874179840088
    4. 'list' → logprob: -7.781874179840088
    5. '[len' → logprob: -8.15687370300293
    6. '[]' → logprob: -8.28187370300293
    7. '[p' → logprob: -9.40687370300293
    8. 'prod' → logprob: -9.65687370300293
    9. ' list' → logprob: -10.15687370300293
    10. '[List' → logprob: -10.28187370300293

Token 131: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -4.596781946020201e-05
    2. '(ac' → logprob: -10.250045776367188
    3. 'acc' → logprob: -12.250045776367188
    4. '(' → logprob: -13.000045776367188
    5. '(chain' → logprob: -13.125045776367188
    6. '(map' → logprob: -14.250045776367188
    7. '(product' → logprob: -14.375045776367188
    8. '()' → logprob: -16.000045776367188
    9. '	acc' → logprob: -16.000045776367188
    10. ' accumulate' → logprob: -17.375045776367188

Token 132: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.006602749228477478
    2. 'ulate' → logprob: -5.631602764129639
    3. 'um' → logprob: -6.381602764129639
    4. 'map' → logprob: -7.256602764129639
    5. '(acc' → logprob: -8.38160228729248
    6. 'cum' → logprob: -8.75660228729248
    7. '(' → logprob: -10.00660228729248
    8. 'om' → logprob: -10.00660228729248
    9. 'm' → logprob: -10.38160228729248
    10. 'utate' → logprob: -10.38160228729248

Token 133: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.002220199443399906
    2. '[' → logprob: -6.377220153808594
    3. '(range' → logprob: -8.002220153808594
    4. '(' → logprob: -9.127220153808594
    5. '(re' → logprob: -9.877220153808594
    6. '(F' → logprob: -12.002220153808594
    7. '(lambda' → logprob: -12.752220153808594
    8. '(map' → logprob: -13.002220153808594
    9. 'FACT' → logprob: -13.127220153808594
    10. '([(' → logprob: -13.252220153808594

Token 134: 'pow' (ID: 30304)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011868205183418468
    2. ' ' → logprob: -10.125118255615234
    3. '0' → logprob: -10.500118255615234
    4. '<|end|>' → logprob: -10.625118255615234
    5. 'fact' → logprob: -12.500118255615234
    6. '[' → logprob: -13.000118255615234
    7. ']' → logprob: -13.000118255615234
    8. ')' → logprob: -13.000118255615234
    9. '(' → logprob: -13.125118255615234
    10. '#' → logprob: -13.250118255615234

Token 135: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03393647447228432
    2. '(i' → logprob: -3.6589365005493164
    3. '(f' → logprob: -5.408936500549316
    4. '(x' → logprob: -6.533936500549316
    5. '(F' → logprob: -7.658936500549316
    6. ']' → logprob: -8.658936500549316
    7. '(a' → logprob: -8.783936500549316
    8. 'fact' → logprob: -9.033936500549316
    9. '1' → logprob: -9.158936500549316
    10. ')' → logprob: -9.283936500549316

Token 136: 'FACT' (ID: 105795)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5166926980018616
    2. '(f' → logprob: -2.016692638397217
    3. '(i' → logprob: -2.641692638397217
    4. '(x' → logprob: -2.641692638397217
    5. '(F' → logprob: -3.016692638397217
    6. '(_,' → logprob: -3.266692638397217
    7. 'FACT' → logprob: -3.891692638397217
    8. '(a' → logprob: -5.141692638397217
    9. 'fact' → logprob: -5.516692638397217
    10. '1' → logprob: -6.516692638397217

Token 137: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0020835241302847862
    2. '[' → logprob: -6.5020833015441895
    3. '-' → logprob: -7.5020833015441895
    4. '21' → logprob: -11.252083778381348
    5. '20' → logprob: -12.002083778381348
    6. '1' → logprob: -12.377083778381348
    7. '[i' → logprob: -13.627083778381348
    8. '0' → logprob: -13.752083778381348
    9. '```' → logprob: -13.752083778381348
    10. '][-' → logprob: -13.877083778381348

Token 138: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06740830093622208
    2. '1' → logprob: -2.817408323287964
    3. '[-' → logprob: -5.317408084869385
    4. ' -' → logprob: -8.067408561706543
    5. '```' → logprob: -9.692408561706543
    6. '(-' → logprob: -9.817408561706543
    7. '[' → logprob: -10.567408561706543
    8. '(' → logprob: -10.942408561706543
    9. '``' → logprob: -11.442408561706543
    10. '0' → logprob: -11.942408561706543

Token 139: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.953104555606842
    2. '(-' → logprob: -1.2031044960021973
    3. ',-' → logprob: -2.4531044960021973
    4. '[-' → logprob: -2.7031044960021973
    5. '(len' → logprob: -3.0781044960021973
    6. '-' → logprob: -3.3281044960021973
    7. 'mod' → logprob: -3.8281044960021973
    8. '(' → logprob: -4.078104496002197
    9. '(mod' → logprob: -4.328104496002197
    10. ',len' → logprob: -5.328104496002197

Token 140: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0013713110238313675
    2. '-' → logprob: -6.626371383666992
    3. ' mod' → logprob: -10.126371383666992
    4. '-mod' → logprob: -13.751371383666992
    5. '998' → logprob: -13.876371383666992
    6. '(mod' → logprob: -13.876371383666992
    7. ' -' → logprob: -14.126371383666992
    8. '	mod' → logprob: -14.251371383666992
    9. ' ' → logprob: -15.126371383666992
    10. '.mod' → logprob: -15.376371383666992

Token 141: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.547789674485102e-05
    2. ' -' → logprob: -10.250035285949707
    3. '–' → logprob: -17.625036239624023
    4. '−' → logprob: -18.500036239624023
    5. '()-' → logprob: -19.750036239624023
    6. '2' → logprob: -20.875036239624023
    7. '```' → logprob: -21.000036239624023
    8. '{-' → logprob: -21.625036239624023
    9. '-=' → logprob: -22.000036239624023
    10. '-
' → logprob: -22.125036239624023

Token 142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.861651490908116e-05
    2. '-' → logprob: -9.625068664550781
    3. '```' → logprob: -13.875068664550781
    4. ' -' → logprob: -14.625068664550781
    5. ' ' → logprob: -15.000068664550781
    6. '
' → logprob: -15.375068664550781
    7. '

' → logprob: -15.687568664550781
    8. '' → logprob: -16.37506866455078
    9. '3' → logprob: -16.50006866455078
    10. '  ' → logprob: -17.62506866455078

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000546718598343432
    2. ' ,' → logprob: -7.625546932220459
    3. 'mod' → logprob: -10.7505464553833
    4. ',p' → logprob: -11.2505464553833
    5. ',module' → logprob: -11.7505464553833
    6. ',-' → logprob: -12.5005464553833
    7. ',m' → logprob: -13.0005464553833
    8. '),' → logprob: -13.7505464553833
    9. ',param' → logprob: -14.3755464553833
    10. ',(' → logprob: -14.5005464553833

Token 144: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.620622712536715e-05
    2. ' mod' → logprob: -10.250045776367188
    3. ',' → logprob: -11.625045776367188
    4. ')' → logprob: -13.625045776367188
    5. '(mod' → logprob: -15.500045776367188
    6. '),' → logprob: -15.750045776367188
    7. '	mod' → logprob: -15.875045776367188
    8. ' ' → logprob: -16.500045776367188
    9. '
' → logprob: -17.625045776367188
    10. '  ' → logprob: -17.750045776367188

Token 145: ')]' (ID: 15710)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007179440930485725
    2. '),' → logprob: -5.382179260253906
    3. 'lambda' → logprob: -6.007179260253906
    4. ' ,' → logprob: -10.882179260253906
    5. ')' → logprob: -11.382179260253906
    6. ')],' → logprob: -11.507179260253906
    7. '=lambda' → logprob: -11.757179260253906
    8. ',x' → logprob: -11.757179260253906
    9. ',),' → logprob: -12.632179260253906
    10. 'def' → logprob: -13.007179260253906

Token 146: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00515323132276535
    2. '[::-' → logprob: -5.380153179168701
    3. 'lambda' → logprob: -9.00515365600586
    4. ',
' → logprob: -9.00515365600586
    5. ',[' → logprob: -9.00515365600586
    6. ' ,' → logprob: -9.50515365600586
    7. ',re' → logprob: -10.13015365600586
    8. 'reverse' → logprob: -11.25515365600586
    9. '[' → logprob: -11.75515365600586
    10. '(lambda' → logprob: -12.13015365600586

Token 147: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9289491176605225
    2. 'list' → logprob: -0.9289491176605225
    3. '[list' → logprob: -1.6789491176605225
    4. '[p' → logprob: -5.053949356079102
    5. ' [' → logprob: -5.303949356079102
    6. '[F' → logprob: -5.678949356079102
    7. '[-' → logprob: -5.803949356079102
    8. '[(' → logprob: -6.053949356079102
    9. '[len' → logprob: -6.928949356079102
    10. ' list' → logprob: -7.553949356079102

Token 148: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.03696904331445694
    2. '(re' → logprob: -4.036969184875488
    3. 'range' → logprob: -4.036969184875488
    4. '(map' → logprob: -7.161969184875488
    5. 're' → logprob: -8.786969184875488
    6. 'map' → logprob: -9.911969184875488
    7. 'rev' → logprob: -12.161969184875488
    8. '(reverse' → logprob: -12.536969184875488
    9. '(' → logprob: -12.786969184875488
    10. '(chain' → logprob: -13.911969184875488

Token 149: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01105300523340702
    2. '20' → logprob: -4.511053085327148
    3. '1' → logprob: -12.636053085327148
    4. '21' → logprob: -13.761053085327148
    5. ',' → logprob: -14.886053085327148
    6. ' (' → logprob: -15.136053085327148
    7. ' ' → logprob: -16.38605308532715
    8. '2' → logprob: -16.76105308532715
    9. '19' → logprob: -17.13605308532715
    10. '```' → logprob: -17.88605308532715

Token 150: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0002625278721097857
    2. '1' → logprob: -8.875262260437012
    3. '21' → logprob: -9.125262260437012
    4. ' ' → logprob: -11.500262260437012
    5. '0' → logprob: -13.000262260437012
    6. '2' → logprob: -14.000262260437012
    7. '(' → logprob: -15.500262260437012
    8. '
' → logprob: -16.500263214111328
    9. '-' → logprob: -16.500263214111328
    10. '```' → logprob: -17.125263214111328

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10058608651161194
    2. ',-' → logprob: -2.350586175918579
    3. '20' → logprob: -8.4755859375
    4. '0' → logprob: -9.4755859375
    5. '-' → logprob: -9.6005859375
    6. ' ,' → logprob: -11.1005859375
    7. '19' → logprob: -12.4755859375
    8. '1' → logprob: -12.8505859375
    9. ' ,-' → logprob: -14.1005859375
    10. '21' → logprob: -14.3505859375

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010080150241265073
    2. ' ' → logprob: -9.250101089477539
    3. '1' → logprob: -12.500101089477539
    4. '-' → logprob: -15.000101089477539
    5. '```' → logprob: -15.125101089477539
    6. '
' → logprob: -16.12510108947754
    7. '   ' → logprob: -16.75010108947754
    8. '  ' → logprob: -16.93760108947754
    9. '	' → logprob: -17.50010108947754
    10. ' -' → logprob: -17.68760108947754

Token 153: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07213801890611649
    2. '0' → logprob: -2.9471380710601807
    3. ',-' → logprob: -4.072137832641602
    4. '-' → logprob: -10.072137832641602
    5. ' ,' → logprob: -11.072137832641602
    6. '```' → logprob: -12.197137832641602
    7. ' ' → logprob: -13.322137832641602
    8. ' -' → logprob: -14.447137832641602
    9. ' ,-' → logprob: -14.697137832641602
    10. ',
' → logprob: -15.072137832641602

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004098108503967524
    2. '0' → logprob: -5.504097938537598
    3. '-' → logprob: -11.629097938537598
    4. ' ' → logprob: -12.254097938537598
    5. ',' → logprob: -13.129097938537598
    6. ' -' → logprob: -13.754097938537598
    7. '   ' → logprob: -13.754097938537598
    8. '```' → logprob: -13.879097938537598
    9. '<|end|>' → logprob: -14.754097938537598
    10. '  ' → logprob: -15.004097938537598

Token 155: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2870960533618927
    2. ',' → logprob: -1.5370960235595703
    3. ')),' → logprob: -3.7870960235595703
    4. ',-' → logprob: -5.16209602355957
    5. '-' → logprob: -5.28709602355957
    6. '1' → logprob: -8.28709602355957
    7. '0' → logprob: -8.41209602355957
    8. '),(' → logprob: -8.41209602355957
    9. '))' → logprob: -9.41209602355957
    10. ')' → logprob: -9.91209602355957

Token 156: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.47414734959602356
    2. ' lambda' → logprob: -0.9741473197937012
    3. '(lambda' → logprob: -9.72414779663086
    4. '=lambda' → logprob: -11.47414779663086
    5. '    ' → logprob: -16.34914779663086
    6. '   ' → logprob: -16.97414779663086
    7. '.lambda' → logprob: -16.97414779663086
    8. '```' → logprob: -18.34914779663086
    9. '0' → logprob: -19.09914779663086
    10. 'λ' → logprob: -19.22414779663086

Token 157: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008062947308644652
    2. ' x' → logprob: -7.1258063316345215
    3. 'acc' → logprob: -14.000805854797363
    4. 'a' → logprob: -15.250805854797363
    5. ' ' → logprob: -15.375805854797363
    6. 'lambda' → logprob: -15.750805854797363
    7. 'f' → logprob: -15.875805854797363
    8. 'i' → logprob: -16.25080680847168
    9. ' acc' → logprob: -17.00080680847168
    10. '   ' → logprob: -17.37580680847168

Token 158: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.011588845402002335
    2. ',' → logprob: -4.511589050292969
    3. ',(' → logprob: -8.011589050292969
    4. ',x' → logprob: -8.511589050292969
    5. ' ,' → logprob: -12.636589050292969
    6. 'y' → logprob: -13.511589050292969
    7. ',m' → logprob: -14.386589050292969
    8. ',int' → logprob: -15.011589050292969
    9. ',k' → logprob: -15.011589050292969
    10. ',v' → logprob: -15.011589050292969

Token 159: ':(' (ID: 7990)
  Prédit: ':('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':(' → logprob: -0.22659948468208313
    2. ':' → logprob: -1.6015994548797607
    3. ' :(' → logprob: -7.47659969329834
    4. ' :' → logprob: -8.10159969329834
    5. ':x' → logprob: -8.22659969329834
    6. '(x' → logprob: -10.72659969329834
    7. ':
' → logprob: -12.22659969329834
    8. ',' → logprob: -12.60159969329834
    9. ':[' → logprob: -12.85159969329834
    10. ':y' → logprob: -12.97659969329834

Token 160: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.11519923061132431
    2. 'x' → logprob: -2.240199327468872
    3. ' (' → logprob: -6.365199089050293
    4. ' x' → logprob: -7.365199089050293
    5. '(' → logprob: -11.115199089050293
    6. '	x' → logprob: -13.990199089050293
    7. '   ' → logprob: -14.177699089050293
    8. ' ' → logprob: -14.240199089050293
    9. '  ' → logprob: -14.302699089050293
    10. '((' → logprob: -14.365199089050293

Token 161: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.001207019085995853
    2. '*' → logprob: -6.876206874847412
    3. '*x' → logprob: -8.75120735168457
    4. ' *' → logprob: -11.50120735168457
    5. 'y' → logprob: -12.25120735168457
    6. '*(' → logprob: -14.12620735168457
    7. ',y' → logprob: -15.25120735168457
    8. '**' → logprob: -17.50120735168457
    9. '*p' → logprob: -17.50120735168457
    10. '*m' → logprob: -17.87620735168457

Token 162: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.008847611956298351
    2. '%' → logprob: -4.758847713470459
    3. ')' → logprob: -8.3838472366333
    4. ' %' → logprob: -13.5088472366333
    5. 'mod' → logprob: -13.6338472366333
    6. 'pow' → logprob: -14.3838472366333
    7. ']%' → logprob: -14.7588472366333
    8. ' )' → logprob: -15.1338472366333
    9. '%x' → logprob: -15.5088472366333
    10. ' pow' → logprob: -16.008848190307617

Token 163: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.3782830137643032e-05
    2. ' mod' → logprob: -11.25001335144043
    3. '(mod' → logprob: -14.75001335144043
    4. 'pow' → logprob: -15.25001335144043
    5. 'factor' → logprob: -16.75001335144043
    6. 'fact' → logprob: -18.00001335144043
    7. '	mod' → logprob: -18.87501335144043
    8. ' ' → logprob: -19.00001335144043
    9. 'mods' → logprob: -19.87501335144043
    10. 'moder' → logprob: -19.87501335144043

Token 164: '))[' (ID: 101036)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02271900698542595
    2. ')' → logprob: -3.897718906402588
    3. ',' → logprob: -6.272718906402588
    4. '),' → logprob: -8.647719383239746
    5. '));' → logprob: -10.522719383239746
    6. ' ))' → logprob: -10.522719383239746
    7. ')),' → logprob: -10.897719383239746
    8. ')))' → logprob: -10.897719383239746
    9. ' ' → logprob: -13.022719383239746
    10. '))
' → logprob: -13.147719383239746

Token 165: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.08206548541784286
    2. '[::-' → logprob: -3.0820655822753906
    3. ':' → logprob: -3.8320655822753906
    4. '-' → logprob: -5.082065582275391
    5. '::' → logprob: -6.707065582275391
    6. ':-' → logprob: -6.832065582275391
    7. ':]' → logprob: -7.082065582275391
    8. '0' → logprob: -7.582065582275391
    9. ' :' → logprob: -8.45706558227539
    10. ']' → logprob: -8.45706558227539

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10022781789302826
    2. '-' → logprob: -2.3502278327941895
    3. '```' → logprob: -11.725227355957031
    4. ']' → logprob: -11.850227355957031
    5. '])' → logprob: -13.600227355957031
    6. '(-' → logprob: -13.600227355957031
    7. '-
' → logprob: -13.850227355957031
    8. '0' → logprob: -15.225227355957031
    9. '(' → logprob: -15.225227355957031
    10. '``' → logprob: -15.600227355957031

Token 167: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013684460893273354
    2. ')' → logprob: -4.388684272766113
    3. '()]' → logprob: -7.513684272766113
    4. '])' → logprob: -8.513684272766113
    5. '<|end|>' → logprob: -8.888684272766113
    6. '()' → logprob: -9.388684272766113
    7. ')]' → logprob: -9.388684272766113
    8. '#' → logprob: -10.138684272766113
    9. 'def' → logprob: -11.138684272766113
    10. '(' → logprob: -11.138684272766113

Token 168: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.534793496131897
    2. ')' → logprob: -1.409793496131897
    3. 'def' → logprob: -2.4097933769226074
    4. ' ' → logprob: -3.9097933769226074
    5. '<|end|>' → logprob: -4.034793376922607
    6. '#' → logprob: -4.659793376922607
    7. '[' → logprob: -5.159793376922607
    8. ' (' → logprob: -5.284793376922607
    9. ']' → logprob: -5.534793376922607
    10. '(
' → logprob: -5.659793376922607

Token 169: ' Comb' (ID: 37810)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.6057960987091064
    2. ' Segment' → logprob: -1.6057960987091064
    3. ' Union' → logprob: -2.3557960987091064
    4. ' Solver' → logprob: -2.4807960987091064
    5. ' Matrix' → logprob: -2.6057960987091064
    6. ' Seg' → logprob: -2.7307960987091064
    7. ' Factor' → logprob: -2.7307960987091064
    8. ' Counter' → logprob: -3.2307960987091064
    9. ' Combination' → logprob: -3.2307960987091064
    10. ' Bit' → logprob: -3.4807960987091064

Token 170: 'Memo' (ID: 58450)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09091653674840927
    2. '(object' → logprob: -2.715916633605957
    3. '():' → logprob: -4.340916633605957
    4. ':
' → logprob: -5.965916633605957
    5. '(' → logprob: -6.715916633605957
    6. 'ination' → logprob: -8.090916633605957
    7. '>:' → logprob: -8.090916633605957
    8. 'ector' → logprob: -8.215916633605957
    9. '():
' → logprob: -8.215916633605957
    10. '{' → logprob: -8.215916633605957

Token 171: 'Dict' (ID: 19608)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006060448009520769
    2. '():' → logprob: -5.256060600280762
    3. '(object' → logprob: -8.256060600280762
    4. '>:' → logprob: -8.506060600280762
    5. ':
' → logprob: -8.756060600280762
    6. 'ation' → logprob: -10.381060600280762
    7. '(":' → logprob: -10.506060600280762
    8. '{' → logprob: -10.756060600280762
    9. '):' → logprob: -10.756060600280762
    10. '(' → logprob: -10.881060600280762

Token 172: '(dict' (ID: 71792)
  Prédit: '(dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dict' → logprob: -0.024359727278351784
    2. ':' → logprob: -4.024359703063965
    3. '{' → logprob: -5.774359703063965
    4. '(' → logprob: -6.024359703063965
    5. 'dict' → logprob: -7.899359703063965
    6. '({' → logprob: -9.024359703063965
    7. '(dictionary' → logprob: -9.149359703063965
    8. '():' → logprob: -10.399359703063965
    9. '(D' → logprob: -11.649359703063965
    10. ' dict' → logprob: -12.149359703063965

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012683277018368244
    2. '):
' → logprob: -4.387683391571045
    3. ' ):' → logprob: -9.012682914733887
    4. ')' → logprob: -10.262682914733887
    5. '):

' → logprob: -12.637682914733887
    6. '   ' → logprob: -12.637682914733887
    7. '):
' → logprob: -12.637682914733887
    8. ':' → logprob: -12.887682914733887
    9. '[]):' → logprob: -14.387682914733887
    10. ',' → logprob: -14.512682914733887

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007094517932273448
    2. ' def' → logprob: -7.625709533691406
    3. 'def' → logprob: -9.000709533691406
    4. '	def' → logprob: -9.625709533691406
    5. '   ' → logprob: -10.625709533691406
    6. '    ' → logprob: -13.000709533691406
    7. '    
' → logprob: -13.375709533691406
    8. '   ' → logprob: -14.375709533691406
    9. '       ' → logprob: -14.500709533691406
    10. '```' → logprob: -14.625709533691406

Token 175: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14114291965961456
    2. ' def' → logprob: -2.1411428451538086
    3. 'def' (adapté à ' def') → logprob: -4.266142845153809
    4. '	def' → logprob: -10.891142845153809
    5. '__' → logprob: -11.266142845153809
    6. ' __' → logprob: -11.516142845153809
    7. '    
' → logprob: -11.641142845153809
    8. '    ' → logprob: -12.141142845153809
    9. '   ' → logprob: -12.266142845153809
    10. ' ' → logprob: -12.391142845153809

Token 176: ' __' (ID: 2516)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.1004694476723671
    2. 'getitem' → logprob: -3.1004693508148193
    3. 'init' → logprob: -3.3504693508148193
    4. '_missing' → logprob: -4.600469589233398
    5. ' missing' → logprob: -5.350469589233398
    6. '__' → logprob: -7.600469589233398
    7. 'call' → logprob: -8.600469589233398
    8. 'Missing' → logprob: -12.475469589233398
    9. '_init' → logprob: -12.725469589233398
    10. 'contains' → logprob: -13.600469589233398

Token 177: 'missing' (ID: 68892)
  Prédit: 'missing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.2446087747812271
    2. 'getitem' → logprob: -1.744608759880066
    3. 'init' → logprob: -3.2446088790893555
    4. 'contains' → logprob: -5.7446088790893555
    5. ' missing' → logprob: -10.244608879089355
    6. 'miss' → logprob: -10.244608879089355
    7. 'set' → logprob: -11.744608879089355
    8. 'call' → logprob: -12.244608879089355
    9. 'class' → logprob: -12.369608879089355
    10. '_missing' → logprob: -13.994608879089355

Token 178: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.001946248929016292
    2. '(self' → logprob: -6.251946449279785
    3. 'key' → logprob: -12.501946449279785
    4. 'self' → logprob: -12.626946449279785
    5. '__' → logprob: -12.751946449279785
    6. '_(' → logprob: -13.251946449279785
    7. '__((' → logprob: -13.376946449279785
    8. '__(
' → logprob: -13.626946449279785
    9. '(key' → logprob: -14.126946449279785
    10. 'def' → logprob: -14.501946449279785

Token 179: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001740031992085278
    2. ' self' → logprob: -6.376739978790283
    3. '(self' → logprob: -11.001740455627441
    4. '   ' → logprob: -11.376740455627441
    5. ',self' → logprob: -13.001740455627441
    6. ',' → logprob: -13.251740455627441
    7. '       ' → logprob: -13.501740455627441
    8. '=self' → logprob: -13.626740455627441
    9. '	self' → logprob: -14.001740455627441
    10. 'key' → logprob: -14.626740455627441

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002314761048182845
    2. ' ,' → logprob: -6.502314567565918
    3. ',key' → logprob: -7.377314567565918
    4. 'self' → logprob: -9.002314567565918
    5. ',self' → logprob: -10.002314567565918
    6. ',k' → logprob: -12.002314567565918
    7. 'key' → logprob: -12.252314567565918
    8. '   ' → logprob: -13.127314567565918
    9. ' key' → logprob: -13.502314567565918
    10. '_,' → logprob: -14.502314567565918

Token 181: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.00015717383939772844
    2. ' key' → logprob: -8.875157356262207
    3. '   ' → logprob: -11.875157356262207
    4. 'k' → logprob: -12.250157356262207
    5. 'self' → logprob: -12.375157356262207
    6. '       ' → logprob: -14.375157356262207
    7. 'item' → logprob: -15.375157356262207
    8. ' ' → logprob: -15.875157356262207
    9. '           ' → logprob: -16.00015640258789
    10. '	key' → logprob: -16.50015640258789

Token 182: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17976443469524384
    2. '):' → logprob: -1.8047643899917603
    3. '   ' → logprob: -11.929764747619629
    4. '):
' → logprob: -12.554764747619629
    5. ':' → logprob: -13.304764747619629
    6. ' ):
' → logprob: -13.304764747619629
    7. '):

' → logprob: -13.679764747619629
    8. '():
' → logprob: -13.679764747619629
    9. ')' → logprob: -14.054764747619629
    10. ' ):' → logprob: -14.679764747619629

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003268380183726549
    2. '(n' → logprob: -6.878268241882324
    3. 'n' → logprob: -7.378268241882324
    4. 'a' → logprob: -7.878268241882324
    5. ' n' → logprob: -8.378268241882324
    6. ',' → logprob: -8.503268241882324
    7. 'x' → logprob: -9.503268241882324
    8. '   ' → logprob: -9.503268241882324
    9. ' (' → logprob: -9.878268241882324
    10. '(' → logprob: -9.878268241882324

Token 184: ' a' (ID: 261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06280632317066193
    2. '       ' → logprob: -2.9378063678741455
    3. '(n' → logprob: -5.062806129455566
    4. ' n' → logprob: -7.062806129455566
    5. 'k' → logprob: -7.562806129455566
    6. 'r' → logprob: -9.187806129455566
    7. 'a' (adapté à ' a') → logprob: -10.562806129455566
    8. 'if' → logprob: -11.437806129455566
    9. 'm' → logprob: -11.562806129455566
    10. 'p' → logprob: -11.937806129455566

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07394875586032867
    2. ',b' → logprob: -2.823948860168457
    3. ',n' → logprob: -4.448948860168457
    4. ' ,' → logprob: -9.948948860168457
    5. ',v' → logprob: -9.948948860168457
    6. ',k' → logprob: -10.198948860168457
    7. ',a' → logprob: -10.573948860168457
    8. 'b' → logprob: -11.198948860168457
    9. 'n' → logprob: -11.573948860168457
    10. ',p' → logprob: -12.073948860168457

Token 186: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003809833142440766
    2. ' b' → logprob: -7.875380992889404
    3. 'k' → logprob: -14.000380516052246
    4. '   ' → logprob: -17.625381469726562
    5. ' ' → logprob: -17.875381469726562
    6. 'm' → logprob: -18.625381469726562
    7. 'n' → logprob: -18.875381469726562
    8. '*b' → logprob: -19.000381469726562
    9. '  ' → logprob: -19.250381469726562
    10. '	b' → logprob: -19.250381469726562

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891886681318283
    2. ' =' → logprob: -2.578918933868408
    3. ')' → logprob: -10.57891845703125
    4. ')=' → logprob: -12.70391845703125
    5. '=
' → logprob: -15.20391845703125
    6. ',' → logprob: -15.70391845703125
    7. '   ' → logprob: -16.32891845703125
    8. '):
' → logprob: -16.95391845703125
    9. ']' → logprob: -17.07891845703125
    10. '),' → logprob: -17.45391845703125

Token 188: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.061967913061380386
    2. ' key' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.686967849731445
    4. '	key' → logprob: -16.811967849731445
    5. ' ' → logprob: -16.936967849731445
    6. '(key' → logprob: -17.686967849731445
    7. 'self' → logprob: -17.686967849731445
    8. '
' → logprob: -18.311967849731445
    9. 'int' → logprob: -18.936967849731445
    10. '  ' → logprob: -19.061967849731445

Token 189: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5418033003807068
    2. '       ' → logprob: -2.2918033599853516
    3. '<|end|>' → logprob: -2.2918033599853516
    4. ' =' → logprob: -2.7918033599853516
    5. ')' → logprob: -2.7918033599853516
    6. '=' → logprob: -3.5418033599853516
    7. '):
' → logprob: -4.291803359985352
    8. '        
' → logprob: -4.291803359985352
    9. '        ' → logprob: -4.666803359985352
    10. '<|end|>' → logprob: -5.291803359985352

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028014369308948517
    2. '<|end|>' → logprob: -6.877801418304443
    3. ' if' → logprob: -7.627801418304443
    4. '[' → logprob: -7.877801418304443
    5. '        
' → logprob: -8.502801895141602
    6. ',' → logprob: -8.752801895141602
    7. ')' → logprob: -9.127801895141602
    8. ':' → logprob: -9.377801895141602
    9. 'if' → logprob: -9.752801895141602
    10. '):
' → logprob: -10.127801895141602

Token 191: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2058848887681961
    2. ' if' → logprob: -1.9558849334716797
    3. '       ' → logprob: -3.2058849334716797
    4. 'res' → logprob: -6.20588493347168
    5. ' res' → logprob: -7.33088493347168
    6. 'result' → logprob: -7.33088493347168
    7. 'self' → logprob: -7.70588493347168
    8. 'r' → logprob: -8.70588493347168
    9. 'return' → logprob: -9.95588493347168
    10. 'n' → logprob: -10.45588493347168

Token 192: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.350208580493927
    2. ' b' → logprob: -1.2252085208892822
    3. 'a' → logprob: -6.725208759307861
    4. ' a' → logprob: -8.100208282470703
    5. ' not' → logprob: -8.600208282470703
    6. '       ' → logprob: -10.225208282470703
    7. '0' → logprob: -10.975208282470703
    8. 'not' → logprob: -11.475208282470703
    9. '           ' → logprob: -12.100208282470703
    10. '   ' → logprob: -13.475208282470703

Token 193: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0021564492490142584
    2. 'a' → logprob: -6.3771562576293945
    3. ' b' → logprob: -7.7521562576293945
    4. '0' → logprob: -11.377156257629395
    5. 'not' → logprob: -12.252156257629395
    6. ' not' → logprob: -12.752156257629395
    7. ' a' → logprob: -13.002156257629395
    8. '   ' → logprob: -13.252156257629395
    9. '	b' → logprob: -15.127156257629395
    10. '(b' → logprob: -15.377156257629395

Token 194: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2753794193267822
    2. '<=' → logprob: -2.2753794193267822
    3. '>b' → logprob: -2.6503794193267822
    4. ' >' → logprob: -3.0253794193267822
    5. ' <=' → logprob: -4.775379180908203
    6. 'b' → logprob: -5.775379180908203
    7. '>a' → logprob: -5.900379180908203
    8. '>=' → logprob: -6.025379180908203
    9. 'a' → logprob: -6.525379180908203
    10. '<' → logprob: -8.275379180908203

Token 195: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003936275374144316
    2. ' b' → logprob: -5.628936290740967
    3. 'a' → logprob: -8.003935813903809
    4. ' a' → logprob: -13.253935813903809
    5. '   ' → logprob: -15.753935813903809
    6. '	b' → logprob: -16.253936767578125
    7. ' ' → logprob: -17.128936767578125
    8. '  ' → logprob: -18.878936767578125
    9. '```' → logprob: -19.628936767578125
    10. '(b' → logprob: -19.941436767578125

Token 196: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0036555302795022726
    2. ' <=' → logprob: -5.628655433654785
    3. 'and' → logprob: -10.628655433654785
    4. 'a' → logprob: -11.128655433654785
    5. ' and' → logprob: -11.378655433654785
    6. 'le' → logprob: -13.503655433654785
    7. '≤' → logprob: -13.503655433654785
    8. '<' → logprob: -14.628655433654785
    9. ']<=' → logprob: -14.628655433654785
    10. '```' → logprob: -15.128655433654785

Token 197: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00038014890742488205
    2. ' a' → logprob: -7.875380039215088
    3. '   ' → logprob: -19.25037956237793
    4. '	a' → logprob: -20.25037956237793
    5. '```' → logprob: -20.37537956237793
    6. '>a' → logprob: -20.50037956237793
    7. '       ' → logprob: -20.87537956237793
    8. ' ' → logprob: -21.12537956237793
    9. '20' → logprob: -21.87537956237793
    10. '1' → logprob: -22.00037956237793

Token 198: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5683988928794861
    2. ' and' → logprob: -1.3183989524841309
    3. ':' → logprob: -1.8183989524841309
    4. '       ' → logprob: -6.443398952484131
    5. ' :
' → logprob: -7.443398952484131
    6. 'and' → logprob: -7.818398952484131
    7. '           ' → logprob: -8.443398475646973
    8. ' :' → logprob: -8.568398475646973
    9. ':return' → logprob: -8.568398475646973
    10. '):
' → logprob: -9.193398475646973

Token 199: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05064379423856735
    2. ' a' → logprob: -3.0506436824798584
    3. 'b' → logprob: -6.3006439208984375
    4. ' b' → logprob: -8.550643920898438
    5. '(a' → logprob: -12.300643920898438
    6. '   ' → logprob: -12.425643920898438
    7. ' ' → logprob: -12.800643920898438
    8. '	a' → logprob: -12.863143920898438
    9. '0' → logprob: -13.238143920898438
    10. ' (' → logprob: -13.300643920898438

Token 200: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.11349617689847946
    2. ' >=' → logprob: -2.2384960651397705
    3. '>' → logprob: -7.73849630355835
    4. ']>=' → logprob: -9.238495826721191
    5. '<|end|>' → logprob: -10.613495826721191
    6. ')>=' → logprob: -10.738495826721191
    7. ' not' → logprob: -11.113495826721191
    8. ' in' → logprob: -11.113495826721191
    9. '==' → logprob: -11.613495826721191
    10. '<=' → logprob: -12.113495826721191

Token 201: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.22992375493049622
    2. '100' → logprob: -2.729923725128174
    3. '=' → logprob: -3.354923725128174
    4. '2' → logprob: -3.479923725128174
    5. '10' → logprob: -3.979923725128174
    6. 'mod' → logprob: -4.229923725128174
    7. '200' → logprob: -4.854923725128174
    8. '20' → logprob: -4.979923725128174
    9. '300' → logprob: -4.979923725128174
    10. ' len' → logprob: -5.104923725128174

Token 202: '21' (ID: 2040)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03536007180809975
    2. '100' → logprob: -4.410359859466553
    3. 'mod' → logprob: -5.285359859466553
    4. '=' → logprob: -5.410359859466553
    5. '21' → logprob: -5.660359859466553
    6. '10' → logprob: -5.785359859466553
    7. '20' → logprob: -6.410359859466553
    8. '2' → logprob: -6.535359859466553
    9. '200' → logprob: -6.910359859466553
    10. '1' → logprob: -7.160359859466553

Token 203: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10377796739339828
    2. ':' → logprob: -2.3537778854370117
    3. '):
' → logprob: -6.478777885437012
    4. ' and' → logprob: -7.353777885437012
    5. '       ' → logprob: -7.353777885437012
    6. '           ' → logprob: -7.603777885437012
    7. ',' → logprob: -9.603777885437012
    8. ' :
' → logprob: -9.603777885437012
    9. ' :' → logprob: -10.603777885437012
    10. '):' → logprob: -10.978777885437012

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05315212905406952
    2. ':
' → logprob: -3.553152084350586
    3. ':' → logprob: -3.803152084350586
    4. ',' → logprob: -8.178152084350586
    5. '):
' → logprob: -8.803152084350586
    6. '       ' → logprob: -8.928152084350586
    7. ' and' → logprob: -10.178152084350586
    8. ' :' → logprob: -10.428152084350586
    9. ' =' → logprob: -10.553152084350586
    10. '<|end|>' → logprob: -10.803152084350586

Token 205: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2988022565841675
    2. 'res' → logprob: -2.173802375793457
    3. 'result' → logprob: -2.423802375793457
    4. 'return' → logprob: -4.298802375793457
    5. ' res' → logprob: -4.423802375793457
    6. ' result' → logprob: -4.798802375793457
    7. '       ' → logprob: -5.173802375793457
    8. 'self' (adapté à ' self') → logprob: -5.423802375793457
    9. 'val' → logprob: -5.548802375793457
    10. '               ' → logprob: -6.548802375793457

Token 206: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -4.1557283111615106e-05
    2. '[a' → logprob: -10.250041961669922
    3. '[self' → logprob: -12.250041961669922
    4. '[(' → logprob: -14.250041961669922
    5. '[' → logprob: -14.625041961669922
    6. 'a' → logprob: -16.250041961669922
    7. ' [' → logprob: -17.375041961669922
    8. 'self' → logprob: -17.375041961669922
    9. '[b' → logprob: -17.375041961669922
    10. '   ' → logprob: -17.500041961669922

Token 207: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005238975863903761
    2. ']=' → logprob: -5.255239009857178
    3. ' ]' → logprob: -13.00523853302002
    4. ']=(' → logprob: -13.25523853302002
    5. '=' → logprob: -13.75523853302002
    6. ']={' → logprob: -17.005239486694336
    7. ']
' → logprob: -17.380239486694336
    8. ' =' → logprob: -18.255239486694336
    9. ']+=' → logprob: -18.380239486694336
    10. '   ' → logprob: -18.505239486694336

Token 208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193390250205994
    2. ' =' → logprob: -1.5019339323043823
    3. '=self' → logprob: -12.751934051513672
    4. ']=' → logprob: -14.126934051513672
    5. ']' → logprob: -15.126934051513672
    6. '[' → logprob: -16.376934051513672
    7. ')=' → logprob: -16.501934051513672
    8. '        ' → logprob: -16.626934051513672
    9. '=None' → logprob: -16.626934051513672
    10. '       ' → logprob: -16.751934051513672

Token 209: ' FACT' (ID: 99053)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10844367742538452
    2. 'FACT' → logprob: -2.6084437370300293
    3. 'prod' → logprob: -3.7334437370300293
    4. '(prod' → logprob: -5.608443737030029
    5. 'FA' → logprob: -7.858443737030029
    6. ' (' → logprob: -8.358443260192871
    7. '(PRO' → logprob: -8.608443260192871
    8. '(self' → logprob: -8.983443260192871
    9. 'fact' → logprob: -9.108443260192871
    10. ' FACT' → logprob: -9.358443260192871

Token 210: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00011760921915993094
    2. '[key' → logprob: -10.125117301940918
    3. '[b' → logprob: -10.250117301940918
    4. 'a' → logprob: -10.625117301940918
    5. '[' → logprob: -12.125117301940918
    6. '   ' → logprob: -12.500117301940918
    7. '[self' → logprob: -12.625117301940918
    8. '[-' → logprob: -13.875117301940918
    9. '[
' → logprob: -14.375117301940918
    10. '__[' → logprob: -14.750117301940918

Token 211: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006742723751813173
    2. ']*' → logprob: -5.00674295425415
    3. '*' → logprob: -11.131742477416992
    4. '   ' → logprob: -11.631742477416992
    5. ' ]' → logprob: -13.381742477416992
    6. '-' → logprob: -14.881742477416992
    7. ']
' → logprob: -14.881742477416992
    8. ' ' → logprob: -15.006742477416992
    9. ']*(' → logprob: -15.256742477416992
    10. '
' → logprob: -15.631742477416992

Token 212: 'FACT' (ID: 105795)
  Prédit: 'FACT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -0.03605346754193306
    2. 'pow' → logprob: -3.786053419113159
    3. '(' → logprob: -4.411053657531738
    4. '(pow' → logprob: -7.786053657531738
    5. ' FACT' → logprob: -9.286053657531738
    6. ' pow' → logprob: -11.286053657531738
    7. '((' → logprob: -11.411053657531738
    8. 'fact' → logprob: -11.411053657531738
    9. 'FA' → logprob: -11.536053657531738
    10. '   ' → logprob: -11.911053657531738

Token 213: '_INV' (ID: 116669)
  Prédit: '_INV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INV' → logprob: -2.7729658540920354e-05
    2. 'INV' → logprob: -10.625027656555176
    3. '   ' → logprob: -13.750027656555176
    4. '_inv' → logprob: -14.250027656555176
    5. 'inv' → logprob: -14.750027656555176
    6. '```' → logprob: -15.750027656555176
    7. '[-' → logprob: -15.750027656555176
    8. '[_' → logprob: -15.875027656555176
    9. '[' → logprob: -15.875027656555176
    10. '_INF' → logprob: -16.125028610229492

Token 214: '[b' (ID: 40800)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.6374322772026062
    2. '[(' → logprob: -1.387432336807251
    3. '[b' → logprob: -1.637432336807251
    4. '[key' → logprob: -3.762432336807251
    5. '[' → logprob: -5.887432098388672
    6. '[
' → logprob: -7.137432098388672
    7. '[[' → logprob: -9.762432098388672
    8. '(a' → logprob: -9.887432098388672
    9. 'a' → logprob: -10.387432098388672
    10. '[-' → logprob: -10.512432098388672

Token 215: ']%' (ID: 158002)
  Prédit: ']%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']%' → logprob: -0.48931050300598145
    2. '%' → logprob: -0.9893105030059814
    3. ']' → logprob: -4.239310264587402
    4. ' %' → logprob: -7.364310264587402
    5. ')%' → logprob: -10.364310264587402
    6. ']*' → logprob: -11.364310264587402
    7. ' ]' → logprob: -11.864310264587402
    8. '*' → logprob: -11.989310264587402
    9. '%n' → logprob: -13.114310264587402
    10. '```' → logprob: -13.239310264587402

Token 216: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.4121114822482923e-06
    2. ' mod' → logprob: -12.625003814697266
    3. '998' → logprob: -17.375003814697266
    4. '(mod' → logprob: -19.250003814697266
    5. '	mod' → logprob: -19.875003814697266
    6. 'moder' → logprob: -21.500003814697266
    7. '
' → logprob: -22.375003814697266
    8. 'mo' → logprob: -22.625003814697266
    9. ' ' → logprob: -22.875003814697266
    10. '```' → logprob: -23.000003814697266

Token 217: '*' (ID: 9)
  Prédit: '*self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*self' → logprob: -1.0157947540283203
    2. ' *' → logprob: -1.1407947540283203
    3. '*' → logprob: -1.3907947540283203
    4. '%' → logprob: -3.2657947540283203
    5. '       ' → logprob: -4.14079475402832
    6. '   ' → logprob: -5.64079475402832
    7. '<|end|>' → logprob: -5.76579475402832
    8. ' %' → logprob: -6.01579475402832
    9. '           ' → logprob: -6.01579475402832
    10. '...' → logprob: -7.64079475402832

Token 218: 'FACT' (ID: 105795)
  Prédit: 'FACT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -1.4259644558478612e-05
    2. ' FACT' → logprob: -11.250014305114746
    3. 'FA' → logprob: -14.875014305114746
    4. '(' → logprob: -15.500014305114746
    5. 'fact' → logprob: -15.500014305114746
    6. 'FAC' → logprob: -16.12501335144043
    7. '_FACT' → logprob: -16.37501335144043
    8. '   ' → logprob: -16.62501335144043
    9. 'FAQ' → logprob: -16.62501335144043
    10. '```' → logprob: -17.62501335144043

Token 219: '_INV' (ID: 116669)
  Prédit: '_INV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INV' → logprob: -0.0003556039300747216
    2. '[a' → logprob: -8.75035572052002
    3. 'INV' → logprob: -9.12535572052002
    4. '[' → logprob: -9.75035572052002
    5. '_inv' → logprob: -11.25035572052002
    6. '[_' → logprob: -12.87535572052002
    7. '```' → logprob: -13.00035572052002
    8. '[-' → logprob: -13.62535572052002
    9. 'Inv' → logprob: -13.75035572052002
    10. '...' → logprob: -13.87535572052002

Token 220: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.233804303221405e-05
    2. '[(' → logprob: -10.375092506408691
    3. 'a' → logprob: -10.625092506408691
    4. '[' → logprob: -10.875092506408691
    5. '(a' → logprob: -11.125092506408691
    6. '[-' → logprob: -14.000092506408691
    7. '[
' → logprob: -14.125092506408691
    8. ' [' → logprob: -14.250092506408691
    9. '   ' → logprob: -15.375092506408691
    10. ' a' → logprob: -15.500092506408691

Token 221: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.008324727416038513
    2. ' -' → logprob: -4.88332462310791
    3. '-' → logprob: -8.13332462310791
    4. '[b' → logprob: -8.38332462310791
    5. '[' → logprob: -9.13332462310791
    6. '[-' → logprob: -9.75832462310791
    7. 'b' → logprob: -10.75832462310791
    8. '−' → logprob: -13.50832462310791
    9. '-key' → logprob: -13.75832462310791
    10. ']-' → logprob: -13.75832462310791

Token 222: ']%' (ID: 158002)
  Prédit: ']%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']%' → logprob: -0.12703634798526764
    2. ']' → logprob: -2.1270363330841064
    3. '%' → logprob: -9.252036094665527
    4. ' ]' → logprob: -12.002036094665527
    5. ')%' → logprob: -12.127036094665527
    6. '])' → logprob: -15.252036094665527
    7. '}%' → logprob: -15.377036094665527
    8. ' %' → logprob: -16.877037048339844
    9. ']
' → logprob: -17.002037048339844
    10. '']' → logprob: -17.127037048339844

Token 223: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. ' mod' → logprob: -16.375
    3. '(mod' → logprob: -18.25
    4. '	mod' → logprob: -20.0
    5. '```' → logprob: -20.375
    6. '998' → logprob: -21.0
    7. 'moder' → logprob: -22.25
    8. '
' → logprob: -22.375
    9. ' ' → logprob: -22.75
    10. '`' → logprob: -22.75

Token 224: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036659908946603537
    2. ' return' → logprob: -6.503665924072266
    3. 'return' → logprob: -7.003665924072266
    4. '           ' → logprob: -7.753665924072266
    5. '	' → logprob: -8.003665924072266
    6. '	return' → logprob: -8.628665924072266
    7. ':return' → logprob: -9.128665924072266
    8. '   ' → logprob: -10.503665924072266
    9. '	       ' → logprob: -10.503665924072266
    10. '<|end|>' → logprob: -10.503665924072266

Token 225: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1263965666294098
    2. '<|end|>' → logprob: -3.251396656036377
    3. '   ' → logprob: -3.876396656036377
    4. ' return' → logprob: -4.001396656036377
    5. '           ' → logprob: -4.626396656036377
    6. ':return' → logprob: -5.001396656036377
    7. '	return' → logprob: -5.126396656036377
    8. ' ' → logprob: -5.626396656036377
    9. '        ' → logprob: -6.251396656036377
    10. '	' → logprob: -6.376396656036377

Token 226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00018625585653353482
    2. '           ' → logprob: -9.0001859664917
    3. ' return' → logprob: -10.0001859664917
    4. '       ' → logprob: -11.0001859664917
    5. ':return' → logprob: -14.7501859664917
    6. ')return' → logprob: -16.250186920166016
    7. '	return' → logprob: -16.375186920166016
    8. '   ' → logprob: -17.000186920166016
    9. '{return' → logprob: -17.500186920166016
    10. '
' → logprob: -17.750186920166016

Token 227: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8193366486229934e-05
    2. ' self' → logprob: -11.000018119812012
    3. '(self' → logprob: -13.500018119812012
    4. '[self' → logprob: -17.250019073486328
    5. 'int' → logprob: -19.125019073486328
    6. '*self' → logprob: -19.750019073486328
    7. '	self' → logprob: -20.250019073486328
    8. '0' → logprob: -20.500019073486328
    9. '
' → logprob: -20.625019073486328
    10. '1' → logprob: -21.000019073486328

Token 228: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: 0.0
    2. 'key' → logprob: -17.375
    3. '[
' → logprob: -20.25
    4. '[self' → logprob: -20.25
    5. '[' → logprob: -20.375
    6. '(key' → logprob: -21.25
    7. ',key' → logprob: -21.75
    8. 'def' → logprob: -22.125
    9. '```' → logprob: -22.375
    10. 'self' → logprob: -22.75

Token 229: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8193366486229934e-05
    2. 'return' → logprob: -12.125018119812012
    3. '        ' → logprob: -13.000018119812012
    4. '<|end|>' → logprob: -13.375018119812012
    5. '      ' → logprob: -13.500018119812012
    6. '[]' → logprob: -14.125018119812012
    7. ')' → logprob: -14.250018119812012
    8. 'else' → logprob: -14.250018119812012
    9. 'raise' → logprob: -14.250018119812012
    10. '.' → logprob: -14.375018119812012

Token 231: ' self' (ID: 1051)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.8708230257034302
    2. 'else' → logprob: -1.1208230257034302
    3. '       ' → logprob: -1.3708230257034302
    4. 'return' → logprob: -7.120822906494141
    5. ' raise' → logprob: -7.995822906494141
    6. 'self' (adapté à ' self') → logprob: -8.87082290649414
    7. ' else' → logprob: -9.49582290649414
    8. 'Key' → logprob: -9.87082290649414
    9. '        
' → logprob: -10.49582290649414
    10. '   ' → logprob: -11.62082290649414

Token 232: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.1706974059343338
    2. 'eturn' → logprob: -2.4206974506378174
    3. 'aise' → logprob: -3.2956974506378174
    4. 'raise' → logprob: -3.6706974506378174
    5. 'def' → logprob: -6.295697212219238
    6. 'ey' → logprob: -7.295697212219238
    7. '.raise' → logprob: -7.545697212219238
    8. 'urn' → logprob: -7.795697212219238
    9. '=' → logprob: -7.920697212219238
    10. ' =' → logprob: -8.420697212219238

Token 233: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010723421350121498
    2. ']=' → logprob: -4.76072359085083
    3. ')' → logprob: -6.51072359085083
    4. '=' → logprob: -8.135723114013672
    5. ' =' → logprob: -8.885723114013672
    6. ' ]' → logprob: -10.010723114013672
    7. '[' → logprob: -10.385723114013672
    8. ')=' → logprob: -10.385723114013672
    9. ')]' → logprob: -10.510723114013672
    10. '   ' → logprob: -11.760723114013672

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003924231859855354
    2. ' =' → logprob: -7.875392436981201
    3. 'raise' → logprob: -11.875391960144043
    4. '=None' → logprob: -12.375391960144043
    5. ' raise' → logprob: -14.375391960144043
    6. 'def' → logprob: -15.750391960144043
    7. '=-' → logprob: -16.25039291381836
    8. '        ' → logprob: -16.50039291381836
    9. '=self' → logprob: -17.00039291381836
    10. '	raise' → logprob: -17.12539291381836

Token 235: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004701146390289068
    2. 'None' → logprob: -7.750470161437988
    3. 'pow' → logprob: -10.375470161437988
    4. ' ' → logprob: -12.250470161437988
    5. '1' → logprob: -13.250470161437988
    6. ' None' → logprob: -14.750470161437988
    7. '-' → logprob: -14.875470161437988
    8. 'none' → logprob: -15.875470161437988
    9. '
' → logprob: -16.000469207763672
    10. '(' → logprob: -16.375469207763672

Token 236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013361937599256635
    2. 'pow' → logprob: -7.376336097717285
    3. 'None' → logprob: -7.876336097717285
    4. '(' → logprob: -8.251336097717285
    5. '1' → logprob: -11.251336097717285
    6. ' ' → logprob: -11.376336097717285
    7. 'comb' → logprob: -11.501336097717285
    8. '(pow' → logprob: -11.626336097717285
    9. 'self' → logprob: -12.501336097717285
    10. '(None' → logprob: -12.751336097717285

Token 237: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007018264150246978
    2. 'return' → logprob: -8.125701904296875
    3. ' return' → logprob: -8.250701904296875
    4. '   ' → logprob: -9.875701904296875
    5. '<|end|>' → logprob: -10.375701904296875
    6. '      ' → logprob: -11.125701904296875
    7. ':return' → logprob: -11.500701904296875
    8. ',' → logprob: -11.500701904296875
    9. '	' → logprob: -11.625701904296875
    10. '	return' → logprob: -12.500701904296875

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034261439577676356
    2. ' return' → logprob: -9.00034236907959
    3. 'return' → logprob: -9.00034236907959
    4. '	' → logprob: -10.50034236907959
    5. '   ' → logprob: -11.00034236907959
    6. '<|end|>' → logprob: -11.37534236907959
    7. ',' → logprob: -11.87534236907959
    8. '      ' → logprob: -11.87534236907959
    9. ':return' → logprob: -11.87534236907959
    10. '	return' → logprob: -12.50034236907959

Token 239: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.049043647944927216
    2. ' return' → logprob: -3.674043655395508
    3. '       ' → logprob: -3.799043655395508
    4. ':return' → logprob: -10.174043655395508
    5. '	return' → logprob: -10.924043655395508
    6. ')return' → logprob: -11.299043655395508
    7. '           ' → logprob: -11.549043655395508
    8. '   ' → logprob: -11.674043655395508
    9. '{return' → logprob: -13.174043655395508
    10. 'raise' → logprob: -13.674043655395508

Token 240: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023298585787415504
    2. 'self' → logprob: -3.773298501968384
    3. ' self' → logprob: -10.273298263549805
    4. ' ' → logprob: -10.898298263549805
    5. ' ' → logprob: -18.273298263549805
    6. '(self' → logprob: -18.523298263549805
    7. '   ' → logprob: -18.523298263549805
    8. '
' → logprob: -18.898298263549805
    9. '	self' → logprob: -19.398298263549805
    10. '```' → logprob: -19.398298263549805

Token 241: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015028368216007948
    2. 'self' → logprob: -6.501502990722656
    3. ' ' → logprob: -15.001502990722656
    4. ' self' → logprob: -16.126502990722656
    5. '
' → logprob: -17.626502990722656
    6. '(self' → logprob: -18.876502990722656
    7. '  ' → logprob: -20.251502990722656
    8. '   ' → logprob: -20.251502990722656
    9. '

' → logprob: -20.251502990722656
    10. '０' → logprob: -20.251502990722656

Token 242: '
' (ID: 198)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.17270705103874207
    2. '   ' → logprob: -3.5477070808410645
    3. 'c' → logprob: -3.7977070808410645
    4. 'com' → logprob: -3.9227070808410645
    5. 'cmb' → logprob: -4.0477070808410645
    6. 'cm' → logprob: -4.1727070808410645
    7. ' comb' → logprob: -4.2977070808410645
    8. 'memo' → logprob: -4.9227070808410645
    9. 'def' → logprob: -4.9227070808410645
    10. ')' → logprob: -5.0477070808410645

Token 243: 'COM' (ID: 13775)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.12655234336853027
    2. 'C' → logprob: -2.6265523433685303
    3. 'c' → logprob: -3.5015523433685303
    4. 'cmb' → logprob: -4.376552581787109
    5. 'com' → logprob: -6.126552581787109
    6. 'COM' → logprob: -7.501552581787109
    7. 'cm' → logprob: -8.25155258178711
    8. 'memo' → logprob: -8.50155258178711
    9. ' comb' → logprob: -9.12655258178711
    10. '_comb' → logprob: -9.25155258178711

Token 244: 'BI' (ID: 18223)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.08743339776992798
    2. 'b' → logprob: -2.712433338165283
    3. 'BM' → logprob: -4.087433338165283
    4. 'M' → logprob: -8.962433815002441
    5. 'Bm' → logprob: -9.462433815002441
    6. 'bm' → logprob: -9.587433815002441
    7. 'em' → logprob: -9.837433815002441
    8. 'bin' → logprob: -9.962433815002441
    9. 'EM' → logprob: -10.212433815002441
    10. 'm' → logprob: -10.337433815002441

Token 245: ' =' (ID: 314)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007675010710954666
    2. 'NE' → logprob: -5.0076751708984375
    3. 'M' → logprob: -7.7576751708984375
    4. 'n' → logprob: -9.132675170898438
    5. 'NM' → logprob: -9.507675170898438
    6. 'ND' → logprob: -9.757675170898438
    7. 'NS' → logprob: -10.007675170898438
    8. 'NES' → logprob: -10.132675170898438
    9. 'NAL' → logprob: -10.382675170898438
    10. 'NER' → logprob: -10.507675170898438

Token 246: ' Comb' (ID: 37810)
  Prédit: 'Comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comb' → logprob: -0.0005557744298130274
    2. ' Comb' → logprob: -7.500555992126465
    3. 'Com' → logprob: -13.750555992126465
    4. 'Combo' → logprob: -13.750555992126465
    5. 'Combat' → logprob: -16.25055503845215
    6. 'comb' → logprob: -16.37555503845215
    7. 'Compl' → logprob: -16.37555503845215
    8. 'Combination' → logprob: -16.62555503845215
    9. 'Combined' → logprob: -16.62555503845215
    10. '_comb' → logprob: -16.62555503845215

Token 247: 'Memo' (ID: 58450)
  Prédit: 'Memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Memo' → logprob: -0.0006722823018208146
    2. 'MEM' → logprob: -7.750672340393066
    3. 'Mem' → logprob: -8.500672340393066
    4. 'Dict' → logprob: -10.875672340393066
    5. 'memo' → logprob: -11.250672340393066
    6. 'MD' → logprob: -13.375672340393066
    7. ' Memo' → logprob: -13.875672340393066
    8. ' memo' → logprob: -14.375672340393066
    9. 'MO' → logprob: -14.625672340393066
    10. 'M' → logprob: -14.750672340393066

Token 248: 'Dict' (ID: 19608)
  Prédit: 'Dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.00012130453251302242
    2. 'DICT' → logprob: -9.875121116638184
    3. 'dict' → logprob: -10.375121116638184
    4. 'ct' → logprob: -10.500121116638184
    5. 'ict' → logprob: -13.125121116638184
    6. 'DI' → logprob: -13.250121116638184
    7. '_DICT' → logprob: -13.625121116638184
    8. '_dict' → logprob: -14.000121116638184
    9. ' Dict' → logprob: -14.125121116638184
    10. '{' → logprob: -14.250121116638184

Token 249: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3005918264389038
    2. '[' → logprob: -2.5505919456481934
    3. '(
' → logprob: -2.6755919456481934
    4. '<|end|>' → logprob: -3.0505919456481934
    5. '[
' → logprob: -4.050591945648193
    6. ')' → logprob: -4.550591945648193
    7. '#' → logprob: -4.800591945648193
    8. ',' → logprob: -4.925591945648193
    9. '[(' → logprob: -5.175591945648193
    10. '()' → logprob: -5.425591945648193

Token 250: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022760143503546715
    2. '#' → logprob: -4.897759914398193
    3. 'print' → logprob: -5.397759914398193
    4. 'for' → logprob: -5.397759914398193
    5. ')' → logprob: -6.147759914398193
    6. 'result' → logprob: -7.522759914398193
    7. 'n' → logprob: -7.772759914398193
    8. 'answer' → logprob: -7.897759914398193
    9. 'x' → logprob: -8.272760391235352
    10. 'res' → logprob: -8.397760391235352

Token 251: ' Com' (ID: 1390)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.4309422969818115
    2. ' comb' → logprob: -1.5559422969818115
    3. ' mod' → logprob: -1.6809422969818115
    4. ' n' → logprob: -2.0559422969818115
    5. ' count' → logprob: -2.5559422969818115
    6. ' bin' → logprob: -3.1809422969818115
    7. ' pow' → logprob: -3.5559422969818115
    8. 'n' → logprob: -3.8059422969818115
    9. ' solve' → logprob: -3.8059422969818115
    10. ' choose' → logprob: -4.680942535400391

Token 252: 'bi' (ID: 6738)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7858037948608398
    2. 'bin' → logprob: -1.7858037948608398
    3. 'binations' → logprob: -1.7858037948608398
    4. 'B' → logprob: -2.78580379486084
    5. 'bination' → logprob: -2.91080379486084
    6. 'bine' → logprob: -3.16080379486084
    7. 'bi' → logprob: -3.41080379486084
    8. 'BI' → logprob: -4.16080379486084
    9. 'bined' → logprob: -7.41080379486084
    10. 'BIN' → logprob: -7.78580379486084

Token 253: '(a' (ID: 6271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0034191510640084743
    2. '(a' → logprob: -5.878418922424316
    3. 'n' → logprob: -7.628418922424316
    4. '(k' → logprob: -10.253418922424316
    5. '(' → logprob: -10.628418922424316
    6. '(N' → logprob: -11.253418922424316
    7. 'def' → logprob: -11.378418922424316
    8. '(x' → logprob: -11.628418922424316
    9. 'nation' → logprob: -11.628418922424316
    10. '(i' → logprob: -11.753418922424316

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47687631845474243
    2. ',b' → logprob: -0.9768763184547424
    3. ',a' → logprob: -6.101876258850098
    4. ' ,' → logprob: -8.101876258850098
    5. ',n' → logprob: -8.851876258850098
    6. ',k' → logprob: -9.851876258850098
    7. ',int' → logprob: -10.726876258850098
    8. ',B' → logprob: -11.351876258850098
    9. ',f' → logprob: -12.226876258850098
    10. 'a' → logprob: -12.976876258850098

Token 255: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033546582562848926
    2. ' b' → logprob: -8.000335693359375
    3. 'k' → logprob: -20.000335693359375
    4. '   ' → logprob: -21.125335693359375
    5. '	b' → logprob: -21.375335693359375
    6. ' ' → logprob: -21.500335693359375
    7. '  ' → logprob: -23.125335693359375
    8. '0' → logprob: -23.125335693359375
    9. '    ' → logprob: -23.250335693359375
    10. ')b' → logprob: -23.625335693359375

Token 256: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008756973780691624
    2. '):
' → logprob: -4.7587571144104
    3. ')' → logprob: -8.883756637573242
    4. '):
' → logprob: -12.883756637573242
    5. ' ):' → logprob: -14.258756637573242
    6. ':' → logprob: -14.883756637573242
    7. '):

' → logprob: -16.133756637573242
    8. ')：' → logprob: -17.133756637573242
    9. '   ' → logprob: -17.383756637573242
    10. '=' → logprob: -18.133756637573242

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026952316984534264
    2. ' return' → logprob: -3.6519522666931152
    3. '	return' → logprob: -7.901952266693115
    4. 'return' → logprob: -8.276952743530273
    5. '   ' → logprob: -10.901952743530273
    6. '    
' → logprob: -13.401952743530273
    7. ' ' → logprob: -13.401952743530273
    8. '<|end|>' → logprob: -13.401952743530273
    9. ':return' → logprob: -13.401952743530273
    10. '{return' → logprob: -14.276952743530273

Token 258: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024601692333817482
    2. ' return' → logprob: -3.774601697921753
    3. 'COM' → logprob: -7.149601459503174
    4. '   ' → logprob: -7.524601459503174
    5. 'if' → logprob: -10.899601936340332
    6. ' COM' → logprob: -12.024601936340332
    7. ' if' → logprob: -12.774601936340332
    8. 'com' → logprob: -14.149601936340332
    9. '{return' → logprob: -14.399601936340332
    10. ' ' → logprob: -14.524601936340332

Token 259: ' COM' (ID: 10434)
  Prédit: 'COM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'COM' → logprob: -0.00018077615823131055
    2. ' COM' → logprob: -8.625181198120117
    3. 'com' → logprob: -14.500181198120117
    4. '(COM' → logprob: -14.875181198120117
    5. 'CO' → logprob: -16.125181198120117
    6. '(' → logprob: -16.875181198120117
    7. 'Com' → logprob: -17.125181198120117
    8. '0' → logprob: -17.250181198120117
    9. 'COMM' → logprob: -17.625181198120117
    10. 'a' → logprob: -18.000181198120117

Token 260: 'BI' (ID: 18223)
  Prédit: 'BI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BI' → logprob: -3.666993507067673e-05
    2. 'B' → logprob: -10.500036239624023
    3. 'COM' → logprob: -12.875036239624023
    4. '
' → logprob: -13.625036239624023
    5. 'BO' → logprob: -14.125036239624023
    6. '_B' → logprob: -14.250036239624023
    7. '

' → logprob: -14.375036239624023
    8. '{' → logprob: -14.500036239624023
    9. '#' → logprob: -15.250036239624023
    10. 'BIN' → logprob: -15.250036239624023

Token 261: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.08996355533599854
    2. '[a' → logprob: -2.839963436126709
    3. '(a' → logprob: -3.589963436126709
    4. '((' → logprob: -12.464963912963867
    5. 'a' → logprob: -12.589963912963867
    6. '   ' → logprob: -15.464963912963867
    7. '[
' → logprob: -15.589963912963867
    8. '.get' → logprob: -16.089963912963867
    9. '[' → logprob: -16.214963912963867
    10. '.__' → logprob: -16.464963912963867

Token 262: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: 0.0
    2. ' a' → logprob: -18.125
    3. 'а' → logprob: -23.125
    4. '   ' → logprob: -23.25
    5. ',' → logprob: -23.875
    6. ' ' → logprob: -24.5
    7. '{' → logprob: -24.75
    8. '<|end|>' → logprob: -24.75
    9. ',a' → logprob: -24.75
    10. ')a' → logprob: -25.0

Token 263: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5762584209442139
    2. ',b' → logprob: -0.8262584209442139
    3. ' ,' → logprob: -8.076258659362793
    4. 'b' → logprob: -11.826258659362793
    5. ',
' → logprob: -14.826258659362793
    6. ' b' → logprob: -16.076257705688477
    7. '
' → logprob: -16.826257705688477
    8. '```' → logprob: -17.951257705688477
    9. ',n' → logprob: -18.076257705688477
    10. ',p' → logprob: -18.076257705688477

Token 264: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.319370302458992e-06
    2. ')]
' → logprob: -12.250005722045898
    3. ']' → logprob: -15.375005722045898
    4. ' )' → logprob: -15.625005722045898
    5. ')]

' → logprob: -17.0000057220459
    6. ')' → logprob: -17.0000057220459
    7. '')]' → logprob: -17.8750057220459
    8. ')].' → logprob: -18.1250057220459
    9. ')]
' → logprob: -18.3750057220459
    10. '])' → logprob: -19.1250057220459

Token 265: 'M' (ID: 44)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46325361728668213
    2. '<|end|>' → logprob: -1.3382536172866821
    3. '#' → logprob: -2.4632534980773926
    4. 'def' → logprob: -3.8382534980773926
    5. '<|end|>' → logprob: -7.838253498077393
    6. ']' → logprob: -8.33825397491455
    7. '[' → logprob: -8.58825397491455
    8. '(' → logprob: -8.83825397491455
    9. 'for' → logprob: -9.33825397491455
    10. 'print' → logprob: -9.46325397491455

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7671721577644348
    2. '=' → logprob: -1.26717209815979
    3. 'ax' → logprob: -2.39217209815979
    4. 'O' → logprob: -3.26717209815979
    5. 'A' → logprob: -3.51717209815979
    6. 'a' → logprob: -4.517172336578369
    7. 'E' → logprob: -5.017172336578369
    8. 'ask' → logprob: -5.142172336578369
    9. 'AX' → logprob: -5.267172336578369
    10. 'M' → logprob: -5.267172336578369

Token 267: ' max' (ID: 2999)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.7332739233970642
    2. '20' → logprob: -1.733273983001709
    3. '10' → logprob: -1.983273983001709
    4. 'W' → logprob: -2.733273983001709
    5. ' ' → logprob: -4.108273983001709
    6. 'min' → logprob: -4.358273983001709
    7. '[' → logprob: -4.483273983001709
    8. '1' → logprob: -4.608273983001709
    9. '0' → logprob: -4.608273983001709
    10. '3' → logprob: -4.858273983001709

Token 268: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0003534582501742989
    2. '(' → logprob: -8.125353813171387
    3. '(A' → logprob: -11.375353813171387
    4. '((' → logprob: -11.375353813171387
    5. '([' → logprob: -11.750353813171387
    6. '(len' → logprob: -12.000353813171387
    7. 'H' → logprob: -12.125353813171387
    8. '(W' → logprob: -12.125353813171387
    9. '(max' → logprob: -12.750353813171387
    10. '()' → logprob: -14.125353813171387

Token 269: ',' (ID: 11)
  Prédit: ',W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.006047654896974564
    2. ',' → logprob: -5.13104772567749
    3. 'W' → logprob: -9.381047248840332
    4. ' ,' → logprob: -10.631047248840332
    5. '-' → logprob: -12.381047248840332
    6. ',H' → logprob: -13.256047248840332
    7. ',M' → logprob: -13.881047248840332
    8. ',N' → logprob: -14.881047248840332
    9. '+' → logprob: -15.256047248840332
    10. ' W' → logprob: -15.381047248840332

Token 270: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0036081476137042046
    2. ' W' → logprob: -5.628608226776123
    3. ' ' → logprob: -13.253607749938965
    4. '   ' → logprob: -13.253607749938965
    5. '
' → logprob: -13.628607749938965
    6. ')' → logprob: -13.878607749938965
    7. ',W' → logprob: -14.753607749938965
    8. '	W' → logprob: -15.003607749938965
    9. '```' → logprob: -15.128607749938965
    10. ',' → logprob: -15.628607749938965

Token 271: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021093101531732827
    2. ')+' → logprob: -9.250210762023926
    3. ' )' → logprob: -9.500210762023926
    4. '+' → logprob: -10.500210762023926
    5. ')
' → logprob: -11.750210762023926
    6. '))' → logprob: -14.250210762023926
    7. ' +' → logprob: -14.625210762023926
    8. ')#' → logprob: -14.750210762023926
    9. ')

' → logprob: -14.875210762023926
    10. ',' → logprob: -15.000210762023926

Token 272: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5557686686515808
    2. 'dp' → logprob: -2.0557687282562256
    3. ')' → logprob: -2.5557687282562256
    4. '#' → logprob: -3.0557687282562256
    5. 'DP' → logprob: -3.1807687282562256
    6. 'def' → logprob: -3.8057687282562256
    7. 'D' → logprob: -4.0557684898376465
    8. 'K' → logprob: -5.0557684898376465
    9. 'N' → logprob: -5.1807684898376465
    10. ' +' → logprob: -5.3057684898376465

Token 273: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.7172107100486755
    2. '1' → logprob: -1.0922107696533203
    3. '21' → logprob: -1.8422107696533203
    4. '10' → logprob: -4.46721076965332
    5. '2' → logprob: -5.46721076965332
    6. ' ' → logprob: -7.09221076965332
    7. '5' → logprob: -7.46721076965332
    8. '22' → logprob: -8.59221076965332
    9. '11' → logprob: -8.71721076965332
    10. '3' → logprob: -8.84221076965332

Token 274: '1' (ID: 16)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.8585800528526306
    2. '1' → logprob: -1.2335801124572754
    3. '20' → logprob: -1.7335801124572754
    4. '10' → logprob: -2.8585801124572754
    5. '2' → logprob: -3.2335801124572754
    6. '5' → logprob: -5.233580112457275
    7. '3' → logprob: -6.483580112457275
    8. '100' → logprob: -6.608580112457275
    9. '22' → logprob: -6.858580112457275
    10. '50' → logprob: -7.233580112457275

Token 275: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5037765502929688
    2. 'DP' → logprob: -1.7537765502929688
    3. 'def' → logprob: -3.3787765502929688
    4. 'D' → logprob: -3.5037765502929688
    5. ' directions' → logprob: -4.378776550292969
    6. 'steps' → logprob: -4.378776550292969
    7. ')' → logprob: -4.503776550292969
    8. 'dire' → logprob: -4.628776550292969
    9. ' 
' → logprob: -4.753776550292969
    10. ' DP' → logprob: -4.753776550292969

Token 276: 'RA' (ID: 7896)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28377866744995117
    2. 'DP' → logprob: -1.6587786674499512
    3. 'D' → logprob: -4.908778667449951
    4. 'pow' → logprob: -5.158778667449951
    5. 'fact' → logprob: -5.408778667449951
    6. 'dist' → logprob: -5.533778667449951
    7. 'f' → logprob: -6.033778667449951
    8. 'def' → logprob: -6.283778667449951
    9. 'INF' → logprob: -6.283778667449951
    10. 'ways' → logprob: -6.533778667449951

Token 277: ' =' (ID: 314)
  Prédit: 'NG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NG' → logprob: -0.6833240389823914
    2. 'N' → logprob: -0.9333240389823914
    3. 'D' → logprob: -3.058324098587036
    4. 'ND' → logprob: -3.808324098587036
    5. 'NK' → logprob: -4.183323860168457
    6. 'nge' → logprob: -5.058323860168457
    7. ' =' → logprob: -5.933323860168457
    8. 'INF' → logprob: -6.683323860168457
    9. 'DI' → logprob: -6.933323860168457
    10. '=' → logprob: -7.308323860168457

Token 278: ' {}

' (ID: 21724)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06328234076499939
    2. '[[' → logprob: -3.4382822513580322
    3. '[A' → logprob: -4.313282489776611
    4. ' [' → logprob: -4.813282489776611
    5. '[M' → logprob: -6.188282489776611
    6. 'range' → logprob: -6.813282489776611
    7. '[a' → logprob: -6.938282489776611
    8. '[list' → logprob: -7.563282489776611
    9. '[p' → logprob: -7.688282489776611
    10. '[(' → logprob: -7.938282489776611

Token 279: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19757448136806488
    2. 'def' → logprob: -1.947574496269226
    3. ' for' → logprob: -4.072574615478516
    4. ')' → logprob: -4.572574615478516
    5. '(' → logprob: -5.447574615478516
    6. '#' → logprob: -6.697574615478516
    7. '[' → logprob: -6.947574615478516
    8. 'i' → logprob: -7.822574615478516
    9. 'range' → logprob: -8.072574615478516
    10. ']' → logprob: -8.447574615478516

Token 280: ' rect' (ID: 13107)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.8346960544586182
    2. ' dfs' → logprob: -2.084696054458618
    3. ' count' → logprob: -2.334696054458618
    4. ' solve' → logprob: -2.584696054458618
    5. ' pow' → logprob: -2.834696054458618
    6. 'dfs' → logprob: -2.834696054458618
    7. ' calc' → logprob: -3.209696054458618
    8. 'count' → logprob: -3.459696054458618
    9. 'pow' → logprob: -3.709696054458618
    10. ' get' → logprob: -3.709696054458618

Token 281: '(H' (ID: 20904)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.4134204387664795
    2. 's' → logprob: -1.9134204387664795
    3. 'angles' → logprob: -2.1634204387664795
    4. '(' → logprob: -3.9134204387664795
    5. 'def' → logprob: -4.038420677185059
    6. '(x' → logprob: -4.163420677185059
    7. 'ify' → logprob: -5.038420677185059
    8. 'ang' → logprob: -5.788420677185059
    9. '((' → logprob: -6.413420677185059
    10. 't' → logprob: -6.413420677185059

Token 282: '_,' (ID: 14152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018752291798591614
    2. '):
' → logprob: -4.768752098083496
    3. ',
' → logprob: -5.518752098083496
    4. '):' → logprob: -5.643752098083496
    5. ' ,' → logprob: -7.018752098083496
    6. ',W' → logprob: -8.143752098083496
    7. ',H' → logprob: -8.768752098083496
    8. ',N' → logprob: -8.893752098083496
    9. ')' → logprob: -8.893752098083496
    10. ',K' → logprob: -8.893752098083496

Token 283: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.007742085959762335
    2. ' W' → logprob: -4.882741928100586
    3. ' ' → logprob: -10.382741928100586
    4. ')' → logprob: -11.257741928100586
    5. '   ' → logprob: -11.257741928100586
    6. 'L' → logprob: -11.507741928100586
    7. 'w' → logprob: -11.882741928100586
    8. 'V' → logprob: -11.882741928100586
    9. '```' → logprob: -12.007741928100586
    10. 'K' → logprob: -12.445241928100586

Token 284: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0062780980952084064
    2. '):
' → logprob: -5.256278038024902
    3. '_,' → logprob: -8.131278038024902
    4. '):' → logprob: -8.131278038024902
    5. '_)' → logprob: -8.381278038024902
    6. '_)
' → logprob: -9.256278038024902
    7. ',' → logprob: -10.006278038024902
    8. '_
' → logprob: -10.506278038024902
    9. '):
' → logprob: -11.006278038024902
    10. ')' → logprob: -11.506278038024902

Token 285: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.034507866948843
    2. '):
' → logprob: -3.7845077514648438
    3. ',' → logprob: -4.534507751464844
    4. ')' → logprob: -8.284507751464844
    5. ' ):' → logprob: -9.159507751464844
    6. '):
' → logprob: -9.659507751464844
    7. ' ,' → logprob: -11.284507751464844
    8. ':' → logprob: -11.409507751464844
    9. '):

' → logprob: -11.909507751464844
    10. '   ' → logprob: -12.284507751464844

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010153028415516019
    2. ' if' → logprob: -7.3760151863098145
    3. 'if' → logprob: -8.001015663146973
    4. '	if' → logprob: -10.126015663146973
    5. '   ' → logprob: -12.001015663146973
    6. 'return' → logprob: -13.501015663146973
    7. '	return' → logprob: -13.626015663146973
    8. 'result' → logprob: -13.626015663146973
    9. 'for' → logprob: -14.876015663146973
    10. ' for' → logprob: -14.876015663146973

Token 287: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23819588124752045
    2. 'key' → logprob: -1.8631958961486816
    3. 'return' → logprob: -3.7381958961486816
    4. '   ' → logprob: -3.7381958961486816
    5. 'res' → logprob: -4.863195896148682
    6. 'k' → logprob: -7.988195896148682
    7. ' if' → logprob: -8.238195419311523
    8. 'r' → logprob: -8.738195419311523
    9. 'result' → logprob: -8.738195419311523
    10. 'for' → logprob: -8.988195419311523

Token 288: ' H' (ID: 487)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.016764124855399132
    2. ' (' → logprob: -4.516764163970947
    3. 'H' → logprob: -5.391764163970947
    4. ' H' → logprob: -7.641764163970947
    5. '(W' → logprob: -8.016763687133789
    6. 'W' → logprob: -9.266763687133789
    7. '   ' → logprob: -9.391763687133789
    8. '(' → logprob: -9.641763687133789
    9. ' ' → logprob: -10.016763687133789
    10. ' W' → logprob: -11.141763687133789

Token 289: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.041701942682266235
    2. '_,' → logprob: -3.2917020320892334
    3. '_<' → logprob: -5.666701793670654
    4. '_=' → logprob: -9.416702270507812
    5. '_
' → logprob: -10.291702270507812
    6. '_,
' → logprob: -10.791702270507812
    7. ',' → logprob: -11.166702270507812
    8. '==' → logprob: -11.291702270507812
    9. '_*' → logprob: -12.666702270507812
    10. '<' → logprob: -12.666702270507812

Token 290: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17279279232025146
    2. ' ==' → logprob: -2.047792911529541
    3. '<' → logprob: -4.422792911529541
    4. '<=' → logprob: -4.547792911529541
    5. ' <' → logprob: -6.297792911529541
    6. '*' → logprob: -6.547792911529541
    7. ' <=' → logprob: -7.047792911529541
    8. '>' → logprob: -7.172792911529541
    9. '>=' → logprob: -7.172792911529541
    10. ',' → logprob: -7.797792911529541

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029204224701970816
    2. ' ' → logprob: -6.252920627593994
    3. '1' → logprob: -7.502920627593994
    4. 'W' → logprob: -7.752920627593994
    5. ' W' → logprob: -11.877920150756836
    6. '   ' → logprob: -13.752920150756836
    7. '```' → logprob: -14.252920150756836
    8. '2' → logprob: -14.377920150756836
    9. '=' → logprob: -15.002920150756836
    10. 'H' → logprob: -15.127920150756836

Token 292: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08927357941865921
    2. 'or' → logprob: -2.464273691177368
    3. '   ' → logprob: -8.964273452758789
    4. ':' → logprob: -8.964273452758789
    5. '	or' → logprob: -10.214273452758789
    6. ':return' → logprob: -10.714273452758789
    7. ' and' → logprob: -12.089273452758789
    8. ':
' → logprob: -12.214273452758789
    9. ' ' → logprob: -12.589273452758789
    10. 'and' → logprob: -13.589273452758789

Token 293: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.2014184147119522
    2. ' W' → logprob: -1.701418399810791
    3. '0' → logprob: -12.95141887664795
    4. ' ' → logprob: -13.70141887664795
    5. '	W' → logprob: -13.95141887664795
    6. ' ' → logprob: -15.82641887664795
    7. '   ' → logprob: -16.076417922973633
    8. 'True' → logprob: -16.076417922973633
    9. '  ' → logprob: -16.201417922973633
    10. '```' → logprob: -16.451417922973633

Token 294: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0001387009397149086
    2. '_=' → logprob: -9.000138282775879
    3. '==' → logprob: -11.250138282775879
    4. '_<' → logprob: -13.625138282775879
    5. '_##' → logprob: -15.375138282775879
    6. '_
' → logprob: -15.625138282775879
    7. ' ==' → logprob: -15.875138282775879
    8. '__' → logprob: -16.125139236450195
    9. '_

' → logprob: -16.375139236450195
    10. '```' → logprob: -16.625139236450195

Token 295: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0036952088121324778
    2. '_' → logprob: -6.503695011138916
    3. '0' → logprob: -6.628695011138916
    4. ' ==' → logprob: -7.253695011138916
    5. '=' → logprob: -9.128695487976074
    6. ']==' → logprob: -11.253695487976074
    7. '()==' → logprob: -11.378695487976074
    8. ')==' → logprob: -12.003695487976074
    9. '```' → logprob: -12.128695487976074
    10. '_=' → logprob: -12.878695487976074

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.8750581741333
    3. '1' → logprob: -12.2500581741333
    4. '```' → logprob: -14.6250581741333
    5. '   ' → logprob: -14.8750581741333
    6. '-' → logprob: -15.0625581741333
    7. '  ' → logprob: -16.000059127807617
    8. ')' → logprob: -16.312559127807617
    9. '۰' → logprob: -16.687559127807617
    10. '
' → logprob: -16.812559127807617

Token 297: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23815371096134186
    2. ':
' → logprob: -1.6131536960601807
    3. ':return' → logprob: -4.48815393447876
    4. '):
' → logprob: -7.36315393447876
    5. '   ' → logprob: -7.61315393447876
    6. '):' → logprob: -8.488153457641602
    7. ')' → logprob: -10.363153457641602
    8. ' or' → logprob: -11.488153457641602
    9. ':
' → logprob: -11.738153457641602
    10. '       ' → logprob: -11.988153457641602

Token 298: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008478177711367607
    2. ' return' → logprob: -4.883478164672852
    3. 'return' → logprob: -7.633478164672852
    4. '   ' → logprob: -8.258478164672852
    5. '
' → logprob: -10.133478164672852
    6. '0' → logprob: -10.383478164672852
    7. ',' → logprob: -10.633478164672852
    8. ' ' → logprob: -11.633478164672852
    9. '	return' → logprob: -12.258478164672852
    10. '	' → logprob: -12.258478164672852

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0592660903930664
    2. ' ' → logprob: -1.0592660903930664
    3. '0' → logprob: -1.1842660903930664
    4. '[' → logprob: -8.309266090393066
    5. '[]
' → logprob: -9.059266090393066
    6. ' [' → logprob: -9.434266090393066
    7. '[]' → logprob: -9.809266090393066
    8. '{' → logprob: -10.684266090393066
    9. '   ' → logprob: -11.184266090393066
    10. '
' → logprob: -11.184266090393066

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016349881887435913
    2. '0' → logprob: -4.141349792480469
    3. '{' → logprob: -8.641349792480469
    4. '[' → logprob: -9.141349792480469
    5. '{}' → logprob: -11.391349792480469
    6. '[]' → logprob: -12.016349792480469
    7. '[]
' → logprob: -12.016349792480469
    8. ' ' → logprob: -12.516349792480469
    9. '{}
' → logprob: -13.766349792480469
    10. '(' → logprob: -13.766349792480469

Token 301: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19007328152656555
    2. '
' → logprob: -1.8150732517242432
    3. '    
' → logprob: -4.690073490142822
    4. '  
' → logprob: -8.065073013305664
    5. '	
' → logprob: -8.815073013305664
    6. '\n' → logprob: -8.940073013305664
    7. ',' → logprob: -9.440073013305664
    8. ' 
' → logprob: -9.440073013305664
    9. '   
' → logprob: -9.690073013305664
    10. '<|end|>' → logprob: -9.815073013305664

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009164231829345226
    2. '
' → logprob: -5.509164333343506
    3. '    
' → logprob: -5.634164333343506
    4. '\n' → logprob: -7.259164333343506
    5. '  
' → logprob: -8.509163856506348
    6. ' if' → logprob: -8.884163856506348
    7. '	
' → logprob: -9.009163856506348
    8. ' 
' → logprob: -9.384163856506348
    9. '   
' → logprob: -10.009163856506348
    10. '<|end|>' → logprob: -10.134163856506348

Token 303: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06915869563817978
    2. 'key' → logprob: -2.8191587924957275
    3. ' if' → logprob: -5.069158554077148
    4. '   ' → logprob: -7.694158554077148
    5. ' key' → logprob: -8.694158554077148
    6. 'k' → logprob: -8.819158554077148
    7. 'res' → logprob: -9.319158554077148
    8. 'r' → logprob: -11.944158554077148
    9. 't' → logprob: -13.444158554077148
    10. ' res' → logprob: -13.569158554077148

Token 304: ' (' (ID: 350)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.002591946395114064
    2. ' (' → logprob: -6.377592086791992
    3. 'H' → logprob: -7.252592086791992
    4. '(' → logprob: -9.502592086791992
    5. ' H' → logprob: -10.127592086791992
    6. '   ' → logprob: -10.377592086791992
    7. '(W' → logprob: -11.002592086791992
    8. ' ' → logprob: -12.002592086791992
    9. '(M' → logprob: -12.752592086791992
    10. 'W' → logprob: -13.252592086791992

Token 305: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.2948405128554441e-05
    2. '(H' → logprob: -11.50001335144043
    3. ' H' → logprob: -13.25001335144043
    4. '   ' → logprob: -13.87501335144043
    5. '_H' → logprob: -17.12501335144043
    6. '	H' → logprob: -18.00001335144043
    7. '(' → logprob: -18.12501335144043
    8. ' ' → logprob: -18.62501335144043
    9. ' (' → logprob: -18.62501335144043
    10. ',H' → logprob: -18.75001335144043

Token 306: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.0003017385315615684
    2. '_' → logprob: -8.125301361083984
    3. '_,
' → logprob: -13.000301361083984
    4. ',' → logprob: -13.250301361083984
    5. '_
' → logprob: -14.375301361083984
    6. '__,' → logprob: -15.750301361083984
    7. '_

' → logprob: -15.750301361083984
    8. '_)' → logprob: -16.125301361083984
    9. '_<' → logprob: -16.375301361083984
    10. '_H' → logprob: -16.500301361083984

Token 307: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0001825642102630809
    2. ' W' → logprob: -8.625182151794434
    3. '   ' → logprob: -13.125182151794434
    4. ' ' → logprob: -14.625182151794434
    5. '  ' → logprob: -15.000182151794434
    6. 'H' → logprob: -16.75018310546875
    7. '
' → logprob: -16.87518310546875
    8. '    ' → logprob: -17.25018310546875
    9. '	W' → logprob: -17.37518310546875
    10. ')' → logprob: -17.87518310546875

Token 308: '_)' (ID: 35080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03385280817747116
    2. '_)' → logprob: -3.4088528156280518
    3. '_' → logprob: -8.783852577209473
    4. ')==' → logprob: -10.658852577209473
    5. '])' → logprob: -11.533852577209473
    6. '')' → logprob: -12.658852577209473
    7. ')]' → logprob: -12.908852577209473
    8. ' )' → logprob: -13.158852577209473
    9. ']' → logprob: -13.283852577209473
    10. '__)' → logprob: -13.533852577209473

Token 309: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015171191189438105
    2. 'in' → logprob: -7.376517295837402
    3. 'not' → logprob: -7.751517295837402
    4. ' not' → logprob: -8.001517295837402
    5. ' in' → logprob: -9.251517295837402
    6. ' )' → logprob: -11.376517295837402
    7. ')==' → logprob: -11.626517295837402
    8. ']' → logprob: -13.751517295837402
    9. ':=' → logprob: -13.751517295837402
    10. ')is' → logprob: -13.876517295837402

Token 310: ' RA' (ID: 46104)
  Prédit: 'RA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RA' → logprob: -7.941850526549388e-06
    2. ' RA' → logprob: -11.750007629394531
    3. '_RA' → logprob: -21.25000762939453
    4. 'R' → logprob: -22.62500762939453
    5. '
' → logprob: -22.62500762939453
    6. '   ' → logprob: -22.62500762939453
    7. 'ra' → logprob: -23.62500762939453
    8. ' ' → logprob: -23.87500762939453
    9. 'RO' → logprob: -23.87500762939453
    10. 'РА' → logprob: -23.87500762939453

Token 311: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6222869157791138
    2. ':' → logprob: -0.9972869157791138
    3. ':return' → logprob: -2.372286796569824
    4. '):
' → logprob: -7.122286796569824
    5. '):' → logprob: -9.247286796569824
    6. '   ' → logprob: -9.747286796569824
    7. 'return' → logprob: -9.997286796569824
    8. ')return' → logprob: -10.872286796569824
    9. ' :' → logprob: -10.997286796569824
    10. '():
' → logprob: -10.997286796569824

Token 312: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014106856659054756
    2. ' return' → logprob: -4.514106750488281
    3. 'return' → logprob: -5.889106750488281
    4. '   ' → logprob: -8.514106750488281
    5. '<|end|>' → logprob: -10.264106750488281
    6. '	return' → logprob: -10.639106750488281
    7. '	   ' → logprob: -11.389106750488281
    8. ':return' → logprob: -12.264106750488281
    9. '	' → logprob: -13.014106750488281
    10. ' ' → logprob: -13.889106750488281

Token 313: ' RA' (ID: 46104)
  Prédit: 'RA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RA' → logprob: -7.941850526549388e-06
    2. ' RA' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.50000762939453
    4. '_RA' → logprob: -19.50000762939453
    5. ' ' → logprob: -22.62500762939453
    6. 'R' → logprob: -22.62500762939453
    7. 'РА' → logprob: -24.00000762939453
    8. 'ra' → logprob: -24.37500762939453
    9. '
' → logprob: -24.75000762939453
    10. '```' → logprob: -25.12500762939453

Token 314: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.07074632495641708
    2. '[' → logprob: -3.070746421813965
    3. '(H' → logprob: -3.820746421813965
    4. '   ' → logprob: -13.195746421813965
    5. 'H' → logprob: -13.945746421813965
    6. '((' → logprob: -14.820746421813965
    7. '[
' → logprob: -15.570746421813965
    8. ' (' → logprob: -15.570746421813965
    9. '[[' → logprob: -16.94574546813965
    10. ',' → logprob: -16.94574546813965

Token 315: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -6.704273118884885e-07
    2. '(H' → logprob: -14.750000953674316
    3. ' H' → logprob: -15.625000953674316
    4. '_H' → logprob: -20.375
    5. '	H' → logprob: -20.625
    6. ',H' → logprob: -21.125
    7. '   ' → logprob: -21.375
    8. '(' → logprob: -22.625
    9. ')' → logprob: -22.875
    10. 'HBox' → logprob: -23.125

Token 316: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.002484096447005868
    2. '_' → logprob: -6.002484321594238
    3. '_,
' → logprob: -12.127484321594238
    4. ',' → logprob: -13.252484321594238
    5. '_
' → logprob: -14.627484321594238
    6. '_]' → logprob: -15.502484321594238
    7. '_)' → logprob: -15.752484321594238
    8. 'H' → logprob: -15.752484321594238
    9. '_

' → logprob: -16.002483367919922
    10. ' _,' → logprob: -16.752483367919922

Token 317: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0007123126997612417
    2. ' W' → logprob: -7.2507123947143555
    3. ' ' → logprob: -13.500712394714355
    4. '   ' → logprob: -14.125712394714355
    5. '  ' → logprob: -16.00071144104004
    6. 'H' → logprob: -16.75071144104004
    7. '```' → logprob: -17.25071144104004
    8. '    ' → logprob: -17.50071144104004
    9. ')' → logprob: -17.62571144104004
    10. '     ' → logprob: -18.12571144104004

Token 318: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013507355935871601
    2. '_)' → logprob: -5.01350736618042
    3. ')]' → logprob: -5.01350736618042
    4. '_]' → logprob: -9.638506889343262
    5. ')]
' → logprob: -11.013506889343262
    6. '_)
' → logprob: -11.388506889343262
    7. ')' → logprob: -11.638506889343262
    8. '')]' → logprob: -12.388506889343262
    9. '_
' → logprob: -12.388506889343262
    10. '_,' → logprob: -13.388506889343262

Token 319: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005194739904254675
    2. ')' → logprob: -6.005194664001465
    3. ')]
' → logprob: -6.005194664001465
    4. ')][' → logprob: -9.755194664001465
    5. ')]

' → logprob: -9.880194664001465
    6. ')])' → logprob: -10.255194664001465
    7. ')]
' → logprob: -10.505194664001465
    8. ')].' → logprob: -11.130194664001465
    9. ')],' → logprob: -11.255194664001465
    10. ']' → logprob: -11.255194664001465

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001492961309850216
    2. '    
' → logprob: -7.001492977142334
    3. 'RA' → logprob: -7.876492977142334
    4. '
' → logprob: -9.751492500305176
    5. ' if' → logprob: -10.001492500305176
    6. '  
' → logprob: -10.626492500305176
    7. 'if' → logprob: -10.626492500305176
    8. ' RA' → logprob: -11.751492500305176
    9. '```' → logprob: -11.876492500305176
    10. ' 
' → logprob: -12.251492500305176

Token 321: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3034185767173767
    2. ' res' → logprob: -1.8034186363220215
    3. 'if' → logprob: -2.8034186363220215
    4. '   ' → logprob: -4.9284186363220215
    5. ' if' → logprob: -4.9284186363220215
    6. 'ret' → logprob: -5.0534186363220215
    7. 'r' → logprob: -5.1784186363220215
    8. 's' → logprob: -5.3034186363220215
    9. 'ans' → logprob: -6.8034186363220215
    10. 'x' → logprob: -7.0534186363220215

Token 322: ' DP' (ID: 51992)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07917078584432602
    2. ' res' → logprob: -3.0791707038879395
    3. 'r' → logprob: -5.0791707038879395
    4. 'if' → logprob: -5.2041707038879395
    5. 'ans' → logprob: -5.3291707038879395
    6. 'result' → logprob: -5.9541707038879395
    7. 's' → logprob: -6.0791707038879395
    8. 'val' → logprob: -6.0791707038879395
    9. 'ret' → logprob: -6.2041707038879395
    10. 'total' → logprob: -6.3291707038879395

Token 323: ' fabrication' (ID: 53605)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10524018853902817
    2. ' dp' → logprob: -2.7302401065826416
    3. ' res' → logprob: -4.105240345001221
    4. '   ' → logprob: -4.605240345001221
    5. 'res' → logprob: -5.730240345001221
    6. ' =' → logprob: -6.105240345001221
    7. '=' → logprob: -7.605240345001221
    8. 'f' → logprob: -8.105239868164062
    9. 'DP' → logprob: -8.230239868164062
    10. '(dp' → logprob: -8.355239868164062

Token 324: ' par' (ID: 686)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6540826559066772
    2. '   ' → logprob: -0.9040826559066772
    3. ' dp' → logprob: -3.154082775115967
    4. ' res' → logprob: -3.904082775115967
    5. 'res' → logprob: -4.904082775115967
    6. ' f' → logprob: -7.404082775115967
    7. 'f' → logprob: -7.529082775115967
    8. '
' → logprob: -7.654082775115967
    9. 'result' → logprob: -7.654082775115967
    10. '    
' → logprob: -8.154082298278809

Token 325: ' compréhension' (ID: 142333)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2062739133834839
    2. 'com' → logprob: -2.2062740325927734
    3. 'rec' → logprob: -2.3312740325927734
    4. 'r' → logprob: -2.9562740325927734
    5. 'comb' → logprob: -2.9562740325927734
    6. 'rect' → logprob: -3.3312740325927734
    7. 'les' → logprob: -3.3312740325927734
    8. 'H' → logprob: -3.7062740325927734
    9. 'trans' → logprob: -4.331274032592773
    10. 'addition' → logprob: -4.581274032592773

Token 326: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25621116161346436
    2. 'dp' → logprob: -2.381211280822754
    3. ' dp' → logprob: -2.756211280822754
    4. ' res' → logprob: -3.006211280822754
    5. 'res' → logprob: -4.506211280822754
    6. ' ans' → logprob: -6.881211280822754
    7. 'result' → logprob: -7.006211280822754
    8. '
' → logprob: -7.131211280822754
    9. 'ret' → logprob: -7.256211280822754
    10. '    
' → logprob: -7.381211280822754

Token 327: ' liste' (ID: 31719)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.2181350737810135
    2. 'liste' → logprob: -2.593135118484497
    3. 'rect' → logprob: -3.343135118484497
    4. '[' → logprob: -3.968135118484497
    5. '[
' → logprob: -3.968135118484497
    6. 'product' → logprob: -4.468134880065918
    7. '[[' → logprob: -4.968134880065918
    8. 'list' → logprob: -4.968134880065918
    9. 's' → logprob: -5.343134880065918
    10. 'com' → logprob: -5.718134880065918

Token 328: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7175970077514648
    2. 'dp' → logprob: -0.9675970077514648
    3. ' dp' → logprob: -3.092597007751465
    4. 'res' → logprob: -3.092597007751465
    5. ' res' → logprob: -3.842597007751465
    6. '
' → logprob: -4.342597007751465
    7. 'result' → logprob: -6.717597007751465
    8. 'DP' → logprob: -7.592597007751465
    9. 'ret' → logprob: -7.842597007751465
    10. '    
' → logprob: -7.842597007751465

Token 329: ' triple' (ID: 41563)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.9579468965530396
    2. 'dp' → logprob: -1.3329468965530396
    3. 'res' → logprob: -1.8329468965530396
    4. '   ' → logprob: -2.33294677734375
    5. ' dp' → logprob: -2.70794677734375
    6. ' result' → logprob: -4.58294677734375
    7. 'result' → logprob: -4.70794677734375
    8. ' ans' → logprob: -5.83294677734375
    9. 'return' → logprob: -6.45794677734375
    10. ' return' → logprob: -7.08294677734375

Token 330: ' im' (ID: 770)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5286668539047241
    2. ' for' → logprob: -1.4036668539047241
    3. ' nested' → logprob: -2.5286669731140137
    4. ' boucle' → logprob: -3.1536669731140137
    5. 'nested' → logprob: -3.9036669731140137
    6. 'bou' → logprob: -5.278666973114014
    7. ' loop' → logprob: -5.403666973114014
    8. '-n' → logprob: -5.778666973114014
    9. ' bou' → logprob: -6.403666973114014
    10. 'n' → logprob: -6.778666973114014

Token 331: 'br' (ID: 1697)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.005114088766276836
    2. 'p' → logprob: -6.0051140785217285
    3. 'ports' → logprob: -7.0051140785217285
    4. 'br' → logprob: -7.2551140785217285
    5. 'plement' → logprob: -8.380114555358887
    6. 'for' → logprob: -8.755114555358887
    7. 'm' → logprob: -8.880114555358887
    8. '[' → logprob: -9.005114555358887
    9. 'ported' → logprob: -9.005114555358887
    10. '```' → logprob: -10.005114555358887

Token 332: 'ication' (ID: 4598)
  Prédit: 'ication'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ication' → logprob: -0.24072003364562988
    2. 'ed' → logprob: -2.24072003364563
    3. 'q' → logprob: -3.61572003364563
    4. 'iqué' → logprob: -4.365719795227051
    5. 'cation' → logprob: -4.365719795227051
    6. 'quée' → logprob: -4.615719795227051
    7. 'é' → logprob: -4.615719795227051
    8. 'ications' → logprob: -4.740719795227051
    9. 'icación' → logprob: -5.115719795227051
    10. 'ic' → logprob: -5.240719795227051

Token 333: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36827000975608826
    2. '[
' → logprob: -2.243269920349121
    3. '[' → logprob: -2.743269920349121
    4. 'result' → logprob: -3.368269920349121
    5. ' for' → logprob: -4.368269920349121
    6. '
' → logprob: -4.743269920349121
    7. '[i' → logprob: -4.993269920349121
    8. ',' → logprob: -5.118269920349121
    9. 'dp' → logprob: -5.118269920349121
    10. 'res' → logprob: -5.243269920349121

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17419840395450592
    2. '[' → logprob: -2.7991983890533447
    3. '[
' → logprob: -3.9241983890533447
    4. ')' → logprob: -4.549198627471924
    5. ' =' → logprob: -4.549198627471924
    6. ' for' → logprob: -5.049198627471924
    7. ' ' → logprob: -5.299198627471924
    8. '[]' → logprob: -5.424198627471924
    9. 'result' → logprob: -5.549198627471924
    10. ' res' → logprob: -5.799198627471924

Token 335: ' DP' (ID: 51992)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7970344424247742
    2. ' res' → logprob: -1.422034502029419
    3. 'dp' → logprob: -1.422034502029419
    4. '   ' → logprob: -3.422034502029419
    5. ' dp' → logprob: -3.547034502029419
    6. ' ans' → logprob: -6.29703426361084
    7. 'ans' → logprob: -6.92203426361084
    8. 'ret' → logprob: -7.67203426361084
    9. 'r' → logprob: -7.79703426361084
    10. 'result' → logprob: -7.79703426361084

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03817082196474075
    2. '=' → logprob: -3.28817081451416
    3. '=[' → logprob: -9.16317081451416
    4. '=[[' → logprob: -11.28817081451416
    5. ' =[' → logprob: -12.53817081451416
    6. '[' → logprob: -12.78817081451416
    7. ' ' → logprob: -13.41317081451416
    8. '   ' → logprob: -14.41317081451416
    9. '=[]' → logprob: -14.53817081451416
    10. ',' → logprob: -14.66317081451416

Token 337: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00032712158281356096
    2. '[' → logprob: -8.625327110290527
    3. ' [[' → logprob: -9.000327110290527
    4. ' [[[' → logprob: -10.875327110290527
    5. '[(' → logprob: -13.000327110290527
    6. '{' → logprob: -13.500327110290527
    7. '[{' → logprob: -14.375327110290527
    8. '[
' → logprob: -15.000327110290527
    9. ' [' → logprob: -15.000327110290527
    10. '[((' → logprob: -16.375328063964844

Token 338: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015240935317706317
    2. '(' → logprob: -9.750152587890625
    3. '[' → logprob: -10.625152587890625
    4. 'prod' → logprob: -10.750152587890625
    5. '-' → logprob: -11.250152587890625
    6. ' ' → logprob: -11.500152587890625
    7. 'False' → logprob: -11.875152587890625
    8. 'None' → logprob: -13.000152587890625
    9. '1' → logprob: -13.125152587890625
    10. '((' → logprob: -13.500152587890625

Token 339: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4376232624053955
    2. 'for' → logprob: -1.0626232624053955
    3. ')' → logprob: -5.062623023986816
    4. ']' → logprob: -6.187623023986816
    5. ',' → logprob: -8.687623023986816
    6. ']*' → logprob: -9.312623023986816
    7. ' ' → logprob: -9.687623023986816
    8. '	for' → logprob: -9.812623023986816
    9. ']*(' → logprob: -10.062623023986816
    10. ')]' → logprob: -10.937623023986816

Token 340: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007443821057677269
    2. ']' → logprob: -5.882443904876709
    3. 'False' → logprob: -5.882443904876709
    4. '1' → logprob: -7.132443904876709
    5. ' ' → logprob: -8.13244342803955
    6. '2' → logprob: -9.13244342803955
    7. 'H' → logprob: -9.25744342803955
    8. ')]' → logprob: -9.50744342803955
    9. '
' → logprob: -9.75744342803955
    10. ' ]' → logprob: -10.00744342803955

Token 341: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007568581495434046
    2. ')' → logprob: -8.125757217407227
    3. '],' → logprob: -8.500757217407227
    4. ' ]' → logprob: -9.375757217407227
    5. ',' → logprob: -9.750757217407227
    6. ')]' → logprob: -10.250757217407227
    7. ']
' → logprob: -10.500757217407227
    8. ']]' → logprob: -11.250757217407227
    9. '],[' → logprob: -11.375757217407227
    10. ' for' → logprob: -12.000757217407227

Token 342: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20187656581401825
    2. 'for' → logprob: -1.7018765211105347
    3. ']' → logprob: -8.076876640319824
    4. '	for' → logprob: -9.576876640319824
    5. ')' → logprob: -10.326876640319824
    6. ' ' → logprob: -11.701876640319824
    7. '   ' → logprob: -11.951876640319824
    8. ']*(' → logprob: -12.076876640319824
    9. ']*' → logprob: -12.076876640319824
    10. '          ' → logprob: -12.701876640319824

Token 343: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001657686079852283
    2. ' _' → logprob: -6.751657485961914
    3. ' in' → logprob: -7.751657485961914
    4. 'w' → logprob: -10.626657485961914
    5. '_w' → logprob: -10.876657485961914
    6. '_j' → logprob: -12.626657485961914
    7. 'in' → logprob: -12.876657485961914
    8. ')' → logprob: -13.376657485961914
    9. '_W' → logprob: -13.751657485961914
    10. '__' → logprob: -14.001657485961914

Token 344: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13476191461086273
    2. 'in' → logprob: -2.1347618103027344
    3. 'range' → logprob: -4.884761810302734
    4. ' range' → logprob: -8.634761810302734
    5. ' ' → logprob: -10.259761810302734
    6. '_' → logprob: -11.384761810302734
    7. 'x' → logprob: -13.134761810302734
    8. '0' → logprob: -13.134761810302734
    9. 'w' → logprob: -13.384761810302734
    10. 's' → logprob: -13.509761810302734

Token 345: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038042984902858734
    2. ' range' → logprob: -3.2880430221557617
    3. '_' → logprob: -14.288043022155762
    4. '(range' → logprob: -15.663043022155762
    5. '_range' → logprob: -16.038042068481445
    6. 'in' → logprob: -16.163042068481445
    7. '
' → logprob: -16.413042068481445
    8. ' in' → logprob: -16.413042068481445
    9. ' ' → logprob: -16.538042068481445
    10. '   ' → logprob: -16.913042068481445

Token 346: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0019260174594819546
    2. '(H' → logprob: -6.501925945281982
    3. '(' → logprob: -8.37692642211914
    4. '(M' → logprob: -9.00192642211914
    5. '((' → logprob: -10.12692642211914
    6. 'W' → logprob: -11.50192642211914
    7. ' (' → logprob: -11.75192642211914
    8. '](' → logprob: -13.75192642211914
    9. '(D' → logprob: -13.75192642211914
    10. '(w' → logprob: -13.87692642211914

Token 347: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07032118737697601
    2. '+' → logprob: -2.6953210830688477
    3. ' +' → logprob: -8.570321083068848
    4. ')]' → logprob: -9.945321083068848
    5. '_
' → logprob: -9.945321083068848
    6. '_-' → logprob: -11.195321083068848
    7. '_'+' → logprob: -11.445321083068848
    8. '_)' → logprob: -11.445321083068848
    9. '_=' → logprob: -11.945321083068848
    10. '
' → logprob: -12.070321083068848

Token 348: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004968797322362661
    2. ' +' → logprob: -5.754968643188477
    3. ')]' → logprob: -6.379968643188477
    4. '_' → logprob: -9.504968643188477
    5. ')' → logprob: -11.879968643188477
    6. ' ' → logprob: -12.879968643188477
    7. '+
' → logprob: -13.379968643188477
    8. '```' → logprob: -13.754968643188477
    9. ')])' → logprob: -14.004968643188477
    10. '0' → logprob: -14.129968643188477

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005603004829026759
    2. '2' → logprob: -7.500560283660889
    3. ' ' → logprob: -12.625560760498047
    4. '+' → logprob: -14.000560760498047
    5. ')' → logprob: -14.125560760498047
    6. '```' → logprob: -14.500560760498047
    7. '(' → logprob: -14.875560760498047
    8. ')]' → logprob: -15.125560760498047
    9. '   ' → logprob: -15.125560760498047
    10. '0' → logprob: -15.750560760498047

Token 350: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006861481815576553
    2. ']' → logprob: -5.006861686706543
    3. ']]' → logprob: -9.381861686706543
    4. ')' → logprob: -10.256861686706543
    5. ' ]' → logprob: -11.506861686706543
    6. '   ' → logprob: -12.381861686706543
    7. ')]
' → logprob: -12.631861686706543
    8. '+' → logprob: -13.131861686706543
    9. '       ' → logprob: -13.256861686706543
    10. '])' → logprob: -13.506861686706543

Token 351: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24113309383392334
    2. ' for' → logprob: -1.6161330938339233
    3. 'for' → logprob: -4.491133213043213
    4. '   ' → logprob: -5.991133213043213
    5. '       ' → logprob: -6.991133213043213
    6. ' ]' → logprob: -8.116132736206055
    7. '	for' → logprob: -8.116132736206055
    8. '    ' → logprob: -9.241132736206055
    9. '        ' → logprob: -10.241132736206055
    10. '<|end|>' → logprob: -10.241132736206055

Token 352: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12949663400650024
    2. '_' → logprob: -2.7544965744018555
    3. ' range' → logprob: -3.1294965744018555
    4. ' _' → logprob: -4.5044965744018555
    5. 'range' → logprob: -5.8794965744018555
    6. 'in' → logprob: -8.754496574401855
    7. '_range' → logprob: -9.879496574401855
    8. ' ' → logprob: -11.754496574401855
    9. '   ' → logprob: -13.504496574401855
    10. ' i' → logprob: -13.754496574401855

Token 353: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020117750391364098
    2. 'in' → logprob: -4.14511775970459
    3. 'range' → logprob: -5.64511775970459
    4. '_' → logprob: -8.02011775970459
    5. ' range' → logprob: -8.77011775970459
    6. ' _' → logprob: -11.14511775970459
    7. ' ' → logprob: -11.27011775970459
    8. 'H' → logprob: -12.14511775970459
    9. 'n' → logprob: -12.89511775970459
    10. '_range' → logprob: -13.14511775970459

Token 354: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759433507919312
    2. 'range' → logprob: -0.8259433507919312
    3. ' in' → logprob: -13.200942993164062
    4. '(range' → logprob: -13.575942993164062
    5. '_range' → logprob: -14.700942993164062
    6. '	range' → logprob: -15.575942993164062
    7. 'in' → logprob: -16.075942993164062
    8. '_' → logprob: -16.950942993164062
    9. ' ' → logprob: -17.200942993164062
    10. 'H' → logprob: -17.950942993164062

Token 355: '(H' (ID: 20904)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12702679634094238
    2. 'range' → logprob: -2.1270267963409424
    3. ' in' → logprob: -9.627026557922363
    4. '(range' → logprob: -10.377026557922363
    5. 'in' → logprob: -14.752026557922363
    6. '_range' → logprob: -15.127026557922363
    7. '(' → logprob: -15.377026557922363
    8. '(H' → logprob: -15.377026557922363
    9. '	range' → logprob: -15.377026557922363
    10. ' ' → logprob: -16.12702751159668

Token 356: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005330282263457775
    2. '+' → logprob: -5.2553300857543945
    3. '_=' → logprob: -11.255330085754395
    4. '_-' → logprob: -11.505330085754395
    5. '_'+' → logprob: -11.505330085754395
    6. '_
' → logprob: -11.755330085754395
    7. '__' → logprob: -11.880330085754395
    8. '   ' → logprob: -12.005330085754395
    9. '()+' → logprob: -12.130330085754395
    10. '_^(' → logprob: -12.255330085754395

Token 357: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000495605927426368
    2. '_' → logprob: -8.000495910644531
    3. '1' → logprob: -10.125495910644531
    4. ' +' → logprob: -10.125495910644531
    5. '+
' → logprob: -10.750495910644531
    6. ')+' → logprob: -11.125495910644531
    7. ']+' → logprob: -11.250495910644531
    8. ')]' → logprob: -11.625495910644531
    9. ')][' → logprob: -12.625495910644531
    10. '()+' → logprob: -12.750495910644531

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.840432565193623e-05
    2. '2' → logprob: -10.125088691711426
    3. 'range' → logprob: -10.750088691711426
    4. '0' → logprob: -12.187588691711426
    5. ' ' → logprob: -12.375088691711426
    6. ')' → logprob: -12.687588691711426
    7. '
' → logprob: -12.937588691711426
    8. '   ' → logprob: -13.000088691711426
    9. ' range' → logprob: -13.562588691711426
    10. '+' → logprob: -13.750088691711426

Token 359: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5761775970458984
    2. ']' → logprob: -0.8261775970458984
    3. ']
' → logprob: -9.451177597045898
    4. ')]
' → logprob: -10.076177597045898
    5. '}]' → logprob: -10.201177597045898
    6. ']]' → logprob: -11.076177597045898
    7. ' ]' → logprob: -11.201177597045898
    8. '>]' → logprob: -11.326177597045898
    9. ')' → logprob: -11.451177597045898
    10. ']:' → logprob: -12.076177597045898

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11499003320932388
    2. 'DP' → logprob: -2.239989995956421
    3. '       ' → logprob: -7.364990234375
    4. ' DP' → logprob: -7.864990234375
    5. '<|end|>' → logprob: -7.864990234375
    6. '[' → logprob: -8.364990234375
    7. ' for' → logprob: -8.989990234375
    8. 'for' → logprob: -9.364990234375
    9. '	' → logprob: -9.989990234375
    10. '```' → logprob: -10.489990234375

Token 361: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.0609014630317688
    2. '   ' → logprob: -2.935901403427124
    3. 'for' → logprob: -5.810901641845703
    4. ' for' → logprob: -6.560901641845703
    5. ' DP' → logprob: -6.685901641845703
    6. '
' → logprob: -9.560901641845703
    7. '[' → logprob: -9.810901641845703
    8. ' ' → logprob: -10.310901641845703
    9. '       ' → logprob: -10.310901641845703
    10. '	' → logprob: -10.560901641845703

Token 362: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.630610641877865e-06
    2. '0' → logprob: -13.250006675720215
    3. '
' → logprob: -13.625006675720215
    4. '=' → logprob: -13.750006675720215
    5. '][' → logprob: -14.000006675720215
    6. ' =' → logprob: -15.000006675720215
    7. ' [' → logprob: -15.000006675720215
    8. '```' → logprob: -15.000006675720215
    9. '[
' → logprob: -16.2500057220459
    10. '    
' → logprob: -16.6250057220459

Token 363: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.62501335144043
    3. '1' → logprob: -12.87501335144043
    4. '[' → logprob: -13.87501335144043
    5. '][' → logprob: -14.75001335144043
    6. '   ' → logprob: -15.43751335144043
    7. 'H' → logprob: -15.81251335144043
    8. '
' → logprob: -16.50001335144043
    9. '-' → logprob: -16.62501335144043
    10. '۰' → logprob: -17.68751335144043

Token 364: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00030161935137584805
    2. ']' → logprob: -8.250301361083984
    3. '[' → logprob: -10.375301361083984
    4. ' ][' → logprob: -12.500301361083984
    5. '0' → logprob: -13.000301361083984
    6. ']
' → logprob: -14.125301361083984
    7. ' ' → logprob: -14.250301361083984
    8. '][-' → logprob: -15.250301361083984
    9. '"][' → logprob: -15.375301361083984
    10. '   ' → logprob: -15.750301361083984

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.875009536743164
    3. '1' → logprob: -14.375009536743164
    4. '[' → logprob: -14.937509536743164
    5. '][' → logprob: -15.312509536743164
    6. '   ' → logprob: -15.562509536743164
    7. 'W' → logprob: -15.750009536743164
    8. '-' → logprob: -16.125009536743164
    9. '
' → logprob: -16.125009536743164
    10. '۰' → logprob: -16.312509536743164

Token 366: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.47712767124176025
    2. ']' → logprob: -0.9771276712417603
    3. ']=' → logprob: -5.852127552032471
    4. '[' → logprob: -9.227128028869629
    5. '])' → logprob: -11.227128028869629
    6. '=[' → logprob: -11.352128028869629
    7. '=' → logprob: -11.852128028869629
    8. ']={' → logprob: -11.977128028869629
    9. ']==' → logprob: -12.102128028869629
    10. '0' → logprob: -12.102128028869629

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04301003739237785
    2. '1' → logprob: -3.1680099964141846
    3. ' ' → logprob: -12.168009757995605
    4. '
' → logprob: -12.918009757995605
    5. ']' → logprob: -13.168009757995605
    6. 'False' → logprob: -15.418009757995605
    7. '01' → logprob: -15.668009757995605
    8. '

' → logprob: -15.980509757995605
    9. '   ' → logprob: -15.980509757995605
    10. '-' → logprob: -16.043010711669922

Token 368: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.134509021649137e-05
    2. ']=' → logprob: -10.00006103515625
    3. ' ]' → logprob: -11.25006103515625
    4. '],' → logprob: -14.00006103515625
    5. ']+=' → logprob: -14.12506103515625
    6. ']
' → logprob: -14.62506103515625
    7. '][' → logprob: -15.25006103515625
    8. '[' → logprob: -15.62506103515625
    9. ']>' → logprob: -16.25006103515625
    10. '])' → logprob: -16.25006103515625

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5817114114761353
    2. ' =' → logprob: -0.8317114114761353
    3. ']' → logprob: -5.581711292266846
    4. ']=' → logprob: -6.831711292266846
    5. '[' → logprob: -7.206711292266846
    6. ',' → logprob: -8.831711769104004
    7. '=[' → logprob: -11.706711769104004
    8. ' =[' → logprob: -12.706711769104004
    9. '0' → logprob: -12.956711769104004
    10. '][' → logprob: -13.581711769104004

Token 370: ' DP' (ID: 51992)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023679454170633107
    2. '0' → logprob: -8.875236511230469
    3. '(' → logprob: -9.375236511230469
    4. ' ' → logprob: -11.500236511230469
    5. '[' → logprob: -13.250236511230469
    6. ' (' → logprob: -16.12523651123047
    7. '   ' → logprob: -17.00023651123047
    8. '{' → logprob: -18.68773651123047
    9. '2' → logprob: -18.68773651123047
    10. '  ' → logprob: -18.87523651123047

Token 371: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4287315607070923
    2. '0' → logprob: -1.0537315607070923
    3. ' ' → logprob: -11.178731918334961
    4. '][' → logprob: -11.928731918334961
    5. ' [' → logprob: -12.553731918334961
    6. '1' → logprob: -12.803731918334961
    7. '```' → logprob: -13.428731918334961
    8. '-' → logprob: -15.053731918334961
    9. '   ' → logprob: -15.178731918334961
    10. '=' → logprob: -15.178731918334961

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. '1' → logprob: -13.50000286102295
    3. ' ' → logprob: -14.12500286102295
    4. '[' → logprob: -14.62500286102295
    5. '-' → logprob: -16.125003814697266
    6. '```' → logprob: -16.375003814697266
    7. '][' → logprob: -16.687503814697266
    8. '
' → logprob: -16.937503814697266
    9. 'H' → logprob: -17.062503814697266
    10. ']' → logprob: -17.500003814697266

Token 373: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013404814526438713
    2. '[' → logprob: -7.126340389251709
    3. '0' → logprob: -7.626340389251709
    4. ']' → logprob: -10.376340866088867
    5. ' ][' → logprob: -11.251340866088867
    6. ' ' → logprob: -13.876340866088867
    7. '1' → logprob: -14.126340866088867
    8. '"][' → logprob: -14.501340866088867
    9. ''][' → logprob: -15.126340866088867
    10. '   ' → logprob: -15.501340866088867

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -14.750001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '
' → logprob: -15.125001907348633
    5. '```' → logprob: -15.625001907348633
    6. '۰' → logprob: -15.812501907348633
    7. '   ' → logprob: -16.750001907348633
    8. '[' → logprob: -17.062501907348633
    9. '０' → logprob: -17.375001907348633
    10. ']' → logprob: -17.562501907348633

Token 375: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0044136205688118935
    2. '[' → logprob: -5.629413604736328
    3. '1' → logprob: -7.379413604736328
    4. ']' → logprob: -8.879413604736328
    5. ' ][' → logprob: -10.879413604736328
    6. '0' → logprob: -11.254413604736328
    7. ')[' → logprob: -12.504413604736328
    8. '=' → logprob: -12.879413604736328
    9. ']=' → logprob: -12.879413604736328
    10. ']][' → logprob: -14.004413604736328

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. '0' → logprob: -10.625027656555176
    3. '
' → logprob: -14.000027656555176
    4. '[' → logprob: -14.125027656555176
    5. ' ' → logprob: -14.250027656555176
    6. ']' → logprob: -15.437527656555176
    7. '```' → logprob: -15.437527656555176
    8. '

' → logprob: -16.00002670288086
    9. '   ' → logprob: -16.37502670288086
    10. '(' → logprob: -17.37502670288086

Token 377: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00426441989839077
    2. ']=' → logprob: -5.5042643547058105
    3. '=' → logprob: -8.629264831542969
    4. ' ]' → logprob: -12.879264831542969
    5. ']+=' → logprob: -13.129264831542969
    6. '0' → logprob: -14.129264831542969
    7. '1' → logprob: -14.129264831542969
    8. ' =' → logprob: -14.379264831542969
    9. ')' → logprob: -16.12926483154297
    10. ']
' → logprob: -16.25426483154297

Token 378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416398212313652
    2. ' =' → logprob: -4.264163970947266
    3. '1' → logprob: -15.389163970947266
    4. ',' → logprob: -16.264163970947266
    5. '+=' → logprob: -16.264163970947266
    6. '0' → logprob: -16.764163970947266
    7. '=
' → logprob: -17.139163970947266
    8. ' ' → logprob: -18.389163970947266
    9. '=True' → logprob: -18.514163970947266
    10. ']=' → logprob: -18.639163970947266

Token 379: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003914695407729596
    2. '0' → logprob: -7.875391483306885
    3. ' ' → logprob: -11.625391006469727
    4. '2' → logprob: -14.562891006469727
    5. '(' → logprob: -14.750391006469727
    6. 'fact' → logprob: -15.000391006469727
    7. '
' → logprob: -15.812891006469727
    8. '```' → logprob: -16.062891006469727
    9. 'mod' → logprob: -16.187891006469727
    10. '[' → logprob: -16.250391006469727

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023321842309087515
    2. '0' → logprob: -8.37523365020752
    3. ' ' → logprob: -14.25023365020752
    4. '2' → logprob: -14.68773365020752
    5. '(' → logprob: -14.75023365020752
    6. '
' → logprob: -15.62523365020752
    7. '[' → logprob: -15.68773365020752
    8. 'fact' → logprob: -16.187732696533203
    9. 'int' → logprob: -17.000232696533203
    10. '   ' → logprob: -17.062732696533203

Token 381: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2098284512758255
    2. '<|end|>' → logprob: -2.4598283767700195
    3. ' for' → logprob: -2.5848283767700195
    4. 'for' → logprob: -4.2098283767700195
    5. '
' → logprob: -4.8348283767700195
    6. '	for' → logprob: -5.9598283767700195
    7. '<|end|>' → logprob: -6.4598283767700195
    8. '    
' → logprob: -7.8348283767700195
    9. ',' → logprob: -8.45982837677002
    10. '  
' → logprob: -8.45982837677002

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05207790434360504
    2. ' for' → logprob: -3.0520780086517334
    3. '<|end|>' → logprob: -6.302077770233154
    4. '	for' → logprob: -6.802077770233154
    5. 'for' → logprob: -7.927077770233154
    6. ',' → logprob: -10.052078247070312
    7. '```' → logprob: -10.052078247070312
    8. '    
' → logprob: -10.927078247070312
    9. '       ' → logprob: -11.427078247070312
    10. '\t' → logprob: -11.427078247070312

Token 383: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7821334004402161
    2. '   ' → logprob: -1.7821333408355713
    3. ' for' → logprob: -2.0321333408355713
    4. '	for' → logprob: -2.9071333408355713
    5. ' ' → logprob: -3.2821333408355713
    6. '	' → logprob: -3.4071333408355713
    7. '    ' → logprob: -3.6571333408355713
    8. '[' → logprob: -3.7821333408355713
    9. '       ' → logprob: -4.03213357925415
    10. ')' → logprob: -4.03213357925415

Token 384: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.39488545060157776
    2. ' h' → logprob: -1.7698854207992554
    3. 'i' → logprob: -2.144885540008545
    4. ' i' → logprob: -3.269885540008545
    5. 'y' → logprob: -8.644885063171387
    6. ' y' → logprob: -8.894885063171387
    7. 'x' → logprob: -9.269885063171387
    8. 'r' → logprob: -9.769885063171387
    9. '   ' → logprob: -9.769885063171387
    10. ' ' → logprob: -10.269885063171387

Token 385: ',w' (ID: 49598)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020914720371365547
    2. 'in' → logprob: -3.8959147930145264
    3. ',' → logprob: -9.020915031433105
    4. '1' → logprob: -9.395915031433105
    5. '+' → logprob: -10.020915031433105
    6. '	in' → logprob: -10.395915031433105
    7. '0' → logprob: -10.520915031433105
    8. ' ' → logprob: -10.645915031433105
    9. '_' → logprob: -11.020915031433105
    10. ' ,' → logprob: -12.520915031433105

Token 386: ',n' (ID: 18103)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4743035137653351
    2. ' in' → logprob: -0.9743034839630127
    3. ',' → logprob: -8.849303245544434
    4. ' ' → logprob: -10.599303245544434
    5. '1' → logprob: -10.974303245544434
    6. '+' → logprob: -11.599303245544434
    7. '   ' → logprob: -11.974303245544434
    8. '	in' → logprob: -12.099303245544434
    9. '0' → logprob: -12.849303245544434
    10. ')' → logprob: -13.099303245544434

Token 387: 'x' (ID: 87)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11364100128412247
    2. 'in' → logprob: -2.2386410236358643
    3. ',' → logprob: -7.238640785217285
    4. '   ' → logprob: -10.363640785217285
    5. '	in' → logprob: -11.238640785217285
    6. ')' → logprob: -11.363640785217285
    7. ' ' → logprob: -11.738640785217285
    8. '1' → logprob: -11.988640785217285
    9. '```' → logprob: -12.613640785217285
    10. ' ,' → logprob: -12.738640785217285

Token 388: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06216990575194359
    2. ' in' → logprob: -2.8121697902679443
    3. ',' → logprob: -8.937170028686523
    4. ' ' → logprob: -11.062170028686523
    5. '   ' → logprob: -11.312170028686523
    6. '1' → logprob: -11.562170028686523
    7. ')' → logprob: -11.687170028686523
    8. ',in' → logprob: -12.437170028686523
    9. 'range' → logprob: -12.437170028686523
    10. '```' → logprob: -12.687170028686523

Token 389: ' product' (ID: 1888)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1633603423833847
    2. ' range' → logprob: -1.913360357284546
    3. 'product' → logprob: -6.038360118865967
    4. ' product' → logprob: -7.413360118865967
    5. 'in' → logprob: -9.038360595703125
    6. ' in' → logprob: -11.163360595703125
    7. '(range' → logprob: -13.038360595703125
    8. '(' → logprob: -13.413360595703125
    9. ',' → logprob: -13.538360595703125
    10. ' ' → logprob: -13.788360595703125

Token 390: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00016337241686414927
    2. 'range' → logprob: -8.750163078308105
    3. '(' → logprob: -12.250163078308105
    4. ' range' → logprob: -16.875164031982422
    5. '((' → logprob: -17.625164031982422
    6. '(
' → logprob: -18.500164031982422
    7. ' (' → logprob: -19.875164031982422
    8. '	range' → logprob: -20.000164031982422
    9. '   ' → logprob: -20.750164031982422
    10. '(re' → logprob: -20.875164031982422

Token 391: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.06998401135206223
    2. '(' → logprob: -2.694983959197998
    3. '(h' → logprob: -10.444984436035156
    4. 'H' → logprob: -11.319984436035156
    5. '((' → logprob: -13.194984436035156
    6. '1' → logprob: -13.319984436035156
    7. '(len' → logprob: -14.319984436035156
    8. '(max' → logprob: -14.569984436035156
    9. ' (' → logprob: -14.694984436035156
    10. '(-' → logprob: -15.194984436035156

Token 392: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.033999498933553696
    2. '+' → logprob: -3.408999443054199
    3. '_),' → logprob: -8.2839994430542
    4. ' +' → logprob: -10.0339994430542
    5. '),' → logprob: -10.9089994430542
    6. '_,' → logprob: -10.9089994430542
    7. '_
' → logprob: -12.5339994430542
    8. '   ' → logprob: -12.7839994430542
    9. '_=' → logprob: -12.7839994430542
    10. ')+' → logprob: -12.9089994430542

Token 393: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0021029175259172916
    2. '(' → logprob: -7.002102851867676
    3. '(H' → logprob: -7.127102851867676
    4. ' +' → logprob: -9.502102851867676
    5. '(h' → logprob: -9.627102851867676
    6. '_' → logprob: -9.752102851867676
    7. '1' → logprob: -10.252102851867676
    8. '0' → logprob: -10.377102851867676
    9. '),' → logprob: -10.877102851867676
    10. '
' → logprob: -11.002102851867676

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020807012333534658
    2. '0' → logprob: -9.625207901000977
    3. '+' → logprob: -9.875207901000977
    4. '),' → logprob: -10.875207901000977
    5. '(h' → logprob: -11.125207901000977
    6. '
' → logprob: -11.375207901000977
    7. '(' → logprob: -11.375207901000977
    8. 'h' → logprob: -11.625207901000977
    9. ' ' → logprob: -11.875207901000977
    10. '   ' → logprob: -12.500207901000977

Token 395: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03858083114027977
    2. ',' → logprob: -3.288580894470215
    3. '),(' → logprob: -8.913580894470215
    4. '   ' → logprob: -9.038580894470215
    5. ',h' → logprob: -9.913580894470215
    6. ',w' → logprob: -10.038580894470215
    7. '       ' → logprob: -10.288580894470215
    8. '),
' → logprob: -10.663580894470215
    9. ',),' → logprob: -10.663580894470215
    10. '           ' → logprob: -11.163580894470215

Token 396: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00011069540778407827
    2. ' range' → logprob: -9.125110626220703
    3. '   ' → logprob: -14.125110626220703
    4. ' ' → logprob: -15.000110626220703
    5. '       ' → logprob: -15.500110626220703
    6. '(range' → logprob: -16.500110626220703
    7. '  ' → logprob: -16.625110626220703
    8. '    ' → logprob: -17.125110626220703
    9. '
' → logprob: -17.125110626220703
    10. '               ' → logprob: -17.250110626220703

Token 397: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.00042054426739923656
    2. '(' → logprob: -8.250420570373535
    3. '(w' → logprob: -9.000420570373535
    4. 'W' → logprob: -11.000420570373535
    5. ' (' → logprob: -12.000420570373535
    6. '   ' → logprob: -13.000420570373535
    7. '((' → logprob: -13.125420570373535
    8. '(H' → logprob: -13.375420570373535
    9. '(max' → logprob: -13.750420570373535
    10. '1' → logprob: -14.250420570373535

Token 398: '_' (ID: 62)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007706245873123407
    2. '_' → logprob: -4.882706165313721
    3. ' +' → logprob: -10.382706642150879
    4. ')+' → logprob: -10.757706642150879
    5. '),' → logprob: -11.007706642150879
    6. '1' → logprob: -11.632706642150879
    7. '_),' → logprob: -12.632706642150879
    8. '()+' → logprob: -12.882706642150879
    9. '+w' → logprob: -12.882706642150879
    10. '-' → logprob: -13.445206642150879

Token 399: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1299203783273697
    2. 'W' → logprob: -2.379920482635498
    3. '_' → logprob: -3.629920482635498
    4. '(W' → logprob: -7.129920482635498
    5. '1' → logprob: -7.379920482635498
    6. 'w' → logprob: -8.00492000579834
    7. '_,' → logprob: -8.25492000579834
    8. '   ' → logprob: -9.00492000579834
    9. '+w' → logprob: -9.00492000579834
    10. ' +' → logprob: -9.37992000579834

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.370294846012257e-05
    2. 'W' → logprob: -11.125043869018555
    3. 'w' → logprob: -11.375043869018555
    4. '+' → logprob: -12.000043869018555
    5. ' ' → logprob: -12.500043869018555
    6. '(W' → logprob: -12.750043869018555
    7. '(w' → logprob: -13.625043869018555
    8. '2' → logprob: -14.000043869018555
    9. '
' → logprob: -14.250043869018555
    10. '(' → logprob: -14.750043869018555

Token 401: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2273213416337967
    2. '),' → logprob: -1.6023213863372803
    3. ',(' → logprob: -7.727321147918701
    4. '),(' → logprob: -7.852321147918701
    5. ',[' → logprob: -7.977321147918701
    6. ',),' → logprob: -8.60232162475586
    7. ',n' → logprob: -8.85232162475586
    8. '):' → logprob: -8.97732162475586
    9. ' ,' → logprob: -9.47732162475586
    10. '):
' → logprob: -9.85232162475586

Token 402: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006699381396174431
    2. '[' → logprob: -5.256699562072754
    3. '2' → logprob: -7.256699562072754
    4. '(' → logprob: -7.506699562072754
    5. ' range' → logprob: -8.756699562072754
    6. '(range' → logprob: -10.006699562072754
    7. '3' → logprob: -13.006699562072754
    8. ' [' → logprob: -13.381699562072754
    9. 'chain' → logprob: -14.256699562072754
    10. '   ' → logprob: -15.006699562072754

Token 403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002306673675775528
    2. '1' → logprob: -6.1273064613342285
    3. '2' → logprob: -9.252306938171387
    4. ' ' → logprob: -11.752306938171387
    5. '   ' → logprob: -11.877306938171387
    6. 'False' → logprob: -12.877306938171387
    7. '[' → logprob: -13.252306938171387
    8. '(' → logprob: -13.752306938171387
    9. '-' → logprob: -13.877306938171387
    10. 'h' → logprob: -14.002306938171387

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011118779657408595
    2. ']):' → logprob: -7.37611198425293
    3. '1' → logprob: -8.62611198425293
    4. '])' → logprob: -9.12611198425293
    5. ' ,' → logprob: -9.25111198425293
    6. ']' → logprob: -10.00111198425293
    7. ']):
' → logprob: -10.37611198425293
    8. ',
' → logprob: -11.62611198425293
    9. ' ' → logprob: -12.37611198425293
    10. '])]' → logprob: -13.00111198425293

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6286106983898208e-05
    2. ' ' → logprob: -11.125016212463379
    3. '0' → logprob: -13.875016212463379
    4. '
' → logprob: -15.500016212463379
    5. '])' → logprob: -15.875016212463379
    6. '   ' → logprob: -16.687517166137695
    7. '```' → logprob: -18.000017166137695
    8. '2' → logprob: -18.250017166137695
    9. '  ' → logprob: -18.312517166137695
    10. ']' → logprob: -19.125017166137695

Token 406: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.004013103432953358
    2. ']):
' → logprob: -6.2540130615234375
    3. ']' → logprob: -6.5040130615234375
    4. '):' → logprob: -7.7540130615234375
    5. ']:' → logprob: -9.629013061523438
    6. '])' → logprob: -9.879013061523438
    7. '>):' → logprob: -11.129013061523438
    8. ')' → logprob: -11.754013061523438
    9. ' ]' → logprob: -12.629013061523438
    10. '   ' → logprob: -13.504013061523438

Token 407: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2817647159099579
    2. '       ' → logprob: -1.6567647457122803
    3. ' :' → logprob: -4.156764507293701
    4. ':
' → logprob: -4.656764507293701
    5. '):' → logprob: -4.656764507293701
    6. '   ' → logprob: -4.781764507293701
    7. ',' → logprob: -5.156764507293701
    8. '):
' → logprob: -6.156764507293701
    9. '[' → logprob: -7.031764507293701
    10. ')' → logprob: -7.281764507293701

Token 408: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3555980324745178
    2. 'if' (adapté à ' if') → logprob: -1.230597972869873
    3. '   ' → logprob: -5.855597972869873
    4. '       ' → logprob: -5.855597972869873
    5. '	if' → logprob: -7.730597972869873
    6. ' next' → logprob: -8.605598449707031
    7. '    ' → logprob: -8.855598449707031
    8. 'next' → logprob: -9.355598449707031
    9. 'continue' → logprob: -9.605598449707031
    10. ' for' → logprob: -9.605598449707031

Token 409: ' nx' (ID: 50118)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2314278781414032
    2. ' h' → logprob: -1.7314279079437256
    3. '(h' → logprob: -4.2314276695251465
    4. ' not' → logprob: -4.8564276695251465
    5. 'not' → logprob: -5.6064276695251465
    6. ' (' → logprob: -6.7314276695251465
    7. '(not' → logprob: -7.2314276695251465
    8. ' DP' → logprob: -8.356428146362305
    9. '(' → logprob: -8.481428146362305
    10. 'w' → logprob: -8.481428146362305

Token 410: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10188896954059601
    2. ' ==' → logprob: -2.35188889503479
    3. ':' → logprob: -6.476889133453369
    4. ']==' → logprob: -10.726888656616211
    5. 'and' → logprob: -10.976888656616211
    6. ' and' → logprob: -11.226888656616211
    7. '[' → logprob: -11.226888656616211
    8. '=' → logprob: -11.476888656616211
    9. '==
' → logprob: -11.476888656616211
    10. ' ' → logprob: -11.601888656616211

Token 411: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016939952969551086
    2. '1' → logprob: -4.516940116882324
    3. ' ' → logprob: -5.141940116882324
    4. '   ' → logprob: -10.766940116882324
    5. '  ' → logprob: -13.516940116882324
    6. '	' → logprob: -13.766940116882324
    7. ' ' → logprob: -13.891940116882324
    8. '       ' → logprob: -14.454440116882324
    9. '    ' → logprob: -14.454440116882324
    10. '[' → logprob: -14.454440116882324

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0633900910615921
    2. '1' → logprob: -2.813390016555786
    3. ' ' → logprob: -6.563390254974365
    4. '   ' → logprob: -13.063389778137207
    5. '[' → logprob: -13.750889778137207
    6. ':' → logprob: -14.063389778137207
    7. '  ' → logprob: -14.688389778137207
    8. '-' → logprob: -15.000889778137207
    9. '...' → logprob: -15.000889778137207
    10. '
' → logprob: -15.063389778137207

Token 413: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8055176138877869
    2. ' and' → logprob: -0.9305176138877869
    3. ':
' → logprob: -1.9305176734924316
    4. 'and' → logprob: -4.805517673492432
    5. '           ' → logprob: -5.555517673492432
    6. '       ' → logprob: -7.430517673492432
    7. ' or' → logprob: -8.180517196655273
    8. ':return' → logprob: -8.555517196655273
    9. 'continue' → logprob: -8.930517196655273
    10. ' continue' → logprob: -9.305517196655273

Token 414: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014808183535933495
    2. ' and' → logprob: -5.264808177947998
    3. ' if' → logprob: -5.764808177947998
    4. '       ' → logprob: -6.139808177947998
    5. ' continue' → logprob: -6.514808177947998
    6. ':' → logprob: -7.014808177947998
    7. '               ' → logprob: -7.639808177947998
    8. 'if' → logprob: -7.639808177947998
    9. 'continue' → logprob: -7.639808177947998
    10. ',' → logprob: -9.764808654785156

Token 415: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6646524667739868
    2. 'DP' → logprob: -1.0396524667739868
    3. ' if' → logprob: -2.6646523475646973
    4. 'for' (adapté à ' for') → logprob: -3.7896523475646973
    5. 'continue' → logprob: -4.164652347564697
    6. ' DP' → logprob: -4.789652347564697
    7. ' continue' → logprob: -5.039652347564697
    8. '           ' → logprob: -5.039652347564697
    9. ' for' → logprob: -6.789652347564697
    10. '       ' → logprob: -7.164652347564697

Token 416: ' next' (ID: 2613)
  Prédit: 'nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.9387366771697998
    2. 'h' → logprob: -1.1887366771697998
    3. 'hh' → logprob: -1.4387366771697998
    4. 'w' → logprob: -3.8137366771698
    5. 'wh' → logprob: -4.563736915588379
    6. 'k' → logprob: -5.063736915588379
    7. 'dh' → logprob: -5.063736915588379
    8. 'th' → logprob: -5.313736915588379
    9. 'nw' → logprob: -6.188736915588379
    10. ' nh' → logprob: -6.188736915588379

Token 417: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.18269261717796326
    2. 'h' → logprob: -2.557692527770996
    3. '_w' → logprob: -2.557692527770996
    4. ' in' → logprob: -5.057692527770996
    5. 'w' → logprob: -5.307692527770996
    6. '_' → logprob: -7.932692527770996
    7. 'H' → logprob: -8.557692527770996
    8. '_n' → logprob: -9.682692527770996
    9. ' h' → logprob: -11.432692527770996
    10. 'W' → logprob: -11.432692527770996

Token 418: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011067868210375309
    2. 'in' → logprob: -4.511067867279053
    3. ',' → logprob: -12.261068344116211
    4. ' ' → logprob: -12.386068344116211
    5. 'range' → logprob: -12.636068344116211
    6. '	in' → logprob: -13.761068344116211
    7. ',h' → logprob: -13.761068344116211
    8. 'import' → logprob: -14.136068344116211
    9. 'n' → logprob: -14.511068344116211
    10. 'In' → logprob: -14.636068344116211

Token 419: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0620013028383255
    2. ' range' → logprob: -2.8120012283325195
    3. '   ' → logprob: -11.18700122833252
    4. '[h' → logprob: -11.31200122833252
    5. '  ' → logprob: -12.93700122833252
    6. ' ' → logprob: -13.43700122833252
    7. '(range' → logprob: -13.68700122833252
    8. 'h' → logprob: -13.68700122833252
    9. ' h' → logprob: -14.56200122833252
    10. '    ' → logprob: -14.93700122833252

Token 420: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0006778847891837358
    2. '(h' → logprob: -7.625678062438965
    3. '   ' → logprob: -8.625678062438965
    4. '	h' → logprob: -12.500678062438965
    5. ' h' → logprob: -13.000678062438965
    6. '       ' → logprob: -13.375678062438965
    7. '0' → logprob: -14.125678062438965
    8. '(' → logprob: -14.625678062438965
    9. '           ' → logprob: -14.750678062438965
    10. ',h' → logprob: -15.000678062438965

Token 421: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6462616920471191
    2. '+' → logprob: -0.7712616920471191
    3. ',H' → logprob: -5.021261692047119
    4. ' +' → logprob: -5.271261692047119
    5. ',h' → logprob: -6.396261692047119
    6. ' ,' → logprob: -9.896261215209961
    7. '+h' → logprob: -10.146261215209961
    8. '   ' → logprob: -10.896261215209961
    9. '

' → logprob: -11.396261215209961
    10. '):' → logprob: -11.521261215209961

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017635977128520608
    2. 'H' → logprob: -7.001763820648193
    3. ' ' → logprob: -7.876763820648193
    4. 'h' → logprob: -8.001763343811035
    5. '0' → logprob: -9.626763343811035
    6. ' H' → logprob: -11.126763343811035
    7. ',' → logprob: -11.251763343811035
    8. 'w' → logprob: -11.376763343811035
    9. '(H' → logprob: -11.376763343811035
    10. ' h' → logprob: -12.501763343811035

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6088075637817383
    2. '):
' → logprob: -1.4838075637817383
    3. '):' → logprob: -2.6088075637817383
    4. '               ' → logprob: -2.7338075637817383
    5. ',h' → logprob: -3.2338075637817383
    6. '           ' → logprob: -4.233807563781738
    7. ',W' → logprob: -4.233807563781738
    8. ',w' → logprob: -4.358807563781738
    9. ',H' → logprob: -5.858807563781738
    10. '+' → logprob: -6.233807563781738

Token 424: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -9.913265239447355e-05
    2. ' H' → logprob: -9.250099182128906
    3. '(H' → logprob: -13.250099182128906
    4. '   ' → logprob: -14.250099182128906
    5. '	H' → logprob: -15.875099182128906
    6. ',H' → logprob: -16.500099182128906
    7. ' ' → logprob: -16.625099182128906
    8. '           ' → logprob: -17.000099182128906
    9. '       ' → logprob: -17.250099182128906
    10. ')' → logprob: -17.250099182128906

Token 425: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00012987985974177718
    2. '+' → logprob: -9.000129699707031
    3. '_'+' → logprob: -12.625129699707031
    4. '_
' → logprob: -13.875129699707031
    5. '_=' → logprob: -14.625129699707031
    6. '_"+' → logprob: -15.125129699707031
    7. '_)' → logprob: -15.250129699707031
    8. '_);
' → logprob: -15.750129699707031
    9. '_^(' → logprob: -15.750129699707031
    10. '_,' → logprob: -15.875129699707031

Token 426: '+' (ID: 10)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009771554730832577
    2. '+' → logprob: -4.634771347045898
    3. '_'+' → logprob: -12.634771347045898
    4. '_=' → logprob: -12.759771347045898
    5. '_
' → logprob: -12.884771347045898
    6. '```' → logprob: -14.134771347045898
    7. '_:' → logprob: -14.134771347045898
    8. '_),' → logprob: -14.634771347045898
    9. '_)' → logprob: -14.759771347045898
    10. '_-' → logprob: -14.884771347045898

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021555902436375618
    2. '_' → logprob: -4.5215559005737305
    3. '+' → logprob: -4.7715559005737305
    4. '2' → logprob: -6.3965559005737305
    5. ')+' → logprob: -9.64655590057373
    6. '```' → logprob: -9.64655590057373
    7. '
' → logprob: -9.77155590057373
    8. ' ' → logprob: -10.77155590057373
    9. '_)' → logprob: -11.27155590057373
    10. ')' → logprob: -11.27155590057373

Token 428: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2522827982902527
    2. '):
' → logprob: -1.5022828578948975
    3. ':' → logprob: -8.377283096313477
    4. '):
' → logprob: -10.127283096313477
    5. '+' → logprob: -11.002283096313477
    6. ')' → logprob: -11.252283096313477
    7. '           ' → logprob: -11.377283096313477
    8. '               ' → logprob: -11.377283096313477
    9. ',' → logprob: -11.502283096313477
    10. '       ' → logprob: -12.002283096313477

Token 429: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002748646307736635
    2. ' for' → logprob: -6.877748489379883
    3. '                   ' → logprob: -7.252748489379883
    4. ',' → logprob: -8.127748489379883
    5. '                       ' → logprob: -8.752748489379883
    6. '           ' → logprob: -9.127748489379883
    7. '                               ' → logprob: -9.252748489379883
    8. ':' → logprob: -9.377748489379883
    9. ' if' → logprob: -9.627748489379883
    10. 'for' → logprob: -10.252748489379883

Token 430: ' DP' (ID: 51992)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5695449113845825
    2. ' DP' → logprob: -2.069544792175293
    3. ' if' → logprob: -2.194544792175293
    4. 'DP' (adapté à ' DP') → logprob: -2.319544792175293
    5. '                       ' → logprob: -3.319544792175293
    6. ' for' → logprob: -3.319544792175293
    7. '               ' → logprob: -5.069544792175293
    8. 'if' → logprob: -5.319544792175293
    9. 'for' → logprob: -5.944544792175293
    10. '                           ' → logprob: -6.069544792175293

Token 431: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.07913598418235779
    2. '[h' → logprob: -2.5791358947753906
    3. '[' → logprob: -8.57913589477539
    4. '[w' → logprob: -11.70413589477539
    5. '[now' → logprob: -11.95413589477539
    6. '][' → logprob: -12.20413589477539
    7. 'h' → logprob: -12.51663589477539
    8. 'next' → logprob: -12.51663589477539
    9. '[n' → logprob: -13.26663589477539
    10. '[new' → logprob: -13.26663589477539

Token 432: '_h' (ID: 3434)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.31289035081863403
    2. '_h' → logprob: -1.5628902912139893
    3. '[h' → logprob: -2.9378902912139893
    4. 'h' → logprob: -5.562890529632568
    5. '][_' → logprob: -7.562890529632568
    6. ']' → logprob: -8.06289005279541
    7. '[' → logprob: -8.06289005279541
    8. ' ][' → logprob: -8.18789005279541
    9. '_' → logprob: -8.43789005279541
    10. '[w' → logprob: -9.06289005279541

Token 433: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1277928203344345
    2. '[w' → logprob: -2.1277928352355957
    3. '[' → logprob: -8.127792358398438
    4. ']' → logprob: -9.252792358398438
    5. 'w' → logprob: -9.252792358398438
    6. '}[' → logprob: -9.502792358398438
    7. '[next' → logprob: -9.627792358398438
    8. ' ][' → logprob: -9.752792358398438
    9. ')[' → logprob: -10.502792358398438
    10. ' [' → logprob: -10.752792358398438

Token 434: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -7.107425062713446e-06
    2. ' w' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.750006675720215
    4. '0' → logprob: -14.375006675720215
    5. '
' → logprob: -16.37500762939453
    6. 'W' → logprob: -16.62500762939453
    7. '[w' → logprob: -16.62500762939453
    8. '	w' → logprob: -16.75000762939453
    9. '       ' → logprob: -17.37500762939453
    10. ' ' → logprob: -17.87500762939453

Token 435: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010568885772954673
    2. ']' → logprob: -9.500105857849121
    3. ' ][' → logprob: -11.125105857849121
    4. '[n' → logprob: -11.875105857849121
    5. '   ' → logprob: -12.500105857849121
    6. ' ' → logprob: -14.500105857849121
    7. '[' → logprob: -14.500105857849121
    8. '
' → logprob: -14.875105857849121
    9. ']
' → logprob: -14.875105857849121
    10. '[next' → logprob: -15.250105857849121

Token 436: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30730825662612915
    2. '0' → logprob: -1.5573081970214844
    3. 'nx' → logprob: -2.9323081970214844
    4. '(nx' → logprob: -8.307308197021484
    5. '
' → logprob: -9.432308197021484
    6. '   ' → logprob: -9.682308197021484
    7. ' ' → logprob: -10.057308197021484
    8. 'n' → logprob: -10.182308197021484
    9. '(' → logprob: -10.432308197021484
    10. ' nx' → logprob: -10.932308197021484

Token 437: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036691983696073294
    2. ']+=' → logprob: -5.628669261932373
    3. ']=(' → logprob: -9.628668785095215
    4. ']=' → logprob: -13.503668785095215
    5. ' ]' → logprob: -13.628668785095215
    6. '   ' → logprob: -15.378668785095215
    7. '[' → logprob: -15.628668785095215
    8. ']+' → logprob: -15.878668785095215
    9. ']
' → logprob: -17.25366973876953
    10. '
' → logprob: -17.37866973876953

Token 438: ' =' (ID: 314)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.5934664607048035
    2. '+=' → logprob: -1.2184665203094482
    3. ']' → logprob: -2.4684665203094482
    4. '=' → logprob: -3.2184665203094482
    5. '=(' → logprob: -3.8434665203094482
    6. ']=(' → logprob: -5.843466281890869
    7. '[' → logprob: -6.968466281890869
    8. ']=' → logprob: -6.968466281890869
    9. '+=(' → logprob: -8.093466758728027
    10. ' =' → logprob: -8.593466758728027

Token 439: ' (' (ID: 350)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0175540242344141
    2. '(' → logprob: -4.142553806304932
    3. ' (' → logprob: -7.017553806304932
    4. '   ' → logprob: -8.01755428314209
    5. '(DE' → logprob: -9.01755428314209
    6. '(OP' → logprob: -10.64255428314209
    7. '
' → logprob: -10.89255428314209
    8. '(P' → logprob: -11.26755428314209
    9. '(DIS' → logprob: -11.26755428314209
    10. '(max' → logprob: -11.39255428314209

Token 440: 'DP' (ID: 16851)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.014191831462085247
    2. 'DP' → logprob: -4.264191627502441
    3. ' (' → logprob: -11.139191627502441
    4. ' DP' → logprob: -12.514191627502441
    5. '(' → logprob: -12.639191627502441
    6. '
' → logprob: -13.014191627502441
    7. '(
' → logprob: -14.139191627502441
    8. 'D' → logprob: -14.264191627502441
    9. '   ' → logprob: -14.389191627502441
    10. '_DP' → logprob: -14.639191627502441

Token 441: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.0010744920000433922
    2. '[h' → logprob: -6.876074314117432
    3. 'next' → logprob: -10.25107479095459
    4. '[w' → logprob: -13.50107479095459
    5. '[n' → logprob: -13.50107479095459
    6. ' next' → logprob: -14.25107479095459
    7. 'h' → logprob: -14.50107479095459
    8. '[now' → logprob: -14.62607479095459
    9. '(next' → logprob: -14.87607479095459
    10. '   ' → logprob: -15.25107479095459

Token 442: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.005829253233969212
    2. 'h' → logprob: -6.130829334259033
    3. '[next' → logprob: -6.130829334259033
    4. 'next' → logprob: -6.630829334259033
    5. 'H' → logprob: -9.505828857421875
    6. '(next' → logprob: -10.380828857421875
    7. '_w' → logprob: -11.130828857421875
    8. 'w' → logprob: -12.505828857421875
    9. '_' → logprob: -12.755828857421875
    10. '][' → logprob: -12.880828857421875

Token 443: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010366239439463243
    2. '[w' → logprob: -9.750103950500488
    3. ' ][' → logprob: -10.375103950500488
    4. ']' → logprob: -12.375103950500488
    5. '[' → logprob: -12.750103950500488
    6. ')[' → logprob: -13.250103950500488
    7. '   ' → logprob: -13.750103950500488
    8. 'w' → logprob: -14.375103950500488
    9. ']][' → logprob: -14.375103950500488
    10. ' ' → logprob: -14.625103950500488

Token 444: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.869017852295656e-06
    2. ' w' → logprob: -12.000006675720215
    3. '][' → logprob: -14.750006675720215
    4. '[w' → logprob: -15.875006675720215
    5. '0' → logprob: -16.62500762939453
    6. '	w' → logprob: -17.87500762939453
    7. 'W' → logprob: -18.75000762939453
    8. '   ' → logprob: -18.75000762939453
    9. '
' → logprob: -19.37500762939453
    10. '```' → logprob: -19.50000762939453

Token 445: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.029458854347467422
    2. '[' → logprob: -3.65445876121521
    3. '[n' → logprob: -5.904458999633789
    4. ' ][' → logprob: -8.779458999633789
    5. '0' → logprob: -9.904458999633789
    6. '   ' → logprob: -10.029458999633789
    7. ')[' → logprob: -10.029458999633789
    8. '[next' → logprob: -10.654458999633789
    9. '+' → logprob: -10.779458999633789
    10. '
' → logprob: -11.279458999633789

Token 446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.700132997939363e-05
    2. '[' → logprob: -11.500017166137695
    3. '(' → logprob: -13.000017166137695
    4. 'nx' → logprob: -13.000017166137695
    5. '
' → logprob: -13.750017166137695
    6. '(nx' → logprob: -14.750017166137695
    7. '1' → logprob: -14.875017166137695
    8. ' ' → logprob: -16.250017166137695
    9. '[n' → logprob: -16.687517166137695
    10. '   ' → logprob: -16.937517166137695

Token 447: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47407862544059753
    2. ' +' → logprob: -0.9740786552429199
    3. '+
' → logprob: -14.599078178405762
    4. '+D' → logprob: -15.224078178405762
    5. ']' → logprob: -15.349078178405762
    6. ']+' → logprob: -15.724078178405762
    7. '
' → logprob: -16.349079132080078
    8. ' +
' → logprob: -16.474079132080078
    9. '+(' → logprob: -16.599079132080078
    10. '+d' → logprob: -16.974079132080078

Token 448: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00861669983714819
    2. ' +' → logprob: -4.758616924285889
    3. '+D' → logprob: -13.75861644744873
    4. '+
' → logprob: -14.63361644744873
    5. '+(' → logprob: -14.75861644744873
    6. '
' → logprob: -16.383617401123047
    7. '+d' → logprob: -17.508617401123047
    8. '+B' → logprob: -18.008617401123047
    9. '+p' → logprob: -18.133617401123047
    10. '+=' → logprob: -18.508617401123047

Token 449: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.001513312105089426
    2. ' DP' → logprob: -6.501513481140137
    3. '   ' → logprob: -12.126513481140137
    4. '           ' → logprob: -13.876513481140137
    5. '                   ' → logprob: -14.001513481140137
    6. '               ' → logprob: -14.001513481140137
    7. '_DP' → logprob: -14.376513481140137
    8. '(' → logprob: -15.001513481140137
    9. ' ' → logprob: -15.001513481140137
    10. '       ' → logprob: -15.126513481140137

Token 450: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.0006271334132179618
    2. 'h' → logprob: -7.375627040863037
    3. '[' → logprob: -16.000627517700195
    4. '
' → logprob: -16.125627517700195
    5. '```' → logprob: -16.750627517700195
    6. '(h' → logprob: -16.750627517700195
    7. '	h' → logprob: -17.000627517700195
    8. ' h' → logprob: -17.000627517700195
    9. ' [' → logprob: -17.250627517700195
    10. '[
' → logprob: -17.375627517700195

Token 451: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010650822659954429
    2. '[w' → logprob: -6.876065254211426
    3. ' ][' → logprob: -10.876065254211426
    4. 'w' → logprob: -12.126065254211426
    5. '[' → logprob: -12.751065254211426
    6. ']' → logprob: -14.126065254211426
    7. ')[' → logprob: -14.376065254211426
    8. '"][' → logprob: -14.626065254211426
    9. ''][' → logprob: -14.751065254211426
    10. '}[' → logprob: -15.126065254211426

Token 452: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.392202976712724e-06
    2. ' w' → logprob: -12.000006675720215
    3. '[w' → logprob: -16.1250057220459
    4. 'W' → logprob: -16.7500057220459
    5. '
' → logprob: -17.5000057220459
    6. '][' → logprob: -17.6250057220459
    7. '   ' → logprob: -18.3750057220459
    8. ',w' → logprob: -18.5000057220459
    9. '<w' → logprob: -19.0000057220459
    10. ' ' → logprob: -19.2500057220459

Token 453: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012649968266487122
    2. '[n' → logprob: -4.387650012969971
    3. ' ][' → logprob: -9.387649536132812
    4. '   ' → logprob: -11.137649536132812
    5. '[' → logprob: -11.387649536132812
    6. ']' → logprob: -12.012649536132812
    7. '
' → logprob: -12.137649536132812
    8. ' ' → logprob: -12.637649536132812
    9. '	' → logprob: -12.887649536132812
    10. '(nx' → logprob: -13.262649536132812

Token 454: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5822786688804626
    2. 'nx' → logprob: -0.8322786688804626
    3. '1' → logprob: -5.082278728485107
    4. ' nx' → logprob: -10.58227825164795
    5. '(nx' → logprob: -10.58227825164795
    6. 'n' → logprob: -11.45727825164795
    7. '
' → logprob: -11.95727825164795
    8. 'ny' → logprob: -12.20727825164795
    9. '[' → logprob: -12.70727825164795
    10. ' ' → logprob: -12.83227825164795

Token 455: ']*' (ID: 18579)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0060784644447267056
    2. ']' → logprob: -5.256078243255615
    3. ']%' → logprob: -7.756078243255615
    4. ']*' → logprob: -8.381078720092773
    5. '*' → logprob: -9.006078720092773
    6. '   ' → logprob: -10.881078720092773
    7. ' ])' → logprob: -11.256078720092773
    8. ')' → logprob: -11.381078720092773
    9. ' *' → logprob: -11.881078720092773
    10. '       ' → logprob: -12.506078720092773

Token 456: 'FACT' (ID: 105795)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.0022226988803595304
    2. '(' → logprob: -6.752222537994385
    3. 'pow' → logprob: -7.502222537994385
    4. ' Com' → logprob: -8.627223014831543
    5. 'prod' → logprob: -9.502223014831543
    6. 'com' → logprob: -10.252223014831543
    7. 'COM' → logprob: -10.377223014831543
    8. 'rect' → logprob: -10.502223014831543
    9. 'Comb' → logprob: -10.877223014831543
    10. 'RA' → logprob: -11.002223014831543

Token 457: '_INV' (ID: 116669)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.00017910730093717575
    2. '[' → logprob: -9.750179290771484
    3. '[h' → logprob: -9.750179290771484
    4. '[n' → logprob: -11.125179290771484
    5. 'next' → logprob: -11.125179290771484
    6. '(next' → logprob: -12.125179290771484
    7. '   ' → logprob: -12.375179290771484
    8. '[M' → logprob: -12.625179290771484
    9. 'H' → logprob: -13.000179290771484
    10. '[w' → logprob: -13.125179290771484

Token 458: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -6.64708495605737e-05
    2. '[' → logprob: -10.125066757202148
    3. 'next' → logprob: -11.375066757202148
    4. '[h' → logprob: -12.250066757202148
    5. '[(' → logprob: -12.750066757202148
    6. '(next' → logprob: -13.125066757202148
    7. '   ' → logprob: -14.000066757202148
    8. ' [' → logprob: -14.125066757202148
    9. '[n' → logprob: -14.375066757202148
    10. 'H' → logprob: -14.625066757202148

Token 459: '_h' (ID: 3434)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.09992365539073944
    2. '_h' → logprob: -2.474923610687256
    3. '[' → logprob: -5.224923610687256
    4. '[h' → logprob: -5.974923610687256
    5. 'next' → logprob: -6.724923610687256
    6. '(next' → logprob: -7.349923610687256
    7. 'h' → logprob: -8.349924087524414
    8. '[(' → logprob: -8.849924087524414
    9. '_[' → logprob: -8.974924087524414
    10. '[_' → logprob: -9.849924087524414

Token 460: '-h' (ID: 4559)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.029826046898961067
    2. '[h' → logprob: -3.6548261642456055
    3. '[-' → logprob: -6.5298261642456055
    4. '-h' → logprob: -6.7798261642456055
    5. '[' → logprob: -8.154826164245605
    6. ' -' → logprob: -8.404826164245605
    7. '-next' → logprob: -9.529826164245605
    8. 'h' → logprob: -10.154826164245605
    9. '   ' → logprob: -10.404826164245605
    10. 'next' → logprob: -10.404826164245605

Token 461: ']%' (ID: 158002)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.14247047901153564
    2. '[' → logprob: -2.142470359802246
    3. '])' → logprob: -5.392470359802246
    4. ']' → logprob: -5.767470359802246
    5. '1' → logprob: -6.267470359802246
    6. '[n' → logprob: -6.642470359802246
    7. '[-' → logprob: -7.142470359802246
    8. 'next' → logprob: -7.517470359802246
    9. '][' → logprob: -7.767470359802246
    10. '-' → logprob: -7.892470359802246

Token 462: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.707997428951785e-05
    2. '(mod' → logprob: -10.750077247619629
    3. ' mod' → logprob: -11.125077247619629
    4. 'fact' → logprob: -11.500077247619629
    5. '20' → logprob: -11.750077247619629
    6. '(' → logprob: -12.125077247619629
    7. '           ' → logprob: -13.375077247619629
    8. '998' → logprob: -13.375077247619629
    9. 'MOD' → logprob: -13.375077247619629
    10. '
' → logprob: -13.375077247619629

Token 463: ')' (ID: 8)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.033739518374204636
    2. ')' → logprob: -3.4087395668029785
    3. ' )' → logprob: -9.53373908996582
    4. '   ' → logprob: -12.28373908996582
    5. '%' → logprob: -12.53373908996582
    6. '       ' → logprob: -12.78373908996582
    7. '           ' → logprob: -13.03373908996582
    8. ']%' → logprob: -13.28373908996582
    9. '*' → logprob: -13.78373908996582
    10. '                   ' → logprob: -14.28373908996582

Token 464: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5263752937316895
    2. ')%' → logprob: -0.9013752937316895
    3. '%' → logprob: -6.2763752937316895
    4. ' )' → logprob: -6.6513752937316895
    5. '           ' → logprob: -11.276374816894531
    6. '               ' → logprob: -11.401374816894531
    7. '%)' → logprob: -11.401374816894531
    8. ' %' → logprob: -12.151374816894531
    9. '%n' → logprob: -12.151374816894531
    10. '                   ' → logprob: -12.401374816894531

Token 465: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.128163257315464e-07
    2. ' mod' → logprob: -15.5
    3. '```' → logprob: -19.125
    4. '(mod' → logprob: -19.75
    5. '
' → logprob: -20.125
    6. 'm' → logprob: -20.625
    7. '	mod' → logprob: -20.875
    8. 'moder' → logprob: -21.5
    9. '998' → logprob: -22.0
    10. 'modal' → logprob: -22.25

Token 466: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04650908708572388
    2. 'else' (adapté à ' else') → logprob: -3.171509027481079
    3. ' else' → logprob: -5.796509265899658
    4. '	' → logprob: -8.4215087890625
    5. 'elif' → logprob: -9.6715087890625
    6. '	else' → logprob: -9.7965087890625
    7. ')' → logprob: -10.0465087890625
    8. '   ' → logprob: -10.4215087890625
    9. ']' → logprob: -11.1715087890625
    10. '	   ' → logprob: -11.5465087890625

Token 469: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010877910070121288
    2. 'for' → logprob: -4.635878086090088
    3. ' for' → logprob: -6.885878086090088
    4. '       ' → logprob: -9.76087760925293
    5. '   ' → logprob: -10.63587760925293
    6. 'if' → logprob: -12.01087760925293
    7. '               ' → logprob: -12.01087760925293
    8. '		' → logprob: -13.63587760925293
    9. '         ' → logprob: -13.88587760925293
    10. '          ' → logprob: -14.38587760925293

Token 470: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11116667836904526
    2. '           ' → logprob: -2.3611667156219482
    3. '       ' → logprob: -4.861166477203369
    4. ' for' → logprob: -6.111166477203369
    5. '   ' → logprob: -7.111166477203369
    6. 'if' → logprob: -9.236166954040527
    7. '               ' → logprob: -11.111166954040527
    8. '	for' → logprob: -12.236166954040527
    9. '                   ' → logprob: -12.736166954040527
    10. '        ' → logprob: -13.486166954040527

Token 471: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001257376279681921
    2. ' for' → logprob: -6.751257419586182
    3. 'if' → logprob: -9.626256942749023
    4. '           ' → logprob: -11.251256942749023
    5. '       ' → logprob: -12.001256942749023
    6. '   ' → logprob: -13.251256942749023
    7. '```' → logprob: -15.626256942749023
    8. ' if' → logprob: -16.001256942749023
    9. '	for' → logprob: -16.751256942749023
    10. '               ' → logprob: -17.126256942749023

Token 472: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.002021782100200653
    2. ' next' → logprob: -6.252021789550781
    3. 'nw' → logprob: -10.002021789550781
    4. 'nh' → logprob: -11.502021789550781
    5. '_,' → logprob: -11.502021789550781
    6. 'nx' → logprob: -11.502021789550781
    7. 'w' → logprob: -12.002021789550781
    8. ',next' → logprob: -13.127021789550781
    9. '   ' → logprob: -13.377021789550781
    10. '(next' → logprob: -13.502021789550781

Token 473: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.04957514628767967
    2. '_h' → logprob: -3.049575090408325
    3. 'w' → logprob: -7.049575328826904
    4. '_' → logprob: -10.174574851989746
    5. 'h' → logprob: -10.549574851989746
    6. '_n' → logprob: -11.549574851989746
    7. ' in' → logprob: -11.549574851989746
    8. 'W' → logprob: -11.799574851989746
    9. '=' → logprob: -12.049574851989746
    10. 'H' → logprob: -13.174574851989746

Token 474: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804229199886322
    2. 'in' → logprob: -3.2880423069000244
    3. 'In' → logprob: -15.413042068481445
    4. 'w' → logprob: -15.413042068481445
    5. 'n' → logprob: -15.913042068481445
    6. ' ' → logprob: -16.038042068481445
    7. '	in' → logprob: -16.913042068481445
    8. '
' → logprob: -17.288042068481445
    9. 'd' → logprob: -17.538042068481445
    10. 'int' → logprob: -18.163042068481445

Token 475: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014166101813316345
    2. ' range' → logprob: -4.264165878295898
    3. '(range' → logprob: -12.889165878295898
    4. 'w' → logprob: -16.0141658782959
    5. '(w' → logprob: -18.7641658782959
    6. '   ' → logprob: -18.8891658782959
    7. '	range' → logprob: -19.3891658782959
    8. ' w' → logprob: -20.8891658782959
    9. ' ' → logprob: -21.1391658782959
    10. '
' → logprob: -21.8891658782959

Token 476: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.009778402745723724
    2. 'w' → logprob: -4.6347784996032715
    3. ' (' → logprob: -11.384778022766113
    4. ' w' → logprob: -12.134778022766113
    5. 'W' → logprob: -13.259778022766113
    6. '   ' → logprob: -13.634778022766113
    7. '(' → logprob: -13.634778022766113
    8. '(W' → logprob: -14.134778022766113
    9. '<w' → logprob: -15.384778022766113
    10. '	w' → logprob: -15.884778022766113

Token 477: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00024299313372466713
    2. ' +' → logprob: -8.500243186950684
    3. '+w' → logprob: -10.375243186950684
    4. '1' → logprob: -12.250243186950684
    5. 'w' → logprob: -13.375243186950684
    6. '           ' → logprob: -14.250243186950684
    7. '       ' → logprob: -15.125243186950684
    8. '[next' → logprob: -15.375243186950684
    9. '+
' → logprob: -15.500243186950684
    10. 'next' → logprob: -15.500243186950684

Token 478: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004223323194310069
    2. 'w' → logprob: -7.875422477722168
    3. 'W' → logprob: -10.875422477722168
    4. '+' → logprob: -11.750422477722168
    5. '   ' → logprob: -12.125422477722168
    6. ' ' → logprob: -12.750422477722168
    7. '
' → logprob: -13.375422477722168
    8. '(w' → logprob: -13.750422477722168
    9. '       ' → logprob: -13.750422477722168
    10. 'next' → logprob: -13.875422477722168

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1968870460987091
    2. ',w' → logprob: -1.9468870162963867
    3. '+' → logprob: -4.071887016296387
    4. 'w' → logprob: -4.196887016296387
    5. '           ' → logprob: -6.321887016296387
    6. ' +' → logprob: -7.446887016296387
    7. '       ' → logprob: -7.821887016296387
    8. '1' → logprob: -8.071887016296387
    9. '+w' → logprob: -8.071887016296387
    10. ',W' → logprob: -8.821887016296387

Token 480: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.000639169302303344
    2. ' W' → logprob: -7.375638961791992
    3. '   ' → logprob: -11.750638961791992
    4. 'w' → logprob: -13.000638961791992
    5. '       ' → logprob: -13.875638961791992
    6. '(W' → logprob: -15.125638961791992
    7. ' ' → logprob: -15.375638961791992
    8. '           ' → logprob: -15.375638961791992
    9. '	W' → logprob: -15.500638961791992
    10. '    ' → logprob: -15.750638961791992

Token 481: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0500570572912693
    2. '+' → logprob: -3.0500571727752686
    3. '_w' → logprob: -6.8000569343566895
    4. '_[' → logprob: -8.550057411193848
    5. 'w' → logprob: -10.425057411193848
    6. ')+' → logprob: -10.550057411193848
    7. '+w' → logprob: -10.550057411193848
    8. '_W' → logprob: -10.675057411193848
    9. ' +' → logprob: -11.050057411193848
    10. '[next' → logprob: -11.175057411193848

Token 482: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008515591034665704
    2. 'w' → logprob: -7.875851631164551
    3. '_' → logprob: -8.25085163116455
    4. '+w' → logprob: -9.25085163116455
    5. '1' → logprob: -9.75085163116455
    6. '_w' → logprob: -10.75085163116455
    7. 'W' → logprob: -11.37585163116455
    8. ' +' → logprob: -11.75085163116455
    9. '[w' → logprob: -12.50085163116455
    10. '[' → logprob: -12.50085163116455

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0745241567492485
    2. '+' → logprob: -2.699524164199829
    3. 'W' → logprob: -5.44952392578125
    4. 'w' → logprob: -8.57452392578125
    5. ' ' → logprob: -10.69952392578125
    6. '_' → logprob: -11.07452392578125
    7. '(W' → logprob: -11.19952392578125
    8. ' W' → logprob: -11.44952392578125
    9. ')+' → logprob: -12.32452392578125
    10. ')' → logprob: -12.32452392578125

Token 484: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011731755919754505
    2. '):' → logprob: -4.6367316246032715
    3. '               ' → logprob: -6.7617316246032715
    4. '           ' → logprob: -8.26173210144043
    5. ':
' → logprob: -8.26173210144043
    6. ')' → logprob: -9.51173210144043
    7. ':' → logprob: -9.51173210144043
    8. ']:
' → logprob: -10.51173210144043
    9. '       ' → logprob: -10.76173210144043
    10. '):
' → logprob: -10.88673210144043

Token 485: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001454955490771681
    2. '           ' → logprob: -9.50014591217041
    3. '```' → logprob: -10.12514591217041
    4. '              ' → logprob: -11.25014591217041
    5. '             ' → logprob: -11.87514591217041
    6. '                   ' → logprob: -11.87514591217041
    7. '                ' → logprob: -13.75014591217041
    8. '            ' → logprob: -14.12514591217041
    9. '       ' → logprob: -14.87514591217041
    10. '   ' → logprob: -15.12514591217041

Token 486: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -3.4881879400927573e-05
    2. '               ' → logprob: -11.000035285949707
    3. ' DP' → logprob: -11.125035285949707
    4. '           ' → logprob: -13.000035285949707
    5. '```' → logprob: -14.375035285949707
    6. '                   ' → logprob: -15.750035285949707
    7. '_DP' → logprob: -15.750035285949707
    8. '   ' → logprob: -16.12503433227539
    9. '       ' → logprob: -17.62503433227539
    10. '``' → logprob: -18.12503433227539

Token 487: '[h' (ID: 88900)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.0701427236199379
    2. '[h' → logprob: -2.6951427459716797
    3. '[n' → logprob: -9.07014274597168
    4. 'h' → logprob: -10.69514274597168
    5. '[now' → logprob: -11.07014274597168
    6. 'next' → logprob: -11.19514274597168
    7. '[' → logprob: -12.32014274597168
    8. '[w' → logprob: -12.32014274597168
    9. '(next' → logprob: -12.57014274597168
    10. ' [' → logprob: -13.07014274597168

Token 488: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0021775043569505215
    2. '[next' → logprob: -6.252177715301514
    3. '+' → logprob: -8.877177238464355
    4. ' ][' → logprob: -9.752177238464355
    5. ']' → logprob: -11.002177238464355
    6. '           ' → logprob: -11.002177238464355
    7. '       ' → logprob: -12.252177238464355
    8. '   ' → logprob: -13.002177238464355
    9. ' +' → logprob: -13.252177238464355
    10. '               ' → logprob: -13.502177238464355

Token 489: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -4.966313281329349e-05
    2. '[next' → logprob: -10.500049591064453
    3. ' next' → logprob: -10.750049591064453
    4. '(next' → logprob: -14.250049591064453
    5. '	next' → logprob: -16.625049591064453
    6. ',next' → logprob: -18.375049591064453
    7. '   ' → logprob: -19.125049591064453
    8. '.next' → logprob: -19.375049591064453
    9. '
' → logprob: -19.750049591064453
    10. '_next' → logprob: -20.000049591064453

Token 490: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -3.225939872208983e-05
    2. 'w' → logprob: -10.375032424926758
    3. '_' → logprob: -14.875032424926758
    4. '+' → logprob: -15.875032424926758
    5. ']' → logprob: -16.125032424926758
    6. '_h' → logprob: -16.500032424926758
    7. '```' → logprob: -16.500032424926758
    8. '+w' → logprob: -16.750032424926758
    9. '[' → logprob: -17.250032424926758
    10. '[w' → logprob: -18.375032424926758

Token 491: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012577339075505733
    2. '[' → logprob: -6.87625789642334
    3. '[n' → logprob: -9.00125789642334
    4. ']' → logprob: -9.62625789642334
    5. '[next' → logprob: -11.25125789642334
    6. ' ][' → logprob: -11.50125789642334
    7. '1' → logprob: -12.75125789642334
    8. ''][' → logprob: -13.75125789642334
    9. '           ' → logprob: -13.87625789642334
    10. '0' → logprob: -14.37625789642334

Token 492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008253206498920918
    2. '0' → logprob: -4.88325309753418
    3. 'nx' → logprob: -7.38325309753418
    4. 'n' → logprob: -11.75825309753418
    5. ' ' → logprob: -12.38325309753418
    6. '   ' → logprob: -12.75825309753418
    7. '(nx' → logprob: -12.88325309753418
    8. '
' → logprob: -13.63325309753418
    9. '```' → logprob: -13.63325309753418
    10. ' nx' → logprob: -13.63325309753418

Token 493: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005144290626049042
    2. ']=' → logprob: -7.750514507293701
    3. ']=(' → logprob: -9.625514030456543
    4. '=' → logprob: -12.250514030456543
    5. ' ]' → logprob: -12.625514030456543
    6. '[' → logprob: -12.750514030456543
    7. ']+=' → logprob: -13.125514030456543
    8. ')' → logprob: -13.250514030456543
    9. '][' → logprob: -14.000514030456543
    10. '   ' → logprob: -14.500514030456543

Token 494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006752905435860157
    2. ' =' → logprob: -5.006752967834473
    3. '+=' → logprob: -10.881752967834473
    4. '=(' → logprob: -11.756752967834473
    5. ']' → logprob: -11.881752967834473
    6. ']=' → logprob: -12.756752967834473
    7. '   ' → logprob: -15.006752967834473
    8. '           ' → logprob: -15.131752967834473
    9. ' +=' → logprob: -15.506752967834473
    10. ']+=' → logprob: -15.756752967834473

Token 495: ' (' (ID: 350)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.10021474957466125
    2. ' (' → logprob: -2.350214719772339
    3. '(' → logprob: -11.975214958190918
    4. '(P' → logprob: -14.350214958190918
    5. '   ' → logprob: -15.350214958190918
    6. '(dp' → logprob: -15.350214958190918
    7. '
' → logprob: -15.600214958190918
    8. ' ' → logprob: -16.1002140045166
    9. ' ' → logprob: -16.8502140045166
    10. '           ' → logprob: -17.1002140045166

Token 496: 'DP' (ID: 16851)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.6932361721992493
    2. 'DP' → logprob: -0.6932361721992493
    3. ' DP' → logprob: -9.693236351013184
    4. '
' → logprob: -11.443236351013184
    5. '_DP' → logprob: -12.193236351013184
    6. ' (' → logprob: -12.818236351013184
    7. '   ' → logprob: -13.068236351013184
    8. 'D' → logprob: -13.818236351013184
    9. '  ' → logprob: -14.568236351013184
    10. 'Dp' → logprob: -14.568236351013184

Token 497: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.0002319071936653927
    2. 'h' → logprob: -8.375231742858887
    3. '[next' → logprob: -14.625231742858887
    4. '```' → logprob: -15.625231742858887
    5. ' h' → logprob: -15.750231742858887
    6. '[' → logprob: -16.000232696533203
    7. '	h' → logprob: -16.250232696533203
    8. '<h' → logprob: -16.375232696533203
    9. '   ' → logprob: -17.625232696533203
    10. '
' → logprob: -18.000232696533203

Token 498: '][' (ID: 2696)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.10050221532583237
    2. '][' → logprob: -2.3505022525787354
    3. '[next' → logprob: -9.475502014160156
    4. ')[' → logprob: -9.600502014160156
    5. 'h' → logprob: -9.725502014160156
    6. '+' → logprob: -10.600502014160156
    7. ' ][' → logprob: -10.850502014160156
    8. '[' → logprob: -11.100502014160156
    9. '   ' → logprob: -11.725502014160156
    10. '+h' → logprob: -11.850502014160156

Token 499: 'next' (ID: 7311)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.104679822921753
    2. 'w' → logprob: -1.104679822921753
    3. 'next' → logprob: -1.229679822921753
    4. '[next' → logprob: -3.229679822921753
    5. '[h' → logprob: -5.479680061340332
    6. ' next' → logprob: -7.354680061340332
    7. '[w' → logprob: -7.729680061340332
    8. '(next' → logprob: -10.104680061340332
    9. '   ' → logprob: -10.729680061340332
    10. ' w' → logprob: -10.729680061340332

Token 500: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.002712033921852708
    2. '+' → logprob: -6.252712249755859
    3. 'w' → logprob: -7.377712249755859
    4. '_h' → logprob: -9.12771224975586
    5. '+w' → logprob: -11.00271224975586
    6. ']' → logprob: -11.12771224975586
    7. ']+' → logprob: -12.37771224975586
    8. '][' → logprob: -12.75271224975586
    9. 'W' → logprob: -13.00271224975586
    10. '_' → logprob: -13.50271224975586

Token 501: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009002620354294777
    2. '[h' → logprob: -7.1259002685546875
    3. '[w' → logprob: -10.000900268554688
    4. ' ][' → logprob: -11.375900268554688
    5. ']' → logprob: -11.500900268554688
    6. '```' → logprob: -12.125900268554688
    7. '[' → logprob: -12.250900268554688
    8. 'h' → logprob: -12.625900268554688
    9. 'w' → logprob: -12.625900268554688
    10. '[n' → logprob: -12.750900268554688

Token 502: '1' (ID: 16)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5261162519454956
    2. '0' → logprob: -1.5261162519454956
    3. '1' → logprob: -1.9011162519454956
    4. 'w' → logprob: -3.526116371154785
    5. '[h' → logprob: -4.651116371154785
    6. 'nx' → logprob: -6.401116371154785
    7. '[' → logprob: -7.901116371154785
    8. 'n' → logprob: -8.026116371154785
    9. '[w' → logprob: -8.276116371154785
    10. 'next' → logprob: -8.651116371154785

Token 503: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16029612720012665
    2. '+' → logprob: -1.910296082496643
    3. ']' → logprob: -9.785296440124512
    4. ']+' → logprob: -11.160296440124512
    5. ' ' → logprob: -14.910296440124512
    6. '```' → logprob: -15.160296440124512
    7. '[' → logprob: -15.410296440124512
    8. ' +
' → logprob: -15.785296440124512
    9. '+
' → logprob: -15.910296440124512
    10. '
' → logprob: -16.785295486450195

Token 504: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759396553039551
    2. '+' → logprob: -0.8259396553039551
    3. '+D' → logprob: -17.200939178466797
    4. ' ' → logprob: -17.325939178466797
    5. '+
' → logprob: -17.450939178466797
    6. '+d' → logprob: -17.450939178466797
    7. ' +
' → logprob: -17.700939178466797
    8. ')' → logprob: -17.950939178466797
    9. '+[' → logprob: -18.200939178466797
    10. '
' → logprob: -18.200939178466797

Token 505: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.008614808320999146
    2. ' DP' → logprob: -4.758615016937256
    3. '_DP' → logprob: -15.758614540100098
    4. 'dp' → logprob: -16.758615493774414
    5. '   ' → logprob: -17.383615493774414
    6. ' ' → logprob: -18.008615493774414
    7. '
' → logprob: -18.133615493774414
    8. ' ' → logprob: -18.508615493774414
    9. 'Dp' → logprob: -18.883615493774414
    10. '(D' → logprob: -19.008615493774414

Token 506: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.0004307884373702109
    2. 'h' → logprob: -7.750430583953857
    3. '	h' → logprob: -18.125431060791016
    4. ' h' → logprob: -18.375431060791016
    5. '```' → logprob: -19.000431060791016
    6. '[' → logprob: -19.875431060791016
    7. '[
' → logprob: -20.125431060791016
    8. '<h' → logprob: -20.625431060791016
    9. '(h' → logprob: -21.250431060791016
    10. '_h' → logprob: -21.375431060791016

Token 507: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01616223156452179
    2. '[next' → logprob: -4.141162395477295
    3. '[w' → logprob: -10.391161918640137
    4. ' ][' → logprob: -10.391161918640137
    5. '[' → logprob: -10.891161918640137
    6. '[now' → logprob: -11.266161918640137
    7. '   ' → logprob: -11.641161918640137
    8. '       ' → logprob: -12.266161918640137
    9. '[n' → logprob: -12.266161918640137
    10. ']' → logprob: -12.891161918640137

Token 508: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -5.438573680294212e-06
    2. ' w' → logprob: -12.625005722045898
    3. 'next' → logprob: -13.875005722045898
    4. '[w' → logprob: -13.875005722045898
    5. 'W' → logprob: -15.875005722045898
    6. '   ' → logprob: -17.5000057220459
    7. ',w' → logprob: -17.5000057220459
    8. '
' → logprob: -17.6250057220459
    9. '[next' → logprob: -18.0000057220459
    10. '	w' → logprob: -18.1250057220459

Token 509: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005069229518994689
    2. '[n' → logprob: -7.87550687789917
    3. '[' → logprob: -10.500507354736328
    4. ' ][' → logprob: -10.500507354736328
    5. '1' → logprob: -10.625507354736328
    6. '   ' → logprob: -11.375507354736328
    7. '0' → logprob: -11.375507354736328
    8. '	' → logprob: -12.375507354736328
    9. 'n' → logprob: -12.750507354736328
    10. '
' → logprob: -13.125507354736328

Token 510: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002327244495972991
    2. 'nx' → logprob: -6.1273274421691895
    3. 'n' → logprob: -9.877326965332031
    4. '1' → logprob: -10.502326965332031
    5. '
' → logprob: -11.252326965332031
    6. '(nx' → logprob: -11.252326965332031
    7. '[n' → logprob: -11.627326965332031
    8. 'next' → logprob: -12.252326965332031
    9. '   ' → logprob: -12.377326965332031
    10. ' ' → logprob: -12.814826965332031

Token 511: ']*' (ID: 18579)
  Prédit: ']%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']%' → logprob: -0.041753046214580536
    2. ']*' → logprob: -3.541753053665161
    3. '*' → logprob: -5.041752815246582
    4. '][' → logprob: -5.666752815246582
    5. ']' → logprob: -6.416752815246582
    6. '])' → logprob: -9.041752815246582
    7. ' *' → logprob: -9.541752815246582
    8. ' ]' → logprob: -9.666752815246582
    9. '[' → logprob: -10.291752815246582
    10. '   ' → logprob: -10.416752815246582

Token 512: 'FACT' (ID: 105795)
  Prédit: 'FACT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -0.0005395700572989881
    2. 'COM' → logprob: -8.375539779663086
    3. 'pow' → logprob: -8.875539779663086
    4. 'FA' → logprob: -9.750539779663086
    5. ' FACT' → logprob: -10.250539779663086
    6. '(' → logprob: -10.375539779663086
    7. 'fact' → logprob: -11.375539779663086
    8. 'FAC' → logprob: -11.375539779663086
    9. '   ' → logprob: -12.375539779663086
    10. 'com' → logprob: -12.625539779663086

Token 513: '_INV' (ID: 116669)
  Prédit: '_INV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INV' → logprob: -0.00046200878568924963
    2. '[next' → logprob: -8.12546157836914
    3. 'INV' → logprob: -8.75046157836914
    4. 'Inv' → logprob: -13.37546157836914
    5. '[' → logprob: -13.62546157836914
    6. 'W' → logprob: -14.00046157836914
    7. '_inv' → logprob: -14.00046157836914
    8. 'inv' → logprob: -14.75046157836914
    9. '\' → logprob: -15.00046157836914
    10. '_NEXT' → logprob: -15.12546157836914

Token 514: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -2.2200749754119897e-06
    2. '[(' → logprob: -14.000001907348633
    3. '[' → logprob: -14.125001907348633
    4. '(next' → logprob: -15.750001907348633
    5. ' [' → logprob: -16.375001907348633
    6. '[now' → logprob: -16.625001907348633
    7. '   ' → logprob: -17.125001907348633
    8. 'next' → logprob: -17.250001907348633
    9. '[last' → logprob: -17.250001907348633
    10. '1' → logprob: -18.500001907348633

Token 515: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.11047299206256866
    2. '[next' → logprob: -2.8604729175567627
    3. 'next' → logprob: -4.235473155975342
    4. '_h' → logprob: -4.360473155975342
    5. '+' → logprob: -4.735473155975342
    6. '_next' → logprob: -5.610473155975342
    7. 'w' → logprob: -6.110473155975342
    8. '-w' → logprob: -6.360473155975342
    9. '(next' → logprob: -6.610473155975342
    10. '-next' → logprob: -7.985473155975342

Token 516: '-w' (ID: 4450)
  Prédit: '-w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-w' → logprob: -0.010474064387381077
    2. '-' → logprob: -4.63547420501709
    3. ' -' → logprob: -7.76047420501709
    4. '-next' → logprob: -8.38547420501709
    5. '-n' → logprob: -10.63547420501709
    6. '-h' → logprob: -12.38547420501709
    7. '+' → logprob: -12.51047420501709
    8. '-prev' → logprob: -12.51047420501709
    9. '   ' → logprob: -12.63547420501709
    10. '[-' → logprob: -12.76047420501709

Token 517: ']%' (ID: 158002)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20188678801059723
    2. ']%' → logprob: -1.701886773109436
    3. ' %' → logprob: -7.8268866539001465
    4. ')%' → logprob: -10.076887130737305
    5. ']' → logprob: -10.951887130737305
    6. '```' → logprob: -12.576887130737305
    7. '   ' → logprob: -12.951887130737305
    8. '[' → logprob: -13.201887130737305
    9. '[%' → logprob: -13.451887130737305
    10. ''%' → logprob: -13.951887130737305

Token 518: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.935296834039036e-06
    2. ' mod' → logprob: -13.00000286102295
    3. '```' → logprob: -15.62500286102295
    4. '(mod' → logprob: -16.375003814697266
    5. '0' → logprob: -16.500003814697266
    6. '
' → logprob: -17.250003814697266
    7. '           ' → logprob: -17.375003814697266
    8. '	mod' → logprob: -17.625003814697266
    9. ')' → logprob: -17.875003814697266
    10. '   ' → logprob: -17.875003814697266

Token 519: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.85366350505501e-05
    2. ')%' → logprob: -9.50009822845459
    3. ' )' → logprob: -10.75009822845459
    4. '%' → logprob: -13.25009822845459
    5. '       ' → logprob: -16.625099182128906
    6. ']' → logprob: -16.625099182128906
    7. '%)' → logprob: -16.625099182128906
    8. '0' → logprob: -16.875099182128906
    9. '               ' → logprob: -17.125099182128906
    10. '           ' → logprob: -17.250099182128906

Token 520: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3175138533115387
    2. ' %' → logprob: -1.3175138235092163
    3. ')%' → logprob: -5.817513942718506
    4. ')' → logprob: -6.692513942718506
    5. '%)' → logprob: -12.442513465881348
    6. ' %=' → logprob: -12.442513465881348
    7. '       ' → logprob: -12.567513465881348
    8. '           ' → logprob: -12.817513465881348
    9. ']%' → logprob: -12.942513465881348
    10. ' ' → logprob: -13.317513465881348

Token 521: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.033657222986221313
    2. ' mod' → logprob: -3.4086573123931885
    3. '```' → logprob: -11.78365707397461
    4. '(mod' → logprob: -13.40865707397461
    5. '	mod' → logprob: -13.78365707397461
    6. ' modul' → logprob: -15.28365707397461
    7. '           ' → logprob: -15.90865707397461
    8. '_mod' → logprob: -16.03365707397461
    9. ' мод' → logprob: -16.03365707397461
    10. '``' → logprob: -16.65865707397461

Token 522: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0099814273416996
    2. 'RA' → logprob: -4.759981632232666
    3. 'return' → logprob: -6.759981632232666
    4. ' return' → logprob: -9.634981155395508
    5. ')' → logprob: -10.134981155395508
    6. 'for' → logprob: -10.259981155395508
    7. ']' → logprob: -10.634981155395508
    8. '       ' → logprob: -11.509981155395508
    9. '
' → logprob: -12.259981155395508
    10. ' for' → logprob: -12.259981155395508

Token 524: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7042733430862427
    2. 'RA' → logprob: -0.7042733430862427
    3. 'for' → logprob: -4.579273223876953
    4. ' for' → logprob: -7.329273223876953
    5. ' RA' → logprob: -9.829273223876953
    6. 'result' → logprob: -10.079273223876953
    7. 'return' → logprob: -11.329273223876953
    8. '    
' → logprob: -11.454273223876953
    9. '       ' → logprob: -12.454273223876953
    10. 'res' → logprob: -12.954273223876953

Token 525: ' =' (ID: 314)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00943363830447197
    2. ' =' → logprob: -5.509433746337891
    3. 'ues' → logprob: -5.884433746337891
    4. '=' → logprob: -6.009433746337891
    5. 'uer' → logprob: -10.13443374633789
    6. 'u' → logprob: -10.50943374633789
    7. 'e' → logprob: -12.00943374633789
    8. 'id' → logprob: -12.38443374633789
    9. 'val' → logprob: -12.38443374633789
    10. '   ' → logprob: -13.00943374633789

Token 526: ' (' (ID: 350)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.7289355993270874
    2. 'DP' → logprob: -0.7289355993270874
    3. 'sum' → logprob: -4.103935718536377
    4. '(' → logprob: -4.728935718536377
    5. ' DP' → logprob: -5.728935718536377
    6. ' (' → logprob: -5.853935718536377
    7. 'prod' → logprob: -6.978935718536377
    8. '(sum' → logprob: -7.103935718536377
    9. '(prod' → logprob: -8.353935241699219
    10. '((' → logprob: -8.478935241699219

Token 527: 'sum' (ID: 12298)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.014307823963463306
    2. 'sum' → logprob: -4.764307975769043
    3. ' DP' → logprob: -5.764307975769043
    4. '(D' → logprob: -6.639307975769043
    5. '(' → logprob: -7.389307975769043
    6. '   ' → logprob: -9.014307975769043
    7. '(sum' → logprob: -9.014307975769043
    8. 'pow' → logprob: -9.764307975769043
    9. ' sum' → logprob: -9.889307975769043
    10. 'dp' → logprob: -10.014307975769043

Token 528: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0009698220528662205
    2. '([' → logprob: -7.625969886779785
    3. '(' → logprob: -8.375969886779785
    4. '((' → logprob: -9.000969886779785
    5. '(sum' → logprob: -10.000969886779785
    6. '(dp' → logprob: -10.250969886779785
    7. '(d' → logprob: -11.000969886779785
    8. '(row' → logprob: -11.125969886779785
    9. '(
' → logprob: -12.250969886779785
    10. '(x' → logprob: -12.875969886779785

Token 529: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -5.550411151489243e-05
    2. '(P' → logprob: -11.000055313110352
    3. '([' → logprob: -11.000055313110352
    4. 'p' → logprob: -11.375055313110352
    5. '[' → logprob: -12.500055313110352
    6. ' P' → logprob: -13.125055313110352
    7. '[P' → logprob: -13.250055313110352
    8. '(' → logprob: -13.750055313110352
    9. '(
' → logprob: -14.625055313110352
    10. '
' → logprob: -15.250055313110352

Token 530: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004028653260320425
    2. '(H' → logprob: -6.004028797149658
    3. '[-' → logprob: -6.629028797149658
    4. '[h' → logprob: -8.5040283203125
    5. '[i' → logprob: -10.8790283203125
    6. '[len' → logprob: -12.2540283203125
    7. 'H' → logprob: -13.5040283203125
    8. '[row' → logprob: -14.3790283203125
    9. '[M' → logprob: -14.7540283203125
    10. '[D' → logprob: -15.1290283203125

Token 531: 'H' (ID: 39)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32286038994789124
    2. '(H' → logprob: -1.4478603601455688
    3. 'H' → logprob: -4.197860240936279
    4. '[-' → logprob: -4.697860240936279
    5. '[h' → logprob: -4.697860240936279
    6. '[i' → logprob: -4.947860240936279
    7. '(h' → logprob: -7.947860240936279
    8. '[r' → logprob: -10.322860717773438
    9. '(i' → logprob: -10.697860717773438
    10. 'i' → logprob: -11.197860717773438

Token 532: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008487391285598278
    2. '][' → logprob: -5.383487224578857
    3. '_[' → logprob: -5.633487224578857
    4. '[' → logprob: -8.383487701416016
    5. '_]' → logprob: -11.133487701416016
    6. '_,' → logprob: -12.008487701416016
    7. '   ' → logprob: -12.758487701416016
    8. ' ][' → logprob: -12.758487701416016
    9. '_
' → logprob: -12.758487701416016
    10. '+' → logprob: -12.758487701416016

Token 533: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6938430070877075
    2. '][' → logprob: -0.6938430070877075
    3. ')[' → logprob: -8.693842887878418
    4. '[h' → logprob: -8.818842887878418
    5. '   ' → logprob: -9.443842887878418
    6. '[-' → logprob: -9.568842887878418
    7. '```' → logprob: -10.443842887878418
    8. ' ' → logprob: -10.568842887878418
    9. '[i' → logprob: -10.568842887878418
    10. '[T' → logprob: -10.818842887878418

Token 534: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.2905389964580536
    2. 'w' → logprob: -1.415539026260376
    3. 'range' → logprob: -4.915538787841797
    4. 'i' → logprob: -6.540538787841797
    5. '[' → logprob: -8.540538787841797
    6. '][' → logprob: -8.665538787841797
    7. '[w' → logprob: -9.540538787841797
    8. ' W' → logprob: -11.165538787841797
    9. 'j' → logprob: -11.290538787841797
    10. ':' → logprob: -11.290538787841797

Token 535: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38818129897117615
    2. '][' → logprob: -1.1381813287734985
    3. '_]' → logprob: -7.513181209564209
    4. '][_' → logprob: -8.138181686401367
    5. ']' → logprob: -8.388181686401367
    6. '])' → logprob: -9.263181686401367
    7. '][:' → logprob: -9.763181686401367
    8. ' ][' → logprob: -11.138181686401367
    9. '()][' → logprob: -11.263181686401367
    10. '_[' → logprob: -11.763181686401367

Token 536: '])' (ID: 4636)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.15910016000270844
    2. '])' → logprob: -2.03410005569458
    3. '][:' → logprob: -4.15910005569458
    4. ']' → logprob: -8.534100532531738
    5. '])+' → logprob: -8.909100532531738
    6. ']))' → logprob: -9.159100532531738
    7. '[' → logprob: -10.409100532531738
    8. '   ' → logprob: -10.409100532531738
    9. ']%' → logprob: -10.534100532531738
    10. '[:' → logprob: -10.659100532531738

Token 537: '%' (ID: 4)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31495460867881775
    2. ')%' → logprob: -1.3149546384811401
    3. '*' → logprob: -7.43995475769043
    4. '%' → logprob: -7.43995475769043
    5. ' )' → logprob: -8.18995475769043
    6. ' *' → logprob: -9.06495475769043
    7. '   ' → logprob: -9.31495475769043
    8. ']%' → logprob: -11.56495475769043
    9. ' %' → logprob: -12.43995475769043
    10. ' -' → logprob: -12.68995475769043

Token 538: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.3306015716807451e-05
    2. ' mod' → logprob: -11.25001335144043
    3. '(mod' → logprob: -16.12501335144043
    4. '```' → logprob: -16.87501335144043
    5. '	mod' → logprob: -18.00001335144043
    6. '
' → logprob: -18.00001335144043
    7. '   ' → logprob: -18.62501335144043
    8. '998' → logprob: -18.75001335144043
    9. ' ' → logprob: -18.75001335144043
    10. ')' → logprob: -20.00001335144043

Token 539: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06608161330223083
    2. ')%' → logprob: -3.0660815238952637
    3. '*' → logprob: -4.316081523895264
    4. ' *' → logprob: -6.441081523895264
    5. '   ' → logprob: -6.691081523895264
    6. ')*' → logprob: -7.691081523895264
    7. '+' → logprob: -8.316082000732422
    8. ' )' → logprob: -8.441082000732422
    9. ' +' → logprob: -9.566082000732422
    10. ')
' → logprob: -10.066082000732422

Token 540: 'FACT' (ID: 105795)
  Prédit: 'FACT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -0.005647066980600357
    2. 'fact' → logprob: -5.2556471824646
    3. 'FA' → logprob: -8.380646705627441
    4. 'Fact' → logprob: -9.630646705627441
    5. 'pow' → logprob: -10.380646705627441
    6. '(' → logprob: -10.755646705627441
    7. 'FAC' → logprob: -10.755646705627441
    8. '2' → logprob: -11.505646705627441
    9. ' FACT' → logprob: -11.630646705627441
    10. 'mod' → logprob: -12.505646705627441

Token 541: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006742254365235567
    2. '[M' → logprob: -5.381742477416992
    3. '[(' → logprob: -7.131742477416992
    4. '[F' → logprob: -7.631742477416992
    5. '_INV' → logprob: -7.631742477416992
    6. '[h' → logprob: -9.256742477416992
    7. '_FACT' → logprob: -9.881742477416992
    8. '(H' → logprob: -10.506742477416992
    9. '[-' → logprob: -10.631742477416992
    10. '[R' → logprob: -10.881742477416992

Token 542: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00145297113340348
    2. 'W' → logprob: -7.001452922821045
    3. 'M' → logprob: -8.376453399658203
    4. '(H' → logprob: -8.501453399658203
    5. '[' → logprob: -9.501453399658203
    6. 'max' → logprob: -11.751453399658203
    7. '   ' → logprob: -12.001453399658203
    8. '(W' → logprob: -12.626453399658203
    9. '(' → logprob: -12.876453399658203
    10. ' ' → logprob: -13.001453399658203

Token 543: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2067212015390396
    2. '_]' → logprob: -1.7067211866378784
    3. '_[' → logprob: -5.331721305847168
    4. '_*' → logprob: -7.956721305847168
    5. '_-' → logprob: -9.456721305847168
    6. '[' → logprob: -12.081721305847168
    7. '_
' → logprob: -12.206721305847168
    8. '_W' → logprob: -12.331721305847168
    9. '_|' → logprob: -12.706721305847168
    10. '_^' → logprob: -13.456721305847168

Token 544: ']%' (ID: 158002)
  Prédit: '_]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_]' → logprob: -0.2524339556694031
    2. '_' → logprob: -1.5024340152740479
    3. ']' → logprob: -8.627433776855469
    4. '_-' → logprob: -9.127433776855469
    5. '_[' → logprob: -9.252433776855469
    6. '[' → logprob: -10.502433776855469
    7. '_*' → logprob: -10.502433776855469
    8. ']*' → logprob: -11.502433776855469
    9. '*' → logprob: -11.752433776855469
    10. '_
' → logprob: -11.877433776855469

Token 545: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.128163257315464e-07
    2. '(mod' → logprob: -16.0
    3. '```' → logprob: -16.625
    4. ' mod' → logprob: -17.875
    5. 'fact' → logprob: -18.625
    6. '20' → logprob: -18.625
    7. '[' → logprob: -18.75
    8. '21' → logprob: -18.875
    9. 'm' → logprob: -19.125
    10. '`' → logprob: -19.25

Token 546: '*' (ID: 9)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12807351350784302
    2. '   ' → logprob: -2.5030734539031982
    3. '
' → logprob: -3.6280734539031982
    4. ')' → logprob: -5.503073692321777
    5. ' %' → logprob: -5.503073692321777
    6. '*' → logprob: -6.128073692321777
    7. ')%' → logprob: -7.253073692321777
    8. ' *' → logprob: -8.128073692321777
    9. '```' → logprob: -9.378073692321777
    10. 'return' → logprob: -9.628073692321777

Token 547: 'FACT' (ID: 105795)
  Prédit: 'FACT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -12.500009536743164
    3. ' FACT' → logprob: -12.750009536743164
    4. 'fact' → logprob: -13.500009536743164
    5. 'FA' → logprob: -14.750009536743164
    6. 'Fact' → logprob: -14.750009536743164
    7. 'FAC' → logprob: -15.375009536743164
    8. '_FACT' → logprob: -15.500009536743164
    9. '```' → logprob: -15.750009536743164
    10. '
' → logprob: -16.750009536743164

Token 548: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.360996485454962e-05
    2. 'W' → logprob: -9.7500638961792
    3. '   ' → logprob: -13.6250638961792
    4. '```' → logprob: -14.1250638961792
    5. '[
' → logprob: -15.0000638961792
    6. '[w' → logprob: -15.1250638961792
    7. '(W' → logprob: -15.6250638961792
    8. 'for' → logprob: -15.7500638961792
    9. ' ' → logprob: -15.8750638961792
    10. '       ' → logprob: -15.8750638961792

Token 549: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0003365350130479783
    2. '[' → logprob: -8.000336647033691
    3. ' W' → logprob: -14.000336647033691
    4. '   ' → logprob: -15.500336647033691
    5. '(W' → logprob: -16.625335693359375
    6. '```' → logprob: -17.250335693359375
    7. '[
' → logprob: -18.250335693359375
    8. '`' → logprob: -18.625335693359375
    9. ' ' → logprob: -19.125335693359375
    10. ']' → logprob: -19.250335693359375

Token 550: '_' (ID: 62)
  Prédit: ']%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']%' → logprob: -0.03006216324865818
    2. '%' → logprob: -3.530062198638916
    3. ']' → logprob: -8.155061721801758
    4. '_%' → logprob: -11.655061721801758
    5. '[' → logprob: -12.280061721801758
    6. ' %' → logprob: -12.780061721801758
    7. '_' → logprob: -12.780061721801758
    8. 'W' → logprob: -13.405061721801758
    9. ')%' → logprob: -14.155061721801758
    10. ' ]' → logprob: -14.405061721801758

Token 551: ']%' (ID: 158002)
  Prédit: ']%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']%' → logprob: -0.6005765795707703
    2. '%' → logprob: -0.8505765795707703
    3. ')%' → logprob: -3.725576639175415
    4. ']' → logprob: -8.475576400756836
    5. ' %' → logprob: -11.850576400756836
    6. '%m' → logprob: -12.225576400756836
    7. '   ' → logprob: -12.350576400756836
    8. '}%' → logprob: -12.475576400756836
    9. ')' → logprob: -12.600576400756836
    10. 'W' → logprob: -14.225576400756836

Token 552: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.0280383548888494e-06
    2. ' mod' → logprob: -14.625000953674316
    3. '(mod' → logprob: -15.125000953674316
    4. '	mod' → logprob: -16.500001907348633
    5. '```' → logprob: -17.000001907348633
    6. '
' → logprob: -17.875001907348633
    7. 'modal' → logprob: -18.375001907348633
    8. 'm' → logprob: -18.625001907348633
    9. '`' → logprob: -18.750001907348633
    10. ' ' → logprob: -19.125001907348633

Token 553: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04694481939077377
    2. '   ' → logprob: -3.2969448566436768
    3. '%' → logprob: -4.921944618225098
    4. ')' → logprob: -6.921944618225098
    5. '
' → logprob: -8.296944618225098
    6. '    
' → logprob: -10.171944618225098
    7. ')
' → logprob: -10.171944618225098
    8. ';' → logprob: -10.296944618225098
    9. 'RA' → logprob: -10.421944618225098
    10. 'return' → logprob: -10.546944618225098

Token 554: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35322651267051697
    2. '
' → logprob: -1.2282265424728394
    3. 'RA' → logprob: -6.353226661682129
    4. ')
' → logprob: -6.603226661682129
    5. ')' → logprob: -7.103226661682129
    6. '    
' → logprob: -7.853226661682129
    7. '
' → logprob: -9.103226661682129
    8. ' 
' → logprob: -9.853226661682129
    9. '  
' → logprob: -9.978226661682129
    10. '[' → logprob: -10.478226661682129

Token 555: ' RA' (ID: 46104)
  Prédit: 'RA'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RA' (adapté à ' RA') → logprob: -0.12787118554115295
    2. '   ' → logprob: -2.12787127494812
    3. '
' → logprob: -7.252871036529541
    4. 'return' → logprob: -8.7528715133667
    5. ' RA' → logprob: -9.8778715133667
    6. ' return' → logprob: -11.1278715133667
    7. '    
' → logprob: -12.5028715133667
    8. '_RA' → logprob: -12.6278715133667
    9. ' ' → logprob: -14.0028715133667
    10. '
' → logprob: -14.0028715133667

Token 556: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.664371848164592e-05
    2. '[' → logprob: -11.125016212463379
    3. '[((' → logprob: -14.125016212463379
    4. '[
' → logprob: -14.375016212463379
    5. '.setdefault' → logprob: -15.875016212463379
    6. '[...]' → logprob: -16.250017166137695
    7. '['' → logprob: -17.000017166137695
    8. '[R' → logprob: -17.500017166137695
    9. '[I' → logprob: -17.625017166137695
    10. '[\' → logprob: -17.750017166137695

Token 557: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.9361264946837764e-07
    2. '(H' → logprob: -16.375
    3. ' H' → logprob: -16.5
    4. '_H' → logprob: -20.5
    5. '	H' → logprob: -21.625
    6. ',H' → logprob: -21.875
    7. '   ' → logprob: -22.125
    8. '(' → logprob: -22.375
    9. ''H' → logprob: -22.5
    10. '&H' → logprob: -23.125

Token 558: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -8.578184497309849e-05
    2. '_' → logprob: -9.375085830688477
    3. ',' → logprob: -14.875085830688477
    4. '_,
' → logprob: -14.875085830688477
    5. '_
' → logprob: -16.500085830688477
    6. '_H' → logprob: -17.125085830688477
    7. '_
' → logprob: -17.625085830688477
    8. '_

' → logprob: -18.000085830688477
    9. '_',' → logprob: -18.875085830688477
    10. 'H' → logprob: -19.250085830688477

Token 559: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.12692810595035553
    2. ' W' → logprob: -2.1269280910491943
    3. '   ' → logprob: -16.626928329467773
    4. ' ' → logprob: -18.376928329467773
    5. '    ' → logprob: -19.251928329467773
    6. '  ' → logprob: -19.501928329467773
    7. ',W' → logprob: -19.626928329467773
    8. '	W' → logprob: -19.876928329467773
    9. '<W' → logprob: -20.501928329467773
    10. '```' → logprob: -21.001928329467773

Token 560: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3489583730697632
    2. ')]' → logprob: -1.2239583730697632
    3. '_)' → logprob: -7.723958492279053
    4. ')' → logprob: -10.473958015441895
    5. '_]' → logprob: -10.848958015441895
    6. ')]
' → logprob: -12.848958015441895
    7. '+' → logprob: -12.848958015441895
    8. ')][' → logprob: -12.973958015441895
    9. ' )' → logprob: -13.098958015441895
    10. '')]' → logprob: -13.098958015441895

Token 561: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001995012629777193
    2. ']' → logprob: -6.251995086669922
    3. ')' → logprob: -9.751995086669922
    4. ']=' → logprob: -12.126995086669922
    5. '])' → logprob: -13.376995086669922
    6. ']
' → logprob: -15.376995086669922
    7. ']=(' → logprob: -15.501995086669922
    8. ')=' → logprob: -15.751995086669922
    9. ']]' → logprob: -15.876995086669922
    10. ')]
' → logprob: -16.376995086669922

Token 562: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001234428636962548
    2. ' =' → logprob: -9.000123023986816
    3. '=}' → logprob: -20.000123977661133
    4. '=
' → logprob: -20.625123977661133
    5. '＝' → logprob: -20.750123977661133
    6. '.=' → logprob: -22.125123977661133
    7. '=

' → logprob: -22.625123977661133
    8. '=`' → logprob: -23.000123977661133
    9. '=end' → logprob: -23.250123977661133
    10. ')=' → logprob: -24.750123977661133

Token 563: ' RA' (ID: 46104)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -2.7610454708337784e-05
    2. ' val' → logprob: -10.500027656555176
    3. '	val' → logprob: -19.62502670288086
    4. '(val' → logprob: -20.00002670288086
    5. '_val' → logprob: -21.37502670288086
    6. 'va' → logprob: -22.00002670288086
    7. 'mod' → logprob: -22.00002670288086
    8. 'int' → logprob: -22.12502670288086
    9. '[val' → logprob: -22.25002670288086
    10. 'v' → logprob: -22.62502670288086

Token 564: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0024799390230327845
    2. '(H' → logprob: -6.0024800300598145
    3. '((' → logprob: -13.377479553222656
    4. '(' → logprob: -13.877479553222656
    5. ' (' → logprob: -14.377479553222656
    6. '[' → logprob: -15.127479553222656
    7. '   ' → logprob: -15.252479553222656
    8. '
' → logprob: -15.502479553222656
    9. 'val' → logprob: -15.627479553222656
    10. '(W' → logprob: -16.002479553222656

Token 565: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.01639491692185402
    2. 'H' → logprob: -4.516395092010498
    3. '0' → logprob: -6.141395092010498
    4. ' W' → logprob: -6.141395092010498
    5. '(W' → logprob: -7.391395092010498
    6. '(' → logprob: -8.26639461517334
    7. '(H' → logprob: -9.64139461517334
    8. ' (' → logprob: -10.39139461517334
    9. ' ' → logprob: -10.64139461517334
    10. '   ' → logprob: -11.39139461517334

Token 566: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -2.7133641196996905e-05
    2. '_' → logprob: -10.87502670288086
    3. ',' → logprob: -11.75002670288086
    4. '_,
' → logprob: -16.12502670288086
    5. '+,' → logprob: -17.50002670288086
    6. '_
' → logprob: -17.75002670288086
    7. '_

' → logprob: -18.00002670288086
    8. 'H' → logprob: -18.50002670288086
    9. ' _,' → logprob: -18.62502670288086
    10. '_
' → logprob: -19.12502670288086

Token 567: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.7610454708337784e-05
    2. ' H' → logprob: -10.500027656555176
    3. '_H' → logprob: -18.25002670288086
    4. '   ' → logprob: -18.87502670288086
    5. '(H' → logprob: -19.50002670288086
    6. ',H' → logprob: -20.87502670288086
    7. '_' → logprob: -21.87502670288086
    8. ' ' → logprob: -21.87502670288086
    9. ')' → logprob: -22.12502670288086
    10. '(' → logprob: -22.37502670288086

Token 568: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000227496653678827
    2. ')]' → logprob: -9.125227928161621
    3. '_)' → logprob: -9.125227928161621
    4. '_]' → logprob: -12.250227928161621
    5. '+' → logprob: -13.750227928161621
    6. '_,' → logprob: -14.000227928161621
    7. '_),' → logprob: -14.000227928161621
    8. '_(' → logprob: -14.375227928161621
    9. '_-' → logprob: -14.375227928161621
    10. '_)
' → logprob: -15.125227928161621

Token 569: ')]' (ID: 15710)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1604168564081192
    2. ')]' → logprob: -1.910416841506958
    3. '_)' → logprob: -8.660416603088379
    4. '_]' → logprob: -11.785416603088379
    5. '_,' → logprob: -12.535416603088379
    6. ')' → logprob: -12.535416603088379
    7. ')][' → logprob: -13.785416603088379
    8. ')]
' → logprob: -14.535416603088379
    9. '_=' → logprob: -14.660416603088379
    10. '")]' → logprob: -14.785416603088379

Token 570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08906956762075424
    2. ' =' → logprob: -2.4640696048736572
    3. '[val' → logprob: -9.839069366455078
    4. 'val' → logprob: -10.589069366455078
    5. ',val' → logprob: -11.089069366455078
    6. ']' → logprob: -11.214069366455078
    7. ' val' → logprob: -11.714069366455078
    8. ']=' → logprob: -12.214069366455078
    9. ')' → logprob: -13.089069366455078
    10. '_val' → logprob: -13.214069366455078

Token 571: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -7.107425062713446e-06
    2. ' val' → logprob: -11.875006675720215
    3. '(val' → logprob: -17.75000762939453
    4. 'mod' → logprob: -18.75000762939453
    5. '	val' → logprob: -19.50000762939453
    6. '```' → logprob: -20.00000762939453
    7. '[val' → logprob: -20.00000762939453
    8. '_val' → logprob: -20.12500762939453
    9. 'int' → logprob: -20.25000762939453
    10. '
' → logprob: -20.62500762939453

Token 572: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002508239820599556
    2. 'return' → logprob: -6.127508163452148
    3. ' return' → logprob: -8.877508163452148
    4. '
' → logprob: -8.877508163452148
    5. '	return' → logprob: -10.752508163452148
    6. ':return' → logprob: -11.752508163452148
    7. '<|end|>' → logprob: -12.002508163452148
    8. '    
' → logprob: -13.127508163452148
    9. '```' → logprob: -13.752508163452148
    10. '  ' → logprob: -13.877508163452148

Token 573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010962257510982454
    2. 'return' → logprob: -9.125109672546387
    3. '```' → logprob: -14.500109672546387
    4. ' return' → logprob: -16.37510871887207
    5. '<|end|>' → logprob: -16.62510871887207
    6. '       ' → logprob: -17.62510871887207
    7. '	return' → logprob: -18.00010871887207
    8. '  ' → logprob: -18.37510871887207
    9. 'def' → logprob: -18.50010871887207
    10. ':return' → logprob: -18.50010871887207

Token 574: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4743455648422241
    2. 'return' (adapté à ' return') → logprob: -0.9743455648422241
    3. ' return' → logprob: -8.474345207214355
    4. '	return' → logprob: -10.599345207214355
    5. ':return' → logprob: -10.974345207214355
    6. '```' → logprob: -11.224345207214355
    7. '  ' → logprob: -13.974345207214355
    8. 'eturn' → logprob: -14.224345207214355
    9. ')return' → logprob: -14.349345207214355
    10. '_return' → logprob: -14.349345207214355

Token 575: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -9.615255839889869e-05
    2. ' val' → logprob: -9.250096321105957
    3. '(val' → logprob: -19.87509536743164
    4. '	val' → logprob: -21.37509536743164
    5. '   ' → logprob: -23.25009536743164
    6. ',val' → logprob: -23.87509536743164
    7. '[val' → logprob: -24.00009536743164
    8. '_val' → logprob: -24.12509536743164
    9. 'Val' → logprob: -24.50009536743164
    10. 'VAL' → logprob: -25.62509536743164

Token 576: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 577: 'CA' (ID: 6781)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.881503701210022
    2. ')' → logprob: -1.506503701210022
    3. '+' → logprob: -2.0065035820007324
    4. '<|end|>' → logprob: -2.2565035820007324
    5. 'def' → logprob: -2.8815035820007324
    6. '
' → logprob: -4.131503582000732
    7. 'for' → logprob: -4.131503582000732
    8. '```' → logprob: -4.881503582000732
    9. 'H' → logprob: -5.006503582000732
    10. ']' → logprob: -5.881503582000732

Token 578: ' =' (ID: 314)
  Prédit: 'LC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LC' → logprob: -0.6460955142974854
    2. 'L' → logprob: -0.7710955142974854
    3. 'lc' → logprob: -4.896095275878906
    4. 'l' → logprob: -6.771095275878906
    5. '=' → logprob: -6.896095275878906
    6. 'LL' → logprob: -7.146095275878906
    7. ' =' → logprob: -7.771095275878906
    8. '[' → logprob: -8.146095275878906
    9. 'LS' → logprob: -8.146095275878906
    10. 'Lc' → logprob: -8.271095275878906

Token 579: ' {}
' (ID: 11421)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30924054980278015
    2. '{}' → logprob: -1.4342405796051025
    3. '[]' → logprob: -4.809240341186523
    4. '{' → logprob: -5.309240341186523
    5. ' [' → logprob: -5.434240341186523
    6. '[[' → logprob: -5.559240341186523
    7. '0' → logprob: -6.059240341186523
    8. '[(' → logprob: -6.434240341186523
    9. '[A' → logprob: -7.559240341186523
    10. ' {}' → logprob: -7.684240341186523

Token 580: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004726195242255926
    2. 'for' → logprob: -5.504726409912109
    3. 'CA' → logprob: -8.12972640991211
    4. '<|end|>' → logprob: -9.00472640991211
    5. '```' → logprob: -9.62972640991211
    6. ')' → logprob: -10.25472640991211
    7. '[]' → logprob: -10.62972640991211
    8. '(' → logprob: -10.87972640991211
    9. '[' → logprob: -10.87972640991211
    10. '#' → logprob: -11.62972640991211

Token 581: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.8358408808708191
    2. 'count' → logprob: -1.3358409404754639
    3. 'solve' → logprob: -2.710840940475464
    4. ' count' → logprob: -3.335840940475464
    5. ' calc' → logprob: -3.710840940475464
    6. 'ways' → logprob: -4.210840702056885
    7. 'comb' → logprob: -4.335840702056885
    8. 'ca' → logprob: -4.585840702056885
    9. 'f' → logprob: -4.710840702056885
    10. 'rect' → logprob: -4.835840702056885

Token 582: '(h' (ID: 8120)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.7232974767684937
    2. 'alc' → logprob: -2.223297595977783
    3. '(C' → logprob: -3.098297595977783
    4. '(H' → logprob: -3.473297595977783
    5. '(' → logprob: -3.598297595977783
    6. '_rect' → logprob: -3.723297595977783
    7. 'ul' → logprob: -4.098297595977783
    8. '(cell' → logprob: -4.348297595977783
    9. '_C' → logprob: -4.473297595977783
    10. '(i' → logprob: -4.473297595977783

Token 583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5357792973518372
    2. '_' → logprob: -1.5357792377471924
    3. '_,' → logprob: -1.7857792377471924
    4. '):
' → logprob: -3.6607792377471924
    5. ',h' → logprob: -6.4107794761657715
    6. '):' → logprob: -6.5357794761657715
    7. ',_' → logprob: -6.5357794761657715
    8. 'def' → logprob: -7.4107794761657715
    9. ' ,' → logprob: -8.160778999328613
    10. ',w' → logprob: -9.535778999328613

Token 584: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.004423943813890219
    2. ' w' → logprob: -5.504424095153809
    3. 'k' → logprob: -8.629424095153809
    4. 'W' → logprob: -10.379424095153809
    5. '   ' → logprob: -10.629424095153809
    6. 'l' → logprob: -11.379424095153809
    7. 'r' → logprob: -11.504424095153809
    8. '```' → logprob: -11.691924095153809
    9. 'c' → logprob: -11.941924095153809
    10. 't' → logprob: -11.941924095153809

Token 585: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20798943936824799
    2. '):' → logprob: -1.7079894542694092
    3. '):
' → logprob: -5.33298921585083
    4. ',k' → logprob: -7.83298921585083
    5. ',w' → logprob: -8.082989692687988
    6. ',n' → logprob: -8.207989692687988
    7. ' ,' → logprob: -8.832989692687988
    8. ',c' → logprob: -9.207989692687988
    9. ',y' → logprob: -9.832989692687988
    10. ',p' → logprob: -10.207989692687988

Token 586: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07690804451704025
    2. ' if' → logprob: -2.9519081115722656
    3. 'if' → logprob: -3.8269081115722656
    4. '	if' → logprob: -12.326908111572266
    5. '```' → logprob: -13.451908111572266
    6. ' ' → logprob: -14.076908111572266
    7. '<|end|>' → logprob: -15.451908111572266
    8. '  ' → logprob: -15.451908111572266
    9. 'result' → logprob: -15.826908111572266
    10. '   ' → logprob: -15.951908111572266

Token 587: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018466906622052193
    2. 'res' → logprob: -4.018466949462891
    3. 'key' → logprob: -8.89346694946289
    4. '   ' → logprob: -9.14346694946289
    5. ' if' → logprob: -10.26846694946289
    6. 'ans' → logprob: -11.01846694946289
    7. 'ret' → logprob: -11.39346694946289
    8. 'result' → logprob: -12.14346694946289
    9. 'r' → logprob: -13.51846694946289
    10. ' res' → logprob: -13.64346694946289

Token 588: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.09030766785144806
    2. ' (' → logprob: -2.4653077125549316
    3. 'h' → logprob: -7.090307712554932
    4. ' h' → logprob: -8.465307235717773
    5. '   ' → logprob: -8.715307235717773
    6. '(' → logprob: -8.965307235717773
    7. '(w' → logprob: -11.090307235717773
    8. '(H' → logprob: -11.590307235717773
    9. 'w' → logprob: -12.840307235717773
    10. ' ' → logprob: -13.340307235717773

Token 589: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00020783171930816025
    2. '(h' → logprob: -8.500207901000977
    3. ' h' → logprob: -12.875207901000977
    4. '   ' → logprob: -14.000207901000977
    5. ')' → logprob: -15.375207901000977
    6. ' (' → logprob: -15.750207901000977
    7. ',h' → logprob: -16.125207901000977
    8. '(' → logprob: -16.500207901000977
    9. '	h' → logprob: -16.750207901000977
    10. '[h' → logprob: -16.875207901000977

Token 590: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3869965076446533
    2. ',w' → logprob: -1.1369965076446533
    3. ' ,' → logprob: -9.136996269226074
    4. ',W' → logprob: -11.511996269226074
    5. ',h' → logprob: -12.636996269226074
    6. 'w' → logprob: -13.386996269226074
    7. ',
' → logprob: -14.011996269226074
    8. '_,' → logprob: -14.136996269226074
    9. ',k' → logprob: -15.011996269226074
    10. '   ' → logprob: -15.261996269226074

Token 591: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')==' → logprob: -15.625000953674316
    3. ' )' → logprob: -16.375
    4. 'in' → logprob: -16.375
    5. 'not' → logprob: -17.25
    6. '   ' → logprob: -17.375
    7. ' in' → logprob: -18.0
    8. ']' → logprob: -18.0
    9. ',)' → logprob: -18.0
    10. ' not' → logprob: -18.75

Token 592: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.672990620136261
    2. 'in' → logprob: -0.922990620136261
    3. ')' → logprob: -2.422990560531616
    4. ' not' → logprob: -6.047990798950195
    5. 'not' → logprob: -6.797990798950195
    6. '==' → logprob: -9.172990798950195
    7. '=' → logprob: -9.547990798950195
    8. '<|end|>' → logprob: -9.922990798950195
    9. ']' → logprob: -10.047990798950195
    10. ')==' → logprob: -11.547990798950195

Token 593: ' CA' (ID: 13180)
  Prédit: 'CA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -1.7432603272027336e-06
    2. ' CA' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.000001907348633
    4. 'ca' → logprob: -18.375001907348633
    5. 'def' → logprob: -18.875001907348633
    6. '
' → logprob: -19.875001907348633
    7. 'C' → logprob: -20.250001907348633
    8. 'Ca' → logprob: -20.625001907348633
    9. ' ' → logprob: -21.125001907348633
    10. '_CA' → logprob: -21.250001907348633

Token 594: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47738635540008545
    2. ':
' → logprob: -0.9773863554000854
    3. ':return' → logprob: -6.102386474609375
    4. '   ' → logprob: -7.102386474609375
    5. '):
' → logprob: -8.977386474609375
    6. '):' → logprob: -9.477386474609375
    7. 'return' → logprob: -11.352386474609375
    8. '():
' → logprob: -11.852386474609375
    9. ' :' → logprob: -12.227386474609375
    10. '=' → logprob: -13.102386474609375

Token 595: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21786628663539886
    2. '   ' → logprob: -1.71786630153656
    3. 'return' → logprob: -4.21786642074585
    4. ' return' → logprob: -6.46786642074585
    5. '	return' → logprob: -10.342865943908691
    6. ':return' → logprob: -13.592865943908691
    7. '           ' → logprob: -14.592865943908691
    8. '	   ' → logprob: -14.592865943908691
    9. '{return' → logprob: -14.717865943908691
    10. '	' → logprob: -15.467865943908691

Token 596: ' CA' (ID: 13180)
  Prédit: 'CA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -1.676292231422849e-05
    2. ' CA' → logprob: -11.000017166137695
    3. 'ca' → logprob: -19.250017166137695
    4. 'Ca' → logprob: -21.000017166137695
    5. '   ' → logprob: -21.375017166137695
    6. '_CA' → logprob: -21.750017166137695
    7. '
' → logprob: -24.125017166137695
    8. 'C' → logprob: -24.375017166137695
    9. ' ' → logprob: -25.250017166137695
    10. 'CAE' → logprob: -25.250017166137695

Token 597: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -15.875
    3. '((' → logprob: -16.625
    4. ' [(' → logprob: -20.125
    5. '[
' → logprob: -20.5
    6. '([(' → logprob: -21.5
    7. '(h' → logprob: -21.875
    8. 'def' → logprob: -21.875
    9. '
' → logprob: -22.0
    10. '=(' → logprob: -22.375

Token 598: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.128163257315464e-07
    2. ' h' → logprob: -15.625
    3. '   ' → logprob: -17.625
    4. '(h' → logprob: -17.75
    5. '	h' → logprob: -18.25
    6. ',h' → logprob: -19.25
    7. ',' → logprob: -20.0
    8. '"h' → logprob: -20.25
    9. '```' → logprob: -20.375
    10. '<h' → logprob: -20.375

Token 599: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.009171441197395325
    2. ',' → logprob: -4.759171485900879
    3. ',h' → logprob: -7.509171485900879
    4. 'w' → logprob: -12.134171485900879
    5. ' ,' → logprob: -12.884171485900879
    6. ',y' → logprob: -15.384171485900879
    7. ',W' → logprob: -15.634171485900879
    8. ',v' → logprob: -16.259170532226562
    9. ',b' → logprob: -16.759170532226562
    10. ',
' → logprob: -17.259170532226562

Token 600: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.9587240219116211
    2. ']' → logprob: -1.208724021911621
    3. ')]' → logprob: -1.208724021911621
    4. ')]
' → logprob: -4.083724021911621
    5. ')' → logprob: -6.208724021911621
    6. ')
' → logprob: -7.708724021911621
    7. '])' → logprob: -9.458724021911621
    8. '   ' → logprob: -10.333724021911621
    9. ']
' → logprob: -11.208724021911621
    10. '])
' → logprob: -12.083724021911621

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009768366580829024
    2. 'if' → logprob: -7.125977039337158
    3. ' if' → logprob: -8.7509765625
    4. '```' → logprob: -11.8759765625
    5. '
' → logprob: -13.8759765625
    6. 'for' → logprob: -14.0009765625
    7. 'CA' → logprob: -14.2509765625
    8. '[' → logprob: -14.3759765625
    9. '       ' → logprob: -14.5009765625
    10. 'return' → logprob: -14.6259765625

Token 602: ' sol' (ID: 1887)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.29995572566986084
    2. '   ' → logprob: -1.9249557256698608
    3. 'if' → logprob: -2.6749558448791504
    4. 'ret' → logprob: -4.17495584487915
    5. 'val' → logprob: -4.92495584487915
    6. 's' → logprob: -5.17495584487915
    7. 'r' → logprob: -5.29995584487915
    8. 'ans' → logprob: -5.54995584487915
    9. ' res' → logprob: -5.67495584487915
    10. 'v' → logprob: -7.17495584487915

Token 603: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741474986076355
    2. '=' → logprob: -0.9741474986076355
    3. '   ' → logprob: -10.09914779663086
    4. ',' → logprob: -11.59914779663086
    5. 'ution' → logprob: -11.84914779663086
    6. '=[]' → logprob: -12.72414779663086
    7. '	' → logprob: -13.22414779663086
    8. ' ' → logprob: -13.47414779663086
    9. ' ' → logprob: -14.34914779663086
    10. 's' → logprob: -14.34914779663086

Token 604: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011037800461053848
    2. ' ' → logprob: -5.886037826538086
    3. '1' → logprob: -6.011037826538086
    4. '(' → logprob: -6.261037826538086
    5. 'rect' → logprob: -6.261037826538086
    6. 'prod' → logprob: -8.011037826538086
    7. '(rect' → logprob: -8.136037826538086
    8. ' rect' → logprob: -8.511037826538086
    9. ' (' → logprob: -8.636037826538086
    10. '[' → logprob: -8.886037826538086

Token 605: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01424460206180811
    2. 'rect' → logprob: -4.889244556427002
    3. '(' → logprob: -5.889244556427002
    4. '1' → logprob: -6.764244556427002
    5. '(rect' → logprob: -7.139244556427002
    6. 'prod' → logprob: -7.264244556427002
    7. 'mod' → logprob: -8.13924503326416
    8. 'sum' → logprob: -8.26424503326416
    9. 'pow' → logprob: -9.51424503326416
    10. ' ' → logprob: -9.63924503326416

Token 606: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2901422679424286
    2. ' for' → logprob: -1.540142297744751
    3. 'for' → logprob: -3.290142297744751
    4. '
' → logprob: -9.040142059326172
    5. '<|end|>' → logprob: -9.790142059326172
    6. ',' → logprob: -10.290142059326172
    7. '	for' → logprob: -11.415142059326172
    8. '    
' → logprob: -11.665142059326172
    9. ' if' → logprob: -12.415142059326172
    10. '```' → logprob: -13.540142059326172

Token 607: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1320289522409439
    2. ' for' → logprob: -2.3820290565490723
    3. 'for' → logprob: -3.5070290565490723
    4. '
' → logprob: -7.007029056549072
    5. '	for' → logprob: -8.757028579711914
    6. '<|end|>' → logprob: -9.257028579711914
    7. '    
' → logprob: -9.382028579711914
    8. '```' → logprob: -9.882028579711914
    9. ',' → logprob: -11.007028579711914
    10. ')' → logprob: -12.632028579711914

Token 608: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004773291759192944
    2. 'if' → logprob: -5.379773139953613
    3. '   ' → logprob: -8.879773139953613
    4. ' for' → logprob: -11.504773139953613
    5. '#' (adapté à ' #') → logprob: -13.379773139953613
    6. 'return' → logprob: -14.504773139953613
    7. '```' → logprob: -16.00477409362793
    8. 'i' → logprob: -16.25477409362793
    9. 'from' → logprob: -16.37977409362793
    10. 'sol' → logprob: -16.37977409362793

Token 609: ' Produit' (ID: 199991)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014121392741799355
    2. '   ' → logprob: -6.8764119148254395
    3. 'if' → logprob: -8.251412391662598
    4. ' for' → logprob: -9.126412391662598
    5. '#' → logprob: -13.001412391662598
    6. 'return' → logprob: -13.251412391662598
    7. '```' → logprob: -13.876412391662598
    8. 'i' → logprob: -14.876412391662598
    9. 'rows' → logprob: -14.876412391662598
    10. 'from' → logprob: -15.001412391662598

Token 610: ' cart' (ID: 8149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15929046273231506
    2. ' for' → logprob: -2.2842905521392822
    3. '   ' → logprob: -3.2842905521392822
    4. '=' → logprob: -5.034290313720703
    5. ' =' → logprob: -7.784290313720703
    6. ',' → logprob: -8.909290313720703
    7. 'from' → logprob: -9.034290313720703
    8. 'range' → logprob: -9.034290313720703
    9. '(' → logprob: -9.409290313720703
    10. '```' → logprob: -9.534290313720703

Token 611: 'és' (ID: 1756)
  Prédit: 'esian'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esian' → logprob: -0.0740419551730156
    2. 'es' → logprob: -2.6990418434143066
    3. 'esion' → logprob: -5.824041843414307
    4. 'és' → logprob: -7.574041843414307
    5. 'esi' → logprob: -8.449042320251465
    6. '=' → logprob: -9.824042320251465
    7. '```' → logprob: -9.824042320251465
    8. 'product' → logprob: -9.949042320251465
    9. 'e' → logprob: -10.074042320251465
    10. 'essian' → logprob: -10.074042320251465

Token 612: 'ien' (ID: 847)
  Prédit: 'ien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ien' → logprob: -0.24037335813045502
    2. 'es' → logprob: -3.115373373031616
    3. 'ian' → logprob: -3.115373373031616
    4. '```' → logprob: -3.115373373031616
    5. '   ' → logprob: -4.115373134613037
    6. 'an' → logprob: -4.615373134613037
    7. 'product' → logprob: -4.990373134613037
    8. '       ' → logprob: -5.615373134613037
    9. '(product' → logprob: -5.615373134613037
    10. 'e' → logprob: -5.740373134613037

Token 613: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6512167453765869
    2. ' for' → logprob: -0.9012167453765869
    3. '   ' → logprob: -2.651216745376587
    4. '(' → logprob: -8.026216506958008
    5. '(
' → logprob: -8.026216506958008
    6. '
' → logprob: -8.151216506958008
    7. '	for' → logprob: -8.151216506958008
    8. '```' → logprob: -9.151216506958008
    9. ' =' → logprob: -9.776216506958008
    10. '((' → logprob: -9.776216506958008

Token 614: ' somme' (ID: 64484)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.2391945123672485
    2. ' product' → logprob: -1.3641945123672485
    3. 'for' → logprob: -1.7391945123672485
    4. 'com' → logprob: -1.9891945123672485
    5. ' for' → logprob: -2.864194393157959
    6. 'chain' → logprob: -3.114194393157959
    7. ' chain' → logprob: -4.114194393157959
    8. ' combinations' → logprob: -4.114194393157959
    9. 'range' → logprob: -5.489194393157959
    10. '   ' → logprob: -6.239194393157959

Token 615: ' imb' (ID: 63592)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9800903797149658
    2. '   ' → logprob: -1.1050903797149658
    3. 'for' → logprob: -1.2300903797149658
    4. '
' → logprob: -7.480090141296387
    5. '	for' → logprob: -8.355090141296387
    6. '(
' → logprob: -8.980090141296387
    7. '(' → logprob: -9.855090141296387
    8. ',' → logprob: -9.855090141296387
    9. ':' → logprob: -9.980090141296387
    10. '    
' → logprob: -10.105090141296387

Token 616: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.09652785956859589
    2. 'iqu' → logprob: -3.7215278148651123
    3. 'in' → logprob: -3.8465278148651123
    4. 'quée' → logprob: -4.096528053283691
    5. 'r' → logprob: -5.471528053283691
    6. 'iqué' → logprob: -5.596528053283691
    7. 'ed' → logprob: -5.721528053283691
    8. 'q' → logprob: -6.221528053283691
    9. 'ro' → logprob: -6.346528053283691
    10. 'quées' → logprob: -6.471528053283691

Token 617: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -0.15251897275447845
    2. 'née' → logprob: -3.2775189876556396
    3. 'qués' → logprob: -3.6525189876556396
    4. 'né' → logprob: -4.1525187492370605
    5. 'quées' → logprob: -4.2775187492370605
    6. 'qué' → logprob: -4.6525187492370605
    7. 'd' → logprob: -5.1525187492370605
    8. 'rée' → logprob: -5.4025187492370605
    9. 'c' → logprob: -5.7775187492370605
    10. 'nées' → logprob: -5.7775187492370605

Token 618: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41646721959114075
    2. 'for' → logprob: -1.1664671897888184
    3. '   ' → logprob: -3.5414671897888184
    4. '
' → logprob: -8.791467666625977
    5. '```' → logprob: -10.666467666625977
    6. '``' → logprob: -12.541467666625977
    7. '    
' → logprob: -12.916467666625977
    8. '	for' → logprob: -13.166467666625977
    9. 'from' → logprob: -13.291467666625977
    10. ',' → logprob: -13.291467666625977

Token 619: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5769158005714417
    2. ' for' → logprob: -0.9519158005714417
    3. '   ' → logprob: -2.951915740966797
    4. '```' → logprob: -9.326915740966797
    5. '	for' → logprob: -11.451915740966797
    6. 'product' → logprob: -11.951915740966797
    7. '``' → logprob: -12.201915740966797
    8. ',' → logprob: -12.326915740966797
    9. '
' → logprob: -12.451915740966797
    10. '    
' → logprob: -12.826915740966797

Token 620: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001587939215824008
    2. '   ' → logprob: -6.501587867736816
    3. ' for' → logprob: -9.376587867736816
    4. '```' → logprob: -14.126587867736816
    5. '
' → logprob: -15.376587867736816
    6. '``' → logprob: -17.126588821411133
    7. '	for' → logprob: -17.251588821411133
    8. 'from' → logprob: -17.876588821411133
    9. '       ' → logprob: -19.001588821411133
    10. '    
' → logprob: -19.501588821411133

Token 621: ' bh' (ID: 11387)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2321239709854126
    2. 'h' → logprob: -1.8571239709854126
    3. 'x' → logprob: -2.232123851776123
    4. 'k' → logprob: -2.482123851776123
    5. 'a' → logprob: -2.982123851776123
    6. 'hh' → logprob: -3.357123851776123
    7. 'r' → logprob: -3.482123851776123
    8. 'nh' → logprob: -3.857123851776123
    9. 'l' → logprob: -3.982123851776123
    10. 'H' → logprob: -4.232123851776123

Token 622: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7082430124282837
    2. ',' → logprob: -0.9582430124282837
    3. 'in' → logprob: -2.833242893218994
    4. ',b' → logprob: -2.958242893218994
    5. ',h' → logprob: -5.083242893218994
    6. ',w' → logprob: -5.583242893218994
    7. ' ,' → logprob: -7.333242893218994
    8. '1' → logprob: -7.833242893218994
    9. '_,' → logprob: -7.958242893218994
    10. ',_' → logprob: -8.333243370056152

Token 623: ' bw' (ID: 20824)
  Prédit: 'bw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bw' → logprob: -0.0003839597338810563
    2. ' bw' → logprob: -7.8753838539123535
    3. 'bl' → logprob: -13.750384330749512
    4. '_bw' → logprob: -14.500384330749512
    5. 'bh' → logprob: -14.750384330749512
    6. 'b' → logprob: -14.875384330749512
    7. 'Bw' → logprob: -14.875384330749512
    8. '	bw' → logprob: -15.125384330749512
    9. ' ' → logprob: -15.750384330749512
    10. '   ' → logprob: -16.000383377075195

Token 624: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.43262866139411926
    2. 'in' → logprob: -1.0576286315917969
    3. ',' → logprob: -5.682628631591797
    4. '   ' → logprob: -8.057628631591797
    5. ',b' → logprob: -9.432628631591797
    6. 'b' → logprob: -9.807628631591797
    7. ')' → logprob: -11.182628631591797
    8. '```' → logprob: -11.557628631591797
    9. '    ' → logprob: -11.682628631591797
    10. '	in' → logprob: -12.682628631591797

Token 625: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8546574711799622
    2. 'product' → logprob: -0.9796574711799622
    3. ' product' → logprob: -1.7296574115753174
    4. ' combinations' → logprob: -3.8546574115753174
    5. 'chain' → logprob: -8.604657173156738
    6. '[(' → logprob: -8.729657173156738
    7. 'range' → logprob: -9.229657173156738
    8. 'comb' → logprob: -9.479657173156738
    9. ' range' → logprob: -10.104657173156738
    10. ' chain' → logprob: -10.854657173156738

Token 626: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -12.000009536743164
    3. 'range' → logprob: -12.750009536743164
    4. '((' → logprob: -14.625009536743164
    5. '([' → logprob: -17.125009536743164
    6. '(re' → logprob: -17.250009536743164
    7. ' (' → logprob: -17.625009536743164
    8. '(com' → logprob: -17.625009536743164
    9. '(chain' → logprob: -17.625009536743164
    10. '(list' → logprob: -17.625009536743164

Token 627: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.02736636996269226
    2. '(' → logprob: -3.7773663997650146
    3. '(b' → logprob: -5.7773661613464355
    4. '(min' → logprob: -7.6523661613464355
    5. '(H' → logprob: -8.777366638183594
    6. '(w' → logprob: -8.902366638183594
    7. 'h' → logprob: -9.027366638183594
    8. '((' → logprob: -9.902366638183594
    9. '1' → logprob: -10.277366638183594
    10. '(max' → logprob: -10.902366638183594

Token 628: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09913758933544159
    2. '(' → logprob: -2.849137544631958
    3. '(h' → logprob: -3.724137544631958
    4. '(b' → logprob: -5.224137783050537
    5. ' +' → logprob: -5.849137783050537
    6. '1' → logprob: -6.099137783050537
    7. '),' → logprob: -7.599137783050537
    8. '   ' → logprob: -7.974137783050537
    9. 'h' → logprob: -8.224137306213379
    10. '0' → logprob: -8.349137306213379

Token 629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030821673572063446
    2. 'h' → logprob: -6.253082275390625
    3. '0' → logprob: -7.878082275390625
    4. 'bh' → logprob: -8.003082275390625
    5. '(' → logprob: -9.628082275390625
    6. 'b' → logprob: -9.628082275390625
    7. 'w' → logprob: -9.628082275390625
    8. '
' → logprob: -10.003082275390625
    9. ' ' → logprob: -10.253082275390625
    10. '(h' → logprob: -10.253082275390625

Token 630: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.08567831665277481
    2. ',' → logprob: -2.8356783390045166
    3. '(h' → logprob: -3.9606783390045166
    4. ',h' → logprob: -6.0856781005859375
    5. '+' → logprob: -7.2106781005859375
    6. ' ' → logprob: -8.585678100585938
    7. '   ' → logprob: -8.585678100585938
    8. '1' → logprob: -8.710678100585938
    9. '(' → logprob: -8.835678100585938
    10. ',b' → logprob: -9.210678100585938

Token 631: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023250484839081764
    2. ' range' → logprob: -3.7732505798339844
    3. '(range' → logprob: -12.898250579833984
    4. '   ' → logprob: -13.273250579833984
    5. 'w' → logprob: -15.773250579833984
    6. '       ' → logprob: -16.273250579833984
    7. ' ' → logprob: -16.398250579833984
    8. '    ' → logprob: -16.523250579833984
    9. '
' → logprob: -16.773250579833984
    10. '                           ' → logprob: -16.898250579833984

Token 632: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.00011510594777064398
    2. 'w' → logprob: -9.125115394592285
    3. '(' → logprob: -12.500115394592285
    4. ' (' → logprob: -14.000115394592285
    5. '   ' → logprob: -14.375115394592285
    6. '((' → logprob: -15.875115394592285
    7. '(W' → logprob: -16.00011444091797
    8. '1' → logprob: -16.12511444091797
    9. '<w' → logprob: -16.12511444091797
    10. '(b' → logprob: -16.25011444091797

Token 633: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.538490950129926e-05
    2. ' +' → logprob: -10.625055313110352
    3. ')):
' → logprob: -11.125055313110352
    4. '1' → logprob: -12.250055313110352
    5. '),' → logprob: -12.500055313110352
    6. '```' → logprob: -13.875055313110352
    7. ')),' → logprob: -14.000055313110352
    8. '()+' → logprob: -14.125055313110352
    9. '0' → logprob: -14.375055313110352
    10. '):
' → logprob: -14.375055313110352

Token 634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7385154428193346e-05
    2. ' ' → logprob: -10.87503719329834
    3. '+' → logprob: -11.37503719329834
    4. 'w' → logprob: -12.50003719329834
    5. '(w' → logprob: -13.87503719329834
    6. '(' → logprob: -14.12503719329834
    7. 'bw' → logprob: -14.37503719329834
    8. '   ' → logprob: -15.00003719329834
    9. '(b' → logprob: -15.87503719329834
    10. 'b' → logprob: -16.125038146972656

Token 635: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014423212967813015
    2. '):' → logprob: -4.264423370361328
    3. ',' → logprob: -9.139423370361328
    4. '):
' → logprob: -9.514423370361328
    5. '   ' → logprob: -10.389423370361328
    6. '):

' → logprob: -10.889423370361328
    7. '()):
' → logprob: -11.139423370361328
    8. '():
' → logprob: -12.139423370361328
    9. ' ):
' → logprob: -13.014423370361328
    10. '),' → logprob: -13.139423370361328

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6166903151315637e-05
    2. '```' → logprob: -12.125016212463379
    3. '   ' → logprob: -12.750016212463379
    4. ',' → logprob: -12.875016212463379
    5. '           ' → logprob: -13.250016212463379
    6. 'sol' → logprob: -13.750016212463379
    7. ':' → logprob: -14.750016212463379
    8. '<|end|>' → logprob: -15.125016212463379
    9. ')' → logprob: -15.500016212463379
    10. '               ' → logprob: -15.625016212463379

Token 637: ' sol' (ID: 1887)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3562737703323364
    2. 'sol' (adapté à ' sol') → logprob: -1.7312737703323364
    3. '           ' → logprob: -4.106273651123047
    4. 'val' → logprob: -4.106273651123047
    5. ' sol' → logprob: -4.481273651123047
    6. 'coef' → logprob: -4.481273651123047
    7. 'temp' → logprob: -4.606273651123047
    8. 'coeff' → logprob: -4.606273651123047
    9. 'res' → logprob: -4.731273651123047
    10. 'tmp' → logprob: -4.731273651123047

Token 638: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.23717638850212097
    2. '+=' → logprob: -1.6121764183044434
    3. '=' → logprob: -4.987176418304443
    4. ' =' → logprob: -5.362176418304443
    5. '   ' → logprob: -9.612175941467285
    6. '       ' → logprob: -10.237175941467285
    7. '+=(' → logprob: -10.237175941467285
    8. ']+=' → logprob: -11.612175941467285
    9. '```' → logprob: -11.737175941467285
    10. '+' → logprob: -12.237175941467285

Token 639: ' (' (ID: 350)
  Prédit: '(sol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sol' → logprob: -0.07145912200212479
    2. ' (' → logprob: -2.6964590549468994
    3. '       ' → logprob: -7.0714592933654785
    4. '(s' → logprob: -8.82145881652832
    5. '(' → logprob: -8.94645881652832
    6. '   ' → logprob: -9.32145881652832
    7. '(mod' → logprob: -9.44645881652832
    8. '           ' → logprob: -10.32145881652832
    9. '(solution' → logprob: -10.32145881652832
    10. '(S' → logprob: -10.57145881652832

Token 640: 'sol' (ID: 4399)
  Prédit: 'sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -0.0060144755989313126
    2. '(sol' → logprob: -5.131014347076416
    3. ' sol' → logprob: -9.881014823913574
    4. '       ' → logprob: -11.381014823913574
    5. '(s' → logprob: -11.631014823913574
    6. '           ' → logprob: -12.131014823913574
    7. '   ' → logprob: -12.756014823913574
    8. 'solute' → logprob: -13.756014823913574
    9. '(' → logprob: -13.881014823913574
    10. ' (' → logprob: -13.881014823913574

Token 641: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269354522228241
    2. '+' → logprob: -2.1269354820251465
    3. ' ' → logprob: -12.501935005187988
    4. ' +
' → logprob: -13.876935005187988
    5. '+
' → logprob: -14.126935005187988
    6. '
' → logprob: -14.501935005187988
    7. '```' → logprob: -15.501935005187988
    8. ' ' → logprob: -15.626935005187988
    9. '+s' → logprob: -15.751935005187988
    10. '+(' → logprob: -16.001935958862305

Token 642: ' rect' (ID: 13107)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.2532072961330414
    2. 'calc' → logprob: -2.003207206726074
    3. 'CA' → logprob: -3.628207206726074
    4. ' Com' → logprob: -4.253207206726074
    5. 'rect' → logprob: -4.378207206726074
    6. 'comb' → logprob: -4.753207206726074
    7. ' calc' → logprob: -5.003207206726074
    8. 'prod' → logprob: -5.253207206726074
    9. 'Comb' → logprob: -5.628207206726074
    10. 'com' → logprob: -6.253207206726074

Token 643: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0025019366294145584
    2. '(h' → logprob: -6.002501964569092
    3. '(' → logprob: -11.377501487731934
    4. '(B' → logprob: -12.127501487731934
    5. 'bh' → logprob: -12.627501487731934
    6. '((' → logprob: -13.127501487731934
    7. ' (' → logprob: -13.127501487731934
    8. '(H' → logprob: -14.002501487731934
    9. '   ' → logprob: -14.627501487731934
    10. '(bl' → logprob: -15.877501487731934

Token 644: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04034368321299553
    2. 'bh' → logprob: -3.665343761444092
    3. ',h' → logprob: -5.040343761444092
    4. ',' → logprob: -5.415343761444092
    5. '(h' → logprob: -6.165343761444092
    6. ',b' → logprob: -7.415343761444092
    7. '(b' → logprob: -9.165343284606934
    8. '_h' → logprob: -9.790343284606934
    9. ')' → logprob: -10.415343284606934
    10. '[h' → logprob: -10.665343284606934

Token 645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10775547474622726
    2. ',w' → logprob: -2.357755422592163
    3. ',h' → logprob: -5.232755661010742
    4. ',b' → logprob: -6.482755661010742
    5. ' ,' → logprob: -7.482755661010742
    6. '```' → logprob: -10.607755661010742
    7. 'w' → logprob: -10.982755661010742
    8. ',s' → logprob: -12.107755661010742
    9. ',k' → logprob: -12.357755661010742
    10. '(w' → logprob: -12.482755661010742

Token 646: ' w' (ID: 286)
  Prédit: 'bw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bw' → logprob: -5.676981345459353e-06
    2. ' bw' → logprob: -12.250005722045898
    3. ' ' → logprob: -14.875005722045898
    4. '   ' → logprob: -15.000005722045898
    5. '	bw' → logprob: -15.875005722045898
    6. '  ' → logprob: -17.3750057220459
    7. 'b' → logprob: -17.8750057220459
    8. '    ' → logprob: -18.7500057220459
    9. '
' → logprob: -19.2500057220459
    10. '     ' → logprob: -19.5000057220459

Token 647: '-b' (ID: 2118)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09879898279905319
    2. ')*' → logprob: -2.723798990249634
    3. '-b' → logprob: -3.723798990249634
    4. '))' → logprob: -6.473798751831055
    5. '-' → logprob: -6.848798751831055
    6. ' -' → logprob: -7.223798751831055
    7. '-w' → logprob: -8.098798751831055
    8. '   ' → logprob: -8.598798751831055
    9. ')*(' → logprob: -9.223798751831055
    10. ')
' → logprob: -9.348798751831055

Token 648: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.73052782076411e-05
    2. 'bw' → logprob: -10.000067710876465
    3. ')' → logprob: -11.875067710876465
    4. '```' → logprob: -12.375067710876465
    5. ' bw' → logprob: -12.625067710876465
    6. ' w' → logprob: -13.000067710876465
    7. '
' → logprob: -14.000067710876465
    8. '   ' → logprob: -14.375067710876465
    9. '
' → logprob: -14.625067710876465
    10. '``' → logprob: -14.875067710876465

Token 649: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.5777478814125061
    2. ')' → logprob: -0.8277478814125061
    3. ')%' → logprob: -6.577747821807861
    4. '   ' → logprob: -8.82774829864502
    5. '))' → logprob: -8.82774829864502
    6. ')*(' → logprob: -9.57774829864502
    7. ' )' → logprob: -10.95274829864502
    8. ' ' → logprob: -12.20274829864502
    9. '))*' → logprob: -12.20274829864502
    10. ')
' → logprob: -12.45274829864502

Token 650: 'rect' (ID: 4104)
  Prédit: 'rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.07929698377847672
    2. 'calc' → logprob: -2.5792970657348633
    3. 'comb' → logprob: -9.079297065734863
    4. 'Com' → logprob: -9.579297065734863
    5. 'com' → logprob: -9.704297065734863
    6. ' rect' → logprob: -9.829297065734863
    7. ' calc' → logprob: -10.954297065734863
    8. '   ' → logprob: -11.329297065734863
    9. 'cal' → logprob: -11.704297065734863
    10. '(rect' → logprob: -12.141797065734863

Token 651: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.000851201475597918
    2. 'h' → logprob: -7.125851154327393
    3. ' (' → logprob: -10.37585163116455
    4. '(' → logprob: -11.87585163116455
    5. '((' → logprob: -13.00085163116455
    6. '(b' → logprob: -13.50085163116455
    7. '
' → logprob: -13.62585163116455
    8. '   ' → logprob: -14.00085163116455
    9. '(
' → logprob: -14.12585163116455
    10. '```' → logprob: -14.12585163116455

Token 652: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.0193734560161829
    2. ' -' → logprob: -4.144373416900635
    3. '-' → logprob: -5.769373416900635
    4. '-h' → logprob: -9.519373893737793
    5. 'bh' → logprob: -10.019373893737793
    6. '   ' → logprob: -10.644373893737793
    7. '-B' → logprob: -10.769373893737793
    8. ' ' → logprob: -11.269373893737793
    9. ' bh' → logprob: -11.894373893737793
    10. '-
' → logprob: -12.144373893737793

Token 653: 'h' (ID: 71)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.29367145895957947
    2. 'h' → logprob: -1.4186714887619019
    3. 'bw' → logprob: -4.668671607971191
    4. 'bh' → logprob: -6.168671607971191
    5. 'b' → logprob: -7.293671607971191
    6. '-b' → logprob: -9.543671607971191
    7. ' bw' → logprob: -10.043671607971191
    8. 'wh' → logprob: -10.668671607971191
    9. '
' → logprob: -10.793671607971191
    10. '(b' → logprob: -10.918671607971191

Token 654: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38718050718307495
    2. ',b' → logprob: -1.1371805667877197
    3. ' ,' → logprob: -8.26218032836914
    4. ',
' → logprob: -10.63718032836914
    5. '   ' → logprob: -11.38718032836914
    6. ',w' → logprob: -12.63718032836914
    7. ',r' → logprob: -12.88718032836914
    8. ' ' → logprob: -13.38718032836914
    9. ',p' → logprob: -13.76218032836914
    10. ',h' → logprob: -14.01218032836914

Token 655: ' bw' (ID: 20824)
  Prédit: 'bw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bw' → logprob: -2.1888679839321412e-05
    2. ' bw' → logprob: -10.875021934509277
    3. '   ' → logprob: -13.625021934509277
    4. '	bw' → logprob: -14.000021934509277
    5. 'b' → logprob: -14.500021934509277
    6. ' ' → logprob: -15.625021934509277
    7. '
' → logprob: -17.25002098083496
    8. 'bh' → logprob: -17.25002098083496
    9. '           ' → logprob: -17.50002098083496
    10. '               ' → logprob: -17.62502098083496

Token 656: ')%' (ID: 57656)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.14937925338745117
    2. ')%' → logprob: -2.024379253387451
    3. ')' → logprob: -5.024379253387451
    4. '   ' → logprob: -9.89937973022461
    5. '%' → logprob: -10.64937973022461
    6. ')*' → logprob: -11.64937973022461
    7. '       ' → logprob: -12.52437973022461
    8. ']%' → logprob: -12.89937973022461
    9. ')
' → logprob: -13.14937973022461
    10. '           ' → logprob: -13.27437973022461

Token 657: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.643152740551159e-05
    2. ' mod' → logprob: -10.250036239624023
    3. '(mod' → logprob: -14.875036239624023
    4. '
' → logprob: -15.750036239624023
    5. ' ' → logprob: -16.125036239624023
    6. '   ' → logprob: -16.375036239624023
    7. '```' → logprob: -16.375036239624023
    8. 'm' → logprob: -16.875036239624023
    9. '	mod' → logprob: -17.000036239624023
    10. '           ' → logprob: -17.125036239624023

Token 658: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1013960912823677
    2. ')%' → logprob: -2.351396083831787
    3. '   ' → logprob: -6.851396083831787
    4. ' )' → logprob: -9.226396560668945
    5. '       ' → logprob: -10.476396560668945
    6. '%' → logprob: -13.226396560668945
    7. '  ' → logprob: -14.476396560668945
    8. '*' → logprob: -14.601396560668945
    9. '    ' → logprob: -14.601396560668945
    10. '```' → logprob: -15.351396560668945

Token 659: 'Com' (ID: 1059)
  Prédit: 'Com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.00011856284982059151
    2. ' Com' → logprob: -9.875118255615234
    3. 'Comb' → logprob: -10.750118255615234
    4. 'pow' → logprob: -11.125118255615234
    5. 'com' → logprob: -11.375118255615234
    6. 'COM' → logprob: -11.875118255615234
    7. '   ' → logprob: -12.625118255615234
    8. 'prod' → logprob: -13.375118255615234
    9. 'CA' → logprob: -14.250118255615234
    10. 'C' → logprob: -14.375118255615234

Token 660: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -1.2113979209971149e-05
    2. 'Bi' → logprob: -11.750012397766113
    3. 'b' → logprob: -13.000012397766113
    4. 'BI' → logprob: -14.750012397766113
    5. 'pi' → logprob: -15.000012397766113
    6. ' bi' → logprob: -15.000012397766113
    7. 'i' → logprob: -15.625012397766113
    8. '(' → logprob: -16.125011444091797
    9. 'vi' → logprob: -16.125011444091797
    10. '(b' → logprob: -16.375011444091797

Token 661: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0011004453990608454
    2. 'h' → logprob: -6.876100540161133
    3. '(b' → logprob: -10.251100540161133
    4. '(' → logprob: -10.501100540161133
    5. '(
' → logprob: -13.126100540161133
    6. '((' → logprob: -13.751100540161133
    7. 'bh' → logprob: -14.751100540161133
    8. ',h' → logprob: -15.251100540161133
    9. '(hw' → logprob: -15.501100540161133
    10. '[h' → logprob: -16.126100540161133

Token 662: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.01719764433801174
    2. 'h' → logprob: -4.142197608947754
    3. ',h' → logprob: -7.142197608947754
    4. '(' → logprob: -8.517197608947754
    5. '(b' → logprob: -9.267197608947754
    6. ')(' → logprob: -10.767197608947754
    7. '(w' → logprob: -11.267197608947754
    8. ')' → logprob: -11.392197608947754
    9. '(
' → logprob: -11.517197608947754
    10. ',' → logprob: -11.767197608947754

Token 663: ' bh' (ID: 11387)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bh' → logprob: -7.052377623040229e-05
    2. ' bh' → logprob: -9.625070571899414
    3. 'h' → logprob: -12.375070571899414
    4. '   ' → logprob: -16.125070571899414
    5. ' ' → logprob: -17.000070571899414
    6. 'b' → logprob: -17.125070571899414
    7. '
' → logprob: -18.000070571899414
    8. 'hb' → logprob: -18.000070571899414
    9. '```' → logprob: -18.750070571899414
    10. 'BH' → logprob: -19.000070571899414

Token 664: ')%' (ID: 57656)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.1743844449520111
    2. ')' → logprob: -1.9243844747543335
    3. '))' → logprob: -4.299384593963623
    4. ')%' → logprob: -8.674384117126465
    5. ')*(' → logprob: -8.924384117126465
    6. '))*' → logprob: -9.174384117126465
    7. '   ' → logprob: -10.924384117126465
    8. ')+' → logprob: -11.049384117126465
    9. '       ' → logprob: -11.799384117126465
    10. ')\' → logprob: -12.049384117126465

Token 665: 'mod' (ID: 4847)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.0009175319573841989
    2. 'mod' → logprob: -7.625917434692383
    3. ' Com' → logprob: -7.875917434692383
    4. 'com' → logprob: -11.750917434692383
    5. 'Mod' → logprob: -11.750917434692383
    6. '(' → logprob: -11.875917434692383
    7. '   ' → logprob: -11.875917434692383
    8. '           ' → logprob: -12.375917434692383
    9. '(mod' → logprob: -12.875917434692383
    10. '_Com' → logprob: -13.125917434692383

Token 666: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5490790009498596
    2. ')%' → logprob: -1.2990789413452148
    3. '%' → logprob: -2.049078941345215
    4. ')' → logprob: -3.924078941345215
    5. ' %' → logprob: -8.174078941345215
    6. '       ' → logprob: -8.174078941345215
    7. ' *' → logprob: -8.299078941345215
    8. '   ' → logprob: -8.549078941345215
    9. ')*' → logprob: -10.424078941345215
    10. '*(' → logprob: -10.549078941345215

Token 667: 'Com' (ID: 1059)
  Prédit: 'Com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -1.0445127372804563e-05
    2. ' Com' → logprob: -11.62501049041748
    3. 'com' → logprob: -14.25001049041748
    4. '   ' → logprob: -14.50001049041748
    5. '       ' → logprob: -16.375009536743164
    6. '           ' → logprob: -17.125009536743164
    7. '(' → logprob: -17.250009536743164
    8. 'Comb' → logprob: -17.250009536743164
    9. 'COM' → logprob: -17.375009536743164
    10. '_Com' → logprob: -18.125009536743164

Token 668: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -1.843177233240567e-05
    2. 'b' → logprob: -12.250018119812012
    3. 'pi' → logprob: -12.500018119812012
    4. 'Bi' → logprob: -12.875018119812012
    5. 'wi' → logprob: -13.000018119812012
    6. 'vi' → logprob: -14.375018119812012
    7. 'i' → logprob: -14.500018119812012
    8. 'bin' → logprob: -14.875018119812012
    9. ' bi' → logprob: -15.000018119812012
    10. '(w' → logprob: -15.000018119812012

Token 669: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -8.900034299585968e-05
    2. 'w' → logprob: -9.375088691711426
    3. '(' → logprob: -12.500088691711426
    4. '   ' → logprob: -15.000088691711426
    5. '  ' → logprob: -17.375089645385742
    6. '(
' → logprob: -17.625089645385742
    7. '	w' → logprob: -17.625089645385742
    8. '(h' → logprob: -17.875089645385742
    9. ' (' → logprob: -18.375089645385742
    10. '(W' → logprob: -18.500089645385742

Token 670: ',' (ID: 11)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0027644599322229624
    2. ',' → logprob: -6.2527642250061035
    3. 'w' → logprob: -8.002764701843262
    4. '(' → logprob: -8.252764701843262
    5. ',w' → logprob: -8.377764701843262
    6. ' (' → logprob: -12.377764701843262
    7. '   ' → logprob: -13.127764701843262
    8. '(b' → logprob: -13.377764701843262
    9. '```' → logprob: -14.752764701843262
    10. ' ,' → logprob: -15.127764701843262

Token 671: ' bw' (ID: 20824)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005449801217764616
    2. ' w' → logprob: -5.7554497718811035
    3. 'bw' → logprob: -6.2554497718811035
    4. '(w' → logprob: -8.255450248718262
    5. '   ' → logprob: -10.255450248718262
    6. ' bw' → logprob: -10.505450248718262
    7. 'b' → logprob: -11.505450248718262
    8. '       ' → logprob: -13.130450248718262
    9. '    ' → logprob: -13.255450248718262
    10. ''w' → logprob: -13.380450248718262

Token 672: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.06492568552494049
    2. '%' → logprob: -2.8149256706237793
    3. ')' → logprob: -6.689925670623779
    4. '       ' → logprob: -7.064925670623779
    5. '   ' → logprob: -7.689925670623779
    6. ' %' → logprob: -8.064926147460938
    7. ']%' → logprob: -9.939926147460938
    8. '           ' → logprob: -10.939926147460938
    9. '```' → logprob: -12.439926147460938
    10. '        ' → logprob: -12.939926147460938

Token 673: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.3902033970225602e-05
    2. 'sol' → logprob: -11.375014305114746
    3. ' mod' → logprob: -13.750014305114746
    4. '```' → logprob: -14.875014305114746
    5. '
' → logprob: -15.750014305114746
    6. '0' → logprob: -15.750014305114746
    7. '(mod' → logprob: -15.750014305114746
    8. '   ' → logprob: -16.37501335144043
    9. '%' → logprob: -16.50001335144043
    10. '	mod' → logprob: -16.75001335144043

Token 674: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04903865233063698
    2. ')%' → logprob: -3.0490386486053467
    3. '   ' → logprob: -8.049038887023926
    4. ' )' → logprob: -9.299038887023926
    5. '       ' → logprob: -10.674038887023926
    6. '%' → logprob: -11.174038887023926
    7. '    ' → logprob: -14.299038887023926
    8. '')' → logprob: -14.799038887023926
    9. '```' → logprob: -14.799038887023926
    10. '  ' → logprob: -15.424038887023926

Token 675: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.320199877838604e-07
    2. ' mod' → logprob: -15.0
    3. '(mod' → logprob: -16.375
    4. ' ' → logprob: -18.25
    5. '```' → logprob: -18.875
    6. '	mod' → logprob: -19.125
    7. '
' → logprob: -19.375
    8. '998' → logprob: -20.5
    9. '``' → logprob: -21.25
    10. '   ' → logprob: -21.75

Token 676: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004237627435941249
    2. '
' → logprob: -8.250423431396484
    3. ',' → logprob: -10.625423431396484
    4. ' return' → logprob: -10.625423431396484
    5. ')' → logprob: -10.750423431396484
    6. 'return' → logprob: -10.875423431396484
    7. '    
' → logprob: -10.875423431396484
    8. ')
' → logprob: -11.375423431396484
    9. '```' → logprob: -11.500423431396484
    10. 'CA' → logprob: -11.625423431396484

Token 677: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031651611789129674
    2. 'CA' → logprob: -8.375316619873047
    3. '
' → logprob: -9.750316619873047
    4. '<|end|>' → logprob: -11.875316619873047
    5. ' CA' → logprob: -12.000316619873047
    6. ' return' → logprob: -12.375316619873047
    7. ',' → logprob: -13.250316619873047
    8. ' ' → logprob: -13.375316619873047
    9. '```' → logprob: -13.375316619873047
    10. '  ' → logprob: -13.625316619873047

Token 678: ' CA' (ID: 13180)
  Prédit: 'CA'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' (adapté à ' CA') → logprob: -0.03805079311132431
    2. '   ' → logprob: -3.288050889968872
    3. ' CA' → logprob: -11.663050651550293
    4. '
' → logprob: -15.663050651550293
    5. ' ' → logprob: -15.663050651550293
    6. 'return' → logprob: -16.28805160522461
    7. '  ' → logprob: -16.41305160522461
    8. 'ca' → logprob: -16.66305160522461
    9. '_CA' → logprob: -16.78805160522461
    10. '    
' → logprob: -17.91305160522461

Token 679: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.1994775377388578e-05
    2. '[((' → logprob: -11.625012397766113
    3. '[' → logprob: -13.125012397766113
    4. '[
' → logprob: -14.625012397766113
    5. '.setdefault' → logprob: -15.375012397766113
    6. ' [(' → logprob: -16.125011444091797
    7. '[...]' → logprob: -16.125011444091797
    8. '=' → logprob: -17.250011444091797
    9. '```' → logprob: -17.250011444091797
    10. '={(' → logprob: -17.500011444091797

Token 680: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.5048530030981055e-06
    2. ' h' → logprob: -14.000001907348633
    3. '(h' → logprob: -14.625001907348633
    4. ',h' → logprob: -16.250001907348633
    5. 'H' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.625001907348633
    7. ''h' → logprob: -17.750001907348633
    8. ',' → logprob: -17.750001907348633
    9. '"h' → logprob: -18.000001907348633
    10. '	h' → logprob: -18.750001907348633

Token 681: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.014263410121202469
    2. ',' → logprob: -4.26426362991333
    3. ' ,' → logprob: -9.514263153076172
    4. ',h' → logprob: -11.389263153076172
    5. 'w' → logprob: -12.264263153076172
    6. ',W' → logprob: -13.139263153076172
    7. '   ' → logprob: -13.889263153076172
    8. '[' → logprob: -14.139263153076172
    9. '),(' → logprob: -14.264263153076172
    10. ')]' → logprob: -14.264263153076172

Token 682: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.051012709736824036
    2. ')]' → logprob: -3.0510127544403076
    3. ')' → logprob: -6.0510125160217285
    4. ']=' → logprob: -10.301012992858887
    5. '])' → logprob: -10.676012992858887
    6. '   ' → logprob: -12.051012992858887
    7. ']
' → logprob: -14.051012992858887
    8. '=' → logprob: -14.051012992858887
    9. ' ]' → logprob: -14.176012992858887
    10. ']=(' → logprob: -14.801012992858887

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001584850688232109
    2. ' =' → logprob: -8.750158309936523
    3. '=
' → logprob: -20.000158309936523
    4. '＝' → logprob: -20.125158309936523
    5. ']=' → logprob: -20.875158309936523
    6. '   ' → logprob: -21.750158309936523
    7. '.=' → logprob: -21.750158309936523
    8. '=}' → logprob: -21.875158309936523
    9. 'return' → logprob: -22.000158309936523
    10. ']' → logprob: -22.125158309936523

Token 684: ' sol' (ID: 1887)
  Prédit: 'sol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -0.0002615742268972099
    2. ' sol' → logprob: -8.250261306762695
    3. '(sol' → logprob: -15.250261306762695
    4. 'sal' → logprob: -19.375261306762695
    5. 'solute' → logprob: -19.625261306762695
    6. 'solution' → logprob: -19.750261306762695
    7. '_sol' → logprob: -19.750261306762695
    8. 'sel' → logprob: -19.875261306762695
    9. 'Sol' → logprob: -20.500261306762695
    10. '
' → logprob: -20.750261306762695

Token 685: '%' (ID: 4)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029934808611869812
    2. 'return' → logprob: -3.529934883117676
    3. ' return' → logprob: -8.904934883117676
    4. '	return' → logprob: -10.779934883117676
    5. '
' → logprob: -10.904934883117676
    6. '  ' → logprob: -13.154934883117676
    7. '```' → logprob: -13.279934883117676
    8. '    
' → logprob: -13.529934883117676
    9. ':return' → logprob: -13.904934883117676
    10. ' ' → logprob: -13.904934883117676

Token 686: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -5.512236498361744e-07
    2. ' mod' → logprob: -14.750000953674316
    3. 'sol' → logprob: -17.0
    4. '(mod' → logprob: -17.125
    5. '0' → logprob: -17.25
    6. '```' → logprob: -17.625
    7. '
' → logprob: -19.0
    8. ' ' → logprob: -19.125
    9. '	mod' → logprob: -19.125
    10. '``' → logprob: -19.25

Token 687: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014214749448001385
    2. 'return' → logprob: -4.264214515686035
    3. ' return' → logprob: -10.139214515686035
    4. '
' → logprob: -12.389214515686035
    5. '	return' → logprob: -13.014214515686035
    6. '```' → logprob: -13.139214515686035
    7. '  ' → logprob: -13.764214515686035
    8. 'def' → logprob: -14.514214515686035
    9. ' ' → logprob: -14.639214515686035
    10. '    
' → logprob: -14.639214515686035

Token 688: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029079480096697807
    2. '   ' → logprob: -3.6540794372558594
    3. 'print' → logprob: -6.904079437255859
    4. '```' → logprob: -7.279079437255859
    5. '<|end|>' → logprob: -7.779079437255859
    6. ' return' → logprob: -8.65407943725586
    7. 'def' → logprob: -9.27907943725586
    8. '
' → logprob: -9.27907943725586
    9. ')' → logprob: -9.77907943725586
    10. '	return' → logprob: -9.90407943725586

Token 689: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001358209759928286
    2. '   ' → logprob: -6.6263580322265625
    3. ' return' → logprob: -10.376358032226562
    4. '	return' → logprob: -14.751358032226562
    5. 'def' → logprob: -15.876358032226562
    6. '```' → logprob: -15.876358032226562
    7. 'Return' → logprob: -16.376358032226562
    8. '{return' → logprob: -17.001358032226562
    9. '<|end|>' → logprob: -17.001358032226562
    10. 'eturn' → logprob: -17.251358032226562

Token 690: ' CA' (ID: 13180)
  Prédit: 'sol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -0.005845242645591497
    2. 'CA' → logprob: -5.255845069885254
    3. ' sol' → logprob: -7.505845069885254
    4. ' CA' → logprob: -10.130845069885254
    5. '(sol' → logprob: -10.755845069885254
    6. 'ca' → logprob: -15.880845069885254
    7. 'solution' → logprob: -17.50584602355957
    8. 'solute' → logprob: -17.88084602355957
    9. '   ' → logprob: -18.00584602355957
    10. '_CA' → logprob: -18.38084602355957

Token 691: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.006019094958901405
    2. '<|end|>' → logprob: -5.506019115447998
    3. '((' → logprob: -6.631019115447998
    4. '(' → logprob: -8.13101863861084
    5. '.get' → logprob: -8.75601863861084
    6. '.setdefault' → logprob: -9.88101863861084
    7. ' (' → logprob: -10.88101863861084
    8. ',(' → logprob: -11.00601863861084
    9. ',' → logprob: -11.00601863861084
    10. '[' → logprob: -11.25601863861084

Token 692: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.128163257315464e-07
    2. ' h' → logprob: -15.5
    3. ',h' → logprob: -17.75
    4. '(h' → logprob: -17.875
    5. ')' → logprob: -19.875
    6. ',' → logprob: -20.125
    7. '   ' → logprob: -20.25
    8. 'w' → logprob: -20.375
    9. '"h' → logprob: -21.125
    10. '
' → logprob: -21.375

Token 693: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.006773753557354212
    2. 'w' → logprob: -5.006773948669434
    3. ',' → logprob: -10.256773948669434
    4. ')' → logprob: -11.631773948669434
    5. ')]' → logprob: -11.756773948669434
    6. ')][' → logprob: -13.006773948669434
    7. ',h' → logprob: -13.506773948669434
    8. '(w' → logprob: -14.256773948669434
    9. '-w' → logprob: -14.756773948669434
    10. ',(' → logprob: -15.256773948669434

Token 694: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006721630343236029
    2. ']' → logprob: -7.500672340393066
    3. ')' → logprob: -9.125672340393066
    4. ')]
' → logprob: -12.250672340393066
    5. '])' → logprob: -13.625672340393066
    6. '])]' → logprob: -14.000672340393066
    7. ')])' → logprob: -14.000672340393066
    8. '[(' → logprob: -14.625672340393066
    9. '()]' → logprob: -14.750672340393066
    10. ')][' → logprob: -14.750672340393066

Token 695: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2733364999294281
    2. 'result' → logprob: -2.523336410522461
    3. '#' → logprob: -2.648336410522461
    4. 'for' → logprob: -3.898336410522461
    5. '```' → logprob: -3.898336410522461
    6. 'answer' → logprob: -4.273336410522461
    7. '<|end|>' → logprob: -4.398336410522461
    8. 'return' → logprob: -4.648336410522461
    9. ')' → logprob: -5.398336410522461
    10. 'def' → logprob: -6.273336410522461

Token 696: ' Pe' (ID: 6173)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01687430776655674
    2. 'result' → logprob: -4.516874313354492
    3. 'res' → logprob: -5.766874313354492
    4. 'answer' → logprob: -6.516874313354492
    5. 'ans' → logprob: -7.266874313354492
    6. 'for' → logprob: -7.766874313354492
    7. '#' → logprob: -10.891874313354492
    8. 'r' → logprob: -11.641874313354492
    9. 'ret' → logprob: -12.266874313354492
    10. 'pr' → logprob: -12.266874313354492

Token 697: 'uple' (ID: 16616)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.5476647615432739
    2. 'r' → logprob: -1.672664761543274
    3. '#' → logprob: -2.5476646423339844
    4. 'rl' → logprob: -3.1726646423339844
    5. 'n' → logprob: -3.7976646423339844
    6. 'print' → logprob: -4.422664642333984
    7. 'rem' → logprob: -4.922664642333984
    8. 'for' → logprob: -5.047664642333984
    9. 'ld' → logprob: -5.422664642333984
    10. '```' → logprob: -5.422664642333984

Token 698: ' le' (ID: 505)
  Prédit: 'ments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ments' → logprob: -1.1201555728912354
    2. 'def' → logprob: -2.1201555728912354
    3. 'ment' → logprob: -2.1201555728912354
    4. 'nt' → logprob: -2.3701555728912354
    5. 'for' → logprob: -2.3701555728912354
    6. 'ent' → logprob: -3.2451555728912354
    7. '(H' → logprob: -3.2451555728912354
    8. 'r' → logprob: -3.3701555728912354
    9. 'H' → logprob: -3.6201555728912354
    10. '#' → logprob: -4.120155334472656

Token 699: ' cache' (ID: 11956)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.9367420077323914
    2. 'cache' → logprob: -1.3117420673370361
    3. 'CA' → logprob: -1.9367420673370361
    4. 'result' → logprob: -3.436742067337036
    5. 'dict' → logprob: -3.561742067337036
    6. 'dp' → logprob: -3.686742067337036
    7. 'count' → logprob: -4.186741828918457
    8. 'C' → logprob: -4.311741828918457
    9. 'sol' → logprob: -4.311741828918457
    10. 'CACHE' → logprob: -5.186741828918457

Token 700: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.200166469876422e-06
    2. ' for' → logprob: -12.625004768371582
    3. 'calc' → logprob: -14.000004768371582
    4. 'CA' → logprob: -14.125004768371582
    5. 'with' → logprob: -16.7500057220459
    6. 'print' → logprob: -16.8750057220459
    7. '```' → logprob: -16.8750057220459
    8. '[' → logprob: -17.2500057220459
    9. '[(' → logprob: -17.5000057220459
    10. '
' → logprob: -17.6250057220459

Token 701: ' CA' (ID: 13180)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.2022060751914978
    2. 'CA' → logprob: -1.9522061347961426
    3. 'calcul' → logprob: -3.8272061347961426
    4. 'cache' → logprob: -5.202206134796143
    5. 'solutions' → logprob: -5.577206134796143
    6. 'com' → logprob: -6.577206134796143
    7. 'comb' → logprob: -6.702206134796143
    8. '((' → logprob: -7.202206134796143
    9. 'cal' → logprob: -7.327206134796143
    10. 'for' → logprob: -7.577206134796143

Token 702: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.375
    3. '
' → logprob: -17.875
    4. '```' → logprob: -18.375
    5. '``' → logprob: -21.0
    6. 'from' → logprob: -21.25
    7. '[' → logprob: -23.125
    8. 'range' → logprob: -23.125
    9. 'with' → logprob: -23.25
    10. '	for' → logprob: -23.25

Token 703: ' inutile' (ID: 157748)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.896309739408025e-07
    2. ' for' → logprob: -14.500000953674316
    3. '
' → logprob: -16.875
    4. '```' → logprob: -17.125
    5. '#' → logprob: -17.625
    6. '_' → logprob: -19.75
    7. '``' → logprob: -20.0
    8. 'from' → logprob: -20.0
    9. 'max' → logprob: -20.625
    10. '   ' → logprob: -20.75

Token 704: 'ment' (ID: 508)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01004575565457344
    2. '<|end|>' → logprob: -5.010045528411865
    3. ' for' → logprob: -5.760045528411865
    4. '```' → logprob: -9.135046005249023
    5. '
' → logprob: -10.135046005249023
    6. '#' → logprob: -10.760046005249023
    7. 'range' → logprob: -13.510046005249023
    8. '<|end|>' → logprob: -13.510046005249023
    9. ')' → logprob: -14.885046005249023
    10. '...' → logprob: -15.135046005249023

Token 705: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.558399319241289e-05
    2. ' for' → logprob: -10.875025749206543
    3. '```' → logprob: -12.875025749206543
    4. '#' → logprob: -13.125025749206543
    5. '
' → logprob: -13.750025749206543
    6. '<|end|>' → logprob: -14.125025749206543
    7. '_' → logprob: -16.750024795532227
    8. 'range' → logprob: -17.250024795532227
    9. '[' → logprob: -18.000024795532227
    10. '``' → logprob: -18.750024795532227

Token 706: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -12.125005722045898
    3. ' for' → logprob: -15.750005722045898
    4. '[' → logprob: -16.2500057220459
    5. '```' → logprob: -17.3750057220459
    6. '
' → logprob: -17.7500057220459
    7. '_for' → logprob: -19.0000057220459
    8. '[(' → logprob: -19.5000057220459
    9. '_
' → logprob: -19.7500057220459
    10. '    
' → logprob: -19.7500057220459

Token 707: '(map' (ID: 16946)
  Prédit: '(calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(calc' → logprob: -0.5008428692817688
    2. '(range' → logprob: -1.500842809677124
    3. '(product' → logprob: -2.625842809677124
    4. '(map' → logprob: -3.125842809677124
    5. '(rect' → logprob: -3.250842809677124
    6. '(chain' → logprob: -4.375843048095703
    7. '(prod' → logprob: -7.000843048095703
    8. '(c' → logprob: -7.125843048095703
    9. '((' → logprob: -7.125843048095703
    10. '(' → logprob: -7.875843048095703

Token 708: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5759897828102112
    2. '(calc' → logprob: -0.8259897828102112
    3. 'calc' → logprob: -10.950989723205566
    4. '(' → logprob: -11.075989723205566
    5. '(c' → logprob: -11.825989723205566
    6. '((' → logprob: -12.700989723205566
    7. '(rect' → logprob: -13.075989723205566
    8. '(part' → logprob: -13.200989723205566
    9. '(
' → logprob: -14.075989723205566
    10. '(range' → logprob: -14.200989723205566

Token 709: ' ij' (ID: 38172)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.8290817737579346
    2. '(lambda' → logprob: -1.0790817737579346
    3. 'calc' → logprob: -1.5790817737579346
    4. '_' → logprob: -4.3290815353393555
    5. '(calc' → logprob: -5.5790815353393555
    6. ' lambda' → logprob: -8.579081535339355
    7. '   ' → logprob: -9.579081535339355
    8. '_(' → logprob: -9.704081535339355
    9. '_lambda' → logprob: -9.704081535339355
    10. '_calc' → logprob: -10.079081535339355

Token 710: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.496092289686203
    2. '(lambda' → logprob: -0.9960923194885254
    3. ' lambda' → logprob: -4.246092319488525
    4. '=lambda' → logprob: -4.996092319488525
    5. '   ' → logprob: -7.996092319488525
    6. ' (' → logprob: -9.121091842651367
    7. 'ambda' → logprob: -9.371091842651367
    8. '(' → logprob: -9.621091842651367
    9. ':' → logprob: -9.746091842651367
    10. '_lambda' → logprob: -11.871091842651367

Token 711: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.14036300778388977
    2. 'lambda' → logprob: -2.1403629779815674
    3. '(lambda' → logprob: -4.6403632164001465
    4. '(calc' → logprob: -6.5153632164001465
    5. 'CA' → logprob: -6.6403632164001465
    6. '   ' → logprob: -8.265362739562988
    7. ' calc' → logprob: -8.765362739562988
    8. '_' → logprob: -8.890362739562988
    9. 'ca' → logprob: -9.265362739562988
    10. '_calc' → logprob: -9.515362739562988

Token 712: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019240861758589745
    2. '(*' → logprob: -4.394240856170654
    3. '((' → logprob: -5.019240856170654
    4. '(tuple' → logprob: -10.394241333007812
    5. '((*' → logprob: -10.519241333007812
    6. 'ij' → logprob: -10.769241333007812
    7. '(lambda' → logprob: -11.519241333007812
    8. '(*(' → logprob: -12.644241333007812
    9. '*' → logprob: -12.894241333007812
    10. ' (' → logprob: -14.019241333007812

Token 713: 'ij' (ID: 681)
  Prédit: 'ij'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ij' → logprob: -5.2166411478538066e-05
    2. '(' → logprob: -9.875052452087402
    3. ' ij' → logprob: -14.750052452087402
    4. 'ijn' → logprob: -15.625052452087402
    5. 'ijkl' → logprob: -17.375051498413086
    6. 'ijf' → logprob: -18.000051498413086
    7. '   ' → logprob: -18.125051498413086
    8. 'ijk' → logprob: -18.125051498413086
    9. ' (' → logprob: -18.250051498413086
    10. 'tuple' → logprob: -18.750051498413086

Token 714: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007286362233571708
    2. '(range' → logprob: -8.125728607177734
    3. ',(' → logprob: -8.500728607177734
    4. 'range' → logprob: -8.750728607177734
    5. ' ,' → logprob: -10.250728607177734
    6. ',list' → logprob: -12.000728607177734
    7. 'product' → logprob: -12.500728607177734
    8. '((' → logprob: -12.750728607177734
    9. ',
' → logprob: -12.750728607177734
    10. '   ' → logprob: -12.875728607177734

Token 715: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.014342374168336391
    2. '[(' → logprob: -4.264342308044434
    3. ' product' → logprob: -9.139342308044434
    4. '((' → logprob: -10.264342308044434
    5. '(product' → logprob: -10.889342308044434
    6. 'list' → logprob: -11.389342308044434
    7. ' [(' → logprob: -12.889342308044434
    8. '[((' → logprob: -13.639342308044434
    9. 'chain' → logprob: -14.014342308044434
    10. '[' → logprob: -14.264342308044434

Token 716: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.2664456789934775e-06
    2. 'range' → logprob: -13.750000953674316
    3. '((' → logprob: -15.875000953674316
    4. '(' → logprob: -18.500001907348633
    5. '(*' → logprob: -19.875001907348633
    6. ' range' → logprob: -20.125001907348633
    7. '(*(' → logprob: -20.875001907348633
    8. ' (' → logprob: -21.250001907348633
    9. '	range' → logprob: -21.500001907348633
    10. '   ' → logprob: -22.500001907348633

Token 717: '(H' (ID: 20904)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.15075847506523132
    2. '(' → logprob: -2.1507585048675537
    3. '(H' → logprob: -3.7757585048675537
    4. '((' → logprob: -7.525758266448975
    5. '(max' → logprob: -9.775758743286133
    6. '(min' → logprob: -10.775758743286133
    7. '(m' → logprob: -12.775758743286133
    8. '(C' → logprob: -13.400758743286133
    9. '1' → logprob: -13.650758743286133
    10. '(len' → logprob: -14.150758743286133

Token 718: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01776004582643509
    2. '(' → logprob: -4.642760276794434
    3. '(H' → logprob: -4.892760276794434
    4. ' +' → logprob: -8.767760276794434
    5. ',' → logprob: -9.142760276794434
    6. '1' → logprob: -9.642760276794434
    7. '(M' → logprob: -10.017760276794434
    8. '0' → logprob: -10.517760276794434
    9. '),' → logprob: -11.142760276794434
    10. '(+' → logprob: -11.142760276794434

Token 719: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1652737408876419
    2. 'W' → logprob: -1.9152737855911255
    3. '(W' → logprob: -6.290273666381836
    4. '+' → logprob: -6.540273666381836
    5. '0' → logprob: -7.790273666381836
    6. 'H' → logprob: -8.165273666381836
    7. '(' → logprob: -8.290273666381836
    8. '2' → logprob: -8.290273666381836
    9. '(H' → logprob: -8.665273666381836
    10. '21' → logprob: -8.915273666381836

Token 720: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.23639239370822906
    2. ',' → logprob: -1.6113923788070679
    3. '(),' → logprob: -4.611392498016357
    4. '()),' → logprob: -7.611392498016357
    5. ',),' → logprob: -8.7363920211792
    6. ' ,' → logprob: -8.8613920211792
    7. '),(' → logprob: -9.6113920211792
    8. '(' → logprob: -10.1113920211792
    9. '(range' → logprob: -10.4863920211792
    10. ' ),' → logprob: -10.9863920211792

Token 721: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015081972815096378
    2. ' range' → logprob: -6.5015082359313965
    3. '(range' → logprob: -12.126507759094238
    4. '   ' → logprob: -15.876507759094238
    5. '                          ' → logprob: -17.376508712768555
    6. '                           ' → logprob: -17.501508712768555
    7. '                   ' → logprob: -17.626508712768555
    8. '       ' → logprob: -17.751508712768555
    9. '  ' → logprob: -18.001508712768555
    10. '                       ' → logprob: -18.001508712768555

Token 722: '(W' (ID: 26031)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.012179839424788952
    2. 'range' → logprob: -4.762179851531982
    3. '(' → logprob: -6.387179851531982
    4. '(range' → logprob: -6.637179851531982
    5. '(W' → logprob: -8.387179374694824
    6. 'H' → logprob: -8.512179374694824
    7. '1' → logprob: -9.262179374694824
    8. '2' → logprob: -11.262179374694824
    9. ' range' → logprob: -11.512179374694824
    10. '0' → logprob: -12.262179374694824

Token 723: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.226628895296017e-06
    2. '()+' → logprob: -12.875007629394531
    3. '),' → logprob: -13.625007629394531
    4. ')),' → logprob: -14.000007629394531
    5. ' +' → logprob: -14.250007629394531
    6. '(' → logprob: -14.625007629394531
    7. '1' → logprob: -14.875007629394531
    8. ')+' → logprob: -14.875007629394531
    9. '```' → logprob: -14.875007629394531
    10. '))),' → logprob: -16.50000762939453

Token 724: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000826421775855124
    2. '+' → logprob: -7.125826358795166
    3. '2' → logprob: -11.375826835632324
    4. '(' → logprob: -12.250826835632324
    5. ' ' → logprob: -13.750826835632324
    6. '```' → logprob: -13.875826835632324
    7. '11' → logprob: -14.500826835632324
    8. '   ' → logprob: -14.875826835632324
    9. '(H' → logprob: -15.125826835632324
    10. '101' → logprob: -15.125826835632324

Token 725: '))))

' (ID: 161772)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.001745862071402371
    2. '())))' → logprob: -7.251745700836182
    3. '))))' → logprob: -7.626745700836182
    4. ')' → logprob: -7.751745700836182
    5. ')))
' → logprob: -10.12674617767334
    6. '))' → logprob: -10.37674617767334
    7. ')));' → logprob: -10.75174617767334
    8. '),' → logprob: -11.87674617767334
    9. '()' → logprob: -12.62674617767334
    10. ',' → logprob: -12.75174617767334

Token 726: 'ANS' (ID: 18850)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 727: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.402401864528656
    2. '=' → logprob: -1.1524019241333008
    3. '[' → logprob: -4.402401924133301
    4. '=[' → logprob: -6.652401924133301
    5. '[(' → logprob: -7.277401924133301
    6. '<|end|>' → logprob: -7.527401924133301
    7. '(' → logprob: -8.5274019241333
    8. '=[]' → logprob: -9.2774019241333
    9. ' =[' → logprob: -9.4024019241333
    10. '=(' → logprob: -10.2774019241333

Token 728: ' rect' (ID: 13107)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.03537745401263237
    2. ' calc' → logprob: -3.4103775024414062
    3. '(calc' → logprob: -6.910377502441406
    4. '0' → logprob: -7.285377502441406
    5. '(' → logprob: -11.160377502441406
    6. ' ' → logprob: -11.785377502441406
    7. ' (' → logprob: -12.160377502441406
    8. 'sum' → logprob: -12.160377502441406
    9. 'cal' → logprob: -12.410377502441406
    10. '1' → logprob: -13.035377502441406

Token 729: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.018610959872603416
    2. '(' → logprob: -4.018610954284668
    3. '<|end|>' → logprob: -8.143610954284668
    4. '((' → logprob: -10.018610954284668
    5. ' (' → logprob: -10.268610954284668
    6. '
' → logprob: -10.518610954284668
    7. '```' → logprob: -10.768610954284668
    8. 'H' → logprob: -11.893610954284668
    9. ',' → logprob: -12.143610954284668
    10. ' ' → logprob: -12.268610954284668

Token 730: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048682522028684616
    2. ',W' → logprob: -3.048682451248169
    3. ' ,' → logprob: -9.42368221282959
    4. ',H' → logprob: -11.79868221282959
    5. ',
' → logprob: -13.17368221282959
    6. '-' → logprob: -13.42368221282959
    7. 'W' → logprob: -14.17368221282959
    8. ',Q' → logprob: -14.79868221282959
    9. '```' → logprob: -15.17368221282959
    10. ')' → logprob: -15.67368221282959

Token 731: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000989103689789772
    2. '))' → logprob: -7.000988960266113
    3. ')
' → logprob: -10.000988960266113
    4. '())' → logprob: -10.875988960266113
    5. ')))' → logprob: -12.625988960266113
    6. '()' → logprob: -13.000988960266113
    7. ')`' → logprob: -13.125988960266113
    8. ',' → logprob: -13.500988960266113
    9. ' )' → logprob: -13.875988960266113
    10. ')}' → logprob: -14.625988960266113

Token 732: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. 'for' → logprob: -15.0
    3. 'if' → logprob: -16.75
    4. '#print' → logprob: -17.25
    5. ' print' → logprob: -17.5
    6. '```' → logprob: -18.0
    7. '#' → logprob: -18.875
    8. 'ans' → logprob: -19.25
    9. 'pr' → logprob: -20.25
    10. ')' → logprob: -20.625

Token 733: ' bits' (ID: 18189)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006253923289477825
    2. ' main' → logprob: -5.506253719329834
    3. 'solve' → logprob: -6.881253719329834
    4. 'print' → logprob: -7.756253719329834
    5. 'factor' → logprob: -8.381254196166992
    6. 'dfs' → logprob: -8.506254196166992
    7. 'count' → logprob: -10.006254196166992
    8. 'pow' → logprob: -10.506254196166992
    9. 'combine' → logprob: -10.756254196166992
    10. ' solve' → logprob: -11.006254196166992

Token 734: 'count' (ID: 5420)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.08928795903921127
    2. '_set' → logprob: -2.7142879962921143
    3. 'count' → logprob: -5.339287757873535
    4. '_counts' → logprob: -5.964287757873535
    5. '(' → logprob: -6.089287757873535
    6. ')' → logprob: -6.339287757873535
    7. '_pop' → logprob: -6.464287757873535
    8. '_' → logprob: -6.589287757873535
    9. '_mask' → logprob: -7.339287757873535
    10. '(n' → logprob: -7.339287757873535

Token 735: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19175060093402863
    2. '(n' → logprob: -2.0667505264282227
    3. '(x' → logprob: -3.4417505264282227
    4. '(bits' → logprob: -5.191750526428223
    5. '(number' → logprob: -5.691750526428223
    6. '(s' → logprob: -6.691750526428223
    7. '(num' → logprob: -6.816750526428223
    8. '(bit' → logprob: -7.441750526428223
    9. '(value' → logprob: -7.566750526428223
    10. '(a' → logprob: -7.816750526428223

Token 736: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35358333587646484
    2. '(x' → logprob: -1.8535833358764648
    3. '):
' → logprob: -2.103583335876465
    4. ',' → logprob: -4.228583335876465
    5. '   ' → logprob: -6.478583335876465
    6. '(n' → logprob: -7.353583335876465
    7. '(' → logprob: -7.353583335876465
    8. ')' → logprob: -7.603583335876465
    9. 'def' → logprob: -7.728583335876465
    10. '(bits' → logprob: -8.978583335876465

Token 737: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5866734981536865
    2. '   ' → logprob: -0.8366734981536865
    3. 'bin' → logprob: -4.711673736572266
    4. ' return' → logprob: -6.836673736572266
    5. 'x' → logprob: -7.586673736572266
    6. 'def' → logprob: -10.211673736572266
    7. 's' → logprob: -10.336673736572266
    8. '	return' → logprob: -11.086673736572266
    9. 'count' → logprob: -12.211673736572266
    10. 'b' → logprob: -12.586673736572266

Token 738: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0004699954588431865
    2. 'bin' → logprob: -8.000470161437988
    3. '   ' → logprob: -9.250470161437988
    4. ' return' → logprob: -10.250470161437988
    5. 'x' → logprob: -12.875470161437988
    6. '	return' → logprob: -15.250470161437988
    7. '
' → logprob: -15.625470161437988
    8. 'count' → logprob: -17.375469207763672
    9. ' ' → logprob: -17.500469207763672
    10. 'ret' → logprob: -17.875469207763672

Token 739: ' Comp' (ID: 5211)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014482664875686169
    2. 'bin' → logprob: -4.264482498168945
    3. '   ' → logprob: -8.389482498168945
    4. 'def' → logprob: -9.889482498168945
    5. 'x' → logprob: -10.639482498168945
    6. ' return' → logprob: -11.139482498168945
    7. '```' → logprob: -13.514482498168945
    8. '
' → logprob: -14.639482498168945
    9. '	return' → logprob: -15.514482498168945
    10. ' bin' → logprob: -16.014482498168945

Token 740: 'te' (ID: 411)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01853208616375923
    2. 'def' → logprob: -4.0185322761535645
    3. 'ort' → logprob: -8.768531799316406
    4. 'te' → logprob: -10.018531799316406
    5. 'ute' → logprob: -10.393531799316406
    6. 'let' → logprob: -10.518531799316406
    7. 'return' → logprob: -10.643531799316406
    8. 'nt' → logprob: -11.018531799316406
    9. 'lete' → logprob: -11.018531799316406
    10. 'le' → logprob: -11.268531799316406

Token 741: ' le' (ID: 505)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.11673422902822495
    2. 'return' → logprob: -2.866734266281128
    3. 'def' → logprob: -3.116734266281128
    4. 'x' → logprob: -5.616734027862549
    5. '   ' → logprob: -5.616734027862549
    6. ' bin' → logprob: -7.366734027862549
    7. '(x' → logprob: -7.866734027862549
    8. '(bin' → logprob: -8.491734504699707
    9. ' return' → logprob: -8.741734504699707
    10. '=' → logprob: -9.241734504699707

Token 742: ' nombre' (ID: 9733)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.02283913642168045
    2. 'x' → logprob: -4.272839069366455
    3. 'def' → logprob: -5.272839069366455
    4. 'bits' → logprob: -6.147839069366455
    5. 'return' → logprob: -7.647839069366455
    6. ' bin' → logprob: -8.022839546203613
    7. '1' → logprob: -8.397839546203613
    8. '(bin' → logprob: -9.147839546203613
    9. 'bit' → logprob: -9.272839546203613
    10. '
' → logprob: -10.647839546203613

Token 743: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3960047960281372
    2. 'bin' → logprob: -1.5210047960281372
    3. '   ' → logprob: -3.0210046768188477
    4. '=' → logprob: -3.7710046768188477
    5. '(bin' → logprob: -4.021004676818848
    6. 'of' → logprob: -4.771004676818848
    7. '(x' → logprob: -6.521004676818848
    8. '1' → logprob: -6.771004676818848
    9. ' =' → logprob: -6.896004676818848
    10. 'bits' → logprob: -6.896004676818848

Token 744: ' bits' (ID: 18189)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.07697845995426178
    2. '1' → logprob: -2.9519784450531006
    3. 'x' → logprob: -4.32697868347168
    4. ' bin' → logprob: -5.82697868347168
    5. 'return' → logprob: -5.82697868347168
    6. 'def' → logprob: -7.32697868347168
    7. 'bits' → logprob: -7.70197868347168
    8. '```' → logprob: -7.82697868347168
    9. '   ' → logprob: -8.32697868347168
    10. '
' → logprob: -8.45197868347168

Token 745: ' à' (ID: 1221)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.09931419789791107
    2. 'def' → logprob: -3.5993142127990723
    3. 'return' → logprob: -3.7243142127990723
    4. 'x' → logprob: -3.9743142127990723
    5. 'bin' → logprob: -4.099314212799072
    6. '1' → logprob: -6.349314212799072
    7. '```' → logprob: -6.724314212799072
    8. '(bin' → logprob: -6.849314212799072
    9. '(n' → logprob: -6.974314212799072
    10. '   ' → logprob: -7.349314212799072

Token 746: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11476855725049973
    2. 'x' → logprob: -2.3647685050964355
    3. '```' → logprob: -5.2397685050964355
    4. 'set' → logprob: -5.7397685050964355
    5. '(x' → logprob: -5.8647685050964355
    6. 'bin' → logprob: -6.3647685050964355
    7. '
' → logprob: -7.7397685050964355
    8. 'un' → logprob: -8.739768981933594
    9. '`' → logprob: -8.864768981933594
    10. '   ' → logprob: -9.364768981933594

Token 747: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0393831692636013
    2. 'x' → logprob: -3.4143831729888916
    3. '```' → logprob: -5.9143829345703125
    4. 'bin' → logprob: -6.4143829345703125
    5. '
' → logprob: -7.4143829345703125
    6. 'set' → logprob: -7.6643829345703125
    7. '(x' → logprob: -9.664382934570312
    8. 'return' → logprob: -9.664382934570312
    9. '``' → logprob: -9.789382934570312
    10. 'un' → logprob: -10.789382934570312

Token 748: ' de' (ID: 334)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.28231561183929443
    2. 'return' → logprob: -2.532315731048584
    3. 'def' → logprob: -3.032315731048584
    4. '   ' → logprob: -3.157315731048584
    5. '
' → logprob: -3.782315731048584
    6. ' return' → logprob: -4.282315731048584
    7. 'bin' → logprob: -4.407315731048584
    8. '```' → logprob: -4.907315731048584
    9. 'x' → logprob: -5.032315731048584
    10. '(n' → logprob: -5.032315731048584

Token 749: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.073596548754722e-05
    2. ' x' → logprob: -10.00005054473877
    3. 'bin' → logprob: -12.75005054473877
    4. '
' → logprob: -13.62505054473877
    5. '(x' → logprob: -14.62505054473877
    6. '```' → logprob: -15.00005054473877
    7. 'def' → logprob: -15.25005054473877
    8. 'int' → logprob: -15.75005054473877
    9. ' bin' → logprob: -17.125051498413086
    10. '   ' → logprob: -17.875051498413086

Token 750: ' de' (ID: 334)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.8302539587020874
    2. '   ' → logprob: -1.2052539587020874
    3. '(n' → logprob: -1.8302539587020874
    4. 'return' → logprob: -2.955254077911377
    5. 'def' → logprob: -3.955254077911377
    6. '(bin' → logprob: -4.705254077911377
    7. ' return' → logprob: -4.830254077911377
    8. '```' → logprob: -5.455254077911377
    9. 'bin' → logprob: -5.705254077911377
    10. 'n' → logprob: -5.830254077911377

Token 751: ' façon' (ID: 33381)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.02077287621796131
    2. '1' → logprob: -5.145772933959961
    3. 'x' → logprob: -5.395772933959961
    4. 'def' → logprob: -5.520772933959961
    5. ' bin' → logprob: -6.145772933959961
    6. 'return' → logprob: -6.645772933959961
    7. 'b' → logprob: -7.020772933959961
    8. 'int' → logprob: -7.395772933959961
    9. '```' → logprob: -7.395772933959961
    10. '#' → logprob: -8.020772933959961

Token 752: ' dét' (ID: 31931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10869210958480835
    2. 'efficient' → logprob: -2.733692169189453
    3. 'pop' → logprob: -5.108692169189453
    4. 'bin' → logprob: -5.483692169189453
    5. '1' → logprob: -5.608692169189453
    6. 'inline' → logprob: -5.983692169189453
    7. 'builtin' → logprob: -5.983692169189453
    8. '   ' → logprob: -6.108692169189453
    9. 'dé' → logprob: -6.233692169189453
    10. 'b' → logprob: -6.358692169189453

Token 753: 'ourn' (ID: 4727)
  Prédit: 'ermin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ermin' → logprob: -0.2392769455909729
    2. 'erm' → logprob: -2.364276885986328
    3. 'fin' → logprob: -2.489276885986328
    4. 'ected' → logprob: -4.364276885986328
    5. 'ermine' → logprob: -4.864276885986328
    6. 'ective' → logprob: -5.239276885986328
    7. 'ect' → logprob: -6.489276885986328
    8. '```' → logprob: -6.489276885986328
    9. 'def' → logprob: -6.739276885986328
    10. 'efficient' → logprob: -7.114276885986328

Token 754: 'ée' (ID: 2894)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04920344799757004
    2. '   ' → logprob: -3.299203395843506
    3. '```' → logprob: -5.424203395843506
    4. 'ed' → logprob: -6.549203395843506
    5. 'return' → logprob: -6.674203395843506
    6. 'e' → logprob: -6.799203395843506
    7. ' def' → logprob: -7.299203395843506
    8. 'd' → logprob: -8.174203872680664
    9. '``' → logprob: -8.299203872680664
    10. ' return' → logprob: -8.299203872680664

Token 755: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014880888164043427
    2. '
' → logprob: -5.889880657196045
    3. 'return' → logprob: -6.139880657196045
    4. 's' → logprob: -6.264880657196045
    5. 'def' → logprob: -6.389880657196045
    6. '```' → logprob: -6.764880657196045
    7. 'count' → logprob: -6.889880657196045
    8. ' =' → logprob: -6.889880657196045
    9. '=' → logprob: -7.139880657196045
    10. ' return' → logprob: -7.264880657196045

Token 756: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15610839426517487
    2. 'count' → logprob: -2.2811083793640137
    3. 's' → logprob: -4.156108379364014
    4. 'x' → logprob: -5.156108379364014
    5. ' count' → logprob: -5.406108379364014
    6. 'n' → logprob: -5.656108379364014
    7. 'def' → logprob: -6.031108379364014
    8. '```' → logprob: -6.156108379364014
    9. '
' → logprob: -6.656108379364014
    10. 'res' → logprob: -7.031108379364014

Token 757: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06053048372268677
    2. '   ' → logprob: -3.685530424118042
    3. 'count' → logprob: -4.185530662536621
    4. 'c' → logprob: -4.810530662536621
    5. ' return' → logprob: -4.935530662536621
    6. 's' → logprob: -6.810530662536621
    7. 'cnt' → logprob: -6.810530662536621
    8. 'res' → logprob: -8.060530662536621
    9. 'bin' → logprob: -8.560530662536621
    10. 'x' → logprob: -9.060530662536621

Token 758: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -9.567575034452602e-05
    2. 'x' → logprob: -9.75009536743164
    3. ' bin' → logprob: -10.75009536743164
    4. '(bin' → logprob: -11.50009536743164
    5. 'len' → logprob: -13.25009536743164
    6. 'sum' → logprob: -13.50009536743164
    7. '/bin' → logprob: -14.37509536743164
    8. 'pop' → logprob: -14.62509536743164
    9. '(x' → logprob: -15.12509536743164
    10. 'b' → logprob: -15.50009536743164

Token 759: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.1008713702030946e-06
    2. 'x' → logprob: -13.750001907348633
    3. '(' → logprob: -13.875001907348633
    4. '((' → logprob: -18.000001907348633
    5. '(
' → logprob: -18.375001907348633
    6. 'int' → logprob: -19.000001907348633
    7. '(n' → logprob: -19.625001907348633
    8. '(int' → logprob: -19.625001907348633
    9. '(bin' → logprob: -19.625001907348633
    10. 'count' → logprob: -20.500001907348633

Token 760: ').' (ID: 741)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.016124693676829338
    2. ').' → logprob: -4.141124725341797
    3. '(' → logprob: -10.266124725341797
    4. 'x' → logprob: -10.516124725341797
    5. '.count' → logprob: -11.641124725341797
    6. '[x' → logprob: -11.891124725341797
    7. 'count' → logprob: -12.516124725341797
    8. '().' → logprob: -13.141124725341797
    9. '   ' → logprob: -13.391124725341797
    10. ')' → logprob: -13.391124725341797

Token 761: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.125
    3. ' count' → logprob: -17.125
    4. '.count' → logprob: -17.625
    5. '   ' → logprob: -18.875
    6. '
' → logprob: -20.0
    7. '``' → logprob: -20.125
    8. 'replace' → logprob: -20.25
    9. 'bit' → logprob: -20.625
    10. '	count' → logprob: -21.0

Token 762: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04596833512187004
    2. '(' → logprob: -3.7959682941436768
    3. '("' → logprob: -3.7959682941436768
    4. '1' → logprob: -12.295968055725098
    5. '(True' → logprob: -15.045968055725098
    6. ''' → logprob: -15.920968055725098
    7. '(
' → logprob: -16.420969009399414
    8. '("("' → logprob: -16.420969009399414
    9. '()' → logprob: -17.795969009399414
    10. ' ('' → logprob: -18.295969009399414

Token 763: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006028930656611919
    2. '('' → logprob: -5.13102912902832
    3. '(' → logprob: -9.38102912902832
    4. '("' → logprob: -11.38102912902832
    5. ''' → logprob: -12.63102912902832
    6. ')' → logprob: -14.63102912902832
    7. ' ' → logprob: -14.88102912902832
    8. '')' → logprob: -15.38102912902832
    9. '(x' → logprob: -16.50602912902832
    10. 'x' → logprob: -17.00602912902832

Token 764: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6599630117416382
    2. '())' → logprob: -0.9099630117416382
    3. '()' → logprob: -2.5349631309509277
    4. '')' → logprob: -6.659963130950928
    5. '(' → logprob: -11.28496265411377
    6. '")' → logprob: -11.90996265411377
    7. '(x' → logprob: -12.03496265411377
    8. '))' → logprob: -12.53496265411377
    9. ' ())' → logprob: -12.53496265411377
    10. '())
' → logprob: -12.90996265411377

Token 765: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5242765545845032
    2. 'def' → logprob: -1.0242764949798584
    3. 'DP' → logprob: -4.2742767333984375
    4. 'dp' → logprob: -4.6492767333984375
    5. 'mask' → logprob: -5.2742767333984375
    6. 'res' → logprob: -5.3992767333984375
    7. '#' → logprob: -5.8992767333984375
    8. 'Q' → logprob: -6.3992767333984375
    9. 'ans' → logprob: -6.5242767333984375
    10. 'S' → logprob: -6.6492767333984375

Token 766: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049776267260313034
    2. 'def' → logprob: -3.549776315689087
    3. '#' → logprob: -5.174776077270508
    4. 'ans' → logprob: -6.049776077270508
    5. 'Q' → logprob: -6.549776077270508
    6. 'color' → logprob: -6.674776077270508
    7. 'res' → logprob: -6.799776077270508
    8. 'result' → logprob: -6.924776077270508
    9. 'print' → logprob: -6.924776077270508
    10. 'answer' → logprob: -7.674776077270508

Token 767: 'cles' (ID: 10934)
  Prédit: 'cle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.0016797020798549056
    2. 'cles' → logprob: -7.00167989730835
    3. 'c' → logprob: -8.501679420471191
    4. 'for' → logprob: -8.751679420471191
    5. 'cl' → logprob: -8.751679420471191
    6. 'cler' → logprob: -9.501679420471191
    7. 'clé' → logprob: -9.876679420471191
    8. 't' → logprob: -10.376679420471191
    9. 'n' → logprob: -10.501679420471191
    10. 'f' → logprob: -10.876679420471191

Token 768: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00029494395130313933
    2. ' for' → logprob: -8.25029468536377
    3. '
' → logprob: -11.25029468536377
    4. '#' → logprob: -11.62529468536377
    5. 'range' → logprob: -12.25029468536377
    6. 'i' → logprob: -12.87529468536377
    7. '=' → logprob: -13.37529468536377
    8. 'def' → logprob: -14.62529468536377
    9. '```' → logprob: -14.75029468536377
    10. ' =' → logprob: -15.00029468536377

Token 769: ' product' (ID: 1888)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025831198319792747
    2. ' for' → logprob: -4.02583122253418
    3. 'range' → logprob: -6.02583122253418
    4. 'H' → logprob: -6.15083122253418
    5. 'i' → logprob: -6.52583122253418
    6. 'h' → logprob: -6.65083122253418
    7. '```' → logprob: -9.27583122253418
    8. ' H' → logprob: -9.65083122253418
    9. ' range' → logprob: -10.15083122253418
    10. 'ranges' → logprob: -10.15083122253418

Token 770: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01132673118263483
    2. '(range' → logprob: -4.636326789855957
    3. '((' → logprob: -8.136326789855957
    4. '(' → logprob: -8.136326789855957
    5. ' for' → logprob: -8.511326789855957
    6. 'from' → logprob: -8.886326789855957
    7. '(
' → logprob: -9.011326789855957
    8. 'range' → logprob: -9.136326789855957
    9. '```' → logprob: -9.136326789855957
    10. '(for' → logprob: -9.386326789855957

Token 771: ' subtil' (ID: 148776)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3800654709339142
    2. 'i' → logprob: -1.8800654411315918
    3. 'bh' → logprob: -3.630065441131592
    4. 'b' → logprob: -4.255065441131592
    5. 'w' → logprob: -4.255065441131592
    6. 'v' → logprob: -4.630065441131592
    7. 'mask' → logprob: -4.630065441131592
    8. 'r' → logprob: -5.130065441131592
    9. 's' → logprob: -5.380065441131592
    10. ' h' → logprob: -5.380065441131592

Token 772: 'ité' (ID: 3761)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.0651873350143433
    2. 'for' → logprob: -1.3151873350143433
    3. 't' → logprob: -2.440187454223633
    4. '#' → logprob: -2.440187454223633
    5. 'e' → logprob: -2.565187454223633
    6. 'import' → logprob: -3.190187454223633
    7. 'ité' → logprob: -4.065187454223633
    8. 'ités' → logprob: -4.190187454223633
    9. 'from' → logprob: -4.940187454223633
    10. 'y' → logprob: -5.315187454223633

Token 773: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003488762304186821
    2. '(
' → logprob: -6.378488540649414
    3. '
' → logprob: -7.878488540649414
    4. '(' → logprob: -8.378488540649414
    5. 'range' → logprob: -8.503488540649414
    6. '(h' → logprob: -8.503488540649414
    7. '(range' → logprob: -8.753488540649414
    8. '(i' → logprob: -8.878488540649414
    9. '```' → logprob: -9.128488540649414
    10. ' for' → logprob: -9.503488540649414

Token 774: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1994775377388578e-05
    2. 'ans' → logprob: -12.500012397766113
    3. 'result' → logprob: -13.250012397766113
    4. ' for' → logprob: -13.375012397766113
    5. 'res' → logprob: -13.625012397766113
    6. 'from' → logprob: -14.000012397766113
    7. 'answer' → logprob: -14.500012397766113
    8. 'def' → logprob: -14.750012397766113
    9. '#' → logprob: -14.875012397766113
    10. 'rows' → logprob: -15.125012397766113

Token 775: ' i' (ID: 575)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.344638854265213
    2. ' h' → logprob: -1.8446388244628906
    3. 'bh' → logprob: -3.0946388244628906
    4. 'i' → logprob: -3.7196388244628906
    5. ' i' → logprob: -4.594638824462891
    6. '_' → logprob: -5.094638824462891
    7. ' bh' → logprob: -5.094638824462891
    8. 'H' → logprob: -5.344638824462891
    9. 'b' → logprob: -5.469638824462891
    10. '_h' → logprob: -5.844638824462891

Token 776: ',j' (ID: 22712)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12850184738636017
    2. ' in' → logprob: -2.1285018920898438
    3. ',' → logprob: -6.503501892089844
    4. ' ' → logprob: -10.253501892089844
    5. '   ' → logprob: -11.003501892089844
    6. ' ,' → logprob: -12.128501892089844
    7. 'range' → logprob: -12.753501892089844
    8. '_,' → logprob: -13.003501892089844
    9. '(' → logprob: -13.128501892089844
    10. '```' → logprob: -13.128501892089844

Token 777: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11293911933898926
    2. 'in' → logprob: -2.2379391193389893
    3. '   ' → logprob: -9.48793888092041
    4. ' ' → logprob: -11.48793888092041
    5. ')' → logprob: -11.98793888092041
    6. ',' → logprob: -12.36293888092041
    7. '	in' → logprob: -12.48793888092041
    8. '  ' → logprob: -12.61293888092041
    9. '```' → logprob: -12.61293888092041
    10. '
' → logprob: -13.48793888092041

Token 778: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.010053779929876328
    2. 'range' → logprob: -5.135053634643555
    3. ' product' → logprob: -5.510053634643555
    4. ' range' → logprob: -9.635053634643555
    5. '(product' → logprob: -12.885053634643555
    6. '   ' → logprob: -14.135053634643555
    7. ' ' → logprob: -14.260053634643555
    8. 'in' → logprob: -14.510053634643555
    9. '	product' → logprob: -15.385053634643555
    10. '  ' → logprob: -15.885053634643555

Token 779: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -6.153795766294934e-06
    2. 'range' → logprob: -12.125005722045898
    3. '((' → logprob: -14.625005722045898
    4. '(' → logprob: -15.750005722045898
    5. '([' → logprob: -17.3750057220459
    6. ' range' → logprob: -19.1250057220459
    7. '(re' → logprob: -20.1250057220459
    8. '({' → logprob: -20.3750057220459
    9. ' (' → logprob: -21.1250057220459
    10. '```' → logprob: -21.1250057220459

Token 780: '((' (ID: 2054)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.016102058812975883
    2. '(' → logprob: -4.141101837158203
    3. '((' → logprob: -10.141101837158203
    4. '(W' → logprob: -11.516101837158203
    5. 'H' → logprob: -11.891101837158203
    6. '(len' → logprob: -12.891101837158203
    7. '(h' → logprob: -13.266101837158203
    8. '(M' → logprob: -13.766101837158203
    9. '(max' → logprob: -13.891101837158203
    10. '(C' → logprob: -14.266101837158203

Token 781: '1' (ID: 16)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.025603357702493668
    2. '1' → logprob: -4.150603294372559
    3. '2' → logprob: -5.150603294372559
    4. '(H' → logprob: -6.525603294372559
    5. '(' → logprob: -6.900603294372559
    6. 'W' → logprob: -7.775603294372559
    7. '3' → logprob: -8.150603294372559
    8. '0' → logprob: -8.275603294372559
    9. 'max' → logprob: -9.525603294372559
    10. ' H' → logprob: -9.650603294372559

Token 782: '<<' (ID: 5354)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.441118448972702
    2. '(H' → logprob: -1.1911184787750244
    3. 'W' → logprob: -4.441118240356445
    4. '1' → logprob: -4.441118240356445
    5. '(' → logprob: -4.566118240356445
    6. '2' → logprob: -5.316118240356445
    7. '(W' → logprob: -5.566118240356445
    8. '<<' → logprob: -5.566118240356445
    9. ',H' → logprob: -6.941118240356445
    10. '((' → logprob: -7.066118240356445

Token 783: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.024455714970827103
    2. '(H' → logprob: -4.274455547332764
    3. 'W' → logprob: -4.649455547332764
    4. '(W' → logprob: -8.024456024169922
    5. ' H' → logprob: -9.024456024169922
    6. 'max' → logprob: -9.024456024169922
    7. '(' → logprob: -10.149456024169922
    8. ' (' → logprob: -11.024456024169922
    9. 'min' → logprob: -11.524456024169922
    10. '(max' → logprob: -11.649456024169922

Token 784: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.003041408723220229
    2. '),(' → logprob: -5.8780412673950195
    3. ')),' → logprob: -9.62804126739502
    4. ''),' → logprob: -9.87804126739502
    5. ')' → logprob: -10.25304126739502
    6. ' ),' → logprob: -11.00304126739502
    7. '(H' → logprob: -11.12804126739502
    8. 'H' → logprob: -11.25304126739502
    9. ' ' → logprob: -11.50304126739502
    10. '1' → logprob: -12.12804126739502

Token 785: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00689652469009161
    2. ' range' → logprob: -5.006896495819092
    3. '(' → logprob: -9.00689697265625
    4. '1' → logprob: -11.00689697265625
    5. '   ' → logprob: -11.63189697265625
    6. '(range' → logprob: -11.63189697265625
    7. ' (' → logprob: -12.13189697265625
    8. '       ' → logprob: -12.25689697265625
    9. ' ' → logprob: -12.38189697265625
    10. '    ' → logprob: -13.38189697265625

Token 786: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6373355388641357
    2. '(' → logprob: -1.3873355388641357
    3. '(range' → logprob: -1.6373355388641357
    4. '(W' → logprob: -3.6373355388641357
    5. '(H' → logprob: -7.762335777282715
    6. 'range' → logprob: -8.262335777282715
    7. '(w' → logprob: -10.762335777282715
    8. ' (' → logprob: -10.762335777282715
    9. ' range' → logprob: -11.887335777282715
    10. '(((' → logprob: -13.262335777282715

Token 787: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012356207298580557
    2. '1' → logprob: -9.750123977661133
    3. '(W' → logprob: -9.750123977661133
    4. ' (' → logprob: -12.500123977661133
    5. '((' → logprob: -12.750123977661133
    6. 'W' → logprob: -15.250123977661133
    7. '(H' → logprob: -17.125123977661133
    8. '   ' → logprob: -18.000123977661133
    9. ' ' → logprob: -19.125123977661133
    10. '
' → logprob: -19.250123977661133

Token 788: '<<' (ID: 5354)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.126924529671669
    2. 'W' → logprob: -2.376924514770508
    3. '(' → logprob: -3.751924514770508
    4. '((' → logprob: -6.376924514770508
    5. ' (' → logprob: -8.001924514770508
    6. '+' → logprob: -8.251924514770508
    7. '<<' → logprob: -8.626924514770508
    8. '<W' → logprob: -8.876924514770508
    9. '(w' → logprob: -9.626924514770508
    10. '(j' → logprob: -9.751924514770508

Token 789: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.28241947293281555
    2. '(W' → logprob: -1.4074194431304932
    3. '(' → logprob: -6.907419681549072
    4. ' W' → logprob: -9.032419204711914
    5. ' (' → logprob: -9.157419204711914
    6. '   ' → logprob: -11.157419204711914
    7. '((' → logprob: -11.532419204711914
    8. ' ' → logprob: -12.907419204711914
    9. '	W' → logprob: -13.032419204711914
    10. '(H' → logprob: -13.157419204711914

Token 790: '))' (ID: 915)
  Prédit: ')):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.33546262979507446
    2. ')):' → logprob: -1.3354625701904297
    3. '))' → logprob: -4.21046257019043
    4. '+' → logprob: -5.46046257019043
    5. ')):
' → logprob: -6.46046257019043
    6. '),' → logprob: -7.21046257019043
    7. ')' → logprob: -9.21046257019043
    8. '')):
' → logprob: -9.58546257019043
    9. '):' → logprob: -9.71046257019043
    10. '   ' → logprob: -9.96046257019043

Token 791: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07089559733867645
    2. '):
' → logprob: -2.6958956718444824
    3. ':' → logprob: -7.445895671844482
    4. '   ' → logprob: -8.570895195007324
    5. ',' → logprob: -9.695895195007324
    6. '):
' → logprob: -10.195895195007324
    7. '():' → logprob: -10.195895195007324
    8. '()):
' → logprob: -11.195895195007324
    9. '():
' → logprob: -11.445895195007324
    10. '       ' → logprob: -11.945895195007324

Token 792: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05740958824753761
    2. '       ' → logprob: -3.1824095249176025
    3. ' if' → logprob: -4.682409763336182
    4. 'if' → logprob: -5.557409763336182
    5. '```' → logprob: -8.057409286499023
    6. '    
' → logprob: -8.557409286499023
    7. '        
' → logprob: -9.432409286499023
    8. '<|end|>' → logprob: -9.557409286499023
    9. ' for' → logprob: -9.682409286499023
    10. '	if' → logprob: -9.807409286499023

Token 793: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6180858016014099
    2. 'if' (adapté à ' if') → logprob: -1.6180858612060547
    3. '       ' → logprob: -2.3680858612060547
    4. 'pass' → logprob: -3.3680858612060547
    5. 'pop' → logprob: -3.6180858612060547
    6. 'cnt' → logprob: -3.9930858612060547
    7. ' if' → logprob: -4.118085861206055
    8. ' pass' → logprob: -4.118085861206055
    9. 'mask' → logprob: -4.743085861206055
    10. 's' → logprob: -4.743085861206055

Token 794: ' i' (ID: 575)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.44054603576660156
    2. 'i' → logprob: -1.1905460357666016
    3. '(i' → logprob: -3.3155460357666016
    4. ' i' → logprob: -5.565546035766602
    5. ' bits' → logprob: -5.690546035766602
    6. 'not' → logprob: -6.065546035766602
    7. '(' → logprob: -6.440546035766602
    8. '(bits' → logprob: -6.565546035766602
    9. ' (' → logprob: -6.815546035766602
    10. ' not' → logprob: -7.815546035766602

Token 795: '==(' (ID: 103038)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.6686941385269165
    2. ' &' → logprob: -1.2936941385269165
    3. '==' → logprob: -2.918694019317627
    4. ' ==' → logprob: -3.043694019317627
    5. ' !=' → logprob: -3.168694019317627
    6. '!=' → logprob: -3.293694019317627
    7. '   ' → logprob: -4.418694019317627
    8. ')' → logprob: -5.168694019317627
    9. ' ' → logprob: -5.418694019317627
    10. '>' → logprob: -5.668694019317627

Token 796: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023230450227856636
    2. '(' → logprob: -4.02323055267334
    3. 'j' → logprob: -5.52323055267334
    4. ' ' → logprob: -7.14823055267334
    5. 'i' → logprob: -9.14823055267334
    6. 'H' → logprob: -10.27323055267334
    7. '1' → logprob: -10.39823055267334
    8. ' (' → logprob: -10.52323055267334
    9. ')' → logprob: -10.64823055267334
    10. '((' → logprob: -10.89823055267334

Token 797: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0003743078850675374
    2. ' <<' → logprob: -8.875373840332031
    3. '<<(' → logprob: -8.875373840332031
    4. ')' → logprob: -10.250373840332031
    5. ')<<' → logprob: -11.250373840332031
    6. '<' → logprob: -11.625373840332031
    7. '   ' → logprob: -11.750373840332031
    8. '1' → logprob: -12.375373840332031
    9. 'and' → logprob: -13.000373840332031
    10. '```' → logprob: -13.000373840332031

Token 798: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -3.047134305234067e-05
    2. '(H' → logprob: -11.125030517578125
    3. 'i' → logprob: -11.750030517578125
    4. '(' → logprob: -12.375030517578125
    5. '0' → logprob: -13.375030517578125
    6. ' H' → logprob: -13.750030517578125
    7. '(i' → logprob: -15.000030517578125
    8. 'j' → logprob: -15.500030517578125
    9. ' ' → logprob: -16.375030517578125
    10. '   ' → logprob: -17.125030517578125

Token 799: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.16028982400894165
    2. ')' → logprob: -1.9102897644042969
    3. '')' → logprob: -11.035289764404297
    4. ' )' → logprob: -11.035289764404297
    5. '-' → logprob: -11.785289764404297
    6. '   ' → logprob: -12.160289764404297
    7. '):' → logprob: -12.285289764404297
    8. ')-(' → logprob: -12.660289764404297
    9. '):
' → logprob: -12.785289764404297
    10. ')+' → logprob: -13.285289764404297

Token 800: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. 'i' → logprob: -11.500022888183594
    3. ' ' → logprob: -12.625022888183594
    4. '-' → logprob: -12.625022888183594
    5. '   ' → logprob: -13.250022888183594
    6. '(i' → logprob: -13.875022888183594
    7. '(' → logprob: -14.125022888183594
    8. '
' → logprob: -14.125022888183594
    9. 'H' → logprob: -15.125022888183594
    10. ')' → logprob: -15.125022888183594

Token 801: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4710739254951477
    2. ' or' → logprob: -1.096073865890503
    3. 'and' → logprob: -3.346073865890503
    4. 'or' → logprob: -5.846074104309082
    5. '       ' → logprob: -6.471074104309082
    6. '   ' → logprob: -6.721074104309082
    7. ':' → logprob: -7.971074104309082
    8. '    ' → logprob: -9.346074104309082
    9. ' ' → logprob: -10.221074104309082
    10. '           ' → logprob: -10.346074104309082

Token 802: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04314728453755379
    2. ' j' → logprob: -3.168147325515747
    3. '   ' → logprob: -8.918147087097168
    4. '    ' → logprob: -12.418147087097168
    5. '  ' → logprob: -12.793147087097168
    6. ' ' → logprob: -13.043147087097168
    7. ' ' → logprob: -13.918147087097168
    8. '	j' → logprob: -14.043147087097168
    9. '       ' → logprob: -14.168147087097168
    10. 'i' → logprob: -14.668147087097168

Token 803: '==(' (ID: 103038)
  Prédit: '==('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==(' → logprob: -0.6559754610061646
    2. '!=(' → logprob: -0.7809754610061646
    3. '==' → logprob: -4.280975341796875
    4. '<(' → logprob: -5.530975341796875
    5. '!=' → logprob: -6.030975341796875
    6. ' ==' → logprob: -7.030975341796875
    7. '<' → logprob: -7.655975341796875
    8. ')==' → logprob: -7.780975341796875
    9. ' !=' → logprob: -8.030975341796875
    10. '!' → logprob: -8.280975341796875

Token 804: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014352317666634917
    2. '1' → logprob: -6.626435279846191
    3. ' (' → logprob: -9.126435279846191
    4. '((' → logprob: -15.251435279846191
    5. '   ' → logprob: -15.626435279846191
    6. ' ' → logprob: -15.876435279846191
    7. '
' → logprob: -16.876434326171875
    8. '0' → logprob: -17.126434326171875
    9. '(W' → logprob: -17.626434326171875
    10. '```' → logprob: -17.876434326171875

Token 805: '<<' (ID: 5354)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.01938222348690033
    2. '(W' → logprob: -4.644381999969482
    3. '(' → logprob: -4.769381999969482
    4. '<W' → logprob: -7.644381999969482
    5. ' W' → logprob: -8.51938247680664
    6. '<<' → logprob: -9.26938247680664
    7. '((' → logprob: -9.64438247680664
    8. ' (' → logprob: -10.01938247680664
    9. '1' → logprob: -10.14438247680664
    10. '{' → logprob: -10.26938247680664

Token 806: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -9.729906196298543e-06
    2. ' W' → logprob: -11.625009536743164
    3. '(W' → logprob: -14.750009536743164
    4. '(' → logprob: -16.000009536743164
    5. ' ' → logprob: -16.125009536743164
    6. '   ' → logprob: -16.250009536743164
    7. '	W' → logprob: -16.875009536743164
    8. 'w' → logprob: -17.000009536743164
    9. 'H' → logprob: -17.125009536743164
    10. ')' → logprob: -17.250009536743164

Token 807: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.001643165247514844
    2. '-' → logprob: -7.126643180847168
    3. ')' → logprob: -7.501643180847168
    4. '1' → logprob: -9.376643180847168
    5. '[' → logprob: -9.626643180847168
    6. '   ' → logprob: -10.376643180847168
    7. ' )' → logprob: -10.501643180847168
    8. ' -' → logprob: -10.751643180847168
    9. '(' → logprob: -11.126643180847168
    10. ' ' → logprob: -11.251643180847168

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.576873758807778e-05
    2. ' ' → logprob: -10.250075340270996
    3. '-' → logprob: -10.625075340270996
    4. '   ' → logprob: -11.750075340270996
    5. '0' → logprob: -12.750075340270996
    6. ')' → logprob: -13.000075340270996
    7. 'j' → logprob: -14.125075340270996
    8. ')-' → logprob: -14.625075340270996
    9. '
' → logprob: -14.875075340270996
    10. '2' → logprob: -15.187575340270996

Token 809: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7365068793296814
    2. ' or' → logprob: -1.1115069389343262
    3. '       ' → logprob: -2.111506938934326
    4. ':
' → logprob: -2.861506938934326
    5. ' and' → logprob: -4.611506938934326
    6. '   ' → logprob: -6.111506938934326
    7. ' continue' → logprob: -7.236506938934326
    8. '):
' → logprob: -8.611506462097168
    9. ':return' → logprob: -8.611506462097168
    10. 'and' → logprob: -8.861506462097168

Token 810: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01708327606320381
    2. ' continue' → logprob: -4.642083168029785
    3. '   ' → logprob: -5.517083168029785
    4. 'continue' → logprob: -5.767083168029785
    5. '	continue' → logprob: -9.267083168029785
    6. '	' → logprob: -10.517083168029785
    7. '           ' → logprob: -11.392083168029785
    8. '	   ' → logprob: -11.767083168029785
    9. ' ' → logprob: -12.642083168029785
    10. '     ' → logprob: -13.642083168029785

Token 811: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016237763687968254
    2. '   ' → logprob: -4.141237735748291
    3. '<|end|>' → logprob: -9.39123821258545
    4. '        
' → logprob: -10.76623821258545
    5. '           ' → logprob: -11.39123821258545
    6. ' for' → logprob: -11.76623821258545
    7. 'for' → logprob: -12.01623821258545
    8. '```' → logprob: -12.14123821258545
    9. '#' → logprob: -12.26623821258545
    10. '     ' → logprob: -12.26623821258545

Token 812: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09076892584562302
    2. '   ' → logprob: -2.465768814086914
    3. '<|end|>' → logprob: -8.090768814086914
    4. ' for' → logprob: -8.215768814086914
    5. 's' → logprob: -8.340768814086914
    6. 'for' → logprob: -8.715768814086914
    7. ' s' → logprob: -8.965768814086914
    8. '#' → logprob: -9.715768814086914
    9. '        
' → logprob: -9.715768814086914
    10. 'k' → logprob: -9.840768814086914

Token 813: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.542315661907196
    2. 'mask' → logprob: -2.042315721511841
    3. '       ' → logprob: -2.917315721511841
    4. 's' → logprob: -3.417315721511841
    5. 'val' → logprob: -3.542315721511841
    6. 'k' → logprob: -3.792315721511841
    7. 'count' → logprob: -3.917315721511841
    8. 'x' → logprob: -4.167315483093262
    9. 'ans' → logprob: -4.167315483093262
    10. 'sum' → logprob: -4.417315483093262

Token 814: ' any' (ID: 1062)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.16657422482967377
    2. ' bits' → logprob: -2.916574239730835
    3. ' not' → logprob: -3.916574239730835
    4. '(bits' → logprob: -4.416574001312256
    5. 'not' → logprob: -4.541574001312256
    6. 'bin' → logprob: -4.666574001312256
    7. '(A' → logprob: -4.916574001312256
    8. 'A' → logprob: -4.916574001312256
    9. ' (' → logprob: -5.166574001312256
    10. '(i' → logprob: -5.291574001312256

Token 815: '(
' (ID: 1607)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.17994409799575806
    2. '(((' → logprob: -2.3049440383911133
    3. '(A' → logprob: -3.5549440383911133
    4. '(not' → logprob: -3.9299440383911133
    5. '(' → logprob: -4.554944038391113
    6. '(bits' → logprob: -6.179944038391113
    7. '((((' → logprob: -7.179944038391113
    8. '(bin' → logprob: -7.429944038391113
    9. '(
' → logprob: -7.554944038391113
    10. '(i' → logprob: -7.554944038391113

Token 816: '       ' (ID: 309)
  Prédit: '(not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(not' → logprob: -1.527397632598877
    2. '(A' → logprob: -1.902397632598877
    3. '(bits' → logprob: -1.902397632598877
    4. 'bits' → logprob: -2.027397632598877
    5. 'A' → logprob: -2.277397632598877
    6. '((' → logprob: -2.402397632598877
    7. 'not' → logprob: -2.527397632598877
    8. '(' → logprob: -3.902397632598877
    9. ' not' → logprob: -4.652397632598877
    10. '   ' → logprob: -4.777397632598877

Token 817: ' all' (ID: 722)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.535429835319519
    2. '(not' → logprob: -1.785429835319519
    3. 'not' → logprob: -2.0354299545288086
    4. 'A' → logprob: -2.1604299545288086
    5. '((' → logprob: -2.2854299545288086
    6. 'bits' → logprob: -2.4104299545288086
    7. '(bits' → logprob: -3.0354299545288086
    8. '(i' → logprob: -3.6604299545288086
    9. '   ' → logprob: -3.7854299545288086
    10. 'k' → logprob: -4.535429954528809

Token 818: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.03259012848138809
    2. '((' → logprob: -3.65759015083313
    3. '(' → logprob: -6.407589912414551
    4. '(k' → logprob: -6.532589912414551
    5. '(
' → logprob: -6.657589912414551
    6. '(not' → logprob: -7.782589912414551
    7. '(i' → logprob: -7.907589912414551
    8. 'A' → logprob: -7.907589912414551
    9. '(((' → logprob: -8.03258991241455
    10. '(int' → logprob: -9.03258991241455

Token 819: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.08495598286390305
    2. '[i' → logprob: -3.084955930709839
    3. '[x' → logprob: -3.834955930709839
    4. '[y' → logprob: -5.584956169128418
    5. '[' → logprob: -5.709956169128418
    6. '[r' → logprob: -6.709956169128418
    7. '[k' → logprob: -6.959956169128418
    8. '[u' → logprob: -6.959956169128418
    9. '[p' → logprob: -7.334956169128418
    10. '[a' → logprob: -7.709956169128418

Token 820: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02385212481021881
    2. '[i' → logprob: -3.8988521099090576
    3. '[h' → logprob: -6.773852348327637
    4. '[k' → logprob: -7.523852348327637
    5. '[j' → logprob: -7.648852348327637
    6. '[' → logprob: -8.023852348327637
    7. '[(' → logprob: -8.398852348327637
    8. ']' → logprob: -9.398852348327637
    9. '   ' → logprob: -9.398852348327637
    10. ' ][' → logprob: -9.398852348327637

Token 821: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.05133902654051781
    2. 'j' → logprob: -3.4263389110565186
    3. 'k' → logprob: -4.801339149475098
    4. 'i' → logprob: -5.051339149475098
    5. 'c' → logprob: -6.176339149475098
    6. 'wj' → logprob: -8.426339149475098
    7. ' w' → logprob: -8.801339149475098
    8. '   ' → logprob: -9.176339149475098
    9. '(w' → logprob: -9.926339149475098
    10. 'wi' → logprob: -10.176339149475098

Token 822: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0762358084321022
    2. ']=='' → logprob: -3.701235771179199
    3. 'for' → logprob: -3.701235771179199
    4. ']==' → logprob: -4.076235771179199
    5. '==' → logprob: -6.576235771179199
    6. '[j' → logprob: -6.826235771179199
    7. '[' → logprob: -7.326235771179199
    8. '][' → logprob: -7.326235771179199
    9. '[i' → logprob: -7.451235771179199
    10. ']=="' → logprob: -7.451235771179199

Token 823: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1542690247297287
    2. ''.' → logprob: -2.404268980026245
    3. ''A' → logprob: -3.404268980026245
    4. ''' → logprob: -4.529269218444824
    5. ' A' → logprob: -5.779269218444824
    6. ''#' → logprob: -5.779269218444824
    7. '   ' → logprob: -7.404269218444824
    8. 'str' → logprob: -7.654269218444824
    9. 'i' → logprob: -8.279269218444824
    10. ' '' → logprob: -9.404269218444824

Token 824: '[h' (ID: 88900)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44457706809043884
    2. '[h' → logprob: -1.5695770978927612
    3. '[i' → logprob: -2.1945769786834717
    4. 'h' → logprob: -3.3195769786834717
    5. 'j' → logprob: -7.069577217102051
    6. '[j' → logprob: -7.569577217102051
    7. '][' → logprob: -7.694577217102051
    8. '   ' → logprob: -8.44457721710205
    9. '[v' → logprob: -9.19457721710205
    10. '       ' → logprob: -9.19457721710205

Token 825: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6944389939308167
    2. ']' → logprob: -1.0694389343261719
    3. 'i' → logprob: -2.694438934326172
    4. 'w' → logprob: -3.319438934326172
    5. 'j' → logprob: -3.819438934326172
    6. 'for' → logprob: -4.694438934326172
    7. '[i' → logprob: -5.194438934326172
    8. 'and' → logprob: -6.069438934326172
    9. '[j' → logprob: -6.319438934326172
    10. '[w' → logprob: -6.319438934326172

Token 826: 'next' (ID: 7311)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.28619641065597534
    2. 'w' → logprob: -1.6611964702606201
    3. 'i' → logprob: -2.91119647026062
    4. 'k' → logprob: -6.161196231842041
    5. '0' → logprob: -7.036196231842041
    6. '(' → logprob: -7.911196231842041
    7. 'q' → logprob: -8.1611967086792
    8. 'v' → logprob: -8.9111967086792
    9. '   ' → logprob: -9.0361967086792
    10. 'b' → logprob: -9.1611967086792

Token 827: '(iter' (ID: 61014)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6827923059463501
    2. '_w' → logprob: -0.8077923059463501
    3. '_j' → logprob: -3.5577921867370605
    4. 'j' → logprob: -5.3077921867370605
    5. ']' → logprob: -5.5577921867370605
    6. '+w' → logprob: -5.8077921867370605
    7. '(w' → logprob: -5.9327921867370605
    8. '+' → logprob: -6.1827921867370605
    9. ']+' → logprob: -7.0577921867370605
    10. '])' → logprob: -7.5577921867370605

Token 828: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -1.3952056169509888
    2. '(j' → logprob: -2.020205497741699
    3. '(filter' → logprob: -2.395205497741699
    4. '([' → logprob: -2.520205497741699
    5. '(range' → logprob: -2.520205497741699
    6. 'filter' → logprob: -2.645205497741699
    7. 'set' → logprob: -3.020205497741699
    8. '{' → logprob: -3.020205497741699
    9. 'range' → logprob: -3.020205497741699
    10. '({' → logprob: -3.270205497741699

Token 829: '([' (ID: 5194)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.7485378384590149
    2. '(range' → logprob: -1.1235377788543701
    3. '([' → logprob: -2.87353777885437
    4. '(k' → logprob: -3.49853777885437
    5. '(j' → logprob: -3.49853777885437
    6. '{' → logprob: -3.74853777885437
    7. '((' → logprob: -3.99853777885437
    8. '(filter' → logprob: -4.623538017272949
    9. 'range' → logprob: -4.998538017272949
    10. '(c' → logprob: -5.498538017272949

Token 830: 'w' (ID: 86)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7359077334403992
    2. '{' → logprob: -1.610907793045044
    3. 'j' → logprob: -1.860907793045044
    4. '(range' → logprob: -2.985907793045044
    5. 'c' → logprob: -3.985907793045044
    6. '[j' → logprob: -4.110907554626465
    7. 'k' → logprob: -4.485907554626465
    8. 'w' → logprob: -4.610907554626465
    9. 'i' → logprob: -5.110907554626465
    10. '{k' → logprob: -5.485907554626465

Token 831: '2' (ID: 17)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.8050150871276855
    2. 'for' → logprob: -1.5550150871276855
    3. ',' → logprob: -2.6800150871276855
    4. ' for' → logprob: -2.6800150871276855
    5. ' |' → logprob: -3.3050150871276855
    6. ' ^' → logprob: -3.9300150871276855
    7. 's' → logprob: -4.0550150871276855
    8. '.union' → logprob: -4.0550150871276855
    9. '^' → logprob: -4.1800150871276855
    10. '])' → logprob: -4.4300150871276855

Token 832: ' for' (ID: 395)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -1.2853833436965942
    2. '|' → logprob: -1.4103833436965942
    3. ' for' → logprob: -1.7853833436965942
    4. ']))' → logprob: -2.7853832244873047
    5. ' |' → logprob: -3.0353832244873047
    6. ',' → logprob: -3.2853832244873047
    7. 'for' → logprob: -3.4103832244873047
    8. '])-' → logprob: -3.5353832244873047
    9. '   ' → logprob: -4.160383224487305
    10. '])+' → logprob: -4.410383224487305

Token 833: ' w' (ID: 286)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08221570402383804
    2. ' range' → logprob: -2.8322157859802246
    3. '(range' → logprob: -4.582215785980225
    4. 'r' → logprob: -6.207215785980225
    5. 'w' → logprob: -6.582215785980225
    6. 'product' → logprob: -6.957215785980225
    7. '{' → logprob: -7.082215785980225
    8. 'x' → logprob: -7.707215785980225
    9. 'for' → logprob: -7.957215785980225
    10. '(w' → logprob: -8.207215309143066

Token 834: '2' (ID: 17)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5043198466300964
    2. 'for' → logprob: -1.3793199062347412
    3. '2' → logprob: -2.629319906234741
    4. ' in' → logprob: -3.254319906234741
    5. ' if' → logprob: -4.629319667816162
    6. 'w' → logprob: -4.754319667816162
    7. 'in' → logprob: -5.004319667816162
    8. 'if' → logprob: -5.129319667816162
    9. '+' → logprob: -7.129319667816162
    10. ' w' → logprob: -8.25432014465332

Token 835: ' in' (ID: 306)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8006897568702698
    2. ' if' → logprob: -1.675689697265625
    3. 'for' → logprob: -1.925689697265625
    4. ' for' → logprob: -2.425689697265625
    5. ' in' → logprob: -2.675689697265625
    6. 'in' → logprob: -2.925689697265625
    7. 'range' → logprob: -5.675689697265625
    8. 'w' → logprob: -6.550689697265625
    9. 'i' → logprob: -6.800689697265625
    10. ' ' → logprob: -8.800689697265625

Token 836: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002972710644826293
    2. ' range' → logprob: -6.127972602844238
    3. '(range' → logprob: -8.252972602844238
    4. 'product' → logprob: -8.252972602844238
    5. '{' → logprob: -9.377972602844238
    6. '[' → logprob: -10.252972602844238
    7. 'j' → logprob: -10.627972602844238
    8. 'i' → logprob: -10.877972602844238
    9. 'w' → logprob: -11.502972602844238
    10. 'filter' → logprob: -11.502972602844238

Token 837: '(W' (ID: 26031)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.12968115508556366
    2. '(W' → logprob: -2.25468111038208
    3. 'j' → logprob: -5.50468111038208
    4. 'w' → logprob: -5.87968111038208
    5. '(j' → logprob: -6.12968111038208
    6. '((' → logprob: -6.25468111038208
    7. '(w' → logprob: -6.25468111038208
    8. 'H' → logprob: -6.62968111038208
    9. '(' → logprob: -7.00468111038208
    10. '(i' → logprob: -7.87968111038208

Token 838: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11362599581480026
    2. 'if' → logprob: -2.738626003265381
    3. ' if' → logprob: -3.238626003265381
    4. ')]' → logprob: -6.613626003265381
    5. '))' → logprob: -6.988626003265381
    6. ')])' → logprob: -7.863626003265381
    7. 'w' → logprob: -8.863625526428223
    8. '])' → logprob: -8.863625526428223
    9. ' )' → logprob: -8.988625526428223
    10. '   ' → logprob: -8.988625526428223

Token 839: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5243726372718811
    2. ' if' → logprob: -0.8993726372718811
    3. '])' → logprob: -8.274373054504395
    4. ')' → logprob: -8.399373054504395
    5. 'for' → logprob: -8.399373054504395
    6. '   ' → logprob: -8.649373054504395
    7. '       ' → logprob: -9.524373054504395
    8. ' for' → logprob: -9.899373054504395
    9. ']))' → logprob: -9.899373054504395
    10. '           ' → logprob: -10.774373054504395

Token 840: ' not' (ID: 625)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7545846700668335
    2. 'i' → logprob: -1.7545846700668335
    3. 'w' → logprob: -2.129584789276123
    4. '(A' → logprob: -2.629584789276123
    5. '(w' → logprob: -3.254584789276123
    6. 'j' → logprob: -3.504584789276123
    7. '((' → logprob: -3.754584789276123
    8. 'h' → logprob: -3.754584789276123
    9. '(h' → logprob: -3.879584789276123
    10. '(i' → logprob: -4.504584789276123

Token 841: '(j' (ID: 4997)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -1.0283161401748657
    2. 'i' → logprob: -1.5283161401748657
    3. '(i' → logprob: -2.028316020965576
    4. 'A' → logprob: -2.278316020965576
    5. '(A' → logprob: -2.653316020965576
    6. 'j' → logprob: -3.278316020965576
    7. ' (' → logprob: -3.903316020965576
    8. '(w' → logprob: -4.403316020965576
    9. ' ((' → logprob: -4.778316020965576
    10. '(h' → logprob: -4.903316020965576

Token 842: '&(' (ID: 135979)
  Prédit: '&w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&w' → logprob: -0.7291107773780823
    2. '&(' → logprob: -1.3541107177734375
    3. ' &' → logprob: -1.8541107177734375
    4. '&' → logprob: -2.3541107177734375
    5. '>>' → logprob: -5.1041107177734375
    6. '&i' → logprob: -8.104110717773438
    7. '[w' → logprob: -8.229110717773438
    8. ')&' → logprob: -8.479110717773438
    9. '>>(' → logprob: -9.104110717773438
    10. '&t' → logprob: -9.104110717773438

Token 843: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.487237811088562
    2. '(' → logprob: -0.987237811088562
    3. 'w' → logprob: -4.362237930297852
    4. '(w' → logprob: -9.237237930297852
    5. ' (' → logprob: -9.612237930297852
    6. 'h' → logprob: -9.987237930297852
    7. '(h' → logprob: -10.612237930297852
    8. 'j' → logprob: -10.737237930297852
    9. '   ' → logprob: -11.237237930297852
    10. 'i' → logprob: -11.612237930297852

Token 844: '<<' (ID: 5354)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.02134832553565502
    2. '1' → logprob: -4.646348476409912
    3. '2' → logprob: -5.271348476409912
    4. '(w' → logprob: -5.771348476409912
    5. '<<' → logprob: -6.271348476409912
    6. '(' → logprob: -8.146347999572754
    7. ' w' → logprob: -8.646347999572754
    8. '   ' → logprob: -9.146347999572754
    9. '))' → logprob: -9.146347999572754
    10. ')' → logprob: -9.271347999572754

Token 845: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.000588417868129909
    2. ' w' → logprob: -8.750588417053223
    3. '(w' → logprob: -8.750588417053223
    4. 'h' → logprob: -9.125588417053223
    5. '   ' → logprob: -9.500588417053223
    6. '       ' → logprob: -11.000588417053223
    7. '    ' → logprob: -11.625588417053223
    8. '     ' → logprob: -11.813088417053223
    9. '           ' → logprob: -11.813088417053223
    10. '      ' → logprob: -12.250588417053223

Token 846: '2' (ID: 17)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10201600193977356
    2. '2' → logprob: -2.852015972137451
    3. '))' → logprob: -3.852015972137451
    4. ')' → logprob: -5.477015972137451
    5. '|' → logprob: -5.727015972137451
    6. ')]' → logprob: -5.977015972137451
    7. '))))' → logprob: -6.102015972137451
    8. ')))' → logprob: -6.227015972137451
    9. '+' → logprob: -7.727015972137451
    10. '   ' → logprob: -7.727015972137451

Token 847: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10861405730247498
    2. ')))' → logprob: -2.983613967895508
    3. '))))' → logprob: -3.608613967895508
    4. ')' → logprob: -5.108613967895508
    5. '<<' → logprob: -5.233613967895508
    6. ')]' → logprob: -5.483613967895508
    7. '>>' → logprob: -6.108613967895508
    8. ')))),' → logprob: -6.733613967895508
    9. '   ' → logprob: -7.233613967895508
    10. 'w' → logprob: -7.233613967895508

Token 848: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.7944947481155396
    2. ')]' → logprob: -1.4194947481155396
    3. ' and' → logprob: -2.54449462890625
    4. ')][' → logprob: -2.91949462890625
    5. '])))' → logprob: -3.16949462890625
    6. ')' → logprob: -3.54449462890625
    7. '))' → logprob: -3.91949462890625
    8. '))))' → logprob: -4.16949462890625
    9. '])' → logprob: -4.16949462890625
    10. ')])' → logprob: -4.29449462890625

Token 849: ')]' (ID: 15710)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.8099509477615356
    2. ')]' → logprob: -2.059950828552246
    3. '))' → logprob: -2.434950828552246
    4. ')][' → logprob: -2.809950828552246
    5. '])' → logprob: -3.059950828552246
    6. '][' → logprob: -3.309950828552246
    7. ')])' → logprob: -3.559950828552246
    8. '|' → logprob: -3.809950828552246
    9. '])))' → logprob: -3.809950828552246
    10. '[h' → logprob: -4.184950828552246

Token 850: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0459753274917603
    2. ')' → logprob: -1.2959753274917603
    3. '[h' → logprob: -1.7959753274917603
    4. ' for' → logprob: -1.9209753274917603
    5. '   ' → logprob: -4.545975208282471
    6. '       ' → logprob: -4.795975208282471
    7. '])' → logprob: -4.795975208282471
    8. ']' → logprob: -5.170975208282471
    9. ')]' → logprob: -5.295975208282471
    10. '][' → logprob: -5.545975208282471

Token 851: ' w' (ID: 286)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0005587508203461766
    2. 'w' → logprob: -8.125558853149414
    3. ' h' → logprob: -8.250558853149414
    4. ')' → logprob: -14.375558853149414
    5. ' w' → logprob: -14.625558853149414
    6. '	h' → logprob: -15.375558853149414
    7. '   ' → logprob: -16.000558853149414
    8. '_h' → logprob: -16.750558853149414
    9. '
' → logprob: -17.250558853149414
    10. '```' → logprob: -17.250558853149414

Token 852: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42914462089538574
    2. ' in' → logprob: -1.0541446208953857
    3. 'h' → logprob: -8.429144859313965
    4. ')' → logprob: -9.054144859313965
    5. 'w' → logprob: -10.804144859313965
    6. ' ' → logprob: -11.304144859313965
    7. 'if' → logprob: -11.429144859313965
    8. 's' → logprob: -12.054144859313965
    9. '   ' → logprob: -12.179144859313965
    10. ' h' → logprob: -12.366644859313965

Token 853: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011349123902618885
    2. ' range' → logprob: -5.136349201202393
    3. '(range' → logprob: -5.761349201202393
    4. '[h' → logprob: -6.886349201202393
    5. '[w' → logprob: -7.511349201202393
    6. '(h' → logprob: -8.511348724365234
    7. 'set' → logprob: -8.761348724365234
    8. '(w' → logprob: -9.386348724365234
    9. 'w' → logprob: -9.761348724365234
    10. '([' → logprob: -10.136348724365234

Token 854: '(W' (ID: 26031)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.026964616030454636
    2. '(W' → logprob: -3.7769646644592285
    3. 'H' → logprob: -5.6519646644592285
    4. '(H' → logprob: -9.52696418762207
    5. ')' → logprob: -9.65196418762207
    6. '   ' → logprob: -11.27696418762207
    7. ' W' → logprob: -11.65196418762207
    8. '           ' → logprob: -11.65196418762207
    9. 'j' → logprob: -12.15196418762207
    10. '       ' → logprob: -12.15196418762207

Token 855: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14551739394664764
    2. 'if' → logprob: -2.520517349243164
    3. ')' → logprob: -3.645517349243164
    4. '))' → logprob: -4.270517349243164
    5. '   ' → logprob: -5.520517349243164
    6. '       ' → logprob: -5.770517349243164
    7. ')):' → logprob: -6.520517349243164
    8. ')):
' → logprob: -6.770517349243164
    9. ',h' → logprob: -6.770517349243164
    10. '           ' → logprob: -6.895517349243164

Token 856: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6860221028327942
    2. 'if' → logprob: -0.8110221028327942
    3. '       ' → logprob: -4.1860222816467285
    4. '   ' → logprob: -4.1860222816467285
    5. ')' → logprob: -4.5610222816467285
    6. '           ' → logprob: -5.8110222816467285
    7. 'for' → logprob: -5.8110222816467285
    8. ' for' → logprob: -6.4360222816467285
    9. '    ' → logprob: -7.0610222816467285
    10. '               ' → logprob: -7.8110222816467285

Token 857: ' not' (ID: 625)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39849331974983215
    2. '(i' → logprob: -2.0234932899475098
    3. 'j' → logprob: -2.3984932899475098
    4. '(j' → logprob: -3.5234932899475098
    5. 'not' → logprob: -3.5234932899475098
    6. ' i' → logprob: -3.8984932899475098
    7. ' (' → logprob: -4.89849328994751
    8. ' not' → logprob: -5.02349328994751
    9. ' j' → logprob: -5.64849328994751
    10. '(not' → logprob: -5.89849328994751

Token 858: '(j' (ID: 4997)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.13798029720783234
    2. '(j' → logprob: -2.7629802227020264
    3. '(h' → logprob: -3.0129802227020264
    4. 'i' → logprob: -4.5129804611206055
    5. ' (' → logprob: -6.0129804611206055
    6. 'j' → logprob: -6.5129804611206055
    7. '(w' → logprob: -7.2629804611206055
    8. 'h' → logprob: -7.7629804611206055
    9. '(H' → logprob: -8.137980461120605
    10. ' i' → logprob: -8.762980461120605

Token 859: '&(' (ID: 135979)
  Prédit: '&('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&(' → logprob: -0.00037347347824834287
    2. '&' → logprob: -8.250373840332031
    3. ' &(' → logprob: -9.500373840332031
    4. ' &' → logprob: -10.250373840332031
    5. '&amp' → logprob: -14.125373840332031
    6. '&nbsp' → logprob: -14.875373840332031
    7. '(&(' → logprob: -15.000373840332031
    8. '   ' → logprob: -15.750373840332031
    9. '(' → logprob: -15.875373840332031
    10. '&i' → logprob: -16.37537384033203

Token 860: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3297199308872223
    2. '1' → logprob: -1.3297199010849
    3. 'w' → logprob: -4.2047200202941895
    4. '(w' → logprob: -6.8297200202941895
    5. ' (' → logprob: -8.204719543457031
    6. '   ' → logprob: -11.829719543457031
    7. ')' → logprob: -12.079719543457031
    8. '       ' → logprob: -12.704719543457031
    9. '(h' → logprob: -12.704719543457031
    10. '<<' → logprob: -12.829719543457031

Token 861: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.009631305001676083
    2. '1' → logprob: -4.884631156921387
    3. '<w' → logprob: -7.134631156921387
    4. 'w' → logprob: -7.634631156921387
    5. '(w' → logprob: -7.759631156921387
    6. '```' → logprob: -9.259631156921387
    7. '()<<' → logprob: -9.259631156921387
    8. '(' → logprob: -10.259631156921387
    9. ')<<' → logprob: -11.009631156921387
    10. '>>' → logprob: -11.634631156921387

Token 862: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0007960468647070229
    2. 'h' → logprob: -7.750795841217041
    3. ' w' → logprob: -8.0007963180542
    4. '   ' → logprob: -11.2507963180542
    5. 'j' → logprob: -12.7507963180542
    6. 'H' → logprob: -12.7507963180542
    7. '       ' → logprob: -13.3757963180542
    8. '(w' → logprob: -13.3757963180542
    9. ')' → logprob: -13.5007963180542
    10. '  ' → logprob: -14.1257963180542

Token 863: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08351150155067444
    2. ')))' → logprob: -2.9585115909576416
    3. '))))' → logprob: -4.3335113525390625
    4. '2' → logprob: -4.5835113525390625
    5. 'w' → logprob: -6.4585113525390625
    6. ')):' → logprob: -7.4585113525390625
    7. ')' → logprob: -7.7085113525390625
    8. ')):
' → logprob: -7.7085113525390625
    9. '))),' → logprob: -8.083511352539062
    10. ')),' → logprob: -8.333511352539062

Token 864: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9928727746009827
    2. ' for' → logprob: -1.242872714996338
    3. '       ' → logprob: -1.367872714996338
    4. ')' → logprob: -3.742872714996338
    5. '           ' → logprob: -3.992872714996338
    6. '   ' → logprob: -4.242872714996338
    7. 'and' → logprob: -4.742872714996338
    8. ' and' → logprob: -4.992872714996338
    9. '               ' → logprob: -5.242872714996338
    10. '        ' → logprob: -5.992872714996338

Token 865: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.622948169708252
    2. 'for' (adapté à ' for') → logprob: -1.747948169708252
    3. '       ' → logprob: -1.872948169708252
    4. ' for' → logprob: -2.497948169708252
    5. '   ' → logprob: -3.622948169708252
    6. '           ' → logprob: -4.872948169708252
    7. ')
' → logprob: -5.622948169708252
    8. '))' → logprob: -5.997948169708252
    9. '        ' → logprob: -6.122948169708252
    10. '               ' → logprob: -6.497948169708252

Token 866: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -7.171581091824919e-05
    2. ' h' → logprob: -10.00007152557373
    3. 'i' → logprob: -11.00007152557373
    4. ')' → logprob: -12.87507152557373
    5. '```' → logprob: -13.12507152557373
    6. 'w' → logprob: -14.00007152557373
    7. 'next' → logprob: -14.75007152557373
    8. '   ' → logprob: -14.81257152557373
    9. '_h' → logprob: -15.81257152557373
    10. '
' → logprob: -16.000072479248047

Token 867: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009941182099282742
    2. 'in' → logprob: -4.634941101074219
    3. '   ' → logprob: -9.634941101074219
    4. ')' → logprob: -10.259941101074219
    5. '       ' → logprob: -10.259941101074219
    6. '    ' → logprob: -10.884941101074219
    7. ' ' → logprob: -11.509941101074219
    8. '        ' → logprob: -12.134941101074219
    9. '	in' → logprob: -12.759941101074219
    10. '  ' → logprob: -13.009941101074219

Token 868: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006872945814393461
    2. ' range' → logprob: -7.375687122344971
    3. '[i' → logprob: -10.250687599182129
    4. '(range' → logprob: -11.125687599182129
    5. 'i' → logprob: -12.000687599182129
    6. '(i' → logprob: -13.250687599182129
    7. '   ' → logprob: -14.625687599182129
    8. '
' → logprob: -14.625687599182129
    9. 'filter' → logprob: -15.000687599182129
    10. 'set' → logprob: -15.000687599182129

Token 869: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.5768126845359802
    2. 'H' → logprob: -0.8268126845359802
    3. '(i' → logprob: -7.701812744140625
    4. 'i' → logprob: -8.076812744140625
    5. ')' → logprob: -9.576812744140625
    6. '           ' → logprob: -11.826812744140625
    7. '   ' → logprob: -11.951812744140625
    8. '(' → logprob: -12.076812744140625
    9. ' H' → logprob: -12.826812744140625
    10. ')(' → logprob: -13.076812744140625

Token 870: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6612690091133118
    2. ')' → logprob: -1.661268949508667
    3. ')):
' → logprob: -1.661268949508667
    4. ')):' → logprob: -3.036268949508667
    5. '))' → logprob: -4.161269187927246
    6. '   ' → logprob: -4.286269187927246
    7. '):
' → logprob: -4.536269187927246
    8. 'if' → logprob: -4.911269187927246
    9. '):' → logprob: -5.911269187927246
    10. '       ' → logprob: -6.161269187927246

Token 871: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.500427782535553
    2. '):' → logprob: -1.7504277229309082
    3. '):
' → logprob: -2.125427722930908
    4. '   ' → logprob: -2.875427722930908
    5. 'if' → logprob: -3.750427722930908
    6. ')' → logprob: -4.625427722930908
    7. '       ' → logprob: -4.625427722930908
    8. '           ' → logprob: -7.875427722930908
    9. '):

' → logprob: -8.500428199768066
    10. ')):' → logprob: -9.375428199768066

Token 872: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.643997848033905
    2. ' not' → logprob: -1.0189979076385498
    3. 'i' → logprob: -2.39399790763855
    4. ' i' → logprob: -4.893997669219971
    5. '   ' → logprob: -5.018997669219971
    6. '(i' → logprob: -5.018997669219971
    7. '(not' → logprob: -7.018997669219971
    8. ' (' → logprob: -7.768997669219971
    9. ' ' → logprob: -8.893998146057129
    10. '
' → logprob: -10.081498146057129

Token 873: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0029717572033405304
    2. 'i' → logprob: -6.627971649169922
    3. ' (' → logprob: -6.627971649169922
    4. ' i' → logprob: -8.252971649169922
    5. '(h' → logprob: -10.502971649169922
    6. '(j' → logprob: -11.377971649169922
    7. '(' → logprob: -11.752971649169922
    8. '(H' → logprob: -12.627971649169922
    9. '   ' → logprob: -13.002971649169922
    10. '`' → logprob: -13.377971649169922

Token 874: '&(' (ID: 135979)
  Prédit: '&('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&(' → logprob: -2.2723104848410003e-05
    2. '(' → logprob: -11.000022888183594
    3. ' &(' → logprob: -12.750022888183594
    4. '&' → logprob: -13.750022888183594
    5. '(&(' → logprob: -14.375022888183594
    6. '   ' → logprob: -14.875022888183594
    7. '>>(' → logprob: -15.375022888183594
    8. ' &' → logprob: -15.500022888183594
    9. ' (' → logprob: -16.125022888183594
    10. '<<(' → logprob: -16.500022888183594

Token 875: '1' (ID: 16)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03875470533967018
    2. '1' → logprob: -3.91375470161438
    3. '(' → logprob: -4.038754940032959
    4. '(h' → logprob: -8.4137544631958
    5. 'w' → logprob: -9.2887544631958
    6. ' (' → logprob: -9.9137544631958
    7. ' h' → logprob: -10.5387544631958
    8. '<h' → logprob: -11.6637544631958
    9. '   ' → logprob: -11.9137544631958
    10. '```' → logprob: -11.9137544631958

Token 876: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.03870745003223419
    2. '1' → logprob: -3.2887074947357178
    3. '(' → logprob: -8.163707733154297
    4. '<h' → logprob: -8.788707733154297
    5. 'h' → logprob: -8.913707733154297
    6. '```' → logprob: -10.413707733154297
    7. '(h' → logprob: -10.538707733154297
    8. '()<<' → logprob: -12.038707733154297
    9. '>>' → logprob: -12.288707733154297
    10. ')<<' → logprob: -12.288707733154297

Token 877: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -7.457669562427327e-05
    2. ' h' → logprob: -9.75007438659668
    3. 'H' → logprob: -12.37507438659668
    4. 'w' → logprob: -12.62507438659668
    5. '   ' → logprob: -13.37507438659668
    6. '(h' → logprob: -13.62507438659668
    7. '       ' → logprob: -14.12507438659668
    8. ')' → logprob: -14.25007438659668
    9. '_h' → logprob: -14.37507438659668
    10. '           ' → logprob: -14.50007438659668

Token 878: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05447867140173912
    2. ')))' → logprob: -3.554478645324707
    3. ')):
' → logprob: -4.554478645324707
    4. ')):' → logprob: -4.679478645324707
    5. '))))' → logprob: -6.554478645324707
    6. '))
' → logprob: -7.054478645324707
    7. '   ' → logprob: -7.429478645324707
    8. '       ' → logprob: -7.429478645324707
    9. ')' → logprob: -7.679478645324707
    10. ')))
' → logprob: -8.679478645324707

Token 879: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8060003519058228
    2. '       ' → logprob: -1.6810003519058228
    3. '):' → logprob: -1.8060003519058228
    4. ')' → logprob: -1.9310003519058228
    5. '):
' → logprob: -2.931000232696533
    6. '           ' → logprob: -6.181000232696533
    7. ')):' → logprob: -7.556000232696533
    8. '))' → logprob: -7.806000232696533
    9. ')
' → logprob: -7.931000232696533
    10. '):
' → logprob: -8.931000709533691

Token 880: ' ):' (ID: 33657)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' (adapté à ' ):') → logprob: -0.23087935149669647
    2. ')' → logprob: -2.605879306793213
    3. '):
' → logprob: -3.105879306793213
    4. '   ' → logprob: -3.105879306793213
    5. '       ' → logprob: -3.230879306793213
    6. ' and' → logprob: -7.105879306793213
    7. ' or' → logprob: -7.355879306793213
    8. ')==' → logprob: -7.480879306793213
    9. '           ' → logprob: -8.605879783630371
    10. ':' → logprob: -8.980879783630371

Token 881: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000738038623239845
    2. ' continue' → logprob: -7.500738143920898
    3. 'continue' → logprob: -9.375738143920898
    4. '   ' → logprob: -9.875738143920898
    5. '           ' → logprob: -10.875738143920898
    6. '     ' → logprob: -12.000738143920898
    7. '      ' → logprob: -12.375738143920898
    8. ',' → logprob: -12.875738143920898
    9. '<|end|>' → logprob: -12.875738143920898
    10. '               ' → logprob: -13.250738143920898

Token 882: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07266326248645782
    2. ':' → logprob: -3.3226633071899414
    3. '       ' → logprob: -4.322663307189941
    4. ')' → logprob: -4.447663307189941
    5. '):' → logprob: -4.947663307189941
    6. '):
' → logprob: -7.947663307189941
    7. '<|end|>' → logprob: -7.947663307189941
    8. ',' → logprob: -8.322663307189941
    9. ':
' → logprob: -8.447663307189941
    10. '),' → logprob: -9.447663307189941

Token 883: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2527417838573456
    2. ')' → logprob: -2.377741813659668
    3. ':' → logprob: -2.377741813659668
    4. '):' → logprob: -3.502741813659668
    5. '       ' → logprob: -5.377741813659668
    6. '<|end|>' → logprob: -7.377741813659668
    7. ':
' → logprob: -7.627741813659668
    8. '):
' → logprob: -7.627741813659668
    9. '.' → logprob: -8.627741813659668
    10. '  ' → logprob: -8.877741813659668

Token 884: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14179269969463348
    2. ')' → logprob: -3.1417927742004395
    3. '):' → logprob: -3.1417927742004395
    4. ':' → logprob: -4.1417927742004395
    5. '       ' → logprob: -4.5167927742004395
    6. '):
' → logprob: -4.6417927742004395
    7. 'for' → logprob: -5.1417927742004395
    8. ' for' → logprob: -6.5167927742004395
    9. ':
' → logprob: -7.0167927742004395
    10. '  ' → logprob: -8.016792297363281

Token 885: ' any' (ID: 1062)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.4664381444454193
    2. ' bits' → logprob: -1.4664381742477417
    3. ' not' → logprob: -2.466438055038452
    4. 'not' → logprob: -3.716438055038452
    5. '   ' → logprob: -4.716438293457031
    6. '(bits' → logprob: -5.091438293457031
    7. 'any' → logprob: -5.466438293457031
    8. ' any' → logprob: -5.591438293457031
    9. 'all' → logprob: -6.091438293457031
    10. ' all' → logprob: -6.341438293457031

Token 886: '(
' (ID: 1607)
  Prédit: '(
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.0008773969602771103
    2. '(' → logprob: -7.125877380371094
    3. '(
' → logprob: -10.750877380371094
    4. '   ' → logprob: -10.750877380371094
    5. '       ' → logprob: -11.125877380371094
    6. '((' → logprob: -12.625877380371094
    7. '(h' → logprob: -12.625877380371094
    8. 'h' → logprob: -13.125877380371094
    9. '(i' → logprob: -13.750877380371094
    10. '(

' → logprob: -13.750877380371094

Token 887: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036474574357271194
    2. 'all' → logprob: -3.4114744663238525
    3. '   ' → logprob: -6.786474704742432
    4. 'h' → logprob: -6.911474704742432
    5. 'not' → logprob: -8.161474227905273
    6. ' all' → logprob: -8.411474227905273
    7. '           ' → logprob: -10.411474227905273
    8. '(
' → logprob: -10.661474227905273
    9. 'j' → logprob: -10.786474227905273
    10. '(all' → logprob: -10.911474227905273

Token 888: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.25250062346458435
    2. 'h' → logprob: -2.127500534057617
    3. '       ' → logprob: -2.502500534057617
    4. '   ' → logprob: -4.377500534057617
    5. 'not' → logprob: -5.252500534057617
    6. ' all' → logprob: -6.002500534057617
    7. ' h' → logprob: -7.627500534057617
    8. '(h' → logprob: -8.127500534057617
    9. 'w' → logprob: -8.377500534057617
    10. '(not' → logprob: -8.877500534057617

Token 889: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.005015409551560879
    2. '(
' → logprob: -5.7550153732299805
    3. '(' → logprob: -6.5050153732299805
    4. '(i' → logprob: -9.25501537322998
    5. '((' → logprob: -9.38001537322998
    6. 'A' → logprob: -9.88001537322998
    7. '   ' → logprob: -9.88001537322998
    8. '(not' → logprob: -10.13001537322998
    9. '(j' → logprob: -12.13001537322998
    10. '(a' → logprob: -13.25501537322998

Token 890: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -1.8550976164988242e-05
    2. 'h' → logprob: -11.250018119812012
    3. '(h' → logprob: -12.625018119812012
    4. '   ' → logprob: -13.875018119812012
    5. '       ' → logprob: -15.250018119812012
    6. '[' → logprob: -15.750018119812012
    7. '```' → logprob: -16.000019073486328
    8. '[i' → logprob: -16.000019073486328
    9. ' h' → logprob: -16.375019073486328
    10. '[
' → logprob: -16.625019073486328

Token 891: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009306559339165688
    2. '[h' → logprob: -5.00930643081665
    3. '   ' → logprob: -7.38430643081665
    4. '       ' → logprob: -7.63430643081665
    5. ')[' → logprob: -7.63430643081665
    6. '[j' → logprob: -8.259306907653809
    7. '[w' → logprob: -8.634306907653809
    8. '[' → logprob: -8.884306907653809
    9. '           ' → logprob: -8.884306907653809
    10. '[i' → logprob: -10.259306907653809

Token 892: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.001963009126484394
    2. 'next' → logprob: -7.626963138580322
    3. 'j' → logprob: -8.001962661743164
    4. '[w' → logprob: -8.251962661743164
    5. ' w' → logprob: -8.376962661743164
    6. '(w' → logprob: -8.501962661743164
    7. '   ' → logprob: -9.376962661743164
    8. 'k' → logprob: -9.501962661743164
    9. '       ' → logprob: -10.126962661743164
    10. '(next' → logprob: -10.376962661743164

Token 893: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.01859866827726364
    2. ']' → logprob: -4.143598556518555
    3. '][' → logprob: -6.643598556518555
    4. '==' → logprob: -7.143598556518555
    5. '   ' → logprob: -8.518598556518555
    6. ']!=' → logprob: -9.768598556518555
    7. '       ' → logprob: -10.143598556518555
    8. '           ' → logprob: -10.393598556518555
    9. '']==' → logprob: -10.393598556518555
    10. '[h' → logprob: -10.393598556518555

Token 894: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.000462366413557902
    2. ' A' → logprob: -8.000462532043457
    3. 'h' → logprob: -9.875462532043457
    4. 'i' → logprob: -9.875462532043457
    5. '   ' → logprob: -11.625462532043457
    6. '       ' → logprob: -12.250462532043457
    7. 'j' → logprob: -13.125462532043457
    8. '           ' → logprob: -13.875462532043457
    9. 'a' → logprob: -14.000462532043457
    10. ' ' → logprob: -14.250462532043457

Token 895: '[next' (ID: 103383)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.0014473795890808105
    2. 'for' → logprob: -7.3764472007751465
    3. ' for' → logprob: -8.376447677612305
    4. 'h' → logprob: -8.501447677612305
    5. '[next' → logprob: -8.876447677612305
    6. '(h' → logprob: -8.876447677612305
    7. '[i' → logprob: -10.751447677612305
    8. '   ' → logprob: -10.876447677612305
    9. ' h' → logprob: -11.126447677612305
    10. '[' → logprob: -11.376447677612305

Token 896: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.031668130308389664
    2. '(h' → logprob: -3.656668186187744
    3. '_h' → logprob: -6.281668186187744
    4. '(i' → logprob: -6.781668186187744
    5. '(iterator' → logprob: -6.906668186187744
    6. '((' → logprob: -7.406668186187744
    7. '(' → logprob: -8.281667709350586
    8. '_' → logprob: -8.531667709350586
    9. 'h' → logprob: -10.281667709350586
    10. '   ' → logprob: -10.531667709350586

Token 897: '(set' (ID: 25904)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.45294877886772156
    2. '(set' → logprob: -1.577948808670044
    3. '(range' → logprob: -2.202948808670044
    4. '(r' → logprob: -4.452948570251465
    5. '(s' → logprob: -4.577948570251465
    6. '(
' → logprob: -4.827948570251465
    7. '(k' → logprob: -5.202948570251465
    8. '([' → logprob: -6.202948570251465
    9. 'range' → logprob: -6.202948570251465
    10. '(w' → logprob: -6.577948570251465

Token 898: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.09847117215394974
    2. '(h' → logprob: -3.223471164703369
    3. '(i' → logprob: -3.473471164703369
    4. '(range' → logprob: -4.598471164703369
    5. '(k' → logprob: -5.223471164703369
    6. '((' → logprob: -5.723471164703369
    7. '(s' → logprob: -6.348471164703369
    8. '(
' → logprob: -7.223471164703369
    9. '(' → logprob: -7.723471164703369
    10. '([(' → logprob: -8.223471641540527

Token 899: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.007438139524310827
    2. '[h' → logprob: -5.6324381828308105
    3. 'hh' → logprob: -5.8824381828308105
    4. '(h' → logprob: -7.0074381828308105
    5. 'H' → logprob: -10.632437705993652
    6. '   ' → logprob: -11.007437705993652
    7. 'range' → logprob: -11.007437705993652
    8. 'hw' → logprob: -11.382437705993652
    9. '[' → logprob: -11.757437705993652
    10. ' h' → logprob: -12.007437705993652

Token 900: '2' (ID: 17)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5044593214988708
    2. '2' → logprob: -1.6294593811035156
    3. ' for' → logprob: -1.6294593811035156
    4. '+' → logprob: -6.129459381103516
    5. '   ' → logprob: -7.129459381103516
    6. '(h' → logprob: -7.879459381103516
    7. '       ' → logprob: -8.629459381103516
    8. '```' → logprob: -9.504459381103516
    9. 'h' → logprob: -9.754459381103516
    10. '
' → logprob: -10.129459381103516

Token 901: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2014242559671402
    2. ' for' → logprob: -1.701424241065979
    3. '   ' → logprob: -12.701424598693848
    4. '       ' → logprob: -12.826424598693848
    5. '	for' → logprob: -13.451424598693848
    6. '
' → logprob: -13.701424598693848
    7. '[h' → logprob: -14.076424598693848
    8. ')' → logprob: -14.326424598693848
    9. '           ' → logprob: -15.326424598693848
    10. ' ' → logprob: -15.701424598693848

Token 902: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2318016141653061
    2. 'range' → logprob: -1.6068016290664673
    3. ' range' → logprob: -5.606801509857178
    4. 'H' → logprob: -6.856801509857178
    5. 'not' → logprob: -7.856801509857178
    6. ' h' → logprob: -7.981801509857178
    7. '(h' → logprob: -7.981801509857178
    8. 'w' → logprob: -8.731801986694336
    9. 'i' → logprob: -9.356801986694336
    10. '   ' → logprob: -9.481801986694336

Token 903: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09005213528871536
    2. ' in' → logprob: -3.4650521278381348
    3. 'h' → logprob: -4.090052127838135
    4. '(h' → logprob: -4.340052127838135
    5. 'for' → logprob: -5.340052127838135
    6. '       ' → logprob: -5.715052127838135
    7. ' h' → logprob: -5.715052127838135
    8. '   ' → logprob: -5.965052127838135
    9. 'range' → logprob: -5.965052127838135
    10. 'if' → logprob: -6.340052127838135

Token 904: ' in' (ID: 306)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3051135540008545
    2. 'for' → logprob: -1.5551135540008545
    3. ' if' → logprob: -3.5551135540008545
    4. ' for' → logprob: -4.930113792419434
    5. 'not' → logprob: -5.305113792419434
    6. 'range' → logprob: -5.305113792419434
    7. '   ' → logprob: -6.305113792419434
    8. ' not' → logprob: -6.805113792419434
    9. 'h' → logprob: -6.805113792419434
    10. '       ' → logprob: -7.305113792419434

Token 905: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31684431433677673
    2. 'h' → logprob: -1.3168443441390991
    3. ' range' → logprob: -6.191844463348389
    4. 'w' → logprob: -7.566844463348389
    5. 'i' → logprob: -8.19184398651123
    6. 'not' → logprob: -8.31684398651123
    7. '(h' → logprob: -9.06684398651123
    8. '(range' → logprob: -9.06684398651123
    9. ' h' → logprob: -9.56684398651123
    10. '   ' → logprob: -9.94184398651123

Token 906: '(H' (ID: 20904)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.008227783255279064
    2. 'h' → logprob: -5.383227825164795
    3. '(H' → logprob: -5.758227825164795
    4. 'i' → logprob: -8.633227348327637
    5. '(h' → logprob: -9.383227348327637
    6. '(i' → logprob: -9.883227348327637
    7. 'w' → logprob: -10.633227348327637
    8. '(' → logprob: -10.633227348327637
    9. 'range' → logprob: -11.133227348327637
    10. '(w' → logprob: -11.758227348327637

Token 907: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4573233425617218
    2. 'if' → logprob: -1.0823233127593994
    3. ' if' → logprob: -3.7073233127593994
    4. '   ' → logprob: -6.3323235511779785
    5. 'h' → logprob: -7.7073235511779785
    6. '       ' → logprob: -7.7073235511779785
    7. '))' → logprob: -8.08232307434082
    8. ')]' → logprob: -8.45732307434082
    9. ')][' → logprob: -9.08232307434082
    10. '           ' → logprob: -9.45732307434082

Token 908: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14445865154266357
    2. ' if' → logprob: -2.394458770751953
    3. ')' → logprob: -3.519458770751953
    4. '       ' → logprob: -5.144458770751953
    5. '   ' → logprob: -5.394458770751953
    6. '))' → logprob: -7.144458770751953
    7. '           ' → logprob: -7.394458770751953
    8. ')]' → logprob: -7.769458770751953
    9. ')][' → logprob: -8.144458770751953
    10. '               ' → logprob: -8.269458770751953

Token 909: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0816362276673317
    2. 'h' → logprob: -2.7066361904144287
    3. ' not' → logprob: -4.581636428833008
    4. '   ' → logprob: -7.706636428833008
    5. '(not' → logprob: -8.081636428833008
    6. '(h' → logprob: -8.706636428833008
    7. 'i' → logprob: -9.331636428833008
    8. '
' → logprob: -9.331636428833008
    9. ' h' → logprob: -10.081636428833008
    10. '       ' → logprob: -10.456636428833008

Token 910: '(i' (ID: 3649)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.010442581959068775
    2. 'i' → logprob: -5.385442733764648
    3. '(h' → logprob: -5.510442733764648
    4. '(i' → logprob: -6.510442733764648
    5. '   ' → logprob: -9.635442733764648
    6. 'j' → logprob: -9.760442733764648
    7. 'w' → logprob: -10.385442733764648
    8. ' h' → logprob: -10.510442733764648
    9. '(w' → logprob: -11.010442733764648
    10. '(j' → logprob: -11.010442733764648

Token 911: '&(' (ID: 135979)
  Prédit: '&('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&(' → logprob: -6.074907287256792e-05
    2. '&' → logprob: -10.12506103515625
    3. '[h' → logprob: -11.87506103515625
    4. '(h' → logprob: -12.00006103515625
    5. ' &(' → logprob: -12.37506103515625
    6. ')&' → logprob: -13.50006103515625
    7. '&&(' → logprob: -15.00006103515625
    8. '[' → logprob: -15.50006103515625
    9. '   ' → logprob: -15.62506103515625
    10. ' &' → logprob: -15.62506103515625

Token 912: '1' (ID: 16)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -6.670925358776003e-05
    2. '(h' → logprob: -10.000066757202148
    3. ' h' → logprob: -11.250066757202148
    4. '[h' → logprob: -13.125066757202148
    5. '(' → logprob: -13.500066757202148
    6. '```' → logprob: -13.625066757202148
    7. '   ' → logprob: -13.875066757202148
    8. '1' → logprob: -14.125066757202148
    9. ')' → logprob: -15.500066757202148
    10. '
' → logprob: -15.500066757202148

Token 913: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.517266035079956
    2. 'h' → logprob: -1.142266035079956
    3. 'w' → logprob: -2.767266035079956
    4. '1' → logprob: -4.892266273498535
    5. '2' → logprob: -5.392266273498535
    6. '(' → logprob: -6.017266273498535
    7. '(h' → logprob: -6.392266273498535
    8. '<<(' → logprob: -6.392266273498535
    9. ')<<' → logprob: -7.267266273498535
    10. ']<<' → logprob: -7.642266273498535

Token 914: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00011653638648567721
    2. ' h' → logprob: -9.250116348266602
    3. 'w' → logprob: -12.375116348266602
    4. '(h' → logprob: -12.625116348266602
    5. '   ' → logprob: -12.875116348266602
    6. '[h' → logprob: -12.875116348266602
    7. '1' → logprob: -13.375116348266602
    8. ')' → logprob: -13.500116348266602
    9. '```' → logprob: -13.500116348266602
    10. '[' → logprob: -14.875116348266602

Token 915: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04868876561522484
    2. 'h' → logprob: -3.0486886501312256
    3. '))' → logprob: -10.673688888549805
    4. '[h' → logprob: -10.673688888549805
    5. ')' → logprob: -10.798688888549805
    6. ')]' → logprob: -11.298688888549805
    7. '```' → logprob: -12.923688888549805
    8. ')))' → logprob: -12.923688888549805
    9. '(h' → logprob: -13.048688888549805
    10. '
' → logprob: -13.173688888549805

Token 916: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.18384931981563568
    2. '))))' → logprob: -2.683849334716797
    3. ')]' → logprob: -2.808849334716797
    4. ')))' → logprob: -3.308849334716797
    5. ']))' → logprob: -6.933849334716797
    6. ')' → logprob: -7.433849334716797
    7. ')])' → logprob: -7.683849334716797
    8. '   ' → logprob: -8.683849334716797
    9. '])))' → logprob: -8.683849334716797
    10. ')))),' → logprob: -9.308849334716797

Token 917: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6501874327659607
    2. ']))' → logprob: -1.2751874923706055
    3. ')]' → logprob: -1.9001874923706055
    4. ')))' → logprob: -3.5251874923706055
    5. ')])' → logprob: -4.7751874923706055
    6. '       ' → logprob: -5.5251874923706055
    7. '   ' → logprob: -6.2751874923706055
    8. '])))' → logprob: -6.5251874923706055
    9. '))))' → logprob: -6.6501874923706055
    10. ')' → logprob: -7.2751874923706055

Token 918: '][' (ID: 2696)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.17402110993862152
    2. '       ' → logprob: -3.049021005630493
    3. ')]' → logprob: -3.049021005630493
    4. ')' → logprob: -4.299021244049072
    5. ')])' → logprob: -4.424021244049072
    6. '   ' → logprob: -4.424021244049072
    7. '```' → logprob: -5.174021244049072
    8. '])' → logprob: -5.299021244049072
    9. 'for' → logprob: -5.549021244049072
    10. ')&' → logprob: -6.174021244049072

Token 919: 'w' (ID: 86)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.06616775691509247
    2. ')]' → logprob: -4.066167831420898
    3. '])' → logprob: -4.816167831420898
    4. ')' → logprob: -4.941167831420898
    5. ')])' → logprob: -5.066167831420898
    6. '   ' → logprob: -5.191167831420898
    7. '       ' → logprob: -5.566167831420898
    8. '][' → logprob: -5.566167831420898
    9. 'for' → logprob: -5.816167831420898
    10. '),' → logprob: -6.566167831420898

Token 920: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.35671913623809814
    2. ']==' → logprob: -1.7317191362380981
    3. ')])' → logprob: -2.9817190170288086
    4. ')]' → logprob: -3.1067190170288086
    5. ']' → logprob: -4.606719017028809
    6. ']))' → logprob: -5.106719017028809
    7. ')' → logprob: -5.356719017028809
    8. '   ' → logprob: -6.356719017028809
    9. ')==' → logprob: -6.481719017028809
    10. '==' → logprob: -6.981719017028809

Token 921: ' for' (ID: 395)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.1458270400762558
    2. 'for' → logprob: -3.520827054977417
    3. ']' → logprob: -3.770827054977417
    4. '==' → logprob: -4.020826816558838
    5. '])' → logprob: -4.020826816558838
    6. ')==' → logprob: -4.020826816558838
    7. ')' → logprob: -4.520826816558838
    8. '       ' → logprob: -5.020826816558838
    9. ' for' → logprob: -5.020826816558838
    10. '   ' → logprob: -6.020826816558838

Token 922: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4129929542541504
    2. ' h' → logprob: -1.1629929542541504
    3. ' range' → logprob: -4.66299295425415
    4. 'w' → logprob: -4.91299295425415
    5. 'range' → logprob: -5.03799295425415
    6. ' w' → logprob: -6.16299295425415
    7. '   ' → logprob: -9.162992477416992
    8. '    ' → logprob: -10.037992477416992
    9. '[h' → logprob: -10.475492477416992
    10. ' ' → logprob: -10.662992477416992

Token 923: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3271816670894623
    2. 'in' → logprob: -1.9521816968917847
    3. ' if' → logprob: -3.077181577682495
    4. '       ' → logprob: -3.327181577682495
    5. 'if' → logprob: -3.952181577682495
    6. ' range' → logprob: -4.577181816101074
    7. '   ' → logprob: -5.077181816101074
    8. 'range' → logprob: -5.077181816101074
    9. ')' → logprob: -5.327181816101074
    10. '(range' → logprob: -5.702181816101074

Token 924: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048814453184604645
    2. ' range' → logprob: -3.048814535140991
    3. '(range' → logprob: -8.79881477355957
    4. '   ' → logprob: -10.17381477355957
    5. 'h' → logprob: -11.42381477355957
    6. '       ' → logprob: -12.04881477355957
    7. 'w' → logprob: -12.17381477355957
    8. '[' → logprob: -13.17381477355957
    9. '    ' → logprob: -13.54881477355957
    10. '	range' → logprob: -13.54881477355957

Token 925: '(H' (ID: 20904)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2598261535167694
    2. '(H' → logprob: -1.7598261833190918
    3. '(range' → logprob: -3.509826183319092
    4. 'H' → logprob: -4.009826183319092
    5. ' range' → logprob: -5.384826183319092
    6. '(h' → logprob: -6.134826183319092
    7. '   ' → logprob: -7.259826183319092
    8. '(W' → logprob: -8.509825706481934
    9. '(i' → logprob: -8.759825706481934
    10. 'W' → logprob: -8.884825706481934

Token 926: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3236899673938751
    2. 'if' → logprob: -1.4486899375915527
    3. ')' → logprob: -3.4486899375915527
    4. '       ' → logprob: -4.823689937591553
    5. '   ' → logprob: -7.448689937591553
    6. ')]' → logprob: -7.823689937591553
    7. '           ' → logprob: -8.323690414428711
    8. '])' → logprob: -8.948690414428711
    9. ']' → logprob: -8.948690414428711
    10. '        ' → logprob: -9.698690414428711

Token 927: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4544897675514221
    2. 'if' → logprob: -1.2044897079467773
    3. ')' → logprob: -3.2044897079467773
    4. '       ' → logprob: -3.9544897079467773
    5. '   ' → logprob: -5.954489707946777
    6. ')]' → logprob: -7.329489707946777
    7. '           ' → logprob: -8.079489707946777
    8. '])' → logprob: -8.204489707946777
    9. 'w' → logprob: -8.329489707946777
    10. ']' → logprob: -8.704489707946777

Token 928: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6332886815071106
    2. 'not' → logprob: -0.7582886815071106
    3. '   ' → logprob: -8.133288383483887
    4. '(not' → logprob: -8.883288383483887
    5. '       ' → logprob: -10.258288383483887
    6. '!' → logprob: -10.758288383483887
    7. 'j' → logprob: -10.883288383483887
    8. '           ' → logprob: -10.883288383483887
    9. '    ' → logprob: -11.320788383483887
    10. ' j' → logprob: -11.383288383483887

Token 929: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0006060526939108968
    2. ' (' → logprob: -8.000605583190918
    3. '(j' → logprob: -8.375605583190918
    4. '   ' → logprob: -10.500605583190918
    5. '(h' → logprob: -12.250605583190918
    6. 'i' → logprob: -12.875605583190918
    7. '(' → logprob: -13.750605583190918
    8. '```' → logprob: -14.000605583190918
    9. '       ' → logprob: -14.375605583190918
    10. '[i' → logprob: -14.500605583190918

Token 930: '&(' (ID: 135979)
  Prédit: '&('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&(' → logprob: -2.1054253011243418e-05
    2. '&' → logprob: -11.875020980834961
    3. '(&(' → logprob: -12.125020980834961
    4. ' &(' → logprob: -13.000020980834961
    5. '(' → logprob: -13.000020980834961
    6. '(h' → logprob: -13.875020980834961
    7. '```' → logprob: -14.000020980834961
    8. '[' → logprob: -14.625020980834961
    9. '[](' → logprob: -15.375020980834961
    10. '   ' → logprob: -15.500020980834961

Token 931: '1' (ID: 16)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03023347072303295
    2. '1' → logprob: -3.905233383178711
    3. 'w' → logprob: -5.030233383178711
    4. '(' → logprob: -6.405233383178711
    5. '(h' → logprob: -6.655233383178711
    6. '(w' → logprob: -10.155233383178711
    7. ' h' → logprob: -10.280233383178711
    8. '```' → logprob: -11.155233383178711
    9. '[h' → logprob: -11.280233383178711
    10. '<h' → logprob: -11.405233383178711

Token 932: '<<' (ID: 5354)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24102143943309784
    2. '1' → logprob: -1.9910213947296143
    3. 'w' → logprob: -3.6160213947296143
    4. '(h' → logprob: -3.8660213947296143
    5. 'h' → logprob: -4.241021633148193
    6. '(w' → logprob: -4.991021633148193
    7. '&(' → logprob: -5.116021633148193
    8. '&' → logprob: -6.741021633148193
    9. ' (' → logprob: -6.991021633148193
    10. '&w' → logprob: -9.116021156311035

Token 933: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.011076832190155983
    2. 'w' → logprob: -5.136076927185059
    3. '1' → logprob: -6.136076927185059
    4. '(' → logprob: -6.136076927185059
    5. '(h' → logprob: -7.386076927185059
    6. ' h' → logprob: -9.761076927185059
    7. '(w' → logprob: -9.886076927185059
    8. ' (' → logprob: -10.511076927185059
    9. '```' → logprob: -10.886076927185059
    10. '   ' → logprob: -12.261076927185059

Token 934: ')))
' (ID: 12562)
  Prédit: '&('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&(' → logprob: -0.02049867808818817
    2. '&' → logprob: -4.145498752593994
    3. ')&' → logprob: -5.770498752593994
    4. ')' → logprob: -7.895498752593994
    5. 'w' → logprob: -8.270498275756836
    6. '1' → logprob: -8.395498275756836
    7. '[' → logprob: -8.645498275756836
    8. '(' → logprob: -9.020498275756836
    9. '```' → logprob: -9.895498275756836
    10. '&w' → logprob: -10.645498275756836

Token 935: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2729378938674927
    2. '       ' → logprob: -2.522937774658203
    3. '   ' → logprob: -3.397937774658203
    4. '])' → logprob: -3.397937774658203
    5. ')]' → logprob: -3.647937774658203
    6. ']' → logprob: -3.897937774658203
    7. '))' → logprob: -4.647937774658203
    8. ')])' → logprob: -4.897937774658203
    9. ')==' → logprob: -5.022937774658203
    10. 'for' → logprob: -5.522937774658203

Token 936: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9962301850318909
    2. '       ' → logprob: -1.246230125427246
    3. 'for' (adapté à ' for') → logprob: -2.121230125427246
    4. ' in' → logprob: -2.496230125427246
    5. ')' → logprob: -2.621230125427246
    6. 'in' → logprob: -3.496230125427246
    7. '   ' → logprob: -4.371230125427246
    8. ')&' → logprob: -5.246230125427246
    9. '&(' → logprob: -5.871230125427246
    10. '        ' → logprob: -5.996230125427246

Token 937: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12750868499279022
    2. ' w' → logprob: -2.1275086402893066
    3. 'j' → logprob: -8.752509117126465
    4. ' range' → logprob: -8.877509117126465
    5. '   ' → logprob: -9.127509117126465
    6. 'range' → logprob: -9.377509117126465
    7. '       ' → logprob: -10.627509117126465
    8. ' j' → logprob: -10.877509117126465
    9. '    ' → logprob: -11.127509117126465
    10. ' ' → logprob: -12.127509117126465

Token 938: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003306635422632098
    2. 'in' → logprob: -6.003306865692139
    3. '       ' → logprob: -7.378306865692139
    4. 'range' → logprob: -9.62830638885498
    5. ' range' → logprob: -10.12830638885498
    6. '   ' → logprob: -10.25330638885498
    7. '(range' → logprob: -11.12830638885498
    8. '           ' → logprob: -11.37830638885498
    9. '        ' → logprob: -12.00330638885498
    10. '```' → logprob: -12.00330638885498

Token 939: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012589470483362675
    2. ' range' → logprob: -4.387589454650879
    3. 'W' → logprob: -10.387589454650879
    4. '(range' → logprob: -11.137589454650879
    5. '(W' → logprob: -11.387589454650879
    6. '   ' → logprob: -11.512589454650879
    7. '       ' → logprob: -11.762589454650879
    8. '           ' → logprob: -13.887589454650879
    9. '        ' → logprob: -14.512589454650879
    10. '  ' → logprob: -14.512589454650879

Token 940: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.019394269213080406
    2. 'W' → logprob: -4.019394397735596
    3. 'range' → logprob: -6.894394397735596
    4. '(H' → logprob: -8.644393920898438
    5. '(range' → logprob: -11.019393920898438
    6. '       ' → logprob: -11.519393920898438
    7. '           ' → logprob: -11.894393920898438
    8. ' range' → logprob: -11.894393920898438
    9. 'H' → logprob: -12.144393920898438
    10. '   ' → logprob: -12.894393920898438

Token 941: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7049857974052429
    2. ' if' → logprob: -1.5799858570098877
    3. 'if' → logprob: -1.8299858570098877
    4. '       ' → logprob: -2.3299858570098877
    5. '   ' → logprob: -4.329985618591309
    6. '):' → logprob: -5.329985618591309
    7. '           ' → logprob: -5.454985618591309
    8. ']' → logprob: -5.704985618591309
    9. '):
' → logprob: -5.704985618591309
    10. ')]' → logprob: -5.704985618591309

Token 942: ' if' (ID: 538)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.850101888179779
    2. '       ' → logprob: -0.975101888179779
    3. '   ' → logprob: -2.850101947784424
    4. 'if' → logprob: -3.100101947784424
    5. '):
' → logprob: -3.850101947784424
    6. ')' → logprob: -3.850101947784424
    7. ' if' → logprob: -4.225101947784424
    8. ':' → logprob: -4.350101947784424
    9. '           ' → logprob: -4.600101947784424
    10. ']):' → logprob: -6.475101947784424

Token 943: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.28126075863838196
    2. ' not' → logprob: -1.4062607288360596
    3. '   ' → logprob: -10.15626049041748
    4. '(not' → logprob: -10.40626049041748
    5. '```' → logprob: -11.40626049041748
    6. 'j' → logprob: -12.03126049041748
    7. '       ' → logprob: -12.15626049041748
    8. '
' → logprob: -12.15626049041748
    9. '           ' → logprob: -12.15626049041748
    10. '               ' → logprob: -13.40626049041748

Token 944: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.000803076196461916
    2. 'j' → logprob: -7.250802993774414
    3. '(i' → logprob: -9.625802993774414
    4. '(w' → logprob: -11.250802993774414
    5. ' (' → logprob: -11.500802993774414
    6. '   ' → logprob: -13.500802993774414
    7. '```' → logprob: -14.000802993774414
    8. ' j' → logprob: -14.625802993774414
    9. '(' → logprob: -14.750802993774414
    10. '[j' → logprob: -15.500802993774414

Token 945: '&(' (ID: 135979)
  Prédit: '&('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&(' → logprob: -5.776898251497187e-05
    2. '&' → logprob: -10.1250581741333
    3. ' &(' → logprob: -11.6250581741333
    4. '(&(' → logprob: -12.7500581741333
    5. ' &' → logprob: -13.3750581741333
    6. ')&' → logprob: -13.7500581741333
    7. '```' → logprob: -14.7500581741333
    8. '       ' → logprob: -14.8750581741333
    9. '(j' → logprob: -14.8750581741333
    10. '   ' → logprob: -14.8750581741333

Token 946: '1' (ID: 16)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.4121114822482923e-06
    2. ' w' → logprob: -13.000003814697266
    3. '```' → logprob: -14.000003814697266
    4. '1' → logprob: -15.250003814697266
    5. '(w' → logprob: -17.250003814697266
    6. '   ' → logprob: -17.875003814697266
    7. 'j' → logprob: -18.000003814697266
    8. '``' → logprob: -18.000003814697266
    9. '
' → logprob: -19.375003814697266
    10. '       ' → logprob: -19.500003814697266

Token 947: '<<' (ID: 5354)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.282920129597187e-05
    2. ' w' → logprob: -11.500012397766113
    3. '1' → logprob: -13.625012397766113
    4. '(w' → logprob: -13.875012397766113
    5. '```' → logprob: -15.500012397766113
    6. '(' → logprob: -16.37501335144043
    7. '<w' → logprob: -16.75001335144043
    8. '   ' → logprob: -17.62501335144043
    9. ' ' → logprob: -17.87501335144043
    10. '-w' → logprob: -18.25001335144043

Token 948: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.60414821645827e-06
    2. ' w' → logprob: -12.500004768371582
    3. '1' → logprob: -14.375004768371582
    4. '(w' → logprob: -15.750004768371582
    5. 'j' → logprob: -17.375003814697266
    6. '```' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.500003814697266
    8. '       ' → logprob: -19.500003814697266
    9. '
' → logprob: -19.500003814697266
    10. '	w' → logprob: -20.375003814697266

Token 949: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.29631319642066956
    2. ')]' → logprob: -2.4213132858276367
    3. ')])' → logprob: -2.7963132858276367
    4. ')' → logprob: -3.0463132858276367
    5. ')))' → logprob: -3.1713132858276367
    6. ']))' → logprob: -5.046313285827637
    7. '))
' → logprob: -5.546313285827637
    8. '])' → logprob: -6.171313285827637
    9. '   ' → logprob: -6.421313285827637
    10. '       ' → logprob: -6.796313285827637

Token 950: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6704524755477905
    2. '   ' → logprob: -1.6704524755477905
    3. '):
' → logprob: -1.9204524755477905
    4. ')' → logprob: -2.04545259475708
    5. '       ' → logprob: -4.42045259475708
    6. ']):' → logprob: -5.42045259475708
    7. ')]' → logprob: -6.04545259475708
    8. ')):' → logprob: -7.17045259475708
    9. '           ' → logprob: -7.42045259475708
    10. ')])' → logprob: -7.42045259475708

Token 951: ' ):' (ID: 33657)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' (adapté à ' ):') → logprob: -0.19490359723567963
    2. ')' → logprob: -2.319903612136841
    3. '):
' → logprob: -3.194903612136841
    4. '   ' → logprob: -3.444903612136841
    5. '       ' → logprob: -5.944903373718262
    6. ')==' → logprob: -6.694903373718262
    7. ':' → logprob: -7.944903373718262
    8. '==' → logprob: -8.069903373718262
    9. ')):' → logprob: -8.069903373718262
    10. ']):' → logprob: -8.319903373718262

Token 952: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43634524941444397
    2. '   ' → logprob: -1.3113452196121216
    3. '):' → logprob: -2.936345338821411
    4. ')' → logprob: -4.186345100402832
    5. ' continue' → logprob: -5.311345100402832
    6. ':' → logprob: -5.436345100402832
    7. '):
' → logprob: -6.186345100402832
    8. 'continue' → logprob: -6.311345100402832
    9. '    ' → logprob: -7.936345100402832
    10. '           ' → logprob: -8.186345100402832

Token 953: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.690460741519928
    2. '):' → logprob: -0.815460741519928
    3. ')' → logprob: -3.315460681915283
    4. '   ' → logprob: -4.315460681915283
    5. '):
' → logprob: -6.440460681915283
    6. '[' → logprob: -6.565460681915283
    7. ':
' → logprob: -6.815460681915283
    8. '():' → logprob: -7.315460681915283
    9. '       ' → logprob: -7.440460681915283
    10. '<|end|>' → logprob: -8.065461158752441

Token 954: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22750917077064514
    2. '):' → logprob: -1.7275091409683228
    3. '   ' → logprob: -4.102509021759033
    4. ')' → logprob: -5.102509021759033
    5. '[' → logprob: -6.727509021759033
    6. ' :' → logprob: -7.977509021759033
    7. ':
' → logprob: -8.227509498596191
    8. '+' → logprob: -8.352509498596191
    9. '):
' → logprob: -8.477509498596191
    10. '+:' → logprob: -8.477509498596191

Token 955: ' HR' (ID: 26502)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5295947194099426
    2. '       ' → logprob: -1.7795946598052979
    3. '):
' → logprob: -2.404594659805298
    4. '):' → logprob: -2.529594659805298
    5. ':' → logprob: -3.654594659805298
    6. '+' → logprob: -4.154594898223877
    7. ')' → logprob: -4.904594898223877
    8. ':
' → logprob: -5.029594898223877
    9. ')+' → logprob: -5.404594898223877
    10. '<|end|>' → logprob: -6.529594898223877

Token 956: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23998576402664185
    2. '=' → logprob: -1.614985704421997
    3. '   ' → logprob: -4.489985942840576
    4. ',' → logprob: -6.614985942840576
    5. '=(' → logprob: -7.989985942840576
    6. '=[' → logprob: -8.614985466003418
    7. '_count' → logprob: -8.739985466003418
    8. '       ' → logprob: -8.864985466003418
    9. ' ' → logprob: -9.114985466003418
    10. 'for' → logprob: -9.489985466003418

Token 957: ' bits' (ID: 18189)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -1.03904390335083
    2. 'bits' → logprob: -1.16404390335083
    3. '(calc' → logprob: -2.28904390335083
    4. '(bits' → logprob: -2.53904390335083
    5. '(H' → logprob: -2.78904390335083
    6. ' calc' → logprob: -3.78904390335083
    7. '(' → logprob: -4.41404390335083
    8. 'CA' → logprob: -4.53904390335083
    9. 'HR' → logprob: -4.78904390335083
    10. '(C' → logprob: -4.91404390335083

Token 958: 'count' (ID: 5420)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01346489880234003
    2. 'i' → logprob: -4.38846492767334
    3. 'count' → logprob: -8.26346492767334
    4. 'R' → logprob: -8.63846492767334
    5. '(H' → logprob: -8.63846492767334
    6. '(' → logprob: -8.88846492767334
    7. '(I' → logprob: -10.13846492767334
    8. '(R' → logprob: -10.76346492767334
    9. 'H' → logprob: -10.88846492767334
    10. '=' → logprob: -11.01346492767334

Token 959: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -12.125007629394531
    3. '((' → logprob: -14.000007629394531
    4. 'i' → logprob: -14.375007629394531
    5. '(H' → logprob: -15.500007629394531
    6. '(
' → logprob: -15.750007629394531
    7. '(I' → logprob: -16.50000762939453
    8. ' (' → logprob: -16.75000762939453
    9. '[i' → logprob: -17.37500762939453
    10. 'H' → logprob: -18.00000762939453

Token 960: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10265757143497467
    2. ')' → logprob: -2.7276575565338135
    3. ' +' → logprob: -3.4776575565338135
    4. ')+' → logprob: -6.977657794952393
    5. '+)' → logprob: -8.477657318115234
    6. '   ' → logprob: -9.602657318115234
    7. ')
' → logprob: -9.977657318115234
    8. '+
' → logprob: -11.602657318115234
    9. '()+' → logprob: -11.852657318115234
    10. '-' → logprob: -11.977657318115234

Token 961: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 962: ' WR' (ID: 37437)
  Prédit: 'WR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WR' (adapté à ' WR') → logprob: -0.6805393099784851
    2. '   ' → logprob: -1.0555393695831299
    3. 'HC' → logprob: -2.93053936958313
    4. '```' → logprob: -3.30553936958313
    5. 'WC' → logprob: -3.43053936958313
    6. 'LR' → logprob: -4.555539131164551
    7. 'HW' → logprob: -5.430539131164551
    8. 'HR' → logprob: -5.555539131164551
    9. 'for' → logprob: -6.555539131164551
    10. '       ' → logprob: -7.305539131164551

Token 963: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1977461576461792
    2. ' =' → logprob: -2.1977462768554688
    3. '   ' → logprob: -3.9477462768554688
    4. ')' → logprob: -4.197746276855469
    5. '+' → logprob: -4.697746276855469
    6. '(' → logprob: -4.697746276855469
    7. '(j' → logprob: -5.072746276855469
    8. '<|end|>' → logprob: -5.322746276855469
    9. '&' → logprob: -7.072746276855469
    10. ' (' → logprob: -7.322746276855469

Token 964: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0009273029863834381
    2. ' bits' → logprob: -7.000927448272705
    3. '(bits' → logprob: -11.500926971435547
    4. 'W' → logprob: -13.250926971435547
    5. 'H' → logprob: -13.625926971435547
    6. 'bit' → logprob: -14.250926971435547
    7. '0' → logprob: -14.375926971435547
    8. ' W' → logprob: -14.875926971435547
    9. 'bins' → logprob: -15.375926971435547
    10. ' H' → logprob: -15.625926971435547

Token 965: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04986824840307236
    2. '(j' → logprob: -3.54986834526062
    3. '(count' → logprob: -4.799868106842041
    4. '(' → logprob: -5.049868106842041
    5. '+' → logprob: -5.674868106842041
    6. '(w' → logprob: -6.424868106842041
    7. '(W' → logprob: -9.0498685836792
    8. '((' → logprob: -10.7998685836792
    9. '+(' → logprob: -11.1748685836792
    10. '&' → logprob: -11.6748685836792

Token 966: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -7.088138227118179e-05
    2. 'j' → logprob: -9.750070571899414
    3. '(w' → logprob: -12.500070571899414
    4. '(' → logprob: -12.625070571899414
    5. ' (' → logprob: -12.625070571899414
    6. '```' → logprob: -13.875070571899414
    7. '[j' → logprob: -14.750070571899414
    8. '   ' → logprob: -15.500070571899414
    9. ')' → logprob: -15.750070571899414
    10. '((' → logprob: -16.000070571899414

Token 967: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030579231679439545
    2. '+' → logprob: -3.7805793285369873
    3. '   ' → logprob: -5.655579090118408
    4. ')
' → logprob: -5.780579090118408
    5. ')+' → logprob: -7.780579090118408
    6. '```' → logprob: -9.155579566955566
    7. ')*' → logprob: -9.905579566955566
    8. ' +' → logprob: -9.905579566955566
    9. '-' → logprob: -11.280579566955566
    10. '#' → logprob: -11.405579566955566

Token 968: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14817997813224792
    2. '```' → logprob: -2.7731800079345703
    3. '+' → logprob: -3.2731800079345703
    4. ')' → logprob: -4.39818000793457
    5. '       ' → logprob: -5.02318000793457
    6. '<|end|>' → logprob: -5.39818000793457
    7. ' +=' → logprob: -6.02318000793457
    8. '*' → logprob: -6.27318000793457
    9. '[' → logprob: -6.52318000793457
    10. '``' → logprob: -6.77318000793457

Token 969: ' AN' (ID: 3473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0318068265914917
    2. '+' → logprob: -4.281806945800781
    3. '*' → logprob: -5.781806945800781
    4. '```' → logprob: -5.781806945800781
    5. 'ans' → logprob: -6.031806945800781
    6. 'ANS' → logprob: -6.281806945800781
    7. ')' → logprob: -6.406806945800781
    8. 'for' → logprob: -7.156806945800781
    9. 'sol' → logprob: -7.406806945800781
    10. '``' → logprob: -7.531806945800781

Token 970: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.9361264946837764e-07
    2. '+=' → logprob: -16.5
    3. ' S' → logprob: -17.125
    4. '=' → logprob: -17.375
    5. '=S' → logprob: -17.875
    6. 'SOR' → logprob: -18.25
    7. '[S' → logprob: -18.375
    8. 'Ｓ' → logprob: -19.375
    9. '(S' → logprob: -19.875
    10. '	S' → logprob: -20.125

Token 971: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44102296233177185
    2. '+=' → logprob: -1.1910229921340942
    3. '*=' → logprob: -3.8160228729248047
    4. '-=' → logprob: -4.066022872924805
    5. ' =' → logprob: -4.566022872924805
    6. ' +=' → logprob: -6.441022872924805
    7. '   ' → logprob: -6.816022872924805
    8. ' -=' → logprob: -8.941022872924805
    9. '=(' → logprob: -9.441022872924805
    10. '*' → logprob: -9.691022872924805

Token 972: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000993272173218429
    2. 'ANS' → logprob: -7.375993251800537
    3. '(ans' → logprob: -8.250993728637695
    4. ' (' → logprob: -9.250993728637695
    5. '   ' → logprob: -12.625993728637695
    6. '((' → logprob: -13.250993728637695
    7. 'ans' → logprob: -13.500993728637695
    8. '(A' → logprob: -14.500993728637695
    9. 'Ans' → logprob: -14.875993728637695
    10. 'AN' → logprob: -15.125993728637695

Token 973: 'ANS' (ID: 18850)
  Prédit: 'ANS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.014521447941660881
    2. '(' → logprob: -4.264521598815918
    3. '(ans' → logprob: -8.639521598815918
    4. ' AN' → logprob: -9.139521598815918
    5. ' (' → logprob: -10.139521598815918
    6. 'ans' → logprob: -11.139521598815918
    7. 'AN' → logprob: -11.514521598815918
    8. 'Ans' → logprob: -12.764521598815918
    9. 'ANSWER' → logprob: -12.889521598815918
    10. '   ' → logprob: -13.264521598815918

Token 974: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6442357301712036
    2. ' *' → logprob: -1.3942357301712036
    3. '*' → logprob: -1.7692357301712036
    4. '-' → logprob: -2.894235610961914
    5. '+' → logprob: -7.644235610961914
    6. ' +' → logprob: -7.644235610961914
    7. '   ' → logprob: -9.144235610961914
    8. '*(' → logprob: -10.769235610961914
    9. ' ' → logprob: -11.769235610961914
    10. '  ' → logprob: -13.269235610961914

Token 975: ' CA' (ID: 13180)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.37651658058166504
    2. 'calc' → logprob: -1.501516580581665
    3. '-' → logprob: -2.751516580581665
    4. 'mod' → logprob: -4.876516342163086
    5. '(calc' → logprob: -5.126516342163086
    6. '-com' → logprob: -5.626516342163086
    7. '-c' → logprob: -6.501516342163086
    8. '-mod' → logprob: -6.501516342163086
    9. '((-' → logprob: -6.626516342163086
    10. '(' → logprob: -7.001516342163086

Token 976: '[(' (ID: 20542)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0008481022086925805
    2. '[(' → logprob: -7.500848293304443
    3. '((' → logprob: -8.500847816467285
    4. '[' → logprob: -10.000847816467285
    5. ' (' → logprob: -10.875847816467285
    6. '(' → logprob: -11.000847816467285
    7. '(hr' → logprob: -12.250847816467285
    8. 'HR' → logprob: -13.750847816467285
    9. '*(' → logprob: -14.375847816467285
    10. '(bits' → logprob: -14.625847816467285

Token 977: 'HR' (ID: 22427)
  Prédit: 'HR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HR' → logprob: -0.20326188206672668
    2. 'H' → logprob: -1.7032618522644043
    3. '(H' → logprob: -6.328261852264404
    4. ' HR' → logprob: -10.328262329101562
    5. 'hr' → logprob: -12.453262329101562
    6. '(' → logprob: -12.703262329101562
    7. '-H' → logprob: -12.953262329101562
    8. '   ' → logprob: -13.078262329101562
    9. '	H' → logprob: -13.078262329101562
    10. '_H' → logprob: -13.203262329101562

Token 978: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005246091168373823
    2. ',W' → logprob: -5.380246162414551
    3. ',H' → logprob: -7.505246162414551
    4. 'H' → logprob: -10.25524616241455
    5. '(W' → logprob: -11.25524616241455
    6. ' ,' → logprob: -11.38024616241455
    7. '(' → logprob: -12.38024616241455
    8. '   ' → logprob: -12.38024616241455
    9. 'W' → logprob: -13.00524616241455
    10. ',(' → logprob: -13.75524616241455

Token 979: 'WR' (ID: 23921)
  Prédit: 'WR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WR' → logprob: -4.5014188799541444e-05
    2. 'W' → logprob: -10.375044822692871
    3. ' WR' → logprob: -12.000044822692871
    4. '   ' → logprob: -12.125044822692871
    5. '(W' → logprob: -14.250044822692871
    6. ' ' → logprob: -14.250044822692871
    7. 'WL' → logprob: -15.500044822692871
    8. '(' → logprob: -15.500044822692871
    9. '  ' → logprob: -16.375045776367188
    10. 'wr' → logprob: -16.375045776367188

Token 980: ')])' (ID: 99066)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6770790219306946
    2. ']*' → logprob: -1.8020789623260498
    3. ']%' → logprob: -1.9270789623260498
    4. ']*(' → logprob: -2.42707896232605
    5. ']' → logprob: -2.42707896232605
    6. '])*' → logprob: -6.052079200744629
    7. ']*)' → logprob: -6.427079200744629
    8. '   ' → logprob: -8.302079200744629
    9. ')]' → logprob: -8.552079200744629
    10. ')])' → logprob: -8.677079200744629

Token 981: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.13399018347263336
    2. ' %' → logprob: -2.2589902877807617
    3. ')' → logprob: -4.258990287780762
    4. ')%' → logprob: -5.008990287780762
    5. '
' → logprob: -9.883990287780762
    6. '%\' → logprob: -11.383990287780762
    7. '   ' → logprob: -11.508990287780762
    8. ' )' → logprob: -11.508990287780762
    9. '%)' → logprob: -11.883990287780762
    10. '%n' → logprob: -12.383990287780762

Token 982: ' (' (ID: 350)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -8.061054359131958e-06
    2. '(mod' → logprob: -11.750007629394531
    3. '998' → logprob: -16.37500762939453
    4. ' mod' → logprob: -16.87500762939453
    5. '	mod' → logprob: -20.00000762939453
    6. '```' → logprob: -21.12500762939453
    7. 'moder' → logprob: -22.12500762939453
    8. 'MOD' → logprob: -22.25000762939453
    9. '`' → logprob: -22.50000762939453
    10. '999' → logprob: -22.50000762939453

Token 983: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.2603901015827432e-05
    2. '998' → logprob: -10.750022888183594
    3. ' mod' → logprob: -13.875022888183594
    4. '(mod' → logprob: -16.000022888183594
    5. '	mod' → logprob: -16.875022888183594
    6. '   ' → logprob: -18.500022888183594
    7. '999' → logprob: -19.500022888183594
    8. 'MOD' → logprob: -19.750022888183594
    9. ' ' → logprob: -20.125022888183594
    10. 'moder' → logprob: -20.750022888183594

Token 984: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. ')
' → logprob: -12.000009536743164
    3. '<|end|>' → logprob: -14.250009536743164
    4. ' )' → logprob: -14.375009536743164
    5. '))' → logprob: -15.500009536743164
    6. '   ' → logprob: -15.500009536743164
    7. '}' → logprob: -15.750009536743164
    8. '+' → logprob: -15.750009536743164
    9. '```' → logprob: -16.125009536743164
    10. '**' → logprob: -16.125009536743164

Token 985: '100' (ID: 1353)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2831353545188904
    2. '998' → logprob: -1.9081354141235352
    3. '2' → logprob: -3.033135414123535
    4. '1' → logprob: -3.783135414123535
    5. ')' → logprob: -4.158135414123535
    6. '3' → logprob: -6.283135414123535
    7. '(' → logprob: -6.408135414123535
    8. '
' → logprob: -6.658135414123535
    9. '(mod' → logprob: -6.658135414123535
    10. 'rect' → logprob: -6.783135414123535

Token 986: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8184833526611328
    2. '+' → logprob: -0.9434833526611328
    3. '0' → logprob: -2.818483352661133
    4. '9' → logprob: -3.443483352661133
    5. '7' → logprob: -3.818483352661133
    6. '353' → logprob: -4.193483352661133
    7. '000' → logprob: -4.943483352661133
    8. '%' → logprob: -5.068483352661133
    9. '```' → logprob: -5.068483352661133
    10. '3' → logprob: -5.193483352661133

Token 987: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 988: ' inutile' (ID: 157748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 989: 'ment' (ID: 508)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056258589029312134
    2. '<|end|>' → logprob: -2.9312586784362793
    3. '
' → logprob: -7.306258678436279
    4. '%' → logprob: -7.806258678436279
    5. '}' → logprob: -9.681258201599121
    6. '#' → logprob: -10.181258201599121
    7. '```' → logprob: -10.306258201599121
    8. '<|end|>' → logprob: -10.431258201599121
    9. ' )' → logprob: -10.681258201599121
    10. ')
' → logprob: -11.306258201599121

Token 990: ' grand' (ID: 6363)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.634678304195404
    2. '<|end|>' → logprob: -0.759678304195404
    3. '
' → logprob: -7.009678363800049
    4. '%' → logprob: -7.384678363800049
    5. '#' → logprob: -9.00967788696289
    6. '<|end|>' → logprob: -9.13467788696289
    7. '```' → logprob: -9.63467788696289
    8. ' )' → logprob: -10.38467788696289
    9. '}' → logprob: -10.50967788696289
    10. ')
' → logprob: -10.75967788696289

Token 991: ' modulo' (ID: 112372)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 992: ' ici' (ID: 27994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38990291953086853
    2. '<|end|>' → logprob: -1.139902949333191
    3. '%' → logprob: -6.5149030685424805
    4. '
' → logprob: -7.6399030685424805
    5. '<|end|>' → logprob: -7.6399030685424805
    6. '}' → logprob: -9.01490306854248
    7. '```' → logprob: -9.13990306854248
    8. ')return' → logprob: -10.26490306854248
    9. ')
' → logprob: -10.38990306854248
    10. '+' → logprob: -10.38990306854248

Token 993: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6110353469848633
    2. '<|end|>' → logprob: -1.1110353469848633
    3. '%' → logprob: -2.1110353469848633
    4. '
' → logprob: -5.611035346984863
    5. 'mod' → logprob: -6.986035346984863
    6. ' mod' → logprob: -7.861035346984863
    7. ')%' → logprob: -8.236035346984863
    8. '```' → logprob: -8.236035346984863
    9. '<|end|>' → logprob: -8.236035346984863
    10. ' %' → logprob: -8.611035346984863

Token 994: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31857937574386597
    2. '<|end|>' → logprob: -1.6935794353485107
    3. '%' → logprob: -2.4435794353485107
    4. '
' → logprob: -7.318579196929932
    5. '```' → logprob: -7.693579196929932
    6. '**' → logprob: -8.44357967376709
    7. '}' → logprob: -8.81857967376709
    8. '+' → logprob: -8.94357967376709
    9. '<|end|>' → logprob: -9.31857967376709
    10. ' %' → logprob: -9.69357967376709

Token 995: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.796184723294573e-06
    2. '(ans' → logprob: -12.625005722045898
    3. '('' → logprob: -14.250005722045898
    4. '((' → logprob: -14.375005722045898
    5. 'ANS' → logprob: -14.500005722045898
    6. '()' → logprob: -15.625005722045898
    7. '(
' → logprob: -16.2500057220459
    8. ' (' → logprob: -16.2500057220459
    9. '("' → logprob: -16.5000057220459
    10. '(str' → logprob: -16.5000057220459

Token 996: 'ANS' (ID: 18850)
  Prédit: 'ANS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -3.7697225252486533e-06
    2. 'ans' → logprob: -12.500003814697266
    3. 'ANSWER' → logprob: -16.875003814697266
    4. 'Ans' → logprob: -18.125003814697266
    5. '(ans' → logprob: -20.125003814697266
    6. ')' → logprob: -20.750003814697266
    7. 'AN' → logprob: -21.125003814697266
    8. 'ANTS' → logprob: -21.125003814697266
    9. ' ans' → logprob: -21.375003814697266
    10. '   ' → logprob: -21.375003814697266

Token 997: '%' (ID: 4)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001129602751461789
    2. '%' → logprob: -10.000112533569336
    3. ' )' → logprob: -10.875112533569336
    4. '))' → logprob: -11.125112533569336
    5. '```' → logprob: -11.750112533569336
    6. ')
' → logprob: -11.875112533569336
    7. '**' → logprob: -12.000112533569336
    8. '`)' → logprob: -12.875112533569336
    9. ')`' → logprob: -13.000112533569336
    10. '%)' → logprob: -13.625112533569336

Token 998: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.000204851632588543
    2. '(mod' → logprob: -8.750205039978027
    3. '998' → logprob: -10.000205039978027
    4. ' mod' → logprob: -14.000205039978027
    5. '```' → logprob: -17.25020408630371
    6. '	mod' → logprob: -18.00020408630371
    7. '`' → logprob: -19.62520408630371
    8. '999' → logprob: -20.00020408630371
    9. '``' → logprob: -20.00020408630371
    10. '
' → logprob: -20.12520408630371

Token 999: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.641841820150148e-05
    2. '())' → logprob: -11.25002670288086
    3. ')
' → logprob: -12.00002670288086
    4. '()' → logprob: -12.87502670288086
    5. ' )' → logprob: -13.75002670288086
    6. '```' → logprob: -13.75002670288086
    7. '`)' → logprob: -14.12502670288086
    8. '')' → logprob: -15.00002670288086
    9. '(' → logprob: -15.37502670288086
    10. '))' → logprob: -15.50002670288086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 997
Tokens correctement prédits (1ère position, stricte): 423
Tokens correctement prédits (1ère position, avec adaptation): 443
Tokens correctement prédits (top 10): 818
Précision stricte (1ère position): 42.43%
Précision adaptée (1ère position): 44.43%
Précision (top 10): 82.05%
================================================================================
