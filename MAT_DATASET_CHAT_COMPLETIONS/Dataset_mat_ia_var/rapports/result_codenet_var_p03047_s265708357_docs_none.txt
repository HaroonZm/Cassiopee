================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, X = map(int, input().split())
print(N - X + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' X' (ID: 2127)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007538010366261005
    2. ' =' → logprob: -5.382537841796875
    3. ',' → logprob: -6.507537841796875
    4. '[' → logprob: -6.882537841796875
    5. '.' → logprob: -8.507537841796875
    6. ')' → logprob: -9.882537841796875
    7. '_' → logprob: -10.382537841796875
    8. '+' → logprob: -10.757537841796875
    9. '```' → logprob: -10.757537841796875
    10. ':' → logprob: -11.007537841796875

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.9201867580413818
    2. 'map' → logprob: -1.0451867580413818
    3. '10' → logprob: -2.170186758041382
    4. ' np' → logprob: -3.295186758041382
    5. '5' → logprob: -3.420186758041382
    6. ' ' → logprob: -3.920186758041382
    7. 'np' → logprob: -4.045186996459961
    8. '50' → logprob: -5.045186996459961
    9. 'input' → logprob: -5.670186996459961
    10. '20' → logprob: -6.170186996459961

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02161424607038498
    2. '<|end|>' → logprob: -4.271614074707031
    3. '(lambda' → logprob: -5.396614074707031
    4. '```' → logprob: -6.771614074707031
    5. '(int' → logprob: -7.771614074707031
    6. '<|end|>' → logprob: -8.146614074707031
    7. ')' → logprob: -8.271614074707031
    8. '(user' → logprob: -9.146614074707031
    9. '[' → logprob: -9.896614074707031
    10. '(token' → logprob: -10.146614074707031

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4887307286262512
    2. '(input' → logprob: -1.1137306690216064
    3. ',' → logprob: -3.8637306690216064
    4. 'input' → logprob: -4.2387309074401855
    5. '(' → logprob: -4.9887309074401855
    6. ',input' → logprob: -5.2387309074401855
    7. '```' → logprob: -5.6137309074401855
    8. '`)' → logprob: -6.2387309074401855
    9. '`' → logprob: -6.8637309074401855
    10. ')(' → logprob: -7.4887309074401855

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16026566922664642
    2. ' input' → logprob: -1.9102656841278076
    3. '(input' → logprob: -10.160265922546387
    4. ')' → logprob: -13.535265922546387
    5. ',input' → logprob: -14.160265922546387
    6. '=input' → logprob: -14.910265922546387
    7. '<input' → logprob: -15.035265922546387
    8. '[input' → logprob: -16.53526496887207
    9. '	input' → logprob: -17.16026496887207
    10. ' )' → logprob: -18.41026496887207

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.689306378364563
    2. '()' → logprob: -1.064306378364563
    3. '().' → logprob: -1.939306378364563
    4. ')' → logprob: -4.939306259155273
    5. '(' → logprob: -7.564306259155273
    6. '();)' → logprob: -8.189306259155273
    7. '()`' → logprob: -8.439306259155273
    8. '()>' → logprob: -8.689306259155273
    9. '());' → logprob: -8.814306259155273
    10. '`()' → logprob: -8.939306259155273

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003143704670947045
    2. 'strip' → logprob: -8.750314712524414
    3. ')' → logprob: -8.875314712524414
    4. ' split' → logprob: -12.125314712524414
    5. 'rstrip' → logprob: -12.125314712524414
    6. 'read' → logprob: -12.750314712524414
    7. '(split' → logprob: -13.500314712524414
    8. 'spl' → logprob: -14.750314712524414
    9. ')s' → logprob: -15.875314712524414
    10. 'replace' → logprob: -16.000314712524414

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008538920432329178
    2. '())' → logprob: -5.258538722991943
    3. '))' → logprob: -5.883538722991943
    4. '()' → logprob: -8.508539199829102
    5. '`)' → logprob: -8.758539199829102
    6. '(' → logprob: -9.008539199829102
    7. '()))' → logprob: -12.008539199829102
    8. ')`' → logprob: -12.258539199829102
    9. '')' → logprob: -12.633539199829102
    10. '('' → logprob: -13.008539199829102

Token 11: 'print' (ID: 1598)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7277554273605347
    2. '[' → logprob: -2.102755546569824
    3. '#' → logprob: -2.227755546569824
    4. 'x' → logprob: -2.852755546569824
    5. '`' → logprob: -2.852755546569824
    6. ',' → logprob: -3.477755546569824
    7. 'for' → logprob: -3.477755546569824
    8. '```' → logprob: -3.602755546569824
    9. 'if' → logprob: -4.602755546569824
    10. ')' → logprob: -4.727755546569824

Token 12: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.073596548754722e-05
    2. '('' → logprob: -10.25005054473877
    3. '("("' → logprob: -12.12505054473877
    4. '()' → logprob: -13.12505054473877
    5. '(X' → logprob: -13.50005054473877
    6. '((' → logprob: -13.62505054473877
    7. '(
' → logprob: -13.75005054473877
    8. '(N' → logprob: -13.87505054473877
    9. '(`' → logprob: -14.00005054473877
    10. '(sum' → logprob: -15.37505054473877

Token 13: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008601805195212364
    2. ',' → logprob: -4.883601665496826
    3. '+' → logprob: -7.633601665496826
    4. '*' → logprob: -8.383602142333984
    5. '[' → logprob: -8.883602142333984
    6. ' )' → logprob: -10.008602142333984
    7. ',)' → logprob: -10.883602142333984
    8. '**' → logprob: -11.258602142333984
    9. ' ,' → logprob: -11.508602142333984
    10. '-' → logprob: -11.758602142333984

Token 14: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.29223474860191345
    2. ' X' → logprob: -1.4172347784042358
    3. '1' → logprob: -4.542234897613525
    4. ' ' → logprob: -7.917234897613525
    5. '(X' → logprob: -13.042234420776367
    6. '2' → logprob: -13.167234420776367
    7. '	X' → logprob: -13.792234420776367
    8. ' (' → logprob: -13.792234420776367
    9. ')' → logprob: -14.417234420776367
    10. '(' → logprob: -14.417234420776367

Token 15: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9888433093437925e-05
    2. '))' → logprob: -10.500040054321289
    3. '`)' → logprob: -11.625040054321289
    4. ' )' → logprob: -13.750040054321289
    5. ')`' → logprob: -13.875040054321289
    6. '```' → logprob: -14.500040054321289
    7. '')' → logprob: -15.250040054321289
    8. ')
' → logprob: -16.00004005432129
    9. '*' → logprob: -16.12504005432129
    10. '#' → logprob: -16.37504005432129

Token 16: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015277418307960033
    2. ' ' → logprob: -4.26527738571167
    3. ')' → logprob: -7.39027738571167
    4. '(' → logprob: -8.765277862548828
    5. '0' → logprob: -9.390277862548828
    6. '2' → logprob: -9.515277862548828
    7. ' (' → logprob: -10.140277862548828
    8. '10' → logprob: -11.015277862548828
    9. 'int' → logprob: -11.140277862548828
    10. 'X' → logprob: -11.265277862548828

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010417404118925333
    2. ' ' → logprob: -7.626041889190674
    3. '0' → logprob: -9.251041412353516
    4. ')' → logprob: -9.251041412353516
    5. 'X' → logprob: -9.376041412353516
    6. '(' → logprob: -9.376041412353516
    7. '2' → logprob: -9.626041412353516
    8. 'N' → logprob: -10.126041412353516
    9. '10' → logprob: -10.626041412353516
    10. 'int' → logprob: -11.376041412353516

Token 18: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4617256056226324e-05
    2. '`)' → logprob: -11.375014305114746
    3. '))' → logprob: -14.125014305114746
    4. ' )' → logprob: -14.125014305114746
    5. '```' → logprob: -14.625014305114746
    6. ')`' → logprob: -14.875014305114746
    7. '')' → logprob: -14.875014305114746
    8. ')
' → logprob: -15.750014305114746
    9. '")' → logprob: -16.250015258789062
    10. '#' → logprob: -16.625015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 16
Tokens correctement prédits (1ère position, stricte): 4
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 12
Précision stricte (1ère position): 25.00%
Précision adaptée (1ère position): 25.00%
Précision (top 10): 75.00%
================================================================================
