================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def s(t, i):
    """
    Extrait le chiffre en base 3 à la position i d'un entier t (positions à partir de 0).
    
    Args:
        t (int): L'entier dont on veut extraire le chiffre.
        i (int): La position du chiffre à extraire en base 3 (0 pour le moins significatif).
        
    Returns:
        int: Le chiffre de l'entier t en base 3 à la position i.
    """
    # Pour extraire le chiffre, on effectue une division entière, puis on prend le reste par 3
    return 0 - -t // 3**i  # Équivaut à t // 3**i


def m(a, b, c, d):
    """
    Trouve le plus petit niveau 'i' d'une différence significative de position entre les points (a, b) et (c, d)
    dans le trajet d'un jeu particulier (probablement une structure en fractale type Sierpinski), selon certaines règles.
    
    Args:
        a (int): Première coordonnée horizontale.
        b (int): Première coordonnée verticale.
        c (int): Seconde coordonnée horizontale.
        d (int): Seconde coordonnée verticale.
        
    Returns:
        int: Le plus bas niveau 'i' + 1 respectant la condition, ou 0 s'il n'y en a pas.
    """
    # On cherche le dernier niveau (i) où :
    #  - les coordonnées horizontales a et c sont dans le même "bloc" base 3 au niveau i
    #  - la position mod 3 == 2 (cela sélectionne probablement des bords ou des coins)
    #  - il y a une différence verticale significative entre les couplages (b, d)
    niveaux = [
        i for i in range(30)
        if s(a, i) == s(c, i) and s(a, i) % 3 == 2 and 1 < abs(s(b, i) - s(d, i))
    ]
    # Si aucun niveau n'est trouvé, on retourne 0 (avec le +1 en sortie car on stocke -1 dans la liste par défaut)
    return max(niveaux + [-1]) + 1


def main():
    """
    Effectue les opérations principales pour chaque cas de test, lit 4 entiers à chaque entrée,
    calcule la valeur de transformation selon une fractale (ou grille), et affiche la distance minimale.
    
    Métaphores :
        Cette structure s'inspire probablement du déplacement dans la courbe de Sierpinski ou une fractale similaire.
    """
    # Traitement pour chaque cas de test
    for _ in [0] * int(input()):
        # Lecture des positions de départ et d'arrivée
        a, b, c, d = map(int, input().split())

        # Calcul du niveau critique horizontal et vertical pour le mouvement
        h = m(a, b, c, d)
        w = m(b, a, d, c)

        # Cas particulier : aucun piège fractal, chemin direct
        if h == w == 0:
            print(abs(b - d) + abs(a - c))
            continue

        # On veut que h soit toujours >= w en permutant si besoin
        if h < w:
            h, a, b, c, d = w, b, a, d, c

        # i représente la taille de la subdivision courante
        i = 3**h // 3
        # x est le centre relatif du bloc horizontal
        x = 2 * i + 1

        # Décalage pour recaler dans le "bloc milieu"
        g = a - (a - 1) % (3 * i) - 1
        a -= g
        c -= g

        # Calcul du résultat : distance verticale + minimum de l'accès au centre du bloc
        print(abs(b - d) + min(abs(i - a) + abs(i - c), abs(x - a) + abs(x - c)))


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' s' (ID: 265)
  → Token d'amorce (pas de prédiction)

Token 2: '(t' (ID: 2025)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23796890676021576
    2. ')' → logprob: -1.612968921661377
    3. ',' → logprob: -4.612968921661377
    4. 'u' → logprob: -6.487968921661377
    5. 'e' → logprob: -7.737968921661377
    6. ':' → logprob: -8.737968444824219
    7. '=' → logprob: -9.612968444824219
    8. 'a' → logprob: -9.862968444824219
    9. '(' → logprob: -10.112968444824219
    10. '):
' → logprob: -10.237968444824219

Token 4: ' i' (ID: 575)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5031790137290955
    2. ')' → logprob: -1.5031790733337402
    3. 'e' → logprob: -2.6281790733337402
    4. ' ):' → logprob: -3.5031790733337402
    5. 'n' → logprob: -4.25317907333374
    6. 'p' → logprob: -4.62817907333374
    7. 'a' → logprob: -4.62817907333374
    8. ',' → logprob: -4.62817907333374
    9. 'u' → logprob: -5.12817907333374
    10. 's' → logprob: -5.37817907333374

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1248343288898468
    2. ')' → logprob: -2.3748342990875244
    3. ',' → logprob: -3.7498342990875244
    4. '=' → logprob: -7.7498345375061035
    5. '*' → logprob: -9.999834060668945
    6. '[' → logprob: -10.249834060668945
    7. 's' → logprob: -10.249834060668945
    8. ':' → logprob: -10.249834060668945
    9. ' ):' → logprob: -10.499834060668945
    10. ''):' → logprob: -10.999834060668945

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1791861206293106
    2. ' ' → logprob: -2.3041861057281494
    3. ':' → logprob: -2.9291861057281494
    4. ' :' → logprob: -5.1791863441467285
    5. '  ' → logprob: -6.3041863441467285
    6. ''' → logprob: -6.8041863441467285
    7. '    ' → logprob: -7.0541863441467285
    8. '       ' → logprob: -8.42918586730957
    9. ' return' → logprob: -8.42918586730957
    10. '_' → logprob: -8.67918586730957

Token 7: ' """
' (ID: 7037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5194883346557617
    2. 'r' → logprob: -1.6444883346557617
    3. '   ' → logprob: -1.8944883346557617
    4. 'i' → logprob: -4.269488334655762
    5. 'return' → logprob: -4.394488334655762
    6. 's' → logprob: -5.019488334655762
    7. 'if' → logprob: -5.144488334655762
    8. '    ' → logprob: -5.519488334655762
    9. ' if' → logprob: -5.519488334655762
    10. '_' → logprob: -5.894488334655762

Token 8: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7162382006645203
    2. 'r' → logprob: -1.466238260269165
    3. 'R' → logprob: -3.091238260269165
    4. ''''' → logprob: -3.716238260269165
    5. '   ' → logprob: -3.841238260269165
    6. ')' → logprob: -3.841238260269165
    7. 'Calculate' → logprob: -4.091238021850586
    8. ' ' → logprob: -4.216238021850586
    9. 'T' → logprob: -4.216238021850586
    10. 'Return' → logprob: -4.216238021850586

Token 9: ' Ex' (ID: 1771)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.3787567615509033
    2. 'R' → logprob: -1.6287567615509033
    3. 'Calculate' → logprob: -2.1287567615509033
    4. 'r' → logprob: -2.3787567615509033
    5. 'S' → logprob: -2.6287567615509033
    6. 'Return' → logprob: -2.8787567615509033
    7. 'Returns' → logprob: -3.2537567615509033
    8. 'Calcul' → logprob: -3.8787567615509033
    9. 'return' → logprob: -4.128756523132324
    10. 's' → logprob: -4.253756523132324

Token 10: 'trait' (ID: 18216)
  Prédit: 'tract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tract' → logprob: -0.5076266527175903
    2. 'p' → logprob: -1.0076266527175903
    3. 't' → logprob: -4.507626533508301
    4. '   ' → logprob: -5.132626533508301
    5. 'ponent' → logprob: -5.507626533508301
    6. 'c' → logprob: -6.382626533508301
    7. 'plain' → logprob: -6.882626533508301
    8. 'ample' → logprob: -6.882626533508301
    9. 'pand' → logprob: -6.882626533508301
    10. 'pl' → logprob: -7.132626533508301

Token 11: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0564820766448975
    2. ' ' → logprob: -1.3064820766448975
    3. 'e' → logprob: -1.9314820766448975
    4. 's' → logprob: -2.0564820766448975
    5. ')' → logprob: -3.1814820766448975
    6. 'r' → logprob: -3.9314820766448975
    7. 'u' → logprob: -4.431482315063477
    8. ' )' → logprob: -4.681482315063477
    9. '   ' → logprob: -4.806482315063477
    10. 't' → logprob: -5.806482315063477

Token 12: ' chiffre' (ID: 107420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05804544314742088
    2. 's' → logprob: -3.4330453872680664
    3. '   ' → logprob: -4.933045387268066
    4. ' t' → logprob: -5.433045387268066
    5. '  ' → logprob: -6.058045387268066
    6. 't' → logprob: -6.308045387268066
    7. 'e' → logprob: -6.433045387268066
    8. '_' → logprob: -6.808045387268066
    9. 'n' → logprob: -6.808045387268066
    10. ' premier' → logprob: -6.933045387268066

Token 13: ' en' (ID: 469)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5177497863769531
    2. ' ' → logprob: -1.7677497863769531
    3. '_' → logprob: -2.517749786376953
    4. ' d' → logprob: -3.392749786376953
    5. '   ' → logprob: -3.517749786376953
    6. 'd' → logprob: -3.767749786376953
    7. ')' → logprob: -4.267749786376953
    8. ' suivant' → logprob: -4.267749786376953
    9. ' )' → logprob: -5.642749786376953
    10. 'r' → logprob: -5.642749786376953

Token 14: ' base' (ID: 3611)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9820679426193237
    2. 'i' → logprob: -1.2320679426193237
    3. ' ' → logprob: -1.9820679426193237
    4. 'position' → logprob: -2.7320680618286133
    5. ' position' → logprob: -3.3570680618286133
    6. '_i' → logprob: -3.8570680618286133
    7. 't' → logprob: -3.9820680618286133
    8. '_' → logprob: -4.232068061828613
    9. 's' → logprob: -4.357068061828613
    10. '_position' → logprob: -4.607068061828613

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21532203257083893
    2. '10' → logprob: -2.7153220176696777
    3. 'e' → logprob: -3.3403220176696777
    4. ' i' → logprob: -4.215322017669678
    5. ' d' → logprob: -4.340322017669678
    6. ' e' → logprob: -4.465322017669678
    7. 's' → logprob: -4.840322017669678
    8. ' du' → logprob: -5.215322017669678
    9. ' b' → logprob: -5.465322017669678
    10. ' s' → logprob: -5.465322017669678

Token 16: '3' (ID: 18)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09277264028787613
    2. '1' → logprob: -3.0927727222442627
    3. '2' → logprob: -4.467772483825684
    4. 'd' → logprob: -4.967772483825684
    5. ' ' → logprob: -5.092772483825684
    6. 't' → logprob: -5.217772483825684
    7. 'i' → logprob: -5.842772483825684
    8. '4' → logprob: -6.842772483825684
    9. 's' → logprob: -6.842772483825684
    10. '```' → logprob: -6.842772483825684

Token 17: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33105748891830444
    2. ')' → logprob: -2.081057548522949
    3. '   ' → logprob: -2.456057548522949
    4. '_' → logprob: -4.081057548522949
    5. '(' → logprob: -4.331057548522949
    6. '`' → logprob: -4.331057548522949
    7. '```' → logprob: -5.331057548522949
    8. 's' → logprob: -5.456057548522949
    9. ',' → logprob: -5.456057548522949
    10. '  ' → logprob: -6.456057548522949

Token 18: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2739529609680176
    2. ' ' → logprob: -1.6489529609680176
    3. 'l' → logprob: -1.7739529609680176
    4. 'i' → logprob: -1.7739529609680176
    5. ' l' → logprob: -2.2739529609680176
    6. ' position' → logprob: -3.0239529609680176
    7. ' la' → logprob: -4.648952960968018
    8. '   ' → logprob: -5.023952960968018
    9. 'position' → logprob: -5.273952960968018
    10. ' index' → logprob: -5.273952960968018

Token 19: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3331317603588104
    2. 'position' → logprob: -1.4581317901611328
    3. ' i' → logprob: -3.708131790161133
    4. ' ' → logprob: -4.458131790161133
    5. ' position' → logprob: -4.583131790161133
    6. '   ' → logprob: -6.208131790161133
    7. ' ' → logprob: -7.083131790161133
    8. 'pos' → logprob: -8.583131790161133
    9. 'indice' → logprob: -8.583131790161133
    10. 'e' → logprob: -8.708131790161133

Token 20: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11341188102960587
    2. ' i' → logprob: -3.2384119033813477
    3. 'i' → logprob: -3.4884119033813477
    4. ' t' → logprob: -3.9884119033813477
    5. 'n' → logprob: -5.613411903381348
    6. 's' → logprob: -5.863411903381348
    7. 't' → logprob: -6.238411903381348
    8. '   ' → logprob: -6.363411903381348
    9. ' (' → logprob: -6.988411903381348
    10. ',' → logprob: -6.988411903381348

Token 21: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.358262300491333
    2. ')' → logprob: -2.358262300491333
    3. '```' → logprob: -2.608262300491333
    4. ' ' → logprob: -3.108262300491333
    5. '.' → logprob: -3.733262300491333
    6. ',' → logprob: -4.108262062072754
    7. '`' → logprob: -4.983262062072754
    8. 's' → logprob: -5.108262062072754
    9. '"""
' → logprob: -5.733262062072754
    10. '\' → logprob: -5.733262062072754

Token 22: ''un' (ID: 9788)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.44200894236564636
    2. 'e' → logprob: -1.4420089721679688
    3. ''une' → logprob: -2.6920089721679688
    4. 'une' → logprob: -3.9420089721679688
    5. ''un' → logprob: -5.067008972167969
    6. 't' → logprob: -5.067008972167969
    7. '`' → logprob: -5.692008972167969
    8. 's' → logprob: -5.817008972167969
    9. ' la' → logprob: -6.067008972167969
    10. ' t' → logprob: -6.192008972167969

Token 23: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.02793550491333
    2. ' nombre' → logprob: -1.40293550491333
    3. 'nombre' → logprob: -2.77793550491333
    4. 's' → logprob: -2.77793550491333
    5. ' string' → logprob: -3.15293550491333
    6. '   ' → logprob: -3.52793550491333
    7. 't' → logprob: -3.52793550491333
    8. 'n' → logprob: -3.77793550491333
    9. ' entier' → logprob: -3.77793550491333
    10. 'e' → logprob: -4.15293550491333

Token 24: ' t' (ID: 260)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5961738228797913
    2. ' )' → logprob: -2.3461737632751465
    3. ')' → logprob: -2.5961737632751465
    4. ' ,' → logprob: -2.7211737632751465
    5. ',' → logprob: -3.3461737632751465
    6. '.' → logprob: -3.3461737632751465
    7. ' s' → logprob: -3.4711737632751465
    8. 's' → logprob: -3.7211737632751465
    9. ' en' → logprob: -4.4711737632751465
    10. '   ' → logprob: -4.5961737632751465

Token 25: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03907563164830208
    2. '   ' → logprob: -3.6640756130218506
    3. '):' → logprob: -4.78907585144043
    4. '"""' → logprob: -6.41407585144043
    5. ' )' → logprob: -7.41407585144043
    6. ' ' → logprob: -7.78907585144043
    7. '.' → logprob: -8.16407585144043
    8. ',' → logprob: -8.28907585144043
    9. '```' → logprob: -8.53907585144043
    10. '*' → logprob: -8.78907585144043

Token 26: 'positions' (ID: 32297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00612028269097209
    2. '):' → logprob: -6.131120204925537
    3. ' )' → logprob: -6.381120204925537
    4. ' ' → logprob: -7.131120204925537
    5. ',' → logprob: -7.506120204925537
    6. 'def' → logprob: -8.506120681762695
    7. '   ' → logprob: -9.256120681762695
    8. ' en' → logprob: -9.256120681762695
    9. 't' → logprob: -9.256120681762695
    10. 'en' → logprob: -10.006120681762695

Token 27: ' à' (ID: 1221)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.1443190574645996
    2. ')' → logprob: -1.2693190574645996
    3. ' ' → logprob: -1.5193190574645996
    4. ' ' → logprob: -3.0193190574645996
    5. ' i' → logprob: -3.2693190574645996
    6. '   ' → logprob: -4.0193190574646
    7. '0' → logprob: -4.3943190574646
    8. 's' → logprob: -4.5193190574646
    9. ' `' → logprob: -5.5193190574646
    10. ' =' → logprob: -5.5193190574646

Token 28: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.0006062911124899983
    2. 'part' → logprob: -8.375606536865234
    3. '0' → logprob: -8.750606536865234
    4. ' ' → logprob: -9.375606536865234
    5. ' compter' → logprob: -9.500606536865234
    6. ' partire' → logprob: -11.125606536865234
    7. ' droite' → logprob: -11.250606536865234
    8. 'p' → logprob: -12.125606536865234
    9. ' part' → logprob: -12.250606536865234
    10. '1' → logprob: -12.375606536865234

Token 29: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08461450785398483
    2. 'de' → logprob: -2.5846145153045654
    3. '0' → logprob: -6.084614276885986
    4. ' ' → logprob: -6.209614276885986
    5. '1' → logprob: -7.084614276885986
    6. 'd' → logprob: -8.709614753723145
    7. ' d' → logprob: -8.959614753723145
    8. ' du' → logprob: -9.084614753723145
    9. '  ' → logprob: -9.959614753723145
    10. ')' → logprob: -10.334614753723145

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04127787798643112
    2. ' ' → logprob: -3.4162778854370117
    3. '1' → logprob: -5.166277885437012
    4. ' la' → logprob: -7.291277885437012
    5. 'l' → logprob: -8.166277885437012
    6. 'la' → logprob: -8.666277885437012
    7. 'le' → logprob: -8.791277885437012
    8. ' droite' → logprob: -8.791277885437012
    9. ' ' → logprob: -8.791277885437012
    10. 'z' → logprob: -9.166277885437012

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04259030893445015
    2. '1' → logprob: -3.917590379714966
    3. ' ' → logprob: -3.917590379714966
    4. 'z' → logprob: -7.292590141296387
    5. ' droite' → logprob: -8.042590141296387
    6. 'l' → logprob: -8.542590141296387
    7. '  ' → logprob: -9.292590141296387
    8. ' z' → logprob: -9.292590141296387
    9. 'dro' → logprob: -9.542590141296387
    10. 'd' → logprob: -9.667590141296387

Token 32: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17297300696372986
    2. '):' → logprob: -1.9229730367660522
    3. ',' → logprob: -5.172973155975342
    4. ' )' → logprob: -5.297973155975342
    5. ' ):' → logprob: -7.672973155975342
    6. ').' → logprob: -7.797973155975342
    7. '   ' → logprob: -8.297972679138184
    8. '):
' → logprob: -8.297972679138184
    9. '"""' → logprob: -9.172972679138184
    10. '),' → logprob: -10.047972679138184

Token 33: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19207215309143066
    2. '"""' → logprob: -2.3170721530914307
    3. ')' → logprob: -2.8170721530914307
    4. '```' → logprob: -5.942071914672852
    5. ' ' → logprob: -6.067071914672852
    6. '"""
' → logprob: -6.067071914672852
    7. ' """' → logprob: -6.192071914672852
    8. '"' → logprob: -6.442071914672852
    9. ' """
' → logprob: -6.567071914672852
    10. ' ' → logprob: -6.692071914672852

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.718157172203064
    2. ')' → logprob: -1.093157172203064
    3. '"""' → logprob: -2.2181572914123535
    4. ' """' → logprob: -2.9681572914123535
    5. ' ' → logprob: -5.2181572914123535
    6. ' """
' → logprob: -5.5931572914123535
    7. ' )' → logprob: -5.9681572914123535
    8. '    ' → logprob: -6.7181572914123535
    9. 't' → logprob: -7.2181572914123535
    10. '"""
' → logprob: -7.7181572914123535

Token 35: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3096558153629303
    2. '"""' → logprob: -1.934655785560608
    3. ' """' → logprob: -3.1846559047698975
    4. ')' → logprob: -3.3096559047698975
    5. 'return' → logprob: -4.184655666351318
    6. 'if' → logprob: -5.184655666351318
    7. ' """
' → logprob: -5.309655666351318
    8. ' ' → logprob: -5.434655666351318
    9. '"""
' → logprob: -5.934655666351318
    10. 'r' → logprob: -6.309655666351318

Token 36: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8680042028427124
    2. ')' → logprob: -0.9930042028427124
    3. '):' → logprob: -2.118004322052002
    4. ':' → logprob: -2.993004322052002
    5. '   ' → logprob: -4.118004322052002
    6. ' :' → logprob: -4.368004322052002
    7. ' ,' → logprob: -6.493004322052002
    8. '[' → logprob: -6.618004322052002
    9. '```' → logprob: -6.618004322052002
    10. ',
' → logprob: -6.743004322052002

Token 37: '       ' (ID: 309)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3133673369884491
    2. '   ' → logprob: -1.8133673667907715
    3. ' t' → logprob: -2.3133673667907715
    4. ')' → logprob: -5.9383673667907715
    5. ' )' → logprob: -6.4383673667907715
    6. '    ' → logprob: -6.6883673667907715
    7. ' ' → logprob: -7.1883673667907715
    8. ' ):' → logprob: -8.313366889953613
    9. '):' → logprob: -9.438366889953613
    10. '```' → logprob: -9.563366889953613

Token 38: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.00873264204710722
    2. ' t' → logprob: -4.758732795715332
    3. '   ' → logprob: -9.383732795715332
    4. 'n' → logprob: -12.133732795715332
    5. '	t' → logprob: -12.133732795715332
    6. ')' → logprob: -12.633732795715332
    7. '`t' → logprob: -12.633732795715332
    8. '    ' → logprob: -13.133732795715332
    9. ' ' → logprob: -13.383732795715332
    10. ' ' → logprob: -13.508732795715332

Token 39: ' (' (ID: 350)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.784722089767456
    2. ',' → logprob: -1.034722089767456
    3. '<|end|>' → logprob: -2.034722089767456
    4. ')' → logprob: -3.159722089767456
    5. ' )' → logprob: -4.784722328186035
    6. ':' → logprob: -6.409722328186035
    7. '<|end|>' → logprob: -6.534722328186035
    8. ' :' → logprob: -6.909722328186035
    9. ' ' → logprob: -6.909722328186035
    10. ' ),' → logprob: -7.909722328186035

Token 40: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004141792189329863
    2. ' int' → logprob: -5.504141807556152
    3. ')' → logprob: -10.254141807556152
    4. '   ' → logprob: -11.379141807556152
    5. 'i' → logprob: -12.504141807556152
    6. '  ' → logprob: -13.004141807556152
    7. ' )' → logprob: -13.129141807556152
    8. 'in' → logprob: -13.254141807556152
    9. 'str' → logprob: -13.504141807556152
    10. ' ' → logprob: -13.879141807556152

Token 41: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42091628909111023
    2. '):' → logprob: -1.1709163188934326
    3. ',' → logprob: -3.6709163188934326
    4. '<|end|>' → logprob: -5.4209160804748535
    5. '):
' → logprob: -6.5459160804748535
    6. '),' → logprob: -7.5459160804748535
    7. '   ' → logprob: -7.6709160804748535
    8. '```' → logprob: -8.545916557312012
    9. ' ):' → logprob: -8.795916557312012
    10. '<|end|>' → logprob: -8.795916557312012

Token 42: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.72371906042099
    2. '    ' → logprob: -1.7237191200256348
    3. ' l' → logprob: -1.8487191200256348
    4. ' Le' → logprob: -3.0987191200256348
    5. ' un' → logprob: -3.2237191200256348
    6. ' ' → logprob: -3.3487191200256348
    7. 'L' → logprob: -3.8487191200256348
    8. ' Un' → logprob: -4.723719120025635
    9. ' La' → logprob: -5.223719120025635
    10. ' ' → logprob: -5.348719120025635

Token 43: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4514366388320923
    2. ' entier' → logprob: -1.9514366388320923
    3. ' ' → logprob: -2.0764365196228027
    4. ' e' → logprob: -2.8264365196228027
    5. ' '' → logprob: -4.951436519622803
    6. '   ' → logprob: -4.951436519622803
    7. '  ' → logprob: -5.326436519622803
    8. ''' → logprob: -5.451436519622803
    9. ''ent' → logprob: -5.576436519622803
    10. 'ent' → logprob: -6.451436519622803

Token 44: 'ier' (ID: 905)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12365463376045227
    2. 'ier' → logprob: -2.49865460395813
    3. 'i' → logprob: -3.99865460395813
    4. '   ' → logprob: -5.123654842376709
    5. ' entier' → logprob: -5.623654842376709
    6. 't' → logprob: -6.998654842376709
    7. 'u' → logprob: -6.998654842376709
    8. '  ' → logprob: -7.248654842376709
    9. 'r' → logprob: -7.498654842376709
    10. ' ' → logprob: -7.498654842376709

Token 45: ' dont' (ID: 11562)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2864105701446533
    2. ' ' → logprob: -2.0364105701446533
    3. ' dont' → logprob: -2.2864105701446533
    4. ' en' → logprob: -5.036410331726074
    5. '   ' → logprob: -6.661410331726074
    6. '  ' → logprob: -7.036410331726074
    7. ',' → logprob: -7.161410331726074
    8. ')' → logprob: -7.411410331726074
    9. 'ex' → logprob: -7.536410331726074
    10. ' a' → logprob: -7.661410331726074

Token 46: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.11942312121391296
    2. 'on' → logprob: -2.6194231510162354
    3. ''on' → logprob: -3.6194231510162354
    4. '   ' → logprob: -5.994422912597656
    5. 'le' → logprob: -6.244422912597656
    6. ' il' → logprob: -6.494422912597656
    7. 'l' → logprob: -6.619422912597656
    8. 'il' → logprob: -6.994422912597656
    9. '’on' → logprob: -7.119422912597656
    10. ' ' → logprob: -7.244422912597656

Token 47: ' veut' (ID: 41653)
  Prédit: ' veut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' veut' → logprob: -0.26012882590293884
    2. ' souhaite' → logprob: -1.6351288557052612
    3. 'ex' → logprob: -3.6351287364959717
    4. ' extrait' → logprob: -5.635128974914551
    5. 've' → logprob: -6.385128974914551
    6. ' veux' → logprob: -6.885128974914551
    7. 'veux' → logprob: -8.51012897491455
    8. ' ' → logprob: -8.88512897491455
    9. ' want' → logprob: -9.01012897491455
    10. ' cherche' → logprob: -9.26012897491455

Token 48: ' extra' (ID: 5018)
  Prédit: ' extra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extra' → logprob: -0.26182544231414795
    2. 'extra' → logprob: -1.761825442314148
    3. 'ex' → logprob: -3.5118255615234375
    4. ' connaître' → logprob: -4.1368255615234375
    5. ' récupérer' → logprob: -5.5118255615234375
    6. '  ' → logprob: -6.3868255615234375
    7. ' ' → logprob: -6.3868255615234375
    8. '   ' → logprob: -7.0118255615234375
    9. ' connaitre' → logprob: -7.1368255615234375
    10. ' obtenir' → logprob: -7.5118255615234375

Token 49: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.02753153070807457
    2. '   ' → logprob: -4.527531623840332
    3. '       ' → logprob: -5.902531623840332
    4. 'i' → logprob: -6.527531623840332
    5. '    ' → logprob: -6.902531623840332
    6. '  ' → logprob: -6.902531623840332
    7. 'irer' → logprob: -7.027531623840332
    8. '```' → logprob: -7.215031623840332
    9. '>' → logprob: -7.340031623840332
    10. 'r' → logprob: -7.465031623840332

Token 50: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2318468987941742
    2. 'le' → logprob: -1.6068469285964966
    3. ' la' → logprob: -6.606846809387207
    4. ' ' → logprob: -6.981846809387207
    5. '_le' → logprob: -6.981846809387207
    6. ' l' → logprob: -7.106846809387207
    7. '  ' → logprob: -7.856846809387207
    8. 'l' → logprob: -7.856846809387207
    9. ')' → logprob: -7.981846809387207
    10. 'Le' → logprob: -8.106846809387207

Token 51: ' chiffre' (ID: 107420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5246182680130005
    2. 'ch' → logprob: -1.6496182680130005
    3. ' chiffre' → logprob: -2.149618148803711
    4. 'c' → logprob: -3.524618148803711
    5. ' i' → logprob: -4.274618148803711
    6. '   ' → logprob: -4.462118148803711
    7. '  ' → logprob: -4.962118148803711
    8. ' c' → logprob: -5.212118148803711
    9. 'i' → logprob: -5.462118148803711
    10. ' digit' → logprob: -5.962118148803711

Token 52: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7093454599380493
    2. '   ' → logprob: -0.9593454599380493
    3. ' à' → logprob: -2.5843453407287598
    4. '```' → logprob: -3.7093453407287598
    5. ' en' → logprob: -5.08434534072876
    6. ' ' → logprob: -5.45934534072876
    7. ',' → logprob: -5.58434534072876
    8. 'à' → logprob: -6.33434534072876
    9. 's' → logprob: -7.08434534072876
    10. '):' → logprob: -7.20934534072876

Token 53: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24137265980243683
    2. ')' → logprob: -2.116372585296631
    3. '"""
' → logprob: -2.616372585296631
    4. ')
' → logprob: -4.741372585296631
    5. '```' → logprob: -4.991372585296631
    6. '"""' → logprob: -6.116372585296631
    7. '    
' → logprob: -7.241372585296631
    8. '    ' → logprob: -7.866372585296631
    9. '       ' → logprob: -8.116373062133789
    10. '``' → logprob: -8.366373062133789

Token 54: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.24717868864536285
    2. ' i' → logprob: -1.6221786737442017
    3. '   ' → logprob: -4.122178554534912
    4. '       ' → logprob: -5.372178554534912
    5. ' ' → logprob: -9.12217903137207
    6. '    ' → logprob: -9.12217903137207
    7. ')' → logprob: -9.12217903137207
    8. '  ' → logprob: -9.87217903137207
    9. 'position' → logprob: -10.12217903137207
    10. 'Returns' → logprob: -10.12217903137207

Token 55: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3395540118217468
    2. ')' → logprob: -1.4645540714263916
    3. ' ):' → logprob: -3.2145540714263916
    4. ' )' → logprob: -5.4645538330078125
    5. '   ' → logprob: -5.4645538330078125
    6. ' :' → logprob: -5.7145538330078125
    7. ' ' → logprob: -6.5895538330078125
    8. ':' → logprob: -6.5895538330078125
    9. ' (' → logprob: -6.9645538330078125
    10. '  ' → logprob: -8.464553833007812

Token 56: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0017198040150105953
    2. ' int' → logprob: -6.876719951629639
    3. ')' → logprob: -7.376719951629639
    4. '):' → logprob: -10.75171947479248
    5. '=int' → logprob: -11.50171947479248
    6. '[int' → logprob: -11.62671947479248
    7. '(int' → logprob: -11.87671947479248
    8. ',int' → logprob: -13.12671947479248
    9. '<int' → logprob: -13.12671947479248
    10. ']int' → logprob: -13.12671947479248

Token 57: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005176475970074534
    2. ')' → logprob: -7.625517845153809
    3. '   ' → logprob: -11.250517845153809
    4. ' ):' → logprob: -11.625517845153809
    5. '):
' → logprob: -12.250517845153809
    6. ':' → logprob: -13.500517845153809
    7. ' ' → logprob: -14.750517845153809
    8. '```' → logprob: -15.375517845153809
    9. '"):' → logprob: -15.625517845153809
    10. ''):' → logprob: -15.625517845153809

Token 58: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.5678271651268005
    2. ' L' → logprob: -1.0678272247314453
    3. ' position' → logprob: -4.067827224731445
    4. ' int' → logprob: -4.192827224731445
    5. 'La' → logprob: -4.317827224731445
    6. ' la' → logprob: -4.442827224731445
    7. ' l' → logprob: -4.567827224731445
    8. 'Position' → logprob: -5.317827224731445
    9. ' Le' → logprob: -5.442827224731445
    10. ' Position' → logprob: -6.192827224731445

Token 59: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.006970040500164032
    2. ' ' → logprob: -5.631969928741455
    3. 'position' → logprob: -6.381969928741455
    4. '   ' → logprob: -6.631969928741455
    5. ' ' → logprob: -9.006970405578613
    6. ' i' → logprob: -9.506970405578613
    7. '	position' → logprob: -10.006970405578613
    8. '  ' → logprob: -10.131970405578613
    9. '    ' → logprob: -11.506970405578613
    10. ')' → logprob: -11.506970405578613

Token 60: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4073322117328644
    2. '):' → logprob: -1.907332181930542
    3. ' ' → logprob: -2.657332181930542
    4. ' )' → logprob: -3.407332181930542
    5. ' à' → logprob: -3.532332181930542
    6. '   ' → logprob: -4.157332420349121
    7. ' ):' → logprob: -4.657332420349121
    8. ' du' → logprob: -5.032332420349121
    9. '```' → logprob: -5.282332420349121
    10. ' dans' → logprob: -5.782332420349121

Token 61: ' chiffre' (ID: 107420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5180313587188721
    2. ' chiffre' → logprob: -1.643031358718872
    3. 'ch' → logprob: -1.893031358718872
    4. 'c' → logprob: -4.268031120300293
    5. ' )' → logprob: -4.893031120300293
    6. '   ' → logprob: -4.893031120300293
    7. '  ' → logprob: -5.143031120300293
    8. ' ' → logprob: -5.143031120300293
    9. ')' → logprob: -5.893031120300293
    10. ' ch' → logprob: -6.143031120300293

Token 62: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3955986797809601
    2. '   ' → logprob: -1.8955986499786377
    3. '):' → logprob: -2.0205986499786377
    4. ' )' → logprob: -4.145598888397217
    5. '):
' → logprob: -4.395598888397217
    6. ' ' → logprob: -5.270598888397217
    7. ' à' → logprob: -5.645598888397217
    8. ' ):' → logprob: -6.270598888397217
    9. '    ' → logprob: -7.270598888397217
    10. '  ' → logprob: -7.270598888397217

Token 63: ' extra' (ID: 5018)
  Prédit: ' extra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extra' → logprob: -0.0296377781778574
    2. 'extra' → logprob: -4.029637813568115
    3. ' ' → logprob: -5.279637813568115
    4. 'ex' → logprob: -5.654637813568115
    5. ' extr' → logprob: -7.279637813568115
    6. ' examiner' → logprob: -7.404637813568115
    7. ' récupérer' → logprob: -7.654637813568115
    8. ' extrait' → logprob: -8.904637336730957
    9. ' chercher' → logprob: -9.029637336730957
    10. ' vérifier' → logprob: -9.154637336730957

Token 64: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.6761960387229919
    2. 'r' → logprob: -2.0511960983276367
    3. 't' → logprob: -2.4261960983276367
    4. 'x' → logprob: -2.8011960983276367
    5. 'i' → logprob: -3.0511960983276367
    6. '   ' → logprob: -3.8011960983276367
    7. 'irer' → logprob: -3.9261960983276367
    8. ')' → logprob: -4.051196098327637
    9. 'ct' → logprob: -4.176196098327637
    10. 'c' → logprob: -4.676196098327637

Token 65: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05595947429537773
    2. '):' → logprob: -3.305959463119507
    3. '   ' → logprob: -4.055959701538086
    4. '):
' → logprob: -8.055959701538086
    5. ' )' → logprob: -9.930959701538086
    6. '):
' → logprob: -11.680959701538086
    7. ' ' → logprob: -11.680959701538086
    8. ')**' → logprob: -11.680959701538086
    9. '`)' → logprob: -11.930959701538086
    10. '")' → logprob: -12.305959701538086

Token 66: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.06412268429994583
    2. 't' → logprob: -4.189122676849365
    3. ' ' → logprob: -4.314122676849365
    4. ' part' → logprob: -4.564122676849365
    5. 'part' → logprob: -5.439122676849365
    6. ' partir' → logprob: -5.814122676849365
    7. ')' → logprob: -5.814122676849365
    8. 'base' → logprob: -5.814122676849365
    9. ' t' → logprob: -6.189122676849365
    10. ' )' → logprob: -6.314122676849365

Token 67: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.70060795545578
    2. ' ' → logprob: -0.70060795545578
    3. ' ' → logprob: -5.200607776641846
    4. '_' → logprob: -6.450607776641846
    5. ' )' → logprob: -9.575608253479004
    6. 'e' → logprob: -10.575608253479004
    7. 'space' → logprob: -10.825608253479004
    8. ' trois' → logprob: -10.825608253479004
    9. ' ' → logprob: -10.950608253479004
    10. ' _' → logprob: -10.950608253479004

Token 68: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004079589620232582
    2. ' ' → logprob: -5.504079818725586
    3. '```' → logprob: -14.504079818725586
    4. '10' → logprob: -15.379079818725586
    5. ' ' → logprob: -15.879079818725586
    6. '_' → logprob: -16.504079818725586
    7. ')' → logprob: -17.004079818725586
    8. '`' → logprob: -17.004079818725586
    9. '   ' → logprob: -17.254079818725586
    10. ' )' → logprob: -17.504079818725586

Token 69: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6602147221565247
    2. '   ' → logprob: -1.2852146625518799
    3. '):' → logprob: -1.6602146625518799
    4. '):
' → logprob: -4.160214900970459
    5. ' )' → logprob: -8.6602144241333
    6. '):

' → logprob: -8.7852144241333
    7. ')
' → logprob: -9.0352144241333
    8. '```' → logprob: -9.2852144241333
    9. '):
' → logprob: -9.4102144241333
    10. ' ' → logprob: -9.6602144241333

Token 70: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010897369123995304
    2. '):' → logprob: -4.885897159576416
    3. ' )' → logprob: -6.135897159576416
    4. 'dans' → logprob: -8.385897636413574
    5. 'int' → logprob: -8.760897636413574
    6. ').' → logprob: -8.885897636413574
    7. 'de' → logprob: -9.135897636413574
    8. '):
' → logprob: -9.510897636413574
    9. ' dans' → logprob: -9.635897636413574
    10. ')`' → logprob: -10.260897636413574

Token 71: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16214580833911896
    2. '):' → logprob: -1.9121458530426025
    3. '=' → logprob: -7.287145614624023
    4. ',' → logprob: -8.287145614624023
    5. ').' → logprob: -8.287145614624023
    6. '):
' → logprob: -8.537145614624023
    7. ':' → logprob: -9.287145614624023
    8. ' )' → logprob: -9.412145614624023
    9. '+' → logprob: -9.912145614624023
    10. 'e' → logprob: -10.037145614624023

Token 72: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.47689127922058105
    2. ' la' → logprob: -1.726891279220581
    3. 'l' → logprob: -2.601891279220581
    4. ' le' → logprob: -2.976891279220581
    5. ' ' → logprob: -3.351891279220581
    6. 'le' → logprob: -4.35189151763916
    7. 'la' → logprob: -5.10189151763916
    8. ' les' → logprob: -5.35189151763916
    9. 'les' → logprob: -5.60189151763916
    10. ' ' → logprob: -5.85189151763916

Token 73: ' moins' (ID: 15924)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.07916659861803055
    2. ' chiffre' → logprob: -3.0791666507720947
    3. ' plus' → logprob: -4.704166412353516
    4. 'c' → logprob: -4.954166412353516
    5. 'plus' → logprob: -5.329166412353516
    6. ' ch' → logprob: -6.579166412353516
    7. ' ' → logprob: -6.579166412353516
    8. ' c' → logprob: -7.204166412353516
    9. 'd' → logprob: -7.204166412353516
    10. ' ' → logprob: -7.329166412353516

Token 74: ' signific' (ID: 5404)
  Prédit: ' significant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' significant' → logprob: -0.05172794312238693
    2. 's' → logprob: -3.6767280101776123
    3. 'sign' → logprob: -4.176727771759033
    4. ' signific' → logprob: -5.426727771759033
    5. ' à' → logprob: -5.926727771759033
    6. ' знач' → logprob: -7.801727771759033
    7. 'sig' → logprob: -8.051728248596191
    8. ')' → logprob: -8.176728248596191
    9. '```' → logprob: -8.176728248596191
    10. 'import' → logprob: -8.551728248596191

Token 75: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.043440788984298706
    2. 'a' → logprob: -3.793440818786621
    3. 'at' → logprob: -4.543440818786621
    4. 'if' → logprob: -5.543440818786621
    5. 'f' → logprob: -5.668440818786621
    6. ' at' → logprob: -7.168440818786621
    7. 'ant' → logprob: -7.418440818786621
    8. 't' → logprob: -8.043440818786621
    9. 'e' → logprob: -9.793440818786621
    10. 'ent' → logprob: -10.293440818786621

Token 76: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0521867573261261
    2. ' )' → logprob: -4.177186965942383
    3. ')
' → logprob: -4.427186965942383
    4. 'e' → logprob: -4.427186965942383
    5. ').' → logprob: -5.427186965942383
    6. '):
' → logprob: -6.302186965942383
    7. ' )
' → logprob: -6.802186965942383
    8. 'digit' → logprob: -7.552186965942383
    9. ' digit' → logprob: -7.677186965942383
    10. ' des' → logprob: -7.677186965942383

Token 77: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0925997719168663
    2. '"""
' → logprob: -2.592599868774414
    3. ')' → logprob: -4.967599868774414
    4. '"""' → logprob: -5.842599868774414
    5. '"' → logprob: -6.717599868774414
    6. '
' → logprob: -6.967599868774414
    7. ')
' → logprob: -7.592599868774414
    8. '    
' → logprob: -8.217599868774414
    9. ' """
' → logprob: -8.842599868774414
    10. '):
' → logprob: -9.092599868774414

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1353493183851242
    2. '"""' → logprob: -3.1353492736816406
    3. '"""
' → logprob: -3.2603492736816406
    4. ')' → logprob: -3.6353492736816406
    5. 'Returns' → logprob: -4.385349273681641
    6. ' """
' → logprob: -6.010349273681641
    7. '    
' → logprob: -7.385349273681641
    8. ')
' → logprob: -7.510349273681641
    9. '""' → logprob: -8.01034927368164
    10. '")' → logprob: -8.13534927368164

Token 79: ' Returns' (ID: 9609)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7002863883972168
    2. '   ' → logprob: -0.8252863883972168
    3. '"""
' → logprob: -3.325286388397217
    4. ')' → logprob: -4.075286388397217
    5. 'return' → logprob: -4.825286388397217
    6. ' """' → logprob: -6.325286388397217
    7. ' """
' → logprob: -7.325286388397217
    8. 'Returns' (adapté à ' Returns') → logprob: -7.450286388397217
    9. 'if' → logprob: -7.825286388397217
    10. '""' → logprob: -8.075286865234375

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3270501494407654
    2. ' :' → logprob: -1.8270502090454102
    3. ' int' → logprob: -2.82705020904541
    4. '   ' → logprob: -3.20205020904541
    5. 'int' → logprob: -5.57705020904541
    6. ' t' → logprob: -5.70205020904541
    7. ':int' → logprob: -5.82705020904541
    8. '    ' → logprob: -5.95205020904541
    9. 't' → logprob: -6.57705020904541
    10. '```' → logprob: -7.45205020904541

Token 81: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0152444364503026
    2. '   ' → logprob: -4.765244483947754
    3. 'int' → logprob: -5.265244483947754
    4. '    ' → logprob: -6.890244483947754
    5. ' l' → logprob: -8.640244483947754
    6. '       ' → logprob: -9.140244483947754
    7. ' le' → logprob: -9.890244483947754
    8. ' ' → logprob: -11.140244483947754
    9. '(int' → logprob: -11.390244483947754
    10. ' ' → logprob: -11.515244483947754

Token 82: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.033021230250597
    2. ' int' → logprob: -4.033021450042725
    3. '   ' → logprob: -4.283021450042725
    4. 'return' → logprob: -7.283021450042725
    5. '       ' → logprob: -9.033020973205566
    6. ' return' → logprob: -9.783020973205566
    7. '(int' → logprob: -10.158020973205566
    8. 't' → logprob: -11.033020973205566
    9. '```' → logprob: -11.033020973205566
    10. 's' → logprob: -11.908020973205566

Token 83: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21156038343906403
    2. '   ' → logprob: -2.4615604877471924
    3. ' :' → logprob: -2.7115604877471924
    4. ':
' → logprob: -4.086560249328613
    5. '.' → logprob: -5.461560249328613
    6. '"""' → logprob: -5.961560249328613
    7. ' :
' → logprob: -6.086560249328613
    8. '    ' → logprob: -6.336560249328613
    9. ' ' → logprob: -6.586560249328613
    10. '
' → logprob: -6.711560249328613

Token 84: ' Le' (ID: 2018)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.005366091150790453
    2. '(t' → logprob: -6.005366325378418
    3. ' t' → logprob: -7.130366325378418
    4. ' Le' → logprob: -7.380366325378418
    5. ' ' → logprob: -7.505366325378418
    6. 'Le' → logprob: -8.255366325378418
    7. ' le' → logprob: -8.380366325378418
    8. '(' → logprob: -8.505366325378418
    9. '   ' → logprob: -9.380366325378418
    10. 't' → logprob: -9.505366325378418

Token 85: ' chiffre' (ID: 107420)
  Prédit: ' chiffre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chiffre' → logprob: -0.48481494188308716
    2. ' (' → logprob: -1.4848148822784424
    3. 'ch' → logprob: -2.3598148822784424
    4. ' t' → logprob: -4.2348151206970215
    5. 't' → logprob: -4.3598151206970215
    6. '(t' → logprob: -4.6098151206970215
    7. ' code' → logprob: -5.7348151206970215
    8. ' ch' → logprob: -5.8598151206970215
    9. '```' → logprob: -5.8598151206970215
    10. 's' → logprob: -5.8598151206970215

Token 86: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8483151197433472
    2. ' à' → logprob: -1.7233151197433472
    3. ' en' → logprob: -1.8483151197433472
    4. '   ' → logprob: -2.8483152389526367
    5. 's' → logprob: -3.3483152389526367
    6. '3' → logprob: -3.8483152389526367
    7. ' t' → logprob: -3.9733152389526367
    8. ' s' → logprob: -4.098315238952637
    9. ' extrait' → logprob: -4.348315238952637
    10. '_' → logprob: -4.348315238952637

Token 87: ' l' (ID: 305)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.17660105228424072
    2. 't' → logprob: -2.426600933074951
    3. 's' → logprob: -3.801600933074951
    4. ' base' → logprob: -4.051600933074951
    5. ' la' → logprob: -4.176600933074951
    6. ' tern' → logprob: -5.301600933074951
    7. ' ' → logprob: -5.426600933074951
    8. '3' → logprob: -5.676600933074951
    9. ' l' → logprob: -6.676600933074951
    10. ' code' → logprob: -6.801600933074951

Token 88: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.4933861494064331
    2. ' entier' → logprob: -1.618386149406433
    3. 'ent' → logprob: -2.2433862686157227
    4. 'a' → logprob: -3.6183862686157227
    5. 'base' → logprob: -4.493386268615723
    6. ''' → logprob: -4.493386268615723
    7. 'i' → logprob: -4.618386268615723
    8. 'e' → logprob: -4.618386268615723
    9. ''ex' → logprob: -5.868386268615723
    10. ''i' → logprob: -6.493386268615723

Token 89: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.19213522970676422
    2. 'i' → logprob: -1.817135214805603
    3. 'ière' → logprob: -5.442135334014893
    4. 'ié' → logprob: -5.817135334014893
    5. 'er' → logprob: -6.192135334014893
    6. 't' → logprob: -7.067135334014893
    7. 'e' → logprob: -7.067135334014893
    8. '3' → logprob: -9.067134857177734
    9. '   ' → logprob: -9.067134857177734
    10. 'é' → logprob: -9.067134857177734

Token 90: ' t' (ID: 260)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3301319479942322
    2. ' à' → logprob: -2.205132007598877
    3. ' en' → logprob: -2.705132007598877
    4. ' t' → logprob: -2.705132007598877
    5. 't' → logprob: -4.205132007598877
    6. '   ' → logprob: -4.955132007598877
    7. ' s' → logprob: -5.580132007598877
    8. 'en' → logprob: -6.330132007598877
    9. '3' → logprob: -6.455132007598877
    10. ' extrait' → logprob: -6.705132007598877

Token 91: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11306837946176529
    2. ' à' → logprob: -2.4880683422088623
    3. ' en' → logprob: -4.488068580627441
    4. '   ' → logprob: -4.988068580627441
    5. ',' → logprob: -5.988068580627441
    6. '  ' → logprob: -7.738068580627441
    7. ' modulo' → logprob: -7.988068580627441
    8. 'à' → logprob: -8.113068580627441
    9. 'en' → logprob: -8.238068580627441
    10. '```' → logprob: -8.488068580627441

Token 92: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.0060797687619924545
    2. ' ' → logprob: -5.38107967376709
    3. 'base' → logprob: -7.00607967376709
    4. ' position' → logprob: -8.38107967376709
    5. '   ' → logprob: -9.00607967376709
    6. ' i' → logprob: -9.50607967376709
    7. '  ' → logprob: -10.25607967376709
    8. '	base' → logprob: -10.75607967376709
    9. '_base' → logprob: -10.88107967376709
    10. ' b' → logprob: -11.88107967376709

Token 93: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16210922598838806
    2. '3' → logprob: -1.9121092557907104
    3. ' ' → logprob: -6.662109375
    4. '_' → logprob: -7.787109375
    5. 'space' → logprob: -9.787109375
    6. 'e' → logprob: -10.037109375
    7. ' ,' → logprob: -11.412109375
    8. ' )' → logprob: -11.537109375
    9. ' space' → logprob: -11.787109375
    10. ' tern' → logprob: -11.787109375

Token 94: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01251329854130745
    2. ' ' → logprob: -4.387513160705566
    3. ''' → logprob: -14.512513160705566
    4. '```' → logprob: -14.637513160705566
    5. '"' → logprob: -14.762513160705566
    6. ' ' → logprob: -15.075013160705566
    7. '_' → logprob: -15.325013160705566
    8. '`' → logprob: -15.325013160705566
    9. '³' → logprob: -15.950013160705566
    10. ')' → logprob: -15.950013160705566

Token 95: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07155346125364304
    2. ')' → logprob: -3.8215534687042236
    3. ' à' → logprob: -4.0715532302856445
    4. '```' → logprob: -4.5715532302856445
    5. '    
' → logprob: -5.4465532302856445
    6. ',' → logprob: -5.6965532302856445
    7. '.' → logprob: -5.6965532302856445
    8. ' ' → logprob: -6.6965532302856445
    9. ' )' → logprob: -7.0715532302856445
    10. '    ' → logprob: -7.0715532302856445

Token 96: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08701376616954803
    2. ' position' → logprob: -2.9620137214660645
    3. 'i' → logprob: -4.2120137214660645
    4. ' ' → logprob: -4.5870137214660645
    5. ' la' → logprob: -5.2120137214660645
    6. ' l' → logprob: -7.0870137214660645
    7. 'position' → logprob: -8.837014198303223
    8. ' ' → logprob: -9.962014198303223
    9. '	i' → logprob: -9.962014198303223
    10. '   ' → logprob: -10.712014198303223

Token 97: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2642586827278137
    2. ' position' → logprob: -1.764258623123169
    3. 'i' → logprob: -2.889258623123169
    4. ' ' → logprob: -6.139258861541748
    5. '   ' → logprob: -6.514258861541748
    6. 'position' → logprob: -6.514258861541748
    7. ' ' → logprob: -10.01425838470459
    8. '	i' → logprob: -10.38925838470459
    9. '  ' → logprob: -10.76425838470459
    10. ' positions' → logprob: -11.01425838470459

Token 98: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05988655984401703
    2. 'i' → logprob: -2.9348864555358887
    3. ' ' → logprob: -5.309886455535889
    4. '	i' → logprob: -10.934886932373047
    5. ' ' → logprob: -11.059886932373047
    6. '  ' → logprob: -12.309886932373047
    7. '   ' → logprob: -12.434886932373047
    8. '`' → logprob: -12.684886932373047
    9. ' `' → logprob: -13.684886932373047
    10. '```' → logprob: -14.309886932373047

Token 99: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10417629033327103
    2. ')' → logprob: -3.4791762828826904
    3. ':' → logprob: -3.8541762828826904
    4. ':
' → logprob: -4.1041765213012695
    5. '):
' → logprob: -4.2291765213012695
    6. '):' → logprob: -4.3541765213012695
    7. '
' → logprob: -6.8541765213012695
    8. '    
' → logprob: -7.1041765213012695
    9. '```' → logprob: -8.60417652130127
    10. ' :' → logprob: -8.60417652130127

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023205289617180824
    2. '"""' → logprob: -4.148205280303955
    3. '"""
' → logprob: -5.023205280303955
    4. '"' → logprob: -8.648205757141113
    5. '
' → logprob: -9.273205757141113
    6. ')' → logprob: -9.523205757141113
    7. '    
' → logprob: -9.648205757141113
    8. '```' → logprob: -10.023205757141113
    9. '""' → logprob: -10.273205757141113
    10. '"""

' → logprob: -10.773205757141113

Token 101: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04693184792995453
    2. '"""' → logprob: -3.421931743621826
    3. '"""
' (adapté à ' """
') → logprob: -4.796931743621826
    4. ')' → logprob: -6.171931743621826
    5. '
' → logprob: -6.921931743621826
    6. '```' → logprob: -7.796931743621826
    7. ' """
' → logprob: -7.796931743621826
    8. ' """' → logprob: -8.296932220458984
    9. '):
' → logprob: -9.046932220458984
    10. '    ' → logprob: -9.296932220458984

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030948854982852936
    2. ' return' → logprob: -6.503094673156738
    3. 'return' → logprob: -7.003094673156738
    4. '    
' → logprob: -8.378094673156738
    5. ' ' → logprob: -9.378094673156738
    6. '  ' → logprob: -9.503094673156738
    7. '    ' → logprob: -9.628094673156738
    8. ' 
' → logprob: -9.628094673156738
    9. '
' → logprob: -9.753094673156738
    10. 'r' → logprob: -9.878094673156738

Token 103: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7240580916404724
    2. ' return' → logprob: -1.3490581512451172
    3. 'return' → logprob: -1.4740581512451172
    4. 'r' → logprob: -3.724058151245117
    5. ' 
' → logprob: -7.099058151245117
    6. ' r' → logprob: -7.599058151245117
    7. '    
' → logprob: -8.099058151245117
    8. ' ' → logprob: -8.224058151245117
    9. 're' → logprob: -8.724058151245117
    10. '
' → logprob: -8.849058151245117

Token 104: ' Pour' (ID: 13931)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7117263078689575
    2. ' return' → logprob: -0.9617263078689575
    3. 'return' → logprob: -2.336726188659668
    4. '(t' → logprob: -4.336726188659668
    5. ' t' → logprob: -5.211726188659668
    6. ' ' → logprob: -5.711726188659668
    7. '(' → logprob: -5.836726188659668
    8. 't' → logprob: -5.836726188659668
    9. '   ' → logprob: -6.211726188659668
    10. 's' → logprob: -8.586726188659668

Token 105: ' extra' (ID: 5018)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08357378840446472
    2. ' t' → logprob: -3.083573818206787
    3. 't' → logprob: -3.708573818206787
    4. '(' → logprob: -5.083573818206787
    5. ' ' → logprob: -6.458573818206787
    6. '(t' → logprob: -7.583573818206787
    7. ' retourner' → logprob: -8.333573341369629
    8. 's' → logprob: -8.458573341369629
    9. ' return' → logprob: -8.708573341369629
    10. ' ((' → logprob: -8.958573341369629

Token 106: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.22303158044815063
    2. '   ' → logprob: -2.098031520843506
    3. 'irer' → logprob: -3.848031520843506
    4. 'i' → logprob: -4.723031520843506
    5. 'm' → logprob: -4.848031520843506
    6. 'r' → logprob: -5.098031520843506
    7. 'ct' → logprob: -5.098031520843506
    8. '       ' → logprob: -5.223031520843506
    9. '    ' → logprob: -6.098031520843506
    10. 'p' → logprob: -6.098031520843506

Token 107: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03694307804107666
    2. '(t' → logprob: -3.536942958831787
    3. '(' → logprob: -5.161942958831787
    4. ' t' → logprob: -7.661942958831787
    5. '   ' → logprob: -7.661942958831787
    6. 't' → logprob: -8.036943435668945
    7. ' ' → logprob: -8.911943435668945
    8. ' return' → logprob: -11.661943435668945
    9. '(
' → logprob: -11.911943435668945
    10. ' (
' → logprob: -12.536943435668945

Token 108: ' chiffre' (ID: 107420)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.474603533744812
    2. ' (' → logprob: -1.349603533744812
    3. '(t' → logprob: -2.8496036529541016
    4. '(ch' → logprob: -3.8496036529541016
    5. ' chiffre' → logprob: -3.9746036529541016
    6. '(' → logprob: -4.599603652954102
    7. 't' → logprob: -5.349603652954102
    8. 's' → logprob: -7.099603652954102
    9. ' ch' → logprob: -7.224603652954102
    10. 'i' → logprob: -7.224603652954102

Token 109: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03300151601433754
    2. ' return' → logprob: -3.65800142288208
    3. 'return' → logprob: -5.28300142288208
    4. 't' → logprob: -7.53300142288208
    5. ' t' → logprob: -7.78300142288208
    6. ' (' → logprob: -8.408001899719238
    7. '    ' → logprob: -9.908001899719238
    8. '       ' → logprob: -10.033001899719238
    9. ' de' → logprob: -10.033001899719238
    10. ',' → logprob: -10.283001899719238

Token 110: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.40672606229782104
    2. '   ' → logprob: -1.4067261219024658
    3. ' on' → logprob: -2.781726121902466
    4. 'return' → logprob: -3.656726121902466
    5. 'on' → logprob: -7.281725883483887
    6. ' il' → logprob: -7.906725883483887
    7. ' retourner' → logprob: -9.531725883483887
    8. ' ' → logprob: -9.656725883483887
    9. '    ' → logprob: -9.781725883483887
    10. ' retour' → logprob: -10.031725883483887

Token 111: ' effect' (ID: 3159)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6388654708862305
    2. ' return' → logprob: -1.1388654708862305
    3. ' retourne' → logprob: -3.6388654708862305
    4. ' (' → logprob: -3.7638654708862305
    5. 'return' → logprob: -3.8888654708862305
    6. 't' → logprob: -3.8888654708862305
    7. ' utilise' → logprob: -4.5138654708862305
    8. '   ' → logprob: -4.7638654708862305
    9. 'div' → logprob: -5.0138654708862305
    10. '//' → logprob: -5.3888654708862305

Token 112: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0012916665291413665
    2. 'u' → logprob: -6.751291751861572
    3. 'uer' → logprob: -9.501291275024414
    4. '   ' → logprob: -10.501291275024414
    5. ' u' → logprob: -12.126291275024414
    6. 'ure' → logprob: -12.501291275024414
    7. 'uate' → logprob: -13.376291275024414
    8. ' ue' → logprob: -13.626291275024414
    9. 'uera' → logprob: -13.626291275024414
    10. 'uez' → logprob: -13.751291275024414

Token 113: ' une' (ID: 2463)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2965713441371918
    2. ' t' → logprob: -1.9215713739395142
    3. 't' → logprob: -2.6715712547302246
    4. '   ' → logprob: -3.7965712547302246
    5. '(t' → logprob: -4.171571254730225
    6. '(' → logprob: -6.546571254730225
    7. ' ' → logprob: -6.546571254730225
    8. ' un' → logprob: -9.296571731567383
    9. ' une' → logprob: -9.421571731567383
    10. 's' → logprob: -9.796571731567383

Token 114: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.7376807332038879
    2. ' division' → logprob: -1.1126806735992432
    3. 'div' → logprob: -1.9876806735992432
    4. 't' → logprob: -3.737680673599243
    5. '   ' → logprob: -4.862680912017822
    6. ' t' → logprob: -5.362680912017822
    7. ' (' → logprob: -5.862680912017822
    8. 's' → logprob: -5.862680912017822
    9. ' //' → logprob: -5.862680912017822
    10. '//' → logprob: -6.487680912017822

Token 115: ' entière' (ID: 61583)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7123609781265259
    2. ' entière' → logprob: -0.8373609781265259
    3. 't' → logprob: -3.0873608589172363
    4. 'ent' → logprob: -4.337360858917236
    5. ' ' → logprob: -4.962360858917236
    6. ' entier' → logprob: -5.837360858917236
    7. ' t' → logprob: -6.337360858917236
    8. 's' → logprob: -7.212360858917236
    9. 'integer' → logprob: -7.462360858917236
    10. ' ent' → logprob: -7.587360858917236

Token 116: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06692641973495483
    2. 't' → logprob: -4.0669264793396
    3. ' t' → logprob: -4.0669264793396
    4. '(t' → logprob: -4.1919264793396
    5. ' (' → logprob: -4.8169264793396
    6. ' par' → logprob: -5.8169264793396
    7. '(' → logprob: -6.8169264793396
    8. '    ' → logprob: -7.4419264793396
    9. ' de' → logprob: -7.8169264793396
    10. 'de' → logprob: -7.9419264793396

Token 117: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.34627681970596313
    2. 't' → logprob: -2.2212767601013184
    3. ' t' → logprob: -2.3462767601013184
    4. '   ' → logprob: -2.8462767601013184
    5. 'p' → logprob: -3.5962767601013184
    6. ' p' → logprob: -7.471276760101318
    7. '    ' → logprob: -7.721276760101318
    8. 'return' → logprob: -8.596277236938477
    9. ' return' → logprob: -8.721277236938477
    10. ' suiv' → logprob: -8.846277236938477

Token 118: ' on' (ID: 402)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7350612878799438
    2. 't' → logprob: -1.3600612878799438
    3. ' t' → logprob: -1.7350612878799438
    4. ' on' → logprob: -3.9850611686706543
    5. '(t' → logprob: -4.110061168670654
    6. '3' → logprob: -4.235061168670654
    7. '(' → logprob: -4.735061168670654
    8. ' ' → logprob: -5.360061168670654
    9. ' mod' → logprob: -5.360061168670654
    10. 'on' → logprob: -5.485061168670654

Token 119: ' prend' (ID: 37463)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.07050817459821701
    2. ' div' → logprob: -3.3205082416534424
    3. '%' → logprob: -4.570508003234863
    4. 'mod' → logprob: -4.945508003234863
    5. ' mod' → logprob: -5.820508003234863
    6. 'n' → logprob: -6.320508003234863
    7. ' prend' → logprob: -6.445508003234863
    8. 'return' → logprob: -6.695508003234863
    9. ' //' → logprob: -6.820508003234863
    10. ' %' → logprob: -7.195508003234863

Token 120: ' le' (ID: 505)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.1394921839237213
    2. 't' → logprob: -2.3894922733306885
    3. ' (' → logprob: -4.389492034912109
    4. ' le' → logprob: -4.514492034912109
    5. '(t' → logprob: -4.889492034912109
    6. 'le' → logprob: -6.139492034912109
    7. '%' → logprob: -6.389492034912109
    8. ' ' → logprob: -6.639492034912109
    9. ' modulo' → logprob: -6.764492034912109
    10. ' %' → logprob: -7.389492034912109

Token 121: ' reste' (ID: 26769)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4852696657180786
    2. '%' → logprob: -0.9852696657180786
    3. ' t' → logprob: -5.735269546508789
    4. ' modulo' → logprob: -5.860269546508789
    5. 'mod' → logprob: -6.485269546508789
    6. 't' → logprob: -6.485269546508789
    7. ' //' → logprob: -7.485269546508789
    8. ' %
' → logprob: -7.610269546508789
    9. '(t' → logprob: -8.610269546508789
    10. ' mod' → logprob: -8.735269546508789

Token 122: ' par' (ID: 686)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.478124976158142
    2. ' t' → logprob: -1.603124976158142
    3. ' de' → logprob: -1.728124976158142
    4. '   ' → logprob: -1.853124976158142
    5. ' ' → logprob: -2.1031250953674316
    6. 't' → logprob: -3.2281250953674316
    7. '(' → logprob: -3.3531250953674316
    8. '    ' → logprob: -4.353125095367432
    9. '(t' → logprob: -4.353125095367432
    10. 'de' → logprob: -5.853125095367432

Token 123: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02976311184465885
    2. ' ' → logprob: -3.5297632217407227
    3. '   ' → logprob: -12.279763221740723
    4. '27' → logprob: -12.779763221740723
    5. ' trois' → logprob: -13.654763221740723
    6. ' ' → logprob: -14.029763221740723
    7. '9' → logprob: -14.154763221740723
    8. 'div' → logprob: -14.529763221740723
    9. ' tres' → logprob: -15.279763221740723
    10. '' → logprob: -15.779763221740723

Token 124: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0010378103470429778
    2. ' ' → logprob: -6.87603759765625
    3. '9' → logprob: -13.25103759765625
    4. '   ' → logprob: -13.37603759765625
    5. '```' → logprob: -14.12603759765625
    6. '27' → logprob: -15.12603759765625
    7. '  ' → logprob: -15.62603759765625
    8. '`' → logprob: -16.25103759765625
    9. ' trois' → logprob: -16.68853759765625
    10. '    ' → logprob: -16.75103759765625

Token 125: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003579872427508235
    2. '    
' → logprob: -5.878580093383789
    3. '
' → logprob: -8.628580093383789
    4. 'return' → logprob: -8.753580093383789
    5. ' return' → logprob: -8.753580093383789
    6. '  
' → logprob: -9.878580093383789
    7. ',' → logprob: -10.128580093383789
    8. '   
' → logprob: -10.253580093383789
    9. ' 
' → logprob: -10.628580093383789
    10. 's' → logprob: -10.753580093383789

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02331303060054779
    2. '    
' → logprob: -4.523313045501709
    3. 'return' → logprob: -5.023313045501709
    4. ' return' → logprob: -5.523313045501709
    5. ' 
' → logprob: -7.898313045501709
    6. '    ' → logprob: -8.52331256866455
    7. '   
' → logprob: -8.52331256866455
    8. '  
' → logprob: -8.64831256866455
    9. '
' → logprob: -8.89831256866455
    10. ' ' → logprob: -8.89831256866455

Token 127: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6066634654998779
    2. 'return' (adapté à ' return') → logprob: -1.481663465499878
    3. ' return' → logprob: -1.481663465499878
    4. 't' → logprob: -9.231663703918457
    5. ' t' → logprob: -9.231663703918457
    6. '    
' → logprob: -9.731663703918457
    7. ' ' → logprob: -11.856663703918457
    8. '
' → logprob: -11.856663703918457
    9. '    ' → logprob: -11.981663703918457
    10. '	return' → logprob: -11.981663703918457

Token 128: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.029770279303193092
    2. '(t' → logprob: -3.5297703742980957
    3. ' t' → logprob: -11.654769897460938
    4. '(' → logprob: -11.779769897460938
    5. 't' → logprob: -12.904769897460938
    6. ' ' → logprob: -14.279769897460938
    7. '   ' → logprob: -15.404769897460938
    8. '((' → logprob: -16.404769897460938
    9. '(s' → logprob: -17.154769897460938
    10. ' ((' → logprob: -17.279769897460938

Token 129: '0' (ID: 15)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0018793739145621657
    2. 't' → logprob: -6.8768792152404785
    3. ' (' → logprob: -7.1268792152404785
    4. '(' → logprob: -10.126879692077637
    5. ' t' → logprob: -12.876879692077637
    6. '((' → logprob: -15.501879692077637
    7. '(
' → logprob: -16.62687873840332
    8. '(abs' → logprob: -17.00187873840332
    9. '
' → logprob: -18.00187873840332
    10. ' ' → logprob: -18.25187873840332

Token 130: ' -' (ID: 533)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.558422327041626
    2. ' (' → logprob: -1.183422327041626
    3. '(' → logprob: -2.558422327041626
    4. 't' → logprob: -3.183422327041626
    5. ' t' → logprob: -6.183422088623047
    6. '   ' → logprob: -7.933422088623047
    7. 'return' → logprob: -8.808422088623047
    8. '(
' → logprob: -9.183422088623047
    9. ' return' → logprob: -10.183422088623047
    10. ' ' → logprob: -10.808422088623047

Token 131: ' -' (ID: 533)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3682527542114258
    2. '(t' → logprob: -1.3682527542114258
    3. 't' → logprob: -3.493252754211426
    4. ' t' → logprob: -3.993252754211426
    5. '(' → logprob: -5.493252754211426
    6. '3' → logprob: -7.868252754211426
    7. ' ' → logprob: -9.868252754211426
    8. '((' → logprob: -10.368252754211426
    9. '(abs' → logprob: -10.868252754211426
    10. ' ((' → logprob: -11.618252754211426

Token 132: 't' (ID: 83)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4730573296546936
    2. '(t' → logprob: -1.3480572700500488
    3. '(' → logprob: -2.723057270050049
    4. 't' → logprob: -3.473057270050049
    5. ' t' → logprob: -4.348057270050049
    6. '3' → logprob: -5.348057270050049
    7. '((' → logprob: -6.473057270050049
    8. ' ' → logprob: -7.973057270050049
    9. ' ((' → logprob: -8.223057746887207
    10. 'pow' → logprob: -9.348057746887207

Token 133: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1162504255771637
    2. ' ' → logprob: -3.241250514984131
    3. ' (' → logprob: -3.741250514984131
    4. '//' → logprob: -4.116250514984131
    5. '(' → logprob: -4.241250514984131
    6. '3' → logprob: -5.116250514984131
    7. ' /' → logprob: -5.491250514984131
    8. '   ' → logprob: -6.366250514984131
    9. '    ' → logprob: -6.866250514984131
    10. ' //
' → logprob: -7.241250514984131

Token 134: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6161355972290039
    2. '3' → logprob: -1.241135597229004
    3. ' (' → logprob: -2.241135597229004
    4. ' ' → logprob: -2.741135597229004
    5. '9' → logprob: -10.366135597229004
    6. 'pow' → logprob: -10.991135597229004
    7. '(int' → logprob: -12.366135597229004
    8. '(pow' → logprob: -12.616135597229004
    9. '[' → logprob: -12.678635597229004
    10. '  ' → logprob: -12.991135597229004

Token 135: '3' (ID: 18)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4375276565551758
    2. '3' → logprob: -1.0625276565551758
    3. ' (' → logprob: -4.937527656555176
    4. ' ' → logprob: -6.437527656555176
    5. '9' → logprob: -11.937527656555176
    6. 'pow' → logprob: -13.062527656555176
    7. '   ' → logprob: -13.312527656555176
    8. '(pow' → logprob: -14.062527656555176
    9. '[' → logprob: -14.437527656555176
    10. '
' → logprob: -14.437527656555176

Token 136: '**' (ID: 410)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3973590135574341
    2. '(' → logprob: -1.772359013557434
    3. ' ' → logprob: -2.5223588943481445
    4. ' (' → logprob: -2.6473588943481445
    5. '**' → logprob: -5.2723588943481445
    6. 'i' → logprob: -7.3973588943481445
    7. ' i' → logprob: -7.8973588943481445
    8. ' **' → logprob: -8.397358894348145
    9. '(i' → logprob: -8.647358894348145
    10. '
' → logprob: -9.897358894348145

Token 137: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.5491004129871726e-05
    2. ' i' → logprob: -10.000045776367188
    3. '	i' → logprob: -18.125045776367188
    4. '_i' → logprob: -19.250045776367188
    5. '(i' → logprob: -19.375045776367188
    6. ' ' → logprob: -20.000045776367188
    7. '{i' → logprob: -20.250045776367188
    8. '%i' → logprob: -20.375045776367188
    9. '<|end|>' → logprob: -20.750045776367188
    10. ')i' → logprob: -21.000045776367188

Token 138: ' ' (ID: 220)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3139874041080475
    2. '%' → logprob: -1.313987374305725
    3. ')' → logprob: -8.063987731933594
    4. ')%' → logprob: -8.438987731933594
    5. ' ' → logprob: -9.188987731933594
    6. '3' → logprob: -9.438987731933594
    7. '0' → logprob: -12.313987731933594
    8. ' )' → logprob: -13.188987731933594
    9. ' ' → logprob: -13.438987731933594
    10. '(' → logprob: -13.563987731933594

Token 139: ' #' (ID: 1069)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47488638758659363
    2. '%' → logprob: -0.974886417388916
    3. ')%' → logprob: -7.974886417388916
    4. ')' → logprob: -7.974886417388916
    5. ' ' → logprob: -9.474885940551758
    6. '3' → logprob: -10.349885940551758
    7. ' %
' → logprob: -13.099885940551758
    8. ' )' → logprob: -13.349885940551758
    9. '0' → logprob: -13.474885940551758
    10. '(' → logprob: -13.599885940551758

Token 140: ' É' (ID: 10055)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.960968017578125
    2. '%' → logprob: -1.210968017578125
    3. '3' → logprob: -1.460968017578125
    4. ' ' → logprob: -2.460968017578125
    5. '(' → logprob: -6.710968017578125
    6. ' (' → logprob: -7.960968017578125
    7. '```' → logprob: -9.335968017578125
    8. 'mod' → logprob: -9.585968017578125
    9. ')%' → logprob: -9.835968017578125
    10. ')' → logprob: -9.835968017578125

Token 141: 'quiv' (ID: 153546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6880316138267517
    2. '%' → logprob: -1.6880316734313965
    3. '(' → logprob: -2.1880316734313965
    4. ')' → logprob: -2.5630316734313965
    5. ' %' → logprob: -3.0630316734313965
    6. ' (' → logprob: -3.8130316734313965
    7. 't' → logprob: -4.8130316734313965
    8. '3' → logprob: -5.1880316734313965
    9. 's' → logprob: -5.3130316734313965
    10. '<|end|>' → logprob: -5.3130316734313965

Token 142: 'aut' (ID: 1828)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.22444741427898407
    2. ' %' → logprob: -2.34944748878479
    3. 'al' → logprob: -2.59944748878479
    4. '-' → logprob: -4.724447250366211
    5. '*' → logprob: -5.349447250366211
    6. 'ivalent' → logprob: -5.474447250366211
    7. 'ale' → logprob: -5.599447250366211
    8. '=' → logprob: -6.974447250366211
    9. 'alent' → logprob: -6.974447250366211
    10. ' *' → logprob: -7.099447250366211

Token 143: ' à' (ID: 1221)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4353211522102356
    2. ' %' → logprob: -1.6853210926055908
    3. ' to' → logprob: -2.810321092605591
    4. ' ' → logprob: -2.935321092605591
    5. '<|end|>' → logprob: -3.560321092605591
    6. 'to' → logprob: -4.31032133102417
    7. ' à' → logprob: -5.18532133102417
    8. ' t' → logprob: -6.56032133102417
    9. '  ' → logprob: -6.81032133102417
    10. 't' → logprob: -6.93532133102417

Token 144: ' t' (ID: 260)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3355071246623993
    2. '(t' → logprob: -1.3355071544647217
    3. 't' → logprob: -4.210506916046143
    4. ' t' → logprob: -5.460506916046143
    5. '(' → logprob: -6.460506916046143
    6. ' ' → logprob: -7.335506916046143
    7. ')' → logprob: -8.8355073928833
    8. 'abs' → logprob: -9.5855073928833
    9. 'return' → logprob: -9.7105073928833
    10. '(abs' → logprob: -9.9605073928833

Token 145: ' //' (ID: 602)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.22680741548538208
    2. '%' → logprob: -1.8518073558807373
    3. ' ' → logprob: -3.6018073558807373
    4. '<|end|>' → logprob: -4.101807594299316
    5. ')' → logprob: -7.476807594299316
    6. ' %
' → logprob: -7.851807594299316
    7. '    ' → logprob: -8.851807594299316
    8. '<|end|>' → logprob: -8.976807594299316
    9. '  ' → logprob: -9.101807594299316
    10. '`' → logprob: -9.351807594299316

Token 146: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38116753101348877
    2. '3' → logprob: -1.7561675310134888
    3. ' (' → logprob: -2.381167411804199
    4. '(' → logprob: -3.256167411804199
    5. '<|end|>' → logprob: -5.006167411804199
    6. '  ' → logprob: -5.756167411804199
    7. 't' → logprob: -7.631167411804199
    8. '```' → logprob: -7.881167411804199
    9. ' `' → logprob: -8.0061674118042
    10. ' t' → logprob: -8.0061674118042

Token 147: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07153226435184479
    2. '(' → logprob: -2.8215322494506836
    3. ' ' → logprob: -4.946532249450684
    4. ' (' → logprob: -6.196532249450684
    5. 't' → logprob: -9.321532249450684
    6. '```' → logprob: -9.696532249450684
    7. 'return' → logprob: -10.321532249450684
    8. '**' → logprob: -10.446532249450684
    9. '  ' → logprob: -10.446532249450684
    10. '`' → logprob: -10.571532249450684

Token 148: '**' (ID: 410)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4764249920845032
    2. ' %' → logprob: -0.9764249920845032
    3. ' ' → logprob: -6.7264251708984375
    4. '(' → logprob: -7.4764251708984375
    5. '**' → logprob: -8.726425170898438
    6. ')' → logprob: -8.851425170898438
    7. '3' → logprob: -8.851425170898438
    8. ' %
' → logprob: -10.476425170898438
    9. ')%' → logprob: -11.226425170898438
    10. ' ' → logprob: -11.351425170898438

Token 149: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0028279386460781097
    2. ' i' → logprob: -5.877828121185303
    3. ' ' → logprob: -11.252827644348145
    4. '<|end|>' → logprob: -13.002827644348145
    5. '```' → logprob: -13.502827644348145
    6. '_i' → logprob: -14.127827644348145
    7. '(i' → logprob: -14.252827644348145
    8. '	i' → logprob: -14.377827644348145
    9. '0' → logprob: -14.377827644348145
    10. '(' → logprob: -14.377827644348145

Token 150: '


' (ID: 2499)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.38763442635536194
    2. '%' → logprob: -1.1376343965530396
    3. ' ' → logprob: -7.76263427734375
    4. ')%' → logprob: -8.76263427734375
    5. ')' → logprob: -9.63763427734375
    6. ' %
' → logprob: -10.76263427734375
    7. '<|end|>' → logprob: -10.76263427734375
    8. '3' → logprob: -11.01263427734375
    9. '%i' → logprob: -11.13763427734375
    10. '()%' → logprob: -11.76263427734375

Token 151: 'def' (ID: 1314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.31343981623649597
    2. ' %' → logprob: -1.3134398460388184
    3. ')%' → logprob: -9.81343936920166
    4. '3' → logprob: -10.06343936920166
    5. ' ' → logprob: -10.18843936920166
    6. ')' → logprob: -11.06343936920166
    7. ' %
' → logprob: -12.06343936920166
    8. '%
' → logprob: -12.31343936920166
    9. ' ' → logprob: -12.93843936920166
    10. '%i' → logprob: -12.93843936920166

Token 152: ' m' (ID: 284)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.058006417006254196
    2. 's' → logprob: -2.933006525039673
    3. ' t' → logprob: -7.558006286621094
    4. ' e' → logprob: -7.933006286621094
    5. ' c' → logprob: -8.183006286621094
    6. ' d' → logprob: -8.433006286621094
    7. ' p' → logprob: -8.558006286621094
    8. ' v' → logprob: -8.558006286621094
    9. ' a' → logprob: -8.683006286621094
    10. ' f' → logprob: -9.058006286621094

Token 153: '(a' (ID: 6271)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.30335450172424316
    2. '(' → logprob: -1.9283545017242432
    3. '(s' → logprob: -2.928354501724243
    4. 's' → logprob: -2.928354501724243
    5. '_' → logprob: -5.928354263305664
    6. 'def' → logprob: -6.178354263305664
    7. ' (' → logprob: -6.553354263305664
    8. '(a' → logprob: -6.928354263305664
    9. 'a' → logprob: -7.428354263305664
    10. '(x' → logprob: -8.928354263305664

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005645644385367632
    2. '):' → logprob: -5.880645751953125
    3. '):
' → logprob: -6.755645751953125
    4. 's' → logprob: -7.255645751953125
    5. ' ,' → logprob: -7.880645751953125
    6. '[' → logprob: -9.380645751953125
    7. ',i' → logprob: -9.380645751953125
    8. '[i' → logprob: -9.630645751953125
    9. ')' → logprob: -10.130645751953125
    10. ',s' → logprob: -10.505645751953125

Token 155: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03950682282447815
    2. ' b' → logprob: -3.2895069122314453
    3. 'i' → logprob: -7.039506912231445
    4. 'a' → logprob: -8.664506912231445
    5. ' i' → logprob: -9.414506912231445
    6. '):
' → logprob: -9.914506912231445
    7. '   ' → logprob: -9.914506912231445
    8. ')' → logprob: -9.914506912231445
    9. 'n' → logprob: -10.664506912231445
    10. 'l' → logprob: -10.664506912231445

Token 156: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048352282494306564
    2. '):
' → logprob: -3.2983522415161133
    3. ',' → logprob: -4.673352241516113
    4. ')' → logprob: -7.423352241516113
    5. '):
' → logprob: -8.673352241516113
    6. ' ):' → logprob: -9.673352241516113
    7. '   ' → logprob: -10.298352241516113
    8. '):

' → logprob: -11.423352241516113
    9. ':' → logprob: -12.048352241516113
    10. ' ,' → logprob: -12.173352241516113

Token 157: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9787606596946716
    2. ' i' → logprob: -1.3537607192993164
    3. ')' → logprob: -2.4787607192993164
    4. ' )' → logprob: -2.8537607192993164
    5. '):' → logprob: -2.8537607192993164
    6. ' ' → logprob: -3.1037607192993164
    7. ' c' → logprob: -3.3537607192993164
    8. ' ):' → logprob: -3.7287607192993164
    9. '):
' → logprob: -4.353760719299316
    10. 'c' → logprob: -4.478760719299316

Token 158: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005800567101687193
    2. '):
' → logprob: -5.630800724029541
    3. ')' → logprob: -6.380800724029541
    4. ',' → logprob: -7.880800724029541
    5. ' ):' → logprob: -9.255800247192383
    6. '   ' → logprob: -12.130800247192383
    7. '):
' → logprob: -12.130800247192383
    8. ':' → logprob: -12.255800247192383
    9. ''):' → logprob: -13.380800247192383
    10. '**' → logprob: -13.630800247192383

Token 159: ' d' (ID: 272)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7561256885528564
    2. 'd' → logprob: -1.8811256885528564
    3. '):
' → logprob: -2.3811256885528564
    4. 'i' → logprob: -2.5061256885528564
    5. ')' → logprob: -2.8811256885528564
    6. ' ' → logprob: -3.8811256885528564
    7. 'n' → logprob: -3.8811256885528564
    8. '  ' → logprob: -4.131125450134277
    9. ' ):' → logprob: -4.131125450134277
    10. '   ' → logprob: -4.756125450134277

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009301485493779182
    2. '):
' → logprob: -4.759301662445068
    3. ')' → logprob: -7.509301662445068
    4. ' ):' → logprob: -9.63430118560791
    5. ',' → logprob: -10.25930118560791
    6. ':' → logprob: -10.75930118560791
    7. '):
' → logprob: -12.13430118560791
    8. '   ' → logprob: -12.13430118560791
    9. '):

' → logprob: -14.25930118560791
    10. '**' → logprob: -14.38430118560791

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5505688786506653
    2. ':' → logprob: -0.9255688786506653
    3. ':
' → logprob: -3.8005688190460205
    4. ' :' → logprob: -6.3005690574646
    5. ':return' → logprob: -7.5505690574646
    6. ' :
' → logprob: -8.050568580627441
    7. ',' → logprob: -8.050568580627441
    8. ' return' → logprob: -8.050568580627441
    9. '(' → logprob: -8.175568580627441
    10. '    ' → logprob: -8.300568580627441

Token 162: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08620164543390274
    2. ' return' → logprob: -2.7112016677856445
    3. 'return' → logprob: -4.8362016677856445
    4. ' if' → logprob: -6.3362016677856445
    5. ' ' → logprob: -6.5862016677856445
    6. ' for' → logprob: -7.0862016677856445
    7. '    ' → logprob: -7.2112016677856445
    8. 'if' → logprob: -8.211201667785645
    9. 'def' → logprob: -8.211201667785645
    10. ' 
' → logprob: -8.336201667785645

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35924509167671204
    2. ' """
' → logprob: -1.8592450618743896
    3. '"""
' → logprob: -2.9842450618743896
    4. '"' → logprob: -3.4842450618743896
    5. '"""' → logprob: -3.4842450618743896
    6. '    ' → logprob: -3.9842450618743896
    7. ' """' → logprob: -4.734245300292969
    8. ' "' → logprob: -6.234245300292969
    9. ' ' → logprob: -7.109245300292969
    10. 'def' → logprob: -7.109245300292969

Token 164: ' Trou' (ID: 58947)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0918072834610939
    2. ' return' → logprob: -3.9668073654174805
    3. ' """' → logprob: -4.0918073654174805
    4. '"""' → logprob: -4.3418073654174805
    5. ' """
' → logprob: -4.5918073654174805
    6. 'return' → logprob: -4.8418073654174805
    7. '"""
' → logprob: -5.5918073654174805
    8. ' if' → logprob: -5.7168073654174805
    9. '#' → logprob: -5.8418073654174805
    10. ' ' → logprob: -6.0918073654174805

Token 165: 've' (ID: 737)
  Prédit: 've'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.010261232033371925
    2. 'e' → logprob: -5.635261058807373
    3. '   ' → logprob: -5.885261058807373
    4. 'ne' → logprob: -6.260261058807373
    5. 'r' → logprob: -6.885261058807373
    6. 'ève' → logprob: -9.135261535644531
    7. 'ver' → logprob: -9.260261535644531
    8. 'vre' → logprob: -9.385261535644531
    9. ' ve' → logprob: -9.510261535644531
    10. ' int' → logprob: -10.010261535644531

Token 166: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.16654586791992188
    2. ' l' → logprob: -2.166545867919922
    3. ' la' → logprob: -4.041545867919922
    4. 'le' → logprob: -4.416545867919922
    5. 'l' → logprob: -5.916545867919922
    6. ' ' → logprob: -6.291545867919922
    7. 'c' → logprob: -7.416545867919922
    8. '   ' → logprob: -7.541545867919922
    9. ' c' → logprob: -7.916545867919922
    10. ' max' → logprob: -8.166545867919922

Token 167: ' plus' (ID: 2932)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3501332998275757
    2. 'ch' → logprob: -1.6001332998275757
    3. 'prem' → logprob: -2.3501334190368652
    4. 'max' → logprob: -2.4751334190368652
    5. 'plus' → logprob: -2.8501334190368652
    6. ' maximum' → logprob: -3.2251334190368652
    7. ' max' → logprob: -3.2251334190368652
    8. ' premier' → logprob: -3.6001334190368652
    9. 'maximum' → logprob: -3.7251334190368652
    10. ' c' → logprob: -4.100133419036865

Token 168: ' petit' (ID: 20577)
  Prédit: ' grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grand' → logprob: -0.5598272681236267
    2. 'grand' → logprob: -1.0598273277282715
    3. ' petit' → logprob: -2.6848273277282715
    4. 'pet' → logprob: -4.4348273277282715
    5. 'prem' → logprob: -7.8098273277282715
    6. '```' → logprob: -8.184826850891113
    7. 'plus' → logprob: -8.684826850891113
    8. '_' → logprob: -9.184826850891113
    9. 'gr' → logprob: -9.309826850891113
    10. 'court' → logprob: -9.434826850891113

Token 169: ' niveau' (ID: 21708)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2356727570295334
    2. ' entier' → logprob: -3.11067271232605
    3. '_' → logprob: -3.48567271232605
    4. ' espace' → logprob: -4.110672950744629
    5. '<|end|>' → logprob: -4.485672950744629
    6. ' des' → logprob: -4.485672950744629
    7. ' token' → logprob: -5.110672950744629
    8. ' nombre' → logprob: -5.360672950744629
    9. ' )' → logprob: -5.360672950744629
    10. ' facteur' → logprob: -5.360672950744629

Token 170: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02994844689965248
    2. ' de' → logprob: -5.0299482345581055
    3. ' où' → logprob: -5.0299482345581055
    4. '<|end|>' → logprob: -6.0299482345581055
    5. ',' → logprob: -6.4049482345581055
    6. ' auquel' → logprob: -6.5299482345581055
    7. ' à' → logprob: -6.6549482345581055
    8. ' ,' → logprob: -6.7799482345581055
    9. ' possible' → logprob: -7.4049482345581055
    10. ' qui' → logprob: -7.5299482345581055

Token 171: 'i' (ID: 72)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3758431673049927
    2. 'n' → logprob: -1.3758431673049927
    3. ' i' → logprob: -3.375843048095703
    4. 'i' → logprob: -5.000843048095703
    5. ' k' → logprob: -5.500843048095703
    6. ' e' → logprob: -6.250843048095703
    7. 'k' → logprob: -6.250843048095703
    8. 'e' → logprob: -6.250843048095703
    9. ' x' → logprob: -7.000843048095703
    10. ' `' → logprob: -7.125843048095703

Token 172: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1079082041978836
    2. ' où' → logprob: -2.982908248901367
    3. 'où' → logprob: -3.732908248901367
    4. ' '' → logprob: -4.232908248901367
    5. ' where' → logprob: -5.232908248901367
    6. 'u' → logprob: -6.857908248901367
    7. '"' → logprob: -6.982908248901367
    8. ' pour' → logprob: -7.107908248901367
    9. ' ' → logprob: -7.107908248901367
    10. ' auquel' → logprob: -7.857908248901367

Token 173: ' d' (ID: 272)
  Prédit: ' où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' où' → logprob: -1.5888971090316772
    2. ' for' → logprob: -1.8388971090316772
    3. ' tel' → logprob: -1.8388971090316772
    4. ' such' → logprob: -2.463897228240967
    5. ' pour' → logprob: -2.588897228240967
    6. ' ' → logprob: -2.838897228240967
    7. '<|end|>' → logprob: -3.088897228240967
    8. 'où' → logprob: -3.213897228240967
    9. ' where' → logprob: -3.463897228240967
    10. ' at' → logprob: -3.838897228240967

Token 174: ''une' (ID: 13337)
  Prédit: ''ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.9428221583366394
    2. 'e' → logprob: -1.3178222179412842
    3. 'éc' → logprob: -1.9428222179412842
    4. ''un' → logprob: -2.817822217941284
    5. 'a' → logprob: -3.817822217941284
    6. ''une' → logprob: -4.067821979522705
    7. 'ex' → logprob: -4.067821979522705
    8. ''éc' → logprob: -4.942821979522705
    9. ''application' → logprob: -4.942821979522705
    10. 'ans' → logprob: -5.442821979522705

Token 175: ' différence' (ID: 79196)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -1.7612978219985962
    2. ' différence' → logprob: -2.3862977027893066
    3. ' valeur' → logprob: -2.5112977027893066
    4. ' puissance' → logprob: -2.5112977027893066
    5. ' position' → logprob: -2.6362977027893066
    6. 'position' → logprob: -3.2612977027893066
    7. 'tour' → logprob: -3.3862977027893066
    8. ' tour' → logprob: -3.5112977027893066
    9. ' configuration' → logprob: -3.6362977027893066
    10. 'part' → logprob: -3.7612977027893066

Token 176: ' signific' (ID: 5404)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.7540894150733948
    2. ' où' → logprob: -1.12908935546875
    3. ' ' → logprob: -2.62908935546875
    4. ' where' → logprob: -3.00408935546875
    5. 'où' → logprob: -4.00408935546875
    6. ' de' → logprob: -4.50408935546875
    7. ',' → logprob: -4.62908935546875
    8. ' between' → logprob: -4.87908935546875
    9. ' à' → logprob: -5.87908935546875
    10. '   ' → logprob: -5.87908935546875

Token 177: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.0008797810296528041
    2. 'atif' → logprob: -8.375880241394043
    3. 'ate' → logprob: -9.250880241394043
    4. 't' → logprob: -9.250880241394043
    5. 'a' → logprob: -9.500880241394043
    6. 'ativement' → logprob: -9.750880241394043
    7. 'ante' → logprob: -10.000880241394043
    8. 'ive' → logprob: -10.000880241394043
    9. 'at' → logprob: -10.125880241394043
    10. ' at' → logprob: -11.000880241394043

Token 178: ' de' (ID: 334)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.0314323864877224
    2. ' ' → logprob: -3.9064323902130127
    3. ' between' → logprob: -5.031432151794434
    4. 'entre' → logprob: -6.531432151794434
    5. ',' → logprob: -7.156432151794434
    6. ' (' → logprob: -7.906432151794434
    7. ' de' → logprob: -8.156432151794434
    8. '   ' → logprob: -8.281432151794434
    9. ' qui' → logprob: -8.906432151794434
    10. '  ' → logprob: -8.906432151794434

Token 179: ' position' (ID: 4010)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -1.0006128549575806
    2. 'a' → logprob: -1.7506128549575806
    3. ' a' → logprob: -2.625612735748291
    4. ' ' → logprob: -2.750612735748291
    5. 's' → logprob: -3.250612735748291
    6. ' code' → logprob: -3.250612735748291
    7. ' digits' → logprob: -3.250612735748291
    8. 't' → logprob: -3.625612735748291
    9. ' chiffres' → logprob: -4.250612735748291
    10. ' t' → logprob: -4.250612735748291

Token 180: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.1414610743522644
    2. ' où' → logprob: -3.016461133956909
    3. ' ' → logprob: -3.766461133956909
    4. ' i' → logprob: -4.64146089553833
    5. ' between' → logprob: -4.76646089553833
    6. 'entre' → logprob: -5.01646089553833
    7. 'où' → logprob: -5.14146089553833
    8. ' à' → logprob: -5.39146089553833
    9. ' de' → logprob: -5.51646089553833
    10. 's' → logprob: -5.64146089553833

Token 181: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4418272376060486
    2. ' a' → logprob: -1.0668272972106934
    3. ' les' → logprob: -4.566827297210693
    4. ' deux' → logprob: -6.816827297210693
    5. 'les' → logprob: -7.691827297210693
    6. ' ' → logprob: -8.441826820373535
    7. ' two' → logprob: -8.691826820373535
    8. ' b' → logprob: -8.941826820373535
    9. 'b' → logprob: -9.191826820373535
    10. 'c' → logprob: -9.691826820373535

Token 182: ' points' (ID: 5571)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8144298195838928
    2. 'de' → logprob: -1.189429759979248
    3. ' deux' → logprob: -1.689429759979248
    4. ' a' → logprob: -4.314429759979248
    5. 't' → logprob: -4.439429759979248
    6. ' two' → logprob: -4.564429759979248
    7. 'def' → logprob: -5.189429759979248
    8. 'd' → logprob: -5.564429759979248
    9. ' ' → logprob: -5.939429759979248
    10. 'c' → logprob: -5.939429759979248

Token 183: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3481510877609253
    2. ',' → logprob: -2.098151206970215
    3. 's' → logprob: -2.098151206970215
    4. ' (' → logprob: -2.098151206970215
    5. '   ' → logprob: -2.723151206970215
    6. ' s' → logprob: -3.348151206970215
    7. ' entre' → logprob: -3.348151206970215
    8. ' =' → logprob: -3.473151206970215
    9. ' ,' → logprob: -3.473151206970215
    10. '<|end|>' → logprob: -3.598151206970215

Token 184: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21591545641422272
    2. ',' → logprob: -2.7159154415130615
    3. ' a' → logprob: -2.8409154415130615
    4. ')' → logprob: -3.3409154415130615
    5. ' )' → logprob: -4.590915679931641
    6. ' ,' → logprob: -4.840915679931641
    7. '   ' → logprob: -5.465915679931641
    8. 'b' → logprob: -6.590915679931641
    9. '0' → logprob: -6.715915679931641
    10. 'i' → logprob: -6.715915679931641

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1436043232679367
    2. ' ,' → logprob: -2.393604278564453
    3. ')' → logprob: -3.268604278564453
    4. ' )' → logprob: -6.268604278564453
    5. '[' → logprob: -6.643604278564453
    6. '   ' → logprob: -8.393604278564453
    7. ' et' → logprob: -8.643604278564453
    8. ' ' → logprob: -9.143604278564453
    9. ' and' → logprob: -9.393604278564453
    10. 'a' → logprob: -9.393604278564453

Token 186: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5898131728172302
    2. 'b' → logprob: -0.8398131728172302
    3. ' c' → logprob: -5.089813232421875
    4. 'c' → logprob: -5.839813232421875
    5. ',' → logprob: -5.964813232421875
    6. ' ,' → logprob: -7.339813232421875
    7. '   ' → logprob: -7.714813232421875
    8. ' ' → logprob: -8.464813232421875
    9. ' d' → logprob: -8.589813232421875
    10. ',b' → logprob: -8.714813232421875

Token 187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3502526879310608
    2. ',' → logprob: -1.225252628326416
    3. ' et' → logprob: -7.350252628326416
    4. ' ,' → logprob: -7.850252628326416
    5. '   ' → logprob: -8.475253105163574
    6. ' )' → logprob: -8.475253105163574
    7. 'et' → logprob: -8.600253105163574
    8. '),' → logprob: -9.600253105163574
    9. 'def' → logprob: -10.475253105163574
    10. '')' → logprob: -11.100253105163574

Token 188: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2715451121330261
    2. ')' → logprob: -1.896545171737671
    3. ' et' → logprob: -3.396545171737671
    4. '   ' → logprob: -4.021544933319092
    5. ' ,' → logprob: -4.771544933319092
    6. 'def' → logprob: -5.021544933319092
    7. ' -' → logprob: -5.271544933319092
    8. ',
' → logprob: -6.021544933319092
    9. ':' → logprob: -6.521544933319092
    10. '-' → logprob: -6.521544933319092

Token 189: ' (' (ID: 350)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.05620618537068367
    2. 'c' → logprob: -2.931206226348877
    3. ' (' → logprob: -8.181205749511719
    4. '   ' → logprob: -8.681205749511719
    5. ' ' → logprob: -8.806205749511719
    6. '(c' → logprob: -8.931205749511719
    7. ')' → logprob: -8.931205749511719
    8. ',' → logprob: -9.181205749511719
    9. ' d' → logprob: -9.931205749511719
    10. ')c' → logprob: -9.931205749511719

Token 190: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.42922088503837585
    2. ' c' → logprob: -1.0542209148406982
    3. ' ' → logprob: -8.054221153259277
    4. ')' → logprob: -9.929221153259277
    5. ')c' → logprob: -10.054221153259277
    6. ',' → logprob: -10.304221153259277
    7. '  ' → logprob: -10.929221153259277
    8. '	c' → logprob: -11.054221153259277
    9. '   ' → logprob: -11.304221153259277
    10. ',c' → logprob: -12.179221153259277

Token 191: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20482836663722992
    2. ',' → logprob: -1.8298283815383911
    3. ' -' → logprob: -4.954828262329102
    4. '-' → logprob: -5.579828262329102
    5. '   ' → logprob: -5.579828262329102
    6. ' )' → logprob: -5.579828262329102
    7. ' ,' → logprob: -6.329828262329102
    8. '),' → logprob: -6.579828262329102
    9. '+' → logprob: -7.329828262329102
    10. ')-' → logprob: -8.204828262329102

Token 192: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3134407103061676
    2. 'd' → logprob: -1.3134406805038452
    3. ')' → logprob: -9.438440322875977
    4. ' ' → logprob: -9.938440322875977
    5. ')d' → logprob: -10.813440322875977
    6. '<|end|>' → logprob: -11.188440322875977
    7. ',' → logprob: -12.563440322875977
    8. '   ' → logprob: -12.563440322875977
    9. '0' → logprob: -13.063440322875977
    10. '1' → logprob: -13.813440322875977

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1114267036318779
    2. '):' → logprob: -2.361426591873169
    3. '):
' → logprob: -4.611426830291748
    4. ').' → logprob: -7.236426830291748
    5. ',' → logprob: -9.11142635345459
    6. '),' → logprob: -9.23642635345459
    7. ')
' → logprob: -9.48642635345459
    8. ' )' → logprob: -9.48642635345459
    9. ' ):' → logprob: -10.48642635345459
    10. 'def' → logprob: -10.73642635345459

Token 194: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19766566157341003
    2. '   ' → logprob: -2.4476656913757324
    3. ' :' → logprob: -3.1976656913757324
    4. '):' → logprob: -3.4476656913757324
    5. ':
' → logprob: -4.697665691375732
    6. ',' → logprob: -5.947665691375732
    7. '):
' → logprob: -6.072665691375732
    8. ')' → logprob: -6.447665691375732
    9. ' :
' → logprob: -6.447665691375732
    10. '<|end|>' → logprob: -7.572665691375732

Token 195: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37687671184539795
    2. '   ' → logprob: -2.2518768310546875
    3. ',' → logprob: -2.8768768310546875
    4. '):' → logprob: -3.1268768310546875
    5. ' :' → logprob: -3.7518768310546875
    6. ')' → logprob: -3.8768768310546875
    7. ':
' → logprob: -3.8768768310546875
    8. '):
' → logprob: -4.3768768310546875
    9. ' où' → logprob: -5.5018768310546875
    10. 'def' → logprob: -5.6268768310546875

Token 196: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4385957717895508
    2. ' x' → logprob: -1.9385957717895508
    3. 'la' → logprob: -3.063595771789551
    4. 'x' → logprob: -3.438595771789551
    5. ' le' → logprob: -3.688595771789551
    6. ' l' → logprob: -3.688595771789551
    7. 'l' → logprob: -4.313595771789551
    8. 'le' → logprob: -4.563595771789551
    9. 'les' → logprob: -4.688595771789551
    10. ' leur' → logprob: -4.688595771789551

Token 197: ' trajet' (ID: 110258)
  Prédit: ' plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plan' → logprob: -0.6332387328147888
    2. 'plan' → logprob: -1.1332387924194336
    3. ' plane' → logprob: -2.6332387924194336
    4. ' espace' → logprob: -3.5082387924194336
    5. 'plane' → logprob: -4.633238792419434
    6. 'pl' → logprob: -5.258238792419434
    7. ' ' → logprob: -5.508238792419434
    8. ' plano' → logprob: -5.633238792419434
    9. ' plans' → logprob: -5.883238792419434
    10. 's' → logprob: -5.883238792419434

Token 198: ' d' (ID: 272)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5384579300880432
    2. '.' → logprob: -2.2884578704833984
    3. ',' → logprob: -2.6634578704833984
    4. ' des' → logprob: -2.9134578704833984
    5. '   ' → logprob: -3.2884578704833984
    6. ' ' → logprob: -4.038457870483398
    7. ' entre' → logprob: -4.038457870483398
    8. ' (' → logprob: -4.288457870483398
    9. ')' → logprob: -4.288457870483398
    10. ' x' → logprob: -4.413457870483398

Token 199: ''un' (ID: 9788)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.963368833065033
    2. 'e' → logprob: -1.4633688926696777
    3. ''un' → logprob: -2.0883688926696777
    4. ''une' → logprob: -2.8383688926696777
    5. 'une' → logprob: -3.7133688926696777
    6. ' un' → logprob: -3.9633688926696777
    7. ' e' → logprob: -4.088368892669678
    8. ' x' → logprob: -4.088368892669678
    9. 'x' → logprob: -4.338368892669678
    10. 'un' → logprob: -4.338368892669678

Token 200: ' jeu' (ID: 24626)
  Prédit: 'plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plan' → logprob: -1.470008373260498
    2. ' espace' → logprob: -1.720008373260498
    3. ' plan' → logprob: -2.345008373260498
    4. ' arbre' → logprob: -3.095008373260498
    5. 'quad' → logprob: -3.407508373260498
    6. ' qu' → logprob: -3.407508373260498
    7. ' quadr' → logprob: -3.532508373260498
    8. ' quad' → logprob: -3.782508373260498
    9. ' quadrant' → logprob: -3.845008373260498
    10. 'qu' → logprob: -4.032508373260498

Token 201: ' particulier' (ID: 47842)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6701756119728088
    2. ' de' → logprob: -1.920175552368164
    3. ',' → logprob: -2.545175552368164
    4. ' en' → logprob: -2.670175552368164
    5. ' vidéo' → logprob: -3.420175552368164
    6. ' ' → logprob: -3.545175552368164
    7. ' (' → logprob: -4.170175552368164
    8. '   ' → logprob: -4.670175552368164
    9. ' à' → logprob: -4.795175552368164
    10. ' ,' → logprob: -4.920175552368164

Token 202: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.576397180557251
    2. '   ' → logprob: -1.576397180557251
    3. ' :' → logprob: -2.451397180557251
    4. ',' → logprob: -2.701397180557251
    5. ':
' → logprob: -3.701397180557251
    6. '.' → logprob: -3.701397180557251
    7. ' :
' → logprob: -4.451396942138672
    8. 'def' → logprob: -5.076396942138672
    9. ' def' → logprob: -6.451396942138672
    10. '):' → logprob: -6.701396942138672

Token 203: 'prob' (ID: 29823)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4711117446422577
    2. ' )' → logprob: -1.34611177444458
    3. ').' → logprob: -3.34611177444458
    4. '):
' → logprob: -3.97111177444458
    5. ' ).' → logprob: -4.09611177444458
    6. ' ):
' → logprob: -4.34611177444458
    7. '):' → logprob: -5.09611177444458
    8. ' ):' → logprob: -5.34611177444458
    9. '   ' → logprob: -5.84611177444458
    10. 'def' → logprob: -6.09611177444458

Token 204: 'ablement' (ID: 63986)
  Prédit: 'ablement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ablement' → logprob: -0.012313857674598694
    2. ')' → logprob: -4.7623138427734375
    3. 'lem' → logprob: -7.3873138427734375
    4. 'def' → logprob: -7.5123138427734375
    5. 'ably' → logprob: -7.6373138427734375
    6. 'ème' → logprob: -7.8873138427734375
    7. 'ablemente' → logprob: -8.512313842773438
    8. 'é' → logprob: -8.512313842773438
    9. '   ' → logprob: -9.012313842773438
    10. 'lé' → logprob: -9.012313842773438

Token 205: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6984485983848572
    2. 'un' → logprob: -2.573448657989502
    3. ' lié' → logprob: -2.698448657989502
    4. ' de' → logprob: -2.823448657989502
    5. ' une' → logprob: -2.823448657989502
    6. ' basé' → logprob: -3.073448657989502
    7. ' la' → logprob: -3.448448657989502
    8. ' ' → logprob: -3.573448657989502
    9. 'de' → logprob: -3.698448657989502
    10. 'le' → logprob: -4.073448657989502

Token 206: ' structure' (ID: 8866)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -1.644939661026001
    2. ' chaîne' → logprob: -2.144939661026001
    3. 'base' → logprob: -2.519939661026001
    4. ' fract' → logprob: -2.644939661026001
    5. ' grille' → logprob: -3.019939661026001
    6. ' base' → logprob: -3.144939661026001
    7. ' ' → logprob: -3.394939661026001
    8. 'chaine' → logprob: -3.769939661026001
    9. 's' → logprob: -3.894939661026001
    10. ' course' → logprob: -3.957439661026001

Token 207: ' en' (ID: 469)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20657800137996674
    2. ')' → logprob: -3.206578016281128
    3. ' des' → logprob: -3.581578016281128
    4. ' ' → logprob: -3.831578016281128
    5. ' quad' → logprob: -4.081577777862549
    6. ' d' → logprob: -4.081577777862549
    7. 'de' → logprob: -4.331577777862549
    8. ' )' → logprob: -5.081577777862549
    9. ',' → logprob: -5.331577777862549
    10. ' en' → logprob: -5.581577777862549

Token 208: ' fract' (ID: 37163)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.6709829568862915
    2. ' qu' → logprob: -2.295982837677002
    3. 'base' → logprob: -2.670982837677002
    4. ' oct' → logprob: -2.670982837677002
    5. ' quad' → logprob: -3.420982837677002
    6. ' grille' → logprob: -3.795982837677002
    7. 'gr' → logprob: -3.920982837677002
    8. ' ' → logprob: -4.045982837677002
    9. 'qu' → logprob: -4.045982837677002
    10. 'quad' → logprob: -4.608482837677002

Token 209: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.34887754917144775
    2. 'al' → logprob: -1.2238775491714478
    3. 'alité' → logprob: -9.473877906799316
    4. ')' → logprob: -9.973877906799316
    5. 'ales' → logprob: -10.098877906799316
    6. 'ure' → logprob: -10.348877906799316
    7. '   ' → logprob: -10.598877906799316
    8. '```' → logprob: -10.848877906799316
    9. 'a' → logprob: -11.161377906799316
    10. '}' → logprob: -11.473877906799316

Token 210: ' type' (ID: 1490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22651347517967224
    2. '):
' → logprob: -2.601513385772705
    3. '):' → logprob: -2.726513385772705
    4. ').' → logprob: -2.976513385772705
    5. ' )' → logprob: -5.726513385772705
    6. '):

' → logprob: -6.226513385772705
    7. ')
' → logprob: -6.476513385772705
    8. 'def' → logprob: -6.601513385772705
    9. ',' → logprob: -6.976513385772705
    10. '   ' → logprob: -7.101513385772705

Token 211: ' S' (ID: 336)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3460578918457031
    2. ')' → logprob: -2.846057891845703
    3. 'Z' → logprob: -2.908557891845703
    4. ' S' → logprob: -2.971057891845703
    5. 'de' → logprob: -3.096057891845703
    6. ' qu' → logprob: -3.533557891845703
    7. ' Z' → logprob: -3.533557891845703
    8. 'S' → logprob: -3.721057891845703
    9. 's' → logprob: -3.721057891845703
    10. ' Hil' → logprob: -3.846057891845703

Token 212: 'ier' (ID: 905)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3475412130355835
    2. 'ier' → logprob: -1.3475412130355835
    3. ' )' → logprob: -4.972541332244873
    4. 'er' → logprob: -5.222541332244873
    5. '_' → logprob: -5.347541332244873
    6. ')`' → logprob: -6.597541332244873
    7. 'curve' → logprob: -6.722541332244873
    8. '-' → logprob: -6.847541332244873
    9. 'et' → logprob: -6.972541332244873
    10. 'e' → logprob: -7.472541332244873

Token 213: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023193063214421272
    2. '-' → logprob: -5.148192882537842
    3. 'pi' → logprob: -5.523192882537842
    4. '_triangle' → logprob: -6.523192882537842
    5. 'pine' → logprob: -6.648192882537842
    6. 'a' → logprob: -6.773192882537842
    7. '_' → logprob: -6.898192882537842
    8. '_p' → logprob: -7.023192882537842
    9. 'es' → logprob: -7.648192882537842
    10. ' triangle' → logprob: -7.835692882537842

Token 214: 'inski' (ID: 66930)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.496051162481308
    2. 'inski' → logprob: -2.496051073074341
    3. 'ski' → logprob: -2.996051073074341
    4. 'p' → logprob: -3.246051073074341
    5. 'a' → logprob: -3.246051073074341
    6. 'et' → logprob: -4.12105131149292
    7. 'esk' → logprob: -4.37105131149292
    8. 'ask' → logprob: -4.62105131149292
    9. 'and' → logprob: -4.74605131149292
    10. 've' → logprob: -4.87105131149292

Token 215: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018615875393152237
    2. ')
' → logprob: -5.64361572265625
    3. '):
' → logprob: -5.64361572265625
    4. ')**' → logprob: -6.51861572265625
    5. '):' → logprob: -6.51861572265625
    6. ',' → logprob: -6.76861572265625
    7. ').' → logprob: -7.01861572265625
    8. 'triangle' → logprob: -7.14361572265625
    9. ')")
' → logprob: -7.64361572265625
    10. ' triangle' → logprob: -8.01861572265625

Token 216: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4067071676254272
    2. ' ' → logprob: -1.6567071676254272
    3. 'lambda' → logprob: -2.031707286834717
    4. '    ' → logprob: -2.156707286834717
    5. ' lambda' → logprob: -2.656707286834717
    6. '3' → logprob: -3.031707286834717
    7. ')' → logprob: -3.531707286834717
    8. ' where' → logprob: -3.531707286834717
    9. ' i' → logprob: -3.781707286834717
    10. ' 
' → logprob: -4.156707286834717

Token 217: ' certaines' (ID: 46662)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.44387075304985046
    2. ' lambda' → logprob: -1.9438707828521729
    3. ' l' → logprob: -2.443870782852173
    4. ' le' → logprob: -3.568870782852173
    5. ' abs' → logprob: -3.568870782852173
    6. 'abs' → logprob: -4.068870544433594
    7. ' les' → logprob: -4.068870544433594
    8. 'lambda' → logprob: -4.693870544433594
    9. ' une' → logprob: -5.068870544433594
    10. ' ' → logprob: -5.818870544433594

Token 218: ' règles' (ID: 67042)
  Prédit: ' conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -1.925991415977478
    2. '(' → logprob: -2.1759915351867676
    3. ' (' → logprob: -2.1759915351867676
    4. ' ' → logprob: -2.3009915351867676
    5. ' (
' → logprob: -3.1759915351867676
    6. ')' → logprob: -3.5509915351867676
    7. 'diff' → logprob: -3.6759915351867676
    8. '>' → logprob: -3.8009915351867676
    9. ' indices' → logprob: -3.8009915351867676
    10. ' positions' → logprob: -3.8009915351867676

Token 219: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10152199864387512
    2. 'def' → logprob: -3.7265219688415527
    3. '.' → logprob: -4.351521968841553
    4. ',' → logprob: -4.476521968841553
    5. '):
' → logprob: -4.601521968841553
    6. ')' → logprob: -4.726521968841553
    7. ':' → logprob: -4.851521968841553
    8. ' de' → logprob: -5.351521968841553
    9. '):' → logprob: -5.351521968841553
    10. ' def' → logprob: -6.476521968841553

Token 220: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023934639990329742
    2. ' for' → logprob: -4.898934841156006
    3. ':' → logprob: -5.898934841156006
    4. '
' → logprob: -6.273934841156006
    5. '    
' → logprob: -6.273934841156006
    6. ' 
' → logprob: -6.773934841156006
    7. '    ' → logprob: -6.773934841156006
    8. 'def' → logprob: -6.898934841156006
    9. ':
' → logprob: -7.148934841156006
    10. ' :' → logprob: -7.273934841156006

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.833118200302124
    2. ' abs' → logprob: -1.708118200302124
    3. ' a' → logprob: -2.083118200302124
    4. ' (' → logprob: -2.208118200302124
    5. ' ' → logprob: -3.583118200302124
    6. 'a' → logprob: -3.583118200302124
    7. 'abs' → logprob: -3.958118200302124
    8. '    ' → logprob: -4.208118438720703
    9. ' i' → logprob: -4.458118438720703
    10. '(' → logprob: -4.958118438720703

Token 222: ' Args' (ID: 39185)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6739376783370972
    2. ' for' → logprob: -0.7989376783370972
    3. 'i' → logprob: -3.5489377975463867
    4. ' i' → logprob: -5.423937797546387
    5. '   ' → logprob: -5.923937797546387
    6. 'n' → logprob: -6.923937797546387
    7. 'if' → logprob: -7.923937797546387
    8. ' s' → logprob: -8.173937797546387
    9. 'def' → logprob: -8.298937797546387
    10. 't' → logprob: -8.423937797546387

Token 223: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10947968065738678
    2. '):' → logprob: -2.7344796657562256
    3. '):
' → logprob: -4.109479904174805
    4. ',' → logprob: -4.859479904174805
    5. '   ' → logprob: -4.984479904174805
    6. ':
' → logprob: -5.109479904174805
    7. '=' → logprob: -7.484479904174805
    8. ')' → logprob: -7.609479904174805
    9. ' :' → logprob: -7.859479904174805
    10. '[' → logprob: -10.109479904174805

Token 224: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.649260938167572
    2. 'a' → logprob: -1.2742609977722168
    3. ' a' → logprob: -1.6492609977722168
    4. ' i' → logprob: -5.649260997772217
    5. 'i' → logprob: -6.649260997772217
    6. '    ' → logprob: -8.524260520935059
    7. ')' → logprob: -8.899260520935059
    8. ' ' → logprob: -9.149260520935059
    9. 'b' → logprob: -9.524260520935059
    10. '	a' → logprob: -9.774260520935059

Token 225: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.006049074232578278
    2. ' a' → logprob: -5.381049156188965
    3. 'x' → logprob: -6.881049156188965
    4. '   ' → logprob: -8.256049156188965
    5. 'int' → logprob: -9.881049156188965
    6. ' x' → logprob: -10.381049156188965
    7. ' ' → logprob: -11.506049156188965
    8. 'i' → logprob: -11.881049156188965
    9. 't' → logprob: -12.381049156188965
    10. 'b' → logprob: -12.381049156188965

Token 226: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3517757058143616
    2. ' ,' → logprob: -1.2267756462097168
    3. ' (' → logprob: -6.351775646209717
    4. '   ' → logprob: -7.726775646209717
    5. ',int' → logprob: -7.851775646209717
    6. '(int' → logprob: -7.851775646209717
    7. '<|end|>' → logprob: -9.476776123046875
    8. ')' → logprob: -9.851776123046875
    9. ' ' → logprob: -10.101776123046875
    10. ' int' → logprob: -10.226776123046875

Token 227: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009515985148027539
    2. ' int' → logprob: -7.000951766967773
    3. ')' → logprob: -10.750951766967773
    4. '   ' → logprob: -12.125951766967773
    5. 'a' → logprob: -12.500951766967773
    6. '[int' → logprob: -12.500951766967773
    7. ',int' → logprob: -13.625951766967773
    8. '(int' → logprob: -14.000951766967773
    9. ' ' → logprob: -14.375951766967773
    10. ':int' → logprob: -15.000951766967773

Token 228: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7287715077400208
    2. '):' → logprob: -0.8537715077400208
    3. ')' → logprob: -3.478771448135376
    4. '   ' → logprob: -3.978771448135376
    5. ' ,' → logprob: -3.978771448135376
    6. ' ):' → logprob: -4.353771686553955
    7. '),' → logprob: -5.103771686553955
    8. '):
' → logprob: -6.228771686553955
    9. ' )' → logprob: -7.228771686553955
    10. ' ),' → logprob: -7.853771686553955

Token 229: ' Première' (ID: 179764)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5249646306037903
    2. 'a' → logprob: -1.1499645709991455
    3. ' int' → logprob: -3.2749645709991455
    4. 'int' → logprob: -4.149964809417725
    5. ' b' → logprob: -4.274964809417725
    6. 'b' → logprob: -4.524964809417725
    7. ' c' → logprob: -6.274964809417725
    8. 'c' → logprob: -6.399964809417725
    9. ' x' → logprob: -6.524964809417725
    10. ' ' → logprob: -6.774964809417725

Token 230: ' coord' (ID: 25819)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.28810250759124756
    2. ',' → logprob: -1.9131025075912476
    3. ')' → logprob: -2.413102626800537
    4. ' )' → logprob: -4.663102626800537
    5. ' ,
' → logprob: -6.663102626800537
    6. ' ' → logprob: -7.913102626800537
    7. ' ==' → logprob: -8.163102149963379
    8. ' >=' → logprob: -8.288102149963379
    9. ',
' → logprob: -8.413102149963379
    10. '),' → logprob: -8.663102149963379

Token 231: 'onnée' (ID: 91161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7532294392585754
    2. 'onnée' → logprob: -1.1282293796539307
    3. ' )' → logprob: -2.0032293796539307
    4. '   ' → logprob: -3.8782293796539307
    5. ' ,' → logprob: -4.37822961807251
    6. ' ' → logprob: -4.50322961807251
    7. '  ' → logprob: -4.87822961807251
    8. 'on' → logprob: -5.87822961807251
    9. ',' → logprob: -5.87822961807251
    10. '    ' → logprob: -6.00322961807251

Token 232: ' horizont' (ID: 69308)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41351059079170227
    2. ' ,' → logprob: -1.9135105609893799
    3. ')' → logprob: -2.66351056098938
    4. '   ' → logprob: -2.78851056098938
    5. '[' → logprob: -3.66351056098938
    6. ',
' → logprob: -4.163510799407959
    7. '<|end|>' → logprob: -5.038510799407959
    8. ' ,
' → logprob: -5.413510799407959
    9. ' ' → logprob: -6.788510799407959
    10. 'a' → logprob: -7.038510799407959

Token 233: 'ale' (ID: 1167)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2675645351409912
    2. ' ):' → logprob: -2.392564535140991
    3. ')' → logprob: -2.892564535140991
    4. '   ' → logprob: -3.142564535140991
    5. ' )' → logprob: -4.51756477355957
    6. 'e' → logprob: -4.51756477355957
    7. ':' → logprob: -5.39256477355957
    8. '):
' → logprob: -5.64256477355957
    9. ',' → logprob: -5.89256477355957
    10. ' :' → logprob: -5.89256477355957

Token 234: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8019225597381592
    2. ')' → logprob: -1.1769225597381592
    3. '   ' → logprob: -2.426922559738159
    4. ',
' → logprob: -2.801922559738159
    5. '):
' → logprob: -3.426922559738159
    6. '<|end|>' → logprob: -3.801922559738159
    7. ' ,' → logprob: -4.051922798156738
    8. '),' → logprob: -5.301922798156738
    9. '),
' → logprob: -5.801922798156738
    10. ')
' → logprob: -5.926922798156738

Token 235: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27857506275177
    2. '   ' → logprob: -1.65357506275177
    3. ',
' → logprob: -4.2785749435424805
    4. ' ,' → logprob: -4.5285749435424805
    5. 'a' → logprob: -4.7785749435424805
    6. ',b' → logprob: -5.4035749435424805
    7. ')' → logprob: -5.4035749435424805
    8. ',a' → logprob: -5.9035749435424805
    9. '       ' → logprob: -6.1535749435424805
    10. '    ' → logprob: -6.5285749435424805

Token 236: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3212165832519531
    2. 'b' (adapté à ' b') → logprob: -1.3212165832519531
    3. 'a' → logprob: -5.196216583251953
    4. ' a' → logprob: -6.321216583251953
    5. 'int' → logprob: -8.446216583251953
    6. '   ' → logprob: -8.696216583251953
    7. ' int' → logprob: -9.696216583251953
    8. ' d' → logprob: -10.696216583251953
    9. '       ' → logprob: -10.696216583251953
    10. '    ' → logprob: -10.696216583251953

Token 237: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06380735337734222
    2. '(int' → logprob: -2.813807249069214
    3. ')' → logprob: -7.313807487487793
    4. ':int' → logprob: -7.438807487487793
    5. ':' → logprob: -8.188807487487793
    6. '   ' → logprob: -8.813807487487793
    7. '[int' → logprob: -10.063807487487793
    8. '=int' → logprob: -10.688807487487793
    9. 'int' → logprob: -10.813807487487793
    10. ',' → logprob: -11.063807487487793

Token 238: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001410850090906024
    2. ' int' → logprob: -8.875141143798828
    3. ')' → logprob: -14.500141143798828
    4. '[int' → logprob: -15.125141143798828
    5. '(int' → logprob: -15.250141143798828
    6. ':int' → logprob: -16.500141143798828
    7. '=int' → logprob: -16.625141143798828
    8. '<int' → logprob: -16.875141143798828
    9. ']int' → logprob: -17.000141143798828
    10. ',int' → logprob: -18.125141143798828

Token 239: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5946291089057922
    2. ':' → logprob: -1.5946290493011475
    3. ':int' → logprob: -1.7196290493011475
    4. ')' → logprob: -3.4696290493011475
    5. '):
' → logprob: -3.9696290493011475
    6. 'int' → logprob: -5.094629287719727
    7. '=int' → logprob: -6.469629287719727
    8. '(int' → logprob: -6.469629287719727
    9. ' ):' → logprob: -6.719629287719727
    10. ' :' → logprob: -6.719629287719727

Token 240: ' Première' (ID: 179764)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31371408700942993
    2. 'int' → logprob: -1.3137140274047852
    3. '(int' → logprob: -7.813714027404785
    4. '[int' → logprob: -11.438714027404785
    5. '=int' → logprob: -11.563714027404785
    6. '<int' → logprob: -11.563714027404785
    7. ')' → logprob: -12.438714027404785
    8. ':int' → logprob: -12.688714027404785
    9. ',int' → logprob: -13.063714027404785
    10. ']int' → logprob: -13.438714027404785

Token 241: ' coord' (ID: 25819)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5777178406715393
    2. ' int' → logprob: -0.8277178406715393
    3. ')' → logprob: -6.7027177810668945
    4. ' ' → logprob: -9.202717781066895
    5. '(int' → logprob: -9.327717781066895
    6. '<|end|>' → logprob: -9.827717781066895
    7. '  ' → logprob: -10.077717781066895
    8. ':int' → logprob: -10.202717781066895
    9. '[int' → logprob: -10.202717781066895
    10. ',int' → logprob: -10.577717781066895

Token 242: 'onnée' (ID: 91161)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4787706732749939
    2. ')' → logprob: -2.1037707328796387
    3. ':' → logprob: -2.6037707328796387
    4. '):' → logprob: -4.353770732879639
    5. 'é' → logprob: -4.478770732879639
    6. '):
' → logprob: -4.478770732879639
    7. 'def' → logprob: -4.478770732879639
    8. ',' → logprob: -4.478770732879639
    9. '       ' → logprob: -4.603770732879639
    10. 'ément' → logprob: -4.728770732879639

Token 243: ' verticale' (ID: 199428)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4626059532165527
    2. ' verticale' → logprob: -1.8376059532165527
    3. '):
' → logprob: -2.4626059532165527
    4. ' horizont' → logprob: -2.5876059532165527
    5. ' vertical' → logprob: -2.8376059532165527
    6. ' (' → logprob: -2.9626059532165527
    7. '):' → logprob: -2.9626059532165527
    8. 'vertical' → logprob: -3.0876059532165527
    9. ' )' → logprob: -3.2126059532165527
    10. ' horizontal' → logprob: -3.3376059532165527

Token 244: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3051857054233551
    2. '):' → logprob: -1.9301856756210327
    3. '   ' → logprob: -2.1801857948303223
    4. ')' → logprob: -5.805185794830322
    5. ':' → logprob: -7.430185794830322
    6. ',' → logprob: -7.680185794830322
    7. ' ):
' → logprob: -8.930185317993164
    8. '<|end|>' → logprob: -8.930185317993164
    9. '```' → logprob: -9.430185317993164
    10. '):
' → logprob: -9.555185317993164

Token 245: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020420419052243233
    2. ')' → logprob: -4.270420551300049
    3. 'def' → logprob: -6.520420551300049
    4. '```' → logprob: -6.770420551300049
    5. '<|end|>' → logprob: -7.395420551300049
    6. '
' → logprob: -7.395420551300049
    7. '    
' → logprob: -7.645420551300049
    8. '    ' → logprob: -8.27042007446289
    9. ' 
' → logprob: -8.27042007446289
    10. ' ' → logprob: -8.52042007446289

Token 246: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.001805606996640563
    2. ' c' → logprob: -6.376805782318115
    3. 'int' → logprob: -9.751805305480957
    4. '   ' → logprob: -10.251805305480957
    5. 'd' → logprob: -12.251805305480957
    6. ' ' → logprob: -13.376805305480957
    7. 'a' → logprob: -13.501805305480957
    8. '       ' → logprob: -14.626805305480957
    9. ' int' → logprob: -14.939305305480957
    10. '  ' → logprob: -15.314305305480957

Token 247: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.012903837487101555
    2. '(int' → logprob: -4.387903690338135
    3. '(' → logprob: -8.012904167175293
    4. ')' → logprob: -10.887904167175293
    5. 'int' → logprob: -11.012904167175293
    6. '[int' → logprob: -11.637904167175293
    7. '=int' → logprob: -12.137904167175293
    8. ':int' → logprob: -12.262904167175293
    9. '   ' → logprob: -13.262904167175293
    10. '<int' → logprob: -13.512904167175293

Token 248: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.5048530030981055e-06
    2. ' int' → logprob: -13.500001907348633
    3. ')' → logprob: -17.000001907348633
    4. '(int' → logprob: -17.250001907348633
    5. '=int' → logprob: -19.250001907348633
    6. '<int' → logprob: -19.500001907348633
    7. '[int' → logprob: -19.500001907348633
    8. ':int' → logprob: -19.875001907348633
    9. ']int' → logprob: -20.000001907348633
    10. '0' → logprob: -20.500001907348633

Token 249: '):' (ID: 3127)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.021990982815623283
    2. '(int' → logprob: -5.021990776062012
    3. ')' → logprob: -5.396990776062012
    4. ':int' → logprob: -5.521990776062012
    5. ' int' → logprob: -5.521990776062012
    6. '):' → logprob: -6.771990776062012
    7. ' (' → logprob: -7.771990776062012
    8. '[int' → logprob: -8.146990776062012
    9. ':' → logprob: -8.396990776062012
    10. '   ' → logprob: -8.646990776062012

Token 250: ' Se' (ID: 1550)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5233423709869385
    2. ' int' → logprob: -0.8983423709869385
    3. '(int' → logprob: -8.64834213256836
    4. '[int' → logprob: -11.27334213256836
    5. 'c' → logprob: -11.77334213256836
    6. ' (' → logprob: -12.27334213256836
    7. '<int' → logprob: -12.39834213256836
    8. '0' → logprob: -12.89834213256836
    9. ' ' → logprob: -13.02334213256836
    10. 'd' → logprob: -13.14834213256836

Token 251: 'conde' (ID: 50435)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3994724452495575
    2. ' int' → logprob: -2.02447247505188
    3. '  ' → logprob: -2.77447247505188
    4. ' ' → logprob: -3.27447247505188
    5. 'nt' → logprob: -3.64947247505188
    6. ')' → logprob: -3.77447247505188
    7. '   ' → logprob: -3.77447247505188
    8. ' -' → logprob: -5.649472236633301
    9. '    ' → logprob: -5.899472236633301
    10. 'm' → logprob: -6.399472236633301

Token 252: ' coord' (ID: 25819)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4307386875152588
    2. ')' → logprob: -1.8057386875152588
    3. ' ' → logprob: -2.805738687515259
    4. ' ==' → logprob: -3.430738687515259
    5. '-' → logprob: -3.930738687515259
    6. '==' → logprob: -4.80573844909668
    7. ' (' → logprob: -4.93073844909668
    8. '3' → logprob: -5.05573844909668
    9. 'int' → logprob: -5.18073844909668
    10. ',' → logprob: -5.43073844909668

Token 253: 'onnée' (ID: 91161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8827694058418274
    2. '3' → logprob: -1.3827693462371826
    3. ' i' → logprob: -2.2577693462371826
    4. '   ' → logprob: -2.5077693462371826
    5. ' -' → logprob: -3.6327693462371826
    6. ' ' → logprob: -4.007769584655762
    7. 'é' → logprob: -4.382769584655762
    8. 'i' → logprob: -4.632769584655762
    9. ' )' → logprob: -4.757769584655762
    10. '-' → logprob: -5.382769584655762

Token 254: ' horizont' (ID: 69308)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9687798023223877
    2. 'horizontal' → logprob: -1.3437798023223877
    3. ' horizontal' → logprob: -2.0937798023223877
    4. ' int' → logprob: -2.2187798023223877
    5. ' (' → logprob: -2.8437798023223877
    6. ' horizont' → logprob: -4.093779563903809
    7. 'vertical' → logprob: -4.343779563903809
    8. ' horiz' → logprob: -4.468779563903809
    9. ' ' → logprob: -4.968779563903809
    10. '(int' → logprob: -5.218779563903809

Token 255: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.15939272940158844
    2. 'e' → logprob: -2.534392833709717
    3. 'al' → logprob: -3.659392833709717
    4. '   ' → logprob: -4.284392833709717
    5. ')' → logprob: -4.409392833709717
    6. 'ique' → logprob: -5.159392833709717
    7. 'ère' → logprob: -6.409392833709717
    8. 'érale' → logprob: -6.909392833709717
    9. 'c' → logprob: -7.034392833709717
    10. 'ales' → logprob: -7.159392833709717

Token 256: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6987501978874207
    2. '   ' → logprob: -1.4487502574920654
    3. '):' → logprob: -1.4487502574920654
    4. ')' → logprob: -3.5737502574920654
    5. 'def' → logprob: -7.073750019073486
    6. '):

' → logprob: -7.073750019073486
    7. ',' → logprob: -7.073750019073486
    8. '```' → logprob: -7.573750019073486
    9. ':' → logprob: -7.698750019073486
    10. '):
' → logprob: -8.323750495910645

Token 257: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07169793546199799
    2. ')' → logprob: -3.071697950363159
    3. ',' → logprob: -4.57169771194458
    4. '):
' → logprob: -5.69669771194458
    5. 'def' → logprob: -6.07169771194458
    6. 'd' → logprob: -6.69669771194458
    7. ' ' → logprob: -7.07169771194458
    8. '```' → logprob: -7.57169771194458
    9. ' )' → logprob: -7.69669771194458
    10. ' ,' → logprob: -7.69669771194458

Token 258: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.16265444457530975
    2. 'int' → logprob: -1.9126543998718262
    3. 'c' → logprob: -6.412654399871826
    4. ' d' → logprob: -7.537654399871826
    5. ' int' → logprob: -8.537654876708984
    6. '   ' → logprob: -10.287654876708984
    7. '(int' → logprob: -11.412654876708984
    8. '
' → logprob: -13.162654876708984
    9. '       ' → logprob: -13.162654876708984
    10. '(' → logprob: -13.662654876708984

Token 259: ' (' (ID: 350)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.043878983706235886
    2. ' (' → logprob: -3.4188790321350098
    3. ')' → logprob: -5.79387903213501
    4. 'int' → logprob: -5.91887903213501
    5. ':int' → logprob: -6.04387903213501
    6. '):' → logprob: -6.91887903213501
    7. '[int' → logprob: -7.91887903213501
    8. '=int' → logprob: -8.293878555297852
    9. '   ' → logprob: -8.543878555297852
    10. '):
' → logprob: -9.168878555297852

Token 260: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -15.250000953674316
    3. ' int' → logprob: -15.625000953674316
    4. '(int' → logprob: -16.75
    5. '[int' → logprob: -17.0
    6. '<int' → logprob: -18.25
    7. ']int' → logprob: -18.5
    8. 'c' → logprob: -18.625
    9. '1' → logprob: -18.75
    10. '=int' → logprob: -19.0

Token 261: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01966852881014347
    2. '):
' → logprob: -4.6446685791015625
    3. ')' → logprob: -5.5196685791015625
    4. 'int' → logprob: -5.6446685791015625
    5. ':' → logprob: -6.2696685791015625
    6. '(int' → logprob: -8.769668579101562
    7. ':int' → logprob: -9.144668579101562
    8. '   ' → logprob: -9.394668579101562
    9. '):

' → logprob: -10.144668579101562
    10. '[int' → logprob: -11.019668579101562

Token 262: ' Se' (ID: 1550)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005308704450726509
    2. ' int' → logprob: -5.255308628082275
    3. '(int' → logprob: -9.505309104919434
    4. '[int' → logprob: -15.380309104919434
    5. ' (' → logprob: -16.005308151245117
    6. '<int' → logprob: -16.755308151245117
    7. 'def' → logprob: -16.880308151245117
    8. '=int' → logprob: -17.380308151245117
    9. '```' → logprob: -17.380308151245117
    10. '
' → logprob: -17.880308151245117

Token 263: 'conde' (ID: 50435)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5631862878799438
    2. 'int' → logprob: -1.8131862878799438
    3. ',' → logprob: -2.6881861686706543
    4. '=' → logprob: -3.3131861686706543
    5. '')' → logprob: -3.5631861686706543
    6. '3' → logprob: -3.6881861686706543
    7. ''' → logprob: -3.8131861686706543
    8. '4' → logprob: -4.938186168670654
    9. ' int' → logprob: -4.938186168670654
    10. 'p' → logprob: -5.438186168670654

Token 264: ' coord' (ID: 25819)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.39679962396621704
    2. ')' → logprob: -2.0217995643615723
    3. '-' → logprob: -2.8967995643615723
    4. ',' → logprob: -3.3967995643615723
    5. ' position' → logprob: -3.8967995643615723
    6. '):
' → logprob: -4.271799564361572
    7. '):' → logprob: -4.396799564361572
    8. ' ' → logprob: -4.646799564361572
    9. 'position' → logprob: -4.646799564361572
    10. '+' → logprob: -5.146799564361572

Token 265: 'onnée' (ID: 91161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18062834441661835
    2. ',' → logprob: -2.6806282997131348
    3. '):
' → logprob: -3.0556282997131348
    4. '3' → logprob: -4.180628299713135
    5. '):' → logprob: -5.055628299713135
    6. 'def' → logprob: -5.430628299713135
    7. ')**' → logprob: -6.055628299713135
    8. '```' → logprob: -6.055628299713135
    9. '   ' → logprob: -6.430628299713135
    10. 'i' → logprob: -6.555628299713135

Token 266: ' verticale' (ID: 199428)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.056851826608181
    2. '):' → logprob: -2.931851863861084
    3. ')' → logprob: -6.931851863861084
    4. ',' → logprob: -7.556851863861084
    5. '):
' → logprob: -9.056851387023926
    6. '):

' → logprob: -9.056851387023926
    7. '   ' → logprob: -9.556851387023926
    8. ':' → logprob: -10.306851387023926
    9. ' ):
' → logprob: -10.306851387023926
    10. '"):
' → logprob: -10.931851387023926

Token 267: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.022594889625906944
    2. '):' → logprob: -4.147594928741455
    3. ')' → logprob: -5.397594928741455
    4. '   ' → logprob: -6.272594928741455
    5. '):
' → logprob: -9.397594451904297
    6. '):

' → logprob: -11.647594451904297
    7. '
' → logprob: -11.647594451904297
    8. ' ):
' → logprob: -12.272594451904297
    9. '"):
' → logprob: -12.647594451904297
    10. ')
' → logprob: -12.647594451904297

Token 268: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14921537041664124
    2. ':' → logprob: -2.6492154598236084
    3. '):
' → logprob: -3.6492154598236084
    4. '):' → logprob: -3.8992154598236084
    5. ':
' → logprob: -4.274215221405029
    6. ')' → logprob: -5.274215221405029
    7. '    
' → logprob: -6.524215221405029
    8. ' :
' → logprob: -8.649215698242188
    9. '
' → logprob: -8.774215698242188
    10. ' :' → logprob: -8.774215698242188

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1435585767030716
    2. 'for' → logprob: -2.6435585021972656
    3. ' for' → logprob: -3.2685585021972656
    4. ')' → logprob: -5.018558502197266
    5. '):
' → logprob: -5.018558502197266
    6. ':' → logprob: -5.018558502197266
    7. '):' → logprob: -6.643558502197266
    8. '
' → logprob: -6.893558502197266
    9. ':
' → logprob: -7.143558502197266
    10. '"""
' → logprob: -8.143558502197266

Token 270: ' Returns' (ID: 9609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03170797973871231
    2. '"""
' → logprob: -4.281707763671875
    3. '   ' → logprob: -4.531707763671875
    4. '"""' → logprob: -5.531707763671875
    5. ' for' → logprob: -6.906707763671875
    6. 'if' → logprob: -7.281707763671875
    7. 'i' → logprob: -7.531707763671875
    8. '
' → logprob: -9.281707763671875
    9. '""' → logprob: -9.406707763671875
    10. '```' → logprob: -10.406707763671875

Token 271: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14573462307453156
    2. ' :' → logprob: -2.3957345485687256
    3. ' s' → logprob: -4.270734786987305
    4. '   ' → logprob: -4.520734786987305
    5. ' ' → logprob: -5.270734786987305
    6. ':
' → logprob: -5.520734786987305
    7. ' :
' → logprob: -6.020734786987305
    8. '    ' → logprob: -6.145734786987305
    9. ' None' → logprob: -6.145734786987305
    10. 's' → logprob: -6.895734786987305

Token 272: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016752280294895172
    2. ' None' → logprob: -5.266752243041992
    3. '    ' → logprob: -5.641752243041992
    4. '0' → logprob: -5.641752243041992
    5. ' i' → logprob: -6.141752243041992
    6. ' ' → logprob: -6.766752243041992
    7. 'None' → logprob: -8.016752243041992
    8. '  ' → logprob: -8.516752243041992
    9. '1' → logprob: -8.641752243041992
    10. '    
' → logprob: -9.016752243041992

Token 273: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -1.2113979209971149e-05
    2. ' int' → logprob: -12.375012397766113
    3. '   ' → logprob: -12.625012397766113
    4. '[int' → logprob: -12.625012397766113
    5. 'None' → logprob: -15.250012397766113
    6. '```' → logprob: -15.375012397766113
    7. '(int' → logprob: -15.500012397766113
    8. '
' → logprob: -16.250011444091797
    9. 'Optional' → logprob: -16.375011444091797
    10. 'i' → logprob: -16.875011444091797

Token 274: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018570076208561659
    2. ':
' → logprob: -6.501856803894043
    3. ' :' → logprob: -8.251856803894043
    4. '   ' → logprob: -9.501856803894043
    5. ' :
' → logprob: -12.001856803894043
    6. '):' → logprob: -12.626856803894043
    7. '=' → logprob: -13.001856803894043
    8. ' =' → logprob: -13.251856803894043
    9. ':int' → logprob: -14.251856803894043
    10. ':return' → logprob: -14.251856803894043

Token 275: ' Le' (ID: 2018)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.8776086568832397
    2. ' i' → logprob: -1.3776086568832397
    3. ' min' → logprob: -1.7526086568832397
    4. '0' → logprob: -2.8776087760925293
    5. 'i' → logprob: -3.0026087760925293
    6. 'next' → logprob: -4.252608776092529
    7. ' ' → logprob: -4.627608776092529
    8. ' max' → logprob: -4.627608776092529
    9. 'min' → logprob: -4.877608776092529
    10. ' -' → logprob: -6.627608776092529

Token 276: ' plus' (ID: 2932)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -1.1185638904571533
    2. 'niveau' → logprob: -1.1185638904571533
    3. 'plus' → logprob: -1.6185638904571533
    4. 'next' → logprob: -3.1185638904571533
    5. ' premier' → logprob: -3.2435638904571533
    6. 'i' → logprob: -4.368563652038574
    7. ' niveau' → logprob: -4.618563652038574
    8. 'min' → logprob: -4.743563652038574
    9. ' plus' → logprob: -4.743563652038574
    10. ' next' → logprob: -5.243563652038574

Token 277: ' bas' (ID: 3222)
  Prédit: ' petit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' petit' → logprob: -0.8872241377830505
    2. '   ' → logprob: -1.8872241973876953
    3. 'prem' → logprob: -2.1372241973876953
    4. '```' → logprob: -2.8872241973876953
    5. ' i' → logprob: -3.2622241973876953
    6. '0' → logprob: -3.2622241973876953
    7. 'i' → logprob: -3.6372241973876953
    8. '1' → logprob: -3.6372241973876953
    9. ' faible' → logprob: -3.8872241973876953
    10. ' small' → logprob: -3.8872241973876953

Token 278: ' niveau' (ID: 21708)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23558931052684784
    2. ' niveau' → logprob: -1.8605892658233643
    3. 'i' → logprob: -3.7355892658233643
    4. 'niveau' → logprob: -3.8605892658233643
    5. ' indice' → logprob: -5.485589504241943
    6. 'indice' → logprob: -6.610589504241943
    7. ' ' → logprob: -6.735589504241943
    8. ' index' → logprob: -7.110589504241943
    9. 'index' → logprob: -7.985589504241943
    10. '_i' → logprob: -8.610589027404785

Token 279: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6058679223060608
    2. '   ' → logprob: -0.9808679223060608
    3. ' =' → logprob: -4.355867862701416
    4. '    
' → logprob: -4.480867862701416
    5. '
' → logprob: -4.730867862701416
    6. '0' → logprob: -4.855867862701416
    7. 'def' → logprob: -5.605867862701416
    8. ' ' → logprob: -5.605867862701416
    9. '    ' → logprob: -5.730867862701416
    10. '(i' → logprob: -5.855867862701416

Token 280: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.387587308883667
    2. ' i' → logprob: -1.137587308883667
    3. ' de' → logprob: -9.137587547302246
    4. '0' → logprob: -9.262587547302246
    5. 'indice' → logprob: -9.262587547302246
    6. ' ' → logprob: -9.387587547302246
    7. 'sign' → logprob: -9.512587547302246
    8. '1' → logprob: -9.887587547302246
    9. 'de' → logprob: -10.137587547302246
    10. 'diff' → logprob: -10.637587547302246

Token 281: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4981050491333008
    2. ' =' → logprob: -1.7481050491333008
    3. ':
' → logprob: -2.248105049133301
    4. '=' → logprob: -2.248105049133301
    5. ':' → logprob: -2.498105049133301
    6. ' où' → logprob: -2.498105049133301
    7. ' where' → logprob: -2.623105049133301
    8. ' à' → logprob: -3.373105049133301
    9. 'où' → logprob: -3.998105049133301
    10. '+' → logprob: -3.998105049133301

Token 282: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1547546088695526
    2. ' =' → logprob: -2.529754638671875
    3. '=' → logprob: -3.029754638671875
    4. ':' → logprob: -4.654754638671875
    5. '
' → logprob: -6.654754638671875
    6. ':
' → logprob: -7.279754638671875
    7. '0' → logprob: -7.529754638671875
    8. ',' → logprob: -7.529754638671875
    9. 'def' → logprob: -7.779754638671875
    10. '    ' → logprob: -7.779754638671875

Token 283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021265821531414986
    2. ' ' → logprob: -4.146265983581543
    3. ' where' → logprob: -6.271265983581543
    4. '   ' → logprob: -6.646265983581543
    5. ' où' → logprob: -6.896265983581543
    6. '+' → logprob: -8.146265983581543
    7. '```' → logprob: -8.521265983581543
    8. 'où' → logprob: -8.521265983581543
    9. ' for' → logprob: -9.896265983581543
    10. ' at' → logprob: -10.146265983581543

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024783893022686243
    2. ' ' → logprob: -6.12747859954834
    3. '0' → logprob: -9.12747859954834
    4. '   ' → logprob: -9.62747859954834
    5. '2' → logprob: -10.37747859954834
    6. '```' → logprob: -11.25247859954834
    7. 'def' → logprob: -11.62747859954834
    8. '3' → logprob: -11.75247859954834
    9. '(' → logprob: -12.37747859954834
    10. '4' → logprob: -12.56497859954834

Token 285: ' respect' (ID: 5618)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010427950881421566
    2. ':' → logprob: -5.010427951812744
    3. ' =' → logprob: -7.010427951812744
    4. ' for' → logprob: -7.635427951812744
    5. '    
' → logprob: -7.635427951812744
    6. '=' → logprob: -8.010427474975586
    7. '
' → logprob: -8.010427474975586
    8. ':
' → logprob: -8.260427474975586
    9. ',' → logprob: -8.385427474975586
    10. 'def' → logprob: -9.010427474975586

Token 286: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.5324736833572388
    2. 'é' → logprob: -0.9074736833572388
    3. 'u' → logprob: -5.907473564147949
    4. 'if' → logprob: -6.532473564147949
    5. 'ent' → logprob: -7.032473564147949
    6. 'eur' → logprob: -7.282473564147949
    7. 'uant' → logprob: -7.407473564147949
    8. 'ivement' → logprob: -7.407473564147949
    9. 'ueux' → logprob: -8.03247356414795
    10. 'er' → logprob: -8.15747356414795

Token 287: ' la' (ID: 557)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.3796052932739258
    2. ' ' → logprob: -2.004605293273926
    3. 'lambda' → logprob: -2.129605293273926
    4. ' a' → logprob: -2.629605293273926
    5. ' i' → logprob: -2.754605293273926
    6. '   ' → logprob: -3.129605293273926
    7. ' la' → logprob: -3.254605293273926
    8. '1' → logprob: -3.629605293273926
    9. ' m' → logprob: -3.629605293273926
    10. ' s' → logprob: -3.629605293273926

Token 288: ' condition' (ID: 7060)
  Prédit: ' condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' condition' → logprob: -1.7352919578552246
    2. '3' → logprob: -1.8602919578552246
    3. ' ' → logprob: -1.9852919578552246
    4. '1' → logprob: -2.1102919578552246
    5. 'condition' → logprob: -2.4852919578552246
    6. '```' → logprob: -2.7352919578552246
    7. ' i' → logprob: -3.2352919578552246
    8. ' in' → logprob: -3.8602919578552246
    9. 'diff' → logprob: -4.110291957855225
    10. '"""
' → logprob: -4.235291957855225

Token 289: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004016191698610783
    2. ' for' → logprob: -6.629016399383545
    3. ':' → logprob: -7.004016399383545
    4. ' =' → logprob: -7.379016399383545
    5. ' i' → logprob: -8.629015922546387
    6. '    
' → logprob: -8.629015922546387
    7. '=' → logprob: -8.879015922546387
    8. ',' → logprob: -9.129015922546387
    9. '    ' → logprob: -9.379015922546387
    10. '  ' → logprob: -10.004015922546387

Token 290: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19379928708076477
    2. ' i' → logprob: -1.9437992572784424
    3. '0' → logprob: -4.4437994956970215
    4. '    
' → logprob: -4.9437994956970215
    5. ' for' → logprob: -5.4437994956970215
    6. 'i' → logprob: -5.8187994956970215
    7. ' 
' → logprob: -6.1937994956970215
    8. '   
' → logprob: -6.9437994956970215
    9. '\n' → logprob: -7.0687994956970215
    10. '1' → logprob: -7.0687994956970215

Token 291: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8001659512519836
    2. ' -' → logprob: -1.8001658916473389
    3. ' None' → logprob: -1.8001658916473389
    4. '0' → logprob: -2.425165891647339
    5. 'None' → logprob: -2.550165891647339
    6. ' ' → logprob: -4.050166130065918
    7. ' max' → logprob: -4.300166130065918
    8. '10' → logprob: -5.675166130065918
    9. '   ' → logprob: -5.800166130065918
    10. ' float' → logprob: -6.050166130065918

Token 292: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39464446902275085
    2. '0' → logprob: -1.2696444988250732
    3. 'None' → logprob: -3.2696444988250732
    4. 'len' → logprob: -6.269644260406494
    5. 'max' → logprob: -6.394644260406494
    6. ' -' → logprob: -7.394644260406494
    7. 'float' → logprob: -7.394644260406494
    8. 'False' → logprob: -8.144644737243652
    9. 'abs' → logprob: -8.269644737243652
    10. '1' → logprob: -8.394644737243652

Token 293: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006330899195745587
    2. ' for' → logprob: -8.250633239746094
    3. '    
' → logprob: -8.875633239746094
    4. ':' → logprob: -9.375633239746094
    5. '
' → logprob: -9.875633239746094
    6. 'def' → logprob: -10.250633239746094
    7. 'for' → logprob: -11.250633239746094
    8. ',' → logprob: -11.750633239746094
    9. '#' → logprob: -12.500633239746094
    10. ' =' → logprob: -12.750633239746094

Token 294: ''il' (ID: 14683)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5536473393440247
    2. 'i' → logprob: -1.5536472797393799
    3. ''il' → logprob: -1.8036472797393799
    4. ''ils' → logprob: -4.803647518157959
    5. ''' → logprob: -4.928647518157959
    6. '=' → logprob: -5.053647518157959
    7. '```' → logprob: -5.678647518157959
    8. ''i' → logprob: -5.803647518157959
    9. '>' → logprob: -5.928647518157959
    10. '`' → logprob: -6.053647518157959

Token 295: ' n' (ID: 297)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.48627927899360657
    2. 'a' → logprob: -1.2362792491912842
    3. ' return' → logprob: -3.486279249191284
    4. ' n' → logprob: -4.361279487609863
    5. 'n' → logprob: -4.486279487609863
    6. ' i' → logprob: -4.861279487609863
    7. 'b' → logprob: -5.486279487609863
    8. ' ==' → logprob: -5.736279487609863
    9. 'return' → logprob: -5.861279487609863
    10. ' not' → logprob: -5.861279487609863

Token 296: ''y' (ID: 27913)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2624874114990234
    2. 'u' → logprob: -1.6374874114990234
    3. ''' → logprob: -2.3874874114990234
    4. ''est' → logprob: -2.5124874114990234
    5. 'est' → logprob: -2.6374874114990234
    6. 'e' → logprob: -3.2624874114990234
    7. 'a' → logprob: -3.6374874114990234
    8. '==' → logprob: -3.6374874114990234
    9. ' return' → logprob: -3.7624874114990234
    10. ' est' → logprob: -3.8874874114990234

Token 297: ' en' (ID: 469)
  Prédit: ''est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''est' → logprob: -1.7290951013565063
    2. 'est' → logprob: -1.9790951013565063
    3. '==' → logprob: -2.354094982147217
    4. ''ex' → logprob: -2.354094982147217
    5. ' a' → logprob: -2.604094982147217
    6. 'ex' → logprob: -2.729094982147217
    7. 'a' → logprob: -2.854094982147217
    8. '=' → logprob: -3.229094982147217
    9. '>' → logprob: -3.604094982147217
    10. ''' → logprob: -3.854094982147217

Token 298: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39174267649650574
    2. ' a' → logprob: -1.1417427062988281
    3. 'pas' → logprob: -6.141742706298828
    4. 'avait' → logprob: -6.641742706298828
    5. ''a' → logprob: -7.766742706298828
    6. ' pas' → logprob: -8.516742706298828
    7. 'ex' → logprob: -8.641742706298828
    8. 'n' → logprob: -9.141742706298828
    9. 'have' → logprob: -9.391742706298828
    10. '```' → logprob: -9.516742706298828

Token 299: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.1735318899154663
    2. ' pas' → logprob: -1.5485318899154663
    3. ' aucun' → logprob: -1.5485318899154663
    4. ' aucune' → logprob: -1.5485318899154663
    5. '   ' → logprob: -4.423532009124756
    6. '0' → logprob: -4.673532009124756
    7. 'none' → logprob: -4.923532009124756
    8. '```' → logprob: -4.923532009124756
    9. 'auc' → logprob: -5.423532009124756
    10. 'None' → logprob: -5.548532009124756

Token 300: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1192873939871788
    2. ':' → logprob: -2.4942874908447266
    3. ':
' → logprob: -3.7442874908447266
    4. '
' → logprob: -6.494287490844727
    5. '    
' → logprob: -6.619287490844727
    6. '\n' → logprob: -7.369287490844727
    7. ',' → logprob: -7.869287490844727
    8. '.' → logprob: -7.994287490844727
    9. '):
' → logprob: -8.119287490844727
    10. '  
' → logprob: -8.619287490844727

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00642379792407155
    2. '
' → logprob: -5.6314239501953125
    3. '    
' → logprob: -6.6314239501953125
    4. ':' → logprob: -7.0064239501953125
    5. ':
' → logprob: -8.756423950195312
    6. 'def' → logprob: -9.756423950195312
    7. ')' → logprob: -9.756423950195312
    8. ' for' → logprob: -9.881423950195312
    9. '):
' → logprob: -9.881423950195312
    10. '```' → logprob: -10.006423950195312

Token 302: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12802338600158691
    2. ':' → logprob: -2.503023386001587
    3. '
' → logprob: -4.253023147583008
    4. '    
' → logprob: -4.503023147583008
    5. ':
' → logprob: -5.378023147583008
    6. '\t' → logprob: -6.378023147583008
    7. '\n' → logprob: -6.503023147583008
    8. '  
' → logprob: -6.753023147583008
    9. ')' → logprob: -7.003023147583008
    10. '):
' → logprob: -7.628023147583008

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014569011982530355
    2. ' for' → logprob: -6.6264567375183105
    3. ' i' → logprob: -10.251457214355469
    4. '	for' → logprob: -10.376457214355469
    5. '    
' → logprob: -10.626457214355469
    6. 'for' → logprob: -11.126457214355469
    7. 'i' → logprob: -11.376457214355469
    8. '	i' → logprob: -11.626457214355469
    9. 'def' → logprob: -13.626457214355469
    10. '
' → logprob: -14.501457214355469

Token 304: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6985741853713989
    2. ' for' → logprob: -0.8235741853713989
    3. 'for' → logprob: -2.9485740661621094
    4. ' i' → logprob: -4.823574066162109
    5. 'i' → logprob: -5.698574066162109
    6. 'def' → logprob: -11.19857406616211
    7. '```' → logprob: -11.44857406616211
    8. '    
' → logprob: -11.94857406616211
    9. '
' → logprob: -12.82357406616211
    10. '	for' → logprob: -13.69857406616211

Token 305: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.300754576921463
    2. ' for' → logprob: -1.5507545471191406
    3. 'i' → logprob: -3.3007545471191406
    4. '   ' → logprob: -4.675754547119141
    5. ' i' → logprob: -6.550754547119141
    6. 'from' → logprob: -11.42575454711914
    7. '```' → logprob: -11.67575454711914
    8. '
' → logprob: -11.80075454711914
    9. 'def' → logprob: -12.17575454711914
    10. ' ' → logprob: -12.30075454711914

Token 306: ' cherche' (ID: 52345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18328291177749634
    2. ' for' → logprob: -1.8082828521728516
    3. 'i' → logprob: -6.058282852172852
    4. ' i' → logprob: -7.183282852172852
    5. 'def' → logprob: -8.058282852172852
    6. '   ' → logprob: -10.183282852172852
    7. 'return' → logprob: -11.433282852172852
    8. 'range' → logprob: -11.433282852172852
    9. ' =' → logprob: -11.558282852172852
    10. 'n' → logprob: -11.683282852172852

Token 307: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5195662975311279
    2. 'i' → logprob: -1.019566297531128
    3. ' for' → logprob: -3.394566297531128
    4. 'for' → logprob: -5.019566535949707
    5. '   ' → logprob: -5.519566535949707
    6. ' ' → logprob: -9.144566535949707
    7. '0' → logprob: -9.519566535949707
    8. '1' → logprob: -10.769566535949707
    9. 'max' → logprob: -11.144566535949707
    10. ' max' → logprob: -11.269566535949707

Token 308: ' dernier' (ID: 27982)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15768080949783325
    2. 'for' → logprob: -2.1576807498931885
    3. '0' → logprob: -4.282680988311768
    4. ' for' → logprob: -4.657680988311768
    5. '1' → logprob: -5.907680988311768
    6. ' i' → logprob: -6.157680988311768
    7. 'max' → logprob: -7.157680988311768
    8. 'def' → logprob: -8.53268051147461
    9. ' ' → logprob: -8.65768051147461
    10. 'while' → logprob: -8.90768051147461

Token 309: ' niveau' (ID: 21708)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10779893398284912
    2. ' i' → logprob: -2.8577990531921387
    3. 'niveau' → logprob: -4.107799053192139
    4. 'for' → logprob: -4.107799053192139
    5. ' niveau' → logprob: -5.232799053192139
    6. ' for' → logprob: -5.982799053192139
    7. 'indice' → logprob: -7.232799053192139
    8. 'n' → logprob: -7.607799053192139
    9. '0' → logprob: -7.857799053192139
    10. 'if' → logprob: -8.23279857635498

Token 310: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19817355275154114
    2. ' for' → logprob: -2.5731735229492188
    3. 'i' → logprob: -2.9481735229492188
    4. '   ' → logprob: -4.073173522949219
    5. 'for' → logprob: -4.198173522949219
    6. ' in' → logprob: -5.448173522949219
    7. '0' → logprob: -5.698173522949219
    8. ' ' → logprob: -5.948173522949219
    9. ' =' → logprob: -6.323173522949219
    10. '=' → logprob: -6.323173522949219

Token 311: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14883433282375336
    2. ' for' → logprob: -2.898834228515625
    3. ' i' → logprob: -3.148834228515625
    4. '   ' → logprob: -4.148834228515625
    5. 'for' → logprob: -4.273834228515625
    6. ')' → logprob: -5.148834228515625
    7. '0' → logprob: -6.648834228515625
    8. ' )' → logprob: -7.648834228515625
    9. ' =' → logprob: -8.023834228515625
    10. '    ' → logprob: -8.273834228515625

Token 312: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7429389357566833
    2. '   ' → logprob: -1.2429389953613281
    3. '=' → logprob: -1.6179389953613281
    4. ' for' → logprob: -3.867938995361328
    5. ' i' → logprob: -5.617938995361328
    6. ' in' → logprob: -6.117938995361328
    7. ')' → logprob: -6.242938995361328
    8. '    ' → logprob: -6.992938995361328
    9. ' -' → logprob: -6.992938995361328
    10. 'for' → logprob: -7.117938995361328

Token 313: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03146219253540039
    2. ' for' → logprob: -3.9064621925354004
    3. ' i' → logprob: -4.6564621925354
    4. 'i' → logprob: -7.2814621925354
    5. 'for' → logprob: -8.406461715698242
    6. ' =' → logprob: -8.781461715698242
    7. '  ' → logprob: -9.781461715698242
    8. ',' → logprob: -9.906461715698242
    9. '    ' → logprob: -10.031461715698242
    10. '=' → logprob: -10.906461715698242

Token 314: ' :
' (ID: 10039)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7067332863807678
    2. 's' → logprob: -1.456733226776123
    3. ' (' → logprob: -1.831733226776123
    4. '(s' → logprob: -2.831733226776123
    5. '(' → logprob: -3.456733226776123
    6. 'a' → logprob: -4.956733226776123
    7. '(a' → logprob: -5.081733226776123
    8. ' a' → logprob: -6.331733226776123
    9. '((' → logprob: -6.581733226776123
    10. '(abs' → logprob: -6.706733226776123

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29044902324676514
    2. ' for' → logprob: -1.4154490232467651
    3. 'for' → logprob: -5.415449142456055
    4. ' i' → logprob: -5.415449142456055
    5. '    ' → logprob: -8.665449142456055
    6. 'i' → logprob: -9.165449142456055
    7. ' if' → logprob: -10.915449142456055
    8. '       ' → logprob: -10.915449142456055
    9. '  ' → logprob: -11.665449142456055
    10. '0' → logprob: -11.915449142456055

Token 316: ' #' (ID: 1069)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6786959767341614
    2. 's' → logprob: -0.8036959767341614
    3. ' (' → logprob: -3.9286959171295166
    4. '(s' → logprob: -4.178696155548096
    5. '   ' → logprob: -6.428696155548096
    6. ' abs' → logprob: -6.428696155548096
    7. 'abs' → logprob: -6.678696155548096
    8. ' for' → logprob: -6.803696155548096
    9. 'for' → logprob: -6.928696155548096
    10. '(' → logprob: -7.428696155548096

Token 317: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3201274275779724
    2. ' for' → logprob: -1.5701274871826172
    3. '   ' → logprob: -3.445127487182617
    4. 'i' → logprob: -3.570127487182617
    5. ' i' → logprob: -5.945127487182617
    6. 'a' → logprob: -7.445127487182617
    7. 's' → logprob: -7.445127487182617
    8. ' (' → logprob: -7.820127487182617
    9. '(i' → logprob: -8.320127487182617
    10. 't' → logprob: -8.320127487182617

Token 318: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22134868800640106
    2. 's' → logprob: -1.8463486433029175
    3. 'all' → logprob: -4.846348762512207
    4. 'any' → logprob: -4.846348762512207
    5. 'i' → logprob: -5.096348762512207
    6. 'abs' → logprob: -5.096348762512207
    7. '(s' → logprob: -5.596348762512207
    8. 't' → logprob: -5.971348762512207
    9. 'a' → logprob: -6.346348762512207
    10. 'while' → logprob: -6.846348762512207

Token 319: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12132193148136139
    2. '(s' → logprob: -2.8713219165802
    3. ' s' → logprob: -3.6213219165802
    4. 'a' → logprob: -4.371322154998779
    5. '(a' → logprob: -5.371322154998779
    6. ' (' → logprob: -5.621322154998779
    7. 'abs' → logprob: -6.246322154998779
    8. '(' → logprob: -6.621322154998779
    9. 't' → logprob: -6.871322154998779
    10. 'i' → logprob: -6.996322154998779

Token 320: ' coordonnées' (ID: 181895)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10733218491077423
    2. ' s' → logprob: -2.857332229614258
    3. '(s' → logprob: -3.232332229614258
    4. 'a' → logprob: -6.232332229614258
    5. ' (' → logprob: -6.982332229614258
    6. '(a' → logprob: -7.732332229614258
    7. '(' → logprob: -7.982332229614258
    8. ' ' → logprob: -8.857332229614258
    9. 'abs' → logprob: -8.857332229614258
    10. '3' → logprob: -9.294832229614258

Token 321: ' horizont' (ID: 69308)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.54435795545578
    2. 'for' → logprob: -2.169358015060425
    3. 's' → logprob: -2.544358015060425
    4. 'i' → logprob: -2.794358015060425
    5. 'x' → logprob: -3.294358015060425
    6. ' i' → logprob: -3.669358015060425
    7. ' a' → logprob: -3.794358015060425
    8. ' for' → logprob: -3.919358015060425
    9. 'diff' → logprob: -4.669357776641846
    10. '   ' → logprob: -5.294357776641846

Token 322: 'ales' (ID: 3459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933382749557495
    2. ' i' → logprob: -2.693338394165039
    3. 'a' → logprob: -3.068338394165039
    4. ' ' → logprob: -3.068338394165039
    5. 'i' → logprob: -3.193338394165039
    6. 'for' → logprob: -3.318338394165039
    7. 'def' → logprob: -3.568338394165039
    8. ',' → logprob: -3.568338394165039
    9. ' for' → logprob: -3.693338394165039
    10. ')' → logprob: -3.818338394165039

Token 323: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0647082328796387
    2. 'i' → logprob: -2.3147082328796387
    3. ' i' → logprob: -2.3147082328796387
    4. 'for' → logprob: -2.3147082328796387
    5. ' for' → logprob: -2.8147082328796387
    6. 'diff' → logprob: -2.9397082328796387
    7. ',' → logprob: -3.1897082328796387
    8. 'et' → logprob: -3.5647082328796387
    9. ' or' → logprob: -3.9397082328796387
    10. ' !=' → logprob: -3.9397082328796387

Token 324: ' et' (ID: 859)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3219785988330841
    2. '!=' → logprob: -2.6969785690307617
    3. ',' → logprob: -2.9469785690307617
    4. ' and' → logprob: -3.6969785690307617
    5. ' ==' → logprob: -3.8219785690307617
    6. '   ' → logprob: -3.9469785690307617
    7. ')' → logprob: -3.9469785690307617
    8. ' et' → logprob: -4.571978569030762
    9. ' ' → logprob: -4.571978569030762
    10. '==' → logprob: -4.946978569030762

Token 325: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00866113230586052
    2. ' c' → logprob: -4.758661270141602
    3. 'b' → logprob: -10.758661270141602
    4. ' ' → logprob: -11.258661270141602
    5. '   ' → logprob: -11.883661270141602
    6. 'a' → logprob: -13.633661270141602
    7. ' b' → logprob: -13.946161270141602
    8. '  ' → logprob: -14.258661270141602
    9. '    ' → logprob: -14.821161270141602
    10. '	c' → logprob: -15.758661270141602

Token 326: ' sont' (ID: 5242)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6815191507339478
    2. ',' → logprob: -2.306519031524658
    3. '   ' → logprob: -2.306519031524658
    4. ' differ' → logprob: -2.931519031524658
    5. ' diff' → logprob: -3.556519031524658
    6. ' !=' → logprob: -3.806519031524658
    7. ' dif' → logprob: -4.056519031524658
    8. ' or' → logprob: -4.431519031524658
    9. '3' → logprob: -4.431519031524658
    10. ' sont' → logprob: -4.556519031524658

Token 327: ' dans' (ID: 2671)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.05118182301521301
    2. 'd' → logprob: -3.9261817932128906
    3. 'ident' → logprob: -4.301181793212891
    4. 'different' → logprob: -5.051181793212891
    5. 'ég' → logprob: -5.801181793212891
    6. 'div' → logprob: -6.176181793212891
    7. 'distinct' → logprob: -7.051181793212891
    8. 'dif' → logprob: -7.301181793212891
    9. '3' → logprob: -7.551181793212891
    10. ' ident' → logprob: -7.676181793212891

Token 328: ' le' (ID: 505)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6952338814735413
    2. 'une' → logprob: -2.0702338218688965
    3. ' la' → logprob: -2.3202338218688965
    4. '3' → logprob: -2.6952338218688965
    5. 'la' → logprob: -3.5702338218688965
    6. ' des' → logprob: -3.6952338218688965
    7. 's' → logprob: -3.9452338218688965
    8. ' ' → logprob: -4.0702338218688965
    9. 'des' → logprob: -4.0702338218688965
    10. ' une' → logprob: -4.1952338218688965

Token 329: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.8374677896499634
    2. 's' → logprob: -1.4624677896499634
    3. 'm' → logprob: -2.837467670440674
    4. '3' → logprob: -3.337467670440674
    5. 'range' → logprob: -3.337467670440674
    6. 'def' → logprob: -3.462467670440674
    7. '[' → logprob: -3.587467670440674
    8. 'base' → logprob: -3.587467670440674
    9. 'same' → logprob: -3.587467670440674
    10. '```' → logprob: -3.962467670440674

Token 330: ' "' (ID: 392)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.5410440564155579
    2. 's' → logprob: -2.541043996810913
    3. 'tr' → logprob: -2.666043996810913
    4. '"' → logprob: -2.791043996810913
    5. 'tro' → logprob: -3.916043996810913
    6. '3' → logprob: -3.916043996810913
    7. 'quot' → logprob: -4.166044235229492
    8. 'bloc' → logprob: -4.291044235229492
    9. 'cube' → logprob: -4.291044235229492
    10. 'trip' → logprob: -4.416044235229492

Token 331: 'bloc' (ID: 168336)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cube' → logprob: -0.9777082800865173
    2. 'c' → logprob: -2.227708339691162
    3. 'bloc' → logprob: -2.477708339691162
    4. 'triangle' → logprob: -2.727708339691162
    5. 's' → logprob: -2.977708339691162
    6. 'tr' → logprob: -3.227708339691162
    7. 'trip' → logprob: -3.227708339691162
    8. '"' → logprob: -3.227708339691162
    9. 'ch' → logprob: -3.477708339691162
    10. 'tro' → logprob: -3.727708339691162

Token 332: '"' (ID: 1)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3497450351715088
    2. ' or' → logprob: -2.474745035171509
    3. ' ou' → logprob: -2.849745035171509
    4. '"' → logprob: -2.974745035171509
    5. ' et' → logprob: -3.224745035171509
    6. ')' → logprob: -4.22474479675293
    7. ' and' → logprob: -4.34974479675293
    8. 'et' → logprob: -5.34974479675293
    9. ',' → logprob: -5.34974479675293
    10. '  ' → logprob: -5.97474479675293

Token 333: ' base' (ID: 3611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09923486411571503
    2. ',' → logprob: -3.4742348194122314
    3. ' for' → logprob: -3.8492348194122314
    4. ' or' → logprob: -4.3492350578308105
    5. ' et' → logprob: -5.3492350578308105
    6. ' ou' → logprob: -5.4742350578308105
    7. '  ' → logprob: -5.5992350578308105
    8. ':' → logprob: -6.0992350578308105
    9. ' (' → logprob: -6.7242350578308105
    10. ' while' → logprob: -6.7242350578308105

Token 334: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4547216594219208
    2. ' ' → logprob: -1.0797216892242432
    3. '   ' → logprob: -4.079721450805664
    4. ' ' → logprob: -5.079721450805664
    5. '    ' → logprob: -7.079721450805664
    6. ',' → logprob: -7.829721450805664
    7. '  ' → logprob: -7.829721450805664
    8. ' tres' → logprob: -9.704721450805664
    9. '```' → logprob: -9.892221450805664
    10. ' =' → logprob: -10.079721450805664

Token 335: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00926663912832737
    2. ' ' → logprob: -4.7592668533325195
    3. '   ' → logprob: -7.5092668533325195
    4. '```' → logprob: -10.75926685333252
    5. ' ' → logprob: -10.88426685333252
    6. '  ' → logprob: -11.00926685333252
    7. '    ' → logprob: -11.38426685333252
    8. ',' → logprob: -12.38426685333252
    9. '
' → logprob: -12.63426685333252
    10. '	' → logprob: -13.00926685333252

Token 336: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12730981409549713
    2. ' for' → logprob: -2.502309799194336
    3. ',' → logprob: -3.877309799194336
    4. 'for' → logprob: -5.002309799194336
    5. 'def' → logprob: -6.377309799194336
    6. ' while' → logprob: -6.502309799194336
    7. '  ' → logprob: -6.752309799194336
    8. ' i' → logprob: -6.752309799194336
    9. ':' → logprob: -7.002309799194336
    10. ' or' → logprob: -7.502309799194336

Token 337: ' niveau' (ID: 21708)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3318655788898468
    2. ' i' → logprob: -2.7068655490875244
    3. 'niveau' → logprob: -2.7068655490875244
    4. ' même' → logprob: -3.4568655490875244
    5. 'm' → logprob: -3.5818655490875244
    6. ' niveau' → logprob: -3.8318655490875244
    7. '   ' → logprob: -4.2068657875061035
    8. 'div' → logprob: -4.8318657875061035
    9. 'moins' → logprob: -4.8318657875061035
    10. ' ' → logprob: -5.4568657875061035

Token 338: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3375129997730255
    2. 'i' → logprob: -1.3375129699707031
    3. '   ' → logprob: -3.962512969970703
    4. ' ' → logprob: -6.712512969970703
    5. '3' → logprob: -7.337512969970703
    6. '    ' → logprob: -7.337512969970703
    7. '  ' → logprob: -7.462512969970703
    8. ' +' → logprob: -7.962512969970703
    9. '+' → logprob: -8.087512969970703
    10. ',' → logprob: -8.462512969970703

Token 339: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025256795808672905
    2. ' for' → logprob: -4.275256633758545
    3. ',' → logprob: -6.150256633758545
    4. 'for' → logprob: -6.150256633758545
    5. ' i' → logprob: -6.650256633758545
    6. ':' → logprob: -6.900256633758545
    7. 'def' → logprob: -7.025256633758545
    8. ' while' → logprob: -7.525256633758545
    9. '    
' → logprob: -7.775256633758545
    10. 'import' → logprob: -8.150257110595703

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026191726326942444
    2. ' for' → logprob: -4.276191711425781
    3. ',' → logprob: -5.776191711425781
    4. ' while' → logprob: -6.276191711425781
    5. ' i' → logprob: -6.526191711425781
    6. ' or' → logprob: -6.651191711425781
    7. ' and' → logprob: -7.026191711425781
    8. 'for' → logprob: -7.151191711425781
    9. '    
' → logprob: -8.026191711425781
    10. 'while' → logprob: -8.276191711425781

Token 341: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09266985207796097
    2. ' for' → logprob: -3.21766996383667
    3. ' and' → logprob: -4.46766996383667
    4. 'for' → logprob: -4.96766996383667
    5. ' i' → logprob: -5.21766996383667
    6. ',' → logprob: -5.34266996383667
    7. 'and' → logprob: -5.46766996383667
    8. ' while' → logprob: -5.59266996383667
    9. 'i' → logprob: -6.21766996383667
    10. 'while' → logprob: -6.21766996383667

Token 342: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04018406942486763
    2. ' while' → logprob: -4.540184020996094
    3. ',' → logprob: -4.915184020996094
    4. ' et' → logprob: -5.790184020996094
    5. ' for' → logprob: -6.165184020996094
    6. '
' → logprob: -6.415184020996094
    7. 'while' → logprob: -6.540184020996094
    8. ' or' → logprob: -6.665184020996094
    9. '  ' → logprob: -6.790184020996094
    10. 'def' → logprob: -6.915184020996094

Token 343: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1771824359893799
    2. 'and' → logprob: -1.5521824359893799
    3. 'while' → logprob: -2.42718243598938
    4. ' and' → logprob: -2.67718243598938
    5. 'et' → logprob: -2.67718243598938
    6. 'for' → logprob: -3.17718243598938
    7. ' et' → logprob: -3.42718243598938
    8. 'if' → logprob: -3.67718243598938
    9. ',' → logprob: -3.80218243598938
    10. 'or' → logprob: -3.92718243598938

Token 344: ' la' (ID: 557)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.827160120010376
    2. ' abs' → logprob: -1.952160120010376
    3. 's' → logprob: -2.077160120010376
    4. ' s' → logprob: -2.577160120010376
    5. ' (' → logprob: -2.952160120010376
    6. '(s' → logprob: -2.952160120010376
    7. '(abs' → logprob: -3.077160120010376
    8. 'b' → logprob: -4.077159881591797
    9. '   ' → logprob: -4.952159881591797
    10. 'a' → logprob: -5.077159881591797

Token 345: ' position' (ID: 4010)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.404773473739624
    2. 'a' → logprob: -1.904773473739624
    3. 'b' → logprob: -2.154773473739624
    4. 's' → logprob: -2.154773473739624
    5. ' abs' → logprob: -2.279773473739624
    6. ' (' → logprob: -2.404773473739624
    7. 'if' → logprob: -3.529773473739624
    8. ' s' → logprob: -3.904773473739624
    9. ' b' → logprob: -3.904773473739624
    10. ' a' → logprob: -4.154773712158203

Token 346: ' mod' (ID: 1812)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4724674224853516
    2. ' s' → logprob: -1.5974674224853516
    3. 's' → logprob: -1.8474674224853516
    4. ' a' → logprob: -2.0974674224853516
    5. ' i' → logprob: -2.4724674224853516
    6. ' ' → logprob: -3.2224674224853516
    7. '   ' → logprob: -3.7224674224853516
    8. 'i' → logprob: -4.097467422485352
    9. '3' → logprob: -4.347467422485352
    10. ' en' → logprob: -4.847467422485352

Token 347: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15308623015880585
    2. '3' → logprob: -2.0280861854553223
    3. 'ulo' → logprob: -5.153086185455322
    4. 'ule' → logprob: -5.903086185455322
    5. 'e' → logprob: -7.278086185455322
    6. 'ulaire' → logprob: -7.403086185455322
    7. '   ' → logprob: -8.90308666229248
    8. 'ula' → logprob: -10.15308666229248
    9. 'ulos' → logprob: -10.27808666229248
    10. 'u' → logprob: -10.71558666229248

Token 348: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2822941243648529
    2. ' ' → logprob: -1.4072941541671753
    3. 'ule' → logprob: -8.157294273376465
    4. '9' → logprob: -8.157294273376465
    5. '   ' → logprob: -8.782294273376465
    6. 'ulo' → logprob: -9.157294273376465
    7. '(' → logprob: -9.657294273376465
    8. 'a' → logprob: -9.657294273376465
    9. 'e' → logprob: -10.282294273376465
    10. 'ulaire' → logprob: -10.657294273376465

Token 349: ' ==' (ID: 951)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9328584671020508
    2. '   ' → logprob: -1.6828584671020508
    3. 'a' → logprob: -2.307858467102051
    4. ' ==' → logprob: -2.682858467102051
    5. ' i' → logprob: -3.432858467102051
    6. ' ' → logprob: -3.432858467102051
    7. 'i' → logprob: -3.682858467102051
    8. '3' → logprob: -3.807858467102051
    9. ' a' → logprob: -3.807858467102051
    10. 'u' → logprob: -4.182858467102051

Token 350: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12587136030197144
    2. '2' → logprob: -2.625871419906616
    3. ' ' → logprob: -3.500871419906616
    4. '0' → logprob: -4.250871181488037
    5. 'i' → logprob: -7.500871181488037
    6. 's' → logprob: -8.250871658325195
    7. 'a' → logprob: -8.625871658325195
    8. '   ' → logprob: -9.563371658325195
    9. ' i' → logprob: -9.750871658325195
    10. '
' → logprob: -10.000871658325195

Token 351: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19633051753044128
    2. '0' → logprob: -2.3213305473327637
    3. '2' → logprob: -2.6963305473327637
    4. ' ' → logprob: -4.946330547332764
    5. 'i' → logprob: -5.946330547332764
    6. 's' → logprob: -6.821330547332764
    7. 'a' → logprob: -7.071330547332764
    8. '
' → logprob: -9.071330070495605
    9. 'm' → logprob: -9.133830070495605
    10. '3' → logprob: -9.258830070495605

Token 352: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05728081986308098
    2. '
' → logprob: -3.3072807788848877
    3. '    
' → logprob: -4.682281017303467
    4. ' for' → logprob: -5.057281017303467
    5. 'i' → logprob: -7.432281017303467
    6. 'for' → logprob: -7.807281017303467
    7. ' i' → logprob: -7.807281017303467
    8. '\n' → logprob: -8.307280540466309
    9. 'def' → logprob: -8.432280540466309
    10. '  
' → logprob: -8.557280540466309

Token 353: 'cela' (ID: 109559)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0921948030591011
    2. ' and' → logprob: -3.4671947956085205
    3. '   ' → logprob: -3.5921947956085205
    4. ')
' → logprob: -4.4671950340271
    5. ' )' → logprob: -4.7171950340271
    6. '):
' → logprob: -6.2171950340271
    7. '):' → logprob: -6.4671950340271
    8. 'and' → logprob: -7.2171950340271
    9. ' or' → logprob: -7.4671950340271
    10. ' ' → logprob: -7.5921950340271

Token 354: ' sélection' (ID: 43472)
  Prédit: ' signifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' signifie' → logprob: -0.46717655658721924
    2. ')' → logprob: -1.7171765565872192
    3. '   ' → logprob: -2.8421764373779297
    4. ' return' → logprob: -3.0921764373779297
    5. ' ==' → logprob: -4.59217643737793
    6. ' n' → logprob: -4.59217643737793
    7. ' veut' → logprob: -4.59217643737793
    8. ' !=' → logprob: -5.09217643737793
    9. '       ' → logprob: -5.09217643737793
    10. ' a' → logprob: -5.34217643737793

Token 355: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.04954349994659424
    2. 'e' → logprob: -3.2995433807373047
    3. 'né' → logprob: -4.924543380737305
    4. '   ' → logprob: -5.924543380737305
    5. '==' → logprob: -8.424543380737305
    6. 'née' → logprob: -8.549543380737305
    7. 'nne' → logprob: -8.799543380737305
    8. ' ==' → logprob: -9.174543380737305
    9. 'n' → logprob: -9.549543380737305
    10. 'é' → logprob: -9.674543380737305

Token 356: ' probablement' (ID: 87740)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.6057710647583008
    2. ')' → logprob: -2.355771064758301
    3. ' ' → logprob: -2.480771064758301
    4. 'i' → logprob: -2.480771064758301
    5. ' le' → logprob: -2.605771064758301
    6. ' i' → logprob: -2.730771064758301
    7. ' la' → logprob: -2.855771064758301
    8. '3' → logprob: -3.105771064758301
    9. 'les' → logprob: -3.105771064758301
    10. ' un' → logprob: -3.230771064758301

Token 357: ' des' (ID: 731)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.3026127815246582
    2. 'le' → logprob: -1.8026127815246582
    3. ' un' → logprob: -1.8026127815246582
    4. 'une' → logprob: -2.177612781524658
    5. ' le' → logprob: -2.427612781524658
    6. ' la' → logprob: -2.552612781524658
    7. 'un' → logprob: -3.677612781524658
    8. ' des' → logprob: -3.927612781524658
    9. 'les' → logprob: -4.052612781524658
    10. 'la' → logprob: -4.802612781524658

Token 358: ' b' (ID: 287)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.8078820109367371
    2. 'positions' → logprob: -1.9328820705413818
    3. ' cases' → logprob: -2.182882070541382
    4. ' positions' → logprob: -2.307882070541382
    5. ' blocs' → logprob: -2.932882070541382
    6. ' chiffres' → logprob: -3.932882070541382
    7. 'points' → logprob: -3.932882070541382
    8. ' points' → logprob: -4.557881832122803
    9. 'digits' → logprob: -4.557881832122803
    10. ' digits' → logprob: -4.557881832122803

Token 359: 'ords' (ID: 9142)
  Prédit: 'loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loc' → logprob: -0.3763015568256378
    2. 'locks' → logprob: -2.3763015270233154
    3. 'lock' → logprob: -2.6263015270233154
    4. 'l' → logprob: -3.5013015270233154
    5. 'i' → logprob: -3.6263015270233154
    6. 'lo' → logprob: -4.1263017654418945
    7. ' loc' → logprob: -4.2513017654418945
    8. ' blocs' → logprob: -4.3763017654418945
    9. ')' → logprob: -4.7513017654418945
    10. 'positions' → logprob: -5.6263017654418945

Token 360: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25637564063072205
    2. '   ' → logprob: -1.6313756704330444
    3. ')
' → logprob: -4.006375789642334
    4. ' )' → logprob: -5.756375789642334
    5. ' or' → logprob: -5.881375789642334
    6. '),' → logprob: -7.006375789642334
    7. ',' → logprob: -7.131375789642334
    8. ' if' → logprob: -7.256375789642334
    9. '")' → logprob: -7.506375789642334
    10. ' et' → logprob: -7.756375789642334

Token 361: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.37698203325271606
    2. 'des' → logprob: -2.8769819736480713
    3. ' pas' → logprob: -3.0019819736480713
    4. ' ' → logprob: -4.25198221206665
    5. ' points' → logprob: -4.50198221206665
    6. 'positions' → logprob: -4.50198221206665
    7. ' zones' → logprob: -4.50198221206665
    8. ' not' → logprob: -4.62698221206665
    9. ' edges' → logprob: -4.62698221206665
    10. ' limites' → logprob: -4.62698221206665

Token 362: ' coins' (ID: 28969)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -1.093777060508728
    2. 'points' → logprob: -1.218777060508728
    3. 'positions' → logprob: -2.5937771797180176
    4. ' points' → logprob: -2.7187771797180176
    5. ' frontières' → logprob: -3.7187771797180176
    6. ' limites' → logprob: -3.8437771797180176
    7. ' cases' → logprob: -3.8437771797180176
    8. ' positions' → logprob: -3.8437771797180176
    9. 'zones' → logprob: -3.9687771797180176
    10. ' zones' → logprob: -3.9687771797180176

Token 363: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22981585562229156
    2. '   ' → logprob: -1.8548158407211304
    3. ')
' → logprob: -3.72981595993042
    4. '):
' → logprob: -4.97981595993042
    5. '):' → logprob: -5.85481595993042
    6. ' and' → logprob: -6.10481595993042
    7. 'def' → logprob: -6.22981595993042
    8. ' or' → logprob: -6.35481595993042
    9. '")' → logprob: -6.35481595993042
    10. ' )' → logprob: -6.72981595993042

Token 364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1555258184671402
    2. ' for' → logprob: -2.5305259227752686
    3. ' i' → logprob: -3.7805259227752686
    4. '\t' → logprob: -4.4055256843566895
    5. 'i' → logprob: -5.2805256843566895
    6. '	for' → logprob: -5.5305256843566895
    7. '    
' → logprob: -5.6555256843566895
    8. '	i' → logprob: -5.6555256843566895
    9. ':' → logprob: -6.1555256843566895
    10. 'for' → logprob: -6.1555256843566895

Token 365: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0574953518807888
    2. ' for' → logprob: -2.932495355606079
    3. 'for' → logprob: -7.1824951171875
    4. ' i' → logprob: -7.5574951171875
    5. '    
' → logprob: -7.8074951171875
    6. '	for' → logprob: -8.1824951171875
    7. '\t' → logprob: -8.3074951171875
    8. 'i' → logprob: -8.8074951171875
    9. '
' → logprob: -9.8074951171875
    10. ' 
' → logprob: -10.5574951171875

Token 366: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5638067722320557
    2. 'i' → logprob: -1.6888067722320557
    3. ' for' → logprob: -1.9388067722320557
    4. ' i' → logprob: -2.3138067722320557
    5. 'for' → logprob: -5.938806533813477
    6. '	i' → logprob: -7.688806533813477
    7. '	for' → logprob: -9.063806533813477
    8. ' ' → logprob: -9.438806533813477
    9. '    
' → logprob: -10.063806533813477
    10. '  ' → logprob: -10.313806533813477

Token 367: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015662193298339844
    2. 'i' → logprob: -4.51566219329834
    3. 'while' → logprob: -5.89066219329834
    4. ' for' → logprob: -6.51566219329834
    5. '   ' → logprob: -8.14066219329834
    6. 'if' → logprob: -10.64066219329834
    7. '
' → logprob: -12.01566219329834
    8. ' while' → logprob: -12.39066219329834
    9. 'res' → logprob: -12.51566219329834
    10. 'e' → logprob: -12.64066219329834

Token 368: ' il' (ID: 1793)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7710503339767456
    2. '(s' → logprob: -1.2710503339767456
    3. ' abs' → logprob: -2.771050453186035
    4. ' s' → logprob: -3.146050453186035
    5. '(abs' → logprob: -3.396050453186035
    6. 's' → logprob: -3.396050453186035
    7. 'abs' → logprob: -3.646050453186035
    8. '((' → logprob: -4.396050453186035
    9. ' not' → logprob: -4.396050453186035
    10. ' ((' → logprob: -4.771050453186035

Token 369: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.25876113772392273
    2. '   ' → logprob: -2.008761167526245
    3. ' s' → logprob: -3.383761167526245
    4. ' n' → logprob: -3.633761167526245
    5. ' faut' → logprob: -4.383760929107666
    6. 's' → logprob: -5.383760929107666
    7. ' ' → logprob: -5.633760929107666
    8. ' return' → logprob: -5.758760929107666
    9. '    ' → logprob: -5.758760929107666
    10. '  ' → logprob: -6.383760929107666

Token 370: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.014230732806026936
    2. 'a' → logprob: -5.889230728149414
    3. 's' → logprob: -6.014230728149414
    4. ' abs' → logprob: -6.264230728149414
    5. ' est' → logprob: -6.514230728149414
    6. ' y' → logprob: -7.014230728149414
    7. '   ' → logprob: -7.389230728149414
    8. ''s' → logprob: -7.514230728149414
    9. 'est' → logprob: -7.514230728149414
    10. ' return' → logprob: -7.764230728149414

Token 371: ' une' (ID: 2463)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25795409083366394
    2. ' a' → logprob: -1.8829541206359863
    3. ' abs' → logprob: -4.382954120635986
    4. ' s' → logprob: -4.757954120635986
    5. '(a' → logprob: -4.757954120635986
    6. '(' → logprob: -4.882954120635986
    7. ' (
' → logprob: -4.882954120635986
    8. ' ((' → logprob: -5.007954120635986
    9. ' une' → logprob: -5.382954120635986
    10. ' ' → logprob: -5.382954120635986

Token 372: ' différence' (ID: 79196)
  Prédit: ' différence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différence' → logprob: -0.19282633066177368
    2. 'diff' → logprob: -2.192826271057129
    3. 'difference' → logprob: -3.317826271057129
    4. ' difference' → logprob: -4.192826271057129
    5. 'd' → logprob: -6.317826271057129
    6. ' diff' → logprob: -6.442826271057129
    7. 'dif' → logprob: -6.442826271057129
    8. ' position' → logprob: -6.692826271057129
    9. 'position' → logprob: -7.317826271057129
    10. 'di' → logprob: -7.442826271057129

Token 373: ' verticale' (ID: 199428)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.5138819217681885
    2. ' ' → logprob: -1.6388819217681885
    3. '   ' → logprob: -1.6388819217681885
    4. ' in' → logprob: -2.3888819217681885
    5. ' entre' → logprob: -2.5138819217681885
    6. ' en' → logprob: -3.5138819217681885
    7. ' =' → logprob: -3.5138819217681885
    8. ' between' → logprob: -4.013881683349609
    9. '    ' → logprob: -4.263881683349609
    10. ' for' → logprob: -4.638881683349609

Token 374: ' signific' (ID: 5404)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19315078854560852
    2. '
' → logprob: -2.318150758743286
    3. ' for' → logprob: -3.818150758743286
    4. ' i' → logprob: -4.193150997161865
    5. 'i' → logprob: -4.568150997161865
    6. '    
' → logprob: -4.943150997161865
    7. '\n' → logprob: -5.193150997161865
    8. '\t' → logprob: -5.818150997161865
    9. 'for' → logprob: -6.318150997161865
    10. '	i' → logprob: -6.818150997161865

Token 375: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.0006151011912152171
    2. 'ante' → logprob: -8.875615119934082
    3. 'atif' → logprob: -9.125615119934082
    4. 'a' → logprob: -9.875615119934082
    5. 'f' → logprob: -10.125615119934082
    6. 'at' → logprob: -10.250615119934082
    7. 'if' → logprob: -10.375615119934082
    8. ' at' → logprob: -10.875615119934082
    9. 'ate' → logprob: -11.000615119934082
    10. 'ive' → logprob: -11.125615119934082

Token 376: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033912964165210724
    2. '
' → logprob: -4.0339131355285645
    3. '    
' → logprob: -5.2839131355285645
    4. 'i' → logprob: -5.9089131355285645
    5. ' for' → logprob: -5.9089131355285645
    6. ' i' → logprob: -6.1589131355285645
    7. '\n' → logprob: -7.2839131355285645
    8. '\t' → logprob: -8.158912658691406
    9. ',' → logprob: -8.658912658691406
    10. 'for' → logprob: -8.783912658691406

Token 377: ' les' (ID: 1341)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8863547444343567
    2. ' b' → logprob: -1.511354684829712
    3. 'b' → logprob: -2.136354684829712
    4. 's' → logprob: -2.511354684829712
    5. 'a' → logprob: -2.761354684829712
    6. ' a' → logprob: -3.136354684829712
    7. ' (' → logprob: -3.261354684829712
    8. '(' → logprob: -5.386354923248291
    9. '(s' → logprob: -5.636354923248291
    10. ' ' → logprob: -5.886354923248291

Token 378: ' cou' (ID: 3840)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05130866914987564
    2. ' b' → logprob: -3.0513086318969727
    3. '0' → logprob: -7.051308631896973
    4. 'd' → logprob: -7.426308631896973
    5. 'a' → logprob: -7.676308631896973
    6. ' ' → logprob: -8.176308631896973
    7. '1' → logprob: -8.926308631896973
    8. ' d' → logprob: -10.051308631896973
    9. 'i' → logprob: -10.051308631896973
    10. '-' → logprob: -10.426308631896973

Token 379: 'pl' (ID: 528)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.24353055655956268
    2. 'd' → logprob: -2.118530511856079
    3. 'n' → logprob: -3.618530511856079
    4. 'p' → logprob: -4.243530750274658
    5. 'nt' → logprob: -4.493530750274658
    6. 'rs' → logprob: -4.868530750274658
    7. 'nts' → logprob: -5.118530750274658
    8. 'm' → logprob: -5.368530750274658
    9. '3' → logprob: -5.368530750274658
    10. 'rd' → logprob: -5.493530750274658

Token 380: 'ages' (ID: 1461)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6649441719055176
    2. 'es' → logprob: -1.2899441719055176
    3. 'ents' → logprob: -2.4149441719055176
    4. 'n' → logprob: -3.0399441719055176
    5. 'en' → logprob: -3.7899441719055176
    6. 'é' → logprob: -4.289944171905518
    7. 'ence' → logprob: -4.789944171905518
    8. 'ent' → logprob: -4.789944171905518
    9. 'ences' → logprob: -5.539944171905518
    10. 'a' → logprob: -5.539944171905518

Token 381: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10842302441596985
    2. '    
' → logprob: -3.4834229946136475
    3. ' 
' → logprob: -3.9834229946136475
    4. ' ' → logprob: -4.483423233032227
    5. '    ' → logprob: -5.233423233032227
    6. ',' → logprob: -5.233423233032227
    7. '<|end|>' → logprob: -5.233423233032227
    8. '\n' → logprob: -5.983423233032227
    9. '  
' → logprob: -5.983423233032227
    10. '\t' → logprob: -6.108423233032227

Token 382: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6720404624938965
    2. ' 
' → logprob: -1.7970404624938965
    3. 'i' → logprob: -2.1720404624938965
    4. ')' → logprob: -2.4220404624938965
    5. 'b' → logprob: -2.5470404624938965
    6. '   ' → logprob: -2.7970404624938965
    7. ' i' → logprob: -3.1720404624938965
    8. ' a' → logprob: -3.4220404624938965
    9. ' (' → logprob: -3.6720404624938965
    10. ' b' → logprob: -3.7970404624938965

Token 383: ',' (ID: 11)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8725218772888184
    2. '   ' → logprob: -1.4975218772888184
    3. '%' → logprob: -1.8725218772888184
    4. ' -' → logprob: -2.9975218772888184
    5. ')' → logprob: -3.3725218772888184
    6. ' ' → logprob: -3.4975218772888184
    7. ' //' → logprob: -3.8725218772888184
    8. '[i' → logprob: -4.122521877288818
    9. ',' → logprob: -4.497521877288818
    10. '-' → logprob: -4.872521877288818

Token 384: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3717000186443329
    2. 'c' → logprob: -1.6217000484466553
    3. 'i' → logprob: -3.2467000484466553
    4. 'a' → logprob: -3.9967000484466553
    5. '0' → logprob: -4.246699810028076
    6. ' d' → logprob: -4.246699810028076
    7. ')' → logprob: -4.746699810028076
    8. ' c' → logprob: -4.996699810028076
    9. '   ' → logprob: -6.371699810028076
    10. ' i' → logprob: -6.621699810028076

Token 385: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.377926766872406
    2. '   ' → logprob: -2.252926826477051
    3. ')
' → logprob: -2.502926826477051
    4. '):
' → logprob: -2.877926826477051
    5. ' +' → logprob: -3.877926826477051
    6. '+' → logprob: -4.002926826477051
    7. '):' → logprob: -4.877926826477051
    8. ',' → logprob: -5.252926826477051
    9. ' )' → logprob: -5.752926826477051
    10. ' ' → logprob: -6.127926826477051

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06180856376886368
    2. ' i' → logprob: -4.3118085861206055
    3. '\t' → logprob: -4.3118085861206055
    4. 'i' → logprob: -4.9368085861206055
    5. ':' → logprob: -5.0618085861206055
    6. '    
' → logprob: -5.4368085861206055
    7. '	i' → logprob: -5.9368085861206055
    8. '\n' → logprob: -6.0618085861206055
    9. '
' → logprob: -6.3118085861206055
    10. ' for' → logprob: -6.3118085861206055

Token 387: ' niveaux' (ID: 88262)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15881481766700745
    2. '
' → logprob: -2.6588149070739746
    3. '    
' → logprob: -3.0338149070739746
    4. '\n' → logprob: -4.783814907073975
    5. ' for' → logprob: -5.283814907073975
    6. 'i' → logprob: -5.658814907073975
    7. '	
' → logprob: -5.908814907073975
    8. '\t' → logprob: -5.908814907073975
    9. ' 
' → logprob: -6.658814907073975
    10. '	for' → logprob: -7.283814907073975

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04004824906587601
    2. '=' → logprob: -3.290048360824585
    3. '   ' → logprob: -6.665048122406006
    4. ':' → logprob: -8.290048599243164
    5. ',' → logprob: -9.415048599243164
    6. '_' → logprob: -9.790048599243164
    7. '_max' → logprob: -10.165048599243164
    8. 'max' → logprob: -10.290048599243164
    9. ' ' → logprob: -10.415048599243164
    10. 'for' → logprob: -10.915048599243164

Token 389: ' [
' (ID: 4240)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.001752257347107
    2. '20' → logprob: -2.1267523765563965
    3. '10' → logprob: -2.3767523765563965
    4. '100' → logprob: -2.6267523765563965
    5. '0' → logprob: -2.8767523765563965
    6. '50' → logprob: -3.2517523765563965
    7. '15' → logprob: -3.3767523765563965
    8. '30' → logprob: -3.3767523765563965
    9. ' ' → logprob: -3.7517523765563965
    10. '12' → logprob: -4.0017523765563965

Token 390: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06406097859144211
    2. ' i' → logprob: -2.939060926437378
    3. '       ' → logprob: -5.314061164855957
    4. '(i' → logprob: -6.564061164855957
    5. '   ' → logprob: -6.939061164855957
    6. ' (' → logprob: -7.064061164855957
    7. '[i' → logprob: -8.439061164855957
    8. '0' → logprob: -8.814061164855957
    9. 's' → logprob: -8.814061164855957
    10. '(' → logprob: -9.064061164855957

Token 391: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.005698396358639002
    2. '(i' → logprob: -5.630698204040527
    3. ' i' → logprob: -7.380698204040527
    4. '0' → logprob: -8.130698204040527
    5. 's' → logprob: -8.380698204040527
    6. '   ' → logprob: -8.505698204040527
    7. '(s' → logprob: -8.880698204040527
    8. '(' → logprob: -9.005698204040527
    9. '[i' → logprob: -9.255698204040527
    10. 'm' → logprob: -10.130698204040527

Token 392: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18027344346046448
    2. 'for' → logprob: -1.805273413658142
    3. '   ' → logprob: -8.055273056030273
    4. ' in' → logprob: -9.930273056030273
    5. '+' → logprob: -10.180273056030273
    6. '    ' → logprob: -10.555273056030273
    7. ' ' → logprob: -10.930273056030273
    8. 'in' → logprob: -10.930273056030273
    9. '	for' → logprob: -11.055273056030273
    10. '       ' → logprob: -11.555273056030273

Token 393: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00671940203756094
    2. ' i' → logprob: -5.006719589233398
    3. 'range' → logprob: -13.631719589233398
    4. '   ' → logprob: -14.006719589233398
    5. ' range' → logprob: -14.506719589233398
    6. ' ' → logprob: -14.506719589233398
    7. '	i' → logprob: -14.756719589233398
    8. '
' → logprob: -15.506719589233398
    9. '  ' → logprob: -15.631719589233398
    10. '0' → logprob: -16.0067195892334

Token 394: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007367274374701083
    2. 'in' → logprob: -7.250736713409424
    3. ',' → logprob: -11.625737190246582
    4. ' ' → logprob: -11.875737190246582
    5. 'range' → logprob: -11.875737190246582
    6. ' range' → logprob: -13.375737190246582
    7. '   ' → logprob: -14.125737190246582
    8. ' dans' → logprob: -15.000737190246582
    9. ')' → logprob: -15.625737190246582
    10. '  ' → logprob: -15.750737190246582

Token 395: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004079470410943031
    2. ' range' → logprob: -5.504079341888428
    3. '	range' → logprob: -15.004079818725586
    4. 're' → logprob: -15.504079818725586
    5. '   ' → logprob: -15.629079818725586
    6. '(range' → logprob: -16.004079818725586
    7. '
' → logprob: -16.254079818725586
    8. ' ' → logprob: -16.629079818725586
    9. '[' → logprob: -16.879079818725586
    10. 'rang' → logprob: -17.129079818725586

Token 396: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7664702534675598
    2. '20' → logprob: -1.891470193862915
    3. '15' → logprob: -2.516470193862915
    4. '10' → logprob: -2.891470193862915
    5. '18' → logprob: -3.516470193862915
    6. '16' → logprob: -3.516470193862915
    7. '7' → logprob: -3.641470193862915
    8. '21' → logprob: -3.766470193862915
    9. '12' → logprob: -4.141470432281494
    10. '9' → logprob: -4.141470432281494

Token 397: '30' (ID: 1130)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -1.2734736204147339
    2. '10' → logprob: -1.5234736204147339
    3. '15' → logprob: -2.1484737396240234
    4. '7' → logprob: -2.8984737396240234
    5. '12' → logprob: -2.8984737396240234
    6. '9' → logprob: -3.0234737396240234
    7. '8' → logprob: -3.2734737396240234
    8. '11' → logprob: -3.3984737396240234
    9. '16' → logprob: -3.3984737396240234
    10. '21' → logprob: -3.8984737396240234

Token 398: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024572500959038734
    2. ')
' → logprob: -3.8995726108551025
    3. '   ' → logprob: -6.024572372436523
    4. ' )' → logprob: -7.024572372436523
    5. ',' → logprob: -8.149572372436523
    6. ' if' → logprob: -8.649572372436523
    7. '0' → logprob: -9.774572372436523
    8. '):
' → logprob: -10.024572372436523
    9. ' )
' → logprob: -10.149572372436523
    10. ' ' → logprob: -10.274572372436523

Token 399: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04316658154129982
    2. 'if' → logprob: -3.2931666374206543
    3. '   ' → logprob: -5.293166637420654
    4. '    ' → logprob: -10.293166160583496
    5. '       ' → logprob: -10.543166160583496
    6. '
' → logprob: -10.918166160583496
    7. '	if' → logprob: -12.293166160583496
    8. ' ' → logprob: -13.293166160583496
    9. '  ' → logprob: -14.668166160583496
    10. '    
' → logprob: -15.168166160583496

Token 400: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16099578142166138
    2. ' if' → logprob: -1.9109957218170166
    3. '   ' → logprob: -7.410995960235596
    4. '       ' → logprob: -8.785995483398438
    5. '
' → logprob: -11.785995483398438
    6. '    ' → logprob: -12.285995483398438
    7. ' ' → logprob: -14.910995483398438
    8. ']' → logprob: -15.285995483398438
    9. '  ' → logprob: -15.410995483398438
    10. '	if' → logprob: -15.535995483398438

Token 401: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3358696401119232
    2. 'a' → logprob: -1.8358696699142456
    3. ' s' → logprob: -2.585869550704956
    4. '(' → logprob: -4.210869789123535
    5. '(s' → logprob: -4.835869789123535
    6. '0' → logprob: -4.960869789123535
    7. '(a' → logprob: -5.085869789123535
    8. ' a' → logprob: -5.335869789123535
    9. ' (' → logprob: -5.335869789123535
    10. ' ' → logprob: -6.460869789123535

Token 402: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.001530812936834991
    2. 'a' → logprob: -7.001530647277832
    3. '(' → logprob: -7.751530647277832
    4. '(t' → logprob: -9.751530647277832
    5. '(abs' → logprob: -9.751530647277832
    6. ' (' → logprob: -10.501530647277832
    7. ' a' → logprob: -11.376530647277832
    8. '((' → logprob: -11.626530647277832
    9. '(
' → logprob: -11.876530647277832
    10. 't' → logprob: -12.626530647277832

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003104511648416519
    2. ',i' → logprob: -5.8781046867370605
    3. ' ,' → logprob: -8.128104209899902
    4. 'i' → logprob: -13.878104209899902
    5. '   ' → logprob: -14.003104209899902
    6. '[i' → logprob: -14.003104209899902
    7. '(i' → logprob: -14.628104209899902
    8. ' ' → logprob: -15.378104209899902
    9. ',
' → logprob: -15.503104209899902
    10. '    ' → logprob: -15.503104209899902

Token 404: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.191489642835222e-05
    2. ' i' → logprob: -10.125041961669922
    3. '   ' → logprob: -14.375041961669922
    4. '2' → logprob: -15.000041961669922
    5. '3' → logprob: -15.750041961669922
    6. '     ' → logprob: -16.000041961669922
    7. ' ' → logprob: -16.000041961669922
    8. ')' → logprob: -16.000041961669922
    9. ')i' → logprob: -16.000041961669922
    10. '	i' → logprob: -16.750041961669922

Token 405: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010736575350165367
    2. ')==' → logprob: -6.876073837280273
    3. ' )' → logprob: -11.001073837280273
    4. ')
' → logprob: -12.126073837280273
    5. ')%' → logprob: -12.251073837280273
    6. '   ' → logprob: -12.251073837280273
    7. '==' → logprob: -13.251073837280273
    8. ' ' → logprob: -13.876073837280273
    9. '    ' → logprob: -14.126073837280273
    10. ')!=' → logprob: -14.251073837280273

Token 406: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.049220237880945206
    2. ' ==' → logprob: -3.049220323562622
    3. ')' → logprob: -8.049220085144043
    4. '==
' → logprob: -8.924220085144043
    5. ')==' → logprob: -9.049220085144043
    6. ' ' → logprob: -11.174220085144043
    7. '!=' → logprob: -11.674220085144043
    8. 'in' → logprob: -11.799220085144043
    9. ']==' → logprob: -12.299220085144043
    10. '=' → logprob: -12.299220085144043

Token 407: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001597460824996233
    2. '2' → logprob: -7.1265974044799805
    3. ' s' → logprob: -7.2515974044799805
    4. '3' → logprob: -10.00159740447998
    5. '   ' → logprob: -10.75159740447998
    6. '0' → logprob: -12.00159740447998
    7. ' ' → logprob: -13.00159740447998
    8. '    ' → logprob: -13.75159740447998
    9. '  ' → logprob: -13.75159740447998
    10. '       ' → logprob: -14.12659740447998

Token 408: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.007697602733969688
    2. 'c' → logprob: -4.882697582244873
    3. '(' → logprob: -9.382698059082031
    4. ' c' → logprob: -12.882698059082031
    5. ' (' → logprob: -13.132698059082031
    6. ')c' → logprob: -13.757698059082031
    7. '(
' → logprob: -13.882698059082031
    8. '	c' → logprob: -15.132698059082031
    9. ')' → logprob: -15.757698059082031
    10. '   ' → logprob: -16.25769805908203

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004441631957888603
    2. ',i' → logprob: -5.504441738128662
    3. ' ,' → logprob: -8.254441261291504
    4. 'i' → logprob: -9.629441261291504
    5. ')' → logprob: -11.129441261291504
    6. '   ' → logprob: -11.379441261291504
    7. ' i' → logprob: -12.254441261291504
    8. ')i' → logprob: -13.379441261291504
    9. '[i' → logprob: -13.629441261291504
    10. ',
' → logprob: -14.004441261291504

Token 410: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004109392408281565
    2. ' i' → logprob: -5.5041093826293945
    3. '	i' → logprob: -11.379109382629395
    4. ' ' → logprob: -11.629109382629395
    5. ')' → logprob: -12.879109382629395
    6. '   ' → logprob: -12.879109382629395
    7. '0' → logprob: -13.254109382629395
    8. ')i' → logprob: -13.754109382629395
    9. '2' → logprob: -14.629109382629395
    10. '  ' → logprob: -15.004109382629395

Token 411: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006172468420118093
    2. ')
' → logprob: -8.375617027282715
    3. ' )' → logprob: -8.625617027282715
    4. 'and' → logprob: -8.875617027282715
    5. ')==' → logprob: -10.375617027282715
    6. ' and' → logprob: -10.750617027282715
    7. '   ' → logprob: -12.625617027282715
    8. '),' → logprob: -13.625617027282715
    9. '       ' → logprob: -13.750617027282715
    10. '=' → logprob: -14.000617027282715

Token 412: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22600921988487244
    2. 'and' → logprob: -1.6010092496871948
    3. '==' → logprob: -8.101009368896484
    4. ' ==' → logprob: -9.601009368896484
    5. '       ' → logprob: -9.726009368896484
    6. ')' → logprob: -10.101009368896484
    7. ' ' → logprob: -10.601009368896484
    8. '        ' → logprob: -10.851009368896484
    9. '   ' → logprob: -11.226009368896484
    10. '           ' → logprob: -11.351009368896484

Token 413: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01629922352731228
    2. '(s' → logprob: -4.516299247741699
    3. ' s' → logprob: -5.391299247741699
    4. '(' → logprob: -8.0162992477417
    5. ' (' → logprob: -8.8912992477417
    6. '   ' → logprob: -9.7662992477417
    7. ' ' → logprob: -10.8912992477417
    8. 'max' → logprob: -10.8912992477417
    9. '2' → logprob: -11.2662992477417
    10. '((' → logprob: -11.3912992477417

Token 414: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.08025668561458588
    2. '(b' → logprob: -2.580256700515747
    3. '(' → logprob: -6.830256462097168
    4. 'a' → logprob: -8.705256462097168
    5. 'b' → logprob: -10.330256462097168
    6. '((' → logprob: -10.955256462097168
    7. '(s' → logprob: -10.955256462097168
    8. ' (' → logprob: -11.080256462097168
    9. '(i' → logprob: -11.330256462097168
    10. '(c' → logprob: -11.830256462097168

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030913693830370903
    2. ',i' → logprob: -3.5309135913848877
    3. '(i' → logprob: -7.405913829803467
    4. ' ,' → logprob: -7.655913829803467
    5. 'i' → logprob: -10.155913352966309
    6. '(' → logprob: -11.780913352966309
    7. ',s' → logprob: -12.405913352966309
    8. 's' → logprob: -12.530913352966309
    9. ' i' → logprob: -12.780913352966309
    10. ' ' → logprob: -12.905913352966309

Token 416: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.170270353322849e-05
    2. ' i' → logprob: -9.875061988830566
    3. '2' → logprob: -11.625061988830566
    4. ')' → logprob: -14.875061988830566
    5. ' ' → logprob: -15.125061988830566
    6. ')i' → logprob: -16.12506103515625
    7. '[i' → logprob: -16.25006103515625
    8. '[' → logprob: -16.37506103515625
    9. '_i' → logprob: -16.50006103515625
    10. '	i' → logprob: -16.62506103515625

Token 417: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011952288914471865
    2. ')==' → logprob: -6.751195430755615
    3. ' )' → logprob: -11.626194953918457
    4. ')
' → logprob: -12.751194953918457
    5. '```' → logprob: -13.376194953918457
    6. '==' → logprob: -13.751194953918457
    7. '``' → logprob: -13.751194953918457
    8. ' ' → logprob: -13.876194953918457
    9. ')!=' → logprob: -13.876194953918457
    10. '')' → logprob: -14.126194953918457

Token 418: ' %' (ID: 1851)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.44414424896240234
    2. ' ==' → logprob: -1.0691442489624023
    3. ')' → logprob: -4.694144248962402
    4. ' ' → logprob: -6.569144248962402
    5. 's' → logprob: -6.944144248962402
    6. ')==' → logprob: -6.944144248962402
    7. '()==' → logprob: -7.569144248962402
    8. '=' → logprob: -7.694144248962402
    9. '()' → logprob: -7.819144248962402
    10. ']==' → logprob: -8.569144248962402

Token 419: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0017080175457522273
    2. ' ' → logprob: -6.376708030700684
    3. '4' → logprob: -12.376708030700684
    4. '```' → logprob: -14.626708030700684
    5. '   ' → logprob: -15.126708030700684
    6. '10' → logprob: -15.376708030700684
    7. '  ' → logprob: -15.501708030700684
    8. '1' → logprob: -16.751707077026367
    9. '    ' → logprob: -16.876707077026367
    10. '5' → logprob: -16.876707077026367

Token 420: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003123439964838326
    2. ' ' → logprob: -8.125312805175781
    3. '4' → logprob: -11.375312805175781
    4. '10' → logprob: -13.125312805175781
    5. '5' → logprob: -14.562812805175781
    6. '2' → logprob: -14.750312805175781
    7. '```' → logprob: -14.812812805175781
    8. '6' → logprob: -15.125312805175781
    9. '   ' → logprob: -15.625312805175781
    10. '1' → logprob: -15.812812805175781

Token 421: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02733585610985756
    2. ' ==' → logprob: -3.6523358821868896
    3. '==
' → logprob: -7.0273356437683105
    4. '=' → logprob: -9.402336120605469
    5. '2' → logprob: -10.527336120605469
    6. '!=' → logprob: -10.902336120605469
    7. ' ' → logprob: -12.152336120605469
    8. ')==' → logprob: -12.152336120605469
    9. ')' → logprob: -12.902336120605469
    10. ' ==
' → logprob: -13.902336120605469

Token 422: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031784253660589457
    2. ' ' → logprob: -5.753178596496582
    3. '
' → logprob: -15.253178596496582
    4. '   ' → logprob: -16.378177642822266
    5. '```' → logprob: -16.690677642822266
    6. '1' → logprob: -16.815677642822266
    7. '0' → logprob: -16.815677642822266
    8. '  ' → logprob: -17.065677642822266
    9. '۲' → logprob: -17.190677642822266
    10. '3' → logprob: -17.378177642822266

Token 423: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.624555291840807e-05
    2. ' ' → logprob: -9.500076293945312
    3. '0' → logprob: -15.312576293945312
    4. '1' → logprob: -15.625076293945312
    5. '22' → logprob: -15.750076293945312
    6. '
' → logprob: -16.312576293945312
    7. '۲' → logprob: -16.312576293945312
    8. '```' → logprob: -16.625076293945312
    9. '٢' → logprob: -16.875076293945312
    10. '222' → logprob: -16.937576293945312

Token 424: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06198718398809433
    2. 'and' → logprob: -2.8119871616363525
    3. ' ' → logprob: -12.436986923217773
    4. '    ' → logprob: -12.561986923217773
    5. '       ' → logprob: -12.686986923217773
    6. '   ' → logprob: -12.936986923217773
    7. '      ' → logprob: -13.061986923217773
    8. '        ' → logprob: -13.436986923217773
    9. ')' → logprob: -14.061986923217773
    10. '          ' → logprob: -14.561986923217773

Token 425: ' ' (ID: 220)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.8099452257156372
    2. 'abs' → logprob: -1.4349452257156372
    3. '(abs' → logprob: -1.8099452257156372
    4. 's' → logprob: -3.4349451065063477
    5. '((' → logprob: -3.4349451065063477
    6. '(max' → logprob: -4.059945106506348
    7. 'max' → logprob: -4.184945106506348
    8. '(b' → logprob: -4.184945106506348
    9. ' abs' → logprob: -4.559945106506348
    10. ' (' → logprob: -5.184945106506348

Token 426: '1' (ID: 16)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9770278930664062
    2. '(s' → logprob: -1.3520278930664062
    3. '(abs' → logprob: -1.6020278930664062
    4. '((' → logprob: -2.8520278930664062
    5. '(b' → logprob: -3.1020278930664062
    6. 's' → logprob: -3.7270278930664062
    7. '(max' → logprob: -4.852027893066406
    8. 'max' → logprob: -4.852027893066406
    9. 'b' → logprob: -5.102027893066406
    10. '(' → logprob: -6.352027893066406

Token 427: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.22367407381534576
    2. ' <=' → logprob: -1.8486740589141846
    3. '==' → logprob: -3.4736740589141846
    4. ' ==' → logprob: -5.473674297332764
    5. '<' → logprob: -5.723674297332764
    6. '<<' → logprob: -6.223674297332764
    7. '>=' → logprob: -7.598674297332764
    8. '+' → logprob: -7.848674297332764
    9. ' <' → logprob: -8.098673820495605
    10. '*' → logprob: -8.598673820495605

Token 428: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.18067362904548645
    2. ' abs' → logprob: -1.930673599243164
    3. '(abs' → logprob: -4.930673599243164
    4. 'max' → logprob: -5.430673599243164
    5. 'b' → logprob: -6.305673599243164
    6. ' max' → logprob: -6.555673599243164
    7. '=' → logprob: -6.680673599243164
    8. '((' → logprob: -7.180673599243164
    9. ' (' → logprob: -7.305673599243164
    10. '(' → logprob: -7.430673599243164

Token 429: '(s' (ID: 1858)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0018727132119238377
    2. '(s' → logprob: -6.626872539520264
    3. '((' → logprob: -7.876872539520264
    4. '(' → logprob: -9.251873016357422
    5. 'b' → logprob: -10.001873016357422
    6. '(m' → logprob: -11.626873016357422
    7. '(d' → logprob: -12.251873016357422
    8. '(
' → logprob: -12.626873016357422
    9. ' (' → logprob: -12.751873016357422
    10. '(c' → logprob: -13.251873016357422

Token 430: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00011343709047650918
    2. 'b' → logprob: -9.250113487243652
    3. '(' → logprob: -11.250113487243652
    4. ' (' → logprob: -13.750113487243652
    5. '(d' → logprob: -14.375113487243652
    6. '((' → logprob: -14.375113487243652
    7. '(
' → logprob: -14.625113487243652
    8. ' b' → logprob: -15.000113487243652
    9. '(s' → logprob: -15.000113487243652
    10. '(a' → logprob: -15.750113487243652

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004201986361294985
    2. ',i' → logprob: -5.754201889038086
    3. ' ,' → logprob: -7.004201889038086
    4. '(i' → logprob: -10.504201889038086
    5. 'i' → logprob: -10.629201889038086
    6. ',c' → logprob: -11.004201889038086
    7. ' ' → logprob: -11.129201889038086
    8. ',b' → logprob: -11.754201889038086
    9. '(' → logprob: -12.129201889038086
    10. ',d' → logprob: -12.754201889038086

Token 432: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031804447062313557
    2. ' i' → logprob: -5.753180503845215
    3. ' ' → logprob: -13.253180503845215
    4. ',i' → logprob: -15.878180503845215
    5. ',' → logprob: -16.0031795501709
    6. '(i' → logprob: -16.1281795501709
    7. ')' → logprob: -16.2531795501709
    8. '[i' → logprob: -16.2531795501709
    9. '   ' → logprob: -16.5031795501709
    10. ')i' → logprob: -17.0031795501709

Token 433: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47981318831443787
    2. ',' → logprob: -0.9798132181167603
    3. '),' → logprob: -5.604813098907471
    4. 'b' → logprob: -6.479813098907471
    5. ')-' → logprob: -8.229813575744629
    6. ' ,' → logprob: -9.729813575744629
    7. 'd' → logprob: -10.229813575744629
    8. '   ' → logprob: -10.604813575744629
    9. ' ' → logprob: -11.479813575744629
    10. 'i' → logprob: -11.479813575744629

Token 434: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2757880985736847
    2. ' -' → logprob: -1.5257880687713623
    3. '()' → logprob: -4.775788307189941
    4. ',' → logprob: -5.150788307189941
    5. ')' → logprob: -5.275788307189941
    6. '(' → logprob: -6.275788307189941
    7. '()-' → logprob: -6.775788307189941
    8. ' ' → logprob: -7.775788307189941
    9. '(c' → logprob: -8.900788307189941
    10. '(b' → logprob: -8.900788307189941

Token 435: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006777303759008646
    2. ' s' → logprob: -5.006777286529541
    3. '(s' → logprob: -10.3817777633667
    4. '   ' → logprob: -11.3817777633667
    5. ' ' → logprob: -11.7567777633667
    6. '  ' → logprob: -12.6317777633667
    7. '	s' → logprob: -13.6317777633667
    8. '2' → logprob: -13.8817777633667
    9. ')' → logprob: -14.0067777633667
    10. '    ' → logprob: -14.0067777633667

Token 436: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.3485938310623169
    2. 'd' → logprob: -1.223593831062317
    3. ' d' → logprob: -10.473593711853027
    4. '(' → logprob: -10.598593711853027
    5. '(c' → logprob: -11.098593711853027
    6. '[d' → logprob: -11.098593711853027
    7. ',d' → logprob: -11.223593711853027
    8. ')d' → logprob: -11.223593711853027
    9. '(b' → logprob: -11.598593711853027
    10. ')' → logprob: -11.973593711853027

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015775939682498574
    2. ',b' → logprob: -6.876577377319336
    3. '(b' → logprob: -8.126577377319336
    4. 'b' → logprob: -8.501577377319336
    5. ')' → logprob: -11.001577377319336
    6. ' ,' → logprob: -11.251577377319336
    7. '(' → logprob: -13.001577377319336
    8. '<|end|>' → logprob: -13.126577377319336
    9. '```' → logprob: -13.126577377319336
    10. 's' → logprob: -13.626577377319336

Token 438: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00016063073417171836
    2. ' i' → logprob: -8.750160217285156
    3. ' ' → logprob: -14.125160217285156
    4. ')' → logprob: -14.500160217285156
    5. '   ' → logprob: -15.000160217285156
    6. ')i' → logprob: -16.125160217285156
    7. '0' → logprob: -16.375160217285156
    8. '```' → logprob: -16.500160217285156
    9. '  ' → logprob: -16.625160217285156
    10. '[i' → logprob: -17.000160217285156

Token 439: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1445320099592209
    2. ')' → logprob: -2.0195319652557373
    3. '())' → logprob: -7.894532203674316
    4. '()))' → logprob: -7.894532203674316
    5. ' ))' → logprob: -8.644532203674316
    6. '0' → logprob: -8.769532203674316
    7. '))
' → logprob: -9.019532203674316
    8. ')))' → logprob: -9.769532203674316
    9. '   ' → logprob: -9.769532203674316
    10. ' )' → logprob: -9.894532203674316

Token 440: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024066973477602005
    2. ' ]' → logprob: -4.524066925048828
    3. '   ' → logprob: -5.024066925048828
    4. ']
' → logprob: -6.024066925048828
    5. '       ' → logprob: -6.149066925048828
    6. ' and' → logprob: -7.149066925048828
    7. ')' → logprob: -8.274066925048828
    8. ' ]
' → logprob: -8.524066925048828
    9. '}' → logprob: -8.774066925048828
    10. ' for' → logprob: -9.024066925048828

Token 441: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006745212245732546
    2. '   ' → logprob: -5.381745338439941
    3. ' ]' → logprob: -6.256745338439941
    4. ']
' (adapté à ' ]
') → logprob: -9.381745338439941
    5. '       ' → logprob: -9.381745338439941
    6. ']

' → logprob: -11.256745338439941
    7. '}' → logprob: -11.881745338439941
    8. '    ' → logprob: -12.381745338439941
    9. ' and' → logprob: -12.506745338439941
    10. ')' → logprob: -13.756745338439941

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6695149540901184
    2. '[' → logprob: -1.2945148944854736
    3. '[-' → logprob: -2.6695148944854736
    4. '+' → logprob: -3.0445148944854736
    5. ' if' → logprob: -3.7945148944854736
    6. ' +' → logprob: -4.294515132904053
    7. ':' → logprob: -4.419515132904053
    8. ')' → logprob: -5.169515132904053
    9. '<|end|>' → logprob: -5.294515132904053
    10. '0' → logprob: -5.544515132904053

Token 443: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6490117311477661
    2. ' if' → logprob: -1.3990117311477661
    3. 'if' → logprob: -1.6490117311477661
    4. 'return' → logprob: -3.3990116119384766
    5. ' return' → logprob: -6.524011611938477
    6. '[' → logprob: -6.649011611938477
    7. '<|end|>' → logprob: -7.024011611938477
    8. '
' → logprob: -8.024011611938477
    9. '    
' → logprob: -8.399011611938477
    10. ')' → logprob: -9.524011611938477

Token 444: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7374725937843323
    2. 'if' → logprob: -1.2374725341796875
    3. ' if' → logprob: -2.2374725341796875
    4. ' return' → logprob: -2.3624725341796875
    5. '   ' → logprob: -3.4874725341796875
    6. 'for' → logprob: -10.737472534179688
    7. '```' → logprob: -10.862472534179688
    8. 'try' → logprob: -11.987472534179688
    9. '    
' → logprob: -12.987472534179688
    10. 'ret' → logprob: -12.987472534179688

Token 445: ' aucun' (ID: 41678)
  Prédit: ' niveaux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' niveaux' → logprob: -0.05950363725423813
    2. 'n' → logprob: -3.9345035552978516
    3. ' len' → logprob: -4.309503555297852
    4. 'len' → logprob: -4.434503555297852
    5. ' not' → logprob: -4.934503555297852
    6. 'not' → logprob: -5.184503555297852
    7. 'levels' → logprob: -10.309503555297852
    8. 'niveau' → logprob: -10.434503555297852
    9. 'niv' → logprob: -10.809503555297852
    10. ' n' → logprob: -11.184503555297852

Token 446: ' niveau' (ID: 21708)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.025234242901206017
    2. ' niveaux' → logprob: -4.525234222412109
    3. 'not' → logprob: -5.025234222412109
    4. ' n' → logprob: -5.775234222412109
    5. ' not' → logprob: -5.900234222412109
    6. 'niveau' → logprob: -6.650234222412109
    7. 'len' → logprob: -9.02523422241211
    8. 'if' → logprob: -9.52523422241211
    9. 'niv' → logprob: -10.27523422241211
    10. ' nive' → logprob: -10.52523422241211

Token 447: ' n' (ID: 297)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7132264375686646
    2. ' ==' → logprob: -1.5882264375686646
    3. '   ' → logprob: -1.7132264375686646
    4. 'n' → logprob: -2.338226318359375
    5. ' n' → logprob: -4.588226318359375
    6. 'not' → logprob: -5.463226318359375
    7. ' not' → logprob: -6.338226318359375
    8. ':' → logprob: -6.463226318359375
    9. 'return' → logprob: -6.588226318359375
    10. '=' → logprob: -7.088226318359375

Token 448: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.6805971264839172
    2. 'levels' → logprob: -1.8055970668792725
    3. 'n' → logprob: -1.9305970668792725
    4. ''a' → logprob: -3.1805970668792725
    5. 'a' → logprob: -3.1805970668792725
    6. 'iveau' → logprob: -3.4305970668792725
    7. ' niveaux' → logprob: -4.430597305297852
    8. 'ot' → logprob: -4.555597305297852
    9. ''' → logprob: -4.930597305297852
    10. ''ont' → logprob: -5.055597305297852

Token 449: ' trouvé' (ID: 60081)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11998068541288376
    2. ' niveaux' → logprob: -2.244980573654175
    3. 'niveau' → logprob: -5.869980812072754
    4. ' trouv' → logprob: -6.494980812072754
    5. ' trouvé' → logprob: -7.119980812072754
    6. ' n' → logprob: -7.744980812072754
    7. 'not' → logprob: -7.869980812072754
    8. '[]' → logprob: -8.369980812072754
    9. '0' → logprob: -8.494980812072754
    10. 'levels' → logprob: -9.119980812072754

Token 450: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25275251269340515
    2. ':
' → logprob: -1.7527525424957275
    3. '   ' → logprob: -3.1277525424957275
    4. ':return' → logprob: -5.502752304077148
    5. ',' → logprob: -6.877752304077148
    6. 'return' → logprob: -7.127752304077148
    7. ' return' → logprob: -9.502752304077148
    8. '       ' → logprob: -9.752752304077148
    9. ' :' → logprob: -10.002752304077148
    10. ' else' → logprob: -10.502752304077148

Token 451: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9605188965797424
    2. 'return' → logprob: -0.9605188965797424
    3. '   ' → logprob: -1.4605188369750977
    4. '       ' → logprob: -6.085518836975098
    5. '	return' → logprob: -9.585518836975098
    6. '    ' → logprob: -9.710518836975098
    7. ':return' → logprob: -10.460518836975098
    8. ' if' → logprob: -10.710518836975098
    9. '0' → logprob: -12.085518836975098
    10. 'if' → logprob: -12.460518836975098

Token 452: ' retourne' (ID: 178818)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.732237696647644
    2. 'return' → logprob: -0.732237696647644
    3. '   ' → logprob: -3.4822378158569336
    4. ' retourne' → logprob: -5.232237815856934
    5. '{return' → logprob: -7.232237815856934
    6. '       ' → logprob: -7.732237815856934
    7. 'ret' → logprob: -8.232237815856934
    8. ':return' → logprob: -8.357237815856934
    9. '_return' → logprob: -8.482237815856934
    10. '    ' → logprob: -9.482237815856934

Token 453: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859725013375282
    2. ' ' → logprob: -3.0485973358154297
    3. '   ' → logprob: -11.54859733581543
    4. '  ' → logprob: -16.54859733581543
    5. '```' → logprob: -16.67359733581543
    6. '    ' → logprob: -16.92359733581543
    7. ' ' → logprob: -17.04859733581543
    8. '`' → logprob: -17.42359733581543
    9. '    
' → logprob: -18.54859733581543
    10. '
' → logprob: -18.92359733581543

Token 454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013365513877943158
    2. ' ' → logprob: -6.626336574554443
    3. '   ' → logprob: -11.501336097717285
    4. '```' → logprob: -15.501336097717285
    5. 'return' → logprob: -15.751336097717285
    6. '  ' → logprob: -16.5013370513916
    7. '    ' → logprob: -17.1888370513916
    8. '`' → logprob: -17.6888370513916
    9. '1' → logprob: -18.0013370513916
    10. '000' → logprob: -18.3138370513916

Token 455: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008293514139950275
    2. '
' → logprob: -5.883293628692627
    3. ' if' → logprob: -6.008293628692627
    4. 'if' → logprob: -6.758293628692627
    5. 'return' → logprob: -7.008293628692627
    6. '    
' → logprob: -7.883293628692627
    7. '<|end|>' → logprob: -8.383293151855469
    8. '[' → logprob: -9.883293151855469
    9. ' return' → logprob: -10.383293151855469
    10. ':' → logprob: -10.508293151855469

Token 456: 'avec' (ID: 64065)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10287431627511978
    2. 'return' → logprob: -2.602874279022217
    3. ' return' → logprob: -4.852874279022217
    4. ')' → logprob: -4.852874279022217
    5. '   ' → logprob: -4.977874279022217
    6. ' ' → logprob: -7.477874279022217
    7. ')
' → logprob: -7.727874279022217
    8. ')return' → logprob: -9.102874755859375
    9. '    ' → logprob: -10.977874755859375
    10. ').' → logprob: -11.477874755859375

Token 457: ' le' (ID: 505)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24858975410461426
    2. '0' → logprob: -1.7485897541046143
    3. ' return' → logprob: -3.6235897541046143
    4. 'len' → logprob: -5.248589515686035
    5. ')' → logprob: -5.623589515686035
    6. '```' → logprob: -5.748589515686035
    7. '
' → logprob: -6.248589515686035
    8. '   ' → logprob: -6.623589515686035
    9. ')
' → logprob: -6.873589515686035
    10. 'niveau' → logprob: -7.623589515686035

Token 458: ' +' (ID: 659)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09956437349319458
    2. ' return' → logprob: -3.47456431388855
    3. 'len' → logprob: -4.724564552307129
    4. '0' → logprob: -4.724564552307129
    5. 'continue' → logprob: -5.099564552307129
    6. ')' → logprob: -5.224564552307129
    7. '```' → logprob: -5.474564552307129
    8. 'max' → logprob: -5.474564552307129
    9. '
' → logprob: -5.974564552307129
    10. 'def' → logprob: -6.099564552307129

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001983590889722109
    2. ' ' → logprob: -6.626983642578125
    3. '0' → logprob: -8.001983642578125
    4. '   ' → logprob: -8.751983642578125
    5. 'i' → logprob: -9.751983642578125
    6. 'len' → logprob: -10.376983642578125
    7. '+' → logprob: -10.626983642578125
    8. ' i' → logprob: -11.126983642578125
    9. 'n' → logprob: -12.001983642578125
    10. '2' → logprob: -12.626983642578125

Token 460: ' en' (ID: 469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4832497239112854
    2. ' if' → logprob: -1.7332496643066406
    3. ')' → logprob: -1.8582496643066406
    4. 'return' → logprob: -3.3582496643066406
    5. ')
' → logprob: -4.983249664306641
    6. '
' → logprob: -6.233249664306641
    7. ' return' → logprob: -6.358249664306641
    8. ')return' → logprob: -6.608249664306641
    9. 'for' → logprob: -7.108249664306641
    10. '   ' → logprob: -7.108249664306641

Token 461: ' sortie' (ID: 52761)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47443869709968567
    2. 'fin' → logprob: -2.0994386672973633
    3. 'n' → logprob: -3.2244386672973633
    4. ' i' → logprob: -3.3494386672973633
    5. ')' → logprob: -3.3494386672973633
    6. '1' → logprob: -3.9744386672973633
    7. '```' → logprob: -3.9744386672973633
    8. '0' → logprob: -4.099438667297363
    9. 'part' → logprob: -4.474438667297363
    10. 'front' → logprob: -4.724438667297363

Token 462: ' car' (ID: 1669)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0885822772979736
    2. 'return' → logprob: -1.5885822772979736
    3. '   ' → logprob: -1.9635822772979736
    4. ')' → logprob: -1.9635822772979736
    5. 'if' → logprob: -2.7135822772979736
    6. '
' → logprob: -2.8385822772979736
    7. ' return' → logprob: -4.0885820388793945
    8. ')
' → logprob: -4.0885820388793945
    9. ')return' → logprob: -4.8385820388793945
    10. 'def' → logprob: -5.3385820388793945

Token 463: ' on' (ID: 402)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9528006315231323
    2. 'n' → logprob: -1.0778006315231323
    3. 'i' → logprob: -3.327800750732422
    4. ' n' → logprob: -3.452800750732422
    5. ' les' → logprob: -3.452800750732422
    6. ' niveaux' → logprob: -3.452800750732422
    7. 'indices' → logprob: -3.827800750732422
    8. ' i' → logprob: -3.827800750732422
    9. ' len' → logprob: -4.202800750732422
    10. ' indices' → logprob: -4.452800750732422

Token 464: ' stock' (ID: 6546)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1694775819778442
    2. ' return' → logprob: -1.4194775819778442
    3. 'n' → logprob: -1.6694775819778442
    4. ' n' → logprob: -1.7944775819778442
    5. ' retourne' → logprob: -4.044477462768555
    6. ')' → logprob: -4.169477462768555
    7. 'range' → logprob: -4.294477462768555
    8. 'len' → logprob: -4.669477462768555
    9. ' in' → logprob: -5.544477462768555
    10. 'continue' → logprob: -5.794477462768555

Token 465: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9193630218505859
    2. '   ' → logprob: -1.794363021850586
    3. '0' → logprob: -2.544363021850586
    4. ')' → logprob: -2.544363021850586
    5. ' =' → logprob: -3.044363021850586
    6. ']' → logprob: -3.044363021850586
    7. 'i' → logprob: -3.419363021850586
    8. '=[]' → logprob: -3.419363021850586
    9. 'e' → logprob: -3.919363021850586
    10. 'r' → logprob: -4.044363021850586

Token 466: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.167811632156372
    2. 'n' → logprob: -1.792811632156372
    3. '[]' → logprob: -2.167811632156372
    4. 'i' → logprob: -2.417811632156372
    5. '[i' → logprob: -2.542811632156372
    6. 'len' → logprob: -3.292811632156372
    7. '[' → logprob: -3.417811632156372
    8. ')' → logprob: -3.417811632156372
    9. '[n' → logprob: -3.667811632156372
    10. '+' → logprob: -3.917811632156372

Token 467: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.2574633359909058
    2. '0' → logprob: -1.5074633359909058
    3. 'i' → logprob: -2.1324634552001953
    4. '[' → logprob: -2.3824634552001953
    5. '1' → logprob: -3.0074634552001953
    6. 'n' → logprob: -3.1324634552001953
    7. '[]' → logprob: -3.2574634552001953
    8. ' i' → logprob: -4.007463455200195
    9. '   ' → logprob: -4.007463455200195
    10. ')' → logprob: -4.132463455200195

Token 468: ' dans' (ID: 2671)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7634481191635132
    2. ')' → logprob: -1.1384481191635132
    3. ' +' → logprob: -2.2634482383728027
    4. '+' → logprob: -2.8884482383728027
    5. 'if' → logprob: -4.138448238372803
    6. '   ' → logprob: -4.763448238372803
    7. ' for' → logprob: -5.263448238372803
    8. ' in' → logprob: -5.763448238372803
    9. ' else' → logprob: -5.763448238372803
    10. ',' → logprob: -6.263448238372803

Token 469: ' la' (ID: 557)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5184540748596191
    2. 'n' → logprob: -1.1434540748596191
    3. '[-' → logprob: -3.018454074859619
    4. '-n' → logprob: -4.893454074859619
    5. '[n' → logprob: -5.018454074859619
    6. '(-' → logprob: -5.268454074859619
    7. ' niveaux' → logprob: -5.393454074859619
    8. ' -' → logprob: -6.143454074859619
    9. '[]' → logprob: -6.268454074859619
    10. 'max' → logprob: -6.268454074859619

Token 470: ' liste' (ID: 31719)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25875118374824524
    2. '[-' → logprob: -2.508751153945923
    3. 'return' → logprob: -3.133751153945923
    4. '-' → logprob: -3.883751153945923
    5. '[]' → logprob: -4.383751392364502
    6. 'max' → logprob: -4.508751392364502
    7. '(
' → logprob: -4.633751392364502
    8. 'niveau' → logprob: -5.008751392364502
    9. ' niveaux' → logprob: -5.383751392364502
    10. '[n' → logprob: -5.508751392364502

Token 471: ' par' (ID: 686)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.143442988395691
    2. '+' → logprob: -1.518442988395691
    3. ' +' → logprob: -1.893442988395691
    4. ')' → logprob: -2.3934431076049805
    5. '   ' → logprob: -2.6434431076049805
    6. ' if' → logprob: -3.0184431076049805
    7. 'if' → logprob: -3.7684431076049805
    8. ' or' → logprob: -3.7684431076049805
    9. '[' → logprob: -4.3934431076049805
    10. ']+' → logprob: -4.8934431076049805

Token 472: ' défaut' (ID: 79375)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5772162675857544
    2. '-' → logprob: -2.202216148376465
    3. '[]' → logprob: -2.202216148376465
    4. 'default' → logprob: -2.577216148376465
    5. 'len' → logprob: -3.577216148376465
    6. ' défaut' → logprob: -3.827216148376465
    7. '1' → logprob: -3.952216148376465
    8. '[' → logprob: -4.452216148376465
    9. 'def' → logprob: -4.577216148376465
    10. ')' → logprob: -4.702216148376465

Token 473: ')
' (ID: 446)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7817602157592773
    2. ' or' → logprob: -1.4067602157592773
    3. ')' → logprob: -1.6567602157592773
    4. 'if' → logprob: -3.0317602157592773
    5. '   ' → logprob: -4.031760215759277
    6. ' +' → logprob: -4.406760215759277
    7. ']' → logprob: -4.781760215759277
    8. '+' → logprob: -5.156760215759277
    9. ' else' → logprob: -5.281760215759277
    10. 'else' → logprob: -6.156760215759277

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004536457825452089
    2. 'if' → logprob: -6.1295366287231445
    3. 'return' → logprob: -6.2545366287231445
    4. ' if' → logprob: -8.129536628723145
    5. '
' → logprob: -9.754536628723145
    6. ' return' → logprob: -10.379536628723145
    7. '    
' → logprob: -11.129536628723145
    8. '```' → logprob: -11.879536628723145
    9. '	return' → logprob: -12.254536628723145
    10. '	if' → logprob: -12.879536628723145

Token 475: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29153764247894287
    2. 'return' (adapté à ' return') → logprob: -1.4165376424789429
    3. ' return' → logprob: -4.791537761688232
    4. 'if' → logprob: -6.791537761688232
    5. ' if' → logprob: -7.291537761688232
    6. '    
' → logprob: -9.791537284851074
    7. '
' → logprob: -9.916537284851074
    8. '```' → logprob: -10.541537284851074
    9. '{return' → logprob: -10.916537284851074
    10. ':return' → logprob: -10.916537284851074

Token 476: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3010943830013275
    2. 'max' → logprob: -2.5510942935943604
    3. ' niveaux' → logprob: -2.8010942935943604
    4. '0' → logprob: -3.4260942935943604
    5. '(max' → logprob: -3.8010942935943604
    6. ' ' → logprob: -3.9260942935943604
    7. ' (' → logprob: -3.9260942935943604
    8. ' n' → logprob: -4.1760945320129395
    9. 'n' → logprob: -5.5510945320129395
    10. '(n' → logprob: -5.6760945320129395

Token 477: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.031234025955200195
    2. '(' → logprob: -4.281233787536621
    3. '([' → logprob: -4.406233787536621
    4. '([-' → logprob: -5.656233787536621
    5. '(-' → logprob: -6.781233787536621
    6. 'n' → logprob: -9.656233787536621
    7. '(
' → logprob: -12.281233787536621
    8. '([]' → logprob: -12.406233787536621
    9. '(level' → logprob: -12.406233787536621
    10. '((' → logprob: -12.531233787536621

Token 478: 'ive' (ID: 585)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11615882813930511
    2. '([-' → logprob: -2.3661587238311768
    3. 'n' → logprob: -4.741158962249756
    4. '([' → logprob: -5.491158962249756
    5. '(-' → logprob: -6.241158962249756
    6. '[-' → logprob: -7.741158962249756
    7. '(' → logprob: -8.616158485412598
    8. 'niveau' → logprob: -8.991158485412598
    9. '[n' → logprob: -9.491158485412598
    10. 'niv' → logprob: -10.116158485412598

Token 479: 'aux' (ID: 5454)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.6843726634979248
    2. '([-' → logprob: -1.4343726634979248
    3. 'n' → logprob: -2.684372663497925
    4. 'aux' → logprob: -3.309372663497925
    5. '(n' → logprob: -3.559372663497925
    6. '(-' → logprob: -3.559372663497925
    7. 'els' → logprob: -4.059372901916504
    8. '(' → logprob: -4.059372901916504
    9. 'v' → logprob: -4.434372901916504
    10. 'ls' → logprob: -4.809372901916504

Token 480: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17853955924510956
    2. '+[' → logprob: -2.428539514541626
    3. ' +' → logprob: -2.803539514541626
    4. ' or' → logprob: -4.428539752960205
    5. '+' → logprob: -6.428539752960205
    6. ')' → logprob: -7.428539752960205
    7. ' ,' → logprob: -8.053539276123047
    8. 'default' → logprob: -9.178539276123047
    9. ')+' → logprob: -9.928539276123047
    10. ',[' → logprob: -10.053539276123047

Token 481: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.2521984279155731
    2. '[' → logprob: -1.5021984577178955
    3. ' [-' → logprob: -8.752198219299316
    4. ' [' → logprob: -9.127198219299316
    5. ' ' → logprob: -13.627198219299316
    6. '[
' → logprob: -14.002198219299316
    7. '([-' → logprob: -16.002199172973633
    8. '   ' → logprob: -16.252199172973633
    9. ' ' → logprob: -16.377199172973633
    10. '0' → logprob: -17.002199172973633

Token 482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.5
    3. ' ' → logprob: -16.125
    4. '   ' → logprob: -18.125
    5. '0' → logprob: -19.5
    6. '
' → logprob: -19.75
    7. '１' → logprob: -19.875
    8. '۱' → logprob: -20.125
    9. '999' → logprob: -20.25
    10. '  ' → logprob: -20.5

Token 483: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00017433916218578815
    2. ']' → logprob: -9.000174522399902
    3. '])+' → logprob: -10.000174522399902
    4. ')' → logprob: -12.625174522399902
    5. ' ])' → logprob: -13.625174522399902
    6. '],' → logprob: -14.500174522399902
    7. ']+' → logprob: -15.625174522399902
    8. ']
' → logprob: -16.125173568725586
    9. ' ' → logprob: -16.750173568725586
    10. '])
' → logprob: -17.000173568725586

Token 484: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38716521859169006
    2. '+' → logprob: -1.1371651887893677
    3. ']+' → logprob: -9.137165069580078
    4. ')+' → logprob: -9.512165069580078
    5. ')' → logprob: -9.887165069580078
    6. ']' → logprob: -10.637165069580078
    7. '<|end|>' → logprob: -11.137165069580078
    8. ' +
' → logprob: -12.012165069580078
    9. '+
' → logprob: -12.387165069580078
    10. '
' → logprob: -13.012165069580078

Token 485: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -18.25
    4. '   ' → logprob: -18.75
    5. '`' → logprob: -21.75
    6. '2' → logprob: -22.0
    7. '0' → logprob: -22.625
    8. '``' → logprob: -22.75
    9. '
' → logprob: -23.25
    10. '  ' → logprob: -23.5

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '```' → logprob: -19.625
    4. '2' → logprob: -21.75
    5. '`' → logprob: -22.125
    6. '0' → logprob: -22.125
    7. '   ' → logprob: -22.375
    8. '۱' → logprob: -24.0
    9. '``' → logprob: -24.25
    10. '
' → logprob: -24.625

Token 487: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.766866147518158
    2. '<|end|>' → logprob: -0.891866147518158
    3. ' ' → logprob: -3.2668662071228027
    4. '(' → logprob: -3.2668662071228027
    5. '#' → logprob: -4.766866207122803
    6. '[' → logprob: -5.141866207122803
    7. '
' → logprob: -5.391866207122803
    8. 'def' → logprob: -5.516866207122803
    9. ',' → logprob: -5.641866207122803
    10. 'a' → logprob: -5.641866207122803

Token 489: ' main' (ID: 2758)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9871913194656372
    2. ' p' → logprob: -1.8621913194656372
    3. ' f' → logprob: -2.7371912002563477
    4. ' g' → logprob: -2.9871912002563477
    5. 's' → logprob: -3.1121912002563477
    6. 'p' → logprob: -3.6121912002563477
    7. ' d' → logprob: -3.7371912002563477
    8. ' n' → logprob: -3.8621912002563477
    9. ' r' → logprob: -3.8621912002563477
    10. ' m' → logprob: -4.112191200256348

Token 490: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00415651872754097
    2. ' ():' → logprob: -5.754156589508057
    3. '(' → logprob: -7.504156589508057
    4. '():
' → logprob: -7.879156589508057
    5. '()' → logprob: -11.004156112670898
    6. ' (' → logprob: -11.379156112670898
    7. '()>' → logprob: -12.379156112670898
    8. '()(' → logprob: -12.629156112670898
    9. ' ()' → logprob: -12.629156112670898
    10. '():
' → logprob: -13.129156112670898

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06845538318157196
    2. ':' → logprob: -3.943455457687378
    3. '<|end|>' → logprob: -4.193455219268799
    4. '():' → logprob: -4.318455219268799
    5. '()' → logprob: -5.693455219268799
    6. '(' → logprob: -5.818455219268799
    7. 'def' → logprob: -5.943455219268799
    8. '#' → logprob: -6.693455219268799
    9. '    ' → logprob: -6.818455219268799
    10. ' :' → logprob: -6.943455219268799

Token 492: ' """
' (ID: 7037)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3895680904388428
    2. '   ' → logprob: -1.6395680904388428
    3. ' n' → logprob: -2.1395680904388428
    4. 'n' → logprob: -2.2645680904388428
    5. ' a' → logprob: -2.2645680904388428
    6. ' for' → logprob: -2.5145680904388428
    7. 'x' → logprob: -2.6395680904388428
    8. ' x' → logprob: -3.1395680904388428
    9. 'for' → logprob: -4.764568328857422
    10. ' pass' → logprob: -5.264568328857422

Token 493: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014584053307771683
    2. '    ' → logprob: -4.889584064483643
    3. ' n' → logprob: -6.139584064483643
    4. ' ' → logprob: -7.264584064483643
    5. 'n' → logprob: -7.389584064483643
    6. ' a' → logprob: -7.639584064483643
    7. 'a' → logprob: -8.139583587646484
    8. '  ' → logprob: -8.514583587646484
    9. '       ' → logprob: -8.514583587646484
    10. ' #' → logprob: -8.889583587646484

Token 494: ' Effect' (ID: 22448)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13958746194839478
    2. 'def' → logprob: -3.13958740234375
    3. ' def' → logprob: -3.63958740234375
    4. '    ' → logprob: -4.38958740234375
    5. ' code' → logprob: -5.01458740234375
    6. '#' → logprob: -5.13958740234375
    7. '()' → logprob: -5.51458740234375
    8. ' pass' → logprob: -5.51458740234375
    9. ' test' → logprob: -5.76458740234375
    10. ' return' → logprob: -6.13958740234375

Token 495: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.004215281922370195
    2. 'u' → logprob: -6.129215240478516
    3. 'uer' → logprob: -6.379215240478516
    4. '   ' → logprob: -8.504215240478516
    5. 'ué' → logprob: -9.754215240478516
    6. 'uez' → logprob: -10.629215240478516
    7. 'uate' → logprob: -11.254215240478516
    8. 'uée' → logprob: -11.504215240478516
    9. 'if' → logprob: -12.629215240478516
    10. '#' → logprob: -13.004215240478516

Token 496: ' les' (ID: 1341)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4275871813297272
    2. ' ' → logprob: -2.5525872707366943
    3. ' la' → logprob: -2.6775872707366943
    4. ' le' → logprob: -2.9275872707366943
    5. '   ' → logprob: -3.1775872707366943
    6. '<|end|>' → logprob: -3.6775872707366943
    7. ' l' → logprob: -4.052587032318115
    8. ' les' → logprob: -4.552587032318115
    9. ' des' → logprob: -4.677587032318115
    10. '  ' → logprob: -4.927587032318115

Token 497: ' opérations' (ID: 102793)
  Prédit: 'tests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tests' → logprob: -0.5578091144561768
    2. ' tests' → logprob: -1.4328091144561768
    3. 'calcul' → logprob: -2.0578091144561768
    4. 'print' → logprob: -4.182808876037598
    5. 'import' → logprob: -4.307808876037598
    6. 'test' → logprob: -4.807808876037598
    7. ' test' → logprob: -5.557808876037598
    8. '#' → logprob: -5.682808876037598
    9. 'assert' → logprob: -5.807808876037598
    10. '...' → logprob: -5.932808876037598

Token 498: ' principales' (ID: 37058)
  Prédit: ' suivantes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivantes' → logprob: -0.9045385122299194
    2. ' de' → logprob: -1.4045385122299194
    3. ' nécessaires' → logprob: -2.029538631439209
    4. '   ' → logprob: -2.654538631439209
    5. ' principales' → logprob: -3.154538631439209
    6. ' demand' → logprob: -3.279538631439209
    7. ' sur' → logprob: -4.029538631439209
    8. 'de' → logprob: -4.654538631439209
    9. ' ' → logprob: -5.779538631439209
    10. 'def' → logprob: -5.904538631439209

Token 499: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9398667216300964
    2. '():' → logprob: -0.9398667216300964
    3. ':' → logprob: -2.314866781234741
    4. '():
' → logprob: -3.814866781234741
    5. 'def' → logprob: -3.814866781234741
    6. '<|end|>' → logprob: -3.814866781234741
    7. ' :' → logprob: -4.064866542816162
    8. '()' → logprob: -4.689866542816162
    9. ',' → logprob: -4.689866542816162
    10. ' ' → logprob: -5.939866542816162

Token 500: ' chaque' (ID: 21194)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lire' → logprob: -1.9701571464538574
    2. ' l' → logprob: -2.2201571464538574
    3. ' la' → logprob: -2.2201571464538574
    4. ' ' → logprob: -2.5951571464538574
    5. ' analyser' → logprob: -2.8451571464538574
    6. ' le' → logprob: -2.9701571464538574
    7. ' calcul' → logprob: -3.2201571464538574
    8. ' résoudre' → logprob: -3.2201571464538574
    9. 'l' → logprob: -3.4701571464538574
    10. ' déterminer' → logprob: -3.5951571464538574

Token 501: ' cas' (ID: 2108)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6609675884246826
    2. ' n' → logprob: -2.1609675884246826
    3. ' x' → logprob: -2.6609675884246826
    4. 'i' → logprob: -2.6609675884246826
    5. ' ligne' → logprob: -3.2859675884246826
    6. 'n' → logprob: -3.4109675884246826
    7. 'x' → logprob: -3.5359675884246826
    8. ' point' → logprob: -3.7859675884246826
    9. ' line' → logprob: -4.285967826843262
    10. ' test' → logprob: -4.535967826843262

Token 502: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7193381786346436
    2. '   ' → logprob: -0.9693381786346436
    3. ' de' → logprob: -3.0943381786346436
    4. ' :' → logprob: -3.0943381786346436
    5. ':
' → logprob: -4.719338417053223
    6. '.' → logprob: -4.969338417053223
    7. ',' → logprob: -4.969338417053223
    8. 'de' → logprob: -5.344338417053223
    9. '    ' → logprob: -5.844338417053223
    10. ' d' → logprob: -5.969338417053223

Token 503: ' test' (ID: 1746)
  Prédit: ' test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.02648978866636753
    2. 'test' → logprob: -3.651489734649658
    3. 't' → logprob: -9.776490211486816
    4. ' t' → logprob: -10.651490211486816
    5. '_test' → logprob: -11.151490211486816
    6. ' teste' → logprob: -11.276490211486816
    7. 'import' → logprob: -11.276490211486816
    8. ' input' → logprob: -11.401490211486816
    9. ' tests' → logprob: -11.651490211486816
    10. 'entrée' → logprob: -11.901490211486816

Token 504: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5142567157745361
    2. '   ' → logprob: -1.0142567157745361
    3. ' :' → logprob: -4.139256477355957
    4. ':
' → logprob: -4.389256477355957
    5. ',' → logprob: -5.639256477355957
    6. '
' → logprob: -6.139256477355957
    7. '.' → logprob: -6.639256477355957
    8. ' :
' → logprob: -6.639256477355957
    9. '<|end|>' → logprob: -6.889256477355957
    10. '():' → logprob: -7.514256477355957

Token 505: ' lit' (ID: 11980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36501115560531616
    2. ' en' → logprob: -2.240011215209961
    3. ' reads' → logprob: -2.740011215209961
    4. ' reading' → logprob: -4.365011215209961
    5. ' iter' → logprob: -4.615011215209961
    6. ' lire' → logprob: -4.740011215209961
    7. '```' → logprob: -4.990011215209961
    8. 'reads' → logprob: -5.240011215209961
    9. ' readline' → logprob: -5.365011215209961
    10. '<|end|>' → logprob: -5.365011215209961

Token 506: ' ' (ID: 220)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.868144154548645
    2. '   ' → logprob: -0.993144154548645
    3. ' l' → logprob: -2.7431440353393555
    4. ' input' → logprob: -3.1181440353393555
    5. ' la' → logprob: -3.8681440353393555
    6. '()' → logprob: -3.8681440353393555
    7. ' et' → logprob: -4.2431440353393555
    8. 'input' → logprob: -4.8681440353393555
    9. ',' → logprob: -5.3681440353393555
    10. ' le' → logprob: -5.3681440353393555

Token 507: '4' (ID: 19)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7976106405258179
    2. 'import' → logprob: -1.9226106405258179
    3. 'input' → logprob: -2.2976107597351074
    4. ' les' → logprob: -2.4226107597351074
    5. ' input' → logprob: -2.6726107597351074
    6. 'l' → logprob: -3.1726107597351074
    7. 'les' → logprob: -3.4226107597351074
    8. ' l' → logprob: -3.9226107597351074
    9. ' la' → logprob: -4.172610759735107
    10. '```' → logprob: -4.547610759735107

Token 508: ' ent' (ID: 1121)
  Prédit: ' coordonnées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordonnées' → logprob: -0.4637746214866638
    2. ' integers' → logprob: -2.3387746810913086
    3. ' coords' → logprob: -3.4637746810913086
    4. ' coord' → logprob: -3.5887746810913086
    5. ' coordinates' → logprob: -3.7137746810913086
    6. 'coords' → logprob: -3.8387746810913086
    7. ' lignes' → logprob: -3.9637746810913086
    8. ',' → logprob: -3.9637746810913086
    9. ' ' → logprob: -4.088774681091309
    10. ' ent' → logprob: -4.338774681091309

Token 509: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.024366825819015503
    2. 'ier' → logprob: -4.024366855621338
    3. 'ières' → logprob: -5.649366855621338
    4. 'r' → logprob: -6.774366855621338
    5. 'rée' → logprob: -7.649366855621338
    6. 't' → logprob: -8.39936637878418
    7. 'ités' → logprob: -8.39936637878418
    8. 'rees' → logprob: -9.02436637878418
    9. 'er' → logprob: -9.52436637878418
    10. 'i' → logprob: -9.77436637878418

Token 510: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14369694888591766
    2. '   ' → logprob: -3.2686970233917236
    3. '()' → logprob: -3.5186970233917236
    4. ' ,' → logprob: -4.0186967849731445
    5. '<|end|>' → logprob: -4.7686967849731445
    6. '(),' → logprob: -5.0186967849731445
    7. ' ' → logprob: -5.2686967849731445
    8. 's' → logprob: -5.5186967849731445
    9. 'from' → logprob: -5.7686967849731445
    10. ' input' → logprob: -6.1436967849731445

Token 511: ' chaque' (ID: 21194)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1743379831314087
    2. ' chaque' → logprob: -1.2993379831314087
    3. ' partir' → logprob: -1.5493379831314087
    4. 'input' → logprob: -2.799337863922119
    5. 'part' → logprob: -2.924337863922119
    6. ' input' → logprob: -3.049337863922119
    7. ' l' → logprob: -4.799337863922119
    8. '()' → logprob: -5.174337863922119
    9. 'entrée' → logprob: -5.424337863922119
    10. 'la' → logprob: -5.924337863922119

Token 512: ' entrée' (ID: 95590)
  Prédit: ' tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tour' → logprob: -0.9664730429649353
    2. ' it' → logprob: -1.71647310256958
    3. ' fois' → logprob: -2.34147310256958
    4. ' iteration' → logprob: -2.46647310256958
    5. ' ligne' → logprob: -2.84147310256958
    6. 'tour' → logprob: -2.96647310256958
    7. 'ligne' → logprob: -3.09147310256958
    8. 'fois' → logprob: -4.59147310256958
    9. 'iteration' → logprob: -4.59147310256958
    10. 'it' → logprob: -4.71647310256958

Token 513: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14713992178440094
    2. '   ' → logprob: -2.0221400260925293
    3. ' ,' → logprob: -5.897140026092529
    4. ',
' → logprob: -7.272140026092529
    5. ':' → logprob: -7.647140026092529
    6. ' et' → logprob: -9.022139549255371
    7. '.' → logprob: -9.272139549255371
    8. ')' → logprob: -9.397139549255371
    9. '):' → logprob: -10.397139549255371
    10. '    
' → logprob: -10.772139549255371

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09298383444547653
    2. ' puis' → logprob: -2.9679837226867676
    3. ' les' → logprob: -3.8429837226867676
    4. ' et' → logprob: -4.842983722686768
    5. 'et' → logprob: -6.342983722686768
    6. ',' → logprob: -6.467983722686768
    7. ' traite' → logprob: -6.842983722686768
    8. '    ' → logprob: -7.092983722686768
    9. '```' → logprob: -8.217984199523926
    10. '#' → logprob: -8.217984199523926

Token 515: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0639890730381012
    2. ' les' → logprob: -3.4389891624450684
    3. ' et' → logprob: -4.813989162445068
    4. ' puis' → logprob: -5.063989162445068
    5. '#' → logprob: -5.688989162445068
    6. 'et' → logprob: -6.688989162445068
    7. '    ' → logprob: -6.688989162445068
    8. '    
' → logprob: -6.938989162445068
    9. '```' → logprob: -6.938989162445068
    10. ',' → logprob: -7.063989162445068

Token 516: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.012867823243141174
    2. 'ul' → logprob: -4.5128679275512695
    3. '   ' → logprob: -7.7628679275512695
    4. 'ult' → logprob: -8.51286792755127
    5. 'u' → logprob: -8.51286792755127
    6. 'ulte' → logprob: -8.76286792755127
    7. 'ulé' → logprob: -9.01286792755127
    8. '#' → logprob: -9.38786792755127
    9. 'cule' → logprob: -9.51286792755127
    10. 'ère' → logprob: -9.51286792755127

Token 517: ' la' (ID: 557)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.632575511932373
    2. ' le' → logprob: -2.007575511932373
    3. ' la' → logprob: -2.007575511932373
    4. ' l' → logprob: -2.257575511932373
    5. '<|end|>' → logprob: -3.757575511932373
    6. ' m' → logprob: -4.257575511932373
    7. 'et' → logprob: -4.507575511932373
    8. 'm' → logprob: -4.632575511932373
    9. ' and' → logprob: -4.757575511932373
    10. '   ' → logprob: -5.257575511932373

Token 518: ' valeur' (ID: 41664)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -1.7051153182983398
    2. ' valeur' → logprob: -2.20511531829834
    3. ' différence' → logprob: -2.20511531829834
    4. 'result' → logprob: -2.58011531829834
    5. 'distance' → logprob: -2.70511531829834
    6. 'rés' → logprob: -2.83011531829834
    7. ' result' → logprob: -2.95511531829834
    8. 'm' → logprob: -2.95511531829834
    9. 'diff' → logprob: -3.08011531829834
    10. 'niveau' → logprob: -3.33011531829834

Token 519: ' de' (ID: 334)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3130311667919159
    2. '   ' → logprob: -1.8130311965942383
    3. 'm' → logprob: -2.8130311965942383
    4. ' de' → logprob: -3.8130311965942383
    5. ' s' → logprob: -4.688031196594238
    6. ' ' → logprob: -6.063031196594238
    7. 's' → logprob: -6.438031196594238
    8. ' du' → logprob: -6.688031196594238
    9. ' suivante' → logprob: -6.688031196594238
    10. ' à' → logprob: -7.063031196594238

Token 520: ' transformation' (ID: 26242)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.18144768476486206
    2. ' m' → logprob: -1.8064477443695068
    3. ' la' → logprob: -6.806447505950928
    4. 'l' → logprob: -8.056447982788086
    5. 'la' → logprob: -9.181447982788086
    6. ' l' → logprob: -9.681447982788086
    7. 'max' → logprob: -10.681447982788086
    8. ' ' → logprob: -10.681447982788086
    9. '`' → logprob: -11.931447982788086
    10. 'i' → logprob: -12.056447982788086

Token 521: ' selon' (ID: 27571)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6432375907897949
    2. '   ' → logprob: -1.518237590789795
    3. '(' → logprob: -2.768237590789795
    4. 'm' → logprob: -3.018237590789795
    5. ' (' → logprob: -3.268237590789795
    6. ' m' → logprob: -3.393237590789795
    7. ' ,' → logprob: -4.393237590789795
    8. ' entre' → logprob: -4.393237590789795
    9. ' de' → logprob: -5.018237590789795
    10. 's' → logprob: -5.018237590789795

Token 522: ' une' (ID: 2463)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.45861759781837463
    2. 'm' → logprob: -1.4586175680160522
    3. ' la' → logprob: -2.083617687225342
    4. 'la' → logprob: -4.958617687225342
    5. '   ' → logprob: -6.458617687225342
    6. ' les' → logprob: -7.458617687225342
    7. 'l' → logprob: -7.583617687225342
    8. ' le' → logprob: -7.833617687225342
    9. ' l' → logprob: -8.333617210388184
    10. ' ' → logprob: -9.208617210388184

Token 523: ' fract' (ID: 37163)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'form' → logprob: -1.437535285949707
    2. 'certain' → logprob: -1.562535285949707
    3. ' logique' → logprob: -2.187535285949707
    4. 'log' → logprob: -2.562535285949707
    5. ' règle' → logprob: -2.937535285949707
    6. 'r' → logprob: -2.937535285949707
    7. 'fonction' → logprob: -3.187535285949707
    8. 'distance' → logprob: -3.562535285949707
    9. ' formule' → logprob: -3.687535285949707
    10. ' certaine' → logprob: -4.187535285949707

Token 524: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.012602890841662884
    2. 'al' → logprob: -4.387602806091309
    3. '
' → logprob: -11.012602806091309
    4. '   ' → logprob: -11.012602806091309
    5. 'alité' → logprob: -11.012602806091309
    6. 'a' → logprob: -11.637602806091309
    7. 'alc' → logprob: -12.137602806091309
    8. 'aline' → logprob: -12.512602806091309
    9. 'ales' → logprob: -12.887602806091309
    10. 'alte' → logprob: -13.137602806091309

Token 525: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1644771546125412
    2. ',' → logprob: -2.0394771099090576
    3. ' et' → logprob: -5.164477348327637
    4. 'def' → logprob: -5.414477348327637
    5. '(' → logprob: -6.539477348327637
    6. '
' → logprob: -7.039477348327637
    7. ' and' → logprob: -7.164477348327637
    8. ' des' → logprob: -7.164477348327637
    9. '```' → logprob: -7.164477348327637
    10. 'et' → logprob: -7.289477348327637

Token 526: 'ou' (ID: 283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.761448860168457
    2. '   ' → logprob: -1.011448860168457
    3. '),' → logprob: -3.261448860168457
    4. ' la' → logprob: -3.386448860168457
    5. 'def' → logprob: -3.511448860168457
    6. '<|end|>' → logprob: -4.511448860168457
    7. '...' → logprob: -4.761448860168457
    8. ' s' → logprob: -5.261448860168457
    9. ' le' → logprob: -5.261448860168457
    10. ',' → logprob: -5.511448860168457

Token 527: ' grille' (ID: 99153)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.0617318153381348
    2. ' une' → logprob: -1.8117318153381348
    3. 'un' → logprob: -2.1867318153381348
    4. 'une' → logprob: -2.8117318153381348
    5. ' autre' → logprob: -2.9367318153381348
    6. 'l' → logprob: -3.1867318153381348
    7. ' la' → logprob: -3.3117318153381348
    8. ' l' → logprob: -4.061731815338135
    9. 'le' → logprob: -4.186731815338135
    10. '#' → logprob: -4.436731815338135

Token 528: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31352677941322327
    2. '),' → logprob: -1.6885267496109009
    3. ' de' → logprob: -3.0635268688201904
    4. ',' → logprob: -4.313526630401611
    5. '   ' → logprob: -5.563526630401611
    6. 'de' → logprob: -5.563526630401611
    7. '3' → logprob: -5.813526630401611
    8. '```' → logprob: -6.438526630401611
    9. ' des' → logprob: -6.813526630401611
    10. ' en' → logprob: -7.063526630401611

Token 529: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34981366991996765
    2. ' et' → logprob: -1.97481369972229
    3. ' puis' → logprob: -2.22481369972229
    4. 'et' → logprob: -3.09981369972229
    5. 'p' → logprob: -6.974813461303711
    6. ',' → logprob: -7.474813461303711
    7. ' and' → logprob: -7.974813461303711
    8. '#' → logprob: -8.474813461303711
    9. 'and' → logprob: -8.599813461303711
    10. '    ' → logprob: -8.599813461303711

Token 530: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3294829726219177
    2. 'print' → logprob: -2.2044830322265625
    3. '   ' → logprob: -2.4544830322265625
    4. ' imprime' → logprob: -3.0794830322265625
    5. ' affiche' → logprob: -3.9544830322265625
    6. ' return' → logprob: -5.2044830322265625
    7. ' ' → logprob: -6.7044830322265625
    8. '
' → logprob: -6.8294830322265625
    9. ' retourne' → logprob: -6.9544830322265625
    10. '    
' → logprob: -7.0794830322265625

Token 531: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4542272984981537
    2. '()' → logprob: -1.829227328300476
    3. ' la' → logprob: -2.7042272090911865
    4. '("")' → logprob: -3.4542272090911865
    5. '("' → logprob: -3.9542272090911865
    6. '(
' → logprob: -4.204227447509766
    7. ' le' → logprob: -4.329227447509766
    8. ' les' → logprob: -4.704227447509766
    9. '('' → logprob: -5.079227447509766
    10. '   ' → logprob: -5.329227447509766

Token 532: ' distance' (ID: 9324)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.22370055317878723
    2. 'result' → logprob: -2.348700523376465
    3. ' result' → logprob: -3.348700523376465
    4. ' résultat' → logprob: -3.598700523376465
    5. ' valeur' → logprob: -4.598700523376465
    6. ' res' → logprob: -4.973700523376465
    7. ' resultat' → logprob: -5.348700523376465
    8. 'val' → logprob: -5.848700523376465
    9. ' rés' → logprob: -6.098700523376465
    10. 'res' → logprob: -6.098700523376465

Token 533: ' minimale' (ID: 143217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05110559239983559
    2. '(' → logprob: -4.301105499267578
    3. 'def' → logprob: -4.426105499267578
    4. '.' → logprob: -5.426105499267578
    5. '(
' → logprob: -5.551105499267578
    6. ',' → logprob: -6.051105499267578
    7. ':' → logprob: -6.176105499267578
    8. '(a' → logprob: -6.426105499267578
    9. '       ' → logprob: -6.676105499267578
    10. '_' → logprob: -7.301105499267578

Token 534: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07220477610826492
    2. ' entre' → logprob: -3.822204828262329
    3. 'def' → logprob: -4.44720458984375
    4. '.' → logprob: -4.94720458984375
    5. ' between' → logprob: -4.94720458984375
    6. 'entre' → logprob: -5.69720458984375
    7. ',' → logprob: -5.82220458984375
    8. '```' → logprob: -6.32220458984375
    9. '
' → logprob: -6.44720458984375
    10. '(' → logprob: -6.57220458984375

Token 535: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004063797648996115
    2. '
' → logprob: -6.754063606262207
    3. 'def' → logprob: -6.754063606262207
    4. '    
' → logprob: -7.254063606262207
    5. '<|end|>' → logprob: -8.004063606262207
    6. ')' → logprob: -8.504063606262207
    7. '```' → logprob: -9.129063606262207
    8. ',' → logprob: -9.629063606262207
    9. '  
' → logprob: -9.754063606262207
    10. '):
' → logprob: -9.879063606262207

Token 536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015498562715947628
    2. '    
' → logprob: -7.37654972076416
    3. '
' → logprob: -8.00154972076416
    4. '```' → logprob: -8.37654972076416
    5. 'def' → logprob: -8.62654972076416
    6. '       ' → logprob: -9.50154972076416
    7. ')' → logprob: -10.25154972076416
    8. 'import' → logprob: -11.12654972076416
    9. '  
' → logprob: -11.87654972076416
    10. '    ' → logprob: -12.00154972076416

Token 537: ' Mét' (ID: 79120)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47984516620635986
    2. 'import' → logprob: -1.3548451662063599
    3. ' import' → logprob: -3.3548450469970703
    4. 'for' → logprob: -3.7298450469970703
    5. 'n' → logprob: -3.8548450469970703
    6. ' for' → logprob: -4.10484504699707
    7. ' n' → logprob: -4.60484504699707
    8. 'while' → logprob: -4.72984504699707
    9. ' while' → logprob: -5.10484504699707
    10. '
' → logprob: -8.35484504699707

Token 538: 'ap' (ID: 403)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.10776039958000183
    2. 'ro' → logprob: -2.982760429382324
    3. 'rique' → logprob: -4.232760429382324
    4. 'oc' → logprob: -4.857760429382324
    5. 'a' → logprob: -5.107760429382324
    6. 'ad' → logprob: -5.607760429382324
    7. 'ant' → logprob: -6.482760429382324
    8. '```' → logprob: -6.482760429382324
    9. 'odo' → logprob: -6.857760429382324
    10. 'h' → logprob: -6.857760429382324

Token 539: 'hores' (ID: 31637)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5051507949829102
    2. 'hrase' → logprob: -1.2551507949829102
    3. 'r' → logprob: -3.75515079498291
    4. '   ' → logprob: -4.38015079498291
    5. 'hore' → logprob: -4.75515079498291
    6. '```' → logprob: -5.25515079498291
    7. '
' → logprob: -5.38015079498291
    8. 'ode' → logprob: -5.50515079498291
    9. 'hile' → logprob: -5.88015079498291
    10. ''''
' → logprob: -5.88015079498291

Token 540: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5104734301567078
    2. ' :' → logprob: -2.0104734897613525
    3. ' =' → logprob: -2.0104734897613525
    4. ':' → logprob: -2.6354734897613525
    5. ',' → logprob: -4.135473251342773
    6. '```' → logprob: -4.635473251342773
    7. '...' → logprob: -5.010473251342773
    8. '<|end|>' → logprob: -5.260473251342773
    9. '=' → logprob: -5.385473251342773
    10. 'def' → logprob: -5.635473251342773

Token 541: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03856683522462845
    2. '    ' → logprob: -3.663566827774048
    3. ' ' → logprob: -5.288567066192627
    4. ''' → logprob: -6.538567066192627
    5. ')' → logprob: -6.663567066192627
    6. '       ' → logprob: -7.163567066192627
    7. '  ' → logprob: -7.288567066192627
    8. 'def' → logprob: -7.663567066192627
    9. '```' → logprob: -7.913567066192627
    10. '<|end|>' → logprob: -7.913567066192627

Token 542: ' Cette' (ID: 27383)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22578564286231995
    2. ' for' → logprob: -2.850785732269287
    3. '#' → logprob: -4.100785732269287
    4. ' while' → logprob: -4.100785732269287
    5. 'for' → logprob: -4.100785732269287
    6. 'a' → logprob: -4.475785732269287
    7. ' pass' → logprob: -4.600785732269287
    8. ' #' → logprob: -5.350785732269287
    9. ' a' → logprob: -5.475785732269287
    10. ' L' → logprob: -5.475785732269287

Token 543: ' structure' (ID: 8866)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1753196716308594
    2. ' def' → logprob: -1.6753196716308594
    3. ' code' → logprob: -2.4253196716308594
    4. '   ' → logprob: -2.5503196716308594
    5. ')' → logprob: -2.6753196716308594
    6. ' )' → logprob: -3.8003196716308594
    7. 'n' → logprob: -3.9253196716308594
    8. ' n' → logprob: -3.9253196716308594
    9. ' =' → logprob: -4.050319671630859
    10. ' distance' → logprob: -4.050319671630859

Token 544: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2987184226512909
    2. 'def' → logprob: -2.7987184524536133
    3. ' est' → logprob: -3.1737184524536133
    4. ' de' → logprob: -3.9237184524536133
    5. ' n' → logprob: -4.298718452453613
    6. '```' → logprob: -4.298718452453613
    7. ' semble' → logprob: -4.298718452453613
    8. '...' → logprob: -4.423718452453613
    9. ' continue' → logprob: -4.548718452453613
    10. ' def' → logprob: -4.673718452453613

Token 545: ''in' (ID: 17942)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -1.706628441810608
    2. 'e' → logprob: -1.831628441810608
    3. ''app' → logprob: -1.956628441810608
    4. ''in' → logprob: -2.0816283226013184
    5. ''appelle' → logprob: -3.2066283226013184
    6. ''appar' → logprob: -3.2066283226013184
    7. ''''' → logprob: -3.3316283226013184
    8. ''util' → logprob: -3.5816283226013184
    9. ''ins' → logprob: -3.9566283226013184
    10. 'er' → logprob: -4.456628322601318

Token 546: 'spire' (ID: 94809)
  Prédit: 'spire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spire' → logprob: -0.2379491776227951
    2. 'spir' → logprob: -1.7379491329193115
    3. 'pir' → logprob: -4.487949371337891
    4. 't' → logprob: -4.612949371337891
    5. 'sp' → logprob: -5.362949371337891
    6. 'ter' → logprob: -6.112949371337891
    7. 'p' → logprob: -6.487949371337891
    8. 'spi' → logprob: -6.862949371337891
    9. '[' → logprob: -7.112949371337891
    10. '
' → logprob: -7.237949371337891

Token 547: ' probablement' (ID: 87740)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' du' → logprob: -1.0881359577178955
    2. ' de' → logprob: -1.5881359577178955
    3. '   ' → logprob: -1.7131359577178955
    4. ' des' → logprob: -1.9631359577178955
    5. ' d' → logprob: -2.3381359577178955
    6. 'de' → logprob: -4.588135719299316
    7. 'def' → logprob: -4.963135719299316
    8. 'd' → logprob: -4.963135719299316
    9. 'du' → logprob: -5.088135719299316
    10. 'des' → logprob: -5.838135719299316

Token 548: ' du' (ID: 1462)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6050237417221069
    2. ' du' → logprob: -1.730023741722107
    3. 'd' → logprob: -2.1050238609313965
    4. ' des' → logprob: -2.4800238609313965
    5. ' de' → logprob: -3.2300238609313965
    6. 'du' → logprob: -4.4800238609313965
    7. '   ' → logprob: -4.9800238609313965
    8. 'de' → logprob: -5.2300238609313965
    9. 'des' → logprob: -5.3550238609313965
    10. ' ' → logprob: -7.3550238609313965

Token 549: ' déplacement' (ID: 138449)
  Prédit: 'jeu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jeu' → logprob: -1.35242760181427
    2. 'concept' → logprob: -1.97742760181427
    3. 'code' → logprob: -2.7274274826049805
    4. 'voy' → logprob: -3.1024274826049805
    5. 'm' → logprob: -3.1024274826049805
    6. 'triangle' → logprob: -3.2274274826049805
    7. 's' → logprob: -3.3524274826049805
    8. ' concept' → logprob: -3.3524274826049805
    9. '#' → logprob: -3.6024274826049805
    10. ' déplacement' → logprob: -4.1024274826049805

Token 550: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.4396634101867676
    2. ' sur' → logprob: -1.5646634101867676
    3. 'dans' → logprob: -3.1896634101867676
    4. ' entre' → logprob: -3.4396634101867676
    5. 's' → logprob: -4.189663410186768
    6. 'sur' → logprob: -4.439663410186768
    7. ' au' → logprob: -4.439663410186768
    8. ' à' → logprob: -4.689663410186768
    9. ' d' → logprob: -5.064663410186768
    10. ' en' → logprob: -5.439663410186768

Token 551: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.0198482275009155
    2. 'une' → logprob: -1.2698482275009155
    3. ' une' → logprob: -1.7698482275009155
    4. 'un' → logprob: -1.8948482275009155
    5. 'l' → logprob: -4.519848346710205
    6. ' des' → logprob: -4.644848346710205
    7. ' l' → logprob: -5.269848346710205
    8. 'la' → logprob: -5.394848346710205
    9. ' la' → logprob: -5.769848346710205
    10. '   ' → logprob: -6.894848346710205

Token 552: ' cour' (ID: 2871)
  Prédit: 'plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plan' → logprob: -0.35062676668167114
    2. 'es' → logprob: -2.6006267070770264
    3. ' plan' → logprob: -2.6006267070770264
    4. 'jeu' → logprob: -2.8506267070770264
    5. ' jeu' → logprob: -4.2256269454956055
    6. 'plane' → logprob: -5.1006269454956055
    7. 's' → logprob: -5.1006269454956055
    8. 'lab' → logprob: -5.3506269454956055
    9. ' espace' → logprob: -5.6006269454956055
    10. 'pl' → logprob: -5.7256269454956055

Token 553: 'be' (ID: 1464)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1389162391424179
    2. 'de' → logprob: -3.013916254043579
    3. ' d' → logprob: -3.263916254043579
    4. ' des' → logprob: -4.013916015625
    5. 'd' → logprob: -5.263916015625
    6. '   ' → logprob: -5.263916015625
    7. ' ' → logprob: -5.638916015625
    8. 'onne' → logprob: -6.388916015625
    9. ' du' → logprob: -6.763916015625
    10. '}' → logprob: -6.763916015625

Token 554: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2149362415075302
    2. 'de' → logprob: -1.7149362564086914
    3. 'space' → logprob: -5.089936256408691
    4. ' space' → logprob: -5.839936256408691
    5. ' fract' → logprob: -6.714936256408691
    6. '   ' → logprob: -7.464936256408691
    7. '<|end|>' → logprob: -7.964936256408691
    8. ' ou' → logprob: -8.589936256408691
    9. '(space' → logprob: -8.589936256408691
    10. ' Hamilton' → logprob: -8.589936256408691

Token 555: ' S' (ID: 336)
  Prédit: 'Hil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Hil' → logprob: -0.020661937072873116
    2. 'Pe' → logprob: -4.5206618309021
    3. 'l' → logprob: -6.1456618309021
    4. ' Hil' → logprob: -6.8956618309021
    5. ' ' → logprob: -7.1456618309021
    6. 'hil' → logprob: -7.1456618309021
    7. 'S' → logprob: -7.1456618309021
    8. 'He' → logprob: -7.6456618309021
    9. 'Hen' → logprob: -7.7706618309021
    10. 'H' → logprob: -7.8956618309021

Token 556: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.01449147704988718
    2. 'er' → logprob: -5.264491558074951
    3. 'erp' → logprob: -5.639491558074951
    4. 'iers' → logprob: -6.014491558074951
    5. 'é' → logprob: -6.639491558074951
    6. 'ér' → logprob: -7.764491558074951
    7. 'i' → logprob: -8.764491081237793
    8. 'erg' → logprob: -9.014491081237793
    9. 'ières' → logprob: -9.264491081237793
    10. 'erge' → logprob: -9.389491081237793

Token 557: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.010752437636256218
    2. 'pi' → logprob: -4.885752201080322
    3. 'pins' → logprob: -7.385752201080322
    4. 'pis' → logprob: -7.885752201080322
    5. 'pink' → logprob: -8.13575267791748
    6. 'pens' → logprob: -8.38575267791748
    7. 'ps' → logprob: -8.88575267791748
    8. 'pes' → logprob: -9.13575267791748
    9. 'w' → logprob: -9.13575267791748
    10. '1' → logprob: -9.13575267791748

Token 558: 'inski' (ID: 66930)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.019701378419995308
    2. 'pi' → logprob: -4.6447014808654785
    3. 'pis' → logprob: -4.7697014808654785
    4. 'ps' → logprob: -8.39470100402832
    5. 'pens' → logprob: -8.51970100402832
    6. 'pes' → logprob: -8.76970100402832
    7. 'pins' → logprob: -9.14470100402832
    8. 'pn' → logprob: -9.26970100402832
    9. 'print' → logprob: -10.01970100402832
    10. 'pink' → logprob: -10.26970100402832

Token 559: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06934778392314911
    2. ',' → logprob: -3.444347858428955
    3. ' ou' → logprob: -4.819347858428955
    4. 'def' → logprob: -5.069347858428955
    5. '.' → logprob: -5.319347858428955
    6. ' ' → logprob: -6.319347858428955
    7. ' or' → logprob: -6.444347858428955
    8. ')' → logprob: -6.444347858428955
    9. ' (' → logprob: -7.319347858428955
    10. '...' → logprob: -7.319347858428955

Token 560: ' une' (ID: 2463)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6467404365539551
    2. 'une' → logprob: -2.146740436553955
    3. ' d' → logprob: -2.521740436553955
    4. 'l' → logprob: -2.771740436553955
    5. 'dans' → logprob: -3.146740436553955
    6. 'la' → logprob: -3.396740436553955
    7. 'un' → logprob: -3.646740436553955
    8. '#' → logprob: -3.771740436553955
    9. ' une' → logprob: -4.271740436553955
    10. '   ' → logprob: -4.646740436553955

Token 561: ' fract' (ID: 37163)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -1.2705912590026855
    2. ' grille' → logprob: -1.7705912590026855
    3. ' fract' → logprob: -1.8955912590026855
    4. 'fr' → logprob: -2.0205912590026855
    5. 'structure' → logprob: -2.8955912590026855
    6. '#' → logprob: -3.2705912590026855
    7. 'fract' → logprob: -3.7705912590026855
    8. 'suite' → logprob: -4.5205912590026855
    9. '```' → logprob: -4.5205912590026855
    10. '   ' → logprob: -4.6455912590026855

Token 562: 'ale' (ID: 1167)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.44231054186820984
    2. 'ale' → logprob: -1.5673105716705322
    3. 'p' → logprob: -3.0673105716705322
    4. 'ielle' → logprob: -3.3173105716705322
    5. 'nale' → logprob: -4.317310333251953
    6. '   ' → logprob: -4.442310333251953
    7. 'e' → logprob: -5.067310333251953
    8. 'é' → logprob: -5.317310333251953
    9. 'al' → logprob: -5.567310333251953
    10. 'alie' → logprob: -5.817310333251953

Token 563: ' similaire' (ID: 170967)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2408233880996704
    2. ',' → logprob: -1.4908233880996704
    3. ' dans' → logprob: -2.490823268890381
    4. '.' → logprob: -2.865823268890381
    5. ' ou' → logprob: -3.240823268890381
    6. ' sur' → logprob: -3.365823268890381
    7. ' en' → logprob: -3.365823268890381
    8. 'dans' → logprob: -3.490823268890381
    9. '3' → logprob: -3.740823268890381
    10. 'de' → logprob: -4.365823268890381

Token 564: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06044498458504677
    2. 'def' → logprob: -3.9354450702667236
    3. '
' → logprob: -4.9354448318481445
    4. '):' → logprob: -4.9354448318481445
    5. ',' → logprob: -5.1854448318481445
    6. '.' → logprob: -5.3104448318481445
    7. '):
' → logprob: -5.4354448318481445
    8. ')' → logprob: -5.6854448318481445
    9. ':' → logprob: -6.4354448318481445
    10. '    
' → logprob: -7.3104448318481445

Token 565: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.132113978266716
    2. ')' → logprob: -2.3821139335632324
    3. 'def' → logprob: -4.632113933563232
    4. '):' → logprob: -4.757113933563232
    5. '<|end|>' → logprob: -5.382113933563232
    6. '):
' → logprob: -6.382113933563232
    7. '```' → logprob: -6.382113933563232
    8. '
' → logprob: -6.632113933563232
    9. ',' → logprob: -6.757113933563232
    10. ')
' → logprob: -7.632113933563232

Token 566: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10438067466020584
    2. ':' → logprob: -2.8543806076049805
    3. 'def' → logprob: -4.2293806076049805
    4. '):' → logprob: -4.9793806076049805
    5. '
' → logprob: -5.2293806076049805
    6. '    
' → logprob: -5.9793806076049805
    7. ')' → logprob: -5.9793806076049805
    8. ',' → logprob: -6.1043806076049805
    9. ':
' → logprob: -6.4793806076049805
    10. '):
' → logprob: -6.7293806076049805

Token 567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004018445499241352
    2. ' while' → logprob: -7.004018306732178
    3. 'import' → logprob: -7.129018306732178
    4. ' for' → logprob: -7.629018306732178
    5. 'while' → logprob: -7.629018306732178
    6. '	while' → logprob: -7.754018306732178
    7. '    
' → logprob: -8.254018783569336
    8. '```' → logprob: -8.379018783569336
    9. '	for' → logprob: -9.504018783569336
    10. 'for' → logprob: -10.129018783569336

Token 568: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7547731399536133
    2. 'import' → logprob: -1.3797731399536133
    3. 'n' → logprob: -2.7547731399536133
    4. ' n' → logprob: -3.0047731399536133
    5. ' while' → logprob: -3.0047731399536133
    6. 'while' → logprob: -3.2547731399536133
    7. ' import' → logprob: -3.3797731399536133
    8. ' for' → logprob: -3.6297731399536133
    9. 'for' → logprob: -4.379773139953613
    10. 'try' → logprob: -5.879773139953613

Token 569: ' Trait' (ID: 146188)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8785919547080994
    2. 'import' → logprob: -1.5035920143127441
    3. ' n' → logprob: -1.7535920143127441
    4. '   ' → logprob: -2.378592014312744
    5. ' import' → logprob: -2.753592014312744
    6. 'for' → logprob: -4.378592014312744
    7. ' for' → logprob: -4.878592014312744
    8. 'while' → logprob: -5.128592014312744
    9. ' while' → logprob: -5.503592014312744
    10. 'from' → logprob: -6.878592014312744

Token 570: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.1362292617559433
    2. 'er' → logprob: -2.1362292766571045
    3. '   ' → logprob: -5.011229038238525
    4. 'ements' → logprob: -6.261229038238525
    5. 'ment' → logprob: -7.886229038238525
    6. ' for' → logprob: -9.386229515075684
    7. 'for' → logprob: -9.636229515075684
    8. 'e' → logprob: -10.636229515075684
    9. 'ant' → logprob: -10.886229515075684
    10. '
' → logprob: -11.011229515075684

Token 571: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08325432240962982
    2. 'import' → logprob: -3.708254337310791
    3. 'for' → logprob: -3.833254337310791
    4. ' for' → logprob: -4.833254337310791
    5. '    
' → logprob: -4.833254337310791
    6. ' =' → logprob: -4.958254337310791
    7. 'n' → logprob: -5.958254337310791
    8. '
' → logprob: -6.833254337310791
    9. '=' → logprob: -6.833254337310791
    10. '    ' → logprob: -7.208254337310791

Token 572: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09674321860074997
    2. ' _' → logprob: -2.596743106842041
    3. ' ' → logprob: -5.221743106842041
    4. ' range' → logprob: -5.971743106842041
    5. ' True' → logprob: -6.096743106842041
    6. 'range' → logprob: -6.846743106842041
    7. 'int' → logprob: -7.096743106842041
    8. 'n' → logprob: -7.096743106842041
    9. '1' → logprob: -7.346743106842041
    10. ' n' → logprob: -7.346743106842041

Token 573: ' cas' (ID: 2108)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4168206453323364
    2. '_' → logprob: -1.4168206453323364
    3. ' test' → logprob: -3.541820526123047
    4. ' range' → logprob: -4.041820526123047
    5. ' t' → logprob: -4.416820526123047
    6. 'range' → logprob: -5.041820526123047
    7. ' line' → logprob: -5.541820526123047
    8. ' i' → logprob: -5.666820526123047
    9. 'case' → logprob: -5.666820526123047
    10. ' ' → logprob: -5.666820526123047

Token 574: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1174367144703865
    2. ' de' → logprob: -3.492436647415161
    3. ':' → logprob: -3.992436647415161
    4. ' =' → logprob: -5.11743688583374
    5. '```' → logprob: -5.11743688583374
    6. 'de' → logprob: -5.24243688583374
    7. 's' → logprob: -5.49243688583374
    8. 'def' → logprob: -5.49243688583374
    9. '    
' → logprob: -5.61743688583374
    10. '       ' → logprob: -5.61743688583374

Token 575: ' test' (ID: 1746)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.30896857380867004
    2. 'test' → logprob: -1.9339685440063477
    3. ' range' → logprob: -2.9339685440063477
    4. 'int' → logprob: -3.4339685440063477
    5. ' test' → logprob: -3.5589685440063477
    6. '1' → logprob: -6.183968544006348
    7. ' ' → logprob: -6.558968544006348
    8. 'rang' → logprob: -7.183968544006348
    9. '_' → logprob: -7.308968544006348
    10. 't' → logprob: -7.433968544006348

Token 576: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17266160249710083
    2. 'while' → logprob: -2.672661542892456
    3. '
' → logprob: -3.297661542892456
    4. 'for' → logprob: -4.422661781311035
    5. '    
' → logprob: -4.422661781311035
    6. ' while' → logprob: -4.922661781311035
    7. ' for' → logprob: -5.047661781311035
    8. '```' → logprob: -5.172661781311035
    9. 'import' → logprob: -5.422661781311035
    10. 'n' → logprob: -6.172661781311035

Token 577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12988980114459991
    2. '
' → logprob: -3.379889726638794
    3. 'import' → logprob: -4.129889965057373
    4. '    
' → logprob: -4.129889965057373
    5. 'while' → logprob: -4.254889965057373
    6. ' while' → logprob: -4.379889965057373
    7. ' 
' → logprob: -4.629889965057373
    8. 'n' → logprob: -5.379889965057373
    9. ':' → logprob: -6.129889965057373
    10. '```' → logprob: -6.254889965057373

Token 578: ' for' (ID: 395)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8250715732574463
    2. '   ' → logprob: -1.2000715732574463
    3. ' n' → logprob: -2.7000715732574463
    4. ' for' → logprob: -2.8250715732574463
    5. 'while' → logprob: -3.0750715732574463
    6. 'n' → logprob: -3.5750715732574463
    7. 'import' → logprob: -3.8250715732574463
    8. ' import' → logprob: -4.325071334838867
    9. ' try' → logprob: -5.075071334838867
    10. '    
' → logprob: -5.575071334838867

Token 579: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5767346024513245
    2. ' _' → logprob: -0.8267346024513245
    3. ' i' → logprob: -8.32673454284668
    4. ' t' → logprob: -8.32673454284668
    5. ' n' → logprob: -8.95173454284668
    6. ' ' → logprob: -9.82673454284668
    7. 'n' → logprob: -10.82673454284668
    8. 't' → logprob: -10.82673454284668
    9. 'i' → logprob: -10.95173454284668
    10. '   ' → logprob: -11.70173454284668

Token 580: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006737984716892242
    2. 'in' → logprob: -5.006738185882568
    3. ' ' → logprob: -11.63173770904541
    4. '_' → logprob: -11.75673770904541
    5. ',' → logprob: -12.75673770904541
    6. ' _' → logprob: -14.00673770904541
    7. 'range' → logprob: -14.50673770904541
    8. ' ' → logprob: -15.25673770904541
    9. 's' → logprob: -15.38173770904541
    10. 'import' → logprob: -15.75673770904541

Token 581: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1002068892121315
    2. ' range' → logprob: -2.3502068519592285
    3. 'in' → logprob: -16.60020637512207
    4. 'rang' → logprob: -16.60020637512207
    5. 'int' → logprob: -18.22520637512207
    6. '0' → logprob: -18.22520637512207
    7. '	range' → logprob: -18.47520637512207
    8. '_' → logprob: -18.72520637512207
    9. 'r' → logprob: -18.72520637512207
    10. ' ' → logprob: -18.85020637512207

Token 582: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03704119101166725
    2. 'int' → logprob: -3.912041187286377
    3. 'range' → logprob: -5.287041187286377
    4. '...' → logprob: -5.662041187286377
    5. '_' → logprob: -5.787041187286377
    6. 'None' → logprob: -6.162041187286377
    7. '
' → logprob: -6.787041187286377
    8. 'input' → logprob: -7.412041187286377
    9. '*' → logprob: -8.287041664123535
    10. ' ' → logprob: -8.912041664123535

Token 583: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35058513283729553
    2. ']' → logprob: -1.3505851030349731
    3. ']*' → logprob: -4.100584983825684
    4. ' in' → logprob: -5.225584983825684
    5. 'in' → logprob: -5.600584983825684
    6. ' ]' → logprob: -5.850584983825684
    7. '..' → logprob: -6.225584983825684
    8. ' ,' → logprob: -6.475584983825684
    9. 'range' → logprob: -6.975584983825684
    10. ' for' → logprob: -7.225584983825684

Token 584: ' *' (ID: 425)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05693291872739792
    2. 'in' → logprob: -3.1819329261779785
    3. ',' → logprob: -4.4319329261779785
    4. '    ' → logprob: -7.1819329261779785
    5. '   ' → logprob: -7.5569329261779785
    6. 'range' → logprob: -9.05693244934082
    7. '
' → logprob: -9.43193244934082
    8. ' ,' → logprob: -9.68193244934082
    9. '_' → logprob: -9.80693244934082
    10. ' ' → logprob: -9.93193244934082

Token 585: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02540510520339012
    2. ' int' → logprob: -4.275404930114746
    3. '(int' → logprob: -4.525404930114746
    4. '10' → logprob: -9.400404930114746
    5. '[int' → logprob: -9.900404930114746
    6. ' (' → logprob: -10.150404930114746
    7. ' ' → logprob: -10.775404930114746
    8. '(' → logprob: -10.775404930114746
    9. '5' → logprob: -11.025404930114746
    10. '1' → logprob: -11.025404930114746

Token 586: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001454955490771681
    2. '(' → logprob: -9.00014591217041
    3. 'input' → logprob: -10.75014591217041
    4. '(
' → logprob: -14.75014591217041
    5. ' input' → logprob: -16.125144958496094
    6. ' (' → logprob: -17.250144958496094
    7. '(in' → logprob: -17.500144958496094
    8. '((' → logprob: -17.500144958496094
    9. '(

' → logprob: -18.250144958496094
    10. '(int' → logprob: -18.375144958496094

Token 587: '()):
' (ID: 83536)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20349514484405518
    2. '()):
' → logprob: -1.7034951448440552
    3. '())' → logprob: -6.203495025634766
    4. '().' → logprob: -10.578495025634766
    5. '():' → logprob: -11.828495025634766
    6. '():
' → logprob: -11.953495025634766
    7. '(' → logprob: -11.953495025634766
    8. '()>' → logprob: -12.578495025634766
    9. '()]' → logprob: -13.328495025634766
    10. '()`' → logprob: -13.453495025634766

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016011491417884827
    2. ':' → logprob: -4.391011714935303
    3. '   ' → logprob: -6.891011714935303
    4. ',' → logprob: -7.391011714935303
    5. ' :' → logprob: -7.516011714935303
    6. '        
' → logprob: -8.391011238098145
    7. ':
' → logprob: -8.391011238098145
    8. '<|end|>' → logprob: -8.516011238098145
    9. '	' → logprob: -9.141011238098145
    10. '	   ' → logprob: -10.016011238098145

Token 589: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002773966873064637
    2. '       ' → logprob: -6.502773761749268
    3. ' a' → logprob: -7.002773761749268
    4. '           ' → logprob: -8.627774238586426
    5. '   ' → logprob: -9.002774238586426
    6. '	a' → logprob: -11.252774238586426
    7. 'x' → logprob: -11.377774238586426
    8. 'A' → logprob: -11.377774238586426
    9. '_a' → logprob: -12.002774238586426
    10. ',a' → logprob: -12.502774238586426

Token 590: ' Lecture' (ID: 106534)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03021114133298397
    2. ' a' → logprob: -3.5302112102508545
    3. '       ' → logprob: -8.780211448669434
    4. '   ' → logprob: -9.155211448669434
    5. 'x' → logprob: -9.280211448669434
    6. 'A' → logprob: -9.905211448669434
    7. '(a' → logprob: -11.405211448669434
    8. '[a' → logprob: -12.030211448669434
    9. '	a' → logprob: -12.155211448669434
    10. ' x' → logprob: -12.280211448669434

Token 591: ' des' (ID: 731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6959294080734253
    2. ' a' → logprob: -0.8209294080734253
    3. '(a' → logprob: -3.445929527282715
    4. '()' → logprob: -3.695929527282715
    5. '       ' → logprob: -6.070929527282715
    6. '().' → logprob: -7.195929527282715
    7. '(),' → logprob: -7.945929527282715
    8. 'x' → logprob: -8.570929527282715
    9. '	a' → logprob: -8.945929527282715
    10. 'n' → logprob: -9.820929527282715

Token 592: ' positions' (ID: 15897)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026373103260993958
    2. ' a' → logprob: -3.6513731479644775
    3. 'x' → logprob: -10.401372909545898
    4. 'coords' → logprob: -11.151372909545898
    5. 'ent' → logprob: -12.526372909545898
    6. '4' → logprob: -12.526372909545898
    7. ' four' → logprob: -12.776372909545898
    8. ' ' → logprob: -12.776372909545898
    9. ' coordonnées' → logprob: -13.026372909545898
    10. '   ' → logprob: -13.151372909545898

Token 593: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6531978845596313
    2. ' a' → logprob: -0.7781978845596313
    3. ' =' → logprob: -4.278197765350342
    4. ',' → logprob: -6.278197765350342
    5. '=' → logprob: -6.403197765350342
    6. '       ' → logprob: -6.528197765350342
    7. '=a' → logprob: -7.778197765350342
    8. ',a' → logprob: -7.903197765350342
    9. '(a' → logprob: -8.2781982421875
    10. 'x' → logprob: -9.5281982421875

Token 594: ' départ' (ID: 32693)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011729758232831955
    2. ' a' → logprob: -4.886729717254639
    3. '*a' → logprob: -6.386729717254639
    4. '*' → logprob: -6.886729717254639
    5. 'map' → logprob: -7.886729717254639
    6. 'x' → logprob: -7.886729717254639
    7. 'l' → logprob: -9.136730194091797
    8. 'input' → logprob: -9.136730194091797
    9. '   ' → logprob: -9.511730194091797
    10. 'r' → logprob: -9.636730194091797

Token 595: ' et' (ID: 859)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32095813751220703
    2. ' a' → logprob: -1.445958137512207
    3. ',' → logprob: -3.570958137512207
    4. '       ' → logprob: -5.570958137512207
    5. '(a' → logprob: -5.820958137512207
    6. ',a' → logprob: -6.195958137512207
    7. ' ,' → logprob: -7.695958137512207
    8. ' et' → logprob: -7.695958137512207
    9. 'et' → logprob: -8.070958137512207
    10. ' =' → logprob: -8.570958137512207

Token 596: ' d' (ID: 272)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.16513662040233612
    2. 'fin' → logprob: -1.9151365756988525
    3. 'd' → logprob: -6.165136814117432
    4. '   ' → logprob: -6.790136814117432
    5. 'destination' → logprob: -7.290136814117432
    6. 'final' → logprob: -8.290136337280273
    7. ' d' → logprob: -8.415136337280273
    8. ' arrivée' → logprob: -8.790136337280273
    9. ' fin' → logprob: -9.290136337280273
    10. 'de' → logprob: -9.665136337280273

Token 597: ''arrivée' (ID: 156076)
  Prédit: ''arrivée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arrivée' → logprob: -0.06907003372907639
    2. 'arr' → logprob: -3.0690701007843018
    3. ' arrivée' → logprob: -4.069069862365723
    4. '’arrivée' → logprob: -6.569069862365723
    5. ''arrive' → logprob: -6.819069862365723
    6. 'e' → logprob: -8.569069862365723
    7. ''arr' → logprob: -8.694069862365723
    8. ' arrivé' → logprob: -9.194069862365723
    9. 'arrival' → logprob: -9.444069862365723
    10. '_arr' → logprob: -9.569069862365723

Token 598: '
' (ID: 198)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.44571352005004883
    2. 'a' → logprob: -1.0707135200500488
    3. ',' → logprob: -5.320713520050049
    4. '       ' → logprob: -5.445713520050049
    5. ' =' → logprob: -6.320713520050049
    6. 'x' → logprob: -6.570713520050049
    7. '(a' → logprob: -6.570713520050049
    8. ' x' → logprob: -7.320713520050049
    9. ',a' → logprob: -7.695713520050049
    10. ' (' → logprob: -7.820713520050049

Token 599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5553596615791321
    2. 'a' → logprob: -1.4303596019744873
    3. ' a' → logprob: -1.6803596019744873
    4. ',' → logprob: -7.930359840393066
    5. ',a' → logprob: -9.680359840393066
    6. '        
' → logprob: -10.430359840393066
    7. '   ' → logprob: -10.805359840393066
    8. '(a' → logprob: -10.805359840393066
    9. '           ' → logprob: -11.430359840393066
    10. '      ' → logprob: -11.555359840393066

Token 600: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.02081560343503952
    2. ' a' → logprob: -3.89581561088562
    3. 'x' → logprob: -8.7708158493042
    4. '   ' → logprob: -9.7708158493042
    5. '       ' → logprob: -10.3958158493042
    6. '	a' → logprob: -11.8958158493042
    7. ' x' → logprob: -12.3958158493042
    8. 'A' → logprob: -12.5208158493042
    9. '(a' → logprob: -12.6458158493042
    10. '    ' → logprob: -13.0208158493042

Token 601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003280975390225649
    2. ',b' → logprob: -5.753281116485596
    3. ' ,' → logprob: -9.378280639648438
    4. 'b' → logprob: -11.003280639648438
    5. ',c' → logprob: -14.628280639648438
    6. ',a' → logprob: -14.753280639648438
    7. ' =' → logprob: -15.003280639648438
    8. '=' → logprob: -15.503280639648438
    9. ',s' → logprob: -16.378280639648438
    10. 'a' → logprob: -16.378280639648438

Token 602: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196802109479904
    2. ' b' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.436967849731445
    4. '    ' → logprob: -16.311967849731445
    5. '   ' → logprob: -17.686967849731445
    6. ' ' → logprob: -18.686967849731445
    7. '  ' → logprob: -18.686967849731445
    8. '=' → logprob: -18.936967849731445
    9. 's' → logprob: -19.061967849731445
    10. 'c' → logprob: -19.436967849731445

Token 603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015223604859784245
    2. ',c' → logprob: -6.626522541046143
    3. '=' → logprob: -9.126522064208984
    4. 'c' → logprob: -9.751522064208984
    5. ',b' → logprob: -10.876522064208984
    6. ' ,' → logprob: -11.876522064208984
    7. ' =' → logprob: -13.376522064208984
    8. 'b' → logprob: -14.251522064208984
    9. ',d' → logprob: -14.626522064208984
    10. ',input' → logprob: -15.251522064208984

Token 604: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013265528250485659
    2. ' c' → logprob: -6.626326560974121
    3. 'x' → logprob: -15.001326560974121
    4. ' ' → logprob: -15.876326560974121
    5. '   ' → logprob: -16.626325607299805
    6. '  ' → logprob: -16.876325607299805
    7. '	c' → logprob: -17.501325607299805
    8. 's' → logprob: -17.626325607299805
    9. ',c' → logprob: -18.626325607299805
    10. '    ' → logprob: -18.626325607299805

Token 605: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010425841173855588
    2. ',d' → logprob: -9.375103950500488
    3. ' ,' → logprob: -11.000103950500488
    4. ',c' → logprob: -13.250103950500488
    5. '=' → logprob: -14.875103950500488
    6. ',b' → logprob: -15.375103950500488
    7. 'd' → logprob: -16.250104904174805
    8. ',e' → logprob: -16.375104904174805
    9. ',D' → logprob: -16.875104904174805
    10. ',input' → logprob: -17.250104904174805

Token 606: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.000553151941858232
    2. ' d' → logprob: -7.500553131103516
    3. 's' → logprob: -16.500553131103516
    4. ' ' → logprob: -17.625553131103516
    5. 'e' → logprob: -20.375553131103516
    6. '  ' → logprob: -20.500553131103516
    7. 'c' → logprob: -20.875553131103516
    8. 'r' → logprob: -21.000553131103516
    9. '   ' → logprob: -21.375553131103516
    10. '<|end|>' → logprob: -22.000553131103516

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029760675504803658
    2. ' =' → logprob: -3.5297605991363525
    3. '=input' → logprob: -11.654760360717773
    4. '   ' → logprob: -14.529760360717773
    5. ',' → logprob: -15.154760360717773
    6. '    ' → logprob: -15.529760360717773
    7. ' ' → logprob: -16.029760360717773
    8. '=list' → logprob: -16.404760360717773
    9. ')' → logprob: -16.529760360717773
    10. '=int' → logprob: -16.654760360717773

Token 608: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03807362541556358
    2. 'map' → logprob: -3.2880735397338867
    3. '[' → logprob: -10.788073539733887
    4. ' [' → logprob: -12.288073539733887
    5. '   ' → logprob: -13.038073539733887
    6. '	map' → logprob: -13.288073539733887
    7. ' ' → logprob: -13.538073539733887
    8. ' list' → logprob: -14.538073539733887
    9. ' ' → logprob: -14.663073539733887
    10. '(map' → logprob: -15.538073539733887

Token 609: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00011629798245849088
    2. '(' → logprob: -9.250116348266602
    3. 'int' → logprob: -10.875116348266602
    4. '(
' → logprob: -13.750116348266602
    5. '<int' → logprob: -16.5001163482666
    6. '(input' → logprob: -16.5001163482666
    7. '=int' → logprob: -17.1251163482666
    8. ' int' → logprob: -17.8751163482666
    9. '[int' → logprob: -18.2501163482666
    10. '(lambda' → logprob: -18.3751163482666

Token 610: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.1602475792169571
    2. '(input' → logprob: -2.410247564315796
    3. ',' → logprob: -3.160247564315796
    4. 'input' → logprob: -4.160247802734375
    5. ' input' → logprob: -9.285247802734375
    6. '=input' → logprob: -9.660247802734375
    7. '(' → logprob: -10.410247802734375
    8. ')' → logprob: -10.660247802734375
    9. '[input' → logprob: -11.660247802734375
    10. '   ' → logprob: -11.785247802734375

Token 611: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007100477814674377
    2. ' input' → logprob: -7.2507100105285645
    3. '(input' → logprob: -17.750709533691406
    4. '<input' → logprob: -20.000709533691406
    5. '	input' → logprob: -20.125709533691406
    6. '   ' → logprob: -20.500709533691406
    7. '=input' → logprob: -20.750709533691406
    8. ' ' → logprob: -20.875709533691406
    9. ',input' → logprob: -20.875709533691406
    10. '```' → logprob: -22.750709533691406

Token 612: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -16.375
    3. '(' → logprob: -17.125
    4. ' ().' → logprob: -17.875
    5. '.split' → logprob: -18.0
    6. '()
' → logprob: -19.875
    7. '   ' → logprob: -20.25
    8. 'split' → logprob: -20.875
    9. '("").' → logprob: -21.125
    10. ')' → logprob: -21.75

Token 613: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.584861744660884e-05
    2. 'strip' → logprob: -10.000045776367188
    3. ' split' → logprob: -15.000045776367188
    4. '().' → logprob: -17.250045776367188
    5. 'rstrip' → logprob: -17.875045776367188
    6. '.split' → logprob: -18.500045776367188
    7. '(split' → logprob: -18.500045776367188
    8. 'spl' → logprob: -19.750045776367188
    9. 'read' → logprob: -20.625045776367188
    10. ')' → logprob: -23.250045776367188

Token 614: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0023089346941560507
    2. ')' → logprob: -6.6273088455200195
    3. '()' → logprob: -7.0023088455200195
    4. '())
' → logprob: -10.25230884552002
    5. '(' → logprob: -10.37730884552002
    6. '()))' → logprob: -12.75230884552002
    7. ' ())' → logprob: -13.50230884552002
    8. '());' → logprob: -14.62730884552002
    9. '().' → logprob: -14.75230884552002
    10. '())
' → logprob: -15.50230884552002

Token 615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007787733338773251
    2. '   ' → logprob: -7.375778675079346
    3. '<|end|>' → logprob: -9.875779151916504
    4. '        
' → logprob: -10.250779151916504
    5. '           ' → logprob: -11.625779151916504
    6. 'n' → logprob: -11.625779151916504
    7. 's' → logprob: -12.125779151916504
    8. 'next' → logprob: -12.125779151916504
    9. '```' → logprob: -12.375779151916504
    10. '#' → logprob: -12.500779151916504

Token 616: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4223854541778564
    2. 'i' → logprob: -1.6723854541778564
    3. 'n' → logprob: -1.7973854541778564
    4. 'x' → logprob: -2.2973854541778564
    5. '   ' → logprob: -3.1723854541778564
    6. 'diff' → logprob: -3.4223854541778564
    7. 'niveau' → logprob: -3.6723854541778564
    8. 'l' → logprob: -3.7973854541778564
    9. 'level' → logprob: -3.9223854541778564
    10. 'e' → logprob: -3.9223854541778564

Token 617: ' Calcul' (ID: 57243)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9622814655303955
    2. 'r' → logprob: -2.2122814655303955
    3. 'x' → logprob: -2.3372814655303955
    4. 'v' → logprob: -2.7122814655303955
    5. 'res' → logprob: -2.9622814655303955
    6. 'print' → logprob: -3.0872814655303955
    7. 'niveau' → logprob: -3.0872814655303955
    8. 'diff' → logprob: -3.5872814655303955
    9. 'i' → logprob: -3.7122814655303955
    10. 'niv' → logprob: -4.212281227111816

Token 618: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013356217183172703
    2. ' =' → logprob: -5.3883562088012695
    3. 'n' → logprob: -6.2633562088012695
    4. ' de' → logprob: -6.6383562088012695
    5. '=' → logprob: -6.8883562088012695
    6. '(n' → logprob: -7.6383562088012695
    7. ':' → logprob: -8.01335620880127
    8. 't' → logprob: -8.38835620880127
    9. '()' → logprob: -8.51335620880127
    10. ',' → logprob: -8.51335620880127

Token 619: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.8239188194274902
    2. 'n' → logprob: -1.4489188194274902
    3. 'res' → logprob: -2.9489188194274902
    4. 'diff' → logprob: -3.1989188194274902
    5. 'niv' → logprob: -3.3239188194274902
    6. 'i' → logprob: -3.3239188194274902
    7. 'x' → logprob: -3.4489188194274902
    8. 'r' → logprob: -4.07391881942749
    9. 'dist' → logprob: -4.57391881942749
    10. 'd' → logprob: -4.69891881942749

Token 620: ' critique' (ID: 56899)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.041648659855127335
    2. '       ' → logprob: -4.166648864746094
    3. '=' → logprob: -4.291648864746094
    4. '   ' → logprob: -5.166648864746094
    5. 'n' → logprob: -5.416648864746094
    6. 'niveau' → logprob: -7.041648864746094
    7. 'i' → logprob: -8.791648864746094
    8. '=n' → logprob: -9.041648864746094
    9. '=i' → logprob: -9.291648864746094
    10. 'niv' → logprob: -10.291648864746094

Token 621: ' horizontal' (ID: 25511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12712255120277405
    2. '=' → logprob: -2.127122640609741
    3. 'n' → logprob: -9.75212287902832
    4. '=i' → logprob: -10.12712287902832
    5. '=n' → logprob: -10.62712287902832
    6. '       ' → logprob: -10.75212287902832
    7. 'i' → logprob: -11.25212287902832
    8. '   ' → logprob: -11.25212287902832
    9. 'niveau' → logprob: -12.62712287902832
    10. ',' → logprob: -12.75212287902832

Token 622: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08252616971731186
    2. '=' → logprob: -2.582526206970215
    3. 'n' → logprob: -6.457526206970215
    4. '       ' → logprob: -6.707526206970215
    5. '=n' → logprob: -8.207526206970215
    6. '   ' → logprob: -8.332526206970215
    7. 'niveau' → logprob: -8.957526206970215
    8. '=i' → logprob: -9.457526206970215
    9. 'i' → logprob: -10.957526206970215
    10. 'level' → logprob: -11.207526206970215

Token 623: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.07402767986059189
    2. '       ' → logprob: -3.4490277767181396
    3. 'vert' → logprob: -3.9490277767181396
    4. 'i' → logprob: -5.9490275382995605
    5. ' vertical' → logprob: -5.9490275382995605
    6. '#' → logprob: -6.1990275382995605
    7. 'niveau' → logprob: -6.6990275382995605
    8. '   ' → logprob: -6.8240275382995605
    9. ' verticale' → logprob: -6.8240275382995605
    10. 'diff' → logprob: -7.1990275382995605

Token 624: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.295015424489975
    2. ' =' → logprob: -1.7950154542922974
    3. '   ' → logprob: -3.045015335083008
    4. 'n' → logprob: -4.170015335083008
    5. 'h' → logprob: -4.795015335083008
    6. '=' → logprob: -5.420015335083008
    7. 'i' → logprob: -5.545015335083008
    8. 'v' → logprob: -6.545015335083008
    9. 'niveau' → logprob: -6.670015335083008
    10. '
' → logprob: -6.795015335083008

Token 625: ' le' (ID: 505)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.4652631282806396
    2. 'i' → logprob: -1.9652631282806396
    3. 'l' → logprob: -2.0902631282806396
    4. 'e' → logprob: -2.3402631282806396
    5. 'm' → logprob: -2.4652631282806396
    6. 'max' → logprob: -2.8402631282806396
    7. 'la' → logprob: -3.0902631282806396
    8. 'x' → logprob: -3.2152631282806396
    9. 'abs' → logprob: -3.8402631282806396
    10. 'min' → logprob: -4.090263366699219

Token 626: ' mouvement' (ID: 62236)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.5631970167160034
    2. 'diff' → logprob: -1.6881970167160034
    3. 'niveau' → logprob: -1.8131970167160034
    4. 'x' → logprob: -3.063197135925293
    5. 'i' → logprob: -3.188197135925293
    6. 'delta' → logprob: -3.188197135925293
    7. 'd' → logprob: -3.438197135925293
    8. 'max' → logprob: -3.563197135925293
    9. 'if' → logprob: -3.688197135925293
    10. 'for' → logprob: -3.688197135925293

Token 627: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012955739162862301
    2. 'n' → logprob: -5.387955665588379
    3. '   ' → logprob: -5.637955665588379
    4. 'i' → logprob: -6.387955665588379
    5. ' =' → logprob: -7.012955665588379
    6. ' i' → logprob: -7.137955665588379
    7. 'niveau' → logprob: -7.387955665588379
    8. 'level' → logprob: -9.262955665588379
    9. '<|end|>' → logprob: -9.637955665588379
    10. 's' → logprob: -9.887955665588379

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10512268543243408
    2. 'n' → logprob: -2.8551225662231445
    3. '   ' → logprob: -3.8551225662231445
    4. 'i' → logprob: -4.7301225662231445
    5. 'v' → logprob: -6.2301225662231445
    6. ' i' → logprob: -6.4801225662231445
    7. 'niveau' → logprob: -6.4801225662231445
    8. 'niv' → logprob: -6.8551225662231445
    9. 'level' → logprob: -7.1051225662231445
    10. 'e' → logprob: -7.2301225662231445

Token 629: ' h' (ID: 312)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.38694167137146
    2. 'i' → logprob: -1.51194167137146
    3. 'n' → logprob: -1.63694167137146
    4. 'niveau' → logprob: -2.26194167137146
    5. 'niv' → logprob: -3.01194167137146
    6. 'h' (adapté à ' h') → logprob: -3.51194167137146
    7. 'level' → logprob: -3.63694167137146
    8. 'v' → logprob: -3.76194167137146
    9. '   ' → logprob: -4.136941909790039
    10. 'lvl' → logprob: -4.386941909790039

Token 630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06182560324668884
    2. '_n' → logprob: -3.8118255138397217
    3. '=' → logprob: -4.561825752258301
    4. 'n' → logprob: -4.686825752258301
    5. '_level' → logprob: -4.686825752258301
    6. 'niveau' → logprob: -6.311825752258301
    7. '_' → logprob: -6.811825752258301
    8. 'or' → logprob: -7.311825752258301
    9. 'i' → logprob: -7.436825752258301
    10. '_lvl' → logprob: -7.436825752258301

Token 631: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0032570925541222095
    2. ' m' → logprob: -5.7532572746276855
    3. 'max' → logprob: -9.878256797790527
    4. '   ' → logprob: -10.878256797790527
    5. ' max' → logprob: -12.503256797790527
    6. 'abs' → logprob: -13.503256797790527
    7. ' ' → logprob: -13.753256797790527
    8. 'min' → logprob: -14.503256797790527
    9. '0' → logprob: -14.503256797790527
    10. '(m' → logprob: -14.878256797790527

Token 632: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.625001907348633
    3. '(abs' → logprob: -14.625001907348633
    4. 'a' → logprob: -15.000001907348633
    5. '((' → logprob: -16.250001907348633
    6. '(b' → logprob: -16.500001907348633
    7. '(
' → logprob: -17.000001907348633
    8. ' (' → logprob: -18.875001907348633
    9. 'abs' → logprob: -19.500001907348633
    10. '   ' → logprob: -20.000001907348633

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009215848403982818
    2. ',b' → logprob: -7.125921726226807
    3. ' ,' → logprob: -9.750921249389648
    4. 'b' → logprob: -10.500921249389648
    5. ',
' → logprob: -11.875921249389648
    6. '   ' → logprob: -12.125921249389648
    7. 'a' → logprob: -12.375921249389648
    8. ',c' → logprob: -12.625921249389648
    9. '(b' → logprob: -13.375921249389648
    10. 'c' → logprob: -13.500921249389648

Token 634: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.28144413232803345
    2. 'b' → logprob: -1.4064440727233887
    3. 'd' → logprob: -8.906444549560547
    4. 'a' → logprob: -9.906444549560547
    5. '0' → logprob: -10.281444549560547
    6. ' c' → logprob: -10.656444549560547
    7. '   ' → logprob: -10.781444549560547
    8. ' ' → logprob: -11.656444549560547
    9. ' b' → logprob: -12.031444549560547
    10. '
' → logprob: -12.656444549560547

Token 635: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009668456041254103
    2. ',c' → logprob: -7.000967025756836
    3. ' ,' → logprob: -10.000967025756836
    4. 'c' → logprob: -11.750967025756836
    5. ',
' → logprob: -13.375967025756836
    6. '   ' → logprob: -15.750967025756836
    7. ')' → logprob: -16.250967025756836
    8. ' c' → logprob: -16.500967025756836
    9. ',
' → logprob: -17.375967025756836
    10. ',b' → logprob: -17.625967025756836

Token 636: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.758300438988954e-05
    2. ' c' → logprob: -9.250097274780273
    3. 'a' → logprob: -14.000097274780273
    4. '   ' → logprob: -15.000097274780273
    5. ' ' → logprob: -15.750097274780273
    6. '  ' → logprob: -17.125097274780273
    7. '	c' → logprob: -17.375097274780273
    8. ')c' → logprob: -18.000097274780273
    9. '    ' → logprob: -18.375097274780273
    10. 'с' → logprob: -18.625097274780273

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.15310683415737e-05
    2. ',d' → logprob: -11.500021934509277
    3. ' ,' → logprob: -11.750021934509277
    4. 'd' → logprob: -13.875021934509277
    5. ',c' → logprob: -13.875021934509277
    6. ')' → logprob: -14.625021934509277
    7. ',m' → logprob: -15.250021934509277
    8. ',
' → logprob: -15.375021934509277
    9. 'c' → logprob: -15.875021934509277
    10. 'm' → logprob: -16.00002098083496

Token 638: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00015979631280060858
    2. ' d' → logprob: -8.750160217285156
    3. 'b' → logprob: -14.125160217285156
    4. ' ' → logprob: -15.750160217285156
    5. '   ' → logprob: -16.375160217285156
    6. 'c' → logprob: -16.625160217285156
    7. '0' → logprob: -16.875160217285156
    8. '  ' → logprob: -17.000160217285156
    9. 'm' → logprob: -17.250160217285156
    10. 'a' → logprob: -17.500160217285156

Token 639: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3908185064792633
    2. ')' → logprob: -1.140818476676941
    3. ')
' → logprob: -5.7658185958862305
    4. ',' → logprob: -7.2658185958862305
    5. ')+' → logprob: -10.51581859588623
    6. ')

' → logprob: -10.64081859588623
    7. ');' → logprob: -11.26581859588623
    8. '   ' → logprob: -11.51581859588623
    9. ' )
' → logprob: -11.51581859588623
    10. '),' → logprob: -12.64081859588623

Token 640: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2967776358127594
    2. '
' → logprob: -1.421777606010437
    3. '   ' → logprob: -4.796777725219727
    4. 'v' → logprob: -6.046777725219727
    5. '        
' → logprob: -6.171777725219727
    6. '    
' → logprob: -6.671777725219727
    7. 'if' → logprob: -8.171777725219727
    8. '<|end|>' → logprob: -8.171777725219727
    9. '  
' → logprob: -8.296777725219727
    10. '
' → logprob: -9.046777725219727

Token 641: ' w' (ID: 286)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.43297356367111206
    2. '
' → logprob: -1.9329736232757568
    3. '   ' → logprob: -1.9329736232757568
    4. '       ' → logprob: -3.307973623275757
    5. 'if' → logprob: -3.932973623275757
    6. ' v' → logprob: -6.307973384857178
    7. '    
' → logprob: -7.057973384857178
    8. ' if' → logprob: -7.307973384857178
    9. 'print' → logprob: -7.557973384857178
    10. 'r' → logprob: -8.307973861694336

Token 642: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38769590854644775
    2. '=' → logprob: -1.1376959085464478
    3. ',' → logprob: -7.137695789337158
    4. ' ' → logprob: -11.387696266174316
    5. '   ' → logprob: -11.762696266174316
    6. 'w' → logprob: -13.012696266174316
    7. ' ,' → logprob: -13.637696266174316
    8. ')' → logprob: -13.762696266174316
    9. '  ' → logprob: -14.012696266174316
    10. '(' → logprob: -14.137696266174316

Token 643: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0006344011635519564
    2. ' m' → logprob: -7.37563419342041
    3. '   ' → logprob: -12.12563419342041
    4. ' ' → logprob: -14.75063419342041
    5. '    ' → logprob: -14.87563419342041
    6. '  ' → logprob: -14.87563419342041
    7. '       ' → logprob: -15.50063419342041
    8. 'c' → logprob: -15.50063419342041
    9. '0' → logprob: -16.313135147094727
    10. 'd' → logprob: -16.313135147094727

Token 644: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.8074162653647363e-05
    2. 'b' → logprob: -11.000018119812012
    3. '(a' → logprob: -14.250018119812012
    4. ' (' → logprob: -15.125018119812012
    5. '(' → logprob: -15.250018119812012
    6. '   ' → logprob: -17.250017166137695
    7. '(c' → logprob: -17.375017166137695
    8. '	b' → logprob: -19.125017166137695
    9. '((' → logprob: -19.250017166137695
    10. '(
' → logprob: -19.375017166137695

Token 645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017321959137916565
    2. ',c' → logprob: -5.017322063446045
    3. '(c' → logprob: -5.767322063446045
    4. 'a' → logprob: -5.892322063446045
    5. ',a' → logprob: -6.267322063446045
    6. '(a' → logprob: -6.392322063446045
    7. 'c' → logprob: -6.892322063446045
    8. ' ,' → logprob: -9.892321586608887
    9. ' c' → logprob: -11.642321586608887
    10. '(' → logprob: -12.017321586608887

Token 646: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.5822400857578032e-05
    2. ' a' → logprob: -10.875025749206543
    3. 'c' → logprob: -12.000025749206543
    4. '   ' → logprob: -14.625025749206543
    5. ' ' → logprob: -16.37502670288086
    6. '  ' → logprob: -17.62502670288086
    7. '	a' → logprob: -18.00002670288086
    8. '    ' → logprob: -18.25002670288086
    9. '     ' → logprob: -19.12502670288086
    10. '
' → logprob: -19.37502670288086

Token 647: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.625866030342877e-05
    2. ',c' → logprob: -10.125085830688477
    3. ' ,' → logprob: -10.250085830688477
    4. 'c' → logprob: -11.625085830688477
    5. ',
' → logprob: -13.625085830688477
    6. ')' → logprob: -15.750085830688477
    7. 'w' → logprob: -15.750085830688477
    8. ' c' → logprob: -16.250085830688477
    9. '   ' → logprob: -17.000085830688477
    10. '(c' → logprob: -17.375085830688477

Token 648: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005929863080382347
    2. 'c' → logprob: -5.130929946899414
    3. ' d' → logprob: -14.130929946899414
    4. '   ' → logprob: -15.255929946899414
    5. 'a' → logprob: -16.005929946899414
    6. ' ' → logprob: -16.255929946899414
    7. '  ' → logprob: -17.005929946899414
    8. '
' → logprob: -17.505929946899414
    9. '	d' → logprob: -17.505929946899414
    10. 'cd' → logprob: -17.880929946899414

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005389740690588951
    2. ',c' → logprob: -8.12553882598877
    3. 'c' → logprob: -8.37553882598877
    4. ',
' → logprob: -11.62553882598877
    5. ' ,' → logprob: -12.87553882598877
    6. ')' → logprob: -14.37553882598877
    7. '   ' → logprob: -15.75053882598877
    8. ')c' → logprob: -16.375539779663086
    9. ' c' → logprob: -17.000539779663086
    10. '	c' → logprob: -17.625539779663086

Token 650: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.4121114822482923e-06
    2. ' c' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.750003814697266
    4. '	c' → logprob: -19.000003814697266
    5. '  ' → logprob: -19.625003814697266
    6. '       ' → logprob: -20.125003814697266
    7. '
' → logprob: -20.750003814697266
    8. ' ' → logprob: -20.875003814697266
    9. '    ' → logprob: -21.000003814697266
    10. 'с' → logprob: -21.000003814697266

Token 651: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015512866666540504
    2. ')
' → logprob: -6.501551151275635
    3. ')

' → logprob: -10.126551628112793
    4. '   ' → logprob: -12.501551628112793
    5. ')
' → logprob: -13.001551628112793
    6. '       ' → logprob: -13.376551628112793
    7. ' )' → logprob: -13.751551628112793
    8. 'def' → logprob: -16.251550674438477
    9. ')

' → logprob: -17.001550674438477
    10. ')`' → logprob: -17.001550674438477

Token 652: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001359997782856226
    2. '   ' → logprob: -7.126359939575195
    3. '
' → logprob: -8.251359939575195
    4. 'print' → logprob: -8.501359939575195
    5. 'if' → logprob: -10.001359939575195
    6. '        
' → logprob: -10.626359939575195
    7. '    
' → logprob: -11.876359939575195
    8. '```' → logprob: -12.251359939575195
    9. '           ' → logprob: -12.626359939575195
    10. ' print' → logprob: -13.251359939575195

Token 653: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06065870821475983
    2. 'r' → logprob: -4.310658931732178
    3. 'res' → logprob: -4.435658931732178
    4. 'if' → logprob: -4.435658931732178
    5. 'p' → logprob: -4.685658931732178
    6. 'd' → logprob: -5.935658931732178
    7. 'x' → logprob: -6.060658931732178
    8. 'diff' → logprob: -6.810658931732178
    9. 'dist' → logprob: -6.810658931732178
    10. '       ' → logprob: -7.310658931732178

Token 654: ' Cas' (ID: 8066)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5115823745727539
    2. 'res' → logprob: -1.761582374572754
    3. 'dist' → logprob: -2.511582374572754
    4. 'diff' → logprob: -3.386582374572754
    5. 'distance' → logprob: -3.511582374572754
    6. 'if' → logprob: -3.761582374572754
    7. 'd' → logprob: -3.886582374572754
    8. 'r' → logprob: -4.511582374572754
    9. 'ans' → logprob: -4.886582374572754
    10. 'result' → logprob: -5.011582374572754

Token 655: ' particulier' (ID: 47842)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2359217405319214
    2. ' where' → logprob: -1.3609217405319214
    3. ' if' → logprob: -1.8609217405319214
    4. '1' → logprob: -2.860921859741211
    5. ' où' → logprob: -2.860921859741211
    6. ' w' → logprob: -3.110921859741211
    7. ' h' → logprob: -3.610921859741211
    8. 'w' → logprob: -3.610921859741211
    9. '           ' → logprob: -3.985921859741211
    10. '0' → logprob: -4.235921859741211

Token 656: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01713448390364647
    2. ' if' → logprob: -4.517134666442871
    3. 'if' → logprob: -5.267134666442871
    4. '<|end|>' → logprob: -7.642134666442871
    5. ':' → logprob: -9.267134666442871
    6. '        
' → logprob: -9.517134666442871
    7. 's' → logprob: -10.267134666442871
    8. '<|end|>' → logprob: -10.517134666442871
    9. ',' → logprob: -10.642134666442871
    10. '   ' → logprob: -10.642134666442871

Token 657: ' aucun' (ID: 41678)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32673585414886475
    2. ' if' → logprob: -1.3267358541488647
    3. '       ' → logprob: -4.326735973358154
    4. 'print' → logprob: -8.951735496520996
    5. 'w' → logprob: -10.951735496520996
    6. ' print' → logprob: -11.451735496520996
    7. '	if' → logprob: -13.201735496520996
    8. '```' → logprob: -13.326735496520996
    9. ' w' → logprob: -13.451735496520996
    10. 'result' → logprob: -13.451735496520996

Token 658: ' piè' (ID: 29841)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7536478042602539
    2. 'n' → logprob: -1.253647804260254
    3. 'niveau' → logprob: -2.003647804260254
    4. ' changement' → logprob: -3.878647804260254
    5. 'm' → logprob: -4.128647804260254
    6. '(h' → logprob: -4.503647804260254
    7. 'diff' → logprob: -4.878647804260254
    8. ' mouvement' → logprob: -5.003647804260254
    9. ' déplacement' → logprob: -5.003647804260254
    10. 'if' → logprob: -5.128647804260254

Token 659: 'ge' (ID: 684)
  Prédit: 'ge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.00032747918157838285
    2. 'ce' → logprob: -8.500327110290527
    3. 'g' → logprob: -10.375327110290527
    4. 'dge' → logprob: -10.875327110290527
    5. 'r' → logprob: -11.000327110290527
    6. '`' → logprob: -11.500327110290527
    7. 'ège' → logprob: -12.500327110290527
    8. 'gge' → logprob: -12.500327110290527
    9. '̀' → logprob: -12.625327110290527
    10. '#' → logprob: -12.750327110290527

Token 660: ' fract' (ID: 37163)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20265696942806244
    2. 'if' → logprob: -2.3276569843292236
    3. ' if' → logprob: -2.5776569843292236
    4. ',' → logprob: -5.7026567459106445
    5. ' or' → logprob: -5.8276567459106445
    6. ' n' → logprob: -6.5776567459106445
    7. '   ' → logprob: -6.9526567459106445
    8. 'n' → logprob: -7.7026567459106445
    9. 'w' → logprob: -9.077656745910645
    10. ' =' → logprob: -9.327656745910645

Token 661: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.2745492160320282
    2. 'ale' → logprob: -1.6495492458343506
    3. 'ique' → logprob: -3.1495492458343506
    4. '   ' → logprob: -6.6495490074157715
    5. 'e' → logprob: -7.2745490074157715
    6. '       ' → logprob: -7.3995490074157715
    7. 'ical' → logprob: -8.02454948425293
    8. 'icale' → logprob: -8.02454948425293
    9. 'def' → logprob: -8.52454948425293
    10. 'é' → logprob: -8.52454948425293

Token 662: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03683508187532425
    2. ' if' → logprob: -3.911835193634033
    3. 'if' → logprob: -4.536835193634033
    4. ',' → logprob: -6.161835193634033
    5. ' or' → logprob: -6.786835193634033
    6. '<|end|>' → logprob: -7.411835193634033
    7. ' =' → logprob: -7.536835193634033
    8. '   ' → logprob: -8.411834716796875
    9. ':' → logprob: -8.786834716796875
    10. '=' → logprob: -9.411834716796875

Token 663: ' chemin' (ID: 45035)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1802518367767334
    2. ' print' → logprob: -1.1802518367767334
    3. '       ' → logprob: -1.4302518367767334
    4. 'print' → logprob: -2.1802518367767334
    5. 'if' → logprob: -3.4302518367767334
    6. 'distance' → logprob: -8.680252075195312
    7. ' distance' → logprob: -8.805252075195312
    8. 'result' → logprob: -9.680252075195312
    9. ' res' → logprob: -9.805252075195312
    10. '#' → logprob: -9.805252075195312

Token 664: ' direct' (ID: 2823)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9238770008087158
    2. ' direct' → logprob: -1.2988770008087158
    3. '=' → logprob: -1.7988770008087158
    4. 'direct' → logprob: -2.298877000808716
    5. '   ' → logprob: -4.423876762390137
    6. ' simple' → logprob: -4.923876762390137
    7. ' minimal' → logprob: -5.173876762390137
    8. 'simple' → logprob: -5.548876762390137
    9. 'possible' → logprob: -5.798876762390137
    10. ' possible' → logprob: -5.798876762390137

Token 665: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04876801744103432
    2. 'if' → logprob: -3.9237680435180664
    3. ' if' → logprob: -4.048768043518066
    4. ' =' → logprob: -5.048768043518066
    5. '=' → logprob: -6.548768043518066
    6. ',' → logprob: -6.673768043518066
    7. '
' → logprob: -8.298768043518066
    8. ':' → logprob: -8.423768043518066
    9. 'print' → logprob: -8.798768043518066
    10. ' or' → logprob: -9.298768043518066

Token 666: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.4418171455617994e-05
    2. 'if' → logprob: -10.625044822692871
    3. ' if' → logprob: -11.125044822692871
    4. '<|end|>' → logprob: -13.375044822692871
    5. '   ' → logprob: -13.500044822692871
    6. ',' → logprob: -14.250044822692871
    7. '```' → logprob: -14.500044822692871
    8. '           ' → logprob: -14.625044822692871
    9. '        
' → logprob: -15.000044822692871
    10. '	' → logprob: -16.125043869018555

Token 667: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16170091927051544
    2. '       ' → logprob: -1.911700963973999
    3. ' if' → logprob: -6.53670072555542
    4. 'print' → logprob: -11.286701202392578
    5. '```' → logprob: -11.661701202392578
    6. '   ' → logprob: -12.536701202392578
    7. '	if' → logprob: -14.786701202392578
    8. '           ' → logprob: -14.911701202392578
    9. 'If' → logprob: -15.786701202392578
    10. '``' → logprob: -16.036701202392578

Token 668: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04962620139122009
    2. ' h' → logprob: -3.049626111984253
    3. ' not' → logprob: -8.049626350402832
    4. 'not' → logprob: -8.299626350402832
    5. 'a' → logprob: -8.674626350402832
    6. '   ' → logprob: -9.174626350402832
    7. '(h' → logprob: -9.549626350402832
    8. 'w' → logprob: -9.674626350402832
    9. ' a' → logprob: -10.799626350402832
    10. ' w' → logprob: -11.799626350402832

Token 669: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6326786875724792
    2. '==' → logprob: -0.7576786875724792
    3. ' ' → logprob: -10.507678985595703
    4. '   ' → logprob: -10.882678985595703
    5. '=' → logprob: -12.507678985595703
    6. ' <' → logprob: -12.507678985595703
    7. '<=' → logprob: -12.882678985595703
    8. ' is' → logprob: -12.882678985595703
    9. ' !=' → logprob: -12.882678985595703
    10. ' <=' → logprob: -13.007678985595703

Token 670: ' w' (ID: 286)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001443035143893212
    2. ' ' → logprob: -9.125144004821777
    3. '1' → logprob: -10.375144004821777
    4. 'w' → logprob: -13.000144004821777
    5. '   ' → logprob: -13.625144004821777
    6. '
' → logprob: -15.937644004821777
    7. '  ' → logprob: -16.125144958496094
    8. '```' → logprob: -16.312644958496094
    9. '=' → logprob: -17.062644958496094
    10. ' w' → logprob: -17.250144958496094

Token 671: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28695595264434814
    2. ' ==' → logprob: -1.4119559526443481
    3. ':' → logprob: -5.286955833435059
    4. '0' → logprob: -8.036955833435059
    5. ' and' → logprob: -8.536955833435059
    6. '=' → logprob: -8.911955833435059
    7. '   ' → logprob: -10.411955833435059
    8. 'and' → logprob: -10.786955833435059
    9. ':
' → logprob: -11.661955833435059
    10. ' or' → logprob: -12.661955833435059

Token 672: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019783570896834135
    2. '1' → logprob: -6.251978397369385
    3. ' ' → logprob: -10.001977920532227
    4. '   ' → logprob: -13.751977920532227
    5. '2' → logprob: -14.751977920532227
    6. '=' → logprob: -15.001977920532227
    7. '-' → logprob: -15.189477920532227
    8. 'h' → logprob: -15.189477920532227
    9. '```' → logprob: -15.251977920532227
    10. '
' → logprob: -15.564477920532227

Token 673: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000491076149046421
    2. '1' → logprob: -7.625491142272949
    3. ' ' → logprob: -13.37549114227295
    4. '
' → logprob: -14.87549114227295
    5. '-' → logprob: -15.43799114227295
    6. '```' → logprob: -15.62549114227295
    7. '   ' → logprob: -15.87549114227295
    8. '=' → logprob: -16.625490188598633
    9. '2' → logprob: -16.687990188598633
    10. '۰' → logprob: -16.812990188598633

Token 674: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6935129761695862
    2. ':
' → logprob: -0.6935129761695862
    3. ':return' → logprob: -8.943512916564941
    4. '       ' → logprob: -9.318512916564941
    5. '           ' → logprob: -9.318512916564941
    6. ':
' → logprob: -9.943512916564941
    7. '   ' → logprob: -12.693512916564941
    8. ' and' → logprob: -13.693512916564941
    9. ' :' → logprob: -14.193512916564941
    10. ':

' → logprob: -14.443512916564941

Token 675: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29595690965652466
    2. '       ' → logprob: -1.5459568500518799
    3. 'print' → logprob: -3.17095685005188
    4. ' print' → logprob: -6.920957088470459
    5. '   ' → logprob: -10.0459566116333
    6. '```' → logprob: -10.7959566116333
    7. '        
' → logprob: -11.1709566116333
    8. '
' → logprob: -11.4209566116333
    9. '            
' → logprob: -11.4209566116333
    10. '               ' → logprob: -11.7959566116333

Token 676: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009700604132376611
    2. '           ' → logprob: -7.250969886779785
    3. ' print' → logprob: -8.500969886779785
    4. '       ' → logprob: -10.000969886779785
    5. '
' → logprob: -12.500969886779785
    6. '	print' → logprob: -12.625969886779785
    7. '            
' → logprob: -13.125969886779785
    8. '
' → logprob: -14.125969886779785
    9. '   ' → logprob: -14.375969886779785
    10. '```' → logprob: -14.875969886779785

Token 677: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.0005340866628102958
    2. 'abs' → logprob: -7.6255340576171875
    3. '((' → logprob: -10.500534057617188
    4. '(' → logprob: -11.250534057617188
    5. '(max' → logprob: -12.500534057617188
    6. ' abs' → logprob: -14.000534057617188
    7. '(((' → logprob: -15.500534057617188
    8. '(int' → logprob: -15.500534057617188
    9. '(-' → logprob: -15.625534057617188
    10. '(pow' → logprob: -15.875534057617188

Token 678: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.079053595662117
    2. '(c' → logprob: -2.5790536403656006
    3. 'a' → logprob: -8.82905387878418
    4. 'c' → logprob: -12.07905387878418
    5. '(' → logprob: -12.32905387878418
    6. '(b' → logprob: -12.70405387878418
    7. '((' → logprob: -12.82905387878418
    8. '(d' → logprob: -13.95405387878418
    9. '(
' → logprob: -14.95405387878418
    10. '   ' → logprob: -16.70405387878418

Token 679: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2523040175437927
    2. ' -' → logprob: -1.5023040771484375
    3. '-c' → logprob: -8.002304077148438
    4. '   ' → logprob: -11.252304077148438
    5. '-d' → logprob: -11.502304077148438
    6. ' ' → logprob: -12.252304077148438
    7. 'd' → logprob: -12.377304077148438
    8. '[' → logprob: -13.002304077148438
    9. 'c' → logprob: -13.877304077148438
    10. ',' → logprob: -14.127304077148438

Token 680: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.4121114822482923e-06
    2. ' d' → logprob: -13.500003814697266
    3. 'a' → logprob: -14.375003814697266
    4. '   ' → logprob: -14.625003814697266
    5. '           ' → logprob: -15.125003814697266
    6. '       ' → logprob: -15.750003814697266
    7. 'c' → logprob: -15.750003814697266
    8. 'b' → logprob: -16.125003814697266
    9. '
' → logprob: -16.500003814697266
    10. '               ' → logprob: -16.625003814697266

Token 681: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008771585416980088
    2. ')+' → logprob: -7.500877380371094
    3. '))' → logprob: -8.625877380371094
    4. '+' → logprob: -9.750877380371094
    5. ' )' → logprob: -9.875877380371094
    6. '   ' → logprob: -11.125877380371094
    7. ' +' → logprob: -11.750877380371094
    8. '),' → logprob: -12.625877380371094
    9. '))
' → logprob: -12.750877380371094
    10. ')
' → logprob: -13.750877380371094

Token 682: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3850930333137512
    2. ' +' → logprob: -1.2600929737091064
    3. ')' → logprob: -3.3850929737091064
    4. ')
' → logprob: -6.8850932121276855
    5. '   ' → logprob: -7.2600932121276855
    6. ')+' → logprob: -9.385092735290527
    7. '       ' → logprob: -9.760092735290527
    8. '),' → logprob: -10.510092735290527
    9. '```' → logprob: -10.510092735290527
    10. '    ' → logprob: -10.760092735290527

Token 683: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.1875571544806007e-05
    2. ' abs' → logprob: -11.375011444091797
    3. '1' → logprob: -15.750011444091797
    4. '(abs' → logprob: -16.625011444091797
    5. '   ' → logprob: -17.625011444091797
    6. '           ' → logprob: -18.375011444091797
    7. '       ' → logprob: -19.500011444091797
    8. '.abs' → logprob: -20.125011444091797
    9. '          ' → logprob: -20.875011444091797
    10. '    ' → logprob: -20.875011444091797

Token 684: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.3856492842023727e-06
    2. 'a' → logprob: -14.000000953674316
    3. '(c' → logprob: -14.875000953674316
    4. '(' → logprob: -15.750000953674316
    5. ')(' → logprob: -20.000001907348633
    6. '(
' → logprob: -20.000001907348633
    7. ' (' → logprob: -20.375001907348633
    8. '(b' → logprob: -20.750001907348633
    9. ')a' → logprob: -20.750001907348633
    10. '((' → logprob: -21.125001907348633

Token 685: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38687393069267273
    2. '-' → logprob: -1.1368739604949951
    3. '-c' → logprob: -13.386874198913574
    4. ' ' → logprob: -13.886874198913574
    5. '[' → logprob: -16.011873245239258
    6. ')' → logprob: -16.261873245239258
    7. 'c' → logprob: -16.261873245239258
    8. '(c' → logprob: -16.886873245239258
    9. '   ' → logprob: -17.261873245239258
    10. '  ' → logprob: -17.386873245239258

Token 686: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.829823102336377e-05
    2. ' c' → logprob: -9.25009822845459
    3. ')c' → logprob: -13.50009822845459
    4. '   ' → logprob: -15.12509822845459
    5. '	c' → logprob: -15.37509822845459
    6. '       ' → logprob: -16.500099182128906
    7. '           ' → logprob: -17.000099182128906
    8. ' ' → logprob: -17.125099182128906
    9. '  ' → logprob: -17.625099182128906
    10. '    ' → logprob: -18.375099182128906

Token 687: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06239874288439751
    2. '))
' → logprob: -2.812398672103882
    3. ')' → logprob: -7.812398910522461
    4. ')
' → logprob: -11.812398910522461
    5. '   ' → logprob: -12.187398910522461
    6. ' ))' → logprob: -12.687398910522461
    7. ')))' → logprob: -12.812398910522461
    8. '       ' → logprob: -12.937398910522461
    9. '))
' → logprob: -13.312398910522461
    10. '),' → logprob: -13.687398910522461

Token 688: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.201422318816185
    2. '           ' → logprob: -1.7014223337173462
    3. 'continue' → logprob: -12.451422691345215
    4. '   ' → logprob: -13.326422691345215
    5. 'else' → logprob: -13.451422691345215
    6. '               ' → logprob: -14.201422691345215
    7. 'elif' → logprob: -15.326422691345215
    8. 'return' → logprob: -15.326422691345215
    9. '	' → logprob: -16.0764217376709
    10. '		' → logprob: -16.2014217376709

Token 689: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02680063433945179
    2. '       ' → logprob: -3.7768006324768066
    3. 'continue' (adapté à ' continue') → logprob: -5.651800632476807
    4. ' continue' → logprob: -10.401801109313965
    5. 'else' → logprob: -12.526801109313965
    6. 'return' → logprob: -13.901801109313965
    7. '   ' → logprob: -13.901801109313965
    8. '               ' → logprob: -14.526801109313965
    9. '		' → logprob: -14.526801109313965
    10. '_continue' → logprob: -15.401801109313965

Token 690: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005413522943854332
    2. '        
' → logprob: -5.75541353225708
    3. '
' → logprob: -6.38041353225708
    4. 'if' → logprob: -9.380413055419922
    5. 'h' → logprob: -9.630413055419922
    6. '```' → logprob: -9.755413055419922
    7. '#' → logprob: -10.005413055419922
    8. 'w' → logprob: -10.255413055419922
    9. '    
' → logprob: -10.630413055419922
    10. '   ' → logprob: -10.630413055419922

Token 691: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09186035394668579
    2. 'res' → logprob: -3.966860294342041
    3. '#' → logprob: -4.091860294342041
    4. 'x' → logprob: -4.341860294342041
    5. 'dist' → logprob: -4.466860294342041
    6. 'if' → logprob: -4.716860294342041
    7. 'r' → logprob: -5.966860294342041
    8. 'dx' → logprob: -5.966860294342041
    9. 'l' → logprob: -6.091860294342041
    10. 'd' → logprob: -6.966860294342041

Token 692: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.458775520324707
    2. 'x' → logprob: -1.833775520324707
    3. 'if' → logprob: -1.958775520324707
    4. 'dist' → logprob: -2.333775520324707
    5. '       ' → logprob: -2.583775520324707
    6. '#' (adapté à ' #') → logprob: -2.958775520324707
    7. 'r' → logprob: -3.333775520324707
    8. 'dx' → logprob: -3.458775520324707
    9. 'h' → logprob: -3.958775520324707
    10. 'pos' → logprob: -4.458775520324707

Token 693: ' On' (ID: 2160)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2709044218063354
    2. 'if' → logprob: -1.6459044218063354
    3. 'x' → logprob: -2.395904541015625
    4. 'dx' → logprob: -2.895904541015625
    5. '#' → logprob: -3.270904541015625
    6. 'ha' → logprob: -3.395904541015625
    7. 'r' → logprob: -3.520904541015625
    8. 'dh' → logprob: -3.645904541015625
    9. 'dist' → logprob: -3.645904541015625
    10. 'diff' → logprob: -3.770904541015625

Token 694: ' veut' (ID: 41653)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8239203095436096
    2. '#' → logprob: -1.5739202499389648
    3. ' =' → logprob: -3.073920249938965
    4. 'x' → logprob: -3.073920249938965
    5. 'n' → logprob: -3.323920249938965
    6. '=' → logprob: -3.573920249938965
    7. 'if' → logprob: -4.073920249938965
    8. 't' → logprob: -4.073920249938965
    9. 's' → logprob: -4.198920249938965
    10. 'pas' → logprob: -4.198920249938965

Token 695: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5661198496818542
    2. '   ' → logprob: -2.191119909286499
    3. 'calcul' → logprob: -2.441119909286499
    4. ' print' → logprob: -3.441119909286499
    5. 'tr' → logprob: -3.566119909286499
    6. 'aff' → logprob: -3.691119909286499
    7. 'min' → logprob: -4.44111967086792
    8. ' calcul' → logprob: -4.56611967086792
    9. '    ' → logprob: -4.69111967086792
    10. 'distance' → logprob: -4.94111967086792

Token 696: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.8097366094589233
    2. ' que' → logprob: -2.309736728668213
    3. 'h' → logprob: -2.559736728668213
    4. ' l' → logprob: -2.559736728668213
    5. '       ' → logprob: -2.684736728668213
    6. 'a' → logprob: -3.684736728668213
    7. ' w' → logprob: -3.684736728668213
    8. ' a' → logprob: -3.809736728668213
    9. 'print' → logprob: -3.809736728668213
    10. ' la' → logprob: -3.809736728668213

Token 697: ' soit' (ID: 17293)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25271695852279663
    2. '<=' → logprob: -2.7527170181274414
    3. '=' → logprob: -2.8777170181274414
    4. '<' → logprob: -2.8777170181274414
    5. '==' → logprob: -4.252717018127441
    6. '>' → logprob: -4.627717018127441
    7. '+=' → logprob: -4.627717018127441
    8. '!=' → logprob: -5.627717018127441
    9. '>=' → logprob: -5.752717018127441
    10. ' <' → logprob: -6.752717018127441

Token 698: ' toujours' (ID: 16867)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.642768144607544
    2. 'max' → logprob: -1.267768144607544
    3. 'w' → logprob: -2.142768144607544
    4. ' min' → logprob: -3.142768144607544
    5. ' max' → logprob: -4.517767906188965
    6. ' w' → logprob: -4.642767906188965
    7. '<=' → logprob: -5.517767906188965
    8. 'h' → logprob: -6.142767906188965
    9. ' h' → logprob: -6.267767906188965
    10. '>=' → logprob: -6.642767906188965

Token 699: ' >=' (ID: 5064)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2047843635082245
    2. '<=' → logprob: -2.204784393310547
    3. 'le' → logprob: -2.829784393310547
    4. 'max' → logprob: -5.079784393310547
    5. '>=' → logprob: -5.079784393310547
    6. 'w' → logprob: -6.954784393310547
    7. ' <=' → logprob: -7.079784393310547
    8. 'la' → logprob: -7.454784393310547
    9. 'l' → logprob: -8.454784393310547
    10. '   ' → logprob: -8.454784393310547

Token 700: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0013309523928910494
    2. ' w' → logprob: -6.751330852508545
    3. '       ' → logprob: -9.126331329345703
    4. '1' → logprob: -10.251331329345703
    5. '   ' → logprob: -11.501331329345703
    6. '           ' → logprob: -12.376331329345703
    7. '0' → logprob: -13.626331329345703
    8. 'max' → logprob: -14.251331329345703
    9. '=' → logprob: -16.251331329345703
    10. ' ' → logprob: -16.376331329345703

Token 701: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010861878283321857
    2. ',' → logprob: -5.635861873626709
    3. '
' → logprob: -5.885861873626709
    4. ' if' → logprob: -6.510861873626709
    5. '<|end|>' → logprob: -6.635861873626709
    6. '        
' → logprob: -7.385861873626709
    7. 'if' → logprob: -8.010862350463867
    8. ' and' → logprob: -8.385862350463867
    9. ' or' → logprob: -9.510862350463867
    10. '.' → logprob: -9.885862350463867

Token 702: ' perm' (ID: 5961)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09892187267541885
    2. 'val' → logprob: -2.973921775817871
    3. '1' → logprob: -4.973921775817871
    4. 't' → logprob: -5.098921775817871
    5. 'ha' → logprob: -5.098921775817871
    6. '#' → logprob: -5.348921775817871
    7. '```' → logprob: -5.848921775817871
    8. 'abs' → logprob: -6.098921775817871
    9. 'max' → logprob: -6.473921775817871
    10. '   ' → logprob: -6.598921775817871

Token 703: 'ut' (ID: 339)
  Prédit: 'ett'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ett' → logprob: -0.6150126457214355
    2. 'ut' → logprob: -0.8650126457214355
    3. 'utt' → logprob: -4.2400126457214355
    4. 'ais' → logprob: -4.4900126457214355
    5. 'utation' → logprob: -4.6150126457214355
    6. 'uter' → logprob: -7.8650126457214355
    7. 'u' → logprob: -7.9900126457214355
    8. 'et' → logprob: -8.115013122558594
    9. 'a' → logprob: -8.365013122558594
    10. 'mut' → logprob: -8.740013122558594

Token 704: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.03741251304745674
    2. 'er' → logprob: -3.662412405014038
    3. 'ation' → logprob: -4.662412643432617
    4. 'e' → logprob: -6.912412643432617
    5. 'ing' → logprob: -8.787412643432617
    6. 'ette' → logprob: -9.037412643432617
    7. 'é' → logprob: -9.287412643432617
    8. 'a' → logprob: -9.787412643432617
    9. 'age' → logprob: -10.287412643432617
    10. 'ais' → logprob: -11.037412643432617

Token 705: ' si' (ID: 1784)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3626840114593506
    2. 'a' → logprob: -1.4876840114593506
    3. '       ' → logprob: -2.9876840114593506
    4. 'if' → logprob: -4.11268424987793
    5. '(h' → logprob: -5.11268424987793
    6. 'h' → logprob: -6.48768424987793
    7. ' a' → logprob: -6.73768424987793
    8. '           ' → logprob: -7.61268424987793
    9. ' if' → logprob: -7.73768424987793
    10. 'w' → logprob: -7.86268424987793

Token 706: ' besoin' (ID: 27703)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3624776303768158
    2. 'h' → logprob: -1.8624776601791382
    3. ' w' → logprob: -2.2374775409698486
    4. ' h' → logprob: -3.2374775409698486
    5. '(w' → logprob: -6.362477779388428
    6. ' nécessaire' → logprob: -7.737477779388428
    7. ' necessary' → logprob: -8.61247730255127
    8. '(h' → logprob: -8.86247730255127
    9. 'not' → logprob: -9.86247730255127
    10. 'necessary' → logprob: -9.98747730255127

Token 707: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11423168331384659
    2. ' if' → logprob: -2.864231586456299
    3. 'if' → logprob: -2.989231586456299
    4. '        ' → logprob: -8.739232063293457
    5. '<|end|>' → logprob: -8.864232063293457
    6. '        
' → logprob: -9.364232063293457
    7. '
' → logprob: -9.989232063293457
    8. ',' → logprob: -9.989232063293457
    9. '   ' → logprob: -11.114232063293457
    10. '           ' → logprob: -11.239232063293457

Token 708: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033052158541977406
    2. '<|end|>' → logprob: -6.378305435180664
    3. '	' → logprob: -7.503305435180664
    4. 'if' → logprob: -7.753305435180664
    5. ' if' → logprob: -8.003305435180664
    6. '        
' → logprob: -9.753305435180664
    7. '   ' → logprob: -9.878305435180664
    8. '```' → logprob: -10.378305435180664
    9. '	if' → logprob: -10.503305435180664
    10. '
' → logprob: -10.628305435180664

Token 709: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.725379467010498
    2. '       ' → logprob: -0.975379467010498
    3. ' if' → logprob: -1.975379467010498
    4. '	if' → logprob: -9.975379943847656
    5. '	' → logprob: -11.100379943847656
    6. '   ' → logprob: -11.725379943847656
    7. '        ' → logprob: -11.975379943847656
    8. '           ' → logprob: -12.350379943847656
    9. '```' → logprob: -12.475379943847656
    10. '    ' → logprob: -12.725379943847656

Token 710: ' h' (ID: 312)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.22664636373519897
    2. 'h' → logprob: -1.6016464233398438
    3. ' w' → logprob: -6.976646423339844
    4. ' h' → logprob: -8.226646423339844
    5. '(w' → logprob: -10.726646423339844
    6. '(h' → logprob: -12.351646423339844
    7. '   ' → logprob: -13.226646423339844
    8. '	h' → logprob: -14.414146423339844
    9. '	w' → logprob: -14.414146423339844
    10. ' ' → logprob: -15.101646423339844

Token 711: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5794126391410828
    2. '<' → logprob: -0.8294126391410828
    3. ',' → logprob: -5.704412460327148
    4. '<w' → logprob: -9.204412460327148
    5. ' ' → logprob: -11.579412460327148
    6. ',<' → logprob: -11.829412460327148
    7. '[' → logprob: -12.579412460327148
    8. '<
' → logprob: -12.829412460327148
    9. ' >' → logprob: -12.829412460327148
    10. ' ,' → logprob: -13.079412460327148

Token 712: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0003360582049936056
    2. ' w' → logprob: -8.000335693359375
    3. '=' → logprob: -14.500335693359375
    4. '	w' → logprob: -16.750335693359375
    5. '=w' → logprob: -17.375335693359375
    6. '   ' → logprob: -18.125335693359375
    7. ' ' → logprob: -18.750335693359375
    8. '  ' → logprob: -19.375335693359375
    9. '
' → logprob: -20.375335693359375
    10. '    ' → logprob: -20.750335693359375

Token 713: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001037691137753427
    2. '           ' → logprob: -7.62603759765625
    3. ',
' → logprob: -8.25103759765625
    4. '       ' → logprob: -9.00103759765625
    5. ' ,' → logprob: -10.25103759765625
    6. ',h' → logprob: -10.50103759765625
    7. '=' → logprob: -10.87603759765625
    8. ',a' → logprob: -11.00103759765625
    9. ':
' → logprob: -11.12603759765625
    10. ':' → logprob: -11.37603759765625

Token 714: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0681292712688446
    2. 'a' → logprob: -3.318129301071167
    3. '       ' → logprob: -4.318129062652588
    4. 'h' → logprob: -4.693129062652588
    5. '	       ' → logprob: -5.693129062652588
    6. ' a' → logprob: -6.693129062652588
    7. ' h' → logprob: -6.818129062652588
    8. '		' → logprob: -8.193129539489746
    9. '   ' → logprob: -8.693129539489746
    10. ',' → logprob: -8.818129539489746

Token 715: ' h' (ID: 312)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007762669585645199
    2. 'h' (adapté à ' h') → logprob: -5.507762432098389
    3. '           ' → logprob: -5.632762432098389
    4. ' a' → logprob: -9.382762908935547
    5. '   ' → logprob: -12.132762908935547
    6. '(a' → logprob: -12.882762908935547
    7. '	a' → logprob: -13.007762908935547
    8. '               ' → logprob: -13.632762908935547
    9. 't' → logprob: -13.882762908935547
    10. ' h' → logprob: -14.382762908935547

Token 716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019379158038645983
    2. ',w' → logprob: -6.2519378662109375
    3. ',h' → logprob: -12.626937866210938
    4. ' ,' → logprob: -12.876937866210938
    5. 'w' → logprob: -12.876937866210938
    6. ',b' → logprob: -15.251937866210938
    7. ',a' → logprob: -15.876937866210938
    8. ',c' → logprob: -16.126937866210938
    9. '=' → logprob: -16.626937866210938
    10. ',
' → logprob: -17.001937866210938

Token 717: ' a' (ID: 261)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.018151583150029182
    2. ' w' → logprob: -4.018151760101318
    3. 'h' → logprob: -13.64315128326416
    4. '   ' → logprob: -15.26815128326416
    5. '	w' → logprob: -16.393152236938477
    6. '    ' → logprob: -16.768152236938477
    7. '           ' → logprob: -17.018152236938477
    8. '  ' → logprob: -17.893152236938477
    9. ' h' → logprob: -18.393152236938477
    10. ' ' → logprob: -19.143152236938477

Token 718: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0039803278632462025
    2. 'b' → logprob: -6.5039801597595215
    3. 'w' → logprob: -6.6289801597595215
    4. ',b' → logprob: -7.6289801597595215
    5. '=' → logprob: -7.7539801597595215
    6. 'a' → logprob: -9.50398063659668
    7. 'h' → logprob: -10.25398063659668
    8. 'c' → logprob: -10.25398063659668
    9. ',h' → logprob: -10.25398063659668
    10. ',w' → logprob: -10.62898063659668

Token 719: ' b' (ID: 287)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1276169866323471
    2. 'b' → logprob: -2.1276168823242188
    3. 'c' → logprob: -7.877616882324219
    4. 'i' → logprob: -8.752616882324219
    5. ' w' → logprob: -9.377616882324219
    6. '   ' → logprob: -10.752616882324219
    7. ' b' → logprob: -11.002616882324219
    8. 'h' → logprob: -11.252616882324219
    9. 'a' → logprob: -11.877616882324219
    10. '       ' → logprob: -12.502616882324219

Token 720: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055312804877758026
    2. '=' → logprob: -2.9303128719329834
    3. 'w' → logprob: -8.180313110351562
    4. ' =' → logprob: -9.055313110351562
    5. '=w' → logprob: -11.180313110351562
    6. ',w' → logprob: -11.430313110351562
    7. ' ,' → logprob: -12.680313110351562
    8. 'h' → logprob: -13.055313110351562
    9. ' w' → logprob: -14.555313110351562
    10. 'c' → logprob: -14.805313110351562

Token 721: ' c' (ID: 274)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00992360059171915
    2. 'c' → logprob: -4.634923458099365
    3. '   ' → logprob: -9.509923934936523
    4. ' w' → logprob: -9.759923934936523
    5. '=' → logprob: -11.009923934936523
    6. 'h' → logprob: -11.634923934936523
    7. '       ' → logprob: -13.009923934936523
    8. '    ' → logprob: -13.009923934936523
    9. '  ' → logprob: -13.384923934936523
    10. ' c' → logprob: -13.884923934936523

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018301531672477722
    2. '=' → logprob: -4.018301486968994
    3. ' =' → logprob: -9.643301963806152
    4. 'w' → logprob: -9.893301963806152
    5. ',w' → logprob: -10.518301963806152
    6. '=w' → logprob: -12.393301963806152
    7. ' ,' → logprob: -12.768301963806152
    8. 'd' → logprob: -14.143301963806152
    9. 'h' → logprob: -15.768301963806152
    10. '   ' → logprob: -15.893301963806152

Token 723: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1272186040878296
    2. 'w' → logprob: -2.127218723297119
    3. ' d' → logprob: -8.627218246459961
    4. ' w' → logprob: -9.252218246459961
    5. 'h' → logprob: -11.627218246459961
    6. '   ' → logprob: -12.127218246459961
    7. '  ' → logprob: -15.377218246459961
    8. '	d' → logprob: -15.627218246459961
    9. '       ' → logprob: -15.627218246459961
    10. '	w' → logprob: -16.25221824645996

Token 724: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16169078648090363
    2. ',' → logprob: -1.9116908311843872
    3. ' =' → logprob: -6.536690711975098
    4. 'h' → logprob: -12.036690711975098
    5. '=h' → logprob: -12.161690711975098
    6. ',h' → logprob: -13.036690711975098
    7. ' ,' → logprob: -13.286690711975098
    8. '   ' → logprob: -15.411690711975098
    9. 'w' → logprob: -15.661690711975098
    10. '_,' → logprob: -15.911690711975098

Token 725: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0009244420798495412
    2. ' w' → logprob: -7.000924587249756
    3. '   ' → logprob: -11.375924110412598
    4. '(w' → logprob: -14.250924110412598
    5. 'h' → logprob: -14.750924110412598
    6. '  ' → logprob: -15.750924110412598
    7. '	w' → logprob: -16.000925064086914
    8. '    ' → logprob: -16.125925064086914
    9. ' ' → logprob: -16.250925064086914
    10. 'm' → logprob: -17.000925064086914

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.204720582696609e-05
    2. ' ,' → logprob: -10.250052452087402
    3. 'w' → logprob: -12.250052452087402
    4. ',h' → logprob: -12.375052452087402
    5. ',w' → logprob: -12.500052452087402
    6. 'h' → logprob: -13.625052452087402
    7. 'a' → logprob: -13.625052452087402
    8. '   ' → logprob: -14.750052452087402
    9. ',a' → logprob: -14.750052452087402
    10. ',b' → logprob: -15.125052452087402

Token 727: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0010563877876847982
    2. ' c' → logprob: -7.00105619430542
    3. 'a' → logprob: -9.876056671142578
    4. '   ' → logprob: -10.001056671142578
    5. 'b' → logprob: -10.126056671142578
    6. 'd' → logprob: -12.876056671142578
    7. ' ' → logprob: -13.001056671142578
    8. 'w' → logprob: -13.876056671142578
    9. '       ' → logprob: -14.251056671142578
    10. '  ' → logprob: -14.501056671142578

Token 728: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.56364209135063e-05
    2. 'c' → logprob: -10.250065803527832
    3. ',c' → logprob: -10.875065803527832
    4. ' ,' → logprob: -12.000065803527832
    5. 'a' → logprob: -12.375065803527832
    6. ',a' → logprob: -14.375065803527832
    7. ',
' → logprob: -17.000064849853516
    8. '   ' → logprob: -17.125064849853516
    9. ' c' → logprob: -17.250064849853516
    10. 'd' → logprob: -18.000064849853516

Token 729: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47429248690605164
    2. 'a' → logprob: -0.974292516708374
    3. 'd' → logprob: -9.224292755126953
    4. ' c' → logprob: -9.224292755126953
    5. ' a' → logprob: -10.974292755126953
    6. '   ' → logprob: -13.849292755126953
    7. 'h' → logprob: -16.474292755126953
    8. ' ' → logprob: -16.849292755126953
    9. 'w' → logprob: -17.099292755126953
    10. '  ' → logprob: -17.224292755126953

Token 730: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002155018737539649
    2. 'c' → logprob: -6.37715482711792
    3. ',c' → logprob: -7.75215482711792
    4. ' ,' → logprob: -10.752155303955078
    5. ' c' → logprob: -14.127155303955078
    6. ',
' → logprob: -14.252155303955078
    7. 'd' → logprob: -16.877155303955078
    8. ',d' → logprob: -17.252155303955078
    9. '   ' → logprob: -17.377155303955078
    10. ',
' → logprob: -18.127155303955078

Token 731: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.9153885558771435e-06
    2. ' d' → logprob: -12.125005722045898
    3. 'c' → logprob: -14.750005722045898
    4. 'w' → logprob: -16.7500057220459
    5. '	d' → logprob: -17.8750057220459
    6. '   ' → logprob: -18.1250057220459
    7. 'a' → logprob: -19.0000057220459
    8. '  ' → logprob: -19.7500057220459
    9. ',d' → logprob: -20.0000057220459
    10. '(d' → logprob: -20.0000057220459

Token 732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.040457421680912e-05
    2. 'c' → logprob: -9.875070571899414
    3. ',c' → logprob: -11.000070571899414
    4. ' ,' → logprob: -13.125070571899414
    5. ',
' → logprob: -16.750070571899414
    6. ' c' → logprob: -17.000070571899414
    7. '<|end|>' → logprob: -19.000070571899414
    8. ',\
' → logprob: -19.125070571899414
    9. 'C' → logprob: -19.625070571899414
    10. ' ' → logprob: -19.875070571899414

Token 733: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.749814019713085e-06
    2. ' c' → logprob: -13.000006675720215
    3. '<|end|>' → logprob: -13.250006675720215
    4. '   ' → logprob: -13.375006675720215
    5. '  ' → logprob: -15.000006675720215
    6. '	c' → logprob: -15.375006675720215
    7. '_c' → logprob: -15.625006675720215
    8. ')c' → logprob: -16.00000762939453
    9. 'с' → logprob: -16.50000762939453
    10. 'C' → logprob: -17.12500762939453

Token 734: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6971539855003357
    2. '<|end|>' → logprob: -0.6971539855003357
    3. '<|end|>' → logprob: -5.9471540451049805
    4. '           ' → logprob: -7.6971540451049805
    5. '
' → logprob: -8.19715404510498
    6. 'continue' → logprob: -8.57215404510498
    7. '        ' → logprob: -9.32215404510498
    8. '        
' → logprob: -9.94715404510498
    9. ',' → logprob: -10.19715404510498
    10. 'return' → logprob: -10.32215404510498

Token 735: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43833741545677185
    2. '<|end|>' → logprob: -1.1883374452590942
    3. ')' → logprob: -4.688337326049805
    4. '\t' → logprob: -4.938337326049805
    5. '\' → logprob: -5.188337326049805
    6. '   ' → logprob: -5.438337326049805
    7. '[' → logprob: -5.813337326049805
    8. '\n' → logprob: -5.813337326049805
    9. '+' → logprob: -6.063337326049805
    10. ' ' → logprob: -6.438337326049805

Token 736: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7678616046905518
    2. 'dx' → logprob: -2.1428616046905518
    3. 'r' → logprob: -2.5178616046905518
    4. 'for' → logprob: -2.7678616046905518
    5. 'diff' → logprob: -2.7678616046905518
    6. '#' (adapté à ' #') → logprob: -2.8928616046905518
    7. 'res' → logprob: -3.3928616046905518
    8. 'p' → logprob: -3.5178616046905518
    9. 'if' → logprob: -3.5178616046905518
    10. 'h' → logprob: -3.6428616046905518

Token 737: ' i' (ID: 575)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.4389684200286865
    2. 'diff' → logprob: -1.9389684200286865
    3. 'r' → logprob: -2.1889684200286865
    4. 'x' → logprob: -2.4389684200286865
    5. 'dx' → logprob: -2.6889684200286865
    6. 'v' → logprob: -3.1889684200286865
    7. 'dist' → logprob: -3.8139684200286865
    8. 'if' → logprob: -3.8139684200286865
    9. 'd' → logprob: -3.8139684200286865
    10. 'p' → logprob: -3.9389684200286865

Token 738: ' représente' (ID: 88912)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4257051348686218
    2. 'f' → logprob: -1.5507051944732666
    3. '=' → logprob: -2.4257051944732666
    4. 'n' → logprob: -3.4257051944732666
    5. 'for' → logprob: -5.3007049560546875
    6. 'nt' → logprob: -6.1757049560546875
    7. '_' → logprob: -6.8007049560546875
    8. 'nd' → logprob: -6.9257049560546875
    9. 'm' → logprob: -7.5507049560546875
    10. '#' → logprob: -7.5507049560546875

Token 739: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.29458481073379517
    2. '0' → logprob: -1.7945847511291504
    3. ' h' → logprob: -2.7945847511291504
    4. ' ' → logprob: -4.66958475112915
    5. '30' → logprob: -4.79458475112915
    6. '1' → logprob: -5.29458475112915
    7. 'i' → logprob: -6.29458475112915
    8. 'max' → logprob: -7.66958475112915
    9. ' i' → logprob: -8.044585227966309
    10. 'm' → logprob: -8.544585227966309

Token 740: ' taille' (ID: 41644)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4825023412704468
    2. '0' → logprob: -1.6075023412704468
    3. ' next' → logprob: -2.7325024604797363
    4. 'next' → logprob: -3.2325024604797363
    5. 'i' → logprob: -3.6075024604797363
    6. ' h' → logprob: -3.9825024604797363
    7. 'niveau' → logprob: -4.482502460479736
    8. '1' → logprob: -5.482502460479736
    9. 'n' → logprob: -5.732502460479736
    10. ' i' → logprob: -6.107502460479736

Token 741: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3181018531322479
    2. '=' → logprob: -1.3181018829345703
    3. '   ' → logprob: -5.94310188293457
    4. ',' → logprob: -7.44310188293457
    5. 's' → logprob: -7.81810188293457
    6. 'de' → logprob: -8.06810188293457
    7. 'def' → logprob: -8.81810188293457
    8. 'n' → logprob: -9.19310188293457
    9. '    ' → logprob: -9.69310188293457
    10. ' ' → logprob: -9.81810188293457

Token 742: ' la' (ID: 557)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10915929824113846
    2. ' ' → logprob: -3.484159231185913
    3. '1' → logprob: -3.859159231185913
    4. 'l' → logprob: -3.984159231185913
    5. ' la' → logprob: -4.234159469604492
    6. 'la' → logprob: -4.984159469604492
    7. ' l' → logprob: -5.609159469604492
    8. 'h' → logprob: -6.234159469604492
    9. ' h' → logprob: -6.859159469604492
    10. '2' → logprob: -7.234159469604492

Token 743: ' subdivision' (ID: 117101)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7225694060325623
    2. 'case' → logprob: -1.347569465637207
    3. 'plus' → logprob: -2.597569465637207
    4. 'pas' → logprob: -3.222569465637207
    5. ' ' → logprob: -3.472569465637207
    6. '2' → logprob: -3.597569465637207
    7. ' case' → logprob: -3.722569465637207
    8. '1' → logprob: -4.722569465637207
    9. 'zone' → logprob: -4.847569465637207
    10. 'step' → logprob: -5.097569465637207

Token 744: ' cour' (ID: 2871)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4968155324459076
    2. '=' → logprob: -0.99681556224823
    3. '   ' → logprob: -4.6218156814575195
    4. '       ' → logprob: -4.8718156814575195
    5. ' i' → logprob: -6.4968156814575195
    6. 'i' → logprob: -6.4968156814575195
    7. ',' → logprob: -7.1218156814575195
    8. '=i' → logprob: -7.4968156814575195
    9. 'for' → logprob: -8.87181568145752
    10. 's' → logprob: -9.24681568145752

Token 745: 'ante' (ID: 2116)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.43747010827064514
    2. 'ante' → logprob: -1.3124700784683228
    3. 'b' → logprob: -3.3124701976776123
    4. 'onne' → logprob: -3.9374701976776123
    5. 'e' → logprob: -4.312469959259033
    6. 'ant' → logprob: -4.562469959259033
    7. 'te' → logprob: -5.812469959259033
    8. 'r' → logprob: -6.437469959259033
    9. '3' → logprob: -7.687469959259033
    10. '#' → logprob: -9.687470436096191

Token 746: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4806119203567505
    2. '   ' → logprob: -1.6056119203567505
    3. '=' → logprob: -2.230611801147461
    4. ' i' → logprob: -2.980611801147461
    5. ' for' → logprob: -4.855611801147461
    6. '       ' → logprob: -5.480611801147461
    7. 'i' → logprob: -5.605611801147461
    8. 'for' → logprob: -5.980611801147461
    9. ',' → logprob: -6.230611801147461
    10. '    ' → logprob: -7.730611801147461

Token 747: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8176087141036987
    2. ' =' → logprob: -1.0676087141036987
    3. '       ' → logprob: -1.9426087141036987
    4. ' for' → logprob: -3.6926088333129883
    5. '=' → logprob: -3.8176088333129883
    6. ' i' → logprob: -4.192608833312988
    7. 'for' → logprob: -5.192608833312988
    8. 'i' → logprob: -6.317608833312988
    9. ',' → logprob: -6.817608833312988
    10. '    ' → logprob: -8.692608833312988

Token 748: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.009779583662748337
    2. '       ' → logprob: -5.634779453277588
    3. '   ' → logprob: -5.759779453277588
    4. ' i' → logprob: -6.384779453277588
    5. 'size' → logprob: -7.134779453277588
    6. 'for' → logprob: -8.009779930114746
    7. 's' → logprob: -9.509779930114746
    8. 'n' → logprob: -11.134779930114746
    9. 'sz' → logprob: -11.509779930114746
    10. ' size' → logprob: -11.634779930114746

Token 749: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932222843170166
    2. ' =' → logprob: -0.6932222843170166
    3. ',' → logprob: -9.693222045898438
    4. '   ' → logprob: -12.943222045898438
    5. 'n' → logprob: -13.318222045898438
    6. ' ' → logprob: -13.568222045898438
    7. 's' → logprob: -13.568222045898438
    8. 't' → logprob: -13.818222045898438
    9. 'w' → logprob: -14.318222045898438
    10. '=i' → logprob: -14.318222045898438

Token 750: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.77104252576828
    2. 'h' → logprob: -1.0210425853729248
    3. '0' → logprob: -1.8960425853729248
    4. '1' → logprob: -4.396042346954346
    5. '10' → logprob: -5.146042346954346
    6. '30' → logprob: -5.771042346954346
    7. '2' → logprob: -7.146042346954346
    8. 'pow' → logprob: -7.146042346954346
    9. '(h' → logprob: -7.271042346954346
    10. 'max' → logprob: -7.646042346954346

Token 751: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.37900421023368835
    2. 'h' → logprob: -1.6290042400360107
    3. '0' → logprob: -2.5040042400360107
    4. '1' → logprob: -4.379004001617432
    5. '30' → logprob: -5.004004001617432
    6. '10' → logprob: -5.129004001617432
    7. 'max' → logprob: -5.129004001617432
    8. '2' → logprob: -6.629004001617432
    9. 'pow' → logprob: -6.754004001617432
    10. 'min' → logprob: -7.129004001617432

Token 752: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.012660447508096695
    2. ' **' → logprob: -4.387660503387451
    3. 'h' → logprob: -9.387660026550293
    4. '*h' → logprob: -10.137660026550293
    5. ' h' → logprob: -12.137660026550293
    6. '*' → logprob: -12.262660026550293
    7. '
' → logprob: -12.387660026550293
    8. '```' → logprob: -12.887660026550293
    9. 'i' → logprob: -13.262660026550293
    10. ' ' → logprob: -13.387660026550293

Token 753: 'h' (ID: 71)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.16082324087619781
    2. 'h' → logprob: -1.9108232259750366
    3. '(' → logprob: -8.160822868347168
    4. '(w' → logprob: -9.035822868347168
    5. '(max' → logprob: -9.910822868347168
    6. 'w' → logprob: -10.160822868347168
    7. 'max' → logprob: -10.535822868347168
    8. ' (' → logprob: -10.660822868347168
    9. '((' → logprob: -11.910822868347168
    10. '<h' → logprob: -12.285822868347168

Token 754: ' //' (ID: 602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 755: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08898428082466125
    2. '2' → logprob: -2.463984251022339
    3. ' ' → logprob: -10.588984489440918
    4. '1' → logprob: -11.963984489440918
    5. '   ' → logprob: -12.463984489440918
    6. '9' → logprob: -13.088984489440918
    7. '```' → logprob: -13.213984489440918
    8. '  ' → logprob: -13.338984489440918
    9. '4' → logprob: -13.463984489440918
    10. '6' → logprob: -14.338984489440918

Token 756: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.008683236315846443
    2. '2' → logprob: -4.758683204650879
    3. '1' → logprob: -9.883683204650879
    4. ' ' → logprob: -11.883683204650879
    5. '   ' → logprob: -12.758683204650879
    6. '```' → logprob: -13.258683204650879
    7. '9' → logprob: -13.508683204650879
    8. '4' → logprob: -14.133683204650879
    9. '  ' → logprob: -14.133683204650879
    10. '=' → logprob: -14.508683204650879

Token 757: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 758: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5432965755462646
    2. ' while' → logprob: -1.4182965755462646
    3. '   ' → logprob: -2.9182965755462646
    4. '
' → logprob: -2.9182965755462646
    5. 'i' → logprob: -3.5432965755462646
    6. ' i' → logprob: -4.543296813964844
    7. '       ' → logprob: -4.918296813964844
    8. '<|end|>' → logprob: -5.668296813964844
    9. '```' → logprob: -5.793296813964844
    10. '	while' → logprob: -6.293296813964844

Token 759: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06631592661142349
    2. ' while' → logprob: -3.3163158893585205
    3. 'i' → logprob: -3.8163158893585205
    4. '   ' → logprob: -5.6913161277771
    5. '       ' → logprob: -7.1913161277771
    6. 'w' → logprob: -7.5663161277771
    7. ' i' → logprob: -8.191315650939941
    8. 'if' → logprob: -9.066315650939941
    9. 'n' → logprob: -9.191315650939941
    10. 't' → logprob: -9.441315650939941

Token 760: ' x' (ID: 1215)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.17483855783939362
    2. 'dx' → logprob: -2.6748385429382324
    3. 'x' → logprob: -3.5498385429382324
    4. 'if' → logprob: -4.049838542938232
    5. 'res' → logprob: -4.799838542938232
    6. 'dist' → logprob: -4.799838542938232
    7. 'diff' → logprob: -4.924838542938232
    8. 'd' → logprob: -6.049838542938232
    9. 'i' → logprob: -6.299838542938232
    10. 'delta' → logprob: -6.299838542938232

Token 761: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.619651198387146
    2. ' =' → logprob: -1.369651198387146
    3. ',' → logprob: -1.994651198387146
    4. '1' → logprob: -4.1196513175964355
    5. '0' → logprob: -4.2446513175964355
    6. 'i' → logprob: -4.6196513175964355
    7. 'x' → logprob: -4.8696513175964355
    8. 'a' → logprob: -4.9946513175964355
    9. 's' → logprob: -5.1196513175964355
    10. '_' → logprob: -6.4946513175964355

Token 762: ' le' (ID: 505)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7701759934425354
    2. 'a' → logprob: -1.3951759338378906
    3. 'abs' → logprob: -2.8951759338378906
    4. ' (' → logprob: -2.8951759338378906
    5. '(i' → logprob: -3.5201759338378906
    6. '(' → logprob: -3.5201759338378906
    7. 'i' → logprob: -3.7701759338378906
    8. '0' → logprob: -4.145175933837891
    9. 'min' → logprob: -4.395175933837891
    10. '(s' → logprob: -4.395175933837891

Token 763: ' centre' (ID: 13268)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.56812983751297
    2. 'min' → logprob: -1.9431297779083252
    3. 'a' → logprob: -2.318129777908325
    4. 'abs' → logprob: -3.318129777908325
    5. 'max' → logprob: -3.443129777908325
    6. '(c' → logprob: -3.943129777908325
    7. '((' → logprob: -3.943129777908325
    8. '0' → logprob: -4.318130016326904
    9. '(min' → logprob: -4.443130016326904
    10. '3' → logprob: -4.443130016326904

Token 764: ' relatif' (ID: 154784)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46180158853530884
    2. ' =' → logprob: -1.086801528930664
    3. 'x' → logprob: -3.586801528930664
    4. ',' → logprob: -5.586801528930664
    5. '_x' → logprob: -7.711801528930664
    6. '_' → logprob: -8.336801528930664
    7. ' x' → logprob: -9.086801528930664
    8. 'i' → logprob: -9.586801528930664
    9. '   ' → logprob: -9.836801528930664
    10. 's' → logprob: -10.086801528930664

Token 765: ' du' (ID: 1462)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055238693952560425
    2. ' =' → logprob: -3.305238723754883
    3. 'x' → logprob: -4.180238723754883
    4. ',' → logprob: -6.555238723754883
    5. 'i' → logprob: -9.055238723754883
    6. '_' → logprob: -9.680238723754883
    7. '_x' → logprob: -9.930238723754883
    8. '   ' → logprob: -10.430238723754883
    9. '       ' → logprob: -11.055238723754883
    10. 's' → logprob: -11.180238723754883

Token 766: ' bloc' (ID: 51218)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4281744062900543
    2. 'bloc' → logprob: -1.803174376487732
    3. '(' → logprob: -3.1781744956970215
    4. '(i' → logprob: -3.4281744956970215
    5. 'cube' → logprob: -4.0531744956970215
    6. 'block' → logprob: -4.3031744956970215
    7. 'x' → logprob: -4.4281744956970215
    8. 'c' → logprob: -4.4281744956970215
    9. 'a' → logprob: -4.5531744956970215
    10. '(a' → logprob: -4.9281744956970215

Token 767: ' horizontal' (ID: 25511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13019847869873047
    2. ' =' → logprob: -2.2551984786987305
    3. 'x' → logprob: -4.1301984786987305
    4. 'i' → logprob: -7.6301984786987305
    5. ',' → logprob: -8.00519847869873
    6. ' x' → logprob: -9.50519847869873
    7. ' i' → logprob: -9.63019847869873
    8. '=i' → logprob: -10.13019847869873
    9. '   ' → logprob: -10.75519847869873
    10. '_' → logprob: -10.88019847869873

Token 768: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20924967527389526
    2. ' =' → logprob: -1.70924973487854
    3. 'x' → logprob: -5.834249496459961
    4. '_' → logprob: -6.209249496459961
    5. '-' → logprob: -6.959249496459961
    6. ',' → logprob: -7.334249496459961
    7. ' -' → logprob: -7.959249496459961
    8. '+' → logprob: -8.209249496459961
    9. '#' → logprob: -8.959249496459961
    10. 'i' → logprob: -9.084249496459961

Token 769: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4305957853794098
    2. ' =' → logprob: -1.0555957555770874
    3. 'x' → logprob: -7.055595874786377
    4. ',' → logprob: -7.055595874786377
    5. '   ' → logprob: -9.180595397949219
    6. ' x' → logprob: -10.805595397949219
    7. 'i' → logprob: -11.430595397949219
    8. '       ' → logprob: -11.555595397949219
    9. '    ' → logprob: -12.680595397949219
    10. ' i' → logprob: -12.680595397949219

Token 770: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0007119550718925893
    2. ' x' → logprob: -7.375711917877197
    3. '       ' → logprob: -9.875712394714355
    4. '   ' → logprob: -11.250712394714355
    5. 'i' → logprob: -11.375712394714355
    6. 'a' → logprob: -13.500712394714355
    7. '	x' → logprob: -13.500712394714355
    8. '           ' → logprob: -14.125712394714355
    9. 'j' → logprob: -14.125712394714355
    10. '=' → logprob: -14.250712394714355

Token 771: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03832972049713135
    2. ' =' → logprob: -3.288329601287842
    3. ',' → logprob: -8.163330078125
    4. '=i' → logprob: -13.913330078125
    5. '	' → logprob: -14.788330078125
    6. '   ' → logprob: -14.788330078125
    7. '=int' → logprob: -15.288330078125
    8. ',i' → logprob: -15.288330078125
    9. 'x' → logprob: -15.413330078125
    10. ' ,' → logprob: -15.913330078125

Token 772: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.429344892501831
    2. '(' → logprob: -1.554344892501831
    3. 'a' → logprob: -1.804344892501831
    4. '(a' → logprob: -2.304344892501831
    5. 'i' → logprob: -2.429344892501831
    6. 's' → logprob: -2.554344892501831
    7. '(i' → logprob: -2.679344892501831
    8. '(s' → logprob: -3.929344892501831
    9. '((' → logprob: -4.55434513092041
    10. '2' → logprob: -4.67934513092041

Token 773: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3409368991851807
    2. 's' → logprob: -1.5909368991851807
    3. '(' → logprob: -1.7159368991851807
    4. 'a' → logprob: -2.2159368991851807
    5. '(a' → logprob: -2.5909368991851807
    6. '(i' → logprob: -2.7159368991851807
    7. 'i' → logprob: -3.0909368991851807
    8. '(s' → logprob: -3.4659368991851807
    9. '((' → logprob: -4.215936660766602
    10. '2' → logprob: -5.215936660766602

Token 774: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25731173157691956
    2. '*i' → logprob: -2.0073118209838867
    3. ' *' → logprob: -2.3823118209838867
    4. '*(' → logprob: -9.382311820983887
    5. 'i' → logprob: -10.382311820983887
    6. '+' → logprob: -10.382311820983887
    7. '**' → logprob: -11.757311820983887
    8. '#' → logprob: -11.882311820983887
    9. '*x' → logprob: -12.632311820983887
    10. ' ' → logprob: -12.632311820983887

Token 775: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.019199352711439133
    2. '(i' → logprob: -4.144199371337891
    3. '(' → logprob: -5.894199371337891
    4. '3' → logprob: -8.01919937133789
    5. ' i' → logprob: -10.64419937133789
    6. '((' → logprob: -10.76919937133789
    7. ' (' → logprob: -11.39419937133789
    8. '1' → logprob: -12.64419937133789
    9. '2' → logprob: -13.14419937133789
    10. '(x' → logprob: -13.14419937133789

Token 776: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.608512818813324
    2. ' +' → logprob: -0.858512818813324
    3. '<|end|>' → logprob: -4.608512878417969
    4. '       ' → logprob: -4.858512878417969
    5. '//' → logprob: -5.233512878417969
    6. '#' → logprob: -5.608512878417969
    7. ' //' → logprob: -6.483512878417969
    8. '
' → logprob: -7.233512878417969
    9. ' -' → logprob: -7.233512878417969
    10. '-' → logprob: -7.233512878417969

Token 777: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5010342597961426
    2. '1' → logprob: -1.5010342597961426
    3. '(i' → logprob: -2.7510342597961426
    4. '3' → logprob: -3.7510342597961426
    5. '0' → logprob: -3.7510342597961426
    6. ' i' → logprob: -3.8760342597961426
    7. 's' → logprob: -4.251034259796143
    8. '(' → logprob: -4.501034259796143
    9. ' (' → logprob: -5.751034259796143
    10. '2' → logprob: -5.876034259796143

Token 778: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07087549567222595
    2. '(i' → logprob: -3.695875406265259
    3. '1' → logprob: -3.945875406265259
    4. '3' → logprob: -4.945875644683838
    5. '0' → logprob: -4.945875644683838
    6. '(' → logprob: -5.445875644683838
    7. ' i' → logprob: -5.570875644683838
    8. '2' → logprob: -7.820875644683838
    9. ' (' → logprob: -8.07087516784668
    10. 's' → logprob: -8.19587516784668

Token 779: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 780: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.58439701795578
    2. '<|end|>' → logprob: -0.83439701795578
    3. '   ' → logprob: -5.959396839141846
    4. ',' → logprob: -6.334396839141846
    5. '<|end|>' → logprob: -6.334396839141846
    6. ')' → logprob: -7.334396839141846
    7. '#' → logprob: -8.209397315979004
    8. '
' → logprob: -8.209397315979004
    9. 'x' → logprob: -8.709397315979004
    10. ' x' → logprob: -9.709397315979004

Token 781: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16953875124454498
    2. '       ' → logprob: -2.544538736343384
    3. 'while' → logprob: -3.544538736343384
    4. 'if' → logprob: -3.919538736343384
    5. '#' (adapté à ' #') → logprob: -4.544538974761963
    6. 'w' → logprob: -5.419538974761963
    7. 'v' → logprob: -5.919538974761963
    8. 'u' → logprob: -6.294538974761963
    9. 'j' → logprob: -6.669538974761963
    10. 'z' → logprob: -6.919538974761963

Token 782: ' Déc' (ID: 56995)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.18994462490081787
    2. 'if' → logprob: -2.9399447441101074
    3. 'while' → logprob: -3.6899447441101074
    4. 'j' → logprob: -4.814944744110107
    5. 'v' → logprob: -4.814944744110107
    6. 'u' → logprob: -5.064944744110107
    7. 'dy' → logprob: -5.189944744110107
    8. 'r' → logprob: -5.189944744110107
    9. 'g' → logprob: -5.314944744110107
    10. 'x' → logprob: -5.314944744110107

Token 783: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.17358309030532837
    2. 'ale' → logprob: -2.1735830307006836
    3. '   ' → logprob: -4.673583030700684
    4. 'alc' → logprob: -5.173583030700684
    5. 'aler' → logprob: -5.173583030700684
    6. 'l' → logprob: -5.298583030700684
    7. 'ou' → logprob: -6.298583030700684
    8. '#' → logprob: -6.298583030700684
    9. '       ' → logprob: -6.423583030700684
    10. 'c' → logprob: -6.548583030700684

Token 784: 'age' (ID: 477)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.024370668455958366
    2. '       ' → logprob: -4.2743706703186035
    3. 'r' → logprob: -6.3993706703186035
    4. 'rement' → logprob: -6.6493706703186035
    5. 'ale' → logprob: -6.6493706703186035
    6. '   ' → logprob: -6.7743706703186035
    7. 'alc' → logprob: -7.0243706703186035
    8. '      ' → logprob: -7.1493706703186035
    9. 'omp' → logprob: -7.3993706703186035
    10. 'u' → logprob: -8.399370193481445

Token 785: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7367855906486511
    2. ' =' → logprob: -0.9867855906486511
    3. 'x' → logprob: -2.236785650253296
    4. 'a' → logprob: -3.736785650253296
    5. 'y' → logprob: -4.986785411834717
    6. 's' → logprob: -5.611785411834717
    7. 'w' → logprob: -5.736785411834717
    8. 'b' → logprob: -6.736785411834717
    9. 'h' → logprob: -7.236785411834717
    10. 'v' → logprob: -8.236785888671875

Token 786: ' rec' (ID: 1369)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.43223267793655396
    2. 'x' → logprob: -2.307232618331909
    3. 'b' → logprob: -2.432232618331909
    4. ' a' → logprob: -3.557232618331909
    5. 'c' → logprob: -3.807232618331909
    6. 'i' → logprob: -4.057232856750488
    7. 'y' → logprob: -4.182232856750488
    8. ' b' → logprob: -4.307232856750488
    9. 'abs' → logprob: -4.432232856750488
    10. '(a' → logprob: -4.557232856750488

Token 787: 'aler' (ID: 13534)
  Prédit: 'uler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.3389495313167572
    2. 'aler' → logprob: -1.9639495611190796
    3. 'al' → logprob: -2.58894944190979
    4. 'up' → logprob: -3.33894944190979
    5. 'u' → logprob: -3.58894944190979
    6. 'ale' → logprob: -5.838949680328369
    7. 'ul' → logprob: -6.463949680328369
    8. 'uper' → logprob: -7.088949680328369
    9. 'alc' → logprob: -7.213949680328369
    10. 'op' → logprob: -7.963949680328369

Token 788: ' dans' (ID: 2671)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3563125729560852
    2. 'x' → logprob: -1.4813125133514404
    3. 'b' → logprob: -4.2313127517700195
    4. ' a' → logprob: -4.6063127517700195
    5. 'c' → logprob: -4.9813127517700195
    6. ' des' → logprob: -5.3563127517700195
    7. ' =' → logprob: -5.3563127517700195
    8. 'i' → logprob: -5.4813127517700195
    9. 'dx' → logprob: -5.7313127517700195
    10. '=' → logprob: -5.9813127517700195

Token 789: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6084311008453369
    2. 'la' → logprob: -1.983431100845337
    3. 'a' → logprob: -2.358431100845337
    4. 'x' → logprob: -2.483431100845337
    5. 'le' → logprob: -2.608431100845337
    6. 'i' → logprob: -3.483431100845337
    7. 'les' → logprob: -4.233430862426758
    8. 'b' → logprob: -5.608430862426758
    9. ' la' → logprob: -5.983430862426758
    10. 'range' → logprob: -6.108430862426758

Token 790: ' "' (ID: 392)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.035261448472738266
    2. 'block' → logprob: -4.785261631011963
    3. 'cube' → logprob: -4.910261631011963
    4. 'x' → logprob: -5.910261631011963
    5. 'bl' → logprob: -6.285261631011963
    6. '#' → logprob: -6.785261631011963
    7. 'i' → logprob: -6.910261631011963
    8. 'coin' → logprob: -6.910261631011963
    9. 'plan' → logprob: -7.160261631011963
    10. 'c' → logprob: -7.160261631011963

Token 791: 'bloc' (ID: 168336)
  Prédit: 'bloc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.19410386681556702
    2. 'block' → logprob: -2.944103956222534
    3. ' bloc' → logprob: -3.444103956222534
    4. 'bl' → logprob: -3.944103956222534
    5. 'cube' → logprob: -3.944103956222534
    6. '   ' → logprob: -5.069103717803955
    7. 'coin' → logprob: -5.069103717803955
    8. '3' → logprob: -5.194103717803955
    9. 'x' → logprob: -5.944103717803955
    10. 'plan' → logprob: -6.069103717803955

Token 792: ' milieu' (ID: 43149)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3840943574905396
    2. 'horizontal' → logprob: -1.3840943574905396
    3. ' horizontal' → logprob: -1.7590943574905396
    4. 's' → logprob: -2.88409423828125
    5. 'x' → logprob: -2.88409423828125
    6. ' suivant' → logprob: -3.00909423828125
    7. ' x' → logprob: -3.25909423828125
    8. 'de' → logprob: -3.38409423828125
    9. ')' → logprob: -4.25909423828125
    10. 'sur' → logprob: -5.25909423828125

Token 793: '"
' (ID: 1092)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7795103788375854
    2. '"' → logprob: -2.029510498046875
    3. ' x' → logprob: -2.654510498046875
    4. '   ' → logprob: -2.904510498046875
    5. '```' → logprob: -3.029510498046875
    6. '"""
' → logprob: -3.279510498046875
    7. 'horizontal' → logprob: -3.404510498046875
    8. ',' → logprob: -3.404510498046875
    9. '       ' → logprob: -4.029510498046875
    10. ' horizontal' → logprob: -4.154510498046875

Token 794: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.811677098274231
    2. '       ' → logprob: -1.811677098274231
    3. ' 
' → logprob: -1.936677098274231
    4. '        
' → logprob: -3.0616769790649414
    5. '=' → logprob: -3.3116769790649414
    6. 'x' → logprob: -3.8116769790649414
    7. 'b' → logprob: -3.8116769790649414
    8. 'a' → logprob: -4.186676979064941
    9. 's' → logprob: -4.686676979064941
    10. '        ' → logprob: -4.811676979064941

Token 795: ' g' (ID: 329)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13428664207458496
    2. 'b' → logprob: -3.009286642074585
    3. 'dx' → logprob: -4.134286880493164
    4. ' a' → logprob: -4.259286880493164
    5. '   ' → logprob: -4.634286880493164
    6. 'x' → logprob: -5.259286880493164
    7. 'y' → logprob: -5.509286880493164
    8. 'offset' → logprob: -5.759286880493164
    9. '       ' → logprob: -5.884286880493164
    10. 'shift' → logprob: -6.384286880493164

Token 796: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2528565526008606
    2. '=' → logprob: -1.5028564929962158
    3. 'a' → logprob: -7.877856731414795
    4. '   ' → logprob: -8.502856254577637
    5. ',' → logprob: -9.252856254577637
    6. ' ' → logprob: -9.752856254577637
    7. 'x' → logprob: -9.752856254577637
    8. '=a' → logprob: -10.377856254577637
    9. '	' → logprob: -10.752856254577637
    10. 'b' → logprob: -11.002856254577637

Token 797: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.161147952079773
    2. 'x' → logprob: -2.0361480712890625
    3. 'min' → logprob: -2.0361480712890625
    4. '(a' → logprob: -2.1611480712890625
    5. 'b' → logprob: -3.0361480712890625
    6. 'abs' → logprob: -3.2861480712890625
    7. 'c' → logprob: -3.6611480712890625
    8. '(b' → logprob: -3.7861480712890625
    9. 'max' → logprob: -3.7861480712890625
    10. 'i' → logprob: -3.9111480712890625

Token 798: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6059629917144775
    2. ' -' → logprob: -1.3559629917144775
    3. '%' → logprob: -1.7309629917144775
    4. ' %' → logprob: -4.105962753295898
    5. '+' → logprob: -7.105962753295898
    6. '//' → logprob: -7.230962753295898
    7. ' //' → logprob: -7.605962753295898
    8. '%-' → logprob: -7.980962753295898
    9. '%x' → logprob: -8.730962753295898
    10. '-i' → logprob: -9.230962753295898

Token 799: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06566006690263748
    2. 'i' → logprob: -3.440659999847412
    3. '(a' → logprob: -4.440659999847412
    4. '(' → logprob: -5.190659999847412
    5. 'a' → logprob: -5.440659999847412
    6. '(x' → logprob: -5.565659999847412
    7. '(i' → logprob: -5.815659999847412
    8. '3' → logprob: -6.690659999847412
    9. '((' → logprob: -6.940659999847412
    10. '2' → logprob: -8.31566047668457

Token 800: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3601613938808441
    2. 'x' → logprob: -1.6101614236831665
    3. '(a' → logprob: -2.860161304473877
    4. 'i' → logprob: -3.735161304473877
    5. '3' → logprob: -4.485161304473877
    6. '(' → logprob: -5.735161304473877
    7. '(i' → logprob: -6.235161304473877
    8. '2' → logprob: -6.485161304473877
    9. 'c' → logprob: -6.985161304473877
    10. '((' → logprob: -7.235161304473877

Token 801: ' -' (ID: 533)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.7870635390281677
    2. '//' → logprob: -1.0370635986328125
    3. '%' → logprob: -2.2870635986328125
    4. ' %' → logprob: -2.5370635986328125
    5. ' -' → logprob: -5.2870635986328125
    6. '-' → logprob: -6.4120635986328125
    7. 'a' → logprob: -6.7870635986328125
    8. ' ' → logprob: -7.5370635986328125
    9. 'x' → logprob: -7.7870635986328125
    10. '%x' → logprob: -7.7870635986328125

Token 802: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04335392266511917
    2. 'a' → logprob: -3.793354034423828
    3. 'i' → logprob: -4.168354034423828
    4. '(a' → logprob: -6.168354034423828
    5. '(x' → logprob: -6.918354034423828
    6. '(i' → logprob: -8.043354034423828
    7. ' x' → logprob: -8.043354034423828
    8. '(' → logprob: -8.418354034423828
    9. '2' → logprob: -8.418354034423828
    10. '((' → logprob: -9.293354034423828

Token 803: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2710959017276764
    2. 'a' → logprob: -1.771095871925354
    3. 'i' → logprob: -3.2710959911346436
    4. '(a' → logprob: -3.7710959911346436
    5. '(x' → logprob: -6.1460957527160645
    6. '(i' → logprob: -6.2710957527160645
    7. '(' → logprob: -7.0210957527160645
    8. '2' → logprob: -7.3960957527160645
    9. '((' → logprob: -8.271096229553223
    10. ' x' → logprob: -8.896096229553223

Token 804: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00070397206582129
    2. ')//' → logprob: -8.250703811645508
    3. ' )' → logprob: -8.375703811645508
    4. ')%' → logprob: -8.750703811645508
    5. '//' → logprob: -10.500703811645508
    6. '+' → logprob: -12.000703811645508
    7. ' //' → logprob: -12.125703811645508
    8. '%' → logprob: -12.625703811645508
    9. '-' → logprob: -12.875703811645508
    10. ' -' → logprob: -13.000703811645508

Token 805: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.640390932559967
    2. '%' → logprob: -1.2653908729553223
    3. '//' → logprob: -2.2653908729553223
    4. ' //' → logprob: -3.0153908729553223
    5. '%x' → logprob: -3.5153908729553223
    6. '%i' → logprob: -5.265390872955322
    7. ')' → logprob: -6.515390872955322
    8. '%d' → logprob: -8.39039134979248
    9. '+' → logprob: -8.51539134979248
    10. '-' → logprob: -8.76539134979248

Token 806: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08502770215272903
    2. '(' → logprob: -2.7100276947021484
    3. ' i' → logprob: -4.585027694702148
    4. '3' → logprob: -6.460027694702148
    5. '(i' → logprob: -6.460027694702148
    6. ' (' → logprob: -7.085027694702148
    7. 'x' → logprob: -7.210027694702148
    8. '(x' → logprob: -10.210027694702148
    9. ' ' → logprob: -11.085027694702148
    10. ' x' → logprob: -12.210027694702148

Token 807: '3' (ID: 18)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14356178045272827
    2. '(' → logprob: -2.143561840057373
    3. '3' → logprob: -4.768561840057373
    4. ' i' → logprob: -5.393561840057373
    5. '(i' → logprob: -6.268561840057373
    6. ' (' → logprob: -6.893561840057373
    7. 'x' → logprob: -7.768561840057373
    8. ' ' → logprob: -10.018561363220215
    9. '   ' → logprob: -10.893561363220215
    10. '9' → logprob: -10.893561363220215

Token 808: ' *' (ID: 425)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.019694482907652855
    2. '(' → logprob: -4.8946943283081055
    3. '(i' → logprob: -4.8946943283081055
    4. ' (' → logprob: -6.1446943283081055
    5. ' i' → logprob: -6.5196943283081055
    6. '3' → logprob: -8.019694328308105
    7. 'h' → logprob: -8.144694328308105
    8. '(h' → logprob: -8.894694328308105
    9. '   ' → logprob: -9.894694328308105
    10. '       ' → logprob: -10.769694328308105

Token 809: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3544423381972592e-05
    2. ' i' → logprob: -11.50001335144043
    3. '3' → logprob: -13.37501335144043
    4. 'x' → logprob: -13.50001335144043
    5. '(' → logprob: -16.00001335144043
    6. '   ' → logprob: -16.25001335144043
    7. '(i' → logprob: -16.62501335144043
    8. '
' → logprob: -17.50001335144043
    9. '```' → logprob: -17.50001335144043
    10. ' ' → logprob: -17.62501335144043

Token 810: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18922841548919678
    2. '+' → logprob: -2.6892285346984863
    3. ' +' → logprob: -3.3142285346984863
    4. ' -' → logprob: -3.5642285346984863
    5. '       ' → logprob: -3.6892285346984863
    6. '-' → logprob: -5.314228534698486
    7. ' )' → logprob: -6.314228534698486
    8. ')
' → logprob: -6.314228534698486
    9. '
' → logprob: -6.439228534698486
    10. '```' → logprob: -6.939228534698486

Token 811: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.816745936870575
    2. '+' → logprob: -1.4417459964752197
    3. '<|end|>' → logprob: -1.8167459964752197
    4. ' +' → logprob: -2.1917459964752197
    5. '
' → logprob: -4.066745758056641
    6. ')' → logprob: -4.191745758056641
    7. '        
' → logprob: -5.191745758056641
    8. ' ' → logprob: -6.691745758056641
    9. '   ' → logprob: -6.941745758056641
    10. '        ' → logprob: -6.941745758056641

Token 812: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.30740004777908325
    2. 'i' → logprob: -1.4323999881744385
    3. '1' → logprob: -3.9323999881744385
    4. '2' → logprob: -6.057400226593018
    5. '(' → logprob: -6.182400226593018
    6. '3' → logprob: -6.932400226593018
    7. ' i' → logprob: -8.30739974975586
    8. '(i' → logprob: -8.30739974975586
    9. ' x' → logprob: -8.30739974975586
    10. '(x' → logprob: -9.05739974975586

Token 813: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1758614331483841
    2. 'i' → logprob: -1.9258614778518677
    3. '1' → logprob: -4.550861358642578
    4. '2' → logprob: -6.175861358642578
    5. '(' → logprob: -6.550861358642578
    6. '3' → logprob: -6.800861358642578
    7. '(i' → logprob: -8.925861358642578
    8. '(x' → logprob: -9.550861358642578
    9. ' x' → logprob: -9.675861358642578
    10. ' i' → logprob: -10.050861358642578

Token 814: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 815: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 816: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3428674638271332
    2. 'y' → logprob: -2.217867374420166
    3. 'x' → logprob: -3.092867374420166
    4. 'g' → logprob: -3.217867374420166
    5. 'j' → logprob: -4.467867374420166
    6. 't' → logprob: -4.467867374420166
    7. 'e' → logprob: -4.467867374420166
    8. 'z' → logprob: -4.842867374420166
    9. 'v' → logprob: -4.967867374420166
    10. 's' → logprob: -5.217867374420166

Token 817: ' -=' (ID: 12583)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9871151447296143
    2. ',' → logprob: -1.6121151447296143
    3. '=' → logprob: -1.7371151447296143
    4. ' -=' → logprob: -2.4871151447296143
    5. ' +=' → logprob: -2.9871151447296143
    6. ' ,' → logprob: -3.3621151447296143
    7. ' -' → logprob: -3.3621151447296143
    8. '-' → logprob: -4.112114906311035
    9. '+' → logprob: -4.362114906311035
    10. ' +' → logprob: -5.362114906311035

Token 818: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -5.431207682704553e-05
    2. ' g' → logprob: -10.000054359436035
    3. '1' → logprob: -12.500054359436035
    4. 'x' → logprob: -13.125054359436035
    5. '       ' → logprob: -13.625054359436035
    6. 'a' → logprob: -14.000054359436035
    7. '   ' → logprob: -14.500054359436035
    8. '	g' → logprob: -15.375054359436035
    9. '           ' → logprob: -16.62505340576172
    10. '(g' → logprob: -16.87505340576172

Token 819: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 820: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.271494597196579
    2. '<|end|>' → logprob: -1.6464946269989014
    3. 'b' → logprob: -3.8964946269989014
    4. '   ' → logprob: -4.271494388580322
    5. 'c' → logprob: -5.521494388580322
    6. 'd' → logprob: -6.146494388580322
    7. ',' → logprob: -6.521494388580322
    8. 'g' → logprob: -7.771494388580322
    9. ')' → logprob: -8.02149486541748
    10. ' c' → logprob: -8.27149486541748

Token 821: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.015558918006718159
    2. 'b' → logprob: -5.01555871963501
    3. '   ' → logprob: -5.14055871963501
    4. ' c' → logprob: -5.89055871963501
    5. '       ' → logprob: -9.015559196472168
    6. ' b' → logprob: -10.265559196472168
    7. 'd' → logprob: -11.265559196472168
    8. '	c' → logprob: -11.890559196472168
    9. 'x' → logprob: -13.015559196472168
    10. ' ' → logprob: -13.515559196472168

Token 822: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.48140114545822144
    2. ' -=' → logprob: -0.9814011454582214
    3. '-' → logprob: -4.981400966644287
    4. '   ' → logprob: -8.356401443481445
    5. '       ' → logprob: -9.606401443481445
    6. '=' → logprob: -10.106401443481445
    7. '    ' → logprob: -10.356401443481445
    8. '	' → logprob: -10.981401443481445
    9. ' -' → logprob: -11.106401443481445
    10. '```' → logprob: -12.106401443481445

Token 823: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.15310683415737e-05
    2. ' g' → logprob: -10.750021934509277
    3. '	g' → logprob: -17.62502098083496
    4. '<|end|>' → logprob: -18.37502098083496
    5. '       ' → logprob: -18.75002098083496
    6. '#g' → logprob: -19.62502098083496
    7. 'г' → logprob: -19.87502098083496
    8. '<|end|>' → logprob: -20.00002098083496
    9. '_g' → logprob: -20.25002098083496
    10. ''g' → logprob: -20.62502098083496

Token 824: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.199936181306839
    2. '<|end|>' → logprob: -2.0749361515045166
    3. '
' → logprob: -3.4499361515045166
    4. '        
' → logprob: -4.824936389923096
    5. ',' → logprob: -5.574936389923096
    6. '```' → logprob: -5.824936389923096
    7. '   ' → logprob: -6.199936389923096
    8. '    
' → logprob: -6.824936389923096
    9. '  
' → logprob: -7.074936389923096
    10. '#' → logprob: -7.074936389923096

Token 825: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003736660582944751
    2. '   ' → logprob: -6.87873649597168
    3. '#' → logprob: -7.37873649597168
    4. 'd' → logprob: -7.87873649597168
    5. 'g' → logprob: -8.00373649597168
    6. 'x' → logprob: -8.37873649597168
    7. 'b' → logprob: -8.50373649597168
    8. '
' → logprob: -8.50373649597168
    9. 'y' → logprob: -8.62873649597168
    10. '        
' → logprob: -8.75373649597168

Token 826: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.239405870437622
    2. 'while' → logprob: -2.239405870437622
    3. 'j' → logprob: -2.364405870437622
    4. 'd' → logprob: -2.489405870437622
    5. 'b' → logprob: -2.739405870437622
    6. '#' (adapté à ' #') → logprob: -2.989405870437622
    7. 'e' → logprob: -2.989405870437622
    8. 'if' → logprob: -3.239405870437622
    9. 'i' → logprob: -3.489405870437622
    10. 'w' → logprob: -3.614405870437622

Token 827: ' Calcul' (ID: 57243)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.2288459539413452
    2. 'while' → logprob: -1.4788459539413452
    3. 'v' → logprob: -2.2288460731506348
    4. 'j' → logprob: -2.7288460731506348
    5. 'd' → logprob: -2.9788460731506348
    6. 'r' → logprob: -3.1038460731506348
    7. 'for' → logprob: -3.2288460731506348
    8. 'if' → logprob: -3.7288460731506348
    9. 'e' → logprob: -4.353846073150635
    10. 'z' → logprob: -4.603846073150635

Token 828: ' du' (ID: 1462)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.8878458738327026
    2. 'y' → logprob: -1.3878458738327026
    3. 'd' → logprob: -2.512845993041992
    4. '       ' → logprob: -2.512845993041992
    5. 'dist' → logprob: -3.012845993041992
    6. 'v' → logprob: -3.512845993041992
    7. 'dx' → logprob: -4.137845993041992
    8. 'delta' → logprob: -4.512845993041992
    9. 'w' → logprob: -4.887845993041992
    10. 'res' → logprob: -5.012845993041992

Token 829: ' résultat' (ID: 62556)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0199801921844482
    2. 'y' → logprob: -1.5199801921844482
    3. 'r' → logprob: -3.1449801921844482
    4. 'd' → logprob: -3.1449801921844482
    5. 'e' → logprob: -3.1449801921844482
    6. 'v' → logprob: -3.2699801921844482
    7. 'w' → logprob: -3.3949801921844482
    8. 'if' → logprob: -3.6449801921844482
    9. 'result' → logprob: -3.8949801921844482
    10. 'dx' → logprob: -3.8949801921844482

Token 830: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3085261285305023
    2. 'res' → logprob: -1.9335261583328247
    3. 'result' → logprob: -2.558526039123535
    4. 'd' → logprob: -3.933526039123535
    5. 'dist' → logprob: -4.308526039123535
    6. 'r' → logprob: -6.058526039123535
    7. 'distance' → logprob: -6.058526039123535
    8. '   ' → logprob: -6.683526039123535
    9. 't' → logprob: -7.433526039123535
    10. 'ans' → logprob: -7.808526039123535

Token 831: ' distance' (ID: 9324)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1523027867078781
    2. 'res' → logprob: -2.4023027420043945
    3. 'r' → logprob: -4.1523027420043945
    4. 'ans' → logprob: -4.4023027420043945
    5. 'result' → logprob: -4.7773027420043945
    6. 'y' → logprob: -5.2773027420043945
    7. 'abs' → logprob: -6.5273027420043945
    8. 'd' → logprob: -6.9023027420043945
    9. 'if' → logprob: -7.0273027420043945
    10. 'dist' → logprob: -7.0273027420043945

Token 832: ' verticale' (ID: 199428)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10098271071910858
    2. ' =' → logprob: -2.600982666015625
    3. 'print' → logprob: -4.225982666015625
    4. 'res' → logprob: -5.975982666015625
    5. 'result' → logprob: -6.100982666015625
    6. '   ' → logprob: -7.100982666015625
    7. '       ' → logprob: -7.725982666015625
    8. 'r' → logprob: -8.225982666015625
    9. '```' → logprob: -8.725982666015625
    10. 'abs' → logprob: -8.975982666015625

Token 833: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5645350813865662
    2. '+' → logprob: -1.814535140991211
    3. 'result' → logprob: -2.064535140991211
    4. 'print' → logprob: -3.064535140991211
    5. 'y' → logprob: -3.814535140991211
    6. 'res' → logprob: -4.189535140991211
    7. ' +' → logprob: -4.189535140991211
    8. '   ' → logprob: -5.064535140991211
    9. '```' → logprob: -5.314535140991211
    10. 'diff' → logprob: -5.814535140991211

Token 834: ' minimum' (ID: 11085)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0019887094385921955
    2. ' abs' → logprob: -6.501988887786865
    3. '(abs' → logprob: -8.376988410949707
    4. 'x' → logprob: -9.626988410949707
    5. '   ' → logprob: -9.876988410949707
    6. 'b' → logprob: -9.876988410949707
    7. '```' → logprob: -10.751988410949707
    8. 'max' → logprob: -11.251988410949707
    9. 'min' → logprob: -11.251988410949707
    10. '1' → logprob: -11.376988410949707

Token 835: ' de' (ID: 334)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.7198120951652527
    2. '(
' → logprob: -1.2198121547698975
    3. '(' → logprob: -2.4698121547698975
    4. '(a' → logprob: -2.8448121547698975
    5. 'abs' → logprob: -3.8448121547698975
    6. '(min' → logprob: -3.9698121547698975
    7. '(b' → logprob: -4.469811916351318
    8. 'of' → logprob: -5.219811916351318
    9. '((' → logprob: -5.469811916351318
    10. '(x' → logprob: -5.719811916351318

Token 836: ' l' (ID: 305)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.08928665518760681
    2. 'abs' → logprob: -2.7142865657806396
    3. '(
' → logprob: -5.464286804199219
    4. '(x' → logprob: -5.589286804199219
    5. '(' → logprob: -5.839286804199219
    6. '(a' → logprob: -5.964286804199219
    7. '(b' → logprob: -6.714286804199219
    8. 'x' → logprob: -6.839286804199219
    9. '(c' → logprob: -6.839286804199219
    10. '((' → logprob: -7.214286804199219

Token 837: ''accès' (ID: 116356)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.44205817580223083
    2. '(abs' → logprob: -1.4420582056045532
    3. '[' → logprob: -2.6920580863952637
    4. '(a' → logprob: -4.317058086395264
    5. 'a' → logprob: -4.442058086395264
    6. '[a' → logprob: -5.192058086395264
    7. 'b' → logprob: -5.567058086395264
    8. '(' → logprob: -5.567058086395264
    9. 'x' → logprob: -6.067058086395264
    10. ' abs' → logprob: -6.067058086395264

Token 838: ' au' (ID: 2791)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8598123788833618
    2. 'a' → logprob: -2.3598122596740723
    3. '(' → logprob: -2.4848122596740723
    4. '   ' → logprob: -2.6098122596740723
    5. 'vertical' → logprob: -2.9848122596740723
    6. 'b' → logprob: -3.2348122596740723
    7. '(abs' → logprob: -3.4848122596740723
    8. '```' → logprob: -3.4848122596740723
    9. 'x' → logprob: -3.8598122596740723
    10. 'à' → logprob: -4.109812259674072

Token 839: ' centre' (ID: 13268)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6452820301055908
    2. 'b' → logprob: -1.5202820301055908
    3. 'c' → logprob: -2.145282030105591
    4. 'abs' → logprob: -3.395282030105591
    5. 'a' → logprob: -3.520282030105591
    6. 'd' → logprob: -3.645282030105591
    7. 'i' → logprob: -4.520281791687012
    8. '(x' → logprob: -5.020281791687012
    9. 'y' → logprob: -5.020281791687012
    10. '   ' → logprob: -5.895281791687012

Token 840: ' du' (ID: 1462)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9033348560333252
    2. '       ' → logprob: -1.0283348560333252
    3. 'y' → logprob: -2.153334856033325
    4. ' +' → logprob: -3.653334856033325
    5. '```' → logprob: -3.778334856033325
    6. '   ' → logprob: -4.153334617614746
    7. 'x' → logprob: -4.403334617614746
    8. 'v' → logprob: -4.903334617614746
    9. 'abs' → logprob: -5.153334617614746
    10. 'min' → logprob: -5.153334617614746

Token 841: ' bloc' (ID: 51218)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.0829881876707077
    2. 'x' → logprob: -3.2079882621765137
    3. 'block' → logprob: -4.207988262176514
    4. 'centre' → logprob: -5.082988262176514
    5. 'che' → logprob: -5.832988262176514
    6. 'segment' → logprob: -5.957988262176514
    7. 'c' → logprob: -6.082988262176514
    8. 'coin' → logprob: -6.082988262176514
    9. 'point' → logprob: -6.582988262176514
    10. 'b' → logprob: -7.082988262176514

Token 842: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9355188608169556
    2. 'min' → logprob: -1.6855188608169556
    3. '+' → logprob: -2.310518741607666
    4. 'abs' → logprob: -2.310518741607666
    5. 'y' → logprob: -2.935518741607666
    6. '=' → logprob: -2.935518741607666
    7. 'res' → logprob: -3.560518741607666
    8. 'result' → logprob: -4.060518741607666
    9. '   ' → logprob: -4.060518741607666
    10. 'ans' → logprob: -4.560518741607666

Token 843: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34343916177749634
    2. '       ' → logprob: -2.5934391021728516
    3. 'return' → logprob: -2.7184391021728516
    4. 'result' → logprob: -3.0934391021728516
    5. 'res' → logprob: -3.3434391021728516
    6. '```' → logprob: -3.4684391021728516
    7. '   ' → logprob: -4.468439102172852
    8. 'v' → logprob: -4.968439102172852
    9. ' print' → logprob: -5.343439102172852
    10. 'r' → logprob: -5.843439102172852

Token 844: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.24681051075458527
    2. 'res' → logprob: -2.1218104362487793
    3. 'result' → logprob: -2.6218104362487793
    4. 'r' → logprob: -4.371810436248779
    5. 'd' → logprob: -5.746810436248779
    6. 'v' → logprob: -5.871810436248779
    7. 'dist' → logprob: -6.371810436248779
    8. 'ans' → logprob: -6.621810436248779
    9. 'distance' → logprob: -6.621810436248779
    10. 'y' → logprob: -6.871810436248779

Token 845: '(abs' (ID: 71957)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.024402080103754997
    2. '(abs' → logprob: -3.774402141571045
    3. ' abs' → logprob: -7.399402141571045
    4. 'min' → logprob: -7.774402141571045
    5. '(min' → logprob: -10.024401664733887
    6. '   ' → logprob: -10.149401664733887
    7. 'b' → logprob: -10.899401664733887
    8. '(' → logprob: -12.274401664733887
    9. '((' → logprob: -12.774401664733887
    10. 'max' → logprob: -12.774401664733887

Token 846: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0015421189600601792
    2. 'b' → logprob: -6.501542091369629
    3. '(a' → logprob: -10.876542091369629
    4. '(c' → logprob: -11.501542091369629
    5. '(' → logprob: -12.251542091369629
    6. '(d' → logprob: -12.751542091369629
    7. '(x' → logprob: -13.876542091369629
    8. 'a' → logprob: -14.501542091369629
    9. '((' → logprob: -14.876542091369629
    10. '	b' → logprob: -15.501542091369629

Token 847: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01816187985241413
    2. '-' → logprob: -4.018161773681641
    3. '   ' → logprob: -12.64316177368164
    4. ' ' → logprob: -12.76816177368164
    5. '-b' → logprob: -12.76816177368164
    6. ')' → logprob: -14.14316177368164
    7. ' ' → logprob: -14.39316177368164
    8. '  ' → logprob: -14.76816177368164
    9. '-d' → logprob: -15.01816177368164
    10. '    ' → logprob: -15.14316177368164

Token 848: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.412610233994201e-05
    2. ' d' → logprob: -9.500094413757324
    3. '   ' → logprob: -12.125094413757324
    4. '       ' → logprob: -12.250094413757324
    5. '           ' → logprob: -12.875094413757324
    6. '(d' → logprob: -13.125094413757324
    7. '  ' → logprob: -13.625094413757324
    8. 'x' → logprob: -14.375094413757324
    9. '      ' → logprob: -14.625094413757324
    10. '    ' → logprob: -14.875094413757324

Token 849: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.337155355140567e-05
    2. ')+' → logprob: -9.875062942504883
    3. ' )' → logprob: -11.500062942504883
    4. '   ' → logprob: -13.875062942504883
    5. ')
' → logprob: -15.000062942504883
    6. '))' → logprob: -16.250062942504883
    7. '+' → logprob: -16.500062942504883
    8. ' ' → logprob: -16.875062942504883
    9. ' ' → logprob: -17.000062942504883
    10. '    ' → logprob: -17.000062942504883

Token 850: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22589054703712463
    2. '+' → logprob: -1.6008905172348022
    3. ')' → logprob: -7.725890636444092
    4. ')+' → logprob: -11.225890159606934
    5. '   ' → logprob: -11.850890159606934
    6. '+)' → logprob: -12.225890159606934
    7. '+
' → logprob: -12.725890159606934
    8. ' +
' → logprob: -12.850890159606934
    9. ' ' → logprob: -13.475890159606934
    10. '       ' → logprob: -14.225890159606934

Token 851: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0003208037815056741
    2. 'abs' → logprob: -8.625320434570312
    3. '(min' → logprob: -9.625320434570312
    4. ' min' → logprob: -9.625320434570312
    5. 'max' → logprob: -12.375320434570312
    6. '   ' → logprob: -12.875320434570312
    7. 'x' → logprob: -14.250320434570312
    8. '           ' → logprob: -14.875320434570312
    9. '
' → logprob: -15.625320434570312
    10. '       ' → logprob: -15.625320434570312

Token 852: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.01224320475012064
    2. '(a' → logprob: -4.512243270874023
    3. '(x' → logprob: -7.262243270874023
    4. '(c' → logprob: -8.262243270874023
    5. '(' → logprob: -9.387243270874023
    6. 'abs' → logprob: -9.762243270874023
    7. '((' → logprob: -9.887243270874023
    8. '(
' → logprob: -10.512243270874023
    9. '(min' → logprob: -11.512243270874023
    10. '([' → logprob: -12.637243270874023

Token 853: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03727895766496658
    2. '(x' → logprob: -3.662278890609741
    3. '(c' → logprob: -4.53727912902832
    4. '(abs' → logprob: -9.66227912902832
    5. '(' → logprob: -9.78727912902832
    6. 'a' → logprob: -10.16227912902832
    7. '((' → logprob: -10.66227912902832
    8. '(i' → logprob: -11.03727912902832
    9. 'x' → logprob: -11.66227912902832
    10. '(b' → logprob: -12.53727912902832

Token 854: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7004975080490112
    2. ' -' → logprob: -0.7004975080490112
    3. '-x' → logprob: -5.825497627258301
    4. '+' → logprob: -6.075497627258301
    5. '-a' → logprob: -6.950497627258301
    6. ' ' → logprob: -8.3254976272583
    7. '-(' → logprob: -8.4504976272583
    8. ' +' → logprob: -8.7004976272583
    9. '   ' → logprob: -8.9504976272583
    10. '  ' → logprob: -9.4504976272583

Token 855: ' a' (ID: 261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2673153877258301
    2. 'a' → logprob: -1.64231538772583
    3. '(c' → logprob: -3.64231538772583
    4. 'x' → logprob: -4.76731538772583
    5. 'c' → logprob: -6.01731538772583
    6. '(x' → logprob: -6.51731538772583
    7. ' (' → logprob: -6.51731538772583
    8. 'abs' → logprob: -7.89231538772583
    9. '(' → logprob: -8.517314910888672
    10. '(abs' → logprob: -8.767314910888672

Token 856: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005985916126519442
    2. ')' → logprob: -5.130985736846924
    3. ' ),' → logprob: -10.005986213684082
    4. ')+' → logprob: -11.505986213684082
    5. '),
' → logprob: -14.755986213684082
    6. '+' → logprob: -14.880986213684082
    7. '   ' → logprob: -15.130986213684082
    8. ' )' → logprob: -15.130986213684082
    9. ',' → logprob: -15.630986213684082
    10. '-' → logprob: -16.255985260009766

Token 857: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003411081852391362
    2. '),' → logprob: -6.128411293029785
    3. ' ,' → logprob: -7.003411293029785
    4. '+' → logprob: -8.753411293029785
    5. ' +' → logprob: -9.628411293029785
    6. ')' → logprob: -9.753411293029785
    7. ',
' → logprob: -12.128411293029785
    8. '   ' → logprob: -12.753411293029785
    9. ' -' → logprob: -12.753411293029785
    10. '-' → logprob: -12.753411293029785

Token 858: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.007653369102627039
    2. ' abs' → logprob: -4.88265323638916
    3. '(abs' → logprob: -10.00765323638916
    4. '   ' → logprob: -14.25765323638916
    5. 'min' → logprob: -15.00765323638916
    6. '       ' → logprob: -15.38265323638916
    7. '           ' → logprob: -15.50765323638916
    8. '1' → logprob: -15.50765323638916
    9. 'i' → logprob: -15.88265323638916
    10. ' (' → logprob: -15.88265323638916

Token 859: '(i' (ID: 3649)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.1284531056880951
    2. '(c' → logprob: -3.003453016281128
    3. '(x' → logprob: -3.128453016281128
    4. '(i' → logprob: -3.753453016281128
    5. '(d' → logprob: -5.878453254699707
    6. '(abs' → logprob: -7.253453254699707
    7. '(' → logprob: -8.753453254699707
    8. '((' → logprob: -11.128453254699707
    9. 'x' → logprob: -12.128453254699707
    10. '(a' → logprob: -12.378453254699707

Token 860: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931565403938293
    2. ' -' → logprob: -0.6931565403938293
    3. ' ' → logprob: -12.068156242370605
    4. '  ' → logprob: -13.943156242370605
    5. '   ' → logprob: -14.068156242370605
    6. ')' → logprob: -14.068156242370605
    7. '+' → logprob: -15.193156242370605
    8. ' ' → logprob: -15.693156242370605
    9. '−' → logprob: -16.568157196044922
    10. ' -
' → logprob: -16.693157196044922

Token 861: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005559112876653671
    2. 'b' → logprob: -5.255558967590332
    3. 'x' → logprob: -8.255558967590332
    4. '(c' → logprob: -10.130558967590332
    5. 'd' → logprob: -11.380558967590332
    6. ' c' → logprob: -11.755558967590332
    7. '   ' → logprob: -13.130558967590332
    8. '(' → logprob: -13.755558967590332
    9. '	c' → logprob: -14.380558967590332
    10. '(x' → logprob: -14.380558967590332

Token 862: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005297077354043722
    2. ',' → logprob: -5.8802971839904785
    3. '))' → logprob: -6.3802971839904785
    4. ')' → logprob: -8.13029670715332
    5. ' ),' → logprob: -8.38029670715332
    6. ')))' → logprob: -8.38029670715332
    7. ' ,' → logprob: -11.25529670715332
    8. ')),' → logprob: -11.38029670715332
    9. '),
' → logprob: -12.38029670715332
    10. '),(' → logprob: -12.88029670715332

Token 863: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00443154014647007
    2. ' abs' → logprob: -5.62943172454834
    3. 'x' → logprob: -7.75443172454834
    4. '3' → logprob: -8.37943172454834
    5. '2' → logprob: -9.25443172454834
    6. '(abs' → logprob: -10.37943172454834
    7. 'min' → logprob: -11.37943172454834
    8. 'i' → logprob: -11.62943172454834
    9. ' ' → logprob: -12.37943172454834
    10. ' x' → logprob: -12.50443172454834

Token 864: '(x' (ID: 4061)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.014585018157959
    2. '(' → logprob: -1.389585018157959
    3. '(a' → logprob: -1.514585018157959
    4. '(x' → logprob: -2.014585018157959
    5. '(c' → logprob: -4.139585018157959
    6. '(abs' → logprob: -5.389585018157959
    7. 'x' → logprob: -5.514585018157959
    8. 'a' → logprob: -5.639585018157959
    9. '((' → logprob: -5.764585018157959
    10. '3' → logprob: -6.514585018157959

Token 865: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10023848712444305
    2. '-' → logprob: -2.350238561630249
    3. '-a' → logprob: -11.225238800048828
    4. ' ' → logprob: -11.850238800048828
    5. 'a' → logprob: -12.725238800048828
    6. ')' → logprob: -12.725238800048828
    7. '+' → logprob: -13.850238800048828
    8. ' ' → logprob: -14.350238800048828
    9. '-x' → logprob: -14.600238800048828
    10. '  ' → logprob: -14.850238800048828

Token 866: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00816227588802576
    2. 'c' → logprob: -5.258162498474121
    3. 'x' → logprob: -6.633162498474121
    4. ' a' → logprob: -6.633162498474121
    5. 'i' → logprob: -8.508162498474121
    6. ' c' → logprob: -10.258162498474121
    7. '   ' → logprob: -11.008162498474121
    8. ' ' → logprob: -11.508162498474121
    9. ' x' → logprob: -12.383162498474121
    10. '  ' → logprob: -12.758162498474121

Token 867: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8074162653647363e-05
    2. ')+' → logprob: -11.125018119812012
    3. ' )' → logprob: -13.125018119812012
    4. '-' → logprob: -14.000018119812012
    5. ' -' → logprob: -15.875018119812012
    6. '))' → logprob: -16.125017166137695
    7. '+' → logprob: -16.875017166137695
    8. '   ' → logprob: -17.125017166137695
    9. '```' → logprob: -18.000017166137695
    10. '),' → logprob: -18.125017166137695

Token 868: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6489071249961853
    2. ' +' → logprob: -0.7739071249961853
    3. ')' → logprob: -4.14890718460083
    4. ')+' → logprob: -8.023906707763672
    5. '))' → logprob: -9.898906707763672
    6. '),' → logprob: -12.523906707763672
    7. ' )' → logprob: -13.398906707763672
    8. '+)' → logprob: -13.398906707763672
    9. '-' → logprob: -13.648906707763672
    10. ')))' → logprob: -13.898906707763672

Token 869: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.12692873179912567
    2. ' abs' → logprob: -2.1269288063049316
    3. '(abs' → logprob: -14.251928329467773
    4. '.abs' → logprob: -17.751928329467773
    5. '_abs' → logprob: -18.751928329467773
    6. '1' → logprob: -19.126928329467773
    7. 'x' → logprob: -19.501928329467773
    8. 'Abs' → logprob: -20.126928329467773
    9. '0' → logprob: -20.251928329467773
    10. ' x' → logprob: -20.501928329467773

Token 870: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.014375751838088036
    2. 'x' → logprob: -4.264375686645508
    3. '(' → logprob: -8.514375686645508
    4. ' (' → logprob: -11.639375686645508
    5. ' x' → logprob: -13.639375686645508
    6. '(abs' → logprob: -14.514375686645508
    7. '(
' → logprob: -14.764375686645508
    8. '1' → logprob: -15.639375686645508
    9. 'abs' → logprob: -15.889375686645508
    10. '(i' → logprob: -16.139375686645508

Token 871: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20141538977622986
    2. '-' → logprob: -1.7014154195785522
    3. ' ' → logprob: -13.201415061950684
    4. ' ' → logprob: -16.951416015625
    5. '-c' → logprob: -17.076416015625
    6. 'c' → logprob: -17.326416015625
    7. ')' → logprob: -17.826416015625
    8. '```' → logprob: -18.326416015625
    9. '[' → logprob: -18.451416015625
    10. '–' → logprob: -18.576416015625

Token 872: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014406509581021965
    2. ' c' → logprob: -8.875144004821777
    3. 'x' → logprob: -13.250144004821777
    4. '   ' → logprob: -13.625144004821777
    5. '	c' → logprob: -14.000144004821777
    6. ' ' → logprob: -16.250144958496094
    7. ')c' → logprob: -16.875144958496094
    8. '  ' → logprob: -17.000144958496094
    9. 'a' → logprob: -17.250144958496094
    10. 'с' → logprob: -17.250144958496094

Token 873: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0052688573487102985
    2. ')))' → logprob: -5.7552690505981445
    3. ')' → logprob: -6.2552690505981445
    4. '))
' → logprob: -8.755269050598145
    5. '))))' → logprob: -12.505269050598145
    6. '   ' → logprob: -13.630269050598145
    7. ' ))' → logprob: -13.880269050598145
    8. '),' → logprob: -13.880269050598145
    9. ')
' → logprob: -14.130269050598145
    10. '))

' → logprob: -14.380269050598145

Token 874: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034476007567718625
    2. '))' → logprob: -8.000345230102539
    3. '   ' → logprob: -12.375345230102539
    4. ')))' → logprob: -12.875345230102539
    5. ')
' → logprob: -13.625345230102539
    6. ' )' → logprob: -14.375345230102539
    7. '       ' → logprob: -14.875345230102539
    8. '})' → logprob: -16.25034523010254
    9. ')`' → logprob: -16.25034523010254
    10. ')}' → logprob: -16.87534523010254

Token 875: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12995471060276031
    2. '<|end|>' → logprob: -3.2549548149108887
    3. ':' → logprob: -3.5049548149108887
    4. '#' → logprob: -3.5049548149108887
    5. '```' → logprob: -5.254954814910889
    6. 'def' → logprob: -5.379954814910889
    7. '(' → logprob: -6.629954814910889
    8. '/' → logprob: -6.754954814910889
    9. '-' → logprob: -6.879954814910889
    10. '   ' → logprob: -7.004954814910889

Token 876: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.049375019967556
    2. '__' → logprob: -3.049375057220459
    3. ' ' → logprob: -7.924375057220459
    4. '_' → logprob: -7.924375057220459
    5. ' _' → logprob: -10.5493745803833
    6. '_name' → logprob: -12.0493745803833
    7. ' ' → logprob: -12.1743745803833
    8. 'name' → logprob: -12.1743745803833
    9. ' ' → logprob: -12.2993745803833
    10. ' True' → logprob: -12.5493745803833

Token 877: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.19710974395275116
    2. '==' → logprob: -2.3221096992492676
    3. '__' → logprob: -2.5721096992492676
    4. 'name' → logprob: -5.822109699249268
    5. '=="' → logprob: -6.697109699249268
    6. '=='' → logprob: -9.322110176086426
    7. ' __' → logprob: -9.447110176086426
    8. ' =="' → logprob: -10.947110176086426
    9. 'main' → logprob: -11.197110176086426
    10. '_' → logprob: -11.822110176086426

Token 878: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1398757123970427e-05
    2. '==' → logprob: -11.625011444091797
    3. '__.__' → logprob: -13.750011444091797
    4. '___' → logprob: -15.000011444091797
    5. '__
' → logprob: -15.500011444091797
    6. '____' → logprob: -15.500011444091797
    7. ' ==' → logprob: -15.625011444091797
    8. '_' → logprob: -15.750011444091797
    9. '=="' → logprob: -16.125011444091797
    10. '```' → logprob: -17.000011444091797

Token 879: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07461708784103394
    2. '==' → logprob: -2.6996171474456787
    3. ' ==' → logprob: -5.4496169090271
    4. '=="' → logprob: -8.199617385864258
    5. '=='' → logprob: -9.699617385864258
    6. '_' → logprob: -11.449617385864258
    7. '__.__' → logprob: -11.824617385864258
    8. '```' → logprob: -12.324617385864258
    9. '=' → logprob: -12.824617385864258
    10. '[' → logprob: -13.199617385864258

Token 880: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023262133821845055
    2. ''' → logprob: -3.7732620239257812
    3. '__' → logprob: -11.148262023925781
    4. ' "__' → logprob: -13.148262023925781
    5. ' '__' → logprob: -16.64826202392578
    6. '"name' → logprob: -16.64826202392578
    7. '"user' → logprob: -17.64826202392578
    8. '"class' → logprob: -18.02326202392578
    9. ''"' → logprob: -18.27326202392578
    10. '"os' → logprob: -18.64826202392578

Token 881: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0026842064689844847
    2. 'name' → logprob: -6.627684116363525
    3. '__' → logprob: -6.752684116363525
    4. 'built' → logprob: -8.752684593200684
    5. '"' → logprob: -11.377684593200684
    6. 'py' → logprob: -11.752684593200684
    7. 'm' → logprob: -13.002684593200684
    8. 'python' → logprob: -13.252684593200684
    9. 'code' → logprob: -13.377684593200684
    10. 'builtin' → logprob: -13.502684593200684

Token 882: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16122834384441376
    2. '__' → logprob: -1.9112282991409302
    3. '__':
' → logprob: -6.911228179931641
    4. '__["' → logprob: -12.66122817993164
    5. '__
' → logprob: -13.78622817993164
    6. '__.__' → logprob: -14.41122817993164
    7. '__:' → logprob: -14.66122817993164
    8. '=="' → logprob: -14.78622817993164
    9. '__",' → logprob: -14.91122817993164
    10. '==' → logprob: -14.91122817993164

Token 883: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013168111443519592
    2. 'main' → logprob: -4.5131683349609375
    3. ' main' → logprob: -6.6381683349609375
    4. '	main' → logprob: -7.1381683349609375
    5. '   ' → logprob: -11.263168334960938
    6. 'import' → logprob: -14.763168334960938
    7. '```' → logprob: -15.013168334960938
    8. '_main' → logprob: -15.138168334960938
    9. '   ' → logprob: -16.013168334960938
    10. ' ' → logprob: -16.263168334960938

Token 884: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.25
    3. 'import' → logprob: -21.25
    4. '   ' → logprob: -21.375
    5. '	main' → logprob: -21.5
    6. '(main' → logprob: -25.5
    7. '```' → logprob: -25.875
    8. '.main' → logprob: -26.5
    9. '_main' → logprob: -28.25
    10. 'from' → logprob: -28.625

Token 885: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 883
Tokens correctement prédits (1ère position, stricte): 228
Tokens correctement prédits (1ère position, avec adaptation): 246
Tokens correctement prédits (top 10): 540
Précision stricte (1ère position): 25.82%
Précision adaptée (1ère position): 27.86%
Précision (top 10): 61.16%
================================================================================
