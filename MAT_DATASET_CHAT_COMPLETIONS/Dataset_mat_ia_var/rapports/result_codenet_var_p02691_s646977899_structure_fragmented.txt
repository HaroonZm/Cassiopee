================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return int(input())

def read_sequence():
    return list(map(int, input().split()))

def initialize_defaultdict():
    from collections import defaultdict
    return defaultdict(int)

def initialize_answer():
    return 0

def initialize_empty_list():
    return []

def compute_l(i, s):
    return i + s

def compute_r(i, s):
    return i - s

def update_defaultdict(d, key):
    d[key] += 1

def update_answer(ans, d, key):
    return ans + d[key]

def process_element(i, s, d, ans):
    l = compute_l(i, s)
    r = compute_r(i, s)
    update_defaultdict(d, l)
    ans = update_answer(ans, d, r)
    return ans

def process_sequence(src, d, ans):
    for idx, val in enumerate(src, 1):
        ans = process_element(idx, val, d, ans)
    return ans

def print_output(result):
    print(result)

def main():
    N = read_input()
    src = read_sequence()
    ans = initialize_answer()
    d = initialize_defaultdict()
    e = initialize_empty_list()
    result = process_sequence(src, d, ans)
    print_output(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021150470711290836
    2. '_' → logprob: -7.002115249633789
    3. '():' → logprob: -7.377115249633789
    4. '(:' → logprob: -8.502115249633789
    5. '```' → logprob: -8.877115249633789
    6. '(_:' → logprob: -9.502115249633789
    7. ':' → logprob: -9.752115249633789
    8. ' (' → logprob: -10.127115249633789
    9. '(_' → logprob: -11.002115249633789
    10. '()' → logprob: -12.627115249633789

Token 4: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.851538896560669
    2. '```' → logprob: -1.351538896560669
    3. '\n' → logprob: -1.976538896560669
    4. '   ' → logprob: -2.476538896560669
    5. '    
' → logprob: -3.726538896560669
    6. '(' → logprob: -4.35153865814209
    7. ':' → logprob: -4.72653865814209
    8. ''\' → logprob: -5.35153865814209
    9. ''' → logprob: -5.47653865814209
    10. '``' → logprob: -5.60153865814209

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44198349118232727
    2. '```' → logprob: -2.066983461380005
    3. 'return' (adapté à ' return') → logprob: -2.691983461380005
    4. 'input' → logprob: -3.441983461380005
    5. '    ' → logprob: -3.441983461380005
    6. 'r' → logprob: -3.566983461380005
    7. '\' → logprob: -4.191983699798584
    8. 'x' → logprob: -4.316983699798584
    9. '       ' → logprob: -4.691983699798584
    10. '`' → logprob: -5.191983699798584

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16390419006347656
    2. ' input' → logprob: -2.5389041900634766
    3. 'input' → logprob: -3.2889041900634766
    4. '"' → logprob: -3.5389041900634766
    5. ''' → logprob: -5.538904190063477
    6. '  ' → logprob: -7.038904190063477
    7. ' "' → logprob: -8.413904190063477
    8. ' []' → logprob: -8.913904190063477
    9. '(' → logprob: -9.163904190063477
    10. '(input' → logprob: -9.163904190063477

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017083751736208797
    2. '('' → logprob: -6.501708507537842
    3. ''' → logprob: -9.376708030700684
    4. '("("' → logprob: -9.876708030700684
    5. '(
' → logprob: -11.376708030700684
    6. ' (' → logprob: -11.501708030700684
    7. '```' → logprob: -11.626708030700684
    8. '40' → logprob: -12.126708030700684
    9. '`' → logprob: -12.126708030700684
    10. '32' → logprob: -12.751708030700684

Token 8: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4295472800731659
    2. ')' → logprob: -1.4295473098754883
    3. '(' → logprob: -2.5545473098754883
    4. '()' → logprob: -3.6795473098754883
    5. '))' → logprob: -5.429547309875488
    6. '()))' → logprob: -6.304547309875488
    7. '('' → logprob: -8.804547309875488
    8. ' ())' → logprob: -9.304547309875488
    9. '(""))' → logprob: -9.429547309875488
    10. '(()' → logprob: -9.429547309875488

Token 9: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2878761291503906
    2. 'def' → logprob: -1.7878761291503906
    3. '\n' → logprob: -1.7878761291503906
    4. '
' → logprob: -2.2878761291503906
    5. '<|end|>' → logprob: -2.7878761291503906
    6. '```' → logprob: -2.9128761291503906
    7. '(' → logprob: -3.0378761291503906
    8. ' ' → logprob: -3.7878761291503906
    9. ')' → logprob: -4.412876129150391
    10. '' → logprob: -4.412876129150391

Token 10: ' read' (ID: 1729)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.3126503527164459
    2. ' write' → logprob: -2.437650442123413
    3. ' compute' → logprob: -2.812650442123413
    4. ' process' → logprob: -3.062650442123413
    5. ' main' → logprob: -3.562650442123413
    6. ' add' → logprob: -3.812650442123413
    7. ' factorial' → logprob: -5.187650203704834
    8. ' sum' → logprob: -5.187650203704834
    9. ' read' → logprob: -5.687650203704834
    10. ' ' → logprob: -5.687650203704834

Token 11: '_sequence' (ID: 55606)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4909064769744873
    2. '_input' → logprob: -1.1159064769744873
    3. '_line' → logprob: -3.1159064769744873
    4. '_string' → logprob: -5.490906715393066
    5. '_output' → logprob: -5.740906715393066
    6. '_value' → logprob: -6.115906715393066
    7. '_int' → logprob: -6.240906715393066
    8. '_array' → logprob: -6.865906715393066
    9. '_data' → logprob: -7.115906715393066
    10. '_integer' → logprob: -7.115906715393066

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06171577051281929
    2. '_' → logprob: -3.561715841293335
    3. '```' → logprob: -4.061715602874756
    4. '()' → logprob: -5.686715602874756
    5. '(_' → logprob: -6.561715602874756
    6. '():' → logprob: -6.811715602874756
    7. '_sequence' → logprob: -7.186715602874756
    8. '(_)' → logprob: -7.186715602874756
    9. '("("' → logprob: -7.686715602874756
    10. '_list' → logprob: -7.811715602874756

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026909864973276854
    2. '    ' → logprob: -6.25269079208374
    3. '(' → logprob: -8.127691268920898
    4. '    
' → logprob: -8.252691268920898
    5. '[' → logprob: -9.377691268920898
    6. '[]' → logprob: -10.877691268920898
    7. '()' → logprob: -11.127691268920898
    8. ' return' → logprob: -11.502691268920898
    9. '       ' → logprob: -11.627691268920898
    10. ' ' → logprob: -11.627691268920898

Token 14: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0042070150375366
    2. 'return' (adapté à ' return') → logprob: -1.5042070150375366
    3. '[]' → logprob: -1.6292070150375366
    4. '[' → logprob: -2.379207134246826
    5. ' return' → logprob: -3.254207134246826
    6. 'sequence' → logprob: -3.754207134246826
    7. 's' → logprob: -4.254207134246826
    8. 'data' → logprob: -4.254207134246826
    9. 'seq' → logprob: -4.754207134246826
    10. 'result' → logprob: -5.254207134246826

Token 15: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12968994677066803
    2. 'list' → logprob: -2.504689931869507
    3. ' [' → logprob: -3.379689931869507
    4. '[list' → logprob: -6.004690170288086
    5. '[' → logprob: -6.254690170288086
    6. ' []' → logprob: -7.129690170288086
    7. '[int' → logprob: -7.754690170288086
    8. '[]' → logprob: -9.254690170288086
    9. ' ' → logprob: -9.629690170288086
    10. '[input' → logprob: -9.879690170288086

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09486508369445801
    2. '(int' → logprob: -2.719865083694458
    3. '(input' → logprob: -3.969865083694458
    4. '(map' → logprob: -5.844864845275879
    5. '(range' → logprob: -6.094864845275879
    6. '(eval' → logprob: -8.719864845275879
    7. '(lambda' → logprob: -9.219864845275879
    8. '(list' → logprob: -10.094864845275879
    9. '[int' → logprob: -10.469864845275879
    10. '("("' → logprob: -10.719864845275879

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0033412138000130653
    2. '(' → logprob: -5.753341197967529
    3. 'int' → logprob: -9.128341674804688
    4. '=int' → logprob: -11.253341674804688
    5. '<int' → logprob: -11.378341674804688
    6. ',int' → logprob: -11.753341674804688
    7. ')' → logprob: -12.003341674804688
    8. '(input' → logprob: -12.253341674804688
    9. '(
' → logprob: -12.503341674804688
    10. '   ' → logprob: -12.753341674804688

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1836388111114502
    2. ',input' → logprob: -1.9336388111114502
    3. ',' → logprob: -3.93363881111145
    4. 'input' → logprob: -5.933638572692871
    5. '(' → logprob: -7.558638572692871
    6. ' input' → logprob: -8.933638572692871
    7. ' ,' → logprob: -9.433638572692871
    8. '=input' → logprob: -9.558638572692871
    9. ' (' → logprob: -9.933638572692871
    10. '))' → logprob: -10.433638572692871

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1603124737739563
    2. ' input' → logprob: -1.9103124141693115
    3. '(input' → logprob: -9.91031265258789
    4. ',input' → logprob: -11.16031265258789
    5. '   ' → logprob: -11.41031265258789
    6. '=input' → logprob: -12.16031265258789
    7. ' ' → logprob: -13.03531265258789
    8. '	input' → logprob: -13.53531265258789
    9. ')' → logprob: -14.03531265258789
    10. '<input' → logprob: -14.16031265258789

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01155915018171072
    2. '()))' → logprob: -5.261559009552002
    3. '()' → logprob: -5.386559009552002
    4. '))' → logprob: -6.886559009552002
    5. '())' → logprob: -8.01155948638916
    6. ')' → logprob: -8.38655948638916
    7. '())))' → logprob: -9.63655948638916
    8. ')))' → logprob: -10.38655948638916
    9. '()));' → logprob: -10.51155948638916
    10. '.' → logprob: -12.63655948638916

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005242056678980589
    2. 'strip' → logprob: -5.255241870880127
    3. 'rstrip' → logprob: -11.755242347717285
    4. ' split' → logprob: -14.755242347717285
    5. 'read' → logprob: -17.00524139404297
    6. ')' → logprob: -17.13024139404297
    7. '(split' → logprob: -17.63024139404297
    8. ' strip' → logprob: -18.63024139404297
    9. 'spl' → logprob: -18.88024139404297
    10. ' ' → logprob: -19.25524139404297

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.022920599207282066
    2. '()' → logprob: -4.522920608520508
    3. '))' → logprob: -5.397920608520508
    4. '())))' → logprob: -5.397920608520508
    5. '())' → logprob: -6.147920608520508
    6. ')))' → logprob: -7.522920608520508
    7. '(' → logprob: -10.397920608520508
    8. ')' → logprob: -11.022920608520508
    9. '()))
' → logprob: -12.147920608520508
    10. '   ' → logprob: -12.397920608520508

Token 23: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1526564061641693
    2. 'def' → logprob: -2.027656316757202
    3. '#' → logprob: -6.027656555175781
    4. '
' → logprob: -6.152656555175781
    5. '

' → logprob: -6.152656555175781
    6. 'n' → logprob: -7.027656555175781
    7. '' → logprob: -7.777656555175781
    8. 'de' → logprob: -7.902656555175781
    9. 'e' → logprob: -8.027656555175781
    10. 'a' → logprob: -8.152656555175781

Token 24: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6423265337944031
    2. ' solve' → logprob: -1.7673265933990479
    3. ' write' → logprob: -2.267326593399048
    4. ' process' → logprob: -3.142326593399048
    5. 'solve' → logprob: -3.142326593399048
    6. 'main' → logprob: -3.767326593399048
    7. ' sum' → logprob: -3.892326593399048
    8. 'write' → logprob: -4.142326354980469
    9. 'sum' → logprob: -4.517326354980469
    10. 'process' → logprob: -4.642326354980469

Token 25: '_default' (ID: 21934)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03570912405848503
    2. '_array' → logprob: -4.285708904266357
    3. '(' → logprob: -5.160708904266357
    4. '_data' → logprob: -6.535708904266357
    5. '_matrix' → logprob: -6.910708904266357
    6. '_stack' → logprob: -7.160708904266357
    7. '_vector' → logprob: -7.285708904266357
    8. '_counter' → logprob: -7.285708904266357
    9. '_tree' → logprob: -7.285708904266357
    10. '_parameters' → logprob: -7.410708904266357

Token 26: 'dict' (ID: 20993)
  Prédit: '_dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.8485903143882751
    2. 'dict' → logprob: -0.8485903143882751
    3. '_values' → logprob: -2.84859037399292
    4. '_value' → logprob: -2.84859037399292
    5. '_parameters' → logprob: -4.84859037399292
    6. '_dictionary' → logprob: -5.34859037399292
    7. '_list' → logprob: -5.97359037399292
    8. '_config' → logprob: -6.22359037399292
    9. '_settings' → logprob: -6.34859037399292
    10. '_state' → logprob: -6.47359037399292

Token 27: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004747198894619942
    2. 'from' → logprob: -6.00474739074707
    3. '_' → logprob: -7.00474739074707
    4. ' (' → logprob: -7.62974739074707
    5. '('' → logprob: -9.00474739074707
    6. '()' → logprob: -9.25474739074707
    7. '(from' → logprob: -9.25474739074707
    8. '_from' → logprob: -9.37974739074707
    9. '("("' → logprob: -9.37974739074707
    10. 'import' → logprob: -9.50474739074707

Token 28: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2476090043783188
    2. '():' → logprob: -2.2476089000701904
    3. 'from' → logprob: -2.6226089000701904
    4. '()' → logprob: -3.9976089000701904
    5. ' from' → logprob: -5.2476091384887695
    6. ' defaultdict' → logprob: -5.6226091384887695
    7. '   ' → logprob: -5.8726091384887695
    8. 'import' → logprob: -6.3726091384887695
    9. '(collection' → logprob: -6.9976091384887695
    10. '(
' → logprob: -6.9976091384887695

Token 29: ' from' (ID: 591)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.6982294917106628
    2. '   ' → logprob: -1.3232295513153076
    3. 'from' (adapté à ' from') → logprob: -2.3232295513153076
    4. ' from' → logprob: -2.5732295513153076
    5. 'default' → logprob: -3.4482295513153076
    6. ' return' → logprob: -4.3232293128967285
    7. ' default' → logprob: -5.5732293128967285
    8. 'import' → logprob: -5.9482293128967285
    9. ' collections' → logprob: -6.0732293128967285
    10. ' ' → logprob: -6.0732293128967285

Token 30: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0009168167016468942
    2. 'collections' → logprob: -7.000916957855225
    3. ' collection' → logprob: -12.750916481018066
    4. ' ' → logprob: -13.250916481018066
    5. ' cole' → logprob: -15.125916481018066
    6. '.collections' → logprob: -15.500916481018066
    7. ' colle' → logprob: -15.875916481018066
    8. ' ' → logprob: -17.375917434692383
    9. ' kole' → logprob: -17.750917434692383
    10. 'collection' → logprob: -18.500917434692383

Token 31: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05643448606133461
    2. 'import' → logprob: -2.931434392929077
    3. '.' → logprob: -7.181434631347656
    4. ' defaultdict' → logprob: -7.306434631347656
    5. ' ' → logprob: -9.681434631347656
    6. '	import' → logprob: -10.681434631347656
    7. '.import' → logprob: -11.306434631347656
    8. '<|end|>' → logprob: -12.306434631347656
    9. '.Counter' → logprob: -12.431434631347656
    10. '   ' → logprob: -12.681434631347656

Token 32: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.00043698702938854694
    2. ' ' → logprob: -8.125436782836914
    3. 'default' → logprob: -9.500436782836914
    4. ' default' → logprob: -9.750436782836914
    5. ' collections' → logprob: -11.875436782836914
    6. ' ' → logprob: -14.625436782836914
    7. ' def' → logprob: -16.125436782836914
    8. ' space' → logprob: -16.250436782836914
    9. 'collections' → logprob: -17.000436782836914
    10. ' import' → logprob: -17.125436782836914

Token 33: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018677765503525734
    2. '   ' → logprob: -4.643677711486816
    3. '()' → logprob: -5.643677711486816
    4. '(
' → logprob: -6.268677711486816
    5. '    ' → logprob: -6.643677711486816
    6. '\' → logprob: -7.643677711486816
    7. '    
' → logprob: -7.893677711486816
    8. '('' → logprob: -8.393677711486816
    9. '('\' → logprob: -8.768677711486816
    10. '(lambda' → logprob: -9.268677711486816

Token 34: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1783456951379776
    2. '()' → logprob: -2.3033456802368164
    3. '<|end|>' → logprob: -3.1783456802368164
    4. '   ' → logprob: -4.678345680236816
    5. '(
' → logprob: -5.928345680236816
    6. 'def' → logprob: -6.303345680236816
    7. ')' → logprob: -7.053345680236816
    8. ' defaultdict' → logprob: -7.303345680236816
    9. ' ' → logprob: -7.553345680236816
    10. '<|end|>' → logprob: -7.553345680236816

Token 35: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6470629572868347
    2. ' defaultdict' → logprob: -0.8970629572868347
    3. 'default' → logprob: -3.2720630168914795
    4. 'return' (adapté à ' return') → logprob: -4.8970627784729
    5. 'def' → logprob: -5.2720627784729
    6. '()' → logprob: -5.3970627784729
    7. ' return' → logprob: -5.8970627784729
    8. '(' → logprob: -6.6470627784729
    9. '_default' → logprob: -6.6470627784729
    10. '(default' → logprob: -6.6470627784729

Token 36: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.0004883344518020749
    2. 'default' → logprob: -7.62548828125
    3. ' default' → logprob: -15.75048828125
    4. '   ' → logprob: -16.75048828125
    5. '"default' → logprob: -17.87548828125
    6. '(default' → logprob: -18.37548828125
    7. ' ' → logprob: -18.50048828125
    8. ''default' → logprob: -18.50048828125
    9. ' collections' → logprob: -18.87548828125
    10. '_default' → logprob: -18.87548828125

Token 37: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7498035430908203
    2. '(int' → logprob: -0.9998035430908203
    3. '(list' → logprob: -2.2498035430908203
    4. '(lambda' → logprob: -3.1248035430908203
    5. '(<' → logprob: -4.74980354309082
    6. '(dict' → logprob: -6.74980354309082
    7. '(
' → logprob: -8.37480354309082
    8. '(None' → logprob: -10.12480354309082
    9. ' (' → logprob: -10.49980354309082
    10. '(bool' → logprob: -10.62480354309082

Token 38: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '))' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.625001907348633
    4. ')
' → logprob: -16.125001907348633
    5. '())' → logprob: -16.375001907348633
    6. '()' → logprob: -16.750001907348633
    7. ')`' → logprob: -16.750001907348633
    8. '   ' → logprob: -17.625001907348633
    9. ')))' → logprob: -17.625001907348633
    10. '`)' → logprob: -17.625001907348633

Token 39: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03777417540550232
    2. 'def' → logprob: -3.537774085998535
    3. '#' → logprob: -5.037774085998535
    4. 'de' → logprob: -8.162774085998535
    5. '
' → logprob: -8.287774085998535
    6. 'a' → logprob: -8.287774085998535
    7. '\' → logprob: -8.412774085998535
    8. 'e' → logprob: -9.162774085998535
    9. '<|end|>' → logprob: -9.412774085998535
    10. '```' → logprob: -9.912774085998535

Token 40: ' initialize' (ID: 18400)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.19161733984947205
    2. ' calculate' → logprob: -3.066617250442505
    3. ' process' → logprob: -3.566617250442505
    4. ' solve' → logprob: -4.066617488861084
    5. ' count' → logprob: -4.316617488861084
    6. ' main' → logprob: -4.316617488861084
    7. ' compute' → logprob: -4.691617488861084
    8. ' ' → logprob: -4.941617488861084
    9. ' find' → logprob: -5.066617488861084
    10. '_' → logprob: -5.316617488861084

Token 41: '_answer' (ID: 65702)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9206432104110718
    2. '_default' → logprob: -1.1706432104110718
    3. '_dict' → logprob: -1.4206432104110718
    4. '_list' → logprob: -3.7956433296203613
    5. '(' → logprob: -4.920643329620361
    6. '(_' → logprob: -5.795643329620361
    7. '(dict' → logprob: -5.795643329620361
    8. '_d' → logprob: -6.295643329620361
    9. '_(' → logprob: -6.420643329620361
    10. '_set' → logprob: -6.420643329620361

Token 42: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7472571730613708
    2. '():' → logprob: -0.8722571730613708
    3. '_' → logprob: -2.6222572326660156
    4. '_list' → logprob: -4.372257232666016
    5. 's' → logprob: -4.872257232666016
    6. '_array' → logprob: -5.247257232666016
    7. '[]' → logprob: -5.497257232666016
    8. '_dict' → logprob: -6.497257232666016
    9. '():
' → logprob: -6.872257232666016
    10. ' ()' → logprob: -7.497257232666016

Token 43: '   ' (ID: 271)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6990453600883484
    2. '{}' → logprob: -1.4490454196929932
    3. '   ' → logprob: -1.8240454196929932
    4. '0' → logprob: -2.324045419692993
    5. 'default' → logprob: -5.824045181274414
    6. '=' → logprob: -6.699045181274414
    7. ' []' → logprob: -6.949045181274414
    8. ' {}' → logprob: -7.324045181274414
    9. '{' → logprob: -7.449045181274414
    10. ' =' → logprob: -7.699045181274414

Token 44: ' return' (ID: 622)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.6109673976898193
    2. '[]' → logprob: -0.9859673976898193
    3. '0' → logprob: -2.8609673976898193
    4. ' []' → logprob: -4.610967636108398
    5. ' {}' → logprob: -5.110967636108398
    6. 'default' → logprob: -5.110967636108398
    7. '   ' → logprob: -6.735967636108398
    8. ' ' → logprob: -6.860967636108398
    9. '{' → logprob: -7.110967636108398
    10. '[' → logprob: -7.360967636108398

Token 45: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.44017040729522705
    2. '{}' → logprob: -1.315170407295227
    3. ' []' → logprob: -3.1901702880859375
    4. '0' → logprob: -3.5651702880859375
    5. ' {}' → logprob: -4.5651702880859375
    6. ' ' → logprob: -5.4401702880859375
    7. '[' → logprob: -6.5651702880859375
    8. 'default' → logprob: -7.4401702880859375
    9. '{' → logprob: -7.6901702880859375
    10. ' [' → logprob: -8.190170288085938

Token 46: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.19818682968616486
    2. '{}' → logprob: -1.8231868743896484
    3. '0' → logprob: -4.198186874389648
    4. 'default' → logprob: -6.073186874389648
    5. '[' → logprob: -7.448186874389648
    6. 'dict' → logprob: -8.698186874389648
    7. '{' → logprob: -9.698186874389648
    8. '[]}' → logprob: -9.948186874389648
    9. '[]
' → logprob: -10.698186874389648
    10. ' []' → logprob: -10.698186874389648

Token 47: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6988699436187744
    2. 'def' → logprob: -1.0738699436187744
    3. '

' → logprob: -2.8238699436187744
    4. '\' → logprob: -3.5738699436187744
    5. '<|end|>' → logprob: -3.6988699436187744
    6. '\n' → logprob: -3.8238699436187744
    7. 'd' → logprob: -4.573869705200195
    8. 'n' → logprob: -5.198869705200195
    9. '' → logprob: -6.198869705200195
    10. '_' → logprob: -6.323869705200195

Token 48: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22761599719524384
    2. 'def' → logprob: -1.6026159524917603
    3. '#' → logprob: -7.102615833282471
    4. '\' → logprob: -7.852615833282471
    5. 'de' → logprob: -8.102616310119629
    6. 'n' → logprob: -8.477616310119629
    7. '
' → logprob: -8.602616310119629
    8. 'a' → logprob: -8.852616310119629
    9. '```' → logprob: -9.977616310119629
    10. 'e' → logprob: -10.852616310119629

Token 49: ' initialize' (ID: 18400)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.9749768376350403
    2. ' calculate' → logprob: -1.4749767780303955
    3. ' main' → logprob: -2.0999767780303955
    4. ' process' → logprob: -2.4749767780303955
    5. ' compute' → logprob: -2.5999767780303955
    6. ' count' → logprob: -2.8499767780303955
    7. ' read' → logprob: -3.8499767780303955
    8. ' find' → logprob: -4.474977016448975
    9. ' check' → logprob: -5.474977016448975
    10. ' initialize' → logprob: -5.599977016448975

Token 50: '_empty' (ID: 35051)
  Prédit: '_counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counter' → logprob: -1.4544165134429932
    2. '_count' → logprob: -2.079416513442993
    3. '_' → logprob: -2.204416513442993
    4. '_result' → logprob: -2.579416513442993
    5. '_map' → logprob: -2.579416513442993
    6. '_dict' → logprob: -3.079416513442993
    7. '_answer' → logprob: -3.204416513442993
    8. '_list' → logprob: -3.329416513442993
    9. '_sequence' → logprob: -3.329416513442993
    10. '()' → logprob: -3.454416513442993

Token 51: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24011996388435364
    2. '_list' → logprob: -1.6151199340820312
    3. '_dict' → logprob: -4.990119934082031
    4. '_string' → logprob: -5.240119934082031
    5. '_set' → logprob: -6.615119934082031
    6. '_dictionary' → logprob: -7.990119934082031
    7. '_map' → logprob: -8.240119934082031
    8. '_array' → logprob: -8.740119934082031
    9. '_space' → logprob: -8.990119934082031
    10. '_line' → logprob: -9.615119934082031

Token 52: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.774276774493046e-05
    2. ' ():' → logprob: -10.625038146972656
    3. '()' → logprob: -11.375038146972656
    4. '():
' → logprob: -13.750038146972656
    5. ':' → logprob: -14.625038146972656
    6. '(' → logprob: -15.125038146972656
    7. ' ()' → logprob: -17.750038146972656
    8. '():
' → logprob: -18.375038146972656
    9. '(:' → logprob: -18.375038146972656
    10. '()>' → logprob: -18.750038146972656

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4778420925140381
    2. '[]' → logprob: -0.9778420925140381
    3. ' []' → logprob: -5.602842330932617
    4. '[]
' → logprob: -10.602842330932617
    5. ' ' → logprob: -11.352842330932617
    6. '    ' → logprob: -11.852842330932617
    7. '  ' → logprob: -11.977842330932617
    8. '[:]' → logprob: -12.352842330932617
    9. ' return' → logprob: -12.852842330932617
    10. '()' → logprob: -13.352842330932617

Token 54: ' return' (ID: 622)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.13279154896736145
    2. '   ' → logprob: -2.132791519165039
    3. 'return' (adapté à ' return') → logprob: -5.257791519165039
    4. ' []' → logprob: -7.507791519165039
    5. ' return' → logprob: -10.382791519165039
    6. '[]
' → logprob: -10.507791519165039
    7. '    ' → logprob: -11.632791519165039
    8. '  ' → logprob: -12.007791519165039
    9. ' ' → logprob: -12.007791519165039
    10. '	return' → logprob: -12.882791519165039

Token 55: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2519548535346985
    2. '[]' → logprob: -1.5019547939300537
    3. '[' → logprob: -11.251955032348633
    4. ' ' → logprob: -12.126955032348633
    5. ' [' → logprob: -12.876955032348633
    6. '[]}' → logprob: -13.251955032348633
    7. ' []
' → logprob: -13.876955032348633
    8. ' ' → logprob: -14.376955032348633
    9. ' [];' → logprob: -14.501955032348633
    10. '[]>' → logprob: -15.251955032348633

Token 56: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.036837153136730194
    2. 'd' → logprob: -3.536837100982666
    3. '\' → logprob: -6.161837100982666
    4. '#' → logprob: -6.411837100982666
    5. '<|end|>' → logprob: -6.661837100982666
    6. 'n' → logprob: -7.536837100982666
    7. '```' → logprob: -7.661837100982666
    8. '
' → logprob: -7.911837100982666
    9. 'a' → logprob: -8.661837577819824
    10. '\n' → logprob: -9.036837577819824

Token 57: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1946403682231903
    2. ' initialize' → logprob: -2.6946403980255127
    3. '_' → logprob: -3.3196403980255127
    4. ' read' → logprob: -3.6946403980255127
    5. ' solve' → logprob: -4.569640159606934
    6. ' process' → logprob: -5.319640159606934
    7. '_initialize' → logprob: -5.319640159606934
    8. 'main' → logprob: -5.569640159606934
    9. ' _' → logprob: -5.569640159606934
    10. ' ' → logprob: -6.069640159606934

Token 58: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3716415464878082
    2. '_frequency' → logprob: -1.8716415166854858
    3. '_sum' → logprob: -2.9966416358947754
    4. '_max' → logprob: -4.121641635894775
    5. '_answer' → logprob: -4.496641635894775
    6. '_count' → logprob: -4.496641635894775
    7. '_value' → logprob: -4.746641635894775
    8. '(' → logprob: -4.871641635894775
    9. '_freq' → logprob: -5.121641635894775
    10. '_f' → logprob: -5.121641635894775

Token 59: '(i' (ID: 3649)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6814846992492676
    2. 'ength' → logprob: -1.8064846992492676
    3. 'ist' → logprob: -1.9314846992492676
    4. 'eft' → logprob: -2.5564846992492676
    5. 'oop' → logprob: -2.8064846992492676
    6. 'e' → logprob: -4.556484699249268
    7. 'ong' → logprob: -4.556484699249268
    8. 'ast' → logprob: -5.181484699249268
    9. 'cm' → logprob: -5.681484699249268
    10. '```' → logprob: -6.181484699249268

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7687031030654907
    2. ')' → logprob: -1.3937031030654907
    3. '):' → logprob: -1.5187031030654907
    4. 'n' → logprob: -3.643702983856201
    5. 'nt' → logprob: -4.268702983856201
    6. '+' → logprob: -5.268702983856201
    7. 'dx' → logprob: -5.643702983856201
    8. 'nd' → logprob: -5.643702983856201
    9. '-' → logprob: -6.018702983856201
    10. '_' → logprob: -6.143702983856201

Token 61: ' s' (ID: 265)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8147457242012024
    2. ' j' → logprob: -1.1897456645965576
    3. ' n' → logprob: -2.8147456645965576
    4. 'n' → logprob: -3.0647456645965576
    5. 'i' → logprob: -4.314745903015137
    6. ' i' → logprob: -4.752245903015137
    7. 'k' → logprob: -4.814745903015137
    8. 'r' → logprob: -4.939745903015137
    9. ' seq' → logprob: -5.002245903015137
    10. ' sequence' → logprob: -5.064745903015137

Token 62: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9138988256454468
    2. '):' → logprob: -1.2888988256454468
    3. ',' → logprob: -1.4138988256454468
    4. '[' → logprob: -3.4138989448547363
    5. '[i' → logprob: -4.163898944854736
    6. 'e' → logprob: -5.663898944854736
    7. '_' → logprob: -6.038898944854736
    8. '_i' → logprob: -6.163898944854736
    9. 's' → logprob: -6.288898944854736
    10. 'i' → logprob: -6.538898944854736

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6268671154975891
    2. ' =' → logprob: -1.3768670558929443
    3. '=' → logprob: -1.7518670558929443
    4. 's' → logprob: -4.876867294311523
    5. ':' → logprob: -5.001867294311523
    6. '    ' → logprob: -5.626867294311523
    7. ' ' → logprob: -5.626867294311523
    8. ' s' → logprob: -6.126867294311523
    9. '[' → logprob: -6.501867294311523
    10. '[]' → logprob: -6.626867294311523

Token 64: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6304401159286499
    2. ' return' → logprob: -2.6304402351379395
    3. 'return' (adapté à ' return') → logprob: -3.0054402351379395
    4. 'if' → logprob: -3.0054402351379395
    5. ' ' → logprob: -3.1304402351379395
    6. ' if' → logprob: -3.1304402351379395
    7. 's' → logprob: -3.2554402351379395
    8. '    ' → logprob: -3.5054402351379395
    9. '=' → logprob: -3.5054402351379395
    10. ' l' → logprob: -3.7554402351379395

Token 65: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6381403803825378
    2. ' i' → logprob: -1.5131404399871826
    3. 's' → logprob: -2.2631404399871826
    4. 'i' → logprob: -3.6381404399871826
    5. ' max' → logprob: -3.6381404399871826
    6. ' (' → logprob: -3.7631404399871826
    7. ' min' → logprob: -3.8881404399871826
    8. ' ' → logprob: -4.6381402015686035
    9. '(s' → logprob: -5.0131402015686035
    10. ' len' → logprob: -5.2631402015686035

Token 66: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3201545774936676
    2. ' ' → logprob: -2.0701546669006348
    3. '*' → logprob: -3.5701546669006348
    4. '%' → logprob: -3.5701546669006348
    5. ' +' → logprob: -3.8201546669006348
    6. '<|end|>' → logprob: -3.8201546669006348
    7. ' *' → logprob: -4.195154666900635
    8. '-' → logprob: -4.945154666900635
    9. ' %' → logprob: -5.195154666900635
    10. '_' → logprob: -5.195154666900635

Token 67: ' s' (ID: 265)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5506407022476196
    2. 's' → logprob: -1.4256407022476196
    3. ' s' → logprob: -2.05064058303833
    4. ' ' → logprob: -3.67564058303833
    5. 'len' → logprob: -4.30064058303833
    6. ' len' → logprob: -4.67564058303833
    7. ' (' → logprob: -6.30064058303833
    8. '2' → logprob: -6.80064058303833
    9. '(' → logprob: -7.30064058303833
    10. '(s' → logprob: -7.80064058303833

Token 68: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.113089680671692
    2. '(' → logprob: -1.238089680671692
    3. '_' → logprob: -1.863089680671692
    4. '*' → logprob: -2.3630895614624023
    5. '+' → logprob: -3.1130895614624023
    6. ')' → logprob: -4.113089561462402
    7. '[' → logprob: -4.238089561462402
    8. '.' → logprob: -4.363089561462402
    9. '-' → logprob: -4.988089561462402
    10. '(
' → logprob: -4.988089561462402

Token 69: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5962392091751099
    2. 'def' → logprob: -1.7212392091751099
    3. '(' → logprob: -2.0962390899658203
    4. '*' → logprob: -2.9712390899658203
    5. '[' → logprob: -3.5962390899658203
    6. '+' → logprob: -4.34623908996582
    7. ')' → logprob: -4.72123908996582
    8. '.' → logprob: -4.84623908996582
    9. '
' → logprob: -5.09623908996582
    10. '<|end|>' → logprob: -5.22123908996582

Token 70: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.1812763512134552
    2. 'compute' → logprob: -2.431276321411133
    3. '_' → logprob: -2.931276321411133
    4. '_compute' → logprob: -4.181276321411133
    5. ' main' → logprob: -5.556276321411133
    6. ' ' → logprob: -6.931276321411133
    7. 'def' → logprob: -7.806276321411133
    8. ' f' → logprob: -7.806276321411133
    9. ' def' → logprob: -7.931276321411133
    10. ' s' → logprob: -8.056276321411133

Token 71: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.025567801669239998
    2. '_' → logprob: -4.650568008422852
    3. '_l' → logprob: -4.775568008422852
    4. '_m' → logprob: -5.900568008422852
    5. '_s' → logprob: -7.025568008422852
    6. '_j' → logprob: -7.650568008422852
    7. '_u' → logprob: -7.900568008422852
    8. '_i' → logprob: -8.025568008422852
    9. '_a' → logprob: -8.150568008422852
    10. 'r' → logprob: -8.150568008422852

Token 72: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0023429463617503643
    2. '(' → logprob: -6.12734317779541
    3. '(s' → logprob: -9.00234317779541
    4. ' (' → logprob: -10.87734317779541
    5. '(a' → logprob: -12.12734317779541
    6. '(l' → logprob: -12.62734317779541
    7. '(j' → logprob: -13.50234317779541
    8. '(r' → logprob: -13.87734317779541
    9. '(I' → logprob: -14.37734317779541
    10. '(n' → logprob: -14.50234317779541

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001236060750670731
    2. ' ,' → logprob: -7.1262359619140625
    3. ',s' → logprob: -7.8762359619140625
    4. ')' → logprob: -10.876235961914062
    5. 's' → logprob: -11.501235961914062
    6. ' s' → logprob: -11.501235961914062
    7. ' ' → logprob: -12.626235961914062
    8. '+' → logprob: -13.126235961914062
    9. ' +' → logprob: -13.501235961914062
    10. '   ' → logprob: -14.001235961914062

Token 74: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.28673437237739563
    2. 's' → logprob: -1.4117343425750732
    3. ' ' → logprob: -6.411734580993652
    4. '1' → logprob: -6.786734580993652
    5. ' i' → logprob: -7.286734580993652
    6. ' t' → logprob: -7.661734580993652
    7. 'i' → logprob: -8.286734580993652
    8. '2' → logprob: -8.724234580993652
    9. 't' → logprob: -9.161734580993652
    10. ')' → logprob: -9.349234580993652

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035214271396398544
    2. ')' → logprob: -3.4102141857147217
    3. '):
' → logprob: -6.910214424133301
    4. '+' → logprob: -8.5352144241333
    5. '   ' → logprob: -9.1602144241333
    6. ',' → logprob: -9.6602144241333
    7. ':' → logprob: -9.7852144241333
    8. '=' → logprob: -10.2852144241333
    9. '-' → logprob: -10.4102144241333
    10. ')+' → logprob: -10.5352144241333

Token 76: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6908941268920898
    2. 'i' → logprob: -0.8158941268920898
    3. '   ' → logprob: -3.06589412689209
    4. ' return' → logprob: -5.44089412689209
    5. ' s' → logprob: -5.69089412689209
    6. 's' → logprob: -6.94089412689209
    7. 'return' → logprob: -7.06589412689209
    8. ' ' → logprob: -9.06589412689209
    9. '=' → logprob: -9.44089412689209
    10. ' def' → logprob: -10.31589412689209

Token 77: ' return' (ID: 622)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38434094190597534
    2. ' i' → logprob: -1.3843410015106201
    3. '   ' → logprob: -3.00934100151062
    4. ' return' → logprob: -4.884340763092041
    5. 'return' (adapté à ' return') → logprob: -5.134340763092041
    6. ' s' → logprob: -5.884340763092041
    7. 's' → logprob: -6.009340763092041
    8. ' ' → logprob: -8.8843412399292
    9. '  ' → logprob: -9.8843412399292
    10. '    ' → logprob: -10.1343412399292

Token 78: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25516477227211
    2. ' i' → logprob: -1.5051647424697876
    3. 's' → logprob: -6.380164623260498
    4. ' s' → logprob: -7.380164623260498
    5. '   ' → logprob: -8.005165100097656
    6. '(i' → logprob: -8.630165100097656
    7. ' ' → logprob: -9.130165100097656
    8. ' (' → logprob: -9.380165100097656
    9. '2' → logprob: -10.005165100097656
    10. '(' → logprob: -10.380165100097656

Token 79: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2057504951953888
    2. '+' → logprob: -1.7057504653930664
    3. '<|end|>' → logprob: -5.830750465393066
    4. ' ' → logprob: -7.330750465393066
    5. ' +
' → logprob: -7.705750465393066
    6. ' -' → logprob: -9.330750465393066
    7. '-' → logprob: -9.330750465393066
    8. '+
' → logprob: -10.330750465393066
    9. '<|end|>' → logprob: -10.580750465393066
    10. 's' → logprob: -11.830750465393066

Token 80: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01635480672121048
    2. ' s' → logprob: -4.141355037689209
    3. '1' → logprob: -8.14135456085205
    4. ' ' → logprob: -10.89135456085205
    5. '<|end|>' → logprob: -12.01635456085205
    6. '	s' → logprob: -13.76635456085205
    7. '_s' → logprob: -14.26635456085205
    8. '   ' → logprob: -15.01635456085205
    9. '2' → logprob: -15.07885456085205
    10. '7' → logprob: -15.20385456085205

Token 81: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2360893040895462
    2. '<|end|>' → logprob: -2.7360892295837402
    3. '
' → logprob: -2.9860892295837402
    4. '#' → logprob: -3.8610892295837402
    5. '\' → logprob: -4.11108922958374
    6. '\n' → logprob: -4.23608922958374
    7. '[' → logprob: -4.36108922958374
    8. '_' → logprob: -4.48608922958374
    9. 'd' → logprob: -5.36108922958374
    10. '```' → logprob: -5.98608922958374

Token 83: ' update' (ID: 4027)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -1.1435891389846802
    2. ' main' → logprob: -1.2685891389846802
    3. ' process' → logprob: -1.7685891389846802
    4. ' solve' → logprob: -2.2685890197753906
    5. ' count' → logprob: -3.7685890197753906
    6. ' find' → logprob: -3.8935890197753906
    7. '_' → logprob: -4.018589019775391
    8. ' calculate' → logprob: -4.268589019775391
    9. ' max' → logprob: -5.018589019775391
    10. ' ' → logprob: -5.268589019775391

Token 84: '_default' (ID: 21934)
  Prédit: '_answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_answer' → logprob: -0.3548327386379242
    2. '_' → logprob: -1.4798327684402466
    3. '_counts' → logprob: -4.104832649230957
    4. '_(' → logprob: -4.979832649230957
    5. '_frequency' → logprob: -5.104832649230957
    6. '_answers' → logprob: -5.104832649230957
    7. '_counter' → logprob: -5.104832649230957
    8. '_count' → logprob: -5.229832649230957
    9. '_map' → logprob: -5.729832649230957
    10. '_dict' → logprob: -5.854832649230957

Token 85: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -5.919942486798391e-05
    2. ' dict' → logprob: -10.375059127807617
    3. '_dict' → logprob: -10.500059127807617
    4. 'default' → logprob: -16.000059127807617
    5. '(dict' → logprob: -16.500059127807617
    6. 'Dict' → logprob: -16.750059127807617
    7. 'def' → logprob: -16.875059127807617
    8. 'ict' → logprob: -17.625059127807617
    9. '.dict' → logprob: -18.375059127807617
    10. ' defaultdict' → logprob: -18.500059127807617

Token 86: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032529331743717194
    2. '(d' → logprob: -3.532529354095459
    3. '(def' → logprob: -6.782529354095459
    4. '(dd' → logprob: -7.907529354095459
    5. '(D' → logprob: -8.5325288772583
    6. '(df' → logprob: -8.6575288772583
    7. '(_' → logprob: -9.1575288772583
    8. '(a' → logprob: -9.1575288772583
    9. '(dict' → logprob: -9.1575288772583
    10. '(ds' → logprob: -9.6575288772583

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003101065754890442
    2. '[' → logprob: -6.628100872039795
    3. ')' → logprob: -6.878100872039795
    4. ' ,' → logprob: -8.378101348876953
    5. 'ef' → logprob: -8.878101348876953
    6. ',d' → logprob: -9.378101348876953
    7. 'ictionary' → logprob: -9.503101348876953
    8. 'ict' → logprob: -10.628101348876953
    9. ',)' → logprob: -10.628101348876953
    10. ' ' → logprob: -10.878101348876953

Token 88: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.17855970561504364
    2. 'key' → logprob: -2.9285597801208496
    3. ' k' → logprob: -2.9285597801208496
    4. ' l' → logprob: -3.6785597801208496
    5. 'k' → logprob: -3.8035597801208496
    6. 'l' → logprob: -5.80355978012085
    7. ' i' → logprob: -6.92855978012085
    8. ' index' → logprob: -6.92855978012085
    9. ' idx' → logprob: -7.42855978012085
    10. ' ' → logprob: -7.55355978012085

Token 89: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003540542966220528
    2. '):' → logprob: -8.250353813171387
    3. ' ,' → logprob: -9.500353813171387
    4. ',key' → logprob: -11.875353813171387
    5. ',value' → logprob: -12.750353813171387
    6. '   ' → logprob: -12.875353813171387
    7. ')' → logprob: -13.250353813171387
    8. '):
' → logprob: -14.250353813171387
    9. '  ' → logprob: -14.500353813171387
    10. ',k' → logprob: -14.875353813171387

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042721327394247055
    2. 'd' → logprob: -3.9177212715148926
    3. ' d' → logprob: -3.9177212715148926
    4. ' +=' → logprob: -7.417721271514893
    5. '    ' → logprob: -8.04272174835205
    6. '[d' → logprob: -8.41772174835205
    7. '[' → logprob: -8.54272174835205
    8. ' =' → logprob: -8.79272174835205
    9. ' ' → logprob: -9.04272174835205
    10. ')' → logprob: -9.29272174835205

Token 91: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.7436143755912781
    2. ' d' → logprob: -0.9936143755912781
    3. '   ' → logprob: -1.8686144351959229
    4. ' ' → logprob: -11.243614196777344
    5. '	d' → logprob: -11.618614196777344
    6. '  ' → logprob: -12.368614196777344
    7. '```' → logprob: -12.868614196777344
    8. '    ' → logprob: -13.493614196777344
    9. ')d' → logprob: -13.868614196777344
    10. '[d' → logprob: -14.493614196777344

Token 92: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.000714935187716037
    2. '[' → logprob: -7.2507147789001465
    3. '+=' → logprob: -12.750715255737305
    4. ' +=' → logprob: -14.500715255737305
    5. ' [' → logprob: -15.000715255737305
    6. '+' → logprob: -15.000715255737305
    7. '[]' → logprob: -15.375715255737305
    8. '[...]' → logprob: -15.750715255737305
    9. '```' → logprob: -16.125715255737305
    10. 'key' → logprob: -16.250715255737305

Token 93: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020430791191756725
    2. ']+=' → logprob: -6.7520432472229
    3. ' ]' → logprob: -7.1270432472229
    4. ')' → logprob: -9.752042770385742
    5. ')]' → logprob: -12.002042770385742
    6. '+=' → logprob: -13.752042770385742
    7. ' +=' → logprob: -14.252042770385742
    8. '`]' → logprob: -14.377042770385742
    9. '   ' → logprob: -14.502042770385742
    10. '']' → logprob: -14.502042770385742

Token 94: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06291469186544418
    2. ' +=' → logprob: -2.8129146099090576
    3. '=' → logprob: -7.062914848327637
    4. '+' → logprob: -9.562914848327637
    5. ']+=' → logprob: -11.187914848327637
    6. ' ' → logprob: -13.437914848327637
    7. '+='' → logprob: -13.687914848327637
    8. '+=(' → logprob: -14.437914848327637
    9. '```' → logprob: -14.687914848327637
    10. '++' → logprob: -14.687914848327637

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.375123977661133
    4. '  ' → logprob: -19.500123977661133
    5. '```' → logprob: -20.750123977661133
    6. '<|end|>' → logprob: -21.250123977661133
    7. '2' → logprob: -21.500123977661133
    8. '0' → logprob: -22.625123977661133
    9. '+' → logprob: -22.750123977661133
    10. ' ' → logprob: -22.937623977661133

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.75
    4. '```' → logprob: -20.875
    5. '  ' → logprob: -21.5
    6. '<|end|>' → logprob: -22.625
    7. '2' → logprob: -23.375
    8. '+' → logprob: -23.5
    9. '!' → logprob: -23.75
    10. '`' → logprob: -23.875

Token 97: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.615693211555481
    2. '(' → logprob: -1.740693211555481
    3. '<|end|>' → logprob: -1.990693211555481
    4. '\n' → logprob: -3.1156930923461914
    5. '\' → logprob: -3.7406930923461914
    6. '(
' → logprob: -4.115693092346191
    7. 'def' → logprob: -4.365693092346191
    8. '_' → logprob: -4.490693092346191
    9. '#' → logprob: -5.240693092346191
    10. ')' → logprob: -5.240693092346191

Token 98: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1880023330450058
    2. '\n' → logprob: -3.063002347946167
    3. '<|end|>' → logprob: -3.313002347946167
    4. 'def' → logprob: -3.438002347946167
    5. '(' → logprob: -4.313002109527588
    6. '#' → logprob: -4.438002109527588
    7. '\' → logprob: -4.563002109527588
    8. '_' → logprob: -5.313002109527588
    9. '```' → logprob: -5.813002109527588
    10. ' ' → logprob: -5.813002109527588

Token 99: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09071405977010727
    2. ' process' → logprob: -2.7157139778137207
    3. ' compute' → logprob: -4.965713977813721
    4. ' update' → logprob: -5.340713977813721
    5. ' solve' → logprob: -5.715713977813721
    6. ' calculate' → logprob: -6.465713977813721
    7. 'main' → logprob: -7.215713977813721
    8. ' sort' → logprob: -7.715713977813721
    9. 'process' → logprob: -7.965713977813721
    10. ' use' → logprob: -7.965713977813721

Token 100: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -0.0689731240272522
    2. '_default' → logprob: -2.8189730644226074
    3. 'answer' → logprob: -6.193973064422607
    4. '_' → logprob: -6.818973064422607
    5. '(d' → logprob: -7.193973064422607
    6. '_ans' → logprob: -7.318973064422607
    7. '_list' → logprob: -7.818973064422607
    8. '_d' → logprob: -7.943973064422607
    9. '(answer' → logprob: -8.318973541259766
    10. '_(' → logprob: -8.568973541259766

Token 101: '(ans' (ID: 70054)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.3867129683494568
    2. '(' → logprob: -1.3867130279541016
    3. '(ans' → logprob: -3.5117130279541016
    4. '(a' → logprob: -3.5117130279541016
    5. ' (' → logprob: -5.136713027954102
    6. '(value' → logprob: -5.761713027954102
    7. '(s' → logprob: -7.261713027954102
    8. '(lambda' → logprob: -8.261713027954102
    9. '(amount' → logprob: -8.511713027954102
    10. '()' → logprob: -8.636713027954102

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08480847626924515
    2. ' ,' → logprob: -2.959808588027954
    3. '):' → logprob: -3.709808588027954
    4. ' +=' → logprob: -6.459808349609375
    5. ' ' → logprob: -6.709808349609375
    6. '+' → logprob: -7.209808349609375
    7. ' ):' → logprob: -7.834808349609375
    8. ' +' → logprob: -8.334808349609375
    9. '  ' → logprob: -8.709808349609375
    10. ')' → logprob: -8.709808349609375

Token 103: ' d' (ID: 272)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5229908227920532
    2. ' val' → logprob: -1.1479908227920532
    3. 'value' → logprob: -2.7729907035827637
    4. ' new' → logprob: -4.397990703582764
    5. 'val' → logprob: -5.147990703582764
    6. ' d' → logprob: -5.397990703582764
    7. ' )' → logprob: -6.897990703582764
    8. ' ' → logprob: -7.147990703582764
    9. ' count' → logprob: -7.397990703582764
    10. ' delta' → logprob: -7.522990703582764

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029595185071229935
    2. '[' → logprob: -3.779595136642456
    3. '[d' → logprob: -6.029595375061035
    4. '):' → logprob: -6.279595375061035
    5. '[key' → logprob: -7.654595375061035
    6. ',d' → logprob: -7.779595375061035
    7. ')' → logprob: -8.154595375061035
    8. '[data' → logprob: -8.654595375061035
    9. ',key' → logprob: -8.779595375061035
    10. '[int' → logprob: -9.404595375061035

Token 105: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.33360257744789124
    2. ' key' → logprob: -1.3336025476455688
    3. 'k' → logprob: -4.458602428436279
    4. 'i' → logprob: -5.583602428436279
    5. ')' → logprob: -6.583602428436279
    6. 's' → logprob: -7.583602428436279
    7. 'x' → logprob: -7.833602428436279
    8. 'l' → logprob: -7.833602428436279
    9. ' i' → logprob: -7.958602428436279
    10. 'r' → logprob: -8.083602905273438

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04043298587203026
    2. '):
' → logprob: -3.665432929992676
    3. ',' → logprob: -4.290432929992676
    4. ' ):' → logprob: -8.290432929992676
    5. ')' → logprob: -10.040432929992676
    6. '):
' → logprob: -11.290432929992676
    7. '   ' → logprob: -12.165432929992676
    8. ' ' → logprob: -12.415432929992676
    9. ' ):
' → logprob: -12.415432929992676
    10. '[' → logprob: -12.540432929992676

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3193279802799225
    2. 'return' → logprob: -1.4443279504776
    3. 'ans' → logprob: -4.0693278312683105
    4. ' return' → logprob: -4.1943278312683105
    5. 'if' → logprob: -6.0693278312683105
    6. ' ans' → logprob: -6.5693278312683105
    7. 'max' → logprob: -7.0693278312683105
    8. ' if' → logprob: -7.5693278312683105
    9. ' max' → logprob: -9.819328308105469
    10. '+' → logprob: -9.819328308105469

Token 108: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.42393869161605835
    2. 'ans' → logprob: -1.7989387512207031
    3. ' return' → logprob: -2.298938751220703
    4. '   ' → logprob: -3.173938751220703
    5. ' ans' → logprob: -3.298938751220703
    6. 'max' → logprob: -7.798938751220703
    7. 'if' → logprob: -8.673938751220703
    8. ' if' → logprob: -9.173938751220703
    9. ' max' → logprob: -9.298938751220703
    10. '	ans' → logprob: -9.423938751220703

Token 109: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3512525260448456
    2. 'ans' → logprob: -1.226252555847168
    3. 'max' → logprob: -6.351252555847168
    4. ' max' → logprob: -7.476252555847168
    5. '(ans' → logprob: -8.101252555847168
    6. '	ans' → logprob: -9.226252555847168
    7. 'd' → logprob: -9.976252555847168
    8. ' d' → logprob: -10.601252555847168
    9. '_ans' → logprob: -11.101252555847168
    10. ' ' → logprob: -13.601252555847168

Token 110: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5769938826560974
    2. ' +' → logprob: -0.8269938826560974
    3. '<|end|>' → logprob: -7.451993942260742
    4. ' if' → logprob: -8.451993942260742
    5. ' +
' → logprob: -8.951993942260742
    6. '+
' → logprob: -9.951993942260742
    7. 'if' → logprob: -10.201993942260742
    8. '+d' → logprob: -10.951993942260742
    9. ' ' → logprob: -12.076993942260742
    10. ' plus' → logprob: -12.451993942260742

Token 111: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.023246875032782555
    2. 'd' → logprob: -3.7732467651367188
    3. '1' → logprob: -13.898246765136719
    4. ' ' → logprob: -15.523246765136719
    5. '	d' → logprob: -15.773246765136719
    6. ' ' → logprob: -17.02324676513672
    7. '(d' → logprob: -17.27324676513672
    8. '_d' → logprob: -17.89824676513672
    9. '>d' → logprob: -17.89824676513672
    10. '
' → logprob: -18.14824676513672

Token 112: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -5.300083648762666e-05
    2. '[' → logprob: -9.875053405761719
    3. ' [' → logprob: -14.250053405761719
    4. '[
' → logprob: -14.750053405761719
    5. 'key' → logprob: -15.375053405761719
    6. '```' → logprob: -17.00005340576172
    7. '[k' → logprob: -18.00005340576172
    8. ' ' → logprob: -18.12505340576172
    9. '[...]' → logprob: -18.25005340576172
    10. '[token' → logprob: -18.37505340576172

Token 113: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008111746865324676
    2. ' ]' → logprob: -7.5008111000061035
    3. '-' → logprob: -9.250811576843262
    4. ' -' → logprob: -10.250811576843262
    5. ')' → logprob: -10.375811576843262
    6. '()]' → logprob: -10.750811576843262
    7. ')]' → logprob: -10.875811576843262
    8. '[' → logprob: -11.250811576843262
    9. '<|end|>' → logprob: -11.250811576843262
    10. ']
' → logprob: -11.750811576843262

Token 114: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01209210604429245
    2. ' def' → logprob: -4.637092113494873
    3. ' ' → logprob: -6.887092113494873
    4. ' solve' → logprob: -7.387092113494873
    5. ' process' → logprob: -8.262091636657715
    6. '_' → logprob: -8.762091636657715
    7. '_main' → logprob: -9.512091636657715
    8. ' compute' → logprob: -10.137091636657715
    9. ' _' → logprob: -10.262091636657715
    10. 'main' → logprob: -10.637091636657715

Token 116: '_element' (ID: 21131)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.8787853717803955
    2. '_input' → logprob: -1.3787853717803955
    3. '(' → logprob: -1.7537853717803955
    4. '_' → logprob: -2.2537853717803955
    5. '(i' → logprob: -4.503785133361816
    6. '_data' → logprob: -4.753785133361816
    7. '_line' → logprob: -5.128785133361816
    8. '()' → logprob: -5.378785133361816
    9. '_(' → logprob: -5.503785133361816
    10. '_sequences' → logprob: -5.753785133361816

Token 117: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.02065959945321083
    2. '(' → logprob: -3.8956596851348877
    3. '(s' → logprob: -10.020659446716309
    4. '(element' → logprob: -10.895659446716309
    5. '(index' → logprob: -11.145659446716309
    6. '(a' → logprob: -11.395659446716309
    7. '(data' → logprob: -12.270659446716309
    8. '(l' → logprob: -12.520659446716309
    9. '(e' → logprob: -12.645659446716309
    10. '(idx' → logprob: -12.770659446716309

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009176511666737497
    2. ' ,' → logprob: -7.000917434692383
    3. ',s' → logprob: -12.625917434692383
    4. ',
' → logprob: -13.750917434692383
    5. ')' → logprob: -14.875917434692383
    6. '   ' → logprob: -15.125917434692383
    7. 's' → logprob: -15.500917434692383
    8. '):' → logprob: -15.625917434692383
    9. '):
' → logprob: -15.625917434692383
    10. ' ' → logprob: -16.125917434692383

Token 119: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.584727942943573
    2. ' s' → logprob: -0.834727942943573
    3. 'i' → logprob: -5.834727764129639
    4. ' i' → logprob: -6.459727764129639
    5. 'd' → logprob: -7.209727764129639
    6. ' ans' → logprob: -7.334727764129639
    7. ' d' → logprob: -7.459727764129639
    8. '   ' → logprob: -7.584727764129639
    9. 'a' → logprob: -7.834727764129639
    10. 'ans' → logprob: -8.584728240966797

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032095611095428467
    2. '):' → logprob: -5.753209590911865
    3. ' ,' → logprob: -10.878209114074707
    4. '   ' → logprob: -11.628209114074707
    5. ')' → logprob: -13.253209114074707
    6. ',i' → logprob: -14.378209114074707
    7. '):
' → logprob: -15.378209114074707
    8. ' ):' → logprob: -15.378209114074707
    9. '_,' → logprob: -16.003210067749023
    10. ',int' → logprob: -16.128210067749023

Token 121: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.28191930055618286
    2. 'ans' → logprob: -2.031919240951538
    3. ' d' → logprob: -2.406919240951538
    4. ' ans' → logprob: -3.781919240951538
    5. '   ' → logprob: -7.281919479370117
    6. 'answer' → logprob: -8.031919479370117
    7. ' ' → logprob: -8.281919479370117
    8. '	ans' → logprob: -9.719419479370117
    9. ' key' → logprob: -9.969419479370117
    10. ' answer' → logprob: -10.156919479370117

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18091748654842377
    2. '):' → logprob: -1.805917501449585
    3. ')' → logprob: -7.055917263031006
    4. ' ):' → logprob: -9.180917739868164
    5. ' ,' → logprob: -9.305917739868164
    6. '):
' → logprob: -9.430917739868164
    7. ' ' → logprob: -11.055917739868164
    8. '   ' → logprob: -12.180917739868164
    9. ',key' → logprob: -12.930917739868164
    10. ',
' → logprob: -13.180917739868164

Token 123: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5762792229652405
    2. ' ans' → logprob: -0.8262792229652405
    3. 'answer' → logprob: -8.826279640197754
    4. '	ans' → logprob: -9.326279640197754
    5. ')' → logprob: -10.576279640197754
    6. ' answer' → logprob: -11.326279640197754
    7. '(ans' → logprob: -11.326279640197754
    8. '_ans' → logprob: -11.451279640197754
    9. ' ' → logprob: -11.701279640197754
    10. 'a' → logprob: -11.701279640197754

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28208446502685547
    2. ',' → logprob: -1.4070844650268555
    3. ')' → logprob: -7.2820844650268555
    4. '):
' → logprob: -9.157084465026855
    5. ' ):' → logprob: -9.157084465026855
    6. ' ,' → logprob: -11.157084465026855
    7. ':' → logprob: -12.282084465026855
    8. '=' → logprob: -12.532084465026855
    9. ' ' → logprob: -13.032084465026855
    10. '   ' → logprob: -13.282084465026855

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7987262010574341
    2. ':' → logprob: -1.173726201057434
    3. ',' → logprob: -1.798726201057434
    4. '):' → logprob: -3.1737260818481445
    5. ':
' → logprob: -4.2987260818481445
    6. ')' → logprob: -5.1737260818481445
    7. ' ' → logprob: -5.5487260818481445
    8. '):
' → logprob: -5.9237260818481445
    9. ' key' → logprob: -6.0487260818481445
    10. ',key' → logprob: -6.4237260818481445

Token 126: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0497287511825562
    2. ' d' → logprob: -1.5497287511825562
    3. 'd' → logprob: -2.1747288703918457
    4. ' key' → logprob: -2.2997288703918457
    5. ' update' → logprob: -2.5497288703918457
    6. 'ans' → logprob: -3.4247288703918457
    7. ' ans' → logprob: -3.4247288703918457
    8. 'update' → logprob: -3.6747288703918457
    9. ' l' → logprob: -4.174728870391846
    10. 'l' (adapté à ' l') → logprob: -4.424728870391846

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014978595077991486
    2. '=' → logprob: -4.264978408813477
    3. ',' → logprob: -7.514978408813477
    4. '_key' → logprob: -8.639978408813477
    5. '   ' → logprob: -10.764978408813477
    6. '_val' → logprob: -11.014978408813477
    7. ')' → logprob: -11.264978408813477
    8. '_value' → logprob: -11.264978408813477
    9. '_' → logprob: -11.639978408813477
    10. ' ' → logprob: -12.639978408813477

Token 128: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.12135624140501022
    2. ' compute' → logprob: -2.246356248855591
    3. 'i' → logprob: -4.996356010437012
    4. ' i' → logprob: -6.371356010437012
    5. ' ' → logprob: -12.246356010437012
    6. '_compute' → logprob: -12.246356010437012
    7. '   ' → logprob: -12.496356010437012
    8. '.compute' → logprob: -12.746356010437012
    9. '  ' → logprob: -13.246356010437012
    10. '(i' → logprob: -13.371356010437012

Token 129: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.001936962129548192
    2. '_' → logprob: -6.251936912536621
    3. 'l' → logprob: -12.376936912536621
    4. '_r' → logprob: -12.501936912536621
    5. '_L' → logprob: -16.126937866210938
    6. ' _' → logprob: -16.876937866210938
    7. '"' → logprob: -16.876937866210938
    8. '_
' → logprob: -17.001937866210938
    9. '```' → logprob: -17.126937866210938
    10. '_f' → logprob: -17.126937866210938

Token 130: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.20142056047916412
    2. '(' → logprob: -1.701420545578003
    3. '(
' → logprob: -12.701420783996582
    4. ' (' → logprob: -12.826420783996582
    5. '(I' → logprob: -14.451420783996582
    6. '((' → logprob: -14.951420783996582
    7. '```' → logprob: -15.701420783996582
    8. ' ' → logprob: -16.201419830322266
    9. '(

' → logprob: -16.201419830322266
    10. '   ' → logprob: -17.076419830322266

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028775110840797424
    2. ',s' → logprob: -5.877877712249756
    3. ' ,' → logprob: -9.627877235412598
    4. ' ' → logprob: -13.377877235412598
    5. 's' → logprob: -13.627877235412598
    6. ',
' → logprob: -13.627877235412598
    7. '(' → logprob: -13.752877235412598
    8. ')' → logprob: -14.502877235412598
    9. '	' → logprob: -15.252877235412598
    10. '	s' → logprob: -15.752877235412598

Token 132: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2256283015012741
    2. ' s' → logprob: -1.6006282567977905
    3. ' ' → logprob: -8.600627899169922
    4. ''s' → logprob: -11.600627899169922
    5. ')' → logprob: -12.225627899169922
    6. '   ' → logprob: -12.225627899169922
    7. '  ' → logprob: -13.100627899169922
    8. '    ' → logprob: -13.225627899169922
    9. '	s' → logprob: -13.600627899169922
    10. ',' → logprob: -13.725627899169922

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.387193888425827
    2. ',' → logprob: -1.1371939182281494
    3. '),' → logprob: -9.26219367980957
    4. '   ' → logprob: -9.76219367980957
    5. ')
' → logprob: -10.26219367980957
    6. ' ' → logprob: -10.26219367980957
    7. ' ,' → logprob: -10.51219367980957
    8. ' )' → logprob: -10.51219367980957
    9. ',)' → logprob: -10.88719367980957
    10. ',s' → logprob: -11.76219367980957

Token 134: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1552850753068924
    2. '   ' → logprob: -2.780285120010376
    3. '
' → logprob: -2.905285120010376
    4. ' r' → logprob: -3.780285120010376
    5. ')' → logprob: -6.405284881591797
    6. ' ' → logprob: -6.530284881591797
    7. 'd' → logprob: -8.155284881591797
    8. '    
' → logprob: -8.905284881591797
    9. ')
' → logprob: -9.030284881591797
    10. 's' → logprob: -9.280284881591797

Token 135: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.02334156446158886
    2. ' r' → logprob: -4.398341655731201
    3. 'update' → logprob: -4.898341655731201
    4. ' update' → logprob: -5.773341655731201
    5. '   ' → logprob: -9.523341178894043
    6. 'd' → logprob: -9.523341178894043
    7. ' d' → logprob: -11.648341178894043
    8. 'ans' → logprob: -11.648341178894043
    9. ' ' → logprob: -12.148341178894043
    10. ' ans' → logprob: -12.398341178894043

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759463906288147
    2. '=' → logprob: -0.8259463906288147
    3. ',' → logprob: -12.700946807861328
    4. ')' → logprob: -13.450946807861328
    5. ' ' → logprob: -13.575946807861328
    6. '_' → logprob: -14.325946807861328
    7. '	' → logprob: -16.325946807861328
    8. ' ' → logprob: -16.450946807861328
    9. ' =
' → logprob: -16.575946807861328
    10. 'space' → logprob: -17.200946807861328

Token 137: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.08907873183488846
    2. 'compute' → logprob: -2.464078664779663
    3. ' ' → logprob: -9.839078903198242
    4. ' i' → logprob: -10.714078903198242
    5. '"' → logprob: -10.964078903198242
    6. '_compute' → logprob: -11.339078903198242
    7. '.compute' → logprob: -11.839078903198242
    8. 'i' → logprob: -12.089078903198242
    9. ''' → logprob: -12.214078903198242
    10. '(com' → logprob: -12.964078903198242

Token 138: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0008305939263664186
    2. 'r' → logprob: -7.75083065032959
    3. '_' → logprob: -8.12583065032959
    4. '_i' → logprob: -9.75083065032959
    5. '```' → logprob: -11.25083065032959
    6. '_l' → logprob: -12.25083065032959
    7. '-r' → logprob: -12.62583065032959
    8. '(i' → logprob: -12.62583065032959
    9. '_s' → logprob: -13.00083065032959
    10. 'i' → logprob: -13.12583065032959

Token 139: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001172129064798355
    2. '(' → logprob: -6.751172065734863
    3. ' (' → logprob: -14.376172065734863
    4. '(
' → logprob: -14.751172065734863
    5. ' ' → logprob: -15.251172065734863
    6. '<|end|>' → logprob: -15.501172065734863
    7. 'i' → logprob: -15.751172065734863
    8. ')' → logprob: -16.37617301940918
    9. '(I' → logprob: -16.50117301940918
    10. ' i' → logprob: -16.50117301940918

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006992113194428384
    2. ',s' → logprob: -7.500699043273926
    3. ' ,' → logprob: -9.750699043273926
    4. ' ' → logprob: -10.250699043273926
    5. '<|end|>' → logprob: -10.625699043273926
    6. 's' → logprob: -11.750699043273926
    7. ')' → logprob: -11.750699043273926
    8. ' s' → logprob: -13.125699043273926
    9. ',
' → logprob: -13.375699043273926
    10. '   ' → logprob: -13.625699043273926

Token 141: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24237239360809326
    2. 'i' → logprob: -1.6173723936080933
    3. ' s' → logprob: -4.617372512817383
    4. ' i' → logprob: -4.992372512817383
    5. ' ' → logprob: -9.242372512817383
    6. '  ' → logprob: -11.242372512817383
    7. '   ' → logprob: -11.492372512817383
    8. '<|end|>' → logprob: -11.617372512817383
    9. ')' → logprob: -12.742372512817383
    10. 'r' → logprob: -13.242372512817383

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0339031834737398e-05
    2. ')
' → logprob: -10.875020027160645
    3. ',' → logprob: -14.875020027160645
    4. ' )' → logprob: -14.875020027160645
    5. '),' → logprob: -15.125020027160645
    6. '))' → logprob: -15.875020027160645
    7. ')

' → logprob: -16.62502098083496
    8. '   ' → logprob: -17.12502098083496
    9. ')`' → logprob: -17.50002098083496
    10. ' ' → logprob: -17.75002098083496

Token 143: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2270839810371399
    2. '   ' → logprob: -2.102083921432495
    3. ' update' → logprob: -2.977083921432495
    4. 'update' → logprob: -3.602083921432495
    5. '    
' → logprob: -7.602084159851074
    6. '	update' → logprob: -7.727084159851074
    7. ' 
' → logprob: -8.102084159851074
    8. 'd' → logprob: -8.227084159851074
    9. '  
' → logprob: -8.227084159851074
    10. ')' → logprob: -8.477084159851074

Token 144: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.49048182368278503
    2. 'ans' → logprob: -0.9904818534851074
    3. ' update' → logprob: -4.740481853485107
    4. ' ans' → logprob: -5.615481853485107
    5. '   ' → logprob: -5.865481853485107
    6. '
' → logprob: -7.365481853485107
    7. 'answer' → logprob: -8.99048137664795
    8. '    
' → logprob: -9.24048137664795
    9. 'if' → logprob: -9.49048137664795
    10. '	ans' → logprob: -10.99048137664795

Token 145: '_default' (ID: 21934)
  Prédit: '_default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_default' → logprob: -1.5048530030981055e-06
    2. 'default' → logprob: -13.500001907348633
    3. '_' → logprob: -16.750001907348633
    4. 'Default' → logprob: -18.500001907348633
    5. '_Default' → logprob: -18.500001907348633
    6. '_DEFAULT' → logprob: -19.500001907348633
    7. '_def' → logprob: -19.625001907348633
    8. 'd' → logprob: -19.875001907348633
    9. 'def' → logprob: -20.125001907348633
    10. '```' → logprob: -20.250001907348633

Token 146: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -6.704273118884885e-07
    2. 'def' → logprob: -15.250000953674316
    3. ' dict' → logprob: -15.500000953674316
    4. 'd' → logprob: -16.0
    5. '_dict' → logprob: -17.375
    6. '(dict' → logprob: -19.875
    7. 'ct' → logprob: -20.25
    8. 'ict' → logprob: -20.25
    9. 'Dict' → logprob: -20.625
    10. 'default' → logprob: -20.875

Token 147: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.002187256934121251
    2. '(' → logprob: -6.127187252044678
    3. ' (' → logprob: -13.752187728881836
    4. '(
' → logprob: -14.627187728881836
    5. '<|end|>' → logprob: -15.127187728881836
    6. '(s' → logprob: -16.877187728881836
    7. '(r' → logprob: -17.002187728881836
    8. ' ' → logprob: -17.502187728881836
    9. '(data' → logprob: -17.502187728881836
    10. '(D' → logprob: -17.502187728881836

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005082433111965656
    2. '(' → logprob: -6.130082607269287
    3. '(l' → logprob: -6.255082607269287
    4. ')' → logprob: -8.255082130432129
    5. ' ,' → logprob: -8.255082130432129
    6. '(r' → logprob: -8.380082130432129
    7. ',l' → logprob: -8.755082130432129
    8. ' (' → logprob: -11.380082130432129
    9. ' ' → logprob: -11.380082130432129
    10. ')(' → logprob: -11.505082130432129

Token 149: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5202252864837646
    2. 'l' → logprob: -1.1452252864837646
    3. ' r' → logprob: -3.0202252864837646
    4. ' l' → logprob: -3.2702252864837646
    5. ')' → logprob: -7.520225524902344
    6. '(r' → logprob: -10.270225524902344
    7. '(l' → logprob: -11.020225524902344
    8. ' ' → logprob: -11.145225524902344
    9. '   ' → logprob: -11.270225524902344
    10. ' (' → logprob: -11.582725524902344

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0208077784627676
    2. ')
' → logprob: -3.8958077430725098
    3. ' )' → logprob: -8.895808219909668
    4. ')
' → logprob: -9.520808219909668
    5. ')

' → logprob: -10.395808219909668
    6. ' )
' → logprob: -10.895808219909668
    7. '   ' → logprob: -13.145808219909668
    8. ' ' → logprob: -13.270808219909668
    9. ')d' → logprob: -14.895808219909668
    10. ')return' → logprob: -15.020808219909668

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09025800973176956
    2. 'ans' → logprob: -2.7152581214904785
    3. ' ans' → logprob: -4.4652581214904785
    4. 'return' → logprob: -5.3402581214904785
    5. ' return' → logprob: -5.5902581214904785
    6. 'answer' → logprob: -10.59025764465332
    7. '	ans' → logprob: -10.71525764465332
    8. '(ans' → logprob: -11.34025764465332
    9. 'update' → logprob: -12.34025764465332
    10. '
' → logprob: -12.46525764465332

Token 152: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5794652104377747
    2. 'ans' (adapté à ' ans') → logprob: -0.8294652104377747
    3. '   ' → logprob: -6.079465389251709
    4. ' return' → logprob: -6.954465389251709
    5. ' ans' → logprob: -8.82946491241455
    6. 'answer' → logprob: -9.20446491241455
    7. '    
' → logprob: -12.07946491241455
    8. '(ans' → logprob: -12.07946491241455
    9. '	ans' → logprob: -12.45446491241455
    10. '
' → logprob: -12.95446491241455

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0381244532763958
    2. '=' → logprob: -3.2881245613098145
    3. ' +=' → logprob: -9.413124084472656
    4. '+=' → logprob: -13.913124084472656
    5. ' ' → logprob: -15.663124084472656
    6. '+' → logprob: -16.538124084472656
    7. ' +' → logprob: -16.663124084472656
    8. ' =)' → logprob: -16.663124084472656
    9. ',' → logprob: -16.788124084472656
    10. '<|end|>' → logprob: -17.163124084472656

Token 154: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.1602245420217514
    2. 'update' → logprob: -1.9102245569229126
    3. '(update' → logprob: -15.285224914550781
    4. '   ' → logprob: -16.16022491455078
    5. '	update' → logprob: -16.16022491455078
    6. '    ' → logprob: -17.53522491455078
    7. '.update' → logprob: -17.91022491455078
    8. '_update' → logprob: -18.66022491455078
    9. '
' → logprob: -18.78522491455078
    10. ' ' → logprob: -19.16022491455078

Token 155: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -3.8889261304575484e-06
    2. '_ans' → logprob: -12.875003814697266
    3. 'answer' → logprob: -13.750003814697266
    4. 'Answer' → logprob: -16.375003814697266
    5. '_answers' → logprob: -16.750003814697266
    6. '_' → logprob: -18.750003814697266
    7. '(answer' → logprob: -19.125003814697266
    8. 'ANSWER' → logprob: -19.750003814697266
    9. '	answer' → logprob: -20.000003814697266
    10. ' answer' → logprob: -20.375003814697266

Token 156: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0001105762057704851
    2. '(' → logprob: -9.125110626220703
    3. ' (' → logprob: -14.000110626220703
    4. '(answer' → logprob: -14.500110626220703
    5. '(
' → logprob: -15.375110626220703
    6. '	ans' → logprob: -17.375110626220703
    7. ' ans' → logprob: -18.250110626220703
    8. ' ' → logprob: -19.000110626220703
    9. '```' → logprob: -19.125110626220703
    10. '(acc' → logprob: -19.250110626220703

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024429336190223694
    2. ' ,' → logprob: -9.250244140625
    3. ',d' → logprob: -9.750244140625
    4. '(' → logprob: -10.500244140625
    5. '(d' → logprob: -10.500244140625
    6. '(ans' → logprob: -11.250244140625
    7. ',r' → logprob: -11.500244140625
    8. '(r' → logprob: -12.375244140625
    9. ')' → logprob: -12.625244140625
    10. ',
' → logprob: -13.125244140625

Token 158: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6340753436088562
    2. 'd' → logprob: -0.7590753436088562
    3. 'r' → logprob: -6.634075164794922
    4. ' r' → logprob: -8.884075164794922
    5. ')d' → logprob: -11.384075164794922
    6. '
' → logprob: -13.134075164794922
    7. ' ' → logprob: -13.259075164794922
    8. ')' → logprob: -13.509075164794922
    9. '	d' → logprob: -13.509075164794922
    10. ' 
' → logprob: -14.259075164794922

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.141186450899113e-05
    2. ' ,' → logprob: -11.250020980834961
    3. ',r' → logprob: -11.750020980834961
    4. ',
' → logprob: -15.125020980834961
    5. ')' → logprob: -16.75002098083496
    6. ',l' → logprob: -16.75002098083496
    7. 'r' → logprob: -16.87502098083496
    8. ' ' → logprob: -17.87502098083496
    9. '(' → logprob: -18.37502098083496
    10. ',

' → logprob: -19.25002098083496

Token 160: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.048589639365673065
    2. ' r' → logprob: -3.0485897064208984
    3. ')' → logprob: -13.798589706420898
    4. '
' → logprob: -15.048589706420898
    5. '   ' → logprob: -15.173589706420898
    6. ' ' → logprob: -15.423589706420898
    7. 'l' → logprob: -15.923589706420898
    8. '(r' → logprob: -16.4235897064209
    9. '	r' → logprob: -16.5485897064209
    10. ',' → logprob: -17.2985897064209

Token 161: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2019243985414505
    2. ')' → logprob: -1.701924443244934
    3. ')
' → logprob: -7.7019243240356445
    4. ')

' → logprob: -10.326924324035645
    5. ' )
' → logprob: -11.076924324035645
    6. '   ' → logprob: -11.826924324035645
    7. ')return' → logprob: -13.326924324035645
    8. ' )' → logprob: -13.826924324035645
    9. ' ' → logprob: -15.076924324035645
    10. ')`
' → logprob: -15.451924324035645

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026828988920897245
    2. ' return' → logprob: -6.127682685852051
    3. 'return' → logprob: -7.752682685852051
    4. '	return' → logprob: -9.62768268585205
    5. '   ' → logprob: -14.37768268585205
    6. ':return' → logprob: -14.87768268585205
    7. '    
' → logprob: -15.00268268585205
    8. '```' → logprob: -15.37768268585205
    9. '_return' → logprob: -15.87768268585205
    10. '       ' → logprob: -16.502683639526367

Token 163: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16056154668331146
    2. 'return' (adapté à ' return') → logprob: -2.1605615615844727
    3. ' return' → logprob: -3.4105615615844727
    4. '	return' → logprob: -9.910561561584473
    5. ':return' → logprob: -14.785561561584473
    6. '    
' → logprob: -15.035561561584473
    7. '{return' → logprob: -15.410561561584473
    8. '    ' → logprob: -15.535561561584473
    9. ' ' → logprob: -15.910561561584473
    10. '_return' → logprob: -15.910561561584473

Token 164: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.31334397196769714
    2. ' ans' → logprob: -1.3133440017700195
    3. '(ans' → logprob: -9.43834400177002
    4. '	ans' → logprob: -12.93834400177002
    5. '_ans' → logprob: -16.688343048095703
    6. '   ' → logprob: -16.813343048095703
    7. 'anst' → logprob: -17.438343048095703
    8. 'answer' → logprob: -18.813343048095703
    9. 'a' → logprob: -19.063343048095703
    10. ' ' → logprob: -19.313343048095703

Token 165: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0025653145276010036
    2. 'main' → logprob: -6.502565383911133
    3. ' process' → logprob: -7.127565383911133
    4. ' solve' → logprob: -8.377565383911133
    5. ' ' → logprob: -11.627565383911133
    6. '	main' → logprob: -12.252565383911133
    7. 'solve' → logprob: -12.377565383911133
    8. 'process' → logprob: -12.502565383911133
    9. ' solution' → logprob: -12.627565383911133
    10. '_main' → logprob: -13.127565383911133

Token 168: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.07805294543504715
    2. '_element' → logprob: -3.2030529975891113
    3. '_elements' → logprob: -4.453052997589111
    4. '_' → logprob: -4.703052997589111
    5. '_list' → logprob: -4.953052997589111
    6. '_array' → logprob: -5.203052997589111
    7. '(sequence' → logprob: -8.328052520751953
    8. '_all' → logprob: -8.578052520751953
    9. '_input' → logprob: -8.578052520751953
    10. '_(' → logprob: -9.328052520751953

Token 169: '(src' (ID: 28558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6681060791015625
    2. '(i' → logprob: -0.9181060791015625
    3. '(s' → logprob: -3.4181060791015625
    4. '():' → logprob: -3.7931060791015625
    5. '(sequence' → logprob: -4.0431060791015625
    6. '(seq' → logprob: -4.4181060791015625
    7. '(l' → logprob: -7.4181060791015625
    8. '(lst' → logprob: -7.4181060791015625
    9. '(ls' → logprob: -7.7931060791015625
    10. '(n' → logprob: -8.418106079101562

Token 170: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.44946688413619995
    2. 'u' → logprob: -1.8244669437408447
    3. ',' → logprob: -1.9494669437408447
    4. '):
' → logprob: -3.8244669437408447
    5. 'ue' → logprob: -4.199466705322266
    6. 'ence' → logprob: -4.449466705322266
    7. 'e' → logprob: -5.074466705322266
    8. 'quence' → logprob: -7.074466705322266
    9. 's' → logprob: -7.824466705322266
    10. ' ,' → logprob: -8.074466705322266

Token 171: ' d' (ID: 272)
  Prédit: ' dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dst' → logprob: -1.1953028440475464
    2. 'dst' → logprob: -1.1953028440475464
    3. 'dest' → logprob: -1.5703028440475464
    4. ' dest' → logprob: -2.820302963256836
    5. ' ans' → logprob: -3.070302963256836
    6. 'ans' → logprob: -3.945302963256836
    7. ' d' → logprob: -4.070302963256836
    8. 'd' → logprob: -4.195302963256836
    9. 's' → logprob: -4.570302963256836
    10. ' tgt' → logprob: -4.695302963256836

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.329167369287461e-05
    2. '):' → logprob: -9.500093460083008
    3. ' ,' → logprob: -11.000093460083008
    4. '):
' → logprob: -14.750093460083008
    5. ',
' → logprob: -15.000093460083008
    6. 'def' → logprob: -16.125093460083008
    7. '[' → logprob: -16.125093460083008
    8. 's' → logprob: -16.125093460083008
    9. '   ' → logprob: -16.250093460083008
    10. ',int' → logprob: -16.625093460083008

Token 173: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.023370448499917984
    2. ' ans' → logprob: -3.7733705043792725
    3. ')' → logprob: -9.898370742797852
    4. 'src' → logprob: -10.398370742797852
    5. '	ans' → logprob: -11.398370742797852
    6. 'answer' → logprob: -11.773370742797852
    7. '(ans' → logprob: -12.023370742797852
    8. '   ' → logprob: -12.398370742797852
    9. '):
' → logprob: -12.773370742797852
    10. ' )' → logprob: -13.023370742797852

Token 174: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11294199526309967
    2. '):' → logprob: -2.2379419803619385
    3. '):
' → logprob: -10.23794174194336
    4. ')' → logprob: -10.36294174194336
    5. ' ,' → logprob: -10.86294174194336
    6. 's' → logprob: -11.73794174194336
    7. ',i' → logprob: -11.73794174194336
    8. ',s' → logprob: -12.98794174194336
    9. '_,' → logprob: -13.11294174194336
    10. '[' → logprob: -13.23794174194336

Token 175: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7664843797683716
    2. '   ' → logprob: -1.0164843797683716
    3. '
' → logprob: -2.391484260559082
    4. 'for' → logprob: -2.516484260559082
    5. '    
' → logprob: -7.391484260559082
    6. '```' → logprob: -8.016484260559082
    7. '	for' → logprob: -9.266484260559082
    8. ' ans' → logprob: -9.641484260559082
    9. ' ' → logprob: -10.141484260559082
    10. '  
' → logprob: -10.766484260559082

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.36019760370254517
    2. ' for' → logprob: -1.3601975440979004
    3. '   ' → logprob: -3.1101975440979004
    4. '
' → logprob: -6.8601975440979
    5. ' ans' → logprob: -9.235198020935059
    6. 'ans' → logprob: -9.735198020935059
    7. '    
' → logprob: -9.985198020935059
    8. '	for' → logprob: -12.985198020935059
    9. ' ' → logprob: -13.360198020935059
    10. '  ' → logprob: -13.860198020935059

Token 177: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0247407965362072
    2. 'i' → logprob: -4.149740695953369
    3. ' s' → logprob: -4.899740695953369
    4. 's' → logprob: -7.274740695953369
    5. ' idx' → logprob: -8.274741172790527
    6. ' ' → logprob: -9.399741172790527
    7. '   ' → logprob: -10.649741172790527
    8. ' _' → logprob: -10.899741172790527
    9. '_i' → logprob: -10.899741172790527
    10. ' src' → logprob: -11.149741172790527

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.422023743391037
    2. ' in' → logprob: -1.2970237731933594
    3. ' ,' → logprob: -3.2970237731933594
    4. 'in' → logprob: -3.9220237731933594
    5. ' ' → logprob: -4.297023773193359
    6. '	in' → logprob: -8.04702377319336
    7. ',in' → logprob: -10.04702377319336
    8. '_' → logprob: -10.67202377319336
    9. '  ' → logprob: -10.92202377319336
    10. 's' → logprob: -11.17202377319336

Token 179: ' val' (ID: 1459)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07977524399757385
    2. ' s' → logprob: -2.579775333404541
    3. ' val' → logprob: -8.079774856567383
    4. '(s' → logprob: -8.579774856567383
    5. 'val' → logprob: -8.704774856567383
    6. 'value' → logprob: -9.079774856567383
    7. ' ' → logprob: -10.829774856567383
    8. ' value' → logprob: -10.829774856567383
    9. ' (' → logprob: -11.329774856567383
    10. 'num' → logprob: -11.829774856567383

Token 180: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.314841091632843
    2. 'in' → logprob: -1.3148410320281982
    3. ',' → logprob: -6.564841270446777
    4. ' ' → logprob: -9.189841270446777
    5. '	in' → logprob: -10.564841270446777
    6. '   ' → logprob: -11.814841270446777
    7. 's' → logprob: -12.314841270446777
    8. '  ' → logprob: -12.314841270446777
    9. ' ,' → logprob: -12.814841270446777
    10. '_in' → logprob: -12.939841270446777

Token 181: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.2519422471523285
    2. 'enumer' → logprob: -1.5019422769546509
    3. 'src' → logprob: -11.50194263458252
    4. ' src' → logprob: -13.75194263458252
    5. '(en' → logprob: -14.12694263458252
    6. 'en' → logprob: -14.75194263458252
    7. '
' → logprob: -15.75194263458252
    8. '```' → logprob: -16.001941680908203
    9. '   ' → logprob: -16.126941680908203
    10. ' enumer' → logprob: -16.251941680908203

Token 182: '(src' (ID: 28558)
  Prédit: '(src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(src' → logprob: -0.005376999266445637
    2. '(' → logprob: -5.255376815795898
    3. 'src' → logprob: -9.255376815795898
    4. ' (' → logprob: -10.380376815795898
    5. '(s' → logprob: -12.130376815795898
    6. ' src' → logprob: -12.505376815795898
    7. '<src' → logprob: -13.505376815795898
    8. '(
' → logprob: -13.880376815795898
    9. '[src' → logprob: -13.880376815795898
    10. '(sr' → logprob: -13.880376815795898

Token 183: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014305938966572285
    2. '):
' → logprob: -7.001430511474609
    3. ',' → logprob: -8.62643051147461
    4. '():' → logprob: -8.62643051147461
    5. ' ):' → logprob: -8.87643051147461
    6. ')' → logprob: -11.87643051147461
    7. ':' → logprob: -12.12643051147461
    8. '   ' → logprob: -12.62643051147461
    9. '()' → logprob: -13.75143051147461
    10. ' ,' → logprob: -14.62643051147461

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07098087668418884
    2. ' ' → logprob: -2.6959807872772217
    3. '0' → logprob: -6.945981025695801
    4. ')' → logprob: -10.8209810256958
    5. '):' → logprob: -10.8209810256958
    6. 'start' → logprob: -11.0709810256958
    7. ' start' → logprob: -11.3209810256958
    8. '):
' → logprob: -12.8209810256958
    9. ' )' → logprob: -12.8209810256958
    10. '   ' → logprob: -13.1959810256958

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04866446554660797
    2. '0' → logprob: -3.0486645698547363
    3. 'start' → logprob: -9.548664093017578
    4. ' ' → logprob: -12.173664093017578
    5. '2' → logprob: -15.798664093017578
    6. ' start' → logprob: -16.048664093017578
    7. ')' → logprob: -16.298664093017578
    8. '   ' → logprob: -17.173664093017578
    9. '_start' → logprob: -17.173664093017578
    10. 'def' → logprob: -17.173664093017578

Token 186: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003529814421199262
    2. '):
' → logprob: -8.62535285949707
    3. ':' → logprob: -8.75035285949707
    4. ' ):' → logprob: -11.62535285949707
    5. ',' → logprob: -12.75035285949707
    6. ')' → logprob: -13.50035285949707
    7. '   ' → logprob: -13.87535285949707
    8. '():' → logprob: -15.00035285949707
    9. '}:' → logprob: -15.50035285949707
    10. '):
' → logprob: -16.00035285949707

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042773980647325516
    2. ' ans' → logprob: -4.042774200439453
    3. '
' → logprob: -4.417774200439453
    4. '   ' → logprob: -4.917774200439453
    5. 'ans' → logprob: -6.417774200439453
    6. '(ans' → logprob: -7.042774200439453
    7. '        
' → logprob: -7.292774200439453
    8. '    
' → logprob: -7.542774200439453
    9. '	ans' → logprob: -7.542774200439453
    10. '<|end|>' → logprob: -8.417774200439453

Token 188: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.16231568157672882
    2. 'ans' (adapté à ' ans') → logprob: -2.412315607070923
    3. '       ' → logprob: -3.287315607070923
    4. '   ' → logprob: -3.912315607070923
    5. '	ans' → logprob: -6.412315845489502
    6. '(ans' → logprob: -7.037315845489502
    7. '
' → logprob: -8.287315368652344
    8. '_ans' → logprob: -10.537315368652344
    9. '    ' → logprob: -11.162315368652344
    10. '           ' → logprob: -11.287315368652344

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015036711702123284
    2. '=' → logprob: -6.5015034675598145
    3. ' +=' → logprob: -13.626503944396973
    4. ' ' → logprob: -17.126502990722656
    5. ' =
' → logprob: -17.251502990722656
    6. '	' → logprob: -18.001502990722656
    7. ' =)' → logprob: -18.126502990722656
    8. ' ' → logprob: -19.376502990722656
    9. '   ' → logprob: -19.626502990722656
    10. '+=' → logprob: -19.751502990722656

Token 190: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.5759394764900208
    2. ' process' → logprob: -0.8259394764900208
    3. '	process' → logprob: -17.325939178466797
    4. ' proces' → logprob: -17.450939178466797
    5. '(process' → logprob: -19.200939178466797
    6. 'proces' → logprob: -19.325939178466797
    7. '   ' → logprob: -19.450939178466797
    8. '_process' → logprob: -19.700939178466797
    9. '.process' → logprob: -19.700939178466797
    10. ' ' → logprob: -20.075939178466797

Token 191: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.6932898759841919
    2. '_sequence' → logprob: -0.6932898759841919
    3. '_' → logprob: -10.068289756774902
    4. 'sequence' → logprob: -10.193289756774902
    5. 'element' → logprob: -10.318289756774902
    6. '_seq' → logprob: -12.068289756774902
    7. 's' → logprob: -12.818289756774902
    8. '(sequence' → logprob: -12.943289756774902
    9. '_elem' → logprob: -13.068289756774902
    10. '_value' → logprob: -13.443289756774902

Token 192: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.023252584040164948
    2. '(' → logprob: -3.773252487182617
    3. '(
' → logprob: -12.398252487182617
    4. ' (' → logprob: -13.773252487182617
    5. '(index' → logprob: -14.273252487182617
    6. 'idx' → logprob: -14.273252487182617
    7. '(ans' → logprob: -15.273252487182617
    8. '(i' → logprob: -16.148252487182617
    9. '(

' → logprob: -16.273252487182617
    10. '	idx' → logprob: -17.023252487182617

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009884409606456757
    2. ',val' → logprob: -4.634884357452393
    3. ' ,' → logprob: -9.00988483428955
    4. '[val' → logprob: -12.88488483428955
    5. ',
' → logprob: -13.25988483428955
    6. '(val' → logprob: -14.00988483428955
    7. 'val' → logprob: -15.63488483428955
    8. ' val' → logprob: -15.75988483428955
    9. ' ' → logprob: -16.009883880615234
    10. '   ' → logprob: -16.009883880615234

Token 194: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.2014143168926239
    2. 'val' → logprob: -1.7014143466949463
    3. '	val' → logprob: -14.701414108276367
    4. '[val' → logprob: -15.326414108276367
    5. ',val' → logprob: -15.451414108276367
    6. '(val' → logprob: -16.076414108276367
    7. '.val' → logprob: -16.701414108276367
    8. '_val' → logprob: -17.076414108276367
    9. '<|end|>' → logprob: -17.951414108276367
    10. 'Val' → logprob: -18.576414108276367

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047297184937633574
    2. ' ,' → logprob: -7.7504730224609375
    3. ',d' → logprob: -10.125473022460938
    4. '   ' → logprob: -13.250473022460938
    5. ')' → logprob: -15.375473022460938
    6. 'd' → logprob: -16.125473022460938
    7. ' ' → logprob: -17.125473022460938
    8. ',
' → logprob: -17.125473022460938
    9. '       ' → logprob: -17.375473022460938
    10. '```' → logprob: -17.625473022460938

Token 196: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.38687366247177124
    2. 'd' → logprob: -1.136873722076416
    3. ')d' → logprob: -14.011873245239258
    4. '	d' → logprob: -14.136873245239258
    5. '<|end|>' → logprob: -14.761873245239258
    6. ' ' → logprob: -15.261873245239258
    7. '
' → logprob: -16.761873245239258
    8. '   ' → logprob: -16.886873245239258
    9. '_d' → logprob: -17.136873245239258
    10. '```' → logprob: -17.136873245239258

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.750436007976532e-05
    2. ' ,' → logprob: -10.25003719329834
    3. ' ans' → logprob: -13.62503719329834
    4. ')' → logprob: -14.25003719329834
    5. ',
' → logprob: -16.250038146972656
    6. '   ' → logprob: -17.875038146972656
    7. ' ' → logprob: -18.375038146972656
    8. 'ans' → logprob: -18.375038146972656
    9. '(ans' → logprob: -18.500038146972656
    10. '	ans' → logprob: -18.750038146972656

Token 198: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029753385111689568
    2. ' ans' → logprob: -3.5297534465789795
    3. '(ans' → logprob: -13.529753684997559
    4. '	ans' → logprob: -13.654753684997559
    5. 'answer' → logprob: -14.904753684997559
    6. '_ans' → logprob: -16.779752731323242
    7. '   ' → logprob: -18.904752731323242
    8. ' ' → logprob: -18.904752731323242
    9. ')' → logprob: -19.529752731323242
    10. 'answers' → logprob: -20.529752731323242

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.126951202750206
    2. ')
' → logprob: -2.126951217651367
    3. '   ' → logprob: -11.376951217651367
    4. ')
' → logprob: -11.751951217651367
    5. ')

' → logprob: -12.876951217651367
    6. ')return' → logprob: -14.376951217651367
    7. ' )' → logprob: -14.626951217651367
    8. ' )
' → logprob: -15.251951217651367
    9. ' ' → logprob: -17.251951217651367
    10. ')\
' → logprob: -18.001951217651367

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0069739483296871185
    2. ' return' → logprob: -5.381973743438721
    3. 'return' → logprob: -6.131973743438721
    4. '	return' → logprob: -9.631974220275879
    5. '
' → logprob: -10.131974220275879
    6. '       ' → logprob: -10.756974220275879
    7. '    
' → logprob: -10.881974220275879
    8. '<|end|>' → logprob: -11.006974220275879
    9. ':return' → logprob: -12.381974220275879
    10. ' ' → logprob: -13.006974220275879

Token 201: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11310861259698868
    2. 'return' (adapté à ' return') → logprob: -2.3631086349487305
    3. ' return' → logprob: -4.3631086349487305
    4. '	return' → logprob: -9.73810863494873
    5. '       ' → logprob: -11.73810863494873
    6. ':return' → logprob: -12.36310863494873
    7. ' ' → logprob: -12.73810863494873
    8. '<|end|>' → logprob: -13.36310863494873
    9. '  ' → logprob: -13.86310863494873
    10. '
' → logprob: -14.11310863494873

Token 202: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.38692352175712585
    2. 'ans' → logprob: -1.1369235515594482
    3. '(ans' → logprob: -10.386923789978027
    4. '	ans' → logprob: -10.761923789978027
    5. '_ans' → logprob: -15.011923789978027
    6. 'answer' → logprob: -16.26192283630371
    7. ' ' → logprob: -17.51192283630371
    8. '   ' → logprob: -18.01192283630371
    9. 'anst' → logprob: -18.13692283630371
    10. ' ' → logprob: -18.51192283630371

Token 203: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027679058257490396
    2. '#' → logprob: -6.377768039703369
    3. 'n' → logprob: -7.252768039703369
    4. 'if' → logprob: -9.002767562866211
    5. '```' → logprob: -9.127767562866211
    6. '<|end|>' → logprob: -10.002767562866211
    7. 'print' → logprob: -11.127767562866211
    8. 'd' → logprob: -11.752767562866211
    9. 'input' → logprob: -11.877767562866211
    10. 'a' → logprob: -11.877767562866211

Token 205: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0005512446514330804
    2. ' solve' → logprob: -7.875551223754883
    3. 'main' → logprob: -8.875551223754883
    4. ' process' → logprob: -10.875551223754883
    5. ' solution' → logprob: -12.750551223754883
    6. ' calculate' → logprob: -12.750551223754883
    7. ' def' → logprob: -12.750551223754883
    8. ' run' → logprob: -13.000551223754883
    9. 'solve' → logprob: -14.750551223754883
    10. ' compute' → logprob: -15.000551223754883

Token 206: '_output' (ID: 16732)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005425465060397983
    2. '_' → logprob: -8.750542640686035
    3. '(ans' → logprob: -8.750542640686035
    4. '('' → logprob: -10.000542640686035
    5. '(answer' → logprob: -10.125542640686035
    6. '("' → logprob: -10.500542640686035
    7. '("("' → logprob: -10.875542640686035
    8. '()' → logprob: -10.875542640686035
    9. ' (' → logprob: -11.000542640686035
    10. '_answer' → logprob: -11.750542640686035

Token 207: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7379640340805054
    2. '():' → logprob: -0.9879640340805054
    3. '(ans' → logprob: -2.362964153289795
    4. '()' → logprob: -2.987964153289795
    5. '(output' → logprob: -5.612964153289795
    6. '(answer' → logprob: -8.112963676452637
    7. '(data' → logprob: -8.487963676452637
    8. '(print' → logprob: -9.612963676452637
    9. '(out' → logprob: -9.737963676452637
    10. ':' → logprob: -9.737963676452637

Token 208: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003998615313321352
    2. '):
' → logprob: -6.128998756408691
    3. ')' → logprob: -6.503998756408691
    4. '(result' → logprob: -8.128998756408691
    5. ' ):' → logprob: -12.503998756408691
    6. '   ' → logprob: -12.628998756408691
    7. ',result' → logprob: -12.628998756408691
    8. ',' → logprob: -13.003998756408691
    9. '):
' → logprob: -13.253998756408691
    10. '(' → logprob: -13.253998756408691

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001148313982412219
    2. ' print' → logprob: -7.251148223876953
    3. 'print' → logprob: -7.751148223876953
    4. '    
' → logprob: -12.001148223876953
    5. '(print' → logprob: -14.126148223876953
    6. '```' → logprob: -14.376148223876953
    7. '    ' → logprob: -15.876148223876953
    8. '	print' → logprob: -16.126148223876953
    9. '(' → logprob: -16.376148223876953
    10. '
' → logprob: -16.876148223876953

Token 210: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.517272024415433e-05
    2. ' print' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.250075340270996
    4. 'pr' → logprob: -17.25007438659668
    5. '```' → logprob: -18.25007438659668
    6. 'prin' → logprob: -19.12507438659668
    7. 'pass' → logprob: -20.75007438659668
    8. 'pri' → logprob: -21.25007438659668
    9. '`' → logprob: -21.37507438659668
    10. '
' → logprob: -21.62507438659668

Token 211: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0002251125843031332
    2. '(' → logprob: -8.500225067138672
    3. 'result' → logprob: -10.750225067138672
    4. '(
' → logprob: -16.750225067138672
    5. '=result' → logprob: -17.125225067138672
    6. ' result' → logprob: -18.375225067138672
    7. ',result' → logprob: -18.375225067138672
    8. '()' → logprob: -18.500225067138672
    9. '(output' → logprob: -19.250225067138672
    10. ' (' → logprob: -19.500225067138672

Token 212: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -15.875000953674316
    4. '()' → logprob: -16.625001907348633
    5. '())' → logprob: -17.250001907348633
    6. ')`' → logprob: -18.000001907348633
    7. ')

' → logprob: -18.375001907348633
    8. '')' → logprob: -18.500001907348633
    9. '))' → logprob: -18.875001907348633
    10. '(' → logprob: -19.625001907348633

Token 213: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00037192381569184363
    2. 'n' → logprob: -8.375371932983398
    3. 'if' → logprob: -8.875371932983398
    4. 'ndef' → logprob: -14.250371932983398
    5. '#' → logprob: -14.875371932983398
    6. '```' → logprob: -15.375371932983398
    7. 'for' → logprob: -15.875371932983398
    8. 'd' → logprob: -16.2503719329834
    9. 'a' → logprob: -16.7503719329834
    10. ' def' → logprob: -16.8753719329834

Token 214: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06916258484125137
    2. ' main' → logprob: -2.819162607192993
    3. 'def' → logprob: -4.944162368774414
    4. ' def' → logprob: -10.319162368774414
    5. '_main' → logprob: -12.194162368774414
    6. '__' → logprob: -13.194162368774414
    7. 'run' → logprob: -13.319162368774414
    8. 'solve' → logprob: -14.069162368774414
    9. 'read' → logprob: -14.444162368774414
    10. ' run' → logprob: -15.069162368774414

Token 215: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.4259644558478612e-05
    2. ' ():' → logprob: -12.000014305114746
    3. '():
' → logprob: -12.250014305114746
    4. '(' → logprob: -13.250014305114746
    5. '()' → logprob: -13.625014305114746
    6. '_' → logprob: -15.375014305114746
    7. '(:' → logprob: -16.75001335144043
    8. '(":' → logprob: -18.00001335144043
    9. '()>' → logprob: -18.12501335144043
    10. '():
' → logprob: -18.12501335144043

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8913612365722656
    2. ' n' → logprob: -0.8913612365722656
    3. 'n' → logprob: -1.7663612365722656
    4. ' src' → logprob: -5.516361236572266
    5. 'src' → logprob: -5.766361236572266
    6. ' d' → logprob: -7.391361236572266
    7. 'd' → logprob: -8.391361236572266
    8. ' s' → logprob: -8.766361236572266
    9. '	n' → logprob: -8.891361236572266
    10. '    
' → logprob: -9.266361236572266

Token 217: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1196068599820137
    2. '   ' → logprob: -2.3696069717407227
    3. ' n' → logprob: -3.9946069717407227
    4. 'src' → logprob: -7.869606971740723
    5. 'N' (adapté à ' N') → logprob: -8.744606971740723
    6. 't' → logprob: -8.994606971740723
    7. 'd' → logprob: -10.244606971740723
    8. ' ' → logprob: -10.869606971740723
    9. 's' → logprob: -10.994606971740723
    10. '    
' → logprob: -11.244606971740723

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09009156376123428
    2. '=' → logprob: -2.4650914669036865
    3. ',' → logprob: -6.840091705322266
    4. '=int' → logprob: -10.090091705322266
    5. ' ' → logprob: -10.715091705322266
    6. '=input' → logprob: -12.090091705322266
    7. ' =
' → logprob: -12.590091705322266
    8. ' ,' → logprob: -12.965091705322266
    9. ')' → logprob: -12.965091705322266
    10. '  ' → logprob: -14.340091705322266

Token 219: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.10252717137336731
    2. 'read' → logprob: -2.352527141571045
    3. ' int' → logprob: -6.227527141571045
    4. 'int' → logprob: -7.977527141571045
    5. '	read' → logprob: -15.352527618408203
    6. ' ' → logprob: -16.602527618408203
    7. '  ' → logprob: -16.852527618408203
    8. '   ' → logprob: -17.477527618408203
    9. '(read' → logprob: -17.477527618408203
    10. '_read' → logprob: -17.602527618408203

Token 220: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.06705072522163391
    2. '_' → logprob: -3.3170506954193115
    3. '()' → logprob: -3.5670506954193115
    4. '(' → logprob: -8.81705093383789
    5. 'input' → logprob: -9.44205093383789
    6. '()
' → logprob: -10.44205093383789
    7. '_INPUT' → logprob: -11.19205093383789
    8. '_Input' → logprob: -11.19205093383789
    9. '_line' → logprob: -11.31705093383789
    10. ' _' → logprob: -11.69205093383789

Token 221: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00011045700375689194
    2. '()
' → logprob: -9.125110626220703
    3. '()

' → logprob: -14.375110626220703
    4. '()`' → logprob: -15.500110626220703
    5. '()
' → logprob: -15.500110626220703
    6. '()\' → logprob: -15.750110626220703
    7. '()"' → logprob: -16.125110626220703
    8. ' ()' → logprob: -16.250110626220703
    9. '(' → logprob: -16.625110626220703
    10. '()]' → logprob: -17.125110626220703

Token 222: '   ' (ID: 271)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.33144649863243103
    2. '   ' → logprob: -1.5814465284347534
    3. '
' → logprob: -2.956446409225464
    4. 's' → logprob: -5.081446647644043
    5. ' src' → logprob: -5.331446647644043
    6. '    
' → logprob: -5.706446647644043
    7. '[src' → logprob: -5.956446647644043
    8. '<|end|>' → logprob: -6.331446647644043
    9. 'd' → logprob: -6.831446647644043
    10. '```' → logprob: -7.331446647644043

Token 223: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' (adapté à ' src') → logprob: -0.04075487330555916
    2. 'sequence' → logprob: -3.915754795074463
    3. 'seq' → logprob: -4.290754795074463
    4. '   ' → logprob: -5.165754795074463
    5. 'arr' → logprob: -8.415755271911621
    6. 's' → logprob: -9.040755271911621
    7. 'source' → logprob: -9.415755271911621
    8. ' src' → logprob: -9.790755271911621
    9. 'A' → logprob: -9.915755271911621
    10. ' sequence' → logprob: -10.665755271911621

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931514739990234
    2. ' =' → logprob: -0.6931514739990234
    3. ' ' → logprob: -13.568151473999023
    4. '   ' → logprob: -13.943151473999023
    5. ',' → logprob: -14.193151473999023
    6. '_' → logprob: -14.943151473999023
    7. ')' → logprob: -15.693151473999023
    8. '[' → logprob: -15.818151473999023
    9. 's' → logprob: -16.193151473999023
    10. '＝' → logprob: -16.318151473999023

Token 225: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.07889342308044434
    2. ' read' → logprob: -2.5788934230804443
    3. '   ' → logprob: -12.953893661499023
    4. '	read' → logprob: -14.328893661499023
    5. '(read' → logprob: -14.828893661499023
    6. ' ' → logprob: -16.203893661499023
    7. '_read' → logprob: -16.828893661499023
    8. '[' → logprob: -16.828893661499023
    9. '  ' → logprob: -16.953893661499023
    10. 'initialize' → logprob: -17.953893661499023

Token 226: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -6.704273118884885e-07
    2. 'sequence' → logprob: -15.125000953674316
    3. '_' → logprob: -15.875000953674316
    4. '_source' → logprob: -16.625
    5. '_input' → logprob: -17.0
    6. '_sequences' → logprob: -17.375
    7. 'Sequence' → logprob: -18.5
    8. '_SEQUENCE' → logprob: -18.625
    9. '_seq' → logprob: -19.875
    10. '(sequence' → logprob: -20.625

Token 227: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33579888939857483
    2. '
' → logprob: -1.3357988595962524
    3. '()
' → logprob: -4.710798740386963
    4. '()' → logprob: -5.335798740386963
    5. '<|end|>' → logprob: -6.085798740386963
    6. '(d' → logprob: -6.210798740386963
    7. 'd' → logprob: -6.460798740386963
    8. '    
' → logprob: -6.710798740386963
    9. 'def' → logprob: -7.710798740386963
    10. '(' → logprob: -8.460799217224121

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37024709582328796
    2. '
' → logprob: -1.6202471256256104
    3. 'd' → logprob: -2.2452471256256104
    4. '    
' → logprob: -5.620246887207031
    5. '	d' → logprob: -6.620246887207031
    6. ' d' → logprob: -8.495246887207031
    7. '	
' → logprob: -9.245246887207031
    8. '```' → logprob: -9.245246887207031
    9. 'def' → logprob: -9.620246887207031
    10. '
' → logprob: -9.870246887207031

Token 229: ' ans' (ID: 3345)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.29834872484207153
    2. ' d' → logprob: -2.0483486652374268
    3. '   ' → logprob: -2.0483486652374268
    4. '	d' → logprob: -10.923348426818848
    5. ' ' → logprob: -11.173348426818848
    6. '
' → logprob: -11.673348426818848
    7. '  ' → logprob: -12.048348426818848
    8. '    
' → logprob: -12.423348426818848
    9. '    ' → logprob: -12.798348426818848
    10. '```' → logprob: -13.173348426818848

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602262556552887
    2. '=' → logprob: -1.9102262258529663
    3. ',' → logprob: -13.660225868225098
    4. ' ' → logprob: -14.285225868225098
    5. ' =
' → logprob: -15.660225868225098
    6. '	' → logprob: -17.035226821899414
    7. '=create' → logprob: -17.160226821899414
    8. '＝' → logprob: -17.660226821899414
    9. ' =)' → logprob: -18.035226821899414
    10. '=int' → logprob: -18.160226821899414

Token 231: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.14739622175693512
    2. '0' → logprob: -2.0223963260650635
    3. ' initialize' → logprob: -5.397396087646484
    4. ' ' → logprob: -8.647396087646484
    5. '   ' → logprob: -13.022396087646484
    6. '	initialize' → logprob: -13.272396087646484
    7. '_initialize' → logprob: -15.022396087646484
    8. 'Initialize' → logprob: -15.147396087646484
    9. '  ' → logprob: -15.147396087646484
    10. 'initialized' → logprob: -15.272396087646484

Token 232: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -4.60414821645827e-06
    2. '_empty' → logprob: -12.500004768371582
    3. '_ans' → logprob: -15.000004768371582
    4. '_default' → logprob: -15.000004768371582
    5. '_' → logprob: -15.750004768371582
    6. '_output' → logprob: -16.750003814697266
    7. '_answers' → logprob: -17.250003814697266
    8. 'answer' → logprob: -17.375003814697266
    9. 'Answer' → logprob: -19.000003814697266
    10. '_an' → logprob: -19.000003814697266

Token 233: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00043341092532500625
    2. '()
' → logprob: -7.750433444976807
    3. ' ()' → logprob: -13.250432968139648
    4. '()\' → logprob: -14.875432968139648
    5. '()

' → logprob: -15.125432968139648
    6. '()
' → logprob: -15.125432968139648
    7. '()`' → logprob: -18.00043296813965
    8. '()<' → logprob: -18.12543296813965
    9. '())' → logprob: -18.50043296813965
    10. '()"' → logprob: -18.87543296813965

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1304275393486023
    2. 'd' → logprob: -2.130427598953247
    3. ' d' → logprob: -6.630427360534668
    4. '
' → logprob: -6.755427360534668
    5. '	d' → logprob: -7.505427360534668
    6. '    
' → logprob: -7.880427360534668
    7. '(d' → logprob: -11.130427360534668
    8. '```' → logprob: -11.630427360534668
    9. ',d' → logprob: -12.005427360534668
    10. '<|end|>' → logprob: -12.005427360534668

Token 235: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.007266916800290346
    2. ' d' → logprob: -5.507266998291016
    3. '   ' → logprob: -5.757266998291016
    4. '	d' → logprob: -10.882266998291016
    5. ' ' → logprob: -13.007266998291016
    6. '  ' → logprob: -14.007266998291016
    7. '```' → logprob: -14.507266998291016
    8. '    ' → logprob: -15.757266998291016
    9. '<|end|>' → logprob: -15.882266998291016
    10. '       ' → logprob: -16.007266998291016

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03364604339003563
    2. '=' → logprob: -3.4086461067199707
    3. ' ' → logprob: -16.033645629882812
    4. ',' → logprob: -16.783645629882812
    5. ' =
' → logprob: -17.658645629882812
    6. '＝' → logprob: -17.908645629882812
    7. '  ' → logprob: -18.158645629882812
    8. '=d' → logprob: -18.158645629882812
    9. ')' → logprob: -18.533645629882812
    10. '(' → logprob: -18.658645629882812

Token 237: ' initialize' (ID: 18400)
  Prédit: ' initialize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initialize' → logprob: -0.5231732726097107
    2. 'initialize' → logprob: -0.8981732726097107
    3. '	initialize' → logprob: -10.648173332214355
    4. '_initialize' → logprob: -11.648173332214355
    5. '   ' → logprob: -11.898173332214355
    6. ' defaultdict' → logprob: -12.398173332214355
    7. 'itialize' → logprob: -13.648173332214355
    8. '.initialize' → logprob: -13.773173332214355
    9. ' ' → logprob: -13.898173332214355
    10. '    ' → logprob: -14.148173332214355

Token 238: '_default' (ID: 21934)
  Prédit: '_default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_default' → logprob: -6.349075556499884e-05
    2. '_empty' → logprob: -10.2500638961792
    3. 'default' → logprob: -10.5000638961792
    4. '_' → logprob: -14.8750638961792
    5. 'empty' → logprob: -16.875062942504883
    6. '_DEFAULT' → logprob: -17.125062942504883
    7. '_Default' → logprob: -17.250062942504883
    8. 'def' → logprob: -17.625062942504883
    9. '```' → logprob: -18.125062942504883
    10. 'Default' → logprob: -18.125062942504883

Token 239: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: 0.0
    2. ' dict' → logprob: -18.0
    3. 'ict' → logprob: -20.0
    4. 'def' → logprob: -20.375
    5. 'Dict' → logprob: -20.75
    6. '_dict' → logprob: -20.75
    7. 'default' → logprob: -22.25
    8. '(dict' → logprob: -22.25
    9. 'd' → logprob: -22.625
    10. 'list' → logprob: -23.25

Token 240: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029798166826367378
    2. '()
' → logprob: -3.5297982692718506
    3. '   ' → logprob: -11.02979850769043
    4. '(' → logprob: -11.27979850769043
    5. '()

' → logprob: -11.52979850769043
    6. '()\' → logprob: -12.90479850769043
    7. '();' → logprob: -13.27979850769043
    8. '(
' → logprob: -13.52979850769043
    9. '()
' → logprob: -13.52979850769043
    10. '
' → logprob: -14.65479850769043

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004360571503639221
    2. '
' → logprob: -5.754360675811768
    3. '<|end|>' → logprob: -7.379360675811768
    4. '    
' → logprob: -8.50436019897461
    5. 'result' → logprob: -8.50436019897461
    6. '	ans' → logprob: -10.00436019897461
    7. 'ans' → logprob: -10.75436019897461
    8. '<|end|>' → logprob: -10.75436019897461
    9. ' ans' → logprob: -11.25436019897461
    10. '  
' → logprob: -11.50436019897461

Token 242: ' e' (ID: 319)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20784884691238403
    2. '   ' → logprob: -1.7078487873077393
    3. ' ans' → logprob: -5.332849025726318
    4. '	ans' → logprob: -6.832849025726318
    5. '(ans' → logprob: -8.45784854888916
    6. 'print' → logprob: -9.58284854888916
    7. 'for' → logprob: -9.83284854888916
    8. 'answer' → logprob: -9.95784854888916
    9. 'result' → logprob: -10.08284854888916
    10. '_ans' → logprob: -10.95784854888916

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7672913074493408
    2. 'm' → logprob: -1.3922913074493408
    3. ' =' → logprob: -2.267291307449341
    4. 'x' → logprob: -3.142291307449341
    5. '   ' → logprob: -3.392291307449341
    6. 'n' → logprob: -3.392291307449341
    7. 'lse' → logprob: -5.017291069030762
    8. '[' → logprob: -5.392291069030762
    9. ' for' → logprob: -5.392291069030762
    10. '       ' → logprob: -5.392291069030762

Token 244: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.559309720993042
    2. '[]' → logprob: -1.059309720993042
    3. ' initialize' → logprob: -3.309309720993042
    4. ' []' → logprob: -3.434309720993042
    5. '0' → logprob: -6.684309959411621
    6. '{}' → logprob: -6.809309959411621
    7. 'd' → logprob: -7.309309959411621
    8. '[' → logprob: -7.309309959411621
    9. 'src' → logprob: -7.309309959411621
    10. 'valuate' → logprob: -7.309309959411621

Token 245: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -1.1472419600977446e-06
    2. '_default' → logprob: -14.750000953674316
    3. '_' → logprob: -15.000000953674316
    4. 'empty' → logprob: -15.375000953674316
    5. '_answer' → logprob: -16.000001907348633
    6. '_EMPTY' → logprob: -18.750001907348633
    7. '_emp' → logprob: -18.750001907348633
    8. '_list' → logprob: -19.125001907348633
    9. 'Empty' → logprob: -20.500001907348633
    10. ' empty' → logprob: -20.750001907348633

Token 246: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0008375041070394218
    2. '_' → logprob: -7.125837326049805
    3. ' _' → logprob: -10.750837326049805
    4. 'list' → logprob: -11.625837326049805
    5. 'List' → logprob: -13.750837326049805
    6. ' list' → logprob: -14.125837326049805
    7. '_l' → logprob: -15.750837326049805
    8. '_List' → logprob: -16.250837326049805
    9. '__' → logprob: -16.375837326049805
    10. '_LIST' → logprob: -16.875837326049805

Token 247: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0053652566857635975
    2. '()
' → logprob: -5.255365371704102
    3. '   ' → logprob: -10.005365371704102
    4. '<|end|>' → logprob: -10.255365371704102
    5. '()\' → logprob: -10.255365371704102
    6. '()

' → logprob: -11.755365371704102
    7. '()
' → logprob: -13.505365371704102
    8. '[]' → logprob: -13.630365371704102
    9. '()[' → logprob: -13.880365371704102
    10. '();' → logprob: -14.005365371704102

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02030700072646141
    2. '
' → logprob: -4.3953070640563965
    3. '<|end|>' → logprob: -5.0203070640563965
    4. 'for' → logprob: -7.8953070640563965
    5. '    
' → logprob: -8.395306587219238
    6. ' for' → logprob: -8.395306587219238
    7. '<|end|>' → logprob: -9.270306587219238
    8. 'e' → logprob: -9.895306587219238
    9. '	ans' → logprob: -10.145306587219238
    10. 'ans' → logprob: -10.770306587219238

Token 249: ' result' (ID: 1534)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3113895356655121
    2. ' for' → logprob: -2.186389446258545
    3. '   ' → logprob: -2.311389446258545
    4. 'ans' → logprob: -3.186389446258545
    5. 'result' (adapté à ' result') → logprob: -4.936389446258545
    6. 'e' → logprob: -5.936389446258545
    7. 'print' → logprob: -6.311389446258545
    8. ' ans' → logprob: -6.436389446258545
    9. '	ans' → logprob: -7.561389446258545
    10. '<|end|>' → logprob: -8.061389923095703

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020699352025986
    2. '=' → logprob: -2.3502070903778076
    3. ' =
' → logprob: -15.850207328796387
    4. ' ' → logprob: -16.47520637512207
    5. ')' → logprob: -16.85020637512207
    6. ',' → logprob: -16.97520637512207
    7. '  ' → logprob: -18.10020637512207
    8. ' =)' → logprob: -18.35020637512207
    9. ' ' → logprob: -18.47520637512207
    10. ' +=' → logprob: -18.72520637512207

Token 251: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.16022422909736633
    2. ' process' → logprob: -1.910224199295044
    3. '(process' → logprob: -17.16022491455078
    4. '	process' → logprob: -17.41022491455078
    5. ' proces' → logprob: -18.16022491455078
    6. '   ' → logprob: -18.28522491455078
    7. '.process' → logprob: -19.66022491455078
    8. '_process' → logprob: -19.91022491455078
    9. 'proces' → logprob: -19.91022491455078
    10. '
' → logprob: -20.66022491455078

Token 252: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -3.128163257315464e-07
    2. 'sequence' → logprob: -15.375
    3. '_' → logprob: -17.875
    4. '_process' → logprob: -18.25
    5. '_seq' → logprob: -19.375
    6. '_se' → logprob: -19.375
    7. '_sequences' → logprob: -19.375
    8. '_result' → logprob: -19.625
    9. 'Sequence' → logprob: -19.875
    10. '_source' → logprob: -20.375

Token 253: '(src' (ID: 28558)
  Prédit: '(src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(src' → logprob: -0.000561969296541065
    2. '(' → logprob: -7.5005621910095215
    3. ' (' → logprob: -11.750561714172363
    4. '(s' → logprob: -14.750561714172363
    5. '(sr' → logprob: -15.125561714172363
    6. '<src' → logprob: -15.500561714172363
    7. '(
' → logprob: -16.25056266784668
    8. '(source' → logprob: -16.62556266784668
    9. 'src' → logprob: -16.87556266784668
    10. '[src' → logprob: -17.12556266784668

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005276533775031567
    2. ',d' → logprob: -7.625527858734131
    3. ' ,' → logprob: -10.250527381896973
    4. '(d' → logprob: -13.625527381896973
    5. '   ' → logprob: -13.875527381896973
    6. ',
' → logprob: -14.125527381896973
    7. 'd' → logprob: -14.500527381896973
    8. ')' → logprob: -14.500527381896973
    9. '(' → logprob: -14.875527381896973
    10. '```' → logprob: -17.37552833557129

Token 255: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3868831992149353
    2. ' d' → logprob: -1.13688325881958
    3. ')d' → logprob: -12.261882781982422
    4. '	d' → logprob: -12.886882781982422
    5. '<|end|>' → logprob: -13.136882781982422
    6. '   ' → logprob: -14.011882781982422
    7. 'e' → logprob: -15.011882781982422
    8. '_d' → logprob: -15.011882781982422
    9. ')' → logprob: -15.261882781982422
    10. ' ' → logprob: -15.386882781982422

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. ' ,' → logprob: -12.250004768371582
    3. ',
' → logprob: -15.125004768371582
    4. ')' → logprob: -17.0000057220459
    5. ' ans' → logprob: -17.8750057220459
    6. '   ' → logprob: -17.8750057220459
    7. '‌,' → logprob: -18.7500057220459
    8. '),' → logprob: -18.8750057220459
    9. '```' → logprob: -19.0000057220459
    10. ',

' → logprob: -19.7500057220459

Token 257: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.020573416724801064
    2. ' ans' → logprob: -3.895573377609253
    3. '(ans' → logprob: -11.020573616027832
    4. '	ans' → logprob: -11.270573616027832
    5. '_ans' → logprob: -14.020573616027832
    6. ')' → logprob: -14.520573616027832
    7. 'answer' → logprob: -14.770573616027832
    8. '<|end|>' → logprob: -15.145573616027832
    9. '   ' → logprob: -15.895573616027832
    10. ' ' → logprob: -16.020572662353516

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.2762428822461516e-05
    2. ')
' → logprob: -9.875052452087402
    3. ' )' → logprob: -14.250052452087402
    4. ')e' → logprob: -15.375052452087402
    5. '   ' → logprob: -15.500052452087402
    6. ')

' → logprob: -16.75005340576172
    7. ' ' → logprob: -17.75005340576172
    8. ',' → logprob: -18.00005340576172
    9. ')`' → logprob: -18.25005340576172
    10. ')#' → logprob: -18.62505340576172

Token 259: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48052358627319336
    2. '   ' → logprob: -0.9805235862731934
    3. '    
' → logprob: -5.855523586273193
    4. 'print' → logprob: -5.980523586273193
    5. '<|end|>' → logprob: -7.730523586273193
    6. '  
' → logprob: -9.105524063110352
    7. '```' → logprob: -9.480524063110352
    8. '[' → logprob: -9.855524063110352
    9. ' print' → logprob: -9.980524063110352
    10. '()
' → logprob: -10.230524063110352

Token 260: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.016575727611780167
    2. '
' → logprob: -4.516575813293457
    3. '   ' → logprob: -5.266575813293457
    4. ' print' → logprob: -8.516575813293457
    5. '    
' → logprob: -9.391575813293457
    6. '  
' → logprob: -10.391575813293457
    7. '```' → logprob: -11.766575813293457
    8. '(print' → logprob: -12.016575813293457
    9. '	print' → logprob: -12.141575813293457
    10. 'e' → logprob: -12.641575813293457

Token 261: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.09475936740636826
    2. '_' → logprob: -2.469759464263916
    3. '_(' → logprob: -5.469759464263916
    4. '(' → logprob: -6.719759464263916
    5. '(_' → logprob: -8.719758987426758
    6. '(output' → logprob: -9.594758987426758
    7. '_result' → logprob: -9.719758987426758
    8. '(result' → logprob: -9.969758987426758
    9. ' _' → logprob: -11.219758987426758
    10. '_out' → logprob: -11.594758987426758

Token 262: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.018152287229895592
    2. '(' → logprob: -4.018152236938477
    3. ' (' → logprob: -13.893152236938477
    4. '(
' → logprob: -14.018152236938477
    5. '(results' → logprob: -15.768152236938477
    6. '(

' → logprob: -16.518152236938477
    7. '(resultado' → logprob: -16.643152236938477
    8. '("("' → logprob: -17.393152236938477
    9. '(res' → logprob: -17.518152236938477
    10. '(return' → logprob: -17.518152236938477

Token 263: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.432518421206623e-05
    2. ')
' → logprob: -10.0000638961792
    3. '()' → logprob: -11.2500638961792
    4. '())' → logprob: -12.5000638961792
    5. ' )' → logprob: -14.1250638961792
    6. ')`' → logprob: -15.0000638961792
    7. '`)' → logprob: -15.2500638961792
    8. '))' → logprob: -15.3750638961792
    9. '   ' → logprob: -15.3750638961792
    10. '(' → logprob: -16.125064849853516

Token 264: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3828742504119873
    2. '
' → logprob: -1.5078742504119873
    3. 'main' → logprob: -2.5078742504119873
    4. '\n' → logprob: -4.757874488830566
    5. '#' → logprob: -6.632874488830566
    6. '<|end|>' → logprob: -6.632874488830566
    7. '```' → logprob: -6.632874488830566
    8. '_' → logprob: -7.007874488830566
    9. ' if' → logprob: -7.632874488830566
    10. '\' → logprob: -8.257874488830566

Token 265: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 263
Tokens correctement prédits (1ère position, stricte): 108
Tokens correctement prédits (1ère position, avec adaptation): 117
Tokens correctement prédits (top 10): 222
Précision stricte (1ère position): 41.06%
Précision adaptée (1ère position): 44.49%
Précision (top 10): 84.41%
================================================================================
