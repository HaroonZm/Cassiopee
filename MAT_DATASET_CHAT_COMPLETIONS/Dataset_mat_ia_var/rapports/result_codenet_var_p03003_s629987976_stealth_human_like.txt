================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# J'augmente la récursion, au cas où
sys.setrecursionlimit(1000000000)
INF = 10**18  # Une grosse valeur, on verra si on s'en sert
MOD = int(1e9)+7  # classiquement modulo

# je trouve ça plus pratique de raccourcir l'input
input = lambda: sys.stdin.readline().strip()

# Fonctions pour afficher Yes/No, un peu inutile mais bon
def YesNo(b):
    if b:
        print('Yes')
        return True
    else:
        print('No')
        return False

def YESNO(b):
    if b:
        print('YES')
        return True
    print('NO')
    return False

int1 = lambda x: int(x)-1  # Pour passer 1-indexé en 0-indexé

def main():
    N, M = map(int, input().split())
    S = tuple(map(int, input().split()))
    T = tuple(map(int, input().split()))
    # Initialisation DP façon tableau, on aurait pu le faire en compréhension aussi
    dp = []
    for _ in range(N+1):
        dp.append([0]*(M+1))
    # SUM, pas besoin de +2 partout je crois, mais bon, ça marche
    SUM = [[0]*(M+2) for _ in range(N+2)]
    ans = 1
    for s in range(N):
        for t in range(M):
            if S[s]==T[t]:
                dp[s+1][t+1] = SUM[s+1][t+1] + 1
                ans = (ans + dp[s+1][t+1]) % MOD
            else:
                dp[s+1][t+1] = 0  # inutile en Python, mais explicite
            # Préfixe SUM, je ne suis pas sûr d'avoir bien compris cet update mais je garde
            SUM[s+2][t+2] = (SUM[s+1][t+2] + SUM[s+2][t+1] - SUM[s+1][t+1] + dp[s+1][t+1]) % MOD
    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2866469621658325
    2. '\n' → logprob: -2.286646842956543
    3. 'import' → logprob: -2.286646842956543
    4. '<|end|>' → logprob: -4.036646842956543
    5. '' → logprob: -4.911646842956543
    6. ' ' → logprob: -5.411646842956543
    7. '
' → logprob: -6.036646842956543
    8. '\' → logprob: -6.161646842956543
    9. 'newline' → logprob: -6.286646842956543
    10. '<|end|>' → logprob: -6.286646842956543

Token 4: ' J' (ID: 643)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2402934730052948
    2. ' This' → logprob: -2.865293502807617
    3. ' The' → logprob: -3.740293502807617
    4. ' argparse' → logprob: -3.990293502807617
    5. ' is' → logprob: -4.615293502807617
    6. 'def' → logprob: -4.615293502807617
    7. ' argv' → logprob: -4.865293502807617
    8. ' def' → logprob: -4.990293502807617
    9. 'argv' → logprob: -4.990293502807617
    10. 'This' → logprob: -4.990293502807617

Token 5: ''' (ID: 6)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5870289206504822
    2. 'O' → logprob: -1.462028980255127
    3. 'A' → logprob: -2.837028980255127
    4. 'o' → logprob: -3.337028980255127
    5. 'a' → logprob: -3.462028980255127
    6. 'u' → logprob: -3.587028980255127
    7. 'SON' → logprob: -3.962028980255127
    8. 'upyter' → logprob: -4.337028980255127
    9. 'U' → logprob: -5.712028980255127
    10. 'SO' → logprob: -5.712028980255127

Token 6: 'aug' (ID: 13610)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1187829002737999
    2. 'a' → logprob: -2.8687829971313477
    3. ''' → logprob: -3.3687829971313477
    4. ''aime' → logprob: -4.993782997131348
    5. ''ai' → logprob: -5.618782997131348
    6. '#' → logprob: -5.743782997131348
    7. '')' → logprob: -6.743782997131348
    8. ''espère' → logprob: -6.868782997131348
    9. ''''' → logprob: -6.868782997131348
    10. 'u' → logprob: -7.243782997131348

Token 7: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.30077657103538513
    2. 'm' → logprob: -2.425776481628418
    3. 'ment' → logprob: -2.550776481628418
    4. 'mentation' → logprob: -3.050776481628418
    5. '#' → logprob: -4.050776481628418
    6. 'men' → logprob: -4.300776481628418
    7. 'me' → logprob: -5.050776481628418
    8. 'mented' → logprob: -6.175776481628418
    9. '```' → logprob: -7.050776481628418
    10. '`' → logprob: -7.175776481628418

Token 8: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10962391644716263
    2. ' ' → logprob: -3.109623908996582
    3. ' la' → logprob: -4.234623908996582
    4. ' sys' → logprob: -4.734623908996582
    5. ' le' → logprob: -4.859623908996582
    6. ''' → logprob: -5.734623908996582
    7. ' l' → logprob: -5.734623908996582
    8. 'le' → logprob: -5.984623908996582
    9. 'e' → logprob: -6.234623908996582
    10. ' _' → logprob: -6.609623908996582

Token 9: ' réc' (ID: 36254)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.4524504244327545
    2. 'val' → logprob: -2.3274505138397217
    3. ' ' → logprob: -3.3274505138397217
    4. 'performance' → logprob: -3.3274505138397217
    5. 'version' → logprob: -3.4524505138397217
    6. 'v' → logprob: -3.8274505138397217
    7. 'lim' → logprob: -3.9524505138397217
    8. 'variable' → logprob: -5.077450275421143
    9. 'import' → logprob: -5.452450275421143
    10. 'product' → logprob: -5.452450275421143

Token 10: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.8071327805519104
    2. 'urs' → logprob: -0.9321327805519104
    3. 'ur' → logprob: -1.9321327209472656
    4. 'u' → logprob: -5.307132720947266
    5. 'urrence' → logprob: -5.432132720947266
    6. 'ursive' → logprob: -5.932132720947266
    7. 'up' → logprob: -6.182132720947266
    8. 'urrent' → logprob: -8.432132720947266
    9. '**' → logprob: -9.182132720947266
    10. 'r' → logprob: -9.182132720947266

Token 11: ',' (ID: 11)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.46441179513931274
    2. 'limit' → logprob: -1.339411735534668
    3. '_depth' → logprob: -2.589411735534668
    4. '_' → logprob: -3.964411735534668
    5. '_lim' → logprob: -4.589411735534668
    6. 'depth' → logprob: -6.464411735534668
    7. '_stack' → logprob: -7.214411735534668
    8. 'lim' → logprob: -7.214411735534668
    9. '_LIMIT' → logprob: -7.339411735534668
    10. '_max' → logprob: -7.839411735534668

Token 12: ' au' (ID: 2791)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4291211664676666
    2. 'sys' → logprob: -1.0541211366653442
    3. 'import' → logprob: -8.054121017456055
    4. ' import' → logprob: -9.679121017456055
    5. '=sys' → logprob: -11.679121017456055
    6. '```' → logprob: -11.804121017456055
    7. '_sys' → logprob: -12.304121017456055
    8. ' afin' → logprob: -12.679121017456055
    9. ' mais' → logprob: -12.679121017456055
    10. ' ' → logprob: -12.804121017456055

Token 13: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.0017657396383583546
    2. '```' → logprob: -7.501765727996826
    3. 'case' → logprob: -7.626765727996826
    4. 'maximum' → logprob: -8.501766204833984
    5. '   ' → logprob: -8.876766204833984
    6. '  ' → logprob: -9.126766204833984
    7. 'c' → logprob: -9.876766204833984
    8. 'bes' → logprob: -10.376766204833984
    9. 'pass' → logprob: -10.501766204833984
    10. 'minimum' → logprob: -10.626766204833984

Token 14: ' où' (ID: 15113)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3075650930404663
    2. 'de' → logprob: -1.4325650930404663
    3. 'où' → logprob: -1.5575650930404663
    4. ' où' → logprob: -2.432565212249756
    5. 'que' → logprob: -2.557565212249756
    6. ' ' → logprob: -2.807565212249756
    7. 'd' → logprob: -3.807565212249756
    8. '```' → logprob: -4.182565212249756
    9. 'o' → logprob: -5.307565212249756
    10. ' o' → logprob: -6.182565212249756

Token 15: '
' (ID: 198)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006968620698899031
    2. ' sys' → logprob: -5.2569684982299805
    3. '.sys' → logprob: -7.1319684982299805
    4. '_sys' → logprob: -8.13196849822998
    5. 'import' → logprob: -8.25696849822998
    6. '(sys' → logprob: -8.75696849822998
    7. '=sys' → logprob: -9.75696849822998
    8. '```' → logprob: -10.25696849822998
    9. '.' → logprob: -10.50696849822998
    10. '\n' → logprob: -10.63196849822998

Token 16: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0012119027087464929
    2. 'import' → logprob: -6.751212120056152
    3. ' sys' → logprob: -10.126212120056152
    4. '
' → logprob: -14.626212120056152
    5. '	sys' → logprob: -14.876212120056152
    6. '```' → logprob: -15.001212120056152
    7. '(sys' → logprob: -16.001211166381836
    8. '=sys' → logprob: -16.001211166381836
    9. '_sys' → logprob: -16.251211166381836
    10. '.sys' → logprob: -16.376211166381836

Token 17: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.1227559745311737
    2. '.' → logprob: -2.372756004333496
    3. '.setdefault' → logprob: -4.122756004333496
    4. ' .' → logprob: -5.122756004333496
    5. '.stdout' → logprob: -9.872756004333496
    6. '.argv' → logprob: -10.997756004333496
    7. '.stdin' → logprob: -10.997756004333496
    8. '.get' → logprob: -11.247756004333496
    9. '.stderr' → logprob: -11.247756004333496
    10. ' ' → logprob: -12.122756004333496

Token 18: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.5143038630485535
    2. '_rec' → logprob: -1.3893039226531982
    3. '_limit' → logprob: -2.7643039226531982
    4. '_' → logprob: -2.8893039226531982
    5. '_depth' → logprob: -5.139303684234619
    6. ' _' → logprob: -5.389303684234619
    7. '_stack' → logprob: -5.639303684234619
    8. 'limit' → logprob: -5.764303684234619
    9. '_max' → logprob: -5.889303684234619
    10. '_sys' → logprob: -6.264303684234619

Token 19: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -8.93579563125968e-05
    2. 'ur' → logprob: -9.750089645385742
    3. 'urs' → logprob: -10.500089645385742
    4. 'ursor' → logprob: -13.625089645385742
    5. 'ursive' → logprob: -13.875089645385742
    6. 'url' → logprob: -15.125089645385742
    7. 'urse' → logprob: -15.125089645385742
    8. 'limit' → logprob: -15.500089645385742
    9. 'urf' → logprob: -15.500089645385742
    10. 'usion' → logprob: -15.625089645385742

Token 20: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0019388694781810045
    2. '_limit' → logprob: -6.251938819885254
    3. 'depth' → logprob: -12.251938819885254
    4. 'lim' → logprob: -12.876938819885254
    5. '_depth' → logprob: -13.376938819885254
    6. '_' → logprob: -14.001938819885254
    7. ' limit' → logprob: -14.626938819885254
    8. '-limit' → logprob: -16.75193977355957
    9. '_lim' → logprob: -17.37693977355957
    10. '-' → logprob: -17.37693977355957

Token 21: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.981667537620524e-06
    2. ' (' → logprob: -14.125001907348633
    3. '(
' → logprob: -14.375001907348633
    4. '(

' → logprob: -14.875001907348633
    5. '((' → logprob: -15.500001907348633
    6. '(`' → logprob: -17.000001907348633
    7. '()' → logprob: -17.375001907348633
    8. '("("' → logprob: -17.375001907348633
    9. '(sys' → logprob: -17.500001907348633
    10. '('' → logprob: -18.125001907348633

Token 22: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.12695835530757904
    2. '10' → logprob: -2.1269583702087402
    3. '500' → logprob: -11.001957893371582
    4. ' ' → logprob: -12.126957893371582
    5. '300' → logprob: -12.126957893371582
    6. '150' → logprob: -13.876957893371582
    7. '200' → logprob: -14.126957893371582
    8. '999' → logprob: -14.376957893371582
    9. '250' → logprob: -16.0019588470459
    10. '400' → logprob: -16.2519588470459

Token 23: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.052322518080472946
    2. '0' → logprob: -3.5523226261138916
    3. '000' → logprob: -3.8023226261138916
    4. ')' → logprob: -15.052322387695312
    5. '))' → logprob: -16.927322387695312
    6. ' ' → logprob: -17.177322387695312
    7. '002' → logprob: -18.177322387695312
    8. '005' → logprob: -18.427322387695312
    9. '003' → logprob: -19.052322387695312
    10. '050' → logprob: -19.052322387695312

Token 24: '000' (ID: 1302)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3557529857498594e-05
    2. '0' → logprob: -10.75002384185791
    3. '))' → logprob: -13.50002384185791
    4. ' )' → logprob: -14.75002384185791
    5. '1' → logprob: -16.375022888183594
    6. ')
' → logprob: -18.000022888183594
    7. '4' → logprob: -18.250022888183594
    8. '),' → logprob: -18.375022888183594
    9. '')' → logprob: -18.375022888183594
    10. '```' → logprob: -18.375022888183594

Token 25: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '0' → logprob: -13.625001907348633
    3. '))' → logprob: -14.625001907348633
    4. ' )' → logprob: -15.250001907348633
    5. ')
' → logprob: -16.750001907348633
    6. '1' → logprob: -17.250001907348633
    7. ')

' → logprob: -18.250001907348633
    8. ')))' → logprob: -18.625001907348633
    9. '4' → logprob: -19.125001907348633
    10. '100' → logprob: -19.375001907348633

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ' )' → logprob: -12.250005722045898
    3. '))' → logprob: -14.000005722045898
    4. '0' → logprob: -15.875005722045898
    5. ')
' → logprob: -16.2500057220459
    6. ')))' → logprob: -17.8750057220459
    7. '),' → logprob: -18.2500057220459
    8. ')

' → logprob: -18.3750057220459
    9. '`)' → logprob: -18.8750057220459
    10. '')' → logprob: -18.8750057220459

Token 27: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1712665855884552
    2. '

' → logprob: -1.9212665557861328
    3. '\n' → logprob: -5.671266555786133
    4. '```' → logprob: -6.421266555786133
    5. '
' → logprob: -6.421266555786133
    6. '' → logprob: -6.671266555786133
    7. ')' → logprob: -7.171266555786133
    8. ' 

' → logprob: -7.296266555786133
    9. ' 
' → logprob: -7.421266555786133
    10. '


' → logprob: -8.546266555786133

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3381120264530182
    2. '=' → logprob: -1.3381119966506958
    3. ')' → logprob: -4.088111877441406
    4. '_' → logprob: -4.963111877441406
    5. ' )' → logprob: -7.963111877441406
    6. ' ' → logprob: -8.838111877441406
    7. ' =)' → logprob: -9.713111877441406
    8. '<|end|>' → logprob: -9.838111877441406
    9. ',' → logprob: -10.213111877441406
    10. ' :=' → logprob: -11.338111877441406

Token 29: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.5242081880569458
    2. 'float' → logprob: -1.6492081880569458
    3. ' ' → logprob: -1.7742081880569458
    4. '10' → logprob: -3.1492080688476562
    5. ' int' → logprob: -6.649208068847656
    6. '100' → logprob: -6.649208068847656
    7. 'int' → logprob: -7.649208068847656
    8. '1' → logprob: -9.149208068847656
    9. '999' → logprob: -10.149208068847656
    10. '(float' → logprob: -11.024208068847656

Token 30: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6993404626846313
    2. 'float' → logprob: -0.6993404626846313
    3. 'int' → logprob: -5.699340343475342
    4. '100' → logprob: -6.324340343475342
    5. '999' → logprob: -7.699340343475342
    6. ' float' → logprob: -8.1993408203125
    7. '1' → logprob: -8.6993408203125
    8. ' ' → logprob: -9.1993408203125
    9. '987' → logprob: -11.8243408203125
    10. '9' → logprob: -12.1993408203125

Token 31: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.043679412454366684
    2. '18' → logprob: -4.418679237365723
    3. '12' → logprob: -5.043679237365723
    4. '10' → logprob: -5.168679237365723
    5. '09' → logprob: -5.168679237365723
    6. '**' → logprob: -5.668679237365723
    7. '8' → logprob: -5.793679237365723
    8. '000' → logprob: -6.043679237365723
    9. '15' → logprob: -6.918679237365723
    10. '00' → logprob: -7.043679237365723

Token 32: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.02778048999607563
    2. '18' → logprob: -3.777780532836914
    3. '15' → logprob: -6.027780532836914
    4. '10' → logprob: -6.277780532836914
    5. '12' → logprob: -8.652780532836914
    6. '20' → logprob: -10.527780532836914
    7. '16' → logprob: -11.152780532836914
    8. '14' → logprob: -12.277780532836914
    9. '19' → logprob: -12.527780532836914
    10. '11' → logprob: -12.652780532836914

Token 33: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5195499658584595
    2. '#' → logprob: -1.6445499658584595
    3. '

' → logprob: -2.51954984664917
    4. '\n' → logprob: -3.01954984664917
    5. '' → logprob: -3.14454984664917
    6. ')' → logprob: -4.39454984664917
    7. '
' → logprob: -5.14454984664917
    8. '```' → logprob: -5.26954984664917
    9. '+' → logprob: -5.89454984664917
    10. '*' → logprob: -6.14454984664917

Token 34: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23803751170635223
    2. '#' → logprob: -2.363037586212158
    3. '

' → logprob: -2.738037586212158
    4. '' → logprob: -3.863037586212158
    5. ')' → logprob: -4.363037586212158
    6. '\n' → logprob: -5.238037586212158
    7. '
' → logprob: -5.613037586212158
    8. '```' → logprob: -6.238037586212158
    9. '<|end|>' → logprob: -6.363037586212158
    10. 'newline' → logprob: -6.988037586212158

Token 35: ' Une' (ID: 19758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42818683385849
    2. ' espace' → logprob: -2.5531868934631348
    3. '<|end|>' → logprob: -3.0531868934631348
    4. ' espaces' → logprob: -3.6781868934631348
    5. ' space' → logprob: -4.178186893463135
    6. ' '' → logprob: -4.365686893463135
    7. '  ' → logprob: -4.615686893463135
    8. ' A' → logprob: -4.678186893463135
    9. '<|end|>' → logprob: -4.740686893463135
    10. ' Le' → logprob: -4.865686893463135

Token 36: ' grosse' (ID: 77662)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13166336715221405
    2. ' valeur' → logprob: -2.8816633224487305
    3. ' constante' → logprob: -3.3816633224487305
    4. 'space' → logprob: -4.6316633224487305
    5. ' space' → logprob: -4.8816633224487305
    6. ' espace' → logprob: -5.3816633224487305
    7. 'val' → logprob: -6.2566633224487305
    8. '_' → logprob: -6.6316633224487305
    9. 'n' → logprob: -7.0066633224487305
    10. ' limite' → logprob: -7.3816633224487305

Token 37: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.3382381796836853
    2. ' space' → logprob: -2.08823823928833
    3. 'space' → logprob: -3.33823823928833
    4. ' ' → logprob: -3.33823823928833
    5. 'val' → logprob: -3.46323823928833
    6. ' val' → logprob: -3.83823823928833
    7. ' constante' → logprob: -4.21323823928833
    8. ' espace' → logprob: -4.33823823928833
    9. '_val' → logprob: -5.83823823928833
    10. '_' → logprob: -6.33823823928833

Token 38: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17411395907402039
    2. ' utilisée' → logprob: -3.4241139888763428
    3. ' mais' → logprob: -3.5491139888763428
    4. ' souvent' → logprob: -3.5491139888763428
    5. ' comme' → logprob: -4.924113750457764
    6. ' à' → logprob: -5.174113750457764
    7. ' probablement' → logprob: -5.174113750457764
    8. ' assez' → logprob: -5.299113750457764
    9. ' plus' → logprob: -5.424113750457764
    10. ',' → logprob: -5.674113750457764

Token 40: ' verra' (ID: 159395)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -1.1706284284591675
    2. ' n' → logprob: -1.6706284284591675
    3. ' considère' → logprob: -1.9206284284591675
    4. '_' → logprob: -2.545628547668457
    5. 'n' → logprob: -3.170628547668457
    6. ' esp' → logprob: -3.420628547668457
    7. ' utilise' → logprob: -3.795628547668457
    8. ' peut' → logprob: -4.295628547668457
    9. ' continue' → logprob: -4.670628547668457
    10. ' prend' → logprob: -4.670628547668457

Token 41: ' si' (ID: 1784)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.545129120349884
    2. '

' → logprob: -1.4201290607452393
    3. '\n' → logprob: -2.7951290607452393
    4. ' 

' → logprob: -3.5451290607452393
    5. '' → logprob: -3.6701290607452393
    6. '
' → logprob: -4.420129299163818
    7. '<|end|>' → logprob: -4.920129299163818
    8. '#' → logprob: -5.170129299163818
    9. '```' → logprob: -5.170129299163818
    10. ' ' → logprob: -5.295129299163818

Token 42: ' on' (ID: 402)
  Prédit: ' ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ça' → logprob: -0.049236804246902466
    2. 'c' → logprob: -4.17423677444458
    3. ' cela' → logprob: -4.79923677444458
    4. 'cela' → logprob: -4.79923677444458
    5. 'ça' → logprob: -5.17423677444458
    6. ' c' → logprob: -5.54923677444458
    7. ' ' → logprob: -6.54923677444458
    8. ' elle' → logprob: -6.79923677444458
    9. ' suff' → logprob: -7.17423677444458
    10. ' ca' → logprob: -7.67423677444458

Token 43: ' s' (ID: 265)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7885515689849854
    2. ' peut' → logprob: -2.2885515689849854
    3. 'pe' → logprob: -2.4135515689849854
    4. ' a' → logprob: -2.4135515689849854
    5. ' en' → logprob: -2.9135515689849854
    6. 'l' → logprob: -3.2885515689849854
    7. ' doit' → logprob: -3.6635515689849854
    8. 'en' → logprob: -3.7885515689849854
    9. ' dépasse' → logprob: -3.9135515689849854
    10. ' continue' → logprob: -4.038551330566406

Token 44: ''en' (ID: 16740)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.746510922908783
    2. 'rv' → logprob: -1.7465109825134277
    3. 'ert' → logprob: -1.8715109825134277
    4. 't' → logprob: -3.6215109825134277
    5. ''en' → logprob: -3.7465109825134277
    6. 'et' → logprob: -4.121510982513428
    7. 'r' → logprob: -4.121510982513428
    8. 'sert' → logprob: -4.746510982513428
    9. 'é' → logprob: -4.746510982513428
    10. 'ut' → logprob: -4.746510982513428

Token 45: ' sert' (ID: 52405)
  Prédit: 'sert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sert' → logprob: -0.09752880036830902
    2. 'f' → logprob: -2.8475286960601807
    3. 's' → logprob: -4.59752893447876
    4. 'ser' → logprob: -4.84752893447876
    5. 'serv' → logprob: -5.09752893447876
    6. 'sort' → logprob: -6.34752893447876
    7. 'serve' → logprob: -6.47252893447876
    8. 'sers' → logprob: -6.59752893447876
    9. 'm' → logprob: -7.47252893447876
    10. '' → logprob: -7.59752893447876

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5413194894790649
    2. '

' → logprob: -1.541319489479065
    3. '\n' → logprob: -2.1663193702697754
    4. '#' → logprob: -3.2913193702697754
    5. '\' → logprob: -3.6663193702697754
    6. '' → logprob: -4.666319370269775
    7. '
' → logprob: -5.041319370269775
    8. '```' → logprob: -5.791319370269775
    9. 'class' → logprob: -6.416319370269775
    10. 'def' → logprob: -6.416319370269775

Token 47: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.710534930229187
    2. '

' → logprob: -0.710534930229187
    3. 'def' → logprob: -4.960535049438477
    4. '
' → logprob: -6.085535049438477
    5. '' → logprob: -6.210535049438477
    6. '#' → logprob: -6.210535049438477
    7. '\n' → logprob: -6.460535049438477
    8. '\' → logprob: -7.585535049438477
    9. 'class' → logprob: -7.835535049438477
    10. '```' → logprob: -7.835535049438477

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03375174105167389
    2. '=' → logprob: -3.4087517261505127
    3. ' ' → logprob: -9.408751487731934
    4. '_' → logprob: -12.033751487731934
    5. ')' → logprob: -12.283751487731934
    6. '  ' → logprob: -12.658751487731934
    7. ' =
' → logprob: -12.783751487731934
    8. ' =)' → logprob: -13.158751487731934
    9. '.' → logprob: -13.658751487731934
    10. ',' → logprob: -13.908751487731934

Token 49: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47633373737335205
    2. '10' → logprob: -0.976333737373352
    3. '100' → logprob: -6.1013336181640625
    4. '1' → logprob: -12.101333618164062
    5. '998' → logprob: -12.226333618164062
    6. ' (' → logprob: -13.101333618164062
    7. ' ' → logprob: -15.226333618164062
    8. '0' → logprob: -15.726333618164062
    9. '(' → logprob: -15.851333618164062
    10. ' )' → logprob: -15.976333618164062

Token 50: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3544423381972592e-05
    2. '("' → logprob: -12.62501335144043
    3. ' (' → logprob: -12.62501335144043
    4. '('' → logprob: -12.75001335144043
    5. '1' → logprob: -13.12501335144043
    6. '(
' → logprob: -14.25001335144043
    7. '((' → logprob: -15.12501335144043
    8. '(pow' → logprob: -15.25001335144043
    9. '32' → logprob: -15.87501335144043
    10. '(os' → logprob: -16.00001335144043

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020695218816399574
    2. '(' → logprob: -3.895695209503174
    3. ' ' → logprob: -9.395695686340332
    4. ')' → logprob: -10.020695686340332
    5. '2' → logprob: -11.895695686340332
    6. '10' → logprob: -12.270695686340332
    7. '"' → logprob: -13.145695686340332
    8. '4' → logprob: -13.395695686340332
    9. '   ' → logprob: -13.645695686340332
    10. '9' → logprob: -13.645695686340332

Token 52: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0210347231477499
    2. '000' → logprob: -4.3960347175598145
    3. '0' → logprob: -4.7710347175598145
    4. '_' → logprob: -11.271035194396973
    5. '9' → logprob: -13.146035194396973
    6. '00' → logprob: -14.146035194396973
    7. '2' → logprob: -14.396035194396973
    8. '   ' → logprob: -15.396035194396973
    9. 'o' → logprob: -15.396035194396973
    10. '+' → logprob: -15.396035194396973

Token 53: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.9728669738397e-05
    2. '+' → logprob: -9.375100135803223
    3. '09' → logprob: -11.250100135803223
    4. ' ' → logprob: -13.750100135803223
    5. '10' → logprob: -15.125100135803223
    6. '```' → logprob: -15.750100135803223
    7. '6' → logprob: -16.750099182128906
    8. '18' → logprob: -17.000099182128906
    9. '8' → logprob: -17.125099182128906
    10. '   ' → logprob: -17.125099182128906

Token 54: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006548931705765426
    2. ')' → logprob: -8.250655174255371
    3. ' +' → logprob: -8.250655174255371
    4. ')+' → logprob: -9.125655174255371
    5. '7' → logprob: -10.875655174255371
    6. '+)' → logprob: -12.750655174255371
    7. '9' → logprob: -13.500655174255371
    8. ' )' → logprob: -15.375655174255371
    9. '＋' → logprob: -16.250654220581055
    10. '+
' → logprob: -16.500654220581055

Token 55: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.5570885807392187e-05
    2. '+' → logprob: -11.125015258789062
    3. '07' → logprob: -15.750015258789062
    4. '9' → logprob: -16.000015258789062
    5. '007' → logprob: -16.250015258789062
    6. ' ' → logprob: -16.500015258789062
    7. '87' → logprob: -17.250015258789062
    8. '67' → logprob: -17.625015258789062
    9. '```' → logprob: -17.750015258789062
    10. '' → logprob: -18.187515258789062

Token 56: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18751899898052216
    2. '

' → logprob: -1.9375189542770386
    3. '<|end|>' → logprob: -5.062519073486328
    4. '' → logprob: -5.187519073486328
    5. '\n' → logprob: -5.312519073486328
    6. '#' → logprob: -5.937519073486328
    7. '
' → logprob: -6.187519073486328
    8. ')' → logprob: -6.562519073486328
    9. ' 

' → logprob: -7.062519073486328
    10. '```' → logprob: -7.312519073486328

Token 57: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19426476955413818
    2. '

' → logprob: -1.8192647695541382
    3. '' → logprob: -5.694264888763428
    4. '
' → logprob: -6.069264888763428
    5. ' 

' → logprob: -6.319264888763428
    6. ')' → logprob: -6.444264888763428
    7. '#' → logprob: -6.694264888763428
    8. '<|end|>' → logprob: -6.944264888763428
    9. '\n' → logprob: -7.069264888763428
    10. ' ' → logprob: -7.069264888763428

Token 58: ' class' (ID: 744)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: 'iquement' (ID: 83934)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012075966224074364
    2. '<|end|>' → logprob: -5.387075901031494
    3. ' 
' → logprob: -6.137075901031494
    4. ':' → logprob: -6.762075901031494
    5. '
' → logprob: -7.137075901031494
    6. 'class' → logprob: -7.512075901031494
    7. ' class' → logprob: -7.512075901031494
    8. ' 

' → logprob: -7.887075901031494
    9. '' → logprob: -8.012076377868652
    10. '\' → logprob: -8.637076377868652

Token 60: ' modulo' (ID: 112372)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3998331129550934
    2. '

' → logprob: -1.149833083152771
    3. '
' → logprob: -5.0248332023620605
    4. '' → logprob: -5.7748332023620605
    5. ' 

' → logprob: -6.7748332023620605
    6. '\n' → logprob: -7.6498332023620605
    7. '

' → logprob: -8.024832725524902
    8. '


' → logprob: -8.274832725524902
    9. ' 
' → logprob: -8.774832725524902
    10. '```' → logprob: -9.399832725524902

Token 61: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06157432496547699
    2. '<|end|>' → logprob: -3.6865742206573486
    3. '

' → logprob: -4.311574459075928
    4. '\n' → logprob: -5.436574459075928
    5. '' → logprob: -5.436574459075928
    6. '#' → logprob: -5.686574459075928
    7. ' ' → logprob: -6.311574459075928
    8. ')' → logprob: -6.311574459075928
    9. '```' → logprob: -6.811574459075928
    10. ' 
' → logprob: -7.061574459075928

Token 62: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.13606175780296326
    2. '
' → logprob: -2.136061668395996
    3. '
' → logprob: -5.636061668395996
    4. 'def' → logprob: -6.261061668395996
    5. '' → logprob: -7.136061668395996
    6. '#' → logprob: -7.511061668395996
    7. '


' → logprob: -7.636061668395996
    8. ' 

' → logprob: -7.761061668395996
    9. '



' → logprob: -8.136061668395996
    10. '

' → logprob: -8.136061668395996

Token 63: ' je' (ID: 1264)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.154282808303833
    2. ' ' → logprob: -2.279282808303833
    3. ' def' → logprob: -3.779282808303833
    4. ' 

' → logprob: -5.154282569885254
    5. 'import' → logprob: -5.404282569885254
    6. '#' → logprob: -6.154282569885254
    7. 'class' → logprob: -6.279282569885254
    8. 'from' → logprob: -6.904282569885254
    9. ' class' → logprob: -8.029282569885254
    10. 'n' → logprob: -8.029282569885254

Token 64: ' trouve' (ID: 30913)
  Prédit: ' vais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vais' → logprob: -0.7872774004936218
    2. ' def' → logprob: -1.2872774600982666
    3. ' ' → logprob: -2.9122774600982666
    4. 'def' → logprob: -3.4122774600982666
    5. ' continue' → logprob: -3.4122774600982666
    6. ' n' → logprob: -3.5372774600982666
    7. ' pense' → logprob: -4.0372772216796875
    8. ' suis' → logprob: -4.0372772216796875
    9. ' prends' → logprob: -4.1622772216796875
    10. ' veux' → logprob: -4.2872772216796875

Token 65: ' ça' (ID: 13590)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8101184368133545
    2. '_' → logprob: -1.6851184368133545
    3. ' le' → logprob: -1.6851184368133545
    4. ' l' → logprob: -2.8101184368133545
    5. '_le' → logprob: -3.4351184368133545
    6. 's' → logprob: -4.310118675231934
    7. '_l' → logprob: -4.310118675231934
    8. '_la' → logprob: -4.435118675231934
    9. 'def' → logprob: -4.560118675231934
    10. ' les' → logprob: -4.560118675231934

Token 66: ' plus' (ID: 2932)
  Prédit: ' bien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bien' → logprob: -1.2895363569259644
    2. ' mieux' → logprob: -1.4145363569259644
    3. ' ' → logprob: -3.164536476135254
    4. ' m' → logprob: -3.164536476135254
    5. ' le' → logprob: -3.539536476135254
    6. ' la' → logprob: -3.539536476135254
    7. ' sympa' → logprob: -3.664536476135254
    8. 'def' → logprob: -3.914536476135254
    9. ' plus' → logprob: -3.914536476135254
    10. ' pas' → logprob: -4.039536476135254

Token 67: ' pratique' (ID: 42780)
  Prédit: ' simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' simple' → logprob: -0.6041095852851868
    2. 'simple' → logprob: -1.604109525680542
    3. 'pr' → logprob: -3.354109525680542
    4. 'pro' → logprob: -3.604109525680542
    5. ' clair' → logprob: -3.604109525680542
    6. ' facile' → logprob: -3.729109525680542
    7. ' pratique' → logprob: -3.854109525680542
    8. 'fac' → logprob: -4.104109764099121
    9. 'lis' → logprob: -4.104109764099121
    10. ' lis' → logprob: -4.229109764099121

Token 68: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5603621006011963
    2. 'def' → logprob: -1.3103621006011963
    3. ' d' → logprob: -2.9353621006011963
    4. ' def' → logprob: -3.1853621006011963
    5. ' ' → logprob: -3.3103621006011963
    6. ',' → logprob: -3.9353621006011963
    7. 'de' → logprob: -5.810361862182617
    8. ' que' → logprob: -7.185361862182617
    9. ' for' → logprob: -7.310361862182617
    10. ':' → logprob: -7.310361862182617

Token 69: ' racc' (ID: 146476)
  Prédit: ' travailler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' travailler' → logprob: -1.4685444831848145
    2. ' coder' → logprob: -1.8435444831848145
    3. ' lire' → logprob: -2.4685444831848145
    4. ' faire' → logprob: -2.4685444831848145
    5. 'def' → logprob: -2.9685444831848145
    6. ' continuer' → logprob: -3.3435444831848145
    7. ' mettre' → logprob: -3.4685444831848145
    8. ' utiliser' → logprob: -3.4685444831848145
    9. ' définir' → logprob: -3.4685444831848145
    10. ' écrire' → logprob: -3.7185444831848145

Token 70: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0006441685254685581
    2. 'ourt' → logprob: -8.750643730163574
    3. 'o' → logprob: -9.125643730163574
    4. 'Our' → logprob: -9.625643730163574
    5. 'ou' → logprob: -9.750643730163574
    6. '-' → logprob: -10.000643730163574
    7. '_' → logprob: -10.500643730163574
    8. ' our' → logprob: -10.750643730163574
    9. '#' → logprob: -10.750643730163574
    10. '```' → logprob: -11.000643730163574

Token 71: 'cir' (ID: 31224)
  Prédit: 'cir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.45569100975990295
    2. 'c' → logprob: -1.0806909799575806
    3. '_c' → logprob: -4.330690860748291
    4. 'ci' → logprob: -5.330690860748291
    5. '-c' → logprob: -5.455690860748291
    6. '	c' → logprob: -6.580690860748291
    7. 'cí' → logprob: -7.455690860748291
    8. 'cit' → logprob: -7.705690860748291
    9. 'cis' → logprob: -7.830690860748291
    10. 'cı' → logprob: -7.830690860748291

Token 72: ' l' (ID: 305)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3740086257457733
    2. ' sys' → logprob: -2.4990086555480957
    3. 'les' → logprob: -2.7490086555480957
    4. 'range' → logprob: -3.7490086555480957
    5. 'sys' → logprob: -3.7490086555480957
    6. 'import' → logprob: -3.8740086555480957
    7. ' la' → logprob: -3.9990086555480957
    8. ' l' → logprob: -4.249008655548096
    9. ' range' → logprob: -4.374008655548096
    10. 'la' → logprob: -4.749008655548096

Token 73: ''' (ID: 6)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.09104202687740326
    2. 'e' → logprob: -3.0910420417785645
    3. 'a' → logprob: -3.3410420417785645
    4. ''' → logprob: -6.0910420417785645
    5. ''es' → logprob: -6.7160420417785645
    6. ''import' → logprob: -7.8410420417785645
    7. ''a' → logprob: -8.341041564941406
    8. ''en' → logprob: -8.591041564941406
    9. '```' → logprob: -8.716041564941406
    10. ''e' → logprob: -8.716041564941406

Token 74: 'input' (ID: 2586)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5608643293380737
    2. 'np' → logprob: -1.9358643293380737
    3. 'range' → logprob: -2.6858644485473633
    4. 'input' → logprob: -3.0608644485473633
    5. 'import' → logprob: -3.3108644485473633
    6. 'nom' → logprob: -3.4358644485473633
    7. 'sys' → logprob: -3.6858644485473633
    8. 'i' → logprob: -4.310864448547363
    9. 'im' → logprob: -4.810864448547363
    10. 'r' → logprob: -4.935864448547363

Token 75: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1534725427627563
    2. '()' → logprob: -1.7784725427627563
    3. '=' → logprob: -2.028472423553467
    4. '_' → logprob: -2.403472423553467
    5. 'def' → logprob: -2.653472423553467
    6. 'import' → logprob: -2.778472423553467
    7. 'input' → logprob: -2.778472423553467
    8. '_input' → logprob: -3.153472423553467
    9. 's' → logprob: -3.778472423553467
    10. '(' → logprob: -4.528472423553467

Token 76: 'input' (ID: 2586)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08295582234859467
    2. 'input' → logprob: -2.957955837249756
    3. '=' → logprob: -4.207955837249756
    4. '_' → logprob: -5.582955837249756
    5. '_input' → logprob: -5.707955837249756
    6. '=input' → logprob: -5.832955837249756
    7. ' ' → logprob: -7.082955837249756
    8. 'import' → logprob: -8.457955360412598
    9. 'def' → logprob: -8.457955360412598
    10. '(input' → logprob: -8.582955360412598

Token 77: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6128810048103333
    2. '(' → logprob: -1.3628809452056885
    3. ' =' → logprob: -1.8628809452056885
    4. '=' → logprob: -3.7378809452056885
    5. '<|end|>' → logprob: -4.737881183624268
    6. '.' → logprob: -5.362881183624268
    7. '```' → logprob: -6.112881183624268
    8. '().' → logprob: -6.612881183624268
    9. '<|end|>' → logprob: -6.612881183624268
    10. '.readline' → logprob: -7.487881183624268

Token 78: ' lambda' (ID: 27871)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.04952184110879898
    2. ' input' → logprob: -3.4245219230651855
    3. 'sys' → logprob: -4.6745219230651855
    4. 'input' → logprob: -5.6745219230651855
    5. ' lambda' → logprob: -5.9245219230651855
    6. 'lambda' → logprob: -8.924521446228027
    7. ' raw' → logprob: -9.424521446228027
    8. '=sys' → logprob: -9.924521446228027
    9. ' iter' → logprob: -10.549521446228027
    10. '	sys' → logprob: -11.799521446228027

Token 79: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09360584616661072
    2. '():' → logprob: -2.8436057567596436
    3. '()' → logprob: -3.5936057567596436
    4. '().' → logprob: -5.718605995178223
    5. ' :' → logprob: -8.468605995178223
    6. '()>' → logprob: -10.843605995178223
    7. '0' → logprob: -11.218605995178223
    8. ':list' → logprob: -11.593605995178223
    9. ':void' → logprob: -11.718605995178223
    10. ' ' → logprob: -11.718605995178223

Token 80: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4744437336921692
    2. 'sys' → logprob: -0.9744437336921692
    3. 'input' → logprob: -8.099443435668945
    4. ' input' → logprob: -9.724443435668945
    5. '=sys' → logprob: -13.599443435668945
    6. '(sys' → logprob: -14.599443435668945
    7. '	sys' → logprob: -14.724443435668945
    8. 'stdin' → logprob: -14.849443435668945
    9. 'raw' → logprob: -15.599443435668945
    10. 'str' → logprob: -15.849443435668945

Token 81: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.9888433093437925e-05
    2. '.stdout' → logprob: -10.375040054321289
    3. '.' → logprob: -12.000040054321289
    4. '.readline' → logprob: -13.750040054321289
    5. '.std' → logprob: -14.125040054321289
    6. 'stdin' → logprob: -14.750040054321289
    7. '.argv' → logprob: -16.25004005432129
    8. '.stderr' → logprob: -16.50004005432129
    9. ' .' → logprob: -17.12504005432129
    10. '.input' → logprob: -17.12504005432129

Token 82: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.673547563375905e-05
    2. '.' → logprob: -9.750086784362793
    3. '.read' → logprob: -10.500086784362793
    4. '.buffer' → logprob: -14.250086784362793
    5. '.readlines' → logprob: -15.750086784362793
    6. 'read' → logprob: -16.625085830688477
    7. ' readline' → logprob: -16.750085830688477
    8. 'buffer' → logprob: -18.125085830688477
    9. '.re' → logprob: -20.250085830688477
    10. ' .' → logprob: -20.875085830688477

Token 83: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002476016292348504
    2. '()' → logprob: -6.002476215362549
    3. ' ().' → logprob: -15.25247573852539
    4. '(' → logprob: -16.37747573852539
    5. '()?.' → logprob: -18.62747573852539
    6. '[:-' → logprob: -19.25247573852539
    7. '()\' → logprob: -19.62747573852539
    8. '().__' → logprob: -19.62747573852539
    9. '.rstrip' → logprob: -19.75247573852539
    10. ' ()' → logprob: -19.87747573852539

Token 84: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07889287173748016
    2. 'rstrip' → logprob: -2.578892946243286
    3. ' strip' → logprob: -12.828892707824707
    4. '_strip' → logprob: -15.703892707824707
    5. 'r' → logprob: -16.078893661499023
    6. 'rst' → logprob: -16.953893661499023
    7. '.rstrip' → logprob: -17.453893661499023
    8. '(strip' → logprob: -17.453893661499023
    9. '-strip' → logprob: -18.328893661499023
    10. 'decode' → logprob: -18.578893661499023

Token 85: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11694943159818649
    2. '(' → logprob: -2.9919493198394775
    3. '()
' → logprob: -3.7419493198394775
    4. '
' → logprob: -4.241949558258057
    5. '(
' → logprob: -4.991949558258057
    6. ')' → logprob: -4.991949558258057
    7. '\n' → logprob: -5.616949558258057
    8. '<|end|>' → logprob: -6.741949558258057
    9. '()

' → logprob: -6.991949558258057
    10. '#' → logprob: -7.241949558258057

Token 86: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3218464255332947
    2. 'n' → logprob: -1.4468464851379395
    3. '#' → logprob: -4.0718464851379395
    4. 'a' → logprob: -5.1968464851379395
    5. 'class' → logprob: -5.3218464851379395
    6. '
' → logprob: -5.3218464851379395
    7. '\n' → logprob: -5.6968464851379395
    8. '\' → logprob: -5.9468464851379395
    9. '(n' → logprob: -8.196846008300781
    10. 's' → logprob: -8.446846008300781

Token 87: ' Fon' (ID: 83815)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06247858703136444
    2. 'n' → logprob: -3.062478542327881
    3. '#' → logprob: -4.437478542327881
    4. 'N' → logprob: -7.437478542327881
    5. 'class' → logprob: -7.437478542327881
    6. 'from' → logprob: -8.062479019165039
    7. ' n' → logprob: -9.312479019165039
    8. ' def' → logprob: -9.437479019165039
    9. 'd' → logprob: -9.562479019165039
    10. 'T' → logprob: -10.437479019165039

Token 88: 'ctions' (ID: 2620)
  Prédit: 'ction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ction' → logprob: -0.12402033060789108
    2. 'ctions' → logprob: -2.6240203380584717
    3. 'ct' → logprob: -3.1240203380584717
    4. 'c' → logprob: -8.99902057647705
    5. '```' → logprob: -11.12402057647705
    6. 'cion' → logprob: -13.37402057647705
    7. 'tion' → logprob: -13.74902057647705
    8. 'cture' → logprob: -13.99902057647705
    9. 't' → logprob: -14.12402057647705
    10. '#' → logprob: -14.37402057647705

Token 89: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015073359943926334
    2. ' def' → logprob: -5.515073299407959
    3. ' de' → logprob: -5.640073299407959
    4. ' ' → logprob: -6.265073299407959
    5. 'de' → logprob: -6.515073299407959
    6. ':' → logprob: -6.640073299407959
    7. '_' → logprob: -7.140073299407959
    8. 's' → logprob: -7.390073299407959
    9. '
' → logprob: -8.140073776245117
    10. ':def' → logprob: -8.515073776245117

Token 90: ' afficher' (ID: 146524)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9296572804450989
    2. ' lire' → logprob: -2.054657220840454
    3. ' calcul' → logprob: -2.179657220840454
    4. ' le' → logprob: -2.554657220840454
    5. ' gérer' → logprob: -2.554657220840454
    6. 'l' → logprob: -3.179657220840454
    7. ' les' → logprob: -3.679657220840454
    8. ' l' → logprob: -3.679657220840454
    9. 'la' → logprob: -4.054657459259033
    10. 'calcul' → logprob: -4.179657459259033

Token 91: ' Yes' (ID: 11377)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007582136429846287
    2. '(' → logprob: -5.257582187652588
    3. ' def' → logprob: -6.382582187652588
    4. '(
' → logprob: -8.50758171081543
    5. ',' → logprob: -9.00758171081543
    6. ':' → logprob: -9.38258171081543
    7. 's' → logprob: -9.75758171081543
    8. 'de' → logprob: -10.50758171081543
    9. ')' → logprob: -10.50758171081543
    10. 'print' → logprob: -10.75758171081543

Token 92: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.18919941782951355
    2. 'No' → logprob: -2.439199447631836
    3. ',' → logprob: -3.564199447631836
    4. ' /' → logprob: -3.814199447631836
    5. ' ou' → logprob: -4.064199447631836
    6. ' or' → logprob: -5.689199447631836
    7. 'Yes' → logprob: -6.064199447631836
    8. '\n' → logprob: -6.439199447631836
    9. ' ' → logprob: -6.689199447631836
    10. '()' → logprob: -6.689199447631836

Token 93: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0015239100903272629
    2. ' No' → logprob: -6.501523971557617
    3. 'Non' → logprob: -11.376523971557617
    4. 'no' → logprob: -12.251523971557617
    5. 'NO' → logprob: -12.626523971557617
    6. ' no' → logprob: -13.626523971557617
    7. ' Non' → logprob: -15.501523971557617
    8. '_no' → logprob: -15.501523971557617
    9. ' ' → logprob: -16.501523971557617
    10. '_No' → logprob: -16.626523971557617

Token 94: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018243711441755295
    2. ':' → logprob: -4.268243789672852
    3. ',' → logprob: -6.518243789672852
    4. '
' → logprob: -6.893243789672852
    5. '```' → logprob: -7.518243789672852
    6. ' def' → logprob: -8.518243789672852
    7. 'print' → logprob: -9.268243789672852
    8. ':
' → logprob: -9.393243789672852
    9. 's' → logprob: -9.393243789672852
    10. '():' → logprob: -9.518243789672852

Token 95: ' un' (ID: 537)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11744275689125061
    2. 'True' → logprob: -2.9924428462982178
    3. ' True' → logprob: -4.742442607879639
    4. 'oui' → logprob: -4.742442607879639
    5. 'print' → logprob: -4.992442607879639
    6. ' def' → logprob: -5.242442607879639
    7. 'et' → logprob: -5.617442607879639
    8. 'ou' → logprob: -5.992442607879639
    9. ' ou' → logprob: -5.992442607879639
    10. '#' → logprob: -6.242442607879639

Token 96: ' peu' (ID: 9235)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12453494220972061
    2. ' peu' → logprob: -2.499534845352173
    3. 'def' → logprob: -3.999534845352173
    4. 'iquement' → logprob: -5.249535083770752
    5. 'print' → logprob: -5.499535083770752
    6. 'pe' → logprob: -6.374535083770752
    7. ' peut' → logprob: -7.624535083770752
    8. 'ité' → logprob: -7.624535083770752
    9. 'itaire' → logprob: -7.624535083770752
    10. 'o' → logprob: -7.749535083770752

Token 97: ' inutile' (ID: 157748)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8064852356910706
    2. 'plus' → logprob: -2.431485176086426
    3. 'plement' → logprob: -2.931485176086426
    4. ' plus' → logprob: -3.056485176086426
    5. ' de' → logprob: -3.431485176086426
    6. '_' → logprob: -3.431485176086426
    7. '```' → logprob: -3.806485176086426
    8. 'à' → logprob: -3.931485176086426
    9. ' la' → logprob: -3.931485176086426
    10. ' partout' → logprob: -4.056485176086426

Token 98: ' mais' (ID: 2899)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05919942632317543
    2. '
' → logprob: -3.434199333190918
    3. 's' → logprob: -3.934199333190918
    4. '

' → logprob: -6.309199333190918
    5. ',' → logprob: -6.434199333190918
    6. ' but' → logprob: -7.059199333190918
    7. ' def' → logprob: -7.309199333190918
    8. '  
' → logprob: -9.059199333190918
    9. ',
' → logprob: -9.684199333190918
    10. '\' → logprob: -9.684199333190918

Token 99: ' bon' (ID: 4846)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -1.0364381074905396
    2. 'ça' → logprob: -1.5364381074905396
    3. ' pratique' → logprob: -1.7864381074905396
    4. 'c' → logprob: -2.53643798828125
    5. ' pratiques' → logprob: -3.41143798828125
    6. 'sym' → logprob: -3.41143798828125
    7. 'sou' → logprob: -4.03643798828125
    8. ' parfois' → logprob: -4.41143798828125
    9. 'utile' → logprob: -4.41143798828125
    10. '#' → logprob: -4.78643798828125

Token 100: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00527016120031476
    2. '
' → logprob: -5.255270004272461
    3. ' def' → logprob: -11.880270004272461
    4. '```' → logprob: -11.880270004272461
    5. 's' → logprob: -12.005270004272461
    6. '

' → logprob: -12.255270004272461
    7. 'yes' → logprob: -12.880270004272461
    8. 'ndef' → logprob: -13.130270004272461
    9. 'Yes' → logprob: -13.380270004272461
    10. '  
' → logprob: -13.630270004272461

Token 101: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015264409012161195
    2. '
' → logprob: -8.875152587890625
    3. ' def' → logprob: -12.000152587890625
    4. 'Yes' → logprob: -13.125152587890625
    5. 'yes' → logprob: -13.625152587890625
    6. 'print' → logprob: -13.750152587890625
    7. '  
' → logprob: -14.625152587890625
    8. 'YES' → logprob: -14.875152587890625
    9. 'Y' → logprob: -15.125152587890625
    10. '

' → logprob: -15.125152587890625

Token 102: ' Yes' (ID: 11377)
  Prédit: ' yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yes' → logprob: -0.8936827182769775
    2. ' print' → logprob: -1.1436827182769775
    3. ' yn' → logprob: -1.8936827182769775
    4. 'yes' → logprob: -3.0186827182769775
    5. 'print' → logprob: -3.3936827182769775
    6. ' y' → logprob: -4.393682479858398
    7. 'p' → logprob: -4.768682479858398
    8. ' p' → logprob: -5.268682479858398
    9. 'yn' → logprob: -6.143682479858398
    10. ' oui' → logprob: -6.393682479858398

Token 103: 'No' (ID: 3160)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003693013568408787
    2. '():
' → logprob: -8.37536907196045
    3. '()' → logprob: -9.00036907196045
    4. ' ():' → logprob: -11.12536907196045
    5. ' ()' → logprob: -14.75036907196045
    6. '():
' → logprob: -15.75036907196045
    7. '():

' → logprob: -17.375370025634766
    8. '(' → logprob: -17.750370025634766
    9. '()`' → logprob: -18.875370025634766
    10. '()>' → logprob: -19.750370025634766

Token 104: '(b' (ID: 3229)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2757900655269623
    2. '(' → logprob: -2.025789976119995
    3. '(b' → logprob: -3.150789976119995
    4. '(condition' → logprob: -3.900789976119995
    5. '(answer' → logprob: -4.775790214538574
    6. '(ans' → logprob: -5.150790214538574
    7. '(val' → logprob: -5.525790214538574
    8. '(s' → logprob: -5.775790214538574
    9. '(y' → logprob: -5.900790214538574
    10. '(flag' → logprob: -6.025790214538574

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006872017867863178
    2. ')' → logprob: -5.756872177124023
    3. '):
' → logprob: -6.381872177124023
    4. ':' → logprob: -7.006872177124023
    5. ' ):' → logprob: -7.631872177124023
    6. 'oolean' → logprob: -8.256872177124023
    7. '   ' → logprob: -9.381872177124023
    8. '(' → logprob: -9.756872177124023
    9. 'ool' → logprob: -10.131872177124023
    10. ' ' → logprob: -10.756872177124023

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01882799156010151
    2. ':' → logprob: -4.26882791519165
    3. ' return' → logprob: -5.64382791519165
    4. ':return' → logprob: -7.64382791519165
    5. ':
' → logprob: -8.268828392028809
    6. ' if' → logprob: -9.143828392028809
    7. '	return' → logprob: -9.268828392028809
    8. ' print' → logprob: -9.768828392028809
    9. 'return' → logprob: -10.518828392028809
    10. ' ' → logprob: -10.768828392028809

Token 107: ' if' (ID: 538)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.44021010398864746
    2. 'print' → logprob: -1.9402101039886475
    3. ' return' → logprob: -2.1902101039886475
    4. '   ' → logprob: -2.8152101039886475
    5. ' if' → logprob: -3.6902101039886475
    6. 'return' → logprob: -4.440210342407227
    7. 'if' (adapté à ' if') → logprob: -5.565210342407227
    8. '	print' → logprob: -10.440210342407227
    9. '	return' → logprob: -11.690210342407227
    10. ' ' → logprob: -13.065210342407227

Token 108: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.25193148851394653
    2. 'b' → logprob: -1.5019314289093018
    3. ' ' → logprob: -13.126931190490723
    4. ' ' → logprob: -15.876931190490723
    5. '(b' → logprob: -16.00193214416504
    6. '	b' → logprob: -16.00193214416504
    7. ' б' → logprob: -17.50193214416504
    8. ' not' → logprob: -17.50193214416504
    9. '   ' → logprob: -18.12693214416504
    10. 'not' → logprob: -18.25193214416504

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038586699520237744
    2. ':
' → logprob: -8.250386238098145
    3. ' :' → logprob: -9.000386238098145
    4. '==' → logprob: -14.750386238098145
    5. ':return' → logprob: -15.250386238098145
    6. '():' → logprob: -15.750386238098145
    7. ' ==' → logprob: -16.375385284423828
    8. ':**' → logprob: -16.750385284423828
    9. ':
' → logprob: -16.875385284423828
    10. ' else' → logprob: -17.000385284423828

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017517358355689794
    2. ':' → logprob: -9.875175476074219
    3. ' print' → logprob: -9.875175476074219
    4. ' return' → logprob: -10.000175476074219
    5. '   ' → logprob: -11.875175476074219
    6. 'return' → logprob: -11.875175476074219
    7. 'print' → logprob: -12.000175476074219
    8. ' :' → logprob: -13.000175476074219
    9. '      ' → logprob: -13.750175476074219
    10. ':return' → logprob: -14.250175476074219

Token 111: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07944829016923904
    2. ' print' → logprob: -2.5794482231140137
    3. '   ' → logprob: -7.579448223114014
    4. 'return' → logprob: -10.204448699951172
    5. '       ' → logprob: -12.204448699951172
    6. ' return' → logprob: -12.579448699951172
    7. '	print' → logprob: -13.204448699951172
    8. '    ' → logprob: -16.579448699951172
    9. 'pr' → logprob: -17.079448699951172
    10. 'prin' → logprob: -17.579448699951172

Token 112: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0006101056351326406
    2. '(' → logprob: -7.750609874725342
    3. '('' → logprob: -8.6256103515625
    4. '(
' → logprob: -16.8756103515625
    5. ' ("' → logprob: -17.0006103515625
    6. '"' → logprob: -18.6256103515625
    7. '()' → logprob: -19.3756103515625
    8. '(("' → logprob: -20.0006103515625
    9. '(

' → logprob: -20.2506103515625
    10. '("""' → logprob: -20.5006103515625

Token 113: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0019432762637734413
    2. 'YES' → logprob: -6.251943111419678
    3. 'Oui' → logprob: -11.376943588256836
    4. 'True' → logprob: -13.626943588256836
    5. ' Yes' → logprob: -13.751943588256836
    6. '"' → logprob: -14.251943588256836
    7. ''' → logprob: -15.376943588256836
    8. 'Yeah' → logprob: -17.001943588256836
    9. ' YES' → logprob: -18.376943588256836
    10. 'O' → logprob: -18.376943588256836

Token 114: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5760384798049927
    2. '')
' → logprob: -0.8260384798049927
    3. '')
' → logprob: -9.951038360595703
    4. '   ' → logprob: -10.701038360595703
    5. ')' → logprob: -11.076038360595703
    6. ')
' → logprob: -12.826038360595703
    7. '')

' → logprob: -13.326038360595703
    8. ' ')
' → logprob: -13.451038360595703
    9. '');' → logprob: -13.576038360595703
    10. ''' → logprob: -13.576038360595703

Token 115: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0068535469472408295
    2. ' else' → logprob: -5.1318535804748535
    3. 'else' → logprob: -7.0068535804748535
    4. '	else' → logprob: -11.131853103637695
    5. ' ' → logprob: -13.381853103637695
    6. '       ' → logprob: -13.756853103637695
    7. '  ' → logprob: -14.006853103637695
    8. '<|end|>' → logprob: -15.006853103637695
    9. 'def' → logprob: -16.131853103637695
    10. 'e' → logprob: -16.756853103637695

Token 116: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004239973612129688
    2. 'else' → logprob: -6.254240036010742
    3. ' else' → logprob: -6.629240036010742
    4. '       ' → logprob: -7.129240036010742
    5. 'return' (adapté à ' return') → logprob: -8.754240036010742
    6. ' return' → logprob: -10.629240036010742
    7. ' ' → logprob: -13.754240036010742
    8. '	else' → logprob: -13.879240036010742
    9. 'def' → logprob: -15.254240036010742
    10. 'eturn' → logprob: -15.254240036010742

Token 117: ' True' (ID: 6432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04019094258546829
    2. 'False' → logprob: -3.2901909351348877
    3. ' False' → logprob: -6.415191173553467
    4. 'else' → logprob: -7.790191173553467
    5. '
' → logprob: -10.040190696716309
    6. ' else' → logprob: -10.915190696716309
    7. 'None' → logprob: -11.040190696716309
    8. '    
' → logprob: -12.290190696716309
    9. ' None' → logprob: -12.415190696716309
    10. '(False' → logprob: -12.665190696716309

Token 118: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.416665640543215e-05
    2. ' else' → logprob: -10.87503433227539
    3. 'else' → logprob: -11.62503433227539
    4. '
' → logprob: -12.37503433227539
    5. '    
' → logprob: -13.50003433227539
    6. '	else' → logprob: -16.00003433227539
    7. 'def' → logprob: -16.75003433227539
    8. '       ' → logprob: -17.00003433227539
    9. 'return' → logprob: -17.00003433227539
    10. '   ' → logprob: -17.00003433227539

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.943783253314905e-05
    2. 'else' → logprob: -10.000059127807617
    3. ' else' → logprob: -11.750059127807617
    4. '
' → logprob: -12.625059127807617
    5. 'def' → logprob: -13.625059127807617
    6. '    
' → logprob: -13.625059127807617
    7. '  ' → logprob: -15.625059127807617
    8. 'False' → logprob: -17.375059127807617
    9. '    ' → logprob: -17.625059127807617
    10. '  
' → logprob: -17.625059127807617

Token 120: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13777776062488556
    2. '   ' → logprob: -2.262777805328369
    3. 'print' → logprob: -4.137777805328369
    4. ' else' → logprob: -4.762777805328369
    5. ' print' → logprob: -9.012777328491211
    6. ' ' → logprob: -11.387777328491211
    7. 'def' → logprob: -13.137777328491211
    8. '  ' → logprob: -13.137777328491211
    9. 'False' → logprob: -13.137777328491211
    10. '
' → logprob: -13.512777328491211

Token 121: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38979005813598633
    2. ':
' → logprob: -1.7647900581359863
    3. ':' → logprob: -1.8897900581359863
    4. '   ' → logprob: -7.889790058135986
    5. ' :
' → logprob: -9.639789581298828
    6. ' :' → logprob: -10.764789581298828
    7. ':
' → logprob: -12.639789581298828
    8. ':

' → logprob: -13.264789581298828
    9. '    ' → logprob: -13.514789581298828
    10. '      ' → logprob: -13.639789581298828

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06793860346078873
    2. '   ' → logprob: -3.0679385662078857
    3. 'print' → logprob: -4.067938804626465
    4. ' print' → logprob: -6.192938804626465
    5. 'return' → logprob: -13.442938804626465
    6. '	print' → logprob: -13.442938804626465
    7. '     ' → logprob: -13.567938804626465
    8. '    ' → logprob: -13.817938804626465
    9. '      ' → logprob: -14.567938804626465
    10. '  ' → logprob: -14.692938804626465

Token 123: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.051043856889009476
    2. ' print' → logprob: -3.301043748855591
    3. '   ' → logprob: -4.92604398727417
    4. '       ' → logprob: -5.17604398727417
    5. '	print' → logprob: -11.926043510437012
    6. '
' → logprob: -13.301043510437012
    7. ' ' → logprob: -13.676043510437012
    8. '  ' → logprob: -13.801043510437012
    9. '     ' → logprob: -14.551043510437012
    10. '    ' → logprob: -14.926043510437012

Token 124: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.7835754988482222e-05
    2. '(' → logprob: -11.000018119812012
    3. '("' → logprob: -14.375018119812012
    4. '(No' → logprob: -15.375018119812012
    5. '(
' → logprob: -16.375017166137695
    6. ''' → logprob: -16.500017166137695
    7. '(False' → logprob: -17.500017166137695
    8. '(None' → logprob: -18.625017166137695
    9. '(Not' → logprob: -18.750017166137695
    10. ' ('' → logprob: -19.000017166137695

Token 125: 'No' (ID: 3160)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38687989115715027
    2. 'No' → logprob: -1.1368799209594727
    3. '"No' → logprob: -11.761879920959473
    4. ' No' → logprob: -14.636879920959473
    5. ''N' → logprob: -16.011878967285156
    6. ' ' → logprob: -16.636878967285156
    7. '`' → logprob: -16.761878967285156
    8. '   ' → logprob: -16.761878967285156
    9. '('' → logprob: -16.886878967285156
    10. '(No' → logprob: -17.011878967285156

Token 126: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2519799768924713
    2. '')
' → logprob: -1.501979947090149
    3. ')' → logprob: -10.25197982788086
    4. '')
' → logprob: -11.50197982788086
    5. ')
' → logprob: -13.00197982788086
    6. ''' → logprob: -13.50197982788086
    7. '')

' → logprob: -14.50197982788086
    8. '('' → logprob: -14.75197982788086
    9. '()' → logprob: -15.37697982788086
    10. '")' → logprob: -15.50197982788086

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13161058723926544
    2. '   ' → logprob: -2.256610631942749
    3. ' return' → logprob: -4.75661039352417
    4. '
' → logprob: -5.00661039352417
    5. 'return' → logprob: -6.00661039352417
    6. '	return' → logprob: -8.006610870361328
    7. '    
' → logprob: -9.006610870361328
    8. ' ' → logprob: -9.756610870361328
    9. '    ' → logprob: -9.881610870361328
    10. '        ' → logprob: -10.506610870361328

Token 128: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003344063414260745
    2. ' return' → logprob: -5.7533440589904785
    3. 'False' → logprob: -9.003344535827637
    4. '       ' → logprob: -10.128344535827637
    5. '   ' → logprob: -12.753344535827637
    6. '	return' → logprob: -15.378344535827637
    7. ' False' → logprob: -15.378344535827637
    8. ':return' → logprob: -16.62834358215332
    9. 'Return' → logprob: -17.12834358215332
    10. 'false' → logprob: -17.87834358215332

Token 129: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.306760805164231e-05
    2. ' False' → logprob: -11.25001335144043
    3. 'None' → logprob: -18.00001335144043
    4. '(False' → logprob: -18.50001335144043
    5. '=False' → logprob: -22.87501335144043
    6. 'Falsy' → logprob: -23.75001335144043
    7. 'Fal' → logprob: -24.50001335144043
    8. 'FALSE' → logprob: -24.50001335144043
    9. 'false' → logprob: -24.62501335144043
    10. 'True' → logprob: -24.75001335144043

Token 130: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008829060941934586
    2. '#' → logprob: -4.758829116821289
    3. '
' → logprob: -8.508829116821289
    4. 'from' → logprob: -12.883829116821289
    5. ' def' → logprob: -13.008829116821289
    6. '  
' → logprob: -13.508829116821289
    7. '\' → logprob: -13.633829116821289
    8. '```' → logprob: -14.008829116821289
    9. 'import' → logprob: -14.258829116821289
    10. '

' → logprob: -14.383829116821289

Token 132: ' YES' (ID: 32968)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3777221739292145
    2. 'No' → logprob: -1.627722144126892
    3. ' No' → logprob: -2.6277222633361816
    4. 'main' → logprob: -3.5027222633361816
    5. ' no' → logprob: -5.502722263336182
    6. ' solve' → logprob: -5.752722263336182
    7. 'solve' → logprob: -6.127722263336182
    8. ' dfs' → logprob: -7.002722263336182
    9. ' read' → logprob: -7.127722263336182
    10. ' solution' → logprob: -7.377722263336182

Token 133: 'NO' (ID: 14695)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.19592957198619843
    2. '(b' → logprob: -1.8209295272827148
    3. '():
' → logprob: -4.320929527282715
    4. 'No' → logprob: -6.820929527282715
    5. 'NO' → logprob: -7.445929527282715
    6. '(' → logprob: -7.570929527282715
    7. '()' → logprob: -7.570929527282715
    8. '():

' → logprob: -11.070929527282715
    9. 'N' → logprob: -11.195929527282715
    10. '():
' → logprob: -11.820929527282715

Token 134: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -4.060365608893335e-05
    2. '(' → logprob: -10.125041007995605
    3. 'b' → logprob: -15.375041007995605
    4. ' (' → logprob: -16.37504005432129
    5. 'def' → logprob: -17.00004005432129
    6. '(B' → logprob: -17.62504005432129
    7. '(s' → logprob: -17.62504005432129
    8. ' ' → logprob: -17.75004005432129
    9. '(bool' → logprob: -18.00004005432129
    10. '(def' → logprob: -18.00004005432129

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029777338728308678
    2. '):
' → logprob: -3.5297772884368896
    3. ')' → logprob: -10.904777526855469
    4. '):
' → logprob: -12.279777526855469
    5. ':' → logprob: -12.529777526855469
    6. '):

' → logprob: -15.529777526855469
    7. ' ):' → logprob: -16.52977752685547
    8. '   ' → logprob: -17.27977752685547
    9. '():' → logprob: -18.27977752685547
    10. ':
' → logprob: -18.52977752685547

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06176464259624481
    2. ':' → logprob: -3.061764717102051
    3. '(b' → logprob: -4.686764717102051
    4. ':
' → logprob: -5.686764717102051
    5. '):' → logprob: -8.68676471710205
    6. '(' → logprob: -8.68676471710205
    7. ')' → logprob: -10.56176471710205
    8. 'if' → logprob: -10.68676471710205
    9. '):
' → logprob: -10.93676471710205
    10. '  ' → logprob: -11.06176471710205

Token 137: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37959572672843933
    2. 'if' (adapté à ' if') → logprob: -1.2545957565307617
    3. ' if' → logprob: -3.5045957565307617
    4. 'print' → logprob: -7.754595756530762
    5. '
' → logprob: -9.254595756530762
    6. ' print' → logprob: -10.629595756530762
    7. '    
' → logprob: -11.129595756530762
    8. ' ' → logprob: -11.379595756530762
    9. '(' → logprob: -12.004595756530762
    10. 'def' → logprob: -12.129595756530762

Token 138: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04858805239200592
    2. ' b' → logprob: -3.0485880374908447
    3. ' not' → logprob: -15.298587799072266
    4. 'not' → logprob: -15.298587799072266
    5. ' ' → logprob: -16.173587799072266
    6. '   ' → logprob: -17.173587799072266
    7. '	b' → logprob: -18.173587799072266
    8. '(b' → logprob: -18.173587799072266
    9. '_b' → logprob: -18.423587799072266
    10. '  ' → logprob: -18.798587799072266

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014204643666744232
    2. ':
' → logprob: -4.264204502105713
    3. '   ' → logprob: -11.139204978942871
    4. '):' → logprob: -11.389204978942871
    5. '):
' → logprob: -12.264204978942871
    6. ' :' → logprob: -12.264204978942871
    7. ':return' → logprob: -13.389204978942871
    8. ':

' → logprob: -13.514204978942871
    9. '==' → logprob: -14.264204978942871
    10. 'else' → logprob: -15.139204978942871

Token 140: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21466928720474243
    2. ':' → logprob: -1.8396692276000977
    3. '       ' → logprob: -3.4646692276000977
    4. ':
' → logprob: -6.339669227600098
    5. ' True' → logprob: -6.964669227600098
    6. 'True' → logprob: -9.089669227600098
    7. '    ' → logprob: -9.714669227600098
    8. '=True' → logprob: -9.964669227600098
    9. ' not' → logprob: -10.839669227600098
    10. ' :' → logprob: -10.964669227600098

Token 141: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00568334199488163
    2. ' print' → logprob: -5.255683422088623
    3. '   ' → logprob: -7.755683422088623
    4. '       ' → logprob: -11.005682945251465
    5. '	print' → logprob: -12.755682945251465
    6. ' ' → logprob: -14.130682945251465
    7. '  ' → logprob: -15.130682945251465
    8. 'printf' → logprob: -15.880682945251465
    9. 'return' → logprob: -16.00568389892578
    10. '    ' → logprob: -16.63068389892578

Token 142: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.4418171455617994e-05
    2. '("' → logprob: -10.125044822692871
    3. '(' → logprob: -12.375044822692871
    4. ' ('' → logprob: -17.000043869018555
    5. ''' → logprob: -17.625043869018555
    6. '(('' → logprob: -18.625043869018555
    7. '(
' → logprob: -19.250043869018555
    8. '(\'' → logprob: -20.875043869018555
    9. '()' → logprob: -21.000043869018555
    10. '('\' → logprob: -21.125043869018555

Token 143: 'YES' (ID: 31958)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01417115144431591
    2. 'YES' → logprob: -4.264171123504639
    3. '"' → logprob: -12.014171600341797
    4. '('' → logprob: -14.014171600341797
    5. ' '' → logprob: -15.264171600341797
    6. '
' → logprob: -15.764171600341797
    7. '   ' → logprob: -15.764171600341797
    8. ' YES' → logprob: -17.014171600341797
    9. ''H' → logprob: -17.389171600341797
    10. 'OK' → logprob: -17.514171600341797

Token 144: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.4740943908691406
    2. '')' → logprob: -0.9740943908691406
    3. '')
' → logprob: -11.47409439086914
    4. ')' → logprob: -12.84909439086914
    5. ')
' → logprob: -12.84909439086914
    6. '")
' → logprob: -13.97409439086914
    7. '')

' → logprob: -14.97409439086914
    8. '")' → logprob: -15.22409439086914
    9. ''' → logprob: -15.84909439086914
    10. '');' → logprob: -16.84909439086914

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.7755875129951164e-05
    2. '   ' → logprob: -10.00004768371582
    3. 'return' → logprob: -13.75004768371582
    4. '           ' → logprob: -15.12504768371582
    5. 'def' → logprob: -15.75004768371582
    6. '<|end|>' → logprob: -15.75004768371582
    7. '```' → logprob: -15.75004768371582
    8. ' return' → logprob: -15.87504768371582
    9. 'else' → logprob: -16.12504768371582
    10. '      ' → logprob: -16.62504768371582

Token 146: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013889510184526443
    2. ' return' → logprob: -4.388889312744141
    3. '       ' → logprob: -6.638889312744141
    4. 'else' → logprob: -10.13888931274414
    5. '   ' → logprob: -11.63888931274414
    6. '
' → logprob: -11.63888931274414
    7. ' ' → logprob: -12.51388931274414
    8. 'eturn' → logprob: -12.63888931274414
    9. '	return' → logprob: -12.76388931274414
    10. ':return' → logprob: -13.51388931274414

Token 147: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0020385603420436382
    2. ' True' → logprob: -6.252038478851318
    3. 'False' → logprob: -9.127038955688477
    4. 'None' → logprob: -14.002038955688477
    5. '(True' → logprob: -15.377038955688477
    6. 'b' → logprob: -16.127038955688477
    7. ' False' → logprob: -17.002038955688477
    8. 'return' → logprob: -17.627038955688477
    9. 'TRUE' → logprob: -17.752038955688477
    10. ''' → logprob: -17.877038955688477

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.896309739408025e-07
    2. 'else' → logprob: -15.125000953674316
    3. 'return' → logprob: -16.0
    4. '
' → logprob: -16.0
    5. '    
' → logprob: -16.25
    6. ' else' → logprob: -16.75
    7. '   ' → logprob: -16.75
    8. '<|end|>' → logprob: -17.25
    9. '       ' → logprob: -17.875
    10. '```' → logprob: -18.25

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011009939044015482
    2. 'else' → logprob: -9.125109672546387
    3. ' else' → logprob: -13.750109672546387
    4. 'return' → logprob: -18.125110626220703
    5. 'def' → logprob: -18.250110626220703
    6. '
' → logprob: -18.250110626220703
    7. '       ' → logprob: -18.500110626220703
    8. '  ' → logprob: -19.250110626220703
    9. 'elif' → logprob: -19.250110626220703
    10. '	else' → logprob: -19.375110626220703

Token 150: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011424671858549118
    2. 'else' → logprob: -4.511424541473389
    3. ' else' → logprob: -7.886424541473389
    4. '	else' → logprob: -14.386425018310547
    5. ' ' → logprob: -15.761425018310547
    6. '       ' → logprob: -16.136425018310547
    7. 'return' → logprob: -17.011425018310547
    8. '  ' → logprob: -17.511425018310547
    9. '
' → logprob: -17.636425018310547
    10. 'elif' → logprob: -17.636425018310547

Token 151: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.75000286102295
    3. '("' → logprob: -15.12500286102295
    4. '(('' → logprob: -19.250003814697266
    5. ' ('' → logprob: -19.875003814697266
    6. '(
' → logprob: -19.875003814697266
    7. '('\' → logprob: -20.625003814697266
    8. '(\'' → logprob: -21.125003814697266
    9. '(False' → logprob: -21.250003814697266
    10. '()' → logprob: -21.375003814697266

Token 152: 'NO' (ID: 14695)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001006846665404737
    2. '('' → logprob: -7.126007080078125
    3. 'NO' → logprob: -9.001007080078125
    4. ''N' → logprob: -9.501007080078125
    5. 'No' → logprob: -13.001007080078125
    6. '
' → logprob: -14.501007080078125
    7. '(NO' → logprob: -14.626007080078125
    8. '`' → logprob: -15.751007080078125
    9. 'else' → logprob: -16.126007080078125
    10. '```' → logprob: -16.251007080078125

Token 153: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.1531304121017456
    2. ')' → logprob: -2.403130531311035
    3. '')
' → logprob: -3.028130531311035
    4. ')
' → logprob: -6.028130531311035
    5. '()' → logprob: -7.653130531311035
    6. '   ' → logprob: -9.153130531311035
    7. '(False' → logprob: -10.153130531311035
    8. '()
' → logprob: -10.528130531311035
    9. 'return' → logprob: -10.778130531311035
    10. '())' → logprob: -11.403130531311035

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0922287106513977
    2. ' return' → logprob: -2.592228651046753
    3. '       ' → logprob: -4.967228889465332
    4. 'return' → logprob: -5.092228889465332
    5. '	return' → logprob: -9.342228889465332
    6. '
' → logprob: -10.967228889465332
    7. ' ' → logprob: -11.342228889465332
    8. 'eturn' → logprob: -12.092228889465332
    9. ' False' → logprob: -12.342228889465332
    10. '  ' → logprob: -12.467228889465332

Token 155: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3370816707611084
    2. 'return' (adapté à ' return') → logprob: -1.5870816707611084
    3. '   ' → logprob: -2.5870816707611084
    4. '       ' → logprob: -5.0870819091796875
    5. '	return' → logprob: -9.462081909179688
    6. 'eturn' → logprob: -9.837081909179688
    7. ':return' → logprob: -10.587081909179688
    8. ' ' → logprob: -10.712081909179688
    9. '{return' → logprob: -11.837081909179688
    10. ' False' → logprob: -12.212081909179688

Token 156: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007099286303855479
    2. ' False' → logprob: -7.2507100105285645
    3. '(False' → logprob: -21.500709533691406
    4. 'True' → logprob: -22.375709533691406
    5. '=False' → logprob: -24.625709533691406
    6. 'false' → logprob: -25.875709533691406
    7. '_false' → logprob: -26.000709533691406
    8. 'None' → logprob: -26.250709533691406
    9. 'FALSE' → logprob: -26.625709533691406
    10. 'Fal' → logprob: -26.625709533691406

Token 157: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: 'int' (ID: 491)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004734734073281288
    2. '#' → logprob: -5.379734516143799
    3. 'from' → logprob: -9.504734992980957
    4. 'class' → logprob: -10.504734992980957
    5. 'import' → logprob: -12.254734992980957
    6. '
' → logprob: -12.504734992980957
    7. ' def' → logprob: -13.754734992980957
    8. '\' → logprob: -14.379734992980957
    9. 'n' → logprob: -14.504734992980957
    10. '```' → logprob: -15.129734992980957

Token 159: '1' (ID: 16)
  Prédit: 'eger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eger' → logprob: -0.2795436978340149
    2. ' =' → logprob: -2.15454363822937
    3. '()' → logprob: -3.15454363822937
    4. 'put' → logprob: -3.52954363822937
    5. 'er' → logprob: -3.65454363822937
    6. '_val' → logprob: -5.529543876647949
    7. '_' → logprob: -5.779543876647949
    8. 'erval' → logprob: -5.904543876647949
    9. '=' → logprob: -6.029543876647949
    10. 'o' → logprob: -6.154543876647949

Token 160: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20660553872585297
    2. ' =' → logprob: -2.5816054344177246
    3. 'put' → logprob: -2.5816054344177246
    4. 'eger' → logprob: -4.206605434417725
    5. 'o' → logprob: -5.081605434417725
    6. '=' → logprob: -5.831605434417725
    7. '=input' → logprob: -5.956605434417725
    8. 'erval' → logprob: -6.581605434417725
    9. 'input' → logprob: -6.956605434417725
    10. ' ()' → logprob: -7.081605434417725

Token 161: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.11646711081266403
    2. 'int' → logprob: -2.491466999053955
    3. ' lambda' → logprob: -3.741466999053955
    4. '(lambda' → logprob: -5.866466999053955
    5. '=lambda' → logprob: -7.866466999053955
    6. ' int' → logprob: -9.241467475891113
    7. '(int' → logprob: -10.241467475891113
    8. '0' → logprob: -10.741467475891113
    9. '[int' → logprob: -11.616467475891113
    10. 'nt' → logprob: -11.866467475891113

Token 162: ' x' (ID: 1215)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5169022679328918
    2. 'x' → logprob: -1.266902208328247
    3. ' x' → logprob: -2.891902208328247
    4. ':' → logprob: -3.016902208328247
    5. ' int' → logprob: -4.766902446746826
    6. ':int' → logprob: -5.016902446746826
    7. 'lambda' → logprob: -6.516902446746826
    8. ' ' → logprob: -8.391901969909668
    9. 'input' → logprob: -9.141901969909668
    10. '():' → logprob: -9.141901969909668

Token 163: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014767673797905445
    2. ':int' → logprob: -4.264767646789551
    3. ' :' → logprob: -7.889767646789551
    4. ':x' → logprob: -9.01476764678955
    5. 'int' → logprob: -9.88976764678955
    6. '=int' → logprob: -10.76476764678955
    7. 'x' → logprob: -11.51476764678955
    8. '[int' → logprob: -11.63976764678955
    9. ',int' → logprob: -11.88976764678955
    10. '(int' → logprob: -12.38976764678955

Token 164: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029822124168276787
    2. ' int' → logprob: -3.5298221111297607
    3. '(int' → logprob: -10.27982234954834
    4. 'x' → logprob: -10.77982234954834
    5. '[int' → logprob: -11.40482234954834
    6. ' x' → logprob: -12.90482234954834
    7. ' ' → logprob: -13.90482234954834
    8. '0' → logprob: -14.40482234954834
    9. '	int' → logprob: -14.65482234954834
    10. '  ' → logprob: -15.15482234954834

Token 165: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0007123126997612417
    2. '(' → logprob: -7.2507123947143555
    3. ' (' → logprob: -13.500712394714355
    4. 'x' → logprob: -14.875712394714355
    5. '(
' → logprob: -15.000712394714355
    6. '((' → logprob: -16.00071144104004
    7. '(str' → logprob: -16.50071144104004
    8. '(s' → logprob: -17.50071144104004
    9. '(float' → logprob: -18.12571144104004
    10. '(input' → logprob: -18.12571144104004

Token 166: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008618593215942383
    2. '.strip' → logprob: -4.883618354797363
    3. ')-' → logprob: -7.008618354797363
    4. ')+' → logprob: -9.883618354797363
    5. '[' → logprob: -10.508618354797363
    6. ' )' → logprob: -11.508618354797363
    7. '.split' → logprob: -11.633618354797363
    8. '())' → logprob: -12.008618354797363
    9. ')#' → logprob: -14.008618354797363
    10. '))' → logprob: -14.258618354797363

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '0' → logprob: -15.62548828125
    4. '  ' → logprob: -18.62548828125
    5. '   ' → logprob: -18.75048828125
    6. '<|end|>' → logprob: -19.00048828125
    7. ' ' → logprob: -20.50048828125
    8. '(' → logprob: -20.62548828125
    9. 'int' → logprob: -20.75048828125
    10. '2' → logprob: -20.75048828125

Token 168: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' Pour' (ID: 13931)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' passer' (ID: 27727)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8244798183441162
    2. 'index' → logprob: -1.9494798183441162
    3. ' convertir' → logprob: -2.074479818344116
    4. 'l' → logprob: -2.824479818344116
    5. ' zero' → logprob: -2.949479818344116
    6. ' les' → logprob: -2.949479818344116
    7. '0' → logprob: -3.199479818344116
    8. ' index' → logprob: -3.949479818344116
    9. 'convert' → logprob: -4.574480056762695
    10. 'zero' → logprob: -4.574480056762695

Token 172: ' ' (ID: 220)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.902357280254364
    2. '<|end|>' → logprob: -1.4023573398590088
    3. 'des' → logprob: -2.027357339859009
    4. 'd' → logprob: -2.027357339859009
    5. ' d' → logprob: -3.277357339859009
    6. ' ' → logprob: -4.52735710144043
    7. 'de' → logprob: -5.52735710144043
    8. 'les' → logprob: -5.52735710144043
    9. 'indices' → logprob: -5.52735710144043
    10. 'aux' → logprob: -5.65235710144043

Token 173: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03311765566468239
    2. 'à' → logprob: -3.9081177711486816
    3. 'de' → logprob: -5.033117771148682
    4. 'des' → logprob: -6.033117771148682
    5. 'en' → logprob: -6.158117771148682
    6. 'un' → logprob: -7.658117771148682
    7. 'l' → logprob: -8.908117294311523
    8. 'du' → logprob: -8.908117294311523
    9. 'indices' → logprob: -9.033117294311523
    10. ' d' → logprob: -9.158117294311523

Token 174: '-index' (ID: 45533)
  Prédit: '-based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.03398555889725685
    2. 'based' → logprob: -3.5339856147766113
    3. ' based' → logprob: -6.408985614776611
    4. '-index' → logprob: -7.033985614776611
    5. '-' → logprob: -7.158985614776611
    6. ' -' → logprob: -7.533985614776611
    7. '-base' → logprob: -9.158985137939453
    8. 'indexed' → logprob: -9.408985137939453
    9. '_based' → logprob: -9.658985137939453
    10. 'index' → logprob: -10.283985137939453

Token 175: 'é' (ID: 377)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.35348665714263916
    2. 'é' → logprob: -1.2284866571426392
    3. 'ée' → logprob: -5.85348653793335
    4. 'e' → logprob: -6.60348653793335
    5. 'éd' → logprob: -7.97848653793335
    6. 'x' → logprob: -9.478487014770508
    7. 'è' → logprob: -9.853487014770508
    8. 'ing' → logprob: -10.353487014770508
    9. 'ex' → logprob: -10.603487014770508
    10. 'ées' → logprob: -10.853487014770508

Token 176: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021466998383402824
    2. ' ' → logprob: -3.8964669704437256
    3. ' zero' → logprob: -7.771467208862305
    4. ' zéro' → logprob: -8.271467208862305
    5. 'zero' → logprob: -9.771467208862305
    6. 'python' → logprob: -10.396467208862305
    7. '```' → logprob: -10.771467208862305
    8. ' python' → logprob: -10.896467208862305
    9. 'z' → logprob: -11.271467208862305
    10. '...' → logprob: -11.646467208862305

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0057559991255402565
    2. 'z' → logprob: -5.75575590133667
    3. 'zero' → logprob: -6.88075590133667
    4. ' zéro' → logprob: -7.50575590133667
    5. ' ' → logprob: -7.88075590133667
    6. ' zero' → logprob: -8.005756378173828
    7. 'index' → logprob: -9.380756378173828
    8. 'base' → logprob: -9.880756378173828
    9. 'python' → logprob: -10.005756378173828
    10. ' z' → logprob: -10.630756378173828

Token 179: '-index' (ID: 45533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049501869827508926
    2. '<|end|>' → logprob: -4.049501895904541
    3. ']' → logprob: -4.799501895904541
    4. 'def' → logprob: -5.049501895904541
    5. '<|end|>' → logprob: -5.799501895904541
    6. 'index' → logprob: -6.049501895904541
    7. 'indexed' → logprob: -6.174501895904541
    8. '#index' → logprob: -6.924501895904541
    9. '-index' → logprob: -7.049501895904541
    10. '-based' → logprob: -7.174501895904541

Token 180: 'é' (ID: 377)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08031091839075089
    2. '<|end|>' → logprob: -3.205310821533203
    3. 'x' → logprob: -3.955310821533203
    4. 'def' → logprob: -5.080310821533203
    5. ' ' → logprob: -5.580310821533203
    6. ']' → logprob: -6.205310821533203
    7. '<|end|>' → logprob: -6.455310821533203
    8. '#' → logprob: -7.580310821533203
    9. '  ' → logprob: -7.580310821533203
    10. '=' → logprob: -8.080310821533203

Token 181: '

' (ID: 279)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4316510260105133
    2. 'def' → logprob: -2.0566511154174805
    3. '<|end|>' → logprob: -2.3066511154174805
    4. '
' → logprob: -2.4316511154174805
    5. '<|end|>' → logprob: -3.9316511154174805
    6. ')' → logprob: -4.9316511154174805
    7. '#' → logprob: -5.6816511154174805
    8. 'newline' → logprob: -6.3066511154174805
    9. '```' → logprob: -7.4316511154174805
    10. 'x' → logprob: -7.4316511154174805

Token 182: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05062985047698021
    2. 'n' → logprob: -3.3006298542022705
    3. 'a' → logprob: -5.925629615783691
    4. 'from' → logprob: -6.175629615783691
    5. 'int' → logprob: -6.175629615783691
    6. 'import' → logprob: -6.175629615783691
    7. '#' → logprob: -6.300629615783691
    8. 'N' → logprob: -8.425629615783691
    9. 'd' → logprob: -8.550629615783691
    10. 's' → logprob: -8.550629615783691

Token 183: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10880502313375473
    2. ' dfs' → logprob: -3.358804941177368
    3. ' solve' → logprob: -4.108805179595947
    4. ' factorial' → logprob: -4.358805179595947
    5. ' pow' → logprob: -4.608805179595947
    6. ' read' → logprob: -4.983805179595947
    7. ' factor' → logprob: -5.358805179595947
    8. ' int' → logprob: -5.608805179595947
    9. 'main' → logprob: -5.858805179595947
    10. ' input' → logprob: -5.983805179595947

Token 184: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.253090865968261e-06
    2. ' ():' → logprob: -11.625009536743164
    3. '()' → logprob: -15.500009536743164
    4. '():
' → logprob: -16.875009536743164
    5. '(' → logprob: -18.000009536743164
    6. '(:' → logprob: -20.375009536743164
    7. ':' → logprob: -20.750009536743164
    8. '(":' → logprob: -20.875009536743164
    9. '()>' → logprob: -22.125009536743164
    10. '().' → logprob: -22.125009536743164

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.583829939365387
    2. ' n' → logprob: -1.0838298797607422
    3. 'n' → logprob: -2.333829879760742
    4. '	n' → logprob: -5.958829879760742
    5. '(n' → logprob: -7.083829879760742
    6. 'input' → logprob: -7.583829879760742
    7. '    ' → logprob: -7.583829879760742
    8. ' pass' → logprob: -7.833829879760742
    9. ' readline' → logprob: -7.958829879760742
    10. '```' → logprob: -8.083829879760742

Token 186: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014401241205632687
    2. ' n' → logprob: -4.264401435852051
    3. 'N' (adapté à ' N') → logprob: -8.63940143585205
    4. '   ' → logprob: -10.13940143585205
    5. 't' → logprob: -11.01440143585205
    6. '	n' → logprob: -12.76440143585205
    7. ' N' → logprob: -13.76440143585205
    8. ' t' → logprob: -15.26440143585205
    9. '    ' → logprob: -15.51440143585205
    10. 'T' → logprob: -16.139400482177734

Token 187: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05030297860503197
    2. '=' → logprob: -3.0503029823303223
    3. ',' → logprob: -6.800302982330322
    4. '=int' → logprob: -7.425302982330322
    5. ' ' → logprob: -13.300302505493164
    6. ' ,' → logprob: -13.800302505493164
    7. '=input' → logprob: -14.050302505493164
    8. ',int' → logprob: -14.675302505493164
    9. '   ' → logprob: -14.925302505493164
    10. ',N' → logprob: -16.425302505493164

Token 188: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.42950737476348877
    2. 'K' → logprob: -1.3045073747634888
    3. '=' → logprob: -2.929507255554199
    4. 'Q' → logprob: -4.679507255554199
    5. ' M' → logprob: -5.429507255554199
    6. ' =' → logprob: -6.054507255554199
    7. ' K' → logprob: -6.179507255554199
    8. 'k' → logprob: -6.429507255554199
    9. 'a' → logprob: -7.054507255554199
    10. '=M' → logprob: -7.554507255554199

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019288709154352546
    2. ' =' → logprob: -6.251928806304932
    3. '=input' → logprob: -15.25192928314209
    4. '=list' → logprob: -18.126928329467773
    5. '=int' → logprob: -18.501928329467773
    6. ' ' → logprob: -18.626928329467773
    7. '=sys' → logprob: -19.876928329467773
    8. '＝' → logprob: -20.001928329467773
    9. ')' → logprob: -20.501928329467773
    10. '=line' → logprob: -20.501928329467773

Token 190: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.023248739540576935
    2. 'map' → logprob: -3.7732486724853516
    3. ' input' → logprob: -13.523248672485352
    4. 'input' → logprob: -13.773248672485352
    5. ' ' → logprob: -15.273248672485352
    6. ' list' → logprob: -15.398248672485352
    7. '	map' → logprob: -15.648248672485352
    8. '[' → logprob: -16.77324867248535
    9. 'list' → logprob: -16.77324867248535
    10. '(map' → logprob: -17.27324867248535

Token 191: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005554724484682083
    2. '(' → logprob: -5.630554676055908
    3. '(input' → logprob: -6.255554676055908
    4. '(str' → logprob: -11.630555152893066
    5. 'int' → logprob: -12.005555152893066
    6. '(lambda' → logprob: -12.005555152893066
    7. '(map' → logprob: -12.630555152893066
    8. '(
' → logprob: -13.005555152893066
    9. '<int' → logprob: -13.505555152893066
    10. '[int' → logprob: -13.630555152893066

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3907097280025482
    2. ',input' → logprob: -1.1407097578048706
    3. '(input' → logprob: -5.76570987701416
    4. 'input' → logprob: -7.51570987701416
    5. ')' → logprob: -9.89070987701416
    6. ',int' → logprob: -10.14070987701416
    7. ' ,' → logprob: -11.01570987701416
    8. '(' → logprob: -11.14070987701416
    9. '=input' → logprob: -11.89070987701416
    10. '[input' → logprob: -11.89070987701416

Token 193: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023257357999682426
    2. ' input' → logprob: -3.773257255554199
    3. 'map' → logprob: -11.8982572555542
    4. 'int' → logprob: -12.2732572555542
    5. ' map' → logprob: -15.1482572555542
    6. ' ' → logprob: -16.648258209228516
    7. ',input' → logprob: -16.773258209228516
    8. ')' → logprob: -17.398258209228516
    9. 'lambda' → logprob: -17.648258209228516
    10. '   ' → logprob: -17.773258209228516

Token 194: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.750000953674316
    3. ')' → logprob: -16.250001907348633
    4. ' ().' → logprob: -17.250001907348633
    5. '.split' → logprob: -18.125001907348633
    6. '(' → logprob: -18.500001907348633
    7. '())' → logprob: -19.375001907348633
    8. '.' → logprob: -19.875001907348633
    9. '()
' → logprob: -20.250001907348633
    10. 'split' → logprob: -21.375001907348633

Token 195: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. 'strip' → logprob: -14.250000953674316
    3. ' split' → logprob: -15.625000953674316
    4. '(split' → logprob: -16.375
    5. 'rstrip' → logprob: -18.75
    6. ')' → logprob: -19.0
    7. '.split' → logprob: -19.0
    8. 'spl' → logprob: -19.5
    9. '().' → logprob: -19.75
    10. '```' → logprob: -20.625

Token 196: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0813576728105545
    2. '())' → logprob: -2.581357717514038
    3. '))' → logprob: -6.706357479095459
    4. '()' → logprob: -6.706357479095459
    5. '()))' → logprob: -11.581357955932617
    6. ')
' → logprob: -12.831357955932617
    7. '())
' → logprob: -13.456357955932617
    8. ' )' → logprob: -13.581357955932617
    9. ')`' → logprob: -13.831357955932617
    10. ')")' → logprob: -14.081357955932617

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21246744692325592
    2. 'graph' → logprob: -1.9624674320220947
    3. ' graph' → logprob: -3.9624674320220947
    4. ')' → logprob: -5.087467670440674
    5. '    
' → logprob: -5.212467670440674
    6. '
' → logprob: -5.462467670440674
    7. 'edges' → logprob: -5.837467670440674
    8. 'a' → logprob: -6.212467670440674
    9. 'A' → logprob: -6.587467670440674
    10. ' edges' → logprob: -6.587467670440674

Token 198: ' S' (ID: 336)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.17881126701831818
    2. 'G' → logprob: -2.5538113117218018
    3. 'g' → logprob: -3.6788113117218018
    4. 'edges' → logprob: -3.8038113117218018
    5. 'adj' → logprob: -4.178811073303223
    6. 'A' → logprob: -4.928811073303223
    7. '   ' → logprob: -5.553811073303223
    8. 'dp' → logprob: -5.803811073303223
    9. ' graph' → logprob: -5.928811073303223
    10. 'a' → logprob: -6.678811073303223

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04874122515320778
    2. '=' → logprob: -3.048741340637207
    3. ',' → logprob: -9.173741340637207
    4. 's' → logprob: -11.173741340637207
    5. '   ' → logprob: -11.673741340637207
    6. ' ' → logprob: -12.673741340637207
    7. 'paces' → logprob: -12.798741340637207
    8. 'a' → logprob: -13.298741340637207
    9. 'p' → logprob: -13.423741340637207
    10. 'tring' → logprob: -13.548741340637207

Token 200: ' tuple' (ID: 31311)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02992519736289978
    2. '[input' → logprob: -4.029925346374512
    3. ' input' → logprob: -4.529925346374512
    4. 'list' → logprob: -7.529925346374512
    5. ' [' → logprob: -8.779925346374512
    6. '[' → logprob: -8.904925346374512
    7. '[]' → logprob: -9.904925346374512
    8. ' list' → logprob: -11.779925346374512
    9. '[int' → logprob: -11.904925346374512
    10. '[str' → logprob: -12.154925346374512

Token 201: '(map' (ID: 16946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00416245311498642
    2. '(int' → logprob: -5.879162311553955
    3. 'input' → logprob: -7.129162311553955
    4. '(map' → logprob: -7.879162311553955
    5. '(' → logprob: -8.879162788391113
    6. '(list' → logprob: -11.754162788391113
    7. 'int' → logprob: -12.129162788391113
    8. 'map' → logprob: -12.254162788391113
    9. '(ord' → logprob: -12.629162788391113
    10. '()' → logprob: -12.754162788391113

Token 202: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03964443877339363
    2. '(str' → logprob: -3.289644479751587
    3. 'int' → logprob: -7.164644241333008
    4. 'str' → logprob: -7.414644241333008
    5. '(ord' → logprob: -8.664644241333008
    6. '(' → logprob: -10.789644241333008
    7. ')' → logprob: -11.789644241333008
    8. '   ' → logprob: -12.289644241333008
    9. '(chr' → logprob: -12.414644241333008
    10. '=int' → logprob: -13.039644241333008

Token 203: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.2056063860654831
    2. ',' → logprob: -1.7056063413619995
    3. '(input' → logprob: -5.580606460571289
    4. 'input' → logprob: -7.955606460571289
    5. ' ,' → logprob: -10.705606460571289
    6. '(' → logprob: -10.955606460571289
    7. ',int' → logprob: -11.580606460571289
    8. '=input' → logprob: -12.705606460571289
    9. ' input' → logprob: -13.330606460571289
    10. ',x' → logprob: -13.455606460571289

Token 204: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029758475720882416
    2. ' input' → logprob: -3.5297584533691406
    3. '(input' → logprob: -12.40475845336914
    4. ' ' → logprob: -13.52975845336914
    5. 'list' → logprob: -14.65475845336914
    6. 'lambda' → logprob: -14.65475845336914
    7. '   ' → logprob: -15.27975845336914
    8. ',input' → logprob: -15.65475845336914
    9. '	input' → logprob: -15.77975845336914
    10. '
' → logprob: -15.90475845336914

Token 205: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.961759259458631e-06
    2. '()' → logprob: -13.125004768371582
    3. ')' → logprob: -13.750004768371582
    4. '))' → logprob: -13.875004768371582
    5. '()))' → logprob: -14.875004768371582
    6. '.split' → logprob: -15.625004768371582
    7. '(' → logprob: -16.0000057220459
    8. '.' → logprob: -16.2500057220459
    9. 'split' → logprob: -16.8750057220459
    10. '()));' → logprob: -17.0000057220459

Token 206: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.8444881536415778e-05
    2. 'strip' → logprob: -10.500028610229492
    3. ' split' → logprob: -14.125028610229492
    4. '(split' → logprob: -17.125028610229492
    5. ')' → logprob: -17.500028610229492
    6. 'rstrip' → logprob: -17.625028610229492
    7. '.split' → logprob: -19.000028610229492
    8. 'spl' → logprob: -19.875028610229492
    9. ' ' → logprob: -20.875028610229492
    10. 'str' → logprob: -21.125028610229492

Token 207: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3143691122531891
    2. '()))' → logprob: -1.3143690824508667
    3. '()' → logprob: -6.939369201660156
    4. '()))
' → logprob: -9.939369201660156
    5. '())' → logprob: -10.189369201660156
    6. ')' → logprob: -11.189369201660156
    7. '))
' → logprob: -11.189369201660156
    8. '(' → logprob: -12.064369201660156
    9. '()));' → logprob: -12.189369201660156
    10. ' ))' → logprob: -12.314369201660156

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09290854632854462
    2. ')' → logprob: -2.7179086208343506
    3. '<|end|>' → logprob: -4.0929083824157715
    4. '    
' → logprob: -5.5929083824157715
    5. '#' → logprob: -7.2179083824157715
    6. '
' → logprob: -8.21790885925293
    7. ',' → logprob: -8.46790885925293
    8. '[' → logprob: -8.96790885925293
    9. ')
' → logprob: -9.09290885925293
    10. '    ' → logprob: -9.09290885925293

Token 209: ' T' (ID: 353)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.046059250831604
    2. 'A' → logprob: -2.2960591316223145
    3. '   ' → logprob: -3.0460591316223145
    4. 'D' → logprob: -3.1710591316223145
    5. ' dp' → logprob: -3.1710591316223145
    6. 'graph' → logprob: -3.6710591316223145
    7. ' edges' → logprob: -3.7960591316223145
    8. 'P' → logprob: -3.9210591316223145
    9. 'Q' → logprob: -4.0460591316223145
    10. 'd' → logprob: -4.0460591316223145

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688093423843384
    2. '=' → logprob: -1.136880874633789
    3. ',' → logprob: -11.761880874633789
    4. ' ' → logprob: -14.136880874633789
    5. 's' → logprob: -15.136880874633789
    6. ')' → logprob: -15.261880874633789
    7. '   ' → logprob: -15.886880874633789
    8. '  ' → logprob: -16.13688087463379
    9. '_' → logprob: -16.38688087463379
    10. '=
' → logprob: -16.51188087463379

Token 211: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.576140284538269
    2. ' tuple' → logprob: -0.826140284538269
    3. '(tuple' → logprob: -8.576140403747559
    4. 'list' → logprob: -12.076140403747559
    5. 'map' → logprob: -13.076140403747559
    6. 'int' → logprob: -13.951140403747559
    7. 'uple' → logprob: -14.201140403747559
    8. ' list' → logprob: -14.326140403747559
    9. 't' → logprob: -14.451140403747559
    10. 'tu' → logprob: -14.826140403747559

Token 212: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0002302383363712579
    2. '(int' → logprob: -8.500229835510254
    3. 'map' → logprob: -10.625229835510254
    4. '(' → logprob: -13.375229835510254
    5. 'int' → logprob: -15.125229835510254
    6. ' (' → logprob: -15.125229835510254
    7. ' map' → logprob: -16.12523078918457
    8. ',map' → logprob: -16.25023078918457
    9. '(list' → logprob: -17.50023078918457
    10. '.map' → logprob: -17.75023078918457

Token 213: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005664954078383744
    2. 'int' → logprob: -7.500566482543945
    3. '=int' → logprob: -11.875566482543945
    4. '[int' → logprob: -12.875566482543945
    5. '<int' → logprob: -13.500566482543945
    6. ',int' → logprob: -13.625566482543945
    7. ' int' → logprob: -13.750566482543945
    8. ']int' → logprob: -15.625566482543945
    9. ':int' → logprob: -16.375566482543945
    10. '(' → logprob: -16.875566482543945

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08986418694257736
    2. ',int' → logprob: -3.0898642539978027
    3. '(int' → logprob: -3.2148642539978027
    4. 'int' → logprob: -8.339863777160645
    5. ' ,' → logprob: -11.589863777160645
    6. '[int' → logprob: -11.589863777160645
    7. '=int' → logprob: -11.964863777160645
    8. '(' → logprob: -12.464863777160645
    9. ',input' → logprob: -12.964863777160645
    10. '   ' → logprob: -13.089863777160645

Token 215: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000839642365463078
    2. 'input' → logprob: -7.250839710235596
    3. ' int' → logprob: -9.000839233398438
    4. '(int' → logprob: -12.375839233398438
    5. ' input' → logprob: -13.375839233398438
    6. '[int' → logprob: -15.000839233398438
    7. '   ' → logprob: -16.125839233398438
    8. ' ' → logprob: -16.125839233398438
    9. '<int' → logprob: -17.625839233398438
    10. ')' → logprob: -17.750839233398438

Token 216: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.25
    3. ' ().' → logprob: -17.0
    4. '.' → logprob: -18.125
    5. '.split' → logprob: -18.75
    6. '   ' → logprob: -20.125
    7. '(' → logprob: -20.5
    8. '().__' → logprob: -21.125
    9. '(),' → logprob: -21.125
    10. '(.' → logprob: -21.625

Token 217: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. 'strip' → logprob: -15.25
    3. ' split' → logprob: -17.0
    4. '.split' → logprob: -17.0
    5. ').' → logprob: -17.25
    6. '(split' → logprob: -17.375
    7. '().' → logprob: -17.625
    8. 'spl' → logprob: -17.625
    9. ')' → logprob: -18.125
    10. '```' → logprob: -18.375

Token 218: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004416705574840307
    2. '))' → logprob: -6.0044169425964355
    3. '())' → logprob: -6.8794169425964355
    4. '()' → logprob: -7.1294169425964355
    5. '()))
' → logprob: -9.504416465759277
    6. '()));' → logprob: -11.004416465759277
    7. '   ' → logprob: -11.879416465759277
    8. '())))' → logprob: -12.754416465759277
    9. ')' → logprob: -13.129416465759277
    10. '().' → logprob: -13.879416465759277

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009198020212352276
    2. '    
' → logprob: -5.009198188781738
    3. ')' → logprob: -6.884198188781738
    4. '
' → logprob: -7.384198188781738
    5. '<|end|>' → logprob: -7.384198188781738
    6. 'def' → logprob: -9.134198188781738
    7. '<|end|>' → logprob: -10.884198188781738
    8. '```' → logprob: -11.134198188781738
    9. ',' → logprob: -11.759198188781738
    10. '    
    
' → logprob: -11.884198188781738

Token 220: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6441128849983215
    2. 'dp' → logprob: -1.0191128253936768
    3. 'i' → logprob: -3.2691128253936768
    4. 'idx' → logprob: -4.019113063812256
    5. 'pos' → logprob: -4.019113063812256
    6. 'p' → logprob: -4.769113063812256
    7. 'd' → logprob: -5.269113063812256
    8. '    
' → logprob: -5.394113063812256
    9. 'j' → logprob: -5.644113063812256
    10. 'a' → logprob: -6.019113063812256

Token 221: ' Initial' (ID: 9209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5313284397125244
    2. ' dp' → logprob: -1.2813284397125244
    3. '#' → logprob: -3.4063284397125244
    4. 'pos' → logprob: -4.406328201293945
    5. ' pos' → logprob: -4.531328201293945
    6. 'from' → logprob: -4.906328201293945
    7. ' #' → logprob: -4.906328201293945
    8. 'd' → logprob: -5.156328201293945
    9. '   ' → logprob: -5.781328201293945
    10. 'p' → logprob: -5.906328201293945

Token 222: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -1.2358570098876953
    2. 'dist' → logprob: -2.3608570098876953
    3. 'ize' → logprob: -2.7358570098876953
    4. 'dp' → logprob: -2.7358570098876953
    5. 'e' → logprob: -2.8608570098876953
    6. '_dist' → logprob: -3.2358570098876953
    7. 'isation' → logprob: -3.2358570098876953
    8. 'ise' → logprob: -3.3608570098876953
    9. 'izer' → logprob: -3.4858570098876953
    10. '#' → logprob: -3.4858570098876953

Token 223: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10257032513618469
    2. '   ' → logprob: -2.8525702953338623
    3. ' dp' → logprob: -3.4775702953338623
    4. 'dist' → logprob: -5.727570533752441
    5. 'DP' → logprob: -6.227570533752441
    6. ' dist' → logprob: -7.602570533752441
    7. ' DP' → logprob: -7.602570533752441
    8. ' =' → logprob: -7.727570533752441
    9. '_dp' → logprob: -8.352570533752441
    10. 'A' → logprob: -8.477570533752441

Token 224: ' façon' (ID: 33381)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4076479971408844
    2. '   ' → logprob: -1.157647967338562
    3. ' dp' → logprob: -4.282648086547852
    4. 'DP' → logprob: -5.282648086547852
    5. '
' → logprob: -7.407648086547852
    6. '    
' → logprob: -8.032648086547852
    7. ' DP' → logprob: -8.282648086547852
    8. ' =' → logprob: -8.407648086547852
    9. '	dp' → logprob: -9.407648086547852
    10. '_dp' → logprob: -9.782648086547852

Token 225: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1187896728515625
    2. ' dp' → logprob: -2.2437896728515625
    3. 'DP' → logprob: -5.8687896728515625
    4. '[' → logprob: -7.3687896728515625
    5. ' DP' → logprob: -7.4937896728515625
    6. '   ' → logprob: -7.9937896728515625
    7. 'INF' → logprob: -8.243789672851562
    8. '[]' → logprob: -8.493789672851562
    9. '[[' → logprob: -8.743789672851562
    10. ' [' → logprob: -9.118789672851562

Token 226: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12562716007232666
    2. ' dp' → logprob: -2.875627040863037
    3. '   ' → logprob: -3.000627040863037
    4. 'DP' → logprob: -4.875627040863037
    5. ' =' → logprob: -5.875627040863037
    6. ' DP' → logprob: -6.875627040863037
    7. '=' → logprob: -9.500627517700195
    8. 'f' → logprob: -9.750627517700195
    9. '_dp' → logprob: -9.875627517700195
    10. ',' → logprob: -10.000627517700195

Token 227: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14347617328166962
    2. 'dp' → logprob: -2.5184762477874756
    3. ' dp' → logprob: -3.0184762477874756
    4. ' DP' → logprob: -6.7684760093688965
    5. '#' → logprob: -6.8934760093688965
    6. 'DP' → logprob: -7.0184760093688965
    7. ' f' → logprob: -8.768476486206055
    8. 'F' → logprob: -8.893476486206055
    9. '	dp' → logprob: -8.893476486206055
    10. 'f' → logprob: -9.018476486206055

Token 228: ' aurait' (ID: 48306)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.2789927124977112
    2. 'dp' → logprob: -2.5289926528930664
    3. ' crée' → logprob: -3.1539926528930664
    4. ' dp' → logprob: -3.5289926528930664
    5. ' fera' → logprob: -4.403992652893066
    6. ' n' → logprob: -4.778992652893066
    7. 'n' → logprob: -5.278992652893066
    8. ' initialise' → logprob: -5.278992652893066
    9. ' peut' → logprob: -5.528992652893066
    10. ' commence' → logprob: -5.528992652893066

Token 229: ' pu' (ID: 2923)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.014836139045655727
    2. '   ' → logprob: -5.264836311340332
    3. 'a' → logprob: -6.264836311340332
    4. 'put' → logprob: -6.764836311340332
    5. 'aim' → logprob: -7.014836311340332
    6. 'pe' → logprob: -7.389836311340332
    7. 'fait' → logprob: -7.514836311340332
    8. ' pu' → logprob: -7.889836311340332
    9. 'pl' → logprob: -8.014836311340332
    10. 'f' → logprob: -8.014836311340332

Token 230: ' le' (ID: 505)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.4599960446357727
    2. 'mettre' → logprob: -1.334995985031128
    3. 'util' → logprob: -3.334995985031128
    4. '#' → logprob: -3.459995985031128
    5. 'contin' → logprob: -4.709996223449707
    6. ' faire' → logprob: -5.084996223449707
    7. ' utiliser' → logprob: -5.584996223449707
    8. 'op' → logprob: -5.959996223449707
    9. 'import' → logprob: -6.084996223449707
    10. 'prendre' → logprob: -6.084996223449707

Token 231: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.3181859850883484
    2. ' faire' → logprob: -1.9431860446929932
    3. 'from' → logprob: -3.193186044692993
    4. '#' → logprob: -3.568186044692993
    5. 'import' → logprob: -4.193185806274414
    6. 'mettre' → logprob: -4.443185806274414
    7. ' utiliser' → logprob: -5.693185806274414
    8. ' from' → logprob: -5.693185806274414
    9. ' defaultdict' → logprob: -5.693185806274414
    10. 'util' → logprob: -6.193185806274414

Token 232: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024965345859527588
    2. '#' → logprob: -4.399965286254883
    3. ' avec' → logprob: -5.524965286254883
    4. ' en' → logprob: -5.899965286254883
    5. 'avec' → logprob: -6.274965286254883
    6. ' à' → logprob: -7.274965286254883
    7. ' comme' → logprob: -7.649965286254883
    8. ' #' → logprob: -7.899965286254883
    9. 'd' → logprob: -8.399965286254883
    10. 'import' → logprob: -8.524965286254883

Token 233: ' compréhension' (ID: 142333)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -1.1025240421295166
    2. 'default' → logprob: -1.7275240421295166
    3. 'd' → logprob: -2.1025240421295166
    4. 'from' → logprob: -2.4775240421295166
    5. 'list' → logprob: -2.4775240421295166
    6. 'liste' → logprob: -2.8525240421295166
    7. 'import' → logprob: -3.4775240421295166
    8. 'collections' → logprob: -4.2275238037109375
    9. '[' → logprob: -4.3525238037109375
    10. 'deque' → logprob: -4.6025238037109375

Token 234: ' aussi' (ID: 9894)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2663413882255554
    2. '   ' → logprob: -1.5163414478302002
    3. ' dp' → logprob: -4.516341209411621
    4. ',' → logprob: -6.641341209411621
    5. 'DP' → logprob: -6.641341209411621
    6. 'd' → logprob: -9.016341209411621
    7. ' DP' → logprob: -9.391341209411621
    8. 'table' → logprob: -9.516341209411621
    9. '#' → logprob: -9.766341209411621
    10. ',
' → logprob: -9.766341209411621

Token 235: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2585255205631256
    2. 'dp' → logprob: -1.5085254907608032
    3. ' dp' → logprob: -5.258525371551514
    4. 'DP' → logprob: -6.758525371551514
    5. ' DP' → logprob: -9.383525848388672
    6. '    
' → logprob: -10.383525848388672
    7. '	dp' → logprob: -10.508525848388672
    8. ')' → logprob: -11.008525848388672
    9. '_dp' → logprob: -11.133525848388672
    10. ',' → logprob: -12.008525848388672

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.495331346988678
    2. 'dp' → logprob: -0.995331346988678
    3. ' dp' → logprob: -4.245331287384033
    4. 'DP' → logprob: -5.120331287384033
    5. ' DP' → logprob: -8.120331764221191
    6. '	dp' → logprob: -8.995331764221191
    7. '    
' → logprob: -9.495331764221191
    8. ' ' → logprob: -9.745331764221191
    9. 'D' → logprob: -10.120331764221191
    10. '  ' → logprob: -10.495331764221191

Token 237: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.010987804271280766
    2. 'DP' → logprob: -5.135987758636475
    3. '   ' → logprob: -6.010987758636475
    4. ' dp' → logprob: -6.010987758636475
    5. 'D' → logprob: -9.760988235473633
    6. ' DP' → logprob: -10.260988235473633
    7. '	dp' → logprob: -11.510988235473633
    8. 'd' → logprob: -12.010988235473633
    9. ' ' → logprob: -12.260988235473633
    10. 'prev' → logprob: -12.260988235473633

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011072699911892414
    2. '=' → logprob: -4.511072635650635
    3. '[' → logprob: -11.636073112487793
    4. ' ' → logprob: -12.261073112487793
    5. '=[' → logprob: -12.261073112487793
    6. ' =[' → logprob: -13.261073112487793
    7. '=[[' → logprob: -13.261073112487793
    8. '   ' → logprob: -13.511073112487793
    9. 'dp' → logprob: -14.886073112487793
    10. '=[]' → logprob: -14.886073112487793

Token 239: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.002690032823011279
    2. '[' → logprob: -6.502689838409424
    3. ' [[' → logprob: -6.752689838409424
    4. '[-' → logprob: -11.252690315246582
    5. ' [' → logprob: -12.877690315246582
    6. '[(' → logprob: -13.002690315246582
    7. '[n' → logprob: -15.002690315246582
    8. '[m' → logprob: -15.627690315246582
    9. '[['' → logprob: -15.752690315246582
    10. '[s' → logprob: -15.877690315246582

Token 240: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5855725407600403
    2. '   ' → logprob: -1.3355724811553955
    3. ' for' → logprob: -1.9605724811553955
    4. ' =' → logprob: -4.085572719573975
    5. '[' → logprob: -4.210572719573975
    6. '.append' → logprob: -5.960572719573975
    7. 'dp' → logprob: -6.960572719573975
    8. '(' → logprob: -7.210572719573975
    9. '=' → logprob: -7.210572719573975
    10. '([' → logprob: -7.710572719573975

Token 241: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1330995261669159
    2. '[' → logprob: -2.7580995559692383
    3. ' for' → logprob: -2.8830995559692383
    4. 'dp' → logprob: -6.133099555969238
    5. '   ' → logprob: -6.258099555969238
    6. ' [' → logprob: -7.133099555969238
    7. '[[' → logprob: -8.258099555969238
    8. '[(' → logprob: -10.758099555969238
    9. '0' → logprob: -11.258099555969238
    10. 'row' → logprob: -11.633099555969238

Token 242: ' _' (ID: 1175)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3173718750476837
    2. '_' → logprob: -2.3173718452453613
    3. ' i' → logprob: -2.4423718452453613
    4. '_i' → logprob: -2.5673718452453613
    5. ' _' → logprob: -4.692371845245361
    6. '_j' → logprob: -9.56737232208252
    7. 'j' → logprob: -9.69237232208252
    8. '_s' → logprob: -9.81737232208252
    9. ' ' → logprob: -10.06737232208252
    10. '_N' → logprob: -10.19237232208252

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008166888728737831
    2. 'in' → logprob: -4.883166790008545
    3. 'range' → logprob: -7.883166790008545
    4. ' ' → logprob: -9.258167266845703
    5. ' range' → logprob: -10.008167266845703
    6. '  ' → logprob: -11.133167266845703
    7. '0' → logprob: -11.883167266845703
    8. 'i' → logprob: -12.133167266845703
    9. '   ' → logprob: -12.508167266845703
    10. ' i' → logprob: -12.883167266845703

Token 244: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.546478935983032e-05
    2. ' range' → logprob: -10.625025749206543
    3. '(range' → logprob: -14.500025749206543
    4. '   ' → logprob: -14.875025749206543
    5. '  ' → logprob: -16.625024795532227
    6. ' ' → logprob: -17.250024795532227
    7. ')' → logprob: -17.375024795532227
    8. '	range' → logprob: -17.750024795532227
    9. '(' → logprob: -18.250024795532227
    10. 'rang' → logprob: -18.375024795532227

Token 245: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.008563628420233727
    2. '(M' → logprob: -4.88356351852417
    3. 'N' → logprob: -7.38356351852417
    4. '(' → logprob: -8.133563995361328
    5. 'M' → logprob: -11.258563995361328
    6. '(n' → logprob: -11.758563995361328
    7. ' (' → logprob: -11.883563995361328
    8. '(S' → logprob: -12.258563995361328
    9. '   ' → logprob: -13.008563995361328
    10. '((' → logprob: -13.008563995361328

Token 246: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.021432576701045036
    2. '):
' → logprob: -4.646432399749756
    3. '):' → logprob: -4.771432399749756
    4. ' +' → logprob: -5.771432399749756
    5. ')' → logprob: -11.271432876586914
    6. '   ' → logprob: -12.271432876586914
    7. '+
' → logprob: -12.646432876586914
    8. '):
' → logprob: -13.521432876586914
    9. ',' → logprob: -15.021432876586914
    10. ' ):
' → logprob: -15.021432876586914

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.203409844194539e-05
    2. ' ' → logprob: -10.500041961669922
    3. '2' → logprob: -11.250041961669922
    4. '   ' → logprob: -14.000041961669922
    5. '
' → logprob: -15.250041961669922
    6. 'M' → logprob: -15.500041961669922
    7. '  ' → logprob: -17.000041961669922
    8. '

' → logprob: -17.312541961669922
    9. '    ' → logprob: -17.375041961669922
    10. '3' → logprob: -17.750041961669922

Token 248: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3873825967311859
    2. '):
' → logprob: -1.1373826265335083
    3. ')' → logprob: -7.762382507324219
    4. '):
' → logprob: -10.137382507324219
    5. ':' → logprob: -11.137382507324219
    6. ',' → logprob: -11.637382507324219
    7. ' ):' → logprob: -12.262382507324219
    8. '):

' → logprob: -12.387382507324219
    9. '   ' → logprob: -12.887382507324219
    10. ' ):
' → logprob: -12.887382507324219

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4615277945995331
    2. '   ' → logprob: -1.0865278244018555
    3. '	dp' → logprob: -3.5865278244018555
    4. ' dp' → logprob: -5.8365278244018555
    5. '	   ' → logprob: -6.8365278244018555
    6. 'dp' → logprob: -8.086527824401855
    7. '<|end|>' → logprob: -9.086527824401855
    8. '(dp' → logprob: -9.961527824401855
    9. '	' → logprob: -10.836527824401855
    10. '     ' → logprob: -11.086527824401855

Token 250: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0006440493743866682
    2. ' dp' → logprob: -7.500644207000732
    3. '   ' → logprob: -9.500643730163574
    4. '       ' → logprob: -11.125643730163574
    5. '	dp' → logprob: -13.625643730163574
    6. '           ' → logprob: -16.75064468383789
    7. '[' → logprob: -17.00064468383789
    8. '_dp' → logprob: -17.12564468383789
    9. ' ' → logprob: -17.25064468383789
    10. '(dp' → logprob: -17.62564468383789

Token 251: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00018530222587287426
    2. '.' → logprob: -8.625185012817383
    3. ' .' → logprob: -12.375185012817383
    4. '.extend' → logprob: -14.250185012817383
    5. '.app' → logprob: -15.250185012817383
    6. 'append' → logprob: -15.500185012817383
    7. '.ap' → logprob: -15.750185012817383
    8. '.Append' → logprob: -16.625185012817383
    9. '].' → logprob: -16.750185012817383
    10. ').' → logprob: -17.625185012817383

Token 252: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.000250491953920573
    2. '[' → logprob: -8.375250816345215
    3. '([-' → logprob: -11.250250816345215
    4. '   ' → logprob: -12.875250816345215
    5. '[M' → logprob: -13.625250816345215
    6. '(' → logprob: -13.750250816345215
    7. ' ([' → logprob: -13.750250816345215
    8. ' [' → logprob: -15.250250816345215
    9. '[-' → logprob: -15.375250816345215
    10. ' ' → logprob: -15.625250816345215

Token 253: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5831397175788879
    2. 'False' → logprob: -0.8331397175788879
    3. 'INF' → logprob: -5.083139896392822
    4. '-' → logprob: -7.333139896392822
    5. 'MOD' → logprob: -8.958139419555664
    6. ' False' → logprob: -10.083139419555664
    7. 'float' → logprob: -10.208139419555664
    8. '(' → logprob: -10.583139419555664
    9. ' ' → logprob: -10.583139419555664
    10. '(False' → logprob: -11.083139419555664

Token 254: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12757332623004913
    2. ']*(' → logprob: -2.127573251724243
    3. ']*' → logprob: -7.377573490142822
    4. ' for' → logprob: -11.627573013305664
    5. 'for' → logprob: -12.002573013305664
    6. ']+' → logprob: -13.002573013305664
    7. '*(' → logprob: -14.002573013305664
    8. ' ]' → logprob: -14.502573013305664
    9. ')' → logprob: -14.752573013305664
    10. '])' → logprob: -15.002573013305664

Token 255: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0010526961414143443
    2. '(M' → logprob: -6.8760528564453125
    3. ' M' → logprob: -10.876052856445312
    4. '   ' → logprob: -14.751052856445312
    5. '(' → logprob: -15.126052856445312
    6. ' (' → logprob: -16.001052856445312
    7. ' ' → logprob: -16.001052856445312
    8. 'T' → logprob: -16.876052856445312
    9. '[M' → logprob: -16.876052856445312
    10. '(T' → logprob: -18.126052856445312

Token 256: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.2994620242971e-06
    2. ' +' → logprob: -11.750008583068848
    3. '+
' → logprob: -15.000008583068848
    4. '()+' → logprob: -18.25000762939453
    5. ')+' → logprob: -18.50000762939453
    6. '+)' → logprob: -19.87500762939453
    7. '＋' → logprob: -20.12500762939453
    8. '1' → logprob: -20.12500762939453
    9. '<|end|>' → logprob: -20.12500762939453
    10. '   ' → logprob: -20.25000762939453

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -16.562503814697266
    4. ')' → logprob: -16.625003814697266
    5. '2' → logprob: -17.125003814697266
    6. '   ' → logprob: -17.250003814697266
    7. '+' → logprob: -17.437503814697266
    8. '-' → logprob: -18.937503814697266
    9. '۱' → logprob: -19.125003814697266
    10. '
' → logprob: -19.187503814697266

Token 258: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007937820046208799
    2. ')' → logprob: -7.375793933868408
    3. ')))' → logprob: -9.00079345703125
    4. '))
' → logprob: -10.12579345703125
    5. '+' → logprob: -13.12579345703125
    6. ' ))' → logprob: -14.25079345703125
    7. '   ' → logprob: -15.50079345703125
    8. ')
' → logprob: -15.62579345703125
    9. '()))' → logprob: -15.75079345703125
    10. '))

' → logprob: -16.00079345703125

Token 259: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6924103498458862
    2. '   ' → logprob: -1.5674103498458862
    3. ' for' → logprob: -1.9424103498458862
    4. 'dp' → logprob: -2.067410469055176
    5. '	for' → logprob: -4.192410469055176
    6. '<|end|>' → logprob: -6.067410469055176
    7. '
' → logprob: -6.192410469055176
    8. '	dp' → logprob: -7.067410469055176
    9. ' dp' → logprob: -8.317410469055176
    10. '```' → logprob: -8.442410469055176

Token 260: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019640708342194557
    2. 'dp' → logprob: -4.644640922546387
    3. ' for' → logprob: -4.769640922546387
    4. '   ' → logprob: -6.644640922546387
    5. '	for' → logprob: -10.644640922546387
    6. ')' → logprob: -11.394640922546387
    7. '<|end|>' → logprob: -12.269640922546387
    8. '
' → logprob: -12.394640922546387
    9. '#' (adapté à ' #') → logprob: -13.144640922546387
    10. '```' → logprob: -13.894640922546387

Token 261: ' SUM' (ID: 52418)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005175283877179027
    2. ' for' → logprob: -8.000517845153809
    3. 'dp' → logprob: -8.625517845153809
    4. 'from' → logprob: -14.000517845153809
    5. '#' → logprob: -14.000517845153809
    6. '   ' → logprob: -14.500517845153809
    7. 'import' → logprob: -16.625516891479492
    8. ' ' → logprob: -16.750516891479492
    9. '```' → logprob: -16.875516891479492
    10. '	for' → logprob: -17.125516891479492

Token 262: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41911038756370544
    2. '=' → logprob: -1.1691104173660278
    3. 'dp' → logprob: -3.6691102981567383
    4. 'for' → logprob: -5.294110298156738
    5. 's' → logprob: -8.419110298156738
    6. 'sum' → logprob: -8.919110298156738
    7. 'def' → logprob: -9.169110298156738
    8. '   ' → logprob: -9.294110298156738
    9. ')' → logprob: -9.294110298156738
    10. ' for' → logprob: -9.419110298156738

Token 263: ' pas' (ID: 2173)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.271170973777771
    2. 'for' → logprob: -1.396170973777771
    3. ' for' → logprob: -2.1461710929870605
    4. 'dp' → logprob: -3.2711710929870605
    5. 's' → logprob: -3.3961710929870605
    6. ' sum' → logprob: -3.5211710929870605
    7. '#' → logprob: -3.6461710929870605
    8. ' =' → logprob: -3.8961710929870605
    9. '=' → logprob: -4.2711710929870605
    10. 'cum' → logprob: -4.2711710929870605

Token 264: ' besoin' (ID: 27703)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2564767599105835
    2. 'for' → logprob: -1.5064767599105835
    3. '=' → logprob: -1.6314767599105835
    4. 'de' → logprob: -1.6314767599105835
    5. '#' → logprob: -3.881476879119873
    6. ' =' → logprob: -4.256476879119873
    7. 'pour' → logprob: -4.506476879119873
    8. 'la' → logprob: -5.131476879119873
    9. '(dp' → logprob: -5.256476879119873
    10. 'import' → logprob: -5.256476879119873

Token 265: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ' +' (ID: 659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.240873783826828
    2. 'dp' → logprob: -1.7408738136291504
    3. 'range' → logprob: -4.61587381362915
    4. 'import' → logprob: -5.11587381362915
    5. '[' → logprob: -5.49087381362915
    6. 'from' → logprob: -5.74087381362915
    7. 'sum' → logprob: -5.99087381362915
    8. ' for' → logprob: -6.11587381362915
    9. '0' → logprob: -6.24087381362915
    10. 'mod' → logprob: -6.49087381362915

Token 267: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19333523511886597
    2. 'dp' → logprob: -2.5683352947235107
    3. '[' → logprob: -2.9433352947235107
    4. 'for' → logprob: -3.8183352947235107
    5. ' for' → logprob: -5.568335056304932
    6. 'def' → logprob: -5.693335056304932
    7. ' ' → logprob: -5.943335056304932
    8. '   ' → logprob: -5.943335056304932
    9. '=' → logprob: -6.568335056304932
    10. '(' → logprob: -6.818335056304932

Token 268: ' partout' (ID: 70478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08259136974811554
    2. 'sum' → logprob: -3.7075912952423096
    3. 'dp' → logprob: -3.9575912952423096
    4. ' =' → logprob: -4.457591533660889
    5. 'SUM' → logprob: -4.457591533660889
    6. ' for' → logprob: -5.332591533660889
    7. 'for' → logprob: -5.582591533660889
    8. '=' → logprob: -6.957591533660889
    9. '
' → logprob: -7.707591533660889
    10. ' sum' → logprob: -7.957591533660889

Token 269: ' je' (ID: 1264)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2785484492778778
    2. '<|end|>' → logprob: -1.7785484790802002
    3. '
' → logprob: -3.2785484790802
    4. 'dp' → logprob: -3.7785484790802
    5. ' for' → logprob: -5.278548240661621
    6. '<|end|>' → logprob: -5.653548240661621
    7. '    
' → logprob: -6.528548240661621
    8. 'for' → logprob: -6.778548240661621
    9. 'sum' → logprob: -8.153548240661621
    10. '  
' → logprob: -8.403548240661621

Token 270: ' crois' (ID: 65485)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.012471318244934
    2. ' continue' → logprob: -1.387471318244934
    3. '   ' → logprob: -2.2624711990356445
    4. 'n' → logprob: -2.5124711990356445
    5. ' for' → logprob: -2.5124711990356445
    6. 'continue' → logprob: -3.1374711990356445
    7. 's' → logprob: -3.5124711990356445
    8. 'dp' → logprob: -3.8874711990356445
    9. 'm' → logprob: -5.1374711990356445
    10. ' n' → logprob: -6.0124711990356445

Token 271: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5523071885108948
    2. ' for' → logprob: -1.42730712890625
    3. '   ' → logprob: -2.17730712890625
    4. 'dp' → logprob: -2.80230712890625
    5. '<|end|>' → logprob: -6.05230712890625
    6. ' dp' → logprob: -6.80230712890625
    7. '...' → logprob: -6.92730712890625
    8. '#' → logprob: -7.17730712890625
    9. ')' → logprob: -7.17730712890625
    10. '    ' → logprob: -7.30230712890625

Token 273: ' bon' (ID: 4846)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5046938061714172
    2. 'for' → logprob: -1.1296937465667725
    3. ' for' → logprob: -3.1296937465667725
    4. ' dp' → logprob: -4.504693984985352
    5. 'c' → logprob: -5.004693984985352
    6. '#' → logprob: -5.504693984985352
    7. '...' → logprob: -5.629693984985352
    8. ' c' → logprob: -7.754693984985352
    9. 'j' → logprob: -7.754693984985352
    10. '+' → logprob: -7.879693984985352

Token 274: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17462004721164703
    2. 'for' → logprob: -2.2996201515197754
    3. ' for' → logprob: -3.0496201515197754
    4. '<|end|>' → logprob: -5.299620151519775
    5. 'sum' → logprob: -5.549620151519775
    6. 'SUM' → logprob: -6.674620151519775
    7. 'dp' → logprob: -7.174620151519775
    8. '
' → logprob: -8.299619674682617
    9. 'total' → logprob: -8.674619674682617
    10. '    
' → logprob: -8.674619674682617

Token 275: ' ça' (ID: 13590)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06828427314758301
    2. 'for' → logprob: -3.193284273147583
    3. 'sum' → logprob: -4.693284034729004
    4. ' for' → logprob: -4.693284034729004
    5. 'SUM' → logprob: -6.068284034729004
    6. 'dp' → logprob: -6.943284034729004
    7. '...' → logprob: -7.193284034729004
    8. '#' → logprob: -7.943284034729004
    9. ')' → logprob: -8.068284034729004
    10. '    ' → logprob: -8.068284034729004

Token 276: ' marche' (ID: 58191)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3561790883541107
    2. ' =' → logprob: -2.6061789989471436
    3. 'continue' → logprob: -2.6061789989471436
    4. '+=' → logprob: -3.2311789989471436
    5. 'dp' → logprob: -3.7311789989471436
    6. 's' → logprob: -4.106179237365723
    7. 'n' → logprob: -4.856179237365723
    8. ' continue' → logprob: -4.981179237365723
    9. ' +=' → logprob: -5.106179237365723
    10. 'a' → logprob: -5.231179237365723

Token 277: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020202361047267914
    2. 'for' → logprob: -7.127020359039307
    3. ' for' → logprob: -7.502020359039307
    4. 'SUM' → logprob: -8.127019882202148
    5. 'sum' → logprob: -8.877019882202148
    6. '<|end|>' → logprob: -10.127019882202148
    7. 'dp' → logprob: -10.252019882202148
    8. '
' → logprob: -10.502019882202148
    9. '    
' → logprob: -10.502019882202148
    10. '  ' → logprob: -10.627019882202148

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0045427423901855946
    2. 'SUM' → logprob: -5.504542827606201
    3. 'sum' → logprob: -8.504542350769043
    4. 'for' → logprob: -9.379542350769043
    5. ' for' → logprob: -9.629542350769043
    6. ' SUM' → logprob: -9.879542350769043
    7. 'dp' → logprob: -10.879542350769043
    8. ' sum' → logprob: -11.004542350769043
    9. 'S' → logprob: -12.629542350769043
    10. 'Sum' → logprob: -13.129542350769043

Token 279: ' SUM' (ID: 52418)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' (adapté à ' SUM') → logprob: -0.1436133086681366
    2. 'sum' → logprob: -2.018613338470459
    3. 'for' → logprob: -7.518613338470459
    4. '   ' → logprob: -8.5186128616333
    5. 's' → logprob: -10.0186128616333
    6. 'dp' → logprob: -10.2686128616333
    7. 'summ' → logprob: -10.3936128616333
    8. 'Sum' → logprob: -10.6436128616333
    9. ' SUM' → logprob: -11.5186128616333
    10. 'prefix' → logprob: -11.8936128616333

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029800711199641228
    2. '=' → logprob: -3.5298006534576416
    3. '=[' → logprob: -10.529800415039062
    4. ' =[' → logprob: -11.529800415039062
    5. '=[]' → logprob: -12.904800415039062
    6. '=[[' → logprob: -13.154800415039062
    7. '   ' → logprob: -13.154800415039062
    8. ' ' → logprob: -13.154800415039062
    9. ')' → logprob: -13.279800415039062
    10. '[' → logprob: -13.529800415039062

Token 281: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.16577492654323578
    2. '[]
' → logprob: -1.915774941444397
    3. ' [[' → logprob: -5.915774822235107
    4. '[]' → logprob: -6.415774822235107
    5. '[' → logprob: -6.915774822235107
    6. ' []
' → logprob: -9.540775299072266
    7. '[N' → logprob: -9.915775299072266
    8. '[
' → logprob: -10.415775299072266
    9. '0' → logprob: -10.540775299072266
    10. ' [' → logprob: -11.540775299072266

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.750003814697266
    3. '(' → logprob: -14.375003814697266
    4. 'False' → logprob: -15.000003814697266
    5. '(M' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.375003814697266
    7. '[' → logprob: -17.375003814697266
    8. '(N' → logprob: -17.625003814697266
    9. '
' → logprob: -17.875003814697266
    10. ']' → logprob: -18.000003814697266

Token 283: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.03450659662485123
    2. 'for' → logprob: -4.034506797790527
    3. ' for' → logprob: -4.659506797790527
    4. ']' → logprob: -5.284506797790527
    5. ']*' → logprob: -6.409506797790527
    6. '(M' → logprob: -11.284506797790527
    7. ']+' → logprob: -11.409506797790527
    8. '   ' → logprob: -12.034506797790527
    9. '*(' → logprob: -12.159506797790527
    10. '](' → logprob: -14.534506797790527

Token 284: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.004645861219614744
    2. '(M' → logprob: -5.379645824432373
    3. ' M' → logprob: -10.879646301269531
    4. '   ' → logprob: -12.129646301269531
    5. ' (' → logprob: -14.129646301269531
    6. ' ' → logprob: -15.379646301269531
    7. '(' → logprob: -16.50464630126953
    8. '	M' → logprob: -16.75464630126953
    9. 'MOD' → logprob: -16.87964630126953
    10. '
' → logprob: -17.12964630126953

Token 285: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.676981345459353e-06
    2. ' +' → logprob: -12.375005722045898
    3. '+
' → logprob: -13.625005722045898
    4. '2' → logprob: -16.6250057220459
    5. '   ' → logprob: -17.2500057220459
    6. ')+' → logprob: -18.0000057220459
    7. '
' → logprob: -18.7500057220459
    8. '1' → logprob: -19.1250057220459
    9. '＋' → logprob: -19.1250057220459
    10. '()+' → logprob: -19.8750057220459

Token 286: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003647591220214963
    2. '1' → logprob: -5.628647804260254
    3. ' ' → logprob: -10.253647804260254
    4. '+' → logprob: -12.003647804260254
    5. '   ' → logprob: -13.003647804260254
    6. '
' → logprob: -13.378647804260254
    7. '3' → logprob: -13.753647804260254
    8. '```' → logprob: -14.628647804260254
    9. '

' → logprob: -15.753647804260254
    10. '  ' → logprob: -15.941147804260254

Token 287: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014573395310435444
    2. ')]' → logprob: -9.00014591217041
    3. ' )' → logprob: -11.37514591217041
    4. ')
' → logprob: -12.50014591217041
    5. 'for' → logprob: -12.87514591217041
    6. '+' → logprob: -13.50014591217041
    7. '   ' → logprob: -13.87514591217041
    8. ' for' → logprob: -14.25014591217041
    9. ')])' → logprob: -14.75014591217041
    10. ')...' → logprob: -15.12514591217041

Token 288: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4745772182941437
    2. 'for' → logprob: -0.9745771884918213
    3. '   ' → logprob: -7.7245774269104
    4. ']' → logprob: -10.224576950073242
    5. '	for' → logprob: -11.224576950073242
    6. ')' → logprob: -12.599576950073242
    7. ' ' → logprob: -12.724576950073242
    8. ']*(' → logprob: -14.224576950073242
    9. '       ' → logprob: -14.349576950073242
    10. '  ' → logprob: -14.474576950073242

Token 289: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012792504392564297
    2. ' _' → logprob: -4.387792587280273
    3. ' range' → logprob: -8.637792587280273
    4. '_range' → logprob: -9.512792587280273
    5. ' in' → logprob: -10.887792587280273
    6. 'range' → logprob: -12.637792587280273
    7. '_in' → logprob: -12.762792587280273
    8. '_i' → logprob: -13.262792587280273
    9. ' ' → logprob: -13.387792587280273
    10. ' i' → logprob: -13.637792587280273

Token 290: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2520393431186676
    2. 'in' → logprob: -1.5020393133163452
    3. 'range' → logprob: -9.627038955688477
    4. ' ' → logprob: -10.877038955688477
    5. '_' → logprob: -11.127038955688477
    6. '  ' → logprob: -12.877038955688477
    7. '
' → logprob: -13.752038955688477
    8. '0' → logprob: -13.752038955688477
    9. ' range' → logprob: -14.002038955688477
    10. 'i' → logprob: -14.002038955688477

Token 291: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889044284820557
    2. ' range' → logprob: -2.578890323638916
    3. '_' → logprob: -14.578890800476074
    4. '(range' → logprob: -15.953890800476074
    5. '_range' → logprob: -16.078889846801758
    6. 'in' → logprob: -17.703889846801758
    7. ' in' → logprob: -18.203889846801758
    8. '	range' → logprob: -18.578889846801758
    9. '   ' → logprob: -19.078889846801758
    10. ' ' → logprob: -20.203889846801758

Token 292: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.11442998051643372
    2. 'range' → logprob: -2.7394299507141113
    3. ' range' → logprob: -3.3644299507141113
    4. '(range' → logprob: -4.739429950714111
    5. ' (' → logprob: -8.86443042755127
    6. '(' → logprob: -10.48943042755127
    7. '   ' → logprob: -11.36443042755127
    8. ' in' → logprob: -12.73943042755127
    9. '(n' → logprob: -12.98943042755127
    10. '((' → logprob: -12.98943042755127

Token 293: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3856492842023727e-06
    2. '+
' → logprob: -14.250000953674316
    3. ' +' → logprob: -14.375000953674316
    4. '()+' → logprob: -18.875001907348633
    5. ')+' → logprob: -19.375001907348633
    6. '+)' → logprob: -20.125001907348633
    7. '1' → logprob: -20.250001907348633
    8. '   ' → logprob: -20.500001907348633
    9. '2' → logprob: -20.875001907348633
    10. '+B' → logprob: -20.875001907348633

Token 294: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009770727716386318
    2. '2' → logprob: -4.63477087020874
    3. ' ' → logprob: -11.634770393371582
    4. '   ' → logprob: -12.634770393371582
    5. '```' → logprob: -14.509770393371582
    6. ')' → logprob: -15.072270393371582
    7. '+' → logprob: -15.134770393371582
    8. '
' → logprob: -15.134770393371582
    9. '(' → logprob: -15.947270393371582
    10. '

' → logprob: -16.0722713470459

Token 295: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.696889623621246e-06
    2. ')' → logprob: -13.50000286102295
    3. ')]
' → logprob: -14.37500286102295
    4. ']' → logprob: -15.00000286102295
    5. '])]' → logprob: -16.000001907348633
    6. ')])' → logprob: -16.125001907348633
    7. ')],' → logprob: -16.625001907348633
    8. ' )' → logprob: -17.250001907348633
    9. ')]

' → logprob: -17.750001907348633
    10. ')].' → logprob: -18.000001907348633

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07426941394805908
    2. '<|end|>' → logprob: -3.0742692947387695
    3. 'for' → logprob: -3.9492692947387695
    4. ' for' → logprob: -5.3242692947387695
    5. ')' → logprob: -7.1992692947387695
    6. '<|end|>' → logprob: -8.69926929473877
    7. '	for' → logprob: -9.19926929473877
    8. '```' → logprob: -10.44926929473877
    9. '#' → logprob: -10.57426929473877
    10. '...' → logprob: -10.69926929473877

Token 297: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07391741126775742
    2. '   ' → logprob: -3.0739173889160156
    3. ' for' → logprob: -3.6989173889160156
    4. ')' → logprob: -8.823917388916016
    5. '	for' → logprob: -9.448917388916016
    6. '#' → logprob: -11.698917388916016
    7. '<|end|>' → logprob: -11.698917388916016
    8. '
' → logprob: -11.823917388916016
    9. ' ' → logprob: -13.073917388916016
    10. '```' → logprob: -13.198917388916016

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326231360435486
    2. '=' → logprob: -1.3132623434066772
    3. '=int' → logprob: -15.688261985778809
    4. ',' → logprob: -16.063262939453125
    5. ')' → logprob: -16.438262939453125
    6. ' ' → logprob: -16.438262939453125
    7. 's' → logprob: -17.563262939453125
    8. ' =)' → logprob: -17.563262939453125
    9. '.' → logprob: -17.688262939453125
    10. ' ' → logprob: -17.813262939453125

Token 299: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '1' → logprob: -15.875075340270996
    4. 'dp' → logprob: -16.00007438659668
    5. '   ' → logprob: -16.50007438659668
    6. 'int' → logprob: -17.12507438659668
    7. '[' → logprob: -18.56257438659668
    8. '(' → logprob: -18.87507438659668
    9. '000' → logprob: -19.12507438659668
    10. '=' → logprob: -19.75007438659668

Token 300: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6047699318733066e-05
    2. '1' → logprob: -11.750016212463379
    3. ' ' → logprob: -12.250016212463379
    4. 'dp' → logprob: -13.750016212463379
    5. 'int' → logprob: -14.500016212463379
    6. '[' → logprob: -15.125016212463379
    7. '(' → logprob: -15.125016212463379
    8. '-' → logprob: -15.375016212463379
    9. '[[' → logprob: -16.062515258789062
    10. 'sum' → logprob: -16.187515258789062

Token 301: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023590294644236565
    2. '
' → logprob: -4.148590087890625
    3. '    
' → logprob: -5.773590087890625
    4. ' for' → logprob: -6.273590087890625
    5. '<|end|>' → logprob: -6.398590087890625
    6. 'for' → logprob: -7.648590087890625
    7. '  
' → logprob: -9.398590087890625
    8. '\n' → logprob: -9.773590087890625
    9. ' 
' → logprob: -10.023590087890625
    10. '<|end|>' → logprob: -10.023590087890625

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014516627416014671
    2. ' for' → logprob: -4.639516830444336
    3. 'for' → logprob: -5.639516830444336
    4. '
' → logprob: -7.264516830444336
    5. '    
' → logprob: -8.639516830444336
    6. '	for' → logprob: -9.014516830444336
    7. '<|end|>' → logprob: -9.264516830444336
    8. '\t' → logprob: -10.514516830444336
    9. ' ' → logprob: -11.139516830444336
    10. '    ' → logprob: -11.889516830444336

Token 303: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004204250581096858
    2. ' for' → logprob: -8.000420570373535
    3. '   ' → logprob: -9.375420570373535
    4. '	for' → logprob: -17.25041961669922
    5. ')' → logprob: -17.50041961669922
    6. '
' → logprob: -18.12541961669922
    7. '```' → logprob: -18.12541961669922
    8. '#' → logprob: -18.37541961669922
    9. 'dp' → logprob: -18.87541961669922
    10. ' ' → logprob: -19.25041961669922

Token 304: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.043044980615377426
    2. 'i' → logprob: -3.1680450439453125
    3. '	i' → logprob: -11.293045043945312
    4. ' a' → logprob: -11.918045043945312
    5. 'I' → logprob: -11.918045043945312
    6. '_i' → logprob: -12.543045043945312
    7. ' ' → logprob: -12.793045043945312
    8. 'a' → logprob: -12.793045043945312
    9. '   ' → logprob: -13.293045043945312
    10. ' y' → logprob: -13.668045043945312

Token 305: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3711825907230377
    2. 'in' → logprob: -1.2461825609207153
    3. 'i' → logprob: -4.121182441711426
    4. '_' → logprob: -5.496182441711426
    5. ' i' → logprob: -6.621182441711426
    6. 'n' → logprob: -7.871182441711426
    7. ' ' → logprob: -8.371182441711426
    8. '_i' → logprob: -9.746182441711426
    9. 's' → logprob: -9.871182441711426
    10. '   ' → logprob: -10.496182441711426

Token 306: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804183006286621
    2. ' range' → logprob: -3.288041830062866
    3. '   ' → logprob: -16.038042068481445
    4. ' ' → logprob: -16.288042068481445
    5. 'r' → logprob: -16.913042068481445
    6. '(range' → logprob: -17.038042068481445
    7. 'ra' → logprob: -18.038042068481445
    8. '	range' → logprob: -18.288042068481445
    9. 'rang' → logprob: -18.538042068481445
    10. '  ' → logprob: -18.538042068481445

Token 307: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3868769407272339
    2. '(N' → logprob: -1.1368769407272339
    3. '(n' → logprob: -12.761877059936523
    4. '1' → logprob: -13.011877059936523
    5. 'N' → logprob: -14.761877059936523
    6. '(len' → logprob: -15.386877059936523
    7. ' (' → logprob: -16.386877059936523
    8. '   ' → logprob: -17.136877059936523
    9. '(
' → logprob: -17.261877059936523
    10. ' ' → logprob: -17.636877059936523

Token 308: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005441382061690092
    2. '):' → logprob: -5.505441188812256
    3. '):
' → logprob: -7.255441188812256
    4. ' +' → logprob: -7.380441188812256
    5. '   ' → logprob: -11.130441665649414
    6. '1' → logprob: -12.005441665649414
    7. '-' → logprob: -12.505441665649414
    8. '
' → logprob: -13.130441665649414
    9. '+
' → logprob: -13.130441665649414
    10. ')' → logprob: -14.130441665649414

Token 309: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08934072405099869
    2. ' for' → logprob: -2.7143406867980957
    3. '       ' → logprob: -4.089340686798096
    4. 'for' → logprob: -6.089340686798096
    5. '	for' → logprob: -8.964341163635254
    6. '<|end|>' → logprob: -10.589341163635254
    7. '	   ' → logprob: -11.089341163635254
    8. ',' → logprob: -11.964341163635254
    9. '```' → logprob: -12.214341163635254
    10. ' and' → logprob: -12.339341163635254

Token 310: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002512285253033042
    2. 't' → logprob: -6.002512454986572
    3. ' for' → logprob: -10.752511978149414
    4. '   ' → logprob: -11.127511978149414
    5. ' t' → logprob: -16.252511978149414
    6. 'T' → logprob: -16.252511978149414
    7. '	for' → logprob: -16.252511978149414
    8. ' ' → logprob: -16.752511978149414
    9. '       ' → logprob: -16.752511978149414
    10. '  ' → logprob: -18.377511978149414

Token 311: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03368685021996498
    2. ' t' → logprob: -3.408686876296997
    3. 'm' → logprob: -10.658686637878418
    4. '(t' → logprob: -11.283686637878418
    5. ' m' → logprob: -13.908686637878418
    6. '	t' → logprob: -14.283686637878418
    7. 'M' → logprob: -14.533686637878418
    8. '[t' → logprob: -14.533686637878418
    9. ' ' → logprob: -14.658686637878418
    10. '   ' → logprob: -14.783686637878418

Token 312: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10023114830255508
    2. 'in' → logprob: -2.350231170654297
    3. ' ' → logprob: -11.350231170654297
    4. '   ' → logprob: -12.100231170654297
    5. '       ' → logprob: -12.725231170654297
    6. '    ' → logprob: -13.725231170654297
    7. 's' → logprob: -14.225231170654297
    8. '  ' → logprob: -14.350231170654297
    9. '(' → logprob: -14.975231170654297
    10. 't' → logprob: -15.100231170654297

Token 313: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05689079686999321
    2. '(M' → logprob: -3.0568907260894775
    3. 'M' → logprob: -5.431890964508057
    4. ' range' → logprob: -5.556890964508057
    5. '   ' → logprob: -11.181890487670898
    6. '(range' → logprob: -11.806890487670898
    7. ' M' → logprob: -12.056890487670898
    8. ' ' → logprob: -13.556890487670898
    9. '0' → logprob: -13.931890487670898
    10. '       ' → logprob: -14.181890487670898

Token 314: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -9.65101717156358e-05
    2. 'M' → logprob: -9.500096321105957
    3. '(' → logprob: -10.875096321105957
    4. '   ' → logprob: -14.125096321105957
    5. '(S' → logprob: -14.875096321105957
    6. '(s' → logprob: -15.125096321105957
    7. ' (' → logprob: -15.375096321105957
    8. '((' → logprob: -15.875096321105957
    9. '(
' → logprob: -16.125097274780273
    10. 's' → logprob: -16.250097274780273

Token 315: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02443721704185009
    2. '+' → logprob: -4.024437427520752
    3. '):
' → logprob: -5.149437427520752
    4. ':' → logprob: -8.524436950683594
    5. '       ' → logprob: -9.149436950683594
    6. ')' → logprob: -9.274436950683594
    7. '   ' → logprob: -10.649436950683594
    8. ' ):' → logprob: -11.399436950683594
    9. ' +' → logprob: -12.024436950683594
    10. '           ' → logprob: -12.274436950683594

Token 316: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23130057752132416
    2. '       ' → logprob: -1.6063005924224854
    3. ' if' → logprob: -5.481300354003906
    4. 'if' → logprob: -6.856300354003906
    5. '        ' → logprob: -8.856300354003906
    6. '<|end|>' → logprob: -9.106300354003906
    7. '   ' → logprob: -9.231300354003906
    8. ':' → logprob: -10.356300354003906
    9. '	       ' → logprob: -10.481300354003906
    10. ',' → logprob: -10.481300354003906

Token 317: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007519430946558714
    2. ' if' → logprob: -5.507519245147705
    3. '           ' → logprob: -6.007519245147705
    4. 'dp' → logprob: -7.007519245147705
    5. '               ' → logprob: -9.632519721984863
    6. ' dp' → logprob: -13.257519721984863
    7. 'ans' → logprob: -13.757519721984863
    8. '       ' → logprob: -15.382519721984863
    9. '            ' → logprob: -15.507519721984863
    10. 'If' → logprob: -15.632519721984863

Token 318: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.0126840758603066e-05
    2. ' S' → logprob: -10.250040054321289
    3. 'dp' → logprob: -12.625040054321289
    4. '   ' → logprob: -14.375040054321289
    5. 's' → logprob: -14.750040054321289
    6. '(S' → logprob: -15.125040054321289
    7. ' ' → logprob: -16.62504005432129
    8. '     ' → logprob: -17.75004005432129
    9. '	S' → logprob: -18.00004005432129
    10. '0' → logprob: -18.00004005432129

Token 319: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -2.15310683415737e-05
    2. '[' → logprob: -11.750021934509277
    3. '==' → logprob: -12.500021934509277
    4. 's' → logprob: -12.625021934509277
    5. ' [' → logprob: -12.750021934509277
    6. ' ==' → logprob: -13.750021934509277
    7. '[
' → logprob: -14.250021934509277
    8. '[t' → logprob: -14.500021934509277
    9. '][' → logprob: -14.875021934509277
    10. ']' → logprob: -15.250021934509277

Token 320: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05831234157085419
    2. ']==' → logprob: -2.93331241607666
    3. '==' → logprob: -5.68331241607666
    4. ' ==' → logprob: -11.05831241607666
    5. '[' → logprob: -13.30831241607666
    6. '=' → logprob: -13.80831241607666
    7. '-' → logprob: -14.18331241607666
    8. ')==' → logprob: -14.93331241607666
    9. ']!=' → logprob: -14.93331241607666
    10. ')' → logprob: -15.05831241607666

Token 321: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -2.5941604690160602e-05
    2. ' T' → logprob: -10.625025749206543
    3. 'S' → logprob: -14.750025749206543
    4. ' ' → logprob: -15.000025749206543
    5. '   ' → logprob: -15.000025749206543
    6. '           ' → logprob: -15.375025749206543
    7. 't' → logprob: -15.875025749206543
    8. '       ' → logprob: -17.00002670288086
    9. '<|end|>' → logprob: -17.25002670288086
    10. '  ' → logprob: -17.37502670288086

Token 322: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -5.6457742175552994e-05
    2. 't' → logprob: -9.875056266784668
    3. '[' → logprob: -13.375056266784668
    4. '   ' → logprob: -13.750056266784668
    5. '[
' → logprob: -14.250056266784668
    6. '[s' → logprob: -14.375056266784668
    7. ' [' → logprob: -15.375056266784668
    8. '
' → logprob: -16.000057220458984
    9. '(t' → logprob: -16.250057220458984
    10. ' t' → logprob: -16.250057220458984

Token 323: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23865704238414764
    2. ']:' → logprob: -1.863656997680664
    3. '):
' → logprob: -3.113656997680664
    4. ':' → logprob: -4.738656997680664
    5. ']:
' → logprob: -5.738656997680664
    6. ']):' → logprob: -7.863656997680664
    7. ']' → logprob: -9.113656997680664
    8. ')' → logprob: -9.488656997680664
    9. ':
' → logprob: -10.113656997680664
    10. ']):
' → logprob: -10.363656997680664

Token 324: '               ' (ID: 506)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.017443208023905754
    2. '               ' → logprob: -4.5174431800842285
    3. ' dp' → logprob: -5.1424431800842285
    4. '           ' → logprob: -7.6424431800842285
    5. '	dp' → logprob: -10.392443656921387
    6. '(dp' → logprob: -12.017443656921387
    7. 'ans' → logprob: -12.642443656921387
    8. '_dp' → logprob: -13.267443656921387
    9. '
' → logprob: -13.392443656921387
    10. '.dp' → logprob: -13.517443656921387

Token 325: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0043756477534770966
    2. ' dp' → logprob: -5.754375457763672
    3. '                   ' → logprob: -6.754375457763672
    4. '               ' → logprob: -10.754375457763672
    5. '	dp' → logprob: -12.254375457763672
    6. 'ans' → logprob: -12.754375457763672
    7. '   ' → logprob: -14.004375457763672
    8. '(dp' → logprob: -14.754375457763672
    9. '                       ' → logprob: -15.254375457763672
    10. '
' → logprob: -15.504375457763672

Token 326: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.12500286102295
    3. 's' → logprob: -14.75000286102295
    4. ' [' → logprob: -15.37500286102295
    5. '[
' → logprob: -15.87500286102295
    6. '[S' → logprob: -16.125003814697266
    7. '][' → logprob: -16.375003814697266
    8. '[t' → logprob: -16.750003814697266
    9. '[i' → logprob: -17.125003814697266
    10. '[n' → logprob: -17.500003814697266

Token 327: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004922650754451752
    2. '[t' → logprob: -5.504922866821289
    3. '+' → logprob: -7.254922866821289
    4. ' ][' → logprob: -10.004922866821289
    5. '[' → logprob: -10.504922866821289
    6. ']' → logprob: -10.504922866821289
    7. 't' → logprob: -11.504922866821289
    8. '[s' → logprob: -11.504922866821289
    9. '   ' → logprob: -12.379922866821289
    10. '"][' → logprob: -13.379922866821289

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.500001907348633
    4. '+' → logprob: -17.875001907348633
    5. '
' → logprob: -18.250001907348633
    6. '           ' → logprob: -18.375001907348633
    7. '][' → logprob: -19.125001907348633
    8. '```' → logprob: -19.750001907348633
    9. 's' → logprob: -20.187501907348633
    10. '       ' → logprob: -20.187501907348633

Token 329: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000443420372903347
    2. '[t' → logprob: -8.250443458557129
    3. ' ][' → logprob: -9.375443458557129
    4. 't' → logprob: -10.125443458557129
    5. '[s' → logprob: -10.375443458557129
    6. 's' → logprob: -11.625443458557129
    7. ']' → logprob: -12.000443458557129
    8. '"][' → logprob: -12.750443458557129
    9. '
' → logprob: -13.000443458557129
    10. '[' → logprob: -13.125443458557129

Token 330: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.9266199160483666e-05
    2. ' t' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.375019073486328
    4. '
' → logprob: -17.375019073486328
    5. '	t' → logprob: -17.625019073486328
    6. ' ' → logprob: -17.750019073486328
    7. '  ' → logprob: -18.875019073486328
    8. '[t' → logprob: -19.125019073486328
    9. ']' → logprob: -19.500019073486328
    10. '(t' → logprob: -19.625019073486328

Token 331: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -13.50000286102295
    3. ' +' → logprob: -13.75000286102295
    4. '+
' → logprob: -16.375001907348633
    5. ']+' → logprob: -17.500001907348633
    6. ']' → logprob: -17.750001907348633
    7. '+]' → logprob: -17.750001907348633
    8. '[' → logprob: -18.625001907348633
    9. ']+=' → logprob: -18.750001907348633
    10. '＋' → logprob: -19.625001907348633

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.875003814697266
    4. '+' → logprob: -16.875003814697266
    5. '2' → logprob: -17.000003814697266
    6. ']' → logprob: -17.125003814697266
    7. '```' → logprob: -17.750003814697266
    8. '  ' → logprob: -18.750003814697266
    9. '    ' → logprob: -19.187503814697266
    10. '           ' → logprob: -19.500003814697266

Token 333: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0042654890567064285
    2. ']=' → logprob: -5.504265308380127
    3. ']+=' → logprob: -9.254265785217285
    4. ']=(' → logprob: -9.379265785217285
    5. '=' → logprob: -12.004265785217285
    6. 'd' → logprob: -15.379265785217285
    7. 'dp' → logprob: -15.504265785217285
    8. ')' → logprob: -15.754265785217285
    9. ' ]' → logprob: -16.50426483154297
    10. ' =' → logprob: -17.25426483154297

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.3319124011322856e-05
    2. ' =' → logprob: -10.750022888183594
    3. '+=' → logprob: -13.250022888183594
    4. '=(' → logprob: -18.625022888183594
    5. '.=' → logprob: -19.250022888183594
    6. 'dp' → logprob: -19.750022888183594
    7. '=d' → logprob: -20.000022888183594
    8. '=int' → logprob: -20.625022888183594
    9. ']=' → logprob: -21.375022888183594
    10. '＝' → logprob: -21.500022888183594

Token 335: ' SUM' (ID: 52418)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.4233981668949127
    2. 'dp' → logprob: -1.5483981370925903
    3. '(' → logprob: -2.04839825630188
    4. '(S' → logprob: -6.298398017883301
    5. '1' → logprob: -6.798398017883301
    6. ' (' → logprob: -8.7983980178833
    7. '(ans' → logprob: -9.0483980178833
    8. '((' → logprob: -9.0483980178833
    9. '(s' → logprob: -9.5483980178833
    10. '(sum' → logprob: -10.2983980178833

Token 336: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -2.534558552724775e-05
    2. 's' → logprob: -10.625025749206543
    3. '   ' → logprob: -14.875025749206543
    4. '[' → logprob: -15.250025749206543
    5. ' ' → logprob: -16.500024795532227
    6. '
' → logprob: -17.000024795532227
    7. '][' → logprob: -17.125024795532227
    8. '[S' → logprob: -17.375024795532227
    9. ' [' → logprob: -17.500024795532227
    10. '	s' → logprob: -18.500024795532227

Token 337: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.031454335898160934
    2. '[t' → logprob: -3.53145432472229
    3. 't' → logprob: -6.406454563140869
    4. ' ][' → logprob: -10.906454086303711
    5. '   ' → logprob: -11.406454086303711
    6. ']' → logprob: -11.906454086303711
    7. ' ' → logprob: -12.906454086303711
    8. '[' → logprob: -13.031454086303711
    9. '
' → logprob: -13.156454086303711
    10. ' t' → logprob: -13.781454086303711

Token 338: '1' (ID: 16)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.30125394463539124
    2. '[t' → logprob: -1.5512539148330688
    3. '][' → logprob: -3.0512540340423584
    4. ' t' → logprob: -8.426254272460938
    5. '
' → logprob: -8.426254272460938
    6. ' ' → logprob: -9.426254272460938
    7. '   ' → logprob: -9.676254272460938
    8. ' [' → logprob: -9.926254272460938
    9. '1' → logprob: -10.551254272460938
    10. '[' → logprob: -10.676254272460938

Token 339: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.036461930721998215
    2. '[t' → logprob: -3.41146183013916
    3. 't' → logprob: -5.91146183013916
    4. '[' → logprob: -10.28646183013916
    5. ' ][' → logprob: -10.41146183013916
    6. ']' → logprob: -11.91146183013916
    7. '   ' → logprob: -12.03646183013916
    8. ' [' → logprob: -12.16146183013916
    9. ' ' → logprob: -12.28646183013916
    10. 's' → logprob: -12.78646183013916

Token 340: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.9040898880339228e-05
    2. ' t' → logprob: -10.500028610229492
    3. ' ' → logprob: -14.000028610229492
    4. '   ' → logprob: -15.125028610229492
    5. '	t' → logprob: -15.750028610229492
    6. '[t' → logprob: -16.250028610229492
    7. '
' → logprob: -16.750028610229492
    8. '(t' → logprob: -17.125028610229492
    9. '<t' → logprob: -17.250028610229492
    10. '`t' → logprob: -17.375028610229492

Token 341: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13290196657180786
    2. ']+' → logprob: -2.382901906967163
    3. '+' → logprob: -3.507901906967163
    4. '1' → logprob: -6.882902145385742
    5. ']+=' → logprob: -7.507902145385742
    6. '[' → logprob: -8.507902145385742
    7. 't' → logprob: -9.007902145385742
    8. ']
' → logprob: -9.632902145385742
    9. ']%' → logprob: -9.632902145385742
    10. ']*' → logprob: -10.507902145385742

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1160349458805285e-05
    2. '2' → logprob: -12.125011444091797
    3. ' ' → logprob: -12.750011444091797
    4. '   ' → logprob: -13.750011444091797
    5. '+' → logprob: -14.750011444091797
    6. '0' → logprob: -14.875011444091797
    7. '           ' → logprob: -15.500011444091797
    8. '
' → logprob: -15.750011444091797
    9. 't' → logprob: -16.125011444091797
    10. '       ' → logprob: -16.312511444091797

Token 343: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4646221697330475
    2. ']+' → logprob: -1.464622139930725
    3. '-' → logprob: -1.964622139930725
    4. ' -' → logprob: -8.589622497558594
    5. '   ' → logprob: -10.714622497558594
    6. '1' → logprob: -11.839622497558594
    7. 's' → logprob: -11.964622497558594
    8. ']-' → logprob: -12.339622497558594
    9. '+' → logprob: -12.464622497558594
    10. '−' → logprob: -12.714622497558594

Token 344: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0067201098427176476
    2. ' +' → logprob: -5.006720066070557
    3. '
' → logprob: -13.381720542907715
    4. '1' → logprob: -13.881720542907715
    5. '               ' → logprob: -14.131720542907715
    6. '           ' → logprob: -14.631720542907715
    7. '+
' → logprob: -15.006720542907715
    8. '()+' → logprob: -15.131720542907715
    9. '                   ' → logprob: -16.0067195892334
    10. 'ans' → logprob: -16.6317195892334

Token 345: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. 'ans' → logprob: -11.875012397766113
    3. '   ' → logprob: -12.500012397766113
    4. ' ' → logprob: -14.125012397766113
    5. '           ' → logprob: -15.125012397766113
    6. 'dp' → logprob: -15.500012397766113
    7. '
' → logprob: -15.750012397766113
    8. '       ' → logprob: -16.750011444091797
    9. '(ans' → logprob: -17.750011444091797
    10. '  ' → logprob: -18.000011444091797

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. 'ans' → logprob: -10.625032424926758
    3. '   ' → logprob: -12.625032424926758
    4. ' ' → logprob: -12.875032424926758
    5. 'dp' → logprob: -14.000032424926758
    6. '
' → logprob: -14.625032424926758
    7. '           ' → logprob: -16.000032424926758
    8. '  ' → logprob: -16.875032424926758
    9. '       ' → logprob: -16.875032424926758
    10. '2' → logprob: -17.000032424926758

Token 347: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10100878775119781
    2. '
' → logprob: -2.351008892059326
    3. ' %' → logprob: -8.226008415222168
    4. ')' → logprob: -8.851008415222168
    5. '
' → logprob: -9.101008415222168
    6. '%' → logprob: -9.351008415222168
    7. '               ' → logprob: -9.476008415222168
    8. '            
' → logprob: -9.976008415222168
    9. '       ' → logprob: -10.476008415222168
    10. ']' → logprob: -12.101008415222168

Token 348: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19580835103988647
    2. '
' → logprob: -1.8208084106445312
    3. '            
' → logprob: -4.320808410644531
    4. '
' → logprob: -7.320808410644531
    5. '               ' → logprob: -7.445808410644531
    6. ' 
' → logprob: -7.570808410644531
    7. '                
' → logprob: -8.195808410644531
    8. '\n' → logprob: -8.945808410644531
    9. '        
' → logprob: -10.070808410644531
    10. '		' → logprob: -10.195808410644531

Token 349: ' ans' (ID: 3345)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014527787454426289
    2. '               ' → logprob: -5.014527797698975
    3. 'if' → logprob: -5.264527797698975
    4. 'ans' (adapté à ' ans') → logprob: -6.764527797698975
    5. ' dp' → logprob: -7.014527797698975
    6. '           ' → logprob: -8.514527320861816
    7. 'SUM' → logprob: -8.639527320861816
    8. ' if' → logprob: -9.889527320861816
    9. '
' → logprob: -9.889527320861816
    10. '                   ' → logprob: -11.014527320861816

Token 350: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6931716203689575
    2. ' +=' → logprob: -1.4431716203689575
    3. '%=' → logprob: -1.6931716203689575
    4. ' =' → logprob: -2.943171501159668
    5. '=' → logprob: -3.818171501159668
    6. ' %=' → logprob: -5.318171501159668
    7. '+=(' → logprob: -9.068171501159668
    8. '*=' → logprob: -9.443171501159668
    9. '=(' → logprob: -9.943171501159668
    10. '=max' → logprob: -10.318171501159668

Token 351: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2870383560657501
    2. '(dp' → logprob: -2.0370383262634277
    3. '(max' → logprob: -2.1620383262634277
    4. 'max' → logprob: -5.662038326263428
    5. '(' → logprob: -8.287038803100586
    6. ' (' → logprob: -8.412038803100586
    7. '(min' → logprob: -11.037038803100586
    8. 'dp' → logprob: -11.287038803100586
    9. ' max' → logprob: -12.287038803100586
    10. 'ans' → logprob: -12.287038803100586

Token 352: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0012123758206143975
    2. ' ans' → logprob: -6.7512125968933105
    3. '(ans' → logprob: -10.126212120056152
    4. 'dp' → logprob: -14.001212120056152
    5. '	ans' → logprob: -14.751212120056152
    6. '           ' → logprob: -14.876212120056152
    7. '               ' → logprob: -15.751212120056152
    8. '
' → logprob: -15.876212120056152
    9. '   ' → logprob: -16.00121307373047
    10. '                   ' → logprob: -16.87621307373047

Token 353: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3870665431022644
    2. '+' → logprob: -1.1370666027069092
    3. ' *' → logprob: -8.762066841125488
    4. '*' → logprob: -10.262066841125488
    5. '%' → logprob: -13.387066841125488
    6. ')' → logprob: -13.637066841125488
    7. 'dp' → logprob: -14.637066841125488
    8. '+p' → logprob: -15.012066841125488
    9. ' ' → logprob: -15.387066841125488
    10. '+d' → logprob: -17.012065887451172

Token 354: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0052362410351634026
    2. ' dp' → logprob: -5.2552361488342285
    3. '               ' → logprob: -13.880236625671387
    4. '	dp' → logprob: -14.380236625671387
    5. '           ' → logprob: -14.630236625671387
    6. '                   ' → logprob: -15.380236625671387
    7. '
' → logprob: -16.38023567199707
    8. '   ' → logprob: -17.13023567199707
    9. '(dp' → logprob: -17.13023567199707
    10. '                ' → logprob: -17.75523567199707

Token 355: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0011706985533237457
    2. 's' → logprob: -6.751170635223389
    3. '[' → logprob: -15.126171112060547
    4. ' [' → logprob: -16.376171112060547
    5. '][' → logprob: -16.626171112060547
    6. '```' → logprob: -17.251171112060547
    7. ' s' → logprob: -17.751171112060547
    8. '[
' → logprob: -17.751171112060547
    9. ')[' → logprob: -17.876171112060547
    10. '	s' → logprob: -18.251171112060547

Token 356: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017170661594718695
    2. 's' → logprob: -6.5017170906066895
    3. '1' → logprob: -9.251716613769531
    4. '[' → logprob: -9.751716613769531
    5. '[s' → logprob: -10.126716613769531
    6. '][' → logprob: -11.001716613769531
    7. '+
' → logprob: -14.126716613769531
    8. ' +' → logprob: -14.376716613769531
    9. '
' → logprob: -14.626716613769531
    10. '```' → logprob: -15.126716613769531

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.000001907348633
    3. '```' → logprob: -15.375001907348633
    4. '
' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.375001907348633
    6. '[' → logprob: -16.875001907348633
    7. '+' → logprob: -17.000001907348633
    8. '][' → logprob: -17.062501907348633
    9. '           ' → logprob: -18.125001907348633
    10. 's' → logprob: -18.125001907348633

Token 358: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00013250234769657254
    2. '[t' → logprob: -9.62513256072998
    3. ']' → logprob: -10.25013256072998
    4. ' ][' → logprob: -11.00013256072998
    5. ')[' → logprob: -11.87513256072998
    6. '[' → logprob: -12.75013256072998
    7. ')][' → logprob: -14.37513256072998
    8. ']][' → logprob: -14.37513256072998
    9. '"][' → logprob: -14.62513256072998
    10. ')' → logprob: -14.62513256072998

Token 359: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00018852073117159307
    2. ' t' → logprob: -9.375188827514648
    3. '][' → logprob: -9.375188827514648
    4. '[t' → logprob: -11.375188827514648
    5. '   ' → logprob: -12.875188827514648
    6. '
' → logprob: -13.500188827514648
    7. '	t' → logprob: -13.875188827514648
    8. '(t' → logprob: -14.250188827514648
    9. ')t' → logprob: -14.750188827514648
    10. '1' → logprob: -15.625188827514648

Token 360: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3869515359401703
    2. '1' → logprob: -1.1369515657424927
    3. '[' → logprob: -10.386951446533203
    4. '```' → logprob: -10.886951446533203
    5. ']' → logprob: -11.636951446533203
    6. '   ' → logprob: -12.011951446533203
    7. ']+' → logprob: -12.386951446533203
    8. '
' → logprob: -12.386951446533203
    9. '])' → logprob: -13.136951446533203
    10. '][' → logprob: -13.511951446533203

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.750003814697266
    3. '```' → logprob: -13.750003814697266
    4. '
' → logprob: -14.750003814697266
    5. '+' → logprob: -15.125003814697266
    6. '   ' → logprob: -15.750003814697266
    7. ']' → logprob: -16.500003814697266
    8. '...' → logprob: -16.500003814697266
    9. '2' → logprob: -16.812503814697266
    10. '][' → logprob: -17.937503814697266

Token 362: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006134323193691671
    2. ' )' → logprob: -7.750613212585449
    3. ')%' → logprob: -8.62561321258545
    4. '   ' → logprob: -13.25061321258545
    5. '           ' → logprob: -14.50061321258545
    6. '       ' → logprob: -15.00061321258545
    7. '-' → logprob: -15.62561321258545
    8. ')
' → logprob: -16.125614166259766
    9. '）' → logprob: -16.500614166259766
    10. '                   ' → logprob: -16.750614166259766

Token 363: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.022660383954644203
    2. ' %' → logprob: -3.897660493850708
    3. ')' → logprob: -6.897660255432129
    4. ')%' → logprob: -7.022660255432129
    5. '           ' → logprob: -9.397660255432129
    6. '%D' → logprob: -9.897660255432129
    7. '               ' → logprob: -10.647660255432129
    8. ']%' → logprob: -11.647660255432129
    9. '%=' → logprob: -12.147660255432129
    10. '%A' → logprob: -12.147660255432129

Token 364: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.339278580620885e-06
    2. ' MOD' → logprob: -13.000001907348633
    3. '(M' → logprob: -20.250001907348633
    4. '_MOD' → logprob: -21.875001907348633
    5. 'MO' → logprob: -23.500001907348633
    6. '.MOD' → logprob: -23.500001907348633
    7. '(' → logprob: -23.750001907348633
    8. 'MD' → logprob: -23.875001907348633
    9. 'MODE' → logprob: -25.000001907348633
    10. '(Mod' → logprob: -25.375001907348633

Token 365: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005282493657432497
    2. '       ' → logprob: -8.500528335571289
    3. '            
' → logprob: -8.625528335571289
    4. '
' → logprob: -10.000528335571289
    5. 'else' → logprob: -10.125528335571289
    6. '        
' → logprob: -11.125528335571289
    7. 'for' → logprob: -11.125528335571289
    8. '#' → logprob: -11.500528335571289
    9. 'print' → logprob: -12.125528335571289
    10. '               ' → logprob: -12.625528335571289

Token 366: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004900033236481249
    2. '            
' → logprob: -8.375490188598633
    3. '       ' → logprob: -8.625490188598633
    4. '        
' → logprob: -10.625490188598633
    5. 'else' → logprob: -10.750490188598633
    6. '
' → logprob: -11.250490188598633
    7. '#' → logprob: -11.875490188598633
    8. '<|end|>' → logprob: -13.500490188598633
    9. '    
' → logprob: -13.500490188598633
    10. 'for' → logprob: -13.625490188598633

Token 367: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6126220226287842
    2. 'SUM' → logprob: -0.9876220226287842
    3. '       ' → logprob: -2.487622022628784
    4. '   ' → logprob: -6.987622261047363
    5. 'for' → logprob: -7.487622261047363
    6. 'else' (adapté à ' else') → logprob: -7.487622261047363
    7. ' SUM' → logprob: -7.862622261047363
    8. '#' → logprob: -10.862622261047363
    9. ' for' → logprob: -11.112622261047363
    10. 'print' → logprob: -11.737622261047363

Token 368: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18791718780994415
    2. ':
' → logprob: -1.9379172325134277
    3. ':' → logprob: -3.6879172325134277
    4. 'dp' → logprob: -6.937917232513428
    5. '           ' → logprob: -7.312917232513428
    6. '```' → logprob: -8.56291675567627
    7. ' dp' → logprob: -9.43791675567627
    8. '                   ' → logprob: -9.56291675567627
    9. '(dp' → logprob: -10.18791675567627
    10. '              ' → logprob: -10.43791675567627

Token 369: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42018774151802063
    2. 'dp' → logprob: -1.1701877117156982
    3. ' dp' → logprob: -3.4201877117156982
    4. '           ' → logprob: -10.795187950134277
    5. '	dp' → logprob: -10.920187950134277
    6. '                ' → logprob: -12.170187950134277
    7. '              ' → logprob: -12.170187950134277
    8. '                   ' → logprob: -12.545187950134277
    9. '             ' → logprob: -12.920187950134277
    10. '```' → logprob: -13.170187950134277

Token 370: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -3.869639476761222e-05
    2. ' dp' → logprob: -10.250039100646973
    3. '               ' → logprob: -13.125039100646973
    4. '           ' → logprob: -14.125039100646973
    5. '	dp' → logprob: -14.625039100646973
    6. 'pass' → logprob: -17.375038146972656
    7. '(dp' → logprob: -17.750038146972656
    8. '
' → logprob: -19.875038146972656
    9. '0' → logprob: -20.000038146972656
    10. 'dj' → logprob: -20.375038146972656

Token 371: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -4.36574100604048e-06
    2. 's' → logprob: -12.375004768371582
    3. '[' → logprob: -16.500003814697266
    4. ' [' → logprob: -17.500003814697266
    5. '[S' → logprob: -18.375003814697266
    6. '
' → logprob: -18.875003814697266
    7. '][' → logprob: -18.875003814697266
    8. '	s' → logprob: -19.000003814697266
    9. '[
' → logprob: -19.375003814697266
    10. '[p' → logprob: -19.500003814697266

Token 372: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00687769940122962
    2. '][' → logprob: -5.006877899169922
    3. '1' → logprob: -9.381877899169922
    4. '[' → logprob: -10.631877899169922
    5. '[s' → logprob: -11.131877899169922
    6. 's' → logprob: -11.631877899169922
    7. '           ' → logprob: -11.881877899169922
    8. ' +' → logprob: -11.881877899169922
    9. ' ][' → logprob: -13.006877899169922
    10. ']' → logprob: -13.256877899169922

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.875006675720215
    4. '0' → logprob: -15.750006675720215
    5. '][' → logprob: -16.5000057220459
    6. '```' → logprob: -16.7500057220459
    7. '
' → logprob: -17.1250057220459
    8. '           ' → logprob: -17.3125057220459
    9. '[' → logprob: -17.4375057220459
    10. '+' → logprob: -17.4375057220459

Token 374: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.227250610711053e-05
    2. '[t' → logprob: -10.750041961669922
    3. ')[' → logprob: -11.625041961669922
    4. ']' → logprob: -12.125041961669922
    5. '"][' → logprob: -13.000041961669922
    6. ' ][' → logprob: -13.250041961669922
    7. ''][' → logprob: -14.250041961669922
    8. '[' → logprob: -14.375041961669922
    9. '}[' → logprob: -15.125041961669922
    10. '>[' → logprob: -15.250041961669922

Token 375: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.282920129597187e-05
    2. '0' → logprob: -11.500012397766113
    3. ' t' → logprob: -13.250012397766113
    4. '[t' → logprob: -15.000012397766113
    5. '   ' → logprob: -15.000012397766113
    6. ' ' → logprob: -16.75001335144043
    7. ')t' → logprob: -17.00001335144043
    8. '`t' → logprob: -17.75001335144043
    9. '	t' → logprob: -18.00001335144043
    10. ']' → logprob: -18.12501335144043

Token 376: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22572028636932373
    2. '1' → logprob: -1.6007202863693237
    3. '][' → logprob: -8.350720405578613
    4. '           ' → logprob: -10.600720405578613
    5. ']' → logprob: -11.350720405578613
    6. '[' → logprob: -11.725720405578613
    7. ' +' → logprob: -12.100720405578613
    8. '   ' → logprob: -12.600720405578613
    9. '       ' → logprob: -12.600720405578613
    10. ' ' → logprob: -12.600720405578613

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.375005722045898
    3. '
' → logprob: -14.625005722045898
    4. '   ' → logprob: -15.000005722045898
    5. ']' → logprob: -15.125005722045898
    6. '0' → logprob: -15.375005722045898
    7. '```' → logprob: -15.500005722045898
    8. '           ' → logprob: -16.4375057220459
    9. '+' → logprob: -16.6875057220459
    10. '2' → logprob: -17.1875057220459

Token 378: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015709491446614265
    2. ']' → logprob: -4.765709400177002
    3. ']=' → logprob: -5.015709400177002
    4. ' =' → logprob: -7.765709400177002
    5. ')' → logprob: -11.89070987701416
    6. ')=' → logprob: -12.39070987701416
    7. '[' → logprob: -13.64070987701416
    8. '0' → logprob: -14.64070987701416
    9. ']+=' → logprob: -16.890708923339844
    10. ',' → logprob: -17.265708923339844

Token 379: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00012356207298580557
    2. ' =' → logprob: -9.000123977661133
    3. '+=' → logprob: -16.750123977661133
    4. '0' → logprob: -18.125123977661133
    5. '.=' → logprob: -19.375123977661133
    6. ']=' → logprob: -19.500123977661133
    7. '%=' → logprob: -19.875123977661133
    8. '=
' → logprob: -20.125123977661133
    9. '==' → logprob: -20.500123977661133
    10. ')' → logprob: -20.500123977661133

Token 380: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.000003814697266
    4. '۰' → logprob: -17.250003814697266
    5. '(' → logprob: -17.875003814697266
    6. '```' → logprob: -18.125003814697266
    7. '00' → logprob: -18.812503814697266
    8. '  ' → logprob: -19.375003814697266
    9. '﻿' → logprob: -19.437503814697266
    10. ' ' → logprob: -19.437503814697266

Token 381: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -13.000004768371582
    3. '(' → logprob: -13.125004768371582
    4. 'MOD' → logprob: -15.375004768371582
    5. 'dp' → logprob: -16.8750057220459
    6. '   ' → logprob: -17.2500057220459
    7. '
' → logprob: -17.5000057220459
    8. '۰' → logprob: -17.6250057220459
    9. 'INF' → logprob: -17.6250057220459
    10. '(M' → logprob: -17.6250057220459

Token 382: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025018174201250076
    2. '       ' → logprob: -6.127501964569092
    3. '
' → logprob: -8.252501487731934
    4. '        
' → logprob: -10.252501487731934
    5. '            
' → logprob: -11.752501487731934
    6. 'for' → logprob: -12.627501487731934
    7. '
' → logprob: -13.252501487731934
    8. '#' → logprob: -13.252501487731934
    9. '   ' → logprob: -13.502501487731934
    10. '          ' → logprob: -14.127501487731934

Token 383: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00682702474296093
    2. '
' → logprob: -5.131826877593994
    3. '            
' → logprob: -8.006827354431152
    4. '        
' → logprob: -8.631827354431152
    5. '       ' → logprob: -9.006827354431152
    6. '
' → logprob: -9.506827354431152
    7. 'for' → logprob: -9.631827354431152
    8. 'else' → logprob: -9.756827354431152
    9. 'SUM' → logprob: -11.381827354431152
    10. '#' → logprob: -11.631827354431152

Token 384: ' inutile' (ID: 157748)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16098472476005554
    2. 'SUM' → logprob: -2.035984754562378
    3. '       ' → logprob: -4.160984516143799
    4. 'else' → logprob: -6.410984516143799
    5. '
' → logprob: -8.160984992980957
    6. '#' → logprob: -8.535984992980957
    7. '```' → logprob: -9.160984992980957
    8. '   ' → logprob: -9.660984992980957
    9. 'sum' → logprob: -9.660984992980957
    10. ' SUM' → logprob: -10.285984992980957

Token 385: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03816806897521019
    2. '
' → logprob: -3.413167953491211
    3. '<|end|>' → logprob: -6.163167953491211
    4. '            
' → logprob: -6.913167953491211
    5. '       ' → logprob: -7.788167953491211
    6. 'else' → logprob: -8.913167953491211
    7. '\n' → logprob: -9.038167953491211
    8. '<|end|>' → logprob: -9.163167953491211
    9. '        
' → logprob: -9.288167953491211
    10. '    
' → logprob: -9.788167953491211

Token 386: ' Python' (ID: 26534)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.22296766936779022
    2. 'fait' → logprob: -2.8479676246643066
    3. 'ce' → logprob: -3.3479676246643066
    4. 'part' → logprob: -3.5979676246643066
    5. 'pr' → logprob: -3.8479676246643066
    6. 'cet' → logprob: -4.472967624664307
    7. 'else' → logprob: -4.722967624664307
    8. 'this' → logprob: -4.972967624664307
    9. 'c' → logprob: -4.972967624664307
    10. 'faite' → logprob: -5.347967624664307

Token 387: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009011129848659039
    2. '       ' → logprob: -5.009011268615723
    3. '
' → logprob: -6.759011268615723
    4. '        
' → logprob: -7.134011268615723
    5. '            
' → logprob: -8.509011268615723
    6. '
' → logprob: -10.509011268615723
    7. '#' → logprob: -11.259011268615723
    8. 'else' → logprob: -11.259011268615723
    9. '    
' → logprob: -11.509011268615723
    10. 'for' → logprob: -11.759011268615723

Token 388: ' mais' (ID: 2899)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.1666303277015686
    2. '           ' → logprob: -2.791630268096924
    3. 'but' → logprob: -3.166630268096924
    4. '<|end|>' → logprob: -3.416630268096924
    5. '            
' → logprob: -4.416630268096924
    6. '
' → logprob: -6.166630268096924
    7. '       ' → logprob: -7.791630268096924
    8. ' 
' → logprob: -8.041630744934082
    9. ' ' → logprob: -8.166630744934082
    10. '\n' → logprob: -8.291630744934082

Token 389: ' explic' (ID: 20781)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.35561904311180115
    2. '           ' → logprob: -1.9806190729141235
    3. '               ' → logprob: -1.9806190729141235
    4. ' pass' → logprob: -4.480618953704834
    5. '       ' → logprob: -5.980618953704834
    6. '            ' → logprob: -6.105618953704834
    7. '#' → logprob: -6.355618953704834
    8. '                   ' → logprob: -6.855618953704834
    9. '                ' → logprob: -7.355618953704834
    10. 'dp' → logprob: -7.605618953704834

Token 390: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.00016909420082811266
    2. 'it' → logprob: -9.500168800354004
    3. 'ique' → logprob: -11.000168800354004
    4. 'cite' → logprob: -11.125168800354004
    5. 'ic' → logprob: -11.375168800354004
    6. 'icit' → logprob: -11.625168800354004
    7. 'ité' → logprob: -11.750168800354004
    8. 'itte' → logprob: -11.875168800354004
    9. '```' → logprob: -12.000168800354004
    10. 'i' → logprob: -12.125168800354004

Token 391: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010344763286411762
    2. '       ' → logprob: -7.501034259796143
    3. '
' → logprob: -8.5010347366333
    4. '            
' → logprob: -9.2510347366333
    5. '        
' → logprob: -9.5010347366333
    6. 'else' → logprob: -10.1260347366333
    7. 'print' → logprob: -10.7510347366333
    8. '          ' → logprob: -12.0010347366333
    9. 'for' → logprob: -12.1260347366333
    10. '
' → logprob: -12.2510347366333

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004703999496996403
    2. '
' → logprob: -5.879703998565674
    3. '       ' → logprob: -6.504703998565674
    4. '        
' → logprob: -9.129704475402832
    5. 'for' → logprob: -9.379704475402832
    6. '
' → logprob: -9.379704475402832
    7. '            
' → logprob: -9.629704475402832
    8. 'else' → logprob: -11.004704475402832
    9. '#' → logprob: -11.629704475402832
    10. '```' → logprob: -11.754704475402832

Token 393: ' #' (ID: 1069)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.011574586853384972
    2. '           ' → logprob: -4.511574745178223
    3. '   ' → logprob: -8.511574745178223
    4. '       ' → logprob: -8.636574745178223
    5. ' SUM' → logprob: -9.761574745178223
    6. '               ' → logprob: -10.136574745178223
    7. 'for' → logprob: -10.386574745178223
    8. ' for' → logprob: -12.261574745178223
    9. '            ' → logprob: -12.886574745178223
    10. '            
' → logprob: -13.136574745178223

Token 394: ' Pré' (ID: 86400)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.0002644351334311068
    2. '           ' → logprob: -8.500264167785645
    3. ' SUM' → logprob: -10.500264167785645
    4. '               ' → logprob: -11.125264167785645
    5. '       ' → logprob: -11.750264167785645
    6. '   ' → logprob: -12.250264167785645
    7. 'for' → logprob: -12.375264167785645
    8. '_SUM' → logprob: -14.125264167785645
    9. ' ' → logprob: -15.750264167785645
    10. '                   ' → logprob: -16.12526512145996

Token 395: 'fix' (ID: 11853)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.036582041531801224
    2. '   ' → logprob: -4.161581993103027
    3. '       ' → logprob: -4.786581993103027
    4. 'sum' → logprob: -5.036581993103027
    5. '           ' → logprob: -6.411581993103027
    6. 'for' → logprob: -7.161581993103027
    7. ' SUM' → logprob: -7.286581993103027
    8. 'f' → logprob: -7.536581993103027
    9. '               ' → logprob: -8.286581993103027
    10. '#' → logprob: -8.411581993103027

Token 396: 'e' (ID: 68)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.04605098441243172
    2. 'sum' → logprob: -3.421051025390625
    3. '   ' → logprob: -4.921051025390625
    4. '_SUM' → logprob: -6.421051025390625
    5. ' sums' → logprob: -7.046051025390625
    6. 's' → logprob: -7.296051025390625
    7. '_sum' → logprob: -7.421051025390625
    8. ' SUM' → logprob: -8.171051025390625
    9. '       ' → logprob: -8.421051025390625
    10. ' ' → logprob: -8.546051025390625

Token 397: ' SUM' (ID: 52418)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.5210858583450317
    2. '           ' → logprob: -1.1460858583450317
    3. 'sum' → logprob: -3.646085739135742
    4. '_SUM' → logprob: -4.021085739135742
    5. '               ' → logprob: -4.271085739135742
    6. 'S' → logprob: -5.521085739135742
    7. ' sums' → logprob: -5.521085739135742
    8. 's' → logprob: -5.646085739135742
    9. '=' → logprob: -5.896085739135742
    10. '       ' → logprob: -6.021085739135742

Token 398: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000519312743563205
    2. '               ' → logprob: -9.000519752502441
    3. '       ' → logprob: -9.500519752502441
    4. '[S' → logprob: -9.500519752502441
    5. '[s' → logprob: -9.625519752502441
    6. ' =' → logprob: -9.625519752502441
    7. '[' → logprob: -10.250519752502441
    8. '=' → logprob: -10.750519752502441
    9. '                   ' → logprob: -11.000519752502441
    10. '   ' → logprob: -11.375519752502441

Token 399: ' je' (ID: 1264)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.04662083461880684
    2. '               ' → logprob: -3.2966208457946777
    3. '                   ' → logprob: -5.546620845794678
    4. ' SUM' → logprob: -5.671620845794678
    5. '           ' → logprob: -7.796620845794678
    6. '                       ' → logprob: -8.17162036895752
    7. '   ' → logprob: -8.79662036895752
    8. '_SUM' → logprob: -8.79662036895752
    9. '       ' → logprob: -10.04662036895752
    10. '                               ' → logprob: -10.17162036895752

Token 400: ' ne' (ID: 453)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4023956060409546
    2. '           ' → logprob: -1.4023956060409546
    3. 's' → logprob: -2.652395725250244
    4. '       ' → logprob: -2.777395725250244
    5. ' continue' → logprob: -3.027395725250244
    6. 'SUM' → logprob: -3.027395725250244
    7. '   ' → logprob: -3.152395725250244
    8. ' for' → logprob: -3.277395725250244
    9. ' =' → logprob: -3.402395725250244
    10. 'for' → logprob: -3.527395725250244

Token 401: ' suis' (ID: 15058)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8984215259552002
    2. 'pas' → logprob: -1.3984215259552002
    3. 's' → logprob: -1.5234215259552002
    4. ' for' → logprob: -3.3984215259552
    5. 'SUM' → logprob: -3.7734215259552
    6. 'continue' → logprob: -4.398421287536621
    7. '=' → logprob: -4.398421287536621
    8. ' continue' → logprob: -5.398421287536621
    9. '[S' → logprob: -5.398421287536621
    10. '           ' → logprob: -5.523421287536621

Token 402: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.10569203644990921
    2. ' pas' → logprob: -2.855692148208618
    3. 's' → logprob: -4.105691909790039
    4. 'dés' → logprob: -4.730691909790039
    5. ' dés' → logprob: -4.980691909790039
    6. '           ' → logprob: -5.855691909790039
    7. 'd' → logprob: -5.980691909790039
    8. ' sûr' → logprob: -6.355691909790039
    9. 'plus' → logprob: -7.605691909790039
    10. ' plus' → logprob: -8.230691909790039

Token 403: ' sûr' (ID: 46415)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.122093677520752
    2. ' sûr' → logprob: -1.497093677520752
    3. 's' → logprob: -2.622093677520752
    4. 'sure' → logprob: -2.747093677520752
    5. '               ' → logprob: -2.872093677520752
    6. 'à' → logprob: -3.247093677520752
    7. 'done' → logprob: -3.497093677520752
    8. 'f' → logprob: -4.122093677520752
    9. 'd' → logprob: -4.622093677520752
    10. '       ' → logprob: -4.622093677520752

Token 404: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.968934758333489e-05
    2. '       ' → logprob: -10.625069618225098
    3. '<|end|>' → logprob: -11.125069618225098
    4. '=' → logprob: -12.500069618225098
    5. '          ' → logprob: -12.625069618225098
    6. ' for' → logprob: -12.625069618225098
    7. ',' → logprob: -12.625069618225098
    8. '               ' → logprob: -12.750069618225098
    9. '            
' → logprob: -13.000069618225098
    10. '<|end|>' → logprob: -13.250069618225098

Token 405: ''avoir' (ID: 55863)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7558623552322388
    2. 'la' → logprob: -1.2558623552322388
    3. ' la' → logprob: -2.005862236022949
    4. 'SUM' → logprob: -3.505862236022949
    5. ' comprendre' → logprob: -3.880862236022949
    6. 'vous' → logprob: -4.880862236022949
    7. 'compr' → logprob: -5.130862236022949
    8. ' l' → logprob: -5.505862236022949
    9. 's' → logprob: -5.630862236022949
    10. 'ce' → logprob: -5.755862236022949

Token 406: ' bien' (ID: 5340)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.4498940408229828
    2. 'bien' → logprob: -1.3248940706253052
    3. ' bien' → logprob: -2.9498939514160156
    4. ' compris' → logprob: -3.4498939514160156
    5. 'fait' → logprob: -5.199893951416016
    6. 'compr' → logprob: -5.949893951416016
    7. 'tout' → logprob: -6.324893951416016
    8. 'correct' → logprob: -6.949893951416016
    9. 'f' → logprob: -7.824893951416016
    10. ' correctement' → logprob: -8.199893951416016

Token 407: ' compris' (ID: 49173)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.390719473361969
    2. ' compris' → logprob: -1.7657194137573242
    3. 'com' → logprob: -2.140719413757324
    4. 'compr' → logprob: -3.890719413757324
    5. ' SUM' → logprob: -5.390719413757324
    6. 'fait' → logprob: -5.390719413757324
    7. 'calcul' → logprob: -6.265719413757324
    8. '
' → logprob: -7.390719413757324
    9. ' fait' → logprob: -8.015719413757324
    10. 'f' → logprob: -8.015719413757324

Token 408: ' cet' (ID: 19505)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00313660129904747
    2. '               ' → logprob: -6.25313663482666
    3. '            
' → logprob: -7.87813663482666
    4. '
' → logprob: -8.87813663482666
    5. '<|end|>' → logprob: -8.87813663482666
    6. '                   ' → logprob: -9.00313663482666
    7. '       ' → logprob: -9.50313663482666
    8. '```' → logprob: -9.87813663482666
    9. 'SUM' → logprob: -10.00313663482666
    10. ' for' → logprob: -10.37813663482666

Token 409: ' update' (ID: 4027)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -2.130082130432129
    2. ' indentation' → logprob: -2.630082130432129
    3. 'alg' → logprob: -2.755082130432129
    4. 'i' → logprob: -2.755082130432129
    5. 'indent' → logprob: -2.755082130432129
    6. 'if' → logprob: -2.880082130432129
    7. 'indices' → logprob: -2.880082130432129
    8. 'e' → logprob: -3.005082130432129
    9. 'elif' → logprob: -3.255082130432129
    10. ' indent' → logprob: -3.380082130432129

Token 410: ' mais' (ID: 2899)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030619226396083832
    2. '            
' → logprob: -4.405619144439697
    3. '<|end|>' → logprob: -4.655619144439697
    4. '
' → logprob: -5.030619144439697
    5. '  
' → logprob: -8.530619621276855
    6. '       ' → logprob: -8.530619621276855
    7. '<|end|>' → logprob: -8.655619621276855
    8. '               ' → logprob: -8.780619621276855
    9. '```' → logprob: -8.780619621276855
    10. '           
' → logprob: -9.155619621276855

Token 411: ' je' (ID: 1264)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2626950144767761
    2. '           ' → logprob: -1.887695074081421
    3. 'SUM' → logprob: -2.762695074081421
    4. ' SUM' → logprob: -4.762694835662842
    5. '       ' → logprob: -5.262694835662842
    6. '   ' → logprob: -6.887694835662842
    7. '                   ' → logprob: -7.012694835662842
    8. ' for' → logprob: -8.6376953125
    9. '#' → logprob: -8.7626953125
    10. '                
' → logprob: -9.6376953125

Token 412: ' garde' (ID: 65309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5689221024513245
    2. ' continue' → logprob: -1.1939220428466797
    3. 'continue' → logprob: -2.9439220428466797
    4. '               ' → logprob: -3.5689220428466797
    5. '#' → logprob: -3.8189220428466797
    6. '            ' → logprob: -5.19392204284668
    7. '
' → logprob: -5.69392204284668
    8. '            
' → logprob: -5.81892204284668
    9. ' peux' → logprob: -5.94392204284668
    10. '       ' → logprob: -6.44392204284668

Token 413: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00314408540725708
    2. '            
' → logprob: -6.378144264221191
    3. '
' → logprob: -7.378144264221191
    4. '               ' → logprob: -7.503144264221191
    5. '```' → logprob: -9.753144264221191
    6. '\
' → logprob: -10.378144264221191
    7. '                   ' → logprob: -10.503144264221191
    8. '       ' → logprob: -10.753144264221191
    9. '    
' → logprob: -10.753144264221191
    10. '  
' → logprob: -11.003144264221191

Token 414: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015407454338856041
    2. '       ' → logprob: -9.750154495239258
    3. '               ' → logprob: -9.750154495239258
    4. '
' → logprob: -11.000154495239258
    5. '            
' → logprob: -11.875154495239258
    6. '                   ' → logprob: -12.500154495239258
    7. '		' → logprob: -12.750154495239258
    8. '   ' → logprob: -13.000154495239258
    9. '```' → logprob: -13.875154495239258
    10. '	       ' → logprob: -14.250154495239258

Token 415: ' SUM' (ID: 52418)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' (adapté à ' SUM') → logprob: -0.01138814352452755
    2. '               ' → logprob: -4.511388301849365
    3. ' SUM' → logprob: -8.261387825012207
    4. '                   ' → logprob: -10.136387825012207
    5. '   ' → logprob: -11.136387825012207
    6. '           ' → logprob: -11.386387825012207
    7. '_SUM' → logprob: -11.636387825012207
    8. '       ' → logprob: -12.511387825012207
    9. '              ' → logprob: -14.011387825012207
    10. 'sum' → logprob: -14.261387825012207

Token 416: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -9.088346359931165e-07
    2. 's' → logprob: -14.750000953674316
    3. '[' → logprob: -16.0
    4. ' [' → logprob: -16.75
    5. '   ' → logprob: -16.875
    6. '[
' → logprob: -16.875
    7. '[S' → logprob: -16.875
    8. '
' → logprob: -17.0
    9. '=s' → logprob: -17.25
    10. '    
' → logprob: -17.625

Token 417: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005854414775967598
    2. ' +' → logprob: -7.500585556030273
    3. '+t' → logprob: -11.000585556030273
    4. '][' → logprob: -11.500585556030273
    5. 's' → logprob: -12.750585556030273
    6. '   ' → logprob: -14.375585556030273
    7. 't' → logprob: -15.000585556030273
    8. '1' → logprob: -15.000585556030273
    9. '+s' → logprob: -15.250585556030273
    10. '       ' → logprob: -15.250585556030273

Token 418: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00674355449154973
    2. '2' → logprob: -5.006743431091309
    3. '   ' → logprob: -11.131743431091309
    4. ' ' → logprob: -11.256743431091309
    5. '][' → logprob: -16.131744384765625
    6. '0' → logprob: -16.381744384765625
    7. '    ' → logprob: -16.506744384765625
    8. '
' → logprob: -16.506744384765625
    9. '```' → logprob: -16.631744384765625
    10. '+' → logprob: -16.881744384765625

Token 419: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001347615267150104
    2. '[t' → logprob: -6.626347541809082
    3. ' ][' → logprob: -11.501347541809082
    4. ']' → logprob: -12.251347541809082
    5. 't' → logprob: -12.501347541809082
    6. '"][' → logprob: -14.251347541809082
    7. '   ' → logprob: -14.251347541809082
    8. ''][' → logprob: -14.501347541809082
    9. '[' → logprob: -15.126347541809082
    10. '
' → logprob: -15.376347541809082

Token 420: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1398757123970427e-05
    2. ' t' → logprob: -11.875011444091797
    3. '   ' → logprob: -12.875011444091797
    4. ' ' → logprob: -14.000011444091797
    5. '
' → logprob: -14.750011444091797
    6. '	t' → logprob: -15.250011444091797
    7. '  ' → logprob: -15.750011444091797
    8. '           ' → logprob: -16.875011444091797
    9. '    ' → logprob: -17.125011444091797
    10. '(t' → logprob: -17.375011444091797

Token 421: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.183501293184236e-05
    2. '2' → logprob: -10.00007152557373
    3. ' +' → logprob: -10.87507152557373
    4. '+t' → logprob: -13.00007152557373
    5. ']+' → logprob: -13.62507152557373
    6. '+
' → logprob: -14.00007152557373
    7. ']' → logprob: -14.37507152557373
    8. '   ' → logprob: -14.37507152557373
    9. ']+=' → logprob: -14.75007152557373
    10. '[' → logprob: -14.87507152557373

Token 422: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -14.375000953674316
    4. 't' → logprob: -17.250001907348633
    5. '+' → logprob: -18.625001907348633
    6. '1' → logprob: -19.000001907348633
    7. '
' → logprob: -19.250001907348633
    8. '  ' → logprob: -19.500001907348633
    9. '۲' → logprob: -19.750001907348633
    10. '3' → logprob: -20.125001907348633

Token 423: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003496485063806176
    2. ']=' → logprob: -6.0034966468811035
    3. ']=(' → logprob: -7.0034966468811035
    4. ' ]' → logprob: -10.003496170043945
    5. '=' → logprob: -10.253496170043945
    6. ' =' → logprob: -11.003496170043945
    7. ']+=' → logprob: -11.253496170043945
    8. '=(' → logprob: -14.253496170043945
    9. ')' → logprob: -14.503496170043945
    10. ']={' → logprob: -16.128496170043945

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001145218382589519
    2. ' =' → logprob: -7.126145362854004
    3. '=(' → logprob: -8.001145362854004
    4. '=((' → logprob: -12.251145362854004
    5. ']=' → logprob: -15.126145362854004
    6. '+=' → logprob: -15.501145362854004
    7. ']=(' → logprob: -16.001144409179688
    8. '=int' → logprob: -16.626144409179688
    9. '=A' → logprob: -16.876144409179688
    10. ' =(' → logprob: -17.001144409179688

Token 425: ' (' (ID: 350)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.3340921103954315
    2. '(dp' → logprob: -1.459092140197754
    3. '(' → logprob: -3.334092140197754
    4. 'dp' → logprob: -4.959092140197754
    5. '(
' → logprob: -4.959092140197754
    6. 'SUM' → logprob: -7.209092140197754
    7. '((' → logprob: -7.959092140197754
    8. '(M' → logprob: -8.084092140197754
    9. ' (' → logprob: -9.084092140197754
    10. '(sum' → logprob: -10.084092140197754

Token 426: 'SUM' (ID: 54792)
  Prédit: 'SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.08090952783823013
    2. 'dp' → logprob: -2.830909490585327
    3. '(S' → logprob: -4.330909729003906
    4. '(dp' → logprob: -6.080909729003906
    5. '   ' → logprob: -6.705909729003906
    6. ' SUM' → logprob: -6.830909729003906
    7. '(' → logprob: -7.830909729003906
    8. ' dp' → logprob: -8.580909729003906
    9. ' ' → logprob: -9.205909729003906
    10. ' (' → logprob: -9.330909729003906

Token 427: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.038044244050979614
    2. 's' → logprob: -3.2880442142486572
    3. '   ' → logprob: -13.913043975830078
    4. ' s' → logprob: -14.413043975830078
    5. '
' → logprob: -14.913043975830078
    6. '	s' → logprob: -15.163043975830078
    7. '```' → logprob: -15.538043975830078
    8. '(s' → logprob: -15.788043975830078
    9. '`s' → logprob: -16.413043975830078
    10. '<s' → logprob: -16.413043975830078

Token 428: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7835754988482222e-05
    2. ' +' → logprob: -12.125018119812012
    3. '[s' → logprob: -12.500018119812012
    4. '1' → logprob: -12.875018119812012
    5. '][' → logprob: -13.000018119812012
    6. 's' → logprob: -13.250018119812012
    7. '+s' → logprob: -14.125018119812012
    8. '   ' → logprob: -14.625018119812012
    9. '[' → logprob: -14.875018119812012
    10. 't' → logprob: -15.375018119812012

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005929505452513695
    2. '2' → logprob: -5.130929470062256
    3. ' ' → logprob: -14.380929946899414
    4. '   ' → logprob: -15.380929946899414
    5. '+' → logprob: -16.380929946899414
    6. '[' → logprob: -17.505929946899414
    7. '
' → logprob: -18.318429946899414
    8. '  ' → logprob: -18.443429946899414
    9. '１' → logprob: -18.443429946899414
    10. '    ' → logprob: -19.193429946899414

Token 430: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005211008246988058
    2. '[t' → logprob: -8.125520706176758
    3. 't' → logprob: -9.250520706176758
    4. ' ][' → logprob: -9.625520706176758
    5. '   ' → logprob: -11.000520706176758
    6. '+' → logprob: -11.375520706176758
    7. 's' → logprob: -11.500520706176758
    8. '       ' → logprob: -12.250520706176758
    9. '           ' → logprob: -12.250520706176758
    10. '"][' → logprob: -12.875520706176758

Token 431: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -7.946405094116926e-05
    2. ' t' → logprob: -9.500079154968262
    3. '   ' → logprob: -12.625079154968262
    4. '[t' → logprob: -14.375079154968262
    5. '	t' → logprob: -14.875079154968262
    6. '           ' → logprob: -16.625080108642578
    7. '
' → logprob: -16.625080108642578
    8. '    ' → logprob: -17.250080108642578
    9. ' ' → logprob: -17.500080108642578
    10. '       ' → logprob: -17.500080108642578

Token 432: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005208624061197042
    2. '1' → logprob: -7.750520706176758
    3. '+t' → logprob: -9.750520706176758
    4. ']+' → logprob: -11.500520706176758
    5. 't' → logprob: -11.875520706176758
    6. '2' → logprob: -12.000520706176758
    7. ' +' → logprob: -12.125520706176758
    8. '   ' → logprob: -13.250520706176758
    9. '[t' → logprob: -14.750520706176758
    10. '+
' → logprob: -15.125520706176758

Token 433: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889099419116974
    2. '2' → logprob: -2.5788910388946533
    3. '+' → logprob: -14.578890800476074
    4. '   ' → logprob: -15.078890800476074
    5. '
' → logprob: -15.328890800476074
    6. ' ' → logprob: -16.07889175415039
    7. '[' → logprob: -16.57889175415039
    8. ']' → logprob: -16.76639175415039
    9. '```' → logprob: -17.57889175415039
    10. '0' → logprob: -17.82889175415039

Token 434: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28115710616111755
    2. '+' → logprob: -1.40615713596344
    3. ' -' → logprob: -12.281157493591309
    4. '+
' → logprob: -14.531157493591309
    5. ' ' → logprob: -15.031157493591309
    6. ' +
' → logprob: -15.281157493591309
    7. '-' → logprob: -15.406157493591309
    8. '   ' → logprob: -15.406157493591309
    9. '    ' → logprob: -15.781157493591309
    10. '
' → logprob: -15.781157493591309

Token 435: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12693513929843903
    2. '+' → logprob: -2.1269352436065674
    3. ' -' → logprob: -12.376935005187988
    4. ' +
' → logprob: -13.626935005187988
    5. '+
' → logprob: -13.876935005187988
    6. ' ' → logprob: -16.001935958862305
    7. '-' → logprob: -16.626935958862305
    8. '           ' → logprob: -16.751935958862305
    9. ')' → logprob: -16.876935958862305
    10. '
' → logprob: -17.126935958862305

Token 436: ' SUM' (ID: 52418)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.00027587503427639604
    2. ' SUM' → logprob: -8.250275611877441
    3. '   ' → logprob: -11.500275611877441
    4. ' ' → logprob: -14.000275611877441
    5. '    ' → logprob: -14.375275611877441
    6. '           ' → logprob: -14.625275611877441
    7. '  ' → logprob: -15.000275611877441
    8. '         ' → logprob: -15.375275611877441
    9. 'MOD' → logprob: -15.375275611877441
    10. '          ' → logprob: -15.500275611877441

Token 437: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.023246875032782555
    2. 's' → logprob: -3.7732467651367188
    3. '(s' → logprob: -15.023246765136719
    4. '   ' → logprob: -15.148246765136719
    5. ' s' → logprob: -15.273246765136719
    6. '{s' → logprob: -15.773246765136719
    7. '```' → logprob: -16.27324676513672
    8. '	s' → logprob: -16.64824676513672
    9. '[S' → logprob: -16.77324676513672
    10. '<s' → logprob: -16.77324676513672

Token 438: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0020867353305220604
    2. '[s' → logprob: -6.252086639404297
    3. 's' → logprob: -9.127086639404297
    4. '+s' → logprob: -10.377086639404297
    5. '[' → logprob: -11.377086639404297
    6. '][' → logprob: -12.877086639404297
    7. '+
' → logprob: -13.877086639404297
    8. '1' → logprob: -13.877086639404297
    9. '+[' → logprob: -13.877086639404297
    10. ' +' → logprob: -14.627086639404297

Token 439: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25226345658302307
    2. '1' → logprob: -1.5022634267807007
    3. '+' → logprob: -8.127263069152832
    4. ' ' → logprob: -10.502263069152832
    5. '   ' → logprob: -11.752263069152832
    6. '```' → logprob: -13.127263069152832
    7. '[' → logprob: -13.627263069152832
    8. '  ' → logprob: -15.752263069152832
    9. '           ' → logprob: -17.00226402282715
    10. '``' → logprob: -17.12726402282715

Token 440: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008662313222885132
    2. '[t' → logprob: -4.758662223815918
    3. '[' → logprob: -11.383662223815918
    4. 't' → logprob: -11.633662223815918
    5. ']' → logprob: -12.133662223815918
    6. '"][' → logprob: -12.258662223815918
    7. ')[' → logprob: -12.383662223815918
    8. '}[' → logprob: -12.758662223815918
    9. ''][' → logprob: -12.883662223815918
    10. ' ][' → logprob: -13.508662223815918

Token 441: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00013238313840702176
    2. '[t' → logprob: -9.25013256072998
    3. ' t' → logprob: -10.87513256072998
    4. '`t' → logprob: -11.12513256072998
    5. '   ' → logprob: -13.25013256072998
    6. '	t' → logprob: -14.62513256072998
    7. ''t' → logprob: -16.250131607055664
    8. ' ' → logprob: -16.250131607055664
    9. '{' → logprob: -16.750131607055664
    10. '\t' → logprob: -17.000131607055664

Token 442: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.2020991056924686e-05
    2. '1' → logprob: -10.375032424926758
    3. ' +' → logprob: -14.125032424926758
    4. '[' → logprob: -16.750032424926758
    5. ']+' → logprob: -17.750032424926758
    6. '+
' → logprob: -18.250032424926758
    7. '＋' → logprob: -19.750032424926758
    8. '   ' → logprob: -20.000032424926758
    9. '+t' → logprob: -20.250032424926758
    10. 'plus' → logprob: -20.375032424926758

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '+' → logprob: -17.25
    3. ' ' → logprob: -18.0
    4. '   ' → logprob: -20.625
    5. '１' → logprob: -20.875
    6. '۱' → logprob: -21.125
    7. '```' → logprob: -22.25
    8. '১' → logprob: -22.5
    9. ']' → logprob: -22.875
    10. '[' → logprob: -23.25

Token 444: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804895281791687
    2. '-' → logprob: -3.2880489826202393
    3. ')' → logprob: -11.91304874420166
    4. ' ' → logprob: -15.03804874420166
    5. '   ' → logprob: -16.288049697875977
    6. '           ' → logprob: -16.288049697875977
    7. ',' → logprob: -16.288049697875977
    8. '-S' → logprob: -17.038049697875977
    9. '    ' → logprob: -17.413049697875977
    10. '```' → logprob: -17.663049697875977

Token 445: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009760101325809956
    2. '-' → logprob: -4.634759902954102
    3. ' ' → logprob: -12.884759902954102
    4. '-S' → logprob: -14.384759902954102
    5. '           ' → logprob: -14.884759902954102
    6. '          ' → logprob: -15.884759902954102
    7. '                   ' → logprob: -16.2597599029541
    8. '```' → logprob: -16.5097599029541
    9. '            ' → logprob: -16.6347599029541
    10. ')' → logprob: -16.6347599029541

Token 446: ' SUM' (ID: 52418)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -1.2664456789934775e-06
    2. ' SUM' → logprob: -14.250000953674316
    3. '           ' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.250001907348633
    5. '               ' → logprob: -16.375001907348633
    6. '                   ' → logprob: -16.625001907348633
    7. '_SUM' → logprob: -17.000001907348633
    8. '       ' → logprob: -17.250001907348633
    9. 'SUB' → logprob: -18.375001907348633
    10. '            ' → logprob: -19.000001907348633

Token 447: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0015045057516545057
    2. 's' → logprob: -6.501504421234131
    3. ' s' → logprob: -13.501504898071289
    4. '[' → logprob: -15.251504898071289
    5. '<s' → logprob: -15.626504898071289
    6. '(s' → logprob: -15.751504898071289
    7. '   ' → logprob: -16.87650489807129
    8. '[
' → logprob: -17.00150489807129
    9. '{s' → logprob: -17.37650489807129
    10. '	s' → logprob: -17.87650489807129

Token 448: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.0948158382670954e-05
    2. 's' → logprob: -10.500030517578125
    3. '[s' → logprob: -13.125030517578125
    4. '+s' → logprob: -13.750030517578125
    5. '[' → logprob: -16.375030517578125
    6. ' +' → logprob: -16.375030517578125
    7. 'plus' → logprob: -17.375030517578125
    8. '＋' → logprob: -17.625030517578125
    9. '+
' → logprob: -17.625030517578125
    10. '1' → logprob: -18.125030517578125

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '+' → logprob: -14.500000953674316
    3. 's' → logprob: -17.625
    4. ' ' → logprob: -19.125
    5. '   ' → logprob: -19.125
    6. '１' → logprob: -19.75
    7. '           ' → logprob: -20.125
    8. '```' → logprob: -20.375
    9. '     ' → logprob: -20.5
    10. '۱' → logprob: -20.5

Token 450: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004144168924540281
    2. '[t' → logprob: -5.504144191741943
    3. '[' → logprob: -10.004143714904785
    4. ' ][' → logprob: -12.129143714904785
    5. '[s' → logprob: -12.254143714904785
    6. '}[' → logprob: -12.754143714904785
    7. ']' → logprob: -13.004143714904785
    8. ''][' → logprob: -13.879143714904785
    9. '"][' → logprob: -14.004143714904785
    10. 't' → logprob: -14.004143714904785

Token 451: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.1093578804284334e-05
    2. ' t' → logprob: -10.375051498413086
    3. '[t' → logprob: -10.875051498413086
    4. '   ' → logprob: -15.125051498413086
    5. '`t' → logprob: -15.125051498413086
    6. '	t' → logprob: -15.375051498413086
    7. ' ' → logprob: -16.500051498413086
    8. ')t' → logprob: -17.125051498413086
    9. '1' → logprob: -17.375051498413086
    10. '][' → logprob: -18.250051498413086

Token 452: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1160349458805285e-05
    2. '1' → logprob: -11.875011444091797
    3. ' +' → logprob: -12.625011444091797
    4. '```' → logprob: -15.250011444091797
    5. '[' → logprob: -15.750011444091797
    6. ']+' → logprob: -16.250011444091797
    7. '+
' → logprob: -16.375011444091797
    8. '+]' → logprob: -16.625011444091797
    9. 'plus' → logprob: -17.000011444091797
    10. ']' → logprob: -17.125011444091797

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '+' → logprob: -17.375
    3. ' ' → logprob: -19.125
    4. '```' → logprob: -19.375
    5. '۱' → logprob: -19.875
    6. ']' → logprob: -21.125
    7. '   ' → logprob: -21.25
    8. '11' → logprob: -21.5
    9. '১' → logprob: -21.75
    10. '0' → logprob: -22.25

Token 454: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10024042427539825
    2. ' +' → logprob: -2.350240468978882
    3. ')' → logprob: -10.350240707397461
    4. ']' → logprob: -13.850240707397461
    5. '+
' → logprob: -14.725240707397461
    6. ')+' → logprob: -16.10024070739746
    7. ']+' → logprob: -16.35024070739746
    8. '+d' → logprob: -16.72524070739746
    9. '```' → logprob: -17.60024070739746
    10. '           ' → logprob: -18.22524070739746

Token 455: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18026398122310638
    2. ' +' → logprob: -1.9302639961242676
    3. ')' → logprob: -3.9302639961242676
    4. ')%' → logprob: -8.55526351928711
    5. ' )' → logprob: -12.68026351928711
    6. '+
' → logprob: -13.18026351928711
    7. '%' → logprob: -13.43026351928711
    8. '+)' → logprob: -14.05526351928711
    9. '```' → logprob: -15.30526351928711
    10. '+b' → logprob: -15.43026351928711

Token 456: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.041768160182983e-05
    2. ' dp' → logprob: -9.500080108642578
    3. '(dp' → logprob: -12.625080108642578
    4. '	dp' → logprob: -14.000080108642578
    5. 'MOD' → logprob: -14.375080108642578
    6. '   ' → logprob: -14.875080108642578
    7. '
' → logprob: -16.125080108642578
    8. 'd' → logprob: -16.125080108642578
    9. 'mod' → logprob: -17.250080108642578
    10. 'int' → logprob: -17.250080108642578

Token 457: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00015860427811276168
    2. 's' → logprob: -8.750158309936523
    3. '[' → logprob: -15.875158309936523
    4. '][' → logprob: -17.125158309936523
    5. '[
' → logprob: -18.125158309936523
    6. '(s' → logprob: -18.875158309936523
    7. '[S' → logprob: -19.125158309936523
    8. '```' → logprob: -19.250158309936523
    9. '	s' → logprob: -19.375158309936523
    10. '{s' → logprob: -19.500158309936523

Token 458: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21319973468780518
    2. '[s' → logprob: -1.7131997346878052
    3. 's' → logprob: -4.588199615478516
    4. '+s' → logprob: -6.588199615478516
    5. '[' → logprob: -9.213199615478516
    6. '][' → logprob: -10.713199615478516
    7. '+[' → logprob: -11.588199615478516
    8. ' +' → logprob: -11.588199615478516
    9. ' s' → logprob: -11.838199615478516
    10. ']+' → logprob: -12.213199615478516

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17418316006660461
    2. '+' → logprob: -1.9241831302642822
    3. 's' → logprob: -4.299183368682861
    4. '+s' → logprob: -8.799182891845703
    5. '][' → logprob: -9.299182891845703
    6. ' s' → logprob: -10.924182891845703
    7. '[s' → logprob: -12.049182891845703
    8. '```' → logprob: -12.299182891845703
    9. '[' → logprob: -12.799182891845703
    10. ' +' → logprob: -12.799182891845703

Token 460: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.56233171664644e-05
    2. ']' → logprob: -10.125055313110352
    3. '"][' → logprob: -12.125055313110352
    4. ' ][' → logprob: -12.375055313110352
    5. ''][' → logprob: -13.375055313110352
    6. '[t' → logprob: -14.250055313110352
    7. '<|end|>' → logprob: -14.250055313110352
    8. ']][' → logprob: -14.500055313110352
    9. ')[' → logprob: -15.000055313110352
    10. '[s' → logprob: -15.125055313110352

Token 461: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.7372048862162046e-05
    2. '][' → logprob: -11.125027656555176
    3. '[t' → logprob: -11.500027656555176
    4. ' t' → logprob: -13.000027656555176
    5. '[' → logprob: -17.00002670288086
    6. '	t' → logprob: -17.00002670288086
    7. '(t' → logprob: -17.25002670288086
    8. '   ' → logprob: -17.50002670288086
    9. '
' → logprob: -17.50002670288086
    10. ')t' → logprob: -17.50002670288086

Token 462: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02977374941110611
    2. '1' → logprob: -3.529773712158203
    3. ' +' → logprob: -11.404773712158203
    4. ']+' → logprob: -12.154773712158203
    5. '[' → logprob: -13.154773712158203
    6. '```' → logprob: -13.654773712158203
    7. '   ' → logprob: -13.904773712158203
    8. ' ' → logprob: -14.779773712158203
    9. '][' → logprob: -15.154773712158203
    10. '<|end|>' → logprob: -15.279773712158203

Token 463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '
' → logprob: -15.875000953674316
    5. '+' → logprob: -16.375
    6. '   ' → logprob: -16.625
    7. '[' → logprob: -17.125
    8. ']' → logprob: -18.125
    9. ']+' → logprob: -19.0625
    10. '

' → logprob: -19.25

Token 464: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03816749155521393
    2. ')' → logprob: -3.2881674766540527
    3. ']' → logprob: -9.538167953491211
    4. ')%' → logprob: -10.413167953491211
    5. '))' → logprob: -11.038167953491211
    6. ' )' → logprob: -13.038167953491211
    7. '   ' → logprob: -13.538167953491211
    8. ' ])' → logprob: -13.788167953491211
    9. ']%' → logprob: -14.038167953491211
    10. '})' → logprob: -14.288167953491211

Token 465: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03297475352883339
    2. ')%' → logprob: -3.7829747200012207
    3. '%' → logprob: -4.657974720001221
    4. '           ' → logprob: -9.532975196838379
    5. ' %' → logprob: -9.907975196838379
    6. ' )' → logprob: -10.532975196838379
    7. '
' → logprob: -11.282975196838379
    8. ']' → logprob: -11.657975196838379
    9. '%)' → logprob: -12.032975196838379
    10. ']%' → logprob: -12.282975196838379

Token 466: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.842555426876061e-06
    2. ' MOD' → logprob: -12.250004768371582
    3. '_MOD' → logprob: -22.6250057220459
    4. 'MO' → logprob: -24.5000057220459
    5. 'MD' → logprob: -24.7500057220459
    6. '.MOD' → logprob: -25.0000057220459
    7. '   ' → logprob: -26.0000057220459
    8. 'MODE' → logprob: -26.2500057220459
    9. '```' → logprob: -26.6250057220459
    10. ' ' → logprob: -27.0000057220459

Token 467: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021710782311856747
    2. 'return' → logprob: -7.002171039581299
    3. 'print' → logprob: -7.002171039581299
    4. '```' → logprob: -9.002171516418457
    5. '
' → logprob: -9.377171516418457
    6. '    
' → logprob: -9.502171516418457
    7. '<|end|>' → logprob: -10.502171516418457
    8. '	return' → logprob: -11.377171516418457
    9. ' return' → logprob: -11.627171516418457
    10. '       ' → logprob: -11.877171516418457

Token 468: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2605338990688324
    2. 'print' (adapté à ' print') → logprob: -1.6355339288711548
    3. '```' → logprob: -3.7605338096618652
    4. '
' → logprob: -5.260533809661865
    5. '    
' → logprob: -5.510533809661865
    6. 'return' → logprob: -6.885533809661865
    7. '  
' → logprob: -8.010534286499023
    8. '<|end|>' → logprob: -8.135534286499023
    9. ' print' → logprob: -9.135534286499023
    10. '``' → logprob: -9.635534286499023

Token 470: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.125000953674316
    3. 'ans' → logprob: -15.875000953674316
    4. ' (' → logprob: -17.375
    5. '(answer' → logprob: -18.375
    6. '((' → logprob: -18.5
    7. '(
' → logprob: -18.875
    8. '	ans' → logprob: -19.375
    9. '(ord' → logprob: -19.75
    10. '(acc' → logprob: -21.0

Token 471: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ' )' → logprob: -13.250004768371582
    3. '()' → logprob: -13.625004768371582
    4. ')
' → logprob: -14.375004768371582
    5. '())' → logprob: -14.875004768371582
    6. '%' → logprob: -15.000004768371582
    7. ')%' → logprob: -16.500003814697266
    8. ')`' → logprob: -16.500003814697266
    9. '   ' → logprob: -17.000003814697266
    10. '%)' → logprob: -17.500003814697266

Token 472: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016210908070206642
    2. '<|end|>' → logprob: -4.891211032867432
    3. '
' → logprob: -5.141211032867432
    4. '```' → logprob: -6.266211032867432
    5. 'main' → logprob: -7.766211032867432
    6. ' if' → logprob: -9.016210556030273
    7. '#' → logprob: -10.141210556030273
    8. '\
' → logprob: -10.391210556030273
    9. '\n' → logprob: -10.391210556030273
    10. '``' → logprob: -10.641210556030273

Token 473: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03807259723544121
    2. '__' → logprob: -3.2880725860595703
    3. '_name' → logprob: -11.41307258605957
    4. '_' → logprob: -11.41307258605957
    5. ' ' → logprob: -12.66307258605957
    6. '___' → logprob: -12.91307258605957
    7. 'name' → logprob: -13.91307258605957
    8. '.__' → logprob: -14.91307258605957
    9. ' ___' → logprob: -14.91307258605957
    10. '  ' → logprob: -15.03807258605957

Token 474: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.40562453866004944
    2. ' ==' → logprob: -1.155624508857727
    3. '==' → logprob: -4.0306243896484375
    4. ' __' → logprob: -7.4056243896484375
    5. '=="' → logprob: -9.155624389648438
    6. 'name' → logprob: -9.905624389648438
    7. '__.__' → logprob: -11.530624389648438
    8. ' =="' → logprob: -11.655624389648438
    9. '=='' → logprob: -11.780624389648438
    10. '﻿' → logprob: -12.655624389648438

Token 475: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.036524842376821e-05
    2. '==' → logprob: -10.125040054321289
    3. '__.__' → logprob: -15.875040054321289
    4. ' ==' → logprob: -16.87504005432129
    5. '=="' → logprob: -17.12504005432129
    6. '___' → logprob: -17.37504005432129
    7. '__('' → logprob: -18.00004005432129
    8. '_' → logprob: -18.00004005432129
    9. 'name' → logprob: -18.37504005432129
    10. '____' → logprob: -18.50004005432129

Token 476: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3717602789402008
    2. ' ==' → logprob: -1.4967602491378784
    3. '=="' → logprob: -2.746760368347168
    4. '__' → logprob: -4.371760368347168
    5. '=='' → logprob: -4.621760368347168
    6. '==
' → logprob: -11.871760368347168
    7. '=' → logprob: -11.996760368347168
    8. '===' → logprob: -12.621760368347168
    9. '==="' → logprob: -12.871760368347168
    10. ' =="' → logprob: -13.496760368347168

Token 477: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10023028403520584
    2. ''' → logprob: -2.3502302169799805
    3. '__' → logprob: -11.35023021697998
    4. ' "__' → logprob: -11.47523021697998
    5. ' '__' → logprob: -13.60023021697998
    6. '   ' → logprob: -16.975231170654297
    7. '('__' → logprob: -17.100231170654297
    8. '("__' → logprob: -17.475231170654297
    9. 'main' → logprob: -17.600231170654297
    10. '"name' → logprob: -17.725231170654297

Token 478: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.05706622451543808
    2. '__' → logprob: -2.9320662021636963
    3. '"' → logprob: -6.307066440582275
    4. ''' → logprob: -8.432065963745117
    5. 'name' → logprob: -9.307065963745117
    6. '__":
' → logprob: -10.807065963745117
    7. 'python' → logprob: -12.307065963745117
    8. '__':
' → logprob: -12.557065963745117
    9. '_main' → logprob: -12.682065963745117
    10. ' main' → logprob: -13.182065963745117

Token 479: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.018947657197713852
    2. '__' → logprob: -4.018947601318359
    3. '__':
' → logprob: -7.143947601318359
    4. '__.' → logprob: -12.76894760131836
    5. '__["' → logprob: -12.89394760131836
    6. '__:' → logprob: -13.89394760131836
    7. '__.__' → logprob: -14.01894760131836
    8. '__()
' → logprob: -15.89394760131836
    9. '__
' → logprob: -15.89394760131836
    10. '__",' → logprob: -16.01894760131836

Token 480: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.028756143525242805
    2. '	main' → logprob: -4.028756141662598
    3. '   ' → logprob: -4.653756141662598
    4. ' main' → logprob: -6.903756141662598
    5. '_main' → logprob: -11.778756141662598
    6. '    
' → logprob: -12.653756141662598
    7. ' ' → logprob: -13.028756141662598
    8. '<|end|>' → logprob: -13.028756141662598
    9. '  ' → logprob: -13.528756141662598
    10. '(main' → logprob: -14.028756141662598

Token 481: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -19.625
    4. '(main' → logprob: -23.25
    5. '_main' → logprob: -23.5
    6. '.main' → logprob: -24.0
    7. '   ' → logprob: -24.0
    8. '```' → logprob: -25.625
    9. 'Main' → logprob: -26.125
    10. 'import' → logprob: -27.125

Token 482: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 480
Tokens correctement prédits (1ère position, stricte): 188
Tokens correctement prédits (1ère position, avec adaptation): 205
Tokens correctement prédits (top 10): 357
Précision stricte (1ère position): 39.17%
Précision adaptée (1ère position): 42.71%
Précision (top 10): 74.38%
================================================================================
