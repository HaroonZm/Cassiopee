================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = input().split()
b = []
for i in range(n):
    b.append(int(a[i]))
ans = "APPROVED"
for i in range(n):
    if b[i] % 2 == 0:
        if b[i] % 3 != 0 and b[i] % 5 != 0:
            ans = "DENIED"
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00022487416572403163
    2. '('' → logprob: -9.125225067138672
    3. ''' → logprob: -10.125225067138672
    4. '(n' → logprob: -11.000225067138672
    5. '("("' → logprob: -11.000225067138672
    6. '(
' → logprob: -11.500225067138672
    7. '```' → logprob: -11.750225067138672
    8. '()' → logprob: -12.000225067138672
    9. '`' → logprob: -12.500225067138672
    10. ')' → logprob: -13.000225067138672

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20736338198184967
    2. ')' → logprob: -1.7073633670806885
    3. '()' → logprob: -5.457363605499268
    4. '())' → logprob: -7.082363605499268
    5. '(
' → logprob: -8.08236312866211
    6. '```' → logprob: -9.58236312866211
    7. '))' → logprob: -9.70736312866211
    8. '[' → logprob: -10.58236312866211
    9. '")' → logprob: -10.58236312866211
    10. '')' → logprob: -10.58236312866211

Token 5: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6432508826255798
    2. 'i' → logprob: -1.5182509422302246
    3. 'if' → logprob: -2.1432509422302246
    4. 's' → logprob: -2.6432509422302246
    5. 'f' → logprob: -4.768250942230225
    6. ' ' → logprob: -4.768250942230225
    7. 'x' → logprob: -5.143250942230225
    8. '#' → logprob: -5.143250942230225
    9. ''' → logprob: -5.643250942230225
    10. ' for' → logprob: -5.643250942230225

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008552049286663532
    2. '[a' → logprob: -6.008552074432373
    3. '[i' → logprob: -6.258552074432373
    4. ' =' → logprob: -7.508552074432373
    5. '[:]' → logprob: -7.508552074432373
    6. 'a' → logprob: -7.758552074432373
    7. 'pp' → logprob: -7.758552074432373
    8. '.' → logprob: -7.883552074432373
    9. '=' → logprob: -8.133551597595215
    10. '.append' → logprob: -8.258551597595215

Token 7: ' input' (ID: 3422)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5288424491882324
    2. '[]' → logprob: -1.2788424491882324
    3. ' [' → logprob: -2.2788424491882324
    4. '[' → logprob: -4.153842449188232
    5. '[int' → logprob: -5.528842449188232
    6. '[input' → logprob: -5.778842449188232
    7. 'list' → logprob: -6.028842449188232
    8. ' list' → logprob: -6.653842449188232
    9. '0' → logprob: -6.653842449188232
    10. '[n' → logprob: -7.278842449188232

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028836876153945923
    2. ''' → logprob: -6.5028839111328125
    3. '('' → logprob: -7.3778839111328125
    4. '"' → logprob: -8.502883911132812
    5. '(
' → logprob: -9.002883911132812
    6. '()' → logprob: -9.002883911132812
    7. ')' → logprob: -9.252883911132812
    8. '```' → logprob: -10.127883911132812
    9. '("("' → logprob: -10.377883911132812
    10. '[' → logprob: -10.377883911132812

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008636554703116417
    2. 'strip' → logprob: -4.758636474609375
    3. 'rstrip' → logprob: -11.008636474609375
    4. 'replace' → logprob: -12.633636474609375
    5. ' split' → logprob: -13.883636474609375
    6. 'rs' → logprob: -14.508636474609375
    7. 'spl' → logprob: -14.633636474609375
    8. 's' → logprob: -16.008636474609375
    9. 'lower' → logprob: -17.633636474609375
    10. 'r' → logprob: -17.633636474609375

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07353439182043076
    2. '()' → logprob: -2.6985344886779785
    3. '('' → logprob: -5.8235344886779785
    4. '("("' → logprob: -7.8235344886779785
    5. '(
' → logprob: -9.94853401184082
    6. '("' → logprob: -10.19853401184082
    7. '(

' → logprob: -10.44853401184082
    8. '(`' → logprob: -10.69853401184082
    9. '"' → logprob: -10.69853401184082
    10. '((' → logprob: -11.07353401184082

Token 11: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09879034012556076
    2. 'for' → logprob: -2.598790407180786
    3. 'b' → logprob: -4.723790168762207
    4. 'n' → logprob: -5.348790168762207
    5. '[' → logprob: -6.348790168762207
    6. 'c' → logprob: -6.723790168762207
    7. 's' → logprob: -7.348790168762207
    8. 'm' → logprob: -7.723790168762207
    9. 'result' → logprob: -7.848790168762207
    10. ' for' → logprob: -8.348790168762207

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9559608101844788
    2. ' =' → logprob: -1.080960750579834
    3. '.' → logprob: -1.955960750579834
    4. '=' → logprob: -2.080960750579834
    5. '[:]' → logprob: -5.830960750579834
    6. '[]' → logprob: -6.330960750579834
    7. ')' → logprob: -6.705960750579834
    8. '_' → logprob: -6.955960750579834
    9. '.append' → logprob: -7.330960750579834
    10. '[i' → logprob: -7.455960750579834

Token 13: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2874101996421814
    2. '[]' → logprob: -2.412410259246826
    3. ' [' → logprob: -3.037410259246826
    4. ' a' → logprob: -3.162410259246826
    5. 'a' → logprob: -3.287410259246826
    6. ' list' → logprob: -4.037410259246826
    7. 'list' → logprob: -5.287410259246826
    8. '[a' → logprob: -5.912410259246826
    9. ' input' → logprob: -6.287410259246826
    10. '[' → logprob: -6.287410259246826

Token 14: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006892497185617685
    2. ' for' → logprob: -5.256892681121826
    3. 'a' → logprob: -7.881892681121826
    4. 'i' → logprob: -7.881892681121826
    5. 'f' → logprob: -8.256892204284668
    6. '[' → logprob: -8.381892204284668
    7. '=' → logprob: -8.631892204284668
    8. 'n' → logprob: -10.131892204284668
    9. ')' → logprob: -10.506892204284668
    10. '```' → logprob: -10.506892204284668

Token 15: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07346372306346893
    2. ' i' → logprob: -2.6984636783599854
    3. '  ' → logprob: -6.1984639167785645
    4. 'i' → logprob: -6.6984639167785645
    5. ' _' → logprob: -9.198463439941406
    6. '_' → logprob: -9.448463439941406
    7. ' ‌' → logprob: -10.198463439941406
    8. ' x' → logprob: -12.198463439941406
    9. ' )' → logprob: -12.323463439941406
    10. ' n' → logprob: -12.448463439941406

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03463234379887581
    2. 'in' → logprob: -3.909632444381714
    3. ' ' → logprob: -4.534632205963135
    4. 'n' → logprob: -6.034632205963135
    5. ' n' → logprob: -7.909632205963135
    6. '  ' → logprob: -8.034632682800293
    7. '<|end|>' → logprob: -10.034632682800293
    8. '	in' → logprob: -10.159632682800293
    9. '_' → logprob: -10.659632682800293
    10. '   ' → logprob: -12.284632682800293

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1914895921945572
    2. ' range' → logprob: -1.816489577293396
    3. 'a' → logprob: -4.5664896965026855
    4. ' a' → logprob: -6.6914896965026855
    5. 'n' → logprob: -10.691489219665527
    6. ' ' → logprob: -11.941489219665527
    7. ' n' → logprob: -12.941489219665527
    8. 'b' → logprob: -13.066489219665527
    9. '  ' → logprob: -13.816489219665527
    10. '	range' → logprob: -13.941489219665527

Token 18: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47700485587120056
    2. '(n' → logprob: -0.977004885673523
    3. '(len' → logprob: -6.2270050048828125
    4. ' (' → logprob: -6.9770050048828125
    5. ' ' → logprob: -12.102005004882812
    6. '(
' → logprob: -12.977005004882812
    7. ' n' → logprob: -13.352005004882812
    8. 'n' → logprob: -13.727005004882812
    9. '(range' → logprob: -13.852005004882812
    10. '(length' → logprob: -14.102005004882812

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009457259438931942
    2. ')' → logprob: -4.759457111358643
    3. ' ):' → logprob: -7.509457111358643
    4. '):
' → logprob: -8.6344575881958
    5. '+' → logprob: -9.7594575881958
    6. '-' → logprob: -10.8844575881958
    7. ':' → logprob: -11.2594575881958
    8. ' )' → logprob: -11.2594575881958
    9. ' ' → logprob: -12.3844575881958
    10. '**' → logprob: -13.2594575881958

Token 20: '   ' (ID: 271)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4069482684135437
    2. 'b' → logprob: -1.1569483280181885
    3. '   ' → logprob: -4.281948089599609
    4. ' ' → logprob: -5.781948089599609
    5. ' if' → logprob: -6.906948089599609
    6. '    ' → logprob: -7.281948089599609
    7. '	b' → logprob: -7.906948089599609
    8. 'a' → logprob: -8.28194808959961
    9. ' a' → logprob: -8.40694808959961
    10. 'if' → logprob: -8.90694808959961

Token 21: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.4109954535961151
    2. ' b' → logprob: -1.1609954833984375
    3. ' if' → logprob: -3.9109954833984375
    4. 'if' → logprob: -6.0359954833984375
    5. '   ' → logprob: -7.1609954833984375
    6. ' a' → logprob: -8.535995483398438
    7. '    ' → logprob: -8.785995483398438
    8. 'a' → logprob: -9.035995483398438
    9. ' ' → logprob: -9.535995483398438
    10. 'int' → logprob: -9.910995483398438

Token 22: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6932604908943176
    2. '.append' → logprob: -0.6932604908943176
    3. ' .' → logprob: -9.818260192871094
    4. '.ap' → logprob: -10.693260192871094
    5. '.a' → logprob: -11.693260192871094
    6. '.app' → logprob: -11.818260192871094
    7. '.extend' → logprob: -11.818260192871094
    8. '.add' → logprob: -12.693260192871094
    9. '.push' → logprob: -12.818260192871094
    10. '.p' → logprob: -13.318260192871094

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07656680047512054
    2. '(a' → logprob: -2.701566696166992
    3. '(' → logprob: -5.576566696166992
    4. 'int' → logprob: -6.076566696166992
    5. 'a' → logprob: -8.201566696166992
    6. '(i' → logprob: -8.826566696166992
    7. '(float' → logprob: -9.576566696166992
    8. ' int' → logprob: -11.451566696166992
    9. '((' → logprob: -12.076566696166992
    10. ' (' → logprob: -12.451566696166992

Token 24: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0031804447062313557
    2. '(' → logprob: -5.753180503845215
    3. 'a' → logprob: -13.378180503845215
    4. ')' → logprob: -15.128180503845215
    5. '(
' → logprob: -15.128180503845215
    6. ' (' → logprob: -16.0031795501709
    7. '(s' → logprob: -16.5031795501709
    8. ')(' → logprob: -16.6281795501709
    9. '(i' → logprob: -16.7531795501709
    10. '(

' → logprob: -17.1281795501709

Token 25: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.38699305057525635
    2. '[' → logprob: -1.1369930505752563
    3. ')' → logprob: -9.636993408203125
    4. ' [' → logprob: -10.761993408203125
    5. '[n' → logprob: -11.636993408203125
    6. '[
' → logprob: -11.886993408203125
    7. '[a' → logprob: -12.511993408203125
    8. '[I' → logprob: -12.511993408203125
    9. '[b' → logprob: -12.636993408203125
    10. '[int' → logprob: -12.886993408203125

Token 26: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5239906907081604
    2. ')' → logprob: -1.8989906311035156
    3. ']))' → logprob: -1.8989906311035156
    4. ')))' → logprob: -2.2739906311035156
    5. '])' → logprob: -5.648990631103516
    6. ')])' → logprob: -6.648990631103516
    7. ']' → logprob: -8.023990631103516
    8. '']))' → logprob: -9.273990631103516
    9. ')]' → logprob: -9.398990631103516
    10. '}))' → logprob: -9.648990631103516

Token 27: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4503793716430664
    2. '.' → logprob: -1.7003793716430664
    3. '[' → logprob: -1.8253793716430664
    4. ' ' → logprob: -2.0753793716430664
    5. '+' → logprob: -2.3253793716430664
    6. 'b' → logprob: -3.0753793716430664
    7. '<|end|>' → logprob: -3.5753793716430664
    8. '#' → logprob: -3.7003793716430664
    9. '
' → logprob: -3.7003793716430664
    10. ' 
' → logprob: -4.075379371643066

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8068247437477112
    2. ' =' → logprob: -1.1818246841430664
    3. '[' → logprob: -2.3068246841430664
    4. '.append' → logprob: -2.5568246841430664
    5. '.' → logprob: -3.1818246841430664
    6. '[:]' → logprob: -4.681824684143066
    7. '_' → logprob: -5.056824684143066
    8. 's' → logprob: -5.181824684143066
    9. '[]' → logprob: -5.806824684143066
    10. '.setdefault' → logprob: -7.056824684143066

Token 29: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7795217037200928
    2. ' max' → logprob: -1.6545217037200928
    3. 'max' → logprob: -2.0295217037200928
    4. 'sum' → logprob: -2.5295217037200928
    5. ' sum' → logprob: -3.1545217037200928
    6. ' ' → logprob: -3.1545217037200928
    7. ' b' → logprob: -4.029521942138672
    8. 'b' → logprob: -4.654521942138672
    9. ' []' → logprob: -4.779521942138672
    10. '[]' → logprob: -5.029521942138672

Token 30: 'APP' (ID: 13444)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.383410930633545
    2. '0' → logprob: -1.508410930633545
    3. 'YES' → logprob: -1.508410930633545
    4. 'Yes' → logprob: -2.508410930633545
    5. 'NO' → logprob: -2.508410930633545
    6. 'No' → logprob: -3.133410930633545
    7. '1' → logprob: -3.883410930633545
    8. 'max' → logprob: -4.383410930633545
    9. 'b' → logprob: -4.758410930633545
    10. '-' → logprob: -5.508410930633545

Token 31: 'RO' (ID: 2013)
  Prédit: 'LE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LE' → logprob: -0.03504161909222603
    2. 'LES' → logprob: -3.535041570663452
    3. 'END' → logprob: -5.535041809082031
    4. 'L' → logprob: -7.535041809082031
    5. 'LET' → logprob: -8.535041809082031
    6. 'RO' → logprob: -8.785041809082031
    7. 'LEM' → logprob: -9.285041809082031
    8. 'LEMENT' → logprob: -9.910041809082031
    9. 'LETE' → logprob: -9.910041809082031
    10. 'LEG' → logprob: -10.410041809082031

Token 32: 'VED' (ID: 85770)
  Prédit: 'VED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VED' → logprob: -0.19449946284294128
    2. 'VE' → logprob: -1.9444994926452637
    3. 'X' → logprob: -3.4444994926452637
    4. 'V' → logprob: -7.319499492645264
    5. 'PR' → logprob: -7.444499492645264
    6. 'VAL' → logprob: -8.694499015808105
    7. 'XI' → logprob: -9.694499015808105
    8. 'ACH' → logprob: -9.819499015808105
    9. 'ved' → logprob: -10.319499015808105
    10. 'Ved' → logprob: -10.444499015808105

Token 33: '"
' (ID: 1092)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31405845284461975
    2. '"' → logprob: -1.6890584230422974
    3. ' if' → logprob: -2.939058542251587
    4. '<|end|>' → logprob: -4.564058303833008
    5. ')' → logprob: -4.939058303833008
    6. '```' → logprob: -5.564058303833008
    7. '")' → logprob: -5.689058303833008
    8. '"""' → logprob: -6.189058303833008
    9. 'for' → logprob: -6.314058303833008
    10. '[:]' → logprob: -7.689058303833008

Token 34: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0023805228993296623
    2. 'for' → logprob: -6.37738037109375
    3. '\n' → logprob: -7.75238037109375
    4. '
' → logprob: -9.12738037109375
    5. 'if' → logprob: -10.12738037109375
    6. ' for' → logprob: -10.37738037109375
    7. ' 
' → logprob: -10.62738037109375
    8. '<|end|>' → logprob: -10.75238037109375
    9. '```' → logprob: -11.75238037109375
    10. '  
' → logprob: -11.87738037109375

Token 35: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0185159333050251
    2. 'i' → logprob: -4.2685160636901855
    3. ' ' → logprob: -5.7685160636901855
    4. '_' → logprob: -7.6435160636901855
    5. ' _' → logprob: -8.518515586853027
    6. ' b' → logprob: -8.518515586853027
    7. ' ' → logprob: -8.518515586853027
    8. '_i' → logprob: -10.143515586853027
    9. 'b' → logprob: -10.268515586853027
    10. '  ' → logprob: -11.268515586853027

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07198671996593475
    2. 'in' → logprob: -3.196986675262451
    3. ' ' → logprob: -3.571986675262451
    4. '  ' → logprob: -8.19698715209961
    5. 'range' → logprob: -10.19698715209961
    6. ' range' → logprob: -10.44698715209961
    7. 'n' → logprob: -10.82198715209961
    8. '(' → logprob: -10.82198715209961
    9. '<|end|>' → logprob: -11.07198715209961
    10. ' n' → logprob: -11.07198715209961

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012464688159525394
    2. 'range' → logprob: -4.51246452331543
    3. ' b' → logprob: -6.63746452331543
    4. 'b' → logprob: -9.51246452331543
    5. ' ' → logprob: -10.76246452331543
    6. '  ' → logprob: -13.13746452331543
    7. '	range' → logprob: -13.13746452331543
    8. '   ' → logprob: -13.38746452331543
    9. '(range' → logprob: -14.13746452331543
    10. ' ran' → logprob: -14.13746452331543

Token 38: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.18105676770210266
    2. '(' → logprob: -1.8060567378997803
    3. ' (' → logprob: -6.681056976318359
    4. ' n' → logprob: -10.68105697631836
    5. '(len' → logprob: -11.55605697631836
    6. '(s' → logprob: -11.80605697631836
    7. ' ' → logprob: -12.05605697631836
    8. '(range' → logprob: -12.18105697631836
    9. 'n' → logprob: -13.43105697631836
    10. '()' → logprob: -13.93105697631836

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007491389289498329
    2. '-' → logprob: -5.382491588592529
    3. ' ):' → logprob: -6.132491588592529
    4. ')' → logprob: -7.757491588592529
    5. '):
' → logprob: -8.632491111755371
    6. ' -' → logprob: -9.882491111755371
    7. ' ' → logprob: -10.757491111755371
    8. '   ' → logprob: -12.257491111755371
    9. ':' → logprob: -12.757491111755371
    10. ' )' → logprob: -13.007491111755371

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.740684449672699
    2. ' if' → logprob: -0.865684449672699
    3. '<|end|>' → logprob: -2.8656845092773438
    4. ' ' → logprob: -3.9906845092773438
    5. ' 
' → logprob: -4.240684509277344
    6. '```' → logprob: -5.865684509277344
    7. '    
' → logprob: -6.115684509277344
    8. '
' → logprob: -6.240684509277344
    9. '    ' → logprob: -6.990684509277344
    10. '<|end|>' → logprob: -6.990684509277344

Token 41: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04216696694493294
    2. 'if' (adapté à ' if') → logprob: -3.6671669483184814
    3. ' ' → logprob: -4.1671671867370605
    4. '   ' → logprob: -8.792166709899902
    5. '    ' → logprob: -10.792166709899902
    6. ' b' → logprob: -10.917166709899902
    7. ' ```' → logprob: -11.542166709899902
    8. ' ' → logprob: -12.292166709899902
    9. 'b' → logprob: -12.417166709899902
    10. '```' → logprob: -12.417166709899902

Token 42: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0028946325182914734
    2. 'b' → logprob: -5.877894401550293
    3. ' ' → logprob: -9.502894401550293
    4. ' not' → logprob: -12.002894401550293
    5. '	b' → logprob: -12.627894401550293
    6. ' ' → logprob: -13.502894401550293
    7. '(b' → logprob: -13.877894401550293
    8. ' (' → logprob: -14.002894401550293
    9. '(' → logprob: -14.627894401550293
    10. '   ' → logprob: -14.877894401550293

Token 43: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.214019307051785e-05
    2. '[' → logprob: -10.375032424926758
    3. ' [' → logprob: -15.125032424926758
    4. '```' → logprob: -16.125032424926758
    5. ' ' → logprob: -16.500032424926758
    6. '[j' → logprob: -16.625032424926758
    7. '[n' → logprob: -16.750032424926758
    8. '[int' → logprob: -16.875032424926758
    9. '[index' → logprob: -17.000032424926758
    10. '[
' → logprob: -17.250032424926758

Token 44: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6738810539245605
    2. ' <' → logprob: -0.7988810539245605
    3. '>' → logprob: -3.9238810539245605
    4. ' >' → logprob: -4.9238810539245605
    5. '%' → logprob: -5.6738810539245605
    6. ' >=' → logprob: -6.1738810539245605
    7. ' ==' → logprob: -6.5488810539245605
    8. '>=' → logprob: -6.5488810539245605
    9. '==' → logprob: -6.6738810539245605
    10. ' ' → logprob: -6.6738810539245605

Token 45: ' %' (ID: 1851)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.40773096680641174
    2. ' <' → logprob: -1.2827309370040894
    3. '%' → logprob: -4.407731056213379
    4. '==' → logprob: -4.532731056213379
    5. '>' → logprob: -4.782731056213379
    6. ' ==' → logprob: -4.907731056213379
    7. '>=' → logprob: -4.907731056213379
    8. ' >=' → logprob: -5.532731056213379
    9. ' >' → logprob: -5.782731056213379
    10. ' %' → logprob: -6.532731056213379

Token 46: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.251226544380188
    2. '3' → logprob: -2.2512264251708984
    3. ' ' → logprob: -2.2512264251708984
    4. '5' → logprob: -5.501226425170898
    5. '7' → logprob: -6.126226425170898
    6. '4' → logprob: -6.501226425170898
    7. '10' → logprob: -6.501226425170898
    8. '400' → logprob: -7.501226425170898
    9. '19' → logprob: -8.126226425170898
    10. '6' → logprob: -8.751226425170898

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05560861527919769
    2. '3' → logprob: -3.4306085109710693
    3. '5' → logprob: -4.680608749389648
    4. '10' → logprob: -4.805608749389648
    5. '4' → logprob: -6.430608749389648
    6. '7' → logprob: -7.055608749389648
    7. '6' → logprob: -7.180608749389648
    8. ' ' → logprob: -8.305608749389648
    9. '19' → logprob: -8.930608749389648
    10. '9' → logprob: -9.430608749389648

Token 48: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.09002980589866638
    2. ' !=' → logprob: -2.715029716491699
    3. '==' → logprob: -3.965029716491699
    4. ' ==' → logprob: -7.215029716491699
    5. '!' → logprob: -9.7150297164917
    6. '=' → logprob: -9.8400297164917
    7. '!==' → logprob: -11.0900297164917
    8. ' ' → logprob: -11.2150297164917
    9. '0' → logprob: -11.8400297164917
    10. ':' → logprob: -11.8400297164917

Token 49: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4048006236553192
    2. '1' → logprob: -1.2798006534576416
    3. '0' → logprob: -2.9048006534576416
    4. '!=' → logprob: -11.154800415039062
    5. '!' → logprob: -11.779800415039062
    6. ' ' → logprob: -12.029800415039062
    7. ' !=' → logprob: -12.904800415039062
    8. '=' → logprob: -13.654800415039062
    9. '```' → logprob: -13.842300415039062
    10. ':' → logprob: -14.842300415039062

Token 50: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07069245725870132
    2. '0' → logprob: -2.695692539215088
    3. ' ' → logprob: -7.195692539215088
    4. '!' → logprob: -13.63319206237793
    5. '!=' → logprob: -13.69569206237793
    6. '```' → logprob: -13.82069206237793
    7. '-' → logprob: -15.00819206237793
    8. '3' → logprob: -15.07069206237793
    9. ' !=' → logprob: -15.13319206237793
    10. '2' → logprob: -15.50819206237793

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012561570852994919
    2. ' and' → logprob: -4.887561798095703
    3. ' :' → logprob: -6.012561798095703
    4. ' ==' → logprob: -6.887561798095703
    5. ' ' → logprob: -7.512561798095703
    6. 'and' → logprob: -7.637561798095703
    7. '==' → logprob: -8.387561798095703
    8. ':
' → logprob: -9.262561798095703
    9. ' !=' → logprob: -10.012561798095703
    10. ' or' → logprob: -10.887561798095703

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24547255039215088
    2. '   ' → logprob: -1.7454725503921509
    3. ' ans' → logprob: -3.7454724311828613
    4. ' continue' → logprob: -4.620472431182861
    5. ' ' → logprob: -5.995472431182861
    6. '\n' → logprob: -6.245472431182861
    7. '    ' → logprob: -6.370472431182861
    8. 'ans' → logprob: -7.370472431182861
    9. 'continue' → logprob: -7.995472431182861
    10. '	ans' → logprob: -7.995472431182861

Token 53: ' if' (ID: 538)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.328630268573761
    2. 'ans' → logprob: -2.203630208969116
    3. ' continue' → logprob: -2.328630208969116
    4. '   ' → logprob: -3.453630208969116
    5. ' pass' → logprob: -4.203630447387695
    6. 'continue' → logprob: -4.828630447387695
    7. ' ' → logprob: -4.953630447387695
    8. ' if' → logprob: -5.578630447387695
    9. '	ans' → logprob: -6.328630447387695
    10. '       ' → logprob: -6.453630447387695

Token 54: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.02120969444513321
    2. ' ' → logprob: -4.146209716796875
    3. 'b' → logprob: -6.646209716796875
    4. ' not' → logprob: -6.771209716796875
    5. ' n' → logprob: -6.771209716796875
    6. ' i' → logprob: -7.146209716796875
    7. ' ans' → logprob: -8.146209716796875
    8. ' a' → logprob: -9.021209716796875
    9. ' "' → logprob: -9.271209716796875
    10. ' len' → logprob: -10.021209716796875

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.829823102336377e-05
    2. '[' → logprob: -9.25009822845459
    3. ' [' → logprob: -14.25009822845459
    4. '[j' → logprob: -15.12509822845459
    5. '[I' → logprob: -15.62509822845459
    6. '[int' → logprob: -15.87509822845459
    7. '[
' → logprob: -16.125099182128906
    8. '[ii' → logprob: -16.250099182128906
    9. ' ' → logprob: -16.250099182128906
    10. '[]' → logprob: -16.625099182128906

Token 56: ']' (ID: 60)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.5734776258468628
    2. ' ==' → logprob: -1.8234776258468628
    3. ' <' → logprob: -1.9484776258468628
    4. ']' → logprob: -2.4484777450561523
    5. '==' → logprob: -2.6984777450561523
    6. ' ' → logprob: -2.8234777450561523
    7. ' >' → logprob: -3.0734777450561523
    8. '%' → logprob: -3.0734777450561523
    9. ' !=' → logprob: -3.1984777450561523
    10. ' <=' → logprob: -3.4484777450561523

Token 57: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0631680488586426
    2. ' <' → logprob: -1.3131680488586426
    3. '==' → logprob: -2.4381680488586426
    4. ' %' → logprob: -2.6881680488586426
    5. ' <=' → logprob: -3.1881680488586426
    6. ' !=' → logprob: -3.1881680488586426
    7. ' >' → logprob: -3.1881680488586426
    8. '%' → logprob: -3.6881680488586426
    9. '<' → logprob: -3.8131680488586426
    10. ' >=' → logprob: -4.313168048858643

Token 58: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.13571815192699432
    2. ' ' → logprob: -2.2607181072235107
    3. '4' → logprob: -3.8857181072235107
    4. '5' → logprob: -7.01071834564209
    5. '10' → logprob: -8.01071834564209
    6. '2' → logprob: -8.13571834564209
    7. '6' → logprob: -9.13571834564209
    8. '7' → logprob: -9.26071834564209
    9. '8' → logprob: -9.38571834564209
    10. '  ' → logprob: -9.51071834564209

Token 59: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04482637345790863
    2. '4' → logprob: -3.1698262691497803
    3. '10' → logprob: -7.419826507568359
    4. '5' → logprob: -7.544826507568359
    5. '6' → logprob: -7.919826507568359
    6. ' ' → logprob: -9.29482650756836
    7. '8' → logprob: -9.41982650756836
    8. '   ' → logprob: -10.73232650756836
    9. '7' → logprob: -10.85732650756836
    10. '  ' → logprob: -11.29482650756836

Token 60: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.11485942453145981
    2. ' !=' → logprob: -2.2398593425750732
    3. '==' → logprob: -6.614859580993652
    4. '()!=' → logprob: -8.614859580993652
    5. ']!=' → logprob: -9.239859580993652
    6. ')!=' → logprob: -9.614859580993652
    7. '=' → logprob: -9.989859580993652
    8. ' ' → logprob: -10.114859580993652
    9. '>' → logprob: -10.114859580993652
    10. '!==' → logprob: -10.239859580993652

Token 61: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5760596990585327
    2. '0' → logprob: -0.8260596990585327
    3. '=' → logprob: -9.451059341430664
    4. '1' → logprob: -10.826059341430664
    5. '```' → logprob: -12.013559341430664
    6. '2' → logprob: -12.451059341430664
    7. '3' → logprob: -13.201059341430664
    8. '==' → logprob: -13.263559341430664
    9. '  ' → logprob: -14.138559341430664
    10. ' ' → logprob: -14.138559341430664

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006056951242499053
    2. ' ' → logprob: -7.625605583190918
    3. '1' → logprob: -10.000605583190918
    4. '2' → logprob: -10.750605583190918
    5. '3' → logprob: -10.938105583190918
    6. '6' → logprob: -11.500605583190918
    7. '=' → logprob: -11.750605583190918
    8. '9' → logprob: -12.938105583190918
    9. '```' → logprob: -13.250605583190918
    10. '4' → logprob: -13.938105583190918

Token 63: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03747854381799698
    2. ' or' → logprob: -3.787478446960449
    3. '           ' → logprob: -4.662478446960449
    4. ' and' → logprob: -5.912478446960449
    5. ':
' → logprob: -6.912478446960449
    6. '       ' → logprob: -7.162478446960449
    7. ' :' → logprob: -9.41247844696045
    8. '):' → logprob: -10.66247844696045
    9. '   ' → logprob: -10.78747844696045
    10. '          ' → logprob: -10.91247844696045

Token 64: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0032688570208847523
    2. 'b' → logprob: -5.753268718719482
    3. ' ' → logprob: -9.87826919555664
    4. ' not' → logprob: -11.62826919555664
    5. '   ' → logprob: -11.62826919555664
    6. '    ' → logprob: -11.87826919555664
    7. ' and' → logprob: -13.25326919555664
    8. '  ' → logprob: -13.31576919555664
    9. '	b' → logprob: -13.31576919555664
    10. ' ' → logprob: -13.37826919555664

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.707997428951785e-05
    2. '[' → logprob: -9.500077247619629
    3. '%' → logprob: -14.625077247619629
    4. 'i' → logprob: -14.875077247619629
    5. '```' → logprob: -15.750077247619629
    6. '[I' → logprob: -16.000076293945312
    7. '<|end|>' → logprob: -16.125076293945312
    8. '   ' → logprob: -16.500076293945312
    9. '[]' → logprob: -16.562576293945312
    10. '%i' → logprob: -16.625076293945312

Token 66: ']' (ID: 60)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2901655435562134
    2. '%' → logprob: -1.4151655435562134
    3. ']' → logprob: -5.165165424346924
    4. '!=' → logprob: -6.915165424346924
    5. ' ' → logprob: -7.415165424346924
    6. ' !=' → logprob: -7.415165424346924
    7. ')' → logprob: -8.165165901184082
    8. '7' → logprob: -9.165165901184082
    9. '   ' → logprob: -9.352665901184082
    10. '>' → logprob: -9.977665901184082

Token 67: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.18783201277256012
    2. '%' → logprob: -1.937831997871399
    3. ' !=' → logprob: -4.062831878662109
    4. '!=' → logprob: -4.687831878662109
    5. '==' → logprob: -7.937831878662109
    6. ' ' → logprob: -8.56283187866211
    7. ' ==' → logprob: -8.68783187866211
    8. '   ' → logprob: -10.81283187866211
    9. ' not' → logprob: -11.06283187866211
    10. '  ' → logprob: -11.18783187866211

Token 68: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0025904078502207994
    2. ' ' → logprob: -6.127590179443359
    3. '7' → logprob: -9.00259017944336
    4. '4' → logprob: -9.12759017944336
    5. '2' → logprob: -9.75259017944336
    6. '9' → logprob: -10.62759017944336
    7. '```' → logprob: -10.75259017944336
    8. '6' → logprob: -11.37759017944336
    9. '   ' → logprob: -11.37759017944336
    10. '  ' → logprob: -11.50259017944336

Token 69: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0007750853546895087
    2. '4' → logprob: -7.50077486038208
    3. '7' → logprob: -9.125775337219238
    4. '10' → logprob: -10.375775337219238
    5. '9' → logprob: -10.750775337219238
    6. ' ' → logprob: -11.125775337219238
    7. '   ' → logprob: -11.500775337219238
    8. '```' → logprob: -11.500775337219238
    9. '``' → logprob: -12.688275337219238
    10. '2' → logprob: -12.688275337219238

Token 70: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4023577868938446
    2. '!=' → logprob: -1.152357816696167
    3. '==' → logprob: -4.402357578277588
    4. ' ==' → logprob: -5.777357578277588
    5. ' ' → logprob: -12.027358055114746
    6. ')!=' → logprob: -12.527358055114746
    7. '()!=' → logprob: -12.902358055114746
    8. '!==' → logprob: -13.152358055114746
    9. '=' → logprob: -13.652358055114746
    10. '<|end|>' → logprob: -13.652358055114746

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1427019238471985
    2. ' ' → logprob: -2.0177018642425537
    3. '```' → logprob: -11.392702102661133
    4. '   ' → logprob: -12.330202102661133
    5. '``' → logprob: -13.517702102661133
    6. '  ' → logprob: -13.580202102661133
    7. ' ' → logprob: -14.330202102661133
    8. '=' → logprob: -14.455202102661133
    9. '<|end|>' → logprob: -14.455202102661133
    10. '3' → logprob: -14.517702102661133

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026526954025030136
    2. ' ' → logprob: -8.250265121459961
    3. '1' → logprob: -13.812765121459961
    4. '```' → logprob: -14.312765121459961
    5. '3' → logprob: -14.562765121459961
    6. '   ' → logprob: -15.312765121459961
    7. '2' → logprob: -15.500265121459961
    8. '5' → logprob: -15.875265121459961
    9. '``' → logprob: -16.00026512145996
    10. '  ' → logprob: -16.18776512145996

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00048048171447589993
    2. ':
' → logprob: -8.000480651855469
    3. '       ' → logprob: -10.000480651855469
    4. ' and' → logprob: -10.000480651855469
    5. ' or' → logprob: -10.875480651855469
    6. '   ' → logprob: -11.625480651855469
    7. ' :' → logprob: -11.750480651855469
    8. '):' → logprob: -11.875480651855469
    9. '           ' → logprob: -12.250480651855469
    10. 'and' → logprob: -12.750480651855469

Token 74: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41664204001426697
    2. '           ' → logprob: -1.1666420698165894
    3. '\n' → logprob: -4.041642189025879
    4. '   ' → logprob: -5.541642189025879
    5. 'ans' → logprob: -5.666642189025879
    6. ' ans' → logprob: -6.041642189025879
    7. '\' → logprob: -8.041642189025879
    8. 'newline' → logprob: -8.541642189025879
    9. '(ans' → logprob: -8.541642189025879
    10. '```' → logprob: -8.666642189025879

Token 75: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.18061771988868713
    2. '   ' → logprob: -2.5556178092956543
    3. ' ans' → logprob: -2.6806178092956543
    4. '\n' → logprob: -4.305617809295654
    5. '	ans' → logprob: -5.805617809295654
    6. '       ' → logprob: -7.430617809295654
    7. '(ans' → logprob: -7.680617809295654
    8. '```' → logprob: -7.805617809295654
    9. '\' → logprob: -8.305617332458496
    10. '    
' → logprob: -8.430617332458496

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141518115997314
    2. '=' → logprob: -1.7014151811599731
    3. ' ' → logprob: -13.576415061950684
    4. ' ="' → logprob: -15.576415061950684
    5. ' +=' → logprob: -15.576415061950684
    6. '```' → logprob: -16.451416015625
    7. '+=' → logprob: -16.576416015625
    8. '＝' → logprob: -17.076416015625
    9. ' ='' → logprob: -17.201416015625
    10. '	' → logprob: -18.076416015625

Token 77: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0003623985394369811
    2. '"D' → logprob: -8.125362396240234
    3. '"N' → logprob: -11.000362396240234
    4. '"W' → logprob: -11.250362396240234
    5. ' "' → logprob: -11.625362396240234
    6. ''' → logprob: -11.625362396240234
    7. '"H' → logprob: -12.625362396240234
    8. '   ' → logprob: -13.000362396240234
    9. ' ' → logprob: -13.000362396240234
    10. 'RE' → logprob: -13.250362396240234

Token 78: 'DEN' (ID: 109767)
  Prédit: 'DEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEN' → logprob: -0.012603361159563065
    2. 'RE' → logprob: -4.387603282928467
    3. '"' → logprob: -9.637603759765625
    4. ' DEN' → logprob: -11.137603759765625
    5. '_DEN' → logprob: -12.137603759765625
    6. 'NOT' → logprob: -12.762603759765625
    7. 'DE' → logprob: -13.512603759765625
    8. 'NA' → logprob: -14.387603759765625
    9. 'DECL' → logprob: -14.387603759765625
    10. 'NE' → logprob: -14.637603759765625

Token 79: 'IED' (ID: 17589)
  Prédit: 'IED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IED' → logprob: -0.02333853393793106
    2. 'I' → logprob: -3.773338556289673
    3. 'ED' → logprob: -9.648338317871094
    4. 'Y' → logprob: -11.898338317871094
    5. '"' → logprob: -12.523338317871094
    6. '``' → logprob: -12.648338317871094
    7. '```' → logprob: -12.648338317871094
    8. '

' → logprob: -13.273338317871094
    9. 'IE' → logprob: -13.523338317871094
    10. 'IN' → logprob: -13.648338317871094

Token 80: '"
' (ID: 1092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001681405701674521
    2. 'break' → logprob: -9.500167846679688
    3. '```' → logprob: -10.375167846679688
    4. ' print' → logprob: -10.625167846679688
    5. '           ' → logprob: -10.875167846679688
    6. '   ' → logprob: -11.875167846679688
    7. '
' → logprob: -12.750167846679688
    8. '\n' → logprob: -12.750167846679688
    9. '       ' → logprob: -13.500167846679688
    10. '            
' → logprob: -14.250167846679688

Token 82: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03410699591040611
    2. '(ans' → logprob: -3.784106969833374
    3. '("("' → logprob: -4.534107208251953
    4. '('' → logprob: -10.159107208251953
    5. '(f' → logprob: -11.034107208251953
    6. '("' → logprob: -12.909107208251953
    7. '()' → logprob: -13.284107208251953
    8. '("(' → logprob: -13.409107208251953
    9. '(
' → logprob: -13.409107208251953
    10. ' (' → logprob: -13.659107208251953

Token 83: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -16.125
    3. ')`' → logprob: -17.25
    4. ' )' → logprob: -17.375
    5. '`)' → logprob: -18.25
    6. '()' → logprob: -18.375
    7. ')
' → logprob: -18.375
    8. '')' → logprob: -18.875
    9. '())' → logprob: -19.875
    10. '")' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 81
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 41.98%
Précision adaptée (1ère position): 44.44%
Précision (top 10): 82.72%
================================================================================
