================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:36:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
L = [-1, -1, -1]
ans = 1
color = list(map(int, input().split()))
for i in range(n):
    k = 0
    for l in L:
        if l == color[i] - 1:
            k += 1
    ans = (ans * k) % (10**9 + 7)
    for j in range(3):
        if L[j] == color[i] - 1:
            L[j] += 1
            break
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000444850797066465
    2. ''' → logprob: -8.500444412231445
    3. '('' → logprob: -9.375444412231445
    4. '(n' → logprob: -10.000444412231445
    5. '```' → logprob: -10.375444412231445
    6. '`' → logprob: -10.750444412231445
    7. '("("' → logprob: -11.125444412231445
    8. '(
' → logprob: -11.125444412231445
    9. ')' → logprob: -11.875444412231445
    10. '()' → logprob: -12.250444412231445

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'L' (ID: 43)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8367189764976501
    2. '[' → logprob: -1.461719036102295
    3. '=' → logprob: -1.711719036102295
    4. ' =' → logprob: -2.336719036102295
    5. 'ist' → logprob: -3.461719036102295
    6. 'i' → logprob: -4.586719036102295
    7. '.append' → logprob: -5.961719036102295
    8. 's' → logprob: -5.961719036102295
    9. '[i' → logprob: -6.336719036102295
    10. '[:]' → logprob: -6.336719036102295

Token 7: ' [-' (ID: 20191)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.41247278451919556
    2. '[]' → logprob: -1.1624727249145508
    3. ' [' → logprob: -4.287472724914551
    4. '[' → logprob: -4.787472724914551
    5. '[int' → logprob: -7.037472724914551
    6. '[input' → logprob: -7.162472724914551
    7. ' list' → logprob: -7.287472724914551
    8. 'list' → logprob: -7.287472724914551
    9. '[n' → logprob: -9.53747272491455
    10. '[list' → logprob: -9.91247272491455

Token 8: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5192923545837402
    2. 'n' → logprob: -1.0192923545837402
    3. 'int' → logprob: -3.3942923545837402
    4. 'i' → logprob: -5.14429235458374
    5. '(' → logprob: -7.26929235458374
    6. ' ' → logprob: -7.39429235458374
    7. ' n' → logprob: -7.51929235458374
    8. '5' → logprob: -7.64429235458374
    9. '2' → logprob: -8.019292831420898
    10. '10' → logprob: -8.269292831420898

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020279323682188988
    2. ']' → logprob: -4.020279407501221
    3. ' for' → logprob: -6.895279407501221
    4. ' ,' → logprob: -7.395279407501221
    5. ' ]' → logprob: -8.770278930664062
    6. ',
' → logprob: -9.270278930664062
    7. 'for' → logprob: -9.270278930664062
    8. ']*' → logprob: -10.020278930664062
    9. ')' → logprob: -10.520278930664062
    10. '1' → logprob: -10.645278930664062

Token 10: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3526276648044586
    2. '0' → logprob: -1.4776276350021362
    3. '1' → logprob: -2.977627754211426
    4. ' -' → logprob: -4.727627754211426
    5. '2' → logprob: -5.477627754211426
    6. '-' → logprob: -5.852627754211426
    7. ' ]' → logprob: -6.852627754211426
    8. ']' → logprob: -7.852627754211426
    9. 'n' → logprob: -8.227627754211426
    10. ' n' → logprob: -8.227627754211426

Token 11: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002353640884393826
    2. '2' → logprob: -8.750235557556152
    3. ' ' → logprob: -10.125235557556152
    4. '-' → logprob: -12.312735557556152
    5. 'n' → logprob: -12.375235557556152
    6. '100' → logprob: -12.687735557556152
    7. '10' → logprob: -12.687735557556152
    8. ' -' → logprob: -12.750235557556152
    9. '5' → logprob: -12.812735557556152
    10. '0' → logprob: -12.937735557556152

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02691158466041088
    2. ']' → logprob: -3.651911497116089
    3. ' ,' → logprob: -8.526911735534668
    4. ')' → logprob: -8.901911735534668
    5. ',
' → logprob: -9.276911735534668
    6. '0' → logprob: -9.651911735534668
    7. ',

' → logprob: -10.276911735534668
    8. ' ]' → logprob: -10.526911735534668
    9. '1' → logprob: -11.026911735534668
    10. ')]' → logprob: -11.901911735534668

Token 13: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.24239268898963928
    2. ' -' → logprob: -1.617392659187317
    3. '0' → logprob: -4.367392539978027
    4. '1' → logprob: -6.242392539978027
    5. ' ' → logprob: -6.742392539978027
    6. 'n' → logprob: -7.617392539978027
    7. '2' → logprob: -8.367392539978027
    8. '-n' → logprob: -9.492392539978027
    9. ' n' → logprob: -10.242392539978027
    10. '...' → logprob: -10.367392539978027

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.857719275401905e-05
    2. '2' → logprob: -10.875038146972656
    3. ' ' → logprob: -12.187538146972656
    4. ' -' → logprob: -12.625038146972656
    5. '-' → logprob: -13.562538146972656
    6. '0' → logprob: -13.687538146972656
    7. '100' → logprob: -13.937538146972656
    8. 'n' → logprob: -14.062538146972656
    9. '3' → logprob: -14.125038146972656
    10. '```' → logprob: -14.187538146972656

Token 15: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0896192118525505
    2. ']' → logprob: -2.4646191596984863
    3. ')' → logprob: -7.714619159698486
    4. ' ,' → logprob: -9.464619636535645
    5. ' ]' → logprob: -10.089619636535645
    6. '])' → logprob: -10.089619636535645
    7. ',
' → logprob: -10.464619636535645
    8. ')]' → logprob: -11.839619636535645
    9. ',

' → logprob: -11.964619636535645
    10. ',n' → logprob: -12.214619636535645

Token 16: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1355052888393402
    2. 'i' → logprob: -3.260505199432373
    3. ' for' → logprob: -3.385505199432373
    4. 'n' → logprob: -3.760505199432373
    5. 'if' → logprob: -3.885505199432373
    6. '
' → logprob: -5.510505199432373
    7. '[' → logprob: -6.510505199432373
    8. 's' → logprob: -6.760505199432373
    9. ' if' → logprob: -7.010505199432373
    10. '```' → logprob: -7.260505199432373

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2138676941394806
    2. ' =' → logprob: -2.338867664337158
    3. '=' → logprob: -2.463867664337158
    4. '_' → logprob: -5.213867664337158
    5. '.' → logprob: -6.588867664337158
    6. 's' → logprob: -6.713867664337158
    7. '[:]' → logprob: -7.088867664337158
    8. ' ' → logprob: -7.338867664337158
    9. '[]' → logprob: -7.463867664337158
    10. '[i' → logprob: -8.588868141174316

Token 18: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.335099220275879
    2. ' []' → logprob: -1.460099220275879
    3. '[]' → logprob: -1.710099220275879
    4. '[' → logprob: -2.210099220275879
    5. ' [' → logprob: -2.210099220275879
    6. ' ' → logprob: -2.710099220275879
    7. '"' → logprob: -4.335099220275879
    8. ''' → logprob: -4.585099220275879
    9. '[n' → logprob: -5.960099220275879
    10. ' "' → logprob: -5.960099220275879

Token 19: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3459921181201935
    2. '[' → logprob: -1.845992088317871
    3. '[]' → logprob: -2.595992088317871
    4. '-' → logprob: -4.470992088317871
    5. '[max' → logprob: -4.720992088317871
    6. '[-' → logprob: -4.845992088317871
    7. '[n' → logprob: -4.970992088317871
    8. 'max' → logprob: -5.220992088317871
    9. '[int' → logprob: -5.595992088317871
    10. 'n' → logprob: -5.595992088317871

Token 20: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.408931165933609
    2. '
' → logprob: -1.4089311361312866
    3. ' for' → logprob: -2.908931255340576
    4. '+' → logprob: -4.658931255340576
    5. '0' → logprob: -5.033931255340576
    6. '\n' → logprob: -5.533931255340576
    7. 'n' → logprob: -5.658931255340576
    8. '*' → logprob: -6.158931255340576
    9. ' 
' → logprob: -6.408931255340576
    10. '<|end|>' → logprob: -6.658931255340576

Token 21: 'color' (ID: 4991)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030856484547257423
    2. ' for' → logprob: -3.5308563709259033
    3. '
' → logprob: -7.030856609344482
    4. 'n' → logprob: -10.155856132507324
    5. '\n' → logprob: -10.405856132507324
    6. '```' → logprob: -10.405856132507324
    7. '*' → logprob: -10.655856132507324
    8. ')' → logprob: -10.655856132507324
    9. 'i' → logprob: -11.530856132507324
    10. 'if' → logprob: -11.530856132507324

Token 22: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010064641013741493
    2. ' =' → logprob: -5.010064601898193
    3. '[' → logprob: -7.260064601898193
    4. '_' → logprob: -7.635064601898193
    5. '_count' → logprob: -7.885064601898193
    6. '[]' → logprob: -7.885064601898193
    7. '_s' → logprob: -8.260065078735352
    8. '_counts' → logprob: -8.260065078735352
    9. '=' → logprob: -8.385065078735352
    10. '[s' → logprob: -8.510065078735352

Token 23: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.1049658060073853
    2. ' []' → logprob: -1.6049658060073853
    3. ' ' → logprob: -2.1049656867980957
    4. ' input' → logprob: -2.2299656867980957
    5. '0' → logprob: -2.8549656867980957
    6. '[' → logprob: -3.4799656867980957
    7. '[]' → logprob: -3.6049656867980957
    8. 'input' → logprob: -3.7299656867980957
    9. ' '' → logprob: -3.9799656867980957
    10. '[int' → logprob: -4.104965686798096

Token 24: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004216170927975327
    2. '(range' → logprob: -8.250421524047852
    3. ' (' → logprob: -10.625421524047852
    4. '(
' → logprob: -11.125421524047852
    5. '([' → logprob: -11.125421524047852
    6. '('' → logprob: -11.375421524047852
    7. '(input' → logprob: -11.500421524047852
    8. '()' → logprob: -11.625421524047852
    9. '[' → logprob: -11.625421524047852
    10. '```' → logprob: -11.625421524047852

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023672955110669136
    2. '(' → logprob: -3.8986730575561523
    3. '(lambda' → logprob: -6.273673057556152
    4. '(str' → logprob: -7.648673057556152
    5. '(input' → logprob: -7.898673057556152
    6. ')' → logprob: -8.898673057556152
    7. 'int' → logprob: -9.523673057556152
    8. '[int' → logprob: -9.648673057556152
    9. '<int' → logprob: -10.398673057556152
    10. '<|end|>' → logprob: -10.398673057556152

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005503745283931494
    2. ',input' → logprob: -5.2555036544799805
    3. '(' → logprob: -8.50550365447998
    4. '=input' → logprob: -10.63050365447998
    5. ',' → logprob: -10.75550365447998
    6. ' (' → logprob: -11.75550365447998
    7. 'input' → logprob: -11.88050365447998
    8. ')' → logprob: -12.75550365447998
    9. ' input' → logprob: -12.75550365447998
    10. ' ,' → logprob: -14.63050365447998

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10021507740020752
    2. ' input' → logprob: -2.350214958190918
    3. '(input' → logprob: -11.850214958190918
    4. ',input' → logprob: -14.225214958190918
    5. ' ' → logprob: -15.225214958190918
    6. '=input' → logprob: -15.600214958190918
    7. '	input' → logprob: -16.600215911865234
    8. 'range' → logprob: -17.475215911865234
    9. '[input' → logprob: -17.475215911865234
    10. ')' → logprob: -17.600215911865234

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2654993534088135
    2. '()' → logprob: -1.5154993534088135
    3. '())' → logprob: -4.640499114990234
    4. '()))' → logprob: -5.640499114990234
    5. '()));' → logprob: -9.140499114990234
    6. '(' → logprob: -10.140499114990234
    7. ')' → logprob: -10.390499114990234
    8. '(),' → logprob: -11.015499114990234
    9. '());' → logprob: -11.140499114990234
    10. '())))' → logprob: -11.265499114990234

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026848804554902017
    2. 'strip' → logprob: -8.250268936157227
    3. ' split' → logprob: -12.500268936157227
    4. 'rstrip' → logprob: -13.125268936157227
    5. '(split' → logprob: -13.625268936157227
    6. 'spl' → logprob: -15.875268936157227
    7. ')' → logprob: -16.750268936157227
    8. 's' → logprob: -17.000268936157227
    9. 'replace' → logprob: -18.000268936157227
    10. '.split' → logprob: -18.125268936157227

Token 30: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.09350661933422089
    2. '()' → logprob: -2.5935065746307373
    3. '())' → logprob: -4.468506813049316
    4. '(' → logprob: -6.343506813049316
    5. '))' → logprob: -6.843506813049316
    6. ')' → logprob: -9.593506813049316
    7. '()))
' → logprob: -9.968506813049316
    8. '()));' → logprob: -10.468506813049316
    9. '(),' → logprob: -10.843506813049316
    10. '()))

' → logprob: -11.343506813049316

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3157722055912018
    2. ' for' → logprob: -1.3157721757888794
    3. '
' → logprob: -6.44077205657959
    4. '\n' → logprob: -7.44077205657959
    5. '```' → logprob: -8.81577205657959
    6. ')' → logprob: -9.69077205657959
    7. '[' → logprob: -10.69077205657959
    8. ' ' → logprob: -10.94077205657959
    9. '<|end|>' → logprob: -11.06577205657959
    10. ' 
' → logprob: -11.56577205657959

Token 32: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15802255272865295
    2. ' i' → logprob: -2.15802264213562
    3. '  ' → logprob: -3.53302264213562
    4. ' color' → logprob: -7.283022403717041
    5. '_' → logprob: -7.533022403717041
    6. ' _' → logprob: -9.7830228805542
    7. 'i' → logprob: -9.7830228805542
    8. ' ‌' → logprob: -11.0330228805542
    9. ' c' → logprob: -11.1580228805542
    10. 'color' → logprob: -11.6580228805542

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006164712831377983
    2. 'in' → logprob: -5.25616455078125
    3. ' ' → logprob: -7.00616455078125
    4. '  ' → logprob: -11.13116455078125
    5. '	in' → logprob: -13.13116455078125
    6. 'range' → logprob: -13.38116455078125
    7. ' range' → logprob: -13.63116455078125
    8. ')' → logprob: -13.88116455078125
    9. ' ' → logprob: -14.38116455078125
    10. '<|end|>' → logprob: -14.50616455078125

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10226107388734818
    2. 'range' → logprob: -2.3522610664367676
    3. ' color' → logprob: -6.477261066436768
    4. 'color' → logprob: -7.602261066436768
    5. ' ' → logprob: -11.852261543273926
    6. '	range' → logprob: -12.852261543273926
    7. '(range' → logprob: -13.102261543273926
    8. ' xrange' → logprob: -13.102261543273926
    9. ')' → logprob: -14.477261543273926
    10. '_range' → logprob: -15.727261543273926

Token 35: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0112067349255085
    2. '(n' → logprob: -4.76120662689209
    3. '(len' → logprob: -6.01120662689209
    4. ' (' → logprob: -9.01120662689209
    5. '(i' → logprob: -12.26120662689209
    6. '(length' → logprob: -12.51120662689209
    7. '(
' → logprob: -12.76120662689209
    8. '(range' → logprob: -13.76120662689209
    9. ' ' → logprob: -14.01120662689209
    10. '()' → logprob: -14.51120662689209

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007712708320468664
    2. ':' → logprob: -7.6257710456848145
    3. '):
' → logprob: -9.250771522521973
    4. ' ):' → logprob: -9.250771522521973
    5. '-' → logprob: -9.875771522521973
    6. ')' → logprob: -10.375771522521973
    7. '+' → logprob: -12.750771522521973
    8. '):
' → logprob: -14.000771522521973
    9. '**' → logprob: -14.375771522521973
    10. ' ' → logprob: -14.500771522521973

Token 37: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' k' (ID: 372)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20728954672813416
    2. 'if' → logprob: -1.8322895765304565
    3. '```' → logprob: -4.582289695739746
    4. '<|end|>' → logprob: -5.207289695739746
    5. '   ' → logprob: -5.582289695739746
    6. ' ' → logprob: -5.832289695739746
    7. '1' → logprob: -6.707289695739746
    8. '[' → logprob: -7.082289695739746
    9. ' color' → logprob: -7.457289695739746
    10. '0' → logprob: -8.332289695739746

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03297809511423111
    2. '=' → logprob: -3.657978057861328
    3. ' ' → logprob: -5.032978057861328
    4. ',' → logprob: -10.282978057861328
    5. 'e' → logprob: -10.782978057861328
    6. ' color' → logprob: -11.157978057861328
    7. ' ==' → logprob: -11.407978057861328
    8. '  ' → logprob: -11.657978057861328
    9. '=color' → logprob: -11.657978057861328
    10. 'color' → logprob: -12.407978057861328

Token 40: ' ' (ID: 220)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.6931691765785217
    2. 'color' → logprob: -0.6931691765785217
    3. ' ' → logprob: -11.818169593811035
    4. '	color' → logprob: -12.818169593811035
    5. '0' → logprob: -12.943169593811035
    6. 'int' → logprob: -13.318169593811035
    7. ' i' → logprob: -13.318169593811035
    8. '(color' → logprob: -14.193169593811035
    9. 'c' → logprob: -14.318169593811035
    10. 'i' → logprob: -14.443169593811035

Token 41: '0' (ID: 15)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0009974405402317643
    2. ' color' → logprob: -7.000997543334961
    3. 'i' → logprob: -9.750997543334961
    4. 'int' → logprob: -11.250997543334961
    5. 'L' → logprob: -11.750997543334961
    6. '0' → logprob: -13.375997543334961
    7. 'k' → logprob: -14.500997543334961
    8. ' i' → logprob: -14.500997543334961
    9. '(color' → logprob: -14.500997543334961
    10. 'c' → logprob: -14.750997543334961

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7399734258651733
    2. '<|end|>' → logprob: -0.8649734258651733
    3. ' ' → logprob: -3.114973545074463
    4. '   ' → logprob: -3.239973545074463
    5. 'if' → logprob: -4.614973545074463
    6. '<|end|>' → logprob: -6.364973545074463
    7. '    ' → logprob: -6.614973545074463
    8. ',' → logprob: -7.364973545074463
    9. ' 
' → logprob: -7.739973545074463
    10. '	if' → logprob: -7.864973545074463

Token 44: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33144164085388184
    2. ' if' → logprob: -1.5814416408538818
    3. 'for' (adapté à ' for') → logprob: -3.081441640853882
    4. ' for' → logprob: -4.331441879272461
    5. 'while' → logprob: -5.206441879272461
    6. 'k' → logprob: -5.581441879272461
    7. '   ' → logprob: -5.581441879272461
    8. ' while' → logprob: -6.206441879272461
    9. 'color' → logprob: -7.081441879272461
    10. 'i' → logprob: -7.831441879272461

Token 45: ' l' (ID: 305)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.08795830607414246
    2. ' range' → logprob: -3.212958335876465
    3. 'j' → logprob: -3.837958335876465
    4. 'range' → logprob: -4.462958335876465
    5. ' color' → logprob: -5.087958335876465
    6. ' ' → logprob: -6.212958335876465
    7. ' L' → logprob: -7.087958335876465
    8. 'color' → logprob: -7.212958335876465
    9. ' k' → logprob: -8.337958335876465
    10. 'L' → logprob: -8.962958335876465

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007695229258388281
    2. 'in' → logprob: -4.882695198059082
    3. ' ' → logprob: -10.757695198059082
    4. ',' → logprob: -11.007695198059082
    5. '1' → logprob: -11.632695198059082
    6. '3' → logprob: -11.882695198059082
    7. 'range' → logprob: -12.507695198059082
    8. '2' → logprob: -12.757695198059082
    9. '+' → logprob: -13.132695198059082
    10. 'j' → logprob: -13.132695198059082

Token 47: ' L' (ID: 451)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6182633638381958
    2. 'range' → logprob: -0.8682633638381958
    3. 'L' → logprob: -3.6182632446289062
    4. ' L' → logprob: -4.618263244628906
    5. 'color' → logprob: -6.243263244628906
    6. ' color' → logprob: -6.743263244628906
    7. '[' → logprob: -6.868263244628906
    8. '[-' → logprob: -8.868263244628906
    9. ' [' → logprob: -8.993263244628906
    10. '[L' → logprob: -9.618263244628906

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011140200076624751
    2. ':
' → logprob: -7.1261138916015625
    3. '<|end|>' → logprob: -8.876113891601562
    4. ' :' → logprob: -9.626113891601562
    5. '   ' → logprob: -10.376113891601562
    6. '[' → logprob: -10.626113891601562
    7. '[::-' → logprob: -12.001113891601562
    8. '<|end|>' → logprob: -12.251113891601562
    9. ' if' → logprob: -12.626113891601562
    10. 's' → logprob: -12.626113891601562

Token 49: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20940253138542175
    2. '<|end|>' → logprob: -2.209402561187744
    3. ' if' → logprob: -3.709402561187744
    4. '   ' → logprob: -4.209402561187744
    5. ' ' → logprob: -4.584402561187744
    6. '       ' → logprob: -4.709402561187744
    7. ',' → logprob: -5.709402561187744
    8. '    ' → logprob: -5.959402561187744
    9. 'if' → logprob: -6.334402561187744
    10. '=' → logprob: -6.459402561187744

Token 50: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07557008415460587
    2. 'if' (adapté à ' if') → logprob: -2.7005701065063477
    3. '       ' → logprob: -6.200570106506348
    4. '   ' → logprob: -6.700570106506348
    5. ' ' → logprob: -7.200570106506348
    6. '    ' → logprob: -7.450570106506348
    7. ' l' → logprob: -7.825570106506348
    8. ' k' → logprob: -9.325570106506348
    9. ' color' → logprob: -9.450570106506348
    10. '<|end|>' → logprob: -9.700570106506348

Token 51: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3546961545944214
    2. ' color' → logprob: -1.6046961545944214
    3. 'l' → logprob: -2.854696273803711
    4. 'color' → logprob: -3.229696273803711
    5. ' k' → logprob: -8.979696273803711
    6. 'k' → logprob: -9.229696273803711
    7. ' ' → logprob: -9.854696273803711
    8. '   ' → logprob: -9.917196273803711
    9. '    ' → logprob: -10.229696273803711
    10. ' not' → logprob: -11.104696273803711

Token 52: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.450237900018692
    2. '==' → logprob: -1.2002378702163696
    3. ' !=' → logprob: -3.325237989425659
    4. '!=' → logprob: -3.700237989425659
    5. ' ' → logprob: -7.57523775100708
    6. '==-' → logprob: -10.575238227844238
    7. '=' → logprob: -10.825238227844238
    8. ' <' → logprob: -10.950238227844238
    9. '>' → logprob: -11.012738227844238
    10. '<' → logprob: -11.200238227844238

Token 53: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.5251842737197876
    2. ' color' → logprob: -0.9001842737197876
    3. '-' → logprob: -7.025184154510498
    4. ' -' → logprob: -7.275184154510498
    5. ' ' → logprob: -8.650184631347656
    6. '0' → logprob: -8.775184631347656
    7. '  ' → logprob: -10.650184631347656
    8. '=color' → logprob: -10.900184631347656
    9. '	color' → logprob: -11.025184631347656
    10. '   ' → logprob: -11.275184631347656

Token 54: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003168737457599491
    2. '[' → logprob: -8.625316619873047
    3. '[l' → logprob: -10.000316619873047
    4. ' [' → logprob: -10.250316619873047
    5. '[s' → logprob: -10.875316619873047
    6. '[k' → logprob: -11.250316619873047
    7. '[n' → logprob: -11.875316619873047
    8. 's' → logprob: -12.375316619873047
    9. ' ' → logprob: -12.875316619873047
    10. '[I' → logprob: -12.875316619873047

Token 55: ']' (ID: 60)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004800107330083847
    2. ')' → logprob: -6.379800319671631
    3. ']):' → logprob: -6.629800319671631
    4. ' ):' → logprob: -7.379800319671631
    5. ']:' → logprob: -7.379800319671631
    6. '):
' → logprob: -8.254799842834473
    7. ':' → logprob: -8.754799842834473
    8. ' or' → logprob: -10.879799842834473
    9. ']' → logprob: -11.129799842834473
    10. '])' → logprob: -11.629799842834473

Token 56: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02445419877767563
    2. ':
' → logprob: -3.774454116821289
    3. ' or' → logprob: -7.524454116821289
    4. ' :' → logprob: -8.149454116821289
    5. ' and' → logprob: -8.649454116821289
    6. ' :
' → logprob: -10.024454116821289
    7. 'and' → logprob: -10.649454116821289
    8. '       ' → logprob: -10.899454116821289
    9. ':
' → logprob: -11.149454116821289
    10. ':return' → logprob: -11.149454116821289

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026333626359701157
    2. ' ' → logprob: -3.6513335704803467
    3. '2' → logprob: -10.651333808898926
    4. '0' → logprob: -13.401333808898926
    5. '3' → logprob: -13.588833808898926
    6. '-' → logprob: -13.901333808898926
    7. 'k' → logprob: -13.901333808898926
    8. '  ' → logprob: -14.276333808898926
    9. ' k' → logprob: -14.338833808898926
    10. '   ' → logprob: -14.463833808898926

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035393505822867155
    2. ' ' → logprob: -8.000353813171387
    3. '2' → logprob: -11.750353813171387
    4. 'k' → logprob: -12.000353813171387
    5. '0' → logprob: -13.750353813171387
    6. '=' → logprob: -14.437853813171387
    7. 'l' → logprob: -14.937853813171387
    8. '3' → logprob: -15.187853813171387
    9. '   ' → logprob: -15.187853813171387
    10. 'color' → logprob: -15.250353813171387

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06342992186546326
    2. ' or' → logprob: -3.563429832458496
    3. ':
' → logprob: -3.688429832458496
    4. ' and' → logprob: -5.688429832458496
    5. '           ' → logprob: -6.063429832458496
    6. '       ' → logprob: -6.563429832458496
    7. 'and' → logprob: -8.938429832458496
    8. ',' → logprob: -8.938429832458496
    9. ' :' → logprob: -9.188429832458496
    10. '<|end|>' → logprob: -9.438429832458496

Token 60: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0948554277420044
    2. '       ' → logprob: -2.719855308532715
    3. '               ' → logprob: -5.594855308532715
    4. ':' → logprob: -5.594855308532715
    5. ' or' → logprob: -5.594855308532715
    6. ' k' → logprob: -5.844855308532715
    7. '	       ' → logprob: -6.219855308532715
    8. 'k' → logprob: -6.469855308532715
    9. '0' → logprob: -6.844855308532715
    10. '   ' → logprob: -7.094855308532715

Token 61: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6070505380630493
    2. 'k' (adapté à ' k') → logprob: -0.8570505380630493
    3. '           ' → logprob: -4.10705041885376
    4. '       ' → logprob: -5.23205041885376
    5. '               ' → logprob: -5.98205041885376
    6. '   ' → logprob: -6.23205041885376
    7. ' ' → logprob: -6.73205041885376
    8. '1' → logprob: -7.10705041885376
    9. '
' → logprob: -7.73205041885376
    10. '```' → logprob: -8.357050895690918

Token 62: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7670445442199707
    2. ' =' → logprob: -0.8920445442199707
    3. '+=' → logprob: -2.7670445442199707
    4. ' +=' → logprob: -2.7670445442199707
    5. ' ' → logprob: -9.642044067382812
    6. '+' → logprob: -11.642044067382812
    7. '=k' → logprob: -12.267044067382812
    8. ' -=' → logprob: -12.642044067382812
    9. '-=' → logprob: -12.767044067382812
    10. '1' → logprob: -13.267044067382812

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014221679419279099
    2. ' ' → logprob: -4.264221668243408
    3. '2' → logprob: -10.639222145080566
    4. 'ans' → logprob: -11.139222145080566
    5. ' ans' → logprob: -12.014222145080566
    6. '<|end|>' → logprob: -12.514222145080566
    7. '0' → logprob: -13.139222145080566
    8. '   ' → logprob: -14.264222145080566
    9. '10' → logprob: -14.326722145080566
    10. '3' → logprob: -14.326722145080566

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026342803612351418
    2. ' ' → logprob: -6.377634048461914
    3. 'ans' → logprob: -7.252634048461914
    4. '2' → logprob: -8.627634048461914
    5. '0' → logprob: -11.127634048461914
    6. ' ans' → logprob: -12.002634048461914
    7. '10' → logprob: -12.440134048461914
    8. '3' → logprob: -12.815134048461914
    9. '100' → logprob: -13.315134048461914
    10. 'i' → logprob: -13.377634048461914

Token 65: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11536888033151627
    2. '
' → logprob: -2.7403688430786133
    3. '       ' → logprob: -3.6153688430786133
    4. '<|end|>' → logprob: -5.240368843078613
    5. ' ' → logprob: -6.115368843078613
    6. '           ' → logprob: -6.365368843078613
    7. ' if' → logprob: -6.365368843078613
    8. '    
' → logprob: -6.490368843078613
    9. '<|end|>' → logprob: -6.740368843078613
    10. ' 
' → logprob: -7.865368843078613

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03112391196191311
    2. ' if' → logprob: -4.406124114990234
    3. '
' → logprob: -4.781124114990234
    4. '<|end|>' → logprob: -5.531124114990234
    5. '       ' → logprob: -6.031124114990234
    6. ' ' → logprob: -6.406124114990234
    7. 'if' → logprob: -7.281124114990234
    8. '<|end|>' → logprob: -8.406124114990234
    9. '    ' → logprob: -8.781124114990234
    10. '  ' → logprob: -9.031124114990234

Token 67: ' ans' (ID: 3345)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30227676033973694
    2. '   ' → logprob: -1.9272767305374146
    3. 'if' → logprob: -2.177276849746704
    4. ' ' → logprob: -7.677276611328125
    5. '       ' → logprob: -8.177276611328125
    6. ' L' → logprob: -8.427276611328125
    7. '1' → logprob: -9.052276611328125
    8. ' ans' → logprob: -9.427276611328125
    9. ' for' → logprob: -9.552276611328125
    10. '    ' → logprob: -9.552276611328125

Token 68: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.16897310316562653
    2. '*=' → logprob: -1.9189730882644653
    3. '*' → logprob: -5.168972969055176
    4. '=' → logprob: -6.168972969055176
    5. ' =' → logprob: -7.668972969055176
    6. ' +=' → logprob: -8.918972969055176
    7. ' *' → logprob: -9.168972969055176
    8. ' ' → logprob: -9.668972969055176
    9. ' <<=' → logprob: -10.168972969055176
    10. '+=' → logprob: -10.168972969055176

Token 69: ' (' (ID: 350)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5390934348106384
    2. ' ans' → logprob: -1.1640934944152832
    3. 'max' → logprob: -2.664093494415283
    4. 'ans' → logprob: -3.789093494415283
    5. '(ans' → logprob: -5.164093494415283
    6. ' k' → logprob: -5.789093494415283
    7. ' (' → logprob: -6.789093494415283
    8. 'k' → logprob: -7.164093494415283
    9. '(max' → logprob: -7.414093494415283
    10. ' ' → logprob: -8.164093017578125

Token 70: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04975767061114311
    2. '(ans' → logprob: -3.424757719039917
    3. '2' → logprob: -4.924757480621338
    4. ' ans' → logprob: -5.674757480621338
    5. 'max' → logprob: -6.549757480621338
    6. '3' → logprob: -6.674757480621338
    7. '(' → logprob: -6.799757480621338
    8. 'k' → logprob: -7.424757480621338
    9. '4' → logprob: -8.674757957458496
    10. '(k' → logprob: -9.049757957458496

Token 71: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38715195655822754
    2. '*' → logprob: -1.1371519565582275
    3. ' ' → logprob: -9.262151718139648
    4. ')' → logprob: -9.512151718139648
    5. ' <<' → logprob: -10.262151718139648
    6. '<<' → logprob: -10.762151718139648
    7. ' ' → logprob: -11.387151718139648
    8. '+' → logprob: -11.887151718139648
    9. '**' → logprob: -11.887151718139648
    10. ' +' → logprob: -12.012151718139648

Token 72: ' k' (ID: 372)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.27256327867507935
    2. '3' → logprob: -2.1475632190704346
    3. '(' → logprob: -2.3975632190704346
    4. 'k' → logprob: -4.522563457489014
    5. ' ' → logprob: -5.147563457489014
    6. '(k' → logprob: -5.272563457489014
    7. 'max' → logprob: -5.772563457489014
    8. '(max' → logprob: -6.397563457489014
    9. '4' → logprob: -6.647563457489014
    10. 'pow' → logprob: -6.772563457489014

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002151807537302375
    2. ')%' → logprob: -6.252151966094971
    3. '*' → logprob: -8.877151489257812
    4. ' )' → logprob: -10.002151489257812
    5. '%' → logprob: -11.252151489257812
    6. ' *' → logprob: -11.377151489257812
    7. 'if' → logprob: -12.377151489257812
    8. ')
' → logprob: -12.502151489257812
    9. ' if' → logprob: -13.877151489257812
    10. '2' → logprob: -14.127151489257812

Token 74: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5177546739578247
    2. 'if' → logprob: -1.7677546739578247
    3. '<|end|>' → logprob: -2.392754554748535
    4. ')' → logprob: -2.767754554748535
    5. ' if' → logprob: -3.517754554748535
    6. ' %' → logprob: -3.892754554748535
    7. '*' → logprob: -4.517754554748535
    8. '```' → logprob: -5.642754554748535
    9. '<|end|>' → logprob: -5.892754554748535
    10. '[' → logprob: -6.642754554748535

Token 75: ' (' (ID: 350)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.011486315168440342
    2. '998' → logprob: -4.761486530303955
    3. '(' → logprob: -6.261486530303955
    4. '10' → logprob: -7.011486530303955
    5. ' ' → logprob: -10.886486053466797
    6. '1' → logprob: -11.261486053466797
    7. '999' → logprob: -11.636486053466797
    8. '3' → logprob: -12.636486053466797
    9. ' (' → logprob: -13.136486053466797
    10. '```' → logprob: -13.386486053466797

Token 76: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3140723705291748
    2. '10' → logprob: -1.3140723705291748
    3. '998' → logprob: -7.314072608947754
    4. ' ' → logprob: -9.564072608947754
    5. '1' → logprob: -9.814072608947754
    6. '(' → logprob: -11.189072608947754
    7. '```' → logprob: -13.814072608947754
    8. 'int' → logprob: -13.814072608947754
    9. '   ' → logprob: -13.939072608947754
    10. '​' → logprob: -14.439072608947754

Token 77: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5798423290252686
    2. '**' → logprob: -0.8298423290252686
    3. '09' → logprob: -6.329842567443848
    4. '```' → logprob: -7.329842567443848
    5. '+' → logprob: -7.454842567443848
    6. '009' → logprob: -7.579842567443848
    7. ' ' → logprob: -8.829842567443848
    8. '000' → logprob: -8.829842567443848
    9. '_' → logprob: -10.329842567443848
    10. '*' → logprob: -11.579842567443848

Token 78: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.704273118884885e-07
    2. '09' → logprob: -14.750000953674316
    3. '+' → logprob: -15.625000953674316
    4. '```' → logprob: -16.375
    5. ' ' → logprob: -17.125
    6. '10' → logprob: -19.5
    7. '``' → logprob: -19.625
    8. '6' → logprob: -19.75
    9. '4' → logprob: -19.875
    10. '９' → logprob: -19.875

Token 79: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00041184606379829347
    2. '7' → logprob: -8.000411987304688
    3. ' +' → logprob: -9.500411987304688
    4. '＋' → logprob: -14.000411987304688
    5. '```' → logprob: -15.000411987304688
    6. '9' → logprob: -15.375411987304688
    7. ')+' → logprob: -16.375411987304688
    8. ' plus' → logprob: -16.875411987304688
    9. '+
' → logprob: -16.875411987304688
    10. 'plus' → logprob: -17.875411987304688

Token 80: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '+' → logprob: -16.125
    4. '9' → logprob: -17.375
    5. '```' → logprob: -17.75
    6. '07' → logprob: -18.25
    7. '   ' → logprob: -18.75
    8. '
' → logprob: -19.25
    9. '７' → logprob: -19.5
    10. '

' → logprob: -19.5

Token 81: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '+' → logprob: -17.125
    4. '```' → logprob: -17.125
    5. '9' → logprob: -17.75
    6. '   ' → logprob: -18.25
    7. '07' → logprob: -18.5
    8. ' ' → logprob: -19.125
    9. '

' → logprob: -19.1875
    10. '７' → logprob: -19.5

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5928495486150496e-05
    2. ')
' → logprob: -11.875016212463379
    3. ' )' → logprob: -12.375016212463379
    4. ')`' → logprob: -13.625016212463379
    5. '))' → logprob: -14.250016212463379
    6. '```' → logprob: -14.625016212463379
    7. '**' → logprob: -14.875016212463379
    8. '`)' → logprob: -15.125016212463379
    9. ')
' → logprob: -15.125016212463379
    10. ')**' → logprob: -15.250016212463379

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7603694200515747
    2. ' if' → logprob: -1.7603694200515747
    3. 'if' → logprob: -1.7603694200515747
    4. 'L' → logprob: -2.510369300842285
    5. '```' → logprob: -2.635369300842285
    6. '[' → logprob: -4.385369300842285
    7. ' L' → logprob: -4.510369300842285
    8. '    
' → logprob: -5.635369300842285
    9. '``' → logprob: -6.385369300842285
    10. ' ' → logprob: -6.885369300842285

Token 84: ' for' (ID: 395)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.26504456996917725
    2. 'if' → logprob: -1.5150445699691772
    3. '   ' → logprob: -4.890044689178467
    4. 'for' (adapté à ' for') → logprob: -5.890044689178467
    5. ' if' → logprob: -6.390044689178467
    6. ' L' → logprob: -7.140044689178467
    7. '```' → logprob: -9.765044212341309
    8. '#' → logprob: -9.890044212341309
    9. 'from' → logprob: -10.515044212341309
    10. 'else' → logprob: -11.015044212341309

Token 85: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.062023814767599106
    2. 'j' → logprob: -2.812023878097534
    3. ' idx' → logprob: -10.562024116516113
    4. ' i' → logprob: -11.062024116516113
    5. 'i' → logprob: -12.187024116516113
    6. 'idx' → logprob: -12.687024116516113
    7. ' ' → logprob: -13.562024116516113
    8. 'index' → logprob: -13.687024116516113
    9. ' index' → logprob: -13.937024116516113
    10. '_j' → logprob: -14.187024116516113

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036173006519675255
    2. 'in' → logprob: -5.628617286682129
    3. ' ' → logprob: -11.753617286682129
    4. ',' → logprob: -11.878617286682129
    5. '	in' → logprob: -13.628617286682129
    6. ' range' → logprob: -14.878617286682129
    7. 'range' → logprob: -15.128617286682129
    8. '<|end|>' → logprob: -15.753617286682129
    9. ' ,' → logprob: -16.003618240356445
    10. '0' → logprob: -16.378618240356445

Token 87: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12692894041538239
    2. 'range' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.87692928314209
    4. '[' → logprob: -16.251928329467773
    5. ' xrange' → logprob: -16.251928329467773
    6. '	range' → logprob: -16.251928329467773
    7. 'rang' → logprob: -16.626928329467773
    8. '(range' → logprob: -16.876928329467773
    9. ' rang' → logprob: -17.501928329467773
    10. ' ran' → logprob: -17.876928329467773

Token 88: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4468677341938019
    2. '3' → logprob: -1.0718677043914795
    3. '(len' → logprob: -4.196867942810059
    4. ' ' → logprob: -6.196867942810059
    5. 'len' → logprob: -7.571867942810059
    6. ' len' → logprob: -8.071867942810059
    7. ' (' → logprob: -9.821867942810059
    8. '   ' → logprob: -10.946867942810059
    9. '```' → logprob: -12.321867942810059
    10. ')' → logprob: -12.571867942810059

Token 89: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0011375966714695096
    2. 'len' → logprob: -7.251137733459473
    3. ' ' → logprob: -8.001137733459473
    4. ' len' → logprob: -10.626137733459473
    5. '   ' → logprob: -10.751137733459473
    6. '2' → logprob: -11.376137733459473
    7. '1' → logprob: -11.501137733459473
    8. ')' → logprob: -11.938637733459473
    9. '0' → logprob: -12.376137733459473
    10. '```' → logprob: -12.751137733459473

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18082955479621887
    2. '):
' → logprob: -1.8058295249938965
    3. '):
' → logprob: -6.9308295249938965
    4. ')' → logprob: -10.055830001831055
    5. ' ):' → logprob: -10.555830001831055
    6. ':' → logprob: -11.055830001831055
    7. ' ' → logprob: -11.805830001831055
    8. ' ):
' → logprob: -12.180830001831055
    9. '):

' → logprob: -12.805830001831055
    10. '3' → logprob: -13.180830001831055

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06376272439956665
    2. ' if' → logprob: -3.188762664794922
    3. 'if' → logprob: -4.938762664794922
    4. '   ' → logprob: -4.938762664794922
    5. '```' → logprob: -5.438762664794922
    6. '<|end|>' → logprob: -7.063762664794922
    7. ' ' → logprob: -7.563762664794922
    8. '<|end|>' → logprob: -9.563762664794922
    9. 'If' → logprob: -9.813762664794922
    10. '    ' → logprob: -9.938762664794922

Token 92: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6407593488693237
    2. 'if' (adapté à ' if') → logprob: -0.7657593488693237
    3. '       ' → logprob: -5.015759468078613
    4. '   ' → logprob: -7.140759468078613
    5. '	if' → logprob: -8.015759468078613
    6. '```' → logprob: -8.265759468078613
    7. '<|end|>' → logprob: -9.765759468078613
    8. 'If' → logprob: -10.515759468078613
    9. ' ' → logprob: -11.265759468078613
    10. '<|end|>' → logprob: -12.140759468078613

Token 93: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.12709009647369385
    2. ' L' → logprob: -2.1270899772644043
    3. '   ' → logprob: -9.252090454101562
    4. '    ' → logprob: -11.377090454101562
    5. 'color' → logprob: -11.752090454101562
    6. ' ' → logprob: -11.752090454101562
    7. ' not' → logprob: -11.877090454101562
    8. '	L' → logprob: -12.002090454101562
    9. 'not' → logprob: -12.377090454101562
    10. 'n' → logprob: -12.377090454101562

Token 94: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.12500286102295
    3. '[i' → logprob: -14.62500286102295
    4. 'j' → logprob: -16.250003814697266
    5. ' [' → logprob: -16.375003814697266
    6. '[-' → logprob: -16.875003814697266
    7. '==' → logprob: -16.875003814697266
    8. '[
' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.500003814697266
    10. '```' → logprob: -18.625003814697266

Token 95: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09851966798305511
    2. '==' → logprob: -2.7235195636749268
    3. '==-' → logprob: -3.7235195636749268
    4. ')' → logprob: -5.598519802093506
    5. ')==' → logprob: -9.098519325256348
    6. ' ' → logprob: -9.348519325256348
    7. ']==' → logprob: -9.723519325256348
    8. ']' → logprob: -10.848519325256348
    9. ' )' → logprob: -11.473519325256348
    10. ' !=' → logprob: -11.848519325256348

Token 96: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2969253957271576
    2. '==' → logprob: -1.42192542552948
    3. '==-' → logprob: -4.1719255447387695
    4. '<' → logprob: -9.42192554473877
    5. ' ' → logprob: -9.92192554473877
    6. ')' → logprob: -10.67192554473877
    7. '==
' → logprob: -11.04692554473877
    8. ']==' → logprob: -11.85942554473877
    9. '-' → logprob: -11.92192554473877
    10. ' <' → logprob: -12.10942554473877

Token 97: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.41762182116508484
    2. ' color' → logprob: -1.6676218509674072
    3. '-' → logprob: -2.0426218509674072
    4. ' -' → logprob: -3.7926218509674072
    5. ' ' → logprob: -9.167621612548828
    6. '   ' → logprob: -9.542621612548828
    7. '-color' → logprob: -9.605121612548828
    8. '  ' → logprob: -10.230121612548828
    9. '	color' → logprob: -10.542621612548828
    10. '=color' → logprob: -10.542621612548828

Token 98: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1517960956552997e-05
    2. '[j' → logprob: -11.750011444091797
    3. '[' → logprob: -12.625011444091797
    4. ' [' → logprob: -15.875011444091797
    5. 'i' → logprob: -16.125011444091797
    6. '[n' → logprob: -16.875011444091797
    7. '[I' → logprob: -17.375011444091797
    8. ' ' → logprob: -18.750011444091797
    9. '[
' → logprob: -18.750011444091797
    10. '   ' → logprob: -19.375011444091797

Token 99: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.205093115568161
    2. '-' → logprob: -1.7050931453704834
    3. '   ' → logprob: -6.455092906951904
    4. ':
' → logprob: -7.080092906951904
    5. '):
' → logprob: -8.080093383789062
    6. ':' → logprob: -8.205093383789062
    7. ' ' → logprob: -8.330093383789062
    8. ')' → logprob: -8.830093383789062
    9. '       ' → logprob: -9.955093383789062
    10. '           ' → logprob: -10.205093383789062

Token 100: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2532592713832855
    2. ' -' → logprob: -1.503259301185608
    3. ':' → logprob: -7.253259181976318
    4. '   ' → logprob: -8.128259658813477
    5. ':
' → logprob: -8.503259658813477
    6. ' ' → logprob: -9.753259658813477
    7. '  ' → logprob: -11.378259658813477
    8. '       ' → logprob: -11.503259658813477
    9. ' and' → logprob: -12.003259658813477
    10. '           ' → logprob: -12.128259658813477

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07003168761730194
    2. ' ' → logprob: -2.6950316429138184
    3. '2' → logprob: -9.320032119750977
    4. '-' → logprob: -13.070032119750977
    5. '   ' → logprob: -14.070032119750977
    6. '0' → logprob: -14.195032119750977
    7. ' -' → logprob: -14.445032119750977
    8. '.' → logprob: -15.195032119750977
    9. '<|end|>' → logprob: -15.757532119750977
    10. '<|end|>' → logprob: -15.820032119750977

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000521577603649348
    2. '2' → logprob: -7.750521659851074
    3. ' ' → logprob: -9.375521659851074
    4. '0' → logprob: -12.500521659851074
    5. '   ' → logprob: -14.750521659851074
    6. '<|end|>' → logprob: -15.500521659851074
    7. '```' → logprob: -15.625521659851074
    8. '-' → logprob: -15.625521659851074
    9. '.' → logprob: -16.188020706176758
    10. 'color' → logprob: -16.313020706176758

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4498896598815918
    2. ':
' → logprob: -1.0748896598815918
    3. '           ' → logprob: -4.824889659881592
    4. ' =' → logprob: -6.074889659881592
    5. ',' → logprob: -6.199889659881592
    6. '<|end|>' → logprob: -6.199889659881592
    7. '):
' → logprob: -6.449889659881592
    8. '<|end|>' → logprob: -6.574889659881592
    9. ' and' → logprob: -7.199889659881592
    10. '=' → logprob: -7.199889659881592

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20370207726955414
    2. ' L' → logprob: -2.078701972961426
    3. 'L' → logprob: -2.828701972961426
    4. '```' → logprob: -10.953701972961426
    5. '               ' → logprob: -11.328701972961426
    6. ' ' → logprob: -11.328701972961426
    7. 'n' → logprob: -11.453701972961426
    8. ' n' → logprob: -12.078701972961426
    9. '0' → logprob: -12.078701972961426
    10. '       ' → logprob: -12.203701972961426

Token 105: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.0017778765177354217
    2. ' L' → logprob: -6.376777648925781
    3. '               ' → logprob: -9.751777648925781
    4. '           ' → logprob: -11.126777648925781
    5. 'n' → logprob: -14.251777648925781
    6. '   ' → logprob: -15.126777648925781
    7. '              ' → logprob: -15.501777648925781
    8. ' ' → logprob: -15.626777648925781
    9. '            ' → logprob: -15.751777648925781
    10. '             ' → logprob: -15.876777648925781

Token 106: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. '[i' → logprob: -15.875
    3. '[' → logprob: -16.25
    4. '=' → logprob: -16.875
    5. ' [' → logprob: -17.625
    6. ' =' → logprob: -17.875
    7. '```' → logprob: -17.875
    8. '[
' → logprob: -18.125
    9. '=j' → logprob: -18.875
    10. '=[' → logprob: -19.375

Token 107: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17982928454875946
    2. '=' → logprob: -1.8048292398452759
    3. ')' → logprob: -10.429829597473145
    4. '=-' → logprob: -10.429829597473145
    5. ']' → logprob: -11.304829597473145
    6. ' ' → logprob: -12.804829597473145
    7. ']=' → logprob: -13.304829597473145
    8. ')=' → logprob: -13.429829597473145
    9. '=None' → logprob: -13.679829597473145
    10. ',' → logprob: -13.679829597473145

Token 108: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519593834877014
    2. '=' → logprob: -1.5019593238830566
    3. '=-' → logprob: -11.001959800720215
    4. '+=' → logprob: -12.001959800720215
    5. ' +=' → logprob: -12.876959800720215
    6. ' -=' → logprob: -13.751959800720215
    7. '-=' → logprob: -13.876959800720215
    8. ',' → logprob: -14.501959800720215
    9. '＝' → logprob: -14.626959800720215
    10. '=int' → logprob: -14.626959800720215

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.004696090007201e-05
    2. ' ' → logprob: -9.625069618225098
    3. '2' → logprob: -12.625069618225098
    4. '   ' → logprob: -14.750069618225098
    5. '+' → logprob: -16.375070571899414
    6. '0' → logprob: -17.250070571899414
    7. '3' → logprob: -17.562570571899414
    8. '100' → logprob: -18.187570571899414
    9. '  ' → logprob: -18.687570571899414
    10. '１' → logprob: -18.750070571899414

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.049755782238208e-05
    2. '2' → logprob: -10.00005054473877
    3. ' ' → logprob: -12.25005054473877
    4. '   ' → logprob: -16.375049591064453
    5. '+' → logprob: -16.750049591064453
    6. '１' → logprob: -17.625049591064453
    7. '3' → logprob: -17.750049591064453
    8. '0' → logprob: -18.500049591064453
    9. '```' → logprob: -18.562549591064453
    10. '۱' → logprob: -19.125049591064453

Token 111: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1645544022321701
    2. '<|end|>' → logprob: -2.0395543575286865
    3. '       ' → logprob: -5.289554595947266
    4. ' break' → logprob: -5.539554595947266
    5. 'break' (adapté à ' break') → logprob: -5.664554595947266
    6. '		' → logprob: -6.039554595947266
    7. '	break' → logprob: -6.289554595947266
    8. '```' → logprob: -6.539554595947266
    9. '               ' → logprob: -6.789554595947266
    10. '<|end|>' → logprob: -7.289554595947266

Token 114: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.051066520740278e-05
    2. 'if' → logprob: -10.750060081481934
    3. ' print' → logprob: -10.750060081481934
    4. '```' → logprob: -12.000060081481934
    5. 'for' → logprob: -12.125060081481934
    6. 'color' → logprob: -13.000060081481934
    7. '<|end|>' → logprob: -13.250060081481934
    8. 'n' → logprob: -14.375060081481934
    9. ' if' → logprob: -14.875060081481934
    10. 'L' → logprob: -15.250060081481934

Token 116: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -8.41866585687967e-06
    2. '(' → logprob: -12.125008583068848
    3. 'ans' → logprob: -13.000008583068848
    4. '()' → logprob: -14.625008583068848
    5. '(answer' → logprob: -15.750008583068848
    6. ' (' → logprob: -17.75000762939453
    7. '(
' → logprob: -18.50000762939453
    8. '(len' → logprob: -18.75000762939453
    9. '	ans' → logprob: -18.75000762939453
    10. '(a' → logprob: -19.50000762939453

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '))' → logprob: -14.000000953674316
    3. ')
' → logprob: -15.750000953674316
    4. ')`' → logprob: -16.000001907348633
    5. ')}' → logprob: -16.625001907348633
    6. ' )' → logprob: -17.375001907348633
    7. '')' → logprob: -17.625001907348633
    8. '`)' → logprob: -18.375001907348633
    9. '）' → logprob: -18.375001907348633
    10. ')))' → logprob: -18.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 115
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 95
Précision stricte (1ère position): 39.13%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 82.61%
================================================================================
