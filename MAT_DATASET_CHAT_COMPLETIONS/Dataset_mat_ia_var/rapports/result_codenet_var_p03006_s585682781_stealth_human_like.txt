================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# On lit le nombre de points...  
n = int(input())

# On stocke les points comme des tuples (peut-être qu'une liste serait mieux ?)
a = [tuple(map(int, input().split())) for _ in range(n)]

s = set(a)  # c'est pour vérifier les doublons, je crois
if len(s) != len(a):
    raise Exception("Duplicates detected!")

answer = 10**12  # J'espère que c'est assez grand
for i in range(n):
    for j in range(i+1, n):
        # On va essayer tous les couples de points (i, j)
        # Je recopie le set pour chaque test
        v = set(a)
        dx = a[i][0] - a[j][0]
        dy = a[i][1] - a[j][1]
        tmp = 0
        while v:
            tmp += 1
            pt = v.pop()
            origin = pt
            # On va dans le sens + (dx, dy)
            while (pt[0] + dx, pt[1] + dy) in v:
                pt = (pt[0] + dx, pt[1] + dy)
                v.remove(pt)
            pt = origin
            # Puis dans le sens - (dx, dy)
            while (pt[0] - dx, pt[1] - dy) in v:
                pt = (pt[0] - dx, pt[1] - dy)
                v.remove(pt)
        if tmp < answer:
            answer = tmp
if answer == 10**12:
    print(1)  # hmm, peut-être pas toujours correct ?
else:
    print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' On' (ID: 2160)
  → Token d'amorce (pas de prédiction)

Token 2: ' lit' (ID: 11980)
  → Token d'amorce (pas de prédiction)

Token 3: ' le' (ID: 505)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04509247839450836
    2. 'es' → logprob: -4.045092582702637
    3. 'é' → logprob: -4.170092582702637
    4. '```' → logprob: -5.420092582702637
    5. 'er' → logprob: -6.420092582702637
    6. '`' → logprob: -7.170092582702637
    7. ''' → logprob: -7.295092582702637
    8. 'ér' → logprob: -7.545092582702637
    9. '``' → logprob: -8.045092582702637
    10. 'ère' → logprob: -8.170092582702637

Token 4: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3294578194618225
    2. 'f' → logprob: -1.5794577598571777
    3. ' fichier' → logprob: -3.7044577598571777
    4. '_' → logprob: -4.704457759857178
    5. ' ' → logprob: -4.704457759857178
    6. '\n' → logprob: -4.829457759857178
    7. ' f' → logprob: -5.329457759857178
    8. ' \' → logprob: -5.329457759857178
    9. 's' → logprob: -6.204457759857178
    10. 'u' → logprob: -6.204457759857178

Token 5: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009263334795832634
    2. ' ' → logprob: -5.134263515472412
    3. '_d' → logprob: -7.009263515472412
    4. 's' → logprob: -7.259263515472412
    5. 'd' → logprob: -7.384263515472412
    6. '_de' → logprob: -7.884263515472412
    7. '_s' → logprob: -8.634263038635254
    8. ''' → logprob: -8.884263038635254
    9. '_space' → logprob: -8.884263038635254
    10. ' d' → logprob: -10.259263038635254

Token 6: ' points' (ID: 5571)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04534165561199188
    2. ' ' → logprob: -4.545341491699219
    3. 'car' → logprob: -5.420341491699219
    4. '\n' → logprob: -5.795341491699219
    5. 'clients' → logprob: -5.795341491699219
    6. '```' → logprob: -5.795341491699219
    7. 'd' → logprob: -6.420341491699219
    8. '\' → logprob: -6.670341491699219
    9. 'c' → logprob: -6.795341491699219
    10. 'person' → logprob: -6.795341491699219

Token 7: '...' (ID: 1008)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8273652195930481
    2. '=' → logprob: -1.9523651599884033
    3. '_' → logprob: -2.0773651599884033
    4. ' =' → logprob: -2.3273651599884033
    5. ' ' → logprob: -2.7023651599884033
    6. 's' → logprob: -2.9523651599884033
    7. 'nombre' → logprob: -3.8273651599884033
    8. ',' → logprob: -4.577365398406982
    9. '#' → logprob: -4.952365398406982
    10. 'd' → logprob: -5.202365398406982

Token 8: '  
' (ID: 4066)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6692999601364136
    2. '_' → logprob: -1.1692999601364136
    3. ''' → logprob: -3.169300079345703
    4. '.' → logprob: -3.669300079345703
    5. 's' → logprob: -4.294300079345703
    6. 'n' → logprob: -4.294300079345703
    7. ',' → logprob: -4.294300079345703
    8. ' =' → logprob: -4.669300079345703
    9. '=' → logprob: -4.794300079345703
    10. 'd' → logprob: -4.919300079345703

Token 9: 'n' (ID: 77)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21991010010242462
    2. ' ' → logprob: -2.344910144805908
    3. 'd' → logprob: -3.344910144805908
    4. ' =' → logprob: -4.094910144805908
    5. 'n' → logprob: -4.219910144805908
    6. '=' → logprob: -4.844910144805908
    7. 's' → logprob: -4.844910144805908
    8. '.' → logprob: -5.844910144805908
    9. ''' → logprob: -6.094910144805908
    10. '`' → logprob: -6.219910144805908

Token 10: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8637263178825378
    2. ' =' → logprob: -1.1137263774871826
    3. '_points' → logprob: -1.9887263774871826
    4. ' ' → logprob: -2.8637263774871826
    5. '=' → logprob: -3.1137263774871826
    6. ')' → logprob: -5.9887261390686035
    7. '_pts' → logprob: -6.1137261390686035
    8. '_p' → logprob: -6.1137261390686035
    9. ',' → logprob: -6.2387261390686035
    10. 'points' → logprob: -7.3637261390686035

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06200186535716057
    2. 'int' → logprob: -2.812001943588257
    3. ' ' → logprob: -10.562002182006836
    4. '=int' → logprob: -12.062002182006836
    5. '10' → logprob: -14.187002182006836
    6. ' ' → logprob: -14.812002182006836
    7. '0' → logprob: -14.937002182006836
    8. ' input' → logprob: -15.437002182006836
    9. '<int' → logprob: -16.187002182006836
    10. '[int' → logprob: -16.312002182006836

Token 12: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10025659948587418
    2. '(' → logprob: -2.3502566814422607
    3. 'input' → logprob: -11.10025691986084
    4. ' (' → logprob: -11.10025691986084
    5. '(
' → logprob: -11.35025691986084
    6. '('' → logprob: -12.47525691986084
    7. '()' → logprob: -12.97525691986084
    8. '(

' → logprob: -14.60025691986084
    9. '("' → logprob: -15.22525691986084
    10. '(raw' → logprob: -15.47525691986084

Token 13: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09418471157550812
    2. '()' → logprob: -2.594184637069702
    3. ')' → logprob: -5.219184875488281
    4. '())' → logprob: -5.469184875488281
    5. '('' → logprob: -5.594184875488281
    6. '("("' → logprob: -6.969184875488281
    7. '(""))' → logprob: -8.219184875488281
    8. '("' → logprob: -8.844184875488281
    9. '("")' → logprob: -8.969184875488281
    10. '(
' → logprob: -9.344184875488281

Token 14: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2300031185150146
    2. 'for' → logprob: -1.3550031185150146
    3. '\n' → logprob: -1.9800031185150146
    4. '#' → logprob: -2.9800031185150146
    5. 'r' → logprob: -3.2300031185150146
    6. 's' → logprob: -3.2300031185150146
    7. ' for' → logprob: -3.3550031185150146
    8. ')' → logprob: -3.3550031185150146
    9. '\' → logprob: -4.230003356933594
    10. 'n' → logprob: -4.355003356933594

Token 15: ' On' (ID: 2160)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.43245455622673035
    2. 's' → logprob: -2.1824545860290527
    3. 'for' → logprob: -2.4324545860290527
    4. ' for' → logprob: -3.3074545860290527
    5. ' points' → logprob: -3.3074545860290527
    6. '#' → logprob: -3.4324545860290527
    7. 'total' → logprob: -4.682454586029053
    8. 'sum' → logprob: -4.932454586029053
    9. ' #' → logprob: -5.182454586029053
    10. ' total' → logprob: -5.682454586029053

Token 16: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37558624148368835
    2. ' range' → logprob: -2.1255862712860107
    3. ' a' → logprob: -2.8755862712860107
    4. 'range' → logprob: -2.8755862712860107
    5. ' ' → logprob: -4.000586032867432
    6. ' calc' → logprob: -4.250586032867432
    7. ' récup' → logprob: -4.875586032867432
    8. ' n' → logprob: -5.375586032867432
    9. ' calcul' → logprob: -5.500586032867432
    10. '_' → logprob: -5.500586032867432

Token 17: 'e' (ID: 68)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15595409274101257
    2. 'er' → logprob: -2.280954122543335
    3. ' =' → logprob: -4.780953884124756
    4. 'e' → logprob: -4.905953884124756
    5. '  ' → logprob: -5.155953884124756
    6. ' ' → logprob: -5.155953884124756
    7. 's' → logprob: -6.155953884124756
    8. ' _' → logprob: -6.155953884124756
    9. 'a' → logprob: -6.530953884124756
    10. 'age' → logprob: -6.780953884124756

Token 18: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5140809416770935
    2. ' ' → logprob: -1.8890810012817383
    3. '_points' → logprob: -2.3890810012817383
    4. 'les' → logprob: -3.3890810012817383
    5. 'points' → logprob: -3.3890810012817383
    6. 's' → logprob: -4.514081001281738
    7. '(points' → logprob: -4.764081001281738
    8. '()' → logprob: -4.889081001281738
    9. '  ' → logprob: -4.889081001281738
    10. '(' → logprob: -4.889081001281738

Token 19: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.31522437930107117
    2. 'points' → logprob: -1.3152244091033936
    3. '_points' → logprob: -7.1902241706848145
    4. ' coordonnées' → logprob: -7.9402241706848145
    5. 'coordinates' → logprob: -8.690224647521973
    6. 'positions' → logprob: -8.940224647521973
    7. '	points' → logprob: -8.940224647521973
    8. '_' → logprob: -9.190224647521973
    9. 'coords' → logprob: -9.315224647521973
    10. 'x' → logprob: -10.315224647521973

Token 20: ' comme' (ID: 7971)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.589608907699585
    2. '_points' → logprob: -1.464608907699585
    3. ' points' → logprob: -1.714608907699585
    4. ' ' → logprob: -4.089609146118164
    5. 's' → logprob: -5.464609146118164
    6. '_' → logprob: -5.464609146118164
    7. '(points' → logprob: -6.589609146118164
    8. '	points' → logprob: -6.714609146118164
    9. 'n' → logprob: -6.964609146118164
    10. ' 
' → logprob: -7.214609146118164

Token 21: ' des' (ID: 731)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.45464301109313965
    2. 'des' → logprob: -1.5796430110931396
    3. ' des' → logprob: -2.3296430110931396
    4. '[]' → logprob: -3.7046430110931396
    5. 'une' → logprob: -3.9546430110931396
    6. ' une' → logprob: -4.454643249511719
    7. 'tu' → logprob: -5.704643249511719
    8. 'a' → logprob: -7.454643249511719
    9. 'tuple' → logprob: -7.829643249511719
    10. ' []' → logprob: -8.079643249511719

Token 22: ' tuples' (ID: 112464)
  Prédit: ' tuples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.0003035266126971692
    2. 'tu' → logprob: -8.750303268432617
    3. ' listes' → logprob: -10.250303268432617
    4. ' tuple' → logprob: -10.750303268432617
    5. ' coordonnées' → logprob: -10.750303268432617
    6. 'list' → logprob: -11.375303268432617
    7. ' trip' → logprob: -11.625303268432617
    8. ' points' → logprob: -11.625303268432617
    9. 'tuple' → logprob: -11.625303268432617
    10. 'uples' → logprob: -12.375303268432617

Token 23: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.426270604133606
    2. '(points' → logprob: -1.426270604133606
    3. '(' → logprob: -1.676270604133606
    4. 'points' → logprob: -2.6762704849243164
    5. ' points' → logprob: -2.8012704849243164
    6. 's' → logprob: -2.8012704849243164
    7. '[' → logprob: -3.6762704849243164
    8. '(p' → logprob: -3.6762704849243164
    9. ' ' → logprob: -3.6762704849243164
    10. 'p' → logprob: -4.801270484924316

Token 24: 'pe' (ID: 424)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008465525694191456
    2. ' x' → logprob: -5.38346529006958
    3. '(x' → logprob: -6.50846529006958
    4. 'int' → logprob: -6.50846529006958
    5. ',' → logprob: -8.508465766906738
    6. '(int' → logprob: -9.258465766906738
    7. ')' → logprob: -9.383465766906738
    8. ' ,' → logprob: -9.508465766906738
    9. ',x' → logprob: -9.758465766906738
    10. '0' → logprob: -9.883465766906738

Token 25: 'ut' (ID: 339)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.48159632086753845
    2. 'x' → logprob: -1.2315963506698608
    3. 'er' → logprob: -3.9815962314605713
    4. '(' → logprob: -4.35659646987915
    5. 'int' → logprob: -4.35659646987915
    6. '(x' → logprob: -4.48159646987915
    7. ',' → logprob: -5.35659646987915
    8. ')' → logprob: -5.60659646987915
    9. '```' → logprob: -5.60659646987915
    10. 'n' → logprob: -6.10659646987915

Token 26: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.9228482246398926
    2. '-être' → logprob: -1.1728482246398926
    3. ',' → logprob: -2.0478482246398926
    4. ' être' → logprob: -2.6728482246398926
    5. 'êt' → logprob: -3.9228482246398926
    6. ')' → logprob: -3.9228482246398926
    7. '#' → logprob: -4.047848224639893
    8. 'êtres' → logprob: -4.922848224639893
    9. '-' → logprob: -5.297848224639893
    10. ''être' → logprob: -5.672848224639893

Token 27: ' qu' (ID: 474)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9900705814361572
    2. ',' → logprob: -1.9900705814361572
    3. ' une' → logprob: -2.8650705814361572
    4. ' inutil' → logprob: -2.9900705814361572
    5. 'x' → logprob: -3.1150705814361572
    6. ' des' → logprob: -3.1150705814361572
    7. ' en' → logprob: -3.2400705814361572
    8. ')' → logprob: -3.4900705814361572
    9. ' inutile' → logprob: -3.6150705814361572
    10. ' mieux' → logprob: -3.9900705814361572

Token 28: ''une' (ID: 13337)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019436711445450783
    2. ' ,' → logprob: -4.769436836242676
    3. '',' → logprob: -6.269436836242676
    4. 'on' → logprob: -6.394436836242676
    5. ' on' → logprob: -6.644436836242676
    6. ''' → logprob: -7.269436836242676
    7. ''on' → logprob: -7.394436836242676
    8. 'a' → logprob: -7.644436836242676
    9. ''il' → logprob: -7.769436836242676
    10. 'e' → logprob: -7.894436836242676

Token 29: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.08028847724199295
    2. 'liste' → logprob: -2.9552884101867676
    3. ' )' → logprob: -4.830288410186768
    4. 'list' → logprob: -5.330288410186768
    5. ' list' → logprob: -5.455288410186768
    6. ')' → logprob: -6.205288410186768
    7. ' l' → logprob: -7.080288410186768
    8. ' listes' → logprob: -7.330288410186768
    9. ' ' → logprob: -7.580288410186768
    10. 'Liste' → logprob: -7.955288410186768

Token 30: ' serait' (ID: 35762)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5552970767021179
    2. ',' → logprob: -1.1802971363067627
    3. ' )' → logprob: -2.9302971363067627
    4. ' ,' → logprob: -3.8052971363067627
    5. 's' → logprob: -4.180296897888184
    6. ' de' → logprob: -4.180296897888184
    7. '[' → logprob: -5.180296897888184
    8. ' d' → logprob: -7.305296897888184
    9. 'de' → logprob: -7.305296897888184
    10. '<|end|>' → logprob: -7.555296897888184

Token 31: ' mieux' (ID: 26345)
  Prédit: ' mieux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mieux' → logprob: -0.10745981335639954
    2. ' better' → logprob: -2.982459783554077
    3. ' meilleure' → logprob: -3.732459783554077
    4. ' préférable' → logprob: -4.357460021972656
    5. ' plus' → logprob: -5.357460021972656
    6. 'better' → logprob: -5.857460021972656
    7. 'plus' → logprob: -5.982460021972656
    8. ' aussi' → logprob: -6.607460021972656
    9. 's' → logprob: -7.482460021972656
    10. ' une' → logprob: -7.732460021972656

Token 32: ' ?' (ID: 1423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13928094506263733
    2. ',' → logprob: -2.1392810344696045
    3. '?' → logprob: -5.014280796051025
    4. ' )' → logprob: -6.264280796051025
    5. '?)' → logprob: -6.639280796051025
    6. ' ?)' → logprob: -7.764280796051025
    7. ' ,' → logprob: -7.889280796051025
    8. '),' → logprob: -8.014281272888184
    9. ' ' → logprob: -8.264281272888184
    10. ').' → logprob: -8.264281272888184

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19882695376873016
    2. ',' → logprob: -1.8238269090652466
    3. ' )' → logprob: -4.198826789855957
    4. ' ,' → logprob: -6.073826789855957
    5. '),' → logprob: -8.448826789855957
    6. ',)' → logprob: -8.448826789855957
    7. '):' → logprob: -8.698826789855957
    8. ' ' → logprob: -9.073826789855957
    9. '`)' → logprob: -9.198826789855957
    10. ')n' → logprob: -9.448826789855957

Token 34: 'a' (ID: 64)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.7374120950698853
    2. 'points' → logprob: -0.7374120950698853
    3. '(points' → logprob: -3.4874119758605957
    4. '_points' → logprob: -5.487411975860596
    5. ')' → logprob: -6.112411975860596
    6. ' )' → logprob: -6.362411975860596
    7. ' ' → logprob: -6.362411975860596
    8. '	points' → logprob: -6.862411975860596
    9. 'coordinates' → logprob: -8.487412452697754
    10. 's' → logprob: -8.612412452697754

Token 35: ' =' (ID: 314)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.48745113611221313
    2. 'r' → logprob: -1.1124510765075684
    3. 'rg' → logprob: -4.112451076507568
    4. 'points' → logprob: -4.487451076507568
    5. '_pts' → logprob: -5.237451076507568
    6. ' =' → logprob: -5.237451076507568
    7. 'pp' → logprob: -5.362451076507568
    8. '_p' → logprob: -5.612451076507568
    9. 'a' → logprob: -6.487451076507568
    10. '_' → logprob: -6.612451076507568

Token 36: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8069731593132019
    2. ' [' → logprob: -1.5569732189178467
    3. ' []' → logprob: -1.5569732189178467
    4. '[' → logprob: -2.3069732189178467
    5. '[int' → logprob: -3.8069732189178467
    6. '[list' → logprob: -5.556972980499268
    7. '[a' → logprob: -5.681972980499268
    8. '[n' → logprob: -6.681972980499268
    9. '[input' → logprob: -7.431972980499268
    10. '[str' → logprob: -8.306973457336426

Token 37: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.006986741907894611
    2. ' tuple' → logprob: -5.756986618041992
    3. '(tuple' → logprob: -5.756986618041992
    4. '()]' → logprob: -7.631986618041992
    5. '()' → logprob: -9.756986618041992
    6. '(' → logprob: -9.881986618041992
    7. ']' → logprob: -11.131986618041992
    8. '(int' → logprob: -11.506986618041992
    9. 'int' → logprob: -11.756986618041992
    10. 'list' → logprob: -12.631986618041992

Token 38: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.031306810677051544
    2. '(int' → logprob: -4.281306743621826
    3. '(input' → logprob: -4.781306743621826
    4. '(' → logprob: -4.781306743621826
    5. '()' → logprob: -9.156307220458984
    6. 'map' → logprob: -9.781307220458984
    7. '([' → logprob: -11.156307220458984
    8. '(
' → logprob: -11.656307220458984
    9. ' (' → logprob: -12.156307220458984
    10. 'input' → logprob: -12.281307220458984

Token 39: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010899738408625126
    2. '(' → logprob: -7.126090049743652
    3. '<int' → logprob: -9.376090049743652
    4. '(input' → logprob: -9.876090049743652
    5. '(str' → logprob: -10.001090049743652
    6. 'int' → logprob: -10.376090049743652
    7. '(
' → logprob: -10.501090049743652
    8. '=int' → logprob: -10.876090049743652
    9. '[int' → logprob: -11.751090049743652
    10. ']int' → logprob: -12.001090049743652

Token 40: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00313529372215271
    2. ',input' → logprob: -6.2531352043151855
    3. 'input' → logprob: -7.3781352043151855
    4. '(' → logprob: -7.7531352043151855
    5. ',' → logprob: -9.128135681152344
    6. ')' → logprob: -11.253135681152344
    7. '=input' → logprob: -11.503135681152344
    8. ' input' → logprob: -11.628135681152344
    9. '))' → logprob: -12.503135681152344
    10. '(
' → logprob: -12.753135681152344

Token 41: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008801879361271858
    2. ' input' → logprob: -4.7588019371032715
    3. '(input' → logprob: -9.133801460266113
    4. ')' → logprob: -9.633801460266113
    5. ',input' → logprob: -11.883801460266113
    6. '=input' → logprob: -13.258801460266113
    7. '))' → logprob: -13.383801460266113
    8. '	input' → logprob: -14.383801460266113
    9. '[input' → logprob: -14.508801460266113
    10. ' ' → logprob: -14.633801460266113

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.8232690460281447e-05
    2. '()' → logprob: -10.000048637390137
    3. ' ().' → logprob: -13.500048637390137
    4. '()))' → logprob: -14.750048637390137
    5. '(' → logprob: -14.750048637390137
    6. '()
' → logprob: -15.500048637390137
    7. ' ' → logprob: -16.25004768371582
    8. '.split' → logprob: -16.50004768371582
    9. '())' → logprob: -16.62504768371582
    10. ')' → logprob: -17.25004768371582

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016599490481894463
    2. 'strip' → logprob: -8.750165939331055
    3. 'rstrip' → logprob: -12.375165939331055
    4. ' split' → logprob: -12.750165939331055
    5. '(split' → logprob: -15.250165939331055
    6. 'spl' → logprob: -15.875165939331055
    7. 's' → logprob: -18.250165939331055
    8. '.split' → logprob: -18.500165939331055
    9. 'read' → logprob: -18.750165939331055
    10. ' ' → logprob: -19.875165939331055

Token 44: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0030598267912864685
    2. '())' → logprob: -6.2530598640441895
    3. '))' → logprob: -7.7530598640441895
    4. '()' → logprob: -7.7530598640441895
    5. '())))' → logprob: -8.753059387207031
    6. '()))
' → logprob: -9.878059387207031
    7. '(' → logprob: -10.128059387207031
    8. '('' → logprob: -11.378059387207031
    9. ''))' → logprob: -12.878059387207031
    10. '()));' → logprob: -13.253059387207031

Token 45: ' for' (ID: 395)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04913739114999771
    2. ')' → logprob: -3.5491373538970947
    3. ')]' → logprob: -4.299137592315674
    4. '()' → logprob: -5.799137592315674
    5. '()]' → logprob: -6.049137592315674
    6. '(' → logprob: -9.549137115478516
    7. '()))' → logprob: -9.799137115478516
    8. ')])' → logprob: -9.924137115478516
    9. '))' → logprob: -10.799137115478516
    10. '()),' → logprob: -11.549137115478516

Token 46: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1951010674238205
    2. ' range' → logprob: -1.820101022720337
    3. 'range' → logprob: -4.445101261138916
    4. ' _' → logprob: -6.445101261138916
    5. ' in' → logprob: -6.945101261138916
    6. '_range' → logprob: -7.445101261138916
    7. '(range' → logprob: -8.320100784301758
    8. ' ' → logprob: -9.445100784301758
    9. '	range' → logprob: -11.570100784301758
    10. '(' → logprob: -11.820100784301758

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12173733860254288
    2. 'in' → logprob: -2.246737241744995
    3. 'range' → logprob: -5.121737480163574
    4. 'n' → logprob: -6.746737480163574
    5. '(' → logprob: -7.121737480163574
    6. ' range' → logprob: -7.871737480163574
    7. '(n' → logprob: -8.246737480163574
    8. ' ' → logprob: -9.746737480163574
    9. 'a' → logprob: -9.871737480163574
    10. 's' → logprob: -10.246737480163574

Token 48: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.2994620242971e-06
    2. ' range' → logprob: -11.750008583068848
    3. '(range' → logprob: -16.25000762939453
    4. 'rang' → logprob: -16.87500762939453
    5. 'r' → logprob: -17.00000762939453
    6. 'n' → logprob: -17.50000762939453
    7. 'a' → logprob: -17.62500762939453
    8. ')' → logprob: -17.62500762939453
    9. '	range' → logprob: -17.87500762939453
    10. '```' → logprob: -17.87500762939453

Token 49: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003182348096743226
    2. '(' → logprob: -5.753182411193848
    3. 'n' → logprob: -13.253182411193848
    4. '(
' → logprob: -13.378182411193848
    5. ' n' → logprob: -14.503182411193848
    6. ')n' → logprob: -14.878182411193848
    7. ' (' → logprob: -15.128182411193848
    8. ')' → logprob: -16.37818145751953
    9. '(

' → logprob: -16.75318145751953
    10. '()' → logprob: -18.75318145751953

Token 50: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001532401074655354
    2. ')' → logprob: -9.250153541564941
    3. ')])' → logprob: -10.250153541564941
    4. '))' → logprob: -11.000153541564941
    5. '])]' → logprob: -13.500153541564941
    6. ' )' → logprob: -14.000153541564941
    7. '])' → logprob: -14.250153541564941
    8. ']' → logprob: -14.250153541564941
    9. ')]
' → logprob: -14.500153541564941
    10. '')]' → logprob: -14.500153541564941

Token 51: 's' (ID: 82)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4334907531738281
    2. '<|end|>' → logprob: -1.4334907531738281
    3. 'a' → logprob: -2.183490753173828
    4. ')' → logprob: -2.308490753173828
    5. '
' → logprob: -2.433490753173828
    6. '```' → logprob: -2.933490753173828
    7. '.' → logprob: -3.683490753173828
    8. ' ' → logprob: -4.058490753173828
    9. '\' → logprob: -4.058490753173828
    10. ']' → logprob: -4.183490753173828

Token 52: ' =' (ID: 314)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.8054658770561218
    2. 'um' → logprob: -1.5554659366607666
    3. '=' → logprob: -2.0554659366607666
    4. 'orted' → logprob: -2.1804659366607666
    5. 'u' → logprob: -3.5554659366607666
    6. 'ort' → logprob: -4.3054656982421875
    7. '.' → logprob: -4.4304656982421875
    8. ' =' → logprob: -4.5554656982421875
    9. 'e' → logprob: -4.6804656982421875
    10. '=set' → logprob: -5.4304656982421875

Token 53: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.02721107006073
    2. '0' → logprob: -1.27721107006073
    3. 'sum' → logprob: -1.40221107006073
    4. ' set' → logprob: -3.1522111892700195
    5. ' sum' → logprob: -3.9022111892700195
    6. '[]' → logprob: -4.2772111892700195
    7. ' ' → logprob: -4.4022111892700195
    8. 'sorted' → logprob: -4.7772111892700195
    9. ' []' → logprob: -4.9022111892700195
    10. 'a' → logprob: -5.5272111892700195

Token 54: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.8312238454818726
    2. '(' → logprob: -1.2062238454818726
    3. '()' → logprob: -1.3312238454818726
    4. '((' → logprob: -7.206223964691162
    5. '(()' → logprob: -9.456223487854004
    6. '([]' → logprob: -9.956223487854004
    7. '(s' → logprob: -9.956223487854004
    8. '([' → logprob: -10.956223487854004
    9. '())' → logprob: -11.331223487854004
    10. ' ()' → logprob: -12.081223487854004

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. '))' → logprob: -13.000003814697266
    3. ' )' → logprob: -14.125003814697266
    4. ')
' → logprob: -16.250003814697266
    5. '])' → logprob: -16.750003814697266
    6. '())' → logprob: -16.875003814697266
    7. ')}' → logprob: -17.125003814697266
    8. ')a' → logprob: -17.125003814697266
    9. ')]' → logprob: -17.500003814697266
    10. '}' → logprob: -17.750003814697266

Token 56: ' ' (ID: 220)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3397032618522644
    2. ')' → logprob: -1.9647033214569092
    3. '
' → logprob: -3.089703321456909
    4. '#' → logprob: -3.589703321456909
    5. '<|end|>' → logprob: -3.839703321456909
    6. '\' → logprob: -4.08970308303833
    7. ' ' → logprob: -4.71470308303833
    8. '\n' → logprob: -4.71470308303833
    9. '' → logprob: -6.21470308303833
    10. ',' → logprob: -6.21470308303833

Token 57: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6718899607658386
    2. '.' → logprob: -1.4218900203704834
    3. ' ' → logprob: -2.4218900203704834
    4. '#' → logprob: -2.9218900203704834
    5. '
' → logprob: -3.2968900203704834
    6. '\n' → logprob: -4.171889781951904
    7. '<|end|>' → logprob: -4.546889781951904
    8. 's' → logprob: -5.171889781951904
    9. '\' → logprob: -5.171889781951904
    10. ',' → logprob: -5.296889781951904

Token 58: ' c' (ID: 274)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0054327249526978
    2. 's' → logprob: -1.6304327249526978
    3. ' ' → logprob: -1.7554327249526978
    4. 'a' → logprob: -2.755432605743408
    5. 'for' → logprob: -2.880432605743408
    6. ')' → logprob: -3.380432605743408
    7. ' for' → logprob: -3.755432605743408
    8. ' #' → logprob: -4.130432605743408
    9. 'if' → logprob: -4.255432605743408
    10. ' a' → logprob: -4.505432605743408

Token 59: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.6156020164489746
    2. 'ont' → logprob: -1.2406020164489746
    3. 'e' → logprob: -3.1156020164489746
    4. ''' → logprob: -3.7406020164489746
    5. 'on' → logprob: -4.490602016448975
    6. 'a' → logprob: -4.615602016448975
    7. 'omme' → logprob: -4.615602016448975
    8. 'omm' → logprob: -4.740602016448975
    9. ''e' → logprob: -4.865602016448975
    10. 'om' → logprob: -4.990602016448975

Token 60: ' pour' (ID: 1930)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.2643364667892456
    2. ' bien' → logprob: -1.7643364667892456
    3. ' pour' → logprob: -2.389336585998535
    4. 'pour' → logprob: -2.514336585998535
    5. ' important' → logprob: -3.139336585998535
    6. 'bien' → logprob: -3.139336585998535
    7. ' utile' → logprob: -3.389336585998535
    8. 'a' → logprob: -3.514336585998535
    9. ' un' → logprob: -3.889336585998535
    10. ' toujours' → logprob: -4.014336585998535

Token 61: ' vérifier' (ID: 93671)
  Prédit: ' vérifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.24879315495491028
    2. 'l' → logprob: -3.623793125152588
    3. 'v' → logprob: -3.748793125152588
    4. 'avoir' → logprob: -4.498793125152588
    5. ' éviter' → logprob: -4.498793125152588
    6. 'chercher' → logprob: -4.623793125152588
    7. ' rechercher' → logprob: -4.623793125152588
    8. ' pouvoir' → logprob: -4.748793125152588
    9. ' élim' → logprob: -4.873793125152588
    10. ' accél' → logprob: -4.873793125152588

Token 62: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' doubl' (ID: 127992)
  Prédit: ' doubl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doubl' → logprob: -0.0639568641781807
    2. ' duplicates' → logprob: -3.9389569759368896
    3. 'dou' → logprob: -4.0639567375183105
    4. ' points' → logprob: -4.6889567375183105
    5. 'duplicates' → logprob: -5.3139567375183105
    6. 'd' → logprob: -5.6889567375183105
    7. 'duplic' → logprob: -6.4389567375183105
    8. ' duplic' → logprob: -6.4389567375183105
    9. 'points' → logprob: -6.8139567375183105
    10. ' doubles' → logprob: -7.8139567375183105

Token 64: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.23089535534381866
    2. 'és' → logprob: -2.1058952808380127
    3. 'es' → logprob: -2.4808952808380127
    4. 'on' → logprob: -7.980895519256592
    5. 's' → logprob: -8.730895042419434
    6. 'é' → logprob: -9.855895042419434
    7. 'os' → logprob: -9.855895042419434
    8. 'ées' → logprob: -10.105895042419434
    9. 'ès' → logprob: -10.355895042419434
    10. 'is' → logprob: -10.855895042419434

Token 65: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' je' (ID: 1264)
  Prédit: ' mais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.3765117824077606
    2. ' on' → logprob: -2.501511812210083
    3. ' len' → logprob: -2.751511812210083
    4. ' but' → logprob: -3.501511812210083
    5. 's' → logprob: -3.501511812210083
    6. ' et' → logprob: -3.751511812210083
    7. ' s' → logprob: -4.126511573791504
    8. 'len' → logprob: -4.251511573791504
    9. ' je' → logprob: -5.001511573791504
    10. ' car' → logprob: -5.376511573791504

Token 67: ' crois' (ID: 65485)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20518836379051208
    2. 'veux' → logprob: -3.705188274383545
    3. ' suppose' → logprob: -4.080188274383545
    4. 'print' → logprob: -4.080188274383545
    5. ' veux' → logprob: -4.205188274383545
    6. ' continue' → logprob: -4.330188274383545
    7. ' pense' → logprob: -4.455188274383545
    8. '#' → logprob: -4.705188274383545
    9. 'supp' → logprob: -4.705188274383545
    10. 'vais' → logprob: -4.955188274383545

Token 68: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.2617073655128479
    2. ' n' → logprob: -1.5117073059082031
    3. ' ' → logprob: -5.011707305908203
    4. 'len' → logprob: -6.511707305908203
    5. 'n' → logprob: -7.136707305908203
    6. ' not' → logprob: -7.386707305908203
    7. '(len' → logprob: -9.261707305908203
    8. ' s' → logprob: -11.136707305908203
    9. ' a' → logprob: -11.261707305908203
    10. '  ' → logprob: -11.261707305908203

Token 71: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.002005961025133729
    2. '(a' → logprob: -6.2520060539245605
    3. '(' → logprob: -9.502005577087402
    4. 's' → logprob: -13.127005577087402
    5. '(set' → logprob: -15.377005577087402
    6. '(n' → logprob: -15.627005577087402
    7. 'a' → logprob: -16.00200653076172
    8. ' (' → logprob: -17.12700653076172
    9. '(
' → logprob: -18.25200653076172
    10. '()' → logprob: -18.25200653076172

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10799585282802582
    2. ' !=' → logprob: -2.6079957485198975
    3. '!=' → logprob: -4.357995986938477
    4. '<' → logprob: -5.357995986938477
    5. ' <' → logprob: -5.357995986938477
    6. ' )' → logprob: -5.357995986938477
    7. ' ' → logprob: -7.357995986938477
    8. ')!=' → logprob: -7.607995986938477
    9. ' ==' → logprob: -8.232995986938477
    10. '==' → logprob: -8.482995986938477

Token 73: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7462712526321411
    2. '!=' → logprob: -1.1212712526321411
    3. '<' → logprob: -1.9962712526321411
    4. ' <' → logprob: -2.8712711334228516
    5. '==' → logprob: -5.621271133422852
    6. ' ==' → logprob: -6.246271133422852
    7. ')' → logprob: -7.246271133422852
    8. ' ' → logprob: -8.121271133422852
    9. '()!=' → logprob: -8.871271133422852
    10. '<len' → logprob: -8.871271133422852

Token 74: ' len' (ID: 4631)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2524196207523346
    2. 'n' → logprob: -1.5024195909500122
    3. ' len' → logprob: -8.377419471740723
    4. 'len' → logprob: -8.752419471740723
    5. '	n' → logprob: -9.627419471740723
    6. ' ' → logprob: -10.377419471740723
    7. '```' → logprob: -13.752419471740723
    8. ' ' → logprob: -14.002419471740723
    9. '   ' → logprob: -14.689919471740723
    10. ')n' → logprob: -14.752419471740723

Token 75: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.945094355614856e-05
    2. '(' → logprob: -9.625069618225098
    3. 'a' → logprob: -13.000069618225098
    4. '(n' → logprob: -14.000069618225098
    5. '(
' → logprob: -16.00006866455078
    6. '(s' → logprob: -16.25006866455078
    7. '(A' → logprob: -17.87506866455078
    8. ' (' → logprob: -18.00006866455078
    9. '(

' → logprob: -19.00006866455078
    10. '(x' → logprob: -19.25006866455078

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015311705647036433
    2. ')' → logprob: -6.50153112411499
    3. ' ):' → logprob: -11.251531600952148
    4. '):
' → logprob: -11.376531600952148
    5. ':' → logprob: -12.501531600952148
    6. ''):' → logprob: -15.876531600952148
    7. ')：' → logprob: -16.25153160095215
    8. '):

' → logprob: -16.50153160095215
    9. ')):' → logprob: -16.50153160095215
    10. '):
' → logprob: -16.75153160095215

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20775540173053741
    2. ' print' → logprob: -2.0827553272247314
    3. 'print' → logprob: -3.0827553272247314
    4. ':' → logprob: -5.2077555656433105
    5. '    ' → logprob: -5.4577555656433105
    6. '    
' → logprob: -6.7077555656433105
    7. ' 
' → logprob: -6.7077555656433105
    8. ' ' → logprob: -7.2077555656433105
    9. '	print' → logprob: -7.4577555656433105
    10. '```' → logprob: -7.4577555656433105

Token 78: ' raise' (ID: 9338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2574303448200226
    2. ' print' → logprob: -1.5074303150177002
    3. '   ' → logprob: -6.257430553436279
    4. 'exit' → logprob: -6.507430553436279
    5. ' exit' → logprob: -7.382430553436279
    6. '    ' → logprob: -7.882430553436279
    7. 'raise' (adapté à ' raise') → logprob: -8.632430076599121
    8. ' raise' → logprob: -8.882430076599121
    9. '    
' → logprob: -8.882430076599121
    10. '#' → logprob: -9.007430076599121

Token 79: ' Exception' (ID: 6851)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.010861878283321857
    2. 'Value' → logprob: -4.635861873626709
    3. ' ' → logprob: -6.885861873626709
    4. ' Val' → logprob: -10.510862350463867
    5. '_value' → logprob: -11.010862350463867
    6. ' Assertion' → logprob: -11.635862350463867
    7. '	Value' → logprob: -11.885862350463867
    8. '_Value' → logprob: -12.010862350463867
    9. 'Val' → logprob: -12.635862350463867
    10. '  ' → logprob: -12.760862350463867

Token 80: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.05588372051715851
    2. '(' → logprob: -2.9308836460113525
    3. '('' → logprob: -7.055883884429932
    4. '()' → logprob: -9.055883407592773
    5. '(
' → logprob: -11.805883407592773
    6. '("")' → logprob: -12.180883407592773
    7. '"' → logprob: -13.305883407592773
    8. '(f' → logprob: -13.305883407592773
    9. '("("' → logprob: -13.430883407592773
    10. '(Value' → logprob: -14.055883407592773

Token 81: 'Duplicates' (ID: 119970)
  Prédit: 'Dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dou' → logprob: -1.3752632141113281
    2. 'Points' → logprob: -1.6252632141113281
    3. 'Des' → logprob: -1.7502632141113281
    4. 'Il' → logprob: -2.625263214111328
    5. 'Erreur' → logprob: -3.375263214111328
    6. 'Point' → logprob: -3.625263214111328
    7. 'Deux' → logprob: -3.625263214111328
    8. ' Dou' → logprob: -3.625263214111328
    9. ' Points' → logprob: -3.750263214111328
    10. 'Les' → logprob: -3.750263214111328

Token 82: ' detected' (ID: 28357)
  Prédit: ' detected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' detected' → logprob: -0.06511536240577698
    2. ' found' → logprob: -3.190115451812744
    3. ' de' → logprob: -4.940115451812744
    4. ' détect' → logprob: -5.065115451812744
    5. ' not' → logprob: -5.940115451812744
    6. ' in' → logprob: -6.315115451812744
    7. ' dans' → logprob: -6.565115451812744
    8. ' ' → logprob: -7.190115451812744
    9. ' detect' → logprob: -8.065114974975586
    10. ' points' → logprob: -8.190114974975586

Token 83: '!")

' (ID: 169327)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.015043651685118675
    2. '!")' → logprob: -4.89004373550415
    3. ')")' → logprob: -6.01504373550415
    4. ' !' → logprob: -6.26504373550415
    5. ')' → logprob: -6.64004373550415
    6. ' )' → logprob: -7.01504373550415
    7. ' ")' → logprob: -8.140043258666992
    8. ':' → logprob: -8.515043258666992
    9. ' :' → logprob: -9.015043258666992
    10. '.")' → logprob: -9.265043258666992

Token 84: 'answer' (ID: 17021)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07991205155849457
    2. '=' → logprob: -2.579911947250366
    3. 's' → logprob: -7.329912185668945
    4. '_' → logprob: -7.954912185668945
    5. ' ' → logprob: -13.204912185668945
    6. '1' → logprob: -13.579912185668945
    7. ':' → logprob: -13.704912185668945
    8. ')' → logprob: -13.829912185668945
    9. '_points' → logprob: -13.829912185668945
    10. '.' → logprob: -14.079912185668945

Token 86: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18464109301567078
    2. ' ' → logprob: -1.8096411228179932
    3. ' n' → logprob: -6.559640884399414
    4. 'set' → logprob: -7.684640884399414
    5. 'n' → logprob: -7.934640884399414
    6. ' []' → logprob: -7.934640884399414
    7. 'float' → logprob: -8.059640884399414
    8. ' set' → logprob: -8.059640884399414
    9. '[]' → logprob: -8.184640884399414
    10. ' float' → logprob: -8.309640884399414

Token 87: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07144990563392639
    2. 'max' → logprob: -3.5714499950408936
    3. 'n' → logprob: -4.4464497566223145
    4. '"' → logprob: -4.8214497566223145
    5. 'len' → logprob: -4.8214497566223145
    6. 'float' → logprob: -5.6964497566223145
    7. 'sum' → logprob: -6.0714497566223145
    8. 'set' → logprob: -6.3214497566223145
    9. '[]' → logprob: -7.1964497566223145
    10. '-' → logprob: -7.3214497566223145

Token 88: '**' (ID: 410)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: '12' (ID: 899)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.003650795202702284
    2. '18' → logprob: -6.378650665283203
    3. '10' → logprob: -7.003650665283203
    4. '6' → logprob: -7.753650665283203
    5. '15' → logprob: -8.753650665283203
    6. '7' → logprob: -8.753650665283203
    7. '12' → logprob: -8.878650665283203
    8. '8' → logprob: -9.003650665283203
    9. '11' → logprob: -12.003650665283203
    10. '20' → logprob: -12.128650665283203

Token 90: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3241475820541382
    2. 'for' → logprob: -2.5741477012634277
    3. ' 
' → logprob: -2.5741477012634277
    4. '\n' → logprob: -2.9491477012634277
    5. '' → logprob: -3.4491477012634277
    6. ' ' → logprob: -4.449147701263428
    7. '\' → logprob: -4.699147701263428
    8. '<|end|>' → logprob: -5.199147701263428
    9. ' for' → logprob: -5.449147701263428
    10. '  
' → logprob: -5.574147701263428

Token 91: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18215613067150116
    2. ' for' → logprob: -2.6821560859680176
    3. ' 
' → logprob: -3.1821560859680176
    4. ' ' → logprob: -4.057156085968018
    5. '
' → logprob: -4.432156085968018
    6. '.' → logprob: -4.682156085968018
    7. '#' → logprob: -5.557156085968018
    8. '\n' → logprob: -5.557156085968018
    9. '' → logprob: -5.932156085968018
    10. '\' → logprob: -6.182156085968018

Token 92: ' J' (ID: 643)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5938571691513062
    2. 'for' → logprob: -1.7188571691513062
    3. '<|end|>' → logprob: -2.4688572883605957
    4. ' for' → logprob: -2.5938572883605957
    5. ' 
' → logprob: -4.218857288360596
    6. '#' → logprob: -4.468857288360596
    7. '0' → logprob: -4.718857288360596
    8. ' #' → logprob: -4.968857288360596
    9. 'None' → logprob: -5.218857288360596
    10. 'a' → logprob: -5.343857288360596

Token 93: ''espère' (ID: 116557)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8323280215263367
    2. 'u' → logprob: -0.8323280215263367
    3. 'a' → logprob: -3.2073280811309814
    4. 'ust' → logprob: -3.2073280811309814
    5. 'us' → logprob: -3.4573280811309814
    6. 'i' → logprob: -5.707327842712402
    7. ''' → logprob: -5.957327842712402
    8. 'uste' → logprob: -5.957327842712402
    9. ''ai' → logprob: -6.707327842712402
    10. 's' → logprob: -7.207327842712402

Token 94: ' que' (ID: 661)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7039526700973511
    2. '<|end|>' → logprob: -0.8289526700973511
    3. 'for' → logprob: -3.8289527893066406
    4. ' ' → logprob: -3.9539527893066406
    5. ' 
' → logprob: -4.703952789306641
    6. ' for' → logprob: -5.078952789306641
    7. '  
' → logprob: -5.453952789306641
    8. '\n' → logprob: -6.078952789306641
    9. '<|end|>' → logprob: -6.328952789306641
    10. '

' → logprob: -6.703952789306641

Token 95: ' c' (ID: 274)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ce' → logprob: -1.052786111831665
    2. ' this' → logprob: -1.802786111831665
    3. ' la' → logprob: -2.302786111831665
    4. ' ' → logprob: -2.427786111831665
    5. '_' → logprob: -2.802786111831665
    6. ' cette' → logprob: -2.802786111831665
    7. ' l' → logprob: -3.052786111831665
    8. ' vous' → logprob: -3.302786111831665
    9. ' le' → logprob: -3.677786111831665
    10. ' cela' → logprob: -4.302785873413086

Token 96: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10900945216417313
    2. 'a' → logprob: -2.3590095043182373
    3. 'ela' → logprob: -5.484009265899658
    4. 'el' → logprob: -6.734009265899658
    5. 'ode' → logprob: -7.109009265899658
    6. ''a' → logprob: -7.359009265899658
    7. 'est' → logprob: -7.984009265899658
    8. 'et' → logprob: -7.984009265899658
    9. 'es' → logprob: -8.109009742736816
    10. ''' → logprob: -8.609009742736816

Token 97: ' assez' (ID: 33376)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3057310581207275
    2. ' assez' → logprob: -1.5557310581207275
    3. ' suffisamment' → logprob: -1.5557310581207275
    4. ' suff' → logprob: -1.9307310581207275
    5. ' un' → logprob: -2.6807310581207275
    6. ' suffis' → logprob: -2.9307310581207275
    7. ' une' → logprob: -4.055730819702148
    8. 'un' → logprob: -5.305730819702148
    9. 't' → logprob: -6.305730819702148
    10. 'larg' → logprob: -6.305730819702148

Token 98: ' grand' (ID: 6363)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35079681873321533
    2. ' ' → logprob: -2.475796699523926
    3. '  
' → logprob: -2.850796699523926
    4. ' 
' → logprob: -3.100796699523926
    5. '' → logprob: -3.725796699523926
    6. ' for' → logprob: -3.975796699523926
    7. 'for' → logprob: -3.975796699523926
    8. '\n' → logprob: -4.225796699523926
    9. '<|end|>' → logprob: -4.725796699523926
    10. '  ' → logprob: -5.475796699523926

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08897916227579117
    2. 'for' → logprob: -4.088979244232178
    3. ' 
' → logprob: -4.088979244232178
    4. '<|end|>' → logprob: -4.088979244232178
    5. ' ' → logprob: -4.713979244232178
    6. '

' → logprob: -5.088979244232178
    7. ' for' → logprob: -5.463979244232178
    8. '  
' → logprob: -5.588979244232178
    9. '\n' → logprob: -5.588979244232178
    10. '' → logprob: -5.713979244232178

Token 100: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002560553839430213
    2. ' for' → logprob: -6.377560615539551
    3. 'x' → logprob: -7.502560615539551
    4. '#' → logprob: -9.37756061553955
    5. '
' → logprob: -9.50256061553955
    6. 'answer' → logprob: -10.87756061553955
    7. 'from' → logprob: -11.00256061553955
    8. 'def' → logprob: -11.00256061553955
    9. 'import' → logprob: -11.25256061553955
    10. 'd' → logprob: -11.25256061553955

Token 101: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10049854964017868
    2. 'i' → logprob: -2.3504984378814697
    3. ' x' → logprob: -9.10049819946289
    4. ' ' → logprob: -9.60049819946289
    5. 'x' → logprob: -9.97549819946289
    6. '_' → logprob: -11.22549819946289
    7. '_i' → logprob: -11.22549819946289
    8. ' _' → logprob: -11.85049819946289
    9. '	i' → logprob: -11.97549819946289
    10. ' p' → logprob: -11.97549819946289

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03613659739494324
    2. 'in' → logprob: -3.5361366271972656
    3. ' ' → logprob: -5.661136627197266
    4. ',' → logprob: -5.911136627197266
    5. 'n' → logprob: -9.911136627197266
    6. '_' → logprob: -10.536136627197266
    7. ' ,' → logprob: -10.536136627197266
    8. '  ' → logprob: -11.036136627197266
    9. '1' → logprob: -11.536136627197266
    10. ' i' → logprob: -11.536136627197266

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1436004936695099
    2. ' range' → logprob: -2.0186004638671875
    3. 'a' → logprob: -7.0186004638671875
    4. ' a' → logprob: -10.643600463867188
    5. ' ' → logprob: -13.018600463867188
    6. '   ' → logprob: -14.018600463867188
    7. 'r' → logprob: -14.143600463867188
    8. '	range' → logprob: -14.143600463867188
    9. '  ' → logprob: -14.643600463867188
    10. '(range' → logprob: -15.143600463867188

Token 104: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008715596632100642
    2. '(' → logprob: -7.250871658325195
    3. '(len' → logprob: -8.750871658325195
    4. ' (' → logprob: -13.125871658325195
    5. ' n' → logprob: -14.500871658325195
    6. 'n' → logprob: -15.125871658325195
    7. '(s' → logprob: -15.250871658325195
    8. '(
' → logprob: -16.250871658325195
    9. '(l' → logprob: -17.125871658325195
    10. '(a' → logprob: -18.250871658325195

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10809396207332611
    2. '):
' → logprob: -2.3580939769744873
    3. ' ):' → logprob: -5.233093738555908
    4. ')' → logprob: -6.983093738555908
    5. '-' → logprob: -7.483093738555908
    6. '+' → logprob: -7.608093738555908
    7. '):
' → logprob: -8.233094215393066
    8. ' ):
' → logprob: -8.733094215393066
    9. ' -' → logprob: -9.608094215393066
    10. ' )' → logprob: -11.233094215393066

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23334982991218567
    2. ' for' → logprob: -1.6083498001098633
    3. ' ' → logprob: -5.608349800109863
    4. 'for' → logprob: -6.358349800109863
    5. '	for' → logprob: -6.733349800109863
    6. ':' → logprob: -7.483349800109863
    7. '  ' → logprob: -8.483349800109863
    8. '    
' → logprob: -9.233349800109863
    9. '<|end|>' → logprob: -9.233349800109863
    10. '    ' → logprob: -9.358349800109863

Token 107: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3410668969154358
    2. 'for' (adapté à ' for') → logprob: -1.591066837310791
    3. '   ' → logprob: -2.466066837310791
    4. '	for' → logprob: -8.71606731414795
    5. ' ' → logprob: -8.84106731414795
    6. '  ' → logprob: -10.84106731414795
    7. ' j' → logprob: -11.46606731414795
    8. '    ' → logprob: -11.59106731414795
    9. '```' → logprob: -12.84106731414795
    10. '    
' → logprob: -13.09106731414795

Token 108: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.05502423271536827
    2. 'j' → logprob: -3.3050241470336914
    3. ' range' → logprob: -4.430024147033691
    4. ' i' → logprob: -5.805024147033691
    5. 'range' → logprob: -6.430024147033691
    6. 'i' → logprob: -8.305024147033691
    7. '   ' → logprob: -11.430024147033691
    8. ' in' → logprob: -11.680024147033691
    9. ' ' → logprob: -11.680024147033691
    10. '    ' → logprob: -12.430024147033691

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01432157214730978
    2. 'in' → logprob: -4.264321804046631
    3. ' i' → logprob: -9.764321327209473
    4. '   ' → logprob: -9.889321327209473
    5. 'range' → logprob: -11.014321327209473
    6. 'i' → logprob: -11.389321327209473
    7. '(i' → logprob: -11.639321327209473
    8. ' ' → logprob: -12.264321327209473
    9. '    ' → logprob: -13.014321327209473
    10. ' range' → logprob: -13.264321327209473

Token 110: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47422465682029724
    2. ' range' → logprob: -0.9742246866226196
    3. '(range' → logprob: -8.974225044250488
    4. '   ' → logprob: -11.349225044250488
    5. ' ' → logprob: -12.349225044250488
    6. 'i' → logprob: -13.849225044250488
    7. ' i' → logprob: -13.849225044250488
    8. '(i' → logprob: -14.349225044250488
    9. '  ' → logprob: -14.349225044250488
    10. '    ' → logprob: -14.599225044250488

Token 111: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.05195918679237366
    2. '(n' → logprob: -3.301959276199341
    3. '(range' → logprob: -4.301959037780762
    4. '(' → logprob: -8.926959037780762
    5. 'range' → logprob: -9.051959037780762
    6. ' range' → logprob: -10.801959037780762
    7. ' (' → logprob: -12.551959037780762
    8. '((' → logprob: -13.551959037780762
    9. '(s' → logprob: -13.676959037780762
    10. '(a' → logprob: -14.301959037780762

Token 112: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889683544635773
    2. ' +' → logprob: -2.5788967609405518
    3. '1' → logprob: -12.703896522521973
    4. '+i' → logprob: -12.828896522521973
    5. '+j' → logprob: -15.078896522521973
    6. '+
' → logprob: -15.453896522521973
    7. ' ' → logprob: -15.578896522521973
    8. '   ' → logprob: -15.703896522521973
    9. ' +
' → logprob: -16.20389747619629
    10. '+n' → logprob: -16.20389747619629

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. 'n' → logprob: -16.375001907348633
    4. '   ' → logprob: -16.500001907348633
    5. 'i' → logprob: -16.750001907348633
    6. ',' → logprob: -17.250001907348633
    7. '```' → logprob: -17.375001907348633
    8. ')' → logprob: -17.875001907348633
    9. '
' → logprob: -18.187501907348633
    10. '2' → logprob: -18.375001907348633

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06316360086202621
    2. ',n' → logprob: -2.8131635189056396
    3. ' ,' → logprob: -7.313163757324219
    4. 'n' → logprob: -7.563163757324219
    5. '(n' → logprob: -12.813163757324219
    6. '+,' → logprob: -13.313163757324219
    7. '_,' → logprob: -13.688163757324219
    8. '(),' → logprob: -13.688163757324219
    9. ' n' → logprob: -14.563163757324219
    10. '1' → logprob: -14.813163757324219

Token 115: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018153805285692215
    2. ' n' → logprob: -4.018153667449951
    3. '   ' → logprob: -12.76815414428711
    4. ' ' → logprob: -14.51815414428711
    5. '	n' → logprob: -15.51815414428711
    6. ')' → logprob: -15.51815414428711
    7. '    ' → logprob: -16.76815414428711
    8. '  ' → logprob: -17.01815414428711
    9. ')n' → logprob: -17.01815414428711
    10. ' ' → logprob: -18.26815414428711

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.7610454708337784e-05
    2. '):
' → logprob: -11.125027656555176
    3. ' ):' → logprob: -12.000027656555176
    4. ':' → logprob: -12.250027656555176
    5. ')' → logprob: -13.500027656555176
    6. '():' → logprob: -15.750027656555176
    7. '   ' → logprob: -16.62502670288086
    8. '}:' → logprob: -16.62502670288086
    9. ']:' → logprob: -16.87502670288086
    10. '+' → logprob: -17.00002670288086

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027528855949640274
    2. '
' → logprob: -5.277528762817383
    3. ' x' → logprob: -5.277528762817383
    4. ' dx' → logprob: -5.277528762817383
    5. 'x' → logprob: -5.527528762817383
    6. '        
' → logprob: -6.152528762817383
    7. 'dx' → logprob: -6.277528762817383
    8. '   ' → logprob: -6.777528762817383
    9. '    
' → logprob: -7.277528762817383
    10. '    ' → logprob: -7.902528762817383

Token 118: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.32979580760002136
    2. 'dx' → logprob: -1.5797958374023438
    3. 'xi' → logprob: -3.2047958374023438
    4. ' dx' → logprob: -4.704795837402344
    5. '       ' → logprob: -4.829795837402344
    6. ' x' → logprob: -5.079795837402344
    7. '           ' → logprob: -5.454795837402344
    8. '(x' → logprob: -5.829795837402344
    9. 'if' → logprob: -6.454795837402344
    10. '   ' → logprob: -7.579795837402344

Token 119: ' On' (ID: 2160)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1790384203195572
    2. 'dx' → logprob: -2.1790385246276855
    3. 'xi' → logprob: -3.1790385246276855
    4. '(x' → logprob: -5.4290385246276855
    5. 'if' → logprob: -7.1790385246276855
    6. 'd' → logprob: -7.1790385246276855
    7. ' x' → logprob: -7.1790385246276855
    8. ' dx' → logprob: -7.3040385246276855
    9. 'dist' → logprob: -7.6790385246276855
    10. '   ' → logprob: -8.304038047790527

Token 120: ' va' (ID: 3423)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9583646655082703
    2. ' x' → logprob: -1.083364725112915
    3. ' dx' → logprob: -1.958364725112915
    4. 'dx' → logprob: -3.083364725112915
    5. ' for' → logprob: -3.708364725112915
    6. ' continue' → logprob: -4.333364486694336
    7. ' if' → logprob: -4.708364486694336
    8. 'for' → logprob: -4.708364486694336
    9. 'if' → logprob: -4.833364486694336
    10. '#' → logprob: -5.458364486694336

Token 121: ' essayer' (ID: 92713)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.1730673611164093
    2. ' for' → logprob: -3.548067331314087
    3. ' calc' → logprob: -3.548067331314087
    4. 'calcul' → logprob: -4.173067569732666
    5. ' continuer' → logprob: -4.298067569732666
    6. 'for' → logprob: -4.423067569732666
    7. 'x' → logprob: -4.673067569732666
    8. 'contin' → logprob: -4.923067569732666
    9. '       ' → logprob: -4.923067569732666
    10. '   ' → logprob: -5.298067569732666

Token 122: ' tous' (ID: 10688)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2017599642276764
    2. ' de' → logprob: -2.0767600536346436
    3. ' d' → logprob: -4.0767598152160645
    4. '   ' → logprob: -4.2017598152160645
    5. '       ' → logprob: -4.8267598152160645
    6. 'x' → logprob: -5.0767598152160645
    7. ' dx' → logprob: -5.8267598152160645
    8. 'd' → logprob: -5.9517598152160645
    9. 'dx' → logprob: -6.2017598152160645
    10. '        ' → logprob: -6.9517598152160645

Token 123: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4356178045272827
    2. ':' → logprob: -1.4356178045272827
    3. 'les' → logprob: -3.1856179237365723
    4. '   ' → logprob: -3.3106179237365723
    5. ' ' → logprob: -3.8106179237365723
    6. '       ' → logprob: -5.435617923736572
    7. ' pairs' → logprob: -6.060617923736572
    8. ' :' → logprob: -6.560617923736572
    9. ' points' → logprob: -7.060617923736572
    10. '    ' → logprob: -7.185617923736572

Token 124: ' couples' (ID: 29972)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.416982501745224
    2. 'pairs' → logprob: -1.7919825315475464
    3. 'p' → logprob: -2.791982412338257
    4. 'k' → logprob: -3.291982412338257
    5. 'segments' → logprob: -4.041982650756836
    6. 'c' → logprob: -4.291982650756836
    7. ' points' → logprob: -4.291982650756836
    8. 'for' → logprob: -5.291982650756836
    9. 'dx' → logprob: -5.541982650756836
    10. 'd' → logprob: -5.791982650756836

Token 125: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010753968730568886
    2. '<|end|>' → logprob: -5.635754108428955
    3. ',' → logprob: -5.885754108428955
    4. '        
' → logprob: -6.010754108428955
    5. ' x' → logprob: -7.885754108428955
    6. '<|end|>' → logprob: -8.260753631591797
    7. '        ' → logprob: -8.385753631591797
    8. '           ' → logprob: -9.385753631591797
    9. ':' → logprob: -9.510753631591797
    10. ' ' → logprob: -9.635753631591797

Token 126: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.31443700194358826
    2. ' points' → logprob: -1.3144370317459106
    3. 'a' → logprob: -7.064436912536621
    4. 'point' → logprob: -8.689436912536621
    5. 'p' → logprob: -9.939436912536621
    6. ' a' → logprob: -10.064436912536621
    7. ' ' → logprob: -11.064436912536621
    8. ' point' → logprob: -11.939436912536621
    9. '	points' → logprob: -12.064436912536621
    10. 'pts' → logprob: -12.314436912536621

Token 127: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02308601699769497
    2. '        
' → logprob: -4.523086071014404
    3. ',' → logprob: -5.523086071014404
    4. 'x' → logprob: -6.148086071014404
    5. '<|end|>' → logprob: -6.648086071014404
    6. ' x' → logprob: -6.773086071014404
    7. '        ' → logprob: -7.023086071014404
    8. '           ' → logprob: -7.273086071014404
    9. 'dx' → logprob: -8.023085594177246
    10. 'distance' → logprob: -8.148085594177246

Token 128: 'i' (ID: 72)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.637167751789093
    2. '       ' → logprob: -1.5121676921844482
    3. 'xi' → logprob: -2.3871676921844482
    4. ' x' → logprob: -2.6371676921844482
    5. ')' → logprob: -4.012167930603027
    6. 'dx' → logprob: -4.137167930603027
    7. ' xi' → logprob: -4.137167930603027
    8. '           ' → logprob: -4.887167930603027
    9. '(x' → logprob: -5.012167930603027
    10. ' dx' → logprob: -5.137167930603027

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47416532039642334
    2. ',j' → logprob: -1.4741653203964233
    3. ' ,' → logprob: -2.724165439605713
    4. ')' → logprob: -3.099165439605713
    5. '+' → logprob: -3.599165439605713
    6. ' j' → logprob: -6.224165439605713
    7. '   ' → logprob: -6.349165439605713
    8. ' )' → logprob: -6.599165439605713
    9. '):' → logprob: -6.724165439605713
    10. ' +' → logprob: -7.099165439605713

Token 130: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.030505003407597542
    2. ' j' → logprob: -3.5305049419403076
    3. ')' → logprob: -7.280505180358887
    4. '   ' → logprob: -10.655505180358887
    5. ' ' → logprob: -11.530505180358887
    6. ' )' → logprob: -11.655505180358887
    7. ' ' → logprob: -11.780505180358887
    8. '  ' → logprob: -12.530505180358887
    9. '    ' → logprob: -13.280505180358887
    10. '       ' → logprob: -13.655505180358887

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24600428342819214
    2. '       ' → logprob: -1.621004343032837
    3. '):' → logprob: -4.371004104614258
    4. ' )' → logprob: -5.496004104614258
    5. ',' → logprob: -6.371004104614258
    6. ':' → logprob: -7.621004104614258
    7. '           ' → logprob: -7.871004104614258
    8. ')
' → logprob: -8.621004104614258
    9. '),' → logprob: -8.871004104614258
    10. '        ' → logprob: -9.246004104614258

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01560668833553791
    2. '        
' → logprob: -4.640606880187988
    3. ',' → logprob: -6.265606880187988
    4. '        ' → logprob: -6.515606880187988
    5. ':' → logprob: -6.890606880187988
    6. '<|end|>' → logprob: -7.765606880187988
    7. '           ' → logprob: -8.515606880187988
    8. '      ' → logprob: -8.640606880187988
    9. '
' → logprob: -9.140606880187988
    10. '   ' → logprob: -9.390606880187988

Token 133: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2718735337257385
    2. 'dx' → logprob: -2.5218734741210938
    3. 'xi' → logprob: -2.8968734741210938
    4. ' x' → logprob: -3.0218734741210938
    5. '       ' → logprob: -3.3968734741210938
    6. ' dx' → logprob: -4.521873474121094
    7. '(x' → logprob: -5.771873474121094
    8. ' xi' → logprob: -5.896873474121094
    9. '           ' → logprob: -6.896873474121094
    10. '   ' → logprob: -7.646873474121094

Token 134: ' Je' (ID: 4678)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4727182686328888
    2. 'dx' → logprob: -1.3477182388305664
    3. ' x' → logprob: -3.2227182388305664
    4. ' dx' → logprob: -3.3477182388305664
    5. 'xi' → logprob: -3.5977182388305664
    6. '       ' → logprob: -5.597718238830566
    7. '   ' → logprob: -5.847718238830566
    8. '(x' → logprob: -6.347718238830566
    9. ' xi' → logprob: -6.472718238830566
    10. 'for' → logprob: -7.347718238830566

Token 135: ' rec' (ID: 1369)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.9329193830490112
    2. 'f' → logprob: -2.057919502258301
    3. ' dx' → logprob: -2.182919502258301
    4. '       ' → logprob: -2.307919502258301
    5. 'x' → logprob: -2.807919502258301
    6. 'd' → logprob: -3.182919502258301
    7. 'for' → logprob: -3.932919502258301
    8. '   ' → logprob: -4.057919502258301
    9. '#' → logprob: -4.057919502258301
    10. 'n' → logprob: -4.557919502258301

Token 136: 'opie' (ID: 118895)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.5471225380897522
    2. 'alc' → logprob: -2.0471224784851074
    3. 'up' → logprob: -2.1721224784851074
    4. 'olle' → logprob: -2.5471224784851074
    5. 'op' → logprob: -3.4221224784851074
    6. 'opie' → logprob: -3.7971224784851074
    7. '#' → logprob: -4.922122478485107
    8. 'onte' → logprob: -5.172122478485107
    9. 'ouvre' → logprob: -5.547122478485107
    10. 'ope' → logprob: -5.672122478485107

Token 137: ' le' (ID: 505)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.4418763518333435
    2. ' la' → logprob: -1.5668764114379883
    3. '           ' → logprob: -3.0668764114379883
    4. '       ' → logprob: -3.3168764114379883
    5. ' les' → logprob: -4.691876411437988
    6. ' l' → logprob: -4.691876411437988
    7. 'x' → logprob: -4.941876411437988
    8. ' ' → logprob: -5.441876411437988
    9. ' x' → logprob: -5.441876411437988
    10. '         ' → logprob: -5.816876411437988

Token 138: ' set' (ID: 920)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.39029622077941895
    2. 'xi' → logprob: -2.390296220779419
    3. ' code' → logprob: -2.765296220779419
    4. 'dx' → logprob: -3.265296220779419
    5. ' x' → logprob: -4.01529598236084
    6. '#' → logprob: -4.14029598236084
    7. 'for' → logprob: -4.14029598236084
    8. ' dx' → logprob: -4.14029598236084
    9. ' xi' → logprob: -4.39029598236084
    10. ' for' → logprob: -4.51529598236084

Token 139: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.563190221786499
    2. 't' → logprob: -1.563190221786499
    3. ' t' → logprob: -1.688190221786499
    4. ' s' → logprob: -1.688190221786499
    5. '       ' → logprob: -1.813190221786499
    6. '   ' → logprob: -5.188190460205078
    7. 'ss' → logprob: -5.188190460205078
    8. 'u' → logprob: -5.313190460205078
    9. 'temp' → logprob: -5.813190460205078
    10. 'tmp' → logprob: -5.813190460205078

Token 140: ' chaque' (ID: 21194)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9057724475860596
    2. 's' → logprob: -2.1557724475860596
    3. ' éviter' → logprob: -3.2807724475860596
    4. ' k' → logprob: -3.4057724475860596
    5. ' each' → logprob: -3.4057724475860596
    6. ' chaque' → logprob: -3.4057724475860596
    7. 'each' → logprob: -3.5307724475860596
    8. ' vérifier' → logprob: -3.6557724475860596
    9. ' calcul' → logprob: -4.0307722091674805
    10. 'k' → logprob: -4.0307722091674805

Token 141: ' test' (ID: 1746)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6126474738121033
    2. ' for' → logprob: -1.612647533416748
    3. 's' → logprob: -3.362647533416748
    4. 'point' → logprob: -3.612647533416748
    5. 'translation' → logprob: -3.862647533416748
    6. 'iteration' → logprob: -4.112647533416748
    7. ' s' → logprob: -4.237647533416748
    8. 'fois' → logprob: -4.362647533416748
    9. ' iteration' → logprob: -4.362647533416748
    10. 'diff' → logprob: -4.487647533416748

Token 142: '
' (ID: 198)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1865562200546265
    2. '       ' → logprob: -1.1865562200546265
    3. ' 
' → logprob: -2.561556339263916
    4. 's' → logprob: -2.561556339263916
    5. '        
' → logprob: -2.686556339263916
    6. '           ' → logprob: -3.811556339263916
    7. ' t' → logprob: -3.811556339263916
    8. ' for' → logprob: -4.311556339263916
    9. 'tmp' → logprob: -4.311556339263916
    10. 't' → logprob: -4.686556339263916

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6968079209327698
    2. ' s' → logprob: -1.696807861328125
    3. ' t' → logprob: -2.071807861328125
    4. 's' → logprob: -2.696807861328125
    5. 't' → logprob: -3.571807861328125
    6. ' tmp' → logprob: -4.571807861328125
    7. 'tmp' → logprob: -4.696807861328125
    8. ' new' → logprob: -4.696807861328125
    9. ' for' → logprob: -4.821807861328125
    10. ',' → logprob: -4.946807861328125

Token 144: ' v' (ID: 323)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7209482192993164
    2. 's' → logprob: -2.0959482192993164
    3. 't' → logprob: -2.2209482192993164
    4. 'tmp' → logprob: -2.8459482192993164
    5. 'temp' → logprob: -3.0959482192993164
    6. 'S' → logprob: -3.7209482192993164
    7. ' s' → logprob: -3.8459482192993164
    8. 'diff' → logprob: -4.095948219299316
    9. '   ' → logprob: -4.220948219299316
    10. ' b' → logprob: -4.345948219299316

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14652319252490997
    2. '=' → logprob: -2.8965232372283936
    3. '_' → logprob: -3.3965232372283936
    4. 'al' → logprob: -3.5215232372283936
    5. 'ector' → logprob: -5.6465229988098145
    6. 'a' → logprob: -6.5215229988098145
    7. 'ec' → logprob: -6.6465229988098145
    8. 'v' → logprob: -6.7715229988098145
    9. 'ect' → logprob: -6.7715229988098145
    10. 's' → logprob: -6.8965229988098145

Token 146: ' set' (ID: 920)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08158260583877563
    2. 'set' → logprob: -2.956582546234131
    3. '{s' → logprob: -3.956582546234131
    4. '{' → logprob: -5.706582546234131
    5. ' s' → logprob: -6.206582546234131
    6. 'a' → logprob: -6.831582546234131
    7. ' set' → logprob: -7.331582546234131
    8. 'list' → logprob: -10.206583023071289
    9. '(s' → logprob: -10.331583023071289
    10. ' {(' → logprob: -10.831583023071289

Token 147: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.12376713752746582
    2. '(s' → logprob: -2.498767137527466
    3. '()' → logprob: -3.748767137527466
    4. 'a' → logprob: -4.873766899108887
    5. 's' → logprob: -6.998766899108887
    6. '((' → logprob: -7.123766899108887
    7. '([' → logprob: -7.623766899108887
    8. '([(' → logprob: -7.748766899108887
    9. '(' → logprob: -8.748766899108887
    10. '[a' → logprob: -9.498766899108887

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002669384120963514
    2. ')
' → logprob: -8.375267028808594
    3. ' )' → logprob: -10.625267028808594
    4. '))' → logprob: -12.500267028808594
    5. ')
' → logprob: -13.000267028808594
    6. ')

' → logprob: -13.750267028808594
    7. '[a' → logprob: -14.000267028808594
    8. '[s' → logprob: -14.250267028808594
    9. '[:' → logprob: -14.375267028808594
    10. '[i' → logprob: -14.625267028808594

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20308616757392883
    2. 'dx' → logprob: -2.0780861377716064
    3. ' dx' → logprob: -3.0780861377716064
    4. 'v' → logprob: -5.8280863761901855
    5. 'x' → logprob: -5.8280863761901855
    6. '        
' → logprob: -6.3280863761901855
    7. 'd' → logprob: -7.4530863761901855
    8. '(dx' → logprob: -7.4530863761901855
    9. 'vx' → logprob: -7.7030863761901855
    10. ' x' → logprob: -7.9530863761901855

Token 150: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.6256218552589417
    2. 'x' → logprob: -1.7506217956542969
    3. 'v' → logprob: -1.8756217956542969
    4. '       ' → logprob: -2.375621795654297
    5. 'vx' → logprob: -3.250621795654297
    6. 'u' → logprob: -5.750621795654297
    7. ' dx' → logprob: -7.250621795654297
    8. 'xi' → logprob: -7.750621795654297
    9. 'vi' → logprob: -8.000621795654297
    10. 'd' → logprob: -8.250621795654297

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0909784659743309
    2. '=' → logprob: -2.4659783840179443
    3. ',' → logprob: -6.215978622436523
    4. '=v' → logprob: -11.215978622436523
    5. ' ,' → logprob: -11.715978622436523
    6. ' ' → logprob: -12.090978622436523
    7. ')' → logprob: -12.465978622436523
    8. ',v' → logprob: -13.715978622436523
    9. '=int' → logprob: -14.090978622436523
    10. ' =
' → logprob: -14.215978622436523

Token 152: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0010482928482815623
    2. ' a' → logprob: -6.8760480880737305
    3. 'v' → logprob: -11.12604808807373
    4. 'x' → logprob: -15.25104808807373
    5. '	a' → logprob: -15.37604808807373
    6. ' v' → logprob: -15.50104808807373
    7. '(a' → logprob: -17.001049041748047
    8. '   ' → logprob: -17.251049041748047
    9. 's' → logprob: -17.501049041748047
    10. 'b' → logprob: -18.501049041748047

Token 153: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003035266126971692
    2. '[j' → logprob: -8.125303268432617
    3. '[' → logprob: -12.125303268432617
    4. 'i' → logprob: -13.250303268432617
    5. '[v' → logprob: -16.000303268432617
    6. 'j' → logprob: -17.250303268432617
    7. ' [' → logprob: -17.250303268432617
    8. '[x' → logprob: -18.000303268432617
    9. '[s' → logprob: -18.250303268432617
    10. '[a' → logprob: -18.875303268432617

Token 154: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007740312721580267
    2. '][' → logprob: -4.882740497589111
    3. '[j' → logprob: -9.507740020751953
    4. '0' → logprob: -10.257740020751953
    5. ' [' → logprob: -11.382740020751953
    6. ']' → logprob: -13.132740020751953
    7. ')[' → logprob: -13.257740020751953
    8. 's' → logprob: -13.757740020751953
    9. '[i' → logprob: -13.757740020751953
    10. '"][' → logprob: -13.882740020751953

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.125
    3. ' ' → logprob: -16.375
    4. '
' → logprob: -17.5
    5. '۰' → logprob: -18.25
    6. '```' → logprob: -18.25
    7. '   ' → logprob: -18.3125
    8. ']' → logprob: -18.75
    9. '０' → logprob: -19.0625
    10. '٠' → logprob: -19.375

Token 156: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5158159732818604
    2. '-' → logprob: -1.3908159732818604
    3. ' -' → logprob: -2.0158159732818604
    4. ']-' → logprob: -3.8908159732818604
    5. ')' → logprob: -8.390815734863281
    6. '[' → logprob: -9.390815734863281
    7. '<|end|>' → logprob: -9.640815734863281
    8. ' ]' → logprob: -10.140815734863281
    9. ')-' → logprob: -10.890815734863281
    10. ']+' → logprob: -11.765815734863281

Token 157: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38689762353897095
    2. ' -' → logprob: -1.1368975639343262
    3. '<|end|>' → logprob: -11.011898040771484
    4. ' ' → logprob: -13.511898040771484
    5. '-js' → logprob: -13.886898040771484
    6. '+' → logprob: -14.011898040771484
    7. ' ' → logprob: -14.136898040771484
    8. '-ai' → logprob: -14.386898040771484
    9. '-j' → logprob: -14.761898040771484
    10. ',' → logprob: -14.761898040771484

Token 158: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015024791937321424
    2. ' a' → logprob: -6.501502513885498
    3. '	a' → logprob: -16.251502990722656
    4. '   ' → logprob: -17.251502990722656
    5. '       ' → logprob: -17.501502990722656
    6. ' ' → logprob: -18.001502990722656
    7. '(a' → logprob: -18.751502990722656
    8. ')a' → logprob: -18.751502990722656
    9. '           ' → logprob: -19.251502990722656
    10. '  ' → logprob: -19.376502990722656

Token 159: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0003147280658595264
    2. 'j' → logprob: -8.250314712524414
    3. '[' → logprob: -10.375314712524414
    4. '[i' → logprob: -11.250314712524414
    5. 'a' → logprob: -12.000314712524414
    6. '[
' → logprob: -14.250314712524414
    7. ' [' → logprob: -14.500314712524414
    8. '[a' → logprob: -14.625314712524414
    9. '```' → logprob: -15.375314712524414
    10. ' j' → logprob: -15.750314712524414

Token 160: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.18088644742965698
    2. '[' → logprob: -1.8058865070343018
    3. '0' → logprob: -6.930886268615723
    4. ']' → logprob: -9.930886268615723
    5. '1' → logprob: -10.305886268615723
    6. ' ][' → logprob: -10.680886268615723
    7. '"][' → logprob: -11.430886268615723
    8. ' [' → logprob: -11.805886268615723
    9. ''][' → logprob: -11.930886268615723
    10. ' ' → logprob: -11.930886268615723

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.625003814697266
    3. '[' → logprob: -15.375003814697266
    4. '1' → logprob: -15.625003814697266
    5. '```' → logprob: -16.562503814697266
    6. '۰' → logprob: -17.375003814697266
    7. '   ' → logprob: -17.812503814697266
    8. '
' → logprob: -18.625003814697266
    9. '０' → logprob: -18.812503814697266
    10. ']' → logprob: -19.125003814697266

Token 162: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007282065227627754
    2. ')
' → logprob: -5.132282257080078
    3. '<|end|>' → logprob: -6.632282257080078
    4. '<|end|>' → logprob: -12.132282257080078
    5. ' )' → logprob: -12.257282257080078
    6. ',' → logprob: -12.382282257080078
    7. '
' → logprob: -12.507282257080078
    8. ')

' → logprob: -12.757282257080078
    9. ']' → logprob: -12.882282257080078
    10. '```' → logprob: -13.257282257080078

Token 163: '       ' (ID: 309)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.5345582962036133
    2. ' dy' → logprob: -0.9095582962036133
    3. '<|end|>' → logprob: -4.534558296203613
    4. ' ' → logprob: -8.159558296203613
    5. 'Dy' → logprob: -9.534558296203613
    6. ' 
' → logprob: -9.659558296203613
    7. '.dy' → logprob: -10.284558296203613
    8. ' Dy' → logprob: -10.534558296203613
    9. ',' → logprob: -10.534558296203613
    10. ' ' → logprob: -10.659558296203613

Token 164: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.00014036978245712817
    2. ' dy' → logprob: -8.875140190124512
    3. '.dy' → logprob: -15.750140190124512
    4. 'y' → logprob: -16.125141143798828
    5. 'Dy' → logprob: -16.625141143798828
    6. 'd' → logprob: -17.125141143798828
    7. 'dx' → logprob: -17.750141143798828
    8. '   ' → logprob: -17.875141143798828
    9. '0' → logprob: -18.125141143798828
    10. '-d' → logprob: -18.250141143798828

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.281189501285553
    2. '=' → logprob: -1.4061894416809082
    3. '<|end|>' → logprob: -10.406189918518066
    4. ')' → logprob: -12.031189918518066
    5. ' ' → logprob: -14.656189918518066
    6. 's' → logprob: -15.031189918518066
    7. '<|end|>' → logprob: -15.031189918518066
    8. ' ' → logprob: -15.281189918518066
    9. 'x' → logprob: -15.531189918518066
    10. ']' → logprob: -15.531189918518066

Token 166: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03804183006286621
    2. ' a' → logprob: -3.288041830062866
    3. '(a' → logprob: -16.163042068481445
    4. '	a' → logprob: -16.413042068481445
    5. '       ' → logprob: -16.538042068481445
    6. '   ' → logprob: -17.288042068481445
    7. ' ' → logprob: -17.663042068481445
    8. '        ' → logprob: -18.538042068481445
    9. '#a' → logprob: -18.663042068481445
    10. ' (' → logprob: -18.788042068481445

Token 167: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004235816653817892
    2. '[j' → logprob: -5.754235744476318
    3. '[' → logprob: -6.879235744476318
    4. 'i' → logprob: -11.754236221313477
    5. '[a' → logprob: -12.004236221313477
    6. 'a' → logprob: -12.379236221313477
    7. '][' → logprob: -13.379236221313477
    8. 's' → logprob: -13.504236221313477
    9. '```' → logprob: -13.504236221313477
    10. 'j' → logprob: -13.754236221313477

Token 168: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2525576949119568
    2. '[' → logprob: -1.5025577545166016
    3. '0' → logprob: -8.627557754516602
    4. '1' → logprob: -8.752557754516602
    5. '"][' → logprob: -9.627557754516602
    6. ']' → logprob: -9.752557754516602
    7. ''][' → logprob: -10.252557754516602
    8. ' ][' → logprob: -10.627557754516602
    9. '```' → logprob: -10.877557754516602
    10. 'def' → logprob: -10.877557754516602

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003368896432220936
    2. '0' → logprob: -5.753368854522705
    3. '[' → logprob: -8.628369331359863
    4. 'j' → logprob: -11.753369331359863
    5. ' ' → logprob: -13.003369331359863
    6. '[j' → logprob: -15.003369331359863
    7. '```' → logprob: -15.378369331359863
    8. 'y' → logprob: -15.378369331359863
    9. ']' → logprob: -15.503369331359863
    10. '][' → logprob: -15.503369331359863

Token 170: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00045712877181358635
    2. ' ]' → logprob: -8.250456809997559
    3. ')' → logprob: -9.625456809997559
    4. ']-' → logprob: -10.500456809997559
    5. ']=' → logprob: -10.500456809997559
    6. ']==' → logprob: -10.875456809997559
    7. '-' → logprob: -10.875456809997559
    8. '<|end|>' → logprob: -11.875456809997559
    9. '])' → logprob: -12.125456809997559
    10. '[' → logprob: -12.250456809997559

Token 171: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06546356528997421
    2. '-' → logprob: -2.8154635429382324
    3. '=' → logprob: -6.190463542938232
    4. ' =' → logprob: -7.065463542938232
    5. '<|end|>' → logprob: -7.815463542938232
    6. ' ' → logprob: -10.06546401977539
    7. '[' → logprob: -10.19046401977539
    8. ')' → logprob: -10.44046401977539
    9. ' -=' → logprob: -10.94046401977539
    10. '       ' → logprob: -11.81546401977539

Token 172: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22590869665145874
    2. ' a' → logprob: -1.6009087562561035
    3. '(a' → logprob: -7.7259087562561035
    4. ' (' → logprob: -10.225908279418945
    5. ' ' → logprob: -12.850908279418945
    6. '(' → logprob: -12.850908279418945
    7. '0' → logprob: -13.225908279418945
    8. '    ' → logprob: -13.725908279418945
    9. '	a' → logprob: -13.725908279418945
    10. ')a' → logprob: -13.975908279418945

Token 173: '[j' (ID: 7895)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006116729229688644
    2. '1' → logprob: -5.88111686706543
    3. '[j' → logprob: -6.00611686706543
    4. '][' → logprob: -7.50611686706543
    5. '[i' → logprob: -9.25611686706543
    6. ']' → logprob: -9.88111686706543
    7. 'j' → logprob: -10.00611686706543
    8. ' ' → logprob: -10.88111686706543
    9. '(' → logprob: -11.38111686706543
    10. ' [' → logprob: -11.50611686706543

Token 174: '][' (ID: 2696)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6960263848304749
    2. '][' → logprob: -0.8210263848304749
    3. '[' → logprob: -2.82102632522583
    4. ']' → logprob: -6.32102632522583
    5. '   ' → logprob: -10.696026802062988
    6. '#' → logprob: -11.446026802062988
    7. ''][' → logprob: -11.446026802062988
    8. ')[' → logprob: -11.696026802062988
    9. ' ][' → logprob: -11.821026802062988
    10. ' ' → logprob: -12.071026802062988

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. '0' → logprob: -11.375015258789062
    3. ' ' → logprob: -12.750015258789062
    4. ']' → logprob: -14.750015258789062
    5. '-' → logprob: -16.125015258789062
    6. ')' → logprob: -16.750015258789062
    7. '```' → logprob: -17.000015258789062
    8. '[' → logprob: -17.312515258789062
    9. '   ' → logprob: -17.312515258789062
    10. '])' → logprob: -18.187515258789062

Token 176: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010688931215554476
    2. ')
' → logprob: -7.126069068908691
    3. '<|end|>' → logprob: -9.501069068908691
    4. ']' → logprob: -9.751069068908691
    5. '       ' → logprob: -9.876069068908691
    6. ' )' → logprob: -11.251069068908691
    7. '   ' → logprob: -11.751069068908691
    8. '**' → logprob: -11.751069068908691
    9. '}' → logprob: -11.876069068908691
    10. '
' → logprob: -12.251069068908691

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1168111264705658
    2. '<|end|>' → logprob: -2.9918110370635986
    3. 'for' → logprob: -3.8668110370635986
    4. ' for' → logprob: -4.866811275482178
    5. 'if' → logprob: -4.991811275482178
    6. ',' → logprob: -5.741811275482178
    7. ' if' → logprob: -5.741811275482178
    8. '        
' → logprob: -5.991811275482178
    9. ' ' → logprob: -5.991811275482178
    10. ')' → logprob: -6.116811275482178

Token 178: ' tmp' (ID: 8919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.793528139591217
    2. 'x' → logprob: -1.7935280799865723
    3. 'if' → logprob: -2.1685280799865723
    4. 'found' → logprob: -2.5435280799865723
    5. 'dx' → logprob: -3.6685280799865723
    6. 'ok' → logprob: -3.6685280799865723
    7. 'd' → logprob: -3.6685280799865723
    8. 'v' → logprob: -4.043528079986572
    9. 'nx' → logprob: -4.418528079986572
    10. 'min' → logprob: -4.668528079986572

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02737286686897278
    2. '=' → logprob: -4.52737283706665
    3. 'x' → logprob: -5.40237283706665
    4. '_x' → logprob: -5.90237283706665
    5. 's' → logprob: -6.15237283706665
    6. 'v' → logprob: -6.77737283706665
    7. '_distance' → logprob: -7.15237283706665
    8. 'd' → logprob: -7.52737283706665
    9. '_set' → logprob: -7.65237283706665
    10. 'set' → logprob: -7.65237283706665

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0729024410247803
    2. 'abs' → logprob: -1.6979024410247803
    3. '10' → logprob: -2.5729024410247803
    4. ' ' → logprob: -2.6979024410247803
    5. 'float' → logprob: -2.6979024410247803
    6. 'min' → logprob: -3.0729024410247803
    7. ' dx' → logprob: -3.0729024410247803
    8. ' float' → logprob: -3.5729024410247803
    9. 'dx' → logprob: -3.6979024410247803
    10. ' abs' → logprob: -3.6979024410247803

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9823252558708191
    2. 'abs' → logprob: -1.2323253154754639
    3. 'dx' → logprob: -2.357325315475464
    4. 'answer' → logprob: -2.857325315475464
    5. 'float' → logprob: -3.107325315475464
    6. '10' → logprob: -3.107325315475464
    7. 'min' → logprob: -3.732325315475464
    8. 'v' → logprob: -3.982325315475464
    9. 'max' → logprob: -4.482325077056885
    10. 'None' → logprob: -4.732325077056885

Token 182: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19018101692199707
    2. 'while' (adapté à ' while') → logprob: -2.690181016921997
    3. 'if' → logprob: -3.190181016921997
    4. '       ' → logprob: -3.815181016921997
    5. 'k' → logprob: -3.940181016921997
    6. ' for' → logprob: -4.315180778503418
    7. 'x' → logprob: -5.315180778503418
    8. 'valid' → logprob: -7.190180778503418
    9. 'dx' → logprob: -7.190180778503418
    10. 'found' → logprob: -7.315180778503418

Token 185: ' v' (ID: 323)
  Prédit: '(True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.9676390290260315
    2. '(v' → logprob: -1.4676389694213867
    3. '(dx' → logprob: -1.7176389694213867
    4. '(a' → logprob: -2.4676389694213867
    5. '(tmp' → logprob: -3.3426389694213867
    6. '(' → logprob: -3.4676389694213867
    7. '(len' → logprob: -3.5926389694213867
    8. '(x' → logprob: -4.092638969421387
    9. 'True' → logprob: -6.092638969421387
    10. ' (' → logprob: -6.092638969421387

Token 186: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.039728645235300064
    2. 'and' → logprob: -3.9147286415100098
    3. ' and' → logprob: -5.03972864151001
    4. '.remove' → logprob: -5.16472864151001
    5. '.' → logprob: -5.91472864151001
    6. ':
' → logprob: -6.66472864151001
    7. '<|end|>' → logprob: -7.28972864151001
    8. 'remove' → logprob: -7.53972864151001
    9. '{' → logprob: -8.039729118347168
    10. '):' → logprob: -8.289729118347168

Token 187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7384191155433655
    2. 'x' → logprob: -1.2384190559387207
    3. ' x' → logprob: -1.7384190559387207
    4. 'p' → logprob: -4.613419055938721
    5. ' p' → logprob: -5.238419055938721
    6. '            
' → logprob: -5.488419055938721
    7. 'u' → logprob: -5.613419055938721
    8. 'point' → logprob: -5.613419055938721
    9. 'v' → logprob: -5.738419055938721
    10. '<|end|>' → logprob: -5.738419055938721

Token 188: ' tmp' (ID: 8919)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2321176379919052
    2. 'p' → logprob: -1.6071176528930664
    3. 'px' → logprob: -6.107117652893066
    4. '           ' → logprob: -6.482117652893066
    5. ' p' → logprob: -6.732117652893066
    6. ' x' → logprob: -7.232117652893066
    7. 'point' → logprob: -8.107117652893066
    8. 'pt' → logprob: -8.357117652893066
    9. ' px' → logprob: -8.982117652893066
    10. 'pi' → logprob: -9.732117652893066

Token 189: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5802676677703857
    2. ' +=' → logprob: -0.8302676677703857
    3. '=' → logprob: -5.830267906188965
    4. ',' → logprob: -7.080267906188965
    5. ' =' → logprob: -8.080267906188965
    6. ' ' → logprob: -10.330267906188965
    7. ']+=' → logprob: -10.455267906188965
    8. '<=' → logprob: -10.580267906188965
    9. 'max' → logprob: -10.705267906188965
    10. '+' → logprob: -10.955267906188965

Token 190: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014578416012227535
    2. 'abs' → logprob: -4.389578342437744
    3. 'dx' → logprob: -6.764578342437744
    4. '2' → logprob: -8.264578819274902
    5. 'max' → logprob: -8.639578819274902
    6. ' ' → logprob: -8.889578819274902
    7. '(dx' → logprob: -9.389578819274902
    8. '(' → logprob: -9.514578819274902
    9. '10' → logprob: -10.264578819274902
    10. '(abs' → logprob: -10.514578819274902

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003095243126153946
    2. 'abs' → logprob: -6.5030951499938965
    3. '2' → logprob: -6.6280951499938965
    4. 'dx' → logprob: -9.378095626831055
    5. 'len' → logprob: -9.753095626831055
    6. '4' → logprob: -9.753095626831055
    7. '(' → logprob: -11.128095626831055
    8. ' ' → logprob: -11.128095626831055
    9. '10' → logprob: -12.003095626831055
    10. '3' → logprob: -12.378095626831055

Token 192: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01867319829761982
    2. '
' → logprob: -4.518673419952393
    3. '            
' → logprob: -5.393673419952393
    4. 'x' → logprob: -6.768673419952393
    5. '
' → logprob: -7.893673419952393
    6. ' x' → logprob: -8.143672943115234
    7. '  
' → logprob: -8.393672943115234
    8. '    
' → logprob: -8.768672943115234
    9. ' 
' → logprob: -9.268672943115234
    10. '   ' → logprob: -9.643672943115234

Token 193: '           ' (ID: 352)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13947518169879913
    2. 'x' → logprob: -2.764475107192993
    3. '           ' → logprob: -3.389475107192993
    4. 'px' → logprob: -4.139475345611572
    5. 'pt' → logprob: -5.264475345611572
    6. ' p' → logprob: -5.264475345611572
    7. 'point' → logprob: -6.014475345611572
    8. ' px' → logprob: -6.764475345611572
    9. '```' → logprob: -6.764475345611572
    10. '   ' → logprob: -8.389474868774414

Token 194: ' pt' (ID: 18961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09095462411642075
    2. 'x' → logprob: -2.465954542160034
    3. 'point' → logprob: -7.090954780578613
    4. 'pt' (adapté à ' pt') → logprob: -7.590954780578613
    5. ' p' → logprob: -7.965954780578613
    6. 'px' → logprob: -8.840954780578613
    7. '   ' → logprob: -9.965954780578613
    8. '(x' → logprob: -10.840954780578613
    9. 'pi' → logprob: -11.090954780578613
    10. ' x' → logprob: -11.090954780578613

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38698098063468933
    2. '=' → logprob: -1.1369810104370117
    3. 'x' → logprob: -10.261981010437012
    4. 'v' → logprob: -11.136981010437012
    5. '=v' → logprob: -11.261981010437012
    6. ' ' → logprob: -11.511981010437012
    7. ',' → logprob: -11.886981010437012
    8. '0' → logprob: -12.136981010437012
    9. 'p' → logprob: -12.261981010437012
    10. '1' → logprob: -12.636981010437012

Token 196: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03809278458356857
    2. ' v' → logprob: -3.288092851638794
    3. 'next' → logprob: -10.163092613220215
    4. ' next' → logprob: -11.663092613220215
    5. 'min' → logprob: -12.538092613220215
    6. ' min' → logprob: -15.538092613220215
    7. 'a' → logprob: -16.66309356689453
    8. 'max' → logprob: -16.66309356689453
    9. '(v' → logprob: -16.78809356689453
    10. '{' → logprob: -17.03809356689453

Token 197: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.2200749754119897e-06
    2. ' .' → logprob: -13.375001907348633
    3. '.' → logprob: -15.125001907348633
    4. 'pop' → logprob: -15.250001907348633
    5. ').' → logprob: -16.625001907348633
    6. '.copy' → logprob: -17.250001907348633
    7. '}.' → logprob: -17.500001907348633
    8. '().' → logprob: -17.625001907348633
    9. '].' → logprob: -18.750001907348633
    10. '.Pop' → logprob: -18.875001907348633

Token 198: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.6286106983898208e-05
    2. '()
' → logprob: -11.625016212463379
    3. '())' → logprob: -12.625016212463379
    4. '()]' → logprob: -14.125016212463379
    5. '()

' → logprob: -14.375016212463379
    6. '()}' → logprob: -15.000016212463379
    7. '()<' → logprob: -15.000016212463379
    8. '(' → logprob: -15.000016212463379
    9. '()\' → logprob: -15.125016212463379
    10. '();' → logprob: -15.500016212463379

Token 199: '           ' (ID: 352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.34752270579338074
    2. '           ' → logprob: -1.8475227355957031
    3. 'qx' → logprob: -2.847522735595703
    4. 'tx' → logprob: -3.847522735595703
    5. 'px' → logprob: -4.222522735595703
    6. 'p' → logprob: -5.097522735595703
    7. 'nx' → logprob: -5.222522735595703
    8. '       ' → logprob: -5.472522735595703
    9. 'new' → logprob: -5.722522735595703
    10. 'rot' → logprob: -5.722522735595703

Token 200: ' origin' (ID: 12839)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5443779230117798
    2. 'pt' → logprob: -1.6693779230117798
    3. 'rot' → logprob: -2.0443778038024902
    4. 'q' → logprob: -2.2943778038024902
    5. '           ' → logprob: -2.6693778038024902
    6. 'x' → logprob: -2.7943778038024902
    7. 'new' → logprob: -2.7943778038024902
    8. 'v' → logprob: -2.9193778038024902
    9. 'next' → logprob: -3.1693778038024902
    10. 'px' → logprob: -4.41937780380249

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5166759490966797
    2. '=' → logprob: -1.5166759490966797
    3. 'x' → logprob: -1.7666759490966797
    4. '_x' → logprob: -4.39167594909668
    5. 's' → logprob: -8.14167594909668
    6. ',' → logprob: -8.51667594909668
    7. '_' → logprob: -10.01667594909668
    8. 'al' → logprob: -10.26667594909668
    9. 'X' → logprob: -10.39167594909668
    10. ' x' → logprob: -10.64167594909668

Token 202: ' pt' (ID: 18961)
  Prédit: '(pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: -0.6887308359146118
    2. '(' → logprob: -1.0637308359146118
    3. ' (' → logprob: -1.9387308359146118
    4. 'pt' → logprob: -5.188730716705322
    5. ' pt' → logprob: -5.938730716705322
    6. '(a' → logprob: -9.06373119354248
    7. '(True' → logprob: -9.31373119354248
    8. '(p' → logprob: -9.56373119354248
    9. '(x' → logprob: -10.43873119354248
    10. '(point' → logprob: -10.68873119354248

Token 203: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015033435076475143
    2. '<|end|>' → logprob: -4.39003324508667
    3. '<|end|>' → logprob: -7.51503324508667
    4. '(' → logprob: -7.64003324508667
    5. '
' → logprob: -7.76503324508667
    6. ',' → logprob: -7.89003324508667
    7. 'x' → logprob: -8.765033721923828
    8. ' =' → logprob: -9.015033721923828
    9. ' (' → logprob: -9.015033721923828
    10. '=(' → logprob: -9.390033721923828

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05541408807039261
    2. '
' → logprob: -3.1804141998291016
    3. 'x' → logprob: -5.430414199829102
    4. ')' → logprob: -6.680414199829102
    5. ',' → logprob: -6.805414199829102
    6. 'while' → logprob: -7.055414199829102
    7. 'dx' → logprob: -7.555414199829102
    8. ')
' → logprob: -7.680414199829102
    9. '<|end|>' → logprob: -7.805414199829102
    10. '[' → logprob: -8.055414199829102

Token 205: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3101450800895691
    2. 'while' → logprob: -1.6851451396942139
    3. 'x' → logprob: -2.810145139694214
    4. ' while' → logprob: -4.060144901275635
    5. 'dx' → logprob: -6.560144901275635
    6. 'for' → logprob: -7.435144901275635
    7. ' x' → logprob: -7.685144901275635
    8. '
' → logprob: -7.935144901275635
    9. '            
' → logprob: -8.435145378112793
    10. 'tx' → logprob: -8.685145378112793

Token 206: ' On' (ID: 2160)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.19771604239940643
    2. 'for' → logprob: -2.322715997695923
    3. 'x' → logprob: -3.697715997695923
    4. ' while' → logprob: -4.572716236114502
    5. 'vx' → logprob: -4.822716236114502
    6. 'found' → logprob: -5.447716236114502
    7. 'rot' → logprob: -5.572716236114502
    8. 'q' → logprob: -5.697716236114502
    9. 'v' → logprob: -5.822716236114502
    10. 'px' → logprob: -5.947716236114502

Token 207: ' va' (ID: 3423)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7542490363121033
    2. ' for' → logprob: -1.379249095916748
    3. 'while' → logprob: -1.754249095916748
    4. 'for' → logprob: -2.379249095916748
    5. 'x' → logprob: -6.004249095916748
    6. ' dx' → logprob: -6.379249095916748
    7. ' x' → logprob: -7.004249095916748
    8. ' continue' → logprob: -7.004249095916748
    9. ' va' → logprob: -7.254249095916748
    10. ' =' → logprob: -7.379249095916748

Token 208: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.875104546546936
    2. ' for' → logprob: -1.125104546546936
    3. 'while' → logprob: -2.2501044273376465
    4. ' continuer' → logprob: -3.0001044273376465
    5. ' while' → logprob: -4.0001044273376465
    6. 'faire' → logprob: -4.5001044273376465
    7. '           ' → logprob: -5.0001044273376465
    8. '   ' → logprob: -5.1251044273376465
    9. ' faire' → logprob: -5.2501044273376465
    10. ' tourner' → logprob: -5.3751044273376465

Token 209: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8561980724334717
    2. '(' → logprob: -2.4811980724334717
    3. 'dx' → logprob: -2.7311980724334717
    4. 'la' → logprob: -2.7311980724334717
    5. ' une' → logprob: -2.7311980724334717
    6. ' dx' → logprob: -3.1061980724334717
    7. '[' → logprob: -3.2311980724334717
    8. 'une' → logprob: -3.3561980724334717
    9. 'a' → logprob: -3.7311980724334717
    10. 'le' → logprob: -3.8561980724334717

Token 210: ' sens' (ID: 5050)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4105740487575531
    2. 'dx' → logprob: -1.6605740785598755
    3. '(dx' → logprob: -2.785573959350586
    4. 'for' → logprob: -3.535573959350586
    5. '(-' → logprob: -4.035573959350586
    6. 'direction' → logprob: -4.410573959350586
    7. 'dy' → logprob: -5.285573959350586
    8. 'dire' → logprob: -5.535573959350586
    9. 'while' → logprob: -5.785573959350586
    10. ' dx' → logprob: -5.910573959350586

Token 211: ' +' (ID: 659)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.010416865348816
    2. '(dx' → logprob: -1.010416865348816
    3. 'dx' → logprob: -1.885416865348816
    4. ' (' → logprob: -2.8854169845581055
    5. ' dx' → logprob: -3.0104169845581055
    6. 'x' → logprob: -5.2604169845581055
    7. '           ' → logprob: -6.3854169845581055
    8. '(-' → logprob: -6.5104169845581055
    9. '(x' → logprob: -6.7604169845581055
    10. '=' → logprob: -7.1354169845581055

Token 212: ' (' (ID: 350)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.10737908631563187
    2. 'x' → logprob: -2.482379198074341
    3. ' dx' → logprob: -4.482378959655762
    4. '(' → logprob: -6.232378959655762
    5. '(dx' → logprob: -6.357378959655762
    6. 'y' → logprob: -6.857378959655762
    7. ' x' → logprob: -7.607378959655762
    8. ' (' → logprob: -7.732378959655762
    9. 'dy' → logprob: -8.357378959655762
    10. '1' → logprob: -8.607378959655762

Token 213: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.031336039304733276
    2. 'dy' → logprob: -3.6563360691070557
    3. 'x' → logprob: -5.781335830688477
    4. '1' → logprob: -7.281335830688477
    5. ' dx' → logprob: -7.406335830688477
    6. 'y' → logprob: -8.156335830688477
    7. ')' → logprob: -8.781335830688477
    8. ' dy' → logprob: -9.531335830688477
    9. '(dx' → logprob: -10.031335830688477
    10. '0' → logprob: -10.656335830688477

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004879915213678032
    2. ' ,' → logprob: -7.875487804412842
    3. '),' → logprob: -10.00048828125
    4. ')' → logprob: -11.12548828125
    5. ',y' → logprob: -11.25048828125
    6. ',d' → logprob: -11.50048828125
    7. ',
' → logprob: -11.87548828125
    8. 'dy' → logprob: -12.37548828125
    9. ',+' → logprob: -12.87548828125
    10. '+' → logprob: -13.12548828125

Token 215: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.12521840631961823
    2. ' dy' → logprob: -2.250218391418457
    3. '+' → logprob: -5.125218391418457
    4. '-d' → logprob: -5.125218391418457
    5. ' +' → logprob: -8.375218391418457
    6. ' -' → logprob: -9.250218391418457
    7. '-' → logprob: -10.375218391418457
    8. ')' → logprob: -10.375218391418457
    9. ',' → logprob: -11.625218391418457
    10. '.dy' → logprob: -11.625218391418457

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005158097017556429
    2. ')
' → logprob: -5.380157947540283
    3. '           ' → logprob: -8.005158424377441
    4. ' )' → logprob: -9.005158424377441
    5. '),' → logprob: -10.130158424377441
    6. ')

' → logprob: -11.505158424377441
    7. '       ' → logprob: -11.880158424377441
    8. ')
' → logprob: -12.630158424377441
    9. ',' → logprob: -13.005158424377441
    10. ' )
' → logprob: -13.380158424377441

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008976469398476183
    2. '<|end|>' → logprob: -8.125897407531738
    3. '            
' → logprob: -8.750897407531738
    4. ' while' → logprob: -8.875897407531738
    5. '
' → logprob: -9.250897407531738
    6. ',' → logprob: -9.625897407531738
    7. '       ' → logprob: -10.750897407531738
    8. '          ' → logprob: -11.000897407531738
    9. '		' → logprob: -11.250897407531738
    10. '               ' → logprob: -11.250897407531738

Token 218: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7651913166046143
    2. 'while' (adapté à ' while') → logprob: -0.7651913166046143
    3. ' while' → logprob: -2.8901913166046143
    4. 'x' → logprob: -5.140191078186035
    5. 'current' → logprob: -6.015191078186035
    6. 'next' → logprob: -6.140191078186035
    7. '```' → logprob: -6.265191078186035
    8. '            
' → logprob: -8.390191078186035
    9. ' x' → logprob: -8.390191078186035
    10. 'pt' → logprob: -8.890191078186035

Token 219: ' (' (ID: 350)
  Prédit: '(True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.6735939383506775
    2. '(pt' → logprob: -1.1735939979553223
    3. '(' → logprob: -2.2985939979553223
    4. '(origin' → logprob: -2.9235939979553223
    5. ' (' → logprob: -4.048593997955322
    6. 'True' → logprob: -5.548593997955322
    7. ' True' → logprob: -5.798593997955322
    8. '(x' → logprob: -7.298593997955322
    9. '(dx' → logprob: -7.798593997955322
    10. 'pt' → logprob: -8.173593521118164

Token 220: 'pt' (ID: 555)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.9073454737663269
    2. '(origin' → logprob: -1.4073455333709717
    3. 'pt' → logprob: -1.5323455333709717
    4. '(pt' → logprob: -2.0323455333709717
    5. ' (' → logprob: -6.032345294952393
    6. ' origin' → logprob: -6.782345294952393
    7. ' pt' → logprob: -7.782345294952393
    8. '(' → logprob: -8.40734577178955
    9. 'orig' → logprob: -9.03234577178955
    10. '(True' → logprob: -9.65734577178955

Token 221: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012663742527365685
    2. ':=' → logprob: -5.387663841247559
    3. ' :=' → logprob: -6.387663841247559
    4. ' =' → logprob: -6.762663841247559
    5. ')' → logprob: -6.887663841247559
    6. '=' → logprob: -7.012663841247559
    7. '(' → logprob: -7.512663841247559
    8. '=(' → logprob: -7.637663841247559
    9. '
' → logprob: -7.762663841247559
    10. '!=' → logprob: -7.887663841247559

Token 222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.50000286102295
    3. ' ' → logprob: -14.25000286102295
    4. '(' → logprob: -15.50000286102295
    5. '   ' → logprob: -16.375001907348633
    6. '
' → logprob: -16.625001907348633
    7. '```' → logprob: -17.312501907348633
    8. '1' → logprob: -18.125001907348633
    9. '#' → logprob: -18.125001907348633
    10. ' (' → logprob: -18.437501907348633

Token 223: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02960074506700039
    2. ' +' → logprob: -3.6546008586883545
    3. ',' → logprob: -5.779600620269775
    4. '+=' → logprob: -9.154601097106934
    5. ' ,' → logprob: -10.404601097106934
    6. ' +=' → logprob: -10.904601097106934
    7. '+,' → logprob: -10.904601097106934
    8. ':=' → logprob: -11.029601097106934
    9. '+d' → logprob: -12.279601097106934
    10. ' :=' → logprob: -12.404601097106934

Token 224: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1870621144771576
    2. ',' → logprob: -1.81206214427948
    3. ' +' → logprob: -5.9370622634887695
    4. '+=' → logprob: -6.4370622634887695
    5. '+,' → logprob: -6.5620622634887695
    6. ' ,' → logprob: -6.6870622634887695
    7. ':=' → logprob: -8.56206226348877
    8. ' +=' → logprob: -9.93706226348877
    9. '=' → logprob: -10.31206226348877
    10. '[' → logprob: -10.43706226348877

Token 225: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.029753033071756363
    2. ' dx' → logprob: -3.5297529697418213
    3. '(dx' → logprob: -14.154752731323242
    4. ' ' → logprob: -14.279752731323242
    5. '_dx' → logprob: -14.404752731323242
    6. '1' → logprob: -15.279752731323242
    7. '.dx' → logprob: -15.654752731323242
    8. '   ' → logprob: -16.029752731323242
    9. 'Dx' → logprob: -16.904752731323242
    10. 'd' → logprob: -17.154752731323242

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5120287066092715e-05
    2. ' ,' → logprob: -10.375035285949707
    3. ',
' → logprob: -12.500035285949707
    4. ',\
' → logprob: -16.75003433227539
    5. ',

' → logprob: -17.62503433227539
    6. ',p' → logprob: -18.12503433227539
    7. '‌,' → logprob: -18.25003433227539
    8. ',tp' → logprob: -18.37503433227539
    9. ',(' → logprob: -18.75003433227539
    10. '_,' → logprob: -18.87503433227539

Token 227: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.3868836760520935
    2. ' pt' → logprob: -1.1368837356567383
    3. '(pt' → logprob: -11.636883735656738
    4. '	pt' → logprob: -12.886883735656738
    5. '    ' → logprob: -14.511883735656738
    6. '_pt' → logprob: -15.636883735656738
    7. ' ' → logprob: -15.886883735656738
    8. 'Pt' → logprob: -16.511882781982422
    9. 'pti' → logprob: -16.511882781982422
    10. 'pts' → logprob: -16.511882781982422

Token 228: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005095454398542643
    2. '1' → logprob: -7.625509738922119
    3. '0' → logprob: -10.875509262084961
    4. '#' → logprob: -14.250509262084961
    5. '][' → logprob: -14.500509262084961
    6. ']' → logprob: -15.125509262084961
    7. '(' → logprob: -15.750509262084961
    8. ')' → logprob: -16.00050926208496
    9. ' ' → logprob: -16.00050926208496
    10. '```' → logprob: -16.00050926208496

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. '0' → logprob: -12.375007629394531
    3. '[' → logprob: -12.750007629394531
    4. ' ' → logprob: -15.250007629394531
    5. '#' → logprob: -18.25000762939453
    6. '   ' → logprob: -18.62500762939453
    7. 'dy' → logprob: -18.75000762939453
    8. ')' → logprob: -19.12500762939453
    9. '```' → logprob: -19.12500762939453
    10. ']' → logprob: -19.25000762939453

Token 230: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6313239336013794
    2. '+' → logprob: -1.2563239336013794
    3. ')' → logprob: -1.8813239336013794
    4. ' +' → logprob: -3.75632381439209
    5. '[' → logprob: -5.13132381439209
    6. ']+' → logprob: -7.00632381439209
    7. '])' → logprob: -7.50632381439209
    8. ')]' → logprob: -9.00632381439209
    9. ')+' → logprob: -9.88132381439209
    10. ' ' → logprob: -10.00632381439209

Token 231: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31333351135253906
    2. ' +' → logprob: -1.313333511352539
    3. ')' → logprob: -9.813333511352539
    4. '[' → logprob: -11.188333511352539
    5. '+y' → logprob: -13.688333511352539
    6. ')+' → logprob: -14.188333511352539
    7. ']' → logprob: -15.563333511352539
    8. ' ' → logprob: -15.688333511352539
    9. '```' → logprob: -15.688333511352539
    10. '+)' → logprob: -15.813333511352539

Token 232: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0013260759878903627
    2. ' dy' → logprob: -6.626326084136963
    3. ')' → logprob: -17.626325607299805
    4. 'dx' → logprob: -18.251325607299805
    5. 'Dy' → logprob: -18.251325607299805
    6. '.dy' → logprob: -18.376325607299805
    7. '0' → logprob: -18.751325607299805
    8. 'd' → logprob: -19.001325607299805
    9. ' ' → logprob: -19.251325607299805
    10. '+' → logprob: -19.376325607299805

Token 233: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020115631923545152
    2. ' )' → logprob: -8.625201225280762
    3. 'in' → logprob: -10.875201225280762
    4. ' in' → logprob: -14.750201225280762
    5. '
' → logprob: -15.000201225280762
    6. ')
' → logprob: -15.000201225280762
    7. '`)' → logprob: -15.000201225280762
    8. '   ' → logprob: -15.500201225280762
    9. '[' → logprob: -15.500201225280762
    10. '    ' → logprob: -16.250200271606445

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759730339050293
    2. 'in' → logprob: -0.8259730339050293
    3. ' ' → logprob: -11.200973510742188
    4. ')' → logprob: -11.700973510742188
    5. '   ' → logprob: -12.700973510742188
    6. '    ' → logprob: -13.325973510742188
    7. '	in' → logprob: -13.325973510742188
    8. '[' → logprob: -13.950973510742188
    9. '
' → logprob: -14.075973510742188
    10. '  ' → logprob: -14.075973510742188

Token 235: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0206720617134124e-05
    2. ' v' → logprob: -11.50001049041748
    3. '	v' → logprob: -20.250009536743164
    4. ')v' → logprob: -21.250009536743164
    5. '(v' → logprob: -22.500009536743164
    6. '[v' → logprob: -24.000009536743164
    7. '$v' → logprob: -24.250009536743164
    8. '   ' → logprob: -24.250009536743164
    9. '<v' → logprob: -24.375009536743164
    10. 'vx' → logprob: -24.625009536743164

Token 236: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20317907631397247
    2. ':' → logprob: -1.703179121017456
    3. '):
' → logprob: -6.828178882598877
    4. ' and' → logprob: -8.203179359436035
    5. '           ' → logprob: -8.328179359436035
    6. '):' → logprob: -9.828179359436035
    7. ':

' → logprob: -10.828179359436035
    8. '       ' → logprob: -10.953179359436035
    9. '               ' → logprob: -11.203179359436035
    10. 'v' → logprob: -11.578179359436035

Token 237: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004011203534901142
    2. '           ' → logprob: -6.004011154174805
    3. ' v' → logprob: -7.004011154174805
    4. 'v' → logprob: -7.879011154174805
    5. '                
' → logprob: -10.129011154174805
    6. ' pt' → logprob: -10.379011154174805
    7. 'pt' → logprob: -11.004011154174805
    8. '              ' → logprob: -11.129011154174805
    9. '                   ' → logprob: -11.129011154174805
    10. '<|end|>' → logprob: -11.254011154174805

Token 238: ' pt' (ID: 18961)
  Prédit: ' pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pt' → logprob: -0.018578309565782547
    2. 'pt' (adapté à ' pt') → logprob: -4.14357852935791
    3. ' v' → logprob: -6.51857852935791
    4. '           ' → logprob: -7.51857852935791
    5. 'v' → logprob: -8.76857852935791
    6. '               ' → logprob: -8.76857852935791
    7. '	pt' → logprob: -9.14357852935791
    8. '                   ' → logprob: -9.51857852935791
    9. '   ' → logprob: -12.14357852935791
    10. ' ' → logprob: -12.39357852935791

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008051026379689574
    2. ' =' → logprob: -7.125804901123047
    3. '=(' → logprob: -15.125804901123047
    4. '=
' → logprob: -15.500804901123047
    5. 'x' → logprob: -16.500804901123047
    6. '=

' → logprob: -16.875804901123047
    7. '+=' → logprob: -17.375804901123047
    8. '=}' → logprob: -17.875804901123047
    9. '＝' → logprob: -18.625804901123047
    10. '=((' → logprob: -19.000804901123047

Token 240: ' (' (ID: 350)
  Prédit: '(pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: -0.005295545794069767
    2. ' (' → logprob: -5.255295753479004
    3. '(px' → logprob: -9.880295753479004
    4. '(py' → logprob: -13.005295753479004
    5. '(' → logprob: -13.130295753479004
    6. 'pt' → logprob: -14.005295753479004
    7. ' ' → logprob: -14.130295753479004
    8. '(pm' → logprob: -14.130295753479004
    9. '(pd' → logprob: -14.255295753479004
    10. '   ' → logprob: -14.630295753479004

Token 241: 'pt' (ID: 555)
  Prédit: 'pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -3.214019307051785e-05
    2. ' pt' → logprob: -10.375032424926758
    3. '(pt' → logprob: -14.875032424926758
    4. '	pt' → logprob: -15.000032424926758
    5. '   ' → logprob: -15.625032424926758
    6. '           ' → logprob: -18.750032424926758
    7. '_pt' → logprob: -18.875032424926758
    8. '  ' → logprob: -19.000032424926758
    9. 'pat' → logprob: -19.250032424926758
    10. 'p' → logprob: -19.500032424926758

Token 242: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024787469301372766
    2. '0' → logprob: -6.00247859954834
    3. 'pt' → logprob: -12.75247859954834
    4. '   ' → logprob: -15.25247859954834
    5. ' ' → logprob: -17.252479553222656
    6. '(' → logprob: -18.127479553222656
    7. '```' → logprob: -18.502479553222656
    8. 'x' → logprob: -18.627479553222656
    9. ' [' → logprob: -19.127479553222656
    10. '1' → logprob: -19.127479553222656

Token 243: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.375000953674316
    3. 'pt' → logprob: -17.5
    4. ' ' → logprob: -18.0
    5. '   ' → logprob: -18.5
    6. '1' → logprob: -19.125
    7. '۰' → logprob: -19.25
    8. '```' → logprob: -19.75
    9. '
' → logprob: -19.875
    10. '(' → logprob: -20.25

Token 244: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2559898793697357
    2. '+' → logprob: -1.630989909172058
    3. '[' → logprob: -3.5059897899627686
    4. ' ' → logprob: -9.755990028381348
    5. '   ' → logprob: -11.380990028381348
    6. ',' → logprob: -12.005990028381348
    7. ' plus' → logprob: -12.130990028381348
    8. '           ' → logprob: -13.130990028381348
    9. ' ' → logprob: -13.130990028381348
    10. '       ' → logprob: -13.505990028381348

Token 245: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519378960132599
    2. ' +' → logprob: -1.5019378662109375
    3. '[' → logprob: -11.876937866210938
    4. ',' → logprob: -14.501937866210938
    5. ' ' → logprob: -14.626937866210938
    6. '```' → logprob: -15.501937866210938
    7. '   ' → logprob: -15.626937866210938
    8. ' ' → logprob: -16.376937866210938
    9. '+
' → logprob: -16.876937866210938
    10. '       ' → logprob: -16.876937866210938

Token 246: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.002476135268807411
    2. ' dx' → logprob: -6.002476215362549
    3. '_dx' → logprob: -15.00247573852539
    4. '(dx' → logprob: -16.25247573852539
    5. 'DX' → logprob: -17.12747573852539
    6. '.dx' → logprob: -17.62747573852539
    7. ' ' → logprob: -17.87747573852539
    8. 'Dx' → logprob: -18.12747573852539
    9. '   ' → logprob: -18.25247573852539
    10. 'd' → logprob: -20.12747573852539

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.282920129597187e-05
    2. ' ,' → logprob: -11.625012397766113
    3. ',
' → logprob: -12.500012397766113
    4. '       ' → logprob: -18.37501335144043
    5. '),' → logprob: -18.37501335144043
    6. ',\
' → logprob: -18.50001335144043
    7. '```' → logprob: -18.62501335144043
    8. ',
' → logprob: -18.62501335144043
    9. '           ' → logprob: -18.87501335144043
    10. '‌,' → logprob: -19.25001335144043

Token 248: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.10020720958709717
    2. ' pt' → logprob: -2.3502073287963867
    3. '(pt' → logprob: -15.100207328796387
    4. '	pt' → logprob: -15.225207328796387
    5. 'pty' → logprob: -17.72520637512207
    6. '_pt' → logprob: -17.97520637512207
    7. 'pts' → logprob: -18.10020637512207
    8. 'pti' → logprob: -18.22520637512207
    9. 'Pt' → logprob: -18.35020637512207
    10. '    ' → logprob: -18.35020637512207

Token 249: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004312734119594097
    2. '1' → logprob: -5.504312515258789
    3. ',' → logprob: -8.379312515258789
    4. '   ' → logprob: -13.879312515258789
    5. '```' → logprob: -14.129312515258789
    6. ' ,' → logprob: -14.254312515258789
    7. '0' → logprob: -14.254312515258789
    8. '][' → logprob: -14.629312515258789
    9. ' ' → logprob: -14.879312515258789
    10. ' [' → logprob: -16.00431251525879

Token 250: '1' (ID: 16)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.5764091610908508
    2. '1' → logprob: -0.8264091610908508
    3. ' dy' → logprob: -7.951409339904785
    4. ' ' → logprob: -9.201409339904785
    5. '   ' → logprob: -12.076409339904785
    6. '.dy' → logprob: -12.451409339904785
    7. '[' → logprob: -12.826409339904785
    8. '
' → logprob: -14.076409339904785
    9. ')' → logprob: -14.451409339904785
    10. 'ay' → logprob: -14.701409339904785

Token 251: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006344430614262819
    2. '1' → logprob: -5.256344318389893
    3. ',' → logprob: -6.881344318389893
    4. '   ' → logprob: -9.75634479522705
    5. '```' → logprob: -12.25634479522705
    6. '][' → logprob: -12.63134479522705
    7. ' ' → logprob: -12.75634479522705
    8. '),' → logprob: -13.13134479522705
    9. '       ' → logprob: -13.13134479522705
    10. '0' → logprob: -13.25634479522705

Token 252: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.598934531211853
    2. '[' → logprob: -0.848934531211853
    3. '1' → logprob: -3.8489346504211426
    4. ' ,' → logprob: -6.848934650421143
    5. ',
' → logprob: -8.848934173583984
    6. 'dy' → logprob: -9.473934173583984
    7. ' dy' → logprob: -10.598934173583984
    8. '0' → logprob: -10.723934173583984
    9. '),' → logprob: -10.848934173583984
    10. '   ' → logprob: -10.848934173583984

Token 253: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -7.505351095460355e-05
    2. ' dy' → logprob: -9.500075340270996
    3. 'dx' → logprob: -16.12507438659668
    4. '   ' → logprob: -17.50007438659668
    5. 'pt' → logprob: -18.00007438659668
    6. 'dym' → logprob: -18.25007438659668
    7. 'd' → logprob: -18.37507438659668
    8. 'dp' → logprob: -18.62507438659668
    9. '
' → logprob: -18.75007438659668
    10. '1' → logprob: -19.12507438659668

Token 254: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008872420527040958
    2. ')' → logprob: -4.7588725090026855
    3. '               ' → logprob: -8.633872032165527
    4. ')
' → logprob: -9.633872032165527
    5. '           ' → logprob: -11.508872032165527
    6. ')

' → logprob: -13.383872032165527
    7. '                   ' → logprob: -13.883872032165527
    8. '       ' → logprob: -14.133872032165527
    9. ' )
' → logprob: -14.633872032165527
    10. '):
' → logprob: -16.508872985839844

Token 255: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005305142258293927
    2. '           ' → logprob: -7.75053071975708
    3. '                   ' → logprob: -10.875530242919922
    4. '	           ' → logprob: -11.000530242919922
    5. '	       ' → logprob: -11.125530242919922
    6. '		       ' → logprob: -11.750530242919922
    7. 'v' → logprob: -11.875530242919922
    8. ' v' → logprob: -12.500530242919922
    9. '              ' → logprob: -12.625530242919922
    10. '       ' → logprob: -12.625530242919922

Token 256: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.00044008632539771497
    2. ' v' → logprob: -7.7504401206970215
    3. '               ' → logprob: -11.750439643859863
    4. '           ' → logprob: -13.750439643859863
    5. '                   ' → logprob: -16.00044059753418
    6. '       ' → logprob: -16.00044059753418
    7. '   ' → logprob: -16.25044059753418
    8. '              ' → logprob: -17.37544059753418
    9. '	v' → logprob: -17.87544059753418
    10. ')v' → logprob: -18.25044059753418

Token 257: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -1.3856492842023727e-06
    2. 'remove' → logprob: -14.375000953674316
    3. '.' → logprob: -14.500000953674316
    4. '.dis' → logprob: -15.250000953674316
    5. '.Remove' → logprob: -19.375001907348633
    6. '	remove' → logprob: -19.875001907348633
    7. '.pop' → logprob: -21.625001907348633
    8. ' remove' → logprob: -21.875001907348633
    9. ' .' → logprob: -22.000001907348633
    10. 'Remove' → logprob: -22.750001907348633

Token 258: '(pt' (ID: 73498)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.10037391632795334
    2. '(pt' → logprob: -2.3503739833831787
    3. '(' → logprob: -8.725374221801758
    4. ' ((' → logprob: -13.100374221801758
    5. ' (' → logprob: -14.350374221801758
    6. '(p' → logprob: -14.725374221801758
    7. '(((' → logprob: -15.100374221801758
    8. '(point' → logprob: -15.100374221801758
    9. '(py' → logprob: -15.225374221801758
    10. 'pt' → logprob: -16.225374221801758

Token 259: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003818140830844641
    2. ')
' → logprob: -7.875381946563721
    3. ')

' → logprob: -14.375381469726562
    4. ' )' → logprob: -14.875381469726562
    5. ')
' → logprob: -15.500381469726562
    6. '<|end|>' → logprob: -15.875381469726562
    7. '       ' → logprob: -16.375381469726562
    8. '           ' → logprob: -16.375381469726562
    9. '),' → logprob: -17.000381469726562
    10. ')#' → logprob: -17.125381469726562

Token 260: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018089536752086133
    2. '#' → logprob: -9.500181198120117
    3. '
' → logprob: -10.125181198120117
    4. '            
' → logprob: -10.500181198120117
    5. '       ' → logprob: -11.125181198120117
    6. ' #' → logprob: -12.000181198120117
    7. '               ' → logprob: -12.250181198120117
    8. '```' → logprob: -12.875181198120117
    9. 'return' → logprob: -13.375181198120117
    10. '<|end|>' → logprob: -13.500181198120117

Token 261: ' pt' (ID: 18961)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002066756598651409
    2. '#' → logprob: -6.252066612243652
    3. ' #' → logprob: -9.627066612243652
    4. '       ' → logprob: -9.877066612243652
    5. 'while' → logprob: -11.877066612243652
    6. '
' → logprob: -12.127066612243652
    7. '               ' → logprob: -13.127066612243652
    8. '          ' → logprob: -13.377066612243652
    9. '            
' → logprob: -13.377066612243652
    10. '```' → logprob: -13.377066612243652

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231742858886719
    2. '=' → logprob: -0.8981742858886719
    3. '=(' → logprob: -10.273174285888672
    4. '+=' → logprob: -12.523174285888672
    5. '+' → logprob: -12.648174285888672
    6. ' +=' → logprob: -13.273174285888672
    7. 's' → logprob: -13.398174285888672
    8. ',' → logprob: -13.523174285888672
    9. ' =(' → logprob: -13.523174285888672
    10. '[' → logprob: -14.523174285888672

Token 263: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.7099960446357727
    2. '(origin' → logprob: -1.209995985031128
    3. ' origin' → logprob: -1.584995985031128
    4. ' (' → logprob: -5.584996223449707
    5. '(' → logprob: -6.584996223449707
    6. 'pt' → logprob: -10.834996223449707
    7. ' pt' → logprob: -11.334996223449707
    8. '(pt' → logprob: -11.459996223449707
    9. 'orig' → logprob: -11.584996223449707
    10. 'original' → logprob: -13.147496223449707

Token 264: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02968580648303032
    2. 'while' → logprob: -3.6546857357025146
    3. '(' → logprob: -6.904685974121094
    4. ' while' → logprob: -6.904685974121094
    5. '
' → logprob: -7.779685974121094
    6. '            
' → logprob: -8.654685974121094
    7. '       ' → logprob: -9.154685974121094
    8. '(pt' → logprob: -9.279685974121094
    9. '            ' → logprob: -9.404685974121094
    10. '[' → logprob: -9.404685974121094

Token 265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20192158222198486
    2. 'while' → logprob: -1.9519215822219849
    3. ' while' → logprob: -3.2019214630126953
    4. '       ' → logprob: -9.451921463012695
    5. 'While' → logprob: -10.951921463012695
    6. '            
' → logprob: -11.201921463012695
    7. '               ' → logprob: -11.326921463012695
    8. '	while' → logprob: -11.451921463012695
    9. '
' → logprob: -11.951921463012695
    10. '```' → logprob: -12.576921463012695

Token 266: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.30051276087760925
    2. ' while' → logprob: -1.5505127906799316
    3. '           ' → logprob: -3.0505127906799316
    4. '(' → logprob: -9.800512313842773
    5. 'While' → logprob: -11.300512313842773
    6. '       ' → logprob: -12.175512313842773
    7. '	while' → logprob: -12.175512313842773
    8. '   ' → logprob: -12.675512313842773
    9. ' (' → logprob: -12.800512313842773
    10. ' ' → logprob: -13.925512313842773

Token 267: ' Puis' (ID: 87717)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1602465659379959
    2. 'while' → logprob: -1.9102466106414795
    3. '           ' → logprob: -11.285246849060059
    4. 'While' → logprob: -12.410246849060059
    5. ' While' → logprob: -13.410246849060059
    6. '	while' → logprob: -13.410246849060059
    7. '            ' → logprob: -13.410246849060059
    8. '        ' → logprob: -14.910246849060059
    9. ' ' → logprob: -15.410246849060059
    10. '       ' → logprob: -15.535246849060059

Token 268: ' dans' (ID: 2671)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3943457305431366
    2. 'while' → logprob: -1.144345760345459
    3. '           ' → logprob: -5.144345760345459
    4. ' (' → logprob: -6.769345760345459
    5. '(' → logprob: -8.1443452835083
    6. '            ' → logprob: -9.1443452835083
    7. ' ' → logprob: -11.0193452835083
    8. '	while' → logprob: -11.0193452835083
    9. '   ' → logprob: -11.8943452835083
    10. '       ' → logprob: -12.2693452835083

Token 269: ' le' (ID: 505)
  Prédit: '(pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pt' → logprob: -0.6942844390869141
    2. ' (' → logprob: -0.9442844390869141
    3. '(' → logprob: -2.194284439086914
    4. ' pt' → logprob: -8.944284439086914
    5. 'pt' → logprob: -11.319284439086914
    6. '   ' → logprob: -11.444284439086914
    7. ' ' → logprob: -11.694284439086914
    8. '(
' → logprob: -13.194284439086914
    9. '  ' → logprob: -13.444284439086914
    10. '    ' → logprob: -13.444284439086914

Token 270: ' sens' (ID: 5050)
  Prédit: '(pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pt' → logprob: -0.482950359582901
    2. 'pt' → logprob: -1.1079503297805786
    3. '(' → logprob: -3.357950448989868
    4. ' (' → logprob: -4.607950210571289
    5. ' pt' → logprob: -4.857950210571289
    6. ' ' → logprob: -9.732950210571289
    7. '(
' → logprob: -9.982950210571289
    8. '0' → logprob: -10.107950210571289
    9. '   ' → logprob: -10.607950210571289
    10. '1' → logprob: -10.857950210571289

Token 271: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14465786516666412
    2. '-' → logprob: -2.019657850265503
    3. ' (' → logprob: -7.894658088684082
    4. ' ' → logprob: -8.144658088684082
    5. ' pt' → logprob: -8.269658088684082
    6. '(' → logprob: -8.394658088684082
    7. ' (-' → logprob: -8.769658088684082
    8. ' +' → logprob: -9.019658088684082
    9. '(-' → logprob: -9.144658088684082
    10. '(pt' → logprob: -9.144658088684082

Token 272: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4338975250720978
    2. '(pt' → logprob: -1.5588974952697754
    3. '(' → logprob: -2.5588974952697754
    4. '(dx' → logprob: -2.8088974952697754
    5. '           ' → logprob: -6.058897495269775
    6. '(px' → logprob: -6.683897495269775
    7. ' (-' → logprob: -9.183897972106934
    8. '(-' → logprob: -9.433897972106934
    9. '   ' → logprob: -10.183897972106934
    10. '            ' → logprob: -11.058897972106934

Token 273: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0036729946732521057
    2. ' dx' → logprob: -5.753673076629639
    3. '(dx' → logprob: -7.628673076629639
    4. ' (' → logprob: -12.75367259979248
    5. '(' → logprob: -13.25367259979248
    6. '   ' → logprob: -13.50367259979248
    7. '_dx' → logprob: -14.37867259979248
    8. '-d' → logprob: -14.50367259979248
    9. ' -' → logprob: -14.50367259979248
    10. '.dx' → logprob: -15.37867259979248

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05525854229927063
    2. '[' → logprob: -2.9302585124969482
    3. ' ,' → logprob: -8.055258750915527
    4. '           ' → logprob: -9.930258750915527
    5. '               ' → logprob: -12.930258750915527
    6. '```' → logprob: -13.180258750915527
    7. 'dx' → logprob: -13.680258750915527
    8. '0' → logprob: -14.055258750915527
    9. ' [' → logprob: -14.305258750915527
    10. 'x' → logprob: -14.430258750915527

Token 275: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.5759411454200745
    2. ' dy' → logprob: -0.8259411454200745
    3. '0' → logprob: -14.70094108581543
    4. ' ' → logprob: -14.82594108581543
    5. '-d' → logprob: -15.07594108581543
    6. ',' → logprob: -15.45094108581543
    7. '.dy' → logprob: -16.07594108581543
    8. '   ' → logprob: -16.57594108581543
    9. 'Dy' → logprob: -16.70094108581543
    10. 'dx' → logprob: -16.95094108581543

Token 276: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010160816833376884
    2. ')' → logprob: -5.01016092300415
    3. ')
' → logprob: -6.01016092300415
    4. 'while' → logprob: -7.26016092300415
    5. ',' → logprob: -8.510160446166992
    6. '          ' → logprob: -10.885160446166992
    7. ' while' → logprob: -11.260160446166992
    8. '            ' → logprob: -11.760160446166992
    9. '<|end|>' → logprob: -12.010160446166992
    10. '[' → logprob: -12.135160446166992

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005127496086061001
    2. 'while' → logprob: -5.755127429962158
    3. ' while' → logprob: -6.380127429962158
    4. '<|end|>' → logprob: -8.505127906799316
    5. '
' → logprob: -11.130127906799316
    6. '            
' → logprob: -11.630127906799316
    7. '	       ' → logprob: -11.880127906799316
    8. '<|end|>' → logprob: -12.255127906799316
    9. '       ' → logprob: -12.380127906799316
    10. '```' → logprob: -13.130127906799316

Token 278: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.06043610721826553
    2. '           ' → logprob: -3.3104360103607178
    3. ' while' → logprob: -3.8104360103607178
    4. '            
' → logprob: -12.435436248779297
    5. '	while' → logprob: -13.685436248779297
    6. '       ' → logprob: -13.810436248779297
    7. 'While' → logprob: -14.810436248779297
    8. '   ' → logprob: -15.560436248779297
    9. ' (' → logprob: -15.810436248779297
    10. '
' → logprob: -15.935436248779297

Token 279: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1611199676990509
    2. '(pt' → logprob: -1.9111199378967285
    3. '(' → logprob: -7.0361199378967285
    4. '(px' → logprob: -13.536120414733887
    5. ' ' → logprob: -13.661120414733887
    6. '(py' → logprob: -13.661120414733887
    7. '(point' → logprob: -13.786120414733887
    8. '(pm' → logprob: -13.786120414733887
    9. '   ' → logprob: -13.911120414733887
    10. '(ptr' → logprob: -13.911120414733887

Token 280: 'pt' (ID: 555)
  Prédit: 'pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.011459089815616608
    2. '(pt' → logprob: -4.511458873748779
    3. ' pt' → logprob: -7.886458873748779
    4. ' (' → logprob: -11.011459350585938
    5. '(' → logprob: -11.761459350585938
    6. '	pt' → logprob: -12.011459350585938
    7. '   ' → logprob: -13.011459350585938
    8. 'pty' → logprob: -14.636459350585938
    9. 'pti' → logprob: -14.636459350585938
    10. '.pt' → logprob: -14.761459350585938

Token 281: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.049038540571928024
    2. '(' → logprob: -3.0490386486053467
    3. ' (' → logprob: -7.799038410186768
    4. '0' → logprob: -10.549038887023926
    5. '   ' → logprob: -11.549038887023926
    6. '(
' → logprob: -14.049038887023926
    7. ' ' → logprob: -14.049038887023926
    8. ' [' → logprob: -14.549038887023926
    9. ')' → logprob: -14.799038887023926
    10. '#' → logprob: -14.924038887023926

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.723973582556937e-05
    2. '[' → logprob: -11.000017166137695
    3. ' ' → logprob: -15.000017166137695
    4. '(' → logprob: -15.875017166137695
    5. 'pt' → logprob: -16.750017166137695
    6. '   ' → logprob: -17.500017166137695
    7. '#' → logprob: -18.625017166137695
    8. '```' → logprob: -19.000017166137695
    9. '۰' → logprob: -19.500017166137695
    10. '
' → logprob: -19.750017166137695

Token 283: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010473522706888616
    2. ' (' → logprob: -10.625104904174805
    3. '   ' → logprob: -10.750104904174805
    4. ' [' → logprob: -10.875104904174805
    5. '-' → logprob: -11.250104904174805
    6. '0' → logprob: -12.125104904174805
    7. ' -' → logprob: -12.125104904174805
    8. '(' → logprob: -12.625104904174805
    9. ' ' → logprob: -12.875104904174805
    10. '       ' → logprob: -13.000104904174805

Token 284: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004140022210776806
    2. ' (' → logprob: -5.8791399002075195
    3. ' [' → logprob: -7.7541399002075195
    4. '(' → logprob: -8.00413990020752
    5. ' -' → logprob: -8.25413990020752
    6. '-' → logprob: -9.12913990020752
    7. '0' → logprob: -9.50413990020752
    8. '   ' → logprob: -10.00413990020752
    9. ' ' → logprob: -10.25413990020752
    10. ')' → logprob: -11.37913990020752

Token 285: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.2519390881061554
    2. ' dx' → logprob: -1.501939058303833
    3. '(dx' → logprob: -12.626938819885254
    4. '1' → logprob: -12.751938819885254
    5. '_dx' → logprob: -13.376938819885254
    6. ' ' → logprob: -14.251938819885254
    7. '   ' → logprob: -14.626938819885254
    8. '.dx' → logprob: -15.001938819885254
    9. 'd' → logprob: -15.376938819885254
    10. 'DX' → logprob: -15.376938819885254

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. ' ,' → logprob: -10.500027656555176
    3. ',
' → logprob: -16.500028610229492
    4. '[' → logprob: -17.125028610229492
    5. '   ' → logprob: -17.250028610229492
    6. '```' → logprob: -17.250028610229492
    7. '           ' → logprob: -18.625028610229492
    8. '       ' → logprob: -18.750028610229492
    9. '‌,' → logprob: -18.750028610229492
    10. '
' → logprob: -19.500028610229492

Token 287: ' pt' (ID: 18961)
  Prédit: ' pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pt' → logprob: -0.023251185193657875
    2. 'pt' → logprob: -3.7732512950897217
    3. '(pt' → logprob: -12.3982515335083
    4. '	pt' → logprob: -13.6482515335083
    5. ' pti' → logprob: -15.8982515335083
    6. ' ' → logprob: -16.148250579833984
    7. ' pts' → logprob: -16.523250579833984
    8. '.pt' → logprob: -16.648250579833984
    9. '_pt' → logprob: -18.023250579833984
    10. '    ' → logprob: -18.523250579833984

Token 288: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023283565416932106
    2. '1' → logprob: -3.7732834815979004
    3. ',' → logprob: -10.523283958435059
    4. '   ' → logprob: -11.773283958435059
    5. '```' → logprob: -13.773283958435059
    6. '][' → logprob: -14.273283958435059
    7. '           ' → logprob: -14.523283958435059
    8. '       ' → logprob: -14.648283958435059
    9. ' ' → logprob: -15.648283958435059
    10. ' [' → logprob: -15.648283958435059

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.375004768371582
    3. ' ' → logprob: -15.125004768371582
    4. '   ' → logprob: -15.125004768371582
    5. '
' → logprob: -16.7500057220459
    6. ']' → logprob: -17.0000057220459
    7. '0' → logprob: -17.7500057220459
    8. '```' → logprob: -18.0000057220459
    9. '	' → logprob: -19.0625057220459
    10. '
' → logprob: -19.2500057220459

Token 290: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012685051187872887
    2. ',' → logprob: -4.6376848220825195
    3. '][' → logprob: -6.6376848220825195
    4. '0' → logprob: -7.8876848220825195
    5. ']' → logprob: -8.26268482208252
    6. '   ' → logprob: -8.26268482208252
    7. '],' → logprob: -8.26268482208252
    8. '1' → logprob: -8.26268482208252
    9. '       ' → logprob: -9.51268482208252
    10. '           ' → logprob: -9.88768482208252

Token 291: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04341293126344681
    2. '[' → logprob: -3.168412923812866
    3. ' ,' → logprob: -8.293413162231445
    4. '1' → logprob: -9.168413162231445
    5. '0' → logprob: -10.668413162231445
    6. ',
' → logprob: -11.668413162231445
    7. '```' → logprob: -11.668413162231445
    8. '   ' → logprob: -11.793413162231445
    9. '       ' → logprob: -12.543413162231445
    10. '           ' → logprob: -12.918413162231445

Token 292: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.07889066636562347
    2. ' dy' → logprob: -2.578890562057495
    3. '1' → logprob: -15.453890800476074
    4. 'pt' → logprob: -15.578890800476074
    5. ' ' → logprob: -15.953890800476074
    6. '   ' → logprob: -15.953890800476074
    7. 'Dy' → logprob: -16.578889846801758
    8. 'dp' → logprob: -16.828889846801758
    9. 'd' → logprob: -16.953889846801758
    10. 'dx' → logprob: -17.453889846801758

Token 293: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.927930654550437e-05
    2. ' )' → logprob: -10.625029563903809
    3. 'in' → logprob: -13.375029563903809
    4. ',' → logprob: -13.750029563903809
    5. ']' → logprob: -14.500029563903809
    6. ',)' → logprob: -14.750029563903809
    7. '   ' → logprob: -15.125029563903809
    8. ' in' → logprob: -15.375029563903809
    9. '[' → logprob: -15.625029563903809
    10. ')
' → logprob: -16.125028610229492

Token 294: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4289059042930603
    2. 'in' → logprob: -1.053905963897705
    3. ' not' → logprob: -9.053905487060547
    4. 'not' → logprob: -10.178905487060547
    5. ')' → logprob: -10.553905487060547
    6. '   ' → logprob: -12.303905487060547
    7. '[' → logprob: -12.428905487060547
    8. '       ' → logprob: -12.553905487060547
    9. '           ' → logprob: -12.553905487060547
    10. ',' → logprob: -13.303905487060547

Token 295: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6931481957435608
    2. ' v' → logprob: -0.6931481957435608
    3. 's' → logprob: -13.943148612976074
    4. '	v' → logprob: -17.568147659301758
    5. '```' → logprob: -17.943147659301758
    6. '(v' → logprob: -18.068147659301758
    7. ' s' → logprob: -18.943147659301758
    8. ')v' → logprob: -19.068147659301758
    9. '[' → logprob: -19.318147659301758
    10. '   ' → logprob: -19.443147659301758

Token 296: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21592439711093903
    2. ':' → logprob: -2.3409245014190674
    3. '           ' → logprob: -2.9659245014190674
    4. '               ' → logprob: -3.0909245014190674
    5. '):
' → logprob: -7.090924263000488
    6. 'pt' → logprob: -10.590924263000488
    7. '       ' → logprob: -10.590924263000488
    8. '{
' → logprob: -11.215924263000488
    9. '```' → logprob: -11.215924263000488
    10. ':

' → logprob: -11.340924263000488

Token 297: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006637809332460165
    2. '           ' → logprob: -5.7566375732421875
    3. 'pt' → logprob: -5.7566375732421875
    4. ' pt' → logprob: -8.256637573242188
    5. '       ' → logprob: -10.881637573242188
    6. '(pt' → logprob: -12.506637573242188
    7. '	pt' → logprob: -12.506637573242188
    8. '   ' → logprob: -13.506637573242188
    9. '                   ' → logprob: -13.506637573242188
    10. '              ' → logprob: -13.756637573242188

Token 298: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' (adapté à ' pt') → logprob: -0.004133137874305248
    2. ' pt' → logprob: -5.504133224487305
    3. '(pt' → logprob: -10.004133224487305
    4. '           ' → logprob: -11.754133224487305
    5. '               ' → logprob: -14.004133224487305
    6. '	pt' → logprob: -14.879133224487305
    7. '.pt' → logprob: -15.504133224487305
    8. '       ' → logprob: -16.379133224487305
    9. '_pt' → logprob: -16.879133224487305
    10. '   ' → logprob: -17.004133224487305

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11282656341791153
    2. ' =' → logprob: -2.2378265857696533
    3. 'pt' → logprob: -12.862826347351074
    4. '=(' → logprob: -13.862826347351074
    5. '   ' → logprob: -16.11282730102539
    6. '=
' → logprob: -16.11282730102539
    7. '[' → logprob: -16.73782730102539
    8. ' pt' → logprob: -16.73782730102539
    9. ' =(' → logprob: -16.73782730102539
    10. '＝' → logprob: -17.11282730102539

Token 300: ' (' (ID: 350)
  Prédit: '(pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: -0.011054071597754955
    2. ' (' → logprob: -4.511054039001465
    3. '(' → logprob: -12.011054039001465
    4. '(ptr' → logprob: -16.63605499267578
    5. '(px' → logprob: -16.88605499267578
    6. '(part' → logprob: -17.13605499267578
    7. '(pkt' → logprob: -18.01105499267578
    8. '(tp' → logprob: -18.01105499267578
    9. '(p' → logprob: -18.13605499267578
    10. '(pc' → logprob: -18.13605499267578

Token 301: 'pt' (ID: 555)
  Prédit: 'pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.018261505290865898
    2. '(pt' → logprob: -4.018261432647705
    3. ' pt' → logprob: -9.143261909484863
    4. '	pt' → logprob: -13.393261909484863
    5. ' (' → logprob: -13.643261909484863
    6. '(' → logprob: -13.643261909484863
    7. 'Pt' → logprob: -15.768261909484863
    8. '.pt' → logprob: -15.893261909484863
    9. '   ' → logprob: -15.893261909484863
    10. 'pty' → logprob: -16.268260955810547

Token 302: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7081420421600342
    2. '[' → logprob: -0.7081420421600342
    3. '(' → logprob: -4.208142280578613
    4. '   ' → logprob: -12.583142280578613
    5. ' (' → logprob: -12.833142280578613
    6. 'pt' → logprob: -13.333142280578613
    7. ' ' → logprob: -15.208142280578613
    8. '(pt' → logprob: -15.333142280578613
    9. '
' → logprob: -15.458142280578613
    10. '```' → logprob: -15.708142280578613

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.5
    3. ' ' → logprob: -16.5
    4. '1' → logprob: -17.375
    5. '   ' → logprob: -17.625
    6. 'pt' → logprob: -17.875
    7. '
' → logprob: -18.875
    8. '۰' → logprob: -19.625
    9. '```' → logprob: -19.6875
    10. '	' → logprob: -20.0625

Token 304: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001521049183793366
    2. '0' → logprob: -6.501521110534668
    3. '(' → logprob: -12.001521110534668
    4. '   ' → logprob: -12.126521110534668
    5. '][' → logprob: -12.751521110534668
    6. ' [' → logprob: -13.626521110534668
    7. ' ' → logprob: -14.001521110534668
    8. '```' → logprob: -14.626521110534668
    9. '#' → logprob: -15.001521110534668
    10. '
' → logprob: -15.501521110534668

Token 305: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25196197628974915
    2. '0' → logprob: -1.5019619464874268
    3. '(' → logprob: -10.376961708068848
    4. '   ' → logprob: -14.251961708068848
    5. '
' → logprob: -15.251961708068848
    6. '1' → logprob: -15.501961708068848
    7. '```' → logprob: -15.751961708068848
    8. ' ' → logprob: -16.126962661743164
    9. ' (' → logprob: -16.876962661743164
    10. '#' → logprob: -16.876962661743164

Token 306: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.4740801155567169
    2. ' dx' → logprob: -0.9740800857543945
    3. '(dx' → logprob: -13.474080085754395
    4. '_dx' → logprob: -13.724080085754395
    5. '.dx' → logprob: -15.724080085754395
    6. 'DX' → logprob: -15.974080085754395
    7. ' ' → logprob: -16.59908103942871
    8. 'Dx' → logprob: -16.59908103942871
    9. '0' → logprob: -16.84908103942871
    10. '   ' → logprob: -16.97408103942871

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12703867256641388
    2. '[' → logprob: -2.1270387172698975
    3. ' ,' → logprob: -9.377038955688477
    4. '0' → logprob: -11.502038955688477
    5. '```' → logprob: -11.502038955688477
    6. ',
' → logprob: -13.877038955688477
    7. '               ' → logprob: -13.877038955688477
    8. '           ' → logprob: -14.127038955688477
    9. ',d' → logprob: -14.502038955688477
    10. '][' → logprob: -15.252038955688477

Token 308: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.2519339919090271
    2. ' pt' → logprob: -1.5019340515136719
    3. '(pt' → logprob: -12.376934051513672
    4. '	pt' → logprob: -15.126934051513672
    5. 'pty' → logprob: -15.501934051513672
    6. 'pti' → logprob: -16.876934051513672
    7. '.pt' → logprob: -17.126934051513672
    8. 'pts' → logprob: -17.376934051513672
    9. '_pt' → logprob: -17.501934051513672
    10. ' pts' → logprob: -17.626934051513672

Token 309: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5232499241828918
    2. '1' → logprob: -0.8982499241828918
    3. ']' → logprob: -10.273249626159668
    4. '][' → logprob: -10.398249626159668
    5. '
' → logprob: -11.148249626159668
    6. '```' → logprob: -11.398249626159668
    7. ',' → logprob: -11.648249626159668
    8. '(' → logprob: -11.898249626159668
    9. '-' → logprob: -12.148249626159668
    10. '   ' → logprob: -12.398249626159668

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012987985974177718
    2. 'dy' → logprob: -9.125129699707031
    3. ' ' → logprob: -10.875129699707031
    4. '0' → logprob: -14.375129699707031
    5. '   ' → logprob: -14.625129699707031
    6. ' dy' → logprob: -14.625129699707031
    7. '
' → logprob: -15.125129699707031
    8. '```' → logprob: -17.06262969970703
    9. '3' → logprob: -17.50012969970703
    10. ']' → logprob: -17.50012969970703

Token 311: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09102123975753784
    2. '0' → logprob: -2.4660212993621826
    3. ']' → logprob: -7.5910210609436035
    4. ',' → logprob: -7.5910210609436035
    5. '][' → logprob: -7.5910210609436035
    6. '1' → logprob: -8.091021537780762
    7. ' ' → logprob: -9.466021537780762
    8. ')' → logprob: -10.091021537780762
    9. '],' → logprob: -10.591021537780762
    10. '```' → logprob: -10.591021537780762

Token 312: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018065694894175977
    2. '[' → logprob: -8.7501802444458
    3. ' ' → logprob: -11.6251802444458
    4. '-' → logprob: -12.6251802444458
    5. '
' → logprob: -12.6251802444458
    6. '   ' → logprob: -13.2501802444458
    7. ',' → logprob: -13.5001802444458
    8. '```' → logprob: -13.8751802444458
    9. ']' → logprob: -14.0001802444458
    10. '0' → logprob: -14.9376802444458

Token 313: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.004084693267941475
    2. ' dy' → logprob: -5.504084587097168
    3. 'pt' → logprob: -12.879084587097168
    4. 'dx' → logprob: -13.004084587097168
    5. 'd' → logprob: -14.254084587097168
    6. 'dp' → logprob: -14.504084587097168
    7. '-d' → logprob: -15.754084587097168
    8. 'Dy' → logprob: -16.504085540771484
    9. '0' → logprob: -16.754085540771484
    10. ' pt' → logprob: -17.754085540771484

Token 314: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12738631665706635
    2. ')' → logprob: -2.3773863315582275
    3. '               ' → logprob: -3.6273863315582275
    4. '           ' → logprob: -9.252386093139648
    5. '                   ' → logprob: -9.627386093139648
    6. ')
' → logprob: -9.877386093139648
    7. '                ' → logprob: -13.377386093139648
    8. ',' → logprob: -13.752386093139648
    9. ')`
' → logprob: -13.752386093139648
    10. '0' → logprob: -14.002386093139648

Token 315: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000936355150770396
    2. 'v' → logprob: -7.125936508178711
    3. ' v' → logprob: -10.000936508178711
    4. '           ' → logprob: -10.125936508178711
    5. '                   ' → logprob: -10.750936508178711
    6. '              ' → logprob: -12.250936508178711
    7. '                ' → logprob: -12.250936508178711
    8. '
' → logprob: -12.500936508178711
    9. '(v' → logprob: -12.500936508178711
    10. '                
' → logprob: -12.625936508178711

Token 316: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0011705794604495168
    2. ' v' → logprob: -6.751170635223389
    3. '               ' → logprob: -15.50117015838623
    4. '           ' → logprob: -15.87617015838623
    5. '       ' → logprob: -18.001171112060547
    6. '                   ' → logprob: -18.376171112060547
    7. '   ' → logprob: -19.876171112060547
    8. '	v' → logprob: -19.876171112060547
    9. '              ' → logprob: -21.001171112060547
    10. '
' → logprob: -21.126171112060547

Token 317: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.006811291445046663
    2. 'remove' → logprob: -5.006811141967773
    3. '.' → logprob: -9.256811141967773
    4. ' remove' → logprob: -15.131811141967773
    5. '.dis' → logprob: -16.756811141967773
    6. '	remove' → logprob: -17.131811141967773
    7. ' .' → logprob: -18.006811141967773
    8. 'discard' → logprob: -18.756811141967773
    9. '   ' → logprob: -19.006811141967773
    10. '.Remove' → logprob: -19.631811141967773

Token 318: '(pt' (ID: 73498)
  Prédit: '(pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: 0.0
    2. '(' → logprob: -17.875
    3. 'pt' → logprob: -18.125
    4. '(p' → logprob: -19.625
    5. '(pkt' → logprob: -20.0
    6. '(ptr' → logprob: -20.625
    7. '(point' → logprob: -20.875
    8. '(part' → logprob: -21.0
    9. '	pt' → logprob: -21.375
    10. '(px' → logprob: -21.5

Token 319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010130415903404355
    2. ')
' → logprob: -7.626013278961182
    3. '           ' → logprob: -8.251012802124023
    4. 'pt' → logprob: -10.001012802124023
    5. ')return' → logprob: -10.251012802124023
    6. '())' → logprob: -10.501012802124023
    7. '               ' → logprob: -10.751012802124023
    8. '       ' → logprob: -11.126012802124023
    9. '(pt' → logprob: -11.126012802124023
    10. '()' → logprob: -11.376012802124023

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018363336857873946
    2. '
' → logprob: -9.875184059143066
    3. '        
' → logprob: -10.125184059143066
    4. '   ' → logprob: -10.500184059143066
    5. '           ' → logprob: -10.875184059143066
    6. 'if' → logprob: -11.250184059143066
    7. ')' → logprob: -12.250184059143066
    8. ',' → logprob: -12.500184059143066
    9. '            
' → logprob: -12.875184059143066
    10. '#' → logprob: -12.875184059143066

Token 321: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7517228126525879
    2. '   ' → logprob: -0.8767228126525879
    3. ' if' → logprob: -3.001722812652588
    4. 'if' (adapté à ' if') → logprob: -3.626722812652588
    5. '
' → logprob: -4.001722812652588
    6. '           ' → logprob: -4.876722812652588
    7. '    
' → logprob: -6.376722812652588
    8. '        
' → logprob: -6.626722812652588
    9. 'answer' → logprob: -6.751722812652588
    10. '#' → logprob: -6.876722812652588

Token 322: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.11285436153411865
    2. 'tmp' → logprob: -2.237854480743408
    3. ' answer' → logprob: -11.86285400390625
    4. ' temp' → logprob: -12.23785400390625
    5. '(tmp' → logprob: -12.23785400390625
    6. ' max' → logprob: -12.36285400390625
    7. ' ' → logprob: -12.86285400390625
    8. 'answer' → logprob: -13.73785400390625
    9. '	tmp' → logprob: -13.73785400390625
    10. 'temp' → logprob: -14.11285400390625

Token 323: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.17997117340564728
    2. ' <' → logprob: -1.8049712181091309
    3. '>' → logprob: -9.554970741271973
    4. ' ' → logprob: -10.429970741271973
    5. '[' → logprob: -10.429970741271973
    6. '<size' → logprob: -11.054970741271973
    7. ' >' → logprob: -11.429970741271973
    8. '==' → logprob: -11.929970741271973
    9. '<int' → logprob: -12.179970741271973
    10. '=' → logprob: -12.179970741271973

Token 324: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.018151817843317986
    2. ' answer' → logprob: -4.018151760101318
    3. '   ' → logprob: -14.018152236938477
    4. 'ans' → logprob: -15.143152236938477
    5. '	answer' → logprob: -15.143152236938477
    6. ' ' → logprob: -15.268152236938477
    7. '  ' → logprob: -16.393152236938477
    8. '(answer' → logprob: -16.643152236938477
    9. ' ' → logprob: -17.393152236938477
    10. 'Answer' → logprob: -17.393152236938477

Token 325: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004670068621635437
    2. ':
' → logprob: -5.379670143127441
    3. '=' → logprob: -10.254670143127441
    4. ' :' → logprob: -11.754670143127441
    5. ':
' → logprob: -13.379670143127441
    6. '):' → logprob: -13.629670143127441
    7. ' =' → logprob: -13.629670143127441
    8. '           ' → logprob: -14.379670143127441
    9. ':

' → logprob: -14.629670143127441
    10. '   ' → logprob: -15.004670143127441

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7063916325569153
    2. 'answer' → logprob: -0.7063916325569153
    3. ' answer' → logprob: -4.58139181137085
    4. '	answer' → logprob: -6.45639181137085
    5. '   ' → logprob: -7.33139181137085
    6. '       ' → logprob: -7.58139181137085
    7. '               ' → logprob: -9.581391334533691
    8. '(answer' → logprob: -10.206391334533691
    9. '=' → logprob: -10.706391334533691
    10. '.answer' → logprob: -10.706391334533691

Token 327: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.038490328937768936
    2. 'answer' (adapté à ' answer') → logprob: -3.2884902954101562
    3. ' 
' → logprob: -8.413490295410156
    4. '	answer' → logprob: -8.913490295410156
    5. '(answer' → logprob: -9.913490295410156
    6. 'Answer' → logprob: -11.288490295410156
    7. '_answer' → logprob: -11.538490295410156
    8. '.answer' → logprob: -12.413490295410156
    9. '
' → logprob: -12.788490295410156
    10. ' ' → logprob: -13.038490295410156

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751179739832878
    2. '=' → logprob: -3.5297510623931885
    3. ' =
' → logprob: -15.15475082397461
    4. ',' → logprob: -15.40475082397461
    5. ' ' → logprob: -16.27975082397461
    6. ' =)' → logprob: -17.02975082397461
    7. ' ' → logprob: -17.27975082397461
    8. ' +=' → logprob: -17.90475082397461
    9. '<|end|>' → logprob: -17.90475082397461
    10. '＝' → logprob: -18.52975082397461

Token 329: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.25192990899086
    2. 'tmp' → logprob: -1.5019298791885376
    3. '(tmp' → logprob: -15.001930236816406
    4. '/tmp' → logprob: -15.376930236816406
    5. '	tmp' → logprob: -15.876930236816406
    6. '$tmp' → logprob: -16.876930236816406
    7. '[tmp' → logprob: -17.751930236816406
    8. ' ' → logprob: -17.751930236816406
    9. '_tmp' → logprob: -18.251930236816406
    10. 'temp' → logprob: -18.376930236816406

Token 330: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001600347168277949
    2. '
' → logprob: -8.750160217285156
    3. '
' → logprob: -14.500160217285156
    4. '```' → logprob: -15.000160217285156
    5. ' print' → logprob: -15.125160217285156
    6. '  
' → logprob: -15.500160217285156
    7. '    
' → logprob: -16.250160217285156
    8. '

' → logprob: -17.250160217285156
    9. '            
' → logprob: -17.375160217285156
    10. ')' → logprob: -17.875160217285156

Token 331: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001266613689949736
    2. '
' → logprob: -9.000126838684082
    3. ' print' → logprob: -13.500126838684082
    4. '```' → logprob: -14.625126838684082
    5. '
' → logprob: -14.750126838684082
    6. ')' → logprob: -15.250126838684082
    7. '

' → logprob: -15.375126838684082
    8. '            
' → logprob: -15.875126838684082
    9. '    
' → logprob: -16.125125885009766
    10. '  
' → logprob: -16.500125885009766

Token 332: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.4274766743183136
    2. 'answer' → logprob: -1.1774766445159912
    3. 'n' → logprob: -3.927476644515991
    4. ' n' → logprob: -3.927476644515991
    5. ' __' → logprob: -8.55247688293457
    6. ' len' → logprob: -8.80247688293457
    7. '__' → logprob: -10.67747688293457
    8. 'len' → logprob: -10.67747688293457
    9. '	answer' → logprob: -12.05247688293457
    10. ' ' → logprob: -12.42747688293457

Token 333: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28157860040664673
    2. ' ==' → logprob: -1.406578540802002
    3. '!=' → logprob: -8.65657901763916
    4. '<' → logprob: -9.28157901763916
    5. '=' → logprob: -9.78157901763916
    6. ' !=' → logprob: -10.40657901763916
    7. ' <' → logprob: -10.40657901763916
    8. '<=' → logprob: -11.03157901763916
    9. '>' → logprob: -11.78157901763916
    10. ' =' → logprob: -12.15657901763916

Token 334: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00033081689616665244
    2. 'n' → logprob: -9.000330924987793
    3. ' ' → logprob: -9.000330924987793
    4. '100' → logprob: -9.500330924987793
    5. 'float' → logprob: -12.250330924987793
    6. '101' → logprob: -13.875330924987793
    7. '```' → logprob: -14.000330924987793
    8. '1' → logprob: -14.375330924987793
    9. '0' → logprob: -14.500330924987793
    10. 'int' → logprob: -15.125330924987793

Token 335: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00018422940047457814
    2. '100' → logprob: -9.125184059143066
    3. 'n' → logprob: -10.125184059143066
    4. ' ' → logprob: -11.250184059143066
    5. 'float' → logprob: -11.250184059143066
    6. 'int' → logprob: -12.375184059143066
    7. '101' → logprob: -13.500184059143066
    8. '(' → logprob: -13.625184059143066
    9. '0' → logprob: -14.375184059143066
    10. '1' → logprob: -14.375184059143066

Token 336: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3870875835418701
    2. '12' → logprob: -1.1370875835418701
    3. '```' → logprob: -8.63708782196045
    4. '+' → logprob: -10.88708782196045
    5. '^' → logprob: -11.51208782196045
    6. '*' → logprob: -11.76208782196045
    7. '13' → logprob: -13.63708782196045
    8. '​' → logprob: -15.01208782196045
    9. '``' → logprob: -15.76208782196045
    10. '15' → logprob: -15.76208782196045

Token 337: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -14.375001907348633
    3. '15' → logprob: -14.500001907348633
    4. '18' → logprob: -14.750001907348633
    5. '13' → logprob: -14.875001907348633
    6. '``' → logprob: -16.000001907348633
    7. '6' → logprob: -16.250001907348633
    8. '9' → logprob: -16.687501907348633
    9. '1' → logprob: -17.000001907348633
    10. '2' → logprob: -17.312501907348633

Token 338: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25196680426597595
    2. ':
' → logprob: -1.5019668340682983
    3. '=' → logprob: -11.00196647644043
    4. ':
' → logprob: -11.75196647644043
    5. ':

' → logprob: -12.25196647644043
    6. ':return' → logprob: -12.50196647644043
    7. 'print' → logprob: -13.50196647644043
    8. '   ' → logprob: -14.25196647644043
    9. '==' → logprob: -14.25196647644043
    10. ' :' → logprob: -14.75196647644043

Token 339: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16148510575294495
    2. 'answer' → logprob: -1.9114850759506226
    3. '   ' → logprob: -7.411485195159912
    4. ' answer' → logprob: -8.286484718322754
    5. ' print' → logprob: -8.911484718322754
    6. '
' → logprob: -9.286484718322754
    7. '=' → logprob: -9.786484718322754
    8. ':
' → logprob: -9.786484718322754
    9. '    
' → logprob: -10.786484718322754
    10. '```' → logprob: -11.411484718322754

Token 340: ' print' (ID: 2123)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.16039401292800903
    2. 'print' (adapté à ' print') → logprob: -1.9103939533233643
    3. ' answer' → logprob: -9.285393714904785
    4. '=' → logprob: -9.535393714904785
    5. ' print' → logprob: -13.160393714904785
    6. 'ans' → logprob: -13.910393714904785
    7. '
' → logprob: -14.410393714904785
    8. '	answer' → logprob: -14.660393714904785
    9. ' =' → logprob: -15.285393714904785
    10. '   ' → logprob: -16.0353946685791

Token 341: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20538447797298431
    2. '(n' → logprob: -2.0803844928741455
    3. '(-' → logprob: -2.8303844928741455
    4. '1' → logprob: -6.705384254455566
    5. '("' → logprob: -8.330384254455566
    6. 'n' → logprob: -8.830384254455566
    7. '-' → logprob: -9.830384254455566
    8. '(len' → logprob: -10.330384254455566
    9. '("-' → logprob: -10.455384254455566
    10. '0' → logprob: -10.705384254455566

Token 342: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4810775816440582
    2. '1' → logprob: -1.1060775518417358
    3. 'n' → logprob: -3.1060776710510254
    4. '0' → logprob: -5.106077671051025
    5. ' -' → logprob: -9.231077194213867
    6. '2' → logprob: -10.231077194213867
    7. ' n' → logprob: -11.106077194213867
    8. '"' → logprob: -11.481077194213867
    9. ' ' → logprob: -12.231077194213867
    10. '"-' → logprob: -12.668577194213867

Token 343: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31327006220817566
    2. ')
' → logprob: -1.313270092010498
    3. 'else' → logprob: -12.81326961517334
    4. ' )' → logprob: -13.31326961517334
    5. ')
' → logprob: -13.56326961517334
    6. ' )
' → logprob: -13.56326961517334
    7. ')

' → logprob: -14.31326961517334
    8. '
' → logprob: -16.188270568847656
    9. '())
' → logprob: -16.188270568847656
    10. '()' → logprob: -16.313270568847656

Token 344: ' ' (ID: 220)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -2.7729658540920354e-05
    2. ' else' → logprob: -10.500027656555176
    3. 'print' → logprob: -15.625027656555176
    4. '
' → logprob: -17.375028610229492
    5. 'elif' → logprob: -17.625028610229492
    6. '```' → logprob: -18.625028610229492
    7. '    
' → logprob: -19.625028610229492
    8. '   ' → logprob: -19.750028610229492
    9. '}else' → logprob: -19.875028610229492
    10. '#else' → logprob: -20.875028610229492

Token 345: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00043102685594931245
    2. ' else' → logprob: -7.750431060791016
    3. 'print' → logprob: -15.250431060791016
    4. 'elif' → logprob: -17.875431060791016
    5. '   ' → logprob: -18.375431060791016
    6. '	else' → logprob: -18.500431060791016
    7. '```' → logprob: -18.625431060791016
    8. ' ' → logprob: -19.125431060791016
    9. '}else' → logprob: -19.500431060791016
    10. '#else' → logprob: -19.750431060791016

Token 346: ' hmm' (ID: 186402)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -6.539801688631997e-05
    2. ' else' → logprob: -9.750065803527832
    3. 'elif' → logprob: -11.875065803527832
    4. 'print' → logprob: -15.625065803527832
    5. '   ' → logprob: -19.625064849853516
    6. ')' → logprob: -20.375064849853516
    7. '0' → logprob: -20.500064849853516
    8. '}else' → logprob: -20.750064849853516
    9. '```' → logprob: -20.875064849853516
    10. '    
' → logprob: -21.375064849853516

Token 347: ',' (ID: 11)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00019817621796391904
    2. ' else' → logprob: -8.750198364257812
    3. 'elif' → logprob: -11.000198364257812
    4. ')' → logprob: -11.125198364257812
    5. 'print' → logprob: -13.125198364257812
    6. '   ' → logprob: -13.250198364257812
    7. '<|end|>' → logprob: -13.750198364257812
    8. '```' → logprob: -13.875198364257812
    9. '
' → logprob: -14.000198364257812
    10. '    
' → logprob: -14.375198364257812

Token 348: ' peut' (ID: 9216)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7015857100486755
    2. 'else' → logprob: -0.7015857100486755
    3. ' else' → logprob: -5.07658576965332
    4. ' print' → logprob: -6.70158576965332
    5. 'elif' → logprob: -7.95158576965332
    6. ')' → logprob: -8.32658576965332
    7. '   ' → logprob: -8.32658576965332
    8. '
' → logprob: -10.57658576965332
    9. '0' → logprob: -10.70158576965332
    10. ' 
' → logprob: -11.45158576965332

Token 349: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.03314705565571785
    2. '-être' → logprob: -3.908147096633911
    3. 'etre' → logprob: -4.408146858215332
    4. 'êt' → logprob: -9.158146858215332
    5. 'êtres' → logprob: -9.283146858215332
    6. 'ê' → logprob: -9.283146858215332
    7. '-' → logprob: -11.033146858215332
    8. 'ètre' → logprob: -11.033146858215332
    9. 'Ê' → logprob: -11.658146858215332
    10. ''être' → logprob: -12.408146858215332

Token 350: ' pas' (ID: 2173)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00020568605395965278
    2. ' else' → logprob: -8.500205993652344
    3. 'print' → logprob: -13.125205993652344
    4. 'elif' → logprob: -15.875205993652344
    5. '   ' → logprob: -20.375205993652344
    6. '}else' → logprob: -20.500205993652344
    7. '#else' → logprob: -20.625205993652344
    8. '	else' → logprob: -21.000205993652344
    9. '```' → logprob: -21.000205993652344
    10. ')' → logprob: -21.250205993652344

Token 351: ' toujours' (ID: 16867)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.000145137935760431
    2. ' else' → logprob: -9.125144958496094
    3. 'print' → logprob: -10.500144958496094
    4. ')' → logprob: -12.250144958496094
    5. 'elif' → logprob: -13.125144958496094
    6. '   ' → logprob: -13.375144958496094
    7. '```' → logprob: -16.000144958496094
    8. ')
' → logprob: -16.375144958496094
    9. '}else' → logprob: -17.625144958496094
    10. '#else' → logprob: -17.875144958496094

Token 352: ' correct' (ID: 6145)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00027432903880253434
    2. 'print' → logprob: -8.250274658203125
    3. ' else' → logprob: -11.250274658203125
    4. 'elif' → logprob: -17.125274658203125
    5. '   ' → logprob: -17.750274658203125
    6. ' print' → logprob: -18.875274658203125
    7. '```' → logprob: -19.375274658203125
    8. '#else' → logprob: -21.125274658203125
    9. '}else' → logprob: -21.375274658203125
    10. '	else' → logprob: -22.125274658203125

Token 353: ' ?
' (ID: 19740)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -9.639096970204264e-05
    2. ' else' → logprob: -9.250096321105957
    3. 'print' → logprob: -16.500097274780273
    4. 'elif' → logprob: -16.750097274780273
    5. '   ' → logprob: -17.000097274780273
    6. ')' → logprob: -18.750097274780273
    7. '}else' → logprob: -19.875097274780273
    8. '```' → logprob: -20.125097274780273
    9. '#else' → logprob: -20.250097274780273
    10. '	else' → logprob: -20.375097274780273

Token 354: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -6.392202976712724e-06
    2. ' else' → logprob: -12.000006675720215
    3. 'print' → logprob: -15.625006675720215
    4. '   ' → logprob: -19.0000057220459
    5. 'elif' → logprob: -19.2500057220459
    6. '```' → logprob: -20.1250057220459
    7. ')' → logprob: -20.7500057220459
    8. '}else' → logprob: -21.1250057220459
    9. '	else' → logprob: -21.5000057220459
    10. 'elser' → logprob: -21.8750057220459

Token 355: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.309561550617218
    2. ':
' → logprob: -1.4345614910125732
    3. '   ' → logprob: -4.309561729431152
    4. 'print' → logprob: -4.434561729431152
    5. ' print' → logprob: -6.059561729431152
    6. '       ' → logprob: -8.934561729431152
    7. '(print' → logprob: -9.059561729431152
    8. ' :
' → logprob: -10.184561729431152
    9. ' :' → logprob: -10.809561729431152
    10. '(' → logprob: -11.184561729431152

Token 356: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017056517535820603
    2. ' print' → logprob: -6.501705646514893
    3. '   ' → logprob: -8.50170612335205
    4. '       ' → logprob: -16.001705169677734
    5. '	print' → logprob: -17.626705169677734
    6. '```' → logprob: -18.626705169677734
    7. '(print' → logprob: -20.001705169677734
    8. '.print' → logprob: -20.251705169677734
    9. '  ' → logprob: -20.376705169677734
    10. '           ' → logprob: -20.626705169677734

Token 357: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.7697225252486533e-06
    2. ' print' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.500003814697266
    4. '```' → logprob: -20.625003814697266
    5. '	print' → logprob: -22.250003814697266
    6. '.print' → logprob: -24.000003814697266
    7. '
' → logprob: -24.375003814697266
    8. '#print' → logprob: -25.125003814697266
    9. '(print' → logprob: -25.500003814697266
    10. 'printf' → logprob: -25.500003814697266

Token 358: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -7.588793960167095e-05
    2. 'answer' → logprob: -9.500076293945312
    3. '(ans' → logprob: -14.000076293945312
    4. '(' → logprob: -16.250076293945312
    5. ' answer' → logprob: -17.750076293945312
    6. ' (' → logprob: -19.250076293945312
    7. '()' → logprob: -19.500076293945312
    8. '	answer' → logprob: -19.500076293945312
    9. '((' → logprob: -20.875076293945312
    10. '(
' → logprob: -20.875076293945312

Token 359: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -13.250003814697266
    3. '))' → logprob: -14.000003814697266
    4. ')
' → logprob: -14.250003814697266
    5. ')}' → logprob: -16.375003814697266
    6. '+' → logprob: -16.625003814697266
    7. '}' → logprob: -16.750003814697266
    8. '')' → logprob: -16.875003814697266
    9. ')`' → logprob: -17.125003814697266
    10. '`)' → logprob: -17.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 357
Tokens correctement prédits (1ère position, stricte): 140
Tokens correctement prédits (1ère position, avec adaptation): 147
Tokens correctement prédits (top 10): 257
Précision stricte (1ère position): 39.22%
Précision adaptée (1ère position): 41.18%
Précision (top 10): 71.99%
================================================================================
