================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H, A = map(int, input().split())
print((H + A - 1) // A)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' A' (ID: 355)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4505789875984192
    2. ',' → logprob: -1.3255789279937744
    3. ' =' → logprob: -2.8255789279937744
    4. '(' → logprob: -4.2005791664123535
    5. '[' → logprob: -5.2005791664123535
    6. '.' → logprob: -5.3255791664123535
    7. 'e' → logprob: -5.4505791664123535
    8. ')' → logprob: -5.5755791664123535
    9. ':' → logprob: -6.4505791664123535
    10. ';' → logprob: -7.2005791664123535

Token 4: ' map' (ID: 4014)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.9979758858680725
    2. 'np' → logprob: -1.3729758262634277
    3. ' ' → logprob: -2.7479758262634277
    4. 'torch' → logprob: -2.7479758262634277
    5. ' torch' → logprob: -2.8729758262634277
    6. ' tf' → logprob: -3.7479758262634277
    7. '10' → logprob: -3.9979758262634277
    8. '0' → logprob: -4.247975826263428
    9. '[]' → logprob: -4.372975826263428
    10. ' H' → logprob: -4.497975826263428

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3058184087276459
    2. '(int' → logprob: -1.8058184385299683
    3. '(lambda' → logprob: -2.6808183193206787
    4. '<|end|>' → logprob: -3.8058183193206787
    5. '(str' → logprob: -5.680818557739258
    6. '```' → logprob: -7.055818557739258
    7. '(input' → logprob: -7.305818557739258
    8. 'int' → logprob: -7.305818557739258
    9. ')' → logprob: -8.055818557739258
    10. '[int' → logprob: -8.180818557739258

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3114353120326996
    2. ')' → logprob: -1.561435341835022
    3. 'input' → logprob: -2.9364352226257324
    4. ',input' → logprob: -6.436435222625732
    5. '(' → logprob: -6.686435222625732
    6. ' input' → logprob: -7.311435222625732
    7. ',' → logprob: -7.436435222625732
    8. '`)' → logprob: -8.31143569946289
    9. '=input' → logprob: -9.56143569946289
    10. '```' → logprob: -9.93643569946289

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5760773420333862
    2. ' input' → logprob: -0.8260773420333862
    3. '(input' → logprob: -8.951077461242676
    4. ',input' → logprob: -12.326077461242676
    5. ')' → logprob: -12.826077461242676
    6. '=input' → logprob: -14.451077461242676
    7. '[input' → logprob: -15.951077461242676
    8. '<input' → logprob: -16.07607650756836
    9. '	input' → logprob: -16.32607650756836
    10. ' )' → logprob: -16.45107650756836

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13888002932071686
    2. '())' → logprob: -2.3888800144195557
    3. '(' → logprob: -4.013880252838135
    4. '().' → logprob: -4.763880252838135
    5. '('' → logprob: -5.138880252838135
    6. ')' → logprob: -6.138880252838135
    7. '());' → logprob: -7.388880252838135
    8. '(()' → logprob: -7.763880252838135
    9. '`()' → logprob: -7.763880252838135
    10. '(),' → logprob: -8.513879776000977

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002453662164043635
    2. 'strip' → logprob: -8.375245094299316
    3. 'rstrip' → logprob: -11.500245094299316
    4. ')' → logprob: -13.000245094299316
    5. ' split' → logprob: -13.500245094299316
    6. '(split' → logprob: -14.750245094299316
    7. 'read' → logprob: -14.875245094299316
    8. '```' → logprob: -16.500246047973633
    9. 'replace' → logprob: -16.750246047973633
    10. 'spl' → logprob: -17.000246047973633

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11016733944416046
    2. '())' → logprob: -2.3601672649383545
    3. '))' → logprob: -4.735167503356934
    4. '()' → logprob: -7.110167503356934
    5. '`)' → logprob: -9.110167503356934
    6. '()))' → logprob: -9.110167503356934
    7. '(' → logprob: -9.860167503356934
    8. ')`' → logprob: -11.485167503356934
    9. ' )' → logprob: -12.235167503356934
    10. '')' → logprob: -12.735167503356934

Token 11: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.6917262077331543
    2. 'x' → logprob: -2.1917262077331543
    3. 'n' → logprob: -2.4417262077331543
    4. 's' → logprob: -2.4417262077331543
    5. 'for' → logprob: -2.4417262077331543
    6. '\n' → logprob: -2.5667262077331543
    7. '`' → logprob: -2.9417262077331543
    8. 'a' → logprob: -3.1917262077331543
    9. '#' → logprob: -3.5667262077331543
    10. '```' → logprob: -3.5667262077331543

Token 12: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004271004581823945
    2. '('' → logprob: -8.12542724609375
    3. '("("' → logprob: -9.75042724609375
    4. '(H' → logprob: -10.37542724609375
    5. '((' → logprob: -10.87542724609375
    6. '()' → logprob: -11.87542724609375
    7. '(A' → logprob: -13.25042724609375
    8. '(
' → logprob: -13.25042724609375
    9. '("' → logprob: -13.75042724609375
    10. '(f' → logprob: -13.75042724609375

Token 13: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.11758382618427277
    2. 'A' → logprob: -2.492583751678467
    3. 'min' → logprob: -4.742583751678467
    4. '2' → logprob: -5.617583751678467
    5. 'max' → logprob: -5.867583751678467
    6. '(' → logprob: -5.867583751678467
    7. '(H' → logprob: -5.992583751678467
    8. 'abs' → logprob: -6.367583751678467
    9. '(A' → logprob: -6.492583751678467
    10. '(min' → logprob: -6.992583751678467

Token 14: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5254149436950684
    2. '+' → logprob: -1.5254149436950684
    3. ' -' → logprob: -2.0254149436950684
    4. '-A' → logprob: -3.6504149436950684
    5. '*' → logprob: -3.7754149436950684
    6. ' +' → logprob: -4.775414943695068
    7. '+A' → logprob: -7.525414943695068
    8. '>' → logprob: -7.775414943695068
    9. '//' → logprob: -8.525415420532227
    10. ' *' → logprob: -8.650415420532227

Token 15: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.22701160609722137
    2. 'A' → logprob: -1.6020115613937378
    3. ' (' → logprob: -7.602011680603027
    4. '1' → logprob: -7.727011680603027
    5. ' ' → logprob: -7.977011680603027
    6. '(A' → logprob: -8.477011680603027
    7. '(' → logprob: -9.852011680603027
    8. '2' → logprob: -11.727011680603027
    9. ' -' → logprob: -11.727011680603027
    10. '3' → logprob: -12.602011680603027

Token 16: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0974678099155426
    2. '-' → logprob: -2.9724678993225098
    3. ' -' → logprob: -3.2224678993225098
    4. ' )' → logprob: -7.22246789932251
    5. ')%' → logprob: -7.84746789932251
    6. '+' → logprob: -8.722467422485352
    7. '%' → logprob: -8.847467422485352
    8. '))' → logprob: -8.972467422485352
    9. ')//' → logprob: -9.097467422485352
    10. '//' → logprob: -9.597467422485352

Token 17: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005332658998668194
    2. ' ' → logprob: -5.2553324699401855
    3. '2' → logprob: -9.380332946777344
    4. ')' → logprob: -11.380332946777344
    5. '3' → logprob: -13.630332946777344
    6. '-' → logprob: -14.380332946777344
    7. '0' → logprob: -15.692832946777344
    8. '10' → logprob: -15.942832946777344
    9. '4' → logprob: -16.380332946777344
    10. ' )' → logprob: -16.442832946777344

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013405199570115656
    2. '2' → logprob: -9.500134468078613
    3. ' ' → logprob: -9.750134468078613
    4. ')' → logprob: -14.625134468078613
    5. '3' → logprob: -16.125133514404297
    6. '-' → logprob: -16.500133514404297
    7. '   ' → logprob: -17.312633514404297
    8. '0' → logprob: -17.625133514404297
    9. '(' → logprob: -17.750133514404297
    10. '```' → logprob: -17.812633514404297

Token 19: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021119550801813602
    2. ')//' → logprob: -6.252111911773682
    3. ' )' → logprob: -8.62711238861084
    4. '//' → logprob: -12.75211238861084
    5. ' //' → logprob: -14.12711238861084
    6. '）' → logprob: -16.002111434936523
    7. ')#' → logprob: -16.752111434936523
    8. ')
' → logprob: -17.252111434936523
    9. '")' → logprob: -17.252111434936523
    10. '`)' → logprob: -17.377111434936523

Token 20: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046978481113910675
    2. ')//' → logprob: -3.54697847366333
    3. '//' → logprob: -4.17197847366333
    4. ' //' → logprob: -6.54697847366333
    5. ' )' → logprob: -8.546978950500488
    6. '```' → logprob: -11.296978950500488
    7. '`' → logprob: -11.671978950500488
    8. '#' → logprob: -13.046978950500488
    9. ' ' → logprob: -14.171978950500488
    10. ']' → logprob: -14.171978950500488

Token 21: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16022513806819916
    2. ' A' → logprob: -1.9102251529693604
    3. ' ' → logprob: -14.035224914550781
    4. '  ' → logprob: -16.03522491455078
    5. '	A' → logprob: -16.53522491455078
    6. '   ' → logprob: -17.41022491455078
    7. '>A' → logprob: -18.16022491455078
    8. 'a' → logprob: -19.28522491455078
    9. '```' → logprob: -19.78522491455078
    10. 'B' → logprob: -19.78522491455078

Token 22: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. '))' → logprob: -12.875003814697266
    3. '`)' → logprob: -14.375003814697266
    4. ' )' → logprob: -15.500003814697266
    5. ')`' → logprob: -16.125003814697266
    6. '')' → logprob: -16.625003814697266
    7. '```' → logprob: -16.875003814697266
    8. '）' → logprob: -17.375003814697266
    9. '*' → logprob: -17.375003814697266
    10. '#' → logprob: -17.375003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 20
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 17
Précision stricte (1ère position): 30.00%
Précision adaptée (1ère position): 30.00%
Précision (top 10): 85.00%
================================================================================
