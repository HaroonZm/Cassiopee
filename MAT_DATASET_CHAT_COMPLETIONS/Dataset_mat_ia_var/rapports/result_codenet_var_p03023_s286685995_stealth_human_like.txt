================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, on récupère N depuis l'utilisateur, classique
n = int(input()) # N ou n ? Peu importe je suppose

# Calcul de la somme des angles d'un polygone... si je me trompe pas
resultat = (n - 2) * 180 

print(resultat) # Voilà, ça imprime le résultat (en degrés je crois)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16662125289440155
    2. ' je' → logprob: -3.166621208190918
    3. '```' → logprob: -3.291621208190918
    4. '  ' → logprob: -3.416621208190918
    5. ' e' → logprob: -5.291621208190918
    6. ' t' → logprob: -5.291621208190918
    7. 'jour' → logprob: -5.541621208190918
    8. '`' → logprob: -5.666621208190918
    9. 'e' → logprob: -6.041621208190918
    10. ' ```' → logprob: -6.291621208190918

Token 4: ' récup' (ID: 62856)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3734365701675415
    2. '```' → logprob: -1.8734365701675415
    3. 'n' → logprob: -1.9984365701675415
    4. 'ne' → logprob: -2.623436450958252
    5. 'u' → logprob: -2.748436450958252
    6. 't' → logprob: -2.873436450958252
    7. 'e' → logprob: -2.873436450958252
    8. ''' → logprob: -3.498436450958252
    9. ' ```' → logprob: -3.748436450958252
    10. '`' → logprob: -3.748436450958252

Token 5: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.0011380735086277127
    2. 'è' → logprob: -7.376138210296631
    3. '#' → logprob: -8.501137733459473
    4. 'èr' → logprob: -8.626137733459473
    5. 'ére' → logprob: -9.251137733459473
    6. 'érer' → logprob: -11.376137733459473
    7. '\' → logprob: -12.501137733459473
    8. 'ération' → logprob: -12.751137733459473
    9. 'č' → logprob: -13.001137733459473
    10. 'èra' → logprob: -13.126137733459473

Token 6: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11744287610054016
    2. '_' → logprob: -2.9924428462982178
    3. ' le' → logprob: -4.367443084716797
    4. ' ' → logprob: -4.492443084716797
    5. ' l' → logprob: -4.617443084716797
    6. ' la' → logprob: -5.242443084716797
    7. '```' → logprob: -5.492443084716797
    8. 'le' → logprob: -5.617443084716797
    9. 'l' → logprob: -5.617443084716797
    10. '  ' → logprob: -6.117443084716797

Token 7: ' depuis' (ID: 16277)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5154253840446472
    2. '```' → logprob: -1.890425443649292
    3. '=' → logprob: -2.015425443649292
    4. ' =' → logprob: -3.140425443649292
    5. ',' → logprob: -3.640425443649292
    6. '`' → logprob: -4.265425205230713
    7. 'u' → logprob: -4.765425205230713
    8. '#' → logprob: -5.265425205230713
    9. '.' → logprob: -5.765425205230713
    10. 'n' → logprob: -5.765425205230713

Token 8: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8183004856109619
    2. ' l' → logprob: -0.8183004856109619
    3. 'la' → logprob: -2.943300485610962
    4. ' la' → logprob: -3.443300485610962
    5. ' input' → logprob: -4.318300247192383
    6. ' ' → logprob: -5.568300247192383
    7. 'le' → logprob: -5.693300247192383
    8. 'une' → logprob: -6.318300247192383
    9. 'input' → logprob: -6.318300247192383
    10. ' une' → logprob: -6.693300247192383

Token 9: ''utilisateur' (ID: 140803)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8023950457572937
    2. ''utilisateur' → logprob: -1.4273951053619385
    3. '_' → logprob: -2.4273951053619385
    4. 'a' → logprob: -2.9273951053619385
    5. ''entrée' → logprob: -2.9273951053619385
    6. 'input' → logprob: -3.0523951053619385
    7. ' input' → logprob: -4.677394866943359
    8. 'entrée' → logprob: -4.802394866943359
    9. ''espace' → logprob: -5.052394866943359
    10. 'e' → logprob: -5.052394866943359

Token 10: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020764347165822983
    2. 'N' → logprob: -3.8957643508911133
    3. '`' → logprob: -9.645764350891113
    4. '\n' → logprob: -10.020764350891113
    5. 'user' → logprob: -10.270764350891113
    6. '```' → logprob: -10.895764350891113
    7. 'u' → logprob: -11.020764350891113
    8. '#' → logprob: -11.645764350891113
    9. '\' → logprob: -11.895764350891113
    10. '_' → logprob: -12.520764350891113

Token 11: ' classique' (ID: 76895)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0417475625872612
    2. ' n' → logprob: -3.791747570037842
    3. 'N' → logprob: -4.166747570037842
    4. ' N' → logprob: -6.041747570037842
    5. ' ' → logprob: -8.916747093200684
    6. ' ' → logprob: -9.541747093200684
    7. 'user' → logprob: -9.791747093200684
    8. 'input' → logprob: -10.416747093200684
    9. '```' → logprob: -10.666747093200684
    10. 'x' → logprob: -10.791747093200684

Token 12: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0027128576766699553
    2. 'N' → logprob: -6.127712726593018
    3. 'x' → logprob: -8.627713203430176
    4. '```' → logprob: -8.877713203430176
    5. 'i' → logprob: -10.127713203430176
    6. '#' → logprob: -10.252713203430176
    7. '\n' → logprob: -10.252713203430176
    8. 'user' → logprob: -10.752713203430176
    9. '`' → logprob: -10.752713203430176
    10. 'u' → logprob: -12.002713203430176

Token 13: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.031146671622991562
    2. 'N' → logprob: -3.531146764755249
    3. '```' → logprob: -7.53114652633667
    4. '`' → logprob: -8.281147003173828
    5. '\n' → logprob: -8.906147003173828
    6. '_' → logprob: -8.906147003173828
    7. ' ' → logprob: -9.656147003173828
    8. '
' → logprob: -10.281147003173828
    9. 'i' → logprob: -10.406147003173828
    10. '\' → logprob: -10.531147003173828

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08400639146566391
    2. ' ' → logprob: -2.9590063095092773
    3. '=' → logprob: -3.5840063095092773
    4. '_' → logprob: -7.709006309509277
    5. '.' → logprob: -8.459006309509277
    6. '  ' → logprob: -9.709006309509277
    7. ',' → logprob: -9.709006309509277
    8. ')' → logprob: -10.084006309509277
    9. 'u' → logprob: -10.834006309509277
    10. 'space' → logprob: -11.209006309509277

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.022394873201847076
    2. ' input' → logprob: -4.39739465713501
    3. 'int' → logprob: -4.64739465713501
    4. 'input' → logprob: -8.397395133972168
    5. ' ' → logprob: -10.772395133972168
    6. '=int' → logprob: -13.147395133972168
    7. ' ' → logprob: -13.772395133972168
    8. ' float' → logprob: -16.27239418029785
    9. '<int' → logprob: -16.52239418029785
    10. '  ' → logprob: -16.52239418029785

Token 16: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.693254292011261
    2. '(input' → logprob: -0.693254292011261
    3. ' (' → logprob: -9.443254470825195
    4. 'input' → logprob: -11.068254470825195
    5. '(
' → logprob: -12.068254470825195
    6. ' ' → logprob: -13.443254470825195
    7. '(

' → logprob: -13.693254470825195
    8. '('' → logprob: -14.193254470825195
    9. '(user' → logprob: -14.318254470825195
    10. '()' → logprob: -14.318254470825195

Token 17: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0293527003377676
    2. '('' → logprob: -4.27935266494751
    3. '("("' → logprob: -4.52935266494751
    4. '()' → logprob: -5.65435266494751
    5. '("")' → logprob: -8.279353141784668
    6. '(""))' → logprob: -9.029353141784668
    7. '(
' → logprob: -9.154353141784668
    8. '("' → logprob: -9.654353141784668
    9. ')' → logprob: -9.654353141784668
    10. '(()' → logprob: -10.279353141784668

Token 18: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6236991882324219
    2. '+' → logprob: -2.248699188232422
    3. '<|end|>' → logprob: -2.373699188232422
    4. '#' → logprob: -2.498699188232422
    5. '*' → logprob: -2.998699188232422
    6. ' 
' → logprob: -3.498699188232422
    7. ')' → logprob: -3.623699188232422
    8. '
' → logprob: -3.873699188232422
    9. '\n' → logprob: -4.123699188232422
    10. 'n' → logprob: -4.623699188232422

Token 19: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004502161871641874
    2. ''' → logprob: -6.754502296447754
    3. ')' → logprob: -6.754502296447754
    4. '<|end|>' → logprob: -7.879502296447754
    5. '\' → logprob: -8.004502296447754
    6. '  ' → logprob: -8.254502296447754
    7. ' )' → logprob: -8.504502296447754
    8. '```' → logprob: -8.629502296447754
    9. '"' → logprob: -8.754502296447754
    10. ' \' → logprob: -8.879502296447754

Token 20: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7017554640769958
    2. ' ' → logprob: -1.0767555236816406
    3. '<|end|>' → logprob: -2.5767555236816406
    4. '+' → logprob: -3.5767555236816406
    5. '*' → logprob: -3.9517555236816406
    6. '#' → logprob: -4.701755523681641
    7. '```' → logprob: -5.326755523681641
    8. '<|end|>' → logprob: -5.451755523681641
    9. ' )' → logprob: -5.576755523681641
    10. '.' → logprob: -5.826755523681641

Token 21: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0409765243530273
    2. ' n' → logprob: -2.4159765243530273
    3. ' M' → logprob: -2.6659765243530273
    4. 'r' → logprob: -2.6659765243530273
    5. ' =' → logprob: -2.7909765243530273
    6. ' ```' → logprob: -3.7284765243530273
    7. ' p' → logprob: -4.040976524353027
    8. 'b' → logprob: -4.290976524353027
    9. ' un' → logprob: -4.290976524353027
    10. ' N' → logprob: -4.353476524353027

Token 22: ' ?' (ID: 1423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42512404918670654
    2. ' ' → logprob: -1.9251240491867065
    3. '+' → logprob: -2.675124168395996
    4. '<|end|>' → logprob: -3.175124168395996
    5. '*' → logprob: -3.925124168395996
    6. '=' → logprob: -4.425124168395996
    7. '
' → logprob: -4.550124168395996
    8. '#' → logprob: -4.550124168395996
    9. 'n' → logprob: -5.175124168395996
    10. '\' → logprob: -5.300124168395996

Token 23: ' Peu' (ID: 189054)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043482549488544464
    2. 'n' → logprob: -3.793482542037964
    3. '<|end|>' → logprob: -4.918482780456543
    4. '(' → logprob: -6.168482780456543
    5. ' ' → logprob: -6.168482780456543
    6. '#' → logprob: -6.168482780456543
    7. ' )' → logprob: -6.418482780456543
    8. '(n' → logprob: -6.668482780456543
    9. '\n' → logprob: -7.293482780456543
    10. ')n' → logprob: -7.543482780456543

Token 24: ' importe' (ID: 80493)
  Prédit: ' importe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' importe' → logprob: -0.047496646642684937
    2. 'plement' → logprob: -4.047496795654297
    3. 'importe' → logprob: -4.047496795654297
    4. ' de' → logprob: -6.047496795654297
    5. 'vent' → logprob: -6.297496795654297
    6. 't' → logprob: -6.672496795654297
    7. 'pler' → logprob: -6.922496795654297
    8. 'pliers' → logprob: -6.922496795654297
    9. ' t' → logprob: -7.547496795654297
    10. 'import' → logprob: -7.547496795654297

Token 25: ' je' (ID: 1264)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24368005990982056
    2. ' ' → logprob: -2.618680000305176
    3. '<|end|>' → logprob: -2.743680000305176
    4. ')' → logprob: -3.993680000305176
    5. '+' → logprob: -4.243680000305176
    6. '#' → logprob: -4.743680000305176
    7. '
' → logprob: -5.243680000305176
    8. ' 
' → logprob: -5.243680000305176
    9. '*' → logprob: -5.243680000305176
    10. '\n' → logprob: -5.618680000305176

Token 26: ' suppose' (ID: 35968)
  Prédit: ' pense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pense' → logprob: -0.4373365640640259
    2. 's' → logprob: -2.3123364448547363
    3. ' m' → logprob: -2.6873364448547363
    4. 'm' → logprob: -2.8123364448547363
    5. 't' → logprob: -3.4373364448547363
    6. 'n' → logprob: -3.5623364448547363
    7. ' t' → logprob: -4.812336444854736
    8. ' suppose' → logprob: -5.062336444854736
    9. ' n' → logprob: -5.062336444854736
    10. ' peux' → logprob: -5.187336444854736

Token 27: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' Calcul' (ID: 57243)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17454545199871063
    2. 'n' → logprob: -2.6745455265045166
    3. 's' → logprob: -4.0495452880859375
    4. ' for' → logprob: -4.2995452880859375
    5. '#' → logprob: -4.6745452880859375
    6. 'i' → logprob: -4.9245452880859375
    7. 'for' → logprob: -5.2995452880859375
    8. ' n' → logprob: -5.4245452880859375
    9. 'x' → logprob: -5.5495452880859375
    10. ' if' → logprob: -5.5495452880859375

Token 30: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15206310153007507
    2. ' ' → logprob: -2.5270631313323975
    3. 's' → logprob: -3.4020631313323975
    4. '=' → logprob: -5.027062892913818
    5. ' =' → logprob: -5.152062892913818
    6. 'n' → logprob: -5.527062892913818
    7. ' _' → logprob: -6.027062892913818
    8. ' n' → logprob: -6.027062892913818
    9. '<|end|>' → logprob: -7.027062892913818
    10. '_n' → logprob: -7.527062892913818

Token 31: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3475363552570343
    2. ' ' → logprob: -1.597536325454712
    3. ' factor' → logprob: -3.347536325454712
    4. ' factorial' → logprob: -4.222536563873291
    5. 'factor' → logprob: -4.347536563873291
    6. ' facteur' → logprob: -4.847536563873291
    7. ' l' → logprob: -5.222536563873291
    8. '_factor' → logprob: -5.472536563873291
    9. 's' → logprob: -6.222536563873291
    10. '_' → logprob: -6.597536563873291

Token 32: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.7050371766090393
    2. 's' → logprob: -1.3300371170043945
    3. ' factor' → logprob: -2.7050371170043945
    4. 'factor' → logprob: -2.8300371170043945
    5. 'f' → logprob: -3.5800371170043945
    6. ' f' → logprob: -3.9550371170043945
    7. '_' → logprob: -4.2050371170043945
    8. ' factorial' → logprob: -4.8300371170043945
    9. 'fact' → logprob: -4.9550371170043945
    10. '_factor' → logprob: -5.0800371170043945

Token 33: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7076515555381775
    2. ' ' → logprob: -1.2076516151428223
    3. 's' → logprob: -2.0826516151428223
    4. '(' → logprob: -3.0826516151428223
    5. ' =' → logprob: -4.707651615142822
    6. '=' → logprob: -5.457651615142822
    7. ' (' → logprob: -5.582651615142822
    8. '_total' → logprob: -6.082651615142822
    9. ')' → logprob: -6.207651615142822
    10. 'n' → logprob: -6.332651615142822

Token 34: ' angles' (ID: 43448)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7547140121459961
    2. 'i' → logprob: -1.254714012145996
    3. 'n' → logprob: -2.004714012145996
    4. ' nombres' → logprob: -3.129714012145996
    5. ' n' → logprob: -3.254714012145996
    6. ' ' → logprob: -4.004714012145996
    7. ' carr' → logprob: -6.254714012145996
    8. '1' → logprob: -7.129714012145996
    9. 's' → logprob: -7.379714012145996
    10. ' N' → logprob: -7.754714012145996

Token 35: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9795038104057312
    2. '_' → logprob: -1.354503870010376
    3. 's' → logprob: -1.354503870010376
    4. ' =' → logprob: -3.604503870010376
    5. '_total' → logprob: -3.979503870010376
    6. 'total' → logprob: -4.604503631591797
    7. 'angles' → logprob: -5.104503631591797
    8. ' d' → logprob: -5.229503631591797
    9. ' _' → logprob: -5.354503631591797
    10. '_angles' → logprob: -5.604503631591797

Token 36: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.16488473117351532
    2. ''' → logprob: -2.1648848056793213
    3. 'e' → logprob: -4.289884567260742
    4. ' un' → logprob: -4.789884567260742
    5. '’un' → logprob: -5.539884567260742
    6. 'un' → logprob: -5.914884567260742
    7. ' ' → logprob: -6.289884567260742
    8. 'a' → logprob: -6.914884567260742
    9. ' '' → logprob: -7.039884567260742
    10. '   ' → logprob: -7.039884567260742

Token 37: ' pol' (ID: 1823)
  Prédit: ' pol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pol' → logprob: -0.48712122440338135
    2. 'pol' → logprob: -0.9871212244033813
    3. ' polygon' → logprob: -5.237121105194092
    4. 'polygon' → logprob: -6.362121105194092
    5. 'n' → logprob: -6.737121105194092
    6. '_pol' → logprob: -6.987121105194092
    7. ' n' → logprob: -7.487121105194092
    8. ' triangle' → logprob: -7.612121105194092
    9. 'poly' → logprob: -7.737121105194092
    10. 'triangle' → logprob: -7.862121105194092

Token 38: 'yg' (ID: 8408)
  Prédit: 'yg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yg' → logprob: -0.0010317382402718067
    2. 'y' → logprob: -7.501031875610352
    3. 'ygon' → logprob: -7.876031875610352
    4. 'yd' → logprob: -11.376031875610352
    5. 'ygons' → logprob: -11.376031875610352
    6. '#' → logprob: -11.751031875610352
    7. 'YGON' → logprob: -11.876031875610352
    8. '```' → logprob: -12.126031875610352
    9. '</' → logprob: -12.251031875610352
    10. '   ' → logprob: -12.251031875610352

Token 39: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.2450135052204132
    2. 'e' → logprob: -2.745013475418091
    3. 'ône' → logprob: -2.995013475418091
    4. 'o' → logprob: -3.495013475418091
    5. 'on' → logprob: -4.37001371383667
    6. '```' → logprob: -4.49501371383667
    7. 'u' → logprob: -4.74501371383667
    8. 'ue' → logprob: -4.74501371383667
    9. 'ne' → logprob: -5.37001371383667
    10. 'оне' → logprob: -5.37001371383667

Token 40: '...' (ID: 1008)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47362220287323
    2. ' :' → logprob: -2.2236223220825195
    3. ' ' → logprob: -2.5986223220825195
    4. ':' → logprob: -2.8486223220825195
    5. 's' → logprob: -3.5986223220825195
    6. '_' → logprob: -3.9736223220825195
    7. 'conv' → logprob: -3.9736223220825195
    8. 'n' → logprob: -4.2236223220825195
    9. '=' → logprob: -4.9736223220825195
    10. ',' → logprob: -5.4736223220825195

Token 41: ' si' (ID: 1784)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6348220705986023
    2. ' n' → logprob: -2.384822130203247
    3. 'n' → logprob: -2.509822130203247
    4. ' (' → logprob: -2.884822130203247
    5. ' ' → logprob: -3.009822130203247
    6. '(' → logprob: -3.509822130203247
    7. 's' → logprob: -3.509822130203247
    8. '(n' → logprob: -3.884822130203247
    9. '<|end|>' → logprob: -4.134821891784668
    10. ',' → logprob: -4.509821891784668

Token 42: ' je' (ID: 1264)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12773647904396057
    2. 'n' → logprob: -2.1277365684509277
    3. ' on' → logprob: -8.12773609161377
    4. ' ' → logprob: -8.87773609161377
    5. 'on' → logprob: -9.12773609161377
    6. ' ' → logprob: -10.12773609161377
    7. 'N' → logprob: -10.25273609161377
    8. '>' → logprob: -10.56523609161377
    9. '(n' → logprob: -11.25273609161377
    10. '	n' → logprob: -11.25273609161377

Token 43: ' me' (ID: 668)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2416380643844604
    2. 'veux' → logprob: -1.6166380643844604
    3. 'n' → logprob: -1.9916380643844604
    4. ' veux' → logprob: -2.61663818359375
    5. ' n' → logprob: -3.24163818359375
    6. '#' → logprob: -3.49163818359375
    7. ' continue' → logprob: -3.86663818359375
    8. 'continue' → logprob: -4.36663818359375
    9. ' prends' → logprob: -4.36663818359375
    10. 'supp' → logprob: -4.49163818359375

Token 44: ' trom' (ID: 38558)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.7043290138244629
    2. 's' → logprob: -1.204329013824463
    3. 'r' → logprob: -1.954329013824463
    4. 'rap' → logprob: -4.204329013824463
    5. 'base' → logprob: -4.579329013824463
    6. 'ré' → logprob: -5.329329013824463
    7. 'f' → logprob: -5.454329013824463
    8. ' rappelle' → logprob: -5.829329013824463
    9. '```' → logprob: -5.829329013824463
    10. 't' → logprob: -5.954329013824463

Token 45: 'pe' (ID: 424)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.022258706390857697
    2. 'pe' → logprob: -4.772258758544922
    3. 'le' → logprob: -4.897258758544922
    4. 'ine' → logprob: -5.272258758544922
    5. 're' → logprob: -8.772258758544922
    6. '#' → logprob: -9.522258758544922
    7. '\' → logprob: -9.647258758544922
    8. 'ène' → logprob: -9.647258758544922
    9. 'ace' → logprob: -9.897258758544922
    10. 'a' → logprob: -10.272258758544922

Token 46: ' pas' (ID: 2173)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06006461754441261
    2. ' ' → logprob: -3.3100645542144775
    3. ' ,' → logprob: -4.935064792633057
    4. 'n' → logprob: -5.060064792633057
    5. ' pas' → logprob: -6.185064792633057
    6. ' n' → logprob: -6.435064792633057
    7. ' =' → logprob: -7.185064792633057
    8. 'pas' → logprob: -8.060064315795898
    9. 'sur' → logprob: -8.185064315795898
    10. '(' → logprob: -8.185064315795898

Token 47: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4151266813278198
    2. ' =' → logprob: -1.7901266813278198
    3. 'angle' → logprob: -3.4151268005371094
    4. ',' → logprob: -3.7901268005371094
    5. ' (' → logprob: -3.7901268005371094
    6. 's' → logprob: -3.7901268005371094
    7. 'n' → logprob: -4.540126800537109
    8. ' ,' → logprob: -4.915126800537109
    9. ' )' → logprob: -5.040126800537109
    10. '<|end|>' → logprob: -5.040126800537109

Token 48: 'result' (ID: 2521)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21822363138198853
    2. 'angle' → logprob: -2.0932235717773438
    3. 'angles' → logprob: -2.9682235717773438
    4. 'sum' → logprob: -5.343223571777344
    5. 'n' → logprob: -6.343223571777344
    6. ' ' → logprob: -6.343223571777344
    7. ' (' → logprob: -6.468223571777344
    8. ' =' → logprob: -6.718223571777344
    9. 'ang' → logprob: -6.968223571777344
    10. ' s' → logprob: -7.093223571777344

Token 49: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21933922171592712
    2. '=' → logprob: -1.7193392515182495
    3. '_' → logprob: -4.094339370727539
    4. 'a' → logprob: -7.344339370727539
    5. 'e' → logprob: -8.969339370727539
    6. 's' → logprob: -9.219339370727539
    7. ' ' → logprob: -9.844339370727539
    8. 'er' → logprob: -10.219339370727539
    9. 'at' → logprob: -10.594339370727539
    10. ' ' → logprob: -10.719339370727539

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0919533222913742
    2. '_' → logprob: -2.7169532775878906
    3. '=' → logprob: -3.8419532775878906
    4. 's' → logprob: -8.71695327758789
    5. '_space' → logprob: -9.96695327758789
    6. ' ' → logprob: -10.21695327758789
    7. '_s' → logprob: -11.21695327758789
    8. '_=' → logprob: -11.34195327758789
    9. ',' → logprob: -11.71695327758789
    10. 'space' → logprob: -12.21695327758789

Token 51: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.35438039898872375
    2. '(n' → logprob: -1.2293803691864014
    3. '180' → logprob: -5.4793806076049805
    4. '(' → logprob: -7.3543806076049805
    5. ' ' → logprob: -7.4793806076049805
    6. 'n' → logprob: -8.72938060760498
    7. '0' → logprob: -8.97938060760498
    8. '360' → logprob: -9.47938060760498
    9. ' n' → logprob: -9.72938060760498
    10. '2' → logprob: -9.85438060760498

Token 52: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002569289645180106
    2. '(n' → logprob: -8.375256538391113
    3. '180' → logprob: -11.625256538391113
    4. ' n' → logprob: -11.750256538391113
    5. '2' → logprob: -12.250256538391113
    6. ')n' → logprob: -13.250256538391113
    7. ')' → logprob: -13.625256538391113
    8. ' (' → logprob: -14.250256538391113
    9. '(' → logprob: -15.000256538391113
    10. ' ' → logprob: -15.125256538391113

Token 53: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005466524511575699
    2. '-' → logprob: -5.255466461181641
    3. ' ' → logprob: -8.38046646118164
    4. ' )' → logprob: -13.00546646118164
    5. '  ' → logprob: -14.63046646118164
    6. ')' → logprob: -14.88046646118164
    7. ' 

' → logprob: -15.88046646118164
    8. 's' → logprob: -16.00546646118164
    9. ' ' → logprob: -16.75546646118164
    10. '

' → logprob: -17.38046646118164

Token 54: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003924231859855354
    2. ')' → logprob: -8.375391960144043
    3. ' ' → logprob: -8.750391960144043
    4. '  ' → logprob: -13.875391960144043
    5. '   ' → logprob: -14.000391960144043
    6. '

' → logprob: -14.250391960144043
    7. '-' → logprob: -14.625391960144043
    8. ' )' → logprob: -15.500391960144043
    9. '	' → logprob: -15.875391960144043
    10. '3' → logprob: -16.37539291381836

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -11.000021934509277
    3. ')' → logprob: -12.125021934509277
    4. '

' → logprob: -15.750021934509277
    5. '   ' → logprob: -16.750022888183594
    6. '  ' → logprob: -16.750022888183594
    7. '3' → logprob: -17.375022888183594
    8. '-' → logprob: -18.250022888183594
    9. '	' → logprob: -18.250022888183594
    10. ' )' → logprob: -18.625022888183594

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009983435273170471
    2. ' )' → logprob: -4.634983539581299
    3. ' *' → logprob: -9.00998306274414
    4. '*' → logprob: -9.88498306274414
    5. ')*' → logprob: -9.88498306274414
    6. '*)' → logprob: -13.38498306274414
    7. ' ' → logprob: -13.88498306274414
    8. ' ' → logprob: -15.00998306274414
    9. ' *)' → logprob: -15.38498306274414
    10. '）' → logprob: -16.50998306274414

Token 57: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0036575528793036938
    2. '*' → logprob: -5.628657341003418
    3. ' ' → logprob: -10.253657341003418
    4. ')' → logprob: -10.878657341003418
    5. ' ' → logprob: -13.503657341003418
    6. ' )' → logprob: -14.003657341003418
    7. '*pi' → logprob: -15.003657341003418
    8. '0' → logprob: -15.878657341003418
    9. ' **' → logprob: -16.003658294677734
    10. '  ' → logprob: -16.628658294677734

Token 58: ' ' (ID: 220)
  Prédit: '180'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.029783355072140694
    2. ' ' → logprob: -3.529783248901367
    3. '1' → logprob: -10.404783248901367
    4. '90' → logprob: -13.404783248901367
    5. '18' → logprob: -14.529783248901367
    6. '179' → logprob: -15.779783248901367
    7. '  ' → logprob: -15.904783248901367
    8. ' ' → logprob: -17.154783248901367
    9. '360' → logprob: -17.279783248901367
    10. '0' → logprob: -17.404783248901367

Token 59: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.011134834960103035
    2. '1' → logprob: -4.511134624481201
    3. '18' → logprob: -9.38613510131836
    4. ' ' → logprob: -12.76113510131836
    5. '90' → logprob: -16.13613510131836
    6. '179' → logprob: -16.38613510131836
    7. '１８' → logprob: -17.26113510131836
    8. '181' → logprob: -17.51113510131836
    9. '9' → logprob: -17.76113510131836
    10. '```' → logprob: -18.26113510131836

Token 60: ' 

' (ID: 1202)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.058813076466321945
    2. '
' → logprob: -3.8088130950927734
    3. '<|end|>' → logprob: -4.058813095092773
    4. '#' → logprob: -4.683813095092773
    5. ')' → logprob: -5.183813095092773
    6. ' print' → logprob: -6.433813095092773
    7. '#print' → logprob: -7.933813095092773
    8. '\n' → logprob: -8.183813095092773
    9. '<|end|>' → logprob: -8.933813095092773
    10. ' ' → logprob: -9.308813095092773

Token 62: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.551721889991313e-05
    2. '(result' → logprob: -9.750065803527832
    3. '('' → logprob: -13.000065803527832
    4. '("("' → logprob: -13.250065803527832
    5. ' (' → logprob: -14.250065803527832
    6. '(

' → logprob: -14.625065803527832
    7. '((' → logprob: -14.750065803527832
    8. '()' → logprob: -15.125065803527832
    9. '(print' → logprob: -15.250065803527832
    10. '(
' → logprob: -15.500065803527832

Token 63: 'at' (ID: 266)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038443657103925943
    2. 'at' → logprob: -8.500384330749512
    3. 't' → logprob: -9.625384330749512
    4. 'a' → logprob: -9.875384330749512
    5. 'ats' → logprob: -10.375384330749512
    6. '))' → logprob: -11.375384330749512
    7. ')t' → logprob: -11.750384330749512
    8. 'ation' → logprob: -12.625384330749512
    9. ' )' → logprob: -13.250384330749512
    10. ')`' → logprob: -13.625384330749512

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.375000953674316
    3. '))' → logprob: -15.875000953674316
    4. ')`' → logprob: -16.875
    5. ')
' → logprob: -18.625
    6. ')#' → logprob: -19.875
    7. ')}' → logprob: -20.0
    8. ')**' → logprob: -20.375
    9. '),' → logprob: -21.125
    10. '`)' → logprob: -21.25

Token 65: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' Voilà' (ID: 149427)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' ça' (ID: 13590)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' imprime' (ID: 195564)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.1170477345585823
    2. ' nombre' → logprob: -3.3670477867126465
    3. ' total' → logprob: -3.6170477867126465
    4. 's' → logprob: -3.7420477867126465
    5. ' resultat' → logprob: -5.1170477867126465
    6. ' code' → logprob: -5.1170477867126465
    7. ' angle' → logprob: -5.8670477867126465
    8. 'rés' → logprob: -5.9920477867126465
    9. ' ' → logprob: -6.4920477867126465
    10. ' résumé' → logprob: -6.7420477867126465

Token 72: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.849109119386412e-06
    2. ' )' → logprob: -12.000009536743164
    3. '))' → logprob: -14.250009536743164
    4. ')
' → logprob: -14.750009536743164
    5. '#' → logprob: -14.750009536743164
    6. '}' → logprob: -15.000009536743164
    7. '`)' → logprob: -15.000009536743164
    8. '')' → logprob: -15.000009536743164
    9. '```' → logprob: -15.250009536743164
    10. ')`' → logprob: -15.375009536743164

Token 74: ' degrés' (ID: 195297)
  Prédit: ' degrés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degrés' → logprob: -0.7638715505599976
    2. ' ' → logprob: -1.1388715505599976
    3. 'de' → logprob: -2.638871669769287
    4. '°' → logprob: -2.763871669769287
    5. ' degré' → logprob: -3.013871669769287
    6. ')' → logprob: -4.888871669769287
    7. ' degrees' → logprob: -5.013871669769287
    8. 'deg' → logprob: -5.388871669769287
    9. ' ' → logprob: -5.638871669769287
    10. 'degrees' → logprob: -5.638871669769287

Token 75: ' je' (ID: 1264)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ' )' → logprob: -12.625005722045898
    3. '#' → logprob: -14.125005722045898
    4. '))' → logprob: -15.125005722045898
    5. '')' → logprob: -15.250005722045898
    6. ')
' → logprob: -15.500005722045898
    7. ')#' → logprob: -15.625005722045898
    8. ')`' → logprob: -15.625005722045898
    9. '`)' → logprob: -15.875005722045898
    10. '!' → logprob: -16.3750057220459

Token 76: ' crois' (ID: 65485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007265020161867142
    2. ' suppose' → logprob: -5.382265090942383
    3. 'supp' → logprob: -6.882265090942383
    4. ').' → logprob: -7.257265090942383
    5. 's' → logprob: -7.632265090942383
    6. ' )' → logprob: -8.757265090942383
    7. ' pense' → logprob: -10.132265090942383
    8. ')s' → logprob: -10.132265090942383
    9. 'Supp' → logprob: -10.382265090942383
    10. '.' → logprob: -10.507265090942383

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ' )' → logprob: -12.750007629394531
    3. ')
' → logprob: -13.125007629394531
    4. '#' → logprob: -14.375007629394531
    5. '`)' → logprob: -15.000007629394531
    6. '))' → logprob: -15.625007629394531
    7. ')`' → logprob: -15.875007629394531
    8. '!)' → logprob: -15.875007629394531
    9. '!' → logprob: -16.00000762939453
    10. '')' → logprob: -16.12500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 75
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 32.00%
Précision adaptée (1ère position): 32.00%
Précision (top 10): 49.33%
================================================================================
