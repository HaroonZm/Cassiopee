================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
d = input().split()
for i in range(n):
    d[i] = int(d[i])

sum_d = 0
sum_dd = 0
for i in range(n):
    sum_d += d[i]
    sum_dd += d[i] * d[i]

result = (sum_d * sum_d - sum_dd) // 2
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'd' (ID: 67)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0629041194915771
    2. ' =' → logprob: -1.3129041194915771
    3. 'e' → logprob: -1.9379041194915771
    4. '=' → logprob: -2.687904119491577
    5. '[i' → logprob: -2.687904119491577
    6. 'i' → logprob: -2.812904119491577
    7. '.' → logprob: -4.437904357910156
    8. 'iv' → logprob: -4.937904357910156
    9. 'ef' → logprob: -5.437904357910156
    10. ')' → logprob: -6.187904357910156

Token 7: ' input' (ID: 3422)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.23647849261760712
    2. '{}' → logprob: -1.6114784479141235
    3. ' []' → logprob: -5.361478328704834
    4. ' ' → logprob: -5.986478328704834
    5. ' dict' → logprob: -7.236478328704834
    6. 'n' → logprob: -7.361478328704834
    7. 'dict' → logprob: -7.486478328704834
    8. ' {' → logprob: -7.986478328704834
    9. '{' → logprob: -8.111478805541992
    10. '0' → logprob: -8.611478805541992

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001894841087050736
    2. '('' → logprob: -6.876894950866699
    3. ''' → logprob: -7.751894950866699
    4. '(
' → logprob: -9.3768949508667
    5. '()' → logprob: -9.3768949508667
    6. ')' → logprob: -10.0018949508667
    7. '"' → logprob: -10.1268949508667
    8. '```' → logprob: -10.1268949508667
    9. '("("' → logprob: -10.1268949508667
    10. '`' → logprob: -10.3768949508667

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2522263824939728
    2. 'strip' → logprob: -1.5022263526916504
    3. 'replace' → logprob: -8.752226829528809
    4. 'lower' → logprob: -9.752226829528809
    5. 'rstrip' → logprob: -9.752226829528809
    6. 'isdigit' → logprob: -11.877226829528809
    7. 'spl' → logprob: -12.627226829528809
    8. 's' → logprob: -12.752226829528809
    9. ' split' → logprob: -13.002226829528809
    10. 'startswith' → logprob: -13.127226829528809

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01397496834397316
    2. '()' → logprob: -4.513975143432617
    3. '('' → logprob: -6.638975143432617
    4. '("("' → logprob: -6.638975143432617
    5. '(
' → logprob: -9.638975143432617
    6. '"' → logprob: -10.013975143432617
    7. '(

' → logprob: -10.138975143432617
    8. '("' → logprob: -10.263975143432617
    9. '((' → logprob: -10.388975143432617
    10. '(`' → logprob: -10.888975143432617

Token 11: 'for' (ID: 1938)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5609297752380371
    2. 'for' → logprob: -1.685929775238037
    3. 'c' → logprob: -2.185929775238037
    4. 's' → logprob: -3.435929775238037
    5. 'd' → logprob: -3.685929775238037
    6. 'x' → logprob: -4.560929775238037
    7. 'count' → logprob: -4.560929775238037
    8. 'result' → logprob: -4.685929775238037
    9. '[' → logprob: -4.685929775238037
    10. 'm' → logprob: -4.810929775238037

Token 12: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.492245078086853
    2. ' i' → logprob: -0.992245078086853
    3. '_' → logprob: -4.742245197296143
    4. 'i' → logprob: -4.867245197296143
    5. ' _' → logprob: -7.367245197296143
    6. '  ' → logprob: -7.617245197296143
    7. ' ‌' → logprob: -8.992244720458984
    8. ' n' → logprob: -9.242244720458984
    9. ' ' → logprob: -10.242244720458984
    10. ' x' → logprob: -10.617244720458984

Token 13: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7965089678764343
    2. ' in' → logprob: -0.7965089678764343
    3. 'n' → logprob: -2.546509027481079
    4. ' ' → logprob: -4.2965087890625
    5. ' n' → logprob: -5.7965087890625
    6. '_' → logprob: -6.4215087890625
    7. '  ' → logprob: -7.1715087890625
    8. '```' → logprob: -9.1715087890625
    9. ',' → logprob: -9.5465087890625
    10. ')' → logprob: -9.5465087890625

Token 14: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3140176236629486
    2. ' range' → logprob: -1.314017653465271
    3. 'd' → logprob: -7.6890177726745605
    4. ' d' → logprob: -8.189017295837402
    5. 'n' → logprob: -11.439017295837402
    6. ' n' → logprob: -12.564017295837402
    7. ' ' → logprob: -13.314017295837402
    8. '(range' → logprob: -13.439017295837402
    9. '	range' → logprob: -13.689017295837402
    10. ' xrange' → logprob: -14.814017295837402

Token 15: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011106183752417564
    2. '(n' → logprob: -4.511106014251709
    3. '(len' → logprob: -10.136106491088867
    4. ' (' → logprob: -11.261106491088867
    5. '(
' → logprob: -12.761106491088867
    6. '(range' → logprob: -14.261106491088867
    7. '(i' → logprob: -14.386106491088867
    8. '(

' → logprob: -14.511106491088867
    9. '()' → logprob: -15.261106491088867
    10. '((' → logprob: -15.636106491088867

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1611301302909851
    2. ')' → logprob: -1.9111301898956299
    3. '[' → logprob: -7.411129951477051
    4. '+' → logprob: -8.78612995147705
    5. ':' → logprob: -9.78612995147705
    6. '[i' → logprob: -10.41112995147705
    7. ')[' → logprob: -11.28612995147705
    8. '):
' → logprob: -11.41112995147705
    9. ' ):' → logprob: -12.03612995147705
    10. ' ' → logprob: -12.91112995147705

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15508124232292175
    2. ' d' → logprob: -2.655081272125244
    3. ' if' → logprob: -3.655081272125244
    4. 'd' → logprob: -4.030081272125244
    5. ' ' → logprob: -4.405081272125244
    6. '    ' → logprob: -4.780081272125244
    7. ' print' → logprob: -5.405081272125244
    8. '    
' → logprob: -6.905081272125244
    9. 'if' → logprob: -7.530081272125244
    10. 'print' → logprob: -7.780081272125244

Token 18: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.20920729637146
    2. 'd' (adapté à ' d') → logprob: -1.33420729637146
    3. 'print' → logprob: -1.70920729637146
    4. ' if' → logprob: -2.20920729637146
    5. 'if' → logprob: -2.45920729637146
    6. ' print' → logprob: -3.83420729637146
    7. ' d' → logprob: -4.084207534790039
    8. '    ' → logprob: -4.334207534790039
    9. ' ' → logprob: -5.334207534790039
    10. 'i' → logprob: -6.209207534790039

Token 19: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31375449895858765
    2. '[i' → logprob: -1.3137545585632324
    3. '[d' → logprob: -8.813754081726074
    4. '\[' → logprob: -8.813754081726074
    5. '[int' → logprob: -10.438754081726074
    6. '[]' → logprob: -10.438754081726074
    7. '```' → logprob: -10.688754081726074
    8. '[...]' → logprob: -10.938754081726074
    9. ' [' → logprob: -11.313754081726074
    10. '[I' → logprob: -11.563754081726074

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02865593507885933
    2. ')' → logprob: -3.903656005859375
    3. '])' → logprob: -5.528656005859375
    4. ' ]' → logprob: -6.403656005859375
    5. '].' → logprob: -7.278656005859375
    6. ']=' → logprob: -7.278656005859375
    7. '[' → logprob: -7.778656005859375
    8. '][' → logprob: -9.028656005859375
    9. ']==' → logprob: -9.028656005859375
    10. ')]' → logprob: -9.028656005859375

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7034957408905029
    2. '[' → logprob: -1.328495740890503
    3. '<|end|>' → logprob: -1.953495740890503
    4. ' =' → logprob: -3.578495740890503
    5. '+' → logprob: -3.703495740890503
    6. ')' → logprob: -3.828495740890503
    7. '+=' → logprob: -5.203495979309082
    8. ' +=' → logprob: -5.703495979309082
    9. '```' → logprob: -6.078495979309082
    10. ']' → logprob: -6.078495979309082

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006723302416503429
    2. ' int' → logprob: -5.006723403930664
    3. 'float' → logprob: -12.131723403930664
    4. 'd' → logprob: -14.131723403930664
    5. '(int' → logprob: -14.631723403930664
    6. '[int' → logprob: -15.006723403930664
    7. '   ' → logprob: -15.381723403930664
    8. '=int' → logprob: -15.756723403930664
    9. ' float' → logprob: -16.006723403930664
    10. ' ' → logprob: -16.256723403930664

Token 23: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06199166178703308
    2. '(d' → logprob: -2.8119916915893555
    3. '(
' → logprob: -12.186991691589355
    4. 'd' → logprob: -12.561991691589355
    5. '(

' → logprob: -12.686991691589355
    6. '((' → logprob: -12.811991691589355
    7. '('' → logprob: -12.936991691589355
    8. '(`' → logprob: -13.311991691589355
    9. ' (' → logprob: -13.811991691589355
    10. '("("' → logprob: -14.311991691589355

Token 24: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005381383933126926
    2. '[' → logprob: -5.3803815841674805
    3. ')' → logprob: -7.2553815841674805
    4. ' [' → logprob: -11.38038158416748
    5. ')[' → logprob: -11.38038158416748
    6. '[d' → logprob: -12.00538158416748
    7. ']' → logprob: -12.38038158416748
    8. '[I' → logprob: -12.38038158416748
    9. '[
' → logprob: -12.88038158416748
    10. '[n' → logprob: -13.00538158416748

Token 25: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09019668400287628
    2. '))' → logprob: -2.4651966094970703
    3. '])' → logprob: -6.71519660949707
    4. ')))' → logprob: -11.84019660949707
    5. ' )' → logprob: -11.84019660949707
    6. ')])' → logprob: -11.84019660949707
    7. ')]' → logprob: -12.09019660949707
    8. ']' → logprob: -12.21519660949707
    9. '})' → logprob: -12.96519660949707
    10. ')
' → logprob: -13.59019660949707

Token 26: 'sum' (ID: 12298)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9246496558189392
    2. 'sum' → logprob: -1.799649715423584
    3. 's' → logprob: -2.049649715423584
    4. 'd' → logprob: -2.299649715423584
    5. 'i' → logprob: -3.049649715423584
    6. ' ' → logprob: -3.674649715423584
    7. 'if' → logprob: -3.924649715423584
    8. 'max' → logprob: -4.049649715423584
    9. ' for' → logprob: -4.174649715423584
    10. 'n' → logprob: -4.299649715423584

Token 27: '_d' (ID: 1565)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00030948311905376613
    2. '(d' → logprob: -9.000309944152832
    3. '(sum' → logprob: -9.750309944152832
    4. ' (' → logprob: -10.125309944152832
    5. '_' → logprob: -10.500309944152832
    6. '<|end|>' → logprob: -10.500309944152832
    7. 's' → logprob: -11.875309944152832
    8. '[' → logprob: -12.000309944152832
    9. '()' → logprob: -12.500309944152832
    10. ')' → logprob: -12.625309944152832

Token 28: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01949259079992771
    2. '[' → logprob: -4.0194926261901855
    3. '+' → logprob: -7.7694926261901855
    4. '(sum' → logprob: -8.144492149353027
    5. '()' → logprob: -8.394492149353027
    6. '<|end|>' → logprob: -9.019492149353027
    7. '[:]' → logprob: -9.769492149353027
    8. ')' → logprob: -10.019492149353027
    9. '_' → logprob: -10.394492149353027
    10. '[]' → logprob: -10.894492149353027

Token 29: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5876882076263428
    2. ' ' → logprob: -1.5876882076263428
    3. ' sum' → logprob: -1.5876882076263428
    4. 'sum' → logprob: -3.3376882076263428
    5. ' d' → logprob: -10.337688446044922
    6. ' ' → logprob: -11.837688446044922
    7. '  ' → logprob: -11.962688446044922
    8. '(sum' → logprob: -11.962688446044922
    9. 'd' → logprob: -12.087688446044922
    10. '	sum' → logprob: -12.837688446044922

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0700509175658226
    2. 'sum' → logprob: -2.6950509548187256
    3. ' sum' → logprob: -9.570051193237305
    4. ' ' → logprob: -10.070051193237305
    5. 'len' → logprob: -14.320051193237305
    6. '(sum' → logprob: -14.445051193237305
    7. 'd' → logprob: -15.195051193237305
    8. '   ' → logprob: -15.445051193237305
    9. '```' → logprob: -15.570051193237305
    10. 'int' → logprob: -16.070051193237305

Token 31: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27386966347694397
    2. ' for' → logprob: -1.6488696336746216
    3. '<|end|>' → logprob: -3.398869752883911
    4. '
' → logprob: -4.898869514465332
    5. '+' → logprob: -5.773869514465332
    6. ' ' → logprob: -6.148869514465332
    7. ' 
' → logprob: -7.898869514465332
    8. '<|end|>' → logprob: -8.273869514465332
    9. '\n' → logprob: -9.023869514465332
    10. '  
' → logprob: -10.273869514465332

Token 32: 'sum' (ID: 12298)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014859511516988277
    2. ' for' → logprob: -4.264859676361084
    3. '
' → logprob: -8.014859199523926
    4. ' ' → logprob: -8.889859199523926
    5. '<|end|>' → logprob: -9.014859199523926
    6. ' 
' → logprob: -9.514859199523926
    7. 'i' → logprob: -11.264859199523926
    8. '```' → logprob: -12.764859199523926
    9. 'if' → logprob: -13.139859199523926
    10. 'n' → logprob: -13.264859199523926

Token 33: '_dd' (ID: 102571)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35022541880607605
    2. '_d' → logprob: -1.2252254486083984
    3. 'd' → logprob: -7.100225448608398
    4. '(' → logprob: -7.225225448608398
    5. '(d' → logprob: -9.600225448608398
    6. '_=' → logprob: -10.225225448608398
    7. '(_' → logprob: -10.975225448608398
    8. ' =' → logprob: -11.100225448608398
    9. '=' → logprob: -11.725225448608398
    10. ' ' → logprob: -11.975225448608398

Token 34: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.40111005306243896
    2. '[' → logprob: -2.1511101722717285
    3. '<|end|>' → logprob: -2.5261101722717285
    4. ' +=' → logprob: -3.1511101722717285
    5. ' +' → logprob: -3.4011101722717285
    6. ' =' → logprob: -3.7761101722717285
    7. '=' → logprob: -4.0261101722717285
    8. '+=' → logprob: -5.2761101722717285
    9. '[i' → logprob: -5.7761101722717285
    10. ' ' → logprob: -6.1511101722717285

Token 35: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3485483229160309
    2. '0' → logprob: -1.2235482931137085
    3. ' d' → logprob: -10.34854793548584
    4. 'd' → logprob: -10.47354793548584
    5. ' sum' → logprob: -10.84854793548584
    6. 'sum' → logprob: -11.72354793548584
    7. ' n' → logprob: -13.22354793548584
    8. '  ' → logprob: -13.28604793548584
    9. ' ' → logprob: -13.28604793548584
    10. 'n' → logprob: -13.34854793548584

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012238257564604282
    2. ' ' → logprob: -4.512238025665283
    3. 'sum' → logprob: -7.262238025665283
    4. 'd' → logprob: -8.387238502502441
    5. ' sum' → logprob: -9.012238502502441
    6. '+' → logprob: -10.012238502502441
    7. ' d' → logprob: -10.137238502502441
    8. 'int' → logprob: -10.637238502502441
    9. '=' → logprob: -12.949738502502441
    10. 'i' → logprob: -12.949738502502441

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7825478315353394
    2. 'for' → logprob: -0.7825478315353394
    3. ' for' → logprob: -2.532547950744629
    4. '\n' → logprob: -5.907547950744629
    5. '<|end|>' → logprob: -6.782547950744629
    6. ' 
' → logprob: -7.532547950744629
    7. '  
' → logprob: -7.657547950744629
    8. '
' → logprob: -8.282547950744629
    9. ' ' → logprob: -8.532547950744629
    10. '\' → logprob: -8.782547950744629

Token 38: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026258502155542374
    2. ' for' → logprob: -3.9012584686279297
    3. '
' → logprob: -5.27625846862793
    4. 'n' → logprob: -8.27625846862793
    5. '<|end|>' → logprob: -8.90125846862793
    6. 'd' → logprob: -9.77625846862793
    7. '\n' → logprob: -9.90125846862793
    8. ' 
' → logprob: -11.52625846862793
    9. '\' → logprob: -11.65125846862793
    10. '_' → logprob: -11.90125846862793

Token 39: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004837126471102238
    2. 'i' → logprob: -5.8798370361328125
    3. ' ' → logprob: -6.7548370361328125
    4. ' d' → logprob: -7.3798370361328125
    5. 'd' → logprob: -9.629837036132812
    6. '_' → logprob: -10.254837036132812
    7. ' range' → logprob: -10.754837036132812
    8. ' _' → logprob: -10.879837036132812
    9. ' ' → logprob: -11.129837036132812
    10. '  ' → logprob: -11.379837036132812

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013025980442762375
    2. 'in' → logprob: -4.638025760650635
    3. ' ' → logprob: -5.763025760650635
    4. '  ' → logprob: -10.138026237487793
    5. '<|end|>' → logprob: -10.638026237487793
    6. 'range' → logprob: -11.138026237487793
    7. ')' → logprob: -11.763026237487793
    8. '	in' → logprob: -12.388026237487793
    9. 'n' → logprob: -12.513026237487793
    10. ' range' → logprob: -12.638026237487793

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.016060762107372284
    2. 'range' → logprob: -4.141060829162598
    3. ' ' → logprob: -10.891060829162598
    4. ' n' → logprob: -12.891060829162598
    5. '	range' → logprob: -13.641060829162598
    6. '  ' → logprob: -14.016060829162598
    7. '(range' → logprob: -14.266060829162598
    8. 'n' → logprob: -14.516060829162598
    9. ')' → logprob: -14.766060829162598
    10. ' d' → logprob: -14.891060829162598

Token 42: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.26064765453338623
    2. '(' → logprob: -1.5106476545333862
    3. ' (' → logprob: -4.760647773742676
    4. ' n' → logprob: -9.510647773742676
    5. ' ' → logprob: -10.510647773742676
    6. '(len' → logprob: -11.760647773742676
    7. ')' → logprob: -12.760647773742676
    8. 'n' → logprob: -12.885647773742676
    9. '(s' → logprob: -13.260647773742676
    10. ' )' → logprob: -13.635647773742676

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008777545881457627
    2. ')' → logprob: -8.000877380371094
    3. ':' → logprob: -8.250877380371094
    4. '):
' → logprob: -8.500877380371094
    5. '+' → logprob: -10.250877380371094
    6. ' ):' → logprob: -10.250877380371094
    7. '-' → logprob: -12.375877380371094
    8. '   ' → logprob: -14.500877380371094
    9. '+:' → logprob: -14.875877380371094
    10. '**' → logprob: -15.250877380371094

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2059520184993744
    2. ' ' → logprob: -1.7059520483016968
    3. '    ' → logprob: -6.205952167510986
    4. '  ' → logprob: -7.205952167510986
    5. ' sum' → logprob: -7.580952167510986
    6. '<|end|>' → logprob: -8.580951690673828
    7. ' `' → logprob: -8.705951690673828
    8. 'd' → logprob: -9.080951690673828
    9. ' d' → logprob: -9.205951690673828
    10. '+' → logprob: -9.330951690673828

Token 45: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.05617282912135124
    2. 'sum' (adapté à ' sum') → logprob: -3.1811728477478027
    3. ' d' → logprob: -5.181172847747803
    4. ' ' → logprob: -5.806172847747803
    5. '   ' → logprob: -6.181172847747803
    6. 'd' → logprob: -6.806172847747803
    7. '    ' → logprob: -7.556172847747803
    8. '```' → logprob: -9.306172370910645
    9. ' ```' → logprob: -9.306172370910645
    10. '	sum' → logprob: -9.431172370910645

Token 46: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.1875571544806007e-05
    2. '_' → logprob: -11.875011444091797
    3. 'd' → logprob: -13.500011444091797
    4. ' _' → logprob: -13.875011444091797
    5. ')_' → logprob: -14.000011444091797
    6. '}_' → logprob: -14.875011444091797
    7. '```' → logprob: -14.875011444091797
    8. ' ' → logprob: -16.500011444091797
    9. '##_' → logprob: -16.750011444091797
    10. '(_' → logprob: -16.750011444091797

Token 47: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4262522757053375
    2. '+' → logprob: -1.5512522459030151
    3. '+=' → logprob: -2.0512523651123047
    4. ' +' → logprob: -5.051252365112305
    5. ']+=' → logprob: -11.051252365112305
    6. ')' → logprob: -11.176252365112305
    7. '<|end|>' → logprob: -11.301252365112305
    8. '+='' → logprob: -11.301252365112305
    9. '=' → logprob: -11.801252365112305
    10. ')+' → logprob: -12.426252365112305

Token 48: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.12694081664085388
    2. 'd' → logprob: -2.1269407272338867
    3. ' ' → logprob: -12.626940727233887
    4. '	d' → logprob: -13.001940727233887
    5. '   ' → logprob: -13.126940727233887
    6. 'int' → logprob: -13.251940727233887
    7. ' int' → logprob: -13.501940727233887
    8. ' ' → logprob: -14.751940727233887
    9. ')d' → logprob: -14.876940727233887
    10. ' i' → logprob: -15.001940727233887

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.100224569439888
    2. '[' → logprob: -2.350224494934082
    3. '[
' → logprob: -11.725224494934082
    4. ' [' → logprob: -12.725224494934082
    5. '[I' → logprob: -13.725224494934082
    6. '```' → logprob: -13.850224494934082
    7. '\[' → logprob: -14.100224494934082
    8. '[d' → logprob: -14.475224494934082
    9. '[j' → logprob: -14.475224494934082
    10. '[n' → logprob: -14.725224494934082

Token 50: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2020991056924686e-05
    2. ')
' → logprob: -11.000032424926758
    3. ' )' → logprob: -12.000032424926758
    4. '<|end|>' → logprob: -12.875032424926758
    5. ']' → logprob: -13.000032424926758
    6. '*' → logprob: -14.125032424926758
    7. '**' → logprob: -14.250032424926758
    8. ')**' → logprob: -14.500032424926758
    9. '+' → logprob: -15.125032424926758
    10. '   ' → logprob: -15.250032424926758

Token 51: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8332391381263733
    2. ' ' → logprob: -1.3332390785217285
    3. '   ' → logprob: -2.0832390785217285
    4. '<|end|>' → logprob: -2.2082390785217285
    5. ' 
' → logprob: -3.3332390785217285
    6. '
' → logprob: -4.3332390785217285
    7. '*' → logprob: -5.4582390785217285
    8. '    
' → logprob: -5.8332390785217285
    9. '  ' → logprob: -6.0832390785217285
    10. '  
' → logprob: -6.2082390785217285

Token 52: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.7999013066291809
    2. ' sum' → logprob: -1.2999012470245361
    3. '+' → logprob: -2.424901247024536
    4. 'd' → logprob: -2.424901247024536
    5. '   ' → logprob: -3.424901247024536
    6. ' d' → logprob: -3.549901247024536
    7. ' ' → logprob: -3.799901247024536
    8. '    ' → logprob: -4.924901485443115
    9. ' i' → logprob: -5.424901485443115
    10. 'i' → logprob: -6.799901485443115

Token 53: '_dd' (ID: 102571)
  Prédit: '_dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dd' → logprob: -0.0006139091565273702
    2. '_d' → logprob: -7.500613689422607
    3. '_' → logprob: -9.750614166259766
    4. 'dd' → logprob: -14.875614166259766
    5. '_db' → logprob: -15.000614166259766
    6. '_dw' → logprob: -15.250614166259766
    7. '__' → logprob: -15.250614166259766
    8. ' _' → logprob: -15.250614166259766
    9. '_dl' → logprob: -15.375614166259766
    10. '_dx' → logprob: -15.875614166259766

Token 54: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.006984249223023653
    2. '+=' → logprob: -5.006984233856201
    3. '[' → logprob: -9.13198471069336
    4. ' +' → logprob: -9.50698471069336
    5. '+' → logprob: -9.75698471069336
    6. ' ' → logprob: -11.75698471069336
    7. ']+=' → logprob: -11.88198471069336
    8. '<|end|>' → logprob: -12.38198471069336
    9. ' ' → logprob: -13.00698471069336
    10. '  ' → logprob: -13.38198471069336

Token 55: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10025400668382645
    2. 'd' → logprob: -2.3502540588378906
    3. '(d' → logprob: -10.85025405883789
    4. ' ' → logprob: -11.47525405883789
    5. '   ' → logprob: -11.97525405883789
    6. ' (' → logprob: -11.97525405883789
    7. '	d' → logprob: -13.72525405883789
    8. '(' → logprob: -13.97525405883789
    9. 'i' → logprob: -14.47525405883789
    10. ' i' → logprob: -14.47525405883789

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.690834273584187e-05
    2. '[' → logprob: -10.25003719329834
    3. ' [' → logprob: -14.62503719329834
    4. '[I' → logprob: -15.12503719329834
    5. '```' → logprob: -15.37503719329834
    6. '[j' → logprob: -16.250036239624023
    7. ''[' → logprob: -16.625036239624023
    8. '[ii' → logprob: -16.625036239624023
    9. 'i' → logprob: -16.750036239624023
    10. '\[' → logprob: -17.125036239624023

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013498765183612704
    2. ']*' → logprob: -6.626349925994873
    3. ' ]' → logprob: -11.376349449157715
    4. '**' → logprob: -12.876349449157715
    5. ']^' → logprob: -13.376349449157715
    6. '])' → logprob: -13.501349449157715
    7. '']' → logprob: -13.876349449157715
    8. '[i' → logprob: -13.876349449157715
    9. '2' → logprob: -14.001349449157715
    10. '`]' → logprob: -14.626349449157715

Token 58: ' *' (ID: 425)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.025481225922703743
    2. '*' → logprob: -5.150481224060059
    3. ' ' → logprob: -5.150481224060059
    4. '**' → logprob: -5.525481224060059
    5. '[' → logprob: -5.775481224060059
    6. ' *' → logprob: -6.025481224060059
    7. '*i' → logprob: -6.400481224060059
    8. '2' → logprob: -6.900481224060059
    9. 'i' → logprob: -7.525481224060059
    10. '   ' → logprob: -8.275481224060059

Token 59: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.52337247133255
    2. 'd' → logprob: -0.89837247133255
    3. ' i' → logprob: -9.398372650146484
    4. 'i' → logprob: -9.648372650146484
    5. '   ' → logprob: -9.773372650146484
    6. ' ' → logprob: -10.648372650146484
    7. '	d' → logprob: -11.398372650146484
    8. '  ' → logprob: -12.023372650146484
    9. ' ' → logprob: -13.648372650146484
    10. '2' → logprob: -14.148372650146484

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001443035143893212
    2. '[' → logprob: -8.875144004821777
    3. 'i' → logprob: -13.000144004821777
    4. '[
' → logprob: -14.625144004821777
    5. '[j' → logprob: -14.625144004821777
    6. '```' → logprob: -14.750144004821777
    7. ' [' → logprob: -14.875144004821777
    8. '[I' → logprob: -16.000144958496094
    9. ' i' → logprob: -16.625144958496094
    10. '(i' → logprob: -17.125144958496094

Token 61: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008691388182342052
    2. ']' → logprob: -4.758691310882568
    3. '])' → logprob: -9.883691787719727
    4. '[i' → logprob: -12.633691787719727
    5. ')]' → logprob: -12.758691787719727
    6. '[' → logprob: -13.008691787719727
    7. ' )' → logprob: -13.008691787719727
    8. '}' → logprob: -13.133691787719727
    9. ')
' → logprob: -13.133691787719727
    10. '）' → logprob: -13.258691787719727

Token 62: 'result' (ID: 2521)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mean' → logprob: -0.24850338697433472
    2. 'm' → logprob: -1.9985034465789795
    3. 'variance' → logprob: -3.8735034465789795
    4. 'x' → logprob: -4.2485032081604
    5. 'result' → logprob: -4.3735032081604
    6. 's' → logprob: -4.9985032081604
    7. 'if' → logprob: -5.2485032081604
    8. 'print' → logprob: -5.6235032081604
    9. 'sum' → logprob: -5.7485032081604
    10. 'n' → logprob: -5.9985032081604

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11522037535905838
    2. '=' → logprob: -2.240220308303833
    3. ' ' → logprob: -7.365220546722412
    4. '_' → logprob: -7.865220546722412
    5. 's' → logprob: -7.865220546722412
    6. '(' → logprob: -8.240220069885254
    7. '[' → logprob: -8.615220069885254
    8. ' +=' → logprob: -8.740220069885254
    9. '<|end|>' → logprob: -8.740220069885254
    10. ')' → logprob: -9.865220069885254

Token 64: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38465195894241333
    2. ' sum' → logprob: -1.8846518993377686
    3. '(sum' → logprob: -2.0096518993377686
    4. '(' → logprob: -4.009652137756348
    5. 'sum' → logprob: -5.009652137756348
    6. '(s' → logprob: -5.884652137756348
    7. ' int' → logprob: -6.009652137756348
    8. ' ((' → logprob: -7.759652137756348
    9. ' round' → logprob: -7.759652137756348
    10. ' ' → logprob: -8.009652137756348

Token 65: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02543380856513977
    2. ' sum' → logprob: -4.0254340171813965
    3. '(sum' → logprob: -5.9004340171813965
    4. 'n' → logprob: -5.9004340171813965
    5. '2' → logprob: -7.2754340171813965
    6. '(' → logprob: -8.275433540344238
    7. ' n' → logprob: -8.275433540344238
    8. ' (' → logprob: -8.525433540344238
    9. ')' → logprob: -8.900433540344238
    10. '(n' → logprob: -9.275433540344238

Token 66: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00026538874953985214
    2. '_' → logprob: -8.250265121459961
    3. '_dd' → logprob: -13.625265121459961
    4. ' _' → logprob: -13.750265121459961
    5. ')_' → logprob: -14.625265121459961
    6. 'd' → logprob: -15.250265121459961
    7. '_ds' → logprob: -15.750265121459961
    8. '_dx' → logprob: -15.875265121459961
    9. '_)' → logprob: -15.875265121459961
    10. ')' → logprob: -16.62526512145996

Token 67: ' *' (ID: 425)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.9722705483436584
    2. ')' → logprob: -1.2222704887390137
    3. ' *' → logprob: -1.5972704887390137
    4. ' -' → logprob: -2.7222704887390137
    5. ' +' → logprob: -3.9722704887390137
    6. '*' → logprob: -4.347270488739014
    7. ' /' → logprob: -4.722270488739014
    8. ' **' → logprob: -4.847270488739014
    9. '**' → logprob: -5.222270488739014
    10. ' ' → logprob: -5.847270488739014

Token 68: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2573339641094208
    2. 'sum' → logprob: -1.5073339939117432
    3. ')' → logprob: -5.632333755493164
    4. '2' → logprob: -7.007333755493164
    5. ' ' → logprob: -7.632333755493164
    6. ' )' → logprob: -8.507333755493164
    7. '(sum' → logprob: -9.132333755493164
    8. '	sum' → logprob: -10.007333755493164
    9. '=sum' → logprob: -11.757333755493164
    10. ' result' → logprob: -12.132333755493164

Token 69: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.010384174063801765
    2. '_' → logprob: -4.6353840827941895
    3. '_)' → logprob: -7.8853840827941895
    4. ')' → logprob: -9.260384559631348
    5. ')_' → logprob: -9.385384559631348
    6. 'd' → logprob: -10.135384559631348
    7. '_-' → logprob: -12.135384559631348
    8. ')d' → logprob: -12.385384559631348
    9. '_
' → logprob: -12.760384559631348
    10. '__' → logprob: -12.760384559631348

Token 70: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012951502576470375
    2. '-' → logprob: -4.637951374053955
    3. ')' → logprob: -5.887951374053955
    4. ' )' → logprob: -8.387951850891113
    5. ' ' → logprob: -8.637951850891113
    6. ')-(' → logprob: -13.012951850891113
    7. '-)' → logprob: -13.512951850891113
    8. ' /' → logprob: -13.762951850891113
    9. ' +' → logprob: -13.762951850891113
    10. '   ' → logprob: -13.887951850891113

Token 71: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.079134002327919
    2. ' sum' → logprob: -2.579133987426758
    3. ' n' → logprob: -9.329133987426758
    4. 'n' → logprob: -9.829133987426758
    5. '  ' → logprob: -10.329133987426758
    6. '	sum' → logprob: -10.829133987426758
    7. ' ' → logprob: -10.829133987426758
    8. '(sum' → logprob: -11.329133987426758
    9. '   ' → logprob: -11.704133987426758
    10. ')' → logprob: -11.829133987426758

Token 72: '_dd' (ID: 102571)
  Prédit: '_dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dd' → logprob: -0.001740508945658803
    2. '_d' → logprob: -6.376740455627441
    3. 'dd' → logprob: -10.626740455627441
    4. '_' → logprob: -12.001740455627441
    5. 'd' → logprob: -12.376740455627441
    6. '__' → logprob: -14.251740455627441
    7. '-dd' → logprob: -14.876740455627441
    8. '_ds' → logprob: -14.876740455627441
    9. '_cd' → logprob: -15.126740455627441
    10. '_dx' → logprob: -15.126740455627441

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030767060816287994
    2. ')//' → logprob: -6.378076553344727
    3. ' )' → logprob: -6.628076553344727
    4. ')/(' → logprob: -10.628076553344727
    5. ')/' → logprob: -11.253076553344727
    6. '//' → logprob: -12.253076553344727
    7. '`)' → logprob: -13.378076553344727
    8. '")' → logprob: -14.003076553344727
    9. ')
' → logprob: -14.128076553344727
    10. '')' → logprob: -14.253076553344727

Token 74: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.10088314116001129
    2. ' //' → logprob: -2.3508832454681396
    3. '#' → logprob: -8.100883483886719
    4. '<|end|>' → logprob: -8.850883483886719
    5. '
' → logprob: -9.850883483886719
    6. ')//' → logprob: -10.225883483886719
    7. ')' → logprob: -10.600883483886719
    8. '"' → logprob: -11.100883483886719
    9. '/' → logprob: -11.100883483886719
    10. ' ' → logprob: -11.475883483886719

Token 75: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '(' → logprob: -17.625019073486328
    4. '۲' → logprob: -17.750019073486328
    5. 'n' → logprob: -18.125019073486328
    6. '```' → logprob: -18.500019073486328
    7. '200' → logprob: -18.625019073486328
    8. '
' → logprob: -18.625019073486328
    9. '２' → logprob: -18.625019073486328
    10. '   ' → logprob: -19.125019073486328

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.625009536743164
    4. '(' → logprob: -18.000009536743164
    5. '２' → logprob: -19.000009536743164
    6. '```' → logprob: -19.000009536743164
    7. '۲' → logprob: -19.000009536743164
    8. '﻿' → logprob: -19.312509536743164
    9. '
' → logprob: -19.500009536743164
    10. '_' → logprob: -19.687509536743164

Token 77: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016213839408010244
    2. '
' → logprob: -6.501621246337891
    3. 'for' → logprob: -9.87662124633789
    4. ' print' → logprob: -10.00162124633789
    5. '<|end|>' → logprob: -11.62662124633789
    6. ')' → logprob: -12.50162124633789
    7. ')
' → logprob: -12.62662124633789
    8. '```' → logprob: -13.75162124633789
    9. '\n' → logprob: -13.87662124633789
    10. '  
' → logprob: -14.12662124633789

Token 78: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011331788846291602
    2. '
' → logprob: -9.375113487243652
    3. ' print' → logprob: -11.500113487243652
    4. 'for' → logprob: -11.625113487243652
    5. '\n' → logprob: -13.000113487243652
    6. '<|end|>' → logprob: -13.250113487243652
    7. '#' → logprob: -13.500113487243652
    8. ')' → logprob: -14.125113487243652
    9. '#print' → logprob: -14.250113487243652
    10. '```' → logprob: -14.375113487243652

Token 79: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1633177250623703
    2. '(result' → logprob: -1.9133176803588867
    3. '(sum' → logprob: -5.788317680358887
    4. '()' → logprob: -11.538317680358887
    5. '((' → logprob: -12.413317680358887
    6. ' (' → logprob: -12.538317680358887
    7. '("("' → logprob: -13.038317680358887
    8. '('' → logprob: -13.413317680358887
    9. 'result' → logprob: -13.538317680358887
    10. '(res' → logprob: -14.413317680358887

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.5
    3. ')`' → logprob: -16.875
    4. '))' → logprob: -17.5
    5. '`)' → logprob: -18.5
    6. ')
' → logprob: -18.75
    7. ')#' → logprob: -19.5
    8. '')' → logprob: -19.875
    9. '}' → logprob: -20.25
    10. '```' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 78
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 65
Précision stricte (1ère position): 48.72%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 83.33%
================================================================================
