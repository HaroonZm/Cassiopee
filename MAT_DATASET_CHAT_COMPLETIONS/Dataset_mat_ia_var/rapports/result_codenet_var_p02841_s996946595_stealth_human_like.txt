================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Je prends les deux dates, un peu à l'arrache :)
a, b = map(int, input().split())
c, d = map(int, input().split())

# Bon ici je compare juste les mois, ça devrait suffire
if a == c:
    print(0)
else:
    print(1)  # On veut 1 si les mois sont différents, logique non ?
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Je' (ID: 4678)
  → Token d'amorce (pas de prédiction)

Token 2: ' prends' (ID: 151723)
  → Token d'amorce (pas de prédiction)

Token 3: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20921359956264496
    2. ' ' → logprob: -2.3342134952545166
    3. ' un' → logprob: -3.9592134952545166
    4. ' une' → logprob: -4.209213733673096
    5. 'un' → logprob: -4.334213733673096
    6. 'une' → logprob: -4.459213733673096
    7. '_' → logprob: -4.834213733673096
    8. '  ' → logprob: -5.459213733673096
    9. ' soin' → logprob: -5.834213733673096
    10. '#' → logprob: -5.959213733673096

Token 4: ' deux' (ID: 10301)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.26984986662864685
    2. ' données' → logprob: -2.2698497772216797
    3. '#' → logprob: -2.3948497772216797
    4. ' #' → logprob: -5.01984977722168
    5. 'don' → logprob: -5.39484977722168
    6. ' ' → logprob: -5.76984977722168
    7. 'import' → logprob: -5.76984977722168
    8. '_d' → logprob: -5.89484977722168
    9. '_' → logprob: -6.01984977722168
    10. 'data' → logprob: -6.39484977722168

Token 5: ' dates' (ID: 15424)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0261460542678833
    2. '_' → logprob: -1.4011460542678833
    3. ' ' → logprob: -2.7761459350585938
    4. 's' → logprob: -3.1511459350585938
    5. 'é' → logprob: -3.1511459350585938
    6. '.' → logprob: -3.4011459350585938
    7. 'l' → logprob: -3.7761459350585938
    8. 'm' → logprob: -3.7761459350585938
    9. 'n' → logprob: -3.9011459350585938
    10. '-' → logprob: -4.151145935058594

Token 6: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.227967619895935
    2. ',' → logprob: -1.727967619895935
    3. ' ' → logprob: -1.977967619895935
    4. 's' → logprob: -2.3529677391052246
    5. 'd' → logprob: -2.7279677391052246
    6. ':' → logprob: -2.8529677391052246
    7. '.' → logprob: -2.8529677391052246
    8. 'e' → logprob: -3.2279677391052246
    9. '```' → logprob: -4.102967739105225
    10. ' ' → logprob: -4.602967739105225

Token 7: ' un' (ID: 537)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.6261352896690369
    2. 'et' → logprob: -2.0011353492736816
    3. ' puis' → logprob: -2.5011353492736816
    4. ' ' → logprob: -2.6261353492736816
    5. ',' → logprob: -3.1261353492736816
    6. 's' → logprob: -3.5011353492736816
    7. ' je' → logprob: -3.8761353492736816
    8. ' ' → logprob: -4.001135349273682
    9. ' les' → logprob: -5.001135349273682
    10. '```' → logprob: -5.126135349273682

Token 8: ' peu' (ID: 9235)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5181707739830017
    2. ' espace' → logprob: -1.3931708335876465
    3. 'es' → logprob: -2.5181708335876465
    4. ' e' → logprob: -4.0181708335876465
    5. 's' → logprob: -4.5181708335876465
    6. 'esp' → logprob: -5.1431708335876465
    7. ' d' → logprob: -5.1431708335876465
    8. ' interval' → logprob: -5.1431708335876465
    9. ' datetime' → logprob: -5.6431708335876465
    10. ' jour' → logprob: -6.0181708335876465

Token 9: ' à' (ID: 1221)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -1.515866994857788
    2. 'diff' → logprob: -1.515866994857788
    3. 'plus' → logprob: -2.140866994857788
    4. 'à' → logprob: -2.265866994857788
    5. 'pr' → logprob: -2.515866994857788
    6. 'comme' → logprob: -2.515866994857788
    7. 'd' → logprob: -2.890866994857788
    8. 'avant' → logprob: -3.515866994857788
    9. 'de' → logprob: -3.890866994857788
    10. '```' → logprob: -4.140867233276367

Token 10: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9027432203292847
    2. 'part' → logprob: -1.0277432203292847
    3. 'l' → logprob: -2.027743339538574
    4. '```' → logprob: -3.652743339538574
    5. 'jour' → logprob: -4.402743339538574
    6. 'ret' → logprob: -4.652743339538574
    7. 'diff' → logprob: -4.652743339538574
    8. 'pe' → logprob: -4.777743339538574
    9. 'cha' → logprob: -6.027743339538574
    10. 'comp' → logprob: -6.027743339538574

Token 11: ''arr' (ID: 49695)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.425918698310852
    2. 'extérieur' → logprob: -1.425918698310852
    3. 'éc' → logprob: -1.675918698310852
    4. 'aise' → logprob: -2.8009185791015625
    5. 'instant' → logprob: -2.9259185791015625
    6. 'ar' → logprob: -3.0509185791015625
    7. 'avance' → logprob: -3.8009185791015625
    8. 'int' → logprob: -4.1759185791015625
    9. 'ave' → logprob: -4.4259185791015625
    10. 'ancienne' → logprob: -4.5509185791015625

Token 12: 'ache' (ID: 2285)
  Prédit: 'êt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'êt' → logprob: -0.8077296018600464
    2. 'ondi' → logprob: -1.0577296018600464
    3. 'ivée' → logprob: -2.057729721069336
    4. 'ond' → logprob: -3.807729721069336
    5. 'ivé' → logprob: -4.557729721069336
    6. 'iv' → logprob: -4.807729721069336
    7. 'et' → logprob: -5.432729721069336
    8. 'ive' → logprob: -5.432729721069336
    9. 'ent' → logprob: -5.807729721069336
    10. 'ivi' → logprob: -5.807729721069336

Token 13: ' :)
' (ID: 57972)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2691061496734619
    2. '```' → logprob: -2.019106149673462
    3. '.' → logprob: -3.519106149673462
    4. '`' → logprob: -3.894106149673462
    5. ':' → logprob: -4.644105911254883
    6. 'e' → logprob: -4.644105911254883
    7. 's' → logprob: -5.269105911254883
    8. ' ' → logprob: -5.269105911254883
    9. ' ,' → logprob: -5.519105911254883
    10. '#' → logprob: -5.769105911254883

Token 14: 'a' (ID: 64)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1248936653137207
    2. '```' → logprob: -3.3748936653137207
    3. ',' → logprob: -3.9998936653137207
    4. ' ' → logprob: -4.124893665313721
    5. '`' → logprob: -4.624893665313721
    6. ''' → logprob: -5.124893665313721
    7. 'e' → logprob: -5.374893665313721
    8. ' ' → logprob: -5.499893665313721
    9. 'date' → logprob: -5.624893665313721
    10. '.' → logprob: -5.624893665313721

Token 15: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6814157962799072
    2. 'j' → logprob: -1.9314157962799072
    3. 'u' → logprob: -2.0564157962799072
    4. 'r' → logprob: -2.1814157962799072
    5. '=' → logprob: -3.1814157962799072
    6. 'm' → logprob: -3.5564157962799072
    7. 'd' → logprob: -4.806415557861328
    8. 'i' → logprob: -4.931415557861328
    9. 's' → logprob: -5.306415557861328
    10. ' ' → logprob: -5.556415557861328

Token 16: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3871011435985565
    2. ' b' → logprob: -1.137101173400879
    3. ' ' → logprob: -9.637101173400879
    4. 'a' → logprob: -9.887101173400879
    5. ' =' → logprob: -9.887101173400879
    6. '=' → logprob: -10.637101173400879
    7. ' a' → logprob: -11.512101173400879
    8. ' ' → logprob: -11.512101173400879
    9. '_' → logprob: -12.762101173400879
    10. '  ' → logprob: -13.512101173400879

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20151956379413605
    2. '=' → logprob: -1.7015196084976196
    3. ',' → logprob: -9.576519966125488
    4. ' ' → logprob: -11.326519966125488
    5. ')' → logprob: -11.451519966125488
    6. '[' → logprob: -12.951519966125488
    7. '_' → logprob: -13.076519966125488
    8. '.' → logprob: -13.326519966125488
    9. ' ,' → logprob: -13.576519966125488
    10. 's' → logprob: -14.451519966125488

Token 18: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4300893247127533
    2. ' datetime' → logprob: -1.3050893545150757
    3. 'input' → logprob: -3.055089235305786
    4. 'datetime' → logprob: -3.930089235305786
    5. ' map' → logprob: -5.555089473724365
    6. ' pd' → logprob: -6.680089473724365
    7. ' ' → logprob: -6.805089473724365
    8. '"' → logprob: -6.805089473724365
    9. ' "' → logprob: -7.180089473724365
    10. 'map' → logprob: -7.305089473724365

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6468062400817871
    2. '(' → logprob: -0.8968062400817871
    3. '(str' → logprob: -3.021806240081787
    4. '(lambda' → logprob: -4.021806240081787
    5. '(datetime' → logprob: -7.521806240081787
    6. '(
' → logprob: -7.521806240081787
    7. 'str' → logprob: -8.396806716918945
    8. 'int' → logprob: -9.396806716918945
    9. '(input' → logprob: -9.521806716918945
    10. '(date' → logprob: -9.771806716918945

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6591260433197021
    2. ')' → logprob: -0.7841260433197021
    3. 'input' → logprob: -4.159126281738281
    4. '(' → logprob: -5.034126281738281
    5. '('' → logprob: -5.784126281738281
    6. '("' → logprob: -8.284126281738281
    7. ',input' → logprob: -8.409126281738281
    8. ' input' → logprob: -9.159126281738281
    9. '```' → logprob: -9.409126281738281
    10. ' )' → logprob: -10.159126281738281

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05503416433930397
    2. ' input' → logprob: -2.9300341606140137
    3. ')' → logprob: -9.180034637451172
    4. '(input' → logprob: -10.305034637451172
    5. '```' → logprob: -12.680034637451172
    6. '[input' → logprob: -13.305034637451172
    7. ' )' → logprob: -13.430034637451172
    8. ' ' → logprob: -13.555034637451172
    9. '=input' → logprob: -13.555034637451172
    10. ',input' → logprob: -13.805034637451172

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005278465338051319
    2. '()' → logprob: -5.505278587341309
    3. '())' → logprob: -6.755278587341309
    4. '(' → logprob: -12.130278587341309
    5. '('' → logprob: -12.130278587341309
    6. '()))' → logprob: -12.505278587341309
    7. '("' → logprob: -12.630278587341309
    8. '('').' → logprob: -12.880278587341309
    9. ')' → logprob: -13.005278587341309
    10. '());' → logprob: -13.255278587341309

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.762356209335849e-05
    2. 'strip' → logprob: -10.25003719329834
    3. 'replace' → logprob: -13.75003719329834
    4. ' split' → logprob: -14.00003719329834
    5. 'rstrip' → logprob: -15.50003719329834
    6. 'spl' → logprob: -17.125038146972656
    7. '(split' → logprob: -18.125038146972656
    8. '```' → logprob: -18.250038146972656
    9. 's' → logprob: -18.500038146972656
    10. '.split' → logprob: -21.125038146972656

Token 24: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5702810287475586
    2. '())' → logprob: -0.9452810287475586
    3. '))' → logprob: -3.8202810287475586
    4. '()' → logprob: -4.695281028747559
    5. '('' → logprob: -4.945281028747559
    6. '(' → logprob: -5.070281028747559
    7. '()))' → logprob: -6.820281028747559
    8. '(','' → logprob: -8.945281028747559
    9. '')' → logprob: -9.070281028747559
    10. '`)' → logprob: -9.195281028747559

Token 25: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5964068174362183
    2. 'a' → logprob: -1.5964068174362183
    3. ' ' → logprob: -2.846406936645508
    4. ',' → logprob: -3.096406936645508
    5. '#' → logprob: -3.596406936645508
    6. 'print' → logprob: -4.346406936645508
    7. '
' → logprob: -4.471406936645508
    8. 'if' → logprob: -4.596406936645508
    9. '/' → logprob: -4.721406936645508
    10. '```' → logprob: -4.971406936645508

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032240916043519974
    2. ' =' → logprob: -3.657240867614746
    3. '=' → logprob: -5.407240867614746
    4. ' ,' → logprob: -7.032240867614746
    5. ',d' → logprob: -8.532240867614746
    6. ')' → logprob: -9.782240867614746
    7. 'd' → logprob: -10.032240867614746
    8. '.' → logprob: -10.532240867614746
    9. ',c' → logprob: -10.657240867614746
    10. 'import' → logprob: -10.657240867614746

Token 27: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.061972059309482574
    2. ' d' → logprob: -2.811972141265869
    3. ' ' → logprob: -12.561971664428711
    4. '=' → logprob: -15.186971664428711
    5. ' =' → logprob: -15.936971664428711
    6. '  ' → logprob: -16.18697166442871
    7. '	d' → logprob: -16.18697166442871
    8. ',' → logprob: -17.18697166442871
    9. ',d' → logprob: -17.18697166442871
    10. 'c' → logprob: -17.31197166442871

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16471590101718903
    2. ' =' → logprob: -1.9147158861160278
    3. ',' → logprob: -5.414715766906738
    4. ')' → logprob: -11.289715766906738
    5. '<|end|>' → logprob: -11.664715766906738
    6. ' ' → logprob: -12.789715766906738
    7. '<|end|>' → logprob: -13.164715766906738
    8. ' ,' → logprob: -13.289715766906738
    9. '=

' → logprob: -14.789715766906738
    10. ')=' → logprob: -15.164715766906738

Token 29: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.38687947392463684
    2. 'map' → logprob: -1.1368794441223145
    3. '(map' → logprob: -12.261879920959473
    4. 'input' → logprob: -13.011879920959473
    5. ' input' → logprob: -14.761879920959473
    6. '	map' → logprob: -14.886879920959473
    7. ' ' → logprob: -15.511879920959473
    8. 'int' → logprob: -16.386878967285156
    9. '.map' → logprob: -16.386878967285156
    10. ' ' → logprob: -16.761878967285156

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0026844448875635862
    2. '(' → logprob: -6.002684593200684
    3. '<int' → logprob: -8.752684593200684
    4. 'int' → logprob: -11.502684593200684
    5. '<|end|>' → logprob: -11.627684593200684
    6. ' (' → logprob: -11.877684593200684
    7. '=int' → logprob: -12.002684593200684
    8. '[int' → logprob: -12.002684593200684
    9. ']int' → logprob: -12.502684593200684
    10. ',int' → logprob: -13.127684593200684

Token 31: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08753879368305206
    2. '(),' → logprob: -2.962538719177246
    3. ',' → logprob: -3.462538719177246
    4. ',input' → logprob: -8.462538719177246
    5. '()' → logprob: -8.587538719177246
    6. '(input' → logprob: -8.962538719177246
    7. '.' → logprob: -9.587538719177246
    8. '(' → logprob: -9.962538719177246
    9. '()).' → logprob: -10.462538719177246
    10. '>().' → logprob: -10.712538719177246

Token 32: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.020364120602607727
    2. '(int' → logprob: -4.145364284515381
    3. ' int' → logprob: -5.645364284515381
    4. 'input' → logprob: -7.395364284515381
    5. '<int' → logprob: -9.770363807678223
    6. ' input' → logprob: -10.020363807678223
    7. '[int' → logprob: -10.145363807678223
    8. '(input' → logprob: -11.395363807678223
    9. '<|end|>' → logprob: -12.020363807678223
    10. '=int' → logprob: -12.145363807678223

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.7146746763028204e-05
    2. '()' → logprob: -10.25003719329834
    3. '(' → logprob: -13.87503719329834
    4. '()).' → logprob: -14.87503719329834
    5. '>().' → logprob: -16.125036239624023
    6. '.' → logprob: -16.125036239624023
    7. ' ().' → logprob: -16.625036239624023
    8. ').' → logprob: -17.125036239624023
    9. '().'' → logprob: -17.625036239624023
    10. ')' → logprob: -18.000036239624023

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. ')' → logprob: -14.375001907348633
    3. ' split' → logprob: -14.375001907348633
    4. 'spl' → logprob: -15.000001907348633
    5. ').' → logprob: -16.125001907348633
    6. '(split' → logprob: -17.125001907348633
    7. 'plit' → logprob: -17.375001907348633
    8. '.split' → logprob: -17.375001907348633
    9. 's' → logprob: -17.625001907348633
    10. '().' → logprob: -18.375001907348633

Token 35: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07709711045026779
    2. ')' → logprob: -2.952097177505493
    3. '()' → logprob: -3.827097177505493
    4. '()))' → logprob: -9.202096939086914
    5. '))' → logprob: -10.702096939086914
    6. '())
' → logprob: -10.702096939086914
    7. ' ())' → logprob: -10.952096939086914
    8. '().' → logprob: -11.952096939086914
    9. '();)' → logprob: -12.077096939086914
    10. ' )' → logprob: -12.577096939086914

Token 36: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.048855431377887726
    2. 'print' → logprob: -3.7988555431365967
    3. '
' → logprob: -4.548855304718018
    4. ' if' → logprob: -6.173855304718018
    5. 'result' → logprob: -6.423855304718018
    6. '#' → logprob: -6.673855304718018
    7. 'days' → logprob: -7.048855304718018
    8. 'from' → logprob: -7.048855304718018
    9. ',' → logprob: -7.298855304718018
    10. 'e' → logprob: -7.423855304718018

Token 37: ' Bon' (ID: 12658)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1304682493209839
    2. 'if' → logprob: -1.3804682493209839
    3. 'diff' → logprob: -1.7554682493209839
    4. 'print' → logprob: -2.5054683685302734
    5. 'total' → logprob: -3.5054683685302734
    6. 'duration' → logprob: -4.005468368530273
    7. 'res' → logprob: -4.130468368530273
    8. '#' → logprob: -4.130468368530273
    9. 'difference' → logprob: -4.380468368530273
    10. 'e' → logprob: -4.380468368530273

Token 38: ' ici' (ID: 27994)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.40306201577186584
    2. 'jours' → logprob: -2.028062105178833
    3. 'if' → logprob: -2.403062105178833
    4. ' if' → logprob: -3.278062105178833
    5. 'e' → logprob: -4.903061866760254
    6. ' =' → logprob: -5.028061866760254
    7. 'result' → logprob: -5.153061866760254
    8. ' ' → logprob: -5.778061866760254
    9. 'diff' → logprob: -5.778061866760254
    10. 's' → logprob: -5.903061866760254

Token 39: ' je' (ID: 1264)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.044963594526052475
    2. ',' → logprob: -4.169963359832764
    3. ' if' → logprob: -4.919963359832764
    4. 'je' → logprob: -5.544963359832764
    5. '#' → logprob: -5.669963359832764
    6. 'le' → logprob: -6.169963359832764
    7. 'si' → logprob: -6.794963359832764
    8. ':' → logprob: -6.919963359832764
    9. 'for' → logprob: -7.044963359832764
    10. 'c' → logprob: -7.044963359832764

Token 40: ' compare' (ID: 12221)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3999515175819397
    2. ' if' → logprob: -2.649951457977295
    3. 's' → logprob: -2.899951457977295
    4. 'f' → logprob: -3.149951457977295
    5. 'v' → logprob: -3.649951457977295
    6. '#' → logprob: -4.149951457977295
    7. 'vais' → logprob: -4.774951457977295
    8. 'print' → logprob: -4.899951457977295
    9. ' prends' → logprob: -4.899951457977295
    10. ' vais' → logprob: -4.899951457977295

Token 41: ' juste' (ID: 31553)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5630741119384766
    2. 'if' → logprob: -0.9380741119384766
    3. 'a' → logprob: -4.188074111938477
    4. ' (' → logprob: -4.313074111938477
    5. ' a' → logprob: -5.688074111938477
    6. '(a' → logprob: -5.688074111938477
    7. '(' → logprob: -6.563074111938477
    8. ' ' → logprob: -7.563074111938477
    9. ' les' → logprob: -8.188074111938477
    10. ')' → logprob: -8.313074111938477

Token 42: ' les' (ID: 1341)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2013766765594482
    2. ' les' → logprob: -1.3263766765594482
    3. 'if' → logprob: -1.4513766765594482
    4. 'a' → logprob: -2.3263766765594482
    5. 'les' → logprob: -2.8263766765594482
    6. ' a' → logprob: -4.201376914978027
    7. ' la' → logprob: -5.076376914978027
    8. '(a' → logprob: -5.201376914978027
    9. ' (' → logprob: -5.951376914978027
    10. 'le' → logprob: -6.201376914978027

Token 43: ' mois' (ID: 19924)
  Prédit: 'dates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dates' → logprob: -0.8301978707313538
    2. 'de' → logprob: -1.580197811126709
    3. 'jours' → logprob: -1.705197811126709
    4. '2' → logprob: -3.705197811126709
    5. ' dates' → logprob: -3.955197811126709
    6. 'a' → logprob: -4.205197811126709
    7. 'jour' → logprob: -4.330197811126709
    8. 'datetime' → logprob: -4.580197811126709
    9. ' jours' → logprob: -4.705197811126709
    10. '4' → logprob: -4.705197811126709

Token 44: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26639243960380554
    2. ' if' → logprob: -1.516392469406128
    3. '<|end|>' → logprob: -4.641392230987549
    4. ',' → logprob: -5.516392230987549
    5. ' ' → logprob: -8.516392707824707
    6. ')' → logprob: -8.891392707824707
    7. '<|end|>' → logprob: -9.516392707824707
    8. 's' → logprob: -10.266392707824707
    9. ' ,' → logprob: -10.516392707824707
    10. '```' → logprob: -10.641392707824707

Token 45: ' ça' (ID: 13590)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23252010345458984
    2. ' if' → logprob: -1.6075201034545898
    3. '<|end|>' → logprob: -5.85752010345459
    4. ' ' → logprob: -6.73252010345459
    5. ' and' → logprob: -7.73252010345459
    6. ')' → logprob: -8.10752010345459
    7. 'print' → logprob: -8.35752010345459
    8. ' but' → logprob: -8.48252010345459
    9. 's' → logprob: -8.73252010345459
    10. 'and' → logprob: -8.98252010345459

Token 46: ' devrait' (ID: 52773)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' suff' (ID: 9490)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.5073562860488892
    2. '<|end|>' → logprob: -1.8823562860488892
    3. ' >' → logprob: -2.3823561668395996
    4. ')' → logprob: -2.3823561668395996
    5. ' ' → logprob: -2.3823561668395996
    6. '>' → logprob: -3.0073561668395996
    7. ',' → logprob: -3.0073561668395996
    8. ' )' → logprob: -3.0073561668395996
    9. ' ==' → logprob: -3.3823561668395996
    10. ' ,' → logprob: -3.8823561668395996

Token 48: 'ire' (ID: 594)
  Prédit: 'icient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'icient' → logprob: -0.682957112789154
    2. 'isant' → logprob: -1.0579571723937988
    3. '#' → logprob: -3.682957172393799
    4. 'isent' → logprob: -3.682957172393799
    5. 'icients' → logprob: -3.807957172393799
    6. 'i' → logprob: -4.307957172393799
    7. ')' → logprob: -4.557957172393799
    8. 'ices' → logprob: -4.807957172393799
    9. 'it' → logprob: -5.182957172393799
    10. 'ice' → logprob: -5.432957172393799

Token 49: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.040439970791339874
    2. ' if' → logprob: -4.040440082550049
    3. '\n' → logprob: -4.165440082550049
    4. '<|end|>' → logprob: -6.290440082550049
    5. '
' → logprob: -6.415440082550049
    6. ',' → logprob: -7.290440082550049
    7. ')' → logprob: -7.790440082550049
    8. '```' → logprob: -7.790440082550049
    9. '\' → logprob: -8.29043960571289
    10. '#' → logprob: -8.41543960571289

Token 50: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003798415418714285
    2. 'print' → logprob: -5.628798484802246
    3. ' if' → logprob: -8.878798484802246
    4. '<|end|>' → logprob: -10.753798484802246
    5. '```' → logprob: -11.253798484802246
    6. 'result' → logprob: -12.128798484802246
    7. '\n' → logprob: -12.378798484802246
    8. 'months' → logprob: -12.753798484802246
    9. 'return' → logprob: -13.503798484802246
    10. 'for' → logprob: -14.003798484802246

Token 51: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1422642171382904
    2. ' b' → logprob: -2.2672641277313232
    3. ' (' → logprob: -4.017264366149902
    4. ' c' → logprob: -5.392264366149902
    5. 'a' → logprob: -5.517264366149902
    6. ' ' → logprob: -6.642264366149902
    7. 'b' → logprob: -7.642264366149902
    8. '(a' → logprob: -8.142264366149902
    9. '(' → logprob: -8.892264366149902
    10. '(b' → logprob: -9.642264366149902

Token 52: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.3586355447769165
    2. ' >' → logprob: -1.3586355447769165
    3. '>' → logprob: -1.9836355447769165
    4. '==' → logprob: -1.9836355447769165
    5. '<' → logprob: -2.233635425567627
    6. ' ==' → logprob: -2.358635425567627
    7. ' <=' → logprob: -5.108635425567627
    8. '<=' → logprob: -5.983635425567627
    9. '=' → logprob: -8.733635902404785
    10. ' >=' → logprob: -9.108635902404785

Token 53: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00020663968462031335
    2. ' c' → logprob: -9.12520694732666
    3. 'b' → logprob: -9.75020694732666
    4. '1' → logprob: -10.50020694732666
    5. '0' → logprob: -12.25020694732666
    6. ' ' → logprob: -13.00020694732666
    7. 'a' → logprob: -13.50020694732666
    8. '	c' → logprob: -14.00020694732666
    9. '7' → logprob: -14.75020694732666
    10. '2' → logprob: -15.31270694732666

Token 54: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23494069278240204
    2. ':' → logprob: -1.6099406480789185
    3. 'and' → logprob: -4.984940528869629
    4. ' :' → logprob: -5.984940528869629
    5. ' ' → logprob: -9.609940528869629
    6. ' ' → logprob: -10.609940528869629
    7. ' or' → logprob: -11.234940528869629
    8. ':
' → logprob: -12.359940528869629
    9. '==' → logprob: -12.859940528869629
    10. '<|end|>' → logprob: -12.984940528869629

Token 55: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6171813011169434
    2. '   ' → logprob: -0.8671813011169434
    3. ' print' → logprob: -4.242181301116943
    4. 'if' → logprob: -4.492181301116943
    5. ' ' → logprob: -4.992181301116943
    6. ' if' → logprob: -5.242181301116943
    7. ':' → logprob: -7.242181301116943
    8. '    ' → logprob: -7.617181301116943
    9. '  ' → logprob: -7.617181301116943
    10. '	print' → logprob: -7.867181301116943

Token 56: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03956343233585358
    2. 'if' → logprob: -3.2895634174346924
    3. ' print' → logprob: -7.0395636558532715
    4. ' if' → logprob: -8.039563179016113
    5. '   ' → logprob: -8.289563179016113
    6. ' ' → logprob: -11.164563179016113
    7. 'pass' → logprob: -11.164563179016113
    8. 'result' → logprob: -11.664563179016113
    9. 'answer' → logprob: -12.039563179016113
    10. 'for' → logprob: -12.164563179016113

Token 57: '(' (ID: 7)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.8740673065185547
    2. '(abs' → logprob: -1.1240673065185547
    3. '(' → logprob: -1.7490673065185547
    4. '(b' → logprob: -3.6240673065185547
    5. '(max' → logprob: -3.7490673065185547
    6. '(min' → logprob: -4.124067306518555
    7. '((' → logprob: -4.749067306518555
    8. '("' → logprob: -4.874067306518555
    9. 'abs' → logprob: -7.874067306518555
    10. '('' → logprob: -8.874067306518555

Token 58: '0' (ID: 15)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.36596551537513733
    2. 'max' → logprob: -1.990965485572815
    3. 'd' → logprob: -2.2409656047821045
    4. '"' → logprob: -3.8659656047821045
    5. 'b' → logprob: -4.490965366363525
    6. '0' → logprob: -4.740965366363525
    7. '"d' → logprob: -4.740965366363525
    8. 'min' → logprob: -5.240965366363525
    9. '1' → logprob: -5.615965366363525
    10. '(abs' → logprob: -6.490965366363525

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007985501433722675
    2. ' )' → logprob: -7.62579870223999
    3. ')
' → logprob: -8.875798225402832
    4. ' if' → logprob: -9.250798225402832
    5. ',' → logprob: -11.000798225402832
    6. 'if' → logprob: -11.250798225402832
    7. 'else' → logprob: -11.500798225402832
    8. '))' → logprob: -12.125798225402832
    9. 'elif' → logprob: -12.250798225402832
    10. ',)' → logprob: -12.375798225402832

Token 60: 'else' (ID: 2807)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4826086461544037
    2. 'else' → logprob: -0.9826086759567261
    3. '\n' → logprob: -6.232608795166016
    4. 'if' → logprob: -6.482608795166016
    5. ' else' → logprob: -6.482608795166016
    6. ' elif' → logprob: -6.732608795166016
    7. '
' → logprob: -7.607608795166016
    8. '   ' → logprob: -7.857608795166016
    9. '    
' → logprob: -8.232608795166016
    10. ')' → logprob: -8.482608795166016

Token 61: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5796791911125183
    2. ':' → logprob: -0.8296791911125183
    3. ' :' → logprob: -6.704679012298584
    4. '    ' → logprob: -7.079679012298584
    5. ':
' → logprob: -7.829679012298584
    6. ' ' → logprob: -8.079679489135742
    7. '1' → logprob: -8.454679489135742
    8. ' if' → logprob: -9.079679489135742
    9. '  ' → logprob: -9.204679489135742
    10. 'if' → logprob: -9.204679489135742

Token 62: '   ' (ID: 271)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2960275709629059
    2. '   ' → logprob: -2.046027660369873
    3. '1' → logprob: -2.671027660369873
    4. 'print' → logprob: -3.171027660369873
    5. 'max' → logprob: -4.921027660369873
    6. ' abs' → logprob: -5.421027660369873
    7. 'min' → logprob: -6.921027660369873
    8. ' ' → logprob: -7.421027660369873
    9. '(abs' → logprob: -7.921027660369873
    10. 'a' → logprob: -8.046027183532715

Token 63: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2184877246618271
    2. 'abs' → logprob: -1.7184877395629883
    3. '1' → logprob: -4.718487739562988
    4. 'max' → logprob: -5.343487739562988
    5. 'min' → logprob: -7.218487739562988
    6. ' print' → logprob: -7.343487739562988
    7. '   ' → logprob: -7.593487739562988
    8. 'b' → logprob: -8.218487739562988
    9. 'a' → logprob: -8.218487739562988
    10. 'if' → logprob: -8.468487739562988

Token 64: '(' (ID: 7)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.26117363572120667
    2. 'abs' → logprob: -2.011173725128174
    3. '(' → logprob: -2.386173725128174
    4. '(max' → logprob: -6.511173725128174
    5. '1' → logprob: -6.761173725128174
    6. '(a' → logprob: -7.261173725128174
    7. '((' → logprob: -8.636173248291016
    8. '(min' → logprob: -8.636173248291016
    9. ' abs' → logprob: -8.761173248291016
    10. 'max' → logprob: -9.761173248291016

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4225747585296631
    2. 'abs' → logprob: -1.172574758529663
    3. 'max' → logprob: -3.672574758529663
    4. 'min' → logprob: -5.297574996948242
    5. 'a' → logprob: -6.297574996948242
    6. 'b' → logprob: -7.297574996948242
    7. '(abs' → logprob: -7.547574996948242
    8. '12' → logprob: -7.672574996948242
    9. ' abs' → logprob: -8.422574996948242
    10. '(' → logprob: -8.922574996948242

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.500000953674316
    3. '))' → logprob: -14.875000953674316
    4. ')
' → logprob: -17.125001907348633
    5. ')`' → logprob: -17.500001907348633
    6. '`)' → logprob: -18.375001907348633
    7. '0' → logprob: -18.875001907348633
    8. '')' → logprob: -19.375001907348633
    9. ')")' → logprob: -19.375001907348633
    10. ')}' → logprob: -20.250001907348633

Token 67: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' veut' (ID: 41653)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.8759698867797852
    2. ' a' → logprob: -2.125969886779785
    3. 'n' → logprob: -2.250969886779785
    4. ' considère' → logprob: -2.375969886779785
    5. ' ne' → logprob: -3.125969886779785
    6. 'a' → logprob: -3.250969886779785
    7. ' n' → logprob: -3.250969886779785
    8. ' suppose' → logprob: -3.500969886779785
    9. ' ' → logprob: -3.625969886779785
    10. ' pourrait' → logprob: -3.750969886779785

Token 71: ' ' (ID: 220)
  Prédit: ' juste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' juste' → logprob: -2.1058456897735596
    2. ' savoir' → logprob: -2.3558456897735596
    3. 'just' → logprob: -2.8558456897735596
    4. ' compter' → logprob: -2.8558456897735596
    5. 'calcul' → logprob: -2.9808456897735596
    6. 'le' → logprob: -3.1058456897735596
    7. 'ind' → logprob: -3.1058456897735596
    8. ' ind' → logprob: -3.6058456897735596
    9. 'l' → logprob: -3.6058456897735596
    10. ' que' → logprob: -3.7308456897735596

Token 72: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.312304973602295
    2. 'le' → logprob: -1.687304973602295
    3. '1' → logprob: -2.187304973602295
    4. 'la' → logprob: -2.687304973602295
    5. 'just' → logprob: -3.437304973602295
    6. 's' → logprob: -3.562304973602295
    7. 'un' → logprob: -3.562304973602295
    8. 'l' → logprob: -3.562304973602295
    9. 'que' → logprob: -3.687304973602295
    10. 'une' → logprob: -3.812304973602295

Token 73: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6567928194999695
    2. ' les' → logprob: -1.5317928791046143
    3. ' a' → logprob: -2.2817928791046143
    4. 'les' → logprob: -2.9067928791046143
    5. ' le' → logprob: -3.5317928791046143
    6. ' c' → logprob: -4.281792640686035
    7. ' b' → logprob: -4.406792640686035
    8. 'le' → logprob: -4.531792640686035
    9. 'b' → logprob: -4.656792640686035
    10. 'c' → logprob: -5.156792640686035

Token 75: ' mois' (ID: 19924)
  Prédit: 'mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.6036412715911865
    2. 'dates' → logprob: -1.6036412715911865
    3. ' dates' → logprob: -1.9786412715911865
    4. ' mois' → logprob: -2.7286412715911865
    5. 'de' → logprob: -4.228641510009766
    6. 'a' → logprob: -4.478641510009766
    7. 'months' → logprob: -5.478641510009766
    8. 'm' → logprob: -5.728641510009766
    9. ' ' → logprob: -6.103641510009766
    10. ' deux' → logprob: -6.228641510009766

Token 76: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16099730134010315
    2. ' sont' → logprob: -2.6609973907470703
    3. 'diff' → logprob: -2.9109973907470703
    4. 'ne' → logprob: -4.28599739074707
    5. ' ne' → logprob: -5.16099739074707
    6. ' different' → logprob: -6.91099739074707
    7. 'different' → logprob: -6.91099739074707
    8. ' diff' → logprob: -7.03599739074707
    9. ' différent' → logprob: -8.03599739074707
    10. 'd' → logprob: -8.28599739074707

Token 77: ' différents' (ID: 36009)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.199261873960495
    2. ' différents' → logprob: -2.3242619037628174
    3. 'd' → logprob: -2.6992619037628174
    4. 'different' → logprob: -4.824261665344238
    5. ' different' → logprob: -5.199261665344238
    6. ' différent' → logprob: -7.449261665344238
    7. 'di' → logprob: -7.949261665344238
    8. ' diff' → logprob: -7.949261665344238
    9. ' différentes' → logprob: -8.699261665344238
    10. ' d' → logprob: -9.574261665344238

Token 78: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' logique' (ID: 115350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' non' (ID: 2893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' ?' (ID: 1423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 79
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 16.46%
Précision adaptée (1ère position): 18.99%
Précision (top 10): 54.43%
================================================================================
