================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
ans = 0
if n == 0:
    ans = 0
else:
    if n % 2 == 0:
        pwr = 10
        while pwr <= n:
            ans = ans + n // pwr
            pwr = pwr * 5
    else:
        ans = 0
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2073645442724228
    2. ')' → logprob: -1.707364559173584
    3. '()' → logprob: -5.457364559173584
    4. '())' → logprob: -7.082364559173584
    5. '(
' → logprob: -8.082364082336426
    6. '```' → logprob: -9.582364082336426
    7. '))' → logprob: -9.707364082336426
    8. '[' → logprob: -10.582364082336426
    9. '')' → logprob: -10.582364082336426
    10. '")' → logprob: -10.582364082336426

Token 5: 'ans' (ID: 616)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4422481060028076
    2. ' =' → logprob: -1.9422481060028076
    3. ' +=' → logprob: -2.6922481060028076
    4. '+' → logprob: -2.6922481060028076
    5. '[' → logprob: -3.4422481060028076
    6. '+=' → logprob: -3.4422481060028076
    7. '_' → logprob: -4.567248344421387
    8. ' ' → logprob: -6.442248344421387
    9. '*' → logprob: -7.692248344421387
    10. '.' → logprob: -7.817248344421387

Token 7: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36507436633110046
    2. ' ' → logprob: -1.7400743961334229
    3. ' n' → logprob: -2.615074396133423
    4. 'n' → logprob: -3.740074396133423
    5. '"' → logprob: -3.865074396133423
    6. ''' → logprob: -4.865074157714844
    7. ' "' → logprob: -6.365074157714844
    8. ' '' → logprob: -7.115074157714844
    9. '1' → logprob: -7.365074157714844
    10. ' []' → logprob: -7.740074157714844

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04906703159213066
    2. 'n' → logprob: -3.1740670204162598
    3. '"' → logprob: -5.92406702041626
    4. 'max' → logprob: -6.92406702041626
    5. ''' → logprob: -7.29906702041626
    6. '1' → logprob: -7.54906702041626
    7. 'sum' → logprob: -7.92406702041626
    8. ''n' → logprob: -8.424067497253418
    9. 'abs' → logprob: -9.049067497253418
    10. 'input' → logprob: -9.049067497253418

Token 9: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26114508509635925
    2. '
' → logprob: -1.5111451148986816
    3. '\n' → logprob: -5.136145114898682
    4. '```' → logprob: -7.011145114898682
    5. ' for' → logprob: -7.261145114898682
    6. '' → logprob: -7.511145114898682
    7. ' 
' → logprob: -7.886145114898682
    8. '\' → logprob: -8.011144638061523
    9. '  
' → logprob: -9.011144638061523
    10. 'i' → logprob: -10.136144638061523

Token 10: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09551540017127991
    2. '
' → logprob: -2.970515489578247
    3. '\n' → logprob: -3.470515489578247
    4. '```' → logprob: -5.470515251159668
    5. '\' → logprob: -5.970515251159668
    6. ' for' → logprob: -6.970515251159668
    7. '``' → logprob: -8.095515251159668
    8. ' 
' → logprob: -8.095515251159668
    9. '' → logprob: -9.595515251159668
    10. '  
' → logprob: -9.720515251159668

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.006453285459429026
    2. 'n' → logprob: -5.131453514099121
    3. ' ' → logprob: -7.881453514099121
    4. ' ' → logprob: -8.881453514099121
    5. ' not' → logprob: -12.881453514099121
    6. '_' → logprob: -14.131453514099121
    7. ' a' → logprob: -14.381453514099121
    8. ' (' → logprob: -14.506453514099121
    9. ' ' → logprob: -14.631453514099121
    10. '(n' → logprob: -14.881453514099121

Token 12: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07142437994480133
    2. '>' → logprob: -3.0714244842529297
    3. ' >=' → logprob: -4.69642448425293
    4. ' ' → logprob: -4.94642448425293
    5. ' ==' → logprob: -6.19642448425293
    6. ' %' → logprob: -6.57142448425293
    7. ' <' → logprob: -6.94642448425293
    8. '%' → logprob: -7.19642448425293
    9. ' <=' → logprob: -7.57142448425293
    10. '>=' → logprob: -8.57142448425293

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2953049838542938
    2. '0' → logprob: -1.7953050136566162
    3. '1' → logprob: -2.420305013656616
    4. '2' → logprob: -8.170305252075195
    5. '3' → logprob: -8.545305252075195
    6. '4' → logprob: -9.045305252075195
    7. '5' → logprob: -10.170305252075195
    8. '7' → logprob: -10.670305252075195
    9. '10' → logprob: -11.045305252075195
    10. '100' → logprob: -11.170305252075195

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5828524827957153
    2. ' ' → logprob: -1.2078524827957153
    3. '1' → logprob: -1.9578524827957153
    4. '2' → logprob: -7.332852363586426
    5. '3' → logprob: -7.957852363586426
    6. '4' → logprob: -8.582852363586426
    7. '7' → logprob: -8.582852363586426
    8. '5' → logprob: -9.332852363586426
    9. '10' → logprob: -9.957852363586426
    10. '100' → logprob: -9.957852363586426

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.141186450899113e-05
    2. ':
' → logprob: -11.375020980834961
    3. ' :' → logprob: -11.625020980834961
    4. ':return' → logprob: -15.000020980834961
    5. '):' → logprob: -15.625020980834961
    6. '：' → logprob: -16.37502098083496
    7. ':**' → logprob: -16.37502098083496
    8. ':

' → logprob: -17.25002098083496
    9. '':' → logprob: -17.25002098083496
    10. ':\' → logprob: -17.87502098083496

Token 16: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9310006499290466
    2. ' ' → logprob: -1.1810007095336914
    3. ' ans' → logprob: -1.5560007095336914
    4. '\' → logprob: -3.4310007095336914
    5. ' 
' → logprob: -4.181000709533691
    6. ' \' → logprob: -4.181000709533691
    7. '0' → logprob: -5.181000709533691
    8. '   ' → logprob: -5.306000709533691
    9. ''' → logprob: -6.431000709533691
    10. ' pass' → logprob: -6.556000709533691

Token 17: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.10231929272413254
    2. '\n' → logprob: -3.6023192405700684
    3. ' print' → logprob: -3.7273192405700684
    4. 'print' → logprob: -4.477319240570068
    5. ' ' → logprob: -4.727319240570068
    6. 'ans' (adapté à ' ans') → logprob: -4.727319240570068
    7. ' pass' → logprob: -4.852319240570068
    8. '   ' → logprob: -5.727319240570068
    9. '0' → logprob: -6.727319240570068
    10. '\' → logprob: -7.102319240570068

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2619413137435913
    2. ' +=' → logprob: -1.6369413137435913
    3. '=' → logprob: -3.386941432952881
    4. '+=' → logprob: -6.261941432952881
    5. ' ' → logprob: -9.636940956115723
    6. '+' → logprob: -10.386940956115723
    7. ' |=' → logprob: -10.761940956115723
    8. ' ==' → logprob: -11.136940956115723
    9. '<|end|>' → logprob: -12.761940956115723
    10. ')' → logprob: -13.261940956115723

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7255763411521912
    2. '1' → logprob: -0.9755763411521912
    3. '0' → logprob: -1.975576400756836
    4. ' n' → logprob: -9.350576400756836
    5. 'n' → logprob: -9.600576400756836
    6. '"' → logprob: -10.100576400756836
    7. ''' → logprob: -10.475576400756836
    8. ' True' → logprob: -10.850576400756836
    9. '   ' → logprob: -11.350576400756836
    10. '10' → logprob: -12.100576400756836

Token 20: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10625109076499939
    2. '0' → logprob: -2.3562510013580322
    3. ' ' → logprob: -5.231251239776611
    4. ''' → logprob: -7.981251239776611
    5. '"' → logprob: -8.481250762939453
    6. 'n' → logprob: -9.731250762939453
    7. '-' → logprob: -11.106250762939453
    8. '2' → logprob: -11.918750762939453
    9. 'True' → logprob: -12.043750762939453
    10. '""' → logprob: -12.106250762939453

Token 21: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.14662490785121918
    2. '
' → logprob: -2.771624803543091
    3. 'elif' → logprob: -3.021624803543091
    4. ' else' → logprob: -3.896624803543091
    5. '\n' → logprob: -5.64662504196167
    6. 'n' → logprob: -7.77162504196167
    7. '```' → logprob: -8.396624565124512
    8. ' elif' → logprob: -9.146624565124512
    9. '    
' → logprob: -9.271624565124512
    10. ' 
' → logprob: -9.271624565124512

Token 22: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4324360489845276
    2. 'elif' → logprob: -1.0574359893798828
    3. ' else' → logprob: -5.682435989379883
    4. ' elif' → logprob: -8.557435989379883
    5. '\n' → logprob: -9.932435989379883
    6. '```' → logprob: -10.182435989379883
    7. '
' → logprob: -11.307435989379883
    8. '<|end|>' → logprob: -11.557435989379883
    9. 'n' → logprob: -12.807435989379883
    10. 'el' → logprob: -13.057435989379883

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.2729995988775045e-06
    2. ':
' → logprob: -12.250006675720215
    3. ' :' → logprob: -13.875006675720215
    4. '   ' → logprob: -15.750006675720215
    5. ':**' → logprob: -16.8750057220459
    6. ':return' → logprob: -17.0000057220459
    7. '<|end|>' → logprob: -17.1250057220459
    8. '：' → logprob: -17.2500057220459
    9. ':

' → logprob: -17.5000057220459
    10. '):' → logprob: -17.5000057220459

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07619106769561768
    2. '    
' → logprob: -4.076190948486328
    3. '1' → logprob: -4.201190948486328
    4. '    ' → logprob: -4.951190948486328
    5. ' 
' → logprob: -4.951190948486328
    6. ' ' → logprob: -5.076190948486328
    7. '\n' → logprob: -5.326190948486328
    8. ' ans' → logprob: -5.326190948486328
    9. ' n' → logprob: -5.576190948486328
    10. '
' → logprob: -6.201190948486328

Token 25: ' if' (ID: 538)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.49594470858573914
    2. 'ans' → logprob: -0.9959447383880615
    3. ' while' → logprob: -4.745944499969482
    4. '   ' → logprob: -5.370944499969482
    5. ' for' → logprob: -5.745944499969482
    6. 'while' → logprob: -6.120944499969482
    7. 'for' → logprob: -7.245944499969482
    8. ' i' → logprob: -7.620944499969482
    9. ' n' → logprob: -7.870944499969482
    10. 'n' → logprob: -8.37094497680664

Token 26: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0034032361581921577
    2. 'n' → logprob: -6.378403186798096
    3. ' ' → logprob: -6.503403186798096
    4. ' ' → logprob: -8.628403663635254
    5. ' not' → logprob: -11.753403663635254
    6. ' (' → logprob: -12.253403663635254
    7. ' ans' → logprob: -12.628403663635254
    8. '(' → logprob: -13.753403663635254
    9. '(n' → logprob: -14.253403663635254
    10. ' abs' → logprob: -14.628403663635254

Token 27: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.026103690266609192
    2. ' %' → logprob: -4.651103496551514
    3. ' ' → logprob: -4.901103496551514
    4. '>' → logprob: -5.526103496551514
    5. ' !=' → logprob: -6.401103496551514
    6. '%' → logprob: -6.651103496551514
    7. ' >=' → logprob: -6.901103496551514
    8. ' <' → logprob: -8.026103973388672
    9. ' ==' → logprob: -8.151103973388672
    10. ' <=' → logprob: -8.651103973388672

Token 28: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3160190284252167
    2. ' ' → logprob: -1.316019058227539
    3. '3' → logprob: -6.316019058227539
    4. '4' → logprob: -8.191019058227539
    5. '10' → logprob: -8.441019058227539
    6. '5' → logprob: -8.941019058227539
    7. '1' → logprob: -9.316019058227539
    8. '7' → logprob: -9.316019058227539
    9. '6' → logprob: -9.816019058227539
    10. '9' → logprob: -10.191019058227539

Token 29: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12377768009901047
    2. '3' → logprob: -2.8737776279449463
    3. '10' → logprob: -3.9987776279449463
    4. '5' → logprob: -4.373777866363525
    5. '7' → logprob: -4.623777866363525
    6. '4' → logprob: -4.998777866363525
    7. '9' → logprob: -5.998777866363525
    8. '6' → logprob: -5.998777866363525
    9. '400' → logprob: -5.998777866363525
    10. '15' → logprob: -6.998777866363525

Token 30: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006947310641407967
    2. '==' → logprob: -5.1319475173950195
    3. ' !=' → logprob: -7.1319475173950195
    4. ' ' → logprob: -8.50694751739502
    5. ':' → logprob: -12.38194751739502
    6. '!=' → logprob: -12.50694751739502
    7. ' =' → logprob: -12.63194751739502
    8. '0' → logprob: -13.25694751739502
    9. '=' → logprob: -13.88194751739502
    10. ' :' → logprob: -14.00694751739502

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43308278918266296
    2. ' ' → logprob: -1.0580828189849854
    3. '1' → logprob: -5.433082580566406
    4. '2' → logprob: -13.433082580566406
    5. '=' → logprob: -14.933082580566406
    6. '==' → logprob: -15.558082580566406
    7. ')' → logprob: -15.620582580566406
    8. ' ==' → logprob: -15.870582580566406
    9. '  ' → logprob: -16.245582580566406
    10. ' =' → logprob: -16.308082580566406

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005941121373325586
    2. ' ' → logprob: -5.255940914154053
    3. '1' → logprob: -7.255940914154053
    4. '2' → logprob: -14.130941390991211
    5. ')' → logprob: -17.19344139099121
    6. '=' → logprob: -17.25594139099121
    7. '<|end|>' → logprob: -17.63094139099121
    8. '==' → logprob: -17.69344139099121
    9. '۰' → logprob: -17.69344139099121
    10. '  ' → logprob: -18.00594139099121

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005821037339046597
    2. ':
' → logprob: -7.625582218170166
    3. ' :' → logprob: -9.625581741333008
    4. '):' → logprob: -10.875581741333008
    5. '       ' → logprob: -12.625581741333008
    6. '   ' → logprob: -13.375581741333008
    7. ':

' → logprob: -14.125581741333008
    8. ' :
' → logprob: -14.250581741333008
    9. ' and' → logprob: -14.375581741333008
    10. ':**' → logprob: -14.625581741333008

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051730550825595856
    2. '   ' → logprob: -3.6767306327819824
    3. ' ' → logprob: -5.176730632781982
    4. '    ' → logprob: -5.176730632781982
    5. '\n' → logprob: -5.676730632781982
    6. ' 
' → logprob: -5.801730632781982
    7. ' ans' → logprob: -6.301730632781982
    8. '        
' → logprob: -6.676730632781982
    9. '    
' → logprob: -7.051730632781982
    10. '\' → logprob: -7.426730632781982

Token 35: ' p' (ID: 275)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.06068294495344162
    2. '   ' → logprob: -3.310683012008667
    3. 'ans' → logprob: -4.185682773590088
    4. ' n' → logprob: -5.935682773590088
    5. '       ' → logprob: -6.435682773590088
    6. '\n' → logprob: -6.810682773590088
    7. 'n' → logprob: -7.185682773590088
    8. '(ans' → logprob: -8.060683250427246
    9. '	ans' → logprob: -8.435683250427246
    10. ' \' → logprob: -9.060683250427246

Token 36: 'wr' (ID: 16085)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011427387595176697
    2. '=' → logprob: -5.636427402496338
    3. ' =' → logprob: -5.636427402496338
    4. '   ' → logprob: -5.761427402496338
    5. ' r' → logprob: -7.636427402496338
    6. '    ' → logprob: -9.13642692565918
    7. ' ' → logprob: -9.38642692565918
    8. 'i' → logprob: -9.38642692565918
    9. '       ' → logprob: -9.88642692565918
    10. '  ' → logprob: -10.38642692565918

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4125341773033142
    2. '=' → logprob: -1.412534236907959
    3. '(' → logprob: -2.787534236907959
    4. ' ' → logprob: -4.537534236907959
    5. '_' → logprob: -4.787534236907959
    6. '   ' → logprob: -5.912534236907959
    7. ' +=' → logprob: -6.162534236907959
    8. '**' → logprob: -6.287534236907959
    9. '       ' → logprob: -6.662534236907959
    10. '2' → logprob: -6.787534236907959

Token 38: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.051115673035383224
    2. 'n' → logprob: -3.6761157512664795
    3. ' ' → logprob: -3.9261157512664795
    4. '2' → logprob: -5.6761155128479
    5. '1' → logprob: -7.1761155128479
    6. ' (' → logprob: -8.176115989685059
    7. '4' → logprob: -9.426115989685059
    8. '   ' → logprob: -9.801115989685059
    9. '(n' → logprob: -9.801115989685059
    10. '    ' → logprob: -11.176115989685059

Token 39: '10' (ID: 702)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39833956956863403
    2. ' n' → logprob: -1.1483395099639893
    3. '2' → logprob: -5.273339748382568
    4. '1' → logprob: -5.898339748382568
    5. ' ' → logprob: -6.398339748382568
    6. '   ' → logprob: -6.898339748382568
    7. '(n' → logprob: -8.27333927154541
    8. ' (' → logprob: -8.64833927154541
    9. '10' → logprob: -8.64833927154541
    10. '4' → logprob: -9.89833927154541

Token 40: '
' (ID: 198)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2630755603313446
    2. ' **' → logprob: -1.513075590133667
    3. 'n' → logprob: -6.138075351715088
    4. '*' → logprob: -6.263075351715088
    5. '0' → logprob: -6.513075351715088
    6. 'p' → logprob: -6.763075351715088
    7. ' n' → logprob: -7.013075351715088
    8. '   ' → logprob: -7.263075351715088
    9. ' ' → logprob: -7.263075351715088
    10. ' *' → logprob: -7.638075351715088

Token 41: '       ' (ID: 309)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5390748977661133
    2. '   ' → logprob: -1.5390748977661133
    3. '*' → logprob: -2.2890748977661133
    4. '       ' → logprob: -3.4140748977661133
    5. ' *' → logprob: -3.5390748977661133
    6. ' **' → logprob: -3.5390748977661133
    7. ' ' → logprob: -5.914074897766113
    8. '+' → logprob: -7.039074897766113
    9. '    ' → logprob: -7.289074897766113
    10. ' +' → logprob: -7.289074897766113

Token 42: ' while' (ID: 2049)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -1.1234992742538452
    2. '*' → logprob: -1.2484992742538452
    3. '   ' → logprob: -1.6234992742538452
    4. ' *' → logprob: -2.3734993934631348
    5. '       ' → logprob: -2.9984993934631348
    6. ' **' → logprob: -4.123499393463135
    7. ' ' → logprob: -5.373499393463135
    8. '*p' → logprob: -5.498499393463135
    9. '    ' → logprob: -5.748499393463135
    10. '+' → logprob: -5.748499393463135

Token 43: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.16480496525764465
    2. 'p' → logprob: -2.2898049354553223
    3. ' n' → logprob: -3.0398049354553223
    4. 'n' → logprob: -6.164804935455322
    5. ' ' → logprob: -8.16480541229248
    6. ' abs' → logprob: -9.16480541229248
    7. '   ' → logprob: -9.41480541229248
    8. '    ' → logprob: -9.66480541229248
    9. ' (' → logprob: -10.03980541229248
    10. '(p' → logprob: -10.03980541229248

Token 44: 'wr' (ID: 16085)
  Prédit: 'wr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -0.008771154098212719
    2. 'w' → logprob: -4.758770942687988
    3. 'r' → logprob: -10.133770942687988
    4. '**' → logprob: -10.383770942687988
    5. '//' → logprob: -11.258770942687988
    6. 'rw' → logprob: -11.383770942687988
    7. '*' → logprob: -11.633770942687988
    8. 'rr' → logprob: -11.883770942687988
    9. ' <=' → logprob: -12.383770942687988
    10. '<p' → logprob: -12.383770942687988

Token 45: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.08901307731866837
    2. ' <=' → logprob: -2.46401309967041
    3. '<' → logprob: -10.08901309967041
    4. '*' → logprob: -10.83901309967041
    5. '**' → logprob: -12.21401309967041
    6. ' <<=' → logprob: -13.08901309967041
    7. '```' → logprob: -13.33901309967041
    8. ' <' → logprob: -13.71401309967041
    9. ')<=' → logprob: -14.08901309967041
    10. '<<' → logprob: -14.46401309967041

Token 46: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16023053228855133
    2. ' n' → logprob: -1.9102305173873901
    3. '	n' → logprob: -12.41023063659668
    4. '(n' → logprob: -14.66023063659668
    5. ' ' → logprob: -14.78523063659668
    6. 'abs' → logprob: -14.78523063659668
    7. '_n' → logprob: -15.41023063659668
    8. ' abs' → logprob: -15.78523063659668
    9. '10' → logprob: -16.41023063659668
    10. ')n' → logprob: -16.78523063659668

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009931033477187157
    2. ' and' → logprob: -5.1349310874938965
    3. ':
' → logprob: -5.7599310874938965
    4. ' :' → logprob: -8.009930610656738
    5. 'and' → logprob: -8.759930610656738
    6. ' *' → logprob: -9.009930610656738
    7. '*' → logprob: -9.634930610656738
    8. ' ' → logprob: -10.009930610656738
    9. '   ' → logprob: -10.009930610656738
    10. '*p' → logprob: -10.759930610656738

Token 48: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2013622671365738
    2. ':' → logprob: -2.451362371444702
    3. 'p' → logprob: -3.451362371444702
    4. '       ' → logprob: -3.576362371444702
    5. ':
' → logprob: -4.201362133026123
    6. ' p' → logprob: -4.451362133026123
    7. '*p' → logprob: -5.826362133026123
    8. '   ' → logprob: -5.951362133026123
    9. ' and' → logprob: -7.076362133026123
    10. ' ' → logprob: -7.076362133026123

Token 49: ' ans' (ID: 3345)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.019343053922057152
    2. ' p' → logprob: -4.01934289932251
    3. 'ans' (adapté à ' ans') → logprob: -8.144343376159668
    4. '<|end|>' → logprob: -8.394343376159668
    5. 'n' → logprob: -8.519343376159668
    6. '   ' → logprob: -9.019343376159668
    7. ' ans' → logprob: -9.144343376159668
    8. ' ' → logprob: -9.144343376159668
    9. '<|end|>' → logprob: -9.894343376159668
    10. '+' → logprob: -10.144343376159668

Token 50: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.002977583557367325
    2. '+=' → logprob: -6.00297737121582
    3. ' =' → logprob: -7.62797737121582
    4. ' ' → logprob: -11.62797737121582
    5. '=' → logprob: -13.37797737121582
    6. '+=(' → logprob: -13.50297737121582
    7. ' -=' → logprob: -14.50297737121582
    8. ' |=' → logprob: -14.50297737121582
    9. ' +' → logprob: -14.75297737121582
    10. ' ^=' → logprob: -14.75297737121582

Token 51: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.0337899923324585
    2. ' p' → logprob: -1.4087899923324585
    3. ' n' → logprob: -2.033790111541748
    4. 'p' → logprob: -2.533790111541748
    5. 'n' → logprob: -2.908790111541748
    6. ' (' → logprob: -3.408790111541748
    7. '(ans' → logprob: -3.783790111541748
    8. 'ans' → logprob: -3.783790111541748
    9. ' ' → logprob: -4.158790111541748
    10. ' max' → logprob: -4.283790111541748

Token 52: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18066059052944183
    2. '+' → logprob: -1.805660605430603
    3. '+p' → logprob: -7.055660724639893
    4. ' ' → logprob: -10.805660247802734
    5. 'p' → logprob: -11.430660247802734
    6. '+n' → logprob: -11.805660247802734
    7. ' *' → logprob: -13.180660247802734
    8. '*' → logprob: -13.430660247802734
    9. ' plus' → logprob: -13.555660247802734
    10. ' -' → logprob: -13.680660247802734

Token 53: ' n' (ID: 297)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.19859887659549713
    2. ' p' → logprob: -1.948598861694336
    3. '1' → logprob: -3.698598861694336
    4. ' (' → logprob: -5.698598861694336
    5. ' ' → logprob: -5.948598861694336
    6. 'n' → logprob: -6.323598861694336
    7. ' n' → logprob: -6.448598861694336
    8. '(p' → logprob: -6.573598861694336
    9. '9' → logprob: -7.323598861694336
    10. '10' → logprob: -7.823598861694336

Token 54: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.06838224083185196
    2. '//' → logprob: -3.3183822631835938
    3. ' %' → logprob: -4.068382263183594
    4. '%' → logprob: -4.568382263183594
    5. ' ' → logprob: -6.693382263183594
    6. ' -' → logprob: -7.193382263183594
    7. '-' → logprob: -8.193382263183594
    8. ' /' → logprob: -10.568382263183594
    9. 'p' → logprob: -10.943382263183594
    10. '   ' → logprob: -11.443382263183594

Token 55: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00010998018842656165
    2. ' p' → logprob: -9.125109672546387
    3. '10' → logprob: -15.125109672546387
    4. ' ' → logprob: -15.500109672546387
    5. '	p' → logprob: -15.750109672546387
    6. '2' → logprob: -15.750109672546387
    7. 'pow' → logprob: -16.125110626220703
    8. '   ' → logprob: -16.750110626220703
    9. '  ' → logprob: -17.250110626220703
    10. '(p' → logprob: -17.875110626220703

Token 56: 'wr' (ID: 16085)
  Prédit: 'wr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -0.0030201373156160116
    2. 'w' → logprob: -5.878020286560059
    3. 'r' → logprob: -8.628020286560059
    4. 'rw' → logprob: -10.878020286560059
    5. '2' → logprob: -12.628020286560059
    6. '10' → logprob: -12.878020286560059
    7. '8' → logprob: -13.003020286560059
    8. 'р' → logprob: -13.753020286560059
    9. 'wrk' → logprob: -13.878020286560059
    10. '12' → logprob: -14.128020286560059

Token 57: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2650293111801147
    2. 'p' → logprob: -1.3900293111801147
    3. '           ' → logprob: -2.0150294303894043
    4. '*' → logprob: -2.2650294303894043
    5. '\n' → logprob: -2.8900294303894043
    6. '*p' → logprob: -2.8900294303894043
    7. '10' → logprob: -3.0150294303894043
    8. '       ' → logprob: -4.640029430389404
    9. ' ' → logprob: -4.640029430389404
    10. '+' → logprob: -4.640029430389404

Token 58: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008646360598504543
    2. 'p' → logprob: -5.258646488189697
    3. '   ' → logprob: -6.258646488189697
    4. '       ' → logprob: -7.758646488189697
    5. ' ' → logprob: -8.508646011352539
    6. '               ' → logprob: -8.633646011352539
    7. '
' → logprob: -9.008646011352539
    8. '            
' → logprob: -9.133646011352539
    9. '```' → logprob: -9.633646011352539
    10. '\n' → logprob: -9.758646011352539

Token 59: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0030643416102975607
    2. ' p' → logprob: -5.878064155578613
    3. '   ' → logprob: -8.753064155578613
    4. '           ' → logprob: -9.503064155578613
    5. '	p' → logprob: -10.753064155578613
    6. '       ' → logprob: -13.253064155578613
    7. ' ' → logprob: -13.503064155578613
    8. '10' → logprob: -14.503064155578613
    9. '```' → logprob: -14.628064155578613
    10. '    ' → logprob: -14.628064155578613

Token 60: 'wr' (ID: 16085)
  Prédit: 'wr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -9.877503907773644e-05
    2. 'w' → logprob: -9.250099182128906
    3. 'r' → logprob: -13.125099182128906
    4. 'rw' → logprob: -14.750099182128906
    5. 'ow' → logprob: -16.375099182128906
    6. ' wr' → logprob: -16.625099182128906
    7. 'nr' → logprob: -17.750099182128906
    8. '   ' → logprob: -18.250099182128906
    9. 'ŵr' → logprob: -18.500099182128906
    10. 'wrk' → logprob: -18.500099182128906

Token 61: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.16482427716255188
    2. ' *=' → logprob: -1.9148242473602295
    3. '=' → logprob: -5.414824485778809
    4. ' =' → logprob: -9.414824485778809
    5. ' <<=' → logprob: -10.789824485778809
    6. '   ' → logprob: -11.164824485778809
    7. ' ' → logprob: -11.539824485778809
    8. '*' → logprob: -12.164824485778809
    9. '	' → logprob: -13.164824485778809
    10. '  ' → logprob: -13.289824485778809

Token 62: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023365089669823647
    2. ' p' → logprob: -3.773365020751953
    3. '10' → logprob: -9.148365020751953
    4. ' ' → logprob: -11.398365020751953
    5. '	p' → logprob: -14.648365020751953
    6. '100' → logprob: -15.023365020751953
    7. '20' → logprob: -15.148365020751953
    8. '*p' → logprob: -15.648365020751953
    9. '  ' → logprob: -15.773365020751953
    10. '   ' → logprob: -15.898365020751953

Token 63: 'wr' (ID: 16085)
  Prédit: 'wr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -1.27099974633893e-05
    2. 'w' → logprob: -11.500012397766113
    3. '10' → logprob: -14.250012397766113
    4. ' wr' → logprob: -14.500012397766113
    5. 'rw' → logprob: -14.500012397766113
    6. '_wr' → logprob: -15.625012397766113
    7. ' ' → logprob: -16.00001335144043
    8. '   ' → logprob: -16.00001335144043
    9. 'WR' → logprob: -16.37501335144043
    10. 'r' → logprob: -16.75001335144043

Token 64: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0166113693267107
    2. ' *' → logprob: -4.141611576080322
    3. '0' → logprob: -7.516611576080322
    4. '10' → logprob: -10.891611099243164
    5. '**' → logprob: -12.141611099243164
    6. ' ' → logprob: -12.391611099243164
    7. '   ' → logprob: -13.516611099243164
    8. '  ' → logprob: -14.266611099243164
    9. '	' → logprob: -14.516611099243164
    10. '```' → logprob: -14.641611099243164

Token 65: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.014347892254590988
    2. '10' → logprob: -4.264348030090332
    3. '2' → logprob: -9.139348030090332
    4. ' ' → logprob: -9.514348030090332
    5. '50' → logprob: -14.139348030090332
    6. '20' → logprob: -14.389348030090332
    7. '   ' → logprob: -14.514348030090332
    8. '  ' → logprob: -15.014348030090332
    9. '05' → logprob: -15.139348030090332
    10. ' ' → logprob: -15.889348030090332

Token 66: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0015478298300877213
    2. '10' → logprob: -6.501547813415527
    3. '2' → logprob: -10.751547813415527
    4. ' ' → logprob: -10.876547813415527
    5. '``' → logprob: -13.376547813415527
    6. '   ' → logprob: -14.001547813415527
    7. '```' → logprob: -14.626547813415527
    8. '05' → logprob: -14.751547813415527
    9. '  ' → logprob: -15.001547813415527
    10. ' ' → logprob: -15.126547813415527

Token 67: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4261605739593506
    2. 'print' → logprob: -1.3011605739593506
    3. '<|end|>' → logprob: -3.6761605739593506
    4. '       ' → logprob: -3.8011605739593506
    5. 'else' → logprob: -4.67616081237793
    6. '+' → logprob: -4.92616081237793
    7. 'n' → logprob: -6.30116081237793
    8. '\n' → logprob: -6.55116081237793
    9. '<|end|>' → logprob: -6.55116081237793
    10. '```' → logprob: -7.05116081237793

Token 69: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.22903400659561157
    2. '   ' → logprob: -1.9790339469909668
    3. ' else' → logprob: -3.479033946990967
    4. '       ' → logprob: -4.104033946990967
    5. 'print' → logprob: -4.854033946990967
    6. 'elif' → logprob: -5.354033946990967
    7. 'n' → logprob: -6.479033946990967
    8. '+' → logprob: -6.729033946990967
    9. '	else' → logprob: -6.854033946990967
    10. '<|end|>' → logprob: -7.354033946990967

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002209973521530628
    2. ':
' → logprob: -6.1272101402282715
    3. '       ' → logprob: -11.502209663391113
    4. ' :' → logprob: -11.877209663391113
    5. '   ' → logprob: -12.252209663391113
    6. ':
' → logprob: -14.127209663391113
    7. ':\' → logprob: -14.627209663391113
    8. ' :
' → logprob: -14.877209663391113
    9. '<|end|>' → logprob: -15.252209663391113
    10. '    ' → logprob: -15.377209663391113

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06363442540168762
    2. '   ' → logprob: -2.9386343955993652
    3. ' ans' → logprob: -5.188634395599365
    4. 'ans' → logprob: -6.688634395599365
    5. '    
' → logprob: -8.063634872436523
    6. '```' → logprob: -8.063634872436523
    7. '
' → logprob: -8.563634872436523
    8. 'n' → logprob: -8.688634872436523
    9. '(ans' → logprob: -9.188634872436523
    10. ' pass' → logprob: -9.188634872436523

Token 72: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4719575047492981
    2. '   ' → logprob: -1.5969574451446533
    3. 'ans' (adapté à ' ans') → logprob: -2.3469574451446533
    4. ' pass' → logprob: -3.7219574451446533
    5. ' p' → logprob: -4.221957683563232
    6. ' n' → logprob: -4.596957683563232
    7. 'pass' → logprob: -4.721957683563232
    8. 'n' → logprob: -4.971957683563232
    9. 'p' → logprob: -5.596957683563232
    10. '1' → logprob: -6.346957683563232

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28242379426956177
    2. ' +=' → logprob: -1.657423734664917
    3. ' +' → logprob: -3.407423734664917
    4. '=' → logprob: -4.657423973083496
    5. ' ' → logprob: -5.157423973083496
    6. '+' → logprob: -5.157423973083496
    7. '+=' → logprob: -7.032423973083496
    8. '<|end|>' → logprob: -8.657423973083496
    9. '  ' → logprob: -9.157423973083496
    10. ' ==' → logprob: -10.407423973083496

Token 74: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4256732761859894
    2. ' ' → logprob: -1.550673246383667
    3. ' n' → logprob: -2.425673246383667
    4. 'n' → logprob: -3.175673246383667
    5. ' (' → logprob: -6.050673484802246
    6. '1' → logprob: -6.550673484802246
    7. '(n' → logprob: -8.175673484802246
    8. '(' → logprob: -8.425673484802246
    9. 'int' → logprob: -10.988173484802246
    10. ' int' → logprob: -11.738173484802246

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039525389671325684
    2. 'n' → logprob: -3.4145255088806152
    3. ' ' → logprob: -5.914525508880615
    4. ' n' → logprob: -7.039525508880615
    5. '(n' → logprob: -7.039525508880615
    6. '1' → logprob: -7.164525508880615
    7. '(' → logprob: -7.789525508880615
    8. ' (' → logprob: -8.664525032043457
    9. 'int' → logprob: -11.539525032043457
    10. 'ans' → logprob: -11.727025032043457

Token 76: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.12300560623407364
    2. '<|end|>' → logprob: -2.6230056285858154
    3. '```' → logprob: -4.123005390167236
    4. 'newline' → logprob: -4.623005390167236
    5. '
' → logprob: -5.373005390167236
    6. 'print' → logprob: -5.623005390167236
    7. 'n' → logprob: -5.998005390167236
    8. '\' → logprob: -6.498005390167236
    9. '<|end|>' → logprob: -6.998005390167236
    10. 'return' → logprob: -7.373005390167236

Token 77: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3869042992591858
    2. '(ans' → logprob: -1.136904239654541
    3. '()' → logprob: -11.1369047164917
    4. '('' → logprob: -11.6369047164917
    5. '(n' → logprob: -12.8869047164917
    6. ' (' → logprob: -13.3869047164917
    7. '(answer' → logprob: -13.3869047164917
    8. '((' → logprob: -14.1369047164917
    9. '(
' → logprob: -14.3869047164917
    10. '(a' → logprob: -14.6369047164917

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.75
    3. ')
' → logprob: -17.25
    4. '))' → logprob: -17.75
    5. ')`' → logprob: -17.875
    6. '`)' → logprob: -18.625
    7. '')' → logprob: -19.0
    8. '）' → logprob: -20.125
    9. ')}' → logprob: -20.375
    10. '),' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 42.86%
Précision adaptée (1ère position): 45.45%
Précision (top 10): 85.71%
================================================================================
