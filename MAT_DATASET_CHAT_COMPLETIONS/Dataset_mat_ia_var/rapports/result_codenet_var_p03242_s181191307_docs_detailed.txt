================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def transform_string(input_str):
    """
    Transforme la chaîne selon les règles suivantes :
    - Remplace tous les caractères '1' par des espaces temporaires,
    - Remplace tous les caractères '9' par des '1',
    - Remplace ensuite les espaces temporaires par des '9'.
    
    Args:
        input_str (str): La chaîne de caractères à transformer.
    
    Returns:
        str: La chaîne transformée selon les règles ci-dessus.
    """
    # Étape 1 : remplacer tous les '1' par des espaces. 
    # Les espaces servent de repère temporaire pour ne pas interférer avec le remplacement suivant.
    temp_str = input_str.replace('1', ' ')
    
    # Étape 2 : remplacer tous les '9' par des '1'.
    # À ce stade, les anciens '1' ont été mis de côté en tant qu'espaces,
    # cela permet de remplacer sans ambiguïté.
    temp_str = temp_str.replace('9', '1')
    
    # Étape 3 : remplacer tous les espaces (anciens '1') par des '9'.
    result_str = temp_str.replace(' ', '9')
    
    return result_str

def main():
    """
    Point d'entrée principal du programme.
    Lit une chaîne depuis l'entrée standard, applique la transformation, puis affiche le résultat.
    """
    # Lire la chaîne d'entrée de l'utilisateur.
    user_input = input()
    
    # Appliquer la transformation sur la chaîne saisie.
    transformed = transform_string(user_input)
    
    # Afficher la chaîne transformée.
    print(transformed)

# Exécute la fonction principale lorsque ce script est lancé
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' transform' (ID: 7118)
  → Token d'amorce (pas de prédiction)

Token 2: '_string' (ID: 8609)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010950922733172774
    2. '_' → logprob: -7.626095294952393
    3. '```' → logprob: -8.001094818115234
    4. '():' → logprob: -9.501094818115234
    5. '(:' → logprob: -10.126094818115234
    6. '(_:' → logprob: -10.626094818115234
    7. ' (' → logprob: -10.751094818115234
    8. '(_' → logprob: -11.126094818115234
    9. '("("' → logprob: -11.251094818115234
    10. ':' → logprob: -11.376094818115234

Token 4: '_str' (ID: 6182)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5602135062217712
    2. ')' → logprob: -1.435213565826416
    3. '):' → logprob: -2.060213565826416
    4. '_string' → logprob: -3.310213565826416
    5. ')_' → logprob: -4.935213565826416
    6. 's' → logprob: -5.060213565826416
    7. '_token' → logprob: -5.310213565826416
    8. '(' → logprob: -6.060213565826416
    9. '_s' → logprob: -6.435213565826416
    10. '```' → logprob: -6.810213565826416

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02471788413822651
    2. ')' → logprob: -3.7747178077697754
    3. ':' → logprob: -6.899717807769775
    4. '[' → logprob: -8.649718284606934
    5. 's' → logprob: -9.274718284606934
    6. '):
' → logprob: -9.899718284606934
    7. ''):' → logprob: -10.274718284606934
    8. '```' → logprob: -11.149718284606934
    9. '(' → logprob: -11.274718284606934
    10. '<|end|>' → logprob: -11.524718284606934

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4444259703159332
    2. '   ' → logprob: -1.0694259405136108
    3. '```' → logprob: -5.1944260597229
    4. '(' → logprob: -5.3194260597229
    5. '():' → logprob: -5.5694260597229
    6. '    
' → logprob: -8.319425582885742
    7. '\' → logprob: -8.444425582885742
    8. '    ' → logprob: -8.694425582885742
    9. ' ' → logprob: -9.319425582885742
    10. ':return' → logprob: -9.569425582885742

Token 7: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12852229177951813
    2. '```' → logprob: -2.8785223960876465
    3. ' ' → logprob: -4.2535223960876465
    4. '    ' → logprob: -4.5035223960876465
    5. '       ' → logprob: -4.5035223960876465
    6. 'return' → logprob: -4.8785223960876465
    7. '\' → logprob: -5.6285223960876465
    8. '\t' → logprob: -5.8785223960876465
    9. '`' → logprob: -6.0035223960876465
    10. ' return' → logprob: -6.1285223960876465

Token 8: '   ' (ID: 271)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.9748284816741943
    2. 'Transforms' → logprob: -1.3498284816741943
    3. 'Trans' → logprob: -2.3498284816741943
    4. 'Transform' → logprob: -2.4748284816741943
    5. 'Convert' → logprob: -3.0998284816741943
    6. '"""' → logprob: -3.2248284816741943
    7. 'Con' → logprob: -3.4748284816741943
    8. 'Returns' → logprob: -3.8498284816741943
    9. 'C' → logprob: -4.224828720092773
    10. '   ' → logprob: -4.849828720092773

Token 9: ' Transform' (ID: 27287)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -1.1922624111175537
    2. 'Transforms' → logprob: -1.1922624111175537
    3. 'Transform' (adapté à ' Transform') → logprob: -1.6922624111175537
    4. 'Convert' → logprob: -3.0672624111175537
    5. 'Con' → logprob: -3.0672624111175537
    6. 'Trans' → logprob: -3.3172624111175537
    7. 'Returns' → logprob: -3.9422624111175537
    8. 'C' → logprob: -4.067262649536133
    9. 'Cap' → logprob: -4.567262649536133
    10. 'Return' → logprob: -5.192262649536133

Token 10: 'e' (ID: 68)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8131622672080994
    2. 'input' → logprob: -0.9381622672080994
    3. '_' → logprob: -3.313162326812744
    4. ' ' → logprob: -3.438162326812744
    5. '   ' → logprob: -3.688162326812744
    6. ' the' → logprob: -3.813162326812744
    7. '(input' → logprob: -4.563162326812744
    8. 's' → logprob: -4.688162326812744
    9. ')' → logprob: -4.813162326812744
    10. 'def' → logprob: -5.313162326812744

Token 11: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11375165730714798
    2. 's' → logprob: -2.2387516498565674
    3. 'r' → logprob: -7.6137518882751465
    4. ' d' → logprob: -8.113751411437988
    5. ' ' → logprob: -9.738751411437988
    6. '   ' → logprob: -10.113751411437988
    7. '_' → logprob: -11.863751411437988
    8. 'm' → logprob: -12.113751411437988
    9. '```' → logprob: -12.363751411437988
    10. ' s' → logprob: -12.488751411437988

Token 12: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.588585615158081
    2. 'r' → logprob: -1.588585615158081
    3. '   ' → logprob: -2.088585615158081
    4. ' chaîne' → logprob: -2.713585615158081
    5. ' string' → logprob: -3.713585615158081
    6. ' chaine' → logprob: -5.08858585357666
    7. ' r' → logprob: -5.21358585357666
    8. 's' → logprob: -5.58858585357666
    9. 'string' → logprob: -6.08858585357666
    10. '  ' → logprob: -6.08858585357666

Token 13: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9693472981452942
    2. ' en' → logprob: -1.3443472385406494
    3. ' de' → logprob: -1.4693472385406494
    4. ' ' → logprob: -2.9693472385406494
    5. ' d' → logprob: -3.3443472385406494
    6. '    ' → logprob: -5.2193474769592285
    7. 's' → logprob: -5.2193474769592285
    8. ' suivante' → logprob: -5.2193474769592285
    9. '```' → logprob: -5.3443474769592285
    10. ''' → logprob: -6.2193474769592285

Token 14: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8675858974456787
    2. ' les' → logprob: -1.1175858974456787
    3. ' la' → logprob: -2.1175858974456787
    4. ' le' → logprob: -2.7425858974456787
    5. ' certaines' → logprob: -4.492586135864258
    6. '    ' → logprob: -4.617586135864258
    7. '```' → logprob: -4.742586135864258
    8. ' des' → logprob: -4.742586135864258
    9. ' une' → logprob: -4.992586135864258
    10. ' ' → logprob: -5.492586135864258

Token 15: ' règles' (ID: 67042)
  Prédit: ' règles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' règles' → logprob: -0.09827020764350891
    2. 'r' → logprob: -3.0982701778411865
    3. ' critères' → logprob: -3.8482701778411865
    4. ' spéc' → logprob: -4.223270416259766
    5. ' instructions' → logprob: -5.473270416259766
    6. ' cons' → logprob: -5.848270416259766
    7. ' crit' → logprob: -7.348270416259766
    8. ' rég' → logprob: -7.348270416259766
    9. ' ' → logprob: -7.723270416259766
    10. ' besoins' → logprob: -7.973270416259766

Token 16: ' suivantes' (ID: 106173)
  Prédit: ' suivantes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivantes' → logprob: -0.33178746700286865
    2. '   ' → logprob: -2.831787586212158
    3. ' défin' → logprob: -2.956787586212158
    4. ' données' → logprob: -3.331787586212158
    5. '```' → logprob: -3.331787586212158
    6. ' de' → logprob: -3.581787586212158
    7. ' spéc' → logprob: -3.956787586212158
    8. '"""' → logprob: -4.456787586212158
    9. ' :' → logprob: -5.456787586212158
    10. ' d' → logprob: -5.456787586212158

Token 17: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8924293518066406
    2. ' :' → logprob: -1.0174293518066406
    3. '\n' → logprob: -1.7674293518066406
    4. '   ' → logprob: -3.2674293518066406
    5. '```' → logprob: -5.017429351806641
    6. ':
' → logprob: -5.517429351806641
    7. ' :
' → logprob: -5.767429351806641
    8. '  
' → logprob: -6.517429351806641
    9. '\' → logprob: -7.017429351806641
    10. ' ' → logprob: -7.142429351806641

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04036383703351021
    2. '    ' → logprob: -3.4153637886047363
    3. '\n' → logprob: -6.290363788604736
    4. '```' → logprob: -7.040363788604736
    5. '    
' → logprob: -7.415363788604736
    6. '-' → logprob: -7.540363788604736
    7. '\' → logprob: -7.665363788604736
    8. '       ' → logprob: -7.790363788604736
    9. '     
' → logprob: -8.040364265441895
    10. 'n' → logprob: -8.165364265441895

Token 19: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033046200405806303
    2. '    ' → logprob: -6.378304481506348
    3. '-' (adapté à ' -') → logprob: -8.503304481506348
    4. '    
' → logprob: -8.503304481506348
    5. '```' → logprob: -8.503304481506348
    6. '\n' → logprob: -8.753304481506348
    7. ' ' → logprob: -9.003304481506348
    8. '*' → logprob: -9.128304481506348
    9. '"""
' → logprob: -9.378304481506348
    10. '       ' → logprob: -9.378304481506348

Token 20: ' Rem' (ID: 6890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5760896801948547
    2. ' Rem' → logprob: -2.32608962059021
    3. '    ' → logprob: -3.57608962059021
    4. ' convertir' → logprob: -3.70108962059021
    5. ' remplacer' → logprob: -3.70108962059021
    6. ' Convert' → logprob: -4.076089859008789
    7. ' ' → logprob: -4.138589859008789
    8. ' rem' → logprob: -4.263589859008789
    9. '```' → logprob: -4.326089859008789
    10. 'rem' → logprob: -4.326089859008789

Token 21: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.062042634934186935
    2. 'placer' → logprob: -2.937042713165283
    3. 'p' → logprob: -5.437042713165283
    4. 'pl' → logprob: -6.312042713165283
    5. 'placement' → logprob: -7.437042713165283
    6. 'plit' → logprob: -8.562042236328125
    7. '_place' → logprob: -9.437042236328125
    8. 'pla' → logprob: -10.562042236328125
    9. 'plac' → logprob: -10.812042236328125
    10. 'placing' → logprob: -11.812042236328125

Token 22: ' tous' (ID: 10688)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021669652312994003
    2. 'r' → logprob: -4.396669864654541
    3. ''' → logprob: -5.896669864654541
    4. '  ' → logprob: -6.396669864654541
    5. '_' → logprob: -6.521669864654541
    6. '   ' → logprob: -6.771669864654541
    7. ' '' → logprob: -7.021669864654541
    8. 't' → logprob: -8.896669387817383
    9. ' t' → logprob: -9.021669387817383
    10. '"' → logprob: -9.021669387817383

Token 23: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.22310997545719147
    2. ' ' → logprob: -1.8481099605560303
    3. 'les' → logprob: -3.8481099605560303
    4. 's' → logprob: -4.723110198974609
    5. '  ' → logprob: -5.348110198974609
    6. 'es' → logprob: -5.848110198974609
    7. ' '' → logprob: -6.848110198974609
    8. '   ' → logprob: -7.598110198974609
    9. '_' → logprob: -7.973110198974609
    10. ''' → logprob: -8.22311019897461

Token 24: ' caractères' (ID: 183106)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.0793418884277344
    2. 'a' → logprob: -1.3293418884277344
    3. 'e' → logprob: -1.7043418884277344
    4. ''e' → logprob: -3.0793418884277344
    5. ''a' → logprob: -3.9543418884277344
    6. ' ' → logprob: -3.9543418884277344
    7. ' e' → logprob: -4.204341888427734
    8. ' '' → logprob: -4.329341888427734
    9. ''esp' → logprob: -4.329341888427734
    10. 's' → logprob: -4.329341888427734

Token 25: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8056288361549377
    2. 's' → logprob: -1.305628776550293
    3. ''' → logprob: -2.180628776550293
    4. ' '' → logprob: -3.055628776550293
    5. ' par' → logprob: -3.555628776550293
    6. '   ' → logprob: -4.555628776550293
    7. '`' → logprob: -4.805628776550293
    8. ' espaces' → logprob: -4.805628776550293
    9. 'par' → logprob: -4.805628776550293
    10. 'es' → logprob: -4.930628776550293

Token 26: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32965829968452454
    2. 'e' → logprob: -1.4546582698822021
    3. ''' → logprob: -3.579658269882202
    4. 'é' → logprob: -4.954658508300781
    5. 'o' → logprob: -5.579658508300781
    6. 'r' → logprob: -6.579658508300781
    7. 's' → logprob: -6.704658508300781
    8. ' '' → logprob: -7.329658508300781
    9. ''a' → logprob: -7.454658508300781
    10. 'u' → logprob: -7.579658508300781

Token 27: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011324746301397681
    2. '2' → logprob: -8.001132011413574
    3. 'e' → logprob: -8.001132011413574
    4. '0' → logprob: -8.251132011413574
    5. ' '' → logprob: -9.876132011413574
    6. 'a' → logprob: -10.001132011413574
    7. '1' → logprob: -10.376132011413574
    8. ''s' → logprob: -10.751132011413574
    9. '"' → logprob: -12.001132011413574
    10. 's' → logprob: -12.376132011413574

Token 28: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1425805687904358
    2. 'par' → logprob: -2.142580509185791
    3. ' ' → logprob: -4.642580509185791
    4. ' by' → logprob: -6.142580509185791
    5. ',' → logprob: -7.017580509185791
    6. 's' → logprob: -7.142580509185791
    7. '.' → logprob: -7.517580509185791
    8. ')' → logprob: -7.767580509185791
    9. '0' → logprob: -8.76758098602295
    10. '<|end|>' → logprob: -8.76758098602295

Token 29: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.037443287670612335
    2. ' '' → logprob: -4.287443161010742
    3. ''a' → logprob: -5.037443161010742
    4. ''un' → logprob: -5.287443161010742
    5. ' ' → logprob: -5.537443161010742
    6. ''e' → logprob: -7.037443161010742
    7. 'a' → logprob: -7.037443161010742
    8. '"' → logprob: -7.412443161010742
    9. '`' → logprob: -7.412443161010742
    10. '2' → logprob: -7.537443161010742

Token 30: ' espaces' (ID: 98361)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0914710760116577
    2. '2' → logprob: -1.2164710760116577
    3. '0' → logprob: -1.8414710760116577
    4. ' ' → logprob: -2.0914711952209473
    5. ' '' → logprob: -3.5914711952209473
    6. ' espaces' → logprob: -3.5914711952209473
    7. 'a' → logprob: -4.841471195220947
    8. '_' → logprob: -6.216471195220947
    9. 'e' → logprob: -6.216471195220947
    10. '`' → logprob: -6.341471195220947

Token 31: ' tempor' (ID: 14725)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21376343071460724
    2. '<|end|>' → logprob: -2.213763475418091
    3. '   ' → logprob: -3.088763475418091
    4. ' )' → logprob: -5.088763236999512
    5. '    ' → logprob: -5.088763236999512
    6. '  ' → logprob: -5.338763236999512
    7. ' 
' → logprob: -5.588763236999512
    8. ')' → logprob: -5.713763236999512
    9. ',' → logprob: -5.838763236999512
    10. '<|end|>' → logprob: -6.213763236999512

Token 32: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -1.4842727184295654
    2. '```' → logprob: -1.6092727184295654
    3. 'o' → logprob: -1.7342727184295654
    4. 'a' → logprob: -1.7342727184295654
    5. 'or' → logprob: -3.1092727184295654
    6. 'ores' → logprob: -3.3592727184295654
    7. 'orel' → logprob: -3.6092727184295654
    8. 'ora' → logprob: -3.6092727184295654
    9. '``' → logprob: -4.6717729568481445
    10. '\' → logprob: -4.9842729568481445

Token 33: ',
' (ID: 412)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025293530896306038
    2. ' _' → logprob: -5.400293350219727
    3. ''' → logprob: -5.775293350219727
    4. ' ' → logprob: -6.400293350219727
    5. '\t' → logprob: -6.400293350219727
    6. '"' → logprob: -6.525293350219727
    7. '_\' → logprob: -6.650293350219727
    8. '_tmp' → logprob: -6.775293350219727
    9. '_b' → logprob: -6.775293350219727
    10. '\' → logprob: -7.025293350219727

Token 34: '   ' (ID: 271)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.10380671918392181
    2. ''' → logprob: -3.353806734085083
    3. '   ' → logprob: -3.853806734085083
    4. ' '' → logprob: -4.603806495666504
    5. '"' → logprob: -5.353806495666504
    6. ' afin' → logprob: -5.853806495666504
    7. ' then' → logprob: -5.978806495666504
    8. ''\' → logprob: -6.103806495666504
    9. ' ' → logprob: -6.353806495666504
    10. 'ens' → logprob: -6.478806495666504

Token 35: ' -' (ID: 533)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -1.1947968006134033
    2. ''' → logprob: -1.3197968006134033
    3. '<|end|>' → logprob: -2.4447968006134033
    4. ' ' → logprob: -2.8197968006134033
    5. '`' → logprob: -3.3197968006134033
    6. '"' → logprob: -3.3197968006134033
    7. ' then' → logprob: -3.5697968006134033
    8. ' '' → logprob: -3.6947968006134033
    9. '\n' → logprob: -3.8197968006134033
    10. ''\' → logprob: -3.8197968006134033

Token 36: ' Rem' (ID: 6890)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.3155198097229004
    2. ' '' → logprob: -1.9405198097229004
    3. ''' → logprob: -3.6905198097229004
    4. ' ' → logprob: -4.1905198097229
    5. 'p' → logprob: -4.4405198097229
    6. ''s' → logprob: -4.6905198097229
    7. 's' → logprob: -5.1905198097229
    8. '-' → logprob: -5.3155198097229
    9. '   ' → logprob: -5.3155198097229
    10. '1' → logprob: -5.6280198097229

Token 37: 'place' (ID: 3243)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00017314712749794126
    2. 'place' → logprob: -10.000173568725586
    3. 'pl' → logprob: -10.125173568725586
    4. 'a' → logprob: -10.500173568725586
    5. 'm' → logprob: -10.500173568725586
    6. 'pla' → logprob: -11.875173568725586
    7. 't' → logprob: -12.500173568725586
    8. '_' → logprob: -13.000173568725586
    9. 'e' → logprob: -13.125173568725586
    10. ' ' → logprob: -13.250173568725586

Token 38: ' tous' (ID: 10688)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5975842475891113
    2. ' '' → logprob: -2.2225842475891113
    3. ' les' → logprob: -2.2225842475891113
    4. ' tous' → logprob: -2.8475842475891113
    5. ''t' → logprob: -2.9725842475891113
    6. 's' → logprob: -3.0975842475891113
    7. ' ' → logprob: -4.097584247589111
    8. 't' → logprob: -4.222584247589111
    9. 'les' → logprob: -4.472584247589111
    10. '_' → logprob: -4.847584247589111

Token 39: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2279166281223297
    2. 'les' → logprob: -2.227916717529297
    3. 's' → logprob: -2.852916717529297
    4. ' ' → logprob: -4.602916717529297
    5. '<|end|>' → logprob: -4.852916717529297
    6. 'es' → logprob: -5.102916717529297
    7. '('' → logprob: -5.602916717529297
    8. ''' → logprob: -5.727916717529297
    9. '  ' → logprob: -6.352916717529297
    10. '_' → logprob: -6.602916717529297

Token 40: ' caractères' (ID: 183106)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04275205731391907
    2. ' ' → logprob: -4.792752265930176
    3. '1' → logprob: -4.917752265930176
    4. '_' → logprob: -5.542752265930176
    5. 's' → logprob: -5.542752265930176
    6. ''s' → logprob: -5.917752265930176
    7. ' '' → logprob: -6.042752265930176
    8. '"' → logprob: -6.167752265930176
    9. ''t' → logprob: -6.542752265930176
    10. 'a' → logprob: -6.667752265930176

Token 41: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03223710507154465
    2. '_' → logprob: -3.5322370529174805
    3. '"' → logprob: -6.7822370529174805
    4. 's' → logprob: -7.7822370529174805
    5. ' '' → logprob: -8.78223705291748
    6. ''s' → logprob: -9.15723705291748
    7. ''''' → logprob: -9.28223705291748
    8. '`' → logprob: -9.40723705291748
    9. ' ' → logprob: -9.65723705291748
    10. ''t' → logprob: -10.03223705291748

Token 42: '9' (ID: 24)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7734705805778503
    2. '2' → logprob: -1.2734706401824951
    3. '1' → logprob: -2.273470640182495
    4. ''' → logprob: -2.523470640182495
    5. '_' → logprob: -3.773470640182495
    6. 'a' → logprob: -4.523470401763916
    7. '*' → logprob: -4.648470401763916
    8. '#' → logprob: -4.773470401763916
    9. '-' → logprob: -5.773470401763916
    10. 'x' → logprob: -6.023470401763916

Token 43: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.041287027299404144
    2. ' '' → logprob: -3.2912869453430176
    3. '1' → logprob: -6.666286945343018
    4. 'a' → logprob: -7.166286945343018
    5. 'e' → logprob: -8.541287422180176
    6. 'b' → logprob: -9.041287422180176
    7. '0' → logprob: -9.041287422180176
    8. '9' → logprob: -9.166287422180176
    9. '*' → logprob: -9.291287422180176
    10. 'p' → logprob: -9.791287422180176

Token 44: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.11356949806213379
    2. 'par' → logprob: -2.238569498062134
    3. ' ' → logprob: -7.488569259643555
    4. ' by' → logprob: -10.238569259643555
    5. 's' → logprob: -10.238569259643555
    6. 'p' → logprob: -10.613569259643555
    7. 'b' → logprob: -11.113569259643555
    8. ')' → logprob: -11.613569259643555
    9. 'a' → logprob: -11.863569259643555
    10. ' ' → logprob: -12.113569259643555

Token 45: ' des' (ID: 731)
  Prédit: ''t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''t' → logprob: -1.7753804922103882
    2. ''\' → logprob: -1.7753804922103882
    3. ''s' → logprob: -1.9003804922103882
    4. ''' → logprob: -1.9003804922103882
    5. ''e' → logprob: -2.4003806114196777
    6. 'des' → logprob: -2.7753806114196777
    7. ''a' → logprob: -2.9003806114196777
    8. ''un' → logprob: -3.2753806114196777
    9. ''d' → logprob: -3.4003806114196777
    10. ''o' → logprob: -4.650380611419678

Token 46: ' '' (ID: 461)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -1.0910674333572388
    2. ''' → logprob: -1.4660674333572388
    3. ''s' → logprob: -2.591067314147949
    4. '0' → logprob: -3.216067314147949
    5. ''t' → logprob: -3.591067314147949
    6. 't' → logprob: -3.591067314147949
    7. 's' → logprob: -3.716067314147949
    8. ''a' → logprob: -3.841067314147949
    9. '1' → logprob: -3.841067314147949
    10. 'a' → logprob: -3.966067314147949

Token 47: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9579257369041443
    2. '1' → logprob: -2.207925796508789
    3. 'a' → logprob: -2.457925796508789
    4. ' '' → logprob: -2.832925796508789
    5. '*' → logprob: -2.957925796508789
    6. '2' → logprob: -2.957925796508789
    7. '0' → logprob: -3.082925796508789
    8. 'e' → logprob: -3.457925796508789
    9. 's' → logprob: -4.082925796508789
    10. '#' → logprob: -4.207925796508789

Token 48: '',
' (ID: 1214)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.24073167145252228
    2. '',' → logprob: -1.8657317161560059
    3. '',
' → logprob: -2.865731716156006
    4. ''s' → logprob: -7.490731716156006
    5. '1' → logprob: -8.240731239318848
    6. '0' → logprob: -8.240731239318848
    7. ' '' → logprob: -8.365731239318848
    8. '',
' → logprob: -8.490731239318848
    9. '9' → logprob: -8.740731239318848
    10. '7' → logprob: -9.615731239318848

Token 49: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4580848217010498
    2. '   ' → logprob: -1.3330848217010498
    3. ',
' → logprob: -2.95808482170105
    4. ''' → logprob: -3.08308482170105
    5. '1' → logprob: -6.333085060119629
    6. '    
' → logprob: -6.958085060119629
    7. '\n' → logprob: -7.458085060119629
    8. '"' → logprob: -7.458085060119629
    9. '-' → logprob: -7.708085060119629
    10. ''\' → logprob: -8.333085060119629

Token 50: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.125210297293961e-05
    2. ''' → logprob: -10.500081062316895
    3. '"' → logprob: -11.375081062316895
    4. ' ' → logprob: -11.750081062316895
    5. '-' (adapté à ' -') → logprob: -12.250081062316895
    6. '\n' → logprob: -12.250081062316895
    7. '\' → logprob: -12.375081062316895
    8. '  ' → logprob: -12.375081062316895
    9. '#' → logprob: -12.625081062316895
    10. '```' → logprob: -12.875081062316895

Token 51: ' Rem' (ID: 6890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2962527573108673
    2. '_' → logprob: -2.171252727508545
    3. ' Rem' → logprob: -3.046252727508545
    4. ' Replace' → logprob: -4.171252727508545
    5. ' ' → logprob: -4.296252727508545
    6. ' rem' → logprob: -4.546252727508545
    7. '-' → logprob: -4.796252727508545
    8. ' remplacer' → logprob: -5.421252727508545
    9. 'Rem' → logprob: -5.546252727508545
    10. ' ' → logprob: -5.796252727508545

Token 52: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.005179558880627155
    2. 'p' → logprob: -5.630179405212402
    3. 'pla' → logprob: -6.755179405212402
    4. 'pl' → logprob: -9.005179405212402
    5. 'placement' → logprob: -9.755179405212402
    6. 'plac' → logprob: -9.880179405212402
    7. 'placer' → logprob: -9.880179405212402
    8. '_place' → logprob: -10.255179405212402
    9. 'places' → logprob: -11.005179405212402
    10. 'pace' → logprob: -11.005179405212402

Token 53: ' ensuite' (ID: 39713)
  Prédit: ' tous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tous' → logprob: -0.15703068673610687
    2. ' les' → logprob: -2.0320305824279785
    3. ' ' → logprob: -5.5320305824279785
    4. 's' → logprob: -5.7820305824279785
    5. 't' → logprob: -6.0320305824279785
    6. 'les' → logprob: -6.2820305824279785
    7. ' all' → logprob: -7.1570305824279785
    8. ' toutes' → logprob: -7.2820305824279785
    9. 'all' → logprob: -8.657031059265137
    10. ''' → logprob: -8.657031059265137

Token 54: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.06291268020868301
    2. 'les' → logprob: -3.687912702560425
    3. '1' → logprob: -3.937912702560425
    4. ''' → logprob: -4.812912464141846
    5. ' ' → logprob: -5.812912464141846
    6. 's' → logprob: -6.687912464141846
    7. ' le' → logprob: -7.062912464141846
    8. ' '' → logprob: -7.187912464141846
    9. '_' → logprob: -7.812912464141846
    10. 'temp' → logprob: -8.437912940979004

Token 55: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.07593575865030289
    2. ''' → logprob: -3.9509358406066895
    3. ' ' → logprob: -4.0759358406066895
    4. ' '' → logprob: -4.3259358406066895
    5. '"' → logprob: -5.2009358406066895
    6. ''esp' → logprob: -5.5759358406066895
    7. 'spaces' → logprob: -5.5759358406066895
    8. 'esp' → logprob: -5.8259358406066895
    9. '_' → logprob: -6.7009358406066895
    10. 'temp' → logprob: -7.0759358406066895

Token 56: ' tempor' (ID: 14725)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.576165795326233
    2. 'tempor' → logprob: -1.701165795326233
    3. ''' → logprob: -1.951165795326233
    4. ' tempora' → logprob: -2.3261656761169434
    5. 'temp' → logprob: -2.5761656761169434
    6. '_temp' → logprob: -2.5761656761169434
    7. 'par' → logprob: -2.9511656761169434
    8. '"' → logprob: -3.0761656761169434
    9. '_tmp' → logprob: -3.3261656761169434
    10. ' tempor' → logprob: -3.8261656761169434

Token 57: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.006797663867473602
    2. 'a' → logprob: -5.131797790527344
    3. 'aire' → logprob: -8.756797790527344
    4. 'aines' → logprob: -8.881797790527344
    5. '```' → logprob: -9.256797790527344
    6. 'aises' → logprob: -9.506797790527344
    7. ' a' → logprob: -9.756797790527344
    8. 'p' → logprob: -9.756797790527344
    9. 'aites' → logprob: -9.756797790527344
    10. 'ai' → logprob: -10.131797790527344

Token 58: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.18820589780807495
    2. ' par' → logprob: -1.8132059574127197
    3. ' by' → logprob: -6.313205718994141
    4. ')' → logprob: -6.438205718994141
    5. ''' → logprob: -7.188205718994141
    6. '"' → logprob: -7.438205718994141
    7. ' en' → logprob: -7.563205718994141
    8. '_' → logprob: -7.563205718994141
    9. 'by' → logprob: -7.688205718994141
    10. '_par' → logprob: -7.688205718994141

Token 59: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.024670086801052094
    2. 'des' → logprob: -3.774670124053955
    3. ' des' → logprob: -7.149670124053955
    4. '9' → logprob: -8.899669647216797
    5. '"' → logprob: -9.274669647216797
    6. ' '' → logprob: -9.399669647216797
    7. ''un' → logprob: -9.524669647216797
    8. ''a' → logprob: -9.774669647216797
    9. ''s' → logprob: -10.274669647216797
    10. ''d' → logprob: -10.774669647216797

Token 60: ' '' (ID: 461)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.2523479163646698
    2. ''' → logprob: -1.5023479461669922
    3. '"' → logprob: -8.252347946166992
    4. '0' → logprob: -10.252347946166992
    5. ' ' → logprob: -10.252347946166992
    6. '1' → logprob: -10.252347946166992
    7. ' '' → logprob: -10.377347946166992
    8. '`' → logprob: -11.752347946166992
    9. '-' → logprob: -13.627347946166992
    10. '')' → logprob: -13.752347946166992

Token 61: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.07076243311166763
    2. '1' → logprob: -3.3207623958587646
    3. ' '' → logprob: -4.195762634277344
    4. '0' → logprob: -5.070762634277344
    5. ''' → logprob: -5.070762634277344
    6. ' ' → logprob: -5.820762634277344
    7. '2' → logprob: -7.320762634277344
    8. ' ')' → logprob: -7.570762634277344
    9. 's' → logprob: -9.695762634277344
    10. '#' → logprob: -10.070762634277344

Token 62: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006429840810596943
    2. '"' → logprob: -6.256429672241211
    3. ' '' → logprob: -6.381429672241211
    4. ''''' → logprob: -6.631429672241211
    5. '"'' → logprob: -7.506429672241211
    6. ''
' → logprob: -8.381429672241211
    7. 's' → logprob: -8.506429672241211
    8. 'e' → logprob: -9.381429672241211
    9. '"""' → logprob: -9.506429672241211
    10. ''.' → logprob: -10.131429672241211

Token 63: '    
' (ID: 1944)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3750145733356476
    2. '   ' → logprob: -1.5000145435333252
    3. '"' → logprob: -2.625014543533325
    4. ' """' → logprob: -4.750014781951904
    5. '"""
' → logprob: -5.250014781951904
    6. ' """
' → logprob: -6.625014781951904
    7. '""' → logprob: -7.000014781951904
    8. '```' → logprob: -7.875014781951904
    9. '`' → logprob: -8.750014305114746
    10. ''' → logprob: -9.000014305114746

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4922090172767639
    2. '"""' → logprob: -0.9922090172767639
    3. ' """' → logprob: -4.117208957672119
    4. '"' → logprob: -6.867208957672119
    5. '```' → logprob: -8.367209434509277
    6. ' """
' → logprob: -9.367209434509277
    7. '""' → logprob: -9.367209434509277
    8. '    ' → logprob: -9.992209434509277
    9. '"""
' → logprob: -9.992209434509277
    10. '  ' → logprob: -10.117209434509277

Token 65: ' Args' (ID: 39185)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.1220240667462349
    2. '   ' → logprob: -2.2470240592956543
    3. '"""
' → logprob: -5.372024059295654
    4. ' """' → logprob: -5.872024059295654
    5. '"' → logprob: -7.247024059295654
    6. ' """
' → logprob: -7.622024059295654
    7. '""' → logprob: -8.247024536132812
    8. '```' → logprob: -8.872024536132812
    9. ''''' → logprob: -11.122024536132812
    10. 'def' → logprob: -11.372024536132812

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02710987627506256
    2. ' :' → logprob: -3.6521098613739014
    3. '[' → logprob: -8.15211009979248
    4. ',' → logprob: -8.27711009979248
    5. '=' → logprob: -9.27711009979248
    6. '):' → logprob: -9.77711009979248
    7. ')' → logprob: -10.52711009979248
    8. 's' → logprob: -11.02711009979248
    9. '[:]' → logprob: -11.02711009979248
    10. '   ' → logprob: -11.90211009979248

Token 67: '       ' (ID: 309)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.8231518864631653
    2. ')' → logprob: -1.4481518268585205
    3. ' ' → logprob: -1.9481518268585205
    4. '   ' → logprob: -2.0731518268585205
    5. ' ):' → logprob: -3.9481518268585205
    6. '    ' → logprob: -4.8231520652771
    7. ' input' → logprob: -4.9481520652771
    8. 'input' → logprob: -5.5731520652771
    9. ''' → logprob: -5.8231520652771
    10. 'n' → logprob: -6.0731520652771

Token 68: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.00036810929304920137
    2. 'str' → logprob: -8.625368118286133
    3. '   ' → logprob: -8.875368118286133
    4. ' input' → logprob: -10.000368118286133
    5. 'self' → logprob: -13.500368118286133
    6. 'output' → logprob: -14.750368118286133
    7. ' ' → logprob: -15.250368118286133
    8. 'param' → logprob: -15.250368118286133
    9. 'string' → logprob: -15.500368118286133
    10. '	input' → logprob: -15.625368118286133

Token 69: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.08043566346168518
    2. '_' → logprob: -2.5804357528686523
    3. '_s' → logprob: -6.705435752868652
    4. '_string' → logprob: -8.830435752868652
    5. ' _' → logprob: -10.330435752868652
    6. '_token' → logprob: -10.580435752868652
    7. '_t' → logprob: -10.705435752868652
    8. '```' → logprob: -11.455435752868652
    9. ')' → logprob: -11.580435752868652
    10. 's' → logprob: -11.955435752868652

Token 70: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47225263714790344
    2. ':' → logprob: -1.097252607345581
    3. ')' → logprob: -3.847252607345581
    4. '<|end|>' → logprob: -4.22225284576416
    5. '<|end|>' → logprob: -6.22225284576416
    6. ':str' → logprob: -6.72225284576416
    7. ' :' → logprob: -6.97225284576416
    8. ',' → logprob: -7.09725284576416
    9. ' ):' → logprob: -8.09725284576416
    10. '):
' → logprob: -8.22225284576416

Token 71: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.016051027923822403
    2. ' str' → logprob: -4.141050815582275
    3. 'string' → logprob: -11.516051292419434
    4. 's' → logprob: -12.641051292419434
    5. ')' → logprob: -13.141051292419434
    6. '[str' → logprob: -14.391051292419434
    7. 'stri' → logprob: -15.516051292419434
    8. ':str' → logprob: -15.641051292419434
    9. '   ' → logprob: -15.766051292419434
    10. '	str' → logprob: -16.266050338745117

Token 72: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014530897140503
    2. '):' → logprob: -1.7014530897140503
    3. '   ' → logprob: -10.70145320892334
    4. '):
' → logprob: -12.57645320892334
    5. ' )' → logprob: -12.70145320892334
    6. ' ):' → logprob: -12.95145320892334
    7. ' ' → logprob: -13.57645320892334
    8. ':' → logprob: -13.70145320892334
    9. '`)' → logprob: -13.95145320892334
    10. '),' → logprob: -14.07645320892334

Token 73: ' La' (ID: 3038)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.971003532409668
    2. '   ' → logprob: -1.346003532409668
    3. ' La' → logprob: -2.346003532409668
    4. '       ' → logprob: -2.971003532409668
    5. '<|end|>' → logprob: -2.971003532409668
    6. ' la' → logprob: -3.096003532409668
    7. ' Le' → logprob: -3.346003532409668
    8. ' ' → logprob: -4.096003532409668
    9. '    ' → logprob: -4.346003532409668
    10. ')' → logprob: -4.721003532409668

Token 74: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.02581074647605419
    2. 'cha' → logprob: -3.900810718536377
    3. 'chaine' → logprob: -5.400810718536377
    4. ' cha' → logprob: -8.150811195373535
    5. ' chaine' → logprob: -8.275811195373535
    6. 's' → logprob: -9.275811195373535
    7. ' ' → logprob: -9.900811195373535
    8. '   ' → logprob: -10.900811195373535
    9. 'Cha' → logprob: -12.150811195373535
    10. ' chaînes' → logprob: -12.275811195373535

Token 75: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0139919519424438
    2. ' à' → logprob: -1.0139919519424438
    3. ' de' → logprob: -2.0139918327331543
    4. '   ' → logprob: -2.7639918327331543
    5. ')' → logprob: -4.013991832733154
    6. 'de' → logprob: -4.388991832733154
    7. ' a' → logprob: -4.388991832733154
    8. ' )' → logprob: -4.638991832733154
    9. ' input' → logprob: -4.763991832733154
    10. ' ' → logprob: -4.888991832733154

Token 76: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.008635726757347584
    2. ' caractères' → logprob: -5.008635520935059
    3. 'entrée' → logprob: -6.633635520935059
    4. 'c' → logprob: -8.508635520935059
    5. 'texte' → logprob: -8.758635520935059
    6. ' caractère' → logprob: -9.133635520935059
    7. 's' → logprob: -10.258635520935059
    8. ' car' → logprob: -10.758635520935059
    9. ' caract' → logprob: -10.758635520935059
    10. 'chaine' → logprob: -12.008635520935059

Token 77: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6473484039306641
    2. '   ' → logprob: -0.7723484039306641
    3. ' à' → logprob: -5.397348403930664
    4. '):' → logprob: -6.022348403930664
    5. '    
' → logprob: -6.272348403930664
    6. '"""' → logprob: -6.272348403930664
    7. ' )' → logprob: -7.522348403930664
    8. '")' → logprob: -7.522348403930664
    9. '```' → logprob: -7.897348403930664
    10. '"""
' → logprob: -8.272348403930664

Token 78: ' transformer' (ID: 59595)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.0045150890946388245
    2. ' transformer' → logprob: -6.129515171051025
    3. 'trans' → logprob: -6.629515171051025
    4. '   ' → logprob: -7.254515171051025
    5. 'trait' → logprob: -8.504514694213867
    6. 'tra' → logprob: -10.629514694213867
    7. ' transform' → logprob: -10.629514694213867
    8. ' traiter' → logprob: -11.254514694213867
    9. ' transforme' → logprob: -12.129514694213867
    10. 'Transformer' → logprob: -12.254514694213867

Token 79: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3478386104106903
    2. '   ' → logprob: -1.3478386402130127
    3. '):' → logprob: -3.9728386402130127
    4. '    
' → logprob: -5.097838401794434
    5. '\n' → logprob: -5.722838401794434
    6. ')
' → logprob: -6.847838401794434
    7. '):
' → logprob: -7.222838401794434
    8. '")' → logprob: -7.222838401794434
    9. ')\' → logprob: -7.222838401794434
    10. '
' → logprob: -7.722838401794434

Token 80: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14250345528125763
    2. '"""' → logprob: -2.392503499984741
    3. '"""
' → logprob: -3.892503499984741
    4. '\n' → logprob: -4.517503261566162
    5. '    
' → logprob: -5.517503261566162
    6. ')' → logprob: -6.267503261566162
    7. '```' → logprob: -7.017503261566162
    8. '\' → logprob: -7.392503261566162
    9. '"\' → logprob: -7.517503261566162
    10. '"' → logprob: -7.517503261566162

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012286532670259476
    2. '"""' → logprob: -4.88728666305542
    3. ' """' → logprob: -6.01228666305542
    4. 'Returns' → logprob: -6.63728666305542
    5. ')' → logprob: -7.51228666305542
    6. ' Returns' → logprob: -9.012286186218262
    7. ' """
' → logprob: -9.762286186218262
    8. '```' → logprob: -10.012286186218262
    9. '    ' → logprob: -10.512286186218262
    10. '    
' → logprob: -11.012286186218262

Token 82: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19657361507415771
    2. '"""' → logprob: -2.0715737342834473
    3. ' """' → logprob: -3.9465737342834473
    4. ' """
' → logprob: -4.196573734283447
    5. '"""
' → logprob: -4.946573734283447
    6. 'Returns' (adapté à ' Returns') → logprob: -5.071573734283447
    7. ' Returns' → logprob: -6.071573734283447
    8. '```' → logprob: -7.946573734283447
    9. '    
' → logprob: -8.071573257446289
    10. ' returns' → logprob: -8.196573257446289

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.702575147151947
    2. ' :' → logprob: -0.702575147151947
    3. '   ' → logprob: -5.577575206756592
    4. '```' → logprob: -6.827575206756592
    5. ' ' → logprob: -6.952575206756592
    6. ' str' → logprob: -7.452575206756592
    7. ',' → logprob: -8.202574729919434
    8. '    ' → logprob: -8.327574729919434
    9. ':str' → logprob: -8.452574729919434
    10. ' ):' → logprob: -8.452574729919434

Token 84: '       ' (ID: 309)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.00023524489370174706
    2. 'str' → logprob: -8.750235557556152
    3. '   ' → logprob: -9.625235557556152
    4. ' ' → logprob: -12.250235557556152
    5. '    ' → logprob: -12.500235557556152
    6. '(str' → logprob: -14.375235557556152
    7. ' (' → logprob: -14.875235557556152
    8. '	str' → logprob: -14.875235557556152
    9. ' int' → logprob: -16.125234603881836
    10. ' None' → logprob: -16.250234603881836

Token 85: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.576002299785614
    2. ' str' → logprob: -0.826002299785614
    3. '   ' → logprob: -9.95100212097168
    4. '       ' → logprob: -11.95100212097168
    5. 'Str' → logprob: -13.32600212097168
    6. '(str' → logprob: -13.82600212097168
    7. 'int' → logprob: -13.95100212097168
    8. '```' → logprob: -14.20100212097168
    9. '	str' → logprob: -14.20100212097168
    10. '    ' → logprob: -14.32600212097168

Token 86: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035312775522470474
    2. ':
' → logprob: -3.5353128910064697
    3. '   ' → logprob: -5.910312652587891
    4. '```' → logprob: -7.035312652587891
    5. '
' → logprob: -7.160312652587891
    6. ' :' → logprob: -7.410312652587891
    7. '

' → logprob: -9.78531265258789
    8. ':return' → logprob: -9.78531265258789
    9. ' :
' → logprob: -10.03531265258789
    10. ',' → logprob: -10.03531265258789

Token 87: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.021540040150284767
    2. ' la' → logprob: -4.39654016494751
    3. 'La' → logprob: -5.14654016494751
    4. '   ' → logprob: -6.52154016494751
    5. ' input' → logprob: -7.52154016494751
    6. ' Le' → logprob: -7.64654016494751
    7. '    ' → logprob: -7.64654016494751
    8. ' L' → logprob: -9.521539688110352
    9. ' transformed' → logprob: -10.146539688110352
    10. ' l' → logprob: -11.396539688110352

Token 88: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.02851715497672558
    2. ' chaine' → logprob: -5.028517246246338
    3. 'cha' → logprob: -5.153517246246338
    4. 'chaine' → logprob: -5.403517246246338
    5. ' nouvelle' → logprob: -5.528517246246338
    6. '   ' → logprob: -5.653517246246338
    7. ' cha' → logprob: -6.778517246246338
    8. ' string' → logprob: -7.028517246246338
    9. ' ' → logprob: -7.028517246246338
    10. ' version' → logprob: -8.52851676940918

Token 89: ' transform' (ID: 7118)
  Prédit: ' transform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transform' → logprob: -0.03678441420197487
    2. ' transformed' → logprob: -4.036784648895264
    3. 'transform' → logprob: -4.536784648895264
    4. ' de' → logprob: -5.911784648895264
    5. '   ' → logprob: -6.786784648895264
    6. ' mod' → logprob: -7.036784648895264
    7. ' trans' → logprob: -7.286784648895264
    8. ' transforme' → logprob: -7.411784648895264
    9. '_transform' → logprob: -8.036784172058105
    10. ' à' → logprob: -8.411784172058105

Token 90: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0788998156785965
    2. 'é' → logprob: -2.57889986038208
    3. 'e' → logprob: -12.453899383544922
    4. 'ed' → logprob: -13.453899383544922
    5. 'ées' → logprob: -13.578899383544922
    6. 'ee' → logprob: -13.578899383544922
    7. 'á' → logprob: -14.703899383544922
    8. '_' → logprob: -14.953899383544922
    9. '�' → logprob: -15.078899383544922
    10. ' é' → logprob: -15.578899383544922

Token 91: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6360611915588379
    2. '
' → logprob: -1.261061191558838
    3. '.' → logprob: -2.761061191558838
    4. '    
' → logprob: -3.136061191558838
    5. ':' → logprob: -3.511061191558838
    6. '\n' → logprob: -4.011061191558838
    7. ':
' → logprob: -4.636061191558838
    8. '  
' → logprob: -5.886061191558838
    9. '.
' → logprob: -5.886061191558838
    10. '   
' → logprob: -5.886061191558838

Token 92: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4408169686794281
    2. ' les' → logprob: -1.0658169984817505
    3. ' le' → logprob: -4.565816879272461
    4. '   ' → logprob: -7.565816879272461
    5. ' ' → logprob: -8.065816879272461
    6. ' l' → logprob: -8.190816879272461
    7. 'les' → logprob: -8.565816879272461
    8. 'la' → logprob: -9.065816879272461
    9. ' the' → logprob: -9.815816879272461
    10. ' ces' → logprob: -10.190816879272461

Token 93: ' règles' (ID: 67042)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.055227410048246384
    2. ' règles' → logprob: -2.930227518081665
    3. ' r' → logprob: -8.805227279663086
    4. ' critères' → logprob: -9.805227279663086
    5. ' spéc' → logprob: -10.055227279663086
    6. ' instructions' → logprob: -11.055227279663086
    7. ' ' → logprob: -11.305227279663086
    8. 'rules' → logprob: -11.430227279663086
    9. '   ' → logprob: -11.555227279663086
    10. 'sp' → logprob: -11.555227279663086

Token 94: ' ci' (ID: 7405)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04961825907230377
    2. '.' → logprob: -3.6746182441711426
    3. '"' → logprob: -5.174618244171143
    4. '```' → logprob: -5.299618244171143
    5. '    
' → logprob: -5.799618244171143
    6. '"""' → logprob: -5.799618244171143
    7. ':' → logprob: -7.174618244171143
    8. '"""
' → logprob: -7.174618244171143
    9. '    ' → logprob: -7.299618244171143
    10. '\n' → logprob: -7.424618244171143

Token 95: '-dessus' (ID: 74812)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.645544409751892
    2. '-' → logprob: -1.895544409751892
    3. '-dessus' → logprob: -1.895544409751892
    4. 'nées' → logprob: -2.0205445289611816
    5. '-ap' → logprob: -2.3955445289611816
    6. 'd' → logprob: -2.7705445289611816
    7. 't' → logprob: -2.8955445289611816
    8. 'dess' → logprob: -3.2705445289611816
    9. 'm' → logprob: -3.8955445289611816
    10. 'tes' → logprob: -4.020544528961182

Token 96: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0549242496490479
    2. '   ' → logprob: -1.1799242496490479
    3. '
' → logprob: -1.5549242496490479
    4. '\n' → logprob: -2.429924249649048
    5. ':
' → logprob: -4.054924011230469
    6. '    
' → logprob: -4.429924011230469
    7. '```' → logprob: -5.679924011230469
    8. ')' → logprob: -5.929924011230469
    9. '  
' → logprob: -6.179924011230469
    10. '):' → logprob: -6.179924011230469

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22450847923755646
    2. '"""' → logprob: -2.34950852394104
    3. '\n' → logprob: -3.34950852394104
    4. '"""
' → logprob: -3.97450852394104
    5. '"' → logprob: -3.97450852394104
    6. '
' → logprob: -4.349508285522461
    7. '"\' → logprob: -4.974508285522461
    8. '    
' → logprob: -5.099508285522461
    9. '\' → logprob: -6.224508285522461
    10. '""' → logprob: -6.474508285522461

Token 98: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2245008647441864
    2. '"""' → logprob: -2.599500894546509
    3. '\n' → logprob: -2.849500894546509
    4. '"' → logprob: -3.974500894546509
    5. '
' → logprob: -4.47450065612793
    6. '"""
' (adapté à ' """
') → logprob: -4.59950065612793
    7. '    
' → logprob: -4.59950065612793
    8. '\' → logprob: -5.09950065612793
    9. '```' → logprob: -5.34950065612793
    10. '"\' → logprob: -5.47450065612793

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00716417795047164
    2. '    
' → logprob: -5.507164001464844
    3. '
' → logprob: -6.507164001464844
    4. '\n' → logprob: -7.382164001464844
    5. '\' → logprob: -8.007164001464844
    6. '    ' → logprob: -8.382164001464844
    7. 'n' → logprob: -9.132164001464844
    8. ' 
' → logprob: -9.507164001464844
    9. 'def' → logprob: -9.757164001464844
    10. '     
' → logprob: -9.882164001464844

Token 100: ' #' (ID: 1069)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.47089314460754395
    2. '   ' → logprob: -1.720893144607544
    3. ' temp' → logprob: -1.970893144607544
    4. 'tmp' → logprob: -3.220893144607544
    5. '    
' → logprob: -5.595892906188965
    6. ' tmp' → logprob: -5.720892906188965
    7. 'input' → logprob: -5.845892906188965
    8. 'result' → logprob: -6.095892906188965
    9. 'trans' → logprob: -6.720892906188965
    10. 'def' → logprob: -7.595892906188965

Token 101: ' Ét' (ID: 54156)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6251509785652161
    2. ' temp' → logprob: -0.8751509785652161
    3. 'tmp' → logprob: -3.7501509189605713
    4. 'result' → logprob: -5.25015115737915
    5. ' transformed' → logprob: -5.37515115737915
    6. ' tmp' → logprob: -5.62515115737915
    7. ' result' → logprob: -5.62515115737915
    8. 'trans' → logprob: -6.37515115737915
    9. 'def' → logprob: -7.12515115737915
    10. ' temporary' → logprob: -7.25015115737915

Token 102: 'ape' (ID: 2480)
  Prédit: 'ape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.00048524985322728753
    2. 'a' → logprob: -8.37548542022705
    3. '   ' → logprob: -8.50048542022705
    4. 'ap' → logprob: -10.50048542022705
    5. 'apes' → logprob: -11.12548542022705
    6. '  ' → logprob: -13.50048542022705
    7. '#' → logprob: -13.50048542022705
    8. '       ' → logprob: -14.00048542022705
    9. 'api' → logprob: -14.62548542022705
    10. '    ' → logprob: -14.62548542022705

Token 103: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.539030134677887
    2. ' =' → logprob: -1.6640300750732422
    3. '1' → logprob: -2.289030075073242
    4. '   ' → logprob: -2.539030075073242
    5. '_' → logprob: -4.414030075073242
    6. '_temp' → logprob: -4.789030075073242
    7. '_par' → logprob: -5.039030075073242
    8. '_tmp' → logprob: -5.039030075073242
    9. ' tempora' → logprob: -5.789030075073242
    10. ' par' → logprob: -6.039030075073242

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05326244235038757
    2. ' ' → logprob: -3.05326247215271
    3. '   ' → logprob: -5.428262233734131
    4. 'par' → logprob: -9.178262710571289
    5. '_' → logprob: -9.928262710571289
    6. 's' → logprob: -10.428262710571289
    7. '  ' → logprob: -10.803262710571289
    8. '```' → logprob: -11.053262710571289
    9. 'tmp' → logprob: -11.803262710571289
    10. '    
' → logprob: -12.053262710571289

Token 105: ' :' (ID: 712)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.8862305283546448
    2. ' =' → logprob: -1.13623046875
    3. '_temp' → logprob: -2.13623046875
    4. 'tmp' → logprob: -3.13623046875
    5. ' temp' → logprob: -3.63623046875
    6. '_tmp' → logprob: -3.76123046875
    7. '   ' → logprob: -4.51123046875
    8. 'input' → logprob: -5.13623046875
    9. '_trans' → logprob: -5.38623046875
    10. ' tmp' → logprob: -5.63623046875

Token 106: ' remplacer' (ID: 116120)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0473278760910034
    2. 'input' → logprob: -1.2973278760910034
    3. ' temp' → logprob: -1.4223278760910034
    4. 'temp' → logprob: -2.547327995300293
    5. 'tmp' → logprob: -3.297327995300293
    6. ' tmp' → logprob: -4.672327995300293
    7. ' temporary' → logprob: -5.922327995300293
    8. ' remplacer' → logprob: -6.172327995300293
    9. ' transformed' → logprob: -6.422327995300293
    10. 'result' → logprob: -7.172327995300293

Token 107: ' tous' (ID: 10688)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3059917986392975
    2. ' input' → logprob: -2.0559918880462646
    3. ''' → logprob: -2.8059918880462646
    4. ' '' → logprob: -3.6809918880462646
    5. '(input' → logprob: -3.8059918880462646
    6. '('' → logprob: -4.3059916496276855
    7. '(' → logprob: -4.8059916496276855
    8. '"' → logprob: -5.8059916496276855
    9. 'temp' → logprob: -7.5559916496276855
    10. 'l' → logprob: -7.8059916496276855

Token 108: ' les' (ID: 1341)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.48841747641563416
    2. ' les' → logprob: -1.7384175062179565
    3. '('' → logprob: -2.363417387008667
    4. '(input' → logprob: -3.363417387008667
    5. ' ' → logprob: -3.488417387008667
    6. ' input' → logprob: -3.613417387008667
    7. '   ' → logprob: -5.113417625427246
    8. 'input' → logprob: -5.738417625427246
    9. ''' → logprob: -5.863417625427246
    10. ' "' → logprob: -6.113417625427246

Token 109: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04201987758278847
    2. ' '' → logprob: -3.542019844055176
    3. '"' → logprob: -4.667019844055176
    4. ''\' → logprob: -7.292019844055176
    5. '1' → logprob: -7.792019844055176
    6. ''l' → logprob: -7.917019844055176
    7. ''t' → logprob: -8.167019844055176
    8. ' ' → logprob: -9.292019844055176
    9. ''s' → logprob: -9.292019844055176
    10. ''z' → logprob: -9.417019844055176

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024283365346491337
    2. ''' → logprob: -6.1274285316467285
    3. ' ' → logprob: -8.75242805480957
    4. '9' → logprob: -10.50242805480957
    5. ' '' → logprob: -10.62742805480957
    6. '"' → logprob: -11.00242805480957
    7. ''s' → logprob: -11.50242805480957
    8. 's' → logprob: -13.62742805480957
    9. '`' → logprob: -14.25242805480957
    10. '' → logprob: -14.68992805480957

Token 111: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05061013251543045
    2. ' '' → logprob: -3.175610065460205
    3. ' par' → logprob: -6.300610065460205
    4. 'par' → logprob: -6.550610065460205
    5. ''s' → logprob: -6.800610065460205
    6. 'tmp' → logprob: -7.050610065460205
    7. '_tmp' → logprob: -7.550610065460205
    8. 's' → logprob: -7.925610065460205
    9. '"' → logprob: -8.675610542297363
    10. ' tempora' → logprob: -8.675610542297363

Token 112: ' par' (ID: 686)
  Prédit: '_tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tmp' → logprob: -1.1031906604766846
    2. '_temp' → logprob: -1.4781906604766846
    3. ' par' → logprob: -2.1031906604766846
    4. ' tempora' → logprob: -2.7281906604766846
    5. '_par' → logprob: -2.9781906604766846
    6. 'tmp' → logprob: -2.9781906604766846
    7. 'par' → logprob: -3.1031906604766846
    8. 'temp' → logprob: -3.1031906604766846
    9. ' temporary' → logprob: -4.3531904220581055
    10. 'tempor' → logprob: -4.4781904220581055

Token 113: ' des' (ID: 731)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.3413745164871216
    2. ''' → logprob: -1.7163745164871216
    3. '"' → logprob: -2.716374397277832
    4. '"\' → logprob: -3.216374397277832
    5. ' '\' → logprob: -6.841374397277832
    6. ''t' → logprob: -7.716374397277832
    7. ''un' → logprob: -8.341374397277832
    8. ' '' → logprob: -8.841374397277832
    9. '\t' → logprob: -8.966374397277832
    10. ''#' → logprob: -8.966374397277832

Token 114: ' espaces' (ID: 98361)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.05411340296268463
    2. '"\' → logprob: -3.8041133880615234
    3. ''' → logprob: -4.054113388061523
    4. '\t' → logprob: -4.804113388061523
    5. '"' → logprob: -6.179113388061523
    6. '\x' → logprob: -6.679113388061523
    7. ' '\' → logprob: -7.679113388061523
    8. '_' → logprob: -8.304113388061523
    9. 'tempor' → logprob: -9.054113388061523
    10. ' \' → logprob: -9.179113388061523

Token 115: '.' (ID: 13)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.5022148489952087
    2. ' =' → logprob: -1.6272149085998535
    3. '   ' → logprob: -2.7522149085998535
    4. '_temp' → logprob: -3.2522149085998535
    5. 'tmp' → logprob: -3.2522149085998535
    6. ' temp' → logprob: -3.7522149085998535
    7. '_tmp' → logprob: -4.8772149085998535
    8. '    
' → logprob: -5.2522149085998535
    9. 'trans' → logprob: -5.3772149085998535
    10. ' tempora' → logprob: -6.2522149085998535

Token 116: ' 
' (ID: 793)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.6966814398765564
    2. '   ' → logprob: -0.9466814398765564
    3. 'temp' → logprob: -2.946681499481201
    4. ' transformed' → logprob: -3.946681499481201
    5. ' tmp' → logprob: -4.696681499481201
    6. '    
' → logprob: -4.696681499481201
    7. ' result' → logprob: -5.196681499481201
    8. ' temporary' → logprob: -5.446681499481201
    9. 'tmp' → logprob: -5.821681499481201
    10. ' intermediate' → logprob: -6.071681499481201

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3179899752140045
    2. ' temp' → logprob: -1.6929899454116821
    3. 'temp' → logprob: -2.6929900646209717
    4. '    
' → logprob: -5.442989826202393
    5. ' transformed' → logprob: -5.692989826202393
    6. 'result' → logprob: -6.067989826202393
    7. ' result' → logprob: -6.067989826202393
    8. 'tmp' → logprob: -6.192989826202393
    9. ' tmp' → logprob: -6.317989826202393
    10. ' temporary' → logprob: -7.067989826202393

Token 118: ' #' (ID: 1069)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.22888873517513275
    2. 'temp' → logprob: -1.728888750076294
    3. 'tmp' → logprob: -5.103888511657715
    4. ' tmp' → logprob: -5.228888511657715
    5. ' transformed' → logprob: -5.478888511657715
    6. ' result' → logprob: -5.603888511657715
    7. 'result' → logprob: -6.228888511657715
    8. ' temporary' → logprob: -6.353888511657715
    9. '   ' → logprob: -6.603888511657715
    10. ' intermediate' → logprob: -6.728888511657715

Token 119: ' Les' (ID: 7029)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6506078243255615
    2. ' temp' → logprob: -0.7756078243255615
    3. 'tmp' → logprob: -4.650608062744141
    4. 'inter' → logprob: -6.525608062744141
    5. ' tmp' → logprob: -6.525608062744141
    6. ' transformed' → logprob: -6.775608062744141
    7. ' intermediate' → logprob: -7.025608062744141
    8. 'trans' → logprob: -7.275608062744141
    9. 'result' → logprob: -7.400608062744141
    10. ' temporary' → logprob: -7.400608062744141

Token 120: ' espaces' (ID: 98361)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.3495468497276306
    2. ' temp' → logprob: -1.3495469093322754
    3. 'tmp' → logprob: -3.8495469093322754
    4. ' tmp' → logprob: -5.474546909332275
    5. 'temporary' → logprob: -6.224546909332275
    6. ' temporary' → logprob: -6.349546909332275
    7. 'result' → logprob: -6.474546909332275
    8. 'input' → logprob: -6.974546909332275
    9. ' result' → logprob: -7.599546909332275
    10. 'str' → logprob: -7.599546909332275

Token 121: ' servent' (ID: 192213)
  Prédit: '_temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.4961409866809845
    2. '_tmp' → logprob: -1.496140956878662
    3. 'tempor' → logprob: -2.496140956878662
    4. 'temp' → logprob: -3.246140956878662
    5. '_tem' → logprob: -3.996140956878662
    6. '_' → logprob: -4.371140956878662
    7. 'tmp' → logprob: -5.246140956878662
    8. '_t' → logprob: -5.496140956878662
    9. ' =' → logprob: -5.996140956878662
    10. 's' → logprob: -7.746140956878662

Token 122: ' de' (ID: 334)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8848133683204651
    2. ' tempora' → logprob: -1.5098133087158203
    3. ' as' → logprob: -1.6348133087158203
    4. ' temporary' → logprob: -3.2598133087158203
    5. ' de' → logprob: -3.3848133087158203
    6. ' a' → logprob: -3.3848133087158203
    7. ' "' → logprob: -4.63481330871582
    8. ' ' → logprob: -4.88481330871582
    9. 'tempor' → logprob: -4.88481330871582
    10. ' d' → logprob: -5.00981330871582

Token 123: ' rep' (ID: 2449)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5936930775642395
    2. 'place' → logprob: -2.0936930179595947
    3. ' marque' → logprob: -2.9686930179595947
    4. ' place' → logprob: -3.4686930179595947
    5. ' espaces' → logprob: -3.7186930179595947
    6. ' caractères' → logprob: -3.7186930179595947
    7. ' espace' → logprob: -3.8436930179595947
    8. 'temp' → logprob: -3.9686930179595947
    9. 'tempor' → logprob: -4.093693256378174
    10. ' caractère' → logprob: -4.218693256378174

Token 124: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.08965136110782623
    2. 'ères' → logprob: -2.464651346206665
    3. 'è' → logprob: -8.214651107788086
    4. 'l' → logprob: -8.589651107788086
    5. 'lace' → logprob: -8.589651107788086
    6. 'èr' → logprob: -10.589651107788086
    7. '`' → logprob: -12.089651107788086
    8. 'lé' → logprob: -12.464651107788086
    9. 'rès' → logprob: -12.589651107788086
    10. 'érer' → logprob: -12.839651107788086

Token 125: ' tempora' (ID: 117509)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.5456041693687439
    2. ' temp' → logprob: -1.7956042289733887
    3. '   ' → logprob: -2.0456042289733887
    4. ' tempora' → logprob: -3.0456042289733887
    5. 'tmp' → logprob: -3.5456042289733887
    6. '    
' → logprob: -4.545604228973389
    7. 'trans' → logprob: -4.795604228973389
    8. ' tmp' → logprob: -5.545604228973389
    9. 'inter' → logprob: -5.545604228973389
    10. ' temporary' → logprob: -5.920604228973389

Token 126: 'ire' (ID: 594)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6934844851493835
    2. 's' → logprob: -1.9434845447540283
    3. ''' → logprob: -2.5684845447540283
    4. ' "' → logprob: -2.5684845447540283
    5. 'tmp' → logprob: -2.9434845447540283
    6. ' '' → logprob: -3.3184845447540283
    7. '_' → logprob: -3.8184845447540283
    8. ' ' → logprob: -4.318484306335449
    9. ' tempora' → logprob: -4.443484306335449
    10. ' de' → logprob: -4.443484306335449

Token 127: ' pour' (ID: 1930)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.30774012207984924
    2. '   ' → logprob: -1.5577400922775269
    3. '   
' → logprob: -3.5577402114868164
    4. '     
' → logprob: -5.057740211486816
    5. 'input' → logprob: -5.182740211486816
    6. 'temp' → logprob: -5.557740211486816
    7. ' 
' → logprob: -5.807740211486816
    8. '  
' → logprob: -6.057740211486816
    9. '
' → logprob: -6.307740211486816
    10. ',' → logprob: -7.182740211486816

Token 128: ' ne' (ID: 453)
  Prédit: ' éviter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.3897642493247986
    2. ' faciliter' → logprob: -1.6397643089294434
    3. ' effectuer' → logprob: -3.1397643089294434
    4. ' la' → logprob: -3.7647643089294434
    5. ' remplacer' → logprob: -4.764764308929443
    6. ' les' → logprob: -4.889764308929443
    7. ' pouvoir' → logprob: -5.139764308929443
    8. ' input' → logprob: -5.264764308929443
    9. ' garantir' → logprob: -5.514764308929443
    10. ' le' → logprob: -5.639764308929443

Token 129: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.06266827881336212
    2. 'pas' → logprob: -2.8126683235168457
    3. ' ' → logprob: -7.437668323516846
    4. '   ' → logprob: -10.437667846679688
    5. 'p' → logprob: -10.687667846679688
    6. '_pas' → logprob: -10.937667846679688
    7. 's' → logprob: -11.187667846679688
    8. ' not' → logprob: -12.187667846679688
    9. ' pass' → logprob: -12.437667846679688
    10. '  ' → logprob: -12.812667846679688

Token 130: ' inter' (ID: 993)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.37338903546333313
    2. 'con' → logprob: -1.9983890056610107
    3. 'inter' → logprob: -3.2483890056610107
    4. ' créer' → logprob: -3.4983890056610107
    5. ' remplacer' → logprob: -4.24838924407959
    6. ' confl' → logprob: -4.62338924407959
    7. 'pas' → logprob: -4.74838924407959
    8. '
' → logprob: -4.99838924407959
    9. ' conf' → logprob: -5.12338924407959
    10. '

' → logprob: -5.49838924407959

Token 131: 'fér' (ID: 21958)
  Prédit: 'fér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fér' → logprob: -0.05349649488925934
    2. 'f' → logprob: -3.0534965991973877
    3. 'fer' → logprob: -5.803496360778809
    4. 'rom' → logprob: -7.303496360778809
    5. '

' → logprob: -8.178496360778809
    6. '
' → logprob: -8.303496360778809
    7. 'm' → logprob: -9.303496360778809
    8. 'fé' → logprob: -9.553496360778809
    9. 'férence' → logprob: -9.678496360778809
    10. 'fr' → logprob: -9.803496360778809

Token 132: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0006707399734295905
    2. 'e' → logprob: -7.500670909881592
    3. 'ent' → logprob: -10.000670433044434
    4. 'rer' → logprob: -11.000670433044434
    5. 'erer' → logprob: -11.000670433044434
    6. '   ' → logprob: -11.875670433044434
    7. 'érer' → logprob: -12.000670433044434
    8. 'es' → logprob: -12.375670433044434
    9. 'en' → logprob: -13.000670433044434
    10. '#' → logprob: -13.000670433044434

Token 133: ' avec' (ID: 3937)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.7653419971466064
    2. ' avec' → logprob: -0.7653419971466064
    3. 'with' → logprob: -3.1403419971466064
    4. ' ' → logprob: -4.140341758728027
    5. 'avec' → logprob: -5.765341758728027
    6. '   ' → logprob: -6.265341758728027
    7. '  ' → logprob: -6.765341758728027
    8. ' "' → logprob: -7.515341758728027
    9. ' '' → logprob: -7.515341758728027
    10. 'input' → logprob: -7.765341758728027

Token 134: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.37276893854141235
    2. ''' → logprob: -1.6227688789367676
    3. ' '' → logprob: -3.4977688789367676
    4. 'les' → logprob: -3.6227688789367676
    5. ' la' → logprob: -3.9977688789367676
    6. '9' → logprob: -4.372768878936768
    7. 'la' → logprob: -4.997768878936768
    8. ' ' → logprob: -5.497768878936768
    9. ' le' → logprob: -5.622768878936768
    10. 'l' → logprob: -5.747768878936768

Token 135: ' remplacement' (ID: 113511)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7429218292236328
    2. 'rem' → logprob: -1.3679218292236328
    3. ' remplacement' → logprob: -2.492921829223633
    4. '9' → logprob: -2.617921829223633
    5. 'code' → logprob: -3.992921829223633
    6. '1' → logprob: -4.492921829223633
    7. ' reste' → logprob: -4.492921829223633
    8. 's' → logprob: -4.867921829223633
    9. 'reste' → logprob: -5.117921829223633
    10. ' rem' → logprob: -5.117921829223633

Token 136: ' suivant' (ID: 68705)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0828777551651
    2. 'temp' → logprob: -1.2078777551651
    3. ' tempora' → logprob: -2.7078776359558105
    4. ' temp' → logprob: -2.8328776359558105
    5. '    
' → logprob: -3.2078776359558105
    6. 's' → logprob: -3.7078776359558105
    7. 'input' → logprob: -3.9578776359558105
    8. 'tmp' → logprob: -3.9578776359558105
    9. '_' → logprob: -3.9578776359558105
    10. '_temp' → logprob: -4.0828776359558105

Token 137: '.
' (ID: 558)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.8475919365882874
    2. '   ' → logprob: -0.9725919365882874
    3. '    
' → logprob: -2.0975918769836426
    4. ' temp' → logprob: -3.5975918769836426
    5. 'input' → logprob: -4.222591876983643
    6. ' transformed' → logprob: -4.972591876983643
    7. 'trans' → logprob: -5.597591876983643
    8. 'tmp' → logprob: -5.597591876983643
    9. '   
' → logprob: -5.722591876983643
    10. 'result' → logprob: -6.472591876983643

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3266652822494507
    2. '    
' → logprob: -2.3266654014587402
    3. 'temp' → logprob: -3.2016654014587402
    4. 'input' → logprob: -3.3266654014587402
    5. '"' → logprob: -3.5766654014587402
    6. ' 
' → logprob: -3.8266654014587402
    7. ' temp' → logprob: -4.45166540145874
    8. '     
' → logprob: -4.70166540145874
    9. ' input' → logprob: -4.95166540145874
    10. '    ' → logprob: -4.95166540145874

Token 139: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.7209969758987427
    2. ' temp' → logprob: -0.8459969758987427
    3. '   ' → logprob: -3.720996856689453
    4. 'tmp' → logprob: -3.845996856689453
    5. 'result' → logprob: -4.595996856689453
    6. ' transformed' → logprob: -4.720996856689453
    7. ' tmp' → logprob: -5.095996856689453
    8. ' result' → logprob: -5.595996856689453
    9. 'inter' → logprob: -5.970996856689453
    10. ' temporary' → logprob: -6.345996856689453

Token 140: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0011960632400587201
    2. '_string' → logprob: -7.876195907592773
    3. '_' → logprob: -8.001195907592773
    4. ' =' → logprob: -8.001195907592773
    5. 'str' → logprob: -9.376195907592773
    6. 'r' → logprob: -11.251195907592773
    7. '_s' → logprob: -11.626195907592773
    8. 's' → logprob: -11.751195907592773
    9. 'Str' → logprob: -12.001195907592773
    10. 'ed' → logprob: -12.126195907592773

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008067715098150074
    2. '=' → logprob: -7.12580680847168
    3. ' ' → logprob: -13.75080680847168
    4. ' =
' → logprob: -14.62580680847168
    5. 's' → logprob: -15.37580680847168
    6. '=input' → logprob: -15.37580680847168
    7. ' ="' → logprob: -15.87580680847168
    8. ')' → logprob: -16.12580680847168
    9. '   ' → logprob: -17.50080680847168
    10. '  ' → logprob: -17.62580680847168

Token 142: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04860054701566696
    2. ' input' → logprob: -3.048600435256958
    3. '   ' → logprob: -11.548600196838379
    4. ' ' → logprob: -13.298600196838379
    5. '(input' → logprob: -14.923600196838379
    6. '	input' → logprob: -15.173600196838379
    7. '  ' → logprob: -15.298600196838379
    8. '"' → logprob: -15.423600196838379
    9. '=input' → logprob: -15.673600196838379
    10. '[input' → logprob: -15.923600196838379

Token 143: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0009126556105911732
    2. 'str' → logprob: -7.750912666320801
    3. '_' → logprob: -8.1259126663208
    4. 'Str' → logprob: -10.2509126663208
    5. ' _' → logprob: -10.2509126663208
    6. '```' → logprob: -10.8759126663208
    7. ''_' → logprob: -11.2509126663208
    8. '._' → logprob: -11.5009126663208
    9. '__' → logprob: -11.6259126663208
    10. '"_' → logprob: -12.0009126663208

Token 144: '.replace' (ID: 12804)
  Prédit: '.replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -0.002556519117206335
    2. '.' → logprob: -6.252556324005127
    3. ' .' → logprob: -7.377556324005127
    4. '   ' → logprob: -13.877556800842285
    5. 'replace' → logprob: -14.502556800842285
    6. ').' → logprob: -14.502556800842285
    7. '.Replace' → logprob: -14.752556800842285
    8. '.re' → logprob: -16.37755584716797
    9. '.split' → logprob: -16.87755584716797
    10. '.rep' → logprob: -17.12755584716797

Token 145: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0017064863350242376
    2. '("' → logprob: -6.626706600189209
    3. '(' → logprob: -7.876706600189209
    4. '("'' → logprob: -14.75170612335205
    5. ' ('' → logprob: -15.62670612335205
    6. '(
' → logprob: -16.126707077026367
    7. ''' → logprob: -16.501707077026367
    8. '(('' → logprob: -17.126707077026367
    9. '('"' → logprob: -17.501707077026367
    10. '("("' → logprob: -17.501707077026367

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ''' → logprob: -13.12500286102295
    3. ' ' → logprob: -15.00000286102295
    4. '"' → logprob: -18.250001907348633
    5. ' '' → logprob: -19.125001907348633
    6. '' → logprob: -20.000001907348633
    7. '```' → logprob: -20.625001907348633
    8. '')' → logprob: -21.125001907348633
    9. '۱' → logprob: -21.250001907348633
    10. '[' → logprob: -21.250001907348633

Token 147: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.003625008510425687
    2. ''' → logprob: -6.25362491607666
    3. ' ',' → logprob: -7.00362491607666
    4. '','' → logprob: -7.62862491607666
    5. ',' → logprob: -8.12862491607666
    6. ' ','' → logprob: -13.25362491607666
    7. ' ,' → logprob: -14.25362491607666
    8. ','' → logprob: -14.62862491607666
    9. '',"' → logprob: -14.75362491607666
    10. ''s' → logprob: -14.75362491607666

Token 148: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0009544557542540133
    2. ' '' → logprob: -7.000954627990723
    3. '"' → logprob: -10.125954627990723
    4. ')' → logprob: -13.375954627990723
    5. ''s' → logprob: -15.500954627990723
    6. ' 
' → logprob: -15.875954627990723
    7. ''t' → logprob: -16.375953674316406
    8. ''o' → logprob: -16.375953674316406
    9. ' ' → logprob: -16.625953674316406
    10. ''\' → logprob: -16.750953674316406

Token 149: ' ')
' (ID: 49195)
  Prédit: ' ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ')' → logprob: -0.0201113224029541
    2. ' '' → logprob: -4.645111083984375
    3. ''' → logprob: -4.770111083984375
    4. ' ')
' → logprob: -7.270111083984375
    5. ' ' → logprob: -8.395111083984375
    6. '')' → logprob: -8.645111083984375
    7. '\u' → logprob: -8.770111083984375
    8. '\x' → logprob: -8.895111083984375
    9. ' ")' → logprob: -9.145111083984375
    10. ' ').' → logprob: -9.270111083984375

Token 150: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15341483056545258
    2. '
' → logprob: -2.403414726257324
    3. 'temp' → logprob: -3.528414726257324
    4. '    
' → logprob: -3.903414726257324
    5. '  
' → logprob: -7.153414726257324
    6. ' temp' → logprob: -7.528414726257324
    7. '   
' → logprob: -7.653414726257324
    8. '\n' → logprob: -8.778414726257324
    9. '  ' → logprob: -9.778414726257324
    10. ' 
' → logprob: -9.903414726257324

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07726384699344635
    2. 'temp' → logprob: -2.702263832092285
    3. 'result' → logprob: -5.702263832092285
    4. ' temp' → logprob: -6.202263832092285
    5. 'trans' → logprob: -7.452263832092285
    6. '    
' → logprob: -7.827263832092285
    7. ' transformed' → logprob: -8.202263832092285
    8. '  ' → logprob: -8.577263832092285
    9. 'new' → logprob: -8.952263832092285
    10. '    ' → logprob: -9.577263832092285

Token 152: ' #' (ID: 1069)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.08089512586593628
    2. '   ' → logprob: -3.080895185470581
    3. 'result' → logprob: -3.955895185470581
    4. ' temp' → logprob: -4.455894947052002
    5. 'new' → logprob: -8.08089542388916
    6. 'trans' → logprob: -8.95589542388916
    7. ' result' → logprob: -9.08089542388916
    8. 'tmp' → logprob: -9.58089542388916
    9. 'final' → logprob: -9.83089542388916
    10. 'inter' → logprob: -9.95589542388916

Token 153: ' Ét' (ID: 54156)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.002482434967532754
    2. 'Ét' → logprob: -7.0024824142456055
    3. ' temp' → logprob: -7.3774824142456055
    4. '#' → logprob: -8.127482414245605
    5. '   ' → logprob: -8.377482414245605
    6. 'Et' → logprob: -8.877482414245605
    7. 'step' → logprob: -9.002482414245605
    8. ' Ét' → logprob: -10.127482414245605
    9. 'tmp' → logprob: -10.377482414245605
    10. 'Step' → logprob: -10.877482414245605

Token 154: 'ape' (ID: 2480)
  Prédit: 'ape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.00025108797126449645
    2. '#' → logprob: -9.250250816345215
    3. 'apé' → logprob: -10.125250816345215
    4. '   ' → logprob: -10.625250816345215
    5. 'pe' → logprob: -11.000250816345215
    6. 'appe' → logprob: -11.000250816345215
    7. ' étape' → logprob: -11.500250816345215
    8. 'p' → logprob: -11.750250816345215
    9. 'APE' → logprob: -12.250250816345215
    10. 'apte' → logprob: -12.250250816345215

Token 155: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3117017149925232
    2. '2' → logprob: -1.436701774597168
    3. '1' → logprob: -3.561701774597168
    4. '3' → logprob: -7.686701774597168
    5. ':' → logprob: -8.561701774597168
    6. '   ' → logprob: -8.686701774597168
    7. 't' → logprob: -8.686701774597168
    8. 'def' → logprob: -8.811701774597168
    9. ' étape' → logprob: -9.561701774597168
    10. '_' → logprob: -9.686701774597168

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007703172159381211
    2. ' ' → logprob: -7.750770092010498
    3. '1' → logprob: -8.000770568847656
    4. '   ' → logprob: -13.500770568847656
    5. ':' → logprob: -14.125770568847656
    6. '#' → logprob: -14.875770568847656
    7. '```' → logprob: -15.000770568847656
    8. '  ' → logprob: -15.375770568847656
    9. 'step' → logprob: -16.063270568847656
    10. '
' → logprob: -16.125770568847656

Token 157: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.10273361951112747
    2. ':' → logprob: -2.852733612060547
    3. ' =' → logprob: -3.352733612060547
    4. '   ' → logprob: -5.602733612060547
    5. 'temp' → logprob: -7.227733612060547
    6. '=' → logprob: -8.477733612060547
    7. ' temp' → logprob: -8.977733612060547
    8. ' ' → logprob: -9.352733612060547
    9. '
' → logprob: -10.602733612060547
    10. ' ' → logprob: -11.352733612060547

Token 158: ' remplacer' (ID: 116120)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.05541645362973213
    2. ' temp' → logprob: -2.9304163455963135
    3. 'replace' → logprob: -9.055416107177734
    4. 'result' → logprob: -9.180416107177734
    5. 'transform' → logprob: -9.305416107177734
    6. 'tmp' → logprob: -9.430416107177734
    7. '   ' → logprob: -10.555416107177734
    8. ' transformed' → logprob: -10.805416107177734
    9. 'trans' → logprob: -10.930416107177734
    10. 'new' → logprob: -11.055416107177734

Token 159: ' tous' (ID: 10688)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.3507936000823975
    2. 'temp' → logprob: -1.3507936000823975
    3. ' temp' → logprob: -2.1007936000823975
    4. ' ' → logprob: -2.4757936000823975
    5. ' les' → logprob: -2.4757936000823975
    6. ''' → logprob: -2.9757936000823975
    7. '('' → logprob: -3.1007936000823975
    8. ' tous' → logprob: -3.2257936000823975
    9. '9' → logprob: -3.6007936000823975
    10. ' all' → logprob: -5.100793838500977

Token 160: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6966534852981567
    2. '('' → logprob: -0.9466534852981567
    3. ' des' → logprob: -3.321653366088867
    4. '   ' → logprob: -3.446653366088867
    5. '  ' → logprob: -4.571653366088867
    6. '9' → logprob: -4.696653366088867
    7. ' ' → logprob: -4.821653366088867
    8. 'temp' → logprob: -5.321653366088867
    9. ' '' → logprob: -5.696653366088867
    10. ' ('' → logprob: -6.071653366088867

Token 161: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10065518319606781
    2. ' '' → logprob: -2.3506550788879395
    3. '9' → logprob: -8.225655555725098
    4. ' ' → logprob: -8.975655555725098
    5. '('' → logprob: -10.475655555725098
    6. '"' → logprob: -11.225655555725098
    7. '  ' → logprob: -12.975655555725098
    8. 's' → logprob: -12.975655555725098
    9. '   ' → logprob: -12.975655555725098
    10. '    ' → logprob: -13.975655555725098

Token 162: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0001848254178185016
    2. ''' → logprob: -8.625185012817383
    3. ' ' → logprob: -12.375185012817383
    4. ' '' → logprob: -15.750185012817383
    5. '   ' → logprob: -15.750185012817383
    6. '۹' → logprob: -16.000185012817383
    7. '')' → logprob: -16.562685012817383
    8. '９' → logprob: -16.625185012817383
    9. '९' → logprob: -17.187685012817383
    10. '"' → logprob: -17.375185012817383

Token 163: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005999894347041845
    2. '',' → logprob: -5.13100004196167
    3. '')' → logprob: -10.380999565124512
    4. 'par' → logprob: -10.755999565124512
    5. '1' → logprob: -11.880999565124512
    6. ' par' → logprob: -13.005999565124512
    7. '9' → logprob: -13.005999565124512
    8. ' '' → logprob: -13.255999565124512
    9. ' ' → logprob: -13.880999565124512
    10. ''s' → logprob: -14.005999565124512

Token 164: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.017967302352190018
    2. 'par' → logprob: -4.142967224121094
    3. ' by' → logprob: -6.642967224121094
    4. ' temp' → logprob: -8.392967224121094
    5. ',' → logprob: -8.517967224121094
    6. 'temp' → logprob: -9.142967224121094
    7. ' ,' → logprob: -10.392967224121094
    8. '   ' → logprob: -10.642967224121094
    9. ' ' → logprob: -10.642967224121094
    10. ')' → logprob: -12.642967224121094

Token 165: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5495423674583435
    2. ' '' → logprob: -0.9245423674583435
    3. ' des' → logprob: -3.7995424270629883
    4. 'des' → logprob: -5.674542427062988
    5. ' ' → logprob: -9.174542427062988
    6. 's' → logprob: -9.424542427062988
    7. '1' → logprob: -11.174542427062988
    8. ''un' → logprob: -11.174542427062988
    9. ''d' → logprob: -11.924542427062988
    10. '('' → logprob: -12.299542427062988

Token 166: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.025779156014323235
    2. '1' → logprob: -3.9007792472839355
    3. ' '' → logprob: -5.2757792472839355
    4. ' ' → logprob: -9.150778770446777
    5. '"' → logprob: -13.900778770446777
    6. '`' → logprob: -14.525778770446777
    7. ''s' → logprob: -15.025778770446777
    8. '   ' → logprob: -15.150778770446777
    9. '('' → logprob: -15.400778770446777
    10. 's' → logprob: -15.650778770446777

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.875007629394531
    3. ''' → logprob: -13.750007629394531
    4. '9' → logprob: -17.87500762939453
    5. ' '' → logprob: -18.12500762939453
    6. '')' → logprob: -18.87500762939453
    7. '１' → logprob: -19.37500762939453
    8. '"' → logprob: -19.81250762939453
    9. '۱' → logprob: -19.81250762939453
    10. '```' → logprob: -19.81250762939453

Token 168: ''.
' (ID: 49980)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.15231384336948395
    2. '')
' → logprob: -2.1523139476776123
    3. ''' → logprob: -3.7773139476776123
    4. '   ' → logprob: -6.402313709259033
    5. '').' → logprob: -8.652314186096191
    6. 'temp' → logprob: -9.277314186096191
    7. '',' → logprob: -9.652314186096191
    8. ''
' → logprob: -10.027314186096191
    9. '')
' → logprob: -10.277314186096191
    10. ' ')' → logprob: -10.277314186096191

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37892037630081177
    2. ' temp' → logprob: -1.253920316696167
    3. 'temp' → logprob: -4.128920555114746
    4. ' transformed' → logprob: -4.628920555114746
    5. ' result' → logprob: -5.628920555114746
    6. 'result' → logprob: -8.378920555114746
    7. 'trans' → logprob: -9.253920555114746
    8. ' transform' → logprob: -9.753920555114746
    9. '
' → logprob: -10.378920555114746
    10. '    
' → logprob: -10.878920555114746

Token 170: ' #' (ID: 1069)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.24855481088161469
    2. '   ' → logprob: -2.1235547065734863
    3. 'temp' → logprob: -2.4985547065734863
    4. ' transformed' → logprob: -4.248554706573486
    5. ' result' → logprob: -5.873554706573486
    6. 'result' → logprob: -7.498554706573486
    7. 'trans' → logprob: -8.248555183410645
    8. ' transform' → logprob: -9.748555183410645
    9. 'transform' → logprob: -9.873555183410645
    10. ' new' → logprob: -10.248555183410645

Token 171: ' À' (ID: 27643)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.35735419392585754
    2. 'temp' → logprob: -1.2323541641235352
    3. ' transformed' → logprob: -5.357354164123535
    4. ' result' → logprob: -6.357354164123535
    5. '   ' → logprob: -6.857354164123535
    6. 'result' → logprob: -7.232354164123535
    7. 'trans' → logprob: -7.732354164123535
    8. 'transform' → logprob: -10.107354164123535
    9. ' new' → logprob: -10.232354164123535
    10. 'new' → logprob: -10.857354164123535

Token 172: ' ce' (ID: 2357)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.01426058541983366
    2. ' temp' → logprob: -5.389260768890381
    3. 'transform' → logprob: -5.389260768890381
    4. 'tmp' → logprob: -6.639260768890381
    5. 'return' → logprob: -6.764260768890381
    6. ' remplacer' → logprob: -8.014260292053223
    7. 't' → logprob: -8.139260292053223
    8. 'trans' → logprob: -8.264260292053223
    9. ' ce' → logprob: -8.514260292053223
    10. 'final' → logprob: -8.639260292053223

Token 173: ' stade' (ID: 113944)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5603819489479065
    2. 'mp' → logprob: -1.3103818893432617
    3. 'temp' → logprob: -2.0603818893432617
    4. 'nt' → logprob: -5.060381889343262
    5. 'emp' → logprob: -5.185381889343262
    6. 't' → logprob: -5.685381889343262
    7. ' temp' → logprob: -6.310381889343262
    8. 'nd' → logprob: -6.935381889343262
    9. 'm' → logprob: -7.060381889343262
    10. '   ' → logprob: -7.185381889343262

Token 174: ',' (ID: 11)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.4775579571723938
    2. ' temp' → logprob: -0.9775579571723938
    3. '   ' → logprob: -6.102558135986328
    4. ',' → logprob: -6.852558135986328
    5. ' ,' → logprob: -10.477558135986328
    6. '_temp' → logprob: -10.727558135986328
    7. '	temp' → logprob: -10.852558135986328
    8. ' on' → logprob: -10.852558135986328
    9. '
' → logprob: -11.102558135986328
    10. ',temp' → logprob: -11.602558135986328

Token 175: ' les' (ID: 1341)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.2812168598175049
    2. 'temp' → logprob: -1.4062168598175049
    3. '   ' → logprob: -10.031216621398926
    4. ' on' → logprob: -12.031216621398926
    5. ' le' → logprob: -12.906216621398926
    6. ' transformed' → logprob: -13.281216621398926
    7. ' ' → logprob: -13.406216621398926
    8. ' la' → logprob: -13.531216621398926
    9. 'tmp' → logprob: -13.781216621398926
    10. 't' → logprob: -13.906216621398926

Token 176: ' anciens' (ID: 105125)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.7382535338401794
    2. ' temp' → logprob: -1.2382535934448242
    3. ' espaces' → logprob: -1.6132535934448242
    4. ' spaces' → logprob: -4.488253593444824
    5. 'spaces' → logprob: -4.613253593444824
    6. ' '' → logprob: -5.863253593444824
    7. 'esp' → logprob: -6.238253593444824
    8. ''' → logprob: -6.863253593444824
    9. ' ' → logprob: -6.863253593444824
    10. 'str' → logprob: -7.363253593444824

Token 177: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5816323757171631
    2. ' '' → logprob: -0.9566323757171631
    3. ' espaces' → logprob: -3.581632375717163
    4. '9' → logprob: -4.706632614135742
    5. ''esp' → logprob: -5.206632614135742
    6. 'temp' → logprob: -5.456632614135742
    7. ' ' → logprob: -5.581632614135742
    8. ''s' → logprob: -6.331632614135742
    9. ''espace' → logprob: -7.331632614135742
    10. 'spaces' → logprob: -7.456632614135742

Token 178: '1' (ID: 16)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.007992470636963844
    2. ' ' → logprob: -5.257992267608643
    3. ' '' → logprob: -6.632992267608643
    4. ''' → logprob: -6.757992267608643
    5. '1' → logprob: -9.3829927444458
    6. ' ')' → logprob: -9.9454927444458
    7. '')' → logprob: -10.0704927444458
    8. ''s' → logprob: -10.5079927444458
    9. 's' → logprob: -11.6329927444458
    10. 'temp' → logprob: -11.9454927444458

Token 179: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007790570612996817
    2. ''s' → logprob: -5.632790565490723
    3. ' '' → logprob: -5.757790565490723
    4. 's' → logprob: -7.382790565490723
    5. '9' → logprob: -8.757790565490723
    6. ''ont' → logprob: -9.382790565490723
    7. '')' → logprob: -9.882790565490723
    8. ' ' → logprob: -11.382790565490723
    9. 'temp' → logprob: -11.507790565490723
    10. ' n' → logprob: -11.757790565490723

Token 180: ' ont' (ID: 4930)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.8535789847373962
    2. ' ont' → logprob: -0.9785789847373962
    3. ' remplac' → logprob: -2.603579044342041
    4. 's' → logprob: -2.853579044342041
    5. ' deviennent' → logprob: -4.478579044342041
    6. ' n' → logprob: -4.853579044342041
    7. ' dans' → logprob: -4.978579044342041
    8. ' ne' → logprob: -5.728579044342041
    9. ' are' → logprob: -5.978579044342041
    10. 'ont' → logprob: -5.978579044342041

Token 181: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.7877951264381409
    2. ' été' → logprob: -1.287795066833496
    3. ' déjà' → logprob: -2.162795066833496
    4. 'dé' → logprob: -2.412795066833496
    5. 't' → logprob: -2.912795066833496
    6. ' disparu' → logprob: -6.287795066833496
    7. '```' → logprob: -6.787795066833496
    8. 'temp' → logprob: -6.787795066833496
    9. ' ' → logprob: -7.037795066833496
    10. '  ' → logprob: -7.662795066833496

Token 182: ' mis' (ID: 4694)
  Prédit: ' remplac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remplac' → logprob: -0.3635379374027252
    2. 'transform' → logprob: -1.7385379076004028
    3. 'rem' → logprob: -3.2385380268096924
    4. 'tempor' → logprob: -3.7385380268096924
    5. 'temp' → logprob: -4.113537788391113
    6. ' transform' → logprob: -4.113537788391113
    7. ' tempora' → logprob: -4.738537788391113
    8. 'convert' → logprob: -4.863537788391113
    9. ' supprim' → logprob: -5.738537788391113
    10. ' déjà' → logprob: -5.738537788391113

Token 183: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.16861876845359802
    2. 'en' → logprob: -2.793618679046631
    3. 'à' → logprob: -4.043618679046631
    4. ''en' → logprob: -4.293618679046631
    5. ' entre' → logprob: -4.543618679046631
    6. ' à' → logprob: -4.668618679046631
    7. 'tempor' → logprob: -4.918618679046631
    8. ' tempora' → logprob: -5.043618679046631
    9. 'temp' → logprob: -5.293618679046631
    10. 'de' → logprob: -5.668618679046631

Token 184: ' côté' (ID: 33533)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13139425218105316
    2. 's' → logprob: -2.506394147872925
    3. ' côté' → logprob: -3.756394147872925
    4. 'temp' → logprob: -5.756394386291504
    5. ' côtés' → logprob: -6.006394386291504
    6. 'tempor' → logprob: -6.006394386291504
    7. 'cot' → logprob: -6.256394386291504
    8. ' c' → logprob: -6.381394386291504
    9. 'hors' → logprob: -6.756394386291504
    10. 'es' → logprob: -7.131394386291504

Token 185: ' en' (ID: 469)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6432122588157654
    2. ',' → logprob: -0.8932122588157654
    3. ' temp' → logprob: -2.89321231842041
    4. '   ' → logprob: -5.51821231842041
    5. ' ,' → logprob: -6.01821231842041
    6. '.' → logprob: -6.64321231842041
    7. ' dans' → logprob: -7.89321231842041
    8. ',temp' → logprob: -8.26821231842041
    9. ' ' → logprob: -9.14321231842041
    10. 'dans' → logprob: -9.39321231842041

Token 186: ' tant' (ID: 16235)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.21314175426959991
    2. ' temp' → logprob: -2.338141679763794
    3. 'tempor' → logprob: -2.963141679763794
    4. ' espaces' → logprob: -3.838141679763794
    5. ' espace' → logprob: -5.338141918182373
    6. 'temporary' → logprob: -5.463141918182373
    7. 'esp' → logprob: -6.088141918182373
    8. 'tant' → logprob: -6.713141918182373
    9. ' temporary' → logprob: -6.838141918182373
    10. 'temps' → logprob: -6.963141918182373

Token 187: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.09434863924980164
    2. ' qu' → logprob: -3.094348669052124
    3. 'que' → logprob: -3.719348669052124
    4. ' de' → logprob: -4.594348430633545
    5. 'qu' → logprob: -5.094348430633545
    6. 'de' → logprob: -6.594348430633545
    7. ' d' → logprob: -6.969348430633545
    8. ''' → logprob: -7.344348430633545
    9. 'd' → logprob: -8.094348907470703
    10. 's' → logprob: -8.219348907470703

Token 188: ''esp' (ID: 73244)
  Prédit: ''esp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''esp' → logprob: -0.21784892678260803
    2. ' espaces' → logprob: -2.217849016189575
    3. ''' → logprob: -3.092849016189575
    4. ''emp' → logprob: -4.842848777770996
    5. '"' → logprob: -5.217848777770996
    6. ''espace' → logprob: -5.217848777770996
    7. 'spaces' → logprob: -5.467848777770996
    8. 'emps' → logprob: -5.717848777770996
    9. 'esp' → logprob: -5.967848777770996
    10. 'empl' → logprob: -6.092848777770996

Token 189: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.0004043361986987293
    2. 'ace' → logprob: -8.375404357910156
    3. 'a' → logprob: -10.625404357910156
    4. 'ac' → logprob: -10.750404357910156
    5. 'paces' → logprob: -11.125404357910156
    6. 'ces' → logprob: -11.125404357910156
    7. 'acement' → logprob: -11.250404357910156
    8. 'ACES' → logprob: -11.250404357910156
    9. '   ' → logprob: -11.375404357910156
    10. 'èces' → logprob: -11.500404357910156

Token 190: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3447796106338501
    2. 'temp' → logprob: -1.46977961063385
    3. ' temp' → logprob: -2.9697794914245605
    4. ',' → logprob: -5.3447794914245605
    5. '    
' → logprob: -5.5947794914245605
    6. '  ' → logprob: -7.7197794914245605
    7. '    ' → logprob: -7.8447794914245605
    8. '   
' → logprob: -8.594779968261719
    9. ' ' → logprob: -9.344779968261719
    10. 'tmp' → logprob: -9.469779968261719

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23004822432994843
    2. ' temp' → logprob: -1.7300481796264648
    3. 'temp' → logprob: -3.605048179626465
    4. '    ' → logprob: -7.355048179626465
    5. '  ' → logprob: -8.980048179626465
    6. '    
' → logprob: -9.855048179626465
    7. ' ' → logprob: -9.855048179626465
    8. ' donc' → logprob: -9.980048179626465
    9. 'result' → logprob: -11.480048179626465
    10. '	temp' → logprob: -11.605048179626465

Token 192: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23215770721435547
    2. ' donc' → logprob: -1.9821577072143555
    3. ' temp' → logprob: -3.6071577072143555
    4. ' so' → logprob: -4.4821577072143555
    5. '    ' → logprob: -4.8571577072143555
    6. '    
' → logprob: -5.2321577072143555
    7. 'temp' → logprob: -5.2321577072143555
    8. ' ce' → logprob: -5.4821577072143555
    9. ' car' → logprob: -6.1071577072143555
    10. ' ' → logprob: -6.8571577072143555

Token 193: ' cela' (ID: 17542)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.488592267036438
    2. ' temp' → logprob: -0.988592267036438
    3. '   ' → logprob: -4.488592147827148
    4. 'result' → logprob: -6.613592147827148
    5. ' transformed' → logprob: -7.113592147827148
    6. ' result' → logprob: -7.988592147827148
    7. 'transform' → logprob: -8.613592147827148
    8. 'trans' → logprob: -8.988592147827148
    9. 'output' → logprob: -9.988592147827148
    10. ' transform' → logprob: -10.113592147827148

Token 194: ' permet' (ID: 11798)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.2822577953338623
    2. ' permet' → logprob: -2.2822577953338623
    3. 'temp' → logprob: -2.9072577953338623
    4. ' ne' → logprob: -3.0322577953338623
    5. ' n' → logprob: -5.407258033752441
    6. ' est' → logprob: -5.657258033752441
    7. ' emp' → logprob: -5.907258033752441
    8. '   ' → logprob: -6.157258033752441
    9. ' reste' → logprob: -6.157258033752441
    10. ' év' → logprob: -6.282258033752441

Token 195: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.45885518193244934
    2. ' d' → logprob: -1.458855152130127
    3. 'de' → logprob: -2.208855152130127
    4. 'd' → logprob: -3.708855152130127
    5. 't' → logprob: -7.708855152130127
    6. '   ' → logprob: -8.708855628967285
    7. '    ' → logprob: -10.208855628967285
    8. ' le' → logprob: -10.208855628967285
    9. ' à' → logprob: -10.208855628967285
    10. ' un' → logprob: -10.208855628967285

Token 196: ' remplacer' (ID: 116120)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -1.2243539094924927
    2. ' éviter' → logprob: -1.3493539094924927
    3. 'év' → logprob: -1.4743539094924927
    4. 'ne' → logprob: -3.099353790283203
    5. ' continuer' → logprob: -3.474353790283203
    6. 'contin' → logprob: -3.724353790283203
    7. ' remplacer' → logprob: -3.849353790283203
    8. ' faire' → logprob: -4.099353790283203
    9. ' effectuer' → logprob: -4.224353790283203
    10. 'faire' → logprob: -4.349353790283203

Token 197: ' sans' (ID: 9828)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.9296361804008484
    2. ' les' → logprob: -1.3046362400054932
    3. ''' → logprob: -1.6796362400054932
    4. ' tous' → logprob: -2.804636240005493
    5. 'temp' → logprob: -3.054636240005493
    6. ' temp' → logprob: -4.429636001586914
    7. ''t' → logprob: -4.804636001586914
    8. 'les' → logprob: -4.929636001586914
    9. ' toutes' → logprob: -5.804636001586914
    10. ' ' → logprob: -6.429636001586914

Token 198: ' ambigu' (ID: 110826)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -1.2318494319915771
    2. 'ambigu' → logprob: -1.3568494319915771
    3. 'conf' → logprob: -1.7318494319915771
    4. 'ris' → logprob: -2.106849431991577
    5. 'amb' → logprob: -2.981849431991577
    6. 'cr' → logprob: -3.356849431991577
    7. 'con' → logprob: -3.856849431991577
    8. 'r' → logprob: -4.856849670410156
    9. ' conflit' → logprob: -5.356849670410156
    10. 'er' → logprob: -5.356849670410156

Token 199: 'ï' (ID: 9954)
  Prédit: 'ï'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ï' → logprob: -0.008295765146613121
    2. 'ité' → logprob: -4.88329553604126
    3. 'ït' → logprob: -8.883296012878418
    4. 'ît' → logprob: -9.133296012878418
    5. 'i' → logprob: -9.258296012878418
    6. 'î' → logprob: -9.508296012878418
    7. 'té' → logprob: -9.758296012878418
    8. 'rité' → logprob: -10.508296012878418
    9. 'é' → logprob: -10.758296012878418
    10. '
' → logprob: -10.758296012878418

Token 200: 'té' (ID: 54949)
  Prédit: 'té'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'té' → logprob: -0.0009448148775845766
    2. 't' → logprob: -7.6259446144104
    3. 'é' → logprob: -8.625945091247559
    4. 'été' → logprob: -8.875945091247559
    5. ' té' → logprob: -10.125945091247559
    6. 'te' → logprob: -11.250945091247559
    7. 'tet' → logprob: -11.375945091247559
    8. 'ité' → logprob: -11.375945091247559
    9. 'ut' → logprob: -11.625945091247559
    10. 'eté' → logprob: -12.000945091247559

Token 201: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6468045711517334
    2. ' temp' → logprob: -1.2718045711517334
    3. 'temp' → logprob: -1.6468045711517334
    4. '    ' → logprob: -7.5218048095703125
    5. ' ' → logprob: -7.7718048095703125
    6. '  ' → logprob: -7.8968048095703125
    7. ' tempora' → logprob: -8.146804809570312
    8. '    
' → logprob: -8.396804809570312
    9. ' la' → logprob: -8.771804809570312
    10. ' le' → logprob: -8.896804809570312

Token 202: '   ' (ID: 271)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.8166313171386719
    2. 'temp' → logprob: -1.4416313171386719
    3. '   ' → logprob: -2.066631317138672
    4. ' result' → logprob: -2.441631317138672
    5. ' transformed' → logprob: -2.941631317138672
    6. 'result' → logprob: -3.191631317138672
    7. 'trans' → logprob: -4.566631317138672
    8. 'transform' → logprob: -6.441631317138672
    9. ' transform' → logprob: -7.566631317138672
    10. ' output' → logprob: -8.191631317138672

Token 203: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.25697749853134155
    2. ' temp' → logprob: -1.6319775581359863
    3. '   ' → logprob: -4.631977558135986
    4. 'result' → logprob: -4.631977558135986
    5. ' transformed' → logprob: -5.381977558135986
    6. 'trans' → logprob: -5.631977558135986
    7. ' result' → logprob: -6.006977558135986
    8. 'transform' → logprob: -7.881977558135986
    9. 'return' → logprob: -8.756977081298828
    10. 'new' → logprob: -9.631977081298828

Token 204: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.5776860184123507e-06
    2. '_string' → logprob: -13.25000286102295
    3. '_' → logprob: -14.50000286102295
    4. '_s' → logprob: -15.62500286102295
    5. 'str' → logprob: -16.875001907348633
    6. '_strings' → logprob: -17.000001907348633
    7. '_val' → logprob: -18.250001907348633
    8. ' _' → logprob: -18.250001907348633
    9. '_STR' → logprob: -19.125001907348633
    10. '_tmp' → logprob: -19.625001907348633

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005235648714005947
    2. '=' → logprob: -5.25523567199707
    3. ' ' → logprob: -13.63023567199707
    4. ' =
' → logprob: -14.88023567199707
    5. '.replace' → logprob: -16.00523567199707
    6. '=temp' → logprob: -16.13023567199707
    7. '2' → logprob: -18.13023567199707
    8. '=
' → logprob: -18.13023567199707
    9. ')' → logprob: -18.44273567199707
    10. '.' → logprob: -18.63023567199707

Token 206: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.2519335150718689
    2. ' temp' → logprob: -1.5019335746765137
    3. 'tmp' → logprob: -12.876933097839355
    4. '   ' → logprob: -14.251933097839355
    5. ' ' → logprob: -15.251933097839355
    6. 'tem' → logprob: -15.626933097839355
    7. '	temp' → logprob: -15.626933097839355
    8. 't' → logprob: -15.626933097839355
    9. ' tmp' → logprob: -15.876933097839355
    10. '_temp' → logprob: -16.626934051513672

Token 207: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.9623810658231378e-05
    2. 'str' → logprob: -10.875020027160645
    3. '_' → logprob: -15.000020027160645
    4. 'p' → logprob: -16.125019073486328
    5. '_string' → logprob: -17.500019073486328
    6. '_STR' → logprob: -17.625019073486328
    7. 'Str' → logprob: -18.000019073486328
    8. ' _' → logprob: -18.250019073486328
    9. 'r' → logprob: -18.375019073486328
    10. 't' → logprob: -18.500019073486328

Token 208: '.replace' (ID: 12804)
  Prédit: '.replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -3.607391408877447e-05
    2. '.' → logprob: -10.250036239624023
    3. 'replace' → logprob: -14.750036239624023
    4. ' .' → logprob: -15.750036239624023
    5. '.Replace' → logprob: -17.875036239624023
    6. '.re' → logprob: -18.750036239624023
    7. ' replace' → logprob: -21.625036239624023
    8. '_replace' → logprob: -21.750036239624023
    9. '   ' → logprob: -21.875036239624023
    10. ').' → logprob: -22.000036239624023

Token 209: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.5491004129871726e-05
    2. '(' → logprob: -10.000045776367188
    3. '("' → logprob: -17.625045776367188
    4. '(
' → logprob: -19.000045776367188
    5. ''' → logprob: -19.375045776367188
    6. ' ('' → logprob: -19.875045776367188
    7. '(('' → logprob: -20.250045776367188
    8. ' ' → logprob: -21.000045776367188
    9. '(

' → logprob: -21.250045776367188
    10. '()' → logprob: -21.625045776367188

Token 210: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.02975129522383213
    2. ''' → logprob: -3.5297513008117676
    3. ' '' → logprob: -15.40475082397461
    4. '('' → logprob: -15.40475082397461
    5. ' ' → logprob: -15.52975082397461
    6. '"' → logprob: -16.65475082397461
    7. '')' → logprob: -17.40475082397461
    8. '   ' → logprob: -18.40475082397461
    9. '`' → logprob: -18.52975082397461
    10. '['' → logprob: -18.90475082397461

Token 211: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -1.4617256056226324e-05
    2. ''' → logprob: -11.750014305114746
    3. '','' → logprob: -12.125014305114746
    4. ',' → logprob: -13.750014305114746
    5. ' ',' → logprob: -16.875015258789062
    6. '",' → logprob: -17.125015258789062
    7. '1' → logprob: -17.375015258789062
    8. '',
' → logprob: -18.750015258789062
    9. '',"' → logprob: -19.875015258789062
    10. ''',' → logprob: -20.000015258789062

Token 212: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02325025200843811
    2. ' '' → logprob: -3.7732503414154053
    3. '1' → logprob: -13.148250579833984
    4. '"' → logprob: -13.273250579833984
    5. ' ' → logprob: -14.148250579833984
    6. ')' → logprob: -15.898250579833984
    7. '')' → logprob: -17.148250579833984
    8. '`' → logprob: -17.148250579833984
    9. '('' → logprob: -17.273250579833984
    10. '   ' → logprob: -18.148250579833984

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. ''' → logprob: -14.875003814697266
    4. '')' → logprob: -17.375003814697266
    5. ' '' → logprob: -20.250003814697266
    6. '۱' → logprob: -22.125003814697266
    7. '' → logprob: -22.250003814697266
    8. '１' → logprob: -22.250003814697266
    9. '2' → logprob: -22.500003814697266
    10. '   ' → logprob: -22.750003814697266

Token 214: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -7.64839569455944e-05
    2. ')' → logprob: -9.750076293945312
    3. '')
' → logprob: -11.250076293945312
    4. ' ')' → logprob: -12.500076293945312
    5. ''' → logprob: -14.250076293945312
    6. '")' → logprob: -14.500076293945312
    7. '')

' → logprob: -16.125076293945312
    8. '   ' → logprob: -17.375076293945312
    9. '')
' → logprob: -18.250076293945312
    10. '')"' → logprob: -18.375076293945312

Token 215: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025253187865018845
    2. '    
' → logprob: -3.7752532958984375
    3. 'temp' → logprob: -7.0252532958984375
    4. '
' → logprob: -7.5252532958984375
    5. 'return' → logprob: -8.150253295898438
    6. ' temp' → logprob: -9.150253295898438
    7. ' return' → logprob: -9.525253295898438
    8. '   
' → logprob: -9.775253295898438
    9. ' 
' → logprob: -11.025253295898438
    10. '  
' → logprob: -11.400253295898438

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015197704546153545
    2. 'temp' → logprob: -5.26519775390625
    3. 'return' → logprob: -5.51519775390625
    4. '    
' → logprob: -6.14019775390625
    5. ' return' → logprob: -6.26519775390625
    6. ' temp' → logprob: -6.76519775390625
    7. '
' → logprob: -7.39019775390625
    8. '    ' → logprob: -11.14019775390625
    9. '```' → logprob: -11.26519775390625
    10. '   
' → logprob: -11.64019775390625

Token 217: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4070523679256439
    2. 'temp' → logprob: -1.5320523977279663
    3. 'return' → logprob: -2.4070522785186768
    4. ' temp' → logprob: -4.157052516937256
    5. ' return' → logprob: -4.407052516937256
    6. 'result' → logprob: -8.282052040100098
    7. '    
' → logprob: -10.282052040100098
    8. '  ' → logprob: -10.907052040100098
    9. '    ' → logprob: -11.032052040100098
    10. 'output' → logprob: -11.282052040100098

Token 218: ' Ét' (ID: 54156)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7927777767181396
    2. '   ' → logprob: -1.0427777767181396
    3. 'temp' → logprob: -2.0427777767181396
    4. ' #' → logprob: -3.4177777767181396
    5. ' temp' → logprob: -3.5427777767181396
    6. 'return' → logprob: -6.167778015136719
    7. ' return' → logprob: -6.792778015136719
    8. '
' → logprob: -9.667778015136719
    9. '  ' → logprob: -9.667778015136719
    10. '    
' → logprob: -9.667778015136719

Token 219: 'ape' (ID: 2480)
  Prédit: 'ape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -9.710618905955926e-05
    2. 'pe' → logprob: -10.250097274780273
    3. '   ' → logprob: -10.625097274780273
    4. 'p' → logprob: -11.750097274780273
    5. 'ype' → logprob: -12.125097274780273
    6. 'appe' → logprob: -12.250097274780273
    7. 'APE' → logprob: -12.500097274780273
    8. '_' → logprob: -12.875097274780273
    9. 'e' → logprob: -13.000097274780273
    10. '#' → logprob: -13.375097274780273

Token 220: ' ' (ID: 220)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.3750327527523041
    2. '1' → logprob: -1.2500327825546265
    3. '_' → logprob: -3.750032663345337
    4. ' ' → logprob: -6.375032901763916
    5. '3' → logprob: -7.875032901763916
    6. 'str' → logprob: -8.000032424926758
    7. '2' → logprob: -8.875032424926758
    8. '   ' → logprob: -10.125032424926758
    9. ' =' → logprob: -10.875032424926758
    10. '_t' → logprob: -11.125032424926758

Token 221: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19858206808567047
    2. '3' → logprob: -2.323582172393799
    3. ' ' → logprob: -3.073582172393799
    4. '_str' → logprob: -4.198582172393799
    5. '_' → logprob: -4.448582172393799
    6. '   ' → logprob: -5.198582172393799
    7. '2' → logprob: -6.323582172393799
    8. 'str' → logprob: -7.323582172393799
    9. '#' → logprob: -8.19858169555664
    10. '=' → logprob: -8.19858169555664

Token 222: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.834673285484314
    2. ' :' → logprob: -1.334673285484314
    3. ' =' → logprob: -1.459673285484314
    4. ':' → logprob: -2.8346734046936035
    5. 'temp' → logprob: -4.9596734046936035
    6. ' temp' → logprob: -5.7096734046936035
    7. '=' → logprob: -7.7096734046936035
    8. ' ' → logprob: -8.209672927856445
    9. '_temp' → logprob: -8.584672927856445
    10. '=temp' → logprob: -8.959672927856445

Token 223: ' remplacer' (ID: 116120)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.9013972878456116
    2. 'return' → logprob: -1.0263972282409668
    3. ' temp' → logprob: -2.026397228240967
    4. ' return' → logprob: -2.901397228240967
    5. '   ' → logprob: -3.026397228240967
    6. 'result' → logprob: -8.651397705078125
    7. 'transform' → logprob: -9.151397705078125
    8. 'final' → logprob: -10.776397705078125
    9. 'tmp' → logprob: -10.901397705078125
    10. ' ' → logprob: -11.276397705078125

Token 224: ' tous' (ID: 10688)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.2524123787879944
    2. '('' → logprob: -2.2524123191833496
    3. ' temp' → logprob: -2.6274123191833496
    4. ''' → logprob: -3.1274123191833496
    5. ' '' → logprob: -7.12741231918335
    6. '   ' → logprob: -7.75241231918335
    7. '(' → logprob: -9.002412796020508
    8. '(temp' → logprob: -9.127412796020508
    9. ' ' → logprob: -9.377412796020508
    10. ''s' → logprob: -9.502412796020508

Token 225: ' les' (ID: 1341)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.69515061378479
    2. ' les' → logprob: -0.69515061378479
    3. 'les' → logprob: -7.070150375366211
    4. '(' → logprob: -7.820150375366211
    5. ''' → logprob: -8.695150375366211
    6. ' ' → logprob: -9.070150375366211
    7. 'Les' → logprob: -9.195150375366211
    8. 'temp' → logprob: -9.320150375366211
    9. ' '' → logprob: -9.695150375366211
    10. '<|end|>' → logprob: -10.195150375366211

Token 226: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.8059297800064087
    2. ' '' → logprob: -1.4309297800064087
    3. ''esp' → logprob: -1.5559297800064087
    4. ''' → logprob: -2.430929660797119
    5. 'spaces' → logprob: -5.305929660797119
    6. ' spaces' → logprob: -5.930929660797119
    7. ''espace' → logprob: -6.055929660797119
    8. ' espacios' → logprob: -6.555929660797119
    9. ' ' → logprob: -6.805929660797119
    10. 'esp' → logprob: -7.305929660797119

Token 227: ' (' (ID: 350)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6710094213485718
    2. ' temp' → logprob: -1.4210094213485718
    3. '   ' → logprob: -1.9210094213485718
    4. ' par' → logprob: -2.5460095405578613
    5. 'par' → logprob: -4.671009540557861
    6. ' by' → logprob: -5.546009540557861
    7. ''' → logprob: -6.421009540557861
    8. ',' → logprob: -6.546009540557861
    9. ' ' → logprob: -6.546009540557861
    10. '    ' → logprob: -6.796009540557861

Token 228: 'anci' (ID: 35603)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04087973013520241
    2. ' '' → logprob: -3.415879726409912
    3. '   ' → logprob: -5.915879726409912
    4. 'temp' → logprob: -6.415879726409912
    5. ')' → logprob: -6.665879726409912
    6. '')' → logprob: -6.915879726409912
    7. ' temp' → logprob: -8.16588020324707
    8. ''t' → logprob: -9.41588020324707
    9. ''s' → logprob: -9.91588020324707
    10. '<|end|>' → logprob: -10.54088020324707

Token 229: 'ens' (ID: 696)
  Prédit: 'ens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ens' → logprob: -0.41184794902801514
    2. 'ents' → logprob: -1.1618479490280151
    3. 'ent' → logprob: -4.911848068237305
    4. 'en' → logprob: -5.036848068237305
    5. 'aux' → logprob: -5.536848068237305
    6. ''' → logprob: -6.286848068237305
    7. '```' → logprob: -7.286848068237305
    8. 'iens' → logprob: -7.536848068237305
    9. 'és' → logprob: -7.911848068237305
    10. 'ers' → logprob: -8.036848068237305

Token 230: ' '' (ID: 461)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0168964862823486
    2. ''' → logprob: -1.6418964862823486
    3. '')' → logprob: -1.8918964862823486
    4. ' '' → logprob: -2.5168964862823486
    5. ' espaces' → logprob: -2.6418964862823486
    6. '<|end|>' → logprob: -2.6418964862823486
    7. 'temp' → logprob: -3.7668964862823486
    8. '1' → logprob: -4.3918962478637695
    9. ''esp' → logprob: -4.7668962478637695
    10. ' ' → logprob: -5.5168962478637695

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.055816080421209335
    2. '')' → logprob: -3.430816173553467
    3. ''' → logprob: -4.180816173553467
    4. ' ')' → logprob: -5.305816173553467
    5. ' ' → logprob: -7.180816173553467
    6. ' '' → logprob: -7.555816173553467
    7. 'temp' → logprob: -8.680815696716309
    8. ''s' → logprob: -9.680815696716309
    9. ')' → logprob: -10.680815696716309
    10. ' ones' → logprob: -10.805815696716309

Token 232: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.007755680475383997
    2. ')' → logprob: -4.882755756378174
    3. ''' → logprob: -9.257755279541016
    4. ' ')' → logprob: -11.007755279541016
    5. 's' → logprob: -11.132755279541016
    6. 'temp' → logprob: -11.757755279541016
    7. '',' → logprob: -12.257755279541016
    8. '")' → logprob: -12.757755279541016
    9. ' )' → logprob: -13.382755279541016
    10. '')
' → logprob: -13.882755279541016

Token 233: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.18435265123844147
    2. ' by' → logprob: -2.8093526363372803
    3. 'par' → logprob: -3.3093526363372803
    4. '   ' → logprob: -3.4343526363372803
    5. 'temp' → logprob: -3.4343526363372803
    6. ' temp' → logprob: -5.184352874755859
    7. ',' → logprob: -7.184352874755859
    8. 'by' → logprob: -8.05935287475586
    9. ')' → logprob: -9.30935287475586
    10. ' =' → logprob: -9.55935287475586

Token 234: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00022654302301816642
    2. '9' → logprob: -9.000226974487305
    3. ' '' → logprob: -9.750226974487305
    4. 'des' → logprob: -10.250226974487305
    5. '('' → logprob: -12.625226974487305
    6. '`' → logprob: -13.750226974487305
    7. 'def' → logprob: -13.750226974487305
    8. '"' → logprob: -14.125226974487305
    9. ' des' → logprob: -14.500226974487305
    10. ''s' → logprob: -14.750226974487305

Token 235: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.038490671664476395
    2. ' '' → logprob: -3.4134907722473145
    3. '9' → logprob: -5.4134907722473145
    4. ' ' → logprob: -7.9134907722473145
    5. '`' → logprob: -12.163490295410156
    6. '"' → logprob: -13.413490295410156
    7. '('' → logprob: -14.038490295410156
    8. '')' → logprob: -14.288490295410156
    9. ' ' → logprob: -15.163490295410156
    10. '   ' → logprob: -15.288490295410156

Token 236: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.1008713702030946e-06
    2. ''' → logprob: -13.250001907348633
    3. ' ' → logprob: -15.750001907348633
    4. '۹' → logprob: -17.125001907348633
    5. '९' → logprob: -19.000001907348633
    6. '৯' → logprob: -19.250001907348633
    7. ''''' → logprob: -19.250001907348633
    8. '')' → logprob: -19.375001907348633
    9. 'def' → logprob: -19.625001907348633
    10. '９' → logprob: -19.750001907348633

Token 237: ''.
' (ID: 49980)
  Prédit: '')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.6340413093566895
    2. '')' → logprob: -0.7590413093566895
    3. '   ' → logprob: -7.2590413093566895
    4. ''' → logprob: -8.134040832519531
    5. ' ')
' → logprob: -8.884040832519531
    6. ')' → logprob: -9.759040832519531
    7. ' ')' → logprob: -9.884040832519531
    8. '')
' → logprob: -10.134040832519531
    9. '').' → logprob: -10.259040832519531
    10. ')
' → logprob: -10.384040832519531

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010024269111454487
    2. 'temp' → logprob: -4.885024070739746
    3. ' temp' → logprob: -6.385024070739746
    4. ' return' → logprob: -7.760024070739746
    5. 'return' → logprob: -8.135024070739746
    6. '
' → logprob: -12.010024070739746
    7. '    
' → logprob: -13.135024070739746
    8. '  ' → logprob: -15.635024070739746
    9. '    ' → logprob: -15.760024070739746
    10. '```' → logprob: -16.385025024414062

Token 239: ' result' (ID: 1534)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.5622140169143677
    2. '   ' → logprob: -1.5622140169143677
    3. 'return' → logprob: -1.5622140169143677
    4. ' temp' → logprob: -4.937213897705078
    5. ' return' → logprob: -5.687213897705078
    6. 'result' (adapté à ' result') → logprob: -8.937213897705078
    7. 'trans' → logprob: -12.187213897705078
    8. 'output' → logprob: -12.562213897705078
    9. 'final' → logprob: -12.812213897705078
    10. 'transform' → logprob: -13.812213897705078

Token 240: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0002764710516203195
    2. '_' → logprob: -8.500276565551758
    3. ' =' → logprob: -9.625276565551758
    4. '=' → logprob: -12.125276565551758
    5. '_string' → logprob: -13.750276565551758
    6. '_s' → logprob: -15.750276565551758
    7. ' _' → logprob: -16.000276565551758
    8. 'str' → logprob: -16.375276565551758
    9. '_STR' → logprob: -16.750276565551758
    10. '=_' → logprob: -17.000276565551758

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141343772411346
    2. '=' → logprob: -1.7014133930206299
    3. '=temp' → logprob: -16.576414108276367
    4. ')' → logprob: -17.576414108276367
    5. ' ' → logprob: -18.951414108276367
    6. ' =
' → logprob: -19.076414108276367
    7. 'temp' → logprob: -19.201414108276367
    8. '＝' → logprob: -19.951414108276367
    9. '   ' → logprob: -20.326414108276367
    10. '=input' → logprob: -20.451414108276367

Token 242: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.5759397745132446
    2. 'temp' → logprob: -0.8259397745132446
    3. 'tmp' → logprob: -15.825940132141113
    4. '   ' → logprob: -15.950940132141113
    5. '	temp' → logprob: -17.575939178466797
    6. ' tmp' → logprob: -18.200939178466797
    7. 'tem' → logprob: -18.575939178466797
    8. ' ' → logprob: -18.700939178466797
    9. '_temp' → logprob: -18.825939178466797
    10. 'Temp' → logprob: -19.075939178466797

Token 243: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -8.061054359131958e-06
    2. 'str' → logprob: -11.750007629394531
    3. '_' → logprob: -16.25000762939453
    4. 'Str' → logprob: -17.62500762939453
    5. '_string' → logprob: -18.75000762939453
    6. '_STR' → logprob: -19.62500762939453
    7. '_s' → logprob: -20.25000762939453
    8. '__' → logprob: -20.37500762939453
    9. ' str' → logprob: -21.25000762939453
    10. ' _' → logprob: -21.50000762939453

Token 244: '.replace' (ID: 12804)
  Prédit: '.replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -0.001177608733996749
    2. '.' → logprob: -6.751177787780762
    3. ' .' → logprob: -11.876177787780762
    4. 'replace' → logprob: -15.001177787780762
    5. '.Replace' → logprob: -16.501176834106445
    6. '.re' → logprob: -18.001176834106445
    7. ').' → logprob: -18.876176834106445
    8. '   ' → logprob: -19.001176834106445
    9. '.translate' → logprob: -19.876176834106445
    10. '.gsub' → logprob: -20.126176834106445

Token 245: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. '("' → logprob: -16.875003814697266
    4. ''' → logprob: -16.875003814697266
    5. ' ('' → logprob: -20.500003814697266
    6. '()' → logprob: -21.250003814697266
    7. '(
' → logprob: -21.750003814697266
    8. '(('' → logprob: -22.875003814697266
    9. '(

' → logprob: -23.750003814697266
    10. '(',' → logprob: -23.875003814697266

Token 246: ' ',' (ID: 14089)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0024401010014116764
    2. ' '' → logprob: -6.127439975738525
    3. ' ')' → logprob: -8.377440452575684
    4. '')' → logprob: -11.502440452575684
    5. '',' → logprob: -12.252440452575684
    6. ' ',' → logprob: -12.502440452575684
    7. '"' → logprob: -13.002440452575684
    8. ' ' → logprob: -13.252440452575684
    9. '9' → logprob: -13.627440452575684
    10. ''s' → logprob: -14.627440452575684

Token 247: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.318681188422488e-05
    2. ' '' → logprob: -11.25001335144043
    3. '9' → logprob: -16.50001335144043
    4. '"' → logprob: -16.87501335144043
    5. '')' → logprob: -18.50001335144043
    6. '('' → logprob: -18.62501335144043
    7. '   ' → logprob: -18.87501335144043
    8. '‘' → logprob: -19.37501335144043
    9. '`' → logprob: -19.62501335144043
    10. '’' → logprob: -20.00001335144043

Token 248: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. ''' → logprob: -17.5
    3. '')' → logprob: -18.375
    4. ' ' → logprob: -20.5
    5. '９' → logprob: -22.125
    6. '۹' → logprob: -22.5
    7. '"' → logprob: -24.125
    8. '९' → logprob: -24.5
    9. '99' → logprob: -24.875
    10. '৯' → logprob: -25.125

Token 249: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0002942287246696651
    2. '')
' → logprob: -8.62529468536377
    3. ')' → logprob: -9.12529468536377
    4. ''' → logprob: -12.25029468536377
    5. '")' → logprob: -14.62529468536377
    6. '')"' → logprob: -15.87529468536377
    7. '')

' → logprob: -16.250293731689453
    8. '')
' → logprob: -16.250293731689453
    9. ')'' → logprob: -16.750293731689453
    10. ' ')' → logprob: -16.875293731689453

Token 250: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001681367284618318
    2. 'return' → logprob: -6.501681327819824
    3. ' return' → logprob: -8.751681327819824
    4. '
' → logprob: -11.251681327819824
    5. '	return' → logprob: -12.376681327819824
    6. '    
' → logprob: -12.751681327819824
    7. '```' → logprob: -14.626681327819824
    8. '\n' → logprob: -16.25168228149414
    9. ':return' → logprob: -16.50168228149414
    10. '   ' → logprob: -17.25168228149414

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10126715153455734
    2. 'return' → logprob: -2.351267099380493
    3. ' return' → logprob: -6.851267337799072
    4. '	return' → logprob: -13.726266860961914
    5. 'ret' → logprob: -15.476266860961914
    6. ':return' → logprob: -15.476266860961914
    7. '    
' → logprob: -15.976266860961914
    8. 'r' → logprob: -16.726266860961914
    9. '_return' → logprob: -16.976266860961914
    10. ' ' → logprob: -17.351266860961914

Token 252: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -6.456358823925257e-05
    2. '   ' → logprob: -9.750064849853516
    3. ' return' → logprob: -12.000064849853516
    4. '	return' → logprob: -18.750064849853516
    5. '```' → logprob: -20.500064849853516
    6. 'ret' → logprob: -21.625064849853516
    7. '{return' → logprob: -22.750064849853516
    8. '  ' → logprob: -22.750064849853516
    9. ' ' → logprob: -22.875064849853516
    10. ':return' → logprob: -23.000064849853516

Token 253: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00020354038861114532
    2. ' result' → logprob: -8.500203132629395
    3. '(result' → logprob: -21.87520408630371
    4. 'results' → logprob: -23.12520408630371
    5. '_result' → logprob: -23.50020408630371
    6. '	result' → logprob: -23.75020408630371
    7. '$result' → logprob: -24.62520408630371
    8. '[result' → logprob: -24.62520408630371
    9. 'res' → logprob: -24.75020408630371
    10. 'Result' → logprob: -24.87520408630371

Token 254: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0002802855451591313
    2. '_' → logprob: -8.250280380249023
    3. '_t' → logprob: -11.875280380249023
    4. '_s' → logprob: -12.000280380249023
    5. 't' → logprob: -13.375280380249023
    6. '_string' → logprob: -13.625280380249023
    7. ' _' → logprob: -14.000280380249023
    8. '_st' → logprob: -14.125280380249023
    9. '```' → logprob: -14.125280380249023
    10. 'str' → logprob: -15.250280380249023

Token 255: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: ' main' (ID: 2758)
  Prédit: ' transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transform' → logprob: -0.6893085837364197
    2. ' reverse' → logprob: -1.0643086433410645
    3. ' main' → logprob: -2.4393086433410645
    4. ' test' → logprob: -3.8143086433410645
    5. ' example' → logprob: -4.4393086433410645
    6. ' process' → logprob: -4.6893086433410645
    7. ' another' → logprob: -5.5643086433410645
    8. '_' → logprob: -5.8143086433410645
    9. ' invert' → logprob: -5.9393086433410645
    10. ' convert' → logprob: -6.8143086433410645

Token 258: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0037844041362404823
    2. '(' → logprob: -5.6287841796875
    3. '_' → logprob: -9.1287841796875
    4. ' ():' → logprob: -10.3787841796875
    5. '()' → logprob: -10.6287841796875
    6. '_:' → logprob: -12.2537841796875
    7. '():
' → logprob: -12.3787841796875
    8. '(":' → logprob: -12.7537841796875
    9. '(:' → logprob: -12.8787841796875
    10. ':' → logprob: -13.2537841796875

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06644443422555923
    2. ' input' → logprob: -2.8164443969726562
    3. 'input' → logprob: -5.816444396972656
    4. ' user' → logprob: -8.191444396972656
    5. ' test' → logprob: -8.566444396972656
    6. 's' → logprob: -8.941444396972656
    7. ' ' → logprob: -8.941444396972656
    8. '  ' → logprob: -9.191444396972656
    9. ' s' → logprob: -9.316444396972656
    10. '    ' → logprob: -9.316444396972656

Token 260: ' """
' (ID: 7037)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.5326472520828247
    2. ' input' → logprob: -1.0326472520828247
    3. 'input' → logprob: -3.657647132873535
    4. ' example' → logprob: -4.532647132873535
    5. 'test' → logprob: -4.907647132873535
    6. ' user' → logprob: -4.907647132873535
    7. '   ' → logprob: -5.907647132873535
    8. ' sample' → logprob: -6.657647132873535
    9. 'example' → logprob: -7.657647132873535
    10. 'user' → logprob: -8.032647132873535

Token 261: '   ' (ID: 271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8017496466636658
    2. '   ' → logprob: -1.4267497062683105
    3. '#' → logprob: -2.1767497062683105
    4. 'if' → logprob: -3.1767497062683105
    5. 's' → logprob: -3.1767497062683105
    6. 'i' → logprob: -3.4267497062683105
    7. '    
' → logprob: -3.9267497062683105
    8. ' input' → logprob: -4.3017497062683105
    9. 'string' → logprob: -4.9267497062683105
    10. 'test' → logprob: -4.9267497062683105

Token 262: ' Point' (ID: 9971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.997277021408081
    2. 'input' → logprob: -1.872277021408081
    3. ' test' → logprob: -2.122277021408081
    4. ' user' → logprob: -2.372277021408081
    5. ' input' → logprob: -2.372277021408081
    6. 'user' → logprob: -3.122277021408081
    7. ' example' → logprob: -3.247277021408081
    8. 'example' → logprob: -3.622277021408081
    9. 'test' → logprob: -3.747277021408081
    10. ' sample' → logprob: -4.87227725982666

Token 263: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.05098574608564377
    2. 'd' → logprob: -3.050985813140869
    3. ' de' → logprob: -6.675985813140869
    4. '   ' → logprob: -7.425985813140869
    5. '_' → logprob: -8.800985336303711
    6. '_d' → logprob: -9.050985336303711
    7. 'de' → logprob: -9.175985336303711
    8. 's' → logprob: -10.425985336303711
    9. 'def' → logprob: -10.550985336303711
    10. ' ' → logprob: -10.675985336303711

Token 264: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.576498806476593
    2. ''entrée' → logprob: -0.826498806476593
    3. 'entr' → logprob: -7.951498985290527
    4. '’entrée' → logprob: -9.451498985290527
    5. '_' → logprob: -9.826498985290527
    6. ''' → logprob: -9.951498985290527
    7. 'entry' → logprob: -11.701498985290527
    8. 'entrant' → logprob: -12.451498985290527
    9. ''ent' → logprob: -12.451498985290527
    10. 'ent' → logprob: -12.576498985290527

Token 265: ' principal' (ID: 10589)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8127862215042114
    2. '   ' → logprob: -1.3127862215042114
    3. ' du' → logprob: -1.3127862215042114
    4. ' d' → logprob: -5.312786102294922
    5. 'de' → logprob: -5.812786102294922
    6. ' pour' → logprob: -6.187786102294922
    7. '    ' → logprob: -6.187786102294922
    8. 'def' → logprob: -6.312786102294922
    9. '()' → logprob: -6.812786102294922
    10. 'du' → logprob: -7.187786102294922

Token 266: ' du' (ID: 1462)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3005104660987854
    2. '()' → logprob: -2.3005104064941406
    3. '():
' → logprob: -3.1755104064941406
    4. 'def' → logprob: -3.1755104064941406
    5. '   ' → logprob: -3.4255104064941406
    6. ' de' → logprob: -3.6755104064941406
    7. ':' → logprob: -4.675510406494141
    8. 'de' → logprob: -6.050510406494141
    9. ' du' → logprob: -6.175510406494141
    10. ' :' → logprob: -6.300510406494141

Token 267: ' programme' (ID: 18190)
  Prédit: ' programme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programme' → logprob: -0.2669816315174103
    2. 'programme' → logprob: -1.516981601715088
    3. ' script' → logprob: -4.641981601715088
    4. 'program' → logprob: -5.641981601715088
    5. ' program' → logprob: -6.891981601715088
    6. 'script' → logprob: -7.391981601715088
    7. ' code' → logprob: -9.391982078552246
    8. 'code' → logprob: -10.766982078552246
    9. ' programa' → logprob: -12.641982078552246
    10. ' progr' → logprob: -12.641982078552246

Token 268: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2713960111141205
    2. ':' → logprob: -1.5213960409164429
    3. '():' → logprob: -5.521396160125732
    4. ' :' → logprob: -5.896396160125732
    5. '.' → logprob: -5.896396160125732
    6. 'def' → logprob: -6.021396160125732
    7. '):' → logprob: -6.021396160125732
    8. ')' → logprob: -6.396396160125732
    9. ',' → logprob: -6.646396160125732
    10. '    
' → logprob: -7.146396160125732

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002208900870755315
    2. 'input' → logprob: -7.002208709716797
    3. ' input' → logprob: -7.627208709716797
    4. '    
' → logprob: -8.002208709716797
    5. '
' → logprob: -8.877208709716797
    6. '    ' → logprob: -9.502208709716797
    7. 'def' → logprob: -9.877208709716797
    8. '  ' → logprob: -9.877208709716797
    9. ' user' → logprob: -10.377208709716797
    10. 'user' → logprob: -10.502208709716797

Token 270: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040857184678316116
    2. 'input' → logprob: -3.5408570766448975
    3. ' input' → logprob: -4.665857315063477
    4. 'user' → logprob: -7.415857315063477
    5. ' user' → logprob: -7.790857315063477
    6. ' test' → logprob: -8.790857315063477
    7. 'test' → logprob: -9.415857315063477
    8. 'def' → logprob: -9.665857315063477
    9. '    
' → logprob: -10.040857315063477
    10. '    ' → logprob: -10.290857315063477

Token 271: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.035295628011226654
    2. ' une' → logprob: -3.7852957248687744
    3. '   ' → logprob: -5.035295486450195
    4. ' la' → logprob: -6.285295486450195
    5. ' l' → logprob: -6.660295486450195
    6. ' input' → logprob: -7.285295486450195
    7. 'une' → logprob: -7.660295486450195
    8. 'input' → logprob: -8.035295486450195
    9. '_' → logprob: -9.035295486450195
    10. ' un' → logprob: -9.535295486450195

Token 272: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.029316361993551254
    2. ' ligne' → logprob: -4.404316425323486
    3. ' chaine' → logprob: -4.529316425323486
    4. 'chaine' → logprob: -5.904316425323486
    5. 'ligne' → logprob: -6.904316425323486
    6. ' entrée' → logprob: -7.154316425323486
    7. 'entrée' → logprob: -7.279316425323486
    8. ' ' → logprob: -8.154315948486328
    9. 'cha' → logprob: -9.279315948486328
    10. ' string' → logprob: -9.279315948486328

Token 273: ' depuis' (ID: 16277)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.693408191204071
    2. ' depuis' → logprob: -1.8184082508087158
    3. 'de' → logprob: -2.318408250808716
    4. '()' → logprob: -2.568408250808716
    5. 'from' → logprob: -2.943408250808716
    6. ' ' → logprob: -3.568408250808716
    7. ' input' → logprob: -4.193408012390137
    8. 'input' → logprob: -4.318408012390137
    9. '   ' → logprob: -4.818408012390137
    10. ' à' → logprob: -4.943408012390137

Token 274: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.20965775847434998
    2. 'l' → logprob: -1.8346577882766724
    3. ' input' → logprob: -3.834657669067383
    4. 'input' → logprob: -4.959657669067383
    5. ' la' → logprob: -8.959657669067383
    6. '	l' → logprob: -8.959657669067383
    7. '=input' → logprob: -9.209657669067383
    8. '```' → logprob: -9.584657669067383
    9. ' standard' → logprob: -9.834657669067383
    10. '<|end|>' → logprob: -10.084657669067383

Token 275: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.039630234241485596
    2. 'input' → logprob: -3.789630174636841
    3. ''' → logprob: -4.78963041305542
    4. 'entrée' → logprob: -5.16463041305542
    5. 'a' → logprob: -6.78963041305542
    6. ''utilisateur' → logprob: -7.66463041305542
    7. 'e' → logprob: -8.164629936218262
    8. 'entr' → logprob: -9.789629936218262
    9. 'stdin' → logprob: -9.914629936218262
    10. '’entrée' → logprob: -10.289629936218262

Token 276: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.13384807109832764
    2. 'standard' → logprob: -2.383848190307617
    3. '()' → logprob: -3.508848190307617
    4. ' utilisateur' → logprob: -6.258848190307617
    5. '_standard' → logprob: -7.383848190307617
    6. '_' → logprob: -9.258848190307617
    7. 'user' → logprob: -9.508848190307617
    8. 'Standard' → logprob: -9.508848190307617
    9. ',' → logprob: -9.883848190307617
    10. '   ' → logprob: -10.133848190307617

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16431745886802673
    2. '   ' → logprob: -1.9143174886703491
    3. ' ,' → logprob: -5.914317607879639
    4. ' et' → logprob: -7.289317607879639
    5. '()' → logprob: -8.66431713104248
    6. ',
' → logprob: -8.66431713104248
    7. 'input' → logprob: -9.03931713104248
    8. ' ' → logprob: -9.91431713104248
    9. '.' → logprob: -10.41431713104248
    10. ' input' → logprob: -10.66431713104248

Token 278: ' applique' (ID: 180579)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.32948175072669983
    2. '   ' → logprob: -1.5794817209243774
    3. ' transforme' → logprob: -2.829481840133667
    4. ' l' → logprob: -4.829481601715088
    5. 'la' → logprob: -6.704481601715088
    6. ' effect' → logprob: -7.079481601715088
    7. ' appelle' → logprob: -7.454481601715088
    8. '    
' → logprob: -7.579481601715088
    9. '    ' → logprob: -7.704481601715088
    10. ' puis' → logprob: -7.954481601715088

Token 279: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.01683562807738781
    2. ' transform' → logprob: -4.641835689544678
    3. 'transform' → logprob: -5.141835689544678
    4. ' le' → logprob: -8.14183521270752
    5. '(transform' → logprob: -8.26683521270752
    6. '   ' → logprob: -8.39183521270752
    7. 'la' → logprob: -9.26683521270752
    8. ' une' → logprob: -9.64183521270752
    9. '_transform' → logprob: -10.01683521270752
    10. ' transformation' → logprob: -10.14183521270752

Token 280: ' transformation' (ID: 26242)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.0621970109641552
    2. 'trans' → logprob: -2.812196969985962
    3. ' transformation' → logprob: -8.812196731567383
    4. ' transform' → logprob: -9.437196731567383
    5. 'tras' → logprob: -15.437196731567383
    6. ' транс' → logprob: -15.937196731567383
    7. ' transforme' → logprob: -16.062196731567383
    8. '
' → logprob: -16.187196731567383
    9. 'print' → logprob: -17.062196731567383
    10. '_transform' → logprob: -17.812196731567383

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011606277897953987
    2. '   ' → logprob: -4.761606216430664
    3. ' et' → logprob: -6.386606216430664
    4. ' ,' → logprob: -7.136606216430664
    5. 'et' → logprob: -8.636606216430664
    6. ' puis' → logprob: -9.136606216430664
    7. ' à' → logprob: -9.511606216430664
    8. ' ' → logprob: -10.261606216430664
    9. '_,' → logprob: -11.136606216430664
    10. 'input' → logprob: -11.511606216430664

Token 282: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004247692879289389
    2. ' puis' → logprob: -5.879247665405273
    3. ' et' → logprob: -7.254247665405273
    4. 'et' → logprob: -7.629247665405273
    5. ' and' → logprob: -8.754247665405273
    6. ',' → logprob: -10.629247665405273
    7. 'p' → logprob: -10.629247665405273
    8. 'and' → logprob: -11.004247665405273
    9. '    ' → logprob: -11.879247665405273
    10. '  ' → logprob: -12.004247665405273

Token 283: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6453219056129456
    2. 'print' → logprob: -1.2703218460083008
    3. '   ' → logprob: -1.8953218460083008
    4. ' imprime' → logprob: -3.645321846008301
    5. ' affiche' → logprob: -4.645321846008301
    6. ' l' → logprob: -4.895321846008301
    7. 'aff' → logprob: -7.895321846008301
    8. ' la' → logprob: -8.2703218460083
    9. 'l' → logprob: -8.8953218460083
    10. ' prints' → logprob: -9.1453218460083

Token 284: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9219151139259338
    2. '(' → logprob: -1.046915054321289
    3. '(result' → logprob: -2.671915054321289
    4. ' la' → logprob: -2.796915054321289
    5. 'la' → logprob: -2.921915054321289
    6. '   ' → logprob: -4.046915054321289
    7. ' le' → logprob: -4.296915054321289
    8. '(
' → logprob: -4.796915054321289
    9. '(input' → logprob: -4.921915054321289
    10. '(l' → logprob: -5.671915054321289

Token 285: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.1442294865846634
    2. 'rés' → logprob: -2.0192294120788574
    3. 'result' → logprob: -7.394229412078857
    4. 'Rés' → logprob: -7.894229412078857
    5. 'r' → logprob: -8.644229888916016
    6. '_' → logprob: -9.644229888916016
    7. ' rés' → logprob: -9.769229888916016
    8. '_r' → logprob: -9.769229888916016
    9. ' résult' → logprob: -10.144229888916016
    10. ' résultats' → logprob: -10.269229888916016

Token 286: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28660130500793457
    2. '.' → logprob: -1.4116013050079346
    3. ')' → logprob: -5.5366010665893555
    4. '    
' → logprob: -8.036601066589355
    5. ':' → logprob: -8.536601066589355
    6. ').' → logprob: -8.786601066589355
    7. 'def' → logprob: -8.911601066589355
    8. '):' → logprob: -9.161601066589355
    9. 'input' → logprob: -9.536601066589355
    10. '
' → logprob: -9.536601066589355

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003706126008182764
    2. '    
' → logprob: -8.000370979309082
    3. '```' → logprob: -11.500370979309082
    4. 'input' → logprob: -12.125370979309082
    5. '  
' → logprob: -12.500370979309082
    6. '
' → logprob: -12.625370979309082
    7. ')' → logprob: -13.125370979309082
    8. '    ' → logprob: -13.125370979309082
    9. '  ' → logprob: -13.250370979309082
    10. '   
' → logprob: -13.375370979309082

Token 288: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003550416324287653
    2. 'input' → logprob: -5.7535505294799805
    3. '    
' → logprob: -8.37855052947998
    4. '```' → logprob: -10.00355052947998
    5. ' input' → logprob: -10.62855052947998
    6. 'user' → logprob: -10.75355052947998
    7. '    ' → logprob: -11.25355052947998
    8. '
' → logprob: -11.25355052947998
    9. '  ' → logprob: -12.25355052947998
    10. 'def' → logprob: -12.87855052947998

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0060782297514379025
    2. 'input' → logprob: -5.631078243255615
    3. ' input' → logprob: -6.006078243255615
    4. ' user' → logprob: -12.881077766418457
    5. 'user' → logprob: -13.006077766418457
    6. '    
' → logprob: -13.131077766418457
    7. 'import' → logprob: -14.006077766418457
    8. '    ' → logprob: -14.131077766418457
    9. '   ' → logprob: -14.131077766418457
    10. ' line' → logprob: -14.381077766418457

Token 290: ' #' (ID: 1069)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011820240877568722
    2. ' input' → logprob: -4.761820316314697
    3. 'user' → logprob: -5.761820316314697
    4. ' user' → logprob: -10.636819839477539
    5. 'import' → logprob: -10.886819839477539
    6. '   ' → logprob: -11.511819839477539
    7. 's' → logprob: -13.511819839477539
    8. 'raw' → logprob: -15.136819839477539
    9. 'inp' → logprob: -15.386819839477539
    10. 'line' → logprob: -16.13681983947754

Token 291: ' Lire' (ID: 57624)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.013119406066834927
    2. 'user' → logprob: -4.388119220733643
    3. ' input' → logprob: -7.638119220733643
    4. 'import' → logprob: -9.5131196975708
    5. 's' → logprob: -11.1381196975708
    6. 'chaine' → logprob: -11.2631196975708
    7. '#' → logprob: -12.2631196975708
    8. 'string' → logprob: -12.2631196975708
    9. ' user' → logprob: -12.6381196975708
    10. 'raw' → logprob: -12.6381196975708

Token 292: ' la' (ID: 557)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5787935256958008
    2. 'input' → logprob: -0.8287935256958008
    3. 'user' → logprob: -7.453793525695801
    4. '   ' → logprob: -7.578793525695801
    5. ' user' → logprob: -8.2037935256958
    6. ' l' → logprob: -8.3287935256958
    7. '(input' → logprob: -8.3287935256958
    8. 'chaine' → logprob: -8.3287935256958
    9. ' la' → logprob: -8.4537935256958
    10. ' une' → logprob: -8.8287935256958

Token 293: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.5418351888656616
    2. 'input' → logprob: -1.0418351888656616
    3. ' chaîne' → logprob: -3.666835308074951
    4. 'entrée' → logprob: -3.916835308074951
    5. ' input' → logprob: -5.166835308074951
    6. 'cha' → logprob: -5.291835308074951
    7. 's' → logprob: -6.166835308074951
    8. 'string' → logprob: -6.291835308074951
    9. 'ligne' → logprob: -6.416835308074951
    10. ' chaine' → logprob: -6.416835308074951

Token 294: ' d' (ID: 272)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31171759963035583
    2. '   ' → logprob: -1.4367176294326782
    3. 'user' → logprob: -3.9367175102233887
    4. '=input' → logprob: -5.311717510223389
    5. ' input' → logprob: -5.936717510223389
    6. '(input' → logprob: -6.811717510223389
    7. 'chaine' → logprob: -7.436717510223389
    8. ' =' → logprob: -7.686717510223389
    9. 's' → logprob: -8.436717987060547
    10. '()' → logprob: -8.811717987060547

Token 295: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.5767062902450562
    2. 'entrée' → logprob: -0.8267062902450562
    3. 'entr' → logprob: -8.326705932617188
    4. '’entrée' → logprob: -8.701705932617188
    5. ' entrée' → logprob: -8.701705932617188
    6. 'input' → logprob: -9.576705932617188
    7. 'e' → logprob: -9.701705932617188
    8. 'entrada' → logprob: -10.951705932617188
    9. 'ent' → logprob: -11.076705932617188
    10. 'es' → logprob: -11.576705932617188

Token 296: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7392300963401794
    2. 'input' → logprob: -0.7392300963401794
    3. ' input' → logprob: -3.114230155944824
    4. '=input' → logprob: -8.114230155944824
    5. 'user' → logprob: -9.114230155944824
    6. '(input' → logprob: -9.614230155944824
    7. '	input' → logprob: -9.739230155944824
    8. '    
' → logprob: -10.239230155944824
    9. 'chaine' → logprob: -11.739230155944824
    10. ',input' → logprob: -11.864230155944824

Token 297: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25517189502716064
    2. 'l' → logprob: -1.6301718950271606
    3. ' input' → logprob: -4.005171775817871
    4. ' l' → logprob: -4.755171775817871
    5. 'entrée' → logprob: -7.380171775817871
    6. 'la' → logprob: -7.380171775817871
    7. 's' → logprob: -8.005171775817871
    8. '=input' → logprob: -8.130171775817871
    9. 'standard' → logprob: -9.005171775817871
    10. 'user' → logprob: -9.255171775817871

Token 298: ''utilisateur' (ID: 140803)
  Prédit: ''entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.5698950290679932
    2. ''utilisateur' → logprob: -1.5698950290679932
    3. 'entrée' → logprob: -1.9448950290679932
    4. 'input' → logprob: -2.569895029067993
    5. 'a' → logprob: -5.569894790649414
    6. 'util' → logprob: -6.944894790649414
    7. 'stdin' → logprob: -7.069894790649414
    8. 'e' → logprob: -8.444894790649414
    9. 'es' → logprob: -8.819894790649414
    10. '’utilisateur' → logprob: -8.944894790649414

Token 299: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024384744465351105
    2. 'input' → logprob: -3.8993847370147705
    3. ' input' → logprob: -5.89938497543335
    4. '    
' → logprob: -7.02438497543335
    5. '=input' → logprob: -9.774384498596191
    6. '(input' → logprob: -10.024384498596191
    7. '
' → logprob: -10.024384498596191
    8. '	input' → logprob: -11.149384498596191
    9. 'user' → logprob: -11.649384498596191
    10. '   
' → logprob: -11.899384498596191

Token 300: '   ' (ID: 271)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2728929817676544
    2. '   ' → logprob: -1.522892951965332
    3. 'input' → logprob: -3.897892951965332
    4. ' user' → logprob: -7.772892951965332
    5. ' line' → logprob: -10.772892951965332
    6. 'user' → logprob: -11.647892951965332
    7. '    
' → logprob: -12.772892951965332
    8. '	input' → logprob: -12.897892951965332
    9. ' raw' → logprob: -14.272892951965332
    10. ' string' → logprob: -14.647892951965332

Token 301: ' user' (ID: 1825)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007158142048865557
    2. ' input' → logprob: -5.007158279418945
    3. 'user' (adapté à ' user') → logprob: -7.757158279418945
    4. '   ' → logprob: -11.257158279418945
    5. ' user' → logprob: -13.132158279418945
    6. 'import' → logprob: -17.007158279418945
    7. 'inp' → logprob: -17.382158279418945
    8. '	input' → logprob: -17.507158279418945
    9. 'raw' → logprob: -18.132158279418945
    10. 's' → logprob: -18.382158279418945

Token 302: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.08012168854475021
    2. '_str' → logprob: -2.5801217555999756
    3. '_' → logprob: -6.8301215171813965
    4. '_string' → logprob: -8.830121994018555
    5. '_in' → logprob: -13.205121994018555
    6. '_s' → logprob: -14.080121994018555
    7. 'input' → logprob: -14.580121994018555
    8. 'str' → logprob: -15.580121994018555
    9. '_ent' → logprob: -15.705121994018555
    10. '_Input' → logprob: -16.080121994018555

Token 303: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005234002135694027
    2. '=' → logprob: -5.2552337646484375
    3. '_' → logprob: -16.005233764648438
    4. '=input' → logprob: -16.755233764648438
    5. ')' → logprob: -17.005233764648438
    6. '   ' → logprob: -17.255233764648438
    7. ' ' → logprob: -17.505233764648438
    8. ' =
' → logprob: -18.880233764648438
    9. ' ' → logprob: -19.005233764648438
    10. '	' → logprob: -19.005233764648438

Token 304: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25192907452583313
    2. ' input' → logprob: -1.5019290447235107
    3. '	input' → logprob: -17.251928329467773
    4. '(input' → logprob: -17.876928329467773
    5. '=input' → logprob: -18.126928329467773
    6. '<input' → logprob: -20.001928329467773
    7. ' ' → logprob: -20.626928329467773
    8. '```' → logprob: -21.626928329467773
    9. '_input' → logprob: -22.126928329467773
    10. ',input' → logprob: -22.501928329467773

Token 305: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0033447786699980497
    2. '(' → logprob: -5.753345012664795
    3. '()>' → logprob: -9.753344535827637
    4. '('' → logprob: -10.378344535827637
    5. '("' → logprob: -10.628344535827637
    6. '())' → logprob: -11.253344535827637
    7. '("")' → logprob: -11.253344535827637
    8. '(">' → logprob: -11.628344535827637
    9. '().' → logprob: -12.628344535827637
    10. '()">' → logprob: -12.753344535827637

Token 306: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01732219196856022
    2. 'result' → logprob: -4.517322063446045
    3. '    
' → logprob: -5.142322063446045
    4. ' result' → logprob: -9.017322540283203
    5. 'trans' → logprob: -9.017322540283203
    6. ' transformed' → logprob: -9.517322540283203
    7. 'output' → logprob: -10.017322540283203
    8. '
' → logprob: -10.517322540283203
    9. '  
' → logprob: -12.267322540283203
    10. '	result' → logprob: -12.392322540283203

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18177185952663422
    2. 'result' → logprob: -2.056771755218506
    3. 'trans' → logprob: -3.931771755218506
    4. ' result' → logprob: -4.806771755218506
    5. ' transformed' → logprob: -4.806771755218506
    6. 'output' → logprob: -6.181771755218506
    7. ' output' → logprob: -8.306772232055664
    8. 'transform' → logprob: -10.681772232055664
    9. '    
' → logprob: -11.431772232055664
    10. 'processed' → logprob: -11.431772232055664

Token 308: ' #' (ID: 1069)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.02520599775016308
    2. 'result' → logprob: -4.275206089019775
    3. 'output' → logprob: -4.525206089019775
    4. ' transformed' → logprob: -9.150205612182617
    5. 'print' → logprob: -10.400205612182617
    6. 'processed' → logprob: -11.650205612182617
    7. 'transform' → logprob: -13.650205612182617
    8. 'modified' → logprob: -14.275205612182617
    9. 'converted' → logprob: -14.275205612182617
    10. 'Trans' → logprob: -14.525205612182617

Token 309: ' Ap' (ID: 6537)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.07463091611862183
    2. 'result' → logprob: -2.8246309757232666
    3. 'output' → logprob: -4.4496307373046875
    4. ' transformed' → logprob: -7.8246307373046875
    5. 'print' → logprob: -7.9496307373046875
    6. '#' → logprob: -9.574630737304688
    7. 'processed' → logprob: -10.199630737304688
    8. ' result' → logprob: -11.199630737304688
    9. ' output' → logprob: -11.699630737304688
    10. '   ' → logprob: -11.949630737304688

Token 310: 'pliquer' (ID: 101028)
  Prédit: 'ply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ply' → logprob: -0.115424744784832
    2. 'pliquer' → logprob: -2.615424633026123
    3. 'pl' → logprob: -3.990424633026123
    4. 'plied' → logprob: -4.990424633026123
    5. 'plic' → logprob: -5.990424633026123
    6. 'p' → logprob: -6.115424633026123
    7. 'plier' → logprob: -6.240424633026123
    8. 'pli' → logprob: -6.615424633026123
    9. 'print' → logprob: -7.240424633026123
    10. 'pler' → logprob: -7.615424633026123

Token 311: ' la' (ID: 557)
  Prédit: ' transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transform' → logprob: -0.23512662947177887
    2. 'transform' → logprob: -1.6101266145706177
    3. '(transform' → logprob: -4.860126495361328
    4. ' the' → logprob: -7.110126495361328
    5. '_transform' → logprob: -7.110126495361328
    6. ' transformed' → logprob: -9.485126495361328
    7. ' la' → logprob: -9.735126495361328
    8. ' transforme' → logprob: -9.860126495361328
    9. ' transformation' → logprob: -10.985126495361328
    10. ' transforma' → logprob: -11.110126495361328

Token 312: ' transformation' (ID: 26242)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.0832177996635437
    2. 'print' → logprob: -3.0832178592681885
    3. 'result' → logprob: -3.8332178592681885
    4. 'trans' → logprob: -4.458217620849609
    5. ' transformed' → logprob: -7.708217620849609
    6. ' transform' → logprob: -7.958217620849609
    7. ' print' → logprob: -12.20821762084961
    8. 'output' → logprob: -12.20821762084961
    9. ' result' → logprob: -13.33321762084961
    10. 'processed' → logprob: -14.08321762084961

Token 313: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6554926037788391
    2. 'result' → logprob: -0.7804926037788391
    3. 'user' → logprob: -4.030492782592773
    4. ' result' → logprob: -6.155492782592773
    5. 'output' → logprob: -7.155492782592773
    6. 'trans' → logprob: -7.905492782592773
    7. ' user' → logprob: -8.030492782592773
    8. '(user' → logprob: -8.530492782592773
    9. ' transformed' → logprob: -8.530492782592773
    10. '<|end|>' → logprob: -8.655492782592773

Token 314: ' la' (ID: 557)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.00026217024424113333
    2. ' user' → logprob: -8.250262260437012
    3. '(user' → logprob: -14.000262260437012
    4. '"user' → logprob: -18.000261306762695
    5. 'the' → logprob: -18.625261306762695
    6. '=user' → logprob: -19.000261306762695
    7. ''user' → logprob: -19.375261306762695
    8. 'l' → logprob: -19.500261306762695
    9. '[user' → logprob: -19.750261306762695
    10. '_user' → logprob: -20.000261306762695

Token 315: ' chaîne' (ID: 89288)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -1.1517960956552997e-05
    2. ' user' → logprob: -11.500011444091797
    3. 'transform' → logprob: -14.250011444091797
    4. 'input' → logprob: -14.625011444091797
    5. '"user' → logprob: -15.875011444091797
    6. 'string' → logprob: -16.375011444091797
    7. 'use' → logprob: -17.750011444091797
    8. '[user' → logprob: -18.500011444091797
    9. '   ' → logprob: -18.750011444091797
    10. ''user' → logprob: -18.875011444091797

Token 316: ' sais' (ID: 30010)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5720023512840271
    2. 'result' → logprob: -1.4470024108886719
    3. 'trans' → logprob: -2.697002410888672
    4. 'user' → logprob: -3.447002410888672
    5. '_result' → logprob: -3.697002410888672
    6. 'transform' → logprob: -3.697002410888672
    7. '(user' → logprob: -4.322002410888672
    8. ' =' → logprob: -4.572002410888672
    9. ' transformed' → logprob: -4.572002410888672
    10. '=user' → logprob: -5.072002410888672

Token 317: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -4.35837464465294e-05
    2. 'nie' → logprob: -10.875043869018555
    3. 'lie' → logprob: -11.750043869018555
    4. 'i' → logprob: -12.000043869018555
    5. 'rie' → logprob: -12.750043869018555
    6. '   ' → logprob: -13.875043869018555
    7. 'e' → logprob: -13.875043869018555
    8. 'ite' → logprob: -14.000043869018555
    9. 'isie' → logprob: -14.000043869018555
    10. 'sie' → logprob: -14.000043869018555

Token 318: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09388957172632217
    2. 'result' → logprob: -2.4688894748687744
    3. ' transformed' → logprob: -6.2188897132873535
    4. ' result' → logprob: -6.2188897132873535
    5. '    
' → logprob: -7.9688897132873535
    6. 'user' → logprob: -8.343889236450195
    7. 'trans' → logprob: -8.718889236450195
    8. ',' → logprob: -9.843889236450195
    9. '.' → logprob: -10.218889236450195
    10. 'output' → logprob: -11.093889236450195

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4447444677352905
    2. 'result' → logprob: -1.4447444677352905
    3. ' result' → logprob: -3.19474458694458
    4. ' transformed' → logprob: -3.19474458694458
    5. 'trans' → logprob: -3.19474458694458
    6. 'output' → logprob: -8.694744110107422
    7. ' output' → logprob: -9.819744110107422
    8. '    
' → logprob: -10.819744110107422
    9. 'transform' → logprob: -12.069744110107422
    10. '	trans' → logprob: -12.569744110107422

Token 320: ' transformed' (ID: 38560)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.24880839884281158
    2. 'result' → logprob: -1.7488083839416504
    3. ' transformed' → logprob: -3.4988083839416504
    4. 'output' → logprob: -4.24880838394165
    5. ' result' → logprob: -6.62380838394165
    6. ' output' → logprob: -7.87380838394165
    7. 'print' → logprob: -10.748808860778809
    8. 'transform' → logprob: -10.873808860778809
    9. '   ' → logprob: -11.498808860778809
    10. 'processed' → logprob: -11.498808860778809

Token 321: ' =' (ID: 314)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.10200707614421844
    2. '_str' → logprob: -2.3520071506500244
    3. '_input' → logprob: -6.727006912231445
    4. '_' → logprob: -8.352006912231445
    5. '_user' → logprob: -8.477006912231445
    6. '_output' → logprob: -9.602006912231445
    7. '_text' → logprob: -9.852006912231445
    8. '_s' → logprob: -11.477006912231445
    9. '_strings' → logprob: -11.852006912231445
    10. '_result' → logprob: -12.102006912231445

Token 322: ' transform' (ID: 7118)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.04858759790658951
    2. ' transform' → logprob: -3.0485875606536865
    3. '	transform' → logprob: -16.548587799072266
    4. '(transform' → logprob: -16.798587799072266
    5. 'trans' → logprob: -17.298587799072266
    6. '.transform' → logprob: -19.548587799072266
    7. '   ' → logprob: -19.673587799072266
    8. '_transform' → logprob: -20.423587799072266
    9. ' transforme' → logprob: -21.048587799072266
    10. ' ' → logprob: -21.173587799072266

Token 323: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.3902033970225602e-05
    2. '_' → logprob: -11.375014305114746
    3. '_str' → logprob: -13.250014305114746
    4. '_user' → logprob: -14.750014305114746
    5. '_strings' → logprob: -16.00001335144043
    6. '_String' → logprob: -16.37501335144043
    7. '_STRING' → logprob: -17.25001335144043
    8. 'String' → logprob: -17.75001335144043
    9. ' _' → logprob: -18.50001335144043
    10. '_text' → logprob: -18.62501335144043

Token 324: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -1.5451681974809617e-05
    2. '(' → logprob: -11.125015258789062
    3. 'user' → logprob: -14.750015258789062
    4. '(input' → logprob: -16.250015258789062
    5. '(
' → logprob: -17.250015258789062
    6. '(us' → logprob: -17.250015258789062
    7. '(use' → logprob: -17.375015258789062
    8. '(u' → logprob: -17.625015258789062
    9. ' (' → logprob: -18.875015258789062
    10. '=user' → logprob: -20.000015258789062

Token 325: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0727725476026535
    2. '_str' → logprob: -2.94777250289917
    3. 'put' → logprob: -4.19777250289917
    4. 'input' → logprob: -6.69777250289917
    5. '_put' → logprob: -7.07277250289917
    6. 'str' → logprob: -7.94777250289917
    7. 'ut' → logprob: -9.697772979736328
    8. 'puts' → logprob: -10.197772979736328
    9. '```' → logprob: -10.572772979736328
    10. '_' → logprob: -10.572772979736328

Token 326: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ')
' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.125005722045898
    4. ' )' → logprob: -15.125005722045898
    5. ' ' → logprob: -18.3750057220459
    6. ')

' → logprob: -19.0000057220459
    7. ')
' → logprob: -19.6250057220459
    8. ')`' → logprob: -19.8750057220459
    9. '))' → logprob: -20.6250057220459
    10. '),' → logprob: -21.1250057220459

Token 327: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014434030279517174
    2. 'print' → logprob: -4.264433860778809
    3. '    
' → logprob: -8.264433860778809
    4. ' print' → logprob: -11.889433860778809
    5. '
' → logprob: -12.264433860778809
    6. '```' → logprob: -13.764433860778809
    7. '  
' → logprob: -15.264433860778809
    8. '   
' → logprob: -17.014434814453125
    9. '	print' → logprob: -17.389434814453125
    10. '       ' → logprob: -17.889434814453125

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5760545134544373
    2. 'print' → logprob: -0.8260545134544373
    3. ' print' → logprob: -9.076054573059082
    4. '    
' → logprob: -15.076054573059082
    5. '
' → logprob: -15.326054573059082
    6. '```' → logprob: -16.076053619384766
    7. '	print' → logprob: -17.326053619384766
    8. '  ' → logprob: -19.076053619384766
    9. '   ' → logprob: -19.076053619384766
    10. '       ' → logprob: -19.576053619384766

Token 329: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -14.75
    3. '   ' → logprob: -19.5
    4. 'pr' → logprob: -23.0
    5. '```' → logprob: -23.75
    6. 'prin' → logprob: -24.0
    7. '    
' → logprob: -24.75
    8. '
' → logprob: -24.75
    9. '#print' → logprob: -25.375
    10. '	print' → logprob: -25.875

Token 330: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.7697225252486533e-06
    2. ' print' → logprob: -12.500003814697266
    3. 'pr' → logprob: -18.500003814697266
    4. '   ' → logprob: -20.000003814697266
    5. 'prin' → logprob: -21.125003814697266
    6. 'Print' → logprob: -22.500003814697266
    7. 'p' → logprob: -22.875003814697266
    8. 'pri' → logprob: -23.625003814697266
    9. '	print' → logprob: -23.875003814697266
    10. '```' → logprob: -24.000003814697266

Token 331: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.008343053050339222
    2. 'iche' → logprob: -4.88334321975708
    3. 'ich' → logprob: -8.008342742919922
    4. '   ' → logprob: -8.133342742919922
    5. '#' → logprob: -9.883342742919922
    6. 'ichage' → logprob: -10.008342742919922
    7. 'cher' → logprob: -12.758342742919922
    8. 'ic' → logprob: -13.133342742919922
    9. '```' → logprob: -13.133342742919922
    10. 'iché' → logprob: -14.008342742919922

Token 332: ' la' (ID: 557)
  Prédit: '(trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(trans' → logprob: -0.008647306822240353
    2. '(' → logprob: -4.758647441864014
    3. '(transform' → logprob: -10.508646965026855
    4. '(
' → logprob: -12.883646965026855
    5. '(tr' → logprob: -13.508646965026855
    6. '(t' → logprob: -14.383646965026855
    7. ' (' → logprob: -15.508646965026855
    8. 'trans' → logprob: -15.508646965026855
    9. '(f' → logprob: -15.633646965026855
    10. '()' → logprob: -16.383647918701172

Token 333: ' chaîne' (ID: 89288)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9069905877113342
    2. 'trans' → logprob: -1.1569905281066895
    3. '(trans' → logprob: -1.7819905281066895
    4. '(' → logprob: -2.9069905281066895
    5. ' transformed' → logprob: -3.2819905281066895
    6. '(result' → logprob: -4.9069905281066895
    7. ' résultat' → logprob: -5.1569905281066895
    8. 'transform' → logprob: -5.9069905281066895
    9. 'rés' → logprob: -6.4069905281066895
    10. ' result' → logprob: -6.7819905281066895

Token 334: ' transform' (ID: 7118)
  Prédit: '(trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(trans' → logprob: -0.299550861120224
    2. '(transform' → logprob: -1.4245508909225464
    3. '(' → logprob: -4.174551010131836
    4. 'transform' → logprob: -6.299551010131836
    5. 'trans' → logprob: -7.799551010131836
    6. ' transformed' → logprob: -8.299551010131836
    7. '(
' → logprob: -8.674551010131836
    8. '(tr' → logprob: -9.174551010131836
    9. '(result' → logprob: -10.924551010131836
    10. ' transform' → logprob: -11.174551010131836

Token 335: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0017167085316032171
    2. 'ed' → logprob: -6.626716613769531
    3. 'ee' → logprob: -8.501716613769531
    4. 'é' → logprob: -8.626716613769531
    5. 'e' → logprob: -11.876716613769531
    6. '_' → logprob: -14.876716613769531
    7. '   ' → logprob: -14.876716613769531
    8. 'eed' → logprob: -15.251716613769531
    9. '__' → logprob: -15.876716613769531
    10. 'ées' → logprob: -16.50171661376953

Token 336: '.
' (ID: 558)
  Prédit: '(trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(trans' → logprob: -0.40126723051071167
    2. '(' → logprob: -1.2762672901153564
    3. '   ' → logprob: -3.0262672901153564
    4. '()' → logprob: -6.401267051696777
    5. '(
' → logprob: -6.901267051696777
    6. '(print' → logprob: -9.401267051696777
    7. 'print' → logprob: -10.026267051696777
    8. '.' → logprob: -10.151267051696777
    9. '(transform' → logprob: -10.651267051696777
    10. ')' → logprob: -10.776267051696777

Token 337: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.047374892979860306
    2. '   ' → logprob: -3.547374963760376
    3. ' print' → logprob: -4.047374725341797
    4. '```' → logprob: -13.297374725341797
    5. '    
' → logprob: -16.297374725341797
    6. '	print' → logprob: -16.672374725341797
    7. '
' → logprob: -17.547374725341797
    8. 'Print' → logprob: -18.422374725341797
    9. '`' → logprob: -18.672374725341797
    10. ' ' → logprob: -19.297374725341797

Token 338: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -16.75
    3. '   ' → logprob: -21.25
    4. '```' → logprob: -22.5
    5. 'pr' → logprob: -22.875
    6. 'prin' → logprob: -25.25
    7. 'println' → logprob: -25.875
    8. '
' → logprob: -26.0
    9. '	print' → logprob: -26.625
    10. 'printf' → logprob: -26.875

Token 339: '(trans' (ID: 60636)
  Prédit: '(trans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(trans' → logprob: -0.16025662422180176
    2. '(' → logprob: -1.9102566242218018
    3. '(transform' → logprob: -11.160256385803223
    4. '('' → logprob: -11.285256385803223
    5. '("("' → logprob: -13.285256385803223
    6. '(
' → logprob: -14.160256385803223
    7. '(`' → logprob: -14.410256385803223
    8. '(tr' → logprob: -14.535256385803223
    9. ' (' → logprob: -14.535256385803223
    10. '()' → logprob: -14.660256385803223

Token 340: 'formed' (ID: 11144)
  Prédit: 'orm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orm' → logprob: -0.0036541218869388103
    2. 'formed' → logprob: -5.6286540031433105
    3. 'form' → logprob: -10.003654479980469
    4. 'ored' → logprob: -12.753654479980469
    5. 'ed' → logprob: -13.753654479980469
    6. '_form' → logprob: -13.753654479980469
    7. 'orph' → logprob: -14.003654479980469
    8. '   ' → logprob: -14.128654479980469
    9. 'orme' → logprob: -14.128654479980469
    10. 'ormal' → logprob: -15.128654479980469

Token 341: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -14.875
    3. '()' → logprob: -17.875
    4. '())' → logprob: -18.25
    5. '))' → logprob: -19.5
    6. ')
' → logprob: -19.5
    7. '')' → logprob: -19.625
    8. ')`' → logprob: -20.25
    9. '）' → logprob: -21.125
    10. '")' → logprob: -22.0

Token 342: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.0219828002154827e-05
    2. ' if' → logprob: -11.000020027160645
    3. '
' → logprob: -12.750020027160645
    4. '```' → logprob: -15.250020027160645
    5. '#' → logprob: -16.25002098083496
    6. '\n' → logprob: -16.62502098083496
    7. 'main' → logprob: -16.75002098083496
    8. '  
' → logprob: -17.25002098083496
    9. '<|end|>' → logprob: -17.87502098083496
    10. '    
' → logprob: -17.87502098083496

Token 343: ' Ex' (ID: 1771)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.20603168499656e-05
    2. 'main' → logprob: -9.750061988830566
    3. ' if' → logprob: -12.500061988830566
    4. 'If' → logprob: -18.875062942504883
    5. '#' → logprob: -19.375062942504883
    6. ' main' → logprob: -20.625062942504883
    7. '```' → logprob: -21.000062942504883
    8. '#if' → logprob: -21.500062942504883
    9. 'i' → logprob: -21.875062942504883
    10. '__' → logprob: -22.000062942504883

Token 344: 'éc' (ID: 5675)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00418061763048172
    2. 'ecute' → logprob: -5.629180431365967
    3. 'éc' → logprob: -8.129180908203125
    4. 'ec' → logprob: -8.379180908203125
    5. 'e' → logprob: -10.379180908203125
    6. 'ecut' → logprob: -11.504180908203125
    7. 'ecution' → logprob: -12.629180908203125
    8. 'é' → logprob: -12.629180908203125
    9. ' if' → logprob: -13.129180908203125
    10. 'ecu' → logprob: -13.504180908203125

Token 345: 'ute' (ID: 1331)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03018246218562126
    2. 'ecute' → logprob: -3.655182361602783
    3. 'ute' → logprob: -6.280182361602783
    4. 'ec' → logprob: -7.405182361602783
    5. 'cute' → logprob: -7.530182361602783
    6. 'ecut' → logprob: -8.155182838439941
    7. ' if' → logprob: -8.780182838439941
    8. 'ecution' → logprob: -9.155182838439941
    9. 'uter' → logprob: -9.155182838439941
    10. 'éc' → logprob: -10.030182838439941

Token 346: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00246150279417634
    2. ' if' → logprob: -6.1274614334106445
    3. 'ur' → logprob: -9.252461433410645
    4. 'r' → logprob: -9.627461433410645
    5. '_' → logprob: -10.002461433410645
    6. 'er' → logprob: -10.377461433410645
    7. 'e' → logprob: -11.627461433410645
    8. '```' → logprob: -12.127461433410645
    9. '__' → logprob: -12.252461433410645
    10. 'ion' → logprob: -12.502461433410645

Token 347: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04526589438319206
    2. ' main' → logprob: -3.2952659130096436
    3. '__' → logprob: -5.9202656745910645
    4. 'if' → logprob: -6.4202656745910645
    5. 'programme' → logprob: -6.7952656745910645
    6. 'fonction' → logprob: -7.1702656745910645
    7. 'program' → logprob: -8.170266151428223
    8. '_main' → logprob: -8.545266151428223
    9. 'script' → logprob: -9.170266151428223
    10. 'mé' → logprob: -9.545266151428223

Token 348: ' principale' (ID: 68926)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007679368136450648
    2. 'main' → logprob: -7.750767707824707
    3. ' if' → logprob: -8.000767707824707
    4. ' main' → logprob: -13.250767707824707
    5. '```' → logprob: -16.625768661499023
    6. '
' → logprob: -17.000768661499023
    7. '__' → logprob: -17.750768661499023
    8. 'si' → logprob: -18.000768661499023
    9. '(main' → logprob: -18.125768661499023
    10. '_main' → logprob: -18.375768661499023

Token 349: ' lorsque' (ID: 39361)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16083075106143951
    2. '
' → logprob: -1.9108307361602783
    3. ' if' → logprob: -7.910830974578857
    4. '

' → logprob: -8.7858304977417
    5. '
' → logprob: -9.9108304977417
    6. '\n' → logprob: -11.4108304977417
    7. '  
' → logprob: -11.6608304977417
    8. '\' → logprob: -12.0358304977417
    9. 'main' → logprob: -12.5358304977417
    10. ' 
' → logprob: -13.1608304977417

Token 350: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0493013896048069
    2. ' __' → logprob: -3.0493013858795166
    3. ' le' → logprob: -7.299301624298096
    4. 'le' → logprob: -11.424301147460938
    5. 'name' → logprob: -11.549301147460938
    6. '```' → logprob: -12.049301147460938
    7. '/__' → logprob: -12.924301147460938
    8. '_le' → logprob: -13.049301147460938
    9. 'if' → logprob: -13.299301147460938
    10. '.py' → logprob: -14.049301147460938

Token 351: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.577443540096283
    2. ' script' → logprob: -1.0774435997009277
    3. '_' → logprob: -3.7024435997009277
    4. ' __' → logprob: -3.9524435997009277
    5. '.py' → logprob: -4.077443599700928
    6. ' programme' → logprob: -4.827443599700928
    7. ' fichier' → logprob: -4.952443599700928
    8. 'if' → logprob: -5.077443599700928
    9. '_script' → logprob: -6.202443599700928
    10. 'script' → logprob: -6.452443599700928

Token 352: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.4161747992038727
    2. ' est' → logprob: -1.1661747694015503
    3. ' is' → logprob: -4.29117488861084
    4. '__' → logprob: -4.54117488861084
    5. '_est' → logprob: -6.91617488861084
    6. 's' → logprob: -7.04117488861084
    7. ' __' → logprob: -7.29117488861084
    8. '.py' → logprob: -7.41617488861084
    9. ' ==' → logprob: -7.91617488861084
    10. 'if' → logprob: -8.04117488861084

Token 353: ' lancé' (ID: 104614)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09744369238615036
    2. ' exécut' → logprob: -2.7224435806274414
    3. ' __' → logprob: -4.597443580627441
    4. 'execut' → logprob: -5.097443580627441
    5. 'ex' → logprob: -5.222443580627441
    6. 'le' → logprob: -6.097443580627441
    7. '_' → logprob: -6.847443580627441
    8. '_ex' → logprob: -7.472443580627441
    9. ' lancé' → logprob: -8.097443580627441
    10. ' le' → logprob: -8.347443580627441

Token 354: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.032680582255125046
    2. '
' → logprob: -4.157680511474609
    3. ' if' → logprob: -4.282680511474609
    4. '

' → logprob: -7.157680511474609
    5. '_if' → logprob: -7.657680511474609
    6. '  
' → logprob: -7.907680511474609
    7. '\
' → logprob: -8.53268051147461
    8. '    
' → logprob: -8.53268051147461
    9. '\' → logprob: -8.65768051147461
    10. ' 
' → logprob: -9.65768051147461

Token 355: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.896309739408025e-07
    2. ' if' → logprob: -14.250000953674316
    3. '
' → logprob: -16.25
    4. '```' → logprob: -20.75
    5. '    
' → logprob: -23.0
    6. '

' → logprob: -23.5
    7. '  
' → logprob: -23.625
    8. '\
' → logprob: -23.75
    9. 'i' → logprob: -24.0
    10. '\' → logprob: -24.125

Token 356: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0036018555983901024
    2. '__' → logprob: -5.628602027893066
    3. ' ' → logprob: -13.628602027893066
    4. '_' → logprob: -15.253602027893066
    5. ' ' → logprob: -15.753602027893066
    6. ' ' → logprob: -16.62860107421875
    7. ' _' → logprob: -17.00360107421875
    8. ' True' → logprob: -17.75360107421875
    9. ' ___' → logprob: -17.75360107421875
    10. ' ​' → logprob: -18.37860107421875

Token 357: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7137855887413025
    2. ' ==' → logprob: -0.8387855887413025
    3. ' __' → logprob: -2.7137856483459473
    4. '==' → logprob: -4.838785648345947
    5. 'name' → logprob: -5.713785648345947
    6. '_' → logprob: -8.588785171508789
    7. ' =="' → logprob: -9.463785171508789
    8. '=="' → logprob: -9.963785171508789
    9. ' _' → logprob: -10.088785171508789
    10. ' =' → logprob: -10.713785171508789

Token 358: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.512236498361744e-07
    2. '__.__' → logprob: -15.000000953674316
    3. '____' → logprob: -17.0
    4. '__
' → logprob: -17.25
    5. '___' → logprob: -17.375
    6. '==' → logprob: -18.0
    7. '__('' → logprob: -18.75
    8. '_' → logprob: -19.25
    9. '__

' → logprob: -19.375
    10. '__["' → logprob: -19.625

Token 359: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000351670227246359
    2. '==' → logprob: -8.000351905822754
    3. ' ==' → logprob: -11.625351905822754
    4. '=="' → logprob: -12.125351905822754
    5. '_' → logprob: -14.375351905822754
    6. '=' → logprob: -14.875351905822754
    7. '___' → logprob: -15.125351905822754
    8. '=='' → logprob: -15.875351905822754
    9. '__.__' → logprob: -16.000350952148438
    10. '____' → logprob: -16.125350952148438

Token 360: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023960597813129425
    2. ''' → logprob: -3.773960590362549
    3. ' "__' → logprob: -7.273960590362549
    4. ' '__' → logprob: -11.398961067199707
    5. '__' → logprob: -11.523961067199707
    6. '"user' → logprob: -16.39896011352539
    7. '("__' → logprob: -16.52396011352539
    8. '"_' → logprob: -17.14896011352539
    9. '"name' → logprob: -17.27396011352539
    10. ''"' → logprob: -17.52396011352539

Token 361: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.128163257315464e-07
    2. 'name' → logprob: -15.25
    3. ' main' → logprob: -18.5
    4. 'ma' → logprob: -21.5
    5. '_main' → logprob: -22.375
    6. 'm' → logprob: -23.0
    7. '	main' → logprob: -23.125
    8. 'mai' → logprob: -23.25
    9. 'maine' → logprob: -23.25
    10. 'built' → logprob: -24.125

Token 362: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16023144125938416
    2. '__":
' → logprob: -1.9102314710617065
    3. '"' → logprob: -12.160231590270996
    4. '__':
' → logprob: -14.160231590270996
    5. '_"' → logprob: -14.410231590270996
    6. '__["' → logprob: -14.910231590270996
    7. '__("' → logprob: -16.16023063659668
    8. '__",' → logprob: -16.16023063659668
    9. '```' → logprob: -16.78523063659668
    10. ' "__' → logprob: -16.91023063659668

Token 363: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9642484188079834
    2. '__' → logprob: -0.9642484188079834
    3. 'main' → logprob: -1.4642484188079834
    4. ' main' → logprob: -5.5892486572265625
    5. ''' → logprob: -6.3392486572265625
    6. ' "__' → logprob: -7.8392486572265625
    7. '   ' → logprob: -9.214248657226562
    8. ' __' → logprob: -9.714248657226562
    9. '_main' → logprob: -9.714248657226562
    10. '__":
' → logprob: -10.464248657226562

Token 364: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -22.5
    4. '   ' → logprob: -24.625
    5. 'ma' → logprob: -24.875
    6. 'mai' → logprob: -25.25
    7. '_main' → logprob: -25.5
    8. '(main' → logprob: -25.875
    9. '.main' → logprob: -25.875
    10. 'maine' → logprob: -26.0

Token 365: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 363
Tokens correctement prédits (1ère position, stricte): 121
Tokens correctement prédits (1ère position, avec adaptation): 128
Tokens correctement prédits (top 10): 250
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 35.26%
Précision (top 10): 68.87%
================================================================================
