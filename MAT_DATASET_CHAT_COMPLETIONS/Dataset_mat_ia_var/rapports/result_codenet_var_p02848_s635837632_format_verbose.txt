================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:36:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
nombre_de_caracteres_a_decaler = int(input())

chaine_a_chiffrer = input()

alphabet_majuscule = [chr(ord('A') + index_lettre) for index_lettre in range(26)]

chaine_chiffree = []

for caractere in chaine_a_chiffrer:
    
    code_ascii_decale = (ord(caractere) + nombre_de_caracteres_a_decaler - ord('A')) % 26 + ord('A')
    
    caractere_chiffre = chr(code_ascii_decale)
    
    chaine_chiffree.append(caractere_chiffre)

chaine_chiffree_jointe = "".join(chaine_chiffree)

print(chaine_chiffree_jointe)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'nombre' (ID: 28576)
  → Token d'amorce (pas de prédiction)

Token 1: '_de' (ID: 5047)
  → Token d'amorce (pas de prédiction)

Token 2: '_car' (ID: 62991)
  → Token d'amorce (pas de prédiction)

Token 3: 'acter' (ID: 3344)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6112561225891113
    2. 'r' → logprob: -1.6112561225891113
    3. '_' → logprob: -2.1112561225891113
    4. 'a' → logprob: -2.2362561225891113
    5. '_a' → logprob: -4.111256122589111
    6. 'acter' → logprob: -5.986256122589111
    7. '_r' → logprob: -6.111256122589111
    8. 'c' → logprob: -6.361256122589111
    9. '_s' → logprob: -6.486256122589111
    10. '_space' → logprob: -7.111256122589111

Token 4: 'es' (ID: 268)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5229200720787048
    2. 'es' → logprob: -1.5229201316833496
    3. '_es' → logprob: -2.0229201316833496
    4. '_s' → logprob: -3.1479201316833496
    5. '_e' → logprob: -4.64792013168335
    6. 'e' → logprob: -6.39792013168335
    7. '[' → logprob: -6.89792013168335
    8. 's' → logprob: -7.52292013168335
    9. '```' → logprob: -8.022919654846191
    10. '_=' → logprob: -9.397919654846191

Token 5: '_a' (ID: 10852)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11956391483545303
    2. '_' → logprob: -2.3695638179779053
    3. '=' → logprob: -4.119564056396484
    4. ' =' → logprob: -7.119564056396484
    5. 'es' → logprob: -7.619564056396484
    6. '[' → logprob: -7.994564056396484
    7. 's' → logprob: -8.494564056396484
    8. ')' → logprob: -8.744564056396484
    9. '('' → logprob: -8.869564056396484
    10. ':' → logprob: -9.494564056396484

Token 6: '_de' (ID: 5047)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9905089735984802
    2. '_' → logprob: -1.115509033203125
    3. 'u' → logprob: -1.615509033203125
    4. '_s' → logprob: -3.865509033203125
    5. ' =' → logprob: -4.615509033203125
    6. 't' → logprob: -4.615509033203125
    7. ')' → logprob: -4.740509033203125
    8. '```' → logprob: -4.740509033203125
    9. 'b' → logprob: -5.115509033203125
    10. '=' → logprob: -5.115509033203125

Token 7: 'caler' (ID: 131227)
  Prédit: 'coder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coder' → logprob: -0.773457407951355
    2. 'fin' → logprob: -1.523457407951355
    3. 'crire' → logprob: -2.2734575271606445
    4. 'ter' → logprob: -2.6484575271606445
    5. 'comp' → logprob: -3.5234575271606445
    6. 'tr' → logprob: -4.0234575271606445
    7. 'placer' → logprob: -4.0234575271606445
    8. 'tect' → logprob: -5.1484575271606445
    9. '_comp' → logprob: -5.1484575271606445
    10. '```' → logprob: -5.1484575271606445

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02684357576072216
    2. '[' → logprob: -4.151843547821045
    3. '(' → logprob: -4.901843547821045
    4. '=' → logprob: -6.151843547821045
    5. '.' → logprob: -8.401844024658203
    6. ' =' → logprob: -8.526844024658203
    7. 's' → logprob: -8.651844024658203
    8. ' ' → logprob: -9.276844024658203
    9. '+' → logprob: -9.776844024658203
    10. '```' → logprob: -9.901844024658203

Token 9: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.044907860457897186
    2. '10' → logprob: -3.919907808303833
    3. '32' → logprob: -4.919908046722412
    4. '5' → logprob: -5.294908046722412
    5. '1' → logprob: -5.544908046722412
    6. '20' → logprob: -6.294908046722412
    7. '16' → logprob: -6.544908046722412
    8. '7' → logprob: -7.044908046722412
    9. '4' → logprob: -7.544908046722412
    10. ' len' → logprob: -7.794908046722412

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012999961618334055
    2. ''' → logprob: -7.626299858093262
    3. '('' → logprob: -8.001299858093262
    4. '[' → logprob: -8.876299858093262
    5. '_' → logprob: -8.876299858093262
    6. '32' → logprob: -10.251299858093262
    7. '("("' → logprob: -10.626299858093262
    8. '```' → logprob: -11.001299858093262
    9. '(
' → logprob: -11.126299858093262
    10. '40' → logprob: -11.126299858093262

Token 11: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002769336337223649
    2. ')' → logprob: -6.502769470214844
    3. '('' → logprob: -7.502769470214844
    4. '()' → logprob: -8.252769470214844
    5. '("("' → logprob: -8.377769470214844
    6. '(
' → logprob: -9.877769470214844
    7. '("")' → logprob: -10.377769470214844
    8. '[' → logprob: -10.627769470214844
    9. '(""))' → logprob: -11.002769470214844
    10. ''' → logprob: -11.002769470214844

Token 12: 'chaine' (ID: 68916)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7615155577659607
    2. '+' → logprob: -1.3865156173706055
    3. '#' → logprob: -2.8865156173706055
    4. '[' → logprob: -3.2615156173706055
    5. '\' → logprob: -3.5115156173706055
    6. ' ' → logprob: -3.6365156173706055
    7. 'nombre' → logprob: -3.8865156173706055
    8. ')' → logprob: -4.0115156173706055
    9. '(' → logprob: -4.3865156173706055
    10. 'for' → logprob: -4.6365156173706055

Token 13: '_a' (ID: 10852)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007283978629857302
    2. '_' → logprob: -8.250728607177734
    3. '.' → logprob: -8.750728607177734
    4. '[:]' → logprob: -9.250728607177734
    5. '[...]' → logprob: -10.375728607177734
    6. '[n' → logprob: -10.625728607177734
    7. '[]' → logprob: -10.750728607177734
    8. '[a' → logprob: -11.125728607177734
    9. '[len' → logprob: -11.500728607177734
    10. 's' → logprob: -11.625728607177734

Token 14: '_ch' (ID: 8914)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.004298134241253138
    2. '_d' → logprob: -6.254298210144043
    3. '_decoder' → logprob: -6.254298210144043
    4. '_dec' → logprob: -8.129298210144043
    5. '_' → logprob: -9.004298210144043
    6. '_offset' → logprob: -12.004298210144043
    7. 'de' → logprob: -12.629298210144043
    8. '_decode' → logprob: -13.129298210144043
    9. '_shift' → logprob: -13.129298210144043
    10. '_tr' → logprob: -13.629298210144043

Token 15: 'if' (ID: 366)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4713667333126068
    2. 'if' → logprob: -1.3463667631149292
    3. 'ec' → logprob: -2.5963666439056396
    4. 'a' → logprob: -4.596366882324219
    5. 'iffer' → logprob: -5.221366882324219
    6. 'i' → logprob: -5.346366882324219
    7. 'ef' → logprob: -5.471366882324219
    8. 'ercer' → logprob: -5.971366882324219
    9. 'ifer' → logprob: -6.096366882324219
    10. 'o' → logprob: -6.346366882324219

Token 16: 'fr' (ID: 1739)
  Prédit: 'rer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rer' → logprob: -0.00042447797022759914
    2. 'er' → logprob: -7.875424385070801
    3. 'r' → logprob: -10.6254243850708
    4. 're' → logprob: -11.6254243850708
    5. ' rer' → logprob: -11.7504243850708
    6. '```' → logprob: -14.1254243850708
    7. '_r' → logprob: -14.6254243850708
    8. 'fr' → logprob: -15.1254243850708
    9. 'erer' → logprob: -15.1254243850708
    10. '{"' → logprob: -15.6254243850708

Token 17: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -5.288163083605468e-05
    2. 'e' → logprob: -9.875052452087402
    3. '```' → logprob: -14.000052452087402
    4. ' er' → logprob: -16.50005340576172
    5. '=' → logprob: -16.62505340576172
    6. '   ' → logprob: -16.87505340576172
    7. 'erer' → logprob: -16.87505340576172
    8. '[' → logprob: -17.00005340576172
    9. '{}' → logprob: -17.50005340576172
    10. 'eer' → logprob: -17.50005340576172

Token 18: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007332229521125555
    2. '[:]' → logprob: -6.5073323249816895
    3. '<|end|>' → logprob: -6.5073323249816895
    4. '.lower' → logprob: -7.0073323249816895
    5. '.' → logprob: -7.0073323249816895
    6. '+' → logprob: -7.3823323249816895
    7. '.replace' → logprob: -8.382331848144531
    8. '.upper' → logprob: -8.507331848144531
    9. '.capitalize' → logprob: -8.507331848144531
    10. '[
' → logprob: -8.507331848144531

Token 19: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2258773297071457
    2. 'input' → logprob: -1.600877285003662
    3. '""' → logprob: -8.72587776184082
    4. ' ""' → logprob: -9.22587776184082
    5. ' ' → logprob: -9.97587776184082
    6. ' "' → logprob: -10.22587776184082
    7. 'str' → logprob: -10.72587776184082
    8. '	input' → logprob: -10.85087776184082
    9. '"' → logprob: -10.97587776184082
    10. ' str' → logprob: -11.10087776184082

Token 20: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00047869363334029913
    2. '('' → logprob: -8.250478744506836
    3. '()' → logprob: -10.000478744506836
    4. '("("' → logprob: -10.000478744506836
    5. '(
' → logprob: -10.500478744506836
    6. ' (' → logprob: -10.750478744506836
    7. ')' → logprob: -11.000478744506836
    8. ''' → logprob: -11.000478744506836
    9. '.' → logprob: -11.250478744506836
    10. '```' → logprob: -11.500478744506836

Token 21: 'alphabet' (ID: 198460)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2812115550041199
    2. '
' → logprob: -3.1562116146087646
    3. 'def' → logprob: -3.2812116146087646
    4. 'for' → logprob: -3.6562116146087646
    5. '\n' → logprob: -4.0312113761901855
    6. 'chaine' → logprob: -4.0312113761901855
    7. '```' → logprob: -4.0312113761901855
    8. '\' → logprob: -4.4062113761901855
    9. '' → logprob: -4.6562113761901855
    10. '#' → logprob: -5.2812113761901855

Token 22: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07109324634075165
    2. '_' → logprob: -2.9460933208465576
    3. '=' → logprob: -4.3210930824279785
    4. '.' → logprob: -6.5710930824279785
    5. '[:]' → logprob: -7.3210930824279785
    6. '[' → logprob: -7.5710930824279785
    7. ' ' → logprob: -10.446093559265137
    8. '_space' → logprob: -10.696093559265137
    9. '[]' → logprob: -10.946093559265137
    10. 'es' → logprob: -11.196093559265137

Token 23: 'maj' (ID: 57674)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4148443937301636
    2. ' =' → logprob: -1.5398443937301636
    3. 'fr' → logprob: -1.5398443937301636
    4. 'de' → logprob: -2.539844512939453
    5. 'string' → logprob: -2.789844512939453
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -3.039844512939453
    7. 'min' → logprob: -3.289844512939453
    8. 'com' → logprob: -3.414844512939453
    9. 'base' → logprob: -3.789844512939453
    10. '```' → logprob: -4.414844512939453

Token 24: 'usc' (ID: 30081)
  Prédit: 'usc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usc' → logprob: -0.2599797248840332
    2. 'us' → logprob: -2.259979724884033
    3. ' =' → logprob: -2.884979724884033
    4. '=' → logprob: -3.009979724884033
    5. '```' → logprob: -4.384979724884033
    6. '   ' → logprob: -5.759979724884033
    7. '="' → logprob: -7.509979724884033
    8. 'u' → logprob: -7.884979724884033
    9. '>' → logprob: -8.134979248046875
    10. '_us' → logprob: -8.259979248046875

Token 25: 'ule' (ID: 1601)
  Prédit: 'ules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ules' → logprob: -0.031571805477142334
    2. 'ales' → logprob: -3.656571865081787
    3. 'ule' → logprob: -5.406571865081787
    4. 'cules' → logprob: -7.906571865081787
    5. '=' → logprob: -9.281571388244629
    6. '```' → logprob: -9.531571388244629
    7. 'ale' → logprob: -10.656571388244629
    8. 'p' → logprob: -10.656571388244629
    9. 'u' → logprob: -10.781571388244629
    10. ' =' → logprob: -11.031571388244629

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5571937561035156
    2. '[' → logprob: -1.9321937561035156
    3. '=' → logprob: -2.1821937561035156
    4. '.' → logprob: -2.5571937561035156
    5. '[:]' → logprob: -3.5571937561035156
    6. '.upper' → logprob: -3.8071937561035156
    7. '_' → logprob: -3.8071937561035156
    8. 'e' → logprob: -5.432193756103516
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -6.057193756103516
    10. '[]' → logprob: -6.057193756103516

Token 27: ' [' (ID: 723)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.14345107972621918
    2. '"' → logprob: -2.018450975418091
    3. ' '' → logprob: -7.76845121383667
    4. ''' → logprob: -8.018450736999512
    5. '"A' → logprob: -11.393450736999512
    6. ' ' → logprob: -12.518450736999512
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -13.143450736999512
    8. ' [' → logprob: -13.893450736999512
    9. '[' → logprob: -14.143450736999512
    10. ' ' → logprob: -14.143450736999512

Token 28: 'chr' (ID: 33902)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.1088675707578659
    2. ''' → logprob: -2.358867645263672
    3. '"A' → logprob: -5.983867645263672
    4. ' '' → logprob: -6.108867645263672
    5. ''C' → logprob: -6.233867645263672
    6. '"' → logprob: -6.608867645263672
    7. ''M' → logprob: -9.608867645263672
    8. 'chr' → logprob: -9.733867645263672
    9. ''L' → logprob: -9.858867645263672
    10. ''T' → logprob: -9.983867645263672

Token 29: '(ord' (ID: 199585)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008759701740927994
    2. '(i' → logprob: -7.750875949859619
    3. '(ord' → logprob: -7.750875949859619
    4. '(x' → logprob: -11.250876426696777
    5. '(o' → logprob: -14.375876426696777
    6. '(range' → logprob: -14.750876426696777
    7. '(a' → logprob: -15.375876426696777
    8. '()' → logprob: -15.500876426696777
    9. '(
' → logprob: -16.62587547302246
    10. '65' → logprob: -16.75087547302246

Token 30: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001073419232852757
    2. '(' → logprob: -7.001073360443115
    3. '("' → logprob: -8.751073837280273
    4. 'A' → logprob: -14.001073837280273
    5. '(a' → logprob: -14.251073837280273
    6. '(A' → logprob: -14.626073837280273
    7. '(
' → logprob: -14.876073837280273
    8. ''A' → logprob: -15.376073837280273
    9. 'a' → logprob: -15.501073837280273
    10. '()' → logprob: -15.751073837280273

Token 31: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.318681188422488e-05
    2. ''A' → logprob: -11.25001335144043
    3. 'А' → logprob: -16.75001335144043
    4. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -16.87501335144043
    5. 'a' → logprob: -17.00001335144043
    6. '_A' → logprob: -17.25001335144043
    7. '65' → logprob: -17.37501335144043
    8. ' A' → logprob: -18.25001335144043
    9. ''' → logprob: -18.75001335144043
    10. 'Α' → logprob: -19.25001335144043

Token 32: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00976199097931385
    2. '')' → logprob: -4.759761810302734
    3. ')+' → logprob: -8.259761810302734
    4. 'A' → logprob: -8.384761810302734
    5. ''),' → logprob: -8.759761810302734
    6. '),' → logprob: -8.759761810302734
    7. '+' → logprob: -9.634761810302734
    8. ''))' → logprob: -9.759761810302734
    9. '))' → logprob: -9.884761810302734
    10. ''A' → logprob: -10.134761810302734

Token 33: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012054177932441235
    2. '+' → logprob: -4.637053966522217
    3. ' +' → logprob: -6.637053966522217
    4. ' )' → logprob: -7.762053966522217
    5. '),' → logprob: -7.887053966522217
    6. '+i' → logprob: -9.012054443359375
    7. '+)' → logprob: -11.137054443359375
    8. ')]' → logprob: -11.137054443359375
    9. ' ' → logprob: -12.012054443359375
    10. ',' → logprob: -12.262054443359375

Token 34: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1002875491976738
    2. ' i' → logprob: -2.350287437438965
    3. ' ' → logprob: -10.225287437438965
    4. 'x' → logprob: -11.100287437438965
    5. ' )' → logprob: -11.600287437438965
    6. ')' → logprob: -12.100287437438965
    7. '	i' → logprob: -13.100287437438965
    8. ')i' → logprob: -13.225287437438965
    9. 'j' → logprob: -13.475287437438965
    10. ' x' → logprob: -13.725287437438965

Token 35: '_le' (ID: 27121)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000528606993611902
    2. ')]' → logprob: -8.125528335571289
    3. ' )' → logprob: -8.375528335571289
    4. ']' → logprob: -14.125528335571289
    5. ' ' → logprob: -14.500528335571289
    6. ' for' → logprob: -15.250528335571289
    7. ')])' → logprob: -15.625528335571289
    8. ')
' → logprob: -16.62552833557129
    9. '))' → logprob: -16.87552833557129
    10. '),' → logprob: -17.25052833557129

Token 36: 'tt' (ID: 1037)
  Prédit: 'tt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.3679710924625397
    2. 't' → logprob: -1.4929710626602173
    3. 'tter' → logprob: -2.492971181869507
    4. 'tr' → logprob: -8.617971420288086
    5. '```' → logprob: -9.367971420288086
    6. 'tte' → logprob: -9.492971420288086
    7. 'r' → logprob: -10.242971420288086
    8. 'n' → logprob: -10.867971420288086
    9. 'tra' → logprob: -10.992971420288086
    10. ']' → logprob: -11.117971420288086

Token 37: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0008025993593037128
    2. 'ure' → logprob: -7.500802516937256
    3. 'e' → logprob: -9.375802993774414
    4. 'ra' → logprob: -9.500802993774414
    5. 'reau' → logprob: -10.500802993774414
    6. 'r' → logprob: -10.625802993774414
    7. 'a' → logprob: -10.875802993774414
    8. 'u' → logprob: -11.750802993774414
    9. 'uvre' → logprob: -13.000802993774414
    10. 'er' → logprob: -13.000802993774414

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.190178904333152e-05
    2. ' )' → logprob: -10.625031471252441
    3. ')]' → logprob: -12.250031471252441
    4. ' for' → logprob: -13.500031471252441
    5. ' ' → logprob: -14.750031471252441
    6. ']' → logprob: -15.125031471252441
    7. '%' → logprob: -16.000032424926758
    8. 'for' → logprob: -16.375032424926758
    9. '+' → logprob: -16.500032424926758
    10. '')' → logprob: -16.750032424926758

Token 39: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.002871207892894745
    2. 'for' → logprob: -5.877871036529541
    3. ']' → logprob: -10.5028715133667
    4. ' ' → logprob: -10.5028715133667
    5. ')' → logprob: -11.8778715133667
    6. '	for' → logprob: -12.8778715133667
    7. ' ]' → logprob: -14.1278715133667
    8. '%' → logprob: -15.1278715133667
    9. ' in' → logprob: -15.2528715133667
    10. '<|end|>' → logprob: -15.3778715133667

Token 40: ' index' (ID: 3472)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25289157032966614
    2. ' index' → logprob: -1.5028915405273438
    3. 'range' → logprob: -7.627891540527344
    4. ' ' → logprob: -8.377891540527344
    5. 'index' → logprob: -8.502891540527344
    6. ' ' → logprob: -11.502891540527344
    7. ' _' → logprob: -11.627891540527344
    8. '	range' → logprob: -11.877891540527344
    9. ' gamme' → logprob: -12.252891540527344
    10. '	index' → logprob: -13.002891540527344

Token 41: '_le' (ID: 27121)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6771203875541687
    2. '_le' → logprob: -0.9271203875541687
    3. '_' → logprob: -2.4271204471588135
    4. '_in' → logprob: -5.552120208740234
    5. '_en' → logprob: -6.427120208740234
    6. 'in' → logprob: -6.552120208740234
    7. '_de' → logprob: -7.802120208740234
    8. ' ' → logprob: -8.302120208740234
    9. '_d' → logprob: -9.052120208740234
    10. ' _' → logprob: -10.677120208740234

Token 42: 'tt' (ID: 1037)
  Prédit: 'tt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.02653958462178707
    2. 'tre' → logprob: -3.6515395641326904
    3. '```' → logprob: -9.77653980255127
    4. '_t' → logprob: -10.15153980255127
    5. '_' → logprob: -10.40153980255127
    6. 't' → logprob: -11.02653980255127
    7. 'tra' → logprob: -11.15153980255127
    8. '__' → logprob: -11.90153980255127
    9. 'tte' → logprob: -12.02653980255127
    10. 'ltre' → logprob: -12.27653980255127

Token 43: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.1994775377388578e-05
    2. 'e' → logprob: -12.250012397766113
    3. 'ere' → logprob: -12.250012397766113
    4. '_re' → logprob: -13.500012397766113
    5. '	re' → logprob: -15.625012397766113
    6. '(re' → logprob: -16.125011444091797
    7. 'rev' → logprob: -16.375011444091797
    8. ' re' → logprob: -16.625011444091797
    9. 'repr' → logprob: -16.875011444091797
    10. 'Re' → logprob: -17.125011444091797

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002813313389196992
    2. 'in' → logprob: -5.877813339233398
    3. ' ' → logprob: -11.877813339233398
    4. '<|end|>' → logprob: -14.252813339233398
    5. 'range' → logprob: -14.502813339233398
    6. 'import' → logprob: -17.0028133392334
    7. ')' → logprob: -17.1278133392334
    8. '	in' → logprob: -17.3778133392334
    9. ' range' → logprob: -17.7528133392334
    10. 'In' → logprob: -18.0028133392334

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00020354038861114532
    2. 'range' → logprob: -8.500203132629395
    3. '	range' → logprob: -17.62520408630371
    4. ' rang' → logprob: -18.37520408630371
    5. '(range' → logprob: -18.50020408630371
    6. ' xrange' → logprob: -18.75020408630371
    7. ' ' → logprob: -19.12520408630371
    8. ' rango' → logprob: -19.62520408630371
    9. ' gamme' → logprob: -20.87520408630371
    10. '_range' → logprob: -21.37520408630371

Token 46: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '26' → logprob: -14.375000953674316
    3. ' (' → logprob: -15.375000953674316
    4. '(ord' → logprob: -17.25
    5. '(
' → logprob: -17.875
    6. '(len' → logprob: -18.5
    7. '25' → logprob: -20.75
    8. '((' → logprob: -22.125
    9. '27' → logprob: -22.5
    10. '28' → logprob: -22.625

Token 47: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '27' → logprob: -16.250001907348633
    4. '2' → logprob: -17.875001907348633
    5. '25' → logprob: -18.875001907348633
    6. ')' → logprob: -20.000001907348633
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -20.750001907348633
    8. '24' → logprob: -20.875001907348633
    9. '23' → logprob: -21.250001907348633
    10. '   ' → logprob: -21.500001907348633

Token 48: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.56233171664644e-05
    2. ')' → logprob: -10.250055313110352
    3. ']' → logprob: -11.000055313110352
    4. ' )' → logprob: -13.750055313110352
    5. ')])' → logprob: -13.750055313110352
    6. '])]' → logprob: -14.375055313110352
    7. ')],' → logprob: -15.000055313110352
    8. '')]' → logprob: -15.750055313110352
    9. '])' → logprob: -15.875055313110352
    10. ' ]' → logprob: -16.62505531311035

Token 49: 'chaine' (ID: 68916)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6983433365821838
    2. 'chaine' → logprob: -0.8233433365821838
    3. 'alphabet' → logprob: -3.448343276977539
    4. 'nou' → logprob: -4.323343276977539
    5. 'ch' → logprob: -5.573343276977539
    6. 'texte' → logprob: -5.823343276977539
    7. 'decoded' → logprob: -5.948343276977539
    8. 'res' → logprob: -6.073343276977539
    9. 'def' → logprob: -6.573343276977539
    10. '```' → logprob: -7.198343276977539

Token 50: '_ch' (ID: 8914)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.029971590265631676
    2. '_' → logprob: -3.5299715995788574
    3. '_ch' → logprob: -9.6549711227417
    4. 'a' → logprob: -10.1549711227417
    5. '_=' → logprob: -10.1549711227417
    6. '_de' → logprob: -10.6549711227417
    7. '_to' → logprob: -11.9049711227417
    8. '_encoded' → logprob: -12.1549711227417
    9. '_final' → logprob: -12.5299711227417
    10. '_s' → logprob: -12.9049711227417

Token 51: 'iff' (ID: 4443)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10354594886302948
    2. 'iff' → logprob: -2.728545904159546
    3. '_' → logprob: -3.728545904159546
    4. 'iffe' → logprob: -5.978546142578125
    5. '   ' → logprob: -7.103546142578125
    6. 'iffer' → logprob: -7.603546142578125
    7. 'a' → logprob: -7.728546142578125
    8. '1' → logprob: -7.728546142578125
    9. 'ifre' → logprob: -7.728546142578125
    10. 'ifie' → logprob: -7.853546142578125

Token 52: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.21289648115634918
    2. 'er' → logprob: -1.837896466255188
    3. 're' → logprob: -3.7128965854644775
    4. 'rée' → logprob: -5.462896347045898
    5. 'r' → logprob: -6.587896347045898
    6. 'rer' → logprob: -6.712896347045898
    7. 'eree' → logprob: -7.087896347045898
    8. '_' → logprob: -9.712896347045898
    9. 'rement' → logprob: -9.837896347045898
    10. 'e' → logprob: -9.962896347045898

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00393924443051219
    2. '=' → logprob: -5.753939151763916
    3. '_' → logprob: -7.628939151763916
    4. '=[]' → logprob: -8.753939628601074
    5. ' +=' → logprob: -9.628939628601074
    6. '[:]' → logprob: -11.128939628601074
    7. 's' → logprob: -11.878939628601074
    8. ' =[' → logprob: -12.003939628601074
    9. ' ' → logprob: -13.003939628601074
    10. '<|end|>' → logprob: -13.128939628601074

Token 54: ' []

' (ID: 32833)
  Prédit: ' ""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ""' → logprob: -0.39152663946151733
    2. '""' → logprob: -1.766526699066162
    3. ' []' → logprob: -3.016526699066162
    4. ' ''' → logprob: -3.266526699066162
    5. '"' → logprob: -3.391526699066162
    6. ' "' → logprob: -4.391526699066162
    7. ''' → logprob: -4.516526699066162
    8. '''' → logprob: -5.391526699066162
    9. '[]' → logprob: -6.016526699066162
    10. ' ' → logprob: -6.516526699066162

Token 55: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.137130498653278e-05
    2. ' for' → logprob: -9.500081062316895
    3. 'f' → logprob: -12.375081062316895
    4. 'i' → logprob: -13.875081062316895
    5. '```' → logprob: -15.000081062316895
    6. '#' → logprob: -15.375081062316895
    7. '
' → logprob: -16.25008201599121
    8. 'n' → logprob: -16.25008201599121
    9. '\' → logprob: -16.25008201599121
    10. '' → logprob: -16.37508201599121

Token 56: ' caract' (ID: 36343)
  Prédit: ' caract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caract' → logprob: -0.6321723461151123
    2. ' lettre' → logprob: -1.0071723461151123
    3. ' index' → logprob: -2.6321723461151123
    4. ' ' → logprob: -3.8821723461151123
    5. ' caractère' → logprob: -6.007172584533691
    6. ' i' → logprob: -6.382172584533691
    7. ' c' → logprob: -6.507172584533691
    8. ' _' → logprob: -6.632172584533691
    9. ' espace' → logprob: -7.257172584533691
    10. ' char' → logprob: -7.507172584533691

Token 57: 'ere' (ID: 512)
  Prédit: 'ère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.8030811548233032
    2. 'er' → logprob: -1.0530811548233032
    3. 'ere' → logprob: -1.6780811548233032
    4. 're' → logprob: -4.303081035614014
    5. 'e' → logprob: -6.553081035614014
    6. 'èr' → logprob: -7.678081035614014
    7. 'è' → logprob: -7.928081035614014
    8. 'ére' → logprob: -8.178081512451172
    9. '_' → logprob: -9.553081512451172
    10. '`' → logprob: -10.178081512451172

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005309415981173515
    2. ' ' → logprob: -5.505309581756592
    3. 'in' → logprob: -6.755309581756592
    4. '_' → logprob: -11.005309104919434
    5. '  ' → logprob: -11.130309104919434
    6. 's' → logprob: -11.630309104919434
    7. '_in' → logprob: -12.130309104919434
    8. '	in' → logprob: -12.380309104919434
    9. '<|end|>' → logprob: -12.880309104919434
    10. ' ,' → logprob: -13.005309104919434

Token 59: ' chaine' (ID: 192094)
  Prédit: ' chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaine' → logprob: -0.03815533220767975
    2. 'chaine' → logprob: -3.2881553173065186
    3. ' ' → logprob: -9.538155555725098
    4. ' chaîne' → logprob: -10.288155555725098
    5. ' ' → logprob: -13.288155555725098
    6. '   ' → logprob: -13.538155555725098
    7. '  ' → logprob: -13.538155555725098
    8. ' chain' → logprob: -14.413155555725098
    9. ' range' → logprob: -15.038155555725098
    10. ' espace' → logprob: -15.038155555725098

Token 60: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00018041854491457343
    2. '_' → logprob: -8.6251802444458
    3. '_:' → logprob: -14.6251802444458
    4. ' _' → logprob: -15.8751802444458
    5. 'a' → logprob: -16.500181198120117
    6. '_=' → logprob: -16.750181198120117
    7. '_ch' → logprob: -17.000181198120117
    8. '__' → logprob: -17.000181198120117
    9. '_\' → logprob: -18.250181198120117
    10. '_d' → logprob: -18.375181198120117

Token 61: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -0.0002895834331866354
    2. 'ch' → logprob: -8.250289916992188
    3. 'chr' → logprob: -11.500289916992188
    4. '_' → logprob: -11.625289916992188
    5. '_chr' → logprob: -12.625289916992188
    6. '_char' → logprob: -12.750289916992188
    7. '_f' → logprob: -14.250289916992188
    8. '_car' → logprob: -15.125289916992188
    9. 'a' → logprob: -15.250289916992188
    10. '	ch' → logprob: -15.500289916992188

Token 62: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.034117478877305984
    2. 'iffer' → logprob: -3.5341174602508545
    3. 'ifr' → logprob: -6.159117698669434
    4. 'ifer' → logprob: -6.409117698669434
    5. 'ifre' → logprob: -8.659117698669434
    6. 'iff' → logprob: -9.409117698669434
    7. 'i' → logprob: -9.534117698669434
    8. 'ifra' → logprob: -9.909117698669434
    9. 'ifier' → logprob: -10.159117698669434
    10. 'ifter' → logprob: -10.159117698669434

Token 63: 'fr' (ID: 1739)
  Prédit: 'rer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rer' → logprob: -0.0005462417611852288
    2. 'r' → logprob: -8.2505464553833
    3. 'cr' → logprob: -8.8755464553833
    4. 'er' → logprob: -9.8755464553833
    5. 're' → logprob: -10.1255464553833
    6. 'fr' → logprob: -10.7505464553833
    7. ' rer' → logprob: -11.8755464553833
    8. 'errer' → logprob: -11.8755464553833
    9. 'erer' → logprob: -11.8755464553833
    10. '_r' → logprob: -13.0005464553833

Token 64: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0006357124075293541
    2. 'e' → logprob: -7.375635623931885
    3. '```' → logprob: -12.625636100769043
    4. 'eer' → logprob: -13.375636100769043
    5. '   ' → logprob: -14.500636100769043
    6. ' er' → logprob: -15.125636100769043
    7. 'é' → logprob: -15.375636100769043
    8. 'erer' → logprob: -15.500636100769043
    9. 'rer' → logprob: -15.750636100769043
    10. 'erc' → logprob: -15.750636100769043

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20144617557525635
    2. ' :' → logprob: -1.7014461755752563
    3. ' :
' → logprob: -11.701446533203125
    4. ':**' → logprob: -11.826446533203125
    5. ':
' → logprob: -12.576446533203125
    6. '<|end|>' → logprob: -12.826446533203125
    7. ' ' → logprob: -12.951446533203125
    8. ' ,' → logprob: -13.576446533203125
    9. '):' → logprob: -13.576446533203125
    10. ',' → logprob: -13.826446533203125

Token 66: '    
' (ID: 1944)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005529593210667372
    2. ' if' → logprob: -5.880529403686523
    3. '   ' → logprob: -7.130529403686523
    4. '<|end|>' → logprob: -7.255529403686523
    5. 'if' → logprob: -8.255529403686523
    6. '    ' → logprob: -8.380529403686523
    7. ' 
' → logprob: -9.130529403686523
    8. ''s' → logprob: -9.380529403686523
    9. '_' → logprob: -9.630529403686523
    10. ' caract' → logprob: -9.880529403686523

Token 67: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3877483308315277
    2. 'if' → logprob: -1.13774836063385
    3. '   ' → logprob: -7.6377482414245605
    4. '    ' → logprob: -8.637748718261719
    5. ' ' → logprob: -9.762748718261719
    6. 'indice' → logprob: -10.512748718261719
    7. '```' → logprob: -10.887748718261719
    8. 'index' → logprob: -11.137748718261719
    9. '#' → logprob: -11.262748718261719
    10. 'space' → logprob: -11.387748718261719

Token 68: ' code' (ID: 3490)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08921360224485397
    2. ' if' → logprob: -2.4642136096954346
    3. '   ' → logprob: -9.714213371276855
    4. ' ' → logprob: -9.839213371276855
    5. 'indice' → logprob: -10.214213371276855
    6. '    ' → logprob: -10.464213371276855
    7. '#' → logprob: -10.839213371276855
    8. 'index' → logprob: -10.964213371276855
    9. 'chaine' → logprob: -11.464213371276855
    10. 's' → logprob: -11.839213371276855

Token 69: '_ascii' (ID: 125321)
  Prédit: '_ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ord' → logprob: -1.0362210273742676
    2. '_' → logprob: -1.2862210273742676
    3. '_ascii' → logprob: -1.9112210273742676
    4. ' =' → logprob: -2.7862210273742676
    5. '_val' → logprob: -3.6612210273742676
    6. '_de' → logprob: -3.9112210273742676
    7. '_index' → logprob: -4.036221027374268
    8. '_unicode' → logprob: -4.036221027374268
    9. '_ind' → logprob: -4.161221027374268
    10. 'ascii' → logprob: -4.286221027374268

Token 70: '_de' (ID: 5047)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12618747353553772
    2. '=' → logprob: -2.751187562942505
    3. '_car' → logprob: -3.626187562942505
    4. '_' → logprob: -3.751187562942505
    5. '_char' → logprob: -7.126187324523926
    6. '_=' → logprob: -7.126187324523926
    7. '_de' → logprob: -7.501187324523926
    8. 'car' → logprob: -7.501187324523926
    9. ' ' → logprob: -7.501187324523926
    10. '_c' → logprob: -7.751187324523926

Token 71: 'cale' (ID: 12730)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0017469348385930061
    2. 'l' → logprob: -7.251747131347656
    3. ' caract' → logprob: -7.376747131347656
    4. '_car' → logprob: -8.626747131347656
    5. ' car' → logprob: -9.126747131347656
    6. 'le' → logprob: -10.001747131347656
    7. ' caractère' → logprob: -10.501747131347656
    8. 'la' → logprob: -11.751747131347656
    9. 'c' → logprob: -11.876747131347656
    10. ' l' → logprob: -11.876747131347656

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039032526314258575
    2. '=' → logprob: -3.289032459259033
    3. 'd' → logprob: -8.414032936096191
    4. '_' → logprob: -8.414032936096191
    5. 'e' → logprob: -8.789032936096191
    6. ' ' → logprob: -9.164032936096191
    7. '   ' → logprob: -9.539032936096191
    8. '_car' → logprob: -9.664032936096191
    9. '	' → logprob: -9.789032936096191
    10. '  ' → logprob: -10.664032936096191

Token 73: ' (' (ID: 350)
  Prédit: ' ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.5986417531967163
    2. 'ord' → logprob: -0.8486417531967163
    3. '(ord' → logprob: -3.848641872406006
    4. ' (' → logprob: -8.223641395568848
    5. ' code' → logprob: -8.348641395568848
    6. 'chr' → logprob: -8.348641395568848
    7. 'code' → logprob: -8.848641395568848
    8. '(' → logprob: -9.348641395568848
    9. ' ' → logprob: -9.973641395568848
    10. ' chr' → logprob: -10.348641395568848

Token 74: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.07173499464988708
    2. 'alphabet' → logprob: -2.69673490524292
    3. '(ord' → logprob: -6.57173490524292
    4. ' ord' → logprob: -8.696735382080078
    5. 'ordre' → logprob: -8.946735382080078
    6. 'ascii' → logprob: -10.446735382080078
    7. ' alphabet' → logprob: -10.571735382080078
    8. 'ordinal' → logprob: -11.571735382080078
    9. '(al' → logprob: -12.196735382080078
    10. 'alph' → logprob: -12.196735382080078

Token 75: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -6.153795766294934e-06
    2. 'car' → logprob: -12.250005722045898
    3. '(' → logprob: -14.000005722045898
    4. '(char' → logprob: -15.000005722045898
    5. '(character' → logprob: -15.625005722045898
    6. '	car' → logprob: -17.2500057220459
    7. '(c' → logprob: -17.8750057220459
    8. '(cal' → logprob: -18.3750057220459
    9. '('' → logprob: -18.5000057220459
    10. ' (' → logprob: -18.6250057220459

Token 76: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.0007474447484128177
    2. 'at' → logprob: -7.6257476806640625
    3. 'ere' → logprob: -9.375747680664062
    4. 'ac' → logprob: -9.750747680664062
    5. 'cat' → logprob: -10.500747680664062
    6. 'ct' → logprob: -10.750747680664062
    7. 'et' → logprob: -11.125747680664062
    8. '   ' → logprob: -11.250747680664062
    9. 'tere' → logprob: -12.375747680664062
    10. '_act' → logprob: -12.500747680664062

Token 77: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -5.204720582696609e-05
    2. 're' → logprob: -10.125052452087402
    3. 'e' → logprob: -11.625052452087402
    4. '   ' → logprob: -13.375052452087402
    5. '_re' → logprob: -15.000052452087402
    6. 'ère' → logprob: -15.000052452087402
    7. '```' → logprob: -15.500052452087402
    8. 'tere' → logprob: -15.750052452087402
    9. 'er' → logprob: -16.250051498413086
    10. ')' → logprob: -16.625051498413086

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013027378590777516
    2. ' )' → logprob: -7.251302719116211
    3. '-' → logprob: -8.126302719116211
    4. ' -' → logprob: -8.251302719116211
    5. ')-' → logprob: -11.001302719116211
    6. ')+' → logprob: -11.751302719116211
    7. '-)' → logprob: -12.251302719116211
    8. '))' → logprob: -13.001302719116211
    9. '+' → logprob: -13.751302719116211
    10. ' ' → logprob: -14.376302719116211

Token 79: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7810800075531006
    2. ' -' → logprob: -0.9060800075531006
    3. '+' → logprob: -2.0310800075531006
    4. '-' → logprob: -5.40608024597168
    5. ')' → logprob: -6.78108024597168
    6. ' ' → logprob: -7.15608024597168
    7. ' )' → logprob: -8.15608024597168
    8. ' plus' → logprob: -10.15608024597168
    9. '   ' → logprob: -11.15608024597168
    10. ')+' → logprob: -11.15608024597168

Token 80: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.25194382667541504
    2. ' nombre' → logprob: -1.501943826675415
    3. 'nom' → logprob: -11.501943588256836
    4. ' ' → logprob: -13.001943588256836
    5. ')' → logprob: -14.251943588256836
    6. '(nombre' → logprob: -14.376943588256836
    7. '   ' → logprob: -15.751943588256836
    8. ' nom' → logprob: -15.751943588256836
    9. ' nombres' → logprob: -16.001943588256836
    10. '_nombre' → logprob: -16.126943588256836

Token 81: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -9.372294698550832e-06
    2. '_' → logprob: -11.875009536743164
    3. 'de' → logprob: -14.125009536743164
    4. '_des' → logprob: -14.375009536743164
    5. '_d' → logprob: -15.000009536743164
    6. ')' → logprob: -15.625009536743164
    7. ')_' → logprob: -15.625009536743164
    8. ' de' → logprob: -15.750009536743164
    9. '_)' → logprob: -16.750009536743164
    10. ' _' → logprob: -17.250009536743164

Token 82: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.02421732060611248
    2. '_' → logprob: -4.399217128753662
    3. 'car' → logprob: -4.524217128753662
    4. '_c' → logprob: -7.524217128753662
    5. ')_' → logprob: -10.39921760559082
    6. '_char' → logprob: -10.39921760559082
    7. '_)' → logprob: -10.52421760559082
    8. ' ' → logprob: -10.52421760559082
    9. ')' → logprob: -10.64921760559082
    10. '_character' → logprob: -10.64921760559082

Token 83: 'acter' (ID: 3344)
  Prédit: 'acter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acter' → logprob: -0.02002088539302349
    2. 'act' → logprob: -4.270020961761475
    3. 'acters' → logprob: -5.145020961761475
    4. 'ater' → logprob: -12.270020484924316
    5. 'teres' → logprob: -12.770020484924316
    6. 'es' → logprob: -13.770020484924316
    7. 'ect' → logprob: -14.020020484924316
    8. 'ac' → logprob: -14.270020484924316
    9. 'ACTER' → logprob: -15.020020484924316
    10. 'ct' → logprob: -15.020020484924316

Token 84: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.03176144137978554
    2. 't' → logprob: -3.906761407852173
    3. 'res' → logprob: -5.031761646270752
    4. 'tes' → logprob: -5.531761646270752
    5. 'ent' → logprob: -7.531761646270752
    6. 's' → logprob: -9.656761169433594
    7. 'e' → logprob: -11.031761169433594
    8. 'bres' → logprob: -11.156761169433594
    9. 'ents' → logprob: -11.781761169433594
    10. '```' → logprob: -12.156761169433594

Token 85: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0001544321421533823
    2. '_' → logprob: -9.000154495239258
    3. 'a' → logprob: -10.750154495239258
    4. ')' → logprob: -11.875154495239258
    5. '<|end|>' → logprob: -13.750154495239258
    6. ' ' → logprob: -14.750154495239258
    7. '_)' → logprob: -15.125154495239258
    8. ' _' → logprob: -16.125154495239258
    9. '_d' → logprob: -16.375154495239258
    10. ' )' → logprob: -16.875154495239258

Token 86: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.001974192215129733
    2. 'de' → logprob: -7.501974105834961
    3. '_d' → logprob: -7.626974105834961
    4. '_' → logprob: -8.376974105834961
    5. 'caler' → logprob: -8.501974105834961
    6. ' ' → logprob: -8.626974105834961
    7. ')' → logprob: -9.251974105834961
    8. ' de' → logprob: -10.001974105834961
    9. '_c' → logprob: -10.251974105834961
    10. '   ' → logprob: -10.626974105834961

Token 87: 'caler' (ID: 131227)
  Prédit: 'caler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'caler' → logprob: -0.00047082986566238105
    2. 'cal' → logprob: -7.7504706382751465
    3. 'c' → logprob: -12.000471115112305
    4. '```' → logprob: -12.250471115112305
    5. 'car' → logprob: -12.375471115112305
    6. 'placer' → logprob: -12.750471115112305
    7. 'd' → logprob: -13.000471115112305
    8. ' ' → logprob: -13.125471115112305
    9. 'ca' → logprob: -13.125471115112305
    10. '   ' → logprob: -13.500471115112305

Token 88: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03893151879310608
    2. ' )' → logprob: -3.2889316082000732
    3. ')%' → logprob: -7.788931369781494
    4. ' -' → logprob: -7.913931369781494
    5. '-' → logprob: -9.288931846618652
    6. '%' → logprob: -12.038931846618652
    7. ')`' → logprob: -12.663931846618652
    8. ' ' → logprob: -12.913931846618652
    9. ')
' → logprob: -13.788931846618652
    10. '```' → logprob: -14.038931846618652

Token 89: ' ord' (ID: 6608)
  Prédit: '65'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.5835137367248535
    2. 'ord' → logprob: -0.8335137367248535
    3. ' ord' → logprob: -5.3335137367248535
    4. ' ' → logprob: -5.9585137367248535
    5. '   ' → logprob: -9.333513259887695
    6. '  ' → logprob: -11.208513259887695
    7. '(ord' → logprob: -11.208513259887695
    8. ')' → logprob: -12.333513259887695
    9. '32' → logprob: -12.333513259887695
    10. '64' → logprob: -12.333513259887695

Token 90: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.014192184433341026
    2. '(' → logprob: -4.2641921043396
    3. ''' → logprob: -11.139192581176758
    4. '("("' → logprob: -11.764192581176758
    5. '(
' → logprob: -13.014192581176758
    6. '('(' → logprob: -13.514192581176758
    7. ' '('' → logprob: -14.764192581176758
    8. '("' → logprob: -14.764192581176758
    9. ''(' → logprob: -15.014192581176758
    10. '(

' → logprob: -15.264192581176758

Token 91: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.8624639324116288e-06
    2. ''A' → logprob: -13.250001907348633
    3. ' A' → logprob: -17.750001907348633
    4. ''' → logprob: -18.125001907348633
    5. '')' → logprob: -19.000001907348633
    6. 'a' → logprob: -19.000001907348633
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -19.625001907348633
    8. 'А' → logprob: -20.375001907348633
    9. ' ')' → logprob: -20.625001907348633
    10. '_A' → logprob: -20.875001907348633

Token 92: ''))' (ID: 7974)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3921920955181122
    2. ')' → logprob: -1.1421921253204346
    3. ''))' → logprob: -5.2671918869018555
    4. '')' → logprob: -9.017191886901855
    5. ' ))' → logprob: -11.017191886901855
    6. ')))' → logprob: -12.017191886901855
    7. ' )' → logprob: -13.017191886901855
    8. '"))' → logprob: -13.517191886901855
    9. ')
' → logprob: -15.017191886901855
    10. ')%' → logprob: -15.267191886901855

Token 93: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.012161824852228165
    2. '%' → logprob: -5.262161731719971
    3. ' ' → logprob: -5.262161731719971
    4. ')' → logprob: -6.762161731719971
    5. ' )' → logprob: -7.637161731719971
    6. ')%' → logprob: -10.012162208557129
    7. ' %)' → logprob: -10.637162208557129
    8. ' ' → logprob: -11.887162208557129
    9. '<|end|>' → logprob: -13.012162208557129
    10. '  ' → logprob: -14.012162208557129

Token 94: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '```' → logprob: -17.87537956237793
    4. '27' → logprob: -18.37537956237793
    5. '24' → logprob: -18.75037956237793
    6. '   ' → logprob: -18.87537956237793
    7. '<|end|>' → logprob: -19.12537956237793
    8. 'len' → logprob: -19.12537956237793
    9. '25' → logprob: -19.75037956237793
    10. '  ' → logprob: -19.75037956237793

Token 95: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. 'len' → logprob: -18.12500762939453
    4. '(' → logprob: -20.87500762939453
    5. '   ' → logprob: -21.12500762939453
    6. '```' → logprob: -21.12500762939453
    7. '27' → logprob: -21.25000762939453
    8. '24' → logprob: -21.50000762939453
    9. '{' → logprob: -21.75000762939453
    10. '25' → logprob: -22.25000762939453

Token 96: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07160183042287827
    2. ' +' → logprob: -2.6966018676757812
    3. '<|end|>' → logprob: -7.321601867675781
    4. '+A' → logprob: -7.696601867675781
    5. '+
' → logprob: -8.446601867675781
    6. ')' → logprob: -8.946601867675781
    7. ' +
' → logprob: -9.821601867675781
    8. '+C' → logprob: -10.196601867675781
    9. ')+' → logprob: -10.446601867675781
    10. '   ' → logprob: -10.696601867675781

Token 97: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.029799671843647957
    2. ' ord' → logprob: -3.529799699783325
    3. '65' → logprob: -10.154799461364746
    4. '   ' → logprob: -12.029799461364746
    5. '(ord' → logprob: -12.904799461364746
    6. ' ' → logprob: -14.404799461364746
    7. '```' → logprob: -15.154799461364746
    8. '  ' → logprob: -15.154799461364746
    9. 'ordinal' → logprob: -15.654799461364746
    10. 'ordre' → logprob: -16.029800415039062

Token 98: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0036032749339938164
    2. '(' → logprob: -5.628603458404541
    3. ' ('' → logprob: -13.753602981567383
    4. '("' → logprob: -14.628602981567383
    5. '(
' → logprob: -15.253602981567383
    6. '>('' → logprob: -15.253602981567383
    7. '(('' → logprob: -15.503602981567383
    8. ' (' → logprob: -15.628602981567383
    9. ''' → logprob: -16.253602981567383
    10. '(A' → logprob: -16.253602981567383

Token 99: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0011706985533237457
    2. ''A' → logprob: -6.751170635223389
    3. ''' → logprob: -15.001171112060547
    4. '')' → logprob: -16.626171112060547
    5. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -18.126171112060547
    6. 'Z' → logprob: -18.501171112060547
    7. ' A' → logprob: -19.751171112060547
    8. '’A' → logprob: -19.751171112060547
    9. '('' → logprob: -19.876171112060547
    10. 'А' → logprob: -20.001171112060547

Token 100: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.097437315271236e-05
    2. '')' → logprob: -10.25005054473877
    3. ' )' → logprob: -11.12505054473877
    4. '))' → logprob: -14.62505054473877
    5. ')`' → logprob: -15.87505054473877
    6. '`)' → logprob: -16.375051498413086
    7. ')
' → logprob: -17.250051498413086
    8. '")' → logprob: -17.375051498413086
    9. ')")' → logprob: -17.625051498413086
    10. ')))' → logprob: -17.750051498413086

Token 101: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5561686754226685
    2. 'chaine' → logprob: -1.0561686754226685
    3. ')' → logprob: -3.556168556213379
    4. '    
' → logprob: -4.056168556213379
    5. ' ' → logprob: -4.806168556213379
    6. ' caract' → logprob: -5.056168556213379
    7. '<|end|>' → logprob: -5.306168556213379
    8. 'car' → logprob: -6.056168556213379
    9. '
' → logprob: -6.306168556213379
    10. ' if' → logprob: -6.556168556213379

Token 102: '   ' (ID: 271)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.15313491225242615
    2. '   ' → logprob: -2.028134822845459
    3. ' chaine' → logprob: -4.653134822845459
    4. ' caract' → logprob: -7.903134822845459
    5. 'car' → logprob: -9.028135299682617
    6. 'chain' → logprob: -9.528135299682617
    7. '    
' → logprob: -9.528135299682617
    8. '```' → logprob: -9.903135299682617
    9. ' ' → logprob: -10.153135299682617
    10. 'c' → logprob: -10.778135299682617

Token 103: ' caract' (ID: 36343)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.0002843384863808751
    2. 'car' → logprob: -9.000284194946289
    3. ' chaine' → logprob: -9.625284194946289
    4. '   ' → logprob: -10.250284194946289
    5. 'nou' → logprob: -10.750284194946289
    6. 'if' → logprob: -11.375284194946289
    7. 'cha' → logprob: -12.000284194946289
    8. 'chain' → logprob: -12.375284194946289
    9. '```' → logprob: -12.375284194946289
    10. 'texte' → logprob: -13.000284194946289

Token 104: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -1.8670179997570813e-05
    2. 'ère' → logprob: -11.250019073486328
    3. 're' → logprob: -12.250019073486328
    4. 'e' → logprob: -15.125019073486328
    5. 'er' → logprob: -15.625019073486328
    6. '   ' → logprob: -15.875019073486328
    7. 'ére' → logprob: -16.625019073486328
    8. ' ere' → logprob: -17.000019073486328
    9. '_re' → logprob: -17.375019073486328
    10. 'ере' → logprob: -17.750019073486328

Token 105: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -0.009901167824864388
    2. '_dec' → logprob: -5.75990104675293
    3. '_de' → logprob: -6.25990104675293
    4. '_' → logprob: -6.50990104675293
    5. 'ch' → logprob: -7.00990104675293
    6. '_d' → logprob: -7.25990104675293
    7. '_cipher' → logprob: -7.50990104675293
    8. '_cod' → logprob: -8.38490104675293
    9. '=' → logprob: -8.75990104675293
    10. '_decode' → logprob: -8.88490104675293

Token 106: 'iff' (ID: 4443)
  Prédit: 'iff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iff' → logprob: -0.04101932421326637
    2. 'if' → logprob: -3.2910194396972656
    3. 'iffe' → logprob: -6.291019439697266
    4. 'aff' → logprob: -7.416019439697266
    5. 'iffer' → logprob: -9.041019439697266
    6. 'ar' → logprob: -9.416019439697266
    7. 'ifre' → logprob: -9.416019439697266
    8. 'a' → logprob: -9.541019439697266
    9. '   ' → logprob: -10.041019439697266
    10. 'eff' → logprob: -11.166019439697266

Token 107: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0007900939672254026
    2. 'ré' → logprob: -7.625790119171143
    3. 'r' → logprob: -8.500789642333984
    4. 'e' → logprob: -10.250789642333984
    5. 'ref' → logprob: -11.375789642333984
    6. '```' → logprob: -11.625789642333984
    7. 'ere' → logprob: -12.250789642333984
    8. '	' → logprob: -12.375789642333984
    9. 'rement' → logprob: -12.375789642333984
    10. '   ' → logprob: -12.750789642333984

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741774797439575
    2. '=' → logprob: -0.9741774797439575
    3. ' +=' → logprob: -10.349177360534668
    4. '+=' → logprob: -10.849177360534668
    5. '.append' → logprob: -11.099177360534668
    6. 's' → logprob: -11.349177360534668
    7. ' =
' → logprob: -11.974177360534668
    8. ' ' → logprob: -12.099177360534668
    9. '	' → logprob: -13.099177360534668
    10. '=int' → logprob: -13.474177360534668

Token 109: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.038047123700380325
    2. ' chr' → logprob: -3.2880470752716064
    3. '(chr' → logprob: -12.163046836853027
    4. '_chr' → logprob: -15.288046836853027
    5. 'char' → logprob: -16.538047790527344
    6. '```' → logprob: -17.413047790527344
    7. 'Chr' → logprob: -17.413047790527344
    8. ' ' → logprob: -17.788047790527344
    9. ' Chr' → logprob: -18.538047790527344
    10. ' ' → logprob: -18.913047790527344

Token 110: '(code' (ID: 31208)
  Prédit: '(code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(code' → logprob: -0.001703983056358993
    2. '(' → logprob: -6.376704216003418
    3. '(Code' → logprob: -14.626704216003418
    4. ' (' → logprob: -15.126704216003418
    5. '(co' → logprob: -15.126704216003418
    6. '(
' → logprob: -15.501704216003418
    7. '(c' → logprob: -15.876704216003418
    8. '(car' → logprob: -16.1267032623291
    9. '(coder' → logprob: -16.6267032623291
    10. 'code' → logprob: -16.8767032623291

Token 111: '_ascii' (ID: 125321)
  Prédit: '_ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ascii' → logprob: -0.00015991552209015936
    2. 'ascii' → logprob: -8.875160217285156
    3. '_as' → logprob: -11.250160217285156
    4. '_' → logprob: -12.375160217285156
    5. '_code' → logprob: -14.625160217285156
    6. 'Ascii' → logprob: -14.875160217285156
    7. 's' → logprob: -15.125160217285156
    8. '```' → logprob: -15.375160217285156
    9. '_unicode' → logprob: -15.375160217285156
    10. ')' → logprob: -15.500160217285156

Token 112: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.00014025058771949261
    2. 'de' → logprob: -8.875140190124512
    3. '	de' → logprob: -16.625141143798828
    4. '_code' → logprob: -16.750141143798828
    5. ' de' → logprob: -17.000141143798828
    6. ')' → logprob: -17.250141143798828
    7. 'De' → logprob: -17.375141143798828
    8. '_d' → logprob: -17.625141143798828
    9. '_' → logprob: -17.875141143798828
    10. '_)' → logprob: -18.875141143798828

Token 113: 'cale' (ID: 12730)
  Prédit: 'cale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cale' → logprob: -0.045072656124830246
    2. 'cal' → logprob: -3.170072555541992
    3. 'ale' → logprob: -7.170072555541992
    4. 'caler' → logprob: -7.295072555541992
    5. 'c' → logprob: -8.545072555541992
    6. 'ca' → logprob: -9.545072555541992
    7. 'code' → logprob: -9.920072555541992
    8. 'cade' → logprob: -10.045072555541992
    9. 'de' → logprob: -10.045072555541992
    10. 'case' → logprob: -10.420072555541992

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028505371301434934
    2. ')
' → logprob: -8.250285148620605
    3. '   ' → logprob: -10.750285148620605
    4. ' )' → logprob: -13.750285148620605
    5. ')
' → logprob: -14.250285148620605
    6. ')

' → logprob: -14.750285148620605
    7. ' ' → logprob: -15.625285148620605
    8. ')`' → logprob: -17.37528419494629
    9. ')add' → logprob: -17.75028419494629
    10. '	' → logprob: -18.25028419494629

Token 115: '    
' (ID: 1944)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.02478976361453533
    2. '   ' → logprob: -4.524789810180664
    3. ')' → logprob: -5.774789810180664
    4. '    
' → logprob: -5.899789810180664
    5. '<|end|>' → logprob: -6.024789810180664
    6. '
' → logprob: -6.149789810180664
    7. ' chaine' → logprob: -6.524789810180664
    8. ' 
' → logprob: -7.149789810180664
    9. 'chain' → logprob: -8.774789810180664
    10. '  
' → logprob: -8.774789810180664

Token 116: '   ' (ID: 271)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.004432490095496178
    2. ' chaine' → logprob: -6.004432678222656
    3. '   ' → logprob: -6.254432678222656
    4. '    
' → logprob: -11.129432678222656
    5. ' 
' → logprob: -11.754432678222656
    6. 'chain' → logprob: -12.129432678222656
    7. ' chaîne' → logprob: -13.504432678222656
    8. ' ' → logprob: -14.754432678222656
    9. ' ' → logprob: -14.754432678222656
    10. '  ' → logprob: -14.879432678222656

Token 117: ' chaine' (ID: 192094)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' (adapté à ' chaine') → logprob: -1.2664456789934775e-06
    2. '   ' → logprob: -14.375000953674316
    3. ' chaine' → logprob: -14.375000953674316
    4. 'chain' → logprob: -17.875001907348633
    5. ' ' → logprob: -18.375001907348633
    6. 'cha' → logprob: -18.750001907348633
    7. '```' → logprob: -19.875001907348633
    8. '  ' → logprob: -20.375001907348633
    9. '    
' → logprob: -20.750001907348633
    10. 'texte' → logprob: -20.875001907348633

Token 118: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -1.7954958821064793e-05
    2. '_' → logprob: -11.000018119812012
    3. '_c' → logprob: -14.125018119812012
    4. '_che' → logprob: -15.000018119812012
    5. '_char' → logprob: -16.500017166137695
    6. '_cl' → logprob: -17.000017166137695
    7. '_co' → logprob: -19.125017166137695
    8. '_chat' → logprob: -19.125017166137695
    9. '_Ch' → logprob: -19.375017166137695
    10. '_sh' → logprob: -19.500017166137695

Token 119: 'iff' (ID: 4443)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6335294246673584
    2. 'iff' → logprob: -0.7585294246673584
    3. 'iffe' → logprob: -7.6335296630859375
    4. 'iffer' → logprob: -8.633529663085938
    5. 'ifr' → logprob: -9.633529663085938
    6. 'aff' → logprob: -10.133529663085938
    7. 'ifre' → logprob: -10.133529663085938
    8. 'иф' → logprob: -10.883529663085938
    9. 'eff' → logprob: -11.008529663085938
    10. '   ' → logprob: -11.383529663085938

Token 120: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -7.421908958349377e-05
    2. 're' → logprob: -9.75007438659668
    3. 'ee' → logprob: -11.75007438659668
    4. 'eree' → logprob: -12.62507438659668
    5. 'rée' → logprob: -13.12507438659668
    6. 'ere' → logprob: -14.12507438659668
    7. 'er' → logprob: -14.62507438659668
    8. '_' → logprob: -14.75007438659668
    9. 'e' → logprob: -15.25007438659668
    10. 'r' → logprob: -15.50007438659668

Token 121: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.203409844194539e-05
    2. '.' → logprob: -10.500041961669922
    3. '.extend' → logprob: -11.375041961669922
    4. '.app' → logprob: -13.375041961669922
    5. '.Append' → logprob: -14.500041961669922
    6. 'append' → logprob: -15.000041961669922
    7. '.push' → logprob: -15.750041961669922
    8. '<|end|>' → logprob: -16.000041961669922
    9. '.setdefault' → logprob: -16.250041961669922
    10. '.add' → logprob: -16.250041961669922

Token 122: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.005248106550425291
    2. '(' → logprob: -5.255248069763184
    3. '('' → logprob: -11.880248069763184
    4. '(cal' → logprob: -13.630248069763184
    5. '("("' → logprob: -13.880248069763184
    6. '(cart' → logprob: -14.005248069763184
    7. '(c' → logprob: -14.130248069763184
    8. '(char' → logprob: -14.380248069763184
    9. '(
' → logprob: -14.505248069763184
    10. 'car' → logprob: -14.755248069763184

Token 123: 'act' (ID: 588)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.21470610797405243
    2. 'ere' → logprob: -1.7147060632705688
    3. 'tere' → logprob: -5.214705944061279
    4. 'act' → logprob: -5.464705944061279
    5. 'etre' → logprob: -6.089705944061279
    6. 'ete' → logprob: -7.214705944061279
    7. 'ect' → logprob: -8.839706420898438
    8. 'e' → logprob: -8.964706420898438
    9. 'at' → logprob: -9.589706420898438
    10. 'ет' → logprob: -10.089706420898438

Token 124: 'ere' (ID: 512)
  Prédit: 'ere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -6.749814019713085e-06
    2. 're' → logprob: -12.625006675720215
    3. 'e' → logprob: -13.000006675720215
    4. '_re' → logprob: -14.875006675720215
    5. 'er' → logprob: -15.125006675720215
    6. 'ère' → logprob: -15.250006675720215
    7. '   ' → logprob: -16.87500762939453
    8. '```' → logprob: -17.25000762939453
    9. 'ере' → logprob: -17.50000762939453
    10. 'are' → logprob: -18.25000762939453

Token 125: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -0.002009887248277664
    2. ')' → logprob: -6.877009868621826
    3. '_car' → logprob: -7.127009868621826
    4. '_)' → logprob: -9.377010345458984
    5. '_' → logprob: -9.502010345458984
    6. '_char' → logprob: -12.377010345458984
    7. '_chr' → logprob: -12.502010345458984
    8. ')_' → logprob: -13.002010345458984
    9. '_c' → logprob: -13.877010345458984
    10. ' )' → logprob: -14.002010345458984

Token 126: 'iff' (ID: 4443)
  Prédit: 'ere'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -0.12052303552627563
    2. 're' → logprob: -2.370522975921631
    3. 'fre' → logprob: -4.745522975921631
    4. 'are' → logprob: -5.495522975921631
    5. 'if' → logprob: -6.120522975921631
    6. 'iff' → logprob: -6.245522975921631
    7. 'ifre' → logprob: -7.245522975921631
    8. 'e' → logprob: -7.370522975921631
    9. '_re' → logprob: -7.620522975921631
    10. 'ff' → logprob: -8.120523452758789

Token 127: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.12698638439178467
    2. 'ere' → logprob: -2.126986503601074
    3. 'e' → logprob: -10.501986503601074
    4. 'ree' → logprob: -11.001986503601074
    5. 'er' → logprob: -12.001986503601074
    6. '_re' → logprob: -13.126986503601074
    7. 'ре' → logprob: -13.376986503601074
    8. '	re' → logprob: -13.501986503601074
    9. 'r' → logprob: -14.001986503601074
    10. '```' → logprob: -14.876986503601074

Token 128: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -16.000001907348633
    4. '))' → logprob: -16.750001907348633
    5. ')`' → logprob: -17.125001907348633
    6. ']' → logprob: -18.000001907348633
    7. '[' → logprob: -19.000001907348633
    8. '()' → logprob: -19.500001907348633
    9. '(' → logprob: -19.500001907348633
    10. ')}' → logprob: -20.000001907348633

Token 129: 'chaine' (ID: 68916)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000954098126385361
    2. 'prin' → logprob: -7.6259541511535645
    3. 'chaine' → logprob: -8.875953674316406
    4. '
' → logprob: -9.125953674316406
    5. '#' → logprob: -9.375953674316406
    6. 'p' → logprob: -10.125953674316406
    7. 'result' → logprob: -10.875953674316406
    8. 'pr' → logprob: -11.125953674316406
    9. '  
' → logprob: -11.500953674316406
    10. '```' → logprob: -11.625953674316406

Token 130: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -0.002823181450366974
    2. '_' → logprob: -5.877823352813721
    3. '_char' → logprob: -12.252822875976562
    4. '_chr' → logprob: -13.002822875976562
    5. '_che' → logprob: -13.252822875976562
    6. '_c' → logprob: -13.877822875976562
    7. '_co' → logprob: -14.002822875976562
    8. '_car' → logprob: -14.127822875976562
    9. '_final' → logprob: -14.127822875976562
    10. '_str' → logprob: -14.627822875976562

Token 131: 'iff' (ID: 4443)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3647608458995819
    2. 'iff' → logprob: -1.2397608757019043
    3. 'iffe' → logprob: -5.489760875701904
    4. 'free' → logprob: -5.614760875701904
    5. 'aff' → logprob: -5.989760875701904
    6. 'eff' → logprob: -6.739760875701904
    7. 'f' → logprob: -6.989760875701904
    8. 'ree' → logprob: -7.239760875701904
    9. 'ee' → logprob: -7.739760875701904
    10. 'ch' → logprob: -7.864760875701904

Token 132: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -9.014684110297821e-06
    2. 're' → logprob: -12.125008583068848
    3. 'ee' → logprob: -12.750008583068848
    4. 'rée' → logprob: -14.500008583068848
    5. ' ree' → logprob: -16.750009536743164
    6. 'eree' → logprob: -18.000009536743164
    7. 'ref' → logprob: -18.500009536743164
    8. 'rees' → logprob: -18.625009536743164
    9. 'uree' → logprob: -18.875009536743164
    10. 'e' → logprob: -19.000009536743164

Token 133: '_join' (ID: 69647)
  Prédit: '.join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.6087995767593384
    2. '<|end|>' → logprob: -0.8587995767593384
    3. '```' → logprob: -4.358799457550049
    4. '[:]' → logprob: -5.108799457550049
    5. '.append' → logprob: -5.983799457550049
    6. ')' → logprob: -6.108799457550049
    7. '[' → logprob: -6.358799457550049
    8. '<|end|>' → logprob: -6.733799457550049
    9. '_join' → logprob: -6.858799457550049
    10. 'join' → logprob: -7.108799457550049

Token 134: 'te' (ID: 411)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.381106972694397
    2. '()' → logprob: -1.256106972694397
    3. 'e' → logprob: -4.256106853485107
    4. 'er' → logprob: -4.506106853485107
    5. '(' → logprob: -5.756106853485107
    6. 'é' → logprob: -6.381106853485107
    7. '=' → logprob: -6.881106853485107
    8. 'ée' → logprob: -7.631106853485107
    9. '("")' → logprob: -8.631107330322266
    10. '('' → logprob: -9.381107330322266

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26522260904312134
    2. '()' → logprob: -2.1402225494384766
    3. ' =' → logprob: -2.2652225494384766
    4. '(' → logprob: -4.890222549438477
    5. '.' → logprob: -6.265222549438477
    6. '("")' → logprob: -8.015222549438477
    7. '=[]' → logprob: -8.140222549438477
    8. '=""' → logprob: -8.390222549438477
    9. '[:]' → logprob: -8.765222549438477
    10. ')' → logprob: -8.890222549438477

Token 136: ' "".' (ID: 94734)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018528224900364876
    2. '""' → logprob: -4.768528461456299
    3. '''.' → logprob: -4.768528461456299
    4. '''' → logprob: -7.268528461456299
    5. ' "".' → logprob: -7.643528461456299
    6. ' ''.' → logprob: -8.76852798461914
    7. ''' → logprob: -10.26852798461914
    8. '''
' → logprob: -13.14352798461914
    9. '"",' → logprob: -13.26852798461914
    10. ' ""' → logprob: -14.14352798461914

Token 137: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -7.896309739408025e-07
    2. 'jo' → logprob: -14.250000953674316
    3. ' join' → logprob: -16.5
    4. 'j' → logprob: -17.625
    5. '```' → logprob: -20.25
    6. '(join' → logprob: -20.375
    7. '.join' → logprob: -20.5
    8. 'joint' → logprob: -21.375
    9. 'Join' → logprob: -21.625
    10. 'concat' → logprob: -22.25

Token 138: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0087516784551553e-05
    2. '(chain' → logprob: -11.87501049041748
    3. '(
' → logprob: -13.62501049041748
    4. ' (' → logprob: -14.62501049041748
    5. '('' → logprob: -15.00001049041748
    6. '()' → logprob: -15.00001049041748
    7. '("("' → logprob: -15.00001049041748
    8. '((' → logprob: -15.50001049041748
    9. 'chaine' → logprob: -16.500009536743164
    10. '([' → logprob: -16.875009536743164

Token 139: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -8.061054359131958e-06
    2. ' chaine' → logprob: -11.750007629394531
    3. 'cha' → logprob: -16.37500762939453
    4. 'chain' → logprob: -17.12500762939453
    5. '   ' → logprob: -19.00000762939453
    6. ' chaîne' → logprob: -19.37500762939453
    7. '```' → logprob: -21.00000762939453
    8. 'chine' → logprob: -22.12500762939453
    9. '
' → logprob: -22.37500762939453
    10. ' ' → logprob: -22.37500762939453

Token 140: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -2.15310683415737e-05
    2. 'ch' → logprob: -10.750021934509277
    3. '_' → logprob: -18.00002098083496
    4. '	ch' → logprob: -18.62502098083496
    5. '_che' → logprob: -18.62502098083496
    6. '_car' → logprob: -19.00002098083496
    7. 'e' → logprob: -19.00002098083496
    8. '_chr' → logprob: -19.25002098083496
    9. '_char' → logprob: -19.62502098083496
    10. '[ch' → logprob: -19.62502098083496

Token 141: 'iff' (ID: 4443)
  Prédit: 'iff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iff' → logprob: -0.2088925838470459
    2. 'if' → logprob: -1.708892583847046
    3. 'eff' → logprob: -5.708892822265625
    4. 'iffe' → logprob: -6.333892822265625
    5. 'iffer' → logprob: -7.708892822265625
    6. 'aff' → logprob: -7.708892822265625
    7. 'ff' → logprob: -8.208892822265625
    8. 'aine' → logprob: -8.583892822265625
    9. 'ef' → logprob: -8.708892822265625
    10. 'uff' → logprob: -8.708892822265625

Token 142: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -3.547789674485102e-05
    2. 're' → logprob: -10.375035285949707
    3. 'ee' → logprob: -12.500035285949707
    4. 'rée' → logprob: -15.500035285949707
    5. ' ree' → logprob: -15.750035285949707
    6. 'rees' → logprob: -16.750036239624023
    7. 'uree' → logprob: -18.125036239624023
    8. 'reen' → logprob: -18.250036239624023
    9. 'e' → logprob: -18.250036239624023
    10. 'r' → logprob: -18.375036239624023

Token 143: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.75
    3. '()' → logprob: -17.375
    4. '))' → logprob: -17.5
    5. ')
' → logprob: -17.5
    6. ')`' → logprob: -18.25
    7. '())' → logprob: -18.875
    8. ']' → logprob: -19.75
    9. '(' → logprob: -20.0
    10. ')#' → logprob: -20.5

Token 144: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -14.875001907348633
    3. 'prin' → logprob: -14.875001907348633
    4. 'pr' → logprob: -15.250001907348633
    5. ' print' → logprob: -15.500001907348633
    6. '#print' → logprob: -15.750001907348633
    7. '```' → logprob: -17.875001907348633
    8. 'prit' → logprob: -18.250001907348633
    9. '(print' → logprob: -19.125001907348633
    10. '#' → logprob: -19.250001907348633

Token 145: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00029637437546625733
    2. '("("' → logprob: -8.375296592712402
    3. '('' → logprob: -9.875296592712402
    4. '()' → logprob: -12.750296592712402
    5. '(chain' → logprob: -13.000296592712402
    6. '("' → logprob: -13.125296592712402
    7. '(
' → logprob: -13.250296592712402
    8. ' (' → logprob: -13.625296592712402
    9. '("")' → logprob: -14.125296592712402
    10. '("""' → logprob: -14.250296592712402

Token 146: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.981667537620524e-06
    2. ' chaine' → logprob: -13.250001907348633
    3. 'cha' → logprob: -15.750001907348633
    4. 'chain' → logprob: -18.750001907348633
    5. '   ' → logprob: -19.375001907348633
    6. ' chaîne' → logprob: -21.000001907348633
    7. '```' → logprob: -21.125001907348633
    8. '(' → logprob: -21.250001907348633
    9. 'chine' → logprob: -21.625001907348633
    10. 'chai' → logprob: -21.625001907348633

Token 147: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.625000953674316
    3. '_)' → logprob: -17.125
    4. '_che' → logprob: -17.25
    5. 'ch' → logprob: -17.75
    6. '_car' → logprob: -18.375
    7. ')' → logprob: -18.625
    8. '_co' → logprob: -19.75
    9. '_CH' → logprob: -20.25
    10. '_cl' → logprob: -20.5

Token 148: 'iff' (ID: 4443)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2178613841533661
    2. 'iff' → logprob: -2.2178614139556885
    3. 'ef' → logprob: -3.0928614139556885
    4. 'eff' → logprob: -3.8428614139556885
    5. 'free' → logprob: -4.967861175537109
    6. 'aff' → logprob: -6.092861175537109
    7. 'ee' → logprob: -6.592861175537109
    8. 'of' → logprob: -6.717861175537109
    9. 'ree' → logprob: -6.717861175537109
    10. 'ch' → logprob: -6.717861175537109

Token 149: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -9.746380237629637e-05
    2. 're' → logprob: -9.375097274780273
    3. 'ee' → logprob: -11.375097274780273
    4. 'rée' → logprob: -14.500097274780273
    5. ' ree' → logprob: -15.500097274780273
    6. 'e' → logprob: -16.125097274780273
    7. '1' → logprob: -16.500097274780273
    8. '_' → logprob: -16.875097274780273
    9. 'uree' → logprob: -17.375097274780273
    10. 'rees' → logprob: -17.375097274780273

Token 150: '_join' (ID: 69647)
  Prédit: '_join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_join' → logprob: -0.003513476112857461
    2. ')' → logprob: -5.753513336181641
    3. '_)' → logprob: -8.12851333618164
    4. '_' → logprob: -10.75351333618164
    5. ')_' → logprob: -11.62851333618164
    6. 'join' → logprob: -12.87851333618164
    7. '_j' → logprob: -12.87851333618164
    8. '_JOIN' → logprob: -13.62851333618164
    9. 'Join' → logprob: -14.00351333618164
    10. '_joint' → logprob: -14.12851333618164

Token 151: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -5.12127808178775e-05
    2. 'tee' → logprob: -10.375051498413086
    3. 'e' → logprob: -11.250051498413086
    4. 't' → logprob: -12.125051498413086
    5. 'те' → logprob: -14.375051498413086
    6. 'tea' → logprob: -14.750051498413086
    7. 'tie' → logprob: -15.625051498413086
    8. 'ted' → logprob: -16.750051498413086
    9. 'ee' → logprob: -16.875051498413086
    10. 'ete' → logprob: -17.000051498413086

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -14.000001907348633
    3. '))' → logprob: -14.875001907348633
    4. ')`' → logprob: -15.125001907348633
    5. ')
' → logprob: -16.750001907348633
    6. ')}' → logprob: -17.875001907348633
    7. '(' → logprob: -17.875001907348633
    8. '()' → logprob: -19.000001907348633
    9. '')' → logprob: -19.875001907348633
    10. ')**' → logprob: -20.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 150
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 79
Tokens correctement prédits (top 10): 125
Précision stricte (1ère position): 52.00%
Précision adaptée (1ère position): 52.67%
Précision (top 10): 83.33%
================================================================================
