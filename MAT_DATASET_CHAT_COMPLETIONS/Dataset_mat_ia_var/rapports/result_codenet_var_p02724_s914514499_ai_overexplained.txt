================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir un nombre entier, lira l'entrée au clavier sous forme de chaîne de caractères
# Ensuite, convertit cette chaîne de caractères en un entier grâce à la fonction int()
N = int(input())

# Calcule combien de fois 500 tient entièrement dans N
# L'opérateur // permet de faire une division entière (on ne garde que la partie entière, sans virgule)
# Par exemple, si N vaut 1350, N//500 donne 2 parce que 500 tient 2 fois dans 1350 (le reste n'est pas pris en compte)
A = N // 500

# Calcule maintenant combien reste-t-il dans N après avoir pris les parts de 500 déjà comptées
# Pour cela, on enlève à N la quantité prise par les 500, soit A*500
# On a alors "N - A*500"
# Ensuite, on cherche combien de fois 5 tient dans ce reste (division entière à nouveau)
B = (N - A * 500) // 5

# Calcule la somme finale de la manière suivante :
# "A" représente le nombre de parts de 500, chaque part "rapporte" 1000
# "B" représente le nombre de parts de 5 heures restantes, chaque part "rapporte" 5
# On multiplie ces quantités et fait l'addition
resultat = A * 1000 + B * 5

# Affiche le résultat final dans la console grâce à la fonction print()
# Cela écrit la valeur de la variable 'resultat' à l'écran
print(resultat)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5913839936256409
    2. ' ' → logprob: -1.466383934020996
    3. '_' → logprob: -2.216383934020996
    4. ':' → logprob: -3.216383934020996
    5. '.' → logprob: -4.216383934020996
    6. ' de' → logprob: -4.466383934020996
    7. '```' → logprob: -4.466383934020996
    8. ''' → logprob: -5.216383934020996
    9. '[' → logprob: -5.841383934020996
    10. 'u' → logprob: -5.966383934020996

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.012093992903828621
    2. ' l' → logprob: -4.512094020843506
    3. '#' → logprob: -7.512094020843506
    4. 'user' → logprob: -9.012093544006348
    5. 'la' → logprob: -9.887093544006348
    6. '```' → logprob: -9.887093544006348
    7. 'util' → logprob: -10.137093544006348
    8. '`' → logprob: -10.512093544006348
    9. ' #' → logprob: -10.637093544006348
    10. 'un' → logprob: -10.762093544006348

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.0517667718231678
    2. 'util' → logprob: -3.926766872406006
    3. '’utilisateur' → logprob: -4.801766872406006
    4. 'u' → logprob: -4.926766872406006
    5. ' utilisateur' → logprob: -4.926766872406006
    6. ''' → logprob: -5.426766872406006
    7. 'a' → logprob: -6.051766872406006
    8. 'user' → logprob: -8.051766395568848
    9. ''user' → logprob: -8.176766395568848
    10. 'us' → logprob: -8.926766395568848

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17538928985595703
    2. 'name' → logprob: -2.675389289855957
    3. 'n' → logprob: -3.425389289855957
    4. 's' → logprob: -4.300389289855957
    5. ' nom' → logprob: -4.800389289855957
    6. 'user' → logprob: -4.925389289855957
    7. ' =' → logprob: -5.925389289855957
    8. 'prenom' → logprob: -6.050389289855957
    9. 'input' → logprob: -6.175389289855957
    10. 'print' → logprob: -6.300389289855957

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009455247782170773
    2. 'r' → logprob: -5.63445520401001
    3. 'entr' → logprob: -5.88445520401001
    4. '```' → logprob: -6.88445520401001
    5. ' saisir' → logprob: -7.38445520401001
    6. 'input' → logprob: -7.75945520401001
    7. '#' → logprob: -8.509455680847168
    8. 'sa' → logprob: -8.884455680847168
    9. 'contin' → logprob: -9.134455680847168
    10. 'entrée' → logprob: -9.259455680847168

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8849058151245117
    2. ''' → logprob: -1.8849058151245117
    3. ' un' → logprob: -2.1349058151245117
    4. ' une' → logprob: -2.1349058151245117
    5. '_' → logprob: -2.5099058151245117
    6. 's' → logprob: -3.5099058151245117
    7. 'une' → logprob: -3.8849058151245117
    8. 'un' → logprob: -4.384905815124512
    9. '`' → logprob: -4.634905815124512
    10. ''un' → logprob: -4.634905815124512

Token 9: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1980278342962265
    2. 'e' → logprob: -2.4480278491973877
    3. '_' → logprob: -3.1980278491973877
    4. ' espace' → logprob: -4.073027610778809
    5. 'es' → logprob: -4.323027610778809
    6. 'é' → logprob: -5.573027610778809
    7. ''' → logprob: -5.698027610778809
    8. '```' → logprob: -6.073027610778809
    9. 'a' → logprob: -6.448027610778809
    10. ''espace' → logprob: -6.698027610778809

Token 10: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012785328552126884
    2. 'nombre' → logprob: -4.7627854347229
    3. 'x' → logprob: -6.3877854347229
    4. '\n' → logprob: -7.6377854347229
    5. '_' → logprob: -7.7627854347229
    6. '#' → logprob: -7.8877854347229
    7. '```' → logprob: -8.637784957885742
    8. ' ' → logprob: -8.637784957885742
    9. 's' → logprob: -8.762784957885742
    10. 'number' → logprob: -9.012784957885742

Token 11: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005719504784792662
    2. 'x' → logprob: -6.2557196617126465
    3. 'nombre' → logprob: -6.2557196617126465
    4. '\n' → logprob: -7.7557196617126465
    5. 'i' → logprob: -7.7557196617126465
    6. '#' → logprob: -8.255719184875488
    7. '\' → logprob: -9.130719184875488
    8. 's' → logprob: -9.255719184875488
    9. '```' → logprob: -9.380719184875488
    10. '`' → logprob: -9.630719184875488

Token 12: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.698979914188385
    2. 'n' → logprob: -0.948979914188385
    3. ' n' → logprob: -3.1989798545837402
    4. 's' → logprob: -3.3239798545837402
    5. 'input' → logprob: -4.94897985458374
    6. 'x' → logprob: -5.07397985458374
    7. ' )' → logprob: -5.82397985458374
    8. ' =' → logprob: -6.19897985458374
    9. 'r' → logprob: -6.57397985458374
    10. 'a' → logprob: -6.57397985458374

Token 13: 'ira' (ID: 2633)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4201144576072693
    2. 'a' → logprob: -1.295114517211914
    3. 'n' → logprob: -3.920114517211914
    4. '#' → logprob: -4.045114517211914
    5. 'i' → logprob: -4.670114517211914
    6. ''' → logprob: -5.170114517211914
    7. ''ent' → logprob: -5.295114517211914
    8. 'u' → logprob: -5.420114517211914
    9. ''utilisateur' → logprob: -6.420114517211914
    10. ''entrée' → logprob: -7.670114517211914

Token 14: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004298134241253138
    2. '_' → logprob: -5.754298210144043
    3. '  ' → logprob: -7.754298210144043
    4. ''' → logprob: -8.129298210144043
    5. 'e' → logprob: -8.504298210144043
    6. 's' → logprob: -11.004298210144043
    7. ' =' → logprob: -11.004298210144043
    8. ' (' → logprob: -11.004298210144043
    9. 'r' → logprob: -11.129298210144043
    10. ' e' → logprob: -11.129298210144043

Token 15: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8470520377159119
    2. 'e' → logprob: -1.2220520973205566
    3. 'a' → logprob: -1.9720520973205566
    4. ''espace' → logprob: -2.7220520973205566
    5. ''ent' → logprob: -3.4720520973205566
    6. ''utilisateur' → logprob: -4.597052097320557
    7. ''\' → logprob: -5.347052097320557
    8. 'u' → logprob: -5.347052097320557
    9. '_' → logprob: -5.472052097320557
    10. ''entrée' → logprob: -5.472052097320557

Token 16: ' au' (ID: 2791)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0917543172836304
    2. ':' → logprob: -1.7167543172836304
    3. ' ' → logprob: -2.09175443649292
    4. '`' → logprob: -2.59175443649292
    5. 'e' → logprob: -2.84175443649292
    6. ',' → logprob: -2.84175443649292
    7. '.' → logprob: -3.09175443649292
    8. 'input' → logprob: -3.71675443649292
    9. '```' → logprob: -3.96675443649292
    10. ''' → logprob: -4.34175443649292

Token 17: ' clavier' (ID: 187878)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6142264604568481
    2. 'cl' → logprob: -1.9892264604568481
    3. ' clavier' → logprob: -2.3642263412475586
    4. '\n' → logprob: -3.4892263412475586
    5. 'pr' → logprob: -3.8642263412475586
    6. 'f' → logprob: -3.8642263412475586
    7. 'su' → logprob: -3.9892263412475586
    8. 't' → logprob: -4.239226341247559
    9. 'format' → logprob: -4.364226341247559
    10. 's' → logprob: -4.489226341247559

Token 18: ' sous' (ID: 14487)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.028487490490078926
    2. 'x' → logprob: -4.278487682342529
    3. 'i' → logprob: -5.403487682342529
    4. '`' → logprob: -6.028487682342529
    5. 'nombre' → logprob: -6.028487682342529
    6. '```' → logprob: -6.778487682342529
    7. '\n' → logprob: -7.653487682342529
    8. ',' → logprob: -7.778487682342529
    9. '#' → logprob: -8.028487205505371
    10. '\' → logprob: -8.153487205505371

Token 19: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.6106290817260742
    2. 'la' → logprob: -1.8606290817260742
    3. ' forme' → logprob: -1.8606290817260742
    4. 'Python' → logprob: -2.860629081726074
    5. 'form' → logprob: -2.985629081726074
    6. 'ent' → logprob: -4.610629081726074
    7. 'python' → logprob: -4.735629081726074
    8. 'une' → logprob: -5.110629081726074
    9. 'chaine' → logprob: -5.485629081726074
    10. 'format' → logprob: -6.110629081726074

Token 20: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.017325827851891518
    2. 'd' → logprob: -4.1423258781433105
    3. ' de' → logprob: -6.8923258781433105
    4. 's' → logprob: -9.017325401306152
    5. ' ' → logprob: -9.142325401306152
    6. 'de' → logprob: -10.767325401306152
    7. 'space' → logprob: -12.142325401306152
    8. 'n' → logprob: -12.517325401306152
    9. ''' → logprob: -13.017325401306152
    10. '  ' → logprob: -13.517325401306152

Token 21: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.20206095278263092
    2. 'cha' → logprob: -2.2020609378814697
    3. 'string' → logprob: -3.4520609378814697
    4. ' chaîne' → logprob: -3.7020609378814697
    5. 'texte' → logprob: -4.327061176300049
    6. 'str' → logprob: -6.577061176300049
    7. ' chaine' → logprob: -7.327061176300049
    8. 'ent' → logprob: -8.32706069946289
    9. ' string' → logprob: -9.07706069946289
    10. '```' → logprob: -9.20206069946289

Token 22: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4378669559955597
    2. 'input' → logprob: -1.5628669261932373
    3. 'i' → logprob: -3.4378669261932373
    4. 'x' → logprob: -4.062867164611816
    5. ',' → logprob: -4.187867164611816
    6. '`' → logprob: -4.312867164611816
    7. 'num' → logprob: -4.437867164611816
    8. '\n' → logprob: -4.562867164611816
    9. '.' → logprob: -4.687867164611816
    10. 'e' → logprob: -5.062867164611816

Token 23: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.12328217923641205
    2. ' caractères' → logprob: -2.2482821941375732
    3. ' ' → logprob: -5.623281955718994
    4. ' caract' → logprob: -6.123281955718994
    5. '_' → logprob: -6.748281955718994
    6. ' caracteres' → logprob: -7.248281955718994
    7. '#' → logprob: -7.498281955718994
    8. 'texte' → logprob: -7.623281955718994
    9. 's' → logprob: -7.998281955718994
    10. ' caractère' → logprob: -8.123282432556152

Token 24: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014347303658723831
    2. 'i' → logprob: -5.639347076416016
    3. 'nombre' → logprob: -5.764347076416016
    4. '#' → logprob: -6.639347076416016
    5. 'x' → logprob: -6.639347076416016
    6. '\' → logprob: -6.889347076416016
    7. 'e' → logprob: -7.014347076416016
    8. '\n' → logprob: -7.264347076416016
    9. '`' → logprob: -7.514347076416016
    10. 'input' → logprob: -8.389347076416016

Token 25: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06988096237182617
    2. '\' → logprob: -4.069880962371826
    3. 'x' → logprob: -4.069880962371826
    4. '\n' → logprob: -4.569880962371826
    5. 'nombre' → logprob: -4.569880962371826
    6. 'i' → logprob: -5.569880962371826
    7. '```' → logprob: -6.319880962371826
    8. '`' → logprob: -6.444880962371826
    9. 's' → logprob: -6.819880962371826
    10. '#' → logprob: -7.194880962371826

Token 26: ' Ensuite' (ID: 113884)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04260344058275223
    2. 'i' → logprob: -4.042603492736816
    3. ' ' → logprob: -4.417603492736816
    4. 'input' → logprob: -5.917603492736816
    5. 'nombre' → logprob: -6.042603492736816
    6. 's' → logprob: -6.417603492736816
    7. ' n' → logprob: -7.042603492736816
    8. '#' → logprob: -7.167603492736816
    9. 'u' → logprob: -7.542603492736816
    10. 'number' → logprob: -7.667603492736816

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2427305430173874
    2. ' ,' → logprob: -2.6177306175231934
    3. ' ' → logprob: -3.1177306175231934
    4. 'n' → logprob: -3.6177306175231934
    5. '#' → logprob: -4.117730617523193
    6. 's' → logprob: -4.367730617523193
    7. ' #' → logprob: -4.492730617523193
    8. 'convert' → logprob: -5.242730617523193
    9. ' convertir' → logprob: -5.367730617523193
    10. ' n' → logprob: -5.367730617523193

Token 28: ' convert' (ID: 8452)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8694072961807251
    2. 'convert' → logprob: -1.244407296180725
    3. ' convert' → logprob: -1.994407296180725
    4. ' transforme' → logprob: -3.1194071769714355
    5. ' #' → logprob: -3.9944071769714355
    6. ' convertir' → logprob: -4.3694071769714355
    7. ' le' → logprob: -4.6194071769714355
    8. 'n' → logprob: -4.6194071769714355
    9. 'transform' → logprob: -4.7444071769714355
    10. 'con' → logprob: -4.8694071769714355

Token 29: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.14762671291828156
    2. 'i' → logprob: -2.2726266384124756
    3. 'ira' → logprob: -3.7726266384124756
    4. 'ir' → logprob: -4.897626876831055
    5. 't' → logprob: -6.897626876831055
    6. 'issez' → logprob: -7.022626876831055
    7. ' it' → logprob: -8.022626876831055
    8. '#' → logprob: -8.147626876831055
    9. 'r' → logprob: -8.272626876831055
    10. 'a' → logprob: -8.897626876831055

Token 30: ' cette' (ID: 7696)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8627225160598755
    2. ' l' → logprob: -1.3627225160598755
    3. ' la' → logprob: -1.8627225160598755
    4. ' le' → logprob: -2.737722396850586
    5. ' en' → logprob: -3.237722396850586
    6. ' ' → logprob: -3.612722396850586
    7. 'l' → logprob: -4.487722396850586
    8. '_' → logprob: -4.987722396850586
    9. '(' → logprob: -5.487722396850586
    10. 'le' → logprob: -6.237722396850586

Token 31: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.024466069415211678
    2. ' chaine' → logprob: -4.399466037750244
    3. ' valeur' → logprob: -5.649466037750244
    4. 'chaine' → logprob: -5.649466037750244
    5. 's' → logprob: -6.774466037750244
    6. ' espace' → logprob: -7.149466037750244
    7. ' ' → logprob: -7.399466037750244
    8. ' string' → logprob: -7.524466037750244
    9. ' dernière' → logprob: -7.774466037750244
    10. ' entrée' → logprob: -8.024466514587402

Token 32: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.6302525997161865
    2. ' ' → logprob: -1.0052525997161865
    3. 's' → logprob: -2.8802525997161865
    4. '_' → logprob: -3.6302525997161865
    5. 'en' → logprob: -6.130252838134766
    6. ' d' → logprob: -6.255252838134766
    7. ' space' → logprob: -6.255252838134766
    8. ' a' → logprob: -6.380252838134766
    9. ' s' → logprob: -6.505252838134766
    10. 'n' → logprob: -7.380252838134766

Token 33: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4177318811416626
    2. ' caractères' → logprob: -1.4177318811416626
    3. 'chaine' → logprob: -3.167731761932373
    4. 'int' → logprob: -3.542731761932373
    5. 'str' → logprob: -5.167731761932373
    6. 'string' → logprob: -5.292731761932373
    7. 'type' → logprob: -5.667731761932373
    8. '```' → logprob: -6.292731761932373
    9. ' caracteres' → logprob: -6.417731761932373
    10. 'texte' → logprob: -6.542731761932373

Token 34: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4044056236743927
    2. 'n' → logprob: -2.4044055938720703
    3. '_' → logprob: -2.5294055938720703
    4. 'i' → logprob: -3.5294055938720703
    5. ',' → logprob: -3.6544055938720703
    6. 'int' → logprob: -3.9044055938720703
    7. ' =' → logprob: -3.9044055938720703
    8. '=' → logprob: -4.52940559387207
    9. 's' → logprob: -4.77940559387207
    10. '(' → logprob: -5.15440559387207

Token 35: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.22138726711273193
    2. ' entier' → logprob: -2.3463873863220215
    3. ' ' → logprob: -2.9713873863220215
    4. ' nombre' → logprob: -3.2213873863220215
    5. 'un' → logprob: -5.2213873863220215
    6. 'ent' → logprob: -6.4713873863220215
    7. ' int' → logprob: -6.8463873863220215
    8. 'nombre' → logprob: -6.8463873863220215
    9. 'n' → logprob: -7.5963873863220215
    10. ' une' → logprob: -7.5963873863220215

Token 36: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11751513928174973
    2. ' entier' → logprob: -2.4925150871276855
    3. ' espace' → logprob: -4.4925150871276855
    4. ' nombre' → logprob: -4.9925150871276855
    5. 'ent' → logprob: -5.8675150871276855
    6. 'e' → logprob: -5.9925150871276855
    7. 'nombre' → logprob: -6.9925150871276855
    8. '  ' → logprob: -7.4925150871276855
    9. ' ent' → logprob: -7.9925150871276855
    10. ' space' → logprob: -7.9925150871276855

Token 37: ' grâce' (ID: 31589)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006300841923803091
    2. '#' → logprob: -5.756300926208496
    3. 'i' → logprob: -6.381300926208496
    4. 'nombre' → logprob: -7.381300926208496
    5. 'x' → logprob: -8.006300926208496
    6. 'e' → logprob: -9.256300926208496
    7. '\n' → logprob: -9.756300926208496
    8. '```' → logprob: -9.881300926208496
    9. 'number' → logprob: -10.006300926208496
    10. 'u' → logprob: -10.256300926208496

Token 38: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.026469126343727112
    2. ' au' → logprob: -4.1514692306518555
    3. ' ' → logprob: -4.9014692306518555
    4. ' a' → logprob: -6.6514692306518555
    5. 'au' → logprob: -7.4014692306518555
    6. 'à' → logprob: -7.5264692306518555
    7. 's' → logprob: -9.276469230651855
    8. ''à' → logprob: -9.276469230651855
    9. ' aux' → logprob: -9.526469230651855
    10. '’à' → logprob: -10.151469230651855

Token 39: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7127383947372437
    2. ' int' → logprob: -1.4627383947372437
    3. 'int' → logprob: -2.087738513946533
    4. 'l' → logprob: -2.337738513946533
    5. 'la' → logprob: -3.587738513946533
    6. ' l' → logprob: -3.587738513946533
    7. '`' → logprob: -7.462738513946533
    8. '```' → logprob: -7.587738513946533
    9. ' ' → logprob: -8.087738037109375
    10. '=int' → logprob: -8.837738037109375

Token 40: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.4410668909549713
    2. 'int' → logprob: -1.441066861152649
    3. ' fonction' → logprob: -2.4410669803619385
    4. 'fon' → logprob: -4.941066741943359
    5. ' int' → logprob: -5.191066741943359
    6. 'i' → logprob: -5.441066741943359
    7. 'b' → logprob: -5.691066741943359
    8. 'input' → logprob: -6.316066741943359
    9. '```' → logprob: -6.566066741943359
    10. ' ' → logprob: -6.816066741943359

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.34573644399642944
    2. 'int' → logprob: -1.8457365036010742
    3. ' input' → logprob: -2.595736503601074
    4. 'input' → logprob: -3.220736503601074
    5. ' `' → logprob: -4.220736503601074
    6. '`' → logprob: -6.720736503601074
    7. ' ' → logprob: -6.970736503601074
    8. ' i' → logprob: -7.095736503601074
    9. '```' → logprob: -7.470736503601074
    10. 'i' → logprob: -7.720736503601074

Token 42: '()
' (ID: 1234)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009036177769303322
    2. 'x' → logprob: -6.009036064147949
    3. '#' → logprob: -6.134036064147949
    4. 'i' → logprob: -6.759036064147949
    5. '\n' → logprob: -6.884036064147949
    6. 'nombre' → logprob: -7.634036064147949
    7. '(' → logprob: -7.759036064147949
    8. '\' → logprob: -8.63403606414795
    9. 's' → logprob: -8.63403606414795
    10. 'e' → logprob: -9.00903606414795

Token 43: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001871997956186533
    2. 'nombre' → logprob: -7.2518720626831055
    3. 'x' → logprob: -7.3768720626831055
    4. '#' → logprob: -7.8768720626831055
    5. 'i' → logprob: -9.876872062683105
    6. 'e' → logprob: -10.751872062683105
    7. 'number' → logprob: -11.126872062683105
    8. 'u' → logprob: -11.251872062683105
    9. '```' → logprob: -11.251872062683105
    10. 'num' → logprob: -11.376872062683105

Token 44: ' =' (ID: 314)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7079882025718689
    2. 'ombre' → logprob: -0.7079882025718689
    3. 'um' → logprob: -4.832988262176514
    4. 'umber' → logprob: -5.582988262176514
    5. 'u' → logprob: -6.957988262176514
    6. 'ombr' → logprob: -7.832988262176514
    7. ' =' → logprob: -7.957988262176514
    8. '=' → logprob: -8.332987785339355
    9. 'omb' → logprob: -8.332987785339355
    10. 'umbe' → logprob: -8.457987785339355

Token 45: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5954432487487793
    2. ' input' → logprob: -0.8454432487487793
    3. 'input' → logprob: -4.470443248748779
    4. 'int' → logprob: -4.845443248748779
    5. ' ' → logprob: -12.345443725585938
    6. ' ' → logprob: -13.595443725585938
    7. '=int' → logprob: -13.845443725585938
    8. '=input' → logprob: -14.220443725585938
    9. '<int' → logprob: -15.720443725585938
    10. ' inp' → logprob: -15.845443725585938

Token 46: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31327930092811584
    2. '(' → logprob: -1.3132792711257935
    3. 'input' → logprob: -11.563279151916504
    4. ' (' → logprob: -12.563279151916504
    5. '(
' → logprob: -13.188279151916504
    6. '()' → logprob: -13.688279151916504
    7. '('' → logprob: -14.063279151916504
    8. '(

' → logprob: -15.063279151916504
    9. '(in' → logprob: -16.31328010559082
    10. '(raw' → logprob: -16.68828010559082

Token 47: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1039026752114296
    2. '("("' → logprob: -2.978902578353882
    3. '()' → logprob: -3.853902578353882
    4. '('' → logprob: -4.103902816772461
    5. '("' → logprob: -5.228902816772461
    6. '())' → logprob: -5.853902816772461
    7. '(""))' → logprob: -6.978902816772461
    8. '("")' → logprob: -7.603902816772461
    9. '(">' → logprob: -8.353902816772461
    10. ')' → logprob: -9.728902816772461

Token 48: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019061466678977013
    2. '()' → logprob: -4.26906156539917
    3. '(
' → logprob: -6.51906156539917
    4. '#' → logprob: -6.76906156539917
    5. ')' → logprob: -7.26906156539917
    6. ' ' → logprob: -7.76906156539917
    7. '+' → logprob: -8.269061088562012
    8. '*' → logprob: -8.394061088562012
    9. '```' → logprob: -9.019061088562012
    10. ' (' → logprob: -9.644061088562012

Token 49: ' Cal' (ID: 4453)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32703107595443726
    2. ' if' → logprob: -1.327031135559082
    3. '#' → logprob: -4.952031135559082
    4. 'print' → logprob: -5.202031135559082
    5. ' print' → logprob: -7.827031135559082
    6. 'for' → logprob: -8.327031135559082
    7. ' #' → logprob: -8.452031135559082
    8. 'factor' → logprob: -9.702031135559082
    9. 'while' → logprob: -10.327031135559082
    10. 's' → logprob: -10.452031135559082

Token 50: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.01293443888425827
    2. 'cule' → logprob: -4.51293420791626
    3. 'c' → logprob: -6.63793420791626
    4. 'culate' → logprob: -8.012934684753418
    5. 'culator' → logprob: -9.512934684753418
    6. 'cules' → logprob: -9.887934684753418
    7. '```' → logprob: -10.637934684753418
    8. '#' → logprob: -10.762934684753418
    9. 'cula' → logprob: -10.762934684753418
    10. 'cular' → logprob: -11.387934684753418

Token 51: ' combien' (ID: 106648)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6391276121139526
    2. '(' → logprob: -0.8891276121139526
    3. '_' → logprob: -3.889127731323242
    4. ' N' → logprob: -4.514127731323242
    5. '(N' → logprob: -4.889127731323242
    6. ' (' → logprob: -5.014127731323242
    7. 'N' → logprob: -5.639127731323242
    8. '()' → logprob: -5.889127731323242
    9. 's' → logprob: -6.639127731323242
    10. '('' → logprob: -7.014127731323242

Token 52: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6447330117225647
    2. '_' → logprob: -1.51973295211792
    3. '(' → logprob: -3.51973295211792
    4. ' N' → logprob: -3.64473295211792
    5. ' *' → logprob: -3.64473295211792
    6. 's' → logprob: -3.89473295211792
    7. ' de' → logprob: -4.39473295211792
    8. '*' → logprob: -4.64473295211792
    9. ' d' → logprob: -4.64473295211792
    10. 'au' → logprob: -4.76973295211792

Token 53: ' fois' (ID: 14697)
  Prédit: ' secondes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' secondes' → logprob: -0.9201840162277222
    2. ' fois' → logprob: -2.0451841354370117
    3. ' jours' → logprob: -2.1701841354370117
    4. 'jours' → logprob: -3.0451841354370117
    5. 'second' → logprob: -3.0451841354370117
    6. 'fois' → logprob: -3.0451841354370117
    7. ' ' → logprob: -3.9201841354370117
    8. 'fact' → logprob: -4.045184135437012
    9. 'jour' → logprob: -4.295184135437012
    10. 'multip' → logprob: -4.420184135437012

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8873695731163025
    2. ' N' → logprob: -1.1373696327209473
    3. 'N' → logprob: -2.2623696327209473
    4. ''' → logprob: -3.1373696327209473
    5. ' "' → logprob: -4.137369632720947
    6. '"' → logprob: -4.512369632720947
    7. ' (' → logprob: -4.637369632720947
    8. '_' → logprob: -4.637369632720947
    9. '  ' → logprob: -4.887369632720947
    10. '```' → logprob: -4.887369632720947

Token 55: '500' (ID: 3234)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20339854061603546
    2. 'N' → logprob: -2.2033984661102295
    3. ' N' → logprob: -4.078398704528809
    4. 'le' → logprob: -4.328398704528809
    5. '10' → logprob: -4.953398704528809
    6. 'de' → logprob: -5.203398704528809
    7. ' ' → logprob: -5.328398704528809
    8. '4' → logprob: -5.453398704528809
    9. '3' → logprob: -5.703398704528809
    10. '5' → logprob: -5.953398704528809

Token 56: ' tient' (ID: 69541)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0034430027008057
    2. '0' → logprob: -2.1284430027008057
    3. 'div' → logprob: -3.1284430027008057
    4. ',' → logprob: -3.2534430027008057
    5. ' //' → logprob: -3.2534430027008057
    6. '"' → logprob: -3.5659430027008057
    7. ' dans' → logprob: -3.6909430027008057
    8. ')' → logprob: -3.8784430027008057
    9. ' /' → logprob: -3.8784430027008057
    10. ''' → logprob: -4.003442764282227

Token 57: ' entièrement' (ID: 79300)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.4362833797931671
    2. ' dans' → logprob: -1.0612833499908447
    3. 's' → logprob: -5.311283588409424
    4. ' ' → logprob: -7.311283588409424
    5. 'ent' → logprob: -7.936283588409424
    6. ' ' → logprob: -8.061283111572266
    7. '```' → logprob: -8.311283111572266
    8. 'd' → logprob: -8.936283111572266
    9. 'dan' → logprob: -9.186283111572266
    10. ')' → logprob: -9.311283111572266

Token 58: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.4755036234855652
    2. 'dans' → logprob: -0.9755036234855652
    3. ' ' → logprob: -7.725503444671631
    4. 's' → logprob: -7.975503444671631
    5. 'd' → logprob: -8.600503921508789
    6. 'dan' → logprob: -8.725503921508789
    7. ' ' → logprob: -9.725503921508789
    8. '100' → logprob: -9.725503921508789
    9. ' dan' → logprob: -10.350503921508789
    10. ',' → logprob: -10.725503921508789

Token 59: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.22864016890525818
    2. 'N' → logprob: -1.6036401987075806
    3. ' ' → logprob: -5.853640079498291
    4. ' ' → logprob: -9.35364055633545
    5. 'l' → logprob: -10.22864055633545
    6. 'le' → logprob: -10.47864055633545
    7. ' le' → logprob: -10.72864055633545
    8. '100' → logprob: -10.79114055633545
    9. ' l' → logprob: -10.91614055633545
    10. ' la' → logprob: -11.04114055633545

Token 60: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3313175439834595
    2. '500' → logprob: -1.7063175439834595
    3. 'div' → logprob: -1.8313175439834595
    4. 'n' → logprob: -2.83131742477417
    5. 'fois' → logprob: -3.20631742477417
    6. 'quot' → logprob: -3.20631742477417
    7. 'nombre' → logprob: -3.45631742477417
    8. 'count' → logprob: -3.70631742477417
    9. '```' → logprob: -4.20631742477417
    10. 'q' → logprob: -4.20631742477417

Token 61: '#' (ID: 2)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.6309465169906616
    2. 'div' → logprob: -2.005946636199951
    3. '500' → logprob: -2.005946636199951
    4. 'n' → logprob: -2.755946636199951
    5. 'count' → logprob: -3.255946636199951
    6. 'nombre' → logprob: -3.255946636199951
    7. 'r' → logprob: -3.755946636199951
    8. 's' → logprob: -3.755946636199951
    9. ' ' → logprob: -3.755946636199951
    10. '_' → logprob: -3.880946636199951

Token 62: ' L' (ID: 451)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.165558099746704
    2. 'quot' → logprob: -2.290558099746704
    3. ' div' → logprob: -2.415558099746704
    4. ' nb' → logprob: -2.415558099746704
    5. 'times' → logprob: -2.540558099746704
    6. 'q' → logprob: -2.540558099746704
    7. 'div' → logprob: -2.665558099746704
    8. ' count' → logprob: -2.915558099746704
    9. '500' → logprob: -3.040558099746704
    10. ' q' → logprob: -3.165558099746704

Token 63: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.45345818996429443
    2. 'a' → logprob: -2.078458309173584
    3. 'o' → logprob: -2.203458309173584
    4. '500' → logprob: -4.078458309173584
    5. 'q' → logprob: -4.328458309173584
    6. 'et' → logprob: -4.578458309173584
    7. 'n' → logprob: -4.703458309173584
    8. 'b' → logprob: -4.828458309173584
    9. ' N' → logprob: -5.078458309173584
    10. 'eg' → logprob: -5.515958309173584

Token 64: 'érateur' (ID: 108528)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.18548308312892914
    2. 'ur' → logprob: -1.9354830980300903
    3. 'u' → logprob: -4.560482978820801
    4. 'ération' → logprob: -6.185482978820801
    5. 'N' → logprob: -6.560482978820801
    6. 'lus' → logprob: -6.935482978820801
    7. 'ar' → logprob: -6.935482978820801
    8. 'd' → logprob: -7.185482978820801
    9. 'div' → logprob: -7.185482978820801
    10. 'n' → logprob: -7.560482978820801

Token 65: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2959105968475342
    2. ' //' → logprob: -1.4209105968475342
    3. ' ' → logprob: -5.420910835266113
    4. '/' → logprob: -5.920910835266113
    5. '_' → logprob: -6.295910835266113
    6. '`' → logprob: -6.420910835266113
    7. '```' → logprob: -7.295910835266113
    8. ''' → logprob: -7.420910835266113
    9. ' `' → logprob: -7.420910835266113
    10. ' /' → logprob: -7.920910835266113

Token 66: ' permet' (ID: 11798)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08059173822402954
    2. '<|end|>' → logprob: -3.9555916786193848
    3. ' (' → logprob: -4.705591678619385
    4. ' permet' → logprob: -4.705591678619385
    5. '=' → logprob: -4.830591678619385
    6. ' a' → logprob: -6.205591678619385
    7. '_' → logprob: -6.330591678619385
    8. ' est' → logprob: -6.330591678619385
    9. 's' → logprob: -6.330591678619385
    10. ' N' → logprob: -6.455591678619385

Token 67: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.27978605031967163
    2. ' de' → logprob: -1.5297861099243164
    3. 'd' → logprob: -3.9047861099243164
    4. ' la' → logprob: -5.529786109924316
    5. ' d' → logprob: -6.654786109924316
    6. 'la' → logprob: -6.904786109924316
    7. 't' → logprob: -7.654786109924316
    8. 'l' → logprob: -8.654786109924316
    9. ' ' → logprob: -8.904786109924316
    10. 'div' → logprob: -9.154786109924316

Token 68: ' faire' (ID: 8119)
  Prédit: ' faire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faire' → logprob: -0.7468830943107605
    2. 'faire' → logprob: -1.1218831539154053
    3. ' effectuer' → logprob: -2.3718831539154053
    4. ' réaliser' → logprob: -2.8718831539154053
    5. 'ré' → logprob: -3.7468831539154053
    6. 'div' → logprob: -4.121882915496826
    7. 'effect' → logprob: -5.871882915496826
    8. 'calcul' → logprob: -5.996882915496826
    9. ''effect' → logprob: -6.246882915496826
    10. ' calcul' → logprob: -6.871882915496826

Token 69: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0038859844207764
    2. ' une' → logprob: -1.3788859844207764
    3. 'la' → logprob: -1.3788859844207764
    4. 'une' → logprob: -2.1288859844207764
    5. 'div' → logprob: -5.5038862228393555
    6. 'division' → logprob: -6.6288862228393555
    7. 'de' → logprob: -6.7538862228393555
    8. ' ' → logprob: -6.7538862228393555
    9. 'd' → logprob: -7.2538862228393555
    10. 'l' → logprob: -7.7538862228393555

Token 70: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.014285031706094742
    2. 'div' → logprob: -4.889285087585449
    3. ' division' → logprob: -5.014285087585449
    4. 'Division' → logprob: -12.26428508758545
    5. '_div' → logprob: -13.01428508758545
    6. 'floor' → logprob: -13.26428508758545
    7. ' Division' → logprob: -13.51428508758545
    8. 'd' → logprob: -13.76428508758545
    9. ' división' → logprob: -14.13928508758545
    10. ' divisão' → logprob: -15.01428508758545

Token 71: ' entière' (ID: 61583)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.20652350783348083
    2. ' entière' → logprob: -1.8315235376358032
    3. 'enti' → logprob: -3.9565234184265137
    4. ' ent' → logprob: -5.831523418426514
    5. ' enti' → logprob: -6.081523418426514
    6. 'eu' → logprob: -6.956523418426514
    7. ' ' → logprob: -8.331523895263672
    8. '(ent' → logprob: -8.456523895263672
    9. '```' → logprob: -8.706523895263672
    10. 'int' → logprob: -9.706523895263672

Token 72: ' (' (ID: 350)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -0.886712908744812
    2. 'nombre' → logprob: -2.3867130279541016
    3. '```' → logprob: -2.5117130279541016
    4. 'result' → logprob: -2.6367130279541016
    5. ' 
' → logprob: -3.2617130279541016
    6. 'count' → logprob: -3.2617130279541016
    7. 'N' → logprob: -3.2617130279541016
    8. 'n' → logprob: -3.6367130279541016
    9. 'multip' → logprob: -4.136713027954102
    10. 'fois' → logprob: -4.386713027954102

Token 73: 'on' (ID: 263)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.20512960851192474
    2. ')' → logprob: -1.705129623413086
    3. ' ' → logprob: -5.830129623413086
    4. ' N' → logprob: -8.205129623413086
    5. 'N' → logprob: -8.705129623413086
    6. 'sans' → logprob: -10.830129623413086
    7. 'a' → logprob: -10.955129623413086
    8. 'de' → logprob: -11.080129623413086
    9. ' )
' → logprob: -11.080129623413086
    10. 'n' → logprob: -11.080129623413086

Token 74: ' ne' (ID: 453)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -1.4068210124969482
    2. ' compte' → logprob: -2.0318210124969482
    3. 'n' → logprob: -2.1568210124969482
    4. 'div' → logprob: -2.4068210124969482
    5. ' a' → logprob: -2.7818210124969482
    6. ' div' → logprob: -3.1568210124969482
    7. 'comp' → logprob: -3.2818210124969482
    8. ' peut' → logprob: -3.2818210124969482
    9. ')' → logprob: -3.5318210124969482
    10. ' n' → logprob: -3.6568210124969482

Token 75: ' garde' (ID: 65309)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.3686712980270386
    2. 'comp' → logprob: -2.118671417236328
    3. ' div' → logprob: -2.868671417236328
    4. 'a' → logprob: -3.868671417236328
    5. 't' → logprob: -4.743671417236328
    6. ' obt' → logprob: -4.743671417236328
    7. ' a' → logprob: -4.868671417236328
    8. 's' → logprob: -5.118671417236328
    9. 'fait' → logprob: -5.118671417236328
    10. 'obt' → logprob: -5.118671417236328

Token 76: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.30854836106300354
    2. ' pas' → logprob: -1.6835483312606812
    3. 'pas' → logprob: -2.5585484504699707
    4. 'que' → logprob: -6.183548450469971
    5. ' ' → logprob: -8.683547973632812
    6. ' rien' → logprob: -10.558547973632812
    7. '_pas' → logprob: -11.058547973632812
    8. '```' → logprob: -11.683547973632812
    9. 'le' → logprob: -11.933547973632812
    10. 'p' → logprob: -11.933547973632812

Token 77: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8258787989616394
    2. 'le' → logprob: -1.0758788585662842
    3. ' le' → logprob: -2.450878858566284
    4. ' la' → logprob: -2.575878858566284
    5. 'l' → logprob: -3.450878858566284
    6. 'les' → logprob: -4.200878620147705
    7. 'quot' → logprob: -5.575878620147705
    8. ' ' → logprob: -6.200878620147705
    9. ' les' → logprob: -6.325878620147705
    10. ' l' → logprob: -6.325878620147705

Token 78: ' partie' (ID: 22139)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.2813006341457367
    2. ' partie' → logprob: -2.4063005447387695
    3. 'quot' → logprob: -2.5313005447387695
    4. ' part' → logprob: -3.5313005447387695
    5. 'nombre' → logprob: -3.9063005447387695
    6. ' quotient' → logprob: -4.1563005447387695
    7. ' nombre' → logprob: -5.9063005447387695
    8. ' ' → logprob: -6.7813005447387695
    9. ' résultat' → logprob: -7.0313005447387695
    10. 'par' → logprob: -7.1563005447387695

Token 79: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.14132891595363617
    2. 'ent' → logprob: -2.391328811645508
    3. ' ent' → logprob: -3.641328811645508
    4. ' ' → logprob: -4.391328811645508
    5. ' enti' → logprob: -7.891328811645508
    6. 'quot' → logprob: -8.266328811645508
    7. 'enti' → logprob: -8.641328811645508
    8. ' avant' → logprob: -9.016328811645508
    9. ' entier' → logprob: -9.141328811645508
    10. 'avant' → logprob: -9.391328811645508

Token 80: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19583500921726227
    2. ' )' → logprob: -1.820834994316101
    3. ' de' → logprob: -4.570835113525391
    4. 'de' → logprob: -5.695835113525391
    5. ' ' → logprob: -7.195835113525391
    6. ' du' → logprob: -7.320835113525391
    7. 'du' → logprob: -8.57083511352539
    8. '```' → logprob: -9.07083511352539
    9. 's' → logprob: -9.19583511352539
    10. 'N' → logprob: -9.57083511352539

Token 81: ' sans' (ID: 9828)
  Prédit: ' sans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sans' → logprob: -0.9358211159706116
    2. ' c' → logprob: -1.1858210563659668
    3. 'sans' → logprob: -1.8108210563659668
    4. ' pas' → logprob: -2.310821056365967
    5. ' donc' → logprob: -3.935821056365967
    6. 'c' → logprob: -5.060821056365967
    7. ' ' → logprob: -5.310821056365967
    8. 'pas' → logprob: -6.185821056365967
    9. ' le' → logprob: -7.060821056365967
    10. ' la' → logprob: -7.060821056365967

Token 82: ' virg' (ID: 165362)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8451403975486755
    2. 'le' → logprob: -1.2201404571533203
    3. ' le' → logprob: -1.8451404571533203
    4. 'la' → logprob: -2.3451404571533203
    5. 'l' → logprob: -5.59514045715332
    6. ' reste' → logprob: -5.72014045715332
    7. 'reste' → logprob: -5.72014045715332
    8. 'r' → logprob: -6.34514045715332
    9. ' remainder' → logprob: -6.59514045715332
    10. 're' → logprob: -6.59514045715332

Token 83: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0006662101950496435
    2. '`' → logprob: -8.750666618347168
    3. 'ù' → logprob: -8.750666618347168
    4. 'è' → logprob: -9.625666618347168
    5. '%' → logprob: -9.750666618347168
    6. 'u' → logprob: -9.875666618347168
    7. 'e' → logprob: -10.625666618347168
    8. 'ale' → logprob: -11.125666618347168
    9. 'уле' → logprob: -11.125666618347168
    10. 'èle' → logprob: -11.375666618347168

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002756495028734207
    2. ' )' → logprob: -6.377756595611572
    3. ')
' → logprob: -7.877756595611572
    4. '500' → logprob: -8.127756118774414
    5. '`)' → logprob: -8.502756118774414
    6. 'de' → logprob: -10.502756118774414
    7. ')

' → logprob: -11.002756118774414
    8. '```' → logprob: -11.252756118774414
    9. '")' → logprob: -11.377756118774414
    10. ')`' → logprob: -11.502756118774414

Token 85: '#' (ID: 2)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -1.5291829109191895
    2. 'nombre' → logprob: -2.0291829109191895
    3. 'n' → logprob: -2.1541829109191895
    4. '```' → logprob: -2.7791829109191895
    5. 'count' → logprob: -3.0291829109191895
    6. ' ' → logprob: -3.0291829109191895
    7. ' 
' → logprob: -3.1541829109191895
    8. 'result' → logprob: -3.2791829109191895
    9. '`' → logprob: -3.2791829109191895
    10. 'r' → logprob: -3.2791829109191895

Token 86: ' Par' (ID: 3371)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.9043471813201904
    2. 'count' → logprob: -1.9043471813201904
    3. 'q' → logprob: -2.2793471813201904
    4. 'quot' → logprob: -2.4043471813201904
    5. 'nb' → logprob: -2.6543471813201904
    6. 'n' → logprob: -3.0293471813201904
    7. 'print' → logprob: -3.0293471813201904
    8. 'nombre' → logprob: -3.0293471813201904
    9. 're' → logprob: -3.2793471813201904
    10. 'num' → logprob: -3.4043471813201904

Token 87: ' exemple' (ID: 26320)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.20176580548286438
    2. 'ce' → logprob: -2.701765775680542
    3. 'fait' → logprob: -4.201766014099121
    4. 'e' → logprob: -4.326766014099121
    5. 'c' → logprob: -4.826766014099121
    6. 'contre' → logprob: -4.826766014099121
    7. 'ent' → logprob: -5.326766014099121
    8. 'mi' → logprob: -5.451766014099121
    9. 'count' → logprob: -5.576766014099121
    10. 'div' → logprob: -5.701766014099121

Token 88: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0656275823712349
    2. ' N' → logprob: -3.6906275749206543
    3. '500' → logprob: -4.565627574920654
    4. ' ```' → logprob: -5.065627574920654
    5. '```' → logprob: -5.565627574920654
    6. ' :' → logprob: -5.940627574920654
    7. ' 
' → logprob: -6.315627574920654
    8. ',' → logprob: -6.440627574920654
    9. ' ,' → logprob: -6.565627574920654
    10. ' `' → logprob: -6.815627574920654

Token 89: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5567353963851929
    2. '500' → logprob: -1.5567353963851929
    3. '100' → logprob: -2.3067355155944824
    4. ' N' → logprob: -3.6817355155944824
    5. '250' → logprob: -4.056735515594482
    6. 'N' → logprob: -4.056735515594482
    7. '10' → logprob: -4.681735515594482
    8. '5' → logprob: -4.931735515594482
    9. '750' → logprob: -5.056735515594482
    10. 'print' → logprob: -5.181735515594482

Token 90: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.14959093928337097
    2. 'N' → logprob: -2.0245909690856934
    3. ' ' → logprob: -5.024590969085693
    4. '500' → logprob: -9.024590492248535
    5. ' ' → logprob: -9.399590492248535
    6. ' le' → logprob: -10.649590492248535
    7. '  ' → logprob: -10.899590492248535
    8. 'n' → logprob: -12.149590492248535
    9. ' on' → logprob: -12.337090492248535
    10. ' `' → logprob: -12.524590492248535

Token 91: ' vaut' (ID: 83004)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012302195653319359
    2. '=' → logprob: -4.637302398681641
    3. ' ' → logprob: -7.012302398681641
    4. ' >=' → logprob: -7.387302398681641
    5. ' >' → logprob: -8.13730239868164
    6. ' vaut' → logprob: -8.26230239868164
    7. ' est' → logprob: -8.88730239868164
    8. ' //' → logprob: -9.13730239868164
    9. ' ==' → logprob: -9.38730239868164
    10. ' %' → logprob: -10.76230239868164

Token 92: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2731891870498657
    2. '750' → logprob: -2.398189067840576
    3. '100' → logprob: -3.148189067840576
    4. '123' → logprob: -3.398189067840576
    5. '600' → logprob: -4.523189067840576
    6. '125' → logprob: -5.148189067840576
    7. '999' → logprob: -5.648189067840576
    8. '120' → logprob: -5.773189067840576
    9. '700' → logprob: -5.773189067840576
    10. '800' → logprob: -5.898189067840576

Token 93: '135' (ID: 14953)
  Prédit: '123'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '123' → logprob: -0.9598283171653748
    2. '120' → logprob: -1.7098283767700195
    3. '750' → logprob: -1.7098283767700195
    4. '125' → logprob: -2.7098283767700195
    5. '124' → logprob: -3.0848283767700195
    6. '102' → logprob: -4.0848283767700195
    7. '105' → logprob: -4.0848283767700195
    8. ' ' → logprob: -4.2098283767700195
    9. '999' → logprob: -4.5848283767700195
    10. '100' → logprob: -4.5848283767700195

Token 94: '0' (ID: 15)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.5427373647689819
    2. ',' → logprob: -1.042737364768982
    3. ' ' → logprob: -3.1677374839782715
    4. '0' → logprob: -4.0427374839782715
    5. '5' → logprob: -5.5427374839782715
    6. '500' → logprob: -7.2927374839782715
    7. '2' → logprob: -7.7927374839782715
    8. '4' → logprob: -8.167737007141113
    9. '7' → logprob: -8.167737007141113
    10. ' =' → logprob: -8.542737007141113

Token 95: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.6372762322425842
    2. ',' → logprob: -0.7622762322425842
    3. ' ' → logprob: -5.7622761726379395
    4. ' :' → logprob: -7.5122761726379395
    5. ':' → logprob: -8.387276649475098
    6. '500' → logprob: -9.012276649475098
    7. ' ,
' → logprob: -9.262276649475098
    8. 'print' → logprob: -9.637276649475098
    9. ',
' → logprob: -9.762276649475098
    10. '```' → logprob: -10.137276649475098

Token 96: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1094751358032227
    2. '500' → logprob: -1.6094751358032227
    3. ' result' → logprob: -1.9844751358032227
    4. 'result' → logprob: -2.1094751358032227
    5. 'print' → logprob: -2.9844751358032227
    6. ' k' → logprob: -3.2344751358032227
    7. ' q' → logprob: -3.8594751358032227
    8. '5' → logprob: -4.359475135803223
    9. ' print' → logprob: -4.484475135803223
    10. '3' → logprob: -4.609475135803223

Token 97: '//' (ID: 393)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.04142050817608833
    2. '//' → logprob: -3.2914204597473145
    3. '_' → logprob: -6.2914204597473145
    4. ' ' → logprob: -6.7914204597473145
    5. ' ' → logprob: -9.166420936584473
    6. ' //
' → logprob: -10.041420936584473
    7. '_div' → logprob: -10.166420936584473
    8. '```' → logprob: -10.166420936584473
    9. '//=' → logprob: -11.228920936584473
    10. 'div' → logprob: -11.603920936584473

Token 98: '500' (ID: 3234)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.476365327835083
    2. '500' → logprob: -0.976365327835083
    3. '5' → logprob: -6.226365089416504
    4. '"' → logprob: -9.726365089416504
    5. '50' → logprob: -10.101365089416504
    6. '  ' → logprob: -10.226365089416504
    7. '`' → logprob: -10.726365089416504
    8. '```' → logprob: -10.726365089416504
    9. '3' → logprob: -10.851365089416504
    10. '2' → logprob: -11.101365089416504

Token 99: ' donne' (ID: 30004)
  Prédit: ' vaut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vaut' → logprob: -0.11715514957904816
    2. ' =' → logprob: -3.867155075073242
    3. '=' → logprob: -3.992155075073242
    4. '3' → logprob: -3.992155075073242
    5. ' ' → logprob: -4.117155075073242
    6. ' va' → logprob: -4.492155075073242
    7. '1' → logprob: -4.867155075073242
    8. ' est' → logprob: -6.242155075073242
    9. ' donnera' → logprob: -6.242155075073242
    10. '2' → logprob: -6.617155075073242

Token 100: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2014257162809372
    2. ' ' → logprob: -1.7014256715774536
    3. '
' → logprob: -11.576425552368164
    4. ' ' → logprob: -13.951425552368164
    5. '`' → logprob: -14.576425552368164
    6. '

' → logprob: -14.826425552368164
    7. ' 
' → logprob: -15.076425552368164
    8. '```' → logprob: -15.326425552368164
    9. '\
' → logprob: -15.701425552368164
    10. '' → logprob: -16.076425552368164

Token 101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004921489744447172
    2. ' ' → logprob: -7.625492095947266
    3. '
' → logprob: -12.500492095947266
    4. '

' → logprob: -15.250492095947266
    5. '`' → logprob: -16.750492095947266
    6. '```' → logprob: -16.937992095947266
    7. '\
' → logprob: -17.875492095947266
    8. '  
' → logprob: -18.000492095947266
    9. ' 
' → logprob: -18.500492095947266
    10. '  ' → logprob: -18.500492095947266

Token 102: ' parce' (ID: 27146)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.601886510848999
    2. 'result' → logprob: -1.726886510848999
    3. 'Q' → logprob: -2.476886510848999
    4. 'r' → logprob: -2.601886510848999
    5. 'R' → logprob: -2.726886510848999
    6. 'M' → logprob: -2.851886510848999
    7. 'nombre' → logprob: -3.226886510848999
    8. 'q' → logprob: -3.476886510848999
    9. 'print' → logprob: -3.601886510848999
    10. 'N' → logprob: -3.851886510848999

Token 103: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.06137434020638466
    2. 'que' → logprob: -2.9363744258880615
    3. ' qu' → logprob: -5.436374187469482
    4. 'qu' → logprob: -6.186374187469482
    5. '#' → logprob: -10.43637466430664
    6. ' that' → logprob: -11.18637466430664
    7. 'Que' → logprob: -12.18637466430664
    8. ' ' → logprob: -13.43637466430664
    9. ' ce' → logprob: -13.68637466430664
    10. ' N' → logprob: -13.81137466430664

Token 104: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3151325285434723
    2. '135' → logprob: -1.31513249874115
    3. '500' → logprob: -6.8151326179504395
    4. '1' → logprob: -8.315132141113281
    5. '2' → logprob: -8.690132141113281
    6. ' on' → logprob: -8.940132141113281
    7. ' ' → logprob: -9.815132141113281
    8. '100' → logprob: -10.815132141113281
    9. '130' → logprob: -10.940132141113281
    10. ' le' → logprob: -10.940132141113281

Token 105: '500' (ID: 3234)
  Prédit: '135'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '135' → logprob: -0.18696847558021545
    2. ' ' → logprob: -1.811968445777893
    3. '500' → logprob: -5.0619683265686035
    4. '2' → logprob: -7.4369683265686035
    5. '130' → logprob: -9.811968803405762
    6. '1' → logprob: -10.311968803405762
    7. ' on' → logprob: -10.686968803405762
    8. ' N' → logprob: -10.936968803405762
    9. '100' → logprob: -11.186968803405762
    10. 'l' → logprob: -11.499468803405762

Token 106: ' tient' (ID: 69541)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1055316925048828
    2. ' *' → logprob: -1.2305316925048828
    3. ' fois' → logprob: -1.7305316925048828
    4. ' tient' → logprob: -2.230531692504883
    5. 'fois' → logprob: -3.480531692504883
    6. ' rent' → logprob: -4.230531692504883
    7. '2' → logprob: -4.980531692504883
    8. ' est' → logprob: -4.980531692504883
    9. ' x' → logprob: -5.605531692504883
    10. ' va' → logprob: -5.855531692504883

Token 107: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.41557222604751587
    2. 'dans' → logprob: -2.290572166442871
    3. 'ent' → logprob: -2.415572166442871
    4. ' ' → logprob: -2.665572166442871
    5. 'de' → logprob: -3.665572166442871
    6. ' deux' → logprob: -3.915572166442871
    7. ' dans' → logprob: -5.040572166442871
    8. '```' → logprob: -5.290572166442871
    9. 'fois' → logprob: -5.665572166442871
    10. '3' → logprob: -6.040572166442871

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13174769282341003
    2. 'ent' → logprob: -3.0067477226257324
    3. 'dans' → logprob: -3.1317477226257324
    4. 'de' → logprob: -3.6317477226257324
    5. ' ' → logprob: -6.506747722625732
    6. 'exact' → logprob: -7.506747722625732
    7. 'au' → logprob: -7.756747722625732
    8. 'bien' → logprob: -8.256747245788574
    9. 'fois' → logprob: -8.381747245788574
    10. 'tro' → logprob: -8.506747245788574

Token 109: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.2616826891899109
    2. ' fois' → logprob: -2.0116827487945557
    3. '<|end|>' → logprob: -2.5116827487945557
    4. 'ent' → logprob: -4.511682510375977
    5. ' ' → logprob: -6.136682510375977
    6. 'times' → logprob: -7.386682510375977
    7. 'dans' → logprob: -8.011682510375977
    8. ' ' → logprob: -8.511682510375977
    9. '<|end|>' → logprob: -8.761682510375977
    10. ' veces' → logprob: -9.761682510375977

Token 110: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.1728038191795349
    2. 'dans' → logprob: -1.9228038787841797
    3. ' dedans' → logprob: -5.04780387878418
    4. ' ' → logprob: -6.42280387878418
    5. 'ent' → logprob: -6.67280387878418
    6. ' ' → logprob: -7.54780387878418
    7. ' in' → logprob: -7.54780387878418
    8. ' (' → logprob: -7.92280387878418
    9. 'N' → logprob: -8.04780387878418
    10. ' fois' → logprob: -9.04780387878418

Token 111: ' ' (ID: 220)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.24812015891075134
    2. '135' → logprob: -2.123120069503784
    3. 'N' → logprob: -2.373120069503784
    4. ' ' → logprob: -4.998120307922363
    5. ' ' → logprob: -10.373120307922363
    6. '1' → logprob: -10.623120307922363
    7. '136' → logprob: -10.998120307922363
    8. '130' → logprob: -11.373120307922363
    9. '134' → logprob: -11.498120307922363
    10. 'l' → logprob: -12.248120307922363

Token 112: '135' (ID: 14953)
  Prédit: '135'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '135' → logprob: -0.14418067038059235
    2. 'N' → logprob: -2.1441807746887207
    3. ' N' → logprob: -4.769180774688721
    4. ' ' → logprob: -4.769180774688721
    5. '1' → logprob: -9.769180297851562
    6. '130' → logprob: -10.519180297851562
    7. '134' → logprob: -11.331680297851562
    8. 'l' → logprob: -12.019180297851562
    9. '13' → logprob: -12.644180297851562
    10. '136' → logprob: -12.706680297851562

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -15.000000953674316
    3. '۰' → logprob: -16.062501907348633
    4. 'O' → logprob: -16.125001907348633
    5. '00' → logprob: -16.125001907348633
    6. 'o' → logprob: -16.187501907348633
    7. '０' → logprob: -16.562501907348633
    8. '```' → logprob: -16.750001907348633
    9. '000' → logprob: -17.000001907348633
    10. '০' → logprob: -17.250001907348633

Token 114: ' (' (ID: 350)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.0584001541137695
    2. 'q' → logprob: -1.8084001541137695
    3. 'R' → logprob: -2.1834001541137695
    4. 'result' → logprob: -2.3084001541137695
    5. 'M' → logprob: -2.9334001541137695
    6. 'nombre' → logprob: -3.3084001541137695
    7. 'count' → logprob: -3.5584001541137695
    8. 'fois' → logprob: -3.9334001541137695
    9. 'print' → logprob: -4.3084001541137695
    10. 'quot' → logprob: -4.3084001541137695

Token 115: 'le' (ID: 282)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.9030484557151794
    2. ' ' → logprob: -1.2780485153198242
    3. '135' → logprob: -1.9030485153198242
    4. ')' → logprob: -2.278048515319824
    5. '1' → logprob: -3.278048515319824
    6. ' N' → logprob: -4.903048515319824
    7. '3' → logprob: -5.778048515319824
    8. '2' → logprob: -5.778048515319824
    9. ' (' → logprob: -6.403048515319824
    10. 'N' → logprob: -6.778048515319824

Token 116: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.23222413659095764
    2. 'reste' → logprob: -2.107224225997925
    3. ' code' → logprob: -3.482224225997925
    4. 'rest' → logprob: -4.732223987579346
    5. 're' → logprob: -4.982223987579346
    6. 'r' → logprob: -5.107223987579346
    7. ' rest' → logprob: -5.357223987579346
    8. ' restant' → logprob: -5.732223987579346
    9. ' )' → logprob: -6.107223987579346
    10. 's' → logprob: -6.232223987579346

Token 117: ' n' (ID: 297)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.054392654448747635
    2. ' vaut' → logprob: -3.3043925762176514
    3. ' =' → logprob: -5.6793928146362305
    4. '135' → logprob: -6.0543928146362305
    5. 'est' → logprob: -6.0543928146362305
    6. '=' → logprob: -6.3043928146362305
    7. ' ' → logprob: -6.3043928146362305
    8. ' de' → logprob: -6.9293928146362305
    9. ' sera' → logprob: -7.9293928146362305
    10. ' étant' → logprob: -8.05439281463623

Token 118: ''est' (ID: 6616)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.263069987297058
    2. 'e' → logprob: -1.638069987297058
    3. 'est' → logprob: -2.0130701065063477
    4. ''est' → logprob: -2.2630701065063477
    5. ' vaut' → logprob: -2.3880701065063477
    6. ' =' → logprob: -3.2630701065063477
    7. 'a' → logprob: -3.3880701065063477
    8. ' pas' → logprob: -3.7630701065063477
    9. ' ne' → logprob: -4.013070106506348
    10. ' n' → logprob: -4.263070106506348

Token 119: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.16131600737571716
    2. 'pas' → logprob: -1.9113160371780396
    3. ' rien' → logprob: -8.78631591796875
    4. 's' → logprob: -8.91131591796875
    5. '3' → logprob: -9.03631591796875
    6. '1' → logprob: -9.28631591796875
    7. ')' → logprob: -9.28631591796875
    8. 'p' → logprob: -9.78631591796875
    9. 't' → logprob: -9.91131591796875
    10. ' que' → logprob: -10.16131591796875

Token 120: ' pris' (ID: 17549)
  Prédit: 'pris'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pris' → logprob: -0.8533094525337219
    2. 'pas' → logprob: -1.8533093929290771
    3. 'com' → logprob: -1.9783093929290771
    4. 'con' → logprob: -2.103309392929077
    5. ' pris' → logprob: -2.478309392929077
    6. 'comp' → logprob: -4.103309631347656
    7. 'gard' → logprob: -4.103309631347656
    8. 'g' → logprob: -4.978309631347656
    9. 'aff' → logprob: -5.228309631347656
    10. 'pr' → logprob: -5.353309631347656

Token 121: ' en' (ID: 469)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.8646289110183716
    2. 'en' → logprob: -1.2396289110183716
    3. ' pas' → logprob: -1.6146289110183716
    4. ' en' → logprob: -2.489628791809082
    5. ')' → logprob: -5.989628791809082
    6. '#' → logprob: -6.614628791809082
    7. '_pas' → logprob: -6.864628791809082
    8. '1' → logprob: -8.489628791809082
    9. ' ' → logprob: -8.489628791809082
    10. 'ent' → logprob: -8.614628791809082

Token 122: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0032379592303186655
    2. ' compte' → logprob: -5.753237724304199
    3. ' ' → logprob: -11.5032377243042
    4. 'com' → logprob: -11.6282377243042
    5. 'count' → logprob: -12.0032377243042
    6. '```' → logprob: -12.2532377243042
    7. 'account' → logprob: -12.5032377243042
    8. '
' → logprob: -12.6282377243042
    9. '	comp' → logprob: -12.6282377243042
    10. 'Compte' → logprob: -13.1282377243042

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021696516778320074
    2. ')
' → logprob: -6.252169609069824
    3. '#' → logprob: -9.502169609069824
    4. ' )' → logprob: -9.752169609069824
    5. '`)' → logprob: -10.127169609069824
    6. '))' → logprob: -11.252169609069824
    7. ')

' → logprob: -11.377169609069824
    8. '')' → logprob: -11.752169609069824
    9. ').' → logprob: -12.252169609069824
    10. ')
' → logprob: -12.377169609069824

Token 124: 'A' (ID: 32)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.5064185857772827
    2. 'q' → logprob: -2.2564187049865723
    3. 'Q' → logprob: -2.3814187049865723
    4. 'nombre' → logprob: -2.6314187049865723
    5. 'nb' → logprob: -2.7564187049865723
    6. 'count' → logprob: -2.8814187049865723
    7. 'quot' → logprob: -3.0064187049865723
    8. 'M' → logprob: -3.1314187049865723
    9. 'fois' → logprob: -3.3814187049865723
    10. 'times' → logprob: -3.5064187049865723

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08125150948762894
    2. '=' → logprob: -3.081251621246338
    3. ' ' → logprob: -3.581251621246338
    4. '_' → logprob: -5.581251621246338
    5. 's' → logprob: -8.95625114440918
    6. '500' → logprob: -9.58125114440918
    7. ' =
' → logprob: -10.45625114440918
    8. 'r' → logprob: -10.58125114440918
    9. 'b' → logprob: -10.58125114440918
    10. ' ' → logprob: -10.58125114440918

Token 126: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.12692947685718536
    2. 'N' → logprob: -2.126929521560669
    3. ' ' → logprob: -13.87692928314209
    4. ' ' → logprob: -14.75192928314209
    5. '	N' → logprob: -16.626930236816406
    6. 'n' → logprob: -19.251930236816406
    7. '  ' → logprob: -20.126930236816406
    8. '`' → logprob: -20.376930236816406
    9. '0' → logprob: -20.376930236816406
    10. ' 
' → logprob: -20.501930236816406

Token 127: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5759449601173401
    2. ' //' → logprob: -0.8259449601173401
    3. '//=' → logprob: -13.575944900512695
    4. ' ' → logprob: -13.700944900512695
    5. '```' → logprob: -13.950944900512695
    6. '#' → logprob: -13.950944900512695
    7. ' ' → logprob: -14.075944900512695
    8. ')//' → logprob: -16.200944900512695
    9. ' //
' → logprob: -16.200944900512695
    10. '500' → logprob: -16.950944900512695

Token 128: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.8908587662735954e-05
    2. '5' → logprob: -11.500019073486328
    3. ' ' → logprob: -11.875019073486328
    4. '50' → logprob: -13.250019073486328
    5. '501' → logprob: -18.125019073486328
    6. '   ' → logprob: -18.375019073486328
    7. '```' → logprob: -18.500019073486328
    8. '  ' → logprob: -18.625019073486328
    9. '`' → logprob: -19.250019073486328
    10. '100' → logprob: -20.000019073486328

Token 129: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '5' → logprob: -18.125
    4. '50' → logprob: -18.5
    5. '```' → logprob: -19.625
    6. '501' → logprob: -20.5
    7. '`' → logprob: -20.625
    8. '   ' → logprob: -21.75
    9. '100' → logprob: -22.25
    10. '  ' → logprob: -22.625

Token 130: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: '#' (ID: 2)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8171697854995728
    2. '#' → logprob: -1.3171697854995728
    3. '\n' → logprob: -2.567169666290283
    4. '
' → logprob: -2.942169666290283
    5. '<|end|>' → logprob: -3.442169666290283
    6. '+' → logprob: -3.567169666290283
    7. ' ' → logprob: -3.942169666290283
    8. ' 
' → logprob: -4.317169666290283
    9. '```' → logprob: -4.692169666290283
    10. '  
' → logprob: -4.692169666290283

Token 132: ' Cal' (ID: 4453)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6724135279655457
    2. 'reste' → logprob: -1.5474135875701904
    3. 'print' → logprob: -1.9224135875701904
    4. 'rest' → logprob: -2.9224135875701904
    5. 'N' → logprob: -3.5474135875701904
    6. 're' → logprob: -3.6724135875701904
    7. '#' → logprob: -5.047413349151611
    8. 'B' → logprob: -5.297413349151611
    9. 'remaining' → logprob: -5.672413349151611
    10. 'r' → logprob: -5.922413349151611

Token 133: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.39976298809051514
    2. 'cul' → logprob: -1.7747629880905151
    3. 'c' → logprob: -1.8997629880905151
    4. 'cules' → logprob: -4.899763107299805
    5. 'culate' → logprob: -6.524763107299805
    6. '```' → logprob: -7.774763107299805
    7. '#' → logprob: -7.899763107299805
    8. 'C' → logprob: -9.024763107299805
    9. 'cula' → logprob: -9.524763107299805
    10. 'e' → logprob: -9.774763107299805

Token 134: ' maintenant' (ID: 35735)
  Prédit: ' combien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combien' → logprob: -0.4859829246997833
    2. ' le' → logprob: -1.735982894897461
    3. 'le' → logprob: -1.985982894897461
    4. 'N' → logprob: -4.110982894897461
    5. ' la' → logprob: -4.360982894897461
    6. ' N' → logprob: -4.360982894897461
    7. 'B' → logprob: -4.610982894897461
    8. ' ' → logprob: -5.110982894897461
    9. 'comb' → logprob: -5.360982894897461
    10. ' B' → logprob: -5.860982894897461

Token 135: ' combien' (ID: 106648)
  Prédit: ' combien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combien' → logprob: -0.23307055234909058
    2. ' le' → logprob: -2.1080706119537354
    3. 'le' → logprob: -2.9830706119537354
    4. 'comb' → logprob: -3.7330706119537354
    5. ' la' → logprob: -4.858070373535156
    6. ' N' → logprob: -6.358070373535156
    7. 'N' → logprob: -7.358070373535156
    8. 'la' → logprob: -8.108070373535156
    9. ' ' → logprob: -8.108070373535156
    10. ' comb' → logprob: -8.983070373535156

Token 136: ' reste' (ID: 26769)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04363890737295151
    2. 'de' → logprob: -3.2936389446258545
    3. '_' → logprob: -6.168638706207275
    4. ' d' → logprob: -6.543638706207275
    5. 'd' → logprob: -7.418638706207275
    6. '500' → logprob: -7.418638706207275
    7. ' ' → logprob: -7.668638706207275
    8. ' fois' → logprob: -9.793639183044434
    9. ' reste' → logprob: -10.043639183044434
    10. '    ' → logprob: -10.418639183044434

Token 137: '-t' (ID: 2378)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6633787155151367
    2. ' à' → logprob: -1.7883787155151367
    3. '_a' → logprob: -2.1633787155151367
    4. ' ' → logprob: -2.2883787155151367
    5. 'r' → logprob: -3.7883787155151367
    6. 'nt' → logprob: -4.163378715515137
    7. ' =' → logprob: -4.538378715515137
    8. '_t' → logprob: -4.663378715515137
    9. 'A' → logprob: -5.163378715515137
    10. 't' → logprob: -5.413378715515137

Token 138: '-il' (ID: 25313)
  Prédit: '-il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-il' → logprob: -0.5659491419792175
    2. 'ient' → logprob: -1.3159492015838623
    3. 'il' → logprob: -1.9409492015838623
    4. 'enant' → logprob: -6.190948963165283
    5. 'imes' → logprob: -6.190948963165283
    6. 'otal' → logprob: -6.315948963165283
    7. '_il' → logprob: -6.315948963165283
    8. 'ant' → logprob: -6.440948963165283
    9. '_' → logprob: -7.190948963165283
    10. 'ype' → logprob: -7.315948963165283

Token 139: ' dans' (ID: 2671)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.0129709243774414
    2. ' ' → logprob: -1.2629709243774414
    3. 'N' → logprob: -2.6379709243774414
    4. 'à' → logprob: -2.8879709243774414
    5. ' dans' → logprob: -3.2629709243774414
    6. 'dans' → logprob: -3.7629709243774414
    7. ' =' → logprob: -3.7629709243774414
    8. ' après' → logprob: -3.8879709243774414
    9. 'a' → logprob: -4.262970924377441
    10. ' N' → logprob: -4.387970924377441

Token 140: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003818606724962592
    2. ' N' → logprob: -5.878818511962891
    3. 'la' → logprob: -7.753818511962891
    4. 'l' → logprob: -8.25381851196289
    5. 'le' → logprob: -8.25381851196289
    6. ' la' → logprob: -11.12881851196289
    7. ' le' → logprob: -11.25381851196289
    8. 'n' → logprob: -12.37881851196289
    9. 'A' → logprob: -12.37881851196289
    10. 'a' → logprob: -12.75381851196289

Token 141: ' après' (ID: 16460)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4719695746898651
    2. ' %' → logprob: -1.0969696044921875
    3. ' ' → logprob: -4.0969696044921875
    4. '_' → logprob: -5.0969696044921875
    5. ',' → logprob: -5.4719696044921875
    6. 'R' → logprob: -5.8469696044921875
    7. 'rest' → logprob: -6.0969696044921875
    8. ' N' → logprob: -6.0969696044921875
    9. 'r' → logprob: -6.5969696044921875
    10. ' R' → logprob: -6.9719696044921875

Token 142: ' avoir' (ID: 16595)
  Prédit: ' avoir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoir' → logprob: -0.011370349675416946
    2. 'avoir' → logprob: -4.6363701820373535
    3. ' le' → logprob: -7.6363701820373535
    4. 'A' → logprob: -8.136370658874512
    5. ' la' → logprob: -8.261370658874512
    6. ''avoir' → logprob: -9.136370658874512
    7. ' A' → logprob: -9.261370658874512
    8. 'le' → logprob: -9.886370658874512
    9. 'la' → logprob: -9.886370658874512
    10. ' sou' → logprob: -10.011370658874512

Token 143: ' pris' (ID: 17549)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.4067034423351288
    2. ' en' → logprob: -2.531703472137451
    3. ' sou' → logprob: -2.531703472137451
    4. ' retir' → logprob: -2.531703472137451
    5. 'sou' → logprob: -3.156703472137451
    6. 'fait' → logprob: -4.531703472137451
    7. ' fait' → logprob: -4.531703472137451
    8. 'A' → logprob: -4.656703472137451
    9. 's' → logprob: -5.656703472137451
    10. 'ret' → logprob: -6.156703472137451

Token 144: ' les' (ID: 1341)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.8889767527580261
    2. 'A' → logprob: -1.013976812362671
    3. ' en' → logprob: -1.888976812362671
    4. '500' → logprob: -3.388976812362671
    5. ' ' → logprob: -4.138976573944092
    6. ' le' → logprob: -4.638976573944092
    7. ' les' → logprob: -5.513976573944092
    8. ' la' → logprob: -5.888976573944092
    9. 'en' → logprob: -6.138976573944092
    10. '_' → logprob: -7.513976573944092

Token 145: ' parts' (ID: 7881)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8350142240524292
    2. '500' → logprob: -1.0850142240524292
    3. ' billets' → logprob: -2.4600143432617188
    4. 'A' → logprob: -3.2100143432617188
    5. 'multip' → logprob: -3.4600143432617188
    6. ' A' → logprob: -3.4600143432617188
    7. ' multip' → logprob: -4.585014343261719
    8. 'bil' → logprob: -5.210014343261719
    9. ' parts' → logprob: -5.460014343261719
    10. 'fois' → logprob: -6.210014343261719

Token 146: ' de' (ID: 334)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.135729193687439
    2. ' ' → logprob: -1.510729193687439
    3. ' =' → logprob: -2.0107293128967285
    4. '%' → logprob: -2.2607293128967285
    5. 'N' → logprob: -2.3857293128967285
    6. '_' → logprob: -2.6357293128967285
    7. '=' → logprob: -3.7607293128967285
    8. ' de' → logprob: -4.2607293128967285
    9. 'de' → logprob: -6.0107293128967285
    10. ',' → logprob: -6.5107293128967285

Token 147: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.5775163769721985
    2. ' ' → logprob: -0.8275163769721985
    3. ' A' → logprob: -7.202516555786133
    4. 'A' → logprob: -7.327516555786133
    5. ' N' → logprob: -9.702516555786133
    6. ' ' → logprob: -10.452516555786133
    7. 'N' → logprob: -10.577516555786133
    8. '  ' → logprob: -12.390016555786133
    9. '#' → logprob: -12.515016555786133
    10. 'l' → logprob: -12.515016555786133

Token 148: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.006147888954728842
    2. ' ' → logprob: -5.631147861480713
    3. 'A' → logprob: -6.131147861480713
    4. 'N' → logprob: -8.381148338317871
    5. ' A' → logprob: -9.256148338317871
    6. ' N' → logprob: -11.006148338317871
    7. '5' → logprob: -12.318648338317871
    8. '50' → logprob: -12.943648338317871
    9. '"' → logprob: -13.006148338317871
    10. 'C' → logprob: -13.193648338317871

Token 149: ' déjà' (ID: 21229)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.15487051010131836
    2. ' R' → logprob: -3.4048705101013184
    3. 'rest' → logprob: -3.9048705101013184
    4. 'r' → logprob: -4.029870510101318
    5. 's' → logprob: -4.029870510101318
    6. ' ' → logprob: -4.154870510101318
    7. ',' → logprob: -5.029870510101318
    8. '_rest' → logprob: -5.529870510101318
    9. ' ,' → logprob: -5.654870510101318
    10. 'reste' → logprob: -6.029870510101318

Token 150: ' compt' (ID: 39238)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.984838604927063
    2. 'prises' → logprob: -1.234838604927063
    3. 'com' → logprob: -3.1098384857177734
    4. 'util' → logprob: -3.2348384857177734
    5. 'ex' → logprob: -3.4848384857177734
    6. 'dé' → logprob: -3.8598384857177734
    7. 'en' → logprob: -3.8598384857177734
    8. ' prises' → logprob: -3.8598384857177734
    9. 'sou' → logprob: -4.234838485717773
    10. 'prise' → logprob: -4.359838485717773

Token 151: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.9454501867294312
    2. 'ées' → logprob: -1.1954501867294312
    3. 'u' → logprob: -1.4454501867294312
    4. 'ue' → logprob: -2.9454503059387207
    5. 'ée' → logprob: -4.695450305938721
    6. 'ues' → logprob: -5.320450305938721
    7. 'és' → logprob: -5.695450305938721
    8. 'ut' → logprob: -7.570450305938721
    9. 'e' → logprob: -7.570450305938721
    10. 'ued' → logprob: -7.695450305938721

Token 152: '
' (ID: 198)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.10356755554676056
    2. ' R' → logprob: -2.478567600250244
    3. '
' → logprob: -5.853567600250244
    4. 'r' → logprob: -6.228567600250244
    5. 'rest' → logprob: -6.228567600250244
    6. ' 
' → logprob: -6.728567600250244
    7. 'N' → logprob: -6.978567600250244
    8. ' reste' → logprob: -7.103567600250244
    9. ' remainder' → logprob: -7.478567600250244
    10. '%' → logprob: -7.603567600250244

Token 153: '#' (ID: 2)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.07955244183540344
    2. ' R' → logprob: -2.704552412033081
    3. 'reste' → logprob: -6.07955265045166
    4. 'rest' → logprob: -6.32955265045166
    5. 'N' → logprob: -6.45455265045166
    6. 'r' → logprob: -6.82955265045166
    7. '
' → logprob: -6.95455265045166
    8. ' reste' → logprob: -7.57955265045166
    9. ' N' → logprob: -8.70455265045166
    10. 're' → logprob: -8.95455265045166

Token 154: ' Pour' (ID: 13931)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.06771281361579895
    2. 'reste' → logprob: -2.9427127838134766
    3. 'rest' → logprob: -5.067712783813477
    4. 're' → logprob: -6.192712783813477
    5. ' R' → logprob: -6.317712783813477
    6. 'r' → logprob: -6.692712783813477
    7. 'B' → logprob: -7.192712783813477
    8. ' reste' → logprob: -8.567712783813477
    9. 'remaining' → logprob: -8.692712783813477
    10. 'N' → logprob: -9.942712783813477

Token 155: ' cela' (ID: 17542)
  Prédit: ' cela'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cela' → logprob: -0.020880401134490967
    2. ' calcul' → logprob: -5.395880222320557
    3. 'cela' → logprob: -6.020880222320557
    4. ' le' → logprob: -6.270880222320557
    5. ' récupérer' → logprob: -6.395880222320557
    6. ' ça' → logprob: -6.770880222320557
    7. ' rester' → logprob: -7.020880222320557
    8. ' ceci' → logprob: -7.020880222320557
    9. ' ce' → logprob: -7.270880222320557
    10. 'N' → logprob: -7.395880222320557

Token 156: ',' (ID: 11)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.6965299844741821
    2. 'reste' → logprob: -1.6965299844741821
    3. ' on' → logprob: -1.8215299844741821
    4. ',' → logprob: -2.0715298652648926
    5. ' reste' → logprob: -2.4465298652648926
    6. ' R' → logprob: -2.9465298652648926
    7. 'rest' → logprob: -3.1965298652648926
    8. ':' → logprob: -3.3215298652648926
    9. 'r' → logprob: -3.9465298652648926
    10. 'on' → logprob: -3.9465298652648926

Token 157: ' on' (ID: 402)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5293666124343872
    2. 'N' → logprob: -1.7793666124343872
    3. ' R' → logprob: -2.5293664932250977
    4. 'reste' → logprob: -2.6543664932250977
    5. ' N' → logprob: -3.0293664932250977
    6. ' reste' → logprob: -4.154366493225098
    7. 'rest' → logprob: -4.279366493225098
    8. 'r' → logprob: -5.404366493225098
    9. 're' → logprob: -5.779366493225098
    10. ' on' → logprob: -6.779366493225098

Token 158: ' enl' (ID: 116494)
  Prédit: ' utilise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilise' → logprob: -0.10394123941659927
    2. 'util' → logprob: -2.6039412021636963
    3. '%' → logprob: -4.853941440582275
    4. ' use' → logprob: -5.853941440582275
    5. 'use' → logprob: -5.978941440582275
    6. 'emplo' → logprob: -6.353941440582275
    7. ' prend' → logprob: -6.603941440582275
    8. ' prends' → logprob: -6.728941440582275
    9. ' calc' → logprob: -6.978941440582275
    10. '=' → logprob: -7.103941440582275

Token 159: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.022920479997992516
    2. 'eve' → logprob: -3.8979203701019287
    3. 'e' → logprob: -6.147920608520508
    4. 'ever' → logprob: -10.397920608520508
    5. 'èves' → logprob: -10.647920608520508
    6. 'ev' → logprob: -10.647920608520508
    7. 'èv' → logprob: -11.022920608520508
    8. 'eft' → logprob: -11.022920608520508
    9. 'è' → logprob: -11.522920608520508
    10. 'eff' → logprob: -11.522920608520508

Token 160: ' à' (ID: 1221)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.32177650928497314
    2. 'A' → logprob: -1.3217765092849731
    3. ' N' → logprob: -5.821776390075684
    4. ' ' → logprob: -5.946776390075684
    5. 'N' → logprob: -7.071776390075684
    6. ' le' → logprob: -7.696776390075684
    7. ' la' → logprob: -8.196776390075684
    8. ' (' → logprob: -8.196776390075684
    9. '500' → logprob: -8.196776390075684
    10. ' l' → logprob: -8.946776390075684

Token 161: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.48004719614982605
    2. ' N' → logprob: -0.9800472259521484
    3. ' A' → logprob: -5.855047225952148
    4. 'A' → logprob: -5.980047225952148
    5. ' ' → logprob: -7.605047225952148
    6. '500' → logprob: -10.355047225952148
    7. ' (' → logprob: -11.730047225952148
    8. '	N' → logprob: -12.230047225952148
    9. ' ' → logprob: -12.542547225952148
    10. '(N' → logprob: -13.417547225952148

Token 162: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2130882889032364
    2. 'A' → logprob: -1.7130882740020752
    3. ' le' → logprob: -5.338088512420654
    4. ' la' → logprob: -5.713088512420654
    5. ' ' → logprob: -6.463088512420654
    6. ' (' → logprob: -7.213088512420654
    7. ' l' → logprob: -7.588088512420654
    8. ' les' → logprob: -8.838088035583496
    9. 'le' → logprob: -9.213088035583496
    10. '(A' → logprob: -9.213088035583496

Token 163: ' quantité' (ID: 89219)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.28187811374664307
    2. ' A' → logprob: -1.406878113746643
    3. '(A' → logprob: -7.7818779945373535
    4. '500' → logprob: -9.156878471374512
    5. ' (' → logprob: -9.281878471374512
    6. ' ' → logprob: -9.406878471374512
    7. '(' → logprob: -11.531878471374512
    8. '	A' → logprob: -12.781878471374512
    9. '   ' → logprob: -12.906878471374512
    10. '```' → logprob: -13.031878471374512

Token 164: ' prise' (ID: 43816)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18156291544437408
    2. ' A' → logprob: -1.806562900543213
    3. '500' → logprob: -7.181562900543213
    4. ' ' → logprob: -7.806562900543213
    5. ' de' → logprob: -8.181563377380371
    6. 'de' → logprob: -9.556563377380371
    7. '(A' → logprob: -9.806563377380371
    8. '_A' → logprob: -10.056563377380371
    9. '   ' → logprob: -10.056563377380371
    10. '```' → logprob: -10.306563377380371

Token 165: ' par' (ID: 686)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7046130299568176
    2. ' A' → logprob: -0.7046130299568176
    3. ' (' → logprob: -5.204613208770752
    4. ' ' → logprob: -5.829613208770752
    5. '(A' → logprob: -7.579613208770752
    6. ' de' → logprob: -7.704613208770752
    7. '_A' → logprob: -7.704613208770752
    8. '(' → logprob: -8.204612731933594
    9. '_' → logprob: -8.954612731933594
    10. ',' → logprob: -9.204612731933594

Token 166: ' les' (ID: 1341)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3669399321079254
    2. 'A' → logprob: -1.241939902305603
    3. ' ' → logprob: -4.116940021514893
    4. '500' → logprob: -6.241940021514893
    5. ' les' → logprob: -10.491939544677734
    6. ' (' → logprob: -11.491939544677734
    7. '(A' → logprob: -11.741939544677734
    8. '  ' → logprob: -12.491939544677734
    9. ' ' → logprob: -12.491939544677734
    10. '#' → logprob: -12.491939544677734

Token 167: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16592824459075928
    2. '500' → logprob: -2.165928363800049
    3. ' A' → logprob: -3.415928363800049
    4. ' ' → logprob: -5.665928363800049
    5. 'multip' → logprob: -7.915928363800049
    6. 'pieces' → logprob: -8.16592788696289
    7. 'parts' → logprob: -8.41592788696289
    8. '#' → logprob: -8.54092788696289
    9. 'B' → logprob: -8.66592788696289
    10. ' parts' → logprob: -9.41592788696289

Token 168: '500' (ID: 3234)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0027573297265917063
    2. '500' → logprob: -6.002757549285889
    3. ' A' → logprob: -8.50275707244873
    4. ' ' → logprob: -10.25275707244873
    5. '(' → logprob: -10.87775707244873
    6. '(A' → logprob: -11.87775707244873
    7. 'B' → logprob: -12.12775707244873
    8. 'multip' → logprob: -13.37775707244873
    9. '#' → logprob: -13.62775707244873
    10. '5' → logprob: -13.87775707244873

Token 169: ',' (ID: 11)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.778823733329773
    2. ' A' → logprob: -1.028823733329773
    3. 'R' → logprob: -2.5288238525390625
    4. ' N' → logprob: -3.2788238525390625
    5. 'N' → logprob: -3.6538238525390625
    6. ' R' → logprob: -3.9038238525390625
    7. '*' → logprob: -5.4038238525390625
    8. ' ' → logprob: -5.5288238525390625
    9. '500' → logprob: -6.4038238525390625
    10. 'rest' → logprob: -6.5288238525390625

Token 170: ' soit' (ID: 17293)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6338648200035095
    2. 'A' → logprob: -0.7588648200035095
    3. '500' → logprob: -7.133864879608154
    4. ' ' → logprob: -8.133864402770996
    5. ' ' → logprob: -10.883864402770996
    6. 's' → logprob: -11.508864402770996
    7. 'N' → logprob: -11.571364402770996
    8. '5' → logprob: -11.696364402770996
    9. 'a' → logprob: -11.946364402770996
    10. ' ce' → logprob: -12.133864402770996

Token 171: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.22601188719272614
    2. ' A' → logprob: -1.601011872291565
    3. ' ' → logprob: -7.851011753082275
    4. '500' → logprob: -9.226012229919434
    5. '(A' → logprob: -9.726012229919434
    6. ' (' → logprob: -10.976012229919434
    7. '`' → logprob: -11.476012229919434
    8. '(' → logprob: -11.601012229919434
    9. ' ' → logprob: -12.476012229919434
    10. '	A' → logprob: -12.976012229919434

Token 172: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38688334822654724
    2. ' *' → logprob: -1.1368833780288696
    3. ' ' → logprob: -11.761883735656738
    4. ' ' → logprob: -13.136883735656738
    5. '500' → logprob: -13.136883735656738
    6. '```' → logprob: -15.511883735656738
    7. '0' → logprob: -16.386882781982422
    8. '450' → logprob: -16.761882781982422
    9. '**' → logprob: -17.011882781982422
    10. '50' → logprob: -17.886882781982422

Token 173: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -17.25004005432129
    4. '  ' → logprob: -18.12504005432129
    5. '`' → logprob: -18.87504005432129
    6. '   ' → logprob: -19.25004005432129
    7. '5' → logprob: -19.62504005432129
    8. '50' → logprob: -19.87504005432129
    9. ' ' → logprob: -20.00004005432129
    10. '501' → logprob: -20.37504005432129

Token 174: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18259361386299133
    2. '
' → logprob: -2.307593584060669
    3. 'R' → logprob: -3.432593584060669
    4. '\n' → logprob: -4.057593822479248
    5. '' → logprob: -5.807593822479248
    6. 'r' → logprob: -5.807593822479248
    7. 'rest' → logprob: -5.932593822479248
    8. 'N' → logprob: -6.057593822479248
    9. '\' → logprob: -6.557593822479248
    10. ' 
' → logprob: -6.807593822479248

Token 175: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4276154935359955
    2. 'R' → logprob: -1.1776155233383179
    3. '
' → logprob: -3.9276154041290283
    4. 'N' → logprob: -4.802615642547607
    5. 'rest' → logprob: -6.177615642547607
    6. ' 
' → logprob: -6.177615642547607
    7. ' R' → logprob: -6.677615642547607
    8. '' → logprob: -7.052615642547607
    9. 'r' → logprob: -7.052615642547607
    10. '

' → logprob: -7.052615642547607

Token 176: ' On' (ID: 2160)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.035467881709337234
    2. ' R' → logprob: -4.160468101501465
    3. 'N' → logprob: -4.660468101501465
    4. 'reste' → logprob: -5.785468101501465
    5. 'rest' → logprob: -6.535468101501465
    6. 'r' → logprob: -6.535468101501465
    7. '
' → logprob: -7.035468101501465
    8. 'remaining' → logprob: -7.910468101501465
    9. ' reste' → logprob: -8.035468101501465
    10. 're' → logprob: -8.035468101501465

Token 177: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26148930191993713
    2. 'reste' → logprob: -2.1364893913269043
    3. 'continue' → logprob: -3.2614893913269043
    4. 'r' → logprob: -3.5114893913269043
    5. ' =' → logprob: -4.761489391326904
    6. 'N' → logprob: -4.886489391326904
    7. 'rest' → logprob: -5.261489391326904
    8. 'contin' → logprob: -5.511489391326904
    9. 'rem' → logprob: -5.761489391326904
    10. '#' → logprob: -5.886489391326904

Token 178: ' alors' (ID: 17971)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6461239457130432
    2. ' R' → logprob: -1.2711238861083984
    3. 'N' → logprob: -3.1461238861083984
    4. ' N' → logprob: -3.2711238861083984
    5. ' ' → logprob: -3.8961238861083984
    6. ' B' → logprob: -3.8961238861083984
    7. 'B' → logprob: -4.021123886108398
    8. ' reste' → logprob: -4.833623886108398
    9. 'reste' → logprob: -4.958623886108398
    10. 'r' → logprob: -5.146123886108398

Token 179: ' "' (ID: 392)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.28515782952308655
    2. ' R' → logprob: -2.6601579189300537
    3. 'N' → logprob: -3.1601579189300537
    4. 'reste' → logprob: -3.1601579189300537
    5. 'B' → logprob: -3.6601579189300537
    6. 'rest' → logprob: -4.160157680511475
    7. ' reste' → logprob: -4.410157680511475
    8. ' N' → logprob: -4.910157680511475
    9. ' B' → logprob: -5.285157680511475
    10. 'M' → logprob: -5.535157680511475

Token 180: 'N' (ID: 45)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.22367815673351288
    2. 'reste' → logprob: -2.0986781120300293
    3. 'N' → logprob: -3.8486781120300293
    4. 'rest' → logprob: -3.9736781120300293
    5. ' reste' → logprob: -4.473678112030029
    6. ' R' → logprob: -4.598678112030029
    7. 'B' → logprob: -5.473678112030029
    8. 'M' → logprob: -5.973678112030029
    9. 'r' → logprob: -6.098678112030029
    10. 're' → logprob: -6.223678112030029

Token 181: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7029542326927185
    2. ' -' → logprob: -0.9529542326927185
    3. ' =' → logprob: -3.0779542922973633
    4. '=' → logprob: -3.5779542922973633
    5. '%' → logprob: -3.8279542922973633
    6. '_rest' → logprob: -5.077954292297363
    7. '_remaining' → logprob: -5.452954292297363
    8. ' -=' → logprob: -5.952954292297363
    9. ' %=' → logprob: -6.327954292297363
    10. '_re' → logprob: -6.702954292297363

Token 182: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5778232216835022
    2. 'A' → logprob: -0.8278232216835022
    3. ' (' → logprob: -6.952823162078857
    4. '(A' → logprob: -7.202823162078857
    5. ' ' → logprob: -9.327823638916016
    6. '(' → logprob: -9.702823638916016
    7. ' ' → logprob: -11.702823638916016
    8. '	A' → logprob: -11.702823638916016
    9. '   ' → logprob: -12.452823638916016
    10. '  ' → logprob: -12.452823638916016

Token 183: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0006268949946388602
    2. ' *' → logprob: -7.375627040863037
    3. '500' → logprob: -16.125627517700195
    4. ' ' → logprob: -16.375627517700195
    5. ' ' → logprob: -18.000627517700195
    6. '＊' → logprob: -18.500627517700195
    7. '*(' → logprob: -18.750627517700195
    8. '**' → logprob: -18.875627517700195
    9. '*object' → logprob: -18.875627517700195
    10. '```' → logprob: -19.000627517700195

Token 184: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '```' → logprob: -15.87548828125
    4. '  ' → logprob: -16.62548828125
    5. '50' → logprob: -16.87548828125
    6. '   ' → logprob: -17.93798828125
    7. ' ' → logprob: -18.68798828125
    8. '`' → logprob: -18.87548828125
    9. '501' → logprob: -18.87548828125
    10. '<|end|>' → logprob: -18.93798828125

Token 185: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03756982088088989
    2. '"' → logprob: -3.537569761276245
    3. ')"' → logprob: -5.787569999694824
    4. ' )' → logprob: -6.037569999694824
    5. '#' → logprob: -7.412569999694824
    6. '")' → logprob: -7.662569999694824
    7. '%' → logprob: -8.037569999694824
    8. '
' → logprob: -8.912569999694824
    9. ')
' → logprob: -9.037569999694824
    10. ' "' → logprob: -9.412569999694824

Token 186: '#' (ID: 2)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.07257068902254105
    2. 'reste' → logprob: -3.57257080078125
    3. 'rest' → logprob: -4.19757080078125
    4. 'r' → logprob: -4.82257080078125
    5. '
' → logprob: -5.32257080078125
    6. 'N' → logprob: -5.44757080078125
    7. 're' → logprob: -5.69757080078125
    8. 'remaining' → logprob: -6.57257080078125
    9. ' R' → logprob: -6.69757080078125
    10. 'B' → logprob: -7.32257080078125

Token 187: ' Ensuite' (ID: 113884)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.12857931852340698
    2. 'reste' → logprob: -2.3785793781280518
    3. 'rest' → logprob: -4.503579139709473
    4. ' R' → logprob: -5.128579139709473
    5. 're' → logprob: -5.753579139709473
    6. 'r' → logprob: -6.003579139709473
    7. 'B' → logprob: -6.628579139709473
    8. ' reste' → logprob: -6.753579139709473
    9. 'N' → logprob: -7.003579139709473
    10. 'remaining' → logprob: -7.128579139709473

Token 188: ',' (ID: 11)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.651639997959137
    2. ',' → logprob: -1.9016399383544922
    3. 'N' → logprob: -2.526639938354492
    4. 'reste' → logprob: -2.776639938354492
    5. ' on' → logprob: -3.151639938354492
    6. ' R' → logprob: -3.276639938354492
    7. 'on' → logprob: -3.401639938354492
    8. ' reste' → logprob: -4.151639938354492
    9. ' N' → logprob: -4.276639938354492
    10. 'r' → logprob: -4.651639938354492

Token 189: ' on' (ID: 402)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.32431066036224365
    2. 'R' → logprob: -2.699310779571533
    3. ' on' → logprob: -2.824310779571533
    4. ' B' → logprob: -2.949310779571533
    5. 'on' → logprob: -3.449310779571533
    6. 'N' → logprob: -3.824310779571533
    7. '#' → logprob: -4.574310779571533
    8. 'reste' → logprob: -4.699310779571533
    9. 'rest' → logprob: -5.574310779571533
    10. 'r' → logprob: -5.949310779571533

Token 190: ' cherche' (ID: 52345)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.7098096013069153
    2. 'cal' → logprob: -1.8348095417022705
    3. 'calc' → logprob: -2.0848095417022705
    4. 'continue' → logprob: -2.0848095417022705
    5. ' continue' → logprob: -3.5848095417022705
    6. ' prend' → logprob: -3.7098095417022705
    7. ' utilise' → logprob: -4.70980978012085
    8. 'calcul' → logprob: -5.08480978012085
    9. 'contin' → logprob: -5.33480978012085
    10. 'util' → logprob: -5.70980978012085

Token 191: ' combien' (ID: 106648)
  Prédit: ' combien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combien' → logprob: -0.007303233724087477
    2. 'comb' → logprob: -6.007303237915039
    3. ' à' → logprob: -6.257303237915039
    4. 'comment' → logprob: -6.507303237915039
    5. ' comment' → logprob: -8.132303237915039
    6. ' le' → logprob: -8.757303237915039
    7. ' ' → logprob: -8.757303237915039
    8. '#' → logprob: -9.132303237915039
    9. 'le' → logprob: -9.257303237915039
    10. 'à' → logprob: -9.382303237915039

Token 192: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11253303289413452
    2. 'de' → logprob: -2.4875330924987793
    3. ' //' → logprob: -4.862533092498779
    4. ' fois' → logprob: -5.487533092498779
    5. '500' → logprob: -5.737533092498779
    6. '//' → logprob: -5.737533092498779
    7. 'fois' → logprob: -6.237533092498779
    8. ' ' → logprob: -6.737533092498779
    9. 'd' → logprob: -7.487533092498779
    10. ' d' → logprob: -8.112532615661621

Token 193: ' fois' (ID: 14697)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.025403127074241638
    2. '100' → logprob: -4.275403022766113
    3. ' ' → logprob: -4.650403022766113
    4. 'fois' → logprob: -7.025403022766113
    5. ' fois' → logprob: -7.525403022766113
    6. '250' → logprob: -9.275403022766113
    7. 'cent' → logprob: -11.275403022766113
    8. ' centaines' → logprob: -11.775403022766113
    9. ' cent' → logprob: -11.900403022766113
    10. 'c' → logprob: -11.900403022766113

Token 194: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1133280098438263
    2. ' ' → logprob: -2.363327980041504
    3. '200' → logprob: -4.738327980041504
    4. '250' → logprob: -5.613327980041504
    5. '400' → logprob: -7.988327980041504
    6. '300' → logprob: -9.238327980041504
    7. ' de' → logprob: -10.113327980041504
    8. ' on' → logprob: -10.488327980041504
    9. '150' → logprob: -10.863327980041504
    10. 'de' → logprob: -11.113327980041504

Token 195: '5' (ID: 20)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6337717771530151
    2. '200' → logprob: -0.7587717771530151
    3. ' ' → logprob: -6.758771896362305
    4. '   ' → logprob: -12.883771896362305
    5. '20' → logprob: -13.008771896362305
    6. '50' → logprob: -13.258771896362305
    7. '  ' → logprob: -13.883771896362305
    8. '2' → logprob: -14.008771896362305
    9. '250' → logprob: -14.258771896362305
    10. 'l' → logprob: -14.883771896362305

Token 196: ' tient' (ID: 69541)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '00' → logprob: -0.03804619982838631
    2. '0' → logprob: -3.28804612159729
    3. ' ' → logprob: -12.538045883178711
    4. '۰۰' → logprob: -14.913045883178711
    5. '  ' → logprob: -15.538045883178711
    6. '000' → logprob: -15.663045883178711
    7. '００' → logprob: -16.16304588317871
    8. '   ' → logprob: -16.16304588317871
    9. '۰' → logprob: -16.53804588317871
    10. '٠' → logprob: -16.66304588317871

Token 197: ' dans' (ID: 2671)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.08828695118427277
    2. 'dans' → logprob: -2.963286876678467
    3. ' dans' → logprob: -3.838286876678467
    4. ' ' → logprob: -6.088286876678467
    5. ' //' → logprob: -6.088286876678467
    6. '_ent' → logprob: -6.213286876678467
    7. ' entièrement' → logprob: -6.588286876678467
    8. ' ' → logprob: -7.213286876678467
    9. ' entier' → logprob: -7.838286876678467
    10. '//' → logprob: -7.963286876678467

Token 198: ' ce' (ID: 2357)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.11345923691987991
    2. ' (' → logprob: -2.738459348678589
    3. 'N' → logprob: -3.988459348678589
    4. ' ce' → logprob: -4.86345911026001
    5. ' ' → logprob: -4.98845911026001
    6. '(N' → logprob: -5.61345911026001
    7. ' cette' → logprob: -6.23845911026001
    8. ' this' → logprob: -6.73845911026001
    9. ' le' → logprob: -7.23845911026001
    10. ' cet' → logprob: -7.73845911026001

Token 199: ' reste' (ID: 26769)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7244874238967896
    2. ' espace' → logprob: -1.7244874238967896
    3. ' reste' → logprob: -2.7244873046875
    4. ' remainder' → logprob: -3.2244873046875
    5. 'reste' → logprob: -3.2244873046875
    6. ' rest' → logprob: -3.4744873046875
    7. 'rest' → logprob: -3.8494873046875
    8. ' restant' → logprob: -4.3494873046875
    9. '_' → logprob: -4.4744873046875
    10. ' _' → logprob: -4.5994873046875

Token 200: ' (' (ID: 350)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.5322157144546509
    2. 're' → logprob: -1.9072157144546509
    3. 'reste' → logprob: -2.0322155952453613
    4. 'r' → logprob: -3.2822155952453613
    5. '
' → logprob: -3.7822155952453613
    6. '_rest' → logprob: -4.657215595245361
    7. 'R' → logprob: -4.657215595245361
    8. '_' → logprob: -4.782215595245361
    9. 'remaining' → logprob: -5.032215595245361
    10. ' remainder' → logprob: -5.032215595245361

Token 201: 'division' (ID: 50596)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.26384463906288147
    2. ')' → logprob: -1.513844609260559
    3. ' ' → logprob: -5.3888444900512695
    4. ' )
' → logprob: -6.1388444900512695
    5. '"' → logprob: -7.1388444900512695
    6. ' N' → logprob: -7.5138444900512695
    7. ' "' → logprob: -7.7638444900512695
    8. ' (' → logprob: -8.26384449005127
    9. ' ),' → logprob: -8.26384449005127
    10. 'N' → logprob: -8.38884449005127

Token 202: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.07239817827939987
    2. 'ent' → logprob: -3.0723981857299805
    3. '_ent' → logprob: -4.3223981857299805
    4. ')' → logprob: -5.4473981857299805
    5. ' )' → logprob: -6.3223981857299805
    6. 'enti' → logprob: -6.5723981857299805
    7. ' //' → logprob: -6.9473981857299805
    8. ' enti' → logprob: -7.1973981857299805
    9. '_' → logprob: -8.32239818572998
    10. ' ' → logprob: -8.82239818572998

Token 203: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13176703453063965
    2. ' )' → logprob: -2.1317670345306396
    3. ' )
' → logprob: -6.381767272949219
    4. ')
' → logprob: -6.756767272949219
    5. ' ' → logprob: -7.256767272949219
    6. ',' → logprob: -8.381767272949219
    7. ' ' → logprob: -8.756767272949219
    8. 'rest' → logprob: -9.006767272949219
    9. '   ' → logprob: -9.381767272949219
    10. ')
' → logprob: -9.631767272949219

Token 204: ' nouveau' (ID: 23184)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '500' → logprob: -1.0541372299194336
    2. ' ' → logprob: -1.1791372299194336
    3. '100' → logprob: -1.6791372299194336
    4. '5' → logprob: -2.8041372299194336
    5. 'la' → logprob: -3.8041372299194336
    6. 'part' → logprob: -4.304137229919434
    7. 'contin' → logprob: -4.304137229919434
    8. ' la' → logprob: -5.054137229919434
    9. 'l' → logprob: -5.179137229919434
    10. 'près' → logprob: -5.929137229919434

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05648686736822128
    2. ' )' → logprob: -2.9314868450164795
    3. ')
' → logprob: -7.306487083435059
    4. ' )
' → logprob: -7.681487083435059
    5. ' ' → logprob: -9.181487083435059
    6. '*' → logprob: -9.556487083435059
    7. ')
' → logprob: -9.931487083435059
    8. ',' → logprob: -10.556487083435059
    9. ' )
' → logprob: -10.556487083435059
    10. ' ' → logprob: -10.556487083435059

Token 206: 'B' (ID: 33)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.5577354431152344
    2. 'reste' → logprob: -1.9327354431152344
    3. ' remainder' → logprob: -3.0577354431152344
    4. '
' → logprob: -3.1827354431152344
    5. 'R' → logprob: -3.4327354431152344
    6. 'B' → logprob: -3.8077354431152344
    7. 'r' → logprob: -3.9327354431152344
    8. 'remaining' → logprob: -4.182735443115234
    9. ' reste' → logprob: -4.432735443115234
    10. '_rest' → logprob: -4.557735443115234

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022513806819916
    2. '=' → logprob: -1.9102251529693604
    3. ' ' → logprob: -14.410224914550781
    4. ' =
' → logprob: -15.785224914550781
    5. ',' → logprob: -16.41022491455078
    6. ')' → logprob: -16.41022491455078
    7. ' ' → logprob: -16.53522491455078
    8. '＝' → logprob: -17.41022491455078
    9. '=int' → logprob: -17.53522491455078
    10. '_' → logprob: -18.03522491455078

Token 208: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3495491147041321
    2. '(N' → logprob: -1.2245490550994873
    3. '(' → logprob: -6.849549293518066
    4. ' ' → logprob: -10.724549293518066
    5. '(A' → logprob: -12.349549293518066
    6. ' ' → logprob: -12.474549293518066
    7. '   ' → logprob: -12.724549293518066
    8. '(n' → logprob: -12.849549293518066
    9. '((' → logprob: -13.224549293518066
    10. '(S' → logprob: -13.349549293518066

Token 209: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005548207554966211
    2. ' N' → logprob: -7.500555038452148
    3. '   ' → logprob: -14.000555038452148
    4. ' ' → logprob: -15.000555038452148
    5. '	N' → logprob: -15.000555038452148
    6. '(N' → logprob: -15.750555038452148
    7. ' (' → logprob: -16.50055503845215
    8. 'n' → logprob: -17.00055503845215
    9. ')' → logprob: -17.12555503845215
    10. '  ' → logprob: -17.37555503845215

Token 210: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.010386062785983086
    2. '-' → logprob: -4.635385990142822
    3. ' ' → logprob: -7.385385990142822
    4. '%' → logprob: -12.51038646697998
    5. ' %' → logprob: -12.88538646697998
    6. ' ' → logprob: -13.88538646697998
    7. ' A' → logprob: -14.13538646697998
    8. '-A' → logprob: -14.13538646697998
    9. ')' → logprob: -14.76038646697998
    10. 'A' → logprob: -15.88538646697998

Token 211: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2519416809082031
    2. 'A' → logprob: -1.5019416809082031
    3. ' ' → logprob: -12.001941680908203
    4. '	A' → logprob: -12.376941680908203
    5. '   ' → logprob: -13.501941680908203
    6. ')' → logprob: -15.376941680908203
    7. ' (' → logprob: -15.501941680908203
    8. '(A' → logprob: -16.001941680908203
    9. '  ' → logprob: -16.126941680908203
    10. '_A' → logprob: -16.501941680908203

Token 212: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0019286326132714748
    2. ' *' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.501928329467773
    4. ')' → logprob: -18.501928329467773
    5. ' ' → logprob: -19.376928329467773
    6. '**' → logprob: -19.376928329467773
    7. '500' → logprob: -19.501928329467773
    8. '*)' → logprob: -19.626928329467773
    9. '＊' → logprob: -19.876928329467773
    10. '```' → logprob: -20.251928329467773

Token 213: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.011048882268369198
    2. ' ' → logprob: -4.511048793792725
    3. '5' → logprob: -14.886049270629883
    4. '  ' → logprob: -15.261049270629883
    5. '   ' → logprob: -15.761049270629883
    6. '50' → logprob: -16.136049270629883
    7. '```' → logprob: -16.511049270629883
    8. '	' → logprob: -16.636049270629883
    9. ')' → logprob: -16.636049270629883
    10. ' ' → logprob: -16.886049270629883

Token 214: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '5' → logprob: -16.375045776367188
    4. '50' → logprob: -17.625045776367188
    5. '  ' → logprob: -18.125045776367188
    6. '```' → logprob: -18.750045776367188
    7. '   ' → logprob: -18.875045776367188
    8. ')' → logprob: -19.312545776367188
    9. '501' → logprob: -19.750045776367188
    10. '`' → logprob: -20.062545776367188

Token 215: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011730826226994395
    2. ')//' → logprob: -6.87617301940918
    3. ' )' → logprob: -8.87617301940918
    4. '//' → logprob: -14.75117301940918
    5. ')#' → logprob: -16.00117301940918
    6. ')
' → logprob: -17.00117301940918
    7. '）' → logprob: -17.62617301940918
    8. '#' → logprob: -18.50117301940918
    9. ' ' → logprob: -18.50117301940918
    10. ')`' → logprob: -19.00117301940918

Token 216: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.313264399766922
    2. ' //' → logprob: -1.3132643699645996
    3. ' ' → logprob: -13.313264846801758
    4. '//=' → logprob: -14.813264846801758
    5. '```' → logprob: -15.563264846801758
    6. ' ' → logprob: -15.688264846801758
    7. '#' → logprob: -16.313264846801758
    8. ')//' → logprob: -16.563264846801758
    9. ')' → logprob: -16.938264846801758
    10. '>//' → logprob: -17.688264846801758

Token 217: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '500' → logprob: -17.750003814697266
    4. '   ' → logprob: -18.125003814697266
    5. '50' → logprob: -18.250003814697266
    6. '  ' → logprob: -18.500003814697266
    7. '```' → logprob: -19.125003814697266
    8. '۵' → logprob: -19.625003814697266
    9. '٥' → logprob: -20.125003814697266
    10. '５' → logprob: -20.500003814697266

Token 218: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '50' → logprob: -17.500001907348633
    4. '```' → logprob: -18.000001907348633
    5. '500' → logprob: -18.125001907348633
    6. '   ' → logprob: -18.750001907348633
    7. '  ' → logprob: -18.750001907348633
    8. '۵' → logprob: -19.625001907348633
    9. '٥' → logprob: -19.812501907348633
    10. '５' → logprob: -20.625001907348633

Token 219: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9592223167419434
    2. '
' → logprob: -1.2092223167419434
    3. 'C' → logprob: -2.3342223167419434
    4. '<|end|>' → logprob: -2.7092223167419434
    5. '+' → logprob: -2.8342223167419434
    6. '\n' → logprob: -3.2092223167419434
    7. 'print' → logprob: -4.084222316741943
    8. '*' → logprob: -5.084222316741943
    9. '+
' → logprob: -5.084222316741943
    10. ' ' → logprob: -5.334222316741943

Token 221: ' Cal' (ID: 4453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32487714290618896
    2. 'C' → logprob: -1.699877142906189
    3. 'reste' → logprob: -2.9498772621154785
    4. 'R' → logprob: -3.6998772621154785
    5. 'rest' → logprob: -4.6998772621154785
    6. '#' → logprob: -5.5748772621154785
    7. 're' → logprob: -6.4498772621154785
    8. 'result' → logprob: -6.4498772621154785
    9. 'r' → logprob: -8.07487678527832
    10. 'remaining' → logprob: -8.19987678527832

Token 222: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.4727027416229248
    2. 'c' → logprob: -1.0977027416229248
    3. 'cul' → logprob: -3.597702741622925
    4. 'culate' → logprob: -4.347702980041504
    5. 'cules' → logprob: -6.597702980041504
    6. 'cula' → logprob: -7.847702980041504
    7. '#' → logprob: -7.972702980041504
    8. 'C' → logprob: -8.972702980041504
    9. 'A' → logprob: -9.472702980041504
    10. '```' → logprob: -9.597702980041504

Token 223: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.08842390775680542
    2. 'le' → logprob: -3.08842396736145
    3. '#' → logprob: -3.71342396736145
    4. 'rest' → logprob: -5.463423728942871
    5. 'reste' → logprob: -5.713423728942871
    6. '(' → logprob: -6.338423728942871
    7. 'R' → logprob: -6.588423728942871
    8. ' le' → logprob: -6.963423728942871
    9. ' C' → logprob: -7.588423728942871
    10. '(C' → logprob: -7.963423728942871

Token 224: ' somme' (ID: 64484)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2601061165332794
    2. 's' → logprob: -2.510106086730957
    3. 'val' → logprob: -3.135106086730957
    4. ' C' → logprob: -4.010106086730957
    5. 'reste' → logprob: -4.010106086730957
    6. 'rest' → logprob: -4.385106086730957
    7. 'part' → logprob: -4.760106086730957
    8. '#' → logprob: -4.885106086730957
    9. ' quantité' → logprob: -5.135106086730957
    10. ' somme' → logprob: -5.135106086730957

Token 225: ' finale' (ID: 37759)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2348136454820633
    2. 'C' → logprob: -1.8598136901855469
    3. ' =' → logprob: -3.859813690185547
    4. '=' → logprob: -4.609813690185547
    5. ' A' → logprob: -4.859813690185547
    6. 'S' → logprob: -4.859813690185547
    7. 'total' → logprob: -6.234813690185547
    8. 's' → logprob: -6.484813690185547
    9. 'de' → logprob: -6.984813690185547
    10. '=A' → logprob: -7.109813690185547

Token 226: ' de' (ID: 334)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.30116185545921326
    2. 'C' → logprob: -1.8011618852615356
    3. 'A' → logprob: -2.551161766052246
    4. 'total' → logprob: -4.676161766052246
    5. 'result' → logprob: -5.176161766052246
    6. 'final' → logprob: -7.426161766052246
    7. 'N' → logprob: -7.551161766052246
    8. 's' → logprob: -8.301161766052246
    9. ' S' → logprob: -8.551161766052246
    10. ' =' → logprob: -9.176161766052246

Token 227: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.012224121019244194
    2. '(A' → logprob: -4.637224197387695
    3. 'N' → logprob: -6.762224197387695
    4. ' A' → logprob: -7.137224197387695
    5. '500' → logprob: -8.137224197387695
    6. '(' → logprob: -9.137224197387695
    7. ' (' → logprob: -10.637224197387695
    8. 'B' → logprob: -10.887224197387695
    9. '100' → logprob: -11.012224197387695
    10. '(N' → logprob: -11.137224197387695

Token 228: ' manière' (ID: 35013)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.35623303055763245
    2. 'val' → logprob: -1.35623300075531
    3. 's' → logprob: -3.4812331199645996
    4. 'part' → logprob: -5.6062331199646
    5. 'mon' → logprob: -6.4812331199646
    6. 'quant' → logprob: -6.4812331199646
    7. '(A' → logprob: -7.1062331199646
    8. 'multip' → logprob: -7.2312331199646
    9. 'N' → logprob: -7.4812331199646
    10. ' A' → logprob: -8.231232643127441

Token 229: ' suivante' (ID: 107439)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.27242475748062134
    2. 'S' → logprob: -2.6474246978759766
    3. 'final' → logprob: -3.0224246978759766
    4. 'N' → logprob: -3.2724246978759766
    5. ' C' → logprob: -3.8974246978759766
    6. ' =' → logprob: -4.522424697875977
    7. 'total' → logprob: -4.647424697875977
    8. 'A' → logprob: -4.772424697875977
    9. 's' → logprob: -4.772424697875977
    10. ' totale' → logprob: -5.397424697875977

Token 230: ' :
' (ID: 10039)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8622764945030212
    2. 'total' → logprob: -1.362276554107666
    3. 'result' → logprob: -2.237276554107666
    4. 'A' → logprob: -2.362276554107666
    5. 'C' → logprob: -2.487276554107666
    6. ' S' → logprob: -4.612276554107666
    7. ' total' → logprob: -5.112276554107666
    8. 'final' → logprob: -5.112276554107666
    9. ' A' → logprob: -5.612276554107666
    10. 'N' → logprob: -5.987276554107666

Token 231: '#' (ID: 2)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09497294574975967
    2. 'S' → logprob: -3.469972848892212
    3. 'C' → logprob: -3.594972848892212
    4. 'total' → logprob: -4.469973087310791
    5. 'result' → logprob: -4.719973087310791
    6. '500' → logprob: -4.844973087310791
    7. 'N' → logprob: -5.969973087310791
    8. 's' → logprob: -8.094972610473633
    9. 'final' → logprob: -8.219972610473633
    10. 'sum' → logprob: -8.344972610473633

Token 232: ' "' (ID: 392)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6155935525894165
    2. 'S' → logprob: -1.7405935525894165
    3. 'total' → logprob: -2.115593433380127
    4. 'result' → logprob: -2.615593433380127
    5. 'C' → logprob: -2.740593433380127
    6. '500' → logprob: -4.865593433380127
    7. 's' → logprob: -5.365593433380127
    8. 'sum' → logprob: -5.615593433380127
    9. 'N' → logprob: -5.740593433380127
    10. 'final' → logprob: -6.740593433380127

Token 233: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.010592744685709476
    2. '500' → logprob: -5.510592937469482
    3. 'N' → logprob: -5.760592937469482
    4. 'result' → logprob: -7.135592937469482
    5. ' A' → logprob: -7.260592937469482
    6. 'total' → logprob: -7.260592937469482
    7. '(A' → logprob: -7.760592937469482
    8. 'C' → logprob: -7.885592937469482
    9. 'S' → logprob: -9.510592460632324
    10. 'final' → logprob: -9.760592460632324

Token 234: '"' (ID: 1)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6952470541000366
    2. ' *' → logprob: -0.6952470541000366
    3. ' +' → logprob: -6.320247173309326
    4. '+' → logprob: -8.570246696472168
    5. ' ' → logprob: -9.570246696472168
    6. '500' → logprob: -10.695246696472168
    7. ' ' → logprob: -11.945246696472168
    8. '```' → logprob: -13.945246696472168
    9. ',' → logprob: -14.132746696472168
    10. ' plus' → logprob: -14.320246696472168

Token 235: ' représente' (ID: 88912)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05619536712765694
    2. ' *' → logprob: -2.9311952590942383
    3. '+' → logprob: -7.181195259094238
    4. ' +' → logprob: -7.556195259094238
    5. '500' → logprob: -11.306195259094238
    6. ' ' → logprob: -11.931195259094238
    7. ' ' → logprob: -12.806195259094238
    8. '*A' → logprob: -13.681195259094238
    9. 'A' → logprob: -13.806195259094238
    10. '_' → logprob: -13.806195259094238

Token 236: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4340362548828125
    2. 'le' → logprob: -1.0590362548828125
    3. '500' → logprob: -6.9340362548828125
    4. ' la' → logprob: -7.0590362548828125
    5. 'la' → logprob: -7.0590362548828125
    6. 'nombre' → logprob: -7.5590362548828125
    7. 'A' → logprob: -7.8090362548828125
    8. 'les' → logprob: -7.8090362548828125
    9. ' combien' → logprob: -7.8090362548828125
    10. ' les' → logprob: -8.434036254882812

Token 237: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.003121625632047653
    2. ' nombre' → logprob: -6.628121852874756
    3. 'total' → logprob: -7.378121852874756
    4. 'mont' → logprob: -7.878121852874756
    5. 'A' → logprob: -9.003121376037598
    6. 'nb' → logprob: -9.253121376037598
    7. 'nom' → logprob: -9.253121376037598
    8. 'n' → logprob: -9.378121376037598
    9. 'score' → logprob: -9.503121376037598
    10. 's' → logprob: -9.753121376037598

Token 238: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7053965926170349
    2. '*' → logprob: -1.0803966522216797
    3. 'de' → logprob: -2.7053966522216797
    4. ' +' → logprob: -3.4553966522216797
    5. '+' → logprob: -3.8303966522216797
    6. ' *' → logprob: -3.9553966522216797
    7. '#' → logprob: -5.20539665222168
    8. 'A' → logprob: -5.33039665222168
    9. '500' → logprob: -5.58039665222168
    10. ' des' → logprob: -5.70539665222168

Token 239: ' parts' (ID: 7881)
  Prédit: 'bil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bil' → logprob: -0.707543671131134
    2. ' billets' → logprob: -1.2075436115264893
    3. '500' → logprob: -1.8325436115264893
    4. 'pi' → logprob: -4.332543849945068
    5. 'b' → logprob: -4.707543849945068
    6. ' ' → logprob: -5.082543849945068
    7. 'tickets' → logprob: -5.332543849945068
    8. ' pièces' → logprob: -5.957543849945068
    9. '5' → logprob: -6.457543849945068
    10. 'multip' → logprob: -6.707543849945068

Token 240: ' de' (ID: 334)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3883730173110962
    2. ' *' → logprob: -2.1383728981018066
    3. ' +' → logprob: -2.3883728981018066
    4. '+' → logprob: -3.0133728981018066
    5. 'de' → logprob: -3.3883728981018066
    6. '500' → logprob: -4.138372898101807
    7. ' de' → logprob: -4.763372898101807
    8. 'A' → logprob: -6.888372898101807
    9. '#' → logprob: -6.888372898101807
    10. ' ' → logprob: -7.388372898101807

Token 241: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.20802411437034607
    2. ' ' → logprob: -1.7080241441726685
    3. '5' → logprob: -5.458024024963379
    4. '100' → logprob: -7.083024024963379
    5. 'C' → logprob: -7.833024024963379
    6. ' C' → logprob: -7.958024024963379
    7. '50' → logprob: -8.583024024963379
    8. 'c' → logprob: -8.833024024963379
    9. '1' → logprob: -9.708024024963379
    10. '10' → logprob: -9.708024024963379

Token 242: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0007787733338773251
    2. ' ' → logprob: -7.375778675079346
    3. '100' → logprob: -9.875779151916504
    4. '5' → logprob: -9.875779151916504
    5. 'C' → logprob: -11.375779151916504
    6. '50' → logprob: -11.500779151916504
    7. 'A' → logprob: -12.500779151916504
    8. '1' → logprob: -12.688279151916504
    9. '10' → logprob: -12.688279151916504
    10. 'c' → logprob: -12.750779151916504

Token 243: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11361014097929001
    2. ' +' → logprob: -2.238610029220581
    3. '+
' → logprob: -8.36361026763916
    4. '*' → logprob: -8.36361026763916
    5. '#' → logprob: -9.23861026763916
    6. '+B' → logprob: -9.61361026763916
    7. 'B' → logprob: -10.23861026763916
    8. ' +
' → logprob: -10.48861026763916
    9. 'A' → logprob: -10.73861026763916
    10. ' ' → logprob: -11.36361026763916

Token 244: ' chaque' (ID: 21194)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06333348155021667
    2. '#' → logprob: -3.313333511352539
    3. '"' → logprob: -4.813333511352539
    4. '"B' → logprob: -5.063333511352539
    5. ' B' → logprob: -5.438333511352539
    6. 'A' → logprob: -5.438333511352539
    7. '500' → logprob: -7.438333511352539
    8. '5' → logprob: -7.813333511352539
    9. ' "' → logprob: -8.813333511352539
    10. 'C' → logprob: -8.813333511352539

Token 245: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.2803744077682495
    2. ' part' → logprob: -2.155374526977539
    3. 'A' → logprob: -2.530374526977539
    4. ' A' → logprob: -4.030374526977539
    5. '500' → logprob: -4.280374526977539
    6. 'parts' → logprob: -5.280374526977539
    7. ' parts' → logprob: -5.530374526977539
    8. ' ' → logprob: -5.905374526977539
    9. 'B' → logprob: -5.905374526977539
    10. '5' → logprob: -6.780374526977539

Token 246: ' "' (ID: 392)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6474040746688843
    2. ' *' → logprob: -1.1474040746688843
    3. ' de' → logprob: -3.022404193878174
    4. 'de' → logprob: -3.397404193878174
    5. ' val' → logprob: -3.647404193878174
    6. ' multip' → logprob: -3.772404193878174
    7. 'val' → logprob: -4.397404193878174
    8. ' vaut' → logprob: -4.522404193878174
    9. ' ' → logprob: -6.897404193878174
    10. 'multip' → logprob: -7.397404193878174

Token 247: 'rap' (ID: 1807)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.28185608983039856
    2. ' val' → logprob: -2.031856060028076
    3. ' vaut' → logprob: -2.656856060028076
    4. '500' → logprob: -4.031856060028076
    5. ' ' → logprob: -5.031856060028076
    6. 'v' → logprob: -5.031856060028076
    7. 'vale' → logprob: -5.656856060028076
    8. '   ' → logprob: -6.906856060028076
    9. 'cout' → logprob: -6.906856060028076
    10. ' valent' → logprob: -7.156856060028076

Token 248: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.01063591055572033
    2. 'porte' → logprob: -5.010635852813721
    3. 'p' → logprob: -5.760635852813721
    4. 'porter' → logprob: -9.510636329650879
    5. '```' → logprob: -9.885636329650879
    6. '``' → logprob: -10.010636329650879
    7. '`' → logprob: -10.135636329650879
    8. 'ports' → logprob: -10.135636329650879
    9. 'prés' → logprob: -10.260636329650879
    10. 'present' → logprob: -10.260636329650879

Token 249: '"' (ID: 1)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03591098263859749
    2. '500' → logprob: -3.6609110832214355
    3. '100' → logprob: -5.4109110832214355
    4. '1' → logprob: -6.6609110832214355
    5. ' A' → logprob: -7.5359110832214355
    6. '50' → logprob: -7.5359110832214355
    7. '5' → logprob: -7.6609110832214355
    8. ' "' → logprob: -8.285910606384277
    9. '  ' → logprob: -8.785910606384277
    10. 'A' → logprob: -8.785910606384277

Token 250: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20888425409793854
    2. '500' → logprob: -1.9588842391967773
    3. '1' → logprob: -3.9588842391967773
    4. '5' → logprob: -4.333884239196777
    5. ' A' → logprob: -5.333884239196777
    6. '100' → logprob: -5.708884239196777
    7. '10' → logprob: -6.458884239196777
    8. '2' → logprob: -6.583884239196777
    9. '50' → logprob: -6.708884239196777
    10. 'A' → logprob: -7.083884239196777

Token 251: '100' (ID: 1353)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.1826215237379074
    2. '5' → logprob: -2.057621479034424
    3. '100' → logprob: -4.182621479034424
    4. '10' → logprob: -4.682621479034424
    5. '50' → logprob: -5.932621479034424
    6. '1' → logprob: -6.432621479034424
    7. '3' → logprob: -6.557621479034424
    8. '2' → logprob: -6.557621479034424
    9. '600' → logprob: -6.557621479034424
    10. '505' → logprob: -7.432621479034424

Token 252: '0' (ID: 15)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6329403519630432
    2. ' *' → logprob: -0.7579403519630432
    3. ' +' → logprob: -8.757940292358398
    4. '+' → logprob: -10.007940292358398
    5. '*A' → logprob: -10.007940292358398
    6. '0' → logprob: -10.757940292358398
    7. ' ' → logprob: -10.882940292358398
    8. 'A' → logprob: -11.257940292358398
    9. '500' → logprob: -11.507940292358398
    10. '000' → logprob: -11.507940292358398

Token 253: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.46741196513175964
    2. '*' → logprob: -1.092411994934082
    3. 'A' → logprob: -4.717411994934082
    4. ' ' → logprob: -4.842411994934082
    5. ' A' → logprob: -5.467411994934082
    6. '#' → logprob: -6.217411994934082
    7. '
' → logprob: -6.342411994934082
    8. '*A' → logprob: -6.342411994934082
    9. ' *
' → logprob: -6.342411994934082
    10. ' +' → logprob: -6.592411994934082

Token 254: '#' (ID: 2)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6741236448287964
    2. '*' → logprob: -1.9241236448287964
    3. '+' → logprob: -2.424123764038086
    4. 'sum' → logprob: -2.549123764038086
    5. 'A' → logprob: -2.799123764038086
    6. 'result' → logprob: -3.174123764038086
    7. 's' → logprob: -4.049123764038086
    8. 'S' → logprob: -4.424123764038086
    9. '+
' → logprob: -5.299123764038086
    10. '
' → logprob: -5.424123764038086

Token 255: ' "' (ID: 392)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8323390483856201
    2. 'C' → logprob: -1.2073390483856201
    3. 'total' → logprob: -1.8323390483856201
    4. 'S' → logprob: -2.70733904838562
    5. 's' → logprob: -3.58233904838562
    6. 'sum' → logprob: -4.832339286804199
    7. 'som' → logprob: -7.207339286804199
    8. ' result' → logprob: -7.832339286804199
    9. 'final' → logprob: -7.957339286804199
    10. 'Total' → logprob: -7.957339286804199

Token 256: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3033382296562195
    2. 'C' → logprob: -1.5533382892608643
    3. ' B' → logprob: -3.4283382892608643
    4. ' C' → logprob: -4.303338050842285
    5. 'result' → logprob: -6.178338050842285
    6. ' result' → logprob: -7.803338050842285
    7. 'total' → logprob: -8.303338050842285
    8. ' total' → logprob: -8.553338050842285
    9. 'A' → logprob: -8.678338050842285
    10. 'Total' → logprob: -9.178338050842285

Token 257: '"' (ID: 1)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014572078362107277
    2. '*' → logprob: -4.7645721435546875
    3. ')' → logprob: -5.3895721435546875
    4. '"' → logprob: -7.2645721435546875
    5. ' )' → logprob: -8.014572143554688
    6. ' "' → logprob: -8.764572143554688
    7. ' ' → logprob: -9.139572143554688
    8. ' =' → logprob: -10.389572143554688
    9. ' ' → logprob: -11.014572143554688
    10. ')*' → logprob: -11.764572143554688

Token 258: ' représente' (ID: 88912)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03792602941393852
    2. '*' → logprob: -3.787925958633423
    3. ' ' → logprob: -4.662926197052002
    4. ' =' → logprob: -6.037926197052002
    5. ' ' → logprob: -7.037926197052002
    6. ' représente' → logprob: -7.537926197052002
    7. '=' → logprob: -8.412925720214844
    8. ')' → logprob: -8.787925720214844
    9. ' represents' → logprob: -8.912925720214844
    10. '_' → logprob: -9.037925720214844

Token 259: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.05371173843741417
    2. 'le' → logprob: -3.1787116527557373
    3. ' ' → logprob: -4.678711891174316
    4. ' la' → logprob: -7.553711891174316
    5. ' l' → logprob: -8.428711891174316
    6. ' nombre' → logprob: -8.803711891174316
    7. ' ' → logprob: -8.928711891174316
    8. 'nombre' → logprob: -8.928711891174316
    9. 'l' → logprob: -9.803711891174316
    10. '100' → logprob: -10.428711891174316

Token 260: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.2522135078907013
    2. ' nombre' → logprob: -1.502213478088379
    3. ' ' → logprob: -9.252213478088379
    4. 'n' → logprob: -10.127213478088379
    5. ' nombres' → logprob: -10.377213478088379
    6. 'number' → logprob: -10.752213478088379
    7. 'nb' → logprob: -11.752213478088379
    8. 'Nombre' → logprob: -11.877213478088379
    9. ' ' → logprob: -12.002213478088379
    10. '   ' → logprob: -12.002213478088379

Token 261: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.01667678728699684
    2. 'de' → logprob: -4.266676902770996
    3. '_de' → logprob: -7.141676902770996
    4. ' *' → logprob: -7.891676902770996
    5. ' ' → logprob: -8.141676902770996
    6. '_' → logprob: -8.141676902770996
    7. '#' → logprob: -8.641676902770996
    8. ' d' → logprob: -8.766676902770996
    9. '*' → logprob: -8.766676902770996
    10. ' #' → logprob: -9.516676902770996

Token 262: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.11405950784683228
    2. 'parts' → logprob: -2.2390594482421875
    3. ' ' → logprob: -7.7390594482421875
    4. 'part' → logprob: -8.114059448242188
    5. '5' → logprob: -8.739059448242188
    6. ' part' → logprob: -9.864059448242188
    7. ' partes' → logprob: -9.989059448242188
    8. 'points' → logprob: -10.239059448242188
    9. ' fois' → logprob: -10.364059448242188
    10. 'fois' → logprob: -10.489059448242188

Token 263: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.003973324317485094
    2. 'de' → logprob: -6.003973484039307
    3. ' ' → logprob: -7.628973484039307
    4. ' #' → logprob: -8.128973007202148
    5. '_' → logprob: -8.503973007202148
    6. '#' → logprob: -9.003973007202148
    7. '_de' → logprob: -9.503973007202148
    8. '*' → logprob: -9.628973007202148
    9. ' *' → logprob: -9.878973007202148
    10. ' ' → logprob: -10.253973007202148

Token 264: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.381166011095047
    2. '5' → logprob: -1.2561659812927246
    3. '1' → logprob: -3.5061659812927246
    4. '2' → logprob: -6.631165981292725
    5. '10' → logprob: -7.881165981292725
    6. '500' → logprob: -8.631166458129883
    7. '100' → logprob: -8.881166458129883
    8. ' ' → logprob: -10.006166458129883
    9. '50' → logprob: -10.381166458129883
    10. '0' → logprob: -10.881166458129883

Token 265: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5489277243614197
    2. ' ' → logprob: -1.2989277839660645
    3. '1' → logprob: -1.9239277839660645
    4. '10' → logprob: -6.6739277839660645
    5. '100' → logprob: -7.1739277839660645
    6. '50' → logprob: -7.4239277839660645
    7. '500' → logprob: -7.4239277839660645
    8. '  ' → logprob: -9.486427307128906
    9. ' ' → logprob: -10.111427307128906
    10. '2' → logprob: -10.673927307128906

Token 266: ' heures' (ID: 34311)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7595411539077759
    2. ' *' → logprob: -0.7595411539077759
    3. '#' → logprob: -4.009541034698486
    4. 's' → logprob: -4.634541034698486
    5. 'C' → logprob: -5.259541034698486
    6. '100' → logprob: -5.509541034698486
    7. '
' → logprob: -5.634541034698486
    8. ' #' → logprob: -5.884541034698486
    9. '+' → logprob: -6.009541034698486
    10. ' ' → logprob: -6.259541034698486

Token 267: ' restantes' (ID: 159241)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.27771538496017456
    2. ' *' → logprob: -1.7777154445648193
    3. '#' → logprob: -3.7777154445648193
    4. 'A' → logprob: -4.65271520614624
    5. '
' → logprob: -4.90271520614624
    6. '100' → logprob: -5.15271520614624
    7. '+' → logprob: -5.27771520614624
    8. 'C' → logprob: -5.52771520614624
    9. ' +' → logprob: -5.65271520614624
    10. ',' → logprob: -6.02771520614624

Token 268: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1150115728378296
    2. '
' → logprob: -1.7400115728378296
    3. '+' → logprob: -1.9900115728378296
    4. ' +' → logprob: -2.490011692047119
    5. '100' → logprob: -3.115011692047119
    6. 'C' → logprob: -3.115011692047119
    7. ' *' → logprob: -3.240011692047119
    8. '<|end|>' → logprob: -3.490011692047119
    9. 'B' → logprob: -3.740011692047119
    10. ' ' → logprob: -3.865011692047119

Token 269: ' chaque' (ID: 21194)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.8210707902908325
    2. ' ' → logprob: -1.9460707902908325
    3. ' A' → logprob: -2.071070671081543
    4. '100' → logprob: -2.071070671081543
    5. 'A' → logprob: -2.196070671081543
    6. ' donc' → logprob: -2.196070671081543
    7. ' B' → logprob: -2.821070671081543
    8. ' et' → logprob: -3.196070671081543
    9. ' chaque' → logprob: -3.321070671081543
    10. 'B' → logprob: -3.571070671081543

Token 270: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.09128459542989731
    2. 'part' → logprob: -3.2162845134735107
    3. '_' → logprob: -3.4662845134735107
    4. ' ' → logprob: -4.96628475189209
    5. ' _' → logprob: -5.46628475189209
    6. ' B' → logprob: -6.46628475189209
    7. '_part' → logprob: -6.46628475189209
    8. '*' → logprob: -7.46628475189209
    9. ' partie' → logprob: -8.21628475189209
    10. ' *' → logprob: -8.21628475189209

Token 271: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43096253275871277
    2. ' *' → logprob: -1.9309625625610352
    3. ' "' → logprob: -1.9309625625610352
    4. ' ' → logprob: -4.680962562561035
    5. ' rapporte' → logprob: -4.680962562561035
    6. '*' → logprob: -4.805962562561035
    7. 'rap' → logprob: -5.055962562561035
    8. '"' → logprob: -5.180962562561035
    9. ' '' → logprob: -5.430962562561035
    10. ' apporte' → logprob: -5.680962562561035

Token 272: 'rap' (ID: 1807)
  Prédit: 'rap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rap' → logprob: -0.17184969782829285
    2. ' rapporte' → logprob: -1.9218497276306152
    3. 'rapport' → logprob: -5.421849727630615
    4. ' ' → logprob: -5.796849727630615
    5. 'ap' → logprob: -7.171849727630615
    6. ' apporte' → logprob: -7.296849727630615
    7. ' rapport' → logprob: -7.296849727630615
    8. 'ram' → logprob: -8.171849250793457
    9. ' vaut' → logprob: -8.421849250793457
    10. 'val' → logprob: -8.546849250793457

Token 273: 'porte' (ID: 17761)
  Prédit: 'porte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'porte' → logprob: -0.35812148451805115
    2. 'port' → logprob: -1.7331215143203735
    3. 'orte' → logprob: -2.483121395111084
    4. 'ort' → logprob: -4.733121395111084
    5. '_' → logprob: -5.608121395111084
    6. '#' → logprob: -5.858121395111084
    7. '_port' → logprob: -5.983121395111084
    8. '`' → logprob: -6.358121395111084
    9. ' porte' → logprob: -6.483121395111084
    10. '   ' → logprob: -6.608121395111084

Token 274: '"' (ID: 1)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.032317668199539185
    2. '100' → logprob: -3.532317638397217
    3. '500' → logprob: -7.032317638397217
    4. '50' → logprob: -7.782317638397217
    5. '10' → logprob: -7.782317638397217
    6. '"' → logprob: -8.157318115234375
    7. '1' → logprob: -9.157318115234375
    8. '  ' → logprob: -9.657318115234375
    9. '200' → logprob: -9.657318115234375
    10. '5' → logprob: -9.782318115234375

Token 275: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5593557953834534
    2. '1' → logprob: -1.5593557357788086
    3. '2' → logprob: -2.3093557357788086
    4. '10' → logprob: -3.3093557357788086
    5. '100' → logprob: -3.4343557357788086
    6. '5' → logprob: -4.059355735778809
    7. '50' → logprob: -4.809355735778809
    8. '200' → logprob: -4.934355735778809
    9. '20' → logprob: -5.309355735778809
    10. '3' → logprob: -6.184355735778809

Token 276: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9963412284851074
    2. '5' → logprob: -1.3713412284851074
    3. '2' → logprob: -1.9963412284851074
    4. '10' → logprob: -2.4963412284851074
    5. '17' → logprob: -2.4963412284851074
    6. '3' → logprob: -3.8713412284851074
    7. '50' → logprob: -4.121341228485107
    8. '8' → logprob: -5.121341228485107
    9. '20' → logprob: -5.246341228485107
    10. '100' → logprob: -5.246341228485107

Token 277: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.34837645292282104
    2. 'C' → logprob: -1.7233765125274658
    3. 'total' → logprob: -2.473376512527466
    4. 'S' → logprob: -4.348376274108887
    5. 'sum' → logprob: -5.473376274108887
    6. '
' → logprob: -5.598376274108887
    7. 's' → logprob: -5.723376274108887
    8. 'res' → logprob: -6.098376274108887
    9. 'answer' → logprob: -7.348376274108887
    10. 'score' → logprob: -7.348376274108887

Token 278: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4271067678928375
    2. 'C' → logprob: -1.5521067380905151
    3. 'total' → logprob: -2.6771068572998047
    4. 'S' → logprob: -2.8021068572998047
    5. 's' → logprob: -6.677106857299805
    6. 'sum' → logprob: -6.802106857299805
    7. 'Total' → logprob: -6.927106857299805
    8. 'res' → logprob: -7.302106857299805
    9. 'score' → logprob: -7.552106857299805
    10. 'Result' → logprob: -7.677106857299805

Token 279: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.24796909093856812
    2. 'C' → logprob: -1.997969150543213
    3. 'total' → logprob: -2.747969150543213
    4. 'S' → logprob: -4.372969150543213
    5. 's' → logprob: -5.997969150543213
    6. 'sum' → logprob: -5.997969150543213
    7. 'score' → logprob: -6.997969150543213
    8. 'res' → logprob: -7.622969150543213
    9. 'final' → logprob: -8.497968673706055
    10. 'answer' → logprob: -8.997968673706055

Token 280: ' multipl' (ID: 44269)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.504128098487854
    2. 's' → logprob: -2.0041279792785645
    3. 'total' → logprob: -2.3791279792785645
    4. ' =' → logprob: -2.8791279792785645
    5. 'result' → logprob: -3.2541279792785645
    6. 'final' → logprob: -3.2541279792785645
    7. 'print' → logprob: -4.5041279792785645
    8. ' total' → logprob: -4.8791279792785645
    9. 'sum' → logprob: -5.8791279792785645
    10. '_' → logprob: -5.8791279792785645

Token 281: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.03975854814052582
    2. 'ique' → logprob: -3.5397584438323975
    3. 'ip' → logprob: -5.539758682250977
    4. 'ipl' → logprob: -5.664758682250977
    5. 'e' → logprob: -6.914758682250977
    6. '*' → logprob: -7.164758682250977
    7. 'ipe' → logprob: -8.289758682250977
    8. 'i' → logprob: -8.539758682250977
    9. 'ié' → logprob: -9.789758682250977
    10. 'plique' → logprob: -9.914758682250977

Token 282: ' ces' (ID: 10532)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1942252218723297
    2. ' A' → logprob: -1.8192251920700073
    3. ' (' → logprob: -4.819225311279297
    4. '(A' → logprob: -5.319225311279297
    5. '(' → logprob: -6.694225311279297
    6. ' ' → logprob: -9.319225311279297
    7. '100' → logprob: -10.569225311279297
    8. ' par' → logprob: -11.069225311279297
    9. 'par' → logprob: -12.569225311279297
    10. '(
' → logprob: -12.569225311279297

Token 283: ' quant' (ID: 8237)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06232347711920738
    2. ' A' → logprob: -2.812323570251465
    3. ' nombres' → logprob: -9.187323570251465
    4. ' valeurs' → logprob: -9.937323570251465
    5. ' espaces' → logprob: -10.312323570251465
    6. 'nombre' → logprob: -10.437323570251465
    7. ' ' → logprob: -11.062323570251465
    8. ' nombre' → logprob: -11.312323570251465
    9. 'val' → logprob: -11.437323570251465
    10. ' parts' → logprob: -11.437323570251465

Token 284: 'ités' (ID: 12479)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.7432532906532288
    2. 'ités' → logprob: -0.7432532906532288
    3. 'A' → logprob: -3.118253231048584
    4. 'ite' → logprob: -5.618253231048584
    5. 'i' → logprob: -8.618253707885742
    6. 'ites' → logprob: -8.743253707885742
    7. ' A' → logprob: -8.868253707885742
    8. 'e' → logprob: -9.368253707885742
    9. 'um' → logprob: -9.618253707885742
    10. 'it' → logprob: -9.743253707885742

Token 285: ' et' (ID: 859)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1584126204252243
    2. 'final' → logprob: -3.0334126949310303
    3. '*' → logprob: -4.033412456512451
    4. 'result' → logprob: -4.783412456512451
    5. 'total' → logprob: -4.908412456512451
    6. 's' → logprob: -4.908412456512451
    7. '_total' → logprob: -4.908412456512451
    8. '_final' → logprob: -5.033412456512451
    9. '+' → logprob: -5.158412456512451
    10. '_result' → logprob: -5.283412456512451

Token 286: ' fait' (ID: 7473)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5895574688911438
    2. 'A' → logprob: -1.214557409286499
    3. ' (' → logprob: -3.214557409286499
    4. '100' → logprob: -3.714557409286499
    5. ' ' → logprob: -3.964557409286499
    6. ' les' → logprob: -4.339557647705078
    7. 's' → logprob: -5.214557647705078
    8. '(' → logprob: -5.339557647705078
    9. '(A' → logprob: -5.464557647705078
    10. '+' → logprob: -5.589557647705078

Token 287: ' l' (ID: 305)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9110596776008606
    2. ' la' → logprob: -1.4110596179962158
    3. ' ' → logprob: -1.7860596179962158
    4. ' A' → logprob: -2.286059617996216
    5. ' le' → logprob: -3.786059617996216
    6. 's' → logprob: -4.161059856414795
    7. ' l' → logprob: -4.536059856414795
    8. 'le' → logprob: -5.161059856414795
    9. 'la' → logprob: -5.411059856414795
    10. ' un' → logprob: -5.911059856414795

Token 288: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20591863989830017
    2. 'e' → logprob: -1.7059186697006226
    3. 'es' → logprob: -5.830918788909912
    4. 'A' → logprob: -7.205918788909912
    5. 'aisser' → logprob: -9.330918312072754
    6. 'égal' → logprob: -9.455918312072754
    7. '_a' → logprob: -9.455918312072754
    8. ''' → logprob: -9.830918312072754
    9. '```' → logprob: -10.205918312072754
    10. ''a' → logprob: -10.205918312072754

Token 289: 'addition' (ID: 198155)
  Prédit: 'addition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'addition' → logprob: -0.09962879121303558
    2. ' addition' → logprob: -2.4746286869049072
    3. 'A' → logprob: -5.599628925323486
    4. 'print' → logprob: -6.599628925323486
    5. ' somme' → logprob: -6.724628925323486
    6. 'égalité' → logprob: -7.224628925323486
    7. 'aff' → logprob: -7.474628925323486
    8. 'e' → logprob: -7.474628925323486
    9. 'a' → logprob: -7.599628925323486
    10. 'total' → logprob: -8.099628448486328

Token 290: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2051640897989273
    2. 'C' → logprob: -1.9551640748977661
    3. 'total' → logprob: -3.4551641941070557
    4. 'S' → logprob: -4.955163955688477
    5. 's' → logprob: -6.205163955688477
    6. 'res' → logprob: -6.955163955688477
    7. 'sum' → logprob: -7.205163955688477
    8. 'Total' → logprob: -8.205163955688477
    9. 'score' → logprob: -8.205163955688477
    10. 'Result' → logprob: -8.580163955688477

Token 291: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08107960969209671
    2. 'total' → logprob: -2.8310797214508057
    3. 'C' → logprob: -4.706079483032227
    4. 'S' → logprob: -5.331079483032227
    5. 's' → logprob: -5.956079483032227
    6. 'sum' → logprob: -7.081079483032227
    7. 'score' → logprob: -7.456079483032227
    8. 'res' → logprob: -7.831079483032227
    9. 'Total' → logprob: -8.706079483032227
    10. 'Result' → logprob: -8.956079483032227

Token 292: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031337425112724304
    2. '=' → logprob: -3.5313374996185303
    3. 'at' → logprob: -7.281337261199951
    4. 's' → logprob: -7.531337261199951
    5. 't' → logprob: -8.28133773803711
    6. '_' → logprob: -9.65633773803711
    7. ' ' → logprob: -10.78133773803711
    8. 'result' → logprob: -12.53133773803711
    9. '1' → logprob: -12.65633773803711
    10. '_=' → logprob: -12.65633773803711

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868817985057831
    2. '=' → logprob: -1.1368818283081055
    3. '_' → logprob: -12.261881828308105
    4. 's' → logprob: -12.386881828308105
    5. ' =
' → logprob: -14.636881828308105
    6. 'result' → logprob: -15.136881828308105
    7. ' ' → logprob: -15.386881828308105
    8. ' ' → logprob: -15.386881828308105
    9. '_=' → logprob: -16.26188087463379
    10. '=result' → logprob: -16.26188087463379

Token 294: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.048845671117305756
    2. ' A' → logprob: -3.0488457679748535
    3. '(A' → logprob: -8.548845291137695
    4. ' (' → logprob: -10.423845291137695
    5. '100' → logprob: -10.423845291137695
    6. '(' → logprob: -12.673845291137695
    7. ' ' → logprob: -13.423845291137695
    8. '	A' → logprob: -15.423845291137695
    9. '   ' → logprob: -16.548845291137695
    10. '0' → logprob: -16.673845291137695

Token 295: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5759427547454834
    2. '*' → logprob: -0.8259427547454834
    3. ' ' → logprob: -13.325942993164062
    4. ' ' → logprob: -13.575942993164062
    5. '100' → logprob: -15.700942993164062
    6. '```' → logprob: -15.700942993164062
    7. '**' → logprob: -16.200942993164062
    8. ')' → logprob: -17.200942993164062
    9. ' **' → logprob: -18.325942993164062
    10. '1' → logprob: -18.325942993164062

Token 296: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. ' ' → logprob: -18.750335693359375
    4. '１００' → logprob: -19.125335693359375
    5. '1' → logprob: -19.250335693359375
    6. '  ' → logprob: -20.250335693359375
    7. '   ' → logprob: -21.000335693359375
    8. '​' → logprob: -21.875335693359375
    9. '10' → logprob: -22.000335693359375
    10. '`' → logprob: -22.000335693359375

Token 297: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '1' → logprob: -18.375001907348633
    4. '１００' → logprob: -19.250001907348633
    5. '   ' → logprob: -21.750001907348633
    6. '  ' → logprob: -21.875001907348633
    7. '[' → logprob: -21.875001907348633
    8. '```' → logprob: -22.375001907348633
    9. '`' → logprob: -22.500001907348633
    10. '10' → logprob: -22.500001907348633

Token 298: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '۰' → logprob: -15.375
    3. '০' → logprob: -16.5
    4. ' ' → logprob: -17.0
    5. '०' → logprob: -17.0
    6. '٠' → logprob: -17.625
    7. '０' → logprob: -18.0
    8. '```' → logprob: -18.25
    9. '+' → logprob: -19.25
    10. '000' → logprob: -19.375

Token 299: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.575946569442749
    2. '+' → logprob: -0.825946569442749
    3. '+B' → logprob: -11.950946807861328
    4. ' +
' → logprob: -15.075946807861328
    5. '+
' → logprob: -15.825946807861328
    6. ' plus' → logprob: -16.700946807861328
    7. '+b' → logprob: -16.825946807861328
    8. ' ' → logprob: -17.325946807861328
    9. 'result' → logprob: -17.825946807861328
    10. ' ' → logprob: -17.950946807861328

Token 300: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0019286326132714748
    2. ' B' → logprob: -6.251928806304932
    3. 'b' → logprob: -18.376928329467773
    4. '	B' → logprob: -20.501928329467773
    5. '5' → logprob: -21.251928329467773
    6. '_B' → logprob: -22.626928329467773
    7. '   ' → logprob: -23.001928329467773
    8. ' ' → logprob: -23.126928329467773
    9. '(B' → logprob: -24.126928329467773
    10. '"B' → logprob: -24.251928329467773

Token 301: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005928558763116598
    2. ' ' → logprob: -5.1309285163879395
    3. '  ' → logprob: -17.50592803955078
    4. '   ' → logprob: -18.50592803955078
    5. '```' → logprob: -19.13092803955078
    6. ' ' → logprob: -19.38092803955078
    7. '۵' → logprob: -20.75592803955078
    8. '    ' → logprob: -21.00592803955078
    9. ' five' → logprob: -21.38092803955078
    10. '５' → logprob: -21.44342803955078

Token 303: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '  ' → logprob: -18.125030517578125
    4. '```' → logprob: -18.375030517578125
    5. '   ' → logprob: -19.375030517578125
    6. '۵' → logprob: -20.125030517578125
    7. '٥' → logprob: -20.687530517578125
    8. '５' → logprob: -20.750030517578125
    9. ' ' → logprob: -21.437530517578125
    10. '৫' → logprob: -21.687530517578125

Token 304: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.107425062713446e-06
    2. ' print' → logprob: -12.250006675720215
    3. '
' → logprob: -13.500006675720215
    4. '```' → logprob: -14.750006675720215
    5. '#print' → logprob: -15.250006675720215
    6. '<|end|>' → logprob: -15.875006675720215
    7. '(print' → logprob: -16.87500762939453
    8. '.print' → logprob: -17.50000762939453
    9. '#' → logprob: -17.62500762939453
    10. '\n' → logprob: -18.62500762939453

Token 306: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.0
    3. '#print' → logprob: -20.625
    4. 'prin' → logprob: -21.0
    5. '```' → logprob: -22.125
    6. 'result' → logprob: -23.0
    7. 'pr' → logprob: -23.5
    8. '#' → logprob: -23.5
    9. 'Print' → logprob: -24.125
    10. 'printf' → logprob: -24.375

Token 307: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0017707353690639138
    2. 'icher' → logprob: -6.501770973205566
    3. '#' → logprob: -8.876770973205566
    4. 'fic' → logprob: -10.001770973205566
    5. 'ichage' → logprob: -10.001770973205566
    6. 'ic' → logprob: -10.876770973205566
    7. 'f' → logprob: -11.251770973205566
    8. 'ich' → logprob: -13.126770973205566
    9. 'che' → logprob: -14.251770973205566
    10. '```' → logprob: -14.251770973205566

Token 308: ' le' (ID: 505)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0004074354947078973
    2. '(' → logprob: -8.250407218933105
    3. 'result' → logprob: -8.875407218933105
    4. ' (' → logprob: -12.500407218933105
    5. '(resultado' → logprob: -14.250407218933105
    6. '(res' → logprob: -14.375407218933105
    7. '(r' → logprob: -15.000407218933105
    8. 'print' → logprob: -15.250407218933105
    9. ' resultat' → logprob: -15.250407218933105
    10. '()' → logprob: -15.875407218933105

Token 309: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.050803348422050476
    2. '(result' → logprob: -3.5508034229278564
    3. 'r' → logprob: -4.425803184509277
    4. 'rés' → logprob: -5.175803184509277
    5. ' résultat' → logprob: -6.050803184509277
    6. 'print' → logprob: -7.800803184509277
    7. 's' → logprob: -8.175803184509277
    8. ' resultat' → logprob: -9.675803184509277
    9. 'res' → logprob: -10.425803184509277
    10. ' result' → logprob: -10.550803184509277

Token 310: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.098748053773306e-05
    2. ' print' → logprob: -9.75006103515625
    3. '
' → logprob: -13.12506103515625
    4. '```' → logprob: -14.50006103515625
    5. '(print' → logprob: -18.25006103515625
    6. ' 
' → logprob: -18.25006103515625
    7. '.print' → logprob: -18.50006103515625
    8. 'result' → logprob: -19.00006103515625
    9. '``' → logprob: -19.37506103515625
    10. '#print' → logprob: -19.37506103515625

Token 311: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.0
    3. '
' → logprob: -17.25
    4. '```' → logprob: -18.125
    5. 'result' → logprob: -19.625
    6. '(print' → logprob: -21.25
    7. '#print' → logprob: -21.75
    8. ')
' → logprob: -22.25
    9. 'prin' → logprob: -22.875
    10. '.print' → logprob: -23.0

Token 312: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9145292639732361
    2. '()' → logprob: -1.1645293235778809
    3. '(' → logprob: -2.164529323577881
    4. 'la' → logprob: -3.039529323577881
    5. ' la' → logprob: -3.289529323577881
    6. 'l' → logprob: -3.414529323577881
    7. ' ' → logprob: -4.164529323577881
    8. 'le' → logprob: -4.539529323577881
    9. ' l' → logprob: -5.289529323577881
    10. ' print' → logprob: -5.539529323577881

Token 313: ' console' (ID: 3887)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.39590874314308167
    2. 'print' → logprob: -1.1459087133407593
    3. 'terminal' → logprob: -5.020908832550049
    4. ' console' → logprob: -6.270908832550049
    5. ' terminal' → logprob: -9.14590835571289
    6. 'f' → logprob: -9.77090835571289
    7. 'fonction' → logprob: -9.89590835571289
    8. ' print' → logprob: -10.02090835571289
    9. '#' → logprob: -10.14590835571289
    10. 'output' → logprob: -10.64590835571289

Token 314: ' grâce' (ID: 31589)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -16.0
    3. ' print' → logprob: -16.0
    4. '```' → logprob: -16.75
    5. '``' → logprob: -21.5
    6. '#print' → logprob: -22.375
    7. '(print' → logprob: -22.75
    8. '.print' → logprob: -23.125
    9. '
' → logprob: -23.875
    10. 'Print' → logprob: -24.375

Token 315: ' à' (ID: 1221)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8066139817237854
    2. 'à' → logprob: -1.1816139221191406
    3. '(' → logprob: -1.9316139221191406
    4. 'print' → logprob: -2.5566139221191406
    5. '(print' → logprob: -4.681613922119141
    6. ' à' → logprob: -4.806613922119141
    7. 'au' → logprob: -5.306613922119141
    8. '(
' → logprob: -7.056613922119141
    9. ''à' → logprob: -7.931613922119141
    10. ')' → logprob: -8.43161392211914

Token 316: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001238004770129919
    2. ' print' → logprob: -9.000123977661133
    3. '```' → logprob: -14.875123977661133
    4. '`' → logprob: -18.250123977661133
    5. 'prin' → logprob: -18.500123977661133
    6. 'la' → logprob: -18.750123977661133
    7. ' la' → logprob: -19.500123977661133
    8. '(print' → logprob: -20.625123977661133
    9. 'pr' → logprob: -21.125123977661133
    10. '``' → logprob: -21.500123977661133

Token 317: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.25
    3. 'prin' → logprob: -21.5
    4. '```' → logprob: -22.75
    5. '#print' → logprob: -23.125
    6. 'pr' → logprob: -24.75
    7. 'Print' → logprob: -25.625
    8. '(print' → logprob: -25.75
    9. 'println' → logprob: -26.0
    10. 'printf' → logprob: -26.625

Token 318: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001234428636962548
    2. ' print' → logprob: -9.000123023986816
    3. '(print' → logprob: -17.250123977661133
    4. '```' → logprob: -19.750123977661133
    5. 'prin' → logprob: -21.250123977661133
    6. '`' → logprob: -21.625123977661133
    7. 'pr' → logprob: -22.875123977661133
    8. '#print' → logprob: -23.125123977661133
    9. '	print' → logprob: -23.625123977661133
    10. '.print' → logprob: -23.750123977661133

Token 319: '()
' (ID: 1234)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0013283335138112307
    2. '()
' → logprob: -6.751328468322754
    3. '(print' → logprob: -9.376328468322754
    4. '(
' → logprob: -10.751328468322754
    5. '
' → logprob: -11.126328468322754
    6. '()' → logprob: -11.251328468322754
    7. 'result' → logprob: -11.626328468322754
    8. '(' → logprob: -11.876328468322754
    9. ' print' → logprob: -12.126328468322754
    10. '```' → logprob: -13.251328468322754

Token 320: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.25
    3. ' print' → logprob: -20.5
    4. '``' → logprob: -25.125
    5. '(print' → logprob: -26.375
    6. '#print' → logprob: -26.375
    7. 'prin' → logprob: -26.5
    8. '.print' → logprob: -27.125
    9. 'pr' → logprob: -27.125
    10. 'Print' → logprob: -27.5

Token 321: ' Cela' (ID: 44403)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '```' → logprob: -19.875
    4. '#print' → logprob: -24.25
    5. 'prin' → logprob: -25.0
    6. 'pr' → logprob: -25.0
    7. 'result' → logprob: -25.625
    8. '.print' → logprob: -25.625
    9. 'Print' → logprob: -25.75
    10. '(print' → logprob: -25.875

Token 322: ' écrit' (ID: 46574)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6330462098121643
    2. 'print' → logprob: -0.7580462098121643
    3. '(print' → logprob: -8.38304615020752
    4. '.print' → logprob: -10.00804615020752
    5. '
' → logprob: -10.13304615020752
    6. ')' → logprob: -10.13304615020752
    7. 'result' → logprob: -11.13304615020752
    8. ' prints' → logprob: -11.25804615020752
    9. '_print' → logprob: -11.38304615020752
    10. '#print' → logprob: -11.75804615020752

Token 323: ' la' (ID: 557)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.018594572320580482
    2. 'result' → logprob: -4.643594741821289
    3. '(' → logprob: -4.768594741821289
    4. '()' → logprob: -8.893594741821289
    5. '(res' → logprob: -9.518594741821289
    6. ' resultat' → logprob: -10.643594741821289
    7. ' (' → logprob: -11.018594741821289
    8. '(resultado' → logprob: -11.268594741821289
    9. '("' → logprob: -11.768594741821289
    10. ' result' → logprob: -12.268594741821289

Token 324: ' valeur' (ID: 41664)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05860276520252228
    2. 'rés' → logprob: -2.933602809906006
    3. 'val' → logprob: -6.183602809906006
    4. ' result' → logprob: -7.308602809906006
    5. '(result' → logprob: -8.433602333068848
    6. ' résultat' → logprob: -8.558602333068848
    7. 'print' → logprob: -8.558602333068848
    8. 'r' → logprob: -9.058602333068848
    9. 'ré' → logprob: -9.808602333068848
    10. ' resultat' → logprob: -9.808602333068848

Token 325: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9261794686317444
    2. '(result' → logprob: -0.9261794686317444
    3. 'de' → logprob: -1.8011794090270996
    4. '(' → logprob: -3.9261794090270996
    5. 'du' → logprob: -4.5511794090271
    6. '()' → logprob: -5.1761794090271
    7. ' de' → logprob: -6.3011794090271
    8. 'print' → logprob: -6.4261794090271
    9. 'final' → logprob: -6.5511794090271
    10. ')' → logprob: -7.6761794090271

Token 326: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01807256042957306
    2. '(result' → logprob: -4.518072605133057
    3. ' resultat' → logprob: -5.018072605133057
    4. ' result' → logprob: -7.893072605133057
    5. ' résultat' → logprob: -12.018072128295898
    6. '(' → logprob: -13.518072128295898
    7. '_result' → logprob: -14.518072128295898
    8. 'print' → logprob: -14.893072128295898
    9. 'resultado' → logprob: -15.268072128295898
    10. 'res' → logprob: -15.518072128295898

Token 327: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -5.512236498361744e-07
    2. 'rés' → logprob: -14.875000953674316
    3. ' result' → logprob: -15.625000953674316
    4. ' resultat' → logprob: -16.5
    5. ' résultat' → logprob: -18.0
    6. 'res' → logprob: -18.25
    7. 'resultado' → logprob: -18.25
    8. 'variable' → logprob: -18.375
    9. '```' → logprob: -19.75
    10. 'r' → logprob: -20.0

Token 328: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.001659589703194797
    2. '(result' → logprob: -6.626659393310547
    3. ' resultat' → logprob: -8.626659393310547
    4. ' result' → logprob: -9.001659393310547
    5. 'print' → logprob: -10.626659393310547
    6. '`' → logprob: -13.876659393310547
    7. ' résultat' → logprob: -14.001659393310547
    8. 'rés' → logprob: -14.001659393310547
    9. '"' → logprob: -14.126659393310547
    10. '```' → logprob: -14.126659393310547

Token 329: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.9361264946837764e-07
    2. ' resultat' → logprob: -16.5
    3. ' result' → logprob: -18.625
    4. 'res' → logprob: -18.75
    5. 'rés' → logprob: -19.875
    6. 'resultado' → logprob: -20.75
    7. '`' → logprob: -21.5
    8. '```' → logprob: -21.875
    9. '"' → logprob: -22.125
    10. 'print' → logprob: -22.125

Token 330: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0013717879774048924
    2. 'result' → logprob: -6.62637186050415
    3. 'print' → logprob: -10.251371383666992
    4. '```' → logprob: -12.376371383666992
    5. '#' → logprob: -13.001371383666992
    6. ')' → logprob: -13.876371383666992
    7. '`' → logprob: -14.501371383666992
    8. 'a' → logprob: -14.876371383666992
    9. '(result' → logprob: -15.126371383666992
    10. ' resultat' → logprob: -15.251371383666992

Token 331: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036208622623234987
    2. '()' → logprob: -6.128620624542236
    3. '(result' → logprob: -7.128620624542236
    4. ' )' → logprob: -8.253621101379395
    5. '())' → logprob: -8.753621101379395
    6. 'result' → logprob: -9.878621101379395
    7. ')
' → logprob: -9.878621101379395
    8. '(' → logprob: -10.128621101379395
    9. '')' → logprob: -10.628621101379395
    10. ',' → logprob: -11.503621101379395

Token 332: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001561009994475171
    2. '
' → logprob: -9.12515640258789
    3. ')
' → logprob: -10.87515640258789
    4. '(print' → logprob: -11.25015640258789
    5. 'result' → logprob: -11.75015640258789
    6. ')' → logprob: -13.00015640258789
    7. ' print' → logprob: -13.00015640258789
    8. '()
' → logprob: -13.25015640258789
    9. '(result' → logprob: -14.75015640258789
    10. '```' → logprob: -15.25015640258789

Token 333: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.058403756469488144
    2. 'la' → logprob: -3.058403730392456
    3. ' l' → logprob: -4.808403968811035
    4. ' la' → logprob: -7.683403968811035
    5. 'à' → logprob: -8.308403968811035
    6. 'print' → logprob: -8.433403968811035
    7. 'é' → logprob: -8.683403968811035
    8. 'lac' → logprob: -9.433403968811035
    9. '```' → logprob: -9.558403968811035
    10. 'lin' → logprob: -9.933403968811035

Token 334: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.10257086157798767
    2. 'a' → logprob: -2.4775707721710205
    3. 'é' → logprob: -4.6025710105896
    4. '’écran' → logprob: -6.7275710105896
    5. 'e' → logprob: -7.1025710105896
    6. ''intérieur' → logprob: -7.4775710105896
    7. ''aide' → logprob: -8.102570533752441
    8. ''é' → logprob: -8.852570533752441
    9. '#' → logprob: -9.227570533752441
    10. ' écran' → logprob: -9.727570533752441

Token 335: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019546831026673317
    2. '
' → logprob: -6.251954555511475
    3. ' print' → logprob: -10.876955032348633
    4. '(print' → logprob: -12.751955032348633
    5. '
' → logprob: -13.626955032348633
    6. '()
' → logprob: -14.126955032348633
    7. 'result' → logprob: -14.126955032348633
    8. '\n' → logprob: -14.626955032348633
    9. '```' → logprob: -14.751955032348633
    10. ' 
' → logprob: -15.251955032348633

Token 336: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.0
    3. ' print' → logprob: -19.5
    4. 'pr' → logprob: -25.0
    5. 'prin' → logprob: -25.0
    6. '#print' → logprob: -25.25
    7. '``' → logprob: -25.5
    8. '
' → logprob: -25.875
    9. '.print' → logprob: -26.125
    10. '(print' → logprob: -26.125

Token 337: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.001174747827462852
    2. '(' → logprob: -6.7511749267578125
    3. '(resultado' → logprob: -13.001174926757812
    4. '(res' → logprob: -14.251174926757812
    5. ' (' → logprob: -14.501174926757812
    6. 'result' → logprob: -14.751174926757812
    7. '(print' → logprob: -15.126174926757812
    8. '(results' → logprob: -15.376174926757812
    9. '()' → logprob: -15.376174926757812
    10. '(rest' → logprob: -17.001174926757812

Token 338: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -2.248469718324486e-05
    2. 't' → logprob: -10.875022888183594
    3. ')' → logprob: -12.875022888183594
    4. 'a' → logprob: -15.125022888183594
    5. ' at' → logprob: -15.500022888183594
    6. '(at' → logprob: -15.750022888183594
    7. '_at' → logprob: -16.125022888183594
    8. 'ат' → logprob: -16.625022888183594
    9. ''at' → logprob: -17.125022888183594
    10. 'result' → logprob: -17.625022888183594

Token 339: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.375
    3. '()' → logprob: -18.0
    4. '))' → logprob: -18.125
    5. '())' → logprob: -18.625
    6. ')`' → logprob: -18.75
    7. ')
' → logprob: -19.75
    8. '')' → logprob: -20.625
    9. ')#' → logprob: -20.875
    10. ')}' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 337
Tokens correctement prédits (1ère position, stricte): 91
Tokens correctement prédits (1ère position, avec adaptation): 91
Tokens correctement prédits (top 10): 207
Précision stricte (1ère position): 27.00%
Précision adaptée (1ère position): 27.00%
Précision (top 10): 61.42%
================================================================================
