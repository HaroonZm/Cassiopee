================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A,B,K = [int(x) for x in input().split()]
def do_step(cnt, val1, val2):
    if cnt%2==0:
        val1 = val1//2
        val2 += val1
    else:
        val2 = val2//2
        val1 += val2
    return val1,val2
step = 0
while step<K:
    if step%2==0:
        x1,x2 = do_step(step,A,B)
        A,B = x1,x2
    else:
        A,B = do_step(step,B,A)[1],do_step(step,B,A)[0]
    step+=1
print("{} {}".format(A,B))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',B' (ID: 19853)
  → Token d'amorce (pas de prédiction)

Token 2: ',K' (ID: 107147)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09015921503305435
    2. ',' → logprob: -2.9651591777801514
    3. ' =' → logprob: -3.8401591777801514
    4. ';' → logprob: -5.5901594161987305
    5. '.' → logprob: -5.9651594161987305
    6. ')' → logprob: -6.3401594161987305
    7. '<|end|>' → logprob: -6.3401594161987305
    8. '[' → logprob: -6.8401594161987305
    9. '+' → logprob: -7.2151594161987305
    10. '```' → logprob: -8.21515941619873

Token 4: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9744963049888611
    2. ' []' → logprob: -1.8494963645935059
    3. ' map' → logprob: -2.099496364593506
    4. '0' → logprob: -2.724496364593506
    5. ' [],' → logprob: -2.724496364593506
    6. '[]' → logprob: -2.974496364593506
    7. 'map' → logprob: -3.099496364593506
    8. ' [' → logprob: -3.349496364593506
    9. ' input' → logprob: -3.849496364593506
    10. 'input' → logprob: -4.099496364593506

Token 5: 'int' (ID: 491)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3812350630760193
    2. '[]' → logprob: -1.506235122680664
    3. '0' → logprob: -2.881235122680664
    4. '1' → logprob: -3.881235122680664
    5. '[' → logprob: -5.131235122680664
    6. ']int' → logprob: -5.631235122680664
    7. '[int' → logprob: -6.006235122680664
    8. '[],' → logprob: -6.381235122680664
    9. 'int' → logprob: -6.506235122680664
    10. '10' → logprob: -6.881235122680664

Token 6: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.24650946259498596
    2. '(i' → logprob: -2.246509552001953
    3. '(' → logprob: -2.621509552001953
    4. '()]' → logprob: -4.121509552001953
    5. '(input' → logprob: -4.621509552001953
    6. '(s' → logprob: -4.996509552001953
    7. ']' → logprob: -5.246509552001953
    8. '(item' → logprob: -7.371509552001953
    9. '(a' → logprob: -7.746509552001953
    10. '(line' → logprob: -8.246509552001953

Token 7: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36245083808898926
    2. '(i' → logprob: -1.2374508380889893
    3. '(x' → logprob: -5.11245059967041
    4. '(input' → logprob: -5.86245059967041
    5. '(s' → logprob: -6.36245059967041
    6. '(token' → logprob: -6.61245059967041
    7. ')i' → logprob: -7.23745059967041
    8. '(item' → logprob: -7.86245059967041
    9. '(code' → logprob: -8.48745059967041
    10. ')]' → logprob: -8.86245059967041

Token 8: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1606253385543823
    2. '(input' → logprob: -1.1606253385543823
    3. '(i' → logprob: -1.7856253385543823
    4. 'for' → logprob: -1.9106253385543823
    5. '(x' → logprob: -4.035625457763672
    6. '(line' → logprob: -4.410625457763672
    7. ']' → logprob: -4.785625457763672
    8. '(' → logprob: -5.285625457763672
    9. 'input' → logprob: -5.285625457763672
    10. ')' → logprob: -5.785625457763672

Token 9: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20164312422275543
    2. 'input' → logprob: -1.7016431093215942
    3. ' x' → logprob: -9.326642990112305
    4. ' in' → logprob: -10.701642990112305
    5. ' range' → logprob: -10.701642990112305
    6. 'range' → logprob: -11.076642990112305
    7. '(input' → logprob: -11.076642990112305
    8. ' raw' → logprob: -11.326642990112305
    9. '=input' → logprob: -11.451642990112305
    10. ' ' → logprob: -11.576642990112305

Token 10: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7125385403633118
    2. ' in' → logprob: -0.8375385403633118
    3. 'input' → logprob: -2.962538480758667
    4. '(input' → logprob: -3.837538480758667
    5. ' input' → logprob: -6.712538719177246
    6. '=input' → logprob: -7.337538719177246
    7. '<|end|>' → logprob: -7.462538719177246
    8. '(' → logprob: -7.837538719177246
    9. ' ' → logprob: -9.587538719177246
    10. '<|end|>' → logprob: -9.837538719177246

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132677972316742
    2. ' input' → logprob: -1.3132678270339966
    3. '(input' → logprob: -12.188267707824707
    4. 'range' → logprob: -14.563267707824707
    5. '=input' → logprob: -15.438267707824707
    6. '<input' → logprob: -16.063268661499023
    7. ' range' → logprob: -16.813268661499023
    8. ',input' → logprob: -17.063268661499023
    9. '```' → logprob: -17.188268661499023
    10. '[input' → logprob: -17.438268661499023

Token 12: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.03563228249549866
    2. '()' → logprob: -3.660632371902466
    3. '(' → logprob: -4.910632133483887
    4. ']()' → logprob: -7.035632133483887
    5. ']' → logprob: -7.910632133483887
    6. '().' → logprob: -8.035632133483887
    7. '()][' → logprob: -9.160632133483887
    8. '()].' → logprob: -9.285632133483887
    9. '())' → logprob: -10.285632133483887
    10. '`()' → logprob: -10.660632133483887

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003049570368602872
    2. 'strip' → logprob: -8.25030517578125
    3. 'rstrip' → logprob: -10.25030517578125
    4. ' split' → logprob: -11.75030517578125
    5. '(split' → logprob: -15.12530517578125
    6. 'spl' → logprob: -15.87530517578125
    7. 'replace' → logprob: -17.62530517578125
    8. 'read' → logprob: -17.62530517578125
    9. '```' → logprob: -18.12530517578125
    10. 'startswith' → logprob: -19.50030517578125

Token 14: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.015667827799916267
    2. '('' → logprob: -4.640667915344238
    3. '(' → logprob: -5.640667915344238
    4. '())' → logprob: -6.390667915344238
    5. '()' → logprob: -7.390667915344238
    6. ')]' → logprob: -11.390667915344238
    7. '("' → logprob: -11.515667915344238
    8. '()][' → logprob: -11.890667915344238
    9. ']' → logprob: -12.015667915344238
    10. '()],' → logprob: -12.765667915344238

Token 15: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6732102036476135
    2. '+' → logprob: -1.9232101440429688
    3. '#' → logprob: -2.4232101440429688
    4. ':' → logprob: -3.0482101440429688
    5. ' if' → logprob: -3.0482101440429688
    6. '*' → logprob: -3.6732101440429688
    7. '%' → logprob: -3.6732101440429688
    8. ',' → logprob: -3.6732101440429688
    9. '>' → logprob: -4.048210144042969
    10. '
' → logprob: -4.798210144042969

Token 16: ' do' (ID: 621)
  Prédit: ' func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' func' → logprob: -1.3983345031738281
    2. ' factorial' → logprob: -2.148334503173828
    3. ' main' → logprob: -2.273334503173828
    4. ' solve' → logprob: -2.523334503173828
    5. ' f' → logprob: -2.648334503173828
    6. ' max' → logprob: -3.023334503173828
    7. ' space' → logprob: -3.273334503173828
    8. ' calculate' → logprob: -3.398334503173828
    9. ' solution' → logprob: -3.523334503173828
    10. ' my' → logprob: -3.523334503173828

Token 17: '_step' (ID: 27360)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5502004027366638
    2. '_n' → logprob: -1.8002004623413086
    3. '_s' → logprob: -2.3002004623413086
    4. 'ing' → logprob: -2.8002004623413086
    5. 'ne' → logprob: -3.1752004623413086
    6. ' ' → logprob: -3.9252004623413086
    7. 'n' → logprob: -4.550200462341309
    8. 'Something' → logprob: -4.800200462341309
    9. ' _' → logprob: -5.300200462341309
    10. ' something' → logprob: -6.300200462341309

Token 18: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0639905259013176
    2. '():' → logprob: -2.938990592956543
    3. '()' → logprob: -5.188990592956543
    4. '_' → logprob: -6.063990592956543
    5. '(a' → logprob: -8.063990592956543
    6. '(_' → logprob: -9.188990592956543
    7. '(x' → logprob: -9.313990592956543
    8. ' (' → logprob: -9.688990592956543
    9. '(n' → logprob: -9.688990592956543
    10. '(step' → logprob: -9.688990592956543

Token 19: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8413654565811157
    2. ')' → logprob: -0.9663654565811157
    3. ',' → logprob: -1.7163654565811157
    4. '(' → logprob: -5.341365337371826
    5. '_' → logprob: -6.216365337371826
    6. ' ,' → logprob: -7.591365337371826
    7. ' ):' → logprob: -8.216365814208984
    8. ' ' → logprob: -8.466365814208984
    9. ' )' → logprob: -8.716365814208984
    10. '=' → logprob: -9.341365814208984

Token 20: ' val' (ID: 1459)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -2.1274032592773438
    2. 'A' → logprob: -2.3774032592773438
    3. 'K' → logprob: -2.3774032592773438
    4. ' A' → logprob: -2.5024032592773438
    5. 'pos' → logprob: -3.1899032592773438
    6. 'k' → logprob: -3.3774032592773438
    7. 'a' → logprob: -3.5649032592773438
    8. 'step' → logprob: -3.6899032592773438
    9. 'steps' → logprob: -3.9399032592773438
    10. ' a' → logprob: -4.002403259277344

Token 21: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01327222865074873
    2. ')' → logprob: -4.763272285461426
    3. ',' → logprob: -5.388272285461426
    4. ':' → logprob: -10.638272285461426
    5. ' ):' → logprob: -10.888272285461426
    6. '   ' → logprob: -11.388272285461426
    7. '):
' → logprob: -12.013272285461426
    8. '=' → logprob: -12.763272285461426
    9. '_' → logprob: -12.888272285461426
    10. ' ' → logprob: -13.513272285461426

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35899022221565247
    2. '):' → logprob: -1.23399019241333
    3. ')' → logprob: -4.60899019241333
    4. '1' → logprob: -7.85899019241333
    5. ' ,' → logprob: -10.108990669250488
    6. '2' → logprob: -10.858990669250488
    7. ':' → logprob: -11.233990669250488
    8. '=' → logprob: -11.358990669250488
    9. ' ):' → logprob: -11.483990669250488
    10. '_' → logprob: -12.483990669250488

Token 23: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.4287717640399933
    2. 'val' → logprob: -1.053771734237671
    3. ',val' → logprob: -10.80377197265625
    4. '	val' → logprob: -11.36627197265625
    5. ' ' → logprob: -12.36627197265625
    6. 'v' → logprob: -12.55377197265625
    7. 'vall' → logprob: -12.99127197265625
    8. '   ' → logprob: -13.24127197265625
    9. ',' → logprob: -13.30377197265625
    10. ')' → logprob: -13.30377197265625

Token 24: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0621970109641552
    2. '2' → logprob: -2.812196969985962
    3. '):' → logprob: -8.937196731567383
    4. ')' → logprob: -9.812196731567383
    5. ',' → logprob: -10.437196731567383
    6. ',val' → logprob: -12.437196731567383
    7. 's' → logprob: -13.187196731567383
    8. 'ue' → logprob: -13.812196731567383
    9. ')>' → logprob: -13.937196731567383
    10. ' ' → logprob: -13.937196731567383

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004452432040125132
    2. ',' → logprob: -6.004452228546143
    3. ')' → logprob: -6.254452228546143
    4. ' ):' → logprob: -10.3794527053833
    5. ':' → logprob: -11.6294527053833
    6. '=' → logprob: -12.8794527053833
    7. ']:' → logprob: -13.3794527053833
    8. ''):' → logprob: -13.7544527053833
    9. '():' → logprob: -14.0044527053833
    10. '):
' → logprob: -14.0044527053833

Token 26: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036763211246579885
    2. '):' → logprob: -6.503676414489746
    3. '   ' → logprob: -6.753676414489746
    4. ' :' → logprob: -8.503676414489746
    5. ',' → logprob: -8.628676414489746
    6. ')' → logprob: -8.878676414489746
    7. ':
' → logprob: -9.378676414489746
    8. '<|end|>' → logprob: -9.378676414489746
    9. ' ' → logprob: -9.503676414489746
    10. '    ' → logprob: -9.628676414489746

Token 27: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09572286903858185
    2. ' 
' → logprob: -3.0957229137420654
    3. '    ' → logprob: -3.5957229137420654
    4. '   ' → logprob: -5.220722675323486
    5. '     
' → logprob: -5.845722675323486
    6. ' \' → logprob: -6.345722675323486
    7. '<|end|>' → logprob: -6.345722675323486
    8. '  ' → logprob: -7.095722675323486
    9. ' if' → logprob: -7.345722675323486
    10. ':' → logprob: -7.345722675323486

Token 28: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.050878237932920456
    2. ' val' → logprob: -3.1758782863616943
    3. 'cnt' → logprob: -4.925878047943115
    4. ' ' → logprob: -8.425878524780273
    5. '(cnt' → logprob: -8.675878524780273
    6. 'val' → logprob: -9.300878524780273
    7. '	cnt' → logprob: -10.425878524780273
    8. ' not' → logprob: -10.550878524780273
    9. ' A' → logprob: -10.675878524780273
    10. '  ' → logprob: -12.050878524780273

Token 29: '%' (ID: 4)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10324475169181824
    2. ' >' → logprob: -2.9782447814941406
    3. '==' → logprob: -3.7282447814941406
    4. ' <=' → logprob: -4.603244781494141
    5. ' <' → logprob: -4.853244781494141
    6. ' ' → logprob: -6.228244781494141
    7. ' >=' → logprob: -6.478244781494141
    8. '>' → logprob: -6.603244781494141
    9. '<' → logprob: -8.97824478149414
    10. '<=' → logprob: -9.22824478149414

Token 30: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0067121777683496475
    2. '3' → logprob: -5.881711959838867
    3. ' ' → logprob: -6.881711959838867
    4. 'K' → logprob: -7.131711959838867
    5. '10' → logprob: -7.506711959838867
    6. '4' → logprob: -7.881711959838867
    7. 'A' → logprob: -8.006711959838867
    8. '5' → logprob: -8.131711959838867
    9. '7' → logprob: -9.131711959838867
    10. '100' → logprob: -9.256711959838867

Token 31: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5247188210487366
    2. '==' → logprob: -0.8997188210487366
    3. ':' → logprob: -6.774718761444092
    4. ' !=' → logprob: -9.02471923828125
    5. '=' → logprob: -9.27471923828125
    6. ' ' → logprob: -9.39971923828125
    7. '!=' → logprob: -10.02471923828125
    8. ' :' → logprob: -10.52471923828125
    9. '>' → logprob: -10.77471923828125
    10. ')' → logprob: -11.02471923828125

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011072227731347084
    2. ' ' → logprob: -4.761072158813477
    3. '1' → logprob: -6.011072158813477
    4. '2' → logprob: -13.448572158813477
    5. '  ' → logprob: -14.948572158813477
    6. '   ' → logprob: -15.511072158813477
    7. ')' → logprob: -15.511072158813477
    8. '==' → logprob: -15.573572158813477
    9. '=' → logprob: -16.011072158813477
    10. '```' → logprob: -16.073572158813477

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010925926035270095
    2. ' :' → logprob: -7.751092433929443
    3. ' and' → logprob: -8.501092910766602
    4. ':return' → logprob: -8.501092910766602
    5. '):' → logprob: -8.626092910766602
    6. ':
' → logprob: -10.501092910766602
    7. ',' → logprob: -11.126092910766602
    8. '   ' → logprob: -11.501092910766602
    9. ')' → logprob: -11.626092910766602
    10. 'and' → logprob: -12.001092910766602

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21600711345672607
    2. '   ' → logprob: -2.3410072326660156
    3. '    ' → logprob: -2.5910072326660156
    4. ' ' → logprob: -5.091007232666016
    5. ':' → logprob: -5.216007232666016
    6. ' return' → logprob: -5.591007232666016
    7. '        ' → logprob: -6.341007232666016
    8. ' :' → logprob: -6.716007232666016
    9. ')' → logprob: -6.966007232666016
    10. ' (' → logprob: -7.716007232666016

Token 35: ' val' (ID: 1459)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4367014467716217
    2. ' val' → logprob: -1.3117014169692993
    3. 'return' → logprob: -2.936701536178589
    4. 'val' (adapté à ' val') → logprob: -3.811701536178589
    5. '       ' → logprob: -5.81170129776001
    6. ' if' → logprob: -6.56170129776001
    7. '    ' → logprob: -6.93670129776001
    8. ' ' → logprob: -6.93670129776001
    9. '        ' → logprob: -7.18670129776001
    10. '   ' → logprob: -8.186701774597168

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020551348105072975
    2. '2' → logprob: -3.8955514430999756
    3. ' +=' → logprob: -13.145551681518555
    4. ' ' → logprob: -13.270551681518555
    5. ' =' → logprob: -13.520551681518555
    6. '=' → logprob: -13.770551681518555
    7. '+=' → logprob: -13.958051681518555
    8. '+' → logprob: -14.395551681518555
    9. '```' → logprob: -15.083051681518555
    10. '   ' → logprob: -15.708051681518555

Token 37: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.39054879546165466
    2. ' +=' → logprob: -1.140548825263977
    3. '=' → logprob: -6.5155487060546875
    4. '+' → logprob: -6.8905487060546875
    5. ' -=' → logprob: -8.140548706054688
    6. '*=' → logprob: -8.390548706054688
    7. ' *=' → logprob: -8.390548706054688
    8. ' =' → logprob: -8.890548706054688
    9. '-=' → logprob: -8.890548706054688
    10. '+=(' → logprob: -10.390548706054688

Token 38: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.546343207359314
    2. 'val' → logprob: -1.171343207359314
    3. ' (' → logprob: -3.2963433265686035
    4. '(val' → logprob: -3.7963433265686035
    5. ' max' → logprob: -4.4213433265686035
    6. ' A' → logprob: -4.7963433265686035
    7. 'max' → logprob: -4.9213433265686035
    8. ' min' → logprob: -5.0463433265686035
    9. 'A' → logprob: -5.1713433265686035
    10. 'min' → logprob: -5.9213433265686035

Token 39: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42880910634994507
    2. '1' → logprob: -1.0538091659545898
    3. ' ' → logprob: -10.55380916595459
    4. 'val' → logprob: -10.67880916595459
    5. '<|end|>' → logprob: -11.86630916595459
    6. 'user' → logprob: -11.92880916595459
    7. '[val' → logprob: -11.99130916595459
    8. '   ' → logprob: -12.74130916595459
    9. '<|end|>' → logprob: -12.80380916595459
    10. '+' → logprob: -12.86630916595459

Token 40: '//' (ID: 393)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10899724811315536
    2. ' +' → logprob: -2.733997344970703
    3. '*' → logprob: -3.358997344970703
    4. ' *' → logprob: -5.983997344970703
    5. '-' → logprob: -7.733997344970703
    6. '+B' → logprob: -8.608997344970703
    7. '*K' → logprob: -9.108997344970703
    8. '+k' → logprob: -9.233997344970703
    9. '+A' → logprob: -9.983997344970703
    10. ' -' → logprob: -10.358997344970703

Token 41: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47892746329307556
    2. 'K' → logprob: -1.353927493095398
    3. 'A' → logprob: -3.1039273738861084
    4. 'val' → logprob: -3.1039273738861084
    5. 'B' → logprob: -3.4789273738861084
    6. '3' → logprob: -7.1039276123046875
    7. '10' → logprob: -8.603927612304688
    8. ' ' → logprob: -8.853927612304688
    9. 'k' → logprob: -9.228927612304688
    10. ' K' → logprob: -9.228927612304688

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41190606355667114
    2. '<|end|>' → logprob: -1.9119060039520264
    3. ' else' → logprob: -2.2869060039520264
    4. '       ' → logprob: -3.1619060039520264
    5. 'else' → logprob: -4.0369062423706055
    6. ')' → logprob: -4.2869062423706055
    7. ' ' → logprob: -5.5369062423706055
    8. '	else' → logprob: -6.5369062423706055
    9. ' elif' → logprob: -6.5369062423706055
    10. '*' → logprob: -6.7869062423706055

Token 43: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11732107400894165
    2. ' else' → logprob: -3.242321014404297
    3. '<|end|>' → logprob: -3.617321014404297
    4. 'else' → logprob: -3.867321014404297
    5. '       ' → logprob: -5.117321014404297
    6. ')' → logprob: -5.492321014404297
    7. 'elif' → logprob: -5.742321014404297
    8. ',' → logprob: -5.992321014404297
    9. ' elif' → logprob: -6.617321014404297
    10. 'return' → logprob: -6.617321014404297

Token 44: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.055003587156534195
    2. 'return' → logprob: -3.1800036430358887
    3. '   ' → logprob: -5.055003643035889
    4. '       ' → logprob: -6.180003643035889
    5. ' val' → logprob: -6.430003643035889
    6. 'else' → logprob: -6.555003643035889
    7. ' return' → logprob: -8.43000316619873
    8. 'elif' → logprob: -10.30500316619873
    9. 'def' → logprob: -10.43000316619873
    10. ' else' → logprob: -10.55500316619873

Token 45: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001929228543303907
    2. '1' → logprob: -6.25192928314209
    3. ' ' → logprob: -15.81442928314209
    4. 's' → logprob: -16.814428329467773
    5. '<|end|>' → logprob: -17.189428329467773
    6. '२' → logprob: -17.376928329467773
    7. '   ' → logprob: -17.439428329467773
    8. '```' → logprob: -17.814428329467773
    9. '۲' → logprob: -17.876928329467773
    10. '<|end|>' → logprob: -17.876928329467773

Token 46: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32714271545410156
    2. '=' → logprob: -1.7021427154541016
    3. ' *=' → logprob: -2.7021427154541016
    4. '*=' → logprob: -4.202142715454102
    5. ' +=' → logprob: -4.702142715454102
    6. '+=' → logprob: -5.452142715454102
    7. ' <<=' → logprob: -7.952142715454102
    8. '//=' → logprob: -7.952142715454102
    9. '*' → logprob: -8.952142715454102
    10. ' -=' → logprob: -9.077142715454102

Token 47: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0083752870559692
    2. 'K' → logprob: -1.2583752870559692
    3. '1' → logprob: -1.5083752870559692
    4. 'B' → logprob: -3.0083751678466797
    5. 'A' → logprob: -3.6333751678466797
    6. ' val' → logprob: -3.6333751678466797
    7. ' K' → logprob: -4.25837516784668
    8. ' ' → logprob: -5.63337516784668
    9. ' A' → logprob: -6.00837516784668
    10. '2' → logprob: -6.00837516784668

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14269085228443146
    2. '2' → logprob: -2.017690896987915
    3. 'al' → logprob: -12.142690658569336
    4. '12' → logprob: -13.267690658569336
    5. 'alue' → logprob: -13.767690658569336
    6. ' ' → logprob: -13.892690658569336
    7. 'e' → logprob: -13.892690658569336
    8. 'val' → logprob: -13.955190658569336
    9. '0' → logprob: -14.017690658569336
    10. 's' → logprob: -14.892690658569336

Token 49: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38592299818992615
    2. '<|end|>' → logprob: -1.2609230279922485
    3. '
' → logprob: -3.635922908782959
    4. 'return' → logprob: -5.760922908782959
    5. '	return' → logprob: -6.385922908782959
    6. ' return' → logprob: -6.385922908782959
    7. '<|end|>' → logprob: -6.635922908782959
    8. '\n' → logprob: -7.385922908782959
    9. ')' → logprob: -7.885922908782959
    10. '    
' → logprob: -8.135923385620117

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05296514555811882
    2. '<|end|>' → logprob: -3.5529651641845703
    3. '\n' → logprob: -4.67796516418457
    4. '    
' → logprob: -5.80296516418457
    5. '	return' → logprob: -6.30296516418457
    6. '\' → logprob: -6.30296516418457
    7. '
' → logprob: -6.55296516418457
    8. '```' → logprob: -7.17796516418457
    9. ' else' → logprob: -7.30296516418457
    10. '       ' → logprob: -7.42796516418457

Token 51: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0072770873084664345
    2. '<|end|>' → logprob: -5.382277011871338
    3. 'else' (adapté à ' else') → logprob: -7.507277011871338
    4. 'return' → logprob: -7.882277011871338
    5. ' else' → logprob: -8.132277488708496
    6. '       ' → logprob: -8.257277488708496
    7. '	return' → logprob: -8.382277488708496
    8. ' ' → logprob: -8.507277488708496
    9. '\n' → logprob: -8.757277488708496
    10. ')' → logprob: -9.132277488708496

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1469607800245285
    2. '       ' → logprob: -2.021960735321045
    3. '   ' → logprob: -5.896960735321045
    4. ':
' → logprob: -7.021960735321045
    5. ',' → logprob: -9.021961212158203
    6. ' :' → logprob: -9.271961212158203
    7. ' val' → logprob: -9.396961212158203
    8. 'val' → logprob: -9.396961212158203
    9. '    ' → logprob: -10.021961212158203
    10. '        ' → logprob: -10.271961212158203

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5272512435913086
    2. ' val' → logprob: -1.1522512435913086
    3. 'val' → logprob: -2.4022512435913086
    4. '	val' → logprob: -6.902251243591309
    5. '   ' → logprob: -7.152251243591309
    6. '```' → logprob: -7.277251243591309
    7. '    ' → logprob: -8.527251243591309
    8. '        ' → logprob: -8.902251243591309
    9. ' ' → logprob: -9.402251243591309
    10. '           ' → logprob: -9.777251243591309

Token 54: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.2813122272491455
    2. 'val' (adapté à ' val') → logprob: -1.4063122272491455
    3. '       ' → logprob: -10.406311988830566
    4. '   ' → logprob: -10.906311988830566
    5. '    ' → logprob: -11.281311988830566
    6. '_val' → logprob: -11.281311988830566
    7. 'A' → logprob: -11.656311988830566
    8. '	val' → logprob: -11.656311988830566
    9. '```' → logprob: -11.781311988830566
    10. ' ' → logprob: -11.781311988830566

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024756586644798517
    2. '1' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.93997573852539
    4. 's' → logprob: -18.00247573852539
    5. '```' → logprob: -18.37747573852539
    6. '0' → logprob: -18.62747573852539
    7. '   ' → logprob: -18.68997573852539
    8. '۲' → logprob: -18.93997573852539
    9. '_' → logprob: -19.12747573852539
    10. '２' → logprob: -19.37747573852539

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03875665366649628
    2. '=' → logprob: -3.2887566089630127
    3. ' *=' → logprob: -7.913756847381592
    4. ' +=' → logprob: -8.288756370544434
    5. '+=' → logprob: -11.038756370544434
    6. '*=' → logprob: -11.163756370544434
    7. ' ' → logprob: -11.288756370544434
    8. ',' → logprob: -11.413756370544434
    9. '//=' → logprob: -11.788756370544434
    10. ' //' → logprob: -12.163756370544434

Token 57: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5762704610824585
    2. ' val' → logprob: -0.8262704610824585
    3. '2' → logprob: -8.20127010345459
    4. '(val' → logprob: -11.20127010345459
    5. '0' → logprob: -11.70127010345459
    6. '	val' → logprob: -12.20127010345459
    7. '[val' → logprob: -12.32627010345459
    8. '       ' → logprob: -12.45127010345459
    9. '   ' → logprob: -12.57627010345459
    10. ' ' → logprob: -12.82627010345459

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4740810692310333
    2. '1' → logprob: -0.9740810394287109
    3. ' ' → logprob: -13.474081039428711
    4. 'val' → logprob: -14.036581039428711
    5. 'e' → logprob: -15.349081039428711
    6. 'z' → logprob: -15.849081039428711
    7. 's' → logprob: -16.03658103942871
    8. '```' → logprob: -16.09908103942871
    9. 'er' → logprob: -16.22408103942871
    10. 'f' → logprob: -16.28658103942871

Token 59: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.02283739671111107
    2. '*' → logprob: -4.022837162017822
    3. '+' → logprob: -5.897837162017822
    4. ' //' → logprob: -6.772837162017822
    5. ' *' → logprob: -8.39783763885498
    6. '```' → logprob: -8.89783763885498
    7. '#' → logprob: -9.02283763885498
    8. ' +' → logprob: -9.39783763885498
    9. '%' → logprob: -9.77283763885498
    10. '**' → logprob: -10.14783763885498

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.9040898880339228e-05
    2. '3' → logprob: -10.750028610229492
    3. ' ' → logprob: -12.375028610229492
    4. '4' → logprob: -13.500028610229492
    5. '1' → logprob: -13.625028610229492
    6. '5' → logprob: -15.625028610229492
    7. '```' → logprob: -16.187528610229492
    8. '6' → logprob: -16.500028610229492
    9. '7' → logprob: -17.000028610229492
    10. '   ' → logprob: -17.125028610229492

Token 61: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1761375516653061
    2. '
' → logprob: -2.6761374473571777
    3. '<|end|>' → logprob: -3.4261374473571777
    4. '       ' → logprob: -3.9261374473571777
    5. '```' → logprob: -4.551137447357178
    6. ' 
' → logprob: -5.176137447357178
    7. '\' → logprob: -5.551137447357178
    8. '    
' → logprob: -5.551137447357178
    9. '   ' → logprob: -6.176137447357178
    10. ' ' → logprob: -6.301137447357178

Token 62: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.06794329732656479
    2. ' 
' → logprob: -3.8179433345794678
    3. '<|end|>' → logprob: -4.442943096160889
    4. '```' → logprob: -4.942943096160889
    5. '\' → logprob: -5.192943096160889
    6. '
' → logprob: -5.567943096160889
    7. ' ' → logprob: -5.942943096160889
    8. '    
' → logprob: -6.692943096160889
    9. '     
' → logprob: -6.817943096160889
    10. '"\' → logprob: -6.942943096160889

Token 63: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.2519453763961792
    2. ' val' → logprob: -1.5019453763961792
    3. '   ' → logprob: -12.376945495605469
    4. '    ' → logprob: -12.751945495605469
    5. '	val' → logprob: -13.126945495605469
    6. '_val' → logprob: -13.126945495605469
    7. '       ' → logprob: -13.251945495605469
    8. 'Val' → logprob: -13.501945495605469
    9. '[val' → logprob: -14.126945495605469
    10. '           ' → logprob: -15.751945495605469

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '<|end|>' → logprob: -16.875
    3. '2' → logprob: -18.625
    4. '১' → logprob: -18.875
    5. '１' → logprob: -19.0
    6. ' ' → logprob: -19.5
    7. '۱' → logprob: -19.5
    8. '१' → logprob: -20.125
    9. '<|end|>' → logprob: -20.125
    10. '_' → logprob: -20.125

Token 65: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08223766833543777
    2. ' =' → logprob: -2.582237720489502
    3. '=' → logprob: -6.457237720489502
    4. '+=' → logprob: -6.582237720489502
    5. ' -=' → logprob: -8.832237243652344
    6. ' ' → logprob: -9.207237243652344
    7. ' *=' → logprob: -9.332237243652344
    8. ' +' → logprob: -10.707237243652344
    9. ' |=' → logprob: -11.207237243652344
    10. '<|end|>' → logprob: -12.582237243652344

Token 66: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1269284337759018
    2. ' val' → logprob: -2.1269283294677734
    3. '(val' → logprob: -16.126928329467773
    4. '2' → logprob: -16.751928329467773
    5. '	val' → logprob: -16.876928329467773
    6. '[val' → logprob: -18.001928329467773
    7. '1' → logprob: -18.626928329467773
    8. '_val' → logprob: -18.751928329467773
    9. 'v' → logprob: -18.876928329467773
    10. ' ' → logprob: -19.126928329467773

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11283199489116669
    2. '1' → logprob: -2.2378320693969727
    3. ' ' → logprob: -11.862832069396973
    4. 'val' → logprob: -13.737832069396973
    5. '```' → logprob: -14.362832069396973
    6. 's' → logprob: -15.675332069396973
    7. ')' → logprob: -16.237831115722656
    8. '_' → logprob: -16.362831115722656
    9. '0' → logprob: -16.425331115722656
    10. '   ' → logprob: -16.800331115722656

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.58370041847229
    2. '\n' → logprob: -1.70870041847229
    3. '<|end|>' → logprob: -1.95870041847229
    4. ')' → logprob: -3.33370041847229
    5. '
' → logprob: -3.58370041847229
    6. ' ' → logprob: -3.58370041847229
    7. '\' → logprob: -4.708700180053711
    8. '    
' → logprob: -5.958700180053711
    9. '```' → logprob: -6.208700180053711
    10. '\t' → logprob: -6.333700180053711

Token 69: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5522578954696655
    2. '   ' → logprob: -1.1772578954696655
    3. '\n' → logprob: -2.802258014678955
    4. '\' → logprob: -3.677258014678955
    5. ' ' → logprob: -4.802258014678955
    6. '<|end|>' → logprob: -5.052258014678955
    7. ':' → logprob: -5.177258014678955
    8. '
' → logprob: -6.052258014678955
    9. ' 
' → logprob: -6.677258014678955
    10. ':return' → logprob: -6.927258014678955

Token 70: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17983973026275635
    2. '\n' → logprob: -2.554839611053467
    3. ' ' → logprob: -3.429839611053467
    4. ')' → logprob: -3.804839611053467
    5. '\' → logprob: -4.054839611053467
    6. '<|end|>' → logprob: -5.679839611053467
    7. ' return' → logprob: -6.054839611053467
    8. '    ' → logprob: -6.304839611053467
    9. '```' → logprob: -6.804839611053467
    10. '  ' → logprob: -6.804839611053467

Token 71: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.16080324351787567
    2. ' val' → logprob: -1.910803198814392
    3. '(val' → logprob: -7.785803318023682
    4. ' (' → logprob: -9.160802841186523
    5. '(' → logprob: -10.035802841186523
    6. '[val' → logprob: -12.035802841186523
    7. ',val' → logprob: -12.660802841186523
    8. 'v' → logprob: -13.910802841186523
    9. '	val' → logprob: -13.910802841186523
    10. '   ' → logprob: -14.410802841186523

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16296188533306122
    2. '2' → logprob: -2.037961959838867
    3. '_' → logprob: -4.287961959838867
    4. 'val' → logprob: -5.287961959838867
    5. ' ' → logprob: -8.412961959838867
    6. 's' → logprob: -8.537961959838867
    7. '_val' → logprob: -8.537961959838867
    8. 't' → logprob: -9.412961959838867
    9. '```' → logprob: -9.412961959838867
    10. ')' → logprob: -9.537961959838867

Token 73: ',val' (ID: 126054)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04898245632648468
    2. '<|end|>' → logprob: -3.0489823818206787
    3. '<|end|>' → logprob: -9.173982620239258
    4. ',val' → logprob: -9.298982620239258
    5. ' ,' → logprob: -9.548982620239258
    6. ',
' → logprob: -9.923982620239258
    7. ' ' → logprob: -10.673982620239258
    8. ',K' → logprob: -11.673982620239258
    9. ',user' → logprob: -11.798982620239258
    10. '   ' → logprob: -12.548982620239258

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. '1' → logprob: -13.125001907348633
    3. ' ' → logprob: -18.125001907348633
    4. '₂' → logprob: -20.625001907348633
    5. '```' → logprob: -21.000001907348633
    6. '۲' → logprob: -21.000001907348633
    7. '２' → logprob: -21.250001907348633
    8. '   ' → logprob: -21.500001907348633
    9. '  ' → logprob: -21.750001907348633
    10. '_' → logprob: -22.000001907348633

Token 75: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: 'step' (ID: 17509)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0038942098617554
    2. ' ' → logprob: -2.253894329071045
    3. '```' → logprob: -2.378894329071045
    4. '<|end|>' → logprob: -2.628894329071045
    5. 'K' → logprob: -2.753894329071045
    6. 'n' → logprob: -3.253894329071045
    7. '[' → logprob: -3.628894329071045
    8. '#' → logprob: -3.628894329071045
    9. '(' → logprob: -3.753894329071045
    10. 'i' → logprob: -4.253894329071045

Token 77: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03589810058474541
    2. '_' → logprob: -3.410898208618164
    3. '(' → logprob: -6.660898208618164
    4. '_s' → logprob: -7.535898208618164
    5. '(s' → logprob: -8.785898208618164
    6. '_count' → logprob: -9.160898208618164
    7. ')' → logprob: -9.285898208618164
    8. ' s' → logprob: -11.410898208618164
    9. '()' → logprob: -11.660898208618164
    10. ',' → logprob: -12.035898208618164

Token 78: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021428147330880165
    2. 'K' → logprob: -4.396428108215332
    3. ' ' → logprob: -5.146428108215332
    4. ' K' → logprob: -6.271428108215332
    5. '1' → logprob: -6.771428108215332
    6. 'B' → logprob: -11.896428108215332
    7. 'A' → logprob: -12.396428108215332
    8. '[' → logprob: -12.771428108215332
    9. 'k' → logprob: -13.146428108215332
    10. '2' → logprob: -13.771428108215332

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03006044030189514
    2. 'K' → logprob: -3.5300605297088623
    3. '1' → logprob: -8.280060768127441
    4. ' ' → logprob: -10.655060768127441
    5. 'B' → logprob: -11.280060768127441
    6. ' K' → logprob: -12.280060768127441
    7. 'A' → logprob: -12.405060768127441
    8. 'k' → logprob: -12.405060768127441
    9. 'int' → logprob: -12.530060768127441
    10. '[K' → logprob: -14.155060768127441

Token 80: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.002041533123701811
    2. ' while' → logprob: -6.252041339874268
    3. '<|end|>' → logprob: -9.502041816711426
    4. '```' → logprob: -11.502041816711426
    5. 'wh' → logprob: -12.002041816711426
    6. 'w' → logprob: -12.752041816711426
    7. ' ' → logprob: -13.002041816711426
    8. ',' → logprob: -13.002041816711426
    9. 'if' → logprob: -13.002041816711426
    10. '	while' → logprob: -13.252041816711426

Token 82: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.002569356467574835
    2. 'step' → logprob: -6.002569198608398
    3. '(step' → logprob: -9.627569198608398
    4. ' K' → logprob: -11.627569198608398
    5. ' (' → logprob: -12.502569198608398
    6. ' A' → logprob: -12.627569198608398
    7. '	step' → logprob: -12.752569198608398
    8. ' True' → logprob: -13.502569198608398
    9. ' not' → logprob: -13.627569198608398
    10. 'Step' → logprob: -13.752569198608398

Token 83: '<K' (ID: 47827)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004343240987509489
    2. '<' → logprob: -5.504343032836914
    3. ' ' → logprob: -8.629343032836914
    4. ' <=' → logprob: -9.504343032836914
    5. ' <
' → logprob: -12.504343032836914
    6. ' <",' → logprob: -12.629343032836914
    7. ' !=' → logprob: -14.129343032836914
    8. ' \<' → logprob: -14.379343032836914
    9. '<len' → logprob: -14.504343032836914
    10. '<|end|>' → logprob: -15.004343032836914

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009940831921994686
    2. ' :' → logprob: -4.6349406242370605
    3. '+:' → logprob: -9.384941101074219
    4. '):' → logprob: -10.634941101074219
    5. '>:' → logprob: -10.759941101074219
    6. '+' → logprob: -11.384941101074219
    7. ':**' → logprob: -11.384941101074219
    8. ':
' → logprob: -11.884941101074219
    9. '>' → logprob: -12.009941101074219
    10. '<|end|>' → logprob: -12.384941101074219

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9301750063896179
    2. '<|end|>' → logprob: -0.9301750063896179
    3. ' ' → logprob: -3.0551750659942627
    4. ',' → logprob: -3.1801750659942627
    5. ' A' → logprob: -3.3051750659942627
    6. 'A' → logprob: -3.8051750659942627
    7. 'val' → logprob: -4.305174827575684
    8. 'step' → logprob: -4.430174827575684
    9. ',val' → logprob: -4.930174827575684
    10. ' val' → logprob: -5.305174827575684

Token 86: ' if' (ID: 538)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018217843025922775
    2. ' A' → logprob: -4.018218040466309
    3. '   ' → logprob: -10.143218040466309
    4. 'B' → logprob: -10.768218040466309
    5. ' ' → logprob: -13.143218040466309
    6. 'val' → logprob: -13.143218040466309
    7. 'a' → logprob: -13.893218040466309
    8. '	A' → logprob: -14.393218040466309
    9. '```' → logprob: -14.768218040466309
    10. '    ' → logprob: -15.018218040466309

Token 87: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.5501677989959717
    2. 'A' → logprob: -1.8001677989959717
    3. ' step' → logprob: -1.9251677989959717
    4. ' A' → logprob: -2.3001677989959717
    5. 'B' → logprob: -5.425168037414551
    6. ' B' → logprob: -5.925168037414551
    7. '(step' → logprob: -6.175168037414551
    8. ' (' → logprob: -6.925168037414551
    9. '(A' → logprob: -6.925168037414551
    10. '(' → logprob: -9.05016803741455

Token 88: '%' (ID: 4)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.14402616024017334
    2. '%' → logprob: -2.019026279449463
    3. ' ' → logprob: -6.769026279449463
    4. ' ==' → logprob: -9.019025802612305
    5. '<|end|>' → logprob: -9.769025802612305
    6. '==' → logprob: -12.144025802612305
    7. ' <=' → logprob: -12.269025802612305
    8. '<|end|>' → logprob: -12.894025802612305
    9. ' <' → logprob: -13.144025802612305
    10. '()%' → logprob: -13.394025802612305

Token 89: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.875024795532227
    3. '3' → logprob: -12.500024795532227
    4. '4' → logprob: -14.250024795532227
    5. '<|end|>' → logprob: -14.625024795532227
    6. '```' → logprob: -15.250024795532227
    7. '6' → logprob: -16.000024795532227
    8. '  ' → logprob: -16.437524795532227
    9. '>' → logprob: -16.500024795532227
    10. '1' → logprob: -17.125024795532227

Token 90: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02633211947977543
    2. ' ==' → logprob: -3.651332139968872
    3. '=' → logprob: -11.901331901550293
    4. ')==' → logprob: -11.901331901550293
    5. '==
' → logprob: -12.651331901550293
    6. ']==' → logprob: -12.776331901550293
    7. ' ' → logprob: -12.901331901550293
    8. '==(' → logprob: -13.151331901550293
    9. '===' → logprob: -13.526331901550293
    10. '!=' → logprob: -13.526331901550293

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0041837021708488464
    2. '2' → logprob: -6.129183769226074
    3. ' ' → logprob: -6.379183769226074
    4. '1' → logprob: -8.129183769226074
    5. 'A' → logprob: -13.629183769226074
    6. 'B' → logprob: -14.004183769226074
    7. ' A' → logprob: -14.066683769226074
    8. '```' → logprob: -14.879183769226074
    9. '3' → logprob: -15.441683769226074
    10. '۰' → logprob: -15.629183769226074

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007019456243142486
    2. ' and' → logprob: -7.750701904296875
    3. ' :' → logprob: -8.750701904296875
    4. '):' → logprob: -10.375701904296875
    5. '<|end|>' → logprob: -10.625701904296875
    6. ':
' → logprob: -10.750701904296875
    7. ',' → logprob: -11.375701904296875
    8. 'and' → logprob: -11.625701904296875
    9. ':**' → logprob: -13.125701904296875
    10. '<|end|>' → logprob: -13.125701904296875

Token 93: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7907879948616028
    2. '       ' → logprob: -1.040787935256958
    3. 'A' → logprob: -2.415787935256958
    4. ' A' → logprob: -2.540787935256958
    5. 'B' → logprob: -5.165788173675537
    6. '<|end|>' → logprob: -5.415788173675537
    7. ' ' → logprob: -6.040788173675537
    8. ':' → logprob: -6.040788173675537
    9. '    ' → logprob: -6.290788173675537
    10. ',' → logprob: -6.415788173675537

Token 94: ' x' (ID: 1215)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3065709173679352
    2. 'B' → logprob: -2.0565710067749023
    3. ' A' → logprob: -2.1815710067749023
    4. ' B' → logprob: -3.9315710067749023
    5. '   ' → logprob: -5.806571006774902
    6. 'val' → logprob: -8.806571006774902
    7. ',' → logprob: -8.806571006774902
    8. 'K' → logprob: -9.431571006774902
    9. ' ' → logprob: -9.431571006774902
    10. 'a' → logprob: -10.556571006774902

Token 95: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0312682390213013
    2. ' =' → logprob: -1.1562682390213013
    3. ',y' → logprob: -1.6562682390213013
    4. 'val' → logprob: -3.7812681198120117
    5. ',A' → logprob: -3.9062681198120117
    6. ',val' → logprob: -3.9062681198120117
    7. '_val' → logprob: -4.156268119812012
    8. '1' → logprob: -4.281268119812012
    9. ',x' → logprob: -4.656268119812012
    10. '=' → logprob: -4.656268119812012

Token 96: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16022971272468567
    2. ',y' → logprob: -2.5352296829223633
    3. ',x' → logprob: -3.7852296829223633
    4. ' =' → logprob: -3.9102296829223633
    5. ',A' → logprob: -4.910229682922363
    6. ',val' → logprob: -4.910229682922363
    7. ' ,' → logprob: -5.160229682922363
    8. ',B' → logprob: -6.035229682922363
    9. ',K' → logprob: -7.160229682922363
    10. '=' → logprob: -7.660229682922363

Token 97: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6551594138145447
    2. ',' → logprob: -1.5301594734191895
    3. '2' → logprob: -2.1551594734191895
    4. ',y' → logprob: -2.9051594734191895
    5. ' =' → logprob: -3.0301594734191895
    6. '=' → logprob: -3.7801594734191895
    7. '<|end|>' → logprob: -4.2801594734191895
    8. ',x' → logprob: -5.2801594734191895
    9. '_' → logprob: -7.2801594734191895
    10. '```' → logprob: -7.4051594734191895

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006811291445046663
    2. '=' → logprob: -5.006811141967773
    3. '<|end|>' → logprob: -9.881811141967773
    4. ',' → logprob: -10.131811141967773
    5. ' ' → logprob: -13.506811141967773
    6. ' =)' → logprob: -14.006811141967773
    7. '<|end|>' → logprob: -14.256811141967773
    8. '=A' → logprob: -14.506811141967773
    9. ')' → logprob: -15.131811141967773
    10. ' =
' → logprob: -16.069311141967773

Token 99: ' do' (ID: 621)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.31475868821144104
    2. ' do' → logprob: -1.3147586584091187
    3. 'A' → logprob: -7.189758777618408
    4. ' A' → logprob: -7.689758777618408
    5. 'B' → logprob: -8.43975830078125
    6. ' B' → logprob: -10.43975830078125
    7. '   ' → logprob: -11.31475830078125
    8. 'd' → logprob: -12.06475830078125
    9. '	do' → logprob: -12.31475830078125
    10. '(do' → logprob: -12.31475830078125

Token 100: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.625001907348633
    3. '_s' → logprob: -15.750001907348633
    4. ' _' → logprob: -16.500001907348633
    5. '_steps' → logprob: -16.500001907348633
    6. '_st' → logprob: -16.625001907348633
    7. ')_' → logprob: -17.375001907348633
    8. '_STEP' → logprob: -17.750001907348633
    9. 'step' → logprob: -17.875001907348633
    10. 's' → logprob: -19.250001907348633

Token 101: '(step' (ID: 79951)
  Prédit: '(step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -0.014170442707836628
    2. '(' → logprob: -4.2641706466674805
    3. ' (' → logprob: -12.51417064666748
    4. '(count' → logprob: -13.76417064666748
    5. '(s' → logprob: -14.38917064666748
    6. '(cnt' → logprob: -14.88917064666748
    7. '<|end|>' → logprob: -15.63917064666748
    8. '(st' → logprob: -15.88917064666748
    9. '(len' → logprob: -16.014169692993164
    10. ' ' → logprob: -16.264169692993164

Token 102: ',A' (ID: 59196)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006068863905966282
    2. ',A' → logprob: -5.256068706512451
    3. ' ,' → logprob: -7.131068706512451
    4. ',x' → logprob: -11.00606918334961
    5. ',B' → logprob: -11.25606918334961
    6. 'A' → logprob: -13.25606918334961
    7. ',K' → logprob: -14.00606918334961
    8. '   ' → logprob: -15.00606918334961
    9. ' ' → logprob: -15.13106918334961
    10. ' A' → logprob: -15.38106918334961

Token 103: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003102138638496399
    2. ',B' → logprob: -5.8781023025512695
    3. ' ,' → logprob: -8.75310230255127
    4. ',x' → logprob: -9.00310230255127
    5. ',A' → logprob: -12.25310230255127
    6. ',K' → logprob: -13.00310230255127
    7. ')' → logprob: -13.12810230255127
    8. ',b' → logprob: -13.50310230255127
    9. 'B' → logprob: -13.87810230255127
    10. '   ' → logprob: -14.50310230255127

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018193958327174187
    2. ')
' → logprob: -4.01819372177124
    3. ')
' → logprob: -10.518194198608398
    4. '   ' → logprob: -11.393194198608398
    5. ')

' → logprob: -12.643194198608398
    6. ' )' → logprob: -13.768194198608398
    7. ' ' → logprob: -15.518194198608398
    8. ');' → logprob: -15.643194198608398
    9. '),' → logprob: -15.768194198608398
    10. '))' → logprob: -16.0181941986084

Token 105: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034787857439368963
    2. '       ' → logprob: -5.87847900390625
    3. 'else' → logprob: -8.00347900390625
    4. ' else' → logprob: -8.37847900390625
    5. 'A' → logprob: -9.87847900390625
    6. ' A' → logprob: -11.37847900390625
    7. '<|end|>' → logprob: -11.37847900390625
    8. ' ' → logprob: -11.87847900390625
    9. ',' → logprob: -12.37847900390625
    10. '    
' → logprob: -12.50347900390625

Token 106: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.326097309589386
    2. 'A' (adapté à ' A') → logprob: -1.3260972499847412
    3. ' A' → logprob: -4.70109748840332
    4. '       ' → logprob: -5.82609748840332
    5. ' step' → logprob: -8.32609748840332
    6. 'else' → logprob: -8.95109748840332
    7. ' else' → logprob: -9.20109748840332
    8. 'step' → logprob: -9.20109748840332
    9. ' ' → logprob: -9.57609748840332
    10. '	A' → logprob: -10.45109748840332

Token 107: ',B' (ID: 19853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8711004257202148
    2. ',' → logprob: -1.2461004257202148
    3. '=' → logprob: -1.2461004257202148
    4. ',x' → logprob: -5.121100425720215
    5. '=x' → logprob: -8.371100425720215
    6. ',y' → logprob: -11.121100425720215
    7. 'x' → logprob: -11.371100425720215
    8. ',b' → logprob: -11.996100425720215
    9. ' ,' → logprob: -12.746100425720215
    10. ' ' → logprob: -13.121100425720215

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132880926132202
    2. '=' → logprob: -1.3132880926132202
    3. ',' → logprob: -10.813287734985352
    4. '=x' → logprob: -13.063287734985352
    5. ' ' → logprob: -13.938287734985352
    6. '<|end|>' → logprob: -13.938287734985352
    7. '=A' → logprob: -14.438287734985352
    8. ' =
' → logprob: -14.438287734985352
    9. '=
' → logprob: -15.313287734985352
    10. ' =)' → logprob: -15.563287734985352

Token 109: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2519332468509674
    2. 'x' → logprob: -1.501933217048645
    3. '(x' → logprob: -13.001933097839355
    4. ' ' → logprob: -13.751933097839355
    5. ' (' → logprob: -15.376933097839355
    6. '	x' → logprob: -15.626933097839355
    7. ' ' → logprob: -15.751933097839355
    8. '    ' → logprob: -16.501934051513672
    9. '[x' → logprob: -17.126934051513672
    10. '   ' → logprob: -17.376934051513672

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. '<|end|>' → logprob: -10.750040054321289
    3. 'x' → logprob: -11.750040054321289
    4. '2' → logprob: -12.625040054321289
    5. ' ' → logprob: -13.312540054321289
    6. '[' → logprob: -14.250040054321289
    7. '<|end|>' → logprob: -14.500040054321289
    8. 'nt' → logprob: -15.125040054321289
    9. '...' → logprob: -15.312540054321289
    10. 'token' → logprob: -15.562540054321289

Token 111: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5760782361030579
    2. ',x' → logprob: -0.8260782361030579
    3. ' ,' → logprob: -8.951078414916992
    4. ' x' → logprob: -12.826078414916992
    5. ',y' → logprob: -13.701078414916992
    6. ',
' → logprob: -13.701078414916992
    7. ',B' → logprob: -14.076078414916992
    8. ',b' → logprob: -14.076078414916992
    9. ' ' → logprob: -14.576078414916992
    10. '<|end|>' → logprob: -14.576078414916992

Token 112: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.134509021649137e-05
    2. '<|end|>' → logprob: -10.75006103515625
    3. ' ' → logprob: -10.87506103515625
    4. '1' → logprob: -12.12506103515625
    5. 's' → logprob: -12.56256103515625
    6. '۲' → logprob: -13.50006103515625
    7. '<|end|>' → logprob: -13.56256103515625
    8. 'x' → logprob: -13.56256103515625
    9. '₂' → logprob: -14.56256103515625
    10. '  ' → logprob: -14.81256103515625

Token 113: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010981805389747024
    2. '
' → logprob: -7.251098155975342
    3. '    
' → logprob: -8.8760986328125
    4. '	step' → logprob: -10.0010986328125
    5. '<|end|>' → logprob: -10.1260986328125
    6. 'else' → logprob: -10.1260986328125
    7. '```' → logprob: -10.5010986328125
    8. '       ' → logprob: -10.7510986328125
    9. '        
' → logprob: -11.2510986328125
    10. ' step' → logprob: -11.3760986328125

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027861001435667276
    2. 'else' → logprob: -6.877786159515381
    3. 'step' → logprob: -7.127786159515381
    4. '       ' → logprob: -8.127785682678223
    5. ' else' → logprob: -8.252785682678223
    6. ' step' → logprob: -8.252785682678223
    7. '	step' → logprob: -9.627785682678223
    8. '```' → logprob: -11.002785682678223
    9. '
' → logprob: -11.252785682678223
    10. '<|end|>' → logprob: -11.252785682678223

Token 115: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31553414463996887
    2. 'else' (adapté à ' else') → logprob: -1.3155341148376465
    3. ' else' → logprob: -6.1905341148376465
    4. 'step' → logprob: -8.565534591674805
    5. '	else' → logprob: -11.690534591674805
    6. '       ' → logprob: -12.190534591674805
    7. '
' → logprob: -12.315534591674805
    8. ' step' → logprob: -12.440534591674805
    9. '```' → logprob: -12.690534591674805
    10. 'elif' → logprob: -12.940534591674805

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18442490696907043
    2. ':
' → logprob: -1.809424877166748
    3. '       ' → logprob: -5.559424877166748
    4. '   ' → logprob: -7.184424877166748
    5. ':

' → logprob: -11.309425354003906
    6. ',' → logprob: -11.309425354003906
    7. '
' → logprob: -12.184425354003906
    8. ' :' → logprob: -12.309425354003906
    9. ':
' → logprob: -12.309425354003906
    10. ' :
' → logprob: -12.559425354003906

Token 117: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5738911032676697
    2. '       ' → logprob: -1.1988911628723145
    3. '   ' → logprob: -2.3238911628723145
    4. ' x' → logprob: -3.3238911628723145
    5. ' ' → logprob: -7.6988911628723145
    6. ' step' → logprob: -8.198890686035156
    7. 'step' → logprob: -8.448890686035156
    8. '    ' → logprob: -9.573890686035156
    9. '     ' → logprob: -9.948890686035156
    10. '
' → logprob: -10.448890686035156

Token 118: ' A' (ID: 355)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11313268542289734
    2. ' x' → logprob: -2.2381327152252197
    3. '   ' → logprob: -8.98813247680664
    4. '
' → logprob: -9.98813247680664
    5. '       ' → logprob: -10.36313247680664
    6. ' ' → logprob: -10.61313247680664
    7. '	x' → logprob: -11.11313247680664
    8. 'step' → logprob: -11.48813247680664
    9. ' step' → logprob: -11.61313247680664
    10. ' 
' → logprob: -11.98813247680664

Token 119: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.2531030774116516
    2. ',' → logprob: -1.5031030178070068
    3. ',b' → logprob: -7.503103256225586
    4. '+=' → logprob: -8.503103256225586
    5. ',x' → logprob: -8.878103256225586
    6. ',K' → logprob: -9.628103256225586
    7. '=' → logprob: -9.753103256225586
    8. ' ,' → logprob: -10.503103256225586
    9. 'B' → logprob: -10.628103256225586
    10. ' +=' → logprob: -11.253103256225586

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01459133718162775
    2. '=' → logprob: -4.764591217041016
    3. ',' → logprob: -5.139591217041016
    4. ' ,' → logprob: -10.139591217041016
    5. ' +=' → logprob: -10.389591217041016
    6. '<|end|>' → logprob: -11.889591217041016
    7. ' ' → logprob: -12.264591217041016
    8. ' =
' → logprob: -13.264591217041016
    9. ',x' → logprob: -13.639591217041016
    10. ' =
' → logprob: -13.639591217041016

Token 121: ' do' (ID: 621)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.008831185288727283
    2. ' do' → logprob: -4.758831024169922
    3. 'B' → logprob: -9.633831024169922
    4. '   ' → logprob: -9.883831024169922
    5. '(do' → logprob: -10.508831024169922
    6. 'x' → logprob: -10.633831024169922
    7. ' ' → logprob: -11.383831024169922
    8. 'b' → logprob: -11.883831024169922
    9. '*' → logprob: -12.008831024169922
    10. 'A' → logprob: -12.008831024169922

Token 122: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -1.2664456789934775e-06
    2. 'step' → logprob: -13.750000953674316
    3. '_' → logprob: -16.625001907348633
    4. '_STEP' → logprob: -17.500001907348633
    5. 'Step' → logprob: -18.000001907348633
    6. ' _' → logprob: -19.125001907348633
    7. ' step' → logprob: -19.375001907348633
    8. '_s' → logprob: -19.375001907348633
    9. '_steps' → logprob: -19.750001907348633
    10. '_st' → logprob: -20.125001907348633

Token 123: '(step' (ID: 79951)
  Prédit: '(step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -6.988221684878226e-06
    2. 'step' → logprob: -12.125006675720215
    3. '(' → logprob: -13.500006675720215
    4. '	step' → logprob: -17.12500762939453
    5. ' step' → logprob: -17.37500762939453
    6. '(
' → logprob: -19.12500762939453
    7. '.step' → logprob: -19.50000762939453
    8. ' (' → logprob: -19.62500762939453
    9. '((' → logprob: -20.87500762939453
    10. '(line' → logprob: -21.50000762939453

Token 124: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.06820164620876312
    2. ',' → logprob: -2.9432015419006348
    3. '(B' → logprob: -4.693201541900635
    4. 'B' → logprob: -6.318201541900635
    5. ',A' → logprob: -6.568201541900635
    6. ' ,' → logprob: -7.943201541900635
    7. ',b' → logprob: -8.818202018737793
    8. ')' → logprob: -9.068202018737793
    9. ' B' → logprob: -10.318202018737793
    10. '(' → logprob: -10.443202018737793

Token 125: ',A' (ID: 59196)
  Prédit: ',A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.2258688509464264
    2. ',' → logprob: -1.600868821144104
    3. ' ,' → logprob: -8.350869178771973
    4. 'A' → logprob: -8.600869178771973
    5. ' A' → logprob: -11.475869178771973
    6. ' ' → logprob: -11.725869178771973
    7. '   ' → logprob: -12.100869178771973
    8. '	A' → logprob: -12.225869178771973
    9. ',
' → logprob: -12.725869178771973
    10. ',a' → logprob: -13.725869178771973

Token 126: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011081460979767144
    2. ')
' → logprob: -9.125110626220703
    3. '   ' → logprob: -14.125110626220703
    4. ' )' → logprob: -14.875110626220703
    5. '<|end|>' → logprob: -14.875110626220703
    6. ')

' → logprob: -15.125110626220703
    7. ')return' → logprob: -17.250110626220703
    8. ')
' → logprob: -17.750110626220703
    9. ' ' → logprob: -17.875110626220703
    10. '),' → logprob: -18.000110626220703

Token 127: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08900446444749832
    2. '1' → logprob: -2.4640045166015625
    3. ' ' → logprob: -9.714004516601562
    4. '::-' → logprob: -12.589004516601562
    5. '-' → logprob: -15.214004516601562
    6. '   ' → logprob: -15.339004516601562
    7. '<|end|>' → logprob: -15.339004516601562
    8. ']' → logprob: -16.089004516601562
    9. '۰' → logprob: -16.339004516601562
    10. '' → logprob: -17.089004516601562

Token 128: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004284043679945171
    2. ':]' → logprob: -8.000428199768066
    3. ' ]' → logprob: -9.750428199768066
    4. '()]' → logprob: -11.625428199768066
    5. '<|end|>' → logprob: -11.750428199768066
    6. ' :]' → logprob: -12.875428199768066
    7. ']
' → logprob: -13.000428199768066
    8. '2' → logprob: -13.125428199768066
    9. '0' → logprob: -13.125428199768066
    10. ']()' → logprob: -13.250428199768066

Token 129: 'do' (ID: 2408)
  Prédit: 'do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.005122157279402018
    2. '0' → logprob: -5.505122184753418
    3. ' do' → logprob: -6.880122184753418
    4. '1' → logprob: -12.255122184753418
    5. '(do' → logprob: -12.505122184753418
    6. ' ' → logprob: -13.380122184753418
    7. '	do' → logprob: -14.005122184753418
    8. '  ' → logprob: -14.505122184753418
    9. '   ' → logprob: -14.505122184753418
    10. '_do' → logprob: -14.630122184753418

Token 130: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -1.981667537620524e-06
    2. 'step' → logprob: -13.625001907348633
    3. 'Step' → logprob: -14.500001907348633
    4. '_STEP' → logprob: -16.500001907348633
    5. '_' → logprob: -16.875001907348633
    6. '-step' → logprob: -18.250001907348633
    7. '```' → logprob: -18.875001907348633
    8. 'o' → logprob: -19.125001907348633
    9. '1' → logprob: -19.625001907348633
    10. ' step' → logprob: -19.625001907348633

Token 131: '(step' (ID: 79951)
  Prédit: '(step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -0.0002671768015716225
    2. 'step' → logprob: -8.250267028808594
    3. ' step' → logprob: -12.500267028808594
    4. '	step' → logprob: -13.500267028808594
    5. '(' → logprob: -14.375267028808594
    6. '.step' → logprob: -16.500267028808594
    7. 'Step' → logprob: -16.750267028808594
    8. '-step' → logprob: -17.875267028808594
    9. '_step' → logprob: -18.375267028808594
    10. '<|end|>' → logprob: -19.500267028808594

Token 132: ',B' (ID: 19853)
  Prédit: '(step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(step' → logprob: -0.007729076314717531
    2. 'step' → logprob: -5.0077290534973145
    3. ' step' → logprob: -8.257729530334473
    4. ')' → logprob: -8.382729530334473
    5. ',' → logprob: -9.007729530334473
    6. '.step' → logprob: -9.132729530334473
    7. '(' → logprob: -9.257729530334473
    8. '	step' → logprob: -10.132729530334473
    9. '[' → logprob: -10.257729530334473
    10. '(cnt' → logprob: -10.382729530334473

Token 133: ',A' (ID: 59196)
  Prédit: ',A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.0010698467958718538
    2. ',' → logprob: -7.001070022583008
    3. ')[' → logprob: -9.126070022583008
    4. ' ,' → logprob: -11.376070022583008
    5. ',B' → logprob: -11.626070022583008
    6. 'A' → logprob: -11.626070022583008
    7. '   ' → logprob: -11.876070022583008
    8. ',[' → logprob: -12.751070022583008
    9. ',
' → logprob: -13.251070022583008
    10. ')' → logprob: -13.626070022583008

Token 134: ')[' (ID: 13637)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7460010051727295
    2. ')[' → logprob: -0.7460010051727295
    3. '[' → logprob: -3.2460010051727295
    4. '][' → logprob: -4.496001243591309
    5. '   ' → logprob: -7.621001243591309
    6. ' )[' → logprob: -8.371001243591309
    7. ')' → logprob: -8.871001243591309
    8. '
' → logprob: -9.371001243591309
    9. ' [' → logprob: -9.496001243591309
    10. '])[' → logprob: -9.621001243591309

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -12.375007629394531
    3. '1' → logprob: -12.750007629394531
    4. '   ' → logprob: -15.250007629394531
    5. '2' → logprob: -15.312507629394531
    6. '
' → logprob: -16.56250762939453
    7. '  ' → logprob: -16.93750762939453
    8. '```' → logprob: -17.12500762939453
    9. '۰' → logprob: -17.75000762939453
    10. '[' → logprob: -18.00000762939453

Token 136: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04947396740317345
    2. '<|end|>' → logprob: -3.049474000930786
    3. ']' → logprob: -8.174473762512207
    4. '
' → logprob: -8.549473762512207
    5. '<|end|>' → logprob: -8.799473762512207
    6. '}' → logprob: -8.799473762512207
    7. ')
' → logprob: -9.924473762512207
    8. '```' → logprob: -11.049473762512207
    9. '   ' → logprob: -11.049473762512207
    10. ' )' → logprob: -12.549473762512207

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031971707940101624
    2. '
' → logprob: -3.5319716930389404
    3. ' step' → logprob: -6.7819719314575195
    4. '<|end|>' → logprob: -7.9069719314575195
    5. '	step' → logprob: -7.9069719314575195
    6. '    
' → logprob: -9.15697193145752
    7. 'step' → logprob: -9.53197193145752
    8. '  
' → logprob: -9.53197193145752
    9. '```' → logprob: -10.53197193145752
    10. '(step' → logprob: -10.90697193145752

Token 138: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -0.001512004528194666
    2. ' step' → logprob: -6.501512050628662
    3. '
' → logprob: -11.626511573791504
    4. ' 
' → logprob: -15.501511573791504
    5. '	step' → logprob: -15.626511573791504
    6. '   ' → logprob: -16.00151252746582
    7. '(step' → logprob: -16.00151252746582
    8. '```' → logprob: -16.00151252746582
    9. '    
' → logprob: -17.00151252746582
    10. '\' → logprob: -17.37651252746582

Token 139: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.15652377903461456
    2. ' +=' → logprob: -2.4065237045288086
    3. '+' → logprob: -2.9065237045288086
    4. '=' → logprob: -10.031523704528809
    5. '+="' → logprob: -10.781523704528809
    6. '+='' → logprob: -10.906523704528809
    7. '<|end|>' → logprob: -12.156523704528809
    8. ' +' → logprob: -12.906523704528809
    9. '+=(' → logprob: -13.531523704528809
    10. ']+=' → logprob: -13.781523704528809

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.250001907348633
    4. '```' → logprob: -19.625001907348633
    5. '  ' → logprob: -20.937501907348633
    6. '１' → logprob: -21.000001907348633
    7. '`' → logprob: -21.500001907348633
    8. '۱' → logprob: -21.625001907348633
    9. 's' → logprob: -22.375001907348633
    10. '+' → logprob: -22.625001907348633

Token 141: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: '("{}' (ID: 122485)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.018176980316638947
    2. '(' → logprob: -4.018177032470703
    3. '(a' → logprob: -11.768177032470703
    4. '((' → logprob: -12.018177032470703
    5. '(f' → logprob: -12.268177032470703
    6. '("' → logprob: -12.643177032470703
    7. '('' → logprob: -12.893177032470703
    8. '()' → logprob: -13.393177032470703
    9. '(
' → logprob: -15.143177032470703
    10. '(B' → logprob: -15.393177032470703

Token 144: ' {}".' (ID: 51417)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6554870009422302
    2. 'A' → logprob: -1.280487060546875
    3. ' ".' → logprob: -1.780487060546875
    4. '".' → logprob: -3.655487060546875
    5. '(A' → logprob: -6.030487060546875
    6. '"' → logprob: -6.530487060546875
    7. '"A' → logprob: -6.905487060546875
    8. ' "' → logprob: -7.030487060546875
    9. ' {}".' → logprob: -7.155487060546875
    10. ' ' → logprob: -7.905487060546875

Token 145: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -4.4849443838757e-06
    2. ' format' → logprob: -12.750004768371582
    3. '0' → logprob: -14.250004768371582
    4. 'form' → logprob: -15.125004768371582
    5. '(format' → logprob: -15.250004768371582
    6. '	format' → logprob: -15.625004768371582
    7. '```' → logprob: -16.625003814697266
    8. 'print' → logprob: -16.750003814697266
    9. 'strip' → logprob: -17.375003814697266
    10. ')' → logprob: -17.375003814697266

Token 146: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.2471589798224159e-05
    2. 'A' → logprob: -11.375012397766113
    3. '(' → logprob: -13.875012397766113
    4. '(
' → logprob: -17.87501335144043
    5. '(B' → logprob: -18.25001335144043
    6. ' (' → logprob: -18.50001335144043
    7. ' A' → logprob: -18.62501335144043
    8. '   ' → logprob: -19.37501335144043
    9. ',A' → logprob: -20.00001335144043
    10. '((' → logprob: -20.37501335144043

Token 147: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048705801367759705
    2. ',B' → logprob: -3.048705816268921
    3. ' ,' → logprob: -9.0487060546875
    4. 'B' → logprob: -14.6737060546875
    5. ',b' → logprob: -15.2987060546875
    6. ',
' → logprob: -16.6737060546875
    7. ',K' → logprob: -17.0487060546875
    8. ' B' → logprob: -17.5487060546875
    9. ',A' → logprob: -17.9237060546875
    10. '，' → logprob: -18.0487060546875

Token 148: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03804171830415726
    2. ')' → logprob: -3.288041830062866
    3. ')))' → logprob: -16.413042068481445
    4. ' ))' → logprob: -16.538042068481445
    5. '))
' → logprob: -16.663042068481445
    6. ' )' → logprob: -18.038042068481445
    7. '));' → logprob: -18.413042068481445
    8. ')}' → logprob: -18.663042068481445
    9. '),' → logprob: -18.913042068481445
    10. '})' → logprob: -19.413042068481445


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 146
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 119
Précision stricte (1ère position): 41.10%
Précision adaptée (1ère position): 43.15%
Précision (top 10): 81.51%
================================================================================
