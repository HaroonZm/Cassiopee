================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Fonction principale qui lit deux entiers depuis l'entrée standard,
    calcule leur somme, différence et produit, puis affiche la valeur maximale parmi ces trois résultats.
    """
    # Lecture d'une ligne depuis l'entrée utilisateur, découpage en tokens, conversion en entiers
    a, b = [int(n) for n in input("Entrez deux entiers séparés par un espace : ").split()]
    
    # Calcul de la somme des deux entiers
    sum_res = a + b
    # Calcul de la différence entre le premier et le second entier
    diff_res = a - b
    # Calcul du produit des deux entiers
    prod_res = a * b
    
    # Création d'une liste contenant les trois résultats calculés
    results = [sum_res, diff_res, prod_res]
    
    # Recherche de la valeur maximale parmi les trois résultats
    max_result = max(results)
    
    # Affichage du résultat maximal
    print(max_result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.33477112650871277
    2. '\n' → logprob: -1.8347711563110352
    3. ' 
' → logprob: -2.709771156311035
    4. '    
' → logprob: -3.834771156311035
    5. ' ' → logprob: -4.834771156311035
    6. '   ' → logprob: -5.459771156311035
    7. '  
' → logprob: -5.709771156311035
    8. '(' → logprob: -5.834771156311035
    9. '    ' → logprob: -5.959771156311035
    10. ''' → logprob: -6.084771156311035

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5543336272239685
    2. '#' → logprob: -2.0543336868286133
    3. '   ' → logprob: -2.1793336868286133
    4. 'pass' → logprob: -2.6793336868286133
    5. '    ' → logprob: -3.5543336868286133
    6. 'return' → logprob: -3.6793336868286133
    7. 'p' → logprob: -4.429333686828613
    8. ' ' → logprob: -4.554333686828613
    9. '_' → logprob: -4.554333686828613
    10. 'a' → logprob: -5.054333686828613

Token 5: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.2563745379447937
    2. 'This' → logprob: -3.0063745975494385
    3. 'Calculate' → logprob: -3.2563745975494385
    4. 'Initialize' → logprob: -3.5063745975494385
    5. '   ' → logprob: -3.6313745975494385
    6. '""' → logprob: -4.631374359130859
    7. 'Returns' → logprob: -5.006374359130859
    8. 'Initial' → logprob: -5.381374359130859
    9. ''''' → logprob: -5.506374359130859
    10. 'Generate' → logprob: -5.631374359130859

Token 6: ' Fonction' (ID: 189149)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -1.4866212606430054
    2. 'Run' → logprob: -1.6116212606430054
    3. 'This' → logprob: -1.7366212606430054
    4. 'Initialize' → logprob: -2.111621379852295
    5. '"""' → logprob: -2.736621379852295
    6. '   ' → logprob: -3.236621379852295
    7. 'Print' → logprob: -3.611621379852295
    8. 'Process' → logprob: -3.736621379852295
    9. 'Start' → logprob: -4.486621379852295
    10. 'Initial' → logprob: -4.486621379852295

Token 7: ' principale' (ID: 68926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3475503921508789
    2. ' de' → logprob: -1.972550392150879
    3. ' ' → logprob: -2.597550392150879
    4. '```' → logprob: -4.222550392150879
    5. '  ' → logprob: -4.597550392150879
    6. '    ' → logprob: -4.597550392150879
    7. ' d' → logprob: -4.847550392150879
    8. 'naire' → logprob: -4.972550392150879
    9. ' continuation' → logprob: -5.347550392150879
    10. '()' → logprob: -6.222550392150879

Token 8: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10252051055431366
    2. '\n' → logprob: -2.97752046585083
    3. '```' → logprob: -4.60252046585083
    4. '\' → logprob: -4.97752046585083
    5. '    ' → logprob: -4.97752046585083
    6. ' ' → logprob: -5.10252046585083
    7. 'n' → logprob: -5.22752046585083
    8. '"""' → logprob: -6.35252046585083
    9. ')' → logprob: -6.47752046585083
    10. '    
' → logprob: -6.60252046585083

Token 9: ' lit' (ID: 11980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.087355136871338
    2. 'g' → logprob: -1.462355136871338
    3. ' lance' → logprob: -1.837355136871338
    4. ' g' → logprob: -2.587355136871338
    5. ' appelle' → logprob: -2.587355136871338
    6. ' démar' → logprob: -3.212355136871338
    7. ' initialise' → logprob: -4.462355136871338
    8. 'impl' → logprob: -5.087355136871338
    9. ' permet' → logprob: -5.212355136871338
    10. 'app' → logprob: -5.337355136871338

Token 10: ' deux' (ID: 10301)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6032138466835022
    2. ' et' → logprob: -1.7282137870788574
    3. ' les' → logprob: -1.8532137870788574
    4. 'le' → logprob: -3.4782137870788574
    5. ' ' → logprob: -3.7282137870788574
    6. '   ' → logprob: -3.7282137870788574
    7. ' la' → logprob: -4.353213787078857
    8. ' un' → logprob: -4.853213787078857
    9. ' des' → logprob: -5.728213787078857
    10. 'l' → logprob: -5.728213787078857

Token 11: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47341278195381165
    2. ' chaînes' → logprob: -1.3484127521514893
    3. ' nombres' → logprob: -2.8484127521514893
    4. ' chain' → logprob: -4.348412990570068
    5. 'n' → logprob: -4.473412990570068
    6. ' ent' → logprob: -4.723412990570068
    7. '   ' → logprob: -5.098412990570068
    8. 'ent' → logprob: -5.223412990570068
    9. 'chain' → logprob: -5.973412990570068
    10. 'l' → logprob: -6.348412990570068

Token 12: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.02341551147401333
    2. 'r' → logprob: -4.773415565490723
    3. 'ières' → logprob: -4.898415565490723
    4. 'i' → logprob: -5.148415565490723
    5. 'ier' → logprob: -7.523415565490723
    6. '```' → logprob: -8.523415565490723
    7. 'ri' → logprob: -8.648415565490723
    8. '   ' → logprob: -8.773415565490723
    9. 'ités' → logprob: -8.773415565490723
    10. 'ires' → logprob: -10.398415565490723

Token 13: ' depuis' (ID: 16277)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8002898097038269
    2. ',' → logprob: -1.5502898693084717
    3. '   ' → logprob: -1.6752898693084717
    4. ' et' → logprob: -2.9252898693084717
    5. ' ,' → logprob: -3.3002898693084717
    6. 's' → logprob: -3.4252898693084717
    7. '\n' → logprob: -5.050289630889893
    8. '\' → logprob: -6.175289630889893
    9. ' ' → logprob: -6.175289630889893
    10. '```' → logprob: -6.425289630889893

Token 14: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2196909636259079
    2. ' input' → logprob: -2.219691038131714
    3. ' l' → logprob: -2.719691038131714
    4. 'input' → logprob: -4.469690799713135
    5. '   ' → logprob: -5.719690799713135
    6. 'le' → logprob: -5.844690799713135
    7. ' stdin' → logprob: -6.219690799713135
    8. ' ' → logprob: -6.719690799713135
    9. 'entrée' → logprob: -7.969690799713135
    10. 'stdin' → logprob: -8.094691276550293

Token 15: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.4958445131778717
    2. 'a' → logprob: -1.2458444833755493
    3. 'input' → logprob: -3.370844602584839
    4. 'e' → logprob: -3.745844602584839
    5. ' input' → logprob: -4.24584436416626
    6. 'entrée' → logprob: -4.24584436416626
    7. ''' → logprob: -4.87084436416626
    8. ''utilisateur' → logprob: -5.24584436416626
    9. 'l' → logprob: -7.37084436416626
    10. 'u' → logprob: -7.37084436416626

Token 16: ' standard' (ID: 7024)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6423044204711914
    2. ' et' → logprob: -1.5173044204711914
    3. '   ' → logprob: -2.5173044204711914
    4. ' ' → logprob: -2.8923044204711914
    5. ' standard' → logprob: -3.3923044204711914
    6. ' ,' → logprob: -3.8923044204711914
    7. '\n' → logprob: -4.267304420471191
    8. '.' → logprob: -4.642304420471191
    9. 'standard' → logprob: -4.767304420471191
    10. '```' → logprob: -5.392304420471191

Token 17: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34976235032081604
    2. ',' → logprob: -1.3497623205184937
    3. '    ' → logprob: -4.474762439727783
    4. ' ' → logprob: -4.724762439727783
    5. '\n' → logprob: -5.599762439727783
    6. ' ,' → logprob: -5.974762439727783
    7. ' et' → logprob: -5.974762439727783
    8. '.' → logprob: -6.724762439727783
    9. '    
' → logprob: -6.724762439727783
    10. '\' → logprob: -6.849762439727783

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04878265783190727
    2. ' et' → logprob: -3.4237825870513916
    3. ' puis' → logprob: -5.173782825469971
    4. '    ' → logprob: -5.298782825469971
    5. 'et' → logprob: -6.673782825469971
    6. ' les' → logprob: -6.798782825469971
    7. ',' → logprob: -7.673782825469971
    8. ' ' → logprob: -8.173782348632812
    9. ' and' → logprob: -8.673782348632812
    10. '<|end|>' → logprob: -9.048782348632812

Token 19: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19702313840389252
    2. ' et' → logprob: -2.6970231533050537
    3. ' puis' → logprob: -3.1970231533050537
    4. ' lit' → logprob: -4.072022914886475
    5. '    ' → logprob: -4.322022914886475
    6. 'et' → logprob: -4.322022914886475
    7. ' calc' → logprob: -5.072022914886475
    8. ' les' → logprob: -5.072022914886475
    9. 'cal' → logprob: -6.072022914886475
    10. ' ' → logprob: -6.447022914886475

Token 20: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00013536323967855424
    2. 'ul' → logprob: -9.62513542175293
    3. 'ulé' → logprob: -9.87513542175293
    4. '```' → logprob: -12.50013542175293
    5. '\' → logprob: -12.62513542175293
    6. '   ' → logprob: -12.62513542175293
    7. 'cule' → logprob: -12.75013542175293
    8. '       ' → logprob: -13.75013542175293
    9. '**' → logprob: -14.37513542175293
    10. 'l' → logprob: -15.37513542175293

Token 21: ' leur' (ID: 9853)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.28924205899238586
    2. ' leur' → logprob: -2.0392420291900635
    3. ' et' → logprob: -2.5392420291900635
    4. ' l' → logprob: -4.039242267608643
    5. '   ' → logprob: -4.914242267608643
    6. 'leur' → logprob: -5.289242267608643
    7. ' le' → logprob: -5.539242267608643
    8. ' ' → logprob: -6.039242267608643
    9. ' leurs' → logprob: -6.414242267608643
    10. ' their' → logprob: -7.289242267608643

Token 22: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.06417479366064072
    2. 's' → logprob: -3.1891748905181885
    3. ' ' → logprob: -4.939174652099609
    4. '   ' → logprob: -5.439174652099609
    5. ' addition' → logprob: -5.689174652099609
    6. ' produit' → logprob: -6.189174652099609
    7. ' plus' → logprob: -7.189174652099609
    8. ' sum' → logprob: -7.314174652099609
    9. ' som' → logprob: -7.564174652099609
    10. ' différence' → logprob: -7.814174652099609

Token 23: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2677449584007263
    2. ',' → logprob: -1.642745018005371
    3. ' et' → logprob: -3.642745018005371
    4. ' ' → logprob: -5.017745018005371
    5. ' ,' → logprob: -6.267745018005371
    6. ')' → logprob: -6.392745018005371
    7. '    ' → logprob: -7.017745018005371
    8. ' )' → logprob: -7.142745018005371
    9. '    
' → logprob: -7.142745018005371
    10. 'e' → logprob: -7.767745018005371

Token 24: ' différence' (ID: 79196)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.33815300464630127
    2. '   ' → logprob: -1.3381530046463013
    3. 'et' → logprob: -3.9631528854370117
    4. ' puis' → logprob: -5.338152885437012
    5. '    ' → logprob: -7.588152885437012
    6. ' ' → logprob: -9.463152885437012
    7. ',' → logprob: -10.088152885437012
    8. ' and' → logprob: -10.338152885437012
    9. '  ' → logprob: -11.088152885437012
    10. 'e' → logprob: -11.463152885437012

Token 25: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026429761201143265
    2. '   ' → logprob: -4.776429653167725
    3. ',
' → logprob: -5.276429653167725
    4. ' ' → logprob: -5.276429653167725
    5. ' ,' → logprob: -6.276429653167725
    6. ' et' → logprob: -6.526429653167725
    7. '\n' → logprob: -6.651429653167725
    8. 's' → logprob: -7.026429653167725
    9. '\' → logprob: -7.026429653167725
    10. '    
' → logprob: -8.276430130004883

Token 26: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.09412016719579697
    2. ' product' → logprob: -3.3441202640533447
    3. ' leur' → logprob: -3.5941202640533447
    4. 'leur' → logprob: -4.344120025634766
    5. 'product' → logprob: -5.969120025634766
    6. ' leurs' → logprob: -6.219120025634766
    7. ',' → logprob: -6.594120025634766
    8. ' la' → logprob: -6.594120025634766
    9. '<|end|>' → logprob: -6.969120025634766
    10. ' les' → logprob: -7.219120025634766

Token 27: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3729354739189148
    2. ',' → logprob: -1.8729355335235596
    3. '\' → logprob: -2.9979355335235596
    4. ',
' → logprob: -3.4979355335235596
    5. '    
' → logprob: -3.8729355335235596
    6. '\n' → logprob: -4.2479352951049805
    7. ' ' → logprob: -4.6229352951049805
    8. 's' → logprob: -4.8729352951049805
    9. '.' → logprob: -4.8729352951049805
    10. '
' → logprob: -5.2479352951049805

Token 28: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5525168776512146
    2. '\n' → logprob: -1.0525169372558594
    3. '\' → logprob: -2.8025169372558594
    4. ' et' → logprob: -5.427516937255859
    5. 'et' → logprob: -6.052516937255859
    6. ',' → logprob: -6.302516937255859
    7. '    
' → logprob: -6.552516937255859
    8. '    ' → logprob: -6.677516937255859
    9. ' ' → logprob: -6.802516937255859
    10. ' \' → logprob: -7.802516937255859

Token 29: ' affiche' (ID: 127479)
  Prédit: ' affiche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.9760920405387878
    2. ' les' → logprob: -1.4760921001434326
    3. '   ' → logprob: -1.6010921001434326
    4. 'aff' → logprob: -1.8510921001434326
    5. 'les' → logprob: -4.3510918617248535
    6. ' imprime' → logprob: -4.3510918617248535
    7. ' retourne' → logprob: -5.3510918617248535
    8. 'print' → logprob: -6.2260918617248535
    9. ' ' → logprob: -7.6010918617248535
    10. '```' → logprob: -7.7260918617248535

Token 30: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8811275959014893
    2. ' leurs' → logprob: -1.6311275959014893
    3. ' leur' → logprob: -1.7561275959014893
    4. ' les' → logprob: -2.7561275959014893
    5. 'leur' → logprob: -2.8811275959014893
    6. ' la' → logprob: -3.3811275959014893
    7. 'ur' → logprob: -4.38112735748291
    8. ' le' → logprob: -4.50612735748291
    9. 's' → logprob: -4.63112735748291
    10. ' their' → logprob: -5.00612735748291

Token 31: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8676550984382629
    2. ' ' → logprob: -1.1176550388336182
    3. ' résultat' → logprob: -1.8676550388336182
    4. ' result' → logprob: -3.242655038833618
    5. ' s' → logprob: -3.617655038833618
    6. 'rés' → logprob: -4.867655277252197
    7. ' resultat' → logprob: -4.867655277252197
    8. ' résultats' → logprob: -5.617655277252197
    9. ' 
' → logprob: -5.742655277252197
    10. ' résult' → logprob: -6.117655277252197

Token 32: ' maximale' (ID: 76380)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0030529312789440155
    2. ' s' → logprob: -6.378052711486816
    3. '   ' → logprob: -7.253052711486816
    4. ' ' → logprob: -7.503052711486816
    5. '(s' → logprob: -10.628052711486816
    6. '  ' → logprob: -11.003052711486816
    7. '    
' → logprob: -11.628052711486816
    8. ' de' → logprob: -11.628052711486816
    9. '```' → logprob: -12.503052711486816
    10. '	s' → logprob: -12.628052711486816

Token 33: ' parmi' (ID: 51713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26955410838127136
    2. ' ' → logprob: -2.1445541381835938
    3. '\' → logprob: -3.3945541381835938
    4. '    
' → logprob: -4.144554138183594
    5. '.' → logprob: -4.394554138183594
    6. '
' → logprob: -4.519554138183594
    7. ' entre' → logprob: -4.644554138183594
    8. '\n' → logprob: -5.394554138183594
    9. '  
' → logprob: -5.519554138183594
    10. ' 
' → logprob: -5.519554138183594

Token 34: ' ces' (ID: 10532)
  Prédit: 'eux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eux' → logprob: -0.42015179991722107
    2. ' eux' → logprob: -1.6701518297195435
    3. 'les' → logprob: -2.545151710510254
    4. ' ces' → logprob: -3.420151710510254
    5. ' les' → logprob: -3.545151710510254
    6. 'ces' → logprob: -4.545151710510254
    7. 'e' → logprob: -6.545151710510254
    8. ' ' → logprob: -7.545151710510254
    9. '   ' → logprob: -7.670151710510254
    10. ' them' → logprob: -7.670151710510254

Token 35: ' trois' (ID: 25564)
  Prédit: ' trois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trois' → logprob: -0.47551214694976807
    2. ' ' → logprob: -1.350512146949768
    3. ' opérations' → logprob: -2.9755120277404785
    4. ' résultats' → logprob: -3.9755120277404785
    5. 'tro' → logprob: -4.2255120277404785
    6. ' valeurs' → logprob: -4.4755120277404785
    7. ' ' → logprob: -5.2255120277404785
    8. '   ' → logprob: -5.6005120277404785
    9. '  ' → logprob: -5.8505120277404785
    10. '3' → logprob: -5.8505120277404785

Token 36: ' résultats' (ID: 48985)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7127407193183899
    2. '\' → logprob: -1.5877406597137451
    3. '    
' → logprob: -2.712740659713745
    4. '
' → logprob: -2.962740659713745
    5. '"""
' → logprob: -3.212740659713745
    6. '  
' → logprob: -3.212740659713745
    7. ' 
' → logprob: -3.462740659713745
    8. '\n' → logprob: -3.712740659713745
    9. '.' → logprob: -4.587740898132324
    10. '   
' → logprob: -4.712740898132324

Token 37: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03138190135359764
    2. '```' → logprob: -4.531382083892822
    3. '
' → logprob: -5.031382083892822
    4. '\n' → logprob: -5.281382083892822
    5. '"""' → logprob: -6.156382083892822
    6. '    
' → logprob: -6.156382083892822
    7. '"""
' → logprob: -6.406382083892822
    8. '  
' → logprob: -7.781382083892822
    9. '\' → logprob: -7.781382083892822
    10. '.' → logprob: -8.031381607055664

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09495744109153748
    2. '"""' → logprob: -2.8449573516845703
    3. '```' → logprob: -3.5949573516845703
    4. '"""
' → logprob: -5.71995735168457
    5. '"' → logprob: -7.34495735168457
    6. '""' → logprob: -7.71995735168457
    7. '`' → logprob: -8.71995735168457
    8. '``' → logprob: -8.96995735168457
    9. '\n' → logprob: -9.21995735168457
    10. '
' → logprob: -9.59495735168457

Token 39: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031075259670615196
    2. '"""' → logprob: -3.7810752391815186
    3. '"""
' (adapté à ' """
') → logprob: -5.406075477600098
    4. '```' → logprob: -5.906075477600098
    5. '""' → logprob: -8.531075477600098
    6. '"' → logprob: -8.656075477600098
    7. '    
' → logprob: -9.406075477600098
    8. '
' → logprob: -10.156075477600098
    9. '\n' → logprob: -10.906075477600098
    10. '``' → logprob: -11.156075477600098

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011158415116369724
    2. '    
' → logprob: -4.886158466339111
    3. '
' → logprob: -6.386158466339111
    4. 'result' → logprob: -7.136158466339111
    5. 'n' → logprob: -7.511158466339111
    6. '    ' → logprob: -9.261157989501953
    7. '\n' → logprob: -9.386157989501953
    8. '```' → logprob: -9.761157989501953
    9. 'import' → logprob: -10.011157989501953
    10. 'a' → logprob: -10.261157989501953

Token 41: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22651700675487518
    2. 'n' → logprob: -1.8515169620513916
    3. 'a' → logprob: -4.226517200469971
    4. '    
' → logprob: -4.226517200469971
    5. 'x' → logprob: -5.851517200469971
    6. 'import' → logprob: -6.226517200469971
    7. 'result' → logprob: -6.351517200469971
    8. ' n' → logprob: -6.476517200469971
    9. '\n' → logprob: -6.476517200469971
    10. '
' → logprob: -6.601517200469971

Token 42: ' Lecture' (ID: 106534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.189941644668579
    2. 'a' → logprob: -1.439941644668579
    3. 'n' → logprob: -2.064941644668579
    4. ' n' → logprob: -2.564941644668579
    5. ' a' → logprob: -2.814941644668579
    6. ' x' → logprob: -2.939941644668579
    7. '#' → logprob: -3.189941644668579
    8. 'x' → logprob: -3.564941644668579
    9. 'ent' → logprob: -4.06494140625
    10. 'num' → logprob: -4.18994140625

Token 43: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6350432634353638
    2. ' des' → logprob: -0.8850432634353638
    3. 'de' → logprob: -3.635043144226074
    4. 'des' → logprob: -4.635043144226074
    5. ' deux' → logprob: -5.385043144226074
    6. ' ' → logprob: -5.385043144226074
    7. '    ' → logprob: -5.760043144226074
    8. ' de' → logprob: -6.385043144226074
    9. 'n' → logprob: -6.385043144226074
    10. 's' → logprob: -7.260043144226074

Token 44: ''une' (ID: 13337)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.0757602453231812
    2. 'de' → logprob: -1.4507602453231812
    3. ' ' → logprob: -2.0757603645324707
    4. 'e' → logprob: -2.0757603645324707
    5. ' deux' → logprob: -2.4507603645324707
    6. ' des' → logprob: -3.3257603645324707
    7. ' de' → logprob: -4.450760364532471
    8. 'eux' → logprob: -4.575760364532471
    9. ' e' → logprob: -4.825760364532471
    10. ''' → logprob: -5.325760364532471

Token 45: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2908875346183777
    2. ' ligne' → logprob: -1.7908875942230225
    3. 'entrée' → logprob: -3.4158875942230225
    4. ' entrée' → logprob: -4.415887355804443
    5. 'l' → logprob: -4.540887355804443
    6. 'ligne' → logprob: -4.540887355804443
    7. ' valeur' → logprob: -5.415887355804443
    8. 'de' → logprob: -5.790887355804443
    9. 'ent' → logprob: -6.040887355804443
    10. 's' → logprob: -6.290887355804443

Token 46: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.646091639995575
    2. ' =' → logprob: -1.5210916996002197
    3. 's' → logprob: -2.0210916996002197
    4. '    ' → logprob: -3.6460916996002197
    5. ' ' → logprob: -3.7710916996002197
    6. ',' → logprob: -4.271091461181641
    7. 'input' → logprob: -4.521091461181641
    8. '=' → logprob: -4.896091461181641
    9. ' input' → logprob: -4.896091461181641
    10. '=input' → logprob: -5.271091461181641

Token 47: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5165020227432251
    2. ' input' → logprob: -1.516502022743225
    3. 'l' → logprob: -2.0165019035339355
    4. 'input' → logprob: -3.5165019035339355
    5. ' ' → logprob: -4.6415019035339355
    6. ' stdin' → logprob: -6.0165019035339355
    7. '```' → logprob: -6.2665019035339355
    8. '   ' → logprob: -6.3915019035339355
    9. ' standard' → logprob: -6.7665019035339355
    10. '	l' → logprob: -6.8915019035339355

Token 48: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.29731935262680054
    2. 'entrée' → logprob: -1.5473194122314453
    3. 'input' → logprob: -4.047319412231445
    4. ''' → logprob: -5.047319412231445
    5. ' entrée' → logprob: -5.297319412231445
    6. '_' → logprob: -5.422319412231445
    7. ' input' → logprob: -5.672319412231445
    8. 'l' → logprob: -6.047319412231445
    9. 'entr' → logprob: -6.922319412231445
    10. ' entr' → logprob: -7.172319412231445

Token 49: ' utilisateur' (ID: 115595)
  Prédit: ' standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.18080516159534454
    2. 'standard' → logprob: -2.805805206298828
    3. ' input' → logprob: -3.555805206298828
    4. '   ' → logprob: -3.680805206298828
    5. 'input' → logprob: -4.305805206298828
    6. ' ' → logprob: -4.930805206298828
    7. ' stdin' → logprob: -5.305805206298828
    8. ' utilisateur' → logprob: -5.555805206298828
    9. 'user' → logprob: -5.680805206298828
    10. 'stdin' → logprob: -5.680805206298828

Token 50: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04984000697731972
    2. 'n' → logprob: -3.674839973449707
    3. ' line' → logprob: -5.424839973449707
    4. 'a' → logprob: -5.424839973449707
    5. '    
' → logprob: -5.549839973449707
    6. ' n' → logprob: -6.299839973449707
    7. 's' → logprob: -6.674839973449707
    8. 'input' → logprob: -6.674839973449707
    9. ' x' → logprob: -6.799839973449707
    10. 'line' → logprob: -6.924839973449707

Token 51: ' décou' (ID: 68302)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.3042949438095093
    2. ' line' → logprob: -1.6792949438095093
    3. '   ' → logprob: -2.054295063018799
    4. ' x' → logprob: -2.429295063018799
    5. ' ligne' → logprob: -2.429295063018799
    6. ' input' → logprob: -2.554295063018799
    7. ' a' → logprob: -3.554295063018799
    8. 'n' → logprob: -3.679295063018799
    9. ' la' → logprob: -4.054295063018799
    10. ' puis' → logprob: -4.429295063018799

Token 52: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.0847947895526886
    2. 'pe' → logprob: -2.959794759750366
    3. 'p' → logprob: -3.834794759750366
    4. 'per' → logprob: -5.459794998168945
    5. 'pant' → logprob: -6.334794998168945
    6. 'pé' → logprob: -6.584794998168945
    7. ' page' → logprob: -8.959794998168945
    8. 'pa' → logprob: -9.209794998168945
    9. 'Page' → logprob: -10.084794998168945
    10. 'pay' → logprob: -11.084794998168945

Token 53: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.03346645459532738
    2. ' des' → logprob: -4.033466339111328
    3. ' et' → logprob: -5.658466339111328
    4. ' ' → logprob: -5.783466339111328
    5. ' de' → logprob: -5.783466339111328
    6. 'en' → logprob: -5.783466339111328
    7. ' input' → logprob: -7.283466339111328
    8. 's' → logprob: -8.408466339111328
    9. '   ' → logprob: -8.658466339111328
    10. ' a' → logprob: -8.783466339111328

Token 54: ' tokens' (ID: 20290)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.5438207983970642
    2. ' tokens' → logprob: -2.293820858001709
    3. ' une' → logprob: -2.418820858001709
    4. ' des' → logprob: -2.918820858001709
    5. 'de' → logprob: -3.043820858001709
    6. ' ' → logprob: -3.043820858001709
    7. 'ent' → logprob: -3.918820858001709
    8. 'tokens' → logprob: -3.918820858001709
    9. ' un' → logprob: -4.918820858001709
    10. ' ent' → logprob: -5.043820858001709

Token 55: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5854849815368652
    2. '   ' → logprob: -1.5854849815368652
    3. ' line' → logprob: -1.5854849815368652
    4. 'n' → logprob: -1.9604849815368652
    5. 'line' → logprob: -3.0854849815368652
    6. 's' → logprob: -3.0854849815368652
    7. 'tokens' → logprob: -3.7104849815368652
    8. ' a' → logprob: -3.8354849815368652
    9. 'l' → logprob: -3.8354849815368652
    10. ' n' → logprob: -4.210484981536865

Token 56: ' conversion' (ID: 22165)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.7257648706436157
    2. ' conversion' → logprob: -1.7257648706436157
    3. ' récupération' → logprob: -1.7257648706436157
    4. ' et' → logprob: -2.475764751434326
    5. ' lecture' → logprob: -4.350764751434326
    6. ' les' → logprob: -4.850764751434326
    7. 'conversion' → logprob: -5.350764751434326
    8. 's' → logprob: -5.350764751434326
    9. ' extraction' → logprob: -5.600764751434326
    10. ' stockage' → logprob: -5.850764751434326

Token 57: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.05547960847616196
    2. ' des' → logprob: -3.0554795265197754
    3. 'en' → logprob: -5.555479526519775
    4. ' ' → logprob: -6.180479526519775
    5. '[int' → logprob: -8.180480003356934
    6. '   ' → logprob: -8.805480003356934
    7. 'des' → logprob: -9.555480003356934
    8. 'int' → logprob: -9.680480003356934
    9. '=int' → logprob: -9.680480003356934
    10. ' int' → logprob: -10.055480003356934

Token 58: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.5409611463546753
    2. 'ent' → logprob: -0.9159611463546753
    3. ' integers' → logprob: -4.915961265563965
    4. ' int' → logprob: -5.665961265563965
    5. 'int' → logprob: -5.915961265563965
    6. ' nombres' → logprob: -7.165961265563965
    7. 'inte' → logprob: -7.165961265563965
    8. ' entier' → logprob: -7.290961265563965
    9. '```' → logprob: -7.415961265563965
    10. '_ent' → logprob: -7.665961265563965

Token 59: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.007133162580430508
    2. 't' → logprob: -5.5071330070495605
    3. '   ' → logprob: -7.1321330070495605
    4. 'i' → logprob: -8.007133483886719
    5. ' ints' → logprob: -8.132133483886719
    6. '```' → logprob: -8.257133483886719
    7. 'ti' → logprob: -8.382133483886719
    8. 'ières' → logprob: -8.632133483886719
    9. 'ier' → logprob: -9.382133483886719
    10. ' integers' → logprob: -9.507133483886719

Token 60: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4522772431373596
    2. 'n' → logprob: -1.9522771835327148
    3. '    
' → logprob: -2.077277183532715
    4. 's' → logprob: -3.327277183532715
    5. 'a' → logprob: -3.577277183532715
    6. 'tokens' → logprob: -5.077277183532715
    7. ' n' → logprob: -5.452277183532715
    8. ' a' → logprob: -5.952277183532715
    9. ' 
' → logprob: -6.077277183532715
    10. '   
' → logprob: -6.202277183532715

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2412964403629303
    2. 'n' → logprob: -2.2412965297698975
    3. 'a' → logprob: -3.1162965297698975
    4. '    
' → logprob: -3.7412965297698975
    5. ' a' → logprob: -4.366296291351318
    6. 'x' → logprob: -4.491296291351318
    7. ' x' → logprob: -4.991296291351318
    8. ' n' → logprob: -5.366296291351318
    9. ' 
' → logprob: -7.241296291351318
    10. ' line' → logprob: -7.991296291351318

Token 62: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5862540006637573
    2. 'a' (adapté à ' a') → logprob: -0.9612540006637573
    3. '   ' → logprob: -3.336254119873047
    4. ' x' → logprob: -4.461254119873047
    5. 'n' → logprob: -4.961254119873047
    6. 'x' → logprob: -5.711254119873047
    7. ' n' → logprob: -7.086254119873047
    8. ' numbers' → logprob: -7.961254119873047
    9. ' nums' → logprob: -8.211254119873047
    10. ' line' → logprob: -8.211254119873047

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008229722734540701
    2. ' ,' → logprob: -7.250823020935059
    3. ',a' → logprob: -10.125823020935059
    4. 's' → logprob: -10.375823020935059
    5. ' =' → logprob: -11.000823020935059
    6. '=' → logprob: -11.500823020935059
    7. 'a' → logprob: -11.875823020935059
    8. ',s' → logprob: -12.875823020935059
    9. ',b' → logprob: -13.125823020935059
    10. '1' → logprob: -14.875823020935059

Token 64: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0026744648348540068
    2. ' ' → logprob: -6.502674579620361
    3. 'b' → logprob: -6.752674579620361
    4. ' ' → logprob: -12.877674102783203
    5. '  ' → logprob: -15.002674102783203
    6. '<|end|>' → logprob: -15.002674102783203
    7. '	b' → logprob: -15.752674102783203
    8. '    ' → logprob: -16.127674102783203
    9. ' ' → logprob: -16.627674102783203
    10. ' ‌' → logprob: -17.252674102783203

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0040831477381289005
    2. '=' → logprob: -5.504083156585693
    3. ',' → logprob: -12.379082679748535
    4. ')' → logprob: -15.629082679748535
    5. ' =
' → logprob: -16.12908363342285
    6. ' ' → logprob: -16.37908363342285
    7. ' ' → logprob: -16.87908363342285
    8. '=int' → logprob: -17.00408363342285
    9. ' =
' → logprob: -17.12908363342285
    10. '=input' → logprob: -17.37908363342285

Token 66: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.008690561167895794
    2. 'map' → logprob: -4.758690357208252
    3. ' list' → logprob: -9.63369083404541
    4. ' ' → logprob: -12.75869083404541
    5. ' [' → logprob: -13.38369083404541
    6. ' ' → logprob: -13.50869083404541
    7. ' tuple' → logprob: -13.50869083404541
    8. '	map' → logprob: -13.75869083404541
    9. 'list' → logprob: -14.00869083404541
    10. '[' → logprob: -14.38369083404541

Token 67: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004104877356439829
    2. ' int' → logprob: -5.504105091094971
    3. 'map' → logprob: -11.004104614257812
    4. '```' → logprob: -12.254104614257812
    5. '   ' → logprob: -13.004104614257812
    6. ' ' → logprob: -14.004104614257812
    7. ' map' → logprob: -14.379104614257812
    8. '  ' → logprob: -14.629104614257812
    9. '(int' → logprob: -15.129104614257812
    10. '<int' → logprob: -15.754104614257812

Token 68: '(n' (ID: 2406)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.042936500161886215
    2. '(i' → logprob: -3.7929365634918213
    3. '(s' → logprob: -4.667936325073242
    4. '(' → logprob: -5.292936325073242
    5. '(input' → logprob: -5.417936325073242
    6. ']' → logprob: -8.167936325073242
    7. '(token' → logprob: -8.292936325073242
    8. '()]' → logprob: -10.792936325073242
    9. '(value' → logprob: -11.042936325073242
    10. '(item' → logprob: -11.292936325073242

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05548243224620819
    2. '(x' → logprob: -3.0554823875427246
    3. '(' → logprob: -6.055482387542725
    4. '(i' → logprob: -6.555482387542725
    5. '(input' → logprob: -6.930482387542725
    6. '(s' → logprob: -7.555482387542725
    7. '(n' → logprob: -7.555482387542725
    8. '(token' → logprob: -8.055482864379883
    9. '())' → logprob: -8.555482864379883
    10. 's' → logprob: -9.305482864379883

Token 70: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5316331386566162
    2. 'for' → logprob: -1.9066331386566162
    3. ' for' → logprob: -2.406633138656616
    4. '(input' → logprob: -2.781633138656616
    5. 'x' → logprob: -2.906633138656616
    6. '(i' → logprob: -3.531633138656616
    7. '(' → logprob: -5.156633377075195
    8. 'input' → logprob: -5.281633377075195
    9. ' x' → logprob: -5.406633377075195
    10. ')' → logprob: -5.531633377075195

Token 71: ' n' (ID: 297)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.016041524708271027
    2. 'input' → logprob: -4.1410417556762695
    3. ' ' → logprob: -12.51604175567627
    4. '(input' → logprob: -14.26604175567627
    5. '	input' → logprob: -14.39104175567627
    6. ' raw' → logprob: -14.51604175567627
    7. ' line' → logprob: -15.26604175567627
    8. '  ' → logprob: -15.26604175567627
    9. '=input' → logprob: -15.26604175567627
    10. '```' → logprob: -15.51604175567627

Token 72: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4339212477207184
    2. 'input' → logprob: -1.058921217918396
    3. '(input' → logprob: -5.6839213371276855
    4. '(' → logprob: -6.9339213371276855
    5. ' ' → logprob: -7.9339213371276855
    6. ' in' → logprob: -8.058920860290527
    7. '=input' → logprob: -10.183920860290527
    8. '_' → logprob: -10.683920860290527
    9. 'in' → logprob: -10.808920860290527
    10. ' (' → logprob: -11.183920860290527

Token 73: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3868841528892517
    2. 'input' → logprob: -1.1368842124938965
    3. ' ' → logprob: -12.261883735656738
    4. '(input' → logprob: -13.011883735656738
    5. '```' → logprob: -13.886883735656738
    6. '	input' → logprob: -14.261883735656738
    7. '=input' → logprob: -14.261883735656738
    8. '<input' → logprob: -14.574383735656738
    9. ' ' → logprob: -14.699383735656738
    10. '   ' → logprob: -14.699383735656738

Token 74: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2137172371149063
    2. '()]' → logprob: -1.7137172222137451
    3. '().' → logprob: -4.713717460632324
    4. '(' → logprob: -6.338717460632324
    5. '())' → logprob: -7.213717460632324
    6. '('' → logprob: -7.588717460632324
    7. '()].' → logprob: -9.588717460632324
    8. ' ()' → logprob: -10.088717460632324
    9. '("")' → logprob: -10.713717460632324
    10. ']()' → logprob: -10.713717460632324

Token 75: 'Ent' (ID: 3263)
  Prédit: '").'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '").' → logprob: -0.03548238426446915
    2. '")' → logprob: -4.785482406616211
    3. '().' → logprob: -4.910482406616211
    4. 'de' → logprob: -5.535482406616211
    5. 'Enter' → logprob: -5.660482406616211
    6. '()' → logprob: -6.035482406616211
    7. '"' → logprob: -6.410482406616211
    8. 'Ent' → logprob: -6.535482406616211
    9. 'Veuillez' → logprob: -6.785482406616211
    10. '("' → logprob: -6.910482406616211

Token 76: 'rez' (ID: 13676)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.15150275826454163
    2. 'iers' → logprob: -2.151502847671509
    3. 'rée' → logprob: -4.15150260925293
    4. 'r' → logprob: -6.40150260925293
    5. 'er' → logprob: -6.90150260925293
    6. 'rez' → logprob: -7.02650260925293
    7. 'ré' → logprob: -7.27650260925293
    8. 're' → logprob: -7.40150260925293
    9. 'i' → logprob: -7.52650260925293
    10. 'ree' → logprob: -7.65150260925293

Token 77: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.004978285636752844
    2. 'de' → logprob: -5.754978179931641
    3. ' ' → logprob: -7.004978179931641
    4. ' two' → logprob: -7.879978179931641
    5. ' les' → logprob: -8.00497817993164
    6. ' vos' → logprob: -10.25497817993164
    7. ' ' → logprob: -10.62997817993164
    8. '(' → logprob: -11.25497817993164
    9. ' a' → logprob: -11.50497817993164
    10. ' de' → logprob: -11.62997817993164

Token 78: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.018786340951919556
    2. ' nombres' → logprob: -4.393786430358887
    3. ' ' → logprob: -5.893786430358887
    4. 'ent' → logprob: -6.393786430358887
    5. ' integers' → logprob: -6.643786430358887
    6. ' entier' → logprob: -8.393786430358887
    7. ' nombre' → logprob: -9.768786430358887
    8. ' enti' → logprob: -9.893786430358887
    9. ' entière' → logprob: -10.268786430358887
    10. '<|end|>' → logprob: -10.393786430358887

Token 79: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0800720602273941
    2. 'ti' → logprob: -3.3300721645355225
    3. ' ti' → logprob: -3.5800721645355225
    4. 't' → logprob: -4.705071926116943
    5. ' ers' → logprob: -7.080071926116943
    6. 'i' → logprob: -7.455071926116943
    7. 'ers' → logprob: -7.455071926116943
    8. '	ti' → logprob: -7.580071926116943
    9. 'e' → logprob: -8.080072402954102
    10. 'ières' → logprob: -8.205072402954102

Token 80: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.16077390313148499
    2. ' ' → logprob: -3.035773992538452
    3. ' ' → logprob: -3.535773992538452
    4. ' ")' → logprob: -3.785773992538452
    5. 's' → logprob: -4.160773754119873
    6. ' :' → logprob: -4.660773754119873
    7. ' )' → logprob: -5.035773754119873
    8. ':' → logprob: -5.160773754119873
    9. ' separated' → logprob: -6.285773754119873
    10. '")' → logprob: -6.410773754119873

Token 81: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.01609349437057972
    2. 'é' → logprob: -4.141093730926514
    3. 'es' → logprob: -9.891093254089355
    4. 'ès' → logprob: -12.891093254089355
    5. 'ées' → logprob: -13.266093254089355
    6. 'e' → logprob: -13.391093254089355
    7. 's' → logprob: -13.891093254089355
    8. '```' → logprob: -14.766093254089355
    9. 'ée' → logprob: -15.141093254089355
    10. 'ÉS' → logprob: -15.516093254089355

Token 82: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.027663150802254677
    2. 'par' → logprob: -3.652663230895996
    3. '<|end|>' → logprob: -6.902663230895996
    4. ' ' → logprob: -9.027663230895996
    5. '_par' → logprob: -9.777663230895996
    6. 'es' → logprob: -10.027663230895996
    7. '(par' → logprob: -10.402663230895996
    8. '  ' → logprob: -11.152663230895996
    9. 'space' → logprob: -11.777663230895996
    10. '```' → logprob: -11.902663230895996

Token 83: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6461067199707031
    2. ' ' → logprob: -1.0211067199707031
    3. 'un' → logprob: -3.021106719970703
    4. ' espace' → logprob: -3.271106719970703
    5. ''espace' → logprob: -4.896106719970703
    6. '  ' → logprob: -5.396106719970703
    7. ' espaces' → logprob: -5.896106719970703
    8. ''un' → logprob: -5.896106719970703
    9. 'space' → logprob: -6.271106719970703
    10. ' ' → logprob: -6.521106719970703

Token 84: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -1.0591119527816772
    2. 'es' → logprob: -1.4341119527816772
    3. ''espace' → logprob: -1.4341119527816772
    4. ' ' → logprob: -2.184112071990967
    5. 'space' → logprob: -3.309112071990967
    6. '’espace' → logprob: -4.809112071990967
    7. 'esp' → logprob: -5.309112071990967
    8. ' espaces' → logprob: -6.184112071990967
    9. ',' → logprob: -6.434112071990967
    10. ' )' → logprob: -6.434112071990967

Token 85: ' :' (ID: 712)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2296687215566635
    2. ')' → logprob: -2.604668617248535
    3. ':' → logprob: -2.729668617248535
    4. '").' → logprob: -3.104668617248535
    5. '):' → logprob: -4.729668617248535
    6. '"):' → logprob: -5.229668617248535
    7. '")]' → logprob: -6.104668617248535
    8. '')' → logprob: -6.354668617248535
    9. ' :' → logprob: -6.979668617248535
    10. '"' → logprob: -7.979668617248535

Token 86: ' ").' (ID: 49234)
  Prédit: '").'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '").' → logprob: -0.012842766009271145
    2. ' ").' → logprob: -4.637842655181885
    3. '")' → logprob: -6.012842655181885
    4. ').' → logprob: -8.512843132019043
    5. '")]' → logprob: -8.762843132019043
    6. '"' → logprob: -9.012843132019043
    7. '').' → logprob: -9.512843132019043
    8. '"))' → logprob: -10.762843132019043
    9. ')' → logprob: -10.887843132019043
    10. ' ")' → logprob: -11.387843132019043

Token 87: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009149204124696553
    2. 'strip' → logprob: -7.000915050506592
    3. 'rstrip' → logprob: -12.750914573669434
    4. ' split' → logprob: -14.750914573669434
    5. 'spl' → logprob: -15.500914573669434
    6. '(split' → logprob: -18.50091552734375
    7. 's' → logprob: -19.25091552734375
    8. '.split' → logprob: -21.12591552734375
    9. 'plit' → logprob: -22.00091552734375
    10. 'replace' → logprob: -22.00091552734375

Token 88: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.21425217390060425
    2. '())' → logprob: -1.964252233505249
    3. '()' → logprob: -2.964252233505249
    4. '(' → logprob: -7.21425199508667
    5. ')]' → logprob: -8.839252471923828
    6. '('' → logprob: -9.964252471923828
    7. ']' → logprob: -11.089252471923828
    8. '("' → logprob: -11.589252471923828
    9. ')' → logprob: -11.589252471923828
    10. '()]
' → logprob: -11.589252471923828

Token 89: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018120678141713142
    2. '   ' → logprob: -4.268120765686035
    3. '    
' → logprob: -5.893120765686035
    4. 'n' → logprob: -8.393120765686035
    5. '   
' → logprob: -8.768120765686035
    6. 'result' → logprob: -8.893120765686035
    7. '  
' → logprob: -8.893120765686035
    8. '
' → logprob: -9.393120765686035
    9. '```' → logprob: -9.393120765686035
    10. '

' → logprob: -9.643120765686035

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7076017260551453
    2. 'result' → logprob: -1.83260178565979
    3. '    
' → logprob: -2.20760178565979
    4. '
' → logprob: -2.20760178565979
    5. 'c' → logprob: -2.95760178565979
    6. 's' → logprob: -3.20760178565979
    7. '#' → logprob: -5.207601547241211
    8. ' 
' → logprob: -5.332601547241211
    9. 'results' → logprob: -5.332601547241211
    10. ' result' → logprob: -5.832601547241211

Token 91: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15898923575878143
    2. 'sum' → logprob: -2.033989191055298
    3. 'som' → logprob: -4.408989429473877
    4. '#' (adapté à ' #') → logprob: -5.908989429473877
    5. ' somme' → logprob: -7.158989429473877
    6. 'summ' → logprob: -8.783988952636719
    7. 'result' → logprob: -9.033988952636719
    8. 'addition' → logprob: -9.283988952636719
    9. '   ' → logprob: -10.658988952636719
    10. 'c' → logprob: -10.658988952636719

Token 92: ' Calcul' (ID: 57243)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19085466861724854
    2. 'sum' → logprob: -2.565854549407959
    3. ' somme' → logprob: -2.815854549407959
    4. 'som' → logprob: -3.940854549407959
    5. '#' → logprob: -4.190854549407959
    6. ' sum' → logprob: -7.065854549407959
    7. ' #' → logprob: -7.565854549407959
    8. 'addition' → logprob: -8.440855026245117
    9. ' som' → logprob: -8.815855026245117
    10. 'result' → logprob: -9.065855026245117

Token 93: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2099255621433258
    2. ' de' → logprob: -2.209925651550293
    3. '   ' → logprob: -3.084925651550293
    4. '    ' → logprob: -4.209925651550293
    5. ' des' → logprob: -5.459925651550293
    6. '_' → logprob: -6.084925651550293
    7. ' ' → logprob: -6.459925651550293
    8. ' s' → logprob: -6.709925651550293
    9. '    
' → logprob: -6.834925651550293
    10. 'de' → logprob: -6.959925651550293

Token 94: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7200251817703247
    2. 's' → logprob: -1.2200251817703247
    3. ' la' → logprob: -1.5950251817703247
    4. ' somme' → logprob: -5.220025062561035
    5. 'som' → logprob: -5.720025062561035
    6. 'sum' → logprob: -6.470025062561035
    7. 'a' → logprob: -6.595025062561035
    8. 'l' → logprob: -6.720025062561035
    9. ' s' → logprob: -6.845025062561035
    10. 'c' → logprob: -7.720025062561035

Token 95: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03350149840116501
    2. ' somme' → logprob: -3.533501386642456
    3. 'som' → logprob: -5.658501625061035
    4. 'sum' → logprob: -9.033501625061035
    5. ' som' → logprob: -9.408501625061035
    6. '#' → logprob: -11.158501625061035
    7. 'a' → logprob: -11.908501625061035
    8. ' ' → logprob: -12.283501625061035
    9. '```' → logprob: -12.783501625061035
    10. 'plus' → logprob: -12.783501625061035

Token 96: ' des' (ID: 731)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.534130334854126
    2. 's' → logprob: -1.159130334854126
    3. ',' → logprob: -3.284130334854126
    4. '   ' → logprob: -3.659130334854126
    5. ' c' → logprob: -4.034130096435547
    6. ' s' → logprob: -4.784130096435547
    7. ' ,' → logprob: -5.659130096435547
    8. ' =' → logprob: -5.659130096435547
    9. 'a' → logprob: -6.784130096435547
    10. 'result' → logprob: -7.784130096435547

Token 97: ' deux' (ID: 10301)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5802486538887024
    2. 'a' → logprob: -0.8302486538887024
    3. ' deux' → logprob: -6.330248832702637
    4. 'de' → logprob: -6.955248832702637
    5. ' ent' → logprob: -7.580248832702637
    6. ' nombres' → logprob: -7.705248832702637
    7. ' ' → logprob: -7.955248832702637
    8. 'ent' → logprob: -9.330248832702637
    9. ' two' → logprob: -9.580248832702637
    10. 'n' → logprob: -10.455248832702637

Token 98: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8584607839584351
    2. ' a' → logprob: -0.9834607839584351
    3. 'a' → logprob: -1.858460783958435
    4. ' ent' → logprob: -4.733460903167725
    5. ' ,' → logprob: -4.733460903167725
    6. ' integers' → logprob: -4.983460903167725
    7. ' nombres' → logprob: -5.358460903167725
    8. 's' → logprob: -5.483460903167725
    9. ' )' → logprob: -5.733460903167725
    10. ',' → logprob: -5.858460903167725

Token 99: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.01322164572775364
    2. '   ' → logprob: -4.638221740722656
    3. 't' → logprob: -6.638221740722656
    4. 's' → logprob: -7.013221740722656
    5. 'ents' → logprob: -7.888221740722656
    6. 'a' → logprob: -8.388221740722656
    7. 'ier' → logprob: -8.763221740722656
    8. 'ières' → logprob: -8.888221740722656
    9. '       ' → logprob: -9.638221740722656
    10. 'tokens' → logprob: -10.388221740722656

Token 100: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37310877442359924
    2. '   ' → logprob: -1.6231087446212769
    3. 'c' → logprob: -2.8731088638305664
    4. '    
' → logprob: -3.3731088638305664
    5. ' s' → logprob: -4.373108863830566
    6. 'result' → logprob: -6.373108863830566
    7. ' 
' → logprob: -6.498108863830566
    8. ' somme' → logprob: -6.498108863830566
    9. ' c' → logprob: -6.873108863830566
    10. '   
' → logprob: -6.998108863830566

Token 101: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20773853361606598
    2. 'c' → logprob: -2.4577386379241943
    3. '   ' → logprob: -2.7077386379241943
    4. '    
' → logprob: -4.082738399505615
    5. ' s' → logprob: -4.457738399505615
    6. ' 
' → logprob: -6.082738399505615
    7. ' c' → logprob: -6.332738399505615
    8. 'result' → logprob: -7.332738399505615
    9. '   
' → logprob: -7.582738399505615
    10. 'sum' → logprob: -8.457738876342773

Token 102: ' sum' (ID: 4215)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5693749189376831
    2. 's' → logprob: -1.069374918937683
    3. ' somme' → logprob: -3.1943750381469727
    4. ' sum' → logprob: -3.8193750381469727
    5. 'sum' (adapté à ' sum') → logprob: -4.569375038146973
    6. ' result' → logprob: -5.319375038146973
    7. ' c' → logprob: -5.569375038146973
    8. 'c' → logprob: -5.569375038146973
    9. 'result' → logprob: -5.944375038146973
    10. '   ' → logprob: -6.944375038146973

Token 103: '_res' (ID: 10626)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10419648140668869
    2. 'me' → logprob: -3.104196548461914
    3. '_val' → logprob: -3.604196548461914
    4. 'ma' → logprob: -4.479196548461914
    5. '_ab' → logprob: -4.854196548461914
    6. 'e' → logprob: -5.354196548461914
    7. 'm' → logprob: -6.729196548461914
    8. '_value' → logprob: -7.604196548461914
    9. '_result' → logprob: -7.729196548461914
    10. 'a' → logprob: -8.104196548461914

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2588376998901367
    2. '=' → logprob: -1.5088376998901367
    3. 'ult' → logprob: -5.008837699890137
    4. ' ' → logprob: -9.383837699890137
    5. 'ultat' → logprob: -10.008837699890137
    6. 'u' → logprob: -10.758837699890137
    7. 'ul' → logprob: -10.883837699890137
    8. '  ' → logprob: -11.508837699890137
    9. '   ' → logprob: -11.508837699890137
    10. '_' → logprob: -12.383837699890137

Token 105: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4740852415561676
    2. ' a' → logprob: -0.9740852117538452
    3. '   ' → logprob: -11.849084854125977
    4. '	a' → logprob: -14.349084854125977
    5. ' ' → logprob: -14.849084854125977
    6. '(a' → logprob: -16.974084854125977
    7. '  ' → logprob: -17.224084854125977
    8. ' ' → logprob: -18.224084854125977
    9. '_a' → logprob: -18.599084854125977
    10. '    ' → logprob: -18.849084854125977

Token 106: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.002506697317585349
    2. '+' → logprob: -6.002506732940674
    3. ' ' → logprob: -10.502506256103516
    4. '+b' → logprob: -13.127506256103516
    5. ' plus' → logprob: -13.877506256103516
    6. ' ' → logprob: -14.502506256103516
    7. ' +
' → logprob: -17.127506256103516
    8. '  ' → logprob: -18.377506256103516
    9. '+B' → logprob: -18.502506256103516
    10. '_' → logprob: -18.627506256103516

Token 107: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03804286941885948
    2. 'b' → logprob: -3.2880427837371826
    3. ' ' → logprob: -13.538043022155762
    4. '	b' → logprob: -16.163042068481445
    5. ' ' → logprob: -16.663042068481445
    6. ' б' → logprob: -18.038042068481445
    7. '_b' → logprob: -19.663042068481445
    8. '```' → logprob: -20.663042068481445
    9. '   ' → logprob: -20.788042068481445
    10. '    ' → logprob: -20.788042068481445

Token 108: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21531185507774353
    2. '    
' → logprob: -1.965311884880066
    3. '   ' → logprob: -2.9653117656707764
    4. '   
' → logprob: -7.3403120040893555
    5. '\n' → logprob: -7.5903120040893555
    6. '  
' → logprob: -8.215312004089355
    7. '  ' → logprob: -9.215312004089355
    8. ' 
' → logprob: -9.215312004089355
    9. '    
    
' → logprob: -9.340312004089355
    10. '
    
' → logprob: -9.590312004089355

Token 109: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2855038344860077
    2. '   ' → logprob: -1.78550386428833
    3. '    
' → logprob: -2.53550386428833
    4. '  
' → logprob: -7.91050386428833
    5. '   
' → logprob: -7.91050386428833
    6. '\n' → logprob: -8.410503387451172
    7. '  ' → logprob: -8.785503387451172
    8. ' 
' → logprob: -9.410503387451172
    9. 'n' → logprob: -9.910503387451172
    10. '    ' → logprob: -10.410503387451172

Token 110: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16526201367378235
    2. '    
' → logprob: -2.41526198387146
    3. '   ' → logprob: -2.91526198387146
    4. '\n' → logprob: -5.540262222290039
    5. '  
' → logprob: -6.290262222290039
    6. '   
' → logprob: -6.665262222290039
    7. ' 
' → logprob: -7.165262222290039
    8. 'n' → logprob: -8.415262222290039
    9. '' → logprob: -9.165262222290039
    10. '    
    
' → logprob: -9.165262222290039

Token 111: ' Calcul' (ID: 57243)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.34871870279312134
    2. 'diff' → logprob: -1.3487186431884766
    3. ' difference' → logprob: -3.5987186431884766
    4. 'difference' → logprob: -5.848718643188477
    5. '   ' → logprob: -6.098718643188477
    6. '
' → logprob: -6.973718643188477
    7. '#' → logprob: -7.848718643188477
    8. ' #' → logprob: -9.098718643188477
    9. '	diff' → logprob: -9.098718643188477
    10. '    
' → logprob: -9.098718643188477

Token 112: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6596147418022156
    2. ' de' → logprob: -0.7846147418022156
    3. ' of' → logprob: -4.409614562988281
    4. '    ' → logprob: -5.409614562988281
    5. ' d' → logprob: -6.159614562988281
    6. 'de' → logprob: -6.159614562988281
    7. '  ' → logprob: -6.409614562988281
    8. '_' → logprob: -7.034614562988281
    9. ' des' → logprob: -7.409614562988281
    10. 'd' → logprob: -7.659614562988281

Token 113: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21070852875709534
    2. 'a' → logprob: -2.3357086181640625
    3. ' a' → logprob: -2.5857086181640625
    4. 'la' → logprob: -4.4607086181640625
    5. 'diff' → logprob: -6.0857086181640625
    6. 's' → logprob: -7.4607086181640625
    7. 'difference' → logprob: -7.5857086181640625
    8. ' ' → logprob: -7.8357086181640625
    9. ' produit' → logprob: -7.9607086181640625
    10. ' différence' → logprob: -7.9607086181640625

Token 114: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.1910923272371292
    2. ' diff' → logprob: -2.3160922527313232
    3. 'difference' → logprob: -3.1910922527313232
    4. ' difference' → logprob: -3.5660922527313232
    5. ' différence' → logprob: -5.191092491149902
    6. 'dif' → logprob: -9.566092491149902
    7. 'd' → logprob: -9.941092491149902
    8. '	diff' → logprob: -10.316092491149902
    9. ' product' → logprob: -10.566092491149902
    10. ' differ' → logprob: -11.066092491149902

Token 115: ' entre' (ID: 3853)
  Prédit: '_res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -0.29447975754737854
    2. ' _' → logprob: -2.5444798469543457
    3. '_' → logprob: -2.9194798469543457
    4. ' =' → logprob: -3.1694798469543457
    5. ' ' → logprob: -3.4194798469543457
    6. ' between' → logprob: -3.5444798469543457
    7. ' entre' → logprob: -5.294479846954346
    8. 'res' → logprob: -5.544479846954346
    9. ' res' → logprob: -6.169479846954346
    10. ' sum' → logprob: -6.294479846954346

Token 116: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3484731912612915
    2. 'a' → logprob: -1.2234731912612915
    3. ' ' → logprob: -11.09847354888916
    4. '	a' → logprob: -12.09847354888916
    5. 'sum' → logprob: -13.47347354888916
    6. ' ' → logprob: -13.84847354888916
    7. ' sum' → logprob: -14.09847354888916
    8. ' les' → logprob: -14.09847354888916
    9. '  ' → logprob: -14.34847354888916
    10. '(a' → logprob: -14.72347354888916

Token 117: ' premier' (ID: 15506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.017647145316004753
    2. ' a' → logprob: -5.0176472663879395
    3. ' premier' → logprob: -5.2676472663879395
    4. 's' → logprob: -5.5176472663879395
    5. 'sum' → logprob: -7.8926472663879395
    6. ' sum' → logprob: -7.8926472663879395
    7. ' ' → logprob: -8.017646789550781
    8. 'prem' → logprob: -8.892646789550781
    9. 'de' → logprob: -9.392646789550781
    10. '   ' → logprob: -9.642646789550781

Token 118: ' et' (ID: 859)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32804515957832336
    2. ' a' → logprob: -1.828045129776001
    3. ' et' → logprob: -2.203045129776001
    4. ' and' → logprob: -5.70304536819458
    5. ' ' → logprob: -5.82804536819458
    6. 'et' → logprob: -6.45304536819458
    7. 'res' → logprob: -9.203044891357422
    8. '   ' → logprob: -9.203044891357422
    9. '  ' → logprob: -10.078044891357422
    10. 'ent' → logprob: -10.203044891357422

Token 119: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5167014598846436
    2. ' le' → logprob: -1.0167014598846436
    3. ' second' → logprob: -3.8917014598846436
    4. 'second' → logprob: -4.016701698303223
    5. ' ' → logprob: -7.266701698303223
    6. 'l' → logprob: -7.391701698303223
    7. ' deuxième' → logprob: -7.391701698303223
    8. 'de' → logprob: -8.016701698303223
    9. ' the' → logprob: -8.141701698303223
    10. 'b' → logprob: -8.766701698303223

Token 120: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.18655210733413696
    2. 'second' → logprob: -2.061552047729492
    3. ' deuxième' → logprob: -3.186552047729492
    4. 'de' → logprob: -6.686552047729492
    5. ' ' → logprob: -9.561552047729492
    6. 'b' → logprob: -9.936552047729492
    7. '_second' → logprob: -10.061552047729492
    8. 'a' → logprob: -10.436552047729492
    9. '2' → logprob: -10.811552047729492
    10. ' seconde' → logprob: -10.936552047729492

Token 121: ' entier' (ID: 80473)
  Prédit: '_res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_res' → logprob: -0.5659937858581543
    2. 'res' → logprob: -1.9409937858581543
    3. ' res' → logprob: -2.4409937858581543
    4. 'a' → logprob: -2.5659937858581543
    5. '_' → logprob: -3.0659937858581543
    6. ' ' → logprob: -3.5659937858581543
    7. ' a' → logprob: -3.8159937858581543
    8. ' (' → logprob: -5.065993785858154
    9. ' _' → logprob: -5.315993785858154
    10. 's' → logprob: -5.440993785858154

Token 122: '
' (ID: 198)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.2968260049819946
    2. ' diff' → logprob: -1.5468260049819946
    3. ' res' → logprob: -1.7968260049819946
    4. '   ' → logprob: -2.046825885772705
    5. 'res' → logprob: -2.421825885772705
    6. '
' → logprob: -2.546825885772705
    7. '    
' → logprob: -3.296825885772705
    8. 'd' → logprob: -6.171825885772705
    9. ' 
' → logprob: -6.296825885772705
    10. '   
' → logprob: -6.796825885772705

Token 123: '   ' (ID: 271)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.23655818402767181
    2. 'diff' → logprob: -1.736558198928833
    3. '
' → logprob: -4.361557960510254
    4. '   ' → logprob: -4.986557960510254
    5. ' res' → logprob: -5.111557960510254
    6. ' difference' → logprob: -5.486557960510254
    7. '    
' → logprob: -5.986557960510254
    8. 'res' → logprob: -7.736557960510254
    9. 'difference' → logprob: -7.861557960510254
    10. ' 
' → logprob: -8.486557960510254

Token 124: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.00700141629204154
    2. 'diff' (adapté à ' diff') → logprob: -5.0070013999938965
    3. ' difference' → logprob: -8.382001876831055
    4. '	diff' → logprob: -11.132001876831055
    5. ' dif' → logprob: -11.757001876831055
    6. '   ' → logprob: -11.757001876831055
    7. ' res' → logprob: -12.007001876831055
    8. ' ' → logprob: -12.132001876831055
    9. 'difference' → logprob: -12.257001876831055
    10. ' prod' → logprob: -13.007001876831055

Token 125: '_res' (ID: 10626)
  Prédit: '_res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -0.0001860174525063485
    2. '_' → logprob: -8.6251859664917
    3. 'res' → logprob: -13.0001859664917
    4. ' =' → logprob: -13.6251859664917
    5. ' _' → logprob: -14.3751859664917
    6. '=' → logprob: -14.5001859664917
    7. '_r' → logprob: -14.8751859664917
    8. '_val' → logprob: -15.0001859664917
    9. '=_' → logprob: -15.1251859664917
    10. '   ' → logprob: -15.7501859664917

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061968132853507996
    2. '=' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.186967849731445
    4. 's' → logprob: -16.561967849731445
    5. ' ' → logprob: -16.811967849731445
    6. '_' → logprob: -16.811967849731445
    7. 'a' → logprob: -17.311967849731445
    8. '   ' → logprob: -17.311967849731445
    9. '=a' → logprob: -18.936967849731445
    10. ' a' → logprob: -19.561967849731445

Token 127: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07889099419116974
    2. 'a' → logprob: -2.5788910388946533
    3. '   ' → logprob: -14.578890800476074
    4. '	a' → logprob: -14.578890800476074
    5. ' ' → logprob: -15.453890800476074
    6. ' ' → logprob: -16.95389175415039
    7. '(a' → logprob: -17.70389175415039
    8. '  ' → logprob: -17.95389175415039
    9. '    ' → logprob: -18.70389175415039
    10. ' b' → logprob: -18.95389175415039

Token 128: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0013398852897807956
    2. '-' → logprob: -6.626339912414551
    3. ' ' → logprob: -11.62633991241455
    4. ' ' → logprob: -12.25133991241455
    5. '_' → logprob: -16.376338958740234
    6. ' -
' → logprob: -17.001338958740234
    7. ' minus' → logprob: -17.126338958740234
    8. ')' → logprob: -17.751338958740234
    9. ' −' → logprob: -18.063838958740234
    10. ' —' → logprob: -18.188838958740234

Token 129: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16022443771362305
    2. 'b' → logprob: -1.910224437713623
    3. ' ' → logprob: -15.160224914550781
    4. '	b' → logprob: -17.03522491455078
    5. ' б' → logprob: -17.66022491455078
    6. ' ' → logprob: -17.91022491455078
    7. '   ' → logprob: -19.03522491455078
    8. 's' → logprob: -19.41022491455078
    9. '<|end|>' → logprob: -19.91022491455078
    10. '    ' → logprob: -20.16022491455078

Token 130: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7107786536216736
    2. '   ' → logprob: -0.7107786536216736
    3. '    
' → logprob: -4.085778713226318
    4. '  
' → logprob: -8.33577823638916
    5. '   
' → logprob: -8.46077823638916
    6. ' 
' → logprob: -9.46077823638916
    7. '```' → logprob: -10.08577823638916
    8. '  ' → logprob: -10.46077823638916
    9. '
' → logprob: -11.08577823638916
    10. '    ' → logprob: -11.21077823638916

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3320138156414032
    2. '
' → logprob: -1.7070138454437256
    3. '    
' → logprob: -2.3320138454437256
    4. '  
' → logprob: -6.2070136070251465
    5. '   
' → logprob: -7.3320136070251465
    6. ' 
' → logprob: -7.5820136070251465
    7. 'product' → logprob: -8.207014083862305
    8. 'prod' → logprob: -8.832014083862305
    9. '  ' → logprob: -9.332014083862305
    10. '```' → logprob: -9.457014083862305

Token 132: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28529539704322815
    2. '
' → logprob: -1.6602953672409058
    3. '    
' → logprob: -3.5352954864501953
    4. 'prod' → logprob: -4.035295486450195
    5. 'product' → logprob: -5.410295486450195
    6. '#' (adapté à ' #') → logprob: -6.160295486450195
    7. '  
' → logprob: -6.785295486450195
    8. ' prod' → logprob: -7.160295486450195
    9. '```' → logprob: -7.285295486450195
    10. '   
' → logprob: -7.660295486450195

Token 133: ' Calcul' (ID: 57243)
  Prédit: ' prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prod' → logprob: -0.6306828260421753
    2. 'prod' → logprob: -1.2556828260421753
    3. ' product' → logprob: -2.380682945251465
    4. 'product' → logprob: -2.505682945251465
    5. '   ' → logprob: -5.630682945251465
    6. '#' → logprob: -6.130682945251465
    7. ' produit' → logprob: -7.005682945251465
    8. 'mul' → logprob: -7.630682945251465
    9. ' mul' → logprob: -7.755682945251465
    10. 'mult' → logprob: -8.130682945251465

Token 134: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.04077020660042763
    2. 'du' → logprob: -3.2907702922821045
    3. '_du' → logprob: -6.915770053863525
    4. ' de' → logprob: -7.540770053863525
    5. ' ' → logprob: -8.040770530700684
    6. '_res' → logprob: -8.165770530700684
    7. '_' → logprob: -8.915770530700684
    8. '#' → logprob: -9.040770530700684
    9. 'd' → logprob: -9.290770530700684
    10. ' of' → logprob: -9.790770530700684

Token 135: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.012191974557936192
    2. 'produ' → logprob: -4.6371917724609375
    3. ' product' → logprob: -6.2621917724609375
    4. 'product' → logprob: -8.512191772460938
    5. 'prod' → logprob: -8.637191772460938
    6. ' prod' → logprob: -9.387191772460938
    7. ' produs' → logprob: -11.137191772460938
    8. ' produ' → logprob: -11.512191772460938
    9. 'a' → logprob: -12.012191772460938
    10. ' a' → logprob: -12.137191772460938

Token 136: ' des' (ID: 731)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.6654103398323059
    2. ' prod' → logprob: -1.2904102802276611
    3. 'product' → logprob: -2.790410280227661
    4. ' =' → logprob: -2.915410280227661
    5. '   ' → logprob: -3.540410280227661
    6. 'prod' → logprob: -3.540410280227661
    7. ' produit' → logprob: -4.66541051864624
    8. '    
' → logprob: -4.91541051864624
    9. ' res' → logprob: -4.91541051864624
    10. '=' → logprob: -5.54041051864624

Token 137: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5282698273658752
    2. ' a' → logprob: -0.9032698273658752
    3. 'de' → logprob: -6.0282697677612305
    4. ' deux' → logprob: -6.0282697677612305
    5. ' ' → logprob: -8.27826976776123
    6. ' two' → logprob: -10.52826976776123
    7. ' ' → logprob: -11.77826976776123
    8. '	a' → logprob: -12.02826976776123
    9. '  ' → logprob: -13.15326976776123
    10. 'two' → logprob: -13.52826976776123

Token 138: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.9346339702606201
    2. 'ent' → logprob: -1.3096339702606201
    3. ' a' → logprob: -1.4346339702606201
    4. 'a' → logprob: -2.43463397026062
    5. ' integers' → logprob: -5.559634208679199
    6. ' ' → logprob: -6.309634208679199
    7. '	ent' → logprob: -7.059634208679199
    8. 'inte' → logprob: -7.309634208679199
    9. '_ent' → logprob: -7.434634208679199
    10. 'res' → logprob: -7.434634208679199

Token 139: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -6.790129555156454e-05
    2. 'ier' → logprob: -10.250067710876465
    3. 'i' → logprob: -11.250067710876465
    4. 'res' → logprob: -12.625067710876465
    5. 'a' → logprob: -12.625067710876465
    6. 'ieurs' → logprob: -12.750067710876465
    7. 'tiers' → logprob: -13.125067710876465
    8. '   ' → logprob: -13.750067710876465
    9. 'ers' → logprob: -13.875067710876465
    10. '```' → logprob: -14.125067710876465

Token 140: '
' (ID: 198)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.5590700507164001
    2. ' prod' → logprob: -1.434070110321045
    3. 'product' → logprob: -2.559070110321045
    4. '
' → logprob: -2.684070110321045
    5. 'prod' → logprob: -3.684070110321045
    6. '   ' → logprob: -4.434070110321045
    7. '    
' → logprob: -5.184070110321045
    8. ' 
' → logprob: -7.059070110321045
    9. '  
' → logprob: -8.309069633483887
    10. '*' → logprob: -8.809069633483887

Token 141: '   ' (ID: 271)
  Prédit: ' prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prod' → logprob: -0.46467113494873047
    2. ' product' → logprob: -1.8396711349487305
    3. 'prod' → logprob: -2.3396711349487305
    4. '   ' → logprob: -3.2146711349487305
    5. 'product' → logprob: -3.3396711349487305
    6. '
' → logprob: -3.3396711349487305
    7. '    
' → logprob: -5.4646711349487305
    8. ' 
' → logprob: -8.08967113494873
    9. ' mul' → logprob: -9.08967113494873
    10. 'mul' → logprob: -9.21467113494873

Token 142: ' prod' (ID: 10207)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4374231696128845
    2. 'a' → logprob: -1.6874232292175293
    3. ' prod' → logprob: -1.9374232292175293
    4. 'prod' (adapté à ' prod') → logprob: -4.187423229217529
    5. ' product' → logprob: -4.687423229217529
    6. 'product' → logprob: -7.312423229217529
    7. '   ' → logprob: -10.437422752380371
    8. ' p' → logprob: -10.437422752380371
    9. ' c' → logprob: -10.687422752380371
    10. ' mul' → logprob: -11.187422752380371

Token 143: '_res' (ID: 10626)
  Prédit: '_res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -0.0007424455252476037
    2. '_' → logprob: -7.250742435455322
    3. ' _' → logprob: -10.37574291229248
    4. '_r' → logprob: -15.25074291229248
    5. '_re' → logprob: -15.37574291229248
    6. 'res' → logprob: -15.87574291229248
    7. '=_' → logprob: -16.125741958618164
    8. '_result' → logprob: -16.500741958618164
    9. '_des' → logprob: -16.500741958618164
    10. '_val' → logprob: -17.000741958618164

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196824833750725
    2. '=' → logprob: -2.8119683265686035
    3. '=a' → logprob: -15.311967849731445
    4. ' ' → logprob: -15.561967849731445
    5. '   ' → logprob: -16.686967849731445
    6. 'a' → logprob: -17.936967849731445
    7. ' a' → logprob: -18.436967849731445
    8. ' ' → logprob: -19.436967849731445
    9. ' =
' → logprob: -19.686967849731445
    10. 's' → logprob: -19.811967849731445

Token 145: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.04858805239200592
    2. 'a' → logprob: -3.0485880374908447
    3. '	a' → logprob: -15.298587799072266
    4. ' ' → logprob: -15.673587799072266
    5. ' ' → logprob: -15.798587799072266
    6. '   ' → logprob: -16.423587799072266
    7. '  ' → logprob: -19.048587799072266
    8. '_a' → logprob: -19.173587799072266
    9. '    ' → logprob: -19.423587799072266
    10. ' а' → logprob: -19.548587799072266

Token 146: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0620250441133976
    2. '*' → logprob: -2.8120250701904297
    3. ' ' → logprob: -9.81202507019043
    4. ' ' → logprob: -12.93702507019043
    5. 'a' → logprob: -16.31202507019043
    6. '```' → logprob: -17.06202507019043
    7. '*b' → logprob: -17.06202507019043
    8. '_' → logprob: -17.31202507019043
    9. '**' → logprob: -17.56202507019043
    10. '  ' → logprob: -17.81202507019043

Token 147: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759403109550476
    2. 'b' → logprob: -0.8259403109550476
    3. '	b' → logprob: -14.325940132141113
    4. ' ' → logprob: -15.200940132141113
    5. ' б' → logprob: -17.82594108581543
    6. ' ' → logprob: -18.20094108581543
    7. '_b' → logprob: -18.70094108581543
    8. '   ' → logprob: -19.82594108581543
    9. '  ' → logprob: -20.32594108581543
    10. '```' → logprob: -20.57594108581543

Token 148: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0057339598424732685
    2. '    
' → logprob: -5.505733966827393
    3. '
    
' → logprob: -7.005733966827393
    4. '   ' → logprob: -7.880733966827393
    5. '

' → logprob: -8.505733489990234
    6. 'max' → logprob: -9.130733489990234
    7. '
' → logprob: -11.255733489990234
    8. '   
' → logprob: -11.755733489990234
    9. '
    
    
' → logprob: -11.755733489990234
    10. '  
' → logprob: -12.130733489990234

Token 149: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2704712152481079
    2. '   ' → logprob: -2.1454710960388184
    3. 'max' → logprob: -2.7704710960388184
    4. '    
' → logprob: -2.8954710960388184
    5. '#' → logprob: -6.520471096038818
    6. 'result' → logprob: -8.770471572875977
    7. ' max' → logprob: -8.895471572875977
    8. '  
' → logprob: -9.395471572875977
    9. '   
' → logprob: -9.520471572875977
    10. '```' → logprob: -10.270471572875977

Token 150: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.015046346001327038
    2. '#' (adapté à ' #') → logprob: -4.390046119689941
    3. ' max' → logprob: -6.390046119689941
    4. '   ' → logprob: -7.515046119689941
    5. 'result' → logprob: -8.515046119689941
    6. '
' → logprob: -10.390046119689941
    7. 'maximum' → logprob: -10.515046119689941
    8. 'print' → logprob: -11.140046119689941
    9. ' #' → logprob: -11.265046119689941
    10. '    
' → logprob: -11.515046119689941

Token 151: ' Cré' (ID: 109203)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.24032919108867645
    2. ' max' → logprob: -1.6153291463851929
    3. '#' → logprob: -4.365329265594482
    4. 'result' → logprob: -6.865329265594482
    5. ' #' → logprob: -8.240328788757324
    6. ' result' → logprob: -8.365328788757324
    7. ' maximum' → logprob: -8.615328788757324
    8. 'maximum' → logprob: -8.615328788757324
    9. '   ' → logprob: -9.740328788757324
    10. 'res' → logprob: -11.115328788757324

Token 152: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.04888007044792175
    2. 'er' → logprob: -3.048880100250244
    3. '#' → logprob: -9.048879623413086
    4. 'e' → logprob: -10.423879623413086
    5. 'ate' → logprob: -10.423879623413086
    6. 'a' → logprob: -10.923879623413086
    7. 'tion' → logprob: -11.048879623413086
    8. 'lation' → logprob: -11.048879623413086
    9. '```' → logprob: -11.673879623413086
    10. 'ons' → logprob: -11.798879623413086

Token 153: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.021307598799467087
    2. ' de' → logprob: -4.521307468414307
    3. 'd' → logprob: -5.021307468414307
    4. '   ' → logprob: -6.396307468414307
    5. ' du' → logprob: -7.021307468414307
    6. ' ' → logprob: -8.396307945251465
    7. '    ' → logprob: -8.396307945251465
    8. ' des' → logprob: -8.896307945251465
    9. 'de' → logprob: -9.271307945251465
    10. '  ' → logprob: -10.021307945251465

Token 154: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6969790458679199
    2. 'a' → logprob: -1.69697904586792
    3. 'e' → logprob: -1.82197904586792
    4. ''une' → logprob: -2.69697904586792
    5. ' une' → logprob: -2.94697904586792
    6. ' un' → logprob: -4.82197904586792
    7. ''un' → logprob: -5.07197904586792
    8. 'un' → logprob: -5.07197904586792
    9. ' a' → logprob: -5.19697904586792
    10. '   ' → logprob: -5.44697904586792

Token 155: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.21126599609851837
    2. ' liste' → logprob: -1.711266040802002
    3. 'list' → logprob: -4.711266040802002
    4. ' list' → logprob: -7.836266040802002
    5. ' variable' → logprob: -8.586265563964844
    6. 'variable' → logprob: -8.711265563964844
    7. 'Liste' → logprob: -10.836265563964844
    8. 'lista' → logprob: -11.586265563964844
    9. '#' → logprob: -12.086265563964844
    10. 'l' → logprob: -12.461265563964844

Token 156: ' contenant' (ID: 131049)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0368969440460205
    2. 'results' → logprob: -1.0368969440460205
    3. ' results' → logprob: -2.2868969440460205
    4. '   ' → logprob: -2.7868969440460205
    5. 'res' → logprob: -3.2868969440460205
    6. ' =' → logprob: -3.5368969440460205
    7. '[' → logprob: -3.7868969440460205
    8. 'result' → logprob: -4.786896705627441
    9. '_results' → logprob: -4.911896705627441
    10. 'des' → logprob: -4.911896705627441

Token 157: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.022430419921875
    2. ' sum' → logprob: -1.022430419921875
    3. 'sum' → logprob: -1.897430419921875
    4. '[' → logprob: -2.522430419921875
    5. ' [' → logprob: -3.022430419921875
    6. 'les' → logprob: -6.647430419921875
    7. ' ' → logprob: -9.647430419921875
    8. ' ' → logprob: -9.897430419921875
    9. '(sum' → logprob: -10.022430419921875
    10. '[
' → logprob: -10.522430419921875

Token 158: ' trois' (ID: 25564)
  Prédit: ' trois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trois' → logprob: -0.5830326080322266
    2. ' résultats' → logprob: -0.8330326080322266
    3. ' [' → logprob: -6.583032608032227
    4. 'rés' → logprob: -6.583032608032227
    5. '[' → logprob: -6.833032608032227
    6. '3' → logprob: -6.958032608032227
    7. 'result' → logprob: -7.208032608032227
    8. 'tro' → logprob: -7.583032608032227
    9. ' valeurs' → logprob: -7.833032608032227
    10. ' three' → logprob: -8.458032608032227

Token 159: ' résultats' (ID: 48985)
  Prédit: ' résultats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultats' → logprob: -0.009856549091637135
    2. 'rés' → logprob: -5.259856700897217
    3. 'result' → logprob: -5.634856700897217
    4. ' valeurs' → logprob: -7.884856700897217
    5. ' result' → logprob: -8.384856224060059
    6. 'res' → logprob: -8.384856224060059
    7. ' opérations' → logprob: -9.884856224060059
    8. ' résultat' → logprob: -10.134856224060059
    9. ' results' → logprob: -10.634856224060059
    10. 'results' → logprob: -11.009856224060059

Token 160: ' calcul' (ID: 7559)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.418487012386322
    2. '   ' → logprob: -1.4184870719909668
    3. ' results' → logprob: -2.543487071990967
    4. 'result' → logprob: -4.668487071990967
    5. 'res' → logprob: -5.043487071990967
    6. '
' → logprob: -6.293487071990967
    7. '[' → logprob: -6.918487071990967
    8. '    
' → logprob: -7.793487071990967
    9. ' résultats' → logprob: -7.793487071990967
    10. '_results' → logprob: -7.918487071990967

Token 161: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00017517358355689794
    2. 's' → logprob: -8.875175476074219
    3. 'ès' → logprob: -11.375175476074219
    4. 'es' → logprob: -11.750175476074219
    5. '[' → logprob: -11.875175476074219
    6. 'é' → logprob: -12.375175476074219
    7. '```' → logprob: -14.000175476074219
    8. 'ées' → logprob: -14.125175476074219
    9. 'ÉS' → logprob: -14.125175476074219
    10. 'rés' → logprob: -14.375175476074219

Token 162: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.301913321018219
    2. 'results' → logprob: -1.6769132614135742
    3. 'result' → logprob: -3.426913261413574
    4. ' results' → logprob: -3.926913261413574
    5. '
' → logprob: -4.176913261413574
    6. '    
' → logprob: -6.051913261413574
    7. 'res' → logprob: -6.551913261413574
    8. ' result' → logprob: -7.301913261413574
    9. ' résultats' → logprob: -7.426913261413574
    10. 'max' → logprob: -8.676913261413574

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19913128018379211
    2. 'results' → logprob: -2.0741312503814697
    3. ' results' → logprob: -2.9491312503814697
    4. 'result' → logprob: -6.824131488800049
    5. '    
' → logprob: -6.949131488800049
    6. '
' → logprob: -8.44913101196289
    7. ' result' → logprob: -9.69913101196289
    8. '	results' → logprob: -9.94913101196289
    9. ' résultats' → logprob: -10.19913101196289
    10. 'res' → logprob: -10.32413101196289

Token 164: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.2527369558811188
    2. 'results' (adapté à ' results') → logprob: -1.5027369260787964
    3. 'result' → logprob: -8.252737045288086
    4. '   ' → logprob: -8.502737045288086
    5. ' result' → logprob: -8.877737045288086
    6. ' résultats' → logprob: -9.377737045288086
    7. '[' → logprob: -10.377737045288086
    8. 'res' → logprob: -10.752737045288086
    9. '	results' → logprob: -11.252737045288086
    10. ' res' → logprob: -11.377737045288086

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006718690041452646
    2. '=' → logprob: -5.006718635559082
    3. ' =[' → logprob: -13.381718635559082
    4. ' ' → logprob: -15.131718635559082
    5. 's' → logprob: -15.131718635559082
    6. ']' → logprob: -15.256718635559082
    7. '[' → logprob: -15.506718635559082
    8. ' ' → logprob: -15.881718635559082
    9. ')' → logprob: -16.0067195892334
    10. '=[' → logprob: -16.1317195892334

Token 166: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.16029541194438934
    2. '[' → logprob: -1.9102953672409058
    3. '[s' → logprob: -10.035295486450195
    4. '[max' → logprob: -11.660295486450195
    5. '[result' → logprob: -12.160295486450195
    6. '[start' → logprob: -12.785295486450195
    7. '[int' → logprob: -13.285295486450195
    8. '   ' → logprob: -13.535295486450195
    9. '[min' → logprob: -13.660295486450195
    10. '[num' → logprob: -13.785295486450195

Token 167: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0009170551202259958
    2. ' sum' → logprob: -7.000916957855225
    3. '   ' → logprob: -12.125917434692383
    4. '	sum' → logprob: -16.625917434692383
    5. '  ' → logprob: -17.500917434692383
    6. '
' → logprob: -17.500917434692383
    7. ' ' → logprob: -18.375917434692383
    8. '(sum' → logprob: -18.625917434692383
    9. 'summ' → logprob: -18.750917434692383
    10. ',sum' → logprob: -19.250917434692383

Token 168: '_res' (ID: 10626)
  Prédit: '_res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -1.981667537620524e-06
    2. 'res' → logprob: -13.375001907348633
    3. '_' → logprob: -15.500001907348633
    4. ' _' → logprob: -15.875001907348633
    5. '_r' → logprob: -17.375001907348633
    6. '(_' → logprob: -17.875001907348633
    7. '_sum' → logprob: -18.000001907348633
    8. '_re' → logprob: -18.250001907348633
    9. '(res' → logprob: -18.375001907348633
    10. '_s' → logprob: -18.750001907348633

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5716304410016164e-05
    2. ' ,' → logprob: -10.250035285949707
    3. ',
' → logprob: -15.125035285949707
    4. ',d' → logprob: -17.500036239624023
    5. ',

' → logprob: -19.125036239624023
    6. ',sum' → logprob: -19.250036239624023
    7. 'diff' → logprob: -20.250036239624023
    8. ',b' → logprob: -20.625036239624023
    9. ',s' → logprob: -21.125036239624023
    10. ',int' → logprob: -21.125036239624023

Token 170: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.10021066665649414
    2. 'diff' → logprob: -2.350210666656494
    3. '	diff' → logprob: -12.600210189819336
    4. ' dif' → logprob: -15.975210189819336
    5. '(diff' → logprob: -15.975210189819336
    6. '   ' → logprob: -16.100210189819336
    7. ' ' → logprob: -16.475210189819336
    8. ' ' → logprob: -16.850210189819336
    9. '_diff' → logprob: -17.850210189819336
    10. ' diffusion' → logprob: -18.225210189819336

Token 171: '_res' (ID: 10626)
  Prédit: '_res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -4.179569077678025e-05
    2. 'res' → logprob: -10.125041961669922
    3. '-res' → logprob: -14.000041961669922
    4. '_' → logprob: -15.000041961669922
    5. ' _' → logprob: -15.500041961669922
    6. ' res' → logprob: -16.625041961669922
    7. 'Res' → logprob: -16.875041961669922
    8. 's' → logprob: -17.125041961669922
    9. 'r' → logprob: -17.250041961669922
    10. '	res' → logprob: -17.250041961669922

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013263145228847861
    2. ' ,' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.626326560974121
    4. ',
' → logprob: -15.876326560974121
    5. 'prod' → logprob: -16.751325607299805
    6. ',p' → logprob: -18.376325607299805
    7. ',

' → logprob: -19.876325607299805
    8. ',",' → logprob: -20.001325607299805
    9. ' prod' → logprob: -20.126325607299805
    10. '‌,' → logprob: -20.126325607299805

Token 173: ' prod' (ID: 10207)
  Prédit: ' prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prod' → logprob: -0.016035189852118492
    2. 'prod' → logprob: -4.141035079956055
    3. ' ' → logprob: -15.266035079956055
    4. '(prod' → logprob: -15.266035079956055
    5. '.prod' → logprob: -16.141035079956055
    6. '_prod' → logprob: -16.141035079956055
    7. 'Prod' → logprob: -16.641035079956055
    8. ' Prod' → logprob: -16.766035079956055
    9. ' pro' → logprob: -17.141035079956055
    10. ' product' → logprob: -17.141035079956055

Token 174: '_res' (ID: 10626)
  Prédit: '_res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -0.00031389365904033184
    2. 'res' → logprob: -8.375313758850098
    3. 'es' → logprob: -9.500313758850098
    4. 'Res' → logprob: -12.125313758850098
    5. 's' → logprob: -14.125313758850098
    6. ' res' → logprob: -14.750313758850098
    7. '-res' → logprob: -15.250313758850098
    8. '	res' → logprob: -15.250313758850098
    9. '_RES' → logprob: -15.750313758850098
    10. 'r' → logprob: -15.875313758850098

Token 175: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.380904672667384e-05
    2. ']
' → logprob: -10.750033378601074
    3. ' ]' → logprob: -11.500033378601074
    4. '   ' → logprob: -13.375033378601074
    5. ']

' → logprob: -14.625033378601074
    6. ']
' → logprob: -16.62503433227539
    7. ',' → logprob: -17.25003433227539
    8. ')' → logprob: -17.62503433227539
    9. '"]' → logprob: -19.12503433227539
    10. '}' → logprob: -19.25003433227539

Token 176: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1495665311813354
    2. '   ' → logprob: -1.2745665311813354
    3. 'max' → logprob: -1.3995665311813354
    4. '    
' → logprob: -1.8995665311813354
    5. '```' → logprob: -6.149566650390625
    6. ' max' → logprob: -6.649566650390625
    7. 'print' → logprob: -7.274566650390625
    8. '   
' → logprob: -7.399566650390625
    9. '#' → logprob: -7.524566650390625
    10. 'result' → logprob: -7.649566650390625

Token 177: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5708505511283875
    2. '   ' → logprob: -0.9458505511283875
    3. '#' → logprob: -3.8208506107330322
    4. ' max' → logprob: -4.195850372314453
    5. '    
' → logprob: -4.820850372314453
    6. '
' → logprob: -7.445850372314453
    7. 'print' → logprob: -8.445850372314453
    8. ' #' → logprob: -8.695850372314453
    9. 'result' → logprob: -8.695850372314453
    10. 'maximum' → logprob: -8.945850372314453

Token 178: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04155329242348671
    2. 'print' → logprob: -3.291553258895874
    3. '#' (adapté à ' #') → logprob: -5.791553497314453
    4. '   ' → logprob: -8.416553497314453
    5. ' max' → logprob: -8.666553497314453
    6. 'maximum' → logprob: -10.666553497314453
    7. '```' → logprob: -11.416553497314453
    8. ' print' → logprob: -12.291553497314453
    9. 'result' → logprob: -12.291553497314453
    10. 'best' → logprob: -12.416553497314453

Token 179: ' Recherche' (ID: 114815)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.017538683488965034
    2. ' max' → logprob: -4.767538547515869
    3. 'print' → logprob: -5.392538547515869
    4. '#' → logprob: -5.517538547515869
    5. 'aff' → logprob: -9.767539024353027
    6. 'maximum' → logprob: -9.892539024353027
    7. ' #' → logprob: -10.017539024353027
    8. ' print' → logprob: -10.142539024353027
    9. 'Afficher' → logprob: -10.517539024353027
    10. 'val' → logprob: -10.517539024353027

Token 180: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08711331337690353
    2. ' du' → logprob: -3.337113380432129
    3. 'de' → logprob: -3.962113380432129
    4. 'max' → logprob: -4.087113380432129
    5. ' la' → logprob: -4.962113380432129
    6. ' max' → logprob: -5.837113380432129
    7. 'du' → logprob: -6.587113380432129
    8. 'la' → logprob: -7.837113380432129
    9. ' ' → logprob: -9.087113380432129
    10. ' maximale' → logprob: -9.212113380432129

Token 181: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10457267612218857
    2. ' max' → logprob: -2.3545727729797363
    3. ' la' → logprob: -5.854572772979736
    4. 'la' → logprob: -6.604572772979736
    5. 'l' → logprob: -9.854572296142578
    6. '(max' → logprob: -11.229572296142578
    7. 'le' → logprob: -11.229572296142578
    8. ' ' → logprob: -11.479572296142578
    9. ' the' → logprob: -11.479572296142578
    10. ' l' → logprob: -11.604572296142578

Token 182: ' valeur' (ID: 41664)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2753167748451233
    2. 'val' → logprob: -1.7753167152404785
    3. ' max' → logprob: -2.9003167152404785
    4. ' valeur' → logprob: -4.2753167152404785
    5. ' val' → logprob: -7.2753167152404785
    6. 'maximum' → logprob: -7.5253167152404785
    7. ' maximum' → logprob: -7.6503167152404785
    8. ' maximale' → logprob: -8.650317192077637
    9. 'plus' → logprob: -9.025317192077637
    10. 'value' → logprob: -9.150317192077637

Token 183: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.25111082196235657
    2. 'max' → logprob: -2.001110792160034
    3. ' max' → logprob: -2.626110792160034
    4. '_max' → logprob: -4.751111030578613
    5. ' maximum' → logprob: -5.376111030578613
    6. ' maximal' → logprob: -7.001111030578613
    7. '_' → logprob: -8.626111030578613
    8. 'maximum' → logprob: -10.126111030578613
    9. ' maxim' → logprob: -10.251111030578613
    10. '	max' → logprob: -10.626111030578613

Token 184: ' parmi' (ID: 51713)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.23524978756904602
    2. ' max' → logprob: -1.8602497577667236
    3. '   ' → logprob: -3.3602497577667236
    4. ' maximale' → logprob: -4.985249996185303
    5. ' =' → logprob: -5.985249996185303
    6. ' dans' → logprob: -5.985249996185303
    7. ' parmi' → logprob: -6.110249996185303
    8. '=max' → logprob: -7.110249996185303
    9. ',' → logprob: -7.360249996185303
    10. ' maximum' → logprob: -7.360249996185303

Token 185: ' les' (ID: 1341)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.3236365020275116
    2. 'results' → logprob: -1.698636531829834
    3. ' les' → logprob: -2.448636531829834
    4. '(results' → logprob: -5.323636531829834
    5. 'les' → logprob: -6.323636531829834
    6. ' the' → logprob: -9.198636054992676
    7. ' la' → logprob: -9.198636054992676
    8. '	results' → logprob: -9.448636054992676
    9. '_results' → logprob: -9.573636054992676
    10. ' résultats' → logprob: -9.698636054992676

Token 186: ' trois' (ID: 25564)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.7418519258499146
    2. ' results' → logprob: -0.9918519258499146
    3. ' résultats' → logprob: -1.9918519258499146
    4. ' trois' → logprob: -4.491851806640625
    5. 'rés' → logprob: -6.366851806640625
    6. 'result' → logprob: -6.491851806640625
    7. ' three' → logprob: -6.741851806640625
    8. 'three' → logprob: -8.491851806640625
    9. ' result' → logprob: -8.616851806640625
    10. '3' → logprob: -8.866851806640625

Token 187: ' résultats' (ID: 48985)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.5706101059913635
    2. 'results' → logprob: -1.0706100463867188
    3. ' résultats' → logprob: -2.8206100463867188
    4. '   ' → logprob: -4.570610046386719
    5. 'result' → logprob: -4.695610046386719
    6. 'rés' → logprob: -5.570610046386719
    7. ' result' → logprob: -6.195610046386719
    8. 'res' → logprob: -6.195610046386719
    9. '_results' → logprob: -6.820610046386719
    10. '(results' → logprob: -7.195610046386719

Token 188: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.599173367023468
    2. '   ' → logprob: -0.974173367023468
    3. ' max' → logprob: -2.9741733074188232
    4. '    
' → logprob: -4.349173545837402
    5. '
' → logprob: -4.974173545837402
    6. 'result' → logprob: -6.474173545837402
    7. ' result' → logprob: -8.849173545837402
    8. ' maximum' → logprob: -8.849173545837402
    9. 'maximum' → logprob: -9.474173545837402
    10. ',' → logprob: -9.599173545837402

Token 189: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09957915544509888
    2. ' max' → logprob: -2.474579095840454
    3. '   ' → logprob: -4.599579334259033
    4. 'return' → logprob: -8.974578857421875
    5. '
' → logprob: -9.099578857421875
    6. '```' → logprob: -9.474578857421875
    7. ' return' → logprob: -9.849578857421875
    8. 'print' → logprob: -9.974578857421875
    9. 'result' → logprob: -9.974578857421875
    10. '    
' → logprob: -10.599578857421875

Token 190: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.02071402408182621
    2. ' max' → logprob: -3.895714044570923
    3. 'print' → logprob: -9.145713806152344
    4. '   ' → logprob: -9.770713806152344
    5. 'maximum' → logprob: -12.770713806152344
    6. ' print' → logprob: -12.895713806152344
    7. 'return' → logprob: -14.145713806152344
    8. '```' → logprob: -14.520713806152344
    9. ' maximum' → logprob: -14.770713806152344
    10. ' maxi' → logprob: -15.270713806152344

Token 191: '_result' (ID: 11623)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.7957576513290405
    2. '_value' → logprob: -1.0457576513290405
    3. '_' → logprob: -1.7957576513290405
    4. '_result' → logprob: -3.92075777053833
    5. '_res' → logprob: -4.79575777053833
    6. '(results' → logprob: -6.79575777053833
    7. '_results' → logprob: -6.79575777053833
    8. '(' → logprob: -7.67075777053833
    9. 'imum' → logprob: -8.795757293701172
    10. '_max' → logprob: -10.045757293701172

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740810692310333
    2. ' =' → logprob: -0.9740810394287109
    3. '=max' → logprob: -13.224081039428711
    4. ')' → logprob: -13.974081039428711
    5. ' =
' → logprob: -14.474081039428711
    6. '=
' → logprob: -15.474081039428711
    7. '=

' → logprob: -15.599081039428711
    8. ' ' → logprob: -15.724081039428711
    9. 's' → logprob: -16.22408103942871
    10. ' ' → logprob: -16.72408103942871

Token 193: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.25192907452583313
    2. 'max' → logprob: -1.5019290447235107
    3. '(max' → logprob: -17.751928329467773
    4. '	max' → logprob: -19.251928329467773
    5. '=max' → logprob: -19.626928329467773
    6. '[max' → logprob: -21.001928329467773
    7. '_max' → logprob: -21.376928329467773
    8. '   ' → logprob: -21.751928329467773
    9. ':max' → logprob: -21.751928329467773
    10. ',max' → logprob: -21.876928329467773

Token 194: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.001971934689208865
    2. '(' → logprob: -6.25197172164917
    3. 'results' → logprob: -10.251972198486328
    4. '_results' → logprob: -12.751972198486328
    5. ' (' → logprob: -13.376972198486328
    6. ' results' → logprob: -14.001972198486328
    7. '(res' → logprob: -14.126972198486328
    8. '(result' → logprob: -14.376972198486328
    9. '(
' → logprob: -14.376972198486328
    10. '	results' → logprob: -14.876972198486328

Token 195: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.191489642835222e-05
    2. ')
' → logprob: -10.125041961669922
    3. ' )' → logprob: -13.500041961669922
    4. ')

' → logprob: -16.000041961669922
    5. '   ' → logprob: -16.375041961669922
    6. '))' → logprob: -16.875041961669922
    7. '()' → logprob: -17.750041961669922
    8. ']' → logprob: -17.750041961669922
    9. '}' → logprob: -17.875041961669922
    10. ')#' → logprob: -18.125041961669922

Token 196: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3413994312286377
    2. '
' → logprob: -1.8413994312286377
    3. '    
' → logprob: -2.0913994312286377
    4. 'print' → logprob: -4.966399192810059
    5. '  
' → logprob: -9.716399192810059
    6. '   
' → logprob: -10.966399192810059
    7. '

' → logprob: -11.216399192810059
    8. '    
    
' → logprob: -11.216399192810059
    9. '```' → logprob: -11.341399192810059
    10. ' print' → logprob: -11.966399192810059

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01202873419970274
    2. 'print' → logprob: -5.012028694152832
    3. '    
' → logprob: -5.262028694152832
    4. '
' → logprob: -9.137028694152832
    5. ' print' → logprob: -12.637028694152832
    6. '  
' → logprob: -13.512028694152832
    7. '   
' → logprob: -14.137028694152832
    8. '    
    
' → logprob: -14.387028694152832
    9. '```' → logprob: -14.762028694152832
    10. '        
' → logprob: -15.887028694152832

Token 198: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2018577754497528
    2. '   ' → logprob: -1.7018578052520752
    3. ' print' → logprob: -8.201857566833496
    4. '    
' → logprob: -9.076857566833496
    5. '
' → logprob: -10.576857566833496
    6. '#' (adapté à ' #') → logprob: -11.201857566833496
    7. '```' → logprob: -11.451857566833496
    8. '#print' → logprob: -13.201857566833496
    9. '  ' → logprob: -13.451857566833496
    10. '   
' → logprob: -14.326857566833496

Token 199: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007601958932355046
    2. ' print' → logprob: -7.500760078430176
    3. '   ' → logprob: -8.875760078430176
    4. '#' → logprob: -9.625760078430176
    5. '#print' → logprob: -13.875760078430176
    6. '```' → logprob: -15.750760078430176
    7. 'pr' → logprob: -16.375761032104492
    8. '
' → logprob: -17.000761032104492
    9. 'prin' → logprob: -17.125761032104492
    10. '	print' → logprob: -17.250761032104492

Token 200: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.7099047303199768
    2. 'ichage' → logprob: -0.7099047303199768
    3. 'iche' → logprob: -4.959904670715332
    4. '   ' → logprob: -4.959904670715332
    5. '#' → logprob: -6.209904670715332
    6. 'ich' → logprob: -7.959904670715332
    7. 'cher' → logprob: -9.709904670715332
    8. '    ' → logprob: -10.459904670715332
    9. '  ' → logprob: -10.459904670715332
    10. 'f' → logprob: -10.459904670715332

Token 201: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2031272053718567
    2. '(max' → logprob: -2.203127145767212
    3. '("' → logprob: -3.203127145767212
    4. '(f' → logprob: -3.453127145767212
    5. '(
' → logprob: -7.828127384185791
    6. '()' → logprob: -8.203126907348633
    7. '("")' → logprob: -8.828126907348633
    8. '('' → logprob: -9.828126907348633
    9. '   ' → logprob: -9.828126907348633
    10. 'max' → logprob: -9.953126907348633

Token 202: ' résultat' (ID: 62556)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6085649132728577
    2. ' max' → logprob: -0.9835649132728577
    3. '"' → logprob: -3.233564853668213
    4. ' maximum' → logprob: -4.108564853668213
    5. '(max' → logprob: -4.608564853668213
    6. ' f' → logprob: -4.733564853668213
    7. 'f' → logprob: -6.233564853668213
    8. 'maximum' → logprob: -6.733564853668213
    9. '("' → logprob: -6.858564853668213
    10. '   ' → logprob: -6.983564853668213

Token 203: ' maximal' (ID: 65414)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014390436001121998
    2. '(' → logprob: -4.764390468597412
    3. 'print' → logprob: -5.889390468597412
    4. '()' → logprob: -6.764390468597412
    5. ' print' → logprob: -7.639390468597412
    6. '(max' → logprob: -7.639390468597412
    7. '    
' → logprob: -8.014389991760254
    8. '(print' → logprob: -8.639389991760254
    9. '
' → logprob: -8.889389991760254
    10. '()
' → logprob: -9.639389991760254

Token 204: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005748537369072437
    2. 'print' → logprob: -5.505748748779297
    3. ' print' → logprob: -6.505748748779297
    4. '    
' → logprob: -9.130748748779297
    5. '
' → logprob: -10.005748748779297
    6. '(print' → logprob: -11.505748748779297
    7. '(' → logprob: -12.005748748779297
    8. ',' → logprob: -13.755748748779297
    9. '  ' → logprob: -14.630748748779297
    10. '```' → logprob: -14.755748748779297

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006931356037966907
    2. 'print' → logprob: -7.750693321228027
    3. ' print' → logprob: -8.500693321228027
    4. '    
' → logprob: -9.875693321228027
    5. '
' → logprob: -11.875693321228027
    6. '   ' → logprob: -15.125693321228027
    7. '	print' → logprob: -16.50069236755371
    8. '```' → logprob: -16.75069236755371
    9. ' 
' → logprob: -17.12569236755371
    10. '  ' → logprob: -17.25069236755371

Token 206: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004587903094943613
    2. ' print' → logprob: -8.000458717346191
    3. '   ' → logprob: -9.000458717346191
    4. '```' → logprob: -18.000459671020508
    5. 'pr' → logprob: -19.625459671020508
    6. 'prin' → logprob: -20.000459671020508
    7. '	print' → logprob: -20.250459671020508
    8. 'println' → logprob: -21.500459671020508
    9. '  ' → logprob: -21.750459671020508
    10. 'Print' → logprob: -21.875459671020508

Token 207: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0146426847204566
    2. '(max' → logprob: -4.264642715454102
    3. '("' → logprob: -8.014642715454102
    4. '(f' → logprob: -9.514642715454102
    5. '("("' → logprob: -10.014642715454102
    6. '()' → logprob: -10.889642715454102
    7. '('' → logprob: -12.389642715454102
    8. '(
' → logprob: -13.014642715454102
    9. '("")' → logprob: -13.514642715454102
    10. ' (' → logprob: -13.514642715454102

Token 208: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.546478935983032e-05
    2. '_' → logprob: -11.375025749206543
    3. '_res' → logprob: -11.375025749206543
    4. '(' → logprob: -14.625025749206543
    5. '_results' → logprob: -14.625025749206543
    6. '(_' → logprob: -14.750025749206543
    7. '_RESULT' → logprob: -15.000025749206543
    8. ' _' → logprob: -15.125025749206543
    9. '_Result' → logprob: -15.500025749206543
    10. 'result' → logprob: -16.000024795532227

Token 209: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.125000953674316
    3. '())' → logprob: -15.000000953674316
    4. '()' → logprob: -15.625000953674316
    5. ')
' → logprob: -16.750001907348633
    6. ')`' → logprob: -16.750001907348633
    7. '))' → logprob: -17.375001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '")' → logprob: -19.000001907348633
    10. '(' → logprob: -19.375001907348633

Token 210: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.046895790845155716
    2. 'if' → logprob: -3.796895742416382
    3. '<|end|>' → logprob: -4.546895980834961
    4. '\n' → logprob: -4.796895980834961
    5. '```' → logprob: -6.171895980834961
    6. 'main' → logprob: -7.046895980834961
    7. '

' → logprob: -8.046895980834961
    8. '' → logprob: -8.046895980834961
    9. ' if' → logprob: -8.546895980834961
    10. '\' → logprob: -8.796895980834961

Token 211: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02417437732219696
    2. '__' → logprob: -4.399174213409424
    3. '_' → logprob: -5.024174213409424
    4. ' ' → logprob: -5.649174213409424
    5. ' _' → logprob: -6.774174213409424
    6. ' ' → logprob: -8.399174690246582
    7. ' ​' → logprob: -10.274174690246582
    8. '_name' → logprob: -10.399174690246582
    9. '​' → logprob: -11.399174690246582
    10. '  ' → logprob: -11.649174690246582

Token 212: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1358577162027359
    2. ' __' → logprob: -2.2608578205108643
    3. ' ==' → logprob: -3.8858578205108643
    4. 'name' → logprob: -7.010857582092285
    5. '==' → logprob: -7.010857582092285
    6. '_' → logprob: -8.510857582092285
    7. ' ' → logprob: -9.385857582092285
    8. ' ' → logprob: -9.885857582092285
    9. ' _' → logprob: -11.260857582092285
    10. '___' → logprob: -11.385857582092285

Token 213: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.3458322731312364e-06
    2. '==' → logprob: -12.000007629394531
    3. '__.__' → logprob: -14.000007629394531
    4. '=="' → logprob: -16.75000762939453
    5. ' ==' → logprob: -17.12500762939453
    6. '_' → logprob: -17.12500762939453
    7. '__
' → logprob: -17.25000762939453
    8. '___' → logprob: -17.87500762939453
    9. '__.' → logprob: -18.00000762939453
    10. '__

' → logprob: -18.00000762939453

Token 214: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010209078900516033
    2. '==' → logprob: -5.135209083557129
    3. ' ==' → logprob: -5.510209083557129
    4. '=="' → logprob: -8.510209083557129
    5. '__.__' → logprob: -12.260209083557129
    6. '"' → logprob: -12.385209083557129
    7. '___' → logprob: -12.510209083557129
    8. ' __' → logprob: -13.010209083557129
    9. '_' → logprob: -13.260209083557129
    10. '__("' → logprob: -13.510209083557129

Token 215: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005321631673723459
    2. ''' → logprob: -5.255321502685547
    3. ' "__' → logprob: -9.380321502685547
    4. '__' → logprob: -12.755321502685547
    5. ' '__' → logprob: -14.755321502685547
    6. ' "' → logprob: -15.755321502685547
    7. '"name' → logprob: -17.130321502685547
    8. '"user' → logprob: -17.380321502685547
    9. ''"' → logprob: -17.755321502685547
    10. '"_' → logprob: -17.880321502685547

Token 216: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.2723104848410003e-05
    2. '__' → logprob: -11.375022888183594
    3. '"' → logprob: -12.125022888183594
    4. 'name' → logprob: -12.750022888183594
    5. ' main' → logprob: -13.000022888183594
    6. '_main' → logprob: -14.625022888183594
    7. '	main' → logprob: -17.750022888183594
    8. ' "__' → logprob: -18.000022888183594
    9. '-main' → logprob: -18.625022888183594
    10. '"name' → logprob: -19.000022888183594

Token 217: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16024088859558105
    2. '__' → logprob: -1.910240888595581
    3. '__':
' → logprob: -11.03524112701416
    4. '_' → logprob: -14.78524112701416
    5. '__:' → logprob: -16.785240173339844
    6. '__["' → logprob: -17.410240173339844
    7. '__("' → logprob: -18.160240173339844
    8. '"' → logprob: -18.285240173339844
    9. '__
' → logprob: -18.410240173339844
    10. '__",' → logprob: -18.660240173339844

Token 218: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.013338232412934303
    2. '   ' → logprob: -4.638338088989258
    3. 'main' → logprob: -6.013338088989258
    4. '	main' → logprob: -7.138338088989258
    5. ' ' → logprob: -9.013338088989258
    6. '    
' → logprob: -9.513338088989258
    7. '<|end|>' → logprob: -9.888338088989258
    8. '(main' → logprob: -10.388338088989258
    9. ' 
' → logprob: -10.388338088989258
    10. '_main' → logprob: -12.138338088989258

Token 219: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.16022564470767975
    2. ' main' → logprob: -1.9102256298065186
    3. '	main' → logprob: -13.535225868225098
    4. '   ' → logprob: -15.910225868225098
    5. ' ' → logprob: -18.41022491455078
    6. '_main' → logprob: -18.41022491455078
    7. '(main' → logprob: -18.53522491455078
    8. '.main' → logprob: -19.28522491455078
    9. 'Main' → logprob: -19.66022491455078
    10. ' ' → logprob: -19.91022491455078

Token 220: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24015061557292938
    2. '<|end|>' → logprob: -1.7401505708694458
    3. '
' → logprob: -4.240150451660156
    4. '```' → logprob: -4.615150451660156
    5. ')' → logprob: -5.240150451660156
    6. '(' → logprob: -5.990150451660156
    7. '#' → logprob: -6.365150451660156
    8. '\n' → logprob: -6.615150451660156
    9. '()
' → logprob: -6.990150451660156
    10. '<|end|>' → logprob: -7.115150451660156


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 218
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 92
Tokens correctement prédits (top 10): 172
Précision stricte (1ère position): 40.83%
Précision adaptée (1ère position): 42.20%
Précision (top 10): 78.90%
================================================================================
