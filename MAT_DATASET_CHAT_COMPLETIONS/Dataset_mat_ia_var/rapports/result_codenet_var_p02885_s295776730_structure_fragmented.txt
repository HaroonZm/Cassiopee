================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def lire_entree():
    entree = input()
    return entree

def parser_entree(entree):
    valeurs = entree.split()
    return valeurs

def convertir_vers_int(valeurs):
    a = int(valeurs[0])
    b = int(valeurs[1])
    return a, b

def calculer_gap(a, b):
    return a - 2 * b

def est_gap_positif(gap):
    return gap > 0

def afficher_resultat(resultat):
    print(resultat)

def obtenir_et_afficher_gap():
    entree = lire_entree()
    valeurs = parser_entree(entree)
    a, b = convertir_vers_int(valeurs)
    gap = calculer_gap(a, b)
    if est_gap_positif(gap):
        afficher_resultat(gap)
    else:
        afficher_resultat(0)

obtenir_et_afficher_gap()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' lire' (ID: 46082)
  → Token d'amorce (pas de prédiction)

Token 2: '_ent' (ID: 66249)
  → Token d'amorce (pas de prédiction)

Token 3: 'ree' (ID: 908)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.34583622217178345
    2. '_' → logprob: -1.3458361625671387
    3. '(' → logprob: -4.470836162567139
    4. 'er' → logprob: -5.220836162567139
    5. 'r' → logprob: -5.345836162567139
    6. '()' → logprob: -6.345836162567139
    7. '[' → logprob: -6.720836162567139
    8. 'e' → logprob: -6.720836162567139
    9. '_r' → logprob: -6.720836162567139
    10. '(_' → logprob: -6.845836162567139

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007463465444743633
    2. '():' → logprob: -5.257463455200195
    3. '_' → logprob: -6.257463455200195
    4. ':' → logprob: -9.257463455200195
    5. '(:' → logprob: -9.257463455200195
    6. '()' → logprob: -10.382463455200195
    7. ' (' → logprob: -10.507463455200195
    8. '(_' → logprob: -11.757463455200195
    9. '(_:' → logprob: -11.757463455200195
    10. '"' → logprob: -12.132463455200195

Token 5: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0884044170379639
    2. '\n' → logprob: -1.4634044170379639
    3. '\' → logprob: -1.8384044170379639
    4. '   ' → logprob: -2.463404417037964
    5. '```' → logprob: -2.588404417037964
    6. ' 
' → logprob: -3.838404417037964
    7. ''' → logprob: -4.088404655456543
    8. '    
' → logprob: -4.213404655456543
    9. '(
' → logprob: -4.838404655456543
    10. '()' → logprob: -4.838404655456543

Token 6: ' entree' (ID: 156822)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0138969421386719
    2. 'return' → logprob: -1.5138969421386719
    3. '   ' → logprob: -1.8888969421386719
    4. 'n' → logprob: -2.513896942138672
    5. ' ' → logprob: -2.638896942138672
    6. 'x' → logprob: -3.513896942138672
    7. 'input' → logprob: -4.513896942138672
    8. 'v' → logprob: -4.763896942138672
    9. 'user' → logprob: -4.763896942138672
    10. 'i' → logprob: -4.888896942138672

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.229724407196045
    2. '.' → logprob: -1.354724407196045
    3. '_' → logprob: -1.479724407196045
    4. ' =' → logprob: -2.729724407196045
    5. 's' → logprob: -3.104724407196045
    6. '(' → logprob: -3.229724407196045
    7. '=' → logprob: -3.604724407196045
    8. '[:]' → logprob: -4.229724407196045
    9. '()' → logprob: -5.104724407196045
    10. '   ' → logprob: -5.354724407196045

Token 8: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07941073924303055
    2. 'input' → logprob: -2.5794107913970947
    3. ' ' → logprob: -7.829410552978516
    4. ' int' → logprob: -9.579410552978516
    5. '   ' → logprob: -10.579410552978516
    6. 'int' → logprob: -11.704410552978516
    7. '	input' → logprob: -12.829410552978516
    8. '=input' → logprob: -12.954410552978516
    9. '(input' → logprob: -13.329410552978516
    10. ' ' → logprob: -13.454410552978516

Token 9: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015230757417157292
    2. '("("' → logprob: -6.751523017883301
    3. '('' → logprob: -8.5015230178833
    4. '(
' → logprob: -10.6265230178833
    5. '()' → logprob: -10.6265230178833
    6. ''' → logprob: -11.1265230178833
    7. '```' → logprob: -11.1265230178833
    8. '(

' → logprob: -11.7515230178833
    9. ' (' → logprob: -12.0015230178833
    10. 'parent' → logprob: -12.1265230178833

Token 10: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7101895213127136
    2. '   ' → logprob: -1.7101895809173584
    3. ')' → logprob: -2.3351895809173584
    4. ' ' → logprob: -2.7101895809173584
    5. ' return' → logprob: -3.7101895809173584
    6. '    
' → logprob: -3.8351895809173584
    7. '\n' → logprob: -3.9601895809173584
    8. '\' → logprob: -4.460189342498779
    9. '.' → logprob: -4.585189342498779
    10. '()' → logprob: -4.835189342498779

Token 11: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21835051476955414
    2. '   ' → logprob: -2.093350410461426
    3. ' return' → logprob: -3.218350410461426
    4. ' ' → logprob: -3.718350410461426
    5. ' if' → logprob: -5.593350410461426
    6. 'if' → logprob: -5.718350410461426
    7. 'r' → logprob: -7.718350410461426
    8. '    ' → logprob: -7.843350410461426
    9. '  ' → logprob: -8.968350410461426
    10. '	return' → logprob: -9.093350410461426

Token 12: ' entree' (ID: 156822)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5097183585166931
    2. 'ent' → logprob: -1.259718418121338
    3. ' ent' → logprob: -2.884718418121338
    4. ' entree' → logprob: -3.009718418121338
    5. '_ent' → logprob: -6.009718418121338
    6. 'entrée' → logprob: -6.134718418121338
    7. '(ent' → logprob: -6.759718418121338
    8. '_' → logprob: -7.009718418121338
    9. ' _' → logprob: -7.009718418121338
    10. '  ' → logprob: -7.134718418121338

Token 13: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 14: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 15: ' parser' (ID: 14216)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lire' → logprob: -1.1470941305160522
    2. '_' → logprob: -1.5220941305160522
    3. ' espace' → logprob: -1.7720941305160522
    4. ' ' → logprob: -2.647094249725342
    5. ' saisir' → logprob: -2.647094249725342
    6. ' afficher' → logprob: -3.397094249725342
    7. ' ajouter' → logprob: -3.647094249725342
    8. ' e' → logprob: -4.022094249725342
    9. ' calcul' → logprob: -4.397094249725342
    10. ' space' → logprob: -4.647094249725342

Token 16: '_ent' (ID: 66249)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6983875632286072
    2. '_' → logprob: -0.6983875632286072
    3. '_input' → logprob: -7.073387622833252
    4. '_parent' → logprob: -7.073387622833252
    5. '_def' → logprob: -7.948387622833252
    6. '_ent' → logprob: -7.948387622833252
    7. '('_' → logprob: -8.573387145996094
    8. '_(' → logprob: -8.948387145996094
    9. '_json' → logprob: -8.948387145996094
    10. '_l' → logprob: -9.073387145996094

Token 17: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.006003448273986578
    2. 're' → logprob: -6.131003379821777
    3. 'ete' → logprob: -6.756003379821777
    4. 'rée' → logprob: -6.881003379821777
    5. 'r' → logprob: -7.506003379821777
    6. 'er' → logprob: -8.256003379821777
    7. 'ee' → logprob: -8.256003379821777
    8. 'rees' → logprob: -8.881003379821777
    9. '_' → logprob: -9.381003379821777
    10. ' ree' → logprob: -9.631003379821777

Token 18: '(ent' (ID: 112928)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03206522762775421
    2. '_' → logprob: -3.6570651531219482
    3. '():' → logprob: -5.532065391540527
    4. '()' → logprob: -7.532065391540527
    5. '_parent' → logprob: -8.032065391540527
    6. '('' → logprob: -8.657065391540527
    7. '_par' → logprob: -9.032065391540527
    8. '("("' → logprob: -9.032065391540527
    9. '('_' → logprob: -9.657065391540527
    10. 's' → logprob: -10.032065391540527

Token 19: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.0001278534036828205
    2. 're' → logprob: -10.375127792358398
    3. 'rée' → logprob: -10.375127792358398
    4. 'ee' → logprob: -10.500127792358398
    5. ' ree' → logprob: -10.750127792358398
    6. 'rees' → logprob: -11.750127792358398
    7. ')' → logprob: -12.750127792358398
    8. 'ete' → logprob: -14.000127792358398
    9. 'er' → logprob: -14.000127792358398
    10. 'ée' → logprob: -14.750127792358398

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024194144643843174
    2. ')' → logprob: -6.377419471740723
    3. ',' → logprob: -7.627419471740723
    4. ':' → logprob: -9.252419471740723
    5. '[' → logprob: -9.627419471740723
    6. '   ' → logprob: -10.502419471740723
    7. '):
' → logprob: -11.127419471740723
    8. ' ):' → logprob: -11.502419471740723
    9. '(' → logprob: -12.752419471740723
    10. ' ' → logprob: -12.877419471740723

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15347535908222198
    2. '    ' → logprob: -2.903475284576416
    3. '(' → logprob: -3.778475284576416
    4. '_' → logprob: -3.903475284576416
    5. ' ' → logprob: -4.778475284576416
    6. ':' → logprob: -5.028475284576416
    7. ',' → logprob: -5.028475284576416
    8. ')' → logprob: -5.903475284576416
    9. '[]' → logprob: -5.903475284576416
    10. '[' → logprob: -6.028475284576416

Token 22: ' valeurs' (ID: 73668)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26157429814338684
    2. ' return' → logprob: -2.1365742683410645
    3. 'return' → logprob: -3.7615742683410645
    4. 'ent' → logprob: -4.0115742683410645
    5. ' if' → logprob: -4.1365742683410645
    6. ' ent' → logprob: -4.1365742683410645
    7. '[' → logprob: -5.0115742683410645
    8. '    ' → logprob: -5.7615742683410645
    9. ' for' → logprob: -6.0115742683410645
    10. 'if' → logprob: -6.0115742683410645

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01202791091054678
    2. '_' → logprob: -5.137027740478516
    3. '=' → logprob: -5.512027740478516
    4. '[' → logprob: -7.262027740478516
    5. '[:]' → logprob: -7.887027740478516
    6. ',' → logprob: -8.137027740478516
    7. ' ' → logprob: -8.512027740478516
    8. '.' → logprob: -8.762027740478516
    9. ')' → logprob: -9.387027740478516
    10. '   ' → logprob: -10.012027740478516

Token 24: ' entree' (ID: 156822)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.3980262577533722
    2. ' []' → logprob: -2.02302622795105
    3. ' entree' → logprob: -2.52302622795105
    4. '[]' → logprob: -3.02302622795105
    5. ' ' → logprob: -3.64802622795105
    6. ' [' → logprob: -4.273026466369629
    7. ' ent' → logprob: -4.398026466369629
    8. '[' → logprob: -4.648026466369629
    9. 'entrée' → logprob: -7.023026466369629
    10. '(ent' → logprob: -7.523026466369629

Token 25: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22733739018440247
    2. '.split' → logprob: -1.60233736038208
    3. '.strip' → logprob: -6.85233736038208
    4. ' .' → logprob: -7.10233736038208
    5. '.s' → logprob: -11.477337837219238
    6. '.replace' → logprob: -11.602337837219238
    7. '.rstrip' → logprob: -11.602337837219238
    8. '   ' → logprob: -12.727337837219238
    9. 'split' → logprob: -12.977337837219238
    10. ' split' → logprob: -14.102337837219238

Token 26: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01798943430185318
    2. '("("' → logprob: -4.392989635467529
    3. '(' → logprob: -5.267989635467529
    4. ''' → logprob: -8.267989158630371
    5. '("' → logprob: -10.892989158630371
    6. '('(' → logprob: -11.517989158630371
    7. '('.')' → logprob: -12.142989158630371
    8. '(',' → logprob: -12.267989158630371
    9. ''(' → logprob: -12.267989158630371
    10. '()' → logprob: -12.392989158630371

Token 27: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7965188026428223
    2. '   ' → logprob: -1.0465188026428223
    3. 'return' → logprob: -1.7965188026428223
    4. ')' → logprob: -5.046518802642822
    5. ',' → logprob: -5.296518802642822
    6. 'def' → logprob: -5.421518802642822
    7. ' return' → logprob: -5.421518802642822
    8. ' ' → logprob: -6.296518802642822
    9. '    
' → logprob: -6.421518802642822
    10. ':' → logprob: -6.671518802642822

Token 28: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1917051374912262
    2. '   ' → logprob: -2.9417052268981934
    3. 'val' → logprob: -3.4417052268981934
    4. 'n' → logprob: -3.8167052268981934
    5. 'result' → logprob: -3.9417052268981934
    6. 'if' → logprob: -4.316705226898193
    7. 'a' → logprob: -4.566705226898193
    8. ' return' → logprob: -4.691705226898193
    9. 'ret' → logprob: -6.066705226898193
    10. 'x' → logprob: -6.316705226898193

Token 29: ' valeurs' (ID: 73668)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6936995387077332
    2. '[val' → logprob: -1.068699598312378
    3. ' [' → logprob: -2.318699598312378
    4. '[' → logprob: -3.443699598312378
    5. ' list' → logprob: -4.318699359893799
    6. 'list' → logprob: -5.443699359893799
    7. '[list' → logprob: -5.693699359893799
    8. '[v' → logprob: -6.443699359893799
    9. ' int' → logprob: -6.568699359893799
    10. '[len' → logprob: -7.068699359893799

Token 30: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07864320278167725
    2. '<|end|>' → logprob: -3.078643321990967
    3. '[' → logprob: -4.328643321990967
    4. '

' → logprob: -4.703643321990967
    5. '```' → logprob: -5.578643321990967
    6. '<|end|>' → logprob: -6.703643321990967
    7. '
' → logprob: -6.828643321990967
    8. '\' → logprob: -8.078642845153809
    9. ' def' → logprob: -8.953642845153809
    10. '[
' → logprob: -9.078642845153809

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01187867671251297
    2. '\' → logprob: -5.511878490447998
    3. '#' → logprob: -6.261878490447998
    4. '[' → logprob: -6.261878490447998
    5. '```' → logprob: -6.761878490447998
    6. '<|end|>' → logprob: -7.261878490447998
    7. 'd' → logprob: -7.636878490447998
    8. 'a' → logprob: -7.761878490447998
    9. '
' → logprob: -7.886878490447998
    10. 'n' → logprob: -9.011878967285156

Token 32: ' convertir' (ID: 79223)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -1.3648617267608643
    2. ' main' → logprob: -1.7398617267608643
    3. ' lire' → logprob: -1.9898617267608643
    4. ' afficher' → logprob: -1.9898617267608643
    5. ' ajouter' → logprob: -2.8648617267608643
    6. ' somme' → logprob: -3.2398617267608643
    7. '_' → logprob: -3.3648617267608643
    8. ' convertir' → logprob: -3.3648617267608643
    9. ' addition' → logprob: -3.7398617267608643
    10. ' test' → logprob: -4.239861488342285

Token 33: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006742842961102724
    2. '_val' → logprob: -6.00674295425415
    3. '(' → logprob: -7.25674295425415
    4. '_string' → logprob: -7.38174295425415
    5. '_ent' → logprob: -7.75674295425415
    6. '_(' → logprob: -7.75674295425415
    7. '_en' → logprob: -7.88174295425415
    8. '_str' → logprob: -8.256742477416992
    9. '(_' → logprob: -9.131742477416992
    10. '_text' → logprob: -9.131742477416992

Token 34: 'vers' (ID: 3674)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.1647828817367554
    2. 'en' → logprob: -1.4147828817367554
    3. 'ent' → logprob: -1.7897828817367554
    4. 'liste' → logprob: -1.7897828817367554
    5. 'chaine' → logprob: -2.789783000946045
    6. 'chain' → logprob: -3.914783000946045
    7. 'list' → logprob: -4.789783000946045
    8. '_en' → logprob: -5.664783000946045
    9. 'don' → logprob: -6.039783000946045
    10. 'elements' → logprob: -6.289783000946045

Token 35: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.33917000889778137
    2. '_' → logprob: -1.839169979095459
    3. '_ent' → logprob: -2.214169979095459
    4. '_float' → logprob: -4.214169979095459
    5. '_integer' → logprob: -6.089169979095459
    6. '_in' → logprob: -7.339169979095459
    7. ' _' → logprob: -7.589169979095459
    8. '_nombre' → logprob: -7.964169979095459
    9. 'int' → logprob: -8.589170455932617
    10. ' ' → logprob: -9.339170455932617

Token 36: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012870650738477707
    2. 's' → logprob: -4.512870788574219
    3. '(s' → logprob: -7.137870788574219
    4. '_' → logprob: -7.762870788574219
    5. ' (' → logprob: -8.887870788574219
    6. '("("' → logprob: -10.012870788574219
    7. '('' → logprob: -10.137870788574219
    8. '()' → logprob: -10.262870788574219
    9. '(a' → logprob: -10.637870788574219
    10. 'def' → logprob: -10.637870788574219

Token 37: 'eurs' (ID: 17634)
  Prédit: 'eurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.0001217813478433527
    2. 'eur' → logprob: -9.2501220703125
    3. 'e' → logprob: -10.7501220703125
    4. 'ues' → logprob: -12.7501220703125
    5. '```' → logprob: -15.1251220703125
    6. 'eus' → logprob: -15.5001220703125
    7. '(e' → logprob: -16.3751220703125
    8. 'eux' → logprob: -16.3751220703125
    9. 'es' → logprob: -16.5001220703125
    10. 'ue' → logprob: -16.5001220703125

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009026490151882172
    2. ')' → logprob: -4.759026527404785
    3. '):
' → logprob: -9.259026527404785
    4. '(' → logprob: -9.384026527404785
    5. ' ):' → logprob: -9.384026527404785
    6. '   ' → logprob: -10.134026527404785
    7. ',' → logprob: -10.759026527404785
    8. '():' → logprob: -10.884026527404785
    9. '[]):' → logprob: -11.134026527404785
    10. ')):' → logprob: -11.509026527404785

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0123886214569211
    2. '[' → logprob: -4.637388706207275
    3. 'val' → logprob: -7.887388706207275
    4. '[int' → logprob: -8.012388229370117
    5. '[]' → logprob: -8.137388229370117
    6. 'return' → logprob: -8.137388229370117
    7. 'int' → logprob: -8.887388229370117
    8. ' return' → logprob: -8.887388229370117
    9. 'result' → logprob: -8.887388229370117
    10. '[:]' → logprob: -9.012388229370117

Token 40: ' a' (ID: 261)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4962090253829956
    2. '   ' → logprob: -1.1212090253829956
    3. ' result' → logprob: -3.121209144592285
    4. 'return' → logprob: -4.496209144592285
    5. ' valeurs' → logprob: -5.871209144592285
    6. 'result' → logprob: -6.371209144592285
    7. ' resultat' → logprob: -6.496209144592285
    8. ' liste' → logprob: -7.496209144592285
    9. ' ' → logprob: -7.621209144592285
    10. ' retour' → logprob: -7.996209144592285

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01277626771479845
    2. 'rray' → logprob: -5.7627763748168945
    3. ' ' → logprob: -6.1377763748168945
    4. '=' → logprob: -6.3877763748168945
    5. 'r' → logprob: -6.5127763748168945
    6. '[' → logprob: -6.8877763748168945
    7. ',' → logprob: -7.0127763748168945
    8. 'pp' → logprob: -7.2627763748168945
    9. 's' → logprob: -8.387776374816895
    10. 'rr' → logprob: -8.637776374816895

Token 42: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3869231045246124
    2. 'int' → logprob: -1.13692307472229
    3. 'val' → logprob: -10.886922836303711
    4. ' val' → logprob: -11.511922836303711
    5. ' ' → logprob: -11.636922836303711
    6. '[int' → logprob: -12.011922836303711
    7. '   ' → logprob: -13.261922836303711
    8. '	int' → logprob: -13.261922836303711
    9. '  ' → logprob: -13.261922836303711
    10. 'a' → logprob: -14.511922836303711

Token 43: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.06197071075439453
    2. '(' → logprob: -2.8119707107543945
    3. '(

' → logprob: -14.061970710754395
    4. ' (' → logprob: -14.061970710754395
    5. '(
' → logprob: -14.311970710754395
    6. 'val' → logprob: -15.061970710754395
    7. '('' → logprob: -15.811970710754395
    8. '(vals' → logprob: -15.811970710754395
    9. '()' → logprob: -16.811969757080078
    10. '(valor' → logprob: -17.061969757080078

Token 44: 'eurs' (ID: 17634)
  Prédit: 'eurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.020483607426285744
    2. 'ale' → logprob: -4.020483493804932
    3. 'al' → logprob: -6.645483493804932
    4. 'eur' → logprob: -7.645483493804932
    5. 'a' → logprob: -8.39548397064209
    6. 'e' → logprob: -9.14548397064209
    7. 'ales' → logprob: -10.14548397064209
    8. 'reurs' → logprob: -10.14548397064209
    9. 'ateurs' → logprob: -10.77048397064209
    10. 'leurs' → logprob: -10.89548397064209

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -14.500000953674316
    3. ' [' → logprob: -15.750000953674316
    4. ')' → logprob: -20.375
    5. '   ' → logprob: -20.5
    6. '1' → logprob: -20.75
    7. '[
' → logprob: -21.125
    8. '\[' → logprob: -21.5
    9. ' ' → logprob: -21.875
    10. ')[' → logprob: -22.25

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '1' → logprob: -17.750003814697266
    4. ')' → logprob: -20.125003814697266
    5. '[' → logprob: -20.125003814697266
    6. '   ' → logprob: -20.500003814697266
    7. '۰' → logprob: -21.000003814697266
    8. '０' → logprob: -22.625003814697266
    9. '٠' → logprob: -22.625003814697266
    10. '```' → logprob: -22.750003814697266

Token 47: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021971983835101128
    2. '])' → logprob: -4.146972179412842
    3. ']' → logprob: -5.146972179412842
    4. ' )' → logprob: -10.021971702575684
    5. ')]' → logprob: -11.021971702575684
    6. ')])' → logprob: -11.396971702575684
    7. '[' → logprob: -11.771971702575684
    8. ' ])' → logprob: -11.896971702575684
    9. ')
' → logprob: -12.021971702575684
    10. ''])' → logprob: -13.396971702575684

Token 48: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -1.3334113359451294
    2. ' ' → logprob: -1.3334113359451294
    3. ',' → logprob: -1.4584113359451294
    4. 'a' → logprob: -2.58341121673584
    5. '<|end|>' → logprob: -2.58341121673584
    6. ' b' → logprob: -3.33341121673584
    7. ' ,' → logprob: -3.70841121673584
    8. '  ' → logprob: -4.58341121673584
    9. '  
' → logprob: -5.45841121673584
    10. ' 
' → logprob: -5.83341121673584

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005241583567112684
    2. '=' → logprob: -5.255241394042969
    3. '=int' → logprob: -12.880241394042969
    4. ' ' → logprob: -13.005241394042969
    5. ')' → logprob: -13.505241394042969
    6. ',' → logprob: -14.880241394042969
    7. '  ' → logprob: -15.505241394042969
    8. '[' → logprob: -15.505241394042969
    9. '<|end|>' → logprob: -15.630241394042969
    10. '_' → logprob: -16.00524139404297

Token 51: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20141489803791046
    2. 'int' → logprob: -1.701414942741394
    3. '=int' → logprob: -14.701415061950684
    4. '(int' → logprob: -14.826415061950684
    5. ' ' → logprob: -15.076415061950684
    6. ' ' → logprob: -15.326415061950684
    7. '<int' → logprob: -15.576415061950684
    8. '[int' → logprob: -16.076414108276367
    9. '	int' → logprob: -17.451414108276367
    10. ',int' → logprob: -17.826414108276367

Token 52: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.005235190503299236
    2. '(' → logprob: -5.255235195159912
    3. ' (' → logprob: -14.130234718322754
    4. '[val' → logprob: -15.005234718322754
    5. 'val' → logprob: -16.00523567199707
    6. '(var' → logprob: -16.25523567199707
    7. '(vals' → logprob: -16.88023567199707
    8. ',val' → logprob: -17.13023567199707
    9. '(
' → logprob: -17.50523567199707
    10. '(valor' → logprob: -17.75523567199707

Token 53: 'eurs' (ID: 17634)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.06948336958885193
    2. '(val' → logprob: -3.3194832801818848
    3. '[val' → logprob: -3.9444832801818848
    4. 'eurs' → logprob: -4.569483280181885
    5. 'eur' → logprob: -7.319483280181885
    6. 'er' → logprob: -8.444483757019043
    7. 'leurs' → logprob: -9.069483757019043
    8. '[' → logprob: -10.569483757019043
    9. 'erval' → logprob: -10.569483757019043
    10. ',val' → logprob: -10.694483757019043

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. ' [' → logprob: -12.625005722045898
    3. '1' → logprob: -14.125005722045898
    4. ')' → logprob: -14.750005722045898
    5. '   ' → logprob: -14.750005722045898
    6. ' ' → logprob: -15.250005722045898
    7. 'val' → logprob: -15.875005722045898
    8. '[
' → logprob: -16.0000057220459
    9. ')[' → logprob: -17.0000057220459
    10. 's' → logprob: -17.1250057220459

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.250015258789062
    3. '[' → logprob: -14.250015258789062
    4. '])' → logprob: -14.750015258789062
    5. ']' → logprob: -15.000015258789062
    6. '0' → logprob: -15.000015258789062
    7. '   ' → logprob: -16.750015258789062
    8. ')' → logprob: -16.875015258789062
    9. '```' → logprob: -17.375015258789062
    10. '  ' → logprob: -17.875015258789062

Token 56: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04314534366130829
    2. '])' → logprob: -3.1681454181671143
    3. ')])' → logprob: -10.293145179748535
    4. ']' → logprob: -10.543145179748535
    5. ' )' → logprob: -10.668145179748535
    6. '))' → logprob: -10.918145179748535
    7. ')]' → logprob: -11.043145179748535
    8. '   ' → logprob: -12.168145179748535
    9. '[' → logprob: -12.543145179748535
    10. ')
' → logprob: -12.543145179748535

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007555629126727581
    2. '<|end|>' → logprob: -5.6325554847717285
    3. ')' → logprob: -6.5075554847717285
    4. ' ' → logprob: -7.3825554847717285
    5. 'return' → logprob: -7.5075554847717285
    6. ' return' → logprob: -7.5075554847717285
    7. '    
' → logprob: -8.632555961608887
    8. '
' → logprob: -8.757555961608887
    9. '  ' → logprob: -9.007555961608887
    10. '	return' → logprob: -9.257555961608887

Token 58: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5296781659126282
    2. '   ' → logprob: -1.2796781063079834
    3. ' return' → logprob: -2.0296781063079834
    4. '    
' → logprob: -7.5296783447265625
    5. '
' → logprob: -8.154678344726562
    6. '	return' → logprob: -8.279678344726562
    7. ' ' → logprob: -8.279678344726562
    8. '<|end|>' → logprob: -9.404678344726562
    9. ':return' → logprob: -9.529678344726562
    10. ' 
' → logprob: -10.154678344726562

Token 59: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2849629521369934
    2. ' a' → logprob: -1.4099628925323486
    3. '(a' → logprob: -5.784963130950928
    4. ' (' → logprob: -7.409963130950928
    5. '(' → logprob: -9.15996265411377
    6. ' ' → logprob: -11.15996265411377
    7. ' ' → logprob: -12.28496265411377
    8. '	a' → logprob: -13.28496265411377
    9. '   ' → logprob: -14.90996265411377
    10. '_a' → logprob: -15.65996265411377

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3507305085659027
    2. ' ,' → logprob: -1.225730538368225
    3. ',b' → logprob: -6.1007304191589355
    4. ' ' → logprob: -10.725730895996094
    5. '<|end|>' → logprob: -11.350730895996094
    6. ' b' → logprob: -12.975730895996094
    7. ',a' → logprob: -13.100730895996094
    8. ' ,
' → logprob: -13.350730895996094
    9. 'b' → logprob: -14.725730895996094
    10. 'a' → logprob: -14.725730895996094

Token 61: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04862506315112114
    2. 'b' → logprob: -3.0486249923706055
    3. ' ' → logprob: -10.298624992370605
    4. ' ' → logprob: -12.548624992370605
    5. ' б' → logprob: -16.173625946044922
    6. '	b' → logprob: -16.673625946044922
    7. '<|end|>' → logprob: -16.798625946044922
    8. 'space' → logprob: -16.923625946044922
    9. ' ' → logprob: -17.048625946044922
    10. 's' → logprob: -17.173625946044922

Token 62: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07519552111625671
    2. '

' → logprob: -2.950195550918579
    3. '<|end|>' → logprob: -4.3251953125
    4. '
' → logprob: -5.0751953125
    5. ' def' → logprob: -7.8251953125
    6. '<|end|>' → logprob: -9.2001953125
    7. '```' → logprob: -10.0751953125
    8. '\n' → logprob: -10.7001953125
    9. '#' → logprob: -11.2001953125
    10. ' 

' → logprob: -11.5751953125

Token 63: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06139598414301872
    2. '

' → logprob: -2.9363958835601807
    3. '
' → logprob: -5.06139612197876
    4. '```' → logprob: -9.936395645141602
    5. '<|end|>' → logprob: -10.061395645141602
    6. '\' → logprob: -10.936395645141602
    7. ' def' → logprob: -11.311395645141602
    8. '#' → logprob: -11.436395645141602
    9. '<|end|>' → logprob: -12.061395645141602
    10. ' 

' → logprob: -12.561395645141602

Token 64: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -1.1250348091125488
    2. ' somme' → logprob: -1.2500348091125488
    3. ' addition' → logprob: -1.7500348091125488
    4. ' main' → logprob: -2.875034809112549
    5. ' pg' → logprob: -3.125034809112549
    6. ' multiplication' → logprob: -3.750034809112549
    7. 'calcul' → logprob: -5.000034809112549
    8. 'addition' → logprob: -5.000034809112549
    9. 's' → logprob: -5.125034809112549
    10. '_s' → logprob: -5.125034809112549

Token 65: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.06232975050806999
    2. '_s' → logprob: -4.4373297691345215
    3. '_m' → logprob: -4.6873297691345215
    4. '_' → logprob: -4.6873297691345215
    5. 'atrice' → logprob: -5.1873297691345215
    6. '_er' → logprob: -5.1873297691345215
    7. '_sum' → logprob: -5.6873297691345215
    8. 'ateur' → logprob: -6.5623297691345215
    9. '_surface' → logprob: -6.5623297691345215
    10. '_difference' → logprob: -6.6873297691345215

Token 66: '_gap' (ID: 131234)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3347703516483307
    2. '_' → logprob: -1.3347703218460083
    3. '_pg' → logprob: -5.459770202636719
    4. '_la' → logprob: -5.834770202636719
    5. '_m' → logprob: -5.959770202636719
    6. '_max' → logprob: -6.084770202636719
    7. '_sum' → logprob: -6.209770202636719
    8. '_p' → logprob: -6.209770202636719
    9. '_pro' → logprob: -7.334770202636719
    10. '_(' → logprob: -7.334770202636719

Token 67: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.11607922613620758
    2. '(' → logprob: -2.241079330444336
    3. '_gap' → logprob: -6.491079330444336
    4. '_' → logprob: -7.491079330444336
    5. '()' → logprob: -8.991079330444336
    6. '(b' → logprob: -8.991079330444336
    7. '_between' → logprob: -9.116079330444336
    8. ' (' → logprob: -9.241079330444336
    9. 's' → logprob: -9.491079330444336
    10. '_diff' → logprob: -9.741079330444336

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024120506714098155
    2. ',b' → logprob: -8.37524127960205
    3. ' ,' → logprob: -11.62524127960205
    4. ',
' → logprob: -14.50024127960205
    5. 'b' → logprob: -14.75024127960205
    6. ')' → logprob: -15.62524127960205
    7. '_,' → logprob: -16.000240325927734
    8. '1' → logprob: -16.250240325927734
    9. '-' → logprob: -16.625240325927734
    10. '):' → logprob: -16.875240325927734

Token 69: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11282975226640701
    2. ' b' → logprob: -2.2378296852111816
    3. ' ' → logprob: -12.86283016204834
    4. '   ' → logprob: -13.86283016204834
    5. ')b' → logprob: -14.17533016204834
    6. '<|end|>' → logprob: -14.61283016204834
    7. ' ' → logprob: -14.67533016204834
    8. ')' → logprob: -14.98783016204834
    9. '	b' → logprob: -15.36283016204834
    10. '>b' → logprob: -15.55033016204834

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010831133840838447
    2. ')' → logprob: -9.87510871887207
    3. ':' → logprob: -10.62510871887207
    4. '):
' → logprob: -11.00010871887207
    5. ',' → logprob: -11.50010871887207
    6. '():' → logprob: -13.12510871887207
    7. ' ):' → logprob: -13.37510871887207
    8. '=' → logprob: -13.75010871887207
    9. '   ' → logprob: -15.25010871887207
    10. '):
' → logprob: -15.87510871887207

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018957947613671422
    2. ' return' → logprob: -7.251895904541016
    3. '    
' → logprob: -7.751895904541016
    4. '
' → logprob: -8.126895904541016
    5. 'return' → logprob: -8.751895904541016
    6. ':' → logprob: -9.126895904541016
    7. ' 
' → logprob: -10.001895904541016
    8. '    ' → logprob: -10.251895904541016
    9. '   ' → logprob: -10.251895904541016
    10. '```' → logprob: -11.251895904541016

Token 72: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5381543636322021
    2. 'return' (adapté à ' return') → logprob: -1.2881543636322021
    3. '   ' → logprob: -2.663154363632202
    4. ' if' → logprob: -3.163154363632202
    5. 'if' → logprob: -3.913154363632202
    6. ' abs' → logprob: -5.788154602050781
    7. 'abs' → logprob: -5.913154602050781
    8. ' max' → logprob: -7.788154602050781
    9. ' gap' → logprob: -7.913154602050781
    10. 'gap' → logprob: -7.913154602050781

Token 73: ' a' (ID: 261)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.5046414136886597
    2. 'abs' → logprob: -1.2546414136886597
    3. ' b' → logprob: -2.879641532897949
    4. 'b' → logprob: -3.129641532897949
    5. ' max' → logprob: -4.879641532897949
    6. 'max' → logprob: -6.379641532897949
    7. 'a' → logprob: -7.629641532897949
    8. ' ' → logprob: -7.754641532897949
    9. ' a' → logprob: -7.879641532897949
    10. '(abs' → logprob: -8.25464153289795

Token 74: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14407819509506226
    2. ' -' → logprob: -2.019078254699707
    3. '-b' → logprob: -7.269078254699707
    4. '+' → logprob: -7.519078254699707
    5. ' ' → logprob: -9.769078254699707
    6. ',' → logprob: -10.144078254699707
    7. '%' → logprob: -10.894078254699707
    8. '*' → logprob: -11.269078254699707
    9. ' +' → logprob: -11.519078254699707
    10. '+b' → logprob: -12.269078254699707

Token 75: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014165983535349369
    2. ' b' → logprob: -4.264165878295898
    3. '1' → logprob: -13.264165878295898
    4. '	b' → logprob: -15.139165878295898
    5. '<|end|>' → logprob: -15.264165878295898
    6. '   ' → logprob: -16.1391658782959
    7. ' ' → logprob: -16.2641658782959
    8. '    ' → logprob: -17.1391658782959
    9. '2' → logprob: -17.8891658782959
    10. ')b' → logprob: -17.8891658782959

Token 76: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.15441757265944e-05
    2. ' b' → logprob: -10.375031471252441
    3. '1' → logprob: -15.375031471252441
    4. '2' → logprob: -19.125032424926758
    5. '<|end|>' → logprob: -19.375032424926758
    6. '	b' → logprob: -19.750032424926758
    7. '>b' → logprob: -19.750032424926758
    8. ' ' → logprob: -20.000032424926758
    9. ')b' → logprob: -20.125032424926758
    10. '   ' → logprob: -20.625032424926758

Token 77: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.18397022783756256
    2. '*b' → logprob: -2.5589702129364014
    3. '*' → logprob: -3.1839702129364014
    4. '<|end|>' → logprob: -3.3089702129364014
    5. ' ' → logprob: -4.5589704513549805
    6. 'b' → logprob: -7.4339704513549805
    7. '*a' → logprob: -8.05897045135498
    8. ' b' → logprob: -8.43397045135498
    9. ')' → logprob: -8.43397045135498
    10. '0' → logprob: -8.80897045135498

Token 78: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008615161292254925
    2. ' b' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.008615493774414
    4. '*b' → logprob: -15.758615493774414
    5. '(b' → logprob: -16.633615493774414
    6. '	b' → logprob: -17.008615493774414
    7. 'a' → logprob: -17.133615493774414
    8. ')b' → logprob: -17.508615493774414
    9. '   ' → logprob: -18.383615493774414
    10. '<|end|>' → logprob: -18.383615493774414

Token 79: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44905397295951843
    2. 'def' → logprob: -1.8240540027618408
    3. '<|end|>' → logprob: -1.9490540027618408
    4. '

' → logprob: -3.199054002761841
    5. '```' → logprob: -5.074053764343262
    6. '\n' → logprob: -5.199053764343262
    7. '*' → logprob: -6.699053764343262
    8. '<|end|>' → logprob: -6.949053764343262
    9. '+' → logprob: -7.574053764343262
    10. '\' → logprob: -7.574053764343262

Token 80: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014708695001900196
    2. '

' → logprob: -4.514708518981934
    3. '<|end|>' → logprob: -6.264708518981934
    4. '
' → logprob: -6.514708518981934
    5. '```' → logprob: -8.764708518981934
    6. '<|end|>' → logprob: -9.889708518981934
    7. '\' → logprob: -10.514708518981934
    8. '\n' → logprob: -11.639708518981934
    9. ' def' → logprob: -11.639708518981934
    10. '#' → logprob: -12.264708518981934

Token 81: ' est' (ID: 893)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.16793622076511383
    2. ' calcul' → logprob: -1.9179362058639526
    3. ' afficher' → logprob: -6.042936325073242
    4. ' gap' → logprob: -6.292936325073242
    5. ' espace' → logprob: -7.417936325073242
    6. ' principale' → logprob: -7.917936325073242
    7. '_' → logprob: -8.292936325073242
    8. ' resultat' → logprob: -8.292936325073242
    9. ' test' → logprob: -8.667936325073242
    10. ' def' → logprob: -8.792936325073242

Token 82: '_gap' (ID: 131234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1786067634820938
    2. '_pair' → logprob: -2.4286067485809326
    3. '_val' → logprob: -3.9286067485809326
    4. '_p' → logprob: -4.553606986999512
    5. '_un' → logprob: -4.803606986999512
    6. '_possible' → logprob: -5.053606986999512
    7. '_pos' → logprob: -5.178606986999512
    8. '_v' → logprob: -5.428606986999512
    9. '_gap' → logprob: -5.553606986999512
    10. '_pal' → logprob: -5.678606986999512

Token 83: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5889053344726562
    2. '_val' → logprob: -1.4639053344726562
    3. '_positive' → logprob: -3.0889053344726562
    4. '_v' → logprob: -3.2139053344726562
    5. '_neg' → logprob: -3.7139053344726562
    6. '_non' → logprob: -4.338905334472656
    7. '_possible' → logprob: -4.463905334472656
    8. '_valid' → logprob: -4.588905334472656
    9. '_pos' → logprob: -4.588905334472656
    10. '_s' → logprob: -5.088905334472656

Token 84: 'posit' (ID: 2904)
  Prédit: 'posit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.607096254825592
    2. 'val' → logprob: -1.6070961952209473
    3. 's' → logprob: -2.9820961952209473
    4. 'neg' → logprob: -3.1070961952209473
    5. 'acceptable' → logprob: -3.3570961952209473
    6. 'positive' → logprob: -4.107096195220947
    7. 'correct' → logprob: -4.232096195220947
    8. 'pos' → logprob: -4.357096195220947
    9. 'possible' → logprob: -4.482096195220947
    10. 'valid' → logprob: -4.482096195220947

Token 85: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0013640470569953322
    2. 'f' → logprob: -6.626364231109619
    3. 'ive' → logprob: -11.001363754272461
    4. ' if' → logprob: -11.251363754272461
    5. 'def' → logprob: -13.251363754272461
    6. '```' → logprob: -13.251363754272461
    7. 'If' → logprob: -14.001363754272461
    8. 'ef' → logprob: -14.001363754272461
    9. 've' → logprob: -14.626363754272461
    10. 'ife' → logprob: -14.751363754272461

Token 86: '(g' (ID: 7791)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02144051343202591
    2. '(g' → logprob: -4.521440505981445
    3. '(a' → logprob: -4.771440505981445
    4. ' (' → logprob: -6.771440505981445
    5. '():' → logprob: -7.646440505981445
    6. ':' → logprob: -9.771440505981445
    7. '(s' → logprob: -10.521440505981445
    8. '(b' → logprob: -10.646440505981445
    9. '(cap' → logprob: -11.521440505981445
    10. '_gap' → logprob: -11.646440505981445

Token 87: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -8.41866585687967e-06
    2. 'a' → logprob: -13.125008583068848
    3. 'gap' → logprob: -13.125008583068848
    4. '_gap' → logprob: -13.375008583068848
    5. '_ap' → logprob: -14.250008583068848
    6. 'ап' → logprob: -14.375008583068848
    7. '	ap' → logprob: -15.375008583068848
    8. '(ap' → logprob: -15.750008583068848
    9. '`' → logprob: -15.875008583068848
    10. '_' → logprob: -16.50000762939453

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026763377711176872
    2. ')' → logprob: -3.651763439178467
    3. ' ):' → logprob: -7.901763439178467
    4. '):
' → logprob: -10.276762962341309
    5. ':' → logprob: -11.026762962341309
    6. ' )' → logprob: -11.151762962341309
    7. ',' → logprob: -11.901762962341309
    8. 'e' → logprob: -12.151762962341309
    9. '_' → logprob: -12.901762962341309
    10. '():' → logprob: -13.776762962341309

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014328587567433715
    2. '    ' → logprob: -7.1264328956604
    3. '    
' → logprob: -8.626432418823242
    4. ' return' → logprob: -8.751432418823242
    5. '<|end|>' → logprob: -9.376432418823242
    6. ' 
' → logprob: -9.501432418823242
    7. '  ' → logprob: -10.501432418823242
    8. ':' → logprob: -10.501432418823242
    9. '  ' → logprob: -11.251432418823242
    10. '       ' → logprob: -11.626432418823242

Token 90: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0967937633395195
    2. ' gap' → logprob: -2.5967936515808105
    3. '   ' → logprob: -4.8467936515808105
    4. 'return' (adapté à ' return') → logprob: -4.9717936515808105
    5. 'gap' → logprob: -5.8467936515808105
    6. ' if' → logprob: -10.846794128417969
    7. '_gap' → logprob: -11.346794128417969
    8. ' retour' → logprob: -11.721794128417969
    9. ' ' → logprob: -12.096794128417969
    10. '    
' → logprob: -12.471794128417969

Token 91: ' gap' (ID: 19953)
  Prédit: ' gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.003630481194704771
    2. 'gap' → logprob: -5.628630638122559
    3. ' ' → logprob: -10.878630638122559
    4. ' ' → logprob: -12.253630638122559
    5. '_gap' → logprob: -12.503630638122559
    6. 'Gap' → logprob: -14.253630638122559
    7. ' (' → logprob: -14.628630638122559
    8. '  ' → logprob: -15.003630638122559
    9. ' True' → logprob: -15.441130638122559
    10. '>' → logprob: -15.441130638122559

Token 92: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.038313671946525574
    2. '>' → logprob: -3.288313627243042
    3. ' ' → logprob: -8.413313865661621
    4. ' >=' → logprob: -10.163313865661621
    5. ' ' → logprob: -12.413313865661621
    6. '>=' → logprob: -12.788313865661621
    7. ' >

' → logprob: -13.288313865661621
    8. ' >
' → logprob: -14.288313865661621
    9. '   ' → logprob: -14.413313865661621
    10. '  ' → logprob: -14.538313865661621

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023245826363563538
    2. ' ' → logprob: -3.7732458114624023
    3. ' ' → logprob: -16.39824676513672
    4. '  ' → logprob: -17.14824676513672
    5. '<|end|>' → logprob: -17.27324676513672
    6. '=' → logprob: -17.52324676513672
    7. '   ' → logprob: -17.77324676513672
    8. '۰' → logprob: -17.77324676513672
    9. '1' → logprob: -18.52324676513672
    10. ' ' → logprob: -19.02324676513672

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001093841710826382
    2. ' ' → logprob: -9.125109672546387
    3. '<|end|>' → logprob: -15.625109672546387
    4. '۰' → logprob: -16.62510871887207
    5. '-' → logprob: -16.87510871887207
    6. '٠' → logprob: -18.25010871887207
    7. '  ' → logprob: -18.37510871887207
    8. '00' → logprob: -18.50010871887207
    9. '```' → logprob: -18.50010871887207
    10. '=' → logprob: -18.93760871887207

Token 95: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3281906843185425
    2. 'def' → logprob: -1.3281906843185425
    3. '
' → logprob: -4.453190803527832
    4. '<|end|>' → logprob: -5.953190803527832
    5. '```' → logprob: -9.078190803527832
    6. '<|end|>' → logprob: -9.203190803527832
    7. '


' → logprob: -9.453190803527832
    8. ' 

' → logprob: -9.703190803527832
    9. '\n' → logprob: -9.953190803527832
    10. '



' → logprob: -10.078190803527832

Token 96: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001720742875477299
    2. '
' → logprob: -9.625171661376953
    3. '

' → logprob: -10.500171661376953
    4. '<|end|>' → logprob: -10.625171661376953
    5. '\' → logprob: -11.000171661376953
    6. '```' → logprob: -11.250171661376953
    7. '#' → logprob: -11.375171661376953
    8. '  
' → logprob: -12.750171661376953
    9. 'if' → logprob: -13.000171661376953
    10. '\n' → logprob: -13.375171661376953

Token 97: ' afficher' (ID: 146524)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.030461860820651054
    2. ' calcul' → logprob: -4.53046178817749
    3. ' afficher' → logprob: -4.53046178817749
    4. 'main' → logprob: -6.40546178817749
    5. ' principale' → logprob: -6.78046178817749
    6. ' def' → logprob: -6.78046178817749
    7. ' test' → logprob: -7.53046178817749
    8. ' est' → logprob: -7.65546178817749
    9. ' solution' → logprob: -7.65546178817749
    10. ' fonction' → logprob: -8.405462265014648

Token 98: '_result' (ID: 11623)
  Prédit: '_gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -0.7618262767791748
    2. '_' → logprob: -1.1368262767791748
    3. '_result' → logprob: -1.6368262767791748
    4. '(' → logprob: -4.761826515197754
    5. '_r' → logprob: -5.136826515197754
    6. '("_' → logprob: -6.886826515197754
    7. '_res' → logprob: -7.886826515197754
    8. '()' → logprob: -8.011826515197754
    9. '_(' → logprob: -8.511826515197754
    10. '(_' → logprob: -8.636826515197754

Token 99: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -3.47626737493556e-05
    2. '(at' → logprob: -10.50003433227539
    3. 'ats' → logprob: -13.12503433227539
    4. 'ат' → logprob: -13.62503433227539
    5. '(' → logprob: -13.75003433227539
    6. '()' → logprob: -14.25003433227539
    7. '```' → logprob: -14.75003433227539
    8. ' at' → logprob: -14.87503433227539
    9. 'e' → logprob: -15.12503433227539
    10. '_at' → logprob: -15.25003433227539

Token 100: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.581701397895813
    2. '(g' → logprob: -0.831701397895813
    3. '(' → logprob: -5.456701278686523
    4. '(res' → logprob: -7.581701278686523
    5. ' (' → logprob: -7.831701278686523
    6. '(message' → logprob: -8.456701278686523
    7. '(resultado' → logprob: -8.956701278686523
    8. '():' → logprob: -9.206701278686523
    9. '(msg' → logprob: -10.456701278686523
    10. '(r' → logprob: -10.956701278686523

Token 101: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00013274075172375888
    2. 'ats' → logprob: -9.50013256072998
    3. '(result' → logprob: -10.12513256072998
    4. ')' → logprob: -11.37513256072998
    5. '(at' → logprob: -13.00013256072998
    6. '```' → logprob: -13.75013256072998
    7. 'ат' → logprob: -14.25013256072998
    8. '):' → logprob: -14.37513256072998
    9. 'result' → logprob: -14.75013256072998
    10. '   ' → logprob: -15.37513256072998

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0517963171005249
    2. '(result' → logprob: -3.1767964363098145
    3. ')' → logprob: -5.0517964363098145
    4. '):
' → logprob: -6.4267964363098145
    5. ',result' → logprob: -7.6767964363098145
    6. '   ' → logprob: -9.551795959472656
    7. ' ):' → logprob: -9.801795959472656
    8. 'result' → logprob: -9.926795959472656
    9. ',' → logprob: -10.176795959472656
    10. '(' → logprob: -10.551795959472656

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00888920109719038
    2. ' print' → logprob: -4.758889198303223
    3. 'print' → logprob: -8.383889198303223
    4. ' if' → logprob: -10.133889198303223
    5. 'if' → logprob: -12.383889198303223
    6. '   ' → logprob: -13.633889198303223
    7. '	print' → logprob: -15.008889198303223
    8. '```' → logprob: -15.758889198303223
    9. '   ' → logprob: -15.883889198303223
    10. '    ' → logprob: -16.13389015197754

Token 104: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6979295611381531
    2. ' if' → logprob: -0.9479295611381531
    3. 'print' (adapté à ' print') → logprob: -2.822929620742798
    4. 'if' → logprob: -3.072929620742798
    5. '   ' → logprob: -4.697929382324219
    6. '```' → logprob: -11.822929382324219
    7. ' for' → logprob: -13.322929382324219
    8. 'for' → logprob: -14.447929382324219
    9. '    ' → logprob: -14.572929382324219
    10. '	print' → logprob: -14.822929382324219

Token 105: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.004221097566187382
    2. '(' → logprob: -5.504220962524414
    3. '()' → logprob: -9.254220962524414
    4. '(f' → logprob: -10.754220962524414
    5. 'result' → logprob: -11.254220962524414
    6. '(resultado' → logprob: -12.629220962524414
    7. '("("' → logprob: -12.879220962524414
    8. '("")' → logprob: -12.879220962524414
    9. '('' → logprob: -13.629220962524414
    10. '("' → logprob: -13.879220962524414

Token 106: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -7.584239938296378e-06
    2. 't' → logprob: -13.250007629394531
    3. ' at' → logprob: -13.375007629394531
    4. ')' → logprob: -13.375007629394531
    5. '_at' → logprob: -14.125007629394531
    6. 'result' → logprob: -14.250007629394531
    7. '_result' → logprob: -15.375007629394531
    8. '))' → logprob: -15.500007629394531
    9. 'ат' → logprob: -15.500007629394531
    10. '(at' → logprob: -16.25000762939453

Token 107: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.875
    3. ' )' → logprob: -16.625
    4. '))' → logprob: -17.75
    5. ')`' → logprob: -18.375
    6. '()' → logprob: -19.625
    7. '),' → logprob: -19.875
    8. ')

' → logprob: -20.125
    9. '')' → logprob: -20.25
    10. '())' → logprob: -20.25

Token 108: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024963486939668655
    2. 'if' → logprob: -6.002496242523193
    3. '
' → logprob: -11.627496719360352
    4. 'ent' → logprob: -12.377496719360352
    5. '```' → logprob: -12.877496719360352
    6. '

' → logprob: -13.502496719360352
    7. '#' → logprob: -13.752496719360352
    8. '    
' → logprob: -14.002496719360352
    9. '  
' → logprob: -14.502496719360352
    10. ' def' → logprob: -16.12749671936035

Token 109: ' obtenir' (ID: 54423)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05512915179133415
    2. 'main' → logprob: -2.930129051208496
    3. ' principale' → logprob: -9.180129051208496
    4. ' principal' → logprob: -10.305129051208496
    5. ' programme' → logprob: -10.305129051208496
    6. ' run' → logprob: -10.805129051208496
    7. 'fonction' → logprob: -11.805129051208496
    8. 'def' → logprob: -12.055129051208496
    9. ' fonction' → logprob: -12.180129051208496
    10. 'programme' → logprob: -12.305129051208496

Token 110: '_et' (ID: 103440)
  Prédit: '_ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.26064810156822205
    2. '_' → logprob: -2.510648012161255
    3. '_result' → logprob: -2.635648012161255
    4. '_input' → logprob: -3.260648012161255
    5. '_gap' → logprob: -4.760648250579834
    6. '_et' → logprob: -4.885648250579834
    7. '_l' → logprob: -4.885648250579834
    8. '_val' → logprob: -4.885648250579834
    9. '_la' → logprob: -6.135648250579834
    10. '_le' → logprob: -6.385648250579834

Token 111: '_aff' (ID: 115829)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.7722648978233337
    2. '_trait' → logprob: -1.1472649574279785
    3. '_aff' → logprob: -2.0222649574279785
    4. '_cal' → logprob: -3.2722649574279785
    5. 'trait' → logprob: -4.1472649574279785
    6. '_val' → logprob: -5.3972649574279785
    7. '_ver' → logprob: -5.5222649574279785
    8. '_t' → logprob: -5.7722649574279785
    9. '_parser' → logprob: -5.7722649574279785
    10. '_' → logprob: -5.8972649574279785

Token 112: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -5.943783253314905e-05
    2. 'ic' → logprob: -11.500059127807617
    3. 'ich' → logprob: -11.625059127807617
    4. 'ichier' → logprob: -11.625059127807617
    5. 'ichage' → logprob: -11.625059127807617
    6. '_' → logprob: -12.000059127807617
    7. 'iche' → logprob: -12.250059127807617
    8. '#' → logprob: -12.625059127807617
    9. '   ' → logprob: -13.000059127807617
    10. 'i' → logprob: -13.875059127807617

Token 113: '_gap' (ID: 131234)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.025147292762994766
    2. '_gap' → logprob: -3.9001471996307373
    3. '_le' → logprob: -6.025147438049316
    4. '_' → logprob: -6.650147438049316
    5. '_res' → logprob: -8.150147438049316
    6. '_r' → logprob: -8.525147438049316
    7. '()' → logprob: -8.525147438049316
    8. 'result' → logprob: -9.650147438049316
    9. '_l' → logprob: -10.150147438049316
    10. '_la' → logprob: -10.775147438049316

Token 114: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005874642520211637
    2. '():
' → logprob: -7.500587463378906
    3. ' ():' → logprob: -10.500587463378906
    4. '()' → logprob: -12.000587463378906
    5. '(' → logprob: -15.125587463378906
    6. '():

' → logprob: -15.750587463378906
    7. '_' → logprob: -16.125587463378906
    8. '(a' → logprob: -16.250587463378906
    9. ' ()' → logprob: -16.625587463378906
    10. '():
' → logprob: -17.125587463378906

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000320330640533939
    2. 'ent' → logprob: -8.125320434570312
    3. '    
' → logprob: -11.875320434570312
    4. ' ent' → logprob: -12.375320434570312
    5. 'def' → logprob: -12.500320434570312
    6. '	ent' → logprob: -12.750320434570312
    7. '   ' → logprob: -13.250320434570312
    8. '    ' → logprob: -13.875320434570312
    9. ' entree' → logprob: -13.875320434570312
    10. '(ent' → logprob: -14.000320434570312

Token 116: ' entree' (ID: 156822)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.05559959635138512
    2. '   ' → logprob: -3.3055996894836426
    3. ' entree' → logprob: -4.180599689483643
    4. ' ent' → logprob: -6.555599689483643
    5. 'entrée' → logprob: -8.180599212646484
    6. '	ent' → logprob: -8.930599212646484
    7. 'entr' → logprob: -9.430599212646484
    8. ' ' → logprob: -10.180599212646484
    9. '  ' → logprob: -10.680599212646484
    10. 'entre' → logprob: -10.805599212646484

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004078878089785576
    2. '=' → logprob: -5.5040788650512695
    3. '_' → logprob: -15.75407886505127
    4. ' ' → logprob: -16.504079818725586
    5. '_=' → logprob: -17.129079818725586
    6. '  ' → logprob: -17.254079818725586
    7. '()' → logprob: -17.379079818725586
    8. '   ' → logprob: -17.629079818725586
    9. ' =
' → logprob: -18.004079818725586
    10. ' ' → logprob: -18.379079818725586

Token 118: ' lire' (ID: 46082)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11012367159128189
    2. ' lire' → logprob: -2.360123634338379
    3. ' input' → logprob: -5.360123634338379
    4. 'input' → logprob: -5.485123634338379
    5. ' l' → logprob: -6.985123634338379
    6. '   ' → logprob: -10.485123634338379
    7. 'Lire' → logprob: -11.110123634338379
    8. ' ' → logprob: -11.610123634338379
    9. '	l' → logprob: -11.610123634338379
    10. 'lir' → logprob: -11.985123634338379

Token 119: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.0005787697155028582
    2. '_' → logprob: -7.500578880310059
    3. 'ent' → logprob: -10.625578880310059
    4. '_entropy' → logprob: -14.375578880310059
    5. '_ENT' → logprob: -14.500578880310059
    6. '(ent' → logprob: -15.875578880310059
    7. '_et' → logprob: -16.750577926635742
    8. 'Ent' → logprob: -16.875577926635742
    9. '	ent' → logprob: -17.125577926635742
    10. '_en' → logprob: -17.375577926635742

Token 120: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.0021029175259172916
    2. 'tee' → logprob: -6.377102851867676
    3. 'ee' → logprob: -9.252102851867676
    4. 'ete' → logprob: -9.627102851867676
    5. 'tree' → logprob: -10.002102851867676
    6. 're' → logprob: -10.127102851867676
    7. 'tre' → logprob: -10.502102851867676
    8. '_' → logprob: -10.752102851867676
    9. 'te' → logprob: -10.877102851867676
    10. 't' → logprob: -11.127102851867676

Token 121: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2351936250925064
    2. '
' → logprob: -1.7351936101913452
    3. '    
' → logprob: -3.9851937294006348
    4. 'val' → logprob: -5.235193729400635
    5. '<|end|>' → logprob: -5.235193729400635
    6. '  
' → logprob: -6.610193729400635
    7. '()' → logprob: -7.860193729400635
    8. '
' → logprob: -8.235193252563477
    9. '   
' → logprob: -8.360193252563477
    10. '  ' → logprob: -8.360193252563477

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02125846967101097
    2. 'val' → logprob: -3.8962583541870117
    3. '    
' → logprob: -7.896258354187012
    4. ' val' → logprob: -8.646258354187012
    5. '	val' → logprob: -9.521258354187012
    6. ' valeurs' → logprob: -10.021258354187012
    7. '   ' → logprob: -11.271258354187012
    8. '
' → logprob: -11.646258354187012
    9. ' ' → logprob: -11.896258354187012
    10. 'vals' → logprob: -12.396258354187012

Token 123: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00012130453251302242
    2. '   ' → logprob: -9.500121116638184
    3. ' valeurs' → logprob: -10.625121116638184
    4. ' val' → logprob: -11.500121116638184
    5. 'vals' → logprob: -12.250121116638184
    6. 'values' → logprob: -12.625121116638184
    7. ' ' → logprob: -13.125121116638184
    8. '    
' → logprob: -14.750121116638184
    9. '```' → logprob: -14.875121116638184
    10. '	val' → logprob: -15.250121116638184

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013261953135952353
    2. '=' → logprob: -6.626326084136963
    3. ' ' → logprob: -16.251325607299805
    4. '_' → logprob: -16.376325607299805
    5. ' ' → logprob: -17.126325607299805
    6. ')' → logprob: -18.126325607299805
    7. '	' → logprob: -18.876325607299805
    8. 's' → logprob: -19.001325607299805
    9. ',' → logprob: -19.501325607299805
    10. '.' → logprob: -19.751325607299805

Token 125: ' parser' (ID: 14216)
  Prédit: ' parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parser' → logprob: -0.005930101033300161
    2. 'parser' → logprob: -5.130929946899414
    3. '(parser' → logprob: -14.505929946899414
    4. '	parser' → logprob: -14.505929946899414
    5. '_parser' → logprob: -15.630929946899414
    6. '.parser' → logprob: -15.880929946899414
    7. ' ' → logprob: -17.005929946899414
    8. ' ' → logprob: -17.255929946899414
    9. ' parse' → logprob: -17.630929946899414
    10. 'parse' → logprob: -17.630929946899414

Token 126: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -1.4498052223643754e-05
    2. '_' → logprob: -11.625014305114746
    3. 'ent' → logprob: -12.500014305114746
    4. '(ent' → logprob: -13.250014305114746
    5. '_enter' → logprob: -17.625015258789062
    6. '_entropy' → logprob: -18.000015258789062
    7. '	ent' → logprob: -18.250015258789062
    8. '_ENT' → logprob: -18.500015258789062
    9. '_et' → logprob: -19.250015258789062
    10. '_en' → logprob: -19.625015258789062

Token 127: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.0031518118921667337
    2. 'ee' → logprob: -5.878151893615723
    3. 're' → logprob: -8.128151893615723
    4. 'e' → logprob: -11.253151893615723
    5. 'ent' → logprob: -12.253151893615723
    6. 'tre' → logprob: -12.378151893615723
    7. 'tee' → logprob: -12.503151893615723
    8. '_' → logprob: -12.753151893615723
    9. 'rée' → logprob: -12.878151893615723
    10. 'rees' → logprob: -13.253151893615723

Token 128: '(ent' (ID: 112928)
  Prédit: '(ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ent' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.375
    3. ' (' → logprob: -16.75
    4. '(en' → logprob: -18.0
    5. 'ent' → logprob: -18.625
    6. '(et' → logprob: -18.875
    7. '_ent' → logprob: -19.375
    8. '(val' → logprob: -19.75
    9. '	ent' → logprob: -19.75
    10. ' ent' → logprob: -20.125

Token 129: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.002445454243570566
    2. 're' → logprob: -6.502445220947266
    3. 'ee' → logprob: -7.127445220947266
    4. 'rée' → logprob: -10.002445220947266
    5. 'e' → logprob: -10.127445220947266
    6. 'ée' → logprob: -10.252445220947266
    7. 'rees' → logprob: -11.377445220947266
    8. 'rie' → logprob: -12.502445220947266
    9. ' ree' → logprob: -14.002445220947266
    10. 'ete' → logprob: -14.002445220947266

Token 130: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001203923486173153
    2. ')
' → logprob: -6.876204013824463
    3. '()' → logprob: -8.876203536987305
    4. '())' → logprob: -11.376203536987305
    5. '   ' → logprob: -11.501203536987305
    6. '()
' → logprob: -11.876203536987305
    7. ')
' → logprob: -13.626203536987305
    8. ' )' → logprob: -14.126203536987305
    9. '())
' → logprob: -14.876203536987305
    10. ' ' → logprob: -15.501203536987305

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026629313360899687
    2. 'a' → logprob: -6.1276631355285645
    3. '    
' → logprob: -7.8776631355285645
    4. ' a' → logprob: -9.752662658691406
    5. '
' → logprob: -10.752662658691406
    6. '	a' → logprob: -12.127662658691406
    7. ' ' → logprob: -12.877662658691406
    8. '```' → logprob: -13.002662658691406
    9. '    ' → logprob: -13.252662658691406
    10. '   ' → logprob: -13.377662658691406

Token 132: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0006800267728976905
    2. '   ' → logprob: -7.875679969787598
    3. ' a' → logprob: -8.125679969787598
    4. ' ' → logprob: -13.375679969787598
    5. '    
' → logprob: -13.625679969787598
    6. '	a' → logprob: -14.875679969787598
    7. '  ' → logprob: -15.000679969787598
    8. '```' → logprob: -15.000679969787598
    9. '
' → logprob: -16.250680923461914
    10. '[a' → logprob: -16.375680923461914

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002205828350270167
    2. ' ,' → logprob: -8.75022029876709
    3. ' =' → logprob: -9.75022029876709
    4. '=' → logprob: -13.25022029876709
    5. ',b' → logprob: -13.62522029876709
    6. 's' → logprob: -15.00022029876709
    7. ' ' → logprob: -15.62522029876709
    8. 'a' → logprob: -16.000221252441406
    9. '_,' → logprob: -16.125221252441406
    10. ',a' → logprob: -17.125221252441406

Token 134: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.007134697865694761
    2. 'b' → logprob: -5.257134914398193
    3. '<|end|>' → logprob: -6.507134914398193
    4. ' ' → logprob: -8.007134437561035
    5. ' ' → logprob: -9.757134437561035
    6. '<|end|>' → logprob: -12.632134437561035
    7. ' ' → logprob: -13.382134437561035
    8. ' ‌' → logprob: -13.882134437561035
    9. ')' → logprob: -13.882134437561035
    10. '_' → logprob: -14.132134437561035

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715370807796717
    2. '=' → logprob: -5.006715297698975
    3. ')' → logprob: -17.131715774536133
    4. ' ' → logprob: -19.006715774536133
    5. '   ' → logprob: -19.006715774536133
    6. ' =)' → logprob: -19.381715774536133
    7. '  ' → logprob: -19.881715774536133
    8. ',' → logprob: -20.131715774536133
    9. '	' → logprob: -20.131715774536133
    10. ' =
' → logprob: -20.256715774536133

Token 136: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.00026264708139933646
    2. 'convert' → logprob: -8.250262260437012
    3. 'converter' → logprob: -14.750262260437012
    4. ' convert' → logprob: -15.000262260437012
    5. ' ' → logprob: -15.500262260437012
    6. 'con' → logprob: -16.125263214111328
    7. ' ' → logprob: -16.125263214111328
    8. ' converter' → logprob: -16.875263214111328
    9. '   ' → logprob: -17.000263214111328
    10. '  ' → logprob: -17.750263214111328

Token 137: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '_val' → logprob: -14.875
    3. ' _' → logprob: -18.0
    4. 's' → logprob: -18.125
    5. '_v' → logprob: -18.5
    6. '```' → logprob: -18.75
    7. 'val' → logprob: -19.0
    8. '_vals' → logprob: -19.25
    9. '_vel' → logprob: -19.75
    10. '‌' → logprob: -19.75

Token 138: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.14632734656333923
    2. '_' → logprob: -2.021327257156372
    3. 'val' → logprob: -5.771327495574951
    4. '_val' → logprob: -8.521327018737793
    5. 'int' → logprob: -8.896327018737793
    6. ' vers' → logprob: -9.146327018737793
    7. '_int' → logprob: -10.396327018737793
    8. 'vals' → logprob: -11.396327018737793
    9. '_ent' → logprob: -12.396327018737793
    10. ' ' → logprob: -12.396327018737793

Token 139: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -7.505351095460355e-05
    2. 'int' → logprob: -9.500075340270996
    3. ' int' → logprob: -17.00007438659668
    4. '_ent' → logprob: -17.50007438659668
    5. '_' → logprob: -19.12507438659668
    6. '_val' → logprob: -19.75007438659668
    7. 'Int' → logprob: -20.00007438659668
    8. '_in' → logprob: -21.00007438659668
    9. '<int' → logprob: -21.37507438659668
    10. '_INT' → logprob: -21.75007438659668

Token 140: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -1.981667537620524e-06
    2. ' (' → logprob: -13.250001907348633
    3. '[val' → logprob: -17.125001907348633
    4. '(vals' → logprob: -17.625001907348633
    5. 'val' → logprob: -17.875001907348633
    6. '(' → logprob: -18.250001907348633
    7. ',val' → logprob: -18.625001907348633
    8. '(valor' → logprob: -19.500001907348633
    9. ' ' → logprob: -20.875001907348633
    10. ' val' → logprob: -21.000001907348633

Token 141: 'eurs' (ID: 17634)
  Prédit: 'eurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -5.512236498361744e-07
    2. 'e' → logprob: -15.500000953674316
    3. 'uers' → logprob: -16.125
    4. 'ers' → logprob: -16.25
    5. 'eur' → logprob: -17.0
    6. 'leurs' → logprob: -17.125
    7. 'eux' → logprob: -18.75
    8. 'eus' → logprob: -18.875
    9. 'reurs' → logprob: -19.0
    10. 'urs' → logprob: -20.375

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018190208822488785
    2. ')
' → logprob: -4.018190383911133
    3. ')
' → logprob: -10.393190383911133
    4. '   ' → logprob: -12.268190383911133
    5. '()' → logprob: -12.893190383911133
    6. ')

' → logprob: -13.393190383911133
    7. ' )' → logprob: -15.143190383911133
    8. '())' → logprob: -15.893190383911133
    9. ' ' → logprob: -16.143190383911133
    10. '())
' → logprob: -16.268190383911133

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1932479739189148
    2. 'gap' → logprob: -1.8182480335235596
    3. ' gap' → logprob: -4.3182477951049805
    4. '    
' → logprob: -10.94324779510498
    5. '  ' → logprob: -11.31824779510498
    6. '   ' → logprob: -11.44324779510498
    7. '_gap' → logprob: -11.44324779510498
    8. ' ' → logprob: -11.69324779510498
    9. '```' → logprob: -11.69324779510498
    10. 'g' → logprob: -12.19324779510498

Token 144: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' (adapté à ' gap') → logprob: -0.00038455575122497976
    2. ' gap' → logprob: -7.875384330749512
    3. '   ' → logprob: -12.750384330749512
    4. 'result' → logprob: -13.500384330749512
    5. 'g' → logprob: -16.625385284423828
    6. '    
' → logprob: -17.875385284423828
    7. '```' → logprob: -17.875385284423828
    8. '_gap' → logprob: -18.000385284423828
    9. ' ' → logprob: -18.250385284423828
    10. '
' → logprob: -18.375385284423828

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006396461394615471
    2. '=' → logprob: -7.37563943862915
    3. '_' → logprob: -11.250639915466309
    4. ' ' → logprob: -17.375638961791992
    5. ' ' → logprob: -17.500638961791992
    6. '   ' → logprob: -18.500638961791992
    7. ')' → logprob: -18.500638961791992
    8. '	' → logprob: -19.375638961791992
    9. ',' → logprob: -19.625638961791992
    10. '_=' → logprob: -19.625638961791992

Token 146: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.38692107796669006
    2. 'calcul' → logprob: -1.1369210481643677
    3. ' calcular' → logprob: -10.511920928955078
    4. 'cal' → logprob: -11.136920928955078
    5. ' ' → logprob: -13.761920928955078
    6. '   ' → logprob: -13.761920928955078
    7. ' calculating' → logprob: -14.011920928955078
    8. '	cal' → logprob: -14.011920928955078
    9. 'calc' → logprob: -14.136920928955078
    10. 'Calcul' → logprob: -14.386920928955078

Token 147: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -17.125
    3. 'uer' → logprob: -17.375
    4. 'rer' → logprob: -17.375
    5. '```' → logprob: -17.625
    6. 'e' → logprob: -18.0
    7. 'uler' → logprob: -18.125
    8. 'ler' → logprob: -18.25
    9. '[' → logprob: -18.25
    10. '_er' → logprob: -18.5

Token 148: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.000006675720215
    3. 'gap' → logprob: -17.5000057220459
    4. '_g' → logprob: -17.6250057220459
    5. ' gap' → logprob: -20.3750057220459
    6. '_ga' → logprob: -20.3750057220459
    7. ' _' → logprob: -21.6250057220459
    8. '\' → logprob: -21.7500057220459
    9. '_
' → logprob: -22.0000057220459
    10. '_gate' → logprob: -22.3750057220459

Token 149: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -11.875006675720215
    3. ' (' → logprob: -17.37500762939453
    4. 'a' → logprob: -18.50000762939453
    5. '(
' → logprob: -19.62500762939453
    6. '(g' → logprob: -19.75000762939453
    7. '(b' → logprob: -21.00000762939453
    8. '\(' → logprob: -21.12500762939453
    9. '(A' → logprob: -21.12500762939453
    10. '_gap' → logprob: -21.12500762939453

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.286852345103398e-05
    2. ',b' → logprob: -10.125042915344238
    3. ' ,' → logprob: -13.250042915344238
    4. 'b' → logprob: -14.375042915344238
    5. ',
' → logprob: -15.125042915344238
    6. ',

' → logprob: -17.875041961669922
    7. '，' → logprob: -18.375041961669922
    8. ',
' → logprob: -18.625041961669922
    9. ')' → logprob: -18.750041961669922
    10. ' b' → logprob: -18.750041961669922

Token 151: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141352713108063
    2. ' b' → logprob: -1.7014135122299194
    3. '   ' → logprob: -16.576414108276367
    4. ' ' → logprob: -16.576414108276367
    5. '	b' → logprob: -16.826414108276367
    6. ')b' → logprob: -17.451414108276367
    7. ')' → logprob: -17.826414108276367
    8. ' ' → logprob: -18.076414108276367
    9. ' б' → logprob: -19.513914108276367
    10. '  ' → logprob: -19.576414108276367

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011136958375573158
    2. ')
' → logprob: -4.511137008666992
    3. ')
' → logprob: -9.511137008666992
    4. '   ' → logprob: -11.261137008666992
    5. ')

' → logprob: -13.511137008666992
    6. ' )' → logprob: -14.761137008666992
    7. ' ' → logprob: -15.511137008666992
    8. ' )
' → logprob: -17.386137008666992
    9. ')`' → logprob: -17.386137008666992
    10. ')

' → logprob: -17.636137008666992

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03471041098237038
    2. 'if' → logprob: -3.90971040725708
    3. 'result' → logprob: -5.03471040725708
    4. 'aff' → logprob: -5.40971040725708
    5. ' if' → logprob: -6.03471040725708
    6. '    
' → logprob: -8.784710884094238
    7. ' afficher' → logprob: -9.034710884094238
    8. ' result' → logprob: -9.159710884094238
    9. 'est' → logprob: -9.409710884094238
    10. '  ' → logprob: -9.909710884094238

Token 154: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7332003116607666
    2. 'result' → logprob: -1.3582003116607666
    3. 'aff' → logprob: -1.4832003116607666
    4. '   ' → logprob: -3.6082003116607666
    5. 'est' → logprob: -5.3582000732421875
    6. ' if' → logprob: -5.8582000732421875
    7. ' result' → logprob: -8.483200073242188
    8. ' afficher' → logprob: -8.733200073242188
    9. ' resultat' → logprob: -8.983200073242188
    10. 'Afficher' → logprob: -9.983200073242188

Token 155: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.023248156532645226
    2. 'est' → logprob: -3.7732481956481934
    3. '(est' → logprob: -12.898247718811035
    4. '   ' → logprob: -16.52324867248535
    5. '.est' → logprob: -17.52324867248535
    6. 'st' → logprob: -17.77324867248535
    7. '_est' → logprob: -17.89824867248535
    8. 'estim' → logprob: -18.14824867248535
    9. ' ' → logprob: -18.39824867248535
    10. ' not' → logprob: -18.39824867248535

Token 156: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -1.5048530030981055e-06
    2. 'gap' → logprob: -13.500001907348633
    3. '_' → logprob: -16.875001907348633
    4. ' gap' → logprob: -18.500001907348633
    5. '_g' → logprob: -19.500001907348633
    6. '__' → logprob: -21.625001907348633
    7. '\' → logprob: -21.875001907348633
    8. ' _' → logprob: -22.125001907348633
    9. '_gate' → logprob: -22.250001907348633
    10. 'Gap' → logprob: -22.250001907348633

Token 157: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.981667537620524e-06
    2. '_gap' → logprob: -14.125001907348633
    3. 'posit' → logprob: -14.250001907348633
    4. '_pos' → logprob: -14.750001907348633
    5. ' _' → logprob: -16.125001907348633
    6. '(' → logprob: -17.250001907348633
    7. '(_' → logprob: -17.375001907348633
    8. 's' → logprob: -17.625001907348633
    9. '_positive' → logprob: -18.000001907348633
    10. '_g' → logprob: -18.125001907348633

Token 158: 'posit' (ID: 2904)
  Prédit: 'posit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.250000953674316
    3. 'pos' → logprob: -18.125
    4. 'osit' → logprob: -19.0
    5. 'positivo' → logprob: -19.125
    6. ' positif' → logprob: -19.375
    7. 'positive' → logprob: -19.5
    8. 'POSIT' → logprob: -20.125
    9. 'pert' → logprob: -20.5
    10. '_pos' → logprob: -20.875

Token 159: 'if' (ID: 366)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0211380235850811
    2. 'if' → logprob: -3.8961379528045654
    3. 'u' → logprob: -8.021138191223145
    4. 'ef' → logprob: -9.771138191223145
    5. 'def' → logprob: -9.896138191223145
    6. ' f' → logprob: -10.521138191223145
    7. '_f' → logprob: -11.021138191223145
    8. 'uf' → logprob: -11.271138191223145
    9. 'fos' → logprob: -11.271138191223145
    10. 'ful' → logprob: -11.396138191223145

Token 160: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -7.465036105713807e-06
    2. ' (' → logprob: -12.000007629394531
    3. '(' → logprob: -13.625007629394531
    4. '(gr' → logprob: -18.00000762939453
    5. '(gt' → logprob: -18.12500762939453
    6. '(s' → logprob: -19.12500762939453
    7. '(f' → logprob: -19.75000762939453
    8. '(h' → logprob: -19.75000762939453
    9. ' ' → logprob: -20.62500762939453
    10. '(q' → logprob: -20.75000762939453

Token 161: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.2948405128554441e-05
    2. '(ap' → logprob: -12.12501335144043
    3. '_ap' → logprob: -13.62501335144043
    4. 'p' → logprob: -13.87501335144043
    5. '   ' → logprob: -14.37501335144043
    6. 'a' → logprob: -14.37501335144043
    7. ')' → logprob: -14.37501335144043
    8. 'ап' → logprob: -14.50001335144043
    9. 'gap' → logprob: -15.12501335144043
    10. '_' → logprob: -15.25001335144043

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003606244223192334
    2. '):
' → logprob: -6.37860631942749
    3. ' ):' → logprob: -6.50360631942749
    4. ')' → logprob: -8.378605842590332
    5. '(g' → logprob: -9.128605842590332
    6. '():' → logprob: -10.628605842590332
    7. '   ' → logprob: -11.378605842590332
    8. ':' → logprob: -12.003605842590332
    9. '):

' → logprob: -12.003605842590332
    10. '):
' → logprob: -12.378605842590332

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004681695718318224
    2. '"' → logprob: -6.254681587219238
    3. '   ' → logprob: -6.504681587219238
    4. ':' → logprob: -8.254681587219238
    5. '("' → logprob: -8.254681587219238
    6. '('' → logprob: -8.754681587219238
    7. ''' → logprob: -9.254681587219238
    8. '(' → logprob: -9.504681587219238
    9. ' afficher' → logprob: -9.504681587219238
    10. ' "' → logprob: -10.379681587219238

Token 164: ' afficher' (ID: 146524)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052416302263736725
    2. 'aff' → logprob: -3.5524163246154785
    3. ' afficher' → logprob: -4.1774163246154785
    4. '       ' → logprob: -5.6774163246154785
    5. '"' → logprob: -6.1774163246154785
    6. ''aff' → logprob: -7.5524163246154785
    7. '   ' → logprob: -7.9274163246154785
    8. 'Afficher' → logprob: -8.30241584777832
    9. '("' → logprob: -9.42741584777832
    10. ' "' → logprob: -9.92741584777832

Token 165: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.12500286102295
    3. 'result' → logprob: -14.37500286102295
    4. '_res' → logprob: -15.00000286102295
    5. '"_' → logprob: -17.000003814697266
    6. '_r' → logprob: -17.500003814697266
    7. '_RESULT' → logprob: -18.000003814697266
    8. ' resultat' → logprob: -18.250003814697266
    9. '_Result' → logprob: -18.250003814697266
    10. ' _' → logprob: -18.750003814697266

Token 166: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -4.961759259458631e-06
    2. 'er' → logprob: -13.125004768371582
    3. 't' → logprob: -13.875004768371582
    4. '_at' → logprob: -14.375004768371582
    5. 'ат' → logprob: -14.500004768371582
    6. '_result' → logprob: -15.500004768371582
    7. 'a' → logprob: -16.1250057220459
    8. 'result' → logprob: -16.5000057220459
    9. 'ats' → logprob: -16.5000057220459
    10. '_' → logprob: -16.6250057220459

Token 167: '(g' (ID: 7791)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10106579214334488
    2. '(g' → logprob: -2.3510658740997314
    3. '('' → logprob: -7.476065635681152
    4. '(' → logprob: -8.601065635681152
    5. '"' → logprob: -10.351065635681152
    6. '(True' → logprob: -10.851065635681152
    7. 'gap' → logprob: -11.101065635681152
    8. '("+' → logprob: -11.226065635681152
    9. '(f' → logprob: -11.851065635681152
    10. '(("' → logprob: -12.601065635681152

Token 168: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -5.157039049663581e-05
    2. 'gap' → logprob: -10.250051498413086
    3. ''ap' → logprob: -11.625051498413086
    4. '"' → logprob: -12.500051498413086
    5. 'a' → logprob: -14.000051498413086
    6. '(ap' → logprob: -14.375051498413086
    7. 'ап' → logprob: -14.875051498413086
    8. '`' → logprob: -15.250051498413086
    9. ' gap' → logprob: -15.625051498413086
    10. '_gap' → logprob: -15.750051498413086

Token 169: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023747354745864868
    2. ')' → logprob: -3.773747444152832
    3. '   ' → logprob: -7.898747444152832
    4. ')
' → logprob: -9.523747444152832
    5. ' )
' → logprob: -10.148747444152832
    6. '+' → logprob: -11.773747444152832
    7. ')

' → logprob: -12.898747444152832
    8. '*' → logprob: -13.648747444152832
    9. 'else' → logprob: -13.648747444152832
    10. ' )' → logprob: -13.773747444152832

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005003313068300486
    2. 'else' → logprob: -5.380003452301025
    3. ' else' → logprob: -7.880003452301025
    4. 'elif' → logprob: -13.630002975463867
    5. '    
' → logprob: -14.005002975463867
    6. '	else' → logprob: -14.380002975463867
    7. '```' → logprob: -15.130002975463867
    8. '    ' → logprob: -15.255002975463867
    9. '   ' → logprob: -15.255002975463867
    10. '<|end|>' → logprob: -15.255002975463867

Token 171: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08316678553819656
    2. ' else' → logprob: -2.5831668376922607
    3. '   ' → logprob: -5.458166599273682
    4. '	else' → logprob: -13.45816707611084
    5. 'elif' → logprob: -13.45816707611084
    6. '_else' → logprob: -13.45816707611084
    7. 'elser' → logprob: -14.08316707611084
    8. ' ' → logprob: -14.83316707611084
    9. '```' → logprob: -14.83316707611084
    10. '  ' → logprob: -15.58316707611084

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005242414306849241
    2. ':
' → logprob: -5.255242347717285
    3. '       ' → logprob: -12.505242347717285
    4. ' :' → logprob: -12.630242347717285
    5. '   ' → logprob: -13.630242347717285
    6. ' :
' → logprob: -15.130242347717285
    7. ':
' → logprob: -15.880242347717285
    8. ':

' → logprob: -16.6302433013916
    9. '=' → logprob: -18.2552433013916
    10. ',' → logprob: -18.3802433013916

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5777148008346558
    2. '   ' → logprob: -0.8277148008346558
    3. 'aff' → logprob: -6.952714920043945
    4. ' afficher' → logprob: -8.702714920043945
    5. '   ' → logprob: -8.952714920043945
    6. '0' → logprob: -9.077714920043945
    7. '    ' → logprob: -9.577714920043945
    8. 'print' → logprob: -9.577714920043945
    9. 'Afficher' → logprob: -9.952714920043945
    10. ':' → logprob: -10.202714920043945

Token 174: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16949810087680817
    2. 'aff' → logprob: -1.919498085975647
    3. '   ' → logprob: -5.669497966766357
    4. ' print' → logprob: -6.044497966766357
    5. '0' → logprob: -6.169497966766357
    6. ' afficher' → logprob: -7.044497966766357
    7. 'pass' → logprob: -8.794498443603516
    8. '       ' → logprob: -9.794498443603516
    9. 'Afficher' → logprob: -9.919498443603516
    10. ' ' → logprob: -9.919498443603516

Token 175: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -6.76628842484206e-05
    2. '_' → logprob: -9.875067710876465
    3. 'result' → logprob: -11.750067710876465
    4. '_r' → logprob: -12.500067710876465
    5. '_res' → logprob: -12.625067710876465
    6. '_Result' → logprob: -14.625067710876465
    7. 's' → logprob: -15.375067710876465
    8. 'a' → logprob: -15.750067710876465
    9. '_RESULT' → logprob: -16.00006675720215
    10. '_results' → logprob: -16.50006675720215

Token 176: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -4.763666947837919e-05
    2. '_result' → logprob: -10.37504768371582
    3. 'result' → logprob: -12.25004768371582
    4. 'sat' → logprob: -12.62504768371582
    5. 'er' → logprob: -12.75004768371582
    6. 's' → logprob: -13.62504768371582
    7. 'es' → logprob: -13.62504768371582
    8. 't' → logprob: -13.75004768371582
    9. '_at' → logprob: -14.87504768371582
    10. 'st' → logprob: -15.25004768371582

Token 177: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014622829854488373
    2. '("' → logprob: -4.764622688293457
    3. '(abs' → logprob: -6.139622688293457
    4. '(-' → logprob: -6.514622688293457
    5. '('' → logprob: -6.764622688293457
    6. '(g' → logprob: -7.139622688293457
    7. '("")' → logprob: -8.889622688293457
    8. '0' → logprob: -9.514622688293457
    9. '("-' → logprob: -9.889622688293457
    10. '()' → logprob: -9.889622688293457

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1670408695936203
    2. '"' → logprob: -1.9170408248901367
    3. ''' → logprob: -6.167040824890137
    4. '-' → logprob: -7.042040824890137
    5. ' ' → logprob: -7.167040824890137
    6. '"-' → logprob: -7.167040824890137
    7. 'abs' → logprob: -7.167040824890137
    8. 'gap' → logprob: -7.792040824890137
    9. '   ' → logprob: -8.167040824890137
    10. ' "' → logprob: -8.917040824890137

Token 179: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.125005722045898
    3. ' )' → logprob: -16.2500057220459
    4. '))' → logprob: -16.5000057220459
    5. '())' → logprob: -16.8750057220459
    6. ')

' → logprob: -17.2500057220459
    7. '()' → logprob: -17.3750057220459
    8. ')`' → logprob: -18.8750057220459
    9. '')' → logprob: -19.1250057220459
    10. '```' → logprob: -19.3750057220459

Token 180: 'ob' (ID: 630)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6998851299285889
    2. 'ob' → logprob: -0.6998851299285889
    3. '
' → logprob: -5.449885368347168
    4. '<|end|>' → logprob: -7.699885368347168
    5. ' if' → logprob: -7.949885368347168
    6. 'ent' → logprob: -8.199885368347168
    7. '    
' → logprob: -8.199885368347168
    8. '```' → logprob: -8.199885368347168
    9. '  
' → logprob: -8.324885368347168
    10. '#' → logprob: -8.824885368347168

Token 181: 'tenir' (ID: 58324)
  Prédit: 'tenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tenir' → logprob: -1.2113979209971149e-05
    2. 'ten' → logprob: -11.500012397766113
    3. 't' → logprob: -13.875012397766113
    4. 'tir' → logprob: -14.250012397766113
    5. 'tern' → logprob: -16.125011444091797
    6. 'enir' → logprob: -16.250011444091797
    7. 'tin' → logprob: -16.625011444091797
    8. 'et' → logprob: -17.250011444091797
    9. 'ter' → logprob: -17.500011444091797
    10. 'tener' → logprob: -17.625011444091797

Token 182: '_et' (ID: 103440)
  Prédit: '_et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_et' → logprob: -0.03843400999903679
    2. '_' → logprob: -3.2884340286254883
    3. '_ent' → logprob: -8.163434028625488
    4. 'et' → logprob: -10.288434028625488
    5. '_er' → logprob: -10.413434028625488
    6. '_eth' → logprob: -10.913434028625488
    7. '()' → logprob: -12.913434028625488
    8. '_pet' → logprob: -13.163434028625488
    9. '_e' → logprob: -13.538434028625488
    10. '_t' → logprob: -13.663434028625488

Token 183: '_aff' (ID: 115829)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.31487318873405457
    2. '_aff' → logprob: -1.314873218536377
    3. 'affer' → logprob: -7.564873218536377
    4. 'Afficher' → logprob: -7.814873218536377
    5. 'aller' → logprob: -9.064872741699219
    6. 'af' → logprob: -9.564872741699219
    7. '_f' → logprob: -9.689872741699219
    8. 'abler' → logprob: -9.939872741699219
    9. ' afficher' → logprob: -10.189872741699219
    10. '-aff' → logprob: -10.314872741699219

Token 184: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -8.53050296427682e-05
    2. 'cher' → logprob: -9.62508487701416
    3. '_' → logprob: -12.00008487701416
    4. 'ich' → logprob: -12.37508487701416
    5. 'acher' → logprob: -12.87508487701416
    6. 'i' → logprob: -13.87508487701416
    7. '
' → logprob: -14.12508487701416
    8. '

' → logprob: -14.37508487701416
    9. 'ichage' → logprob: -14.37508487701416
    10. 'ic' → logprob: -14.50008487701416

Token 185: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -7.703443770878948e-06
    2. '_' → logprob: -12.000007629394531
    3. '_g' → logprob: -14.000007629394531
    4. 'gap' → logprob: -15.000007629394531
    5. '_gp' → logprob: -16.75000762939453
    6. '_gain' → logprob: -17.12500762939453
    7. '_ga' → logprob: -17.25000762939453
    8. ' gap' → logprob: -17.37500762939453
    9. '(_' → logprob: -17.62500762939453
    10. '()' → logprob: -18.00000762939453

Token 186: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -12.375009536743164
    3. '()
' → logprob: -12.500009536743164
    4. ' ()' → logprob: -14.125009536743164
    5. '()

' → logprob: -15.500009536743164
    6. '()`' → logprob: -17.000009536743164
    7. '()"' → logprob: -17.000009536743164
    8. '()<' → logprob: -17.375009536743164
    9. '();' → logprob: -17.500009536743164
    10. '()
' → logprob: -17.750009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 184
Tokens correctement prédits (1ère position, stricte): 104
Tokens correctement prédits (1ère position, avec adaptation): 112
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 56.52%
Précision adaptée (1ère position): 60.87%
Précision (top 10): 88.59%
================================================================================
