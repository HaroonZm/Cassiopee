================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

n = int(input())
# Je vais stocker les données dans deux listes différentes
s_ls = []
t_ls = []

for j in range(n):
    temp = sys.stdin.readline().split()  # Bon, c'est comme ça qu'on fait
    s = temp[0]
    # normalement il vaut mieux utiliser try/except mais bon, ici on suppose que tout va bien :)
    t_ls.append(int(temp[1]))
    s_ls.append(s)

cherche = input()

indx = s_ls.index(cherche) + 1

# Sum des temps à partir du suivant
resultat = sum(t_ls[indx:]) # j'espère ne pas dépasser la liste
print(resultat)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18650174140930176
    2. '\n' → logprob: -2.1865017414093018
    3. 'import' → logprob: -3.4365017414093018
    4. '<|end|>' → logprob: -4.936501502990723
    5. '' → logprob: -5.811501502990723
    6. 'newline' → logprob: -5.936501502990723
    7. '\' → logprob: -6.061501502990723
    8. 'print' → logprob: -6.436501502990723
    9. '[' → logprob: -6.561501502990723
    10. '<|end|>' → logprob: -6.811501502990723

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6679863333702087
    2. '.' → logprob: -1.5429863929748535
    3. ' ' → logprob: -2.4179863929748535
    4. ' =' → logprob: -2.5429863929748535
    5. '_' → logprob: -2.7929863929748535
    6. 'u' → logprob: -4.1679863929748535
    7. 'e' → logprob: -4.2929863929748535
    8. ',' → logprob: -5.9179863929748535
    9. ')' → logprob: -6.1679863929748535
    10. 'a' → logprob: -6.2929863929748535

Token 5: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01630355976521969
    2. ' ' → logprob: -4.391303539276123
    3. 'int' → logprob: -5.641303539276123
    4. ' input' → logprob: -8.516304016113281
    5. '10' → logprob: -11.266304016113281
    6. 'input' → logprob: -11.891304016113281
    7. '=int' → logprob: -12.141304016113281
    8. ' len' → logprob: -12.891304016113281
    9. ' "' → logprob: -13.391304016113281
    10. '1' → logprob: -13.516304016113281

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.431207682704553e-05
    2. '('' → logprob: -10.500054359436035
    3. ' (' → logprob: -12.125054359436035
    4. '(sys' → logprob: -12.375054359436035
    5. '()' → logprob: -12.500054359436035
    6. '(
' → logprob: -12.500054359436035
    7. '(n' → logprob: -13.375054359436035
    8. ''' → logprob: -13.625054359436035
    9. '("("' → logprob: -13.875054359436035
    10. ' ' → logprob: -14.125054359436035

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06265551596879959
    2. ')' → logprob: -3.062655448913574
    3. '()' → logprob: -4.312655448913574
    4. '())' → logprob: -8.312655448913574
    5. '(
' → logprob: -9.187655448913574
    6. '('' → logprob: -9.562655448913574
    7. '(

' → logprob: -10.812655448913574
    8. '")' → logprob: -10.937655448913574
    9. ''' → logprob: -10.937655448913574
    10. '("("' → logprob: -11.187655448913574

Token 8: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03868783265352249
    2. 'if' → logprob: -3.5386879444122314
    3. ' for' → logprob: -6.288687705993652
    4. 'i' → logprob: -6.538687705993652
    5. 's' → logprob: -6.788687705993652
    6. 'data' → logprob: -7.163687705993652
    7. 'f' → logprob: -7.288687705993652
    8. ')' → logprob: -7.788687705993652
    9. 'a' → logprob: -7.788687705993652
    10. 'result' → logprob: -8.288687705993652

Token 9: ' Je' (ID: 4678)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4583662450313568
    2. 'for' → logprob: -1.2083662748336792
    3. ' for' → logprob: -2.8333661556243896
    4. '#' → logprob: -5.708366394042969
    5. '_' → logprob: -6.208366394042969
    6. 'if' → logprob: -6.833366394042969
    7. ' if' → logprob: -7.458366394042969
    8. ')' → logprob: -7.833366394042969
    9. '[' → logprob: -7.833366394042969
    10. 'i' → logprob: -8.083366394042969

Token 10: ' vais' (ID: 42975)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4537118971347809
    2. 'mp' → logprob: -2.578711986541748
    3. 'st' → logprob: -2.828711986541748
    4. 'm' → logprob: -3.203711986541748
    5. 'd' → logprob: -4.078711986541748
    6. '#' → logprob: -4.203711986541748
    7. 'ud' → logprob: -4.203711986541748
    8. 'n' → logprob: -4.328711986541748
    9. 'u' → logprob: -4.453711986541748
    10. 'r' → logprob: -4.453711986541748

Token 11: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3470979928970337
    2. ' continuer' → logprob: -3.097097873687744
    3. 'contin' → logprob: -3.222097873687744
    4. 'print' → logprob: -3.222097873687744
    5. ' print' → logprob: -3.347097873687744
    6. 's' → logprob: -4.222097873687744
    7. ' continue' → logprob: -4.597097873687744
    8. 'v' → logprob: -4.847097873687744
    9. ' #' → logprob: -4.972097873687744
    10. ' test' → logprob: -5.222097873687744

Token 12: 'er' (ID: 259)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0010579373920336366
    2. 'ur' → logprob: -8.126057624816895
    3. 'er' → logprob: -8.251057624816895
    4. 'u' → logprob: -8.876057624816895
    5. ' r' → logprob: -9.001057624816895
    6. '	r' → logprob: -9.751057624816895
    7. 'uer' → logprob: -10.376057624816895
    8. 'urer' → logprob: -10.751057624816895
    9. 'ter' → logprob: -10.751057624816895
    10. 'rer' → logprob: -10.751057624816895

Token 13: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06881310790777206
    2. ' ' → logprob: -3.3188130855560303
    3. '_l' → logprob: -4.318813323974609
    4. 'les' → logprob: -5.568813323974609
    5. 's' → logprob: -5.818813323974609
    6. ' les' → logprob: -6.443813323974609
    7. '_la' → logprob: -6.568813323974609
    8. ' _' → logprob: -6.818813323974609
    9. 'l' → logprob: -6.818813323974609
    10. '_s' → logprob: -7.068813323974609

Token 14: ' données' (ID: 30580)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.4162253439426422
    2. 'n' → logprob: -2.1662254333496094
    3. 'nombre' → logprob: -2.1662254333496094
    4. 'notes' → logprob: -3.7912254333496094
    5. 'élé' → logprob: -3.7912254333496094
    6. ' notes' → logprob: -4.166225433349609
    7. 'val' → logprob: -4.416225433349609
    8. 'é' → logprob: -5.541225433349609
    9. 'rés' → logprob: -5.791225433349609
    10. 'd' → logprob: -5.791225433349609

Token 15: ' dans' (ID: 2671)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6365413069725037
    2. ' ' → logprob: -1.5115413665771484
    3. 'd' → logprob: -2.3865413665771484
    4. ' data' → logprob: -2.6365413665771484
    5. '_' → logprob: -2.7615413665771484
    6. 's' → logprob: -4.636541366577148
    7. ' d' → logprob: -5.636541366577148
    8. 'datas' → logprob: -6.136541366577148
    9. 'don' → logprob: -6.511541366577148
    10. ' datas' → logprob: -6.636541366577148

Token 16: ' deux' (ID: 10301)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.8530070781707764
    2. 'un' → logprob: -1.3530070781707764
    3. ' un' → logprob: -1.4780070781707764
    4. ' une' → logprob: -3.2280070781707764
    5. 'd' → logprob: -3.9780070781707764
    6. 'des' → logprob: -5.2280073165893555
    7. 'a' → logprob: -5.2280073165893555
    8. 'le' → logprob: -5.2280073165893555
    9. ' des' → logprob: -5.7280073165893555
    10. 'la' → logprob: -5.7280073165893555

Token 17: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8742005228996277
    2. ' listes' → logprob: -0.9992005228996277
    3. 'd' → logprob: -1.8742005825042725
    4. 'lists' → logprob: -4.124200344085693
    5. ' diction' → logprob: -4.124200344085693
    6. 'dict' → logprob: -4.749200344085693
    7. 'liste' → logprob: -5.499200344085693
    8. ' list' → logprob: -5.749200344085693
    9. ' tableaux' → logprob: -5.999200344085693
    10. ' lists' → logprob: -6.124200344085693

Token 18: ' différentes' (ID: 41398)
  Prédit: 'names'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'names' → logprob: -1.4656422138214111
    2. 'a' → logprob: -2.215642213821411
    3. 'numbers' → logprob: -2.215642213821411
    4. 'data' → logprob: -2.715642213821411
    5. ',' → logprob: -2.715642213821411
    6. 's' → logprob: -3.090642213821411
    7. ' data' → logprob: -3.340642213821411
    8. 'n' → logprob: -3.340642213821411
    9. ':' → logprob: -3.590642213821411
    10. 'lst' → logprob: -3.840642213821411

Token 19: '
' (ID: 198)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5410380363464355
    2. 'a' → logprob: -2.0410380363464355
    3. 'l' → logprob: -2.1660380363464355
    4. ' data' → logprob: -3.9160380363464355
    5. '```' → logprob: -4.0410380363464355
    6. 's' → logprob: -4.1660380363464355
    7. 'numbers' → logprob: -4.1660380363464355
    8. 'names' → logprob: -4.4160380363464355
    9. ',' → logprob: -4.5410380363464355
    10. 'liste' → logprob: -4.5410380363464355

Token 20: 's' (ID: 82)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.043466567993164
    2. 'data' → logprob: -1.543466567993164
    3. 'numbers' → logprob: -1.918466567993164
    4. 'names' → logprob: -2.668466567993164
    5. 'lst' → logprob: -2.918466567993164
    6. 'nums' → logprob: -3.418466567993164
    7. 'l' → logprob: -3.793466567993164
    8. 'liste' → logprob: -3.793466567993164
    9. 'values' → logprob: -5.168466567993164
    10. 'list' → logprob: -5.168466567993164

Token 21: '_ls' (ID: 136088)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13344934582710266
    2. 'cores' → logprob: -3.6334493160247803
    3. 't' → logprob: -3.8834493160247803
    4. '_' → logprob: -4.133449554443359
    5. 'ales' → logprob: -4.258449554443359
    6. 'u' → logprob: -5.508449554443359
    7. ' =' → logprob: -5.758449554443359
    8. 'alary' → logprob: -5.883449554443359
    9. 'tring' → logprob: -6.133449554443359
    10. 'alar' → logprob: -6.133449554443359

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5939149856567383
    2. '_' → logprob: -1.8439149856567383
    3. '1' → logprob: -2.5939149856567383
    4. '=' → logprob: -2.8439149856567383
    5. 'tr' → logprob: -2.8439149856567383
    6. 'tring' → logprob: -3.5939149856567383
    7. 't' → logprob: -3.5939149856567383
    8. 'e' → logprob: -5.593914985656738
    9. 'p' → logprob: -5.718914985656738
    10. '_tr' → logprob: -5.843914985656738

Token 23: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12920910120010376
    2. ' []' → logprob: -2.129209041595459
    3. '[' → logprob: -6.254209041595459
    4. '[input' → logprob: -8.379209518432617
    5. ' [' → logprob: -9.629209518432617
    6. 'list' → logprob: -10.629209518432617
    7. '[list' → logprob: -11.629209518432617
    8. '[s' → logprob: -12.254209518432617
    9. '[]
' → logprob: -12.379209518432617
    10. '[str' → logprob: -12.629209518432617

Token 24: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.25207558274269104
    2. 'd' → logprob: -2.752075672149658
    3. 'p' → logprob: -3.002075672149658
    4. 'b' → logprob: -4.002075672149658
    5. 'v' → logprob: -4.002075672149658
    6. 'm' → logprob: -4.127075672149658
    7. 'for' → logprob: -4.502075672149658
    8. 'l' → logprob: -5.002075672149658
    9. 'a' → logprob: -5.002075672149658
    10. 'c' → logprob: -5.127075672149658

Token 25: '_ls' (ID: 136088)
  Prédit: '_ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ls' → logprob: -0.0004894073354080319
    2. 's' → logprob: -8.250489234924316
    3. '_s' → logprob: -9.250489234924316
    4. '_' → logprob: -9.500489234924316
    5. 'ls' → logprob: -10.750489234924316
    6. '_l' → logprob: -11.875489234924316
    7. '_lst' → logprob: -12.875489234924316
    8. 'a' → logprob: -12.875489234924316
    9. 'f' → logprob: -13.125489234924316
    10. 'emp' → logprob: -13.250489234924316

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08897719532251358
    2. '=' → logprob: -2.463977098464966
    3. '=[]' → logprob: -10.713976860046387
    4. '[]' → logprob: -12.338976860046387
    5. ' ' → logprob: -12.963976860046387
    6. '.' → logprob: -13.338976860046387
    7. '_' → logprob: -13.463976860046387
    8. 's' → logprob: -13.588976860046387
    9. ']' → logprob: -14.088976860046387
    10. ')' → logprob: -14.588976860046387

Token 27: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5759539604187012
    2. '[]' → logprob: -0.8259539604187012
    3. ' ' → logprob: -12.32595443725586
    4. '[]
' → logprob: -12.57595443725586
    5. '[' → logprob: -13.20095443725586
    6. '[]}' → logprob: -13.32595443725586
    7. ' []
' → logprob: -14.20095443725586
    8. '0' → logprob: -14.95095443725586
    9. '[int' → logprob: -15.20095443725586
    10. '([]' → logprob: -15.45095443725586

Token 28: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020532844064291567
    2. ' for' → logprob: -8.625205039978027
    3. '
' → logprob: -10.625205039978027
    4. '```' → logprob: -14.375205039978027
    5. '<|end|>' → logprob: -15.125205039978027
    6. 'n' → logprob: -15.875205039978027
    7. 'For' → logprob: -15.875205039978027
    8. 's' → logprob: -16.625205993652344
    9. '\n' → logprob: -17.125205993652344
    10. 'f' → logprob: -17.375205993652344

Token 29: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4882246255874634
    2. ' _' → logprob: -1.2382246255874634
    3. ' i' → logprob: -2.363224506378174
    4. '_' → logprob: -6.613224506378174
    5. ' n' → logprob: -7.988224506378174
    6. '  ' → logprob: -8.113224983215332
    7. ' ' → logprob: -8.738224983215332
    8. 'i' → logprob: -10.613224983215332
    9. ' line' → logprob: -10.738224983215332
    10. ' s' → logprob: -10.738224983215332

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03662663325667381
    2. ' ' → logprob: -3.7866265773773193
    3. 'in' → logprob: -4.411626815795898
    4. '_' → logprob: -7.661626815795898
    5. 'n' → logprob: -8.036626815795898
    6. '  ' → logprob: -8.411626815795898
    7. ' i' → logprob: -9.786626815795898
    8. ' n' → logprob: -10.911626815795898
    9. ' _' → logprob: -11.036626815795898
    10. 'range' → logprob: -11.411626815795898

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012515772134065628
    2. 'range' → logprob: -4.387515544891357
    3. ' ' → logprob: -12.512516021728516
    4. '	range' → logprob: -14.387516021728516
    5. ' s' → logprob: -15.637516021728516
    6. '```' → logprob: -15.637516021728516
    7. ' xrange' → logprob: -15.637516021728516
    8. 'n' → logprob: -15.637516021728516
    9. '  ' → logprob: -15.762516021728516
    10. ' rang' → logprob: -15.762516021728516

Token 32: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014334732666611671
    2. '(n' → logprob: -4.264334678649902
    3. ' (' → logprob: -8.764334678649902
    4. '(
' → logprob: -12.389334678649902
    5. '(len' → logprob: -12.514334678649902
    6. '(range' → logprob: -12.889334678649902
    7. '(s' → logprob: -13.014334678649902
    8. '(

' → logprob: -13.764334678649902
    9. '()' → logprob: -15.264334678649902
    10. '(int' → logprob: -15.389334678649902

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008206852711737156
    2. ')' → logprob: -4.883206844329834
    3. ' ):' → logprob: -7.633206844329834
    4. ':' → logprob: -9.758207321166992
    5. '+' → logprob: -10.258207321166992
    6. '):
' → logprob: -11.008207321166992
    7. ' )' → logprob: -12.508207321166992
    8. ' :' → logprob: -14.508207321166992
    9. ',' → logprob: -14.633207321166992
    10. '():' → logprob: -14.883207321166992

Token 34: '   ' (ID: 271)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5761407613754272
    2. '    ' → logprob: -1.4511407613754272
    3. ' ' → logprob: -2.201140880584717
    4. '     
' → logprob: -3.326140880584717
    5. '   ' → logprob: -3.701140880584717
    6. 's' → logprob: -5.076140880584717
    7. ' input' → logprob: -5.576140880584717
    8. '    
' → logprob: -5.576140880584717
    9. ' ,' → logprob: -5.951140880584717
    10. 'input' → logprob: -6.201140880584717

Token 35: ' temp' (ID: 5484)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6668688058853149
    2. ' line' → logprob: -1.541868805885315
    3. ' data' → logprob: -1.791868805885315
    4. 's' → logprob: -2.5418686866760254
    5. 'data' → logprob: -4.166868686676025
    6. 'line' → logprob: -5.791868686676025
    7. ' parts' → logprob: -6.666868686676025
    8. ' ligne' → logprob: -6.666868686676025
    9. 'x' → logprob: -6.791868686676025
    10. ' x' → logprob: -6.916868686676025

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5320236086845398
    2. '_' → logprob: -1.7820236682891846
    3. '_s' → logprob: -2.1570236682891846
    4. '_input' → logprob: -3.0320236682891846
    5. '=' → logprob: -3.6570236682891846
    6. '_data' → logprob: -3.6570236682891846
    7. '_str' → logprob: -4.4070234298706055
    8. '_line' → logprob: -5.1570234298706055
    9. 's' → logprob: -5.9070234298706055
    10. ' _' → logprob: -6.6570234298706055

Token 37: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3539474606513977
    2. ' input' → logprob: -1.228947401046753
    3. 'list' → logprob: -6.103947639465332
    4. 'int' → logprob: -6.353947639465332
    5. ' list' → logprob: -7.228947639465332
    6. ' sys' → logprob: -8.228947639465332
    7. 'sys' → logprob: -8.353947639465332
    8. ' int' → logprob: -8.853947639465332
    9. '[input' → logprob: -10.353947639465332
    10. 'str' → logprob: -10.603947639465332

Token 38: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003335585934109986
    2. '.' → logprob: -8.375333786010742
    3. '.argv' → logprob: -9.375333786010742
    4. '.stdout' → logprob: -11.125333786010742
    5. '.readline' → logprob: -13.000333786010742
    6. '.std' → logprob: -15.000333786010742
    7. '.stderr' → logprob: -15.250333786010742
    8. '.st' → logprob: -15.250333786010742
    9. '.input' → logprob: -15.500333786010742
    10. '.exit' → logprob: -17.000333786010742

Token 39: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.3425219549390022e-05
    2. '.' → logprob: -11.87501335144043
    3. '.readlines' → logprob: -12.12501335144043
    4. ' readline' → logprob: -13.87501335144043
    5. '.read' → logprob: -16.62501335144043
    6. 'read' → logprob: -18.12501335144043
    7. '```' → logprob: -19.75001335144043
    8. ' .' → logprob: -21.00001335144043
    9. '_read' → logprob: -21.50001335144043
    10. '​' → logprob: -21.87501335144043

Token 40: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.693177342414856
    2. '().' → logprob: -0.693177342414856
    3. '(' → logprob: -11.068177223205566
    4. '())' → logprob: -11.818177223205566
    5. '()).' → logprob: -13.443177223205566
    6. ' ()' → logprob: -13.693177223205566
    7. '.strip' → logprob: -13.943177223205566
    8. '()`' → logprob: -14.193177223205566
    9. '（）' → logprob: -14.443177223205566
    10. ' ().' → logprob: -14.693177223205566

Token 41: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10021863132715225
    2. 'rstrip' → logprob: -2.3502185344696045
    3. 'split' → logprob: -11.350218772888184
    4. ' strip' → logprob: -16.600217819213867
    5. 'rs' → logprob: -16.600217819213867
    6. 'replace' → logprob: -16.975217819213867
    7. 'rst' → logprob: -17.850217819213867
    8. '.rstrip' → logprob: -18.475217819213867
    9. 'r' → logprob: -19.600217819213867
    10. 'str' → logprob: -19.600217819213867

Token 42: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11922664940357208
    2. '(' → logprob: -2.6192266941070557
    3. '('' → logprob: -3.2442266941070557
    4. '("("' → logprob: -8.119226455688477
    5. '())' → logprob: -9.244226455688477
    6. '("' → logprob: -9.244226455688477
    7. '()]' → logprob: -11.619226455688477
    8. ')' → logprob: -12.494226455688477
    9. '(',' → logprob: -12.619226455688477
    10. '(
' → logprob: -12.619226455688477

Token 43: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9762356281280518
    2. '<|end|>' → logprob: -1.1012356281280518
    3. ' ' → logprob: -2.3512356281280518
    4. '[' → logprob: -2.9762356281280518
    5. ')' → logprob: -3.7262356281280518
    6. '(' → logprob: -3.7262356281280518
    7. '()' → logprob: -3.8512356281280518
    8. 't' → logprob: -4.226235389709473
    9. '  ' → logprob: -4.726235389709473
    10. '   ' → logprob: -4.976235389709473

Token 45: ' Bon' (ID: 12658)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27015480399131775
    2. 't' → logprob: -1.5201548337936401
    3. ' t' → logprob: -5.02015495300293
    4. ' s' → logprob: -5.27015495300293
    5. 'temp' → logprob: -5.39515495300293
    6. 'for' → logprob: -7.52015495300293
    7. 'if' → logprob: -7.64515495300293
    8. ' ' → logprob: -8.89515495300293
    9. ' for' → logprob: -9.52015495300293
    10. 'a' → logprob: -9.52015495300293

Token 46: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8693270087242126
    2. '<|end|>' → logprob: -0.8693270087242126
    3. '<|end|>' → logprob: -3.2443270683288574
    4. '    ' → logprob: -3.3693270683288574
    5. 'tokens' → logprob: -4.244327068328857
    6. '[' → logprob: -4.369327068328857
    7. '[]' → logprob: -4.869327068328857
    8. 'token' → logprob: -4.869327068328857
    9. 's' → logprob: -4.994327068328857
    10. '  ' → logprob: -4.994327068328857

Token 47: ' c' (ID: 274)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2939814329147339
    2. 'for' → logprob: -1.7939814329147339
    3. 't' → logprob: -2.4189815521240234
    4. ' for' → logprob: -2.6689815521240234
    5. ' ' → logprob: -2.7939815521240234
    6. ' s' → logprob: -3.1689815521240234
    7. 'cela' → logprob: -3.6689815521240234
    8. '<|end|>' → logprob: -3.9189815521240234
    9. ' if' → logprob: -4.043981552124023
    10. 'je' → logprob: -4.043981552124023

Token 48: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -1.0904912948608398
    2. ''' → logprob: -1.3404912948608398
    3. ' n' → logprob: -2.46549129486084
    4. 'est' → logprob: -3.21549129486084
    5. ' ' → logprob: -3.21549129486084
    6. ' '' → logprob: -3.34049129486084
    7. 'e' → logprob: -3.46549129486084
    8. '```' → logprob: -3.96549129486084
    9. '   ' → logprob: -4.21549129486084
    10. 'pas' → logprob: -4.21549129486084

Token 49: ' comme' (ID: 7971)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.337774634361267
    2. ' ' → logprob: -2.3377747535705566
    3. ' un' → logprob: -2.5877747535705566
    4. 'bien' → logprob: -2.5877747535705566
    5. 'une' → logprob: -2.7127747535705566
    6. 't' → logprob: -3.0877747535705566
    7. 'un' → logprob: -3.7127747535705566
    8. ' bien' → logprob: -3.9627747535705566
    9. 'pas' → logprob: -3.9627747535705566
    10. 'l' → logprob: -4.087774753570557

Token 50: ' ça' (ID: 13590)
  Prédit: ' ça'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ça' → logprob: -0.48397061228752136
    2. 'ça' → logprob: -1.2339706420898438
    3. 'cela' → logprob: -3.9839706420898438
    4. ' prévu' → logprob: -4.358970642089844
    5. 'avant' → logprob: -4.858970642089844
    6. ' ceci' → logprob: -4.983970642089844
    7. 'ici' → logprob: -5.358970642089844
    8. ' cela' → logprob: -5.608970642089844
    9. 'python' → logprob: -5.983970642089844
    10. 'd' → logprob: -6.233970642089844

Token 51: ' qu' (ID: 474)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ''on' (ID: 25812)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.43508702516555786
    2. ' on' → logprob: -1.560086965560913
    3. 'ça' → logprob: -2.435086965560913
    4. 'je' → logprob: -3.685086965560913
    5. ' je' → logprob: -5.060087203979492
    6. ' ça' → logprob: -5.435087203979492
    7. 'il' → logprob: -5.560087203979492
    8. 'tu' → logprob: -6.435087203979492
    9. ''on' → logprob: -6.435087203979492
    10. ' il' → logprob: -6.685087203979492

Token 53: ' fait' (ID: 7473)
  Prédit: ' fait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fait' → logprob: -0.9281416535377502
    2. 'fait' → logprob: -1.5531415939331055
    3. ' lit' → logprob: -1.9281415939331055
    4. 'do' → logprob: -3.0531415939331055
    5. 'lit' → logprob: -3.3031415939331055
    6. 'l' → logprob: -3.5531415939331055
    7. 'f' → logprob: -3.6781415939331055
    8. ' va' → logprob: -3.8031415939331055
    9. ' récup' → logprob: -3.9281415939331055
    10. ' peut' → logprob: -4.4281415939331055

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20810630917549133
    2. '<|end|>' → logprob: -2.083106279373169
    3. ' ' → logprob: -3.583106279373169
    4. ' s' → logprob: -4.208106517791748
    5. '   ' → logprob: -4.583106517791748
    6. '  ' → logprob: -6.333106517791748
    7. '    
' → logprob: -6.333106517791748
    8. ' 
' → logprob: -6.708106517791748
    9. '    ' → logprob: -7.083106517791748
    10. 't' → logprob: -7.333106517791748

Token 56: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.10061778873205185
    2. ' s' → logprob: -2.3506178855895996
    3. '   ' → logprob: -8.725617408752441
    4. 't' → logprob: -9.100617408752441
    5. '_s' → logprob: -9.975617408752441
    6. ' ' → logprob: -10.725617408752441
    7. '    ' → logprob: -11.350617408752441
    8. ' t' → logprob: -11.350617408752441
    9. ',' → logprob: -11.725617408752441
    10. '  ' → logprob: -12.100617408752441

Token 57: ' =' (ID: 314)
  Prédit: '_ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ls' → logprob: -8.983476436696947e-05
    2. '_' → logprob: -9.375089645385742
    3. '_s' → logprob: -13.625089645385742
    4. '_l' → logprob: -13.875089645385742
    5. '_lst' → logprob: -14.000089645385742
    6. '_lp' → logprob: -15.000089645385742
    7. '[' → logprob: -15.125089645385742
    8. '_li' → logprob: -15.250089645385742
    9. '_ll' → logprob: -15.500089645385742
    10. '[_' → logprob: -15.875089645385742

Token 58: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.02330942079424858
    2. 'temp' → logprob: -4.398309230804443
    3. ' int' → logprob: -4.648309230804443
    4. 'int' → logprob: -6.773309230804443
    5. ' str' → logprob: -11.523309707641602
    6. ' temps' → logprob: -12.398309707641602
    7. 'str' → logprob: -13.148309707641602
    8. '(temp' → logprob: -14.023309707641602
    9. ' tmp' → logprob: -14.398309707641602
    10. ' ' → logprob: -14.648309707641602

Token 59: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015574338613077998
    2. '0' → logprob: -9.375155448913574
    3. ' [' → logprob: -9.625155448913574
    4. '[-' → logprob: -13.125155448913574
    5. ' ' → logprob: -14.250155448913574
    6. '[int' → logprob: -14.625155448913574
    7. '[:-' → logprob: -15.000155448913574
    8. '[:' → logprob: -15.375155448913574
    9. '[
' → logprob: -15.375155448913574
    10. '```' → logprob: -15.375155448913574

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '1' → logprob: -14.87500286102295
    4. '۰' → logprob: -19.062501907348633
    5. '-' → logprob: -19.687501907348633
    6. '   ' → logprob: -20.000001907348633
    7. ']' → logprob: -20.125001907348633
    8. ')' → logprob: -20.250001907348633
    9. '０' → logprob: -20.250001907348633
    10. '```' → logprob: -20.375001907348633

Token 61: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00042209390085190535
    2. ' ]' → logprob: -7.87542200088501
    3. ']
' → logprob: -10.250422477722168
    4. '']' → logprob: -13.250422477722168
    5. '],' → logprob: -13.500422477722168
    6. ']

' → logprob: -13.500422477722168
    7. '"]' → logprob: -14.875422477722168
    8. ',' → logprob: -15.125422477722168
    9. ']
' → logprob: -15.125422477722168
    10. ' ' → logprob: -15.500422477722168

Token 62: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2806996703147888
    2. ' t' → logprob: -1.9056997299194336
    3. '   ' → logprob: -3.5306997299194336
    4. '    ' → logprob: -3.6556997299194336
    5. 't' → logprob: -3.6556997299194336
    6. ' s' → logprob: -5.655699729919434
    7. '<|end|>' → logprob: -5.905699729919434
    8. '	t' → logprob: -6.405699729919434
    9. ' 
' → logprob: -6.655699729919434
    10. 's' → logprob: -6.905699729919434

Token 63: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6138560175895691
    2. ' ' → logprob: -1.3638560771942139
    3. ' t' → logprob: -1.6138560771942139
    4. '<|end|>' → logprob: -6.738855838775635
    5. '  ' → logprob: -7.238855838775635
    6. ',' → logprob: -7.738855838775635
    7. '    ' → logprob: -8.238856315612793
    8. ',t' → logprob: -8.363856315612793
    9. '	t' → logprob: -8.488856315612793
    10. '   ' → logprob: -8.613856315612793

Token 64: ' normalement' (ID: 164432)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.34860125184059143
    2. 't' → logprob: -1.223601222038269
    3. '   ' → logprob: -9.473601341247559
    4. ' ' → logprob: -9.848601341247559
    5. '`t' → logprob: -12.348601341247559
    6. '	t' → logprob: -12.473601341247559
    7. '  ' → logprob: -12.473601341247559
    8. ' ' → logprob: -12.598601341247559
    9. ' s' → logprob: -12.598601341247559
    10. '    ' → logprob: -12.723601341247559

Token 65: ' il' (ID: 1793)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.0406074523925781
    2. 't' → logprob: -1.1656074523925781
    3. ' ' → logprob: -1.2906074523925781
    4. '<|end|>' → logprob: -4.165607452392578
    5. ' s' → logprob: -4.415607452392578
    6. 's' → logprob: -4.540607452392578
    7. '   ' → logprob: -5.165607452392578
    8. '    ' → logprob: -5.290607452392578
    9. '  ' → logprob: -5.665607452392578
    10. ',' → logprob: -5.790607452392578

Token 66: ' vaut' (ID: 83004)
  Prédit: ' faut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faut' → logprob: -1.3274914026260376
    2. 's' → logprob: -1.8274914026260376
    3. ' faudrait' → logprob: -1.8274914026260376
    4. 'f' → logprob: -1.9524914026260376
    5. ' y' → logprob: -2.202491283416748
    6. 'y' → logprob: -2.702491283416748
    7. ' n' → logprob: -3.952491283416748
    8. 'n' → logprob: -4.202491283416748
    9. ' faudra' → logprob: -4.952491283416748
    10. ' devrait' → logprob: -4.952491283416748

Token 67: ' mieux' (ID: 26345)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6263294816017151
    2. ' t' → logprob: -1.3763294219970703
    3. ' mieux' → logprob: -2.5013294219970703
    4. '  ' → logprob: -2.8763294219970703
    5. 's' → logprob: -3.5013294219970703
    6. 't' → logprob: -3.7513294219970703
    7. 'int' → logprob: -5.87632942199707
    8. ' s' → logprob: -5.87632942199707
    9. ''' → logprob: -6.12632942199707
    10. ':' → logprob: -6.50132942199707

Token 68: ' utiliser' (ID: 43227)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1567151546478271
    2. ' t' → logprob: -1.5317151546478271
    3. ' faire' → logprob: -2.031715154647827
    4. 's' → logprob: -2.781715154647827
    5. 'faire' → logprob: -2.906715154647827
    6. ' stock' → logprob: -3.656715154647827
    7. ' ' → logprob: -3.781715154647827
    8. ' s' → logprob: -4.156715393066406
    9. 'stock' → logprob: -4.406715393066406
    10. 'év' → logprob: -4.406715393066406

Token 69: ' try' (ID: 2075)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6497021317481995
    2. 'int' → logprob: -1.0247020721435547
    3. ' t' → logprob: -2.6497020721435547
    4. 's' → logprob: -4.399702072143555
    5. 't' → logprob: -4.399702072143555
    6. ' s' → logprob: -4.649702072143555
    7. '  ' → logprob: -6.649702072143555
    8. ' strip' → logprob: -6.899702072143555
    9. ' temp' → logprob: -6.899702072143555
    10. 'temp' → logprob: -7.024702072143555

Token 70: '/' (ID: 14)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02330743707716465
    2. ' except' → logprob: -4.6483073234558105
    3. '-ex' → logprob: -5.7733073234558105
    4. ' :' → logprob: -5.7733073234558105
    5. 'except' → logprob: -5.8983073234558105
    6. '<|end|>' → logprob: -6.2733073234558105
    7. '...' → logprob: -6.8983073234558105
    8. ':
' → logprob: -7.3983073234558105
    9. '/' → logprob: -7.5233073234558105
    10. '_except' → logprob: -9.273307800292969

Token 71: 'except' (ID: 25035)
  Prédit: 'except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.020737377926707268
    2. ' except' → logprob: -3.895737409591675
    3. '-ex' → logprob: -9.020737648010254
    4. 'ex' → logprob: -9.770737648010254
    5. '_except' → logprob: -12.145737648010254
    6. '...' → logprob: -12.895737648010254
    7. '```' → logprob: -13.145737648010254
    8. 'Except' → logprob: -13.270737648010254
    9. 'exc' → logprob: -13.520737648010254
    10. '   ' → logprob: -14.020737648010254

Token 72: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' bon' (ID: 4846)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.13833589851856232
    2. ' ici' → logprob: -3.013335943222046
    3. ' s' → logprob: -3.263335943222046
    4. ' for' → logprob: -3.888335943222046
    5. ' here' → logprob: -4.763335704803467
    6. ' on' → logprob: -5.638335704803467
    7. ' je' → logprob: -6.263335704803467
    8. 't' → logprob: -6.763335704803467
    9. ' j' → logprob: -7.638335704803467
    10. '```' → logprob: -7.763335704803467

Token 74: ',' (ID: 11)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3628292381763458
    2. ' s' → logprob: -1.7378292083740234
    3. 's' → logprob: -3.2378292083740234
    4. 't' → logprob: -3.3628292083740234
    5. ' ' → logprob: -3.7378292083740234
    6. '   ' → logprob: -4.362829208374023
    7. ' 
' → logprob: -5.487829208374023
    8. '    
' → logprob: -5.487829208374023
    9. '<|end|>' → logprob: -5.737829208374023
    10. ' ,' → logprob: -6.487829208374023

Token 75: ' ici' (ID: 27994)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.04582464322447777
    2. ' s' → logprob: -3.7958245277404785
    3. 't' → logprob: -4.1708245277404785
    4. 's' → logprob: -5.6708245277404785
    5. ' ' → logprob: -5.9208245277404785
    6. '<|end|>' → logprob: -8.795825004577637
    7. '    ' → logprob: -8.920825004577637
    8. ' ' → logprob: -9.295825004577637
    9. ' `' → logprob: -9.920825004577637
    10. '   ' → logprob: -10.170825004577637

Token 76: ' on' (ID: 402)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.28747403621673584
    2. ' s' → logprob: -1.5374740362167358
    3. 's' → logprob: -4.787474155426025
    4. 't' → logprob: -5.037474155426025
    5. ' ' → logprob: -5.162474155426025
    6. ' on' → logprob: -5.287474155426025
    7. ' for' → logprob: -5.287474155426025
    8. ' je' → logprob: -7.662474155426025
    9. '```' → logprob: -7.787474155426025
    10. ' c' → logprob: -7.912474155426025

Token 77: ' suppose' (ID: 35968)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1356897354125977
    2. ' continue' → logprob: -1.2606897354125977
    3. ' s' → logprob: -2.2606897354125977
    4. ' peut' → logprob: -2.8856897354125977
    5. ' assume' → logprob: -3.1356897354125977
    6. ' n' → logprob: -3.1356897354125977
    7. ' est' → logprob: -3.5106897354125977
    8. 'a' → logprob: -3.8856897354125977
    9. 's' → logprob: -3.8856897354125977
    10. ' suppose' → logprob: -4.760689735412598

Token 78: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7015374898910522
    2. '<|end|>' → logprob: -1.5765374898910522
    3. '    ' → logprob: -1.7015374898910522
    4. 's' → logprob: -3.201537609100342
    5. '  ' → logprob: -3.826537609100342
    6. '   ' → logprob: -4.576537609100342
    7. ' que' → logprob: -4.576537609100342
    8. ' that' → logprob: -4.826537609100342
    9. ' s' → logprob: -5.076537609100342
    10. '<|end|>' → logprob: -5.201537609100342

Token 79: ' tout' (ID: 5501)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.14947596192359924
    2. 't' → logprob: -2.6494760513305664
    3. ' temp' → logprob: -3.5244760513305664
    4. 'temp' → logprob: -4.149476051330566
    5. ' the' → logprob: -4.649476051330566
    6. ' l' → logprob: -5.774476051330566
    7. 'l' → logprob: -6.149476051330566
    8. ' le' → logprob: -6.399476051330566
    9. ' la' → logprob: -6.774476051330566
    10. 'the' → logprob: -6.899476051330566

Token 80: ' va' (ID: 3423)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.23300625383853912
    2. ' is' → logprob: -3.108006238937378
    3. ' va' → logprob: -3.358006238937378
    4. ' goes' → logprob: -3.483006238937378
    5. 'est' → logprob: -3.733006238937378
    6. 's' → logprob: -3.983006238937378
    7. ' ' → logprob: -3.983006238937378
    8. ' fonctionne' → logprob: -4.983006477355957
    9. ' s' → logprob: -5.608006477355957
    10. ' se' → logprob: -5.983006477355957

Token 81: ' bien' (ID: 5340)
  Prédit: 'bien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bien' → logprob: -0.100645050406456
    2. ' bien' → logprob: -2.350645065307617
    3. ' ' → logprob: -8.850645065307617
    4. 'aller' → logprob: -9.975645065307617
    5. 'se' → logprob: -10.100645065307617
    6. 'fonction' → logprob: -10.100645065307617
    7. 'être' → logprob: -10.350645065307617
    8. 's' → logprob: -10.975645065307617
    9. 'march' → logprob: -10.975645065307617
    10. 'Bien' → logprob: -10.975645065307617

Token 82: ' :)
' (ID: 57972)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7560079097747803
    2. ' s' → logprob: -1.8810079097747803
    3. '   ' → logprob: -2.2560079097747803
    4. '    ' → logprob: -2.5060079097747803
    5. '<|end|>' → logprob: -2.5060079097747803
    6. ' t' → logprob: -3.0060079097747803
    7. 's' → logprob: -3.3810079097747803
    8. '  ' → logprob: -4.506008148193359
    9. 't' → logprob: -4.756008148193359
    10. '<|end|>' → logprob: -6.256008148193359

Token 83: '   ' (ID: 271)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.11449771374464035
    2. 't' → logprob: -2.614497661590576
    3. ' ' → logprob: -3.739497661590576
    4. '   ' → logprob: -4.864497661590576
    5. ' s' → logprob: -6.489497661590576
    6. ' 
' → logprob: -7.114497661590576
    7. '    ' → logprob: -7.614497661590576
    8. 's' → logprob: -8.489498138427734
    9. '	t' → logprob: -9.239498138427734
    10. '  ' → logprob: -9.239498138427734

Token 84: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.028160713613033295
    2. 't' (adapté à ' t') → logprob: -3.653160810470581
    3. ' ' → logprob: -6.403160572052002
    4. '   ' → logprob: -9.15316104888916
    5. '    ' → logprob: -10.02816104888916
    6. ' s' → logprob: -11.15316104888916
    7. '  ' → logprob: -11.40316104888916
    8. 'int' → logprob: -12.15316104888916
    9. 's' → logprob: -12.52816104888916
    10. '	t' → logprob: -12.77816104888916

Token 85: '_ls' (ID: 136088)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08942029625177383
    2. '=' → logprob: -2.4644203186035156
    3. ' ' → logprob: -8.089420318603516
    4. '=int' → logprob: -8.714420318603516
    5. 's' → logprob: -12.964420318603516
    6. '_' → logprob: -13.089420318603516
    7. '  ' → logprob: -13.464420318603516
    8. 'int' → logprob: -14.089420318603516
    9. '<|end|>' → logprob: -14.714420318603516
    10. '   ' → logprob: -15.214420318603516

Token 86: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02996048331260681
    2. '.' → logprob: -3.5299603939056396
    3. ' .' → logprob: -9.154960632324219
    4. '=' → logprob: -9.779960632324219
    5. ' =' → logprob: -10.654960632324219
    6. '.extend' → logprob: -11.279960632324219
    7. '.app' → logprob: -12.529960632324219
    8. 'append' → logprob: -13.029960632324219
    9. '.=' → logprob: -13.279960632324219
    10. ' ' → logprob: -13.404960632324219

Token 87: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.016153549775481224
    2. '(' → logprob: -4.141153335571289
    3. '(float' → logprob: -9.391153335571289
    4. ' (' → logprob: -10.641153335571289
    5. '(temp' → logprob: -12.641153335571289
    6. 'int' → logprob: -13.141153335571289
    7. '(i' → logprob: -13.266153335571289
    8. '(s' → logprob: -13.391153335571289
    9. '(t' → logprob: -14.266153335571289
    10. '(in' → logprob: -14.391153335571289

Token 88: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.020973090082406998
    2. '(' → logprob: -3.8959732055664062
    3. ' (' → logprob: -8.020973205566406
    4. ')' → logprob: -10.020973205566406
    5. 'temp' → logprob: -10.145973205566406
    6. ' temp' → logprob: -11.145973205566406
    7. '(t' → logprob: -13.895973205566406
    8. '(
' → logprob: -14.145973205566406
    9. '(tmp' → logprob: -14.145973205566406
    10. '(s' → logprob: -14.770973205566406

Token 89: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.372294698550832e-06
    2. ' [' → logprob: -12.250009536743164
    3. '1' → logprob: -12.750009536743164
    4. '   ' → logprob: -14.375009536743164
    5. ')' → logprob: -15.250009536743164
    6. ' ' → logprob: -15.250009536743164
    7. '[-' → logprob: -15.500009536743164
    8. '(' → logprob: -16.750009536743164
    9. '	' → logprob: -16.875009536743164
    10. '[
' → logprob: -17.000009536743164

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.526570384972729e-05
    2. ' ' → logprob: -9.875055313110352
    3. '0' → logprob: -13.500055313110352
    4. '2' → logprob: -14.250055313110352
    5. '   ' → logprob: -14.625055313110352
    6. '-' → logprob: -14.625055313110352
    7. '[' → logprob: -15.375055313110352
    8. '  ' → logprob: -15.687555313110352
    9. '])' → logprob: -15.875055313110352
    10. ')' → logprob: -16.37505531311035

Token 91: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2753835618495941
    2. ')' → logprob: -2.025383472442627
    3. ']))' → logprob: -2.275383472442627
    4. '])' → logprob: -5.650383472442627
    5. ')))' → logprob: -6.275383472442627
    6. ']' → logprob: -8.150383949279785
    7. ')])' → logprob: -8.275383949279785
    8. '']))' → logprob: -10.275383949279785
    9. ')]' → logprob: -10.900383949279785
    10. '}))' → logprob: -11.775383949279785

Token 92: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004039695020765066
    2. ' 
' → logprob: -6.004039764404297
    3. '  
' → logprob: -7.754039764404297
    4. ' s' → logprob: -7.754039764404297
    5. '<|end|>' → logprob: -8.004039764404297
    6. '    
' → logprob: -8.754039764404297
    7. ' ' → logprob: -9.379039764404297
    8. '   
' → logprob: -10.004039764404297
    9. '```' → logprob: -10.754039764404297
    10. '   ' → logprob: -11.379039764404297

Token 93: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.016268612816929817
    2. ' s' → logprob: -4.391268730163574
    3. ' 
' → logprob: -5.641268730163574
    4. ' ' → logprob: -9.516268730163574
    5. '_s' → logprob: -9.891268730163574
    6. '    
' → logprob: -10.641268730163574
    7. '  
' → logprob: -10.891268730163574
    8. '   ' → logprob: -11.141268730163574
    9. '	s' → logprob: -11.766268730163574
    10. '   
' → logprob: -12.516268730163574

Token 94: '_ls' (ID: 136088)
  Prédit: '_ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ls' → logprob: -8.180258191714529e-06
    2. '_' → logprob: -12.750008583068848
    3. 'ls' → logprob: -13.125008583068848
    4. 's' → logprob: -13.375008583068848
    5. '_s' → logprob: -14.500008583068848
    6. '_lst' → logprob: -14.750008583068848
    7. '_ll' → logprob: -15.000008583068848
    8. '_ln' → logprob: -16.50000762939453
    9. '_lt' → logprob: -16.75000762939453
    10. '```' → logprob: -17.00000762939453

Token 95: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0381268709897995
    2. '.' → logprob: -3.2881269454956055
    3. '.app' → logprob: -10.663126945495605
    4. '<|end|>' → logprob: -11.288126945495605
    5. '.extend' → logprob: -11.913126945495605
    6. ').' → logprob: -11.913126945495605
    7. '.setdefault' → logprob: -12.163126945495605
    8. '.add' → logprob: -12.163126945495605
    9. '.ap' → logprob: -12.288126945495605
    10. 'append' → logprob: -12.413126945495605

Token 96: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007112398743629456
    2. '(' → logprob: -7.250711441040039
    3. '(
' → logprob: -14.875711441040039
    4. '(str' → logprob: -15.375711441040039
    5. '((' → logprob: -15.375711441040039
    6. 's' → logprob: -16.50071144104004
    7. '(t' → logprob: -16.50071144104004
    8. ' (' → logprob: -16.75071144104004
    9. '(sys' → logprob: -16.87571144104004
    10. '(ss' → logprob: -17.12571144104004

Token 97: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -14.625000953674316
    3. ' )' → logprob: -14.625000953674316
    4. ')
' → logprob: -15.500000953674316
    5. ')`' → logprob: -17.250001907348633
    6. ')}' → logprob: -18.625001907348633
    7. ')return' → logprob: -19.125001907348633
    8. '`)' → logprob: -19.375001907348633
    9. '),' → logprob: -19.500001907348633
    10. ']' → logprob: -19.500001907348633

Token 98: 'cherche' (ID: 69094)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09703158587217331
    2. 'd' → logprob: -3.472031593322754
    3. '=' → logprob: -4.097031593322754
    4. '_' → logprob: -4.222031593322754
    5. 's' → logprob: -4.222031593322754
    6. ' =' → logprob: -4.722031593322754
    7. 'ur' → logprob: -5.972031593322754
    8. '(' → logprob: -6.472031593322754
    9. '_r' → logprob: -7.222031593322754
    10. '_s' → logprob: -7.972031593322754

Token 100: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.34007716178894043
    2. 's' → logprob: -2.2150771617889404
    3. 'int' → logprob: -2.4650771617889404
    4. '"' → logprob: -3.5900771617889404
    5. 't' → logprob: -3.9650771617889404
    6. 'sys' → logprob: -4.3400774002075195
    7. '""' → logprob: -5.0900774002075195
    8. ''s' → logprob: -5.3400774002075195
    9. 'max' → logprob: -5.4650774002075195
    10. '"s' → logprob: -5.5900774002075195

Token 101: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5242321491241455
    2. '()' → logprob: -0.8992321491241455
    3. '('' → logprob: -7.399231910705566
    4. '("("' → logprob: -9.149231910705566
    5. '```' → logprob: -9.274231910705566
    6. '().' → logprob: -9.399231910705566
    7. '()`' → logprob: -10.274231910705566
    8. '("")' → logprob: -10.774231910705566
    9. '(`' → logprob: -11.149231910705566
    10. '`()' → logprob: -11.274231910705566

Token 102: 'indx' (ID: 199293)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0327279567718506
    2. 'result' → logprob: -1.7827279567718506
    3. 'if' → logprob: -1.9077279567718506
    4. 'found' → logprob: -1.9077279567718506
    5. 'res' → logprob: -2.7827279567718506
    6. 'answer' → logprob: -3.9077279567718506
    7. 'max' → logprob: -3.9077279567718506
    8. 'count' → logprob: -4.15772819519043
    9. 'idx' → logprob: -4.28272819519043
    10. 'index' → logprob: -4.53272819519043

Token 103: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1053808405995369
    2. '=' → logprob: -2.8553807735443115
    3. ' =' → logprob: -3.2303807735443115
    4. '_=' → logprob: -6.105381011962891
    5. '=_' → logprob: -7.980381011962891
    6. '_of' → logprob: -9.35538101196289
    7. 'es' → logprob: -9.73038101196289
    8. '_e' → logprob: -9.98038101196289
    9. '_x' → logprob: -10.48038101196289
    10. 'e' → logprob: -10.60538101196289

Token 104: ' s' (ID: 265)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4414733052253723
    2. 's' → logprob: -1.5664732456207275
    3. '0' → logprob: -2.0664732456207275
    4. 'None' → logprob: -4.191473484039307
    5. ' -' → logprob: -5.941473484039307
    6. ' s' → logprob: -6.316473484039307
    7. '[' → logprob: -7.566473484039307
    8. ' None' → logprob: -7.691473484039307
    9. ' ' → logprob: -7.941473484039307
    10. '-s' → logprob: -8.566473007202148

Token 105: '_ls' (ID: 136088)
  Prédit: '_ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ls' → logprob: -0.0013669042382389307
    2. '_s' → logprob: -7.376367092132568
    3. '_l' → logprob: -8.00136661529541
    4. 's' → logprob: -8.12636661529541
    5. '_lst' → logprob: -10.00136661529541
    6. '_' → logprob: -10.25136661529541
    7. '_.' → logprob: -11.12636661529541
    8. '_ln' → logprob: -12.75136661529541
    9. 'ls' → logprob: -13.25136661529541
    10. '_lp' → logprob: -13.37636661529541

Token 106: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.000937547127250582
    2. '.' → logprob: -7.000937461853027
    3. '.find' → logprob: -10.750937461853027
    4. '.count' → logprob: -12.500937461853027
    5. 'index' → logprob: -14.875937461853027
    6. '.Index' → logprob: -15.000937461853027
    7. ' .' → logprob: -15.750937461853027
    8. '.last' → logprob: -16.875938415527344
    9. '.ind' → logprob: -17.625938415527344
    10. '.findall' → logprob: -17.625938415527344

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008910943870432675
    2. '('' → logprob: -7.250891208648682
    3. 'cherche' → logprob: -8.750890731811523
    4. '("' → logprob: -11.750890731811523
    5. ' (' → logprob: -12.000890731811523
    6. '((' → logprob: -13.750890731811523
    7. '("("' → logprob: -13.875890731811523
    8. '(ch' → logprob: -14.000890731811523
    9. '(chr' → logprob: -14.125890731811523
    10. '(search' → logprob: -14.125890731811523

Token 108: 'cherche' (ID: 69094)
  Prédit: 'cherche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.0005717403837479651
    2. '(' → logprob: -7.5005717277526855
    3. ' cherche' → logprob: -11.000572204589844
    4. 'chercher' → logprob: -13.250572204589844
    5. 'cher' → logprob: -15.125572204589844
    6. ''' → logprob: -17.750572204589844
    7. 'Cher' → logprob: -18.125572204589844
    8. ')' → logprob: -18.750572204589844
    9. '(
' → logprob: -19.000572204589844
    10. '(ch' → logprob: -19.125572204589844

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.333223139634356e-05
    2. ')+' → logprob: -10.500033378601074
    3. ')
' → logprob: -12.625033378601074
    4. ' )' → logprob: -13.250033378601074
    5. '+' → logprob: -15.000033378601074
    6. ')

' → logprob: -16.000032424926758
    7. '),' → logprob: -17.000032424926758
    8. '()' → logprob: -17.375032424926758
    9. ']' → logprob: -17.500032424926758
    10. ')`' → logprob: -17.500032424926758

Token 110: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01370408944785595
    2. ')' → logprob: -5.138704299926758
    3. 'if' → logprob: -5.888704299926758
    4. '<|end|>' → logprob: -6.263704299926758
    5. 't' → logprob: -6.388704299926758
    6. ' print' → logprob: -7.638704299926758
    7. '#' → logprob: -8.263704299926758
    8. '+' → logprob: -9.388704299926758
    9. '#print' → logprob: -9.763704299926758
    10. ' if' → logprob: -9.763704299926758

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015028368216007948
    2. ' ' → logprob: -6.501502990722656
    3. '0' → logprob: -15.501502990722656
    4. '2' → logprob: -16.001502990722656
    5. 't' → logprob: -17.126502990722656
    6. ' ' → logprob: -17.126502990722656
    7. ' t' → logprob: -17.376502990722656
    8. '10' → logprob: -17.751502990722656
    9. '100' → logprob: -17.876502990722656
    10. '   ' → logprob: -18.251502990722656

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016194197814911604
    2. ' ' → logprob: -9.125162124633789
    3. 't' → logprob: -10.000162124633789
    4. '2' → logprob: -12.875162124633789
    5. 's' → logprob: -13.875162124633789
    6. 'len' → logprob: -14.250162124633789
    7. 'int' → logprob: -14.625162124633789
    8. '0' → logprob: -14.750162124633789
    9. ' t' → logprob: -14.750162124633789
    10. '10' → logprob: -14.875162124633789

Token 113: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00181928975507617
    2. '<|end|>' → logprob: -6.501819133758545
    3. 'for' → logprob: -9.626819610595703
    4. ')' → logprob: -9.626819610595703
    5. '#' → logprob: -9.751819610595703
    6. ' print' → logprob: -10.251819610595703
    7. '#print' → logprob: -10.501819610595703
    8. 't' → logprob: -11.001819610595703
    9. 'if' → logprob: -11.251819610595703
    10. 'prin' → logprob: -12.376819610595703

Token 114: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.004696090007201e-05
    2. ')' → logprob: -11.000069618225098
    3. ' print' → logprob: -11.000069618225098
    4. '<|end|>' → logprob: -11.250069618225098
    5. '#' → logprob: -11.875069618225098
    6. 't' → logprob: -12.625069618225098
    7. '#print' → logprob: -12.625069618225098
    8. 'prin' → logprob: -12.750069618225098
    9. 'pr' → logprob: -13.000069618225098
    10. 'prit' → logprob: -13.625069618225098

Token 115: ' Sum' (ID: 34138)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04713417589664459
    2. 'if' → logprob: -3.7971341609954834
    3. 'for' → logprob: -3.7971341609954834
    4. 'while' → logprob: -7.7971343994140625
    5. 'try' → logprob: -7.9221343994140625
    6. 't' → logprob: -8.797134399414062
    7. 'result' → logprob: -9.172134399414062
    8. '#' → logprob: -10.422134399414062
    9. 'count' → logprob: -10.922134399414062
    10. 'answer' → logprob: -11.297134399414062

Token 116: ' des' (ID: 731)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5853612422943115
    2. '=' → logprob: -1.9603612422943115
    3. '(' → logprob: -2.0853612422943115
    4. '_' → logprob: -2.7103612422943115
    5. ' =' → logprob: -2.7103612422943115
    6. '_t' → logprob: -4.085361480712891
    7. 's' → logprob: -4.835361480712891
    8. '(t' → logprob: -4.960361480712891
    9. 'sum' → logprob: -5.335361480712891
    10. '_=' → logprob: -6.835361480712891

Token 117: ' temps' (ID: 11160)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.26740962266921997
    2. ' t' → logprob: -1.5174095630645752
    3. '[t' → logprob: -5.267409801483154
    4. 'élé' → logprob: -6.517409801483154
    5. ' éléments' → logprob: -6.642409801483154
    6. '[i' → logprob: -6.892409801483154
    7. 'val' → logprob: -7.017409801483154
    8. ' elements' → logprob: -7.267409801483154
    9. ' valeurs' → logprob: -7.267409801483154
    10. ' [' → logprob: -7.517409801483154

Token 118: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8799370527267456
    2. '=' → logprob: -1.1299370527267456
    3. ' =' → logprob: -1.7549370527267456
    4. 'total' → logprob: -3.004937171936035
    5. 'sum' → logprob: -3.879937171936035
    6. '=sum' → logprob: -4.754937171936035
    7. 'result' → logprob: -6.004937171936035
    8. 'for' → logprob: -6.254937171936035
    9. 'temps' → logprob: -6.254937171936035
    10. 's' → logprob: -6.629937171936035

Token 119: ' partir' (ID: 12100)
  Prédit: 'indx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indx' → logprob: -0.1042470633983612
    2. 'sum' → logprob: -2.6042470932006836
    3. 'indice' → logprob: -4.104247093200684
    4. '0' → logprob: -5.604247093200684
    5. 'range' → logprob: -6.479247093200684
    6. 'ind' → logprob: -7.229247093200684
    7. ' indx' → logprob: -7.479247093200684
    8. 't' → logprob: -8.229247093200684
    9. 'index' → logprob: -8.229247093200684
    10. '[ind' → logprob: -8.229247093200684

Token 120: ' du' (ID: 1462)
  Prédit: 'indx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indx' → logprob: -0.2633573114871979
    2. '(ind' → logprob: -1.5133572816848755
    3. 'ind' → logprob: -5.388357162475586
    4. ' indx' → logprob: -6.263357162475586
    5. '(' → logprob: -6.388357162475586
    6. '[ind' → logprob: -6.763357162475586
    7. 'indice' → logprob: -7.513357162475586
    8. 'de' → logprob: -8.263357162475586
    9. 's' → logprob: -8.263357162475586
    10. 'indt' → logprob: -8.638357162475586

Token 121: ' suivant' (ID: 68705)
  Prédit: 'indx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indx' → logprob: -0.00036204091156832874
    2. 'indice' → logprob: -8.625362396240234
    3. 'ind' → logprob: -8.875362396240234
    4. ' indx' → logprob: -10.750362396240234
    5. 'index' → logprob: -11.750362396240234
    6. '0' → logprob: -12.375362396240234
    7. 'indt' → logprob: -13.000362396240234
    8. 'idx' → logprob: -13.250362396240234
    9. '[ind' → logprob: -14.000362396240234
    10. '1' → logprob: -14.125362396240234

Token 122: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.601869523525238
    2. 'sum' → logprob: -1.4768695831298828
    3. 'indx' → logprob: -2.226869583129883
    4. 'total' → logprob: -2.601869583129883
    5. '+' → logprob: -4.851869583129883
    6. '<|end|>' → logprob: -5.101869583129883
    7. 's' → logprob: -5.226869583129883
    8. ' for' → logprob: -5.476869583129883
    9. 'ind' → logprob: -5.726869583129883
    10. '=' → logprob: -5.851869583129883

Token 123: 'result' (ID: 2521)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.45118722319602966
    2. 'sum' → logprob: -1.076187252998352
    3. 'result' → logprob: -4.4511871337890625
    4. 'print' → logprob: -5.4511871337890625
    5. 's' → logprob: -6.7011871337890625
    6. 'time' → logprob: -6.7011871337890625
    7. 'answer' → logprob: -6.8261871337890625
    8. 'temps' → logprob: -6.9511871337890625
    9. 'for' → logprob: -7.0761871337890625
    10. 'ans' → logprob: -8.451187133789062

Token 124: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04987914115190506
    2. '=' → logprob: -3.0498790740966797
    3. '_' → logprob: -6.67487907409668
    4. 's' → logprob: -11.54987907409668
    5. ' ' → logprob: -12.54987907409668
    6. '_time' → logprob: -12.54987907409668
    7. ' ' → logprob: -13.04987907409668
    8. '_=' → logprob: -13.42487907409668
    9. 'e' → logprob: -13.54987907409668
    10. '_sum' → logprob: -13.79987907409668

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142357051372528
    2. '=' → logprob: -1.7014235258102417
    3. 's' → logprob: -12.201423645019531
    4. '_' → logprob: -12.951423645019531
    5. ' ' → logprob: -13.701423645019531
    6. ' ' → logprob: -14.451423645019531
    7. '=sum' → logprob: -14.826423645019531
    8. ' +=' → logprob: -15.576423645019531
    9. '_=' → logprob: -15.951423645019531
    10. ',' → logprob: -16.57642364501953

Token 126: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.01634894125163555
    2. ' sum' → logprob: -4.141348838806152
    3. '0' → logprob: -8.266348838806152
    4. 't' → logprob: -10.016348838806152
    5. ' t' → logprob: -12.516348838806152
    6. '(sum' → logprob: -12.891348838806152
    7. '	sum' → logprob: -13.391348838806152
    8. '=sum' → logprob: -13.391348838806152
    9. '   ' → logprob: -13.641348838806152
    10. ' ' → logprob: -14.141348838806152

Token 127: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0005147866904735565
    2. '(' → logprob: -7.625514984130859
    3. 't' → logprob: -10.62551498413086
    4. '(
' → logprob: -13.50051498413086
    5. '([' → logprob: -14.25051498413086
    6. '(s' → logprob: -15.62551498413086
    7. ' (' → logprob: -16.00051498413086
    8. '	t' → logprob: -16.62551498413086
    9. ' t' → logprob: -17.00051498413086
    10. '(

' → logprob: -17.50051498413086

Token 128: '_ls' (ID: 136088)
  Prédit: '_ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ls' → logprob: -9.13388703338569e-06
    2. '_ts' → logprob: -12.000009536743164
    3. 't' → logprob: -13.625009536743164
    4. '_t' → logprob: -13.625009536743164
    5. '_lst' → logprob: -15.500009536743164
    6. 'ls' → logprob: -16.375009536743164
    7. '[_' → logprob: -16.875009536743164
    8. '_l' → logprob: -17.375009536743164
    9. '_lt' → logprob: -17.375009536743164
    10. '_' → logprob: -17.375009536743164

Token 129: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -2.081584716506768e-05
    2. '[' → logprob: -11.250020980834961
    3. 'indx' → logprob: -12.625020980834961
    4. ')' → logprob: -13.625020980834961
    5. '(ind' → logprob: -13.875020980834961
    6. '[:' → logprob: -14.000020980834961
    7. '[(' → logprob: -14.500020980834961
    8. ')[' → logprob: -15.000020980834961
    9. '   ' → logprob: -16.00002098083496
    10. '[i' → logprob: -16.25002098083496

Token 130: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.4121114822482923e-06
    2. 'ex' → logprob: -12.625003814697266
    3. '+' → logprob: -18.500003814697266
    4. 'xec' → logprob: -18.625003814697266
    5. '[x' → logprob: -18.750003814697266
    6. '"x' → logprob: -19.000003814697266
    7. '`' → logprob: -19.000003814697266
    8. '```' → logprob: -19.125003814697266
    9. '[' → logprob: -19.312503814697266
    10. ' x' → logprob: -19.375003814697266

Token 131: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001573663903400302
    2. '+' → logprob: -6.50157356262207
    3. '+:' → logprob: -10.50157356262207
    4. ' +' → logprob: -11.00157356262207
    5. ':]' → logprob: -11.12657356262207
    6. ' :' → logprob: -12.50157356262207
    7. ':])
' → logprob: -13.00157356262207
    8. ':],' → logprob: -13.00157356262207
    9. ':)' → logprob: -13.37657356262207
    10. '])' → logprob: -14.12657356262207

Token 132: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -8.85235276655294e-05
    2. ')' → logprob: -10.250088691711426
    3. '])
' → logprob: -10.875088691711426
    4. 'n' → logprob: -11.500088691711426
    5. ']' → logprob: -12.125088691711426
    6. '])

' → logprob: -12.125088691711426
    7. ']))' → logprob: -12.625088691711426
    8. ' ])' → logprob: -13.125088691711426
    9. 'indx' → logprob: -13.500088691711426
    10. ']])' → logprob: -13.750088691711426

Token 133: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013774730905424803
    2. '
' → logprob: -9.250137329101562
    3. ' print' → logprob: -10.375137329101562
    4. '<|end|>' → logprob: -11.750137329101562
    5. ')' → logprob: -14.125137329101562
    6. '```' → logprob: -14.625137329101562
    7. '#print' → logprob: -15.250137329101562
    8. '  
' → logprob: -15.250137329101562
    9. ')
' → logprob: -15.500137329101562
    10. '#' → logprob: -16.000137329101562

Token 134: ' j' (ID: 441)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008768046391196549
    2. ' print' → logprob: -7.3758769035339355
    3. '
' → logprob: -8.375876426696777
    4. '<|end|>' → logprob: -11.250876426696777
    5. ')' → logprob: -12.500876426696777
    6. ' 
' → logprob: -14.125876426696777
    7. '(print' → logprob: -14.625876426696777
    8. ')
' → logprob: -14.875876426696777
    9. '-print' → logprob: -15.125876426696777
    10. '.print' → logprob: -15.125876426696777

Token 135: ''espère' (ID: 116557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' ne' (ID: 453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002879999577999115
    2. '
' → logprob: -6.002880096435547
    3. ' print' → logprob: -8.002880096435547
    4. '<|end|>' → logprob: -10.377880096435547
    5. '```' → logprob: -11.627880096435547
    6. '#' → logprob: -12.002880096435547
    7. '
' → logprob: -12.252880096435547
    8. '.print' → logprob: -12.502880096435547
    9. '#print' → logprob: -12.627880096435547
    10. ')' → logprob: -12.752880096435547

Token 137: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.16338272392749786
    2. ' pas' → logprob: -1.9133827686309814
    3. 's' → logprob: -7.663382530212402
    4. '#' → logprob: -7.788382530212402
    5. '_' → logprob: -7.788382530212402
    6. '_pas' → logprob: -7.913382530212402
    7. 'plus' → logprob: -8.163382530212402
    8. 'vais' → logprob: -8.413382530212402
    9. ' jamais' → logprob: -8.663382530212402
    10. ' ' → logprob: -9.038382530212402

Token 138: ' dépasser' (ID: 187375)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.5436739921569824
    2. 'faire' → logprob: -2.2936739921569824
    3. 'm' → logprob: -2.5436739921569824
    4. 'avoir' → logprob: -3.0436739921569824
    5. 's' → logprob: -4.168673992156982
    6. 'er' → logprob: -4.293673992156982
    7. 'vous' → logprob: -4.293673992156982
    8. 'être' → logprob: -4.293673992156982
    9. 'overflow' → logprob: -4.418673992156982
    10. 'bug' → logprob: -4.418673992156982

Token 139: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02105877734720707
    2. '<|end|>' → logprob: -3.8960587978363037
    3. ' print' → logprob: -8.021059036254883
    4. 'len' → logprob: -9.521059036254883
    5. '
' → logprob: -10.271059036254883
    6. '#print' → logprob: -10.771059036254883
    7. '<|end|>' → logprob: -11.021059036254883
    8. '```' → logprob: -11.396059036254883
    9. ')' → logprob: -11.771059036254883
    10. '  
' → logprob: -12.896059036254883

Token 140: ' liste' (ID: 31719)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.968092143535614
    2. 'liste' → logprob: -1.5930922031402588
    3. 'long' → logprob: -1.8430922031402588
    4. 'list' → logprob: -2.843092203140259
    5. 'tail' → logprob: -2.843092203140259
    6. 'length' → logprob: -3.093092203140259
    7. 'n' → logprob: -3.593092203140259
    8. 's' → logprob: -4.34309196472168
    9. 'fin' → logprob: -4.46809196472168
    10. 'index' → logprob: -4.71809196472168

Token 141: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005004020873457193
    2. '
' → logprob: -6.130003929138184
    3. '<|end|>' → logprob: -6.255003929138184
    4. ' print' → logprob: -7.380003929138184
    5. ')' → logprob: -8.880003929138184
    6. '#' → logprob: -10.380003929138184
    7. ')
' → logprob: -10.505003929138184
    8. '  
' → logprob: -11.255003929138184
    9. '```' → logprob: -11.505003929138184
    10. '<|end|>' → logprob: -11.630003929138184

Token 142: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003864630125463009
    2. '
' → logprob: -8.000386238098145
    3. ' print' → logprob: -10.125386238098145
    4. ')
' → logprob: -12.125386238098145
    5. '<|end|>' → logprob: -13.500386238098145
    6. ')' → logprob: -14.000386238098145
    7. '```' → logprob: -14.000386238098145
    8. '
' → logprob: -14.500386238098145
    9. '  
' → logprob: -14.500386238098145
    10. '#print' → logprob: -15.500386238098145

Token 143: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.2522410452365875
    2. '(' → logprob: -1.5022410154342651
    3. '()' → logprob: -8.502241134643555
    4. '(sum' → logprob: -10.752241134643555
    5. '('' → logprob: -10.877241134643555
    6. 'result' → logprob: -11.127241134643555
    7. '("' → logprob: -11.252241134643555
    8. ' (' → logprob: -11.752241134643555
    9. '(len' → logprob: -11.752241134643555
    10. '((' → logprob: -12.002241134643555

Token 144: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.4021237802808173e-05
    2. ')' → logprob: -11.500014305114746
    3. 'ats' → logprob: -13.375014305114746
    4. 't' → logprob: -14.375014305114746
    5. 'ат' → logprob: -14.375014305114746
    6. 'a' → logprob: -15.000014305114746
    7. 'ât' → logprob: -15.000014305114746
    8. ''at' → logprob: -15.875014305114746
    9. '_at' → logprob: -16.12501335144043
    10. 'aat' → logprob: -16.50001335144043

Token 145: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '))' → logprob: -14.125001907348633
    3. ')`' → logprob: -15.250001907348633
    4. ' )' → logprob: -15.375001907348633
    5. '`)' → logprob: -15.875001907348633
    6. '()' → logprob: -16.250001907348633
    7. ')
' → logprob: -16.375001907348633
    8. '')' → logprob: -16.750001907348633
    9. '#' → logprob: -17.500001907348633
    10. '())' → logprob: -17.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 143
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 79
Précision stricte (1ère position): 31.47%
Précision adaptée (1ère position): 32.87%
Précision (top 10): 55.24%
================================================================================
