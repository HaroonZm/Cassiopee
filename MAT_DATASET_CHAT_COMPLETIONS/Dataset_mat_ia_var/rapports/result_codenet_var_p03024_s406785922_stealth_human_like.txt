================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Perso, je trouve ça plutôt simple à faire.
user_input = input()
count_o = user_input.count("o")
# On bidouille un peu le calcul ici  
possible = count_o + (15 - len(user_input))

if possible >= 8:
    print("YES")
else:
    print("NO") # Bon, tant pis...
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Pers' (ID: 23032)
  → Token d'amorce (pas de prédiction)

Token 2: 'o' (ID: 78)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: 'nal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nal' → logprob: -0.07969489693641663
    2. 'n' → logprob: -2.579694986343384
    3. '#' → logprob: -7.204694747924805
    4. 'na' → logprob: -11.079694747924805
    5. 'nable' → logprob: -11.579694747924805
    6. 'nage' → logprob: -11.954694747924805
    7. 'ns' → logprob: -11.954694747924805
    8. 'nt' → logprob: -12.079694747924805
    9. 'nale' → logprob: -12.204694747924805
    10. '```' → logprob: -12.954694747924805

Token 4: ' je' (ID: 1264)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06185227259993553
    2. 'nal' → logprob: -3.436852216720581
    3. 'ne' → logprob: -4.56185245513916
    4. ' ' → logprob: -5.06185245513916
    5. '#' → logprob: -6.18685245513916
    6. ' n' → logprob: -6.56185245513916
    7. 'r' → logprob: -6.81185245513916
    8. 'u' → logprob: -6.81185245513916
    9. ',' → logprob: -7.18685245513916
    10. 'nt' → logprob: -7.18685245513916

Token 5: ' trouve' (ID: 30913)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.860539436340332
    2. 'n' → logprob: -1.110539436340332
    3. ' ' → logprob: -2.360539436340332
    4. ' pense' → logprob: -2.610539436340332
    5. ' ```' → logprob: -3.860539436340332
    6. ' trouve' → logprob: -4.235539436340332
    7. 'space' → logprob: -4.485539436340332
    8. ' ' → logprob: -4.735539436340332
    9. '```' → logprob: -4.985539436340332
    10. ' space' → logprob: -4.985539436340332

Token 6: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4830874502658844
    2. 'nt' → logprob: -1.983087420463562
    3. ',' → logprob: -3.1080875396728516
    4. ' que' → logprob: -3.2330875396728516
    5. ' ça' → logprob: -3.2330875396728516
    6. 'n' → logprob: -3.4830875396728516
    7. ' that' → logprob: -3.8580875396728516
    8. 's' → logprob: -3.9830875396728516
    9. 'u' → logprob: -4.483087539672852
    10. '```' → logprob: -4.733087539672852

Token 7: ' plutôt' (ID: 40017)
  Prédit: ' super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' super' → logprob: -0.6952988505363464
    2. ' cool' → logprob: -1.9452989101409912
    3. 'dom' → logprob: -3.070298910140991
    4. 'super' → logprob: -3.070298910140991
    5. ' gén' → logprob: -3.195298910140991
    6. ' un' → logprob: -3.195298910140991
    7. 'v' → logprob: -3.445298910140991
    8. ' ' → logprob: -3.695298910140991
    9. ' pas' → logprob: -3.945298910140991
    10. ' dommage' → logprob: -4.195298671722412

Token 8: ' simple' (ID: 4705)
  Prédit: 'cool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cool' → logprob: -1.0822933912277222
    2. 'bien' → logprob: -1.3322933912277222
    3. ' cool' → logprob: -1.7072933912277222
    4. 'sym' → logprob: -2.0822935104370117
    5. 'dom' → logprob: -3.9572935104370117
    6. 'd' → logprob: -4.332293510437012
    7. ' bien' → logprob: -4.332293510437012
    8. 'm' → logprob: -5.332293510437012
    9. 'b' → logprob: -5.582293510437012
    10. ' sym' → logprob: -5.582293510437012

Token 9: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6556742191314697
    2. ',' → logprob: -0.7806742191314697
    3. '!' → logprob: -4.655673980712891
    4. ':' → logprob: -5.030673980712891
    5. '#' → logprob: -6.655673980712891
    6. ' ,' → logprob: -6.905673980712891
    7. ' :' → logprob: -7.280673980712891
    8. '...' → logprob: -7.280673980712891
    9. ';' → logprob: -7.530673980712891
    10. '```' → logprob: -7.780673980712891

Token 10: ' faire' (ID: 8119)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8274346590042114
    2. 'faire' → logprob: -1.2024346590042114
    3. 'coder' → logprob: -1.5774346590042114
    4. 'util' → logprob: -4.452434539794922
    5. 'l' → logprob: -4.452434539794922
    6. 'dire' → logprob: -4.702434539794922
    7. 'mon' → logprob: -5.202434539794922
    8. 'mettre' → logprob: -5.327434539794922
    9. 'impl' → logprob: -5.452434539794922
    10. 'ap' → logprob: -6.202434539794922

Token 11: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11315140873193741
    2. ',' → logprob: -2.4881513118743896
    3. '!' → logprob: -5.238151550292969
    4. ':' → logprob: -5.238151550292969
    5. ' :' → logprob: -5.613151550292969
    6. ' .' → logprob: -5.988151550292969
    7. '\' → logprob: -6.238151550292969
    8. ' !' → logprob: -6.363151550292969
    9. ' ,' → logprob: -6.988151550292969
    10. '```' → logprob: -7.488151550292969

Token 12: 'user' (ID: 1428)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.0586682558059692
    2. '.' → logprob: -1.1836682558059692
    3. '#' → logprob: -1.9336682558059692
    4. ',' → logprob: -2.5586681365966797
    5. '\n' → logprob: -2.6836681365966797
    6. '!' → logprob: -3.5586681365966797
    7. '```' → logprob: -4.55866813659668
    8. ':' → logprob: -5.30866813659668
    9. ',
' → logprob: -6.18366813659668
    10. '  
' → logprob: -6.43366813659668

Token 13: '_input' (ID: 12507)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.43890446424484253
    2. ',' → logprob: -1.4389045238494873
    3. '\' → logprob: -3.1889045238494873
    4. ' ,' → logprob: -3.9389045238494873
    5. '```' → logprob: -4.313904285430908
    6. ' !' → logprob: -4.688904285430908
    7. ' .' → logprob: -4.813904285430908
    8. '!' → logprob: -4.938904285430908
    9. ' :' → logprob: -5.438904285430908
    10. ' ' → logprob: -5.438904285430908

Token 14: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6335994601249695
    2. ':' → logprob: -2.0085995197296143
    3. ',' → logprob: -2.2585995197296143
    4. ' :' → logprob: -2.3835995197296143
    5. ' ' → logprob: -3.1335995197296143
    6. '\' → logprob: -3.3835995197296143
    7. ' ,' → logprob: -4.383599281311035
    8. ' .' → logprob: -4.508599281311035
    9. '!' → logprob: -4.758599281311035
    10. '#' → logprob: -5.383599281311035

Token 15: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12769083678722382
    2. ' "' → logprob: -2.8776907920837402
    3. '""' → logprob: -3.2526907920837402
    4. ''' → logprob: -4.25269079208374
    5. ' ""' → logprob: -5.12769079208374
    6. '''' → logprob: -6.00269079208374
    7. ' '' → logprob: -7.37769079208374
    8. ' ''' → logprob: -7.50269079208374
    9. ' ' → logprob: -7.87769079208374
    10. '"""' → logprob: -8.252691268920898

Token 16: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006296366918832064
    2. '('' → logprob: -7.875629425048828
    3. '("("' → logprob: -8.375629425048828
    4. '(
' → logprob: -12.125629425048828
    5. '(`' → logprob: -13.000629425048828
    6. '()' → logprob: -13.000629425048828
    7. ' (' → logprob: -13.500629425048828
    8. '(

' → logprob: -13.500629425048828
    9. ''' → logprob: -13.500629425048828
    10. '```' → logprob: -13.625629425048828

Token 17: 'count' (ID: 5420)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7885785102844238
    2. ' if' → logprob: -1.1635785102844238
    3. 'print' → logprob: -1.7885785102844238
    4. '.' → logprob: -3.413578510284424
    5. '#' → logprob: -4.538578510284424
    6. ' ' → logprob: -5.288578510284424
    7. '\n' → logprob: -5.913578510284424
    8. '```' → logprob: -5.913578510284424
    9. '\' → logprob: -6.538578510284424
    10. ''' → logprob: -6.788578510284424

Token 18: '_o' (ID: 28960)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17364421486854553
    2. '(' → logprob: -2.0486443042755127
    3. 's' → logprob: -3.5486443042755127
    4. ')' → logprob: -8.673644065856934
    5. 'ed' → logprob: -8.673644065856934
    6. '_s' → logprob: -9.048644065856934
    7. '_chars' → logprob: -9.048644065856934
    8. '_words' → logprob: -9.173644065856934
    9. '_space' → logprob: -9.423644065856934
    10. '_user' → logprob: -9.423644065856934

Token 19: ' =' (ID: 314)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -1.2291449308395386
    2. 's' → logprob: -1.3541449308395386
    3. 'c' → logprob: -1.4791449308395386
    4. '=' → logprob: -2.104145050048828
    5. ' =' → logprob: -2.854145050048828
    6. '_' → logprob: -4.479145050048828
    7. 'u' → logprob: -4.854145050048828
    8. '_c' → logprob: -5.104145050048828
    9. 'f' → logprob: -5.354145050048828
    10. 'cur' → logprob: -5.979145050048828

Token 20: ' user' (ID: 1825)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -1.0019538402557373
    2. ' user' → logprob: -1.2519538402557373
    3. '0' → logprob: -1.7519538402557373
    4. ' ' → logprob: -1.7519538402557373
    5. ' ' → logprob: -12.126954078674316
    6. '1' → logprob: -12.751954078674316
    7. '"user' → logprob: -13.001954078674316
    8. ''user' → logprob: -13.251954078674316
    9. '	user' → logprob: -13.501954078674316
    10. '(user' → logprob: -14.126954078674316

Token 21: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2857138514518738
    2. '_input' → logprob: -1.4107139110565186
    3. '.' → logprob: -6.5357136726379395
    4. 's' → logprob: -7.2857136726379395
    5. 'input' → logprob: -8.035714149475098
    6. '```' → logprob: -8.285714149475098
    7. '._' → logprob: -8.410714149475098
    8. 'put' → logprob: -8.535714149475098
    9. '_token' → logprob: -8.785714149475098
    10. '_output' → logprob: -8.785714149475098

Token 22: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.3880649507045746
    2. '.' → logprob: -1.138064980506897
    3. '.lower' → logprob: -7.013064861297607
    4. '.replace' → logprob: -8.763065338134766
    5. '.o' → logprob: -10.763065338134766
    6. '.split' → logprob: -10.763065338134766
    7. ' .' → logprob: -10.763065338134766
    8. '.c' → logprob: -10.763065338134766
    9. '.upper' → logprob: -11.513065338134766
    10. '.find' → logprob: -11.763065338134766

Token 23: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04814666882157326
    2. '(' → logprob: -3.2981467247009277
    3. '("("' → logprob: -4.673146724700928
    4. '("' → logprob: -7.548146724700928
    5. ''' → logprob: -8.79814624786377
    6. '"' → logprob: -11.42314624786377
    7. ''s' → logprob: -12.42314624786377
    8. '('(' → logprob: -13.04814624786377
    9. ''(' → logprob: -13.17314624786377
    10. '("(' → logprob: -13.42314624786377

Token 24: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0009415964013896883
    2. ' ")' → logprob: -7.875941753387451
    3. 'e' → logprob: -9.375941276550293
    4. ''o' → logprob: -9.625941276550293
    5. ' "' → logprob: -9.875941276550293
    6. ' o' → logprob: -9.875941276550293
    7. 'é' → logprob: -10.125941276550293
    8. ''' → logprob: -10.125941276550293
    9. '")' → logprob: -10.375941276550293
    10. 'ô' → logprob: -10.375941276550293

Token 25: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0008226146455854177
    2. '"' → logprob: -7.2508225440979
    3. ')' → logprob: -10.125823020935059
    4. 'o' → logprob: -10.250823020935059
    5. ')")' → logprob: -10.375823020935059
    6. ' ")' → logprob: -13.375823020935059
    7. '")
' → logprob: -13.500823020935059
    8. 'r' → logprob: -14.500823020935059
    9. 'm' → logprob: -14.875823020935059
    10. 'n' → logprob: -15.125823020935059

Token 26: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.061955470591783524
    2. ')' → logprob: -3.436955451965332
    3. '+' → logprob: -4.311955451965332
    4. '#' → logprob: -5.811955451965332
    5. ' ' → logprob: -5.936955451965332
    6. 'if' → logprob: -6.186955451965332
    7. ' print' → logprob: -6.686955451965332
    8. 'p' → logprob: -6.686955451965332
    9. '.' → logprob: -7.186955451965332
    10. '
' → logprob: -7.811955451965332

Token 27: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06600283086299896
    2. ' print' → logprob: -3.81600284576416
    3. ')' → logprob: -4.44100284576416
    4. ' ' → logprob: -4.81600284576416
    5. 'if' → logprob: -5.06600284576416
    6. ' if' → logprob: -5.69100284576416
    7. '#' → logprob: -6.06600284576416
    8. '+' → logprob: -6.19100284576416
    9. 'p' → logprob: -6.19100284576416
    10. '.' → logprob: -6.31600284576416

Token 28: ' bid' (ID: 16023)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47048845887184143
    2. ' print' → logprob: -1.845488429069519
    3. 'print' → logprob: -2.7204885482788086
    4. ' n' → logprob: -3.5954885482788086
    5. 'r' → logprob: -3.9704885482788086
    6. ' affiche' → logprob: -4.220488548278809
    7. 'ne' → logprob: -4.595488548278809
    8. 'b' → logprob: -4.845488548278809
    9. ' compte' → logprob: -4.970488548278809
    10. 'u' → logprob: -5.345488548278809

Token 29: 'ouille' (ID: 170864)
  Prédit: 'ouille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouille' → logprob: -0.4239448308944702
    2. 'onne' → logprob: -2.0489449501037598
    3. 'ou' → logprob: -2.2989449501037598
    4. 'o' → logprob: -3.1739449501037598
    5. 'on' → logprob: -4.04894495010376
    6. 'e' → logprob: -4.29894495010376
    7. '#' → logprob: -5.48644495010376
    8. 'i' → logprob: -5.67394495010376
    9. '_' → logprob: -5.98644495010376
    10. 'oine' → logprob: -6.17394495010376

Token 30: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35564562678337097
    2. ' if' → logprob: -2.2306456565856934
    3. 'print' → logprob: -2.4806456565856934
    4. 'if' → logprob: -2.8556456565856934
    5. ' print' → logprob: -3.9806456565856934
    6. '.' → logprob: -4.605645656585693
    7. ',' → logprob: -5.605645656585693
    8. 's' → logprob: -5.605645656585693
    9. ' for' → logprob: -6.480645656585693
    10. ' .' → logprob: -6.730645656585693

Token 31: ' peu' (ID: 9235)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3501215875148773
    2. ' peu' → logprob: -1.6001216173171997
    3. 'pe' → logprob: -2.72512149810791
    4. ' e' → logprob: -4.72512149810791
    5. ''' → logprob: -5.47512149810791
    6. ' peut' → logprob: -6.22512149810791
    7. 'p' → logprob: -6.35012149810791
    8. ' p' → logprob: -6.72512149810791
    9. ' '' → logprob: -6.72512149810791
    10. ' petit' → logprob: -6.72512149810791

Token 32: ' le' (ID: 505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.078351616859436
    2. ' if' → logprob: -1.828351616859436
    3. 's' → logprob: -2.2033514976501465
    4. 'print' → logprob: -2.3283514976501465
    5. ' ' → logprob: -2.5783514976501465
    6. '.' → logprob: -3.3283514976501465
    7. 'o' → logprob: -3.5783514976501465
    8. ',' → logprob: -3.5783514976501465
    9. 'i' → logprob: -3.8283514976501465
    10. 'for' → logprob: -4.2033514976501465

Token 33: ' calcul' (ID: 7559)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'texte' → logprob: -2.029550313949585
    2. 'rés' → logprob: -2.029550313949585
    3. ' code' → logprob: -2.154550313949585
    4. 's' → logprob: -2.404550313949585
    5. 'print' → logprob: -2.779550313949585
    6. 'r' → logprob: -2.779550313949585
    7. 'code' → logprob: -3.029550313949585
    8. 'string' → logprob: -3.029550313949585
    9. ' string' → logprob: -3.154550313949585
    10. ' reste' → logprob: -3.529550313949585

Token 34: ' ici' (ID: 27994)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0431036949157715
    2. 'result' → logprob: -2.4181036949157715
    3. 'pour' → logprob: -2.7931036949157715
    4. 'total' → logprob: -2.9181036949157715
    5. 'n' → logprob: -3.0431036949157715
    6. 'space' → logprob: -3.2931036949157715
    7. 'percentage' → logprob: -3.4181036949157715
    8. 'o' → logprob: -3.5431036949157715
    9. 'percent' → logprob: -3.5431036949157715
    10. ' pour' → logprob: -3.7931036949157715

Token 35: '  
' (ID: 4066)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.7514207363128662
    2. 'print' → logprob: -1.8764207363128662
    3. 'percentage' → logprob: -2.126420736312866
    4. 'e' → logprob: -2.876420736312866
    5. 'total' → logprob: -2.876420736312866
    6. 'o' → logprob: -2.876420736312866
    7. 'n' → logprob: -3.376420736312866
    8. 'percent' → logprob: -3.501420736312866
    9. 'result' → logprob: -3.751420736312866
    10. ',' → logprob: -3.751420736312866

Token 36: 'possible' (ID: 50714)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4376474618911743
    2. 'total' → logprob: -1.9376474618911743
    3. 'percentage' → logprob: -1.9376474618911743
    4. 'result' → logprob: -2.4376473426818848
    5. 's' → logprob: -3.1876473426818848
    6. ' print' → logprob: -3.3126473426818848
    7. 'o' → logprob: -3.3126473426818848
    8. 'percent' → logprob: -3.4376473426818848
    9. 'ratio' → logprob: -3.5626473426818848
    10. ' total' → logprob: -3.9376473426818848

Token 37: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0893946960568428
    2. '_s' → logprob: -2.9643948078155518
    3. '_' → logprob: -3.4643948078155518
    4. '_count' → logprob: -7.589394569396973
    5. '_pos' → logprob: -7.839394569396973
    6. 'es' → logprob: -8.214394569396973
    7. '_positions' → logprob: -8.464394569396973
    8. ' =' → logprob: -8.589394569396973
    9. '_choices' → logprob: -9.589394569396973
    10. ' ' → logprob: -9.714394569396973

Token 38: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.27451661229133606
    2. '2' → logprob: -2.6495165824890137
    3. ' count' → logprob: -3.1495165824890137
    4. 'len' → logprob: -3.3995165824890137
    5. 'user' → logprob: -4.149516582489014
    6. ' ' → logprob: -4.149516582489014
    7. '(' → logprob: -4.399516582489014
    8. '1' → logprob: -4.899516582489014
    9. ' len' → logprob: -4.899516582489014
    10. '(count' → logprob: -5.274516582489014

Token 39: '_o' (ID: 28960)
  Prédit: '_o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_o' → logprob: -0.00044068231363780797
    2. '_' → logprob: -7.75044059753418
    3. ' _' → logprob: -12.50044059753418
    4. '_s' → logprob: -12.87544059753418
    5. '_e' → logprob: -13.37544059753418
    6. '_a' → logprob: -14.25044059753418
    7. '_oc' → logprob: -15.37544059753418
    8. 's' → logprob: -15.50044059753418
    9. '_os' → logprob: -15.62544059753418
    10. '"_' → logprob: -16.00044059753418

Token 40: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2550011873245239
    2. '*' → logprob: -2.1300010681152344
    3. '**' → logprob: -2.7550010681152344
    4. ' **' → logprob: -4.380001068115234
    5. ' +' → logprob: -4.505001068115234
    6. '+' → logprob: -5.130001068115234
    7. '*(' → logprob: -5.630001068115234
    8. ' /' → logprob: -5.755001068115234
    9. ' ' → logprob: -5.755001068115234
    10. '>' → logprob: -7.255001068115234

Token 41: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.49537742137908936
    2. 'user' → logprob: -1.9953774213790894
    3. '2' → logprob: -2.745377540588379
    4. ' ' → logprob: -3.120377540588379
    5. 'len' → logprob: -3.120377540588379
    6. ' user' → logprob: -3.745377540588379
    7. '(' → logprob: -3.995377540588379
    8. 'count' → logprob: -4.245377540588379
    9. ' (' → logprob: -4.495377540588379
    10. '3' → logprob: -4.870377540588379

Token 42: '15' (ID: 1055)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5980941653251648
    2. 'len' → logprob: -1.7230942249298096
    3. '1' → logprob: -1.9730942249298096
    4. 'count' → logprob: -2.8480942249298096
    5. ' user' → logprob: -3.4730942249298096
    6. '2' → logprob: -4.2230939865112305
    7. ' len' → logprob: -4.7230939865112305
    8. ' ' → logprob: -4.9730939865112305
    9. ' count' → logprob: -5.9730939865112305
    10. 'max' → logprob: -5.9730939865112305

Token 43: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09585902094841003
    2. '-' → logprob: -3.0958590507507324
    3. ' *' → logprob: -3.7208590507507324
    4. ' //' → logprob: -4.845859050750732
    5. '*' → logprob: -5.345859050750732
    6. ')' → logprob: -6.345859050750732
    7. '//' → logprob: -6.720859050750732
    8. ' ' → logprob: -6.720859050750732
    9. '%' → logprob: -6.970859050750732
    10. ' +' → logprob: -7.095859050750732

Token 44: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.038546428084373474
    2. ' len' → logprob: -3.288546323776245
    3. 'user' → logprob: -8.413546562194824
    4. 'count' → logprob: -9.288546562194824
    5. ' ' → logprob: -10.413546562194824
    6. '2' → logprob: -10.538546562194824
    7. ' user' → logprob: -10.788546562194824
    8. '5' → logprob: -11.288546562194824
    9. '10' → logprob: -11.413546562194824
    10. '7' → logprob: -11.538546562194824

Token 45: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -6.945094355614856e-05
    2. '(' → logprob: -10.000069618225098
    3. 'user' → logprob: -10.750069618225098
    4. ' (' → logprob: -14.250069618225098
    5. ' user' → logprob: -14.625069618225098
    6. '(use' → logprob: -15.000069618225098
    7. ')' → logprob: -15.375069618225098
    8. '_user' → logprob: -15.625069618225098
    9. '(us' → logprob: -16.12506866455078
    10. '(input' → logprob: -16.25006866455078

Token 46: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0010365027701482177
    2. '_user' → logprob: -6.876036643981934
    3. 'input' → logprob: -13.126036643981934
    4. '_' → logprob: -13.876036643981934
    5. ')' → logprob: -15.376036643981934
    6. 'Input' → logprob: -15.751036643981934
    7. '_in' → logprob: -16.876035690307617
    8. '_output' → logprob: -16.876035690307617
    9. ' _' → logprob: -17.376035690307617
    10. '))' → logprob: -17.376035690307617

Token 47: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12975308299064636
    2. ')' → logprob: -2.1297531127929688
    3. ')))' → logprob: -6.004753112792969
    4. ' ))' → logprob: -8.379753112792969
    5. ' )' → logprob: -10.129753112792969
    6. ' ' → logprob: -11.254753112792969
    7. '))))' → logprob: -11.254753112792969
    8. ')/' → logprob: -11.754753112792969
    9. '))
' → logprob: -11.879753112792969
    10. ')//' → logprob: -12.254753112792969

Token 48: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.03549951687455177
    2. 'possible' → logprob: -3.4104995727539062
    3. ' count' → logprob: -6.410499572753906
    4. ' user' → logprob: -9.160499572753906
    5. ' ' → logprob: -9.910499572753906
    6. 'count' → logprob: -10.660499572753906
    7. ' len' → logprob: -11.660499572753906
    8. '_possible' → logprob: -11.785499572753906
    9. 'Possible' → logprob: -12.660499572753906
    10. ' ' → logprob: -13.035499572753906

Token 50: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.36449313163757324
    2. ' >' → logprob: -1.3644931316375732
    3. '>' → logprob: -3.9894931316375732
    4. '>=' → logprob: -4.239493370056152
    5. ' <=' → logprob: -4.364493370056152
    6. ' <' → logprob: -5.989493370056152
    7. ' ==' → logprob: -6.864493370056152
    8. '<=' → logprob: -8.364493370056152
    9. ' ' → logprob: -8.614493370056152
    10. '==' → logprob: -8.864493370056152

Token 51: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.13499006628990173
    2. '10' → logprob: -2.8849899768829346
    3. '16' → logprob: -4.134990215301514
    4. ' ' → logprob: -4.634990215301514
    5. '20' → logprob: -4.634990215301514
    6. '5' → logprob: -5.134990215301514
    7. '8' → logprob: -5.134990215301514
    8. '12' → logprob: -5.259990215301514
    9. '7' → logprob: -5.759990215301514
    10. '6' → logprob: -5.884990215301514

Token 52: '8' (ID: 23)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.18013635277748108
    2. '10' → logprob: -2.8051364421844482
    3. '20' → logprob: -2.9301364421844482
    4. '12' → logprob: -4.930136203765869
    5. '5' → logprob: -5.055136203765869
    6. ' ' → logprob: -5.430136203765869
    7. '16' → logprob: -5.555136203765869
    8. '18' → logprob: -5.555136203765869
    9. '8' → logprob: -5.680136203765869
    10. '7' → logprob: -5.930136203765869

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002988776541315019
    2. ' :' → logprob: -8.375298500061035
    3. ':
' → logprob: -9.625298500061035
    4. ' and' → logprob: -13.625298500061035
    5. ':
' → logprob: -15.625298500061035
    6. '.' → logprob: -15.750298500061035
    7. ':**' → logprob: -16.25029945373535
    8. ',' → logprob: -16.50029945373535
    9. ' :
' → logprob: -16.62529945373535
    10. ' or' → logprob: -16.62529945373535

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21208305656909943
    2. ' print' → logprob: -1.962083101272583
    3. 'print' → logprob: -3.087083101272583
    4. '    
' → logprob: -6.587082862854004
    5. '
' → logprob: -6.837082862854004
    6. ' 
' → logprob: -7.087082862854004
    7. '\n' → logprob: -7.837082862854004
    8. '	print' → logprob: -8.212082862854004
    9. ' ' → logprob: -8.462082862854004
    10. '\' → logprob: -8.837082862854004

Token 55: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03143515810370445
    2. ' print' → logprob: -3.531435251235962
    3. '   ' → logprob: -6.406435012817383
    4. 'pass' → logprob: -11.156435012817383
    5. ' ' → logprob: -12.281435012817383
    6. '	print' → logprob: -12.281435012817383
    7. ' pass' → logprob: -13.031435012817383
    8. '#' → logprob: -13.406435012817383
    9. 'pr' → logprob: -13.531435012817383
    10. '    ' → logprob: -14.281435012817383

Token 56: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0701155960559845
    2. '(' → logprob: -2.695115566253662
    3. '(True' → logprob: -9.44511604309082
    4. '('' → logprob: -9.94511604309082
    5. '("("' → logprob: -10.69511604309082
    6. '(":' → logprob: -11.57011604309082
    7. '()' → logprob: -12.07011604309082
    8. '"' → logprob: -12.44511604309082
    9. '("")' → logprob: -12.57011604309082
    10. '("(' → logprob: -13.44511604309082

Token 57: 'YES' (ID: 31958)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.3789117336273193
    2. 'Oui' → logprob: -1.5039117336273193
    3. 'Bravo' → logprob: -3.0039117336273193
    4. '"' → logprob: -3.3789117336273193
    5. 'Yes' → logprob: -3.3789117336273193
    6. 'Bonne' → logprob: -3.3789117336273193
    7. 'C' → logprob: -3.6289117336273193
    8. 'oui' → logprob: -3.8789117336273193
    9. 'OK' → logprob: -4.003911972045898
    10. 'F' → logprob: -4.253911972045898

Token 58: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.001256780233234167
    2. '")
' → logprob: -6.751256942749023
    3. '")
' → logprob: -9.751256942749023
    4. '!")' → logprob: -10.876256942749023
    5. ')")' → logprob: -12.626256942749023
    6. ')' → logprob: -12.876256942749023
    7. '"' → logprob: -13.001256942749023
    8. ' ")' → logprob: -15.251256942749023
    9. '")

' → logprob: -15.501256942749023
    10. '”)' → logprob: -15.626256942749023

Token 59: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0031791406217962503
    2. ' else' → logprob: -5.75317907333374
    3. 'es' → logprob: -15.128179550170898
    4. '```' → logprob: -15.253179550170898
    5. 'e' → logprob: -15.378179550170898
    6. 'elif' → logprob: -15.878179550170898
    7. 'lse' → logprob: -16.3781795501709
    8. 'elser' → logprob: -16.3781795501709
    9. '	else' → logprob: -16.7531795501709
    10. ' ' → logprob: -16.7531795501709

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01255732774734497
    2. ':
' → logprob: -4.387557506561279
    3. '   ' → logprob: -10.137557029724121
    4. ' :' → logprob: -12.012557029724121
    5. ' :
' → logprob: -13.762557029724121
    6. ':
' → logprob: -14.137557029724121
    7. ':

' → logprob: -16.637557983398438
    8. ':\' → logprob: -17.137557983398438
    9. '  ' → logprob: -17.262557983398438
    10. 'print' → logprob: -17.387557983398438

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035434053279459476
    2. 'print' → logprob: -6.378543376922607
    3. ' print' → logprob: -6.753543376922607
    4. '    ' → logprob: -7.878543376922607
    5. '"' → logprob: -8.253543853759766
    6. '    
' → logprob: -11.753543853759766
    7. '       ' → logprob: -12.003543853759766
    8. '	print' → logprob: -12.128543853759766
    9. '  ' → logprob: -12.878543853759766
    10. ' ' → logprob: -13.128543853759766

Token 62: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4216907024383545
    2. 'print' (adapté à ' print') → logprob: -1.5466907024383545
    3. ' print' → logprob: -2.0466907024383545
    4. '"' → logprob: -6.296690940856934
    5. '    ' → logprob: -9.921690940856934
    6. '	print' → logprob: -10.671690940856934
    7. ' ' → logprob: -11.921690940856934
    8. '  ' → logprob: -11.921690940856934
    9. '(print' → logprob: -12.546690940856934
    10. '    
' → logprob: -12.796690940856934

Token 63: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.04912865161895752
    2. '(' → logprob: -3.049128532409668
    3. '("("' → logprob: -7.549128532409668
    4. '("")' → logprob: -11.674128532409668
    5. '('' → logprob: -13.049128532409668
    6. '("(' → logprob: -13.799128532409668
    7. '("""' → logprob: -14.174128532409668
    8. '()' → logprob: -14.299128532409668
    9. '(">' → logprob: -15.174128532409668
    10. '(""' → logprob: -15.174128532409668

Token 64: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.006496397312730551
    2. '"' → logprob: -5.256496429443359
    3. '"N' → logprob: -6.756496429443359
    4. 'NON' → logprob: -10.25649642944336
    5. '"No' → logprob: -10.25649642944336
    6. 'N' → logprob: -10.88149642944336
    7. '")' → logprob: -12.00649642944336
    8. '   ' → logprob: -13.75649642944336
    9. ' NO' → logprob: -14.38149642944336
    10. 'NOP' → logprob: -14.88149642944336

Token 65: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0002153378736693412
    2. ')' → logprob: -8.500215530395508
    3. ')")' → logprob: -11.500215530395508
    4. '"' → logprob: -13.625215530395508
    5. '")
' → logprob: -14.750215530395508
    6. '}")' → logprob: -17.250215530395508
    7. '!")' → logprob: -17.375215530395508
    8. '')' → logprob: -17.500215530395508
    9. ')"' → logprob: -18.000215530395508
    10. ' ")' → logprob: -18.875215530395508

Token 66: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' Bon' (ID: 12658)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' tant' (ID: 16235)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' pis' (ID: 19525)
  Prédit: ' qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' qu' → logprob: -1.5887854099273682
    2. ' que' → logprob: -1.9637854099273682
    3. '   ' → logprob: -2.213785409927368
    4. '!' → logprob: -2.713785409927368
    5. 'p' → logprob: -2.713785409927368
    6. ' #' → logprob: -2.963785409927368
    7. '#' → logprob: -2.963785409927368
    8. ' ' → logprob: -3.088785409927368
    9. '.' → logprob: -3.338785409927368
    10. '  ' → logprob: -3.338785409927368

Token 71: '...' (ID: 1008)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 23.19%
Précision adaptée (1ère position): 24.64%
Précision (top 10): 53.62%
================================================================================
