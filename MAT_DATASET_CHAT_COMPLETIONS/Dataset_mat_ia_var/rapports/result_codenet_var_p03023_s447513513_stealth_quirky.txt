================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=[*map(int,[input()])][0]
print((1+89//.5)*(N-2)//1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=[' (ID: 13370)
  → Token d'amorce (pas de prédiction)

Token 2: '*' (ID: 9)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.170500710606575
    2. '0' → logprob: -1.9205007553100586
    3. '1' → logprob: -4.795500755310059
    4. ' range' → logprob: -6.295500755310059
    5. '10' → logprob: -10.170500755310059
    6. ''' → logprob: -11.045500755310059
    7. '(range' → logprob: -11.045500755310059
    8. '100' → logprob: -12.170500755310059
    9. ']' → logprob: -12.295500755310059
    10. '```' → logprob: -12.420500755310059

Token 4: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.45364636182785034
    2. '(' → logprob: -1.0786464214324951
    3. '(str' → logprob: -4.328646183013916
    4. '(lambda' → logprob: -4.703646183013916
    5. '[int' → logprob: -7.453646183013916
    6. 'int' → logprob: -8.078646659851074
    7. '```' → logprob: -8.078646659851074
    8. '(eval' → logprob: -8.828646659851074
    9. '(
' → logprob: -8.953646659851074
    10. ']int' → logprob: -9.078646659851074

Token 5: ',[' (ID: 35502)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1848246306180954
    2. '(' → logprob: -1.8098245859146118
    3. ')' → logprob: -6.059824466705322
    4. 'input' → logprob: -7.309824466705322
    5. '(range' → logprob: -8.05982494354248
    6. '(N' → logprob: -8.43482494354248
    7. '(data' → logprob: -8.68482494354248
    8. '(inp' → logprob: -9.05982494354248
    9. '(raw' → logprob: -9.18482494354248
    10. '(user' → logprob: -9.18482494354248

Token 6: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002242558402940631
    2. ' input' → logprob: -6.627242565155029
    3. '(input' → logprob: -7.502242565155029
    4. '])' → logprob: -9.127242088317871
    5. ',input' → logprob: -10.127242088317871
    6. ')' → logprob: -10.252242088317871
    7. ''' → logprob: -10.502242088317871
    8. 'i' → logprob: -10.627242088317871
    9. 's' → logprob: -10.752242088317871
    10. ')])' → logprob: -11.252242088317871

Token 7: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07718296349048615
    2. '()]' → logprob: -2.8271830081939697
    3. '())' → logprob: -4.577182769775391
    4. '(' → logprob: -6.202182769775391
    5. ']()' → logprob: -6.702182769775391
    6. '('' → logprob: -8.20218276977539
    7. '()][' → logprob: -8.57718276977539
    8. '(()' → logprob: -8.82718276977539
    9. ')])' → logprob: -8.95218276977539
    10. '().' → logprob: -9.20218276977539

Token 8: '])' (ID: 4636)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5922653675079346
    2. '()' → logprob: -0.9672653675079346
    3. '()]' → logprob: -3.0922653675079346
    4. ')])' → logprob: -4.4672651290893555
    5. '])' → logprob: -5.5922651290893555
    6. '().' → logprob: -5.5922651290893555
    7. '()))' → logprob: -7.3422651290893555
    8. '])]' → logprob: -7.8422651290893555
    9. ']))' → logprob: -8.217265129089355
    10. '()][' → logprob: -8.342265129089355

Token 9: '][' (ID: 2696)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.7712986469268799
    2. ')])' → logprob: -1.1462986469268799
    3. ')' → logprob: -1.8962986469268799
    4. '])' → logprob: -3.39629864692688
    5. '])]' → logprob: -3.39629864692688
    6. '(' → logprob: -6.646298408508301
    7. ']' → logprob: -7.021298408508301
    8. '))' → logprob: -8.7712984085083
    9. ']])' → logprob: -9.5212984085083
    10. ')],' → logprob: -9.8962984085083

Token 10: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18036571145057678
    2. '-' → logprob: -1.8053656816482544
    3. ':' → logprob: -7.805365562438965
    4. ' ' → logprob: -9.555365562438965
    5. ' -' → logprob: -10.430365562438965
    6. '])' → logprob: -10.680365562438965
    7. ')' → logprob: -10.930365562438965
    8. '-i' → logprob: -11.305365562438965
    9. ' :' → logprob: -11.680365562438965
    10. ']' → logprob: -12.180365562438965

Token 11: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07152815163135529
    2. ']' → logprob: -3.571528196334839
    3. ')' → logprob: -4.07152795791626
    4. '])' → logprob: -4.19652795791626
    5. '])]' → logprob: -4.94652795791626
    6. ')])' → logprob: -6.44652795791626
    7. '+' → logprob: -10.821528434753418
    8. '')]' → logprob: -10.946528434753418
    9. '`]' → logprob: -11.196528434753418
    10. ' ])' → logprob: -11.196528434753418

Token 12: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05012169107794762
    2. '(' → logprob: -4.175121784210205
    3. '*' → logprob: -4.425121784210205
    4. ')' → logprob: -5.050121784210205
    5. ' ' → logprob: -5.425121784210205
    6. '%' → logprob: -5.675121784210205
    7. '+
' → logprob: -6.425121784210205
    8. '<|end|>' → logprob: -6.925121784210205
    9. ',' → logprob: -7.175121784210205
    10. '#' → logprob: -7.425121784210205

Token 13: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.456358823925257e-05
    2. '("("' → logprob: -10.750064849853516
    3. '('' → logprob: -11.375064849853516
    4. '((' → logprob: -12.000064849853516
    5. '(N' → logprob: -12.125064849853516
    6. ' (' → logprob: -12.250064849853516
    7. '()' → logprob: -12.500064849853516
    8. '(
' → logprob: -13.375064849853516
    9. '(**' → logprob: -13.500064849853516
    10. '("""' → logprob: -13.500064849853516

Token 14: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01021603960543871
    2. ''N' → logprob: -5.635216236114502
    3. 'chr' → logprob: -6.385216236114502
    4. ' N' → logprob: -6.635216236114502
    5. ''' → logprob: -6.760216236114502
    6. 'int' → logprob: -7.635216236114502
    7. 'str' → logprob: -8.010215759277344
    8. 'abs' → logprob: -8.010215759277344
    9. '1' → logprob: -8.635215759277344
    10. '"N' → logprob: -8.885215759277344

Token 15: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04228673130273819
    2. '+)' → logprob: -3.4172866344451904
    3. '-' → logprob: -5.4172868728637695
    4. ' +' → logprob: -6.1672868728637695
    5. ')' → logprob: -7.1672868728637695
    6. ' )' → logprob: -8.29228687286377
    7. '-)' → logprob: -8.66728687286377
    8. '+n' → logprob: -8.79228687286377
    9. ' -' → logprob: -9.04228687286377
    10. '*' → logprob: -9.41728687286377

Token 16: '89' (ID: 7479)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05705362185835838
    2. ' N' → logprob: -2.932053565979004
    3. 'int' → logprob: -7.182053565979004
    4. '1' → logprob: -7.307053565979004
    5. ' ' → logprob: -8.432053565979004
    6. '2' → logprob: -8.432053565979004
    7. ' int' → logprob: -9.557053565979004
    8. '(' → logprob: -10.057053565979004
    9. ' (' → logprob: -10.182053565979004
    10. '(N' → logprob: -10.682053565979004

Token 17: '//' (ID: 393)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5298429727554321
    2. ')' → logprob: -2.0298428535461426
    3. '*N' → logprob: -2.4048428535461426
    4. ')*' → logprob: -2.5298428535461426
    5. '*)' → logprob: -3.1548428535461426
    6. ')**' → logprob: -3.4048428535461426
    7. '*n' → logprob: -4.779842853546143
    8. '**' → logprob: -5.029842853546143
    9. '))' → logprob: -5.279842853546143
    10. '+' → logprob: -6.029842853546143

Token 18: '.' (ID: 13)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0035486393608152866
    2. '2' → logprob: -6.628548622131348
    3. '9' → logprob: -6.878548622131348
    4. 'int' → logprob: -7.878548622131348
    5. '(' → logprob: -8.378548622131348
    6. '10' → logprob: -8.753548622131348
    7. '3' → logprob: -9.003548622131348
    8. ' N' → logprob: -9.253548622131348
    9. '89' → logprob: -10.128548622131348
    10. '100' → logprob: -10.628548622131348

Token 19: '5' (ID: 20)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1980772167444229
    2. '3' → logprob: -2.5730772018432617
    3. '5' → logprob: -3.4480772018432617
    4. '2' → logprob: -3.4480772018432617
    5. '7' → logprob: -4.573077201843262
    6. '1' → logprob: -4.573077201843262
    7. '4' → logprob: -5.698077201843262
    8. '6' → logprob: -5.823077201843262
    9. 'N' → logprob: -5.823077201843262
    10. 'int' → logprob: -6.198077201843262

Token 20: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1972295492887497
    2. '*' → logprob: -2.6972296237945557
    3. '))' → logprob: -2.9472296237945557
    4. '**' → logprob: -4.197229385375977
    5. ')*' → logprob: -4.447229385375977
    6. ' )' → logprob: -4.822229385375977
    7. ')**' → logprob: -4.947229385375977
    8. '*)' → logprob: -5.322229385375977
    9. ')))' → logprob: -6.197229385375977
    10. '0' → logprob: -6.322229385375977

Token 21: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.024093274027109146
    2. '89' → logprob: -4.149093151092529
    3. ' N' → logprob: -5.524093151092529
    4. 'int' → logprob: -6.649093151092529
    5. '(' → logprob: -7.399093151092529
    6. '1' → logprob: -7.649093151092529
    7. '90' → logprob: -8.024093627929688
    8. 'len' → logprob: -8.149093627929688
    9. '2' → logprob: -8.524093627929688
    10. ' ' → logprob: -9.024093627929688

Token 22: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14868701994419098
    2. '))' → logprob: -2.3986871242523193
    3. '-' → logprob: -3.3986871242523193
    4. ' )' → logprob: -4.77368688583374
    5. ')))' → logprob: -6.64868688583374
    6. ' ))' → logprob: -7.02368688583374
    7. '+' → logprob: -7.39868688583374
    8. ' -' → logprob: -7.52368688583374
    9. '>' → logprob: -7.64868688583374
    10. '**' → logprob: -7.77368688583374

Token 23: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002080312930047512
    2. ' ' → logprob: -6.25208044052124
    3. '0' → logprob: -9.752079963684082
    4. '2' → logprob: -9.752079963684082
    5. '3' → logprob: -11.627079963684082
    6. 'N' → logprob: -11.752079963684082
    7. '4' → logprob: -12.627079963684082
    8. '5' → logprob: -12.877079963684082
    9. ' N' → logprob: -13.377079963684082
    10. '9' → logprob: -13.502079963684082

Token 24: ')//' (ID: 60375)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5242241024971008
    2. ')' → logprob: -0.8992241024971008
    3. ')**' → logprob: -7.649224281311035
    4. ')))' → logprob: -8.149224281311035
    5. ')*' → logprob: -8.774224281311035
    6. ')+' → logprob: -10.274224281311035
    7. ' )' → logprob: -10.524224281311035
    8. '+' → logprob: -10.649224281311035
    9. ' ))' → logprob: -10.774224281311035
    10. '**' → logprob: -11.399224281311035

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5140157341957092
    2. '2' → logprob: -1.0140156745910645
    3. '3' → logprob: -4.0140156745910645
    4. '4' → logprob: -5.3890156745910645
    5. '6' → logprob: -5.7640156745910645
    6. '100' → logprob: -6.1390156745910645
    7. '10' → logprob: -6.1390156745910645
    8. '90' → logprob: -6.5140156745910645
    9. '5' → logprob: -6.6390156745910645
    10. 'N' → logprob: -6.7640156745910645

Token 26: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002740906202234328
    2. '))' → logprob: -8.750273704528809
    3. '*' → logprob: -9.625273704528809
    4. ' )' → logprob: -11.125273704528809
    5. ')))' → logprob: -11.625273704528809
    6. ')*' → logprob: -11.750273704528809
    7. '*)' → logprob: -12.375273704528809
    8. '**' → logprob: -13.250273704528809
    9. ')`' → logprob: -13.250273704528809
    10. '```' → logprob: -13.375273704528809


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 24
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 14
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 58.33%
================================================================================
