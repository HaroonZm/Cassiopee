================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    a, b = input().split()
    a = int(a)
    b = int(b)
    a1 = 12.5 * a
    a2 = 12.5 * (a + 1)
    b1 = 10 * b
    b2 = 10 * (b + 1)
    if a2 <= b1:
        print(-1)
        return
    if b2 <= a1:
        print(-1)
        return
    if a1 > b1:
        ans = int(a1+1) if a1 != int(a1) else int(a1)
    else:
        ans = b1
    print(ans)
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.33477112650871277
    2. '\n' → logprob: -1.8347711563110352
    3. ' 
' → logprob: -2.709771156311035
    4. '    
' → logprob: -3.834771156311035
    5. ' ' → logprob: -4.834771156311035
    6. '   ' → logprob: -5.459771156311035
    7. '  
' → logprob: -5.709771156311035
    8. '(' → logprob: -5.834771156311035
    9. '    ' → logprob: -5.959771156311035
    10. ''' → logprob: -6.084771156311035

Token 4: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5911958813667297
    2. '   ' → logprob: -1.841195821762085
    3. '    ' → logprob: -2.591195821762085
    4. 'return' → logprob: -2.966195821762085
    5. ' ' → logprob: -3.591195821762085
    6. '\' → logprob: -3.841195821762085
    7. 'pass' → logprob: -3.966195821762085
    8. 'a' (adapté à ' a') → logprob: -4.091196060180664
    9. '_' → logprob: -4.591196060180664
    10. '#' → logprob: -4.841196060180664

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4549591839313507
    2. ' =' → logprob: -1.2049591541290283
    3. ' ' → logprob: -3.9549591541290283
    4. '.' → logprob: -3.9549591541290283
    5. ',' → logprob: -4.704959392547607
    6. '+' → logprob: -4.704959392547607
    7. '_' → logprob: -6.329959392547607
    8. '[' → logprob: -6.454959392547607
    9. ' +=' → logprob: -6.579959392547607
    10. '+=' → logprob: -7.204959392547607

Token 6: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.13543355464935303
    2. 'b' → logprob: -2.7604336738586426
    3. ' ' → logprob: -2.7604336738586426
    4. ' =' → logprob: -10.260433197021484
    5. 'space' → logprob: -10.760433197021484
    6. '=' → logprob: -11.385433197021484
    7. '_' → logprob: -11.760433197021484
    8. ' ,' → logprob: -11.760433197021484
    9. ')' → logprob: -12.260433197021484
    10. 'a' → logprob: -12.260433197021484

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3559146523475647
    2. '=' → logprob: -1.35591459274292
    3. ',' → logprob: -3.23091459274292
    4. ')' → logprob: -7.10591459274292
    5. ' ,' → logprob: -7.10591459274292
    6. '<|end|>' → logprob: -8.480915069580078
    7. ' ' → logprob: -9.230915069580078
    8. '  ' → logprob: -9.230915069580078
    9. '[' → logprob: -9.980915069580078
    10. '.' → logprob: -10.230915069580078

Token 8: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011207559145987034
    2. '1' → logprob: -5.261207580566406
    3. '5' → logprob: -5.761207580566406
    4. '0' → logprob: -6.761207580566406
    5. '10' → logprob: -7.261207580566406
    6. ' input' → logprob: -7.511207580566406
    7. ' map' → logprob: -8.886207580566406
    8. 'input' → logprob: -9.011207580566406
    9. '3' → logprob: -9.886207580566406
    10. '  ' → logprob: -10.761207580566406

Token 9: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009735076688230038
    2. '('' → logprob: -4.884735107421875
    3. ''' → logprob: -7.259735107421875
    4. '("("' → logprob: -7.384735107421875
    5. '"' → logprob: -8.259735107421875
    6. '()' → logprob: -8.384735107421875
    7. '(
' → logprob: -9.259735107421875
    8. ')' → logprob: -10.384735107421875
    9. ' (' → logprob: -10.759735107421875
    10. '```' → logprob: -11.009735107421875

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005007279687561095
    2. 'strip' → logprob: -7.625500679016113
    3. ' split' → logprob: -11.750500679016113
    4. 'spl' → logprob: -13.000500679016113
    5. 'rstrip' → logprob: -13.125500679016113
    6. 'replace' → logprob: -15.250500679016113
    7. '```' → logprob: -15.750500679016113
    8. 'sp' → logprob: -16.37550163269043
    9. 'rs' → logprob: -17.00050163269043
    10. 's' → logprob: -17.00050163269043

Token 11: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10034426301717758
    2. '()' → logprob: -2.850344181060791
    3. '('' → logprob: -3.350344181060791
    4. '("("' → logprob: -6.725344181060791
    5. '"' → logprob: -8.22534465789795
    6. '(
' → logprob: -8.35034465789795
    7. '`' → logprob: -8.47534465789795
    8. ''' → logprob: -8.85034465789795
    9. '("' → logprob: -8.97534465789795
    10. '(

' → logprob: -9.72534465789795

Token 12: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.8771700859069824
    2. ',' → logprob: -2.0021700859069824
    3. '   ' → logprob: -2.1271700859069824
    4. '\' → logprob: -2.2521700859069824
    5. '()' → logprob: -2.3771700859069824
    6. '\n' → logprob: -2.5021700859069824
    7. '```' → logprob: -2.6271700859069824
    8. '<|end|>' → logprob: -2.7521700859069824
    9. '[' → logprob: -3.0021700859069824
    10. '    
' → logprob: -3.8771700859069824

Token 13: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.5369929075241089
    2. ',' → logprob: -1.7869929075241089
    3. 'c' → logprob: -1.9119929075241089
    4. '=' → logprob: -4.036993026733398
    5. ' ' → logprob: -4.411993026733398
    6. ' a' → logprob: -4.536993026733398
    7. 'if' → logprob: -5.036993026733398
    8. ' =' → logprob: -5.036993026733398
    9. '   ' → logprob: -5.286993026733398
    10. ')' → logprob: -5.286993026733398

Token 14: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12003672122955322
    2. '[' → logprob: -2.8700366020202637
    3. '.' → logprob: -3.9950366020202637
    4. '=' → logprob: -4.620036602020264
    5. ' ' → logprob: -4.995036602020264
    6. ' +' → logprob: -5.120036602020264
    7. ',' → logprob: -5.120036602020264
    8. '_' → logprob: -5.495036602020264
    9. ')' → logprob: -6.370036602020264
    10. '*' → logprob: -7.120036602020264

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3150034248828888
    2. 'int' → logprob: -1.3150033950805664
    3. ' float' → logprob: -6.565003395080566
    4. 'float' → logprob: -8.690003395080566
    5. ' input' → logprob: -9.815003395080566
    6. ' a' → logprob: -10.190003395080566
    7. 'a' → logprob: -10.690003395080566
    8. 'input' → logprob: -10.940003395080566
    9. ' ' → logprob: -11.690003395080566
    10. '   ' → logprob: -11.690003395080566

Token 16: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2813950181007385
    2. '(a' → logprob: -1.4063949584960938
    3. '()' → logprob: -9.406394958496094
    4. '('' → logprob: -9.406394958496094
    5. 'a' → logprob: -11.031394958496094
    6. ' (' → logprob: -11.531394958496094
    7. '(input' → logprob: -11.906394958496094
    8. '(
' → logprob: -11.906394958496094
    9. '(`' → logprob: -12.406394958496094
    10. '((' → logprob: -12.531394958496094

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002094826428219676
    2. '+' → logprob: -6.502094745635986
    3. ' )' → logprob: -8.002095222473145
    4. ',' → logprob: -9.502095222473145
    5. '),' → logprob: -10.002095222473145
    6. ' +' → logprob: -10.252095222473145
    7. '*' → logprob: -10.627095222473145
    8. '   ' → logprob: -11.127095222473145
    9. ')
' → logprob: -11.377095222473145
    10. '+)' → logprob: -11.627095222473145

Token 18: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4848157465457916
    2. '<|end|>' → logprob: -1.4848157167434692
    3. ' ' → logprob: -2.734815835952759
    4. '   ' → logprob: -3.234815835952759
    5. ' +' → logprob: -3.734815835952759
    6. ')' → logprob: -5.23481559753418
    7. '```' → logprob: -5.23481559753418
    8. '+
' → logprob: -5.48481559753418
    9. ',' → logprob: -5.85981559753418
    10. '*' → logprob: -5.98481559753418

Token 19: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.0844948291778564
    2. ' ' → logprob: -1.2094948291778564
    3. 'b' (adapté à ' b') → logprob: -1.8344948291778564
    4. ',' → logprob: -1.9594948291778564
    5. ' ,' → logprob: -3.0844948291778564
    6. '    ' → logprob: -5.209494590759277
    7. '   ' → logprob: -5.334494590759277
    8. ',b' → logprob: -6.209494590759277
    9. ')' → logprob: -6.334494590759277
    10. '  ' → logprob: -7.334494590759277

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06520941853523254
    2. '=' → logprob: -3.06520938873291
    3. ' +=' → logprob: -4.81520938873291
    4. '+' → logprob: -5.69020938873291
    5. ' +' → logprob: -5.69020938873291
    6. ' ' → logprob: -7.69020938873291
    7. ' ==' → logprob: -8.44020938873291
    8. ')' → logprob: -8.56520938873291
    9. ' *' → logprob: -8.81520938873291
    10. '*' → logprob: -9.19020938873291

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.11283891648054123
    2. 'int' → logprob: -2.2378389835357666
    3. '   ' → logprob: -12.487838745117188
    4. ' ' → logprob: -12.737838745117188
    5. '  ' → logprob: -12.862838745117188
    6. '(int' → logprob: -13.237838745117188
    7. '=int' → logprob: -13.362838745117188
    8. '[int' → logprob: -13.987838745117188
    9. '<int' → logprob: -14.362838745117188
    10. '	int' → logprob: -14.612838745117188

Token 22: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.16036853194236755
    2. '(' → logprob: -1.91036856174469
    3. ' (' → logprob: -9.285368919372559
    4. '(B' → logprob: -11.660368919372559
    5. '(
' → logprob: -11.910368919372559
    6. '(a' → logprob: -11.910368919372559
    7. ')' → logprob: -12.035368919372559
    8. 'b' → logprob: -12.285368919372559
    9. '(input' → logprob: -12.535368919372559
    10. ')(' → logprob: -12.910368919372559

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -15.500003814697266
    4. '))' → logprob: -15.500003814697266
    5. '+' → logprob: -16.250003814697266
    6. '<|end|>' → logprob: -16.250003814697266
    7. '')' → logprob: -16.375003814697266
    8. '),' → logprob: -16.625003814697266
    9. '   ' → logprob: -16.750003814697266
    10. ')

' → logprob: -16.875003814697266

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9483640193939209
    2. '\n' → logprob: -1.448364019393921
    3. '
' → logprob: -1.573364019393921
    4. '    
' → logprob: -2.823364019393921
    5. ' ' → logprob: -3.698364019393921
    6. '\' → logprob: -3.698364019393921
    7. '```' → logprob: -3.823364019393921
    8. 'c' → logprob: -4.8233642578125
    9. '<|end|>' → logprob: -5.0733642578125
    10. '  
' → logprob: -5.1983642578125

Token 25: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7477261424064636
    2. ' if' → logprob: -1.6227262020111084
    3. 'if' → logprob: -1.8727262020111084
    4. 'c' → logprob: -2.9977262020111084
    5. ' ' → logprob: -3.6227262020111084
    6. '\n' → logprob: -4.247725963592529
    7. '    
' → logprob: -4.372725963592529
    8. 'i' → logprob: -4.622725963592529
    9. '```' → logprob: -4.622725963592529
    10. 'n' → logprob: -5.372725963592529

Token 26: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00786177720874548
    2. ' +' → logprob: -4.882861614227295
    3. '%' → logprob: -9.132862091064453
    4. '*' → logprob: -10.007862091064453
    5. '>' → logprob: -10.257862091064453
    6. '-' → logprob: -10.507862091064453
    7. '+b' → logprob: -12.007862091064453
    8. '=' → logprob: -12.382862091064453
    9. ' *' → logprob: -12.632862091064453
    10. '_' → logprob: -12.757862091064453

Token 27: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08984806388616562
    2. ' +' → logprob: -3.214848041534424
    3. ' +=' → logprob: -3.839848041534424
    4. '%' → logprob: -4.339848041534424
    5. '+=' → logprob: -6.089848041534424
    6. ' %' → logprob: -6.214848041534424
    7. '=' → logprob: -6.464848041534424
    8. ' =' → logprob: -6.714848041534424
    9. '*' → logprob: -7.589848041534424
    10. ' *' → logprob: -7.714848041534424

Token 28: ' ' (ID: 220)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6434739232063293
    2. 'a' → logprob: -0.7684739232063293
    3. ' ' → logprob: -5.768474102020264
    4. '0' → logprob: -5.768474102020264
    5. ' []' → logprob: -6.143474102020264
    6. '[]' → logprob: -7.018474102020264
    7. ' str' → logprob: -8.018473625183105
    8. '1' → logprob: -8.268473625183105
    9. ' b' → logprob: -8.393473625183105
    10. 'b' → logprob: -8.768473625183105

Token 29: '12' (ID: 899)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004078047350049019
    2. 'b' → logprob: -6.754077911376953
    3. ' a' → logprob: -6.754077911376953
    4. '[]' → logprob: -8.129077911376953
    5. '0' → logprob: -8.379077911376953
    6. 'str' → logprob: -8.629077911376953
    7. 'abs' → logprob: -8.754077911376953
    8. '1' → logprob: -9.004077911376953
    9. '[a' → logprob: -9.129077911376953
    10. '2' → logprob: -9.254077911376953

Token 30: '.' (ID: 13)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9187321662902832
    2. '*' → logprob: -1.4187321662902832
    3. '0' → logprob: -1.7937321662902832
    4. ' +' → logprob: -2.543732166290283
    5. ' *' → logprob: -2.793732166290283
    6. '6' → logprob: -4.168732166290283
    7. '-' → logprob: -4.293732166290283
    8. '**' → logprob: -5.793732166290283
    9. ')' → logprob: -5.918732166290283
    10. ':' → logprob: -5.918732166290283

Token 31: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.3197272717952728
    2. '0' → logprob: -1.4447273015975952
    3. '3' → logprob: -3.8197271823883057
    4. '34' → logprob: -5.069727420806885
    5. '7' → logprob: -5.319727420806885
    6. '6' → logprob: -6.944727420806885
    7. '4' → logprob: -6.944727420806885
    8. '2' → logprob: -7.444727420806885
    9. '1' → logprob: -7.694727420806885
    10. '8' → logprob: -7.819727420806885

Token 32: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3621213734149933
    2. '+' → logprob: -1.237121343612671
    3. '<|end|>' → logprob: -5.61212158203125
    4. ' *' → logprob: -5.98712158203125
    5. '**' → logprob: -6.23712158203125
    6. ' +' → logprob: -6.98712158203125
    7. '*a' → logprob: -7.48712158203125
    8. 'a' → logprob: -7.61212158203125
    9. ' ' → logprob: -7.73712158203125
    10. '-' → logprob: -7.86212158203125

Token 33: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12967559695243835
    2. ' a' → logprob: -2.1296756267547607
    3. 'b' → logprob: -6.129675388336182
    4. ' b' → logprob: -7.629675388336182
    5. ' ' → logprob: -9.75467586517334
    6. ' (' → logprob: -12.00467586517334
    7. '(a' → logprob: -13.12967586517334
    8. '  ' → logprob: -13.25467586517334
    9. '4' → logprob: -13.50467586517334
    10. '(' → logprob: -13.50467586517334

Token 34: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14291523396968842
    2. ' +' → logprob: -2.1429152488708496
    3. '*' → logprob: -4.89291524887085
    4. '**' → logprob: -5.51791524887085
    5. '+
' → logprob: -6.14291524887085
    6. '-' → logprob: -7.76791524887085
    7. ' ' → logprob: -7.76791524887085
    8. ' +
' → logprob: -7.89291524887085
    9. '+b' → logprob: -8.892914772033691
    10. '\n' → logprob: -9.017914772033691

Token 35: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4216752052307129
    2. '*' → logprob: -1.546675205230713
    3. ' +' → logprob: -3.421675205230713
    4. '-' → logprob: -4.171675205230713
    5. '+
' → logprob: -4.171675205230713
    6. '\n' → logprob: -4.296675205230713
    7. '**' → logprob: -4.296675205230713
    8. ' ' → logprob: -4.671675205230713
    9. '   ' → logprob: -5.046675205230713
    10. ' 
' → logprob: -5.421675205230713

Token 36: ' a' (ID: 261)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7690635919570923
    2. '\n' → logprob: -1.7690635919570923
    3. ' +' → logprob: -2.3940634727478027
    4. '*' → logprob: -2.5190634727478027
    5. '-' → logprob: -3.0190634727478027
    6. ' ' → logprob: -3.5190634727478027
    7. 'b' → logprob: -4.019063472747803
    8. '\' → logprob: -4.394063472747803
    9. '+b' → logprob: -4.519063472747803
    10. '+
' → logprob: -4.644063472747803

Token 37: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3024210035800934
    2. '1' → logprob: -2.5524210929870605
    3. ' +' → logprob: -2.6774210929870605
    4. '*' → logprob: -3.1774210929870605
    5. ' *' → logprob: -3.6774210929870605
    6. '%' → logprob: -4.3024210929870605
    7. '-' → logprob: -4.6774210929870605
    8. '>' → logprob: -5.6774210929870605
    9. '2' → logprob: -5.8024210929870605
    10. ' **' → logprob: -5.8024210929870605

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021502235904335976
    2. '=' → logprob: -3.8965022563934326
    3. ' ' → logprob: -7.3965020179748535
    4. ' *' → logprob: -8.646502494812012
    5. '*' → logprob: -9.896502494812012
    6. ' *=' → logprob: -10.021502494812012
    7. ' +=' → logprob: -11.521502494812012
    8. ',' → logprob: -11.896502494812012
    9. '>' → logprob: -12.146502494812012
    10. '_' → logprob: -12.146502494812012

Token 39: ' ' (ID: 220)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -1.3313337564468384
    2. ' ' → logprob: -1.4563337564468384
    3. '24' → logprob: -2.081333637237549
    4. '12' → logprob: -2.331333637237549
    5. '6' → logprob: -2.831333637237549
    6. '7' → logprob: -3.456333637237549
    7. '8' → logprob: -3.581333637237549
    8. '0' → logprob: -3.706333637237549
    9. '15' → logprob: -3.831333637237549
    10. '10' → logprob: -4.081333637237549

Token 40: '12' (ID: 899)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.7153066396713257
    2. '24' → logprob: -1.5903066396713257
    3. '8' → logprob: -1.8403066396713257
    4. '10' → logprob: -3.7153067588806152
    5. '15' → logprob: -3.8403067588806152
    6. '12' → logprob: -4.340306758880615
    7. '5' → logprob: -4.465306758880615
    8. '25' → logprob: -4.590306758880615
    9. '30' → logprob: -4.965306758880615
    10. 'a' → logprob: -5.090306758880615

Token 41: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005482682608999312
    2. '*' → logprob: -8.375548362731934
    3. ' .' → logprob: -9.500548362731934
    4. '`.' → logprob: -9.875548362731934
    5. '".' → logprob: -10.625548362731934
    6. ''.' → logprob: -10.875548362731934
    7. '.*' → logprob: -11.125548362731934
    8. '5' → logprob: -11.250548362731934
    9. '```' → logprob: -11.500548362731934
    10. ' ' → logprob: -11.875548362731934

Token 42: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0003811025235336274
    2. '0' → logprob: -9.000381469726562
    3. '6' → logprob: -9.500381469726562
    4. '7' → logprob: -10.125381469726562
    5. '4' → logprob: -10.375381469726562
    6. '3' → logprob: -10.500381469726562
    7. '2' → logprob: -10.875381469726562
    8. '8' → logprob: -11.312881469726562
    9. '25' → logprob: -11.562881469726562
    10. '1' → logprob: -11.687881469726562

Token 43: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1270601898431778
    2. '*' → logprob: -2.1270601749420166
    3. '*b' → logprob: -9.627059936523438
    4. ' ' → logprob: -10.627059936523438
    5. '**' → logprob: -11.627059936523438
    6. '+' → logprob: -12.127059936523438
    7. '/' → logprob: -12.377059936523438
    8. '0' → logprob: -12.752059936523438
    9. '*(' → logprob: -12.877059936523438
    10. ' +' → logprob: -12.877059936523438

Token 44: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06997000426054001
    2. ' b' → logprob: -2.694969892501831
    3. ' ' → logprob: -11.31997013092041
    4. '12' → logprob: -12.06997013092041
    5. '5' → logprob: -13.31997013092041
    6. '10' → logprob: -13.44497013092041
    7. '   ' → logprob: -13.44497013092041
    8. 'a' → logprob: -13.69497013092041
    9. '6' → logprob: -13.81997013092041
    10. ' ' → logprob: -13.94497013092041

Token 45: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06407908350229263
    2. ' b' → logprob: -2.8140790462493896
    3. 'a' → logprob: -6.564079284667969
    4. ' a' → logprob: -8.564079284667969
    5. ' (' → logprob: -8.814079284667969
    6. ' ' → logprob: -9.564079284667969
    7. '(b' → logprob: -9.564079284667969
    8. '12' → logprob: -9.939079284667969
    9. '(' → logprob: -10.189079284667969
    10. '10' → logprob: -10.939079284667969

Token 46: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0301059484481812
    2. ' +' → logprob: -1.4051059484481812
    3. '-' → logprob: -1.6551059484481812
    4. ' -' → logprob: -1.7801059484481812
    5. '+b' → logprob: -3.5301060676574707
    6. '1' → logprob: -6.030106067657471
    7. '2' → logprob: -6.530106067657471
    8. '-b' → logprob: -6.780106067657471
    9. '*' → logprob: -7.030106067657471
    10. '+
' → logprob: -7.905106067657471

Token 47: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7839114665985107
    2. ' b' → logprob: -0.9089114665985107
    3. '1' → logprob: -2.0339114665985107
    4. ' ' → logprob: -4.65891170501709
    5. '2' → logprob: -10.15891170501709
    6. ')' → logprob: -11.15891170501709
    7. '5' → logprob: -11.65891170501709
    8. '   ' → logprob: -11.78391170501709
    9. '3' → logprob: -11.90891170501709
    10. ' (' → logprob: -12.03391170501709

Token 48: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08251266926527023
    2. '1' → logprob: -2.832512617111206
    3. ' b' → logprob: -3.957512617111206
    4. ' ' → logprob: -7.082512855529785
    5. '2' → logprob: -8.832512855529785
    6. '(' → logprob: -10.332512855529785
    7. '3' → logprob: -10.332512855529785
    8. '5' → logprob: -10.832512855529785
    9. '12' → logprob: -10.832512855529785
    10. '4' → logprob: -11.332512855529785

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.779520092299208e-05
    2. ' )' → logprob: -10.375078201293945
    3. ')
' → logprob: -10.750078201293945
    4. ')*' → logprob: -12.250078201293945
    5. ')**' → logprob: -12.875078201293945
    6. '*' → logprob: -13.250078201293945
    7. '0' → logprob: -13.250078201293945
    8. '2' → logprob: -13.625078201293945
    9. ')`' → logprob: -13.625078201293945
    10. '```' → logprob: -13.625078201293945

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3797580897808075
    2. '
' → logprob: -1.3797581195831299
    3. '<|end|>' → logprob: -3.00475811958313
    4. '    
' → logprob: -5.004757881164551
    5. '\n' → logprob: -6.129757881164551
    6. '  
' → logprob: -6.504757881164551
    7. ' if' → logprob: -6.879757881164551
    8. '  ' → logprob: -7.504757881164551
    9. '```' → logprob: -7.754757881164551
    10. '\' → logprob: -7.754757881164551

Token 51: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7275081276893616
    2. '
' → logprob: -1.6025080680847168
    3. '\n' → logprob: -1.9775080680847168
    4. '    
' → logprob: -3.102508068084717
    5. '  
' → logprob: -3.602508068084717
    6. ' if' → logprob: -3.852508068084717
    7. '*' → logprob: -4.227508068084717
    8. ':' → logprob: -4.602508068084717
    9. '<|end|>' → logprob: -4.852508068084717
    10. '\' → logprob: -5.227508068084717

Token 52: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.395116925239563
    2. ' =' → logprob: -1.645116925239563
    3. ' >' → logprob: -1.645116925239563
    4. ' >=' → logprob: -2.8951168060302734
    5. ' *' → logprob: -3.0201168060302734
    6. '1' → logprob: -3.0201168060302734
    7. ' ==' → logprob: -3.2701168060302734
    8. '>' → logprob: -3.6451168060302734
    9. '<|end|>' → logprob: -3.7701168060302734
    10. '=' → logprob: -3.8951168060302734

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009357225149869919
    2. '=' → logprob: -5.259357452392578
    3. ' ' → logprob: -6.759357452392578
    4. ' >' → logprob: -7.009357452392578
    5. ' >=' → logprob: -7.634357452392578
    6. ' +' → logprob: -7.884357452392578
    7. ' ==' → logprob: -8.259357452392578
    8. ' <=' → logprob: -8.634357452392578
    9. ' <' → logprob: -9.009357452392578
    10. ',' → logprob: -9.259357452392578

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6054276823997498
    2. '12' → logprob: -1.2304277420043945
    3. '25' → logprob: -3.1054277420043945
    4. '20' → logprob: -4.3554277420043945
    5. '24' → logprob: -4.3554277420043945
    6. '10' → logprob: -4.4804277420043945
    7. '6' → logprob: -5.1054277420043945
    8. '0' → logprob: -5.1054277420043945
    9. ' b' → logprob: -5.1054277420043945
    10. '1' → logprob: -5.1054277420043945

Token 55: '10' (ID: 702)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.18587474524974823
    2. '25' → logprob: -3.0608747005462646
    3. '10' → logprob: -4.560874938964844
    4. '0' → logprob: -4.685874938964844
    5. '6' → logprob: -4.810874938964844
    6. '1' → logprob: -4.810874938964844
    7. '7' → logprob: -4.810874938964844
    8. '5' → logprob: -5.185874938964844
    9. 'b' → logprob: -5.185874938964844
    10. '2' → logprob: -5.310874938964844

Token 56: ' *' (ID: 425)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04448118433356285
    2. ' *' → logprob: -3.5444812774658203
    3. '*' → logprob: -4.29448127746582
    4. ' .' → logprob: -8.04448127746582
    5. ' ' → logprob: -8.29448127746582
    6. '0' → logprob: -8.29448127746582
    7. '**' → logprob: -10.91948127746582
    8. '   ' → logprob: -10.91948127746582
    9. '    ' → logprob: -11.16948127746582
    10. '00' → logprob: -11.66948127746582

Token 57: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16030222177505493
    2. ' b' → logprob: -1.9103021621704102
    3. ' ' → logprob: -10.78530216217041
    4. ' (' → logprob: -10.91030216217041
    5. '10' → logprob: -11.53530216217041
    6. '   ' → logprob: -11.91030216217041
    7. 'int' → logprob: -12.16030216217041
    8. '(b' → logprob: -12.28530216217041
    9. '(' → logprob: -12.53530216217041
    10. '  ' → logprob: -13.28530216217041

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.028994083404541
    2. '   ' → logprob: -1.528994083404541
    3. '<|end|>' → logprob: -2.028994083404541
    4. '+' → logprob: -2.153994083404541
    5. ' 
' → logprob: -3.153994083404541
    6. ' if' → logprob: -3.653994083404541
    7. '```' → logprob: -3.903994083404541
    8. '    
' → logprob: -3.903994083404541
    9. 'b' → logprob: -4.403994083404541
    10. '   
' → logprob: -4.528994083404541

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5130454897880554
    2. 'b' → logprob: -1.2630455493927002
    3. '\n' → logprob: -2.6380455493927
    4. ' ' → logprob: -4.513045310974121
    5. '    
' → logprob: -4.763045310974121
    6. '```' → logprob: -5.388045310974121
    7. '*' → logprob: -5.638045310974121
    8. '+' → logprob: -5.763045310974121
    9. ' b' → logprob: -5.888045310974121
    10. '<|end|>' → logprob: -6.263045310974121

Token 60: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.5998429656028748
    2. '+' → logprob: -1.7248430252075195
    3. ' if' → logprob: -2.4748430252075195
    4. '*' → logprob: -2.9748430252075195
    5. 'if' → logprob: -3.2248430252075195
    6. ' ' → logprob: -3.5998430252075195
    7. ' 
' → logprob: -4.2248430252075195
    8. '\n' → logprob: -4.8498430252075195
    9. '   ' → logprob: -5.0998430252075195
    10. '
' → logprob: -5.2248430252075195

Token 61: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11643921583890915
    2. '2' → logprob: -2.2414391040802
    3. '+' → logprob: -5.991439342498779
    4. ' =' → logprob: -7.866439342498779
    5. '_' → logprob: -8.491438865661621
    6. '=' → logprob: -8.491438865661621
    7. '0' → logprob: -9.116438865661621
    8. ' +' → logprob: -9.616438865661621
    9. '*' → logprob: -10.366438865661621
    10. ' +=' → logprob: -10.741438865661621

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016039295122027397
    2. '=' → logprob: -4.1410393714904785
    3. ' ' → logprob: -12.51603889465332
    4. ')' → logprob: -15.39103889465332
    5. '   ' → logprob: -15.76603889465332
    6. '<|end|>' → logprob: -15.89103889465332
    7. '```' → logprob: -16.39103889465332
    8. '*' → logprob: -16.39103889465332
    9. ' =)' → logprob: -16.39103889465332
    10. ' ==' → logprob: -16.76603889465332

Token 63: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16114453971385956
    2. ' ' → logprob: -1.911144495010376
    3. ' b' → logprob: -8.036144256591797
    4. 'b' → logprob: -8.286144256591797
    5. '20' → logprob: -9.286144256591797
    6. '   ' → logprob: -10.161144256591797
    7. '1' → logprob: -10.536144256591797
    8. '(' → logprob: -10.536144256591797
    9. ' (' → logprob: -10.661144256591797
    10. '12' → logprob: -10.786144256591797

Token 64: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0035235751420259476
    2. ' ' → logprob: -6.003523349761963
    3. 'b' → logprob: -7.503523349761963
    4. '(' → logprob: -8.878523826599121
    5. '1' → logprob: -9.503523826599121
    6. '0' → logprob: -9.628523826599121
    7. ' b' → logprob: -9.878523826599121
    8. '20' → logprob: -10.128523826599121
    9. '100' → logprob: -10.503523826599121
    10. '12' → logprob: -11.253523826599121

Token 65: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.044393617659807205
    2. '*' → logprob: -3.169393539428711
    3. '0' → logprob: -7.169393539428711
    4. '.' → logprob: -8.419393539428711
    5. '00' → logprob: -9.544393539428711
    6. ' ' → logprob: -9.544393539428711
    7. '20' → logprob: -10.169393539428711
    8. '**' → logprob: -10.294393539428711
    9. '*(' → logprob: -10.544393539428711
    10. ' +' → logprob: -10.919393539428711

Token 66: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.15018323063850403
    2. ' (' → logprob: -2.0251832008361816
    3. '(' → logprob: -4.900183200836182
    4. '(s' → logprob: -11.02518367767334
    5. '   ' → logprob: -12.27518367767334
    6. '(B' → logprob: -12.90018367767334
    7. '（' → logprob: -13.40018367767334
    8. ' ' → logprob: -13.52518367767334
    9. '(a' → logprob: -13.52518367767334
    10. 'b' → logprob: -13.52518367767334

Token 67: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004691188223659992
    2. ' b' → logprob: -5.379691123962402
    3. '(b' → logprob: -9.754691123962402
    4. ' (' → logprob: -12.254691123962402
    5. '(' → logprob: -12.379691123962402
    6. ' ' → logprob: -13.504691123962402
    7. '   ' → logprob: -13.879691123962402
    8. '1' → logprob: -14.004691123962402
    9. '+' → logprob: -14.879691123962402
    10. ')b' → logprob: -15.879691123962402

Token 68: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4742400050163269
    2. '+' → logprob: -0.9742400050163269
    3. ')' → logprob: -9.09924030303955
    4. '1' → logprob: -11.34924030303955
    5. ' -' → logprob: -11.47424030303955
    6. '-' → logprob: -11.59924030303955
    7. ' ' → logprob: -12.22424030303955
    8. '   ' → logprob: -12.34924030303955
    9. '+)' → logprob: -12.72424030303955
    10. ' ' → logprob: -12.97424030303955

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018198054283857346
    2. ' ' → logprob: -4.018198013305664
    3. ')' → logprob: -10.268198013305664
    4. '2' → logprob: -12.018198013305664
    5. '   ' → logprob: -12.518198013305664
    6. ' ' → logprob: -13.643198013305664
    7. '```' → logprob: -13.893198013305664
    8. ' )' → logprob: -14.893198013305664
    9. '<|end|>' → logprob: -15.393198013305664
    10. '  ' → logprob: -15.580698013305664

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021438424300868064
    2. ' ' → logprob: -8.500214576721191
    3. ')' → logprob: -12.000214576721191
    4. '   ' → logprob: -12.750214576721191
    5. '```' → logprob: -14.250214576721191
    6. '  ' → logprob: -14.750214576721191
    7. '2' → logprob: -15.875214576721191
    8. '<|end|>' → logprob: -15.937714576721191
    9. ' ' → logprob: -16.437713623046875
    10. '`' → logprob: -16.750213623046875

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.286852345103398e-05
    2. ')
' → logprob: -10.375042915344238
    3. '   ' → logprob: -11.625042915344238
    4. ' )' → logprob: -13.625042915344238
    5. ')#' → logprob: -15.375042915344238
    6. '`)' → logprob: -15.500042915344238
    7. '```' → logprob: -15.500042915344238
    8. ')

' → logprob: -15.500042915344238
    9. '))' → logprob: -15.875042915344238
    10. '')' → logprob: -16.125041961669922

Token 72: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5201267004013062
    2. '   ' → logprob: -1.1451267004013062
    3. '<|end|>' → logprob: -2.5201268196105957
    4. '    
' → logprob: -5.645126819610596
    5. '\n' → logprob: -7.395126819610596
    6. ' if' → logprob: -7.520126819610596
    7. 'if' → logprob: -7.645126819610596
    8. '  
' → logprob: -7.645126819610596
    9. '```' → logprob: -8.020126342773438
    10. '<|end|>' → logprob: -8.270126342773438

Token 73: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13074608147144318
    2. '\n' → logprob: -2.2557461261749268
    3. '    
' → logprob: -5.630745887756348
    4. 'n' → logprob: -5.880745887756348
    5. '   ' → logprob: -6.005745887756348
    6. '  
' → logprob: -6.005745887756348
    7. '```' → logprob: -6.255745887756348
    8. '\' → logprob: -6.380745887756348
    9. ' 
' → logprob: -7.130745887756348
    10. ' if' → logprob: -7.630745887756348

Token 74: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03671960160136223
    2. 'a' → logprob: -3.786719560623169
    3. ' (' → logprob: -4.536719799041748
    4. ' b' → logprob: -6.411719799041748
    5. '(' → logprob: -7.786719799041748
    6. ' ' → logprob: -8.41171932220459
    7. '(a' → logprob: -8.41171932220459
    8. 'b' → logprob: -9.16171932220459
    9. ' abs' → logprob: -11.28671932220459
    10. ' ' → logprob: -11.53671932220459

Token 75: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8528030514717102
    2. ' <' → logprob: -1.3528029918670654
    3. ' >=' → logprob: -1.8528029918670654
    4. ' >' → logprob: -2.6028029918670654
    5. ' <=' → logprob: -3.6028029918670654
    6. ' ==' → logprob: -3.6028029918670654
    7. '>' → logprob: -5.1028032302856445
    8. '+' → logprob: -5.2278032302856445
    9. '>=' → logprob: -5.6028032302856445
    10. ' ' → logprob: -5.6028032302856445

Token 76: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4106821119785309
    2. ' <=' → logprob: -1.2856820821762085
    3. ' <' → logprob: -3.785682201385498
    4. '>' → logprob: -4.160682201385498
    5. ' >=' → logprob: -4.285682201385498
    6. '<=' → logprob: -5.285682201385498
    7. ' ' → logprob: -6.660682201385498
    8. ' ==' → logprob: -7.285682201385498
    9. '>=' → logprob: -7.535682201385498
    10. '<' → logprob: -7.785682201385498

Token 77: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2850766181945801
    2. ' b' → logprob: -1.41007661819458
    3. ' ' → logprob: -6.66007661819458
    4. 'a' → logprob: -7.78507661819458
    5. '12' → logprob: -7.91007661819458
    6. '20' → logprob: -8.285076141357422
    7. '25' → logprob: -8.910076141357422
    8. '10' → logprob: -8.910076141357422
    9. '30' → logprob: -8.910076141357422
    10. '100' → logprob: -9.035076141357422

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07894311100244522
    2. '2' → logprob: -2.5789430141448975
    3. ' ' → logprob: -10.953943252563477
    4. '<|end|>' → logprob: -11.328943252563477
    5. '  ' → logprob: -12.766443252563477
    6. '

' → logprob: -12.766443252563477
    7. '```' → logprob: -13.078943252563477
    8. '   ' → logprob: -13.391443252563477
    9. '*' → logprob: -13.516443252563477
    10. ' -' → logprob: -13.953943252563477

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004061242798343301
    2. ':
' → logprob: -7.875406265258789
    3. ' and' → logprob: -11.250406265258789
    4. ' :' → logprob: -12.000406265258789
    5. ':return' → logprob: -12.625406265258789
    6. '   ' → logprob: -14.000406265258789
    7. 'and' → logprob: -14.375406265258789
    8. '):' → logprob: -14.500406265258789
    9. ' or' → logprob: -14.750406265258789
    10. ':

' → logprob: -15.125406265258789

Token 80: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.059815049171447754
    2. '       ' → logprob: -3.684814929962158
    3. ':
' → logprob: -3.934814929962158
    4. '   ' → logprob: -4.434814929962158
    5. '
' → logprob: -7.684814929962158
    6. 'print' → logprob: -8.184815406799316
    7. ':return' → logprob: -8.809815406799316
    8. '):' → logprob: -9.309815406799316
    9. '\n' → logprob: -9.309815406799316
    10. ')' → logprob: -9.809815406799316

Token 81: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5535233616828918
    2. ' print' → logprob: -1.553523302078247
    3. '   ' → logprob: -2.303523302078247
    4. '
' → logprob: -2.678523302078247
    5. '\n' → logprob: -3.428523302078247
    6. '       ' → logprob: -5.428523540496826
    7. ' return' → logprob: -5.928523540496826
    8. '    
' → logprob: -6.553523540496826
    9. '
' → logprob: -6.928523540496826
    10. 'return' → logprob: -7.053523540496826

Token 82: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09984759241342545
    2. '("' → logprob: -3.3498475551605225
    3. '(a' → logprob: -3.3498475551605225
    4. '('' → logprob: -4.099847793579102
    5. '("("' → logprob: -4.974847793579102
    6. '()' → logprob: -7.474847793579102
    7. 'a' → logprob: -9.099847793579102
    8. '((' → logprob: -9.349847793579102
    9. '("")' → logprob: -9.474847793579102
    10. ' (' → logprob: -9.974847793579102

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6895233531831764e-05
    2. '2' → logprob: -10.87502670288086
    3. 'a' → logprob: -13.37502670288086
    4. ' ' → logprob: -13.50002670288086
    5. '100' → logprob: -14.31252670288086
    6. '3' → logprob: -14.75002670288086
    7. '10' → logprob: -14.81252670288086
    8. '0' → logprob: -15.00002670288086
    9. '(a' → logprob: -15.06252670288086
    10. '12' → logprob: -15.06252670288086

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044556602369993925
    2. ')
' → logprob: -7.750445365905762
    3. ' )' → logprob: -12.125445365905762
    4. ')
' → logprob: -12.375445365905762
    5. '))' → logprob: -13.250445365905762
    6. '   ' → logprob: -14.250445365905762
    7. ')

' → logprob: -14.375445365905762
    8. '')' → logprob: -14.875445365905762
    9. ' ' → logprob: -15.500445365905762
    10. ')`' → logprob: -15.500445365905762

Token 85: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.134482979774475
    2. '
' → logprob: -1.384482979774475
    3. 'else' → logprob: -2.5094828605651855
    4. '<|end|>' → logprob: -2.5094828605651855
    5. 'elif' → logprob: -2.7594828605651855
    6. ')' → logprob: -3.0094828605651855
    7. '   ' → logprob: -3.2594828605651855
    8. ' else' → logprob: -3.6344828605651855
    9. '    
' → logprob: -3.7594828605651855
    10. ':' → logprob: -4.2594828605651855

Token 86: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04542310908436775
    2. 'elif' → logprob: -3.6704230308532715
    3. '
' → logprob: -4.7954230308532715
    4. '\n' → logprob: -5.5454230308532715
    5. 'else' → logprob: -5.6704230308532715
    6. ' elif' → logprob: -6.7954230308532715
    7. ' else' → logprob: -7.2954230308532715
    8. '    
' → logprob: -7.6704230308532715
    9. '<|end|>' → logprob: -8.04542350769043
    10. '	elif' → logprob: -8.29542350769043

Token 87: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5510403513908386
    2. '    
' → logprob: -1.6760404109954834
    3. '   ' → logprob: -2.0510404109954834
    4. '  
' → logprob: -2.8010404109954834
    5. ' 
' → logprob: -3.6760404109954834
    6. '\n' → logprob: -4.801040172576904
    7. '   
' → logprob: -5.301040172576904
    8. '
' → logprob: -6.676040172576904
    9. ' if' → logprob: -6.801040172576904
    10. '' → logprob: -6.926040172576904

Token 88: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.33563631772994995
    2. ' 
' → logprob: -2.3356363773345947
    3. ' if' → logprob: -2.5856363773345947
    4. 'elif' → logprob: -3.7106363773345947
    5. ' ' → logprob: -3.8356363773345947
    6. 'else' → logprob: -4.085636138916016
    7. 'i' → logprob: -4.710636138916016
    8. '\n' → logprob: -4.835636138916016
    9. '  
' → logprob: -4.960636138916016
    10. '
' → logprob: -5.085636138916016

Token 90: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2407400906085968
    2. ' b' → logprob: -1.6157400608062744
    3. 'a' → logprob: -4.3657402992248535
    4. 'b' → logprob: -6.2407402992248535
    5. ' ' → logprob: -7.6157402992248535
    6. ' (' → logprob: -11.490739822387695
    7. ' ' → logprob: -11.615739822387695
    8. '    ' → logprob: -11.865739822387695
    9. '   ' → logprob: -11.865739822387695
    10. '	a' → logprob: -11.990739822387695

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012522606179118156
    2. '1' → logprob: -4.3875226974487305
    3. ' ' → logprob: -12.38752269744873
    4. '+' → logprob: -13.07502269744873
    5. ' >=' → logprob: -14.20002269744873
    6. '>=' → logprob: -14.57502269744873
    7. ' +' → logprob: -14.63752269744873
    8. '  ' → logprob: -14.63752269744873
    9. ' <' → logprob: -14.76252269744873
    10. '   ' → logprob: -14.76252269744873

Token 92: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.054372332990169525
    2. ' >' → logprob: -3.8043723106384277
    3. '<=' → logprob: -4.054372310638428
    4. ' <' → logprob: -4.429372310638428
    5. ' >=' → logprob: -7.679372310638428
    6. '>' → logprob: -7.679372310638428
    7. '<' → logprob: -7.929372310638428
    8. ' ' → logprob: -10.054372787475586
    9. '>=' → logprob: -10.804372787475586
    10. '   ' → logprob: -11.304372787475586

Token 93: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10023298859596252
    2. ' a' → logprob: -2.3502330780029297
    3. '   ' → logprob: -11.47523307800293
    4. '12' → logprob: -12.22523307800293
    5. '	a' → logprob: -12.35023307800293
    6. ' ' → logprob: -12.85023307800293
    7. '  ' → logprob: -13.60023307800293
    8. '_a' → logprob: -14.47523307800293
    9. '    ' → logprob: -14.72523307800293
    10. '>a' → logprob: -14.85023307800293

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007609824184328318
    2. '2' → logprob: -4.882609844207764
    3. ' ' → logprob: -13.695109367370605
    4. '  ' → logprob: -15.070109367370605
    5. '   ' → logprob: -15.257609367370605
    6. '۱' → logprob: -15.257609367370605
    7. '<|end|>' → logprob: -15.257609367370605
    8. ')' → logprob: -15.445109367370605
    9. '```' → logprob: -15.757609367370605
    10. ':' → logprob: -16.132610321044922

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0041833482682704926
    2. ':
' → logprob: -5.504183292388916
    3. '       ' → logprob: -9.879183769226074
    4. '   ' → logprob: -10.379183769226074
    5. '):' → logprob: -11.254183769226074
    6. ' :' → logprob: -12.504183769226074
    7. ':

' → logprob: -13.879183769226074
    8. '):
' → logprob: -14.129183769226074
    9. ':
' → logprob: -14.379183769226074
    10. '<|end|>' → logprob: -14.504183769226074

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030061233788728714
    2. '   ' → logprob: -3.5300612449645996
    3. 'print' → logprob: -9.280060768127441
    4. ':
' → logprob: -10.280060768127441
    5. '```' → logprob: -10.405060768127441
    6. ' print' → logprob: -10.780060768127441
    7. ' ' → logprob: -10.905060768127441
    8. '-' → logprob: -11.030060768127441
    9. ':' → logprob: -11.155060768127441
    10. '  ' → logprob: -11.405060768127441

Token 97: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.13329558074474335
    2. '       ' → logprob: -2.1332955360412598
    3. '   ' → logprob: -5.25829553604126
    4. ' print' → logprob: -6.88329553604126
    5. '-' → logprob: -10.008296012878418
    6. '	print' → logprob: -10.633296012878418
    7. '```' → logprob: -10.883296012878418
    8. '    
' → logprob: -11.758296012878418
    9. '        
' → logprob: -12.008296012878418
    10. '  ' → logprob: -12.383296012878418

Token 98: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.038367465138435364
    2. '(' → logprob: -3.288367509841919
    3. ' (-' → logprob: -8.41336727142334
    4. ' (' → logprob: -10.16336727142334
    5. '1' → logprob: -10.41336727142334
    6. '(
' → logprob: -11.53836727142334
    7. '-' → logprob: -11.78836727142334
    8. '0' → logprob: -12.28836727142334
    9. '(+' → logprob: -12.91336727142334
    10. '2' → logprob: -13.66336727142334

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.250015258789062
    3. '2' → logprob: -13.000015258789062
    4. '<|end|>' → logprob: -15.937515258789062
    5. '```' → logprob: -16.750015258789062
    6. '   ' → logprob: -17.812515258789062
    7. '-' → logprob: -17.937515258789062
    8. '१' → logprob: -18.062515258789062
    9. '  ' → logprob: -18.062515258789062
    10. '۱' → logprob: -18.062515258789062

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759777426719666
    2. ')
' → logprob: -0.8259777426719666
    3. '   ' → logprob: -10.825977325439453
    4. ')
' → logprob: -11.825977325439453
    5. '       ' → logprob: -11.950977325439453
    6. ' )
' → logprob: -13.075977325439453
    7. ' )' → logprob: -13.575977325439453
    8. ')return' → logprob: -14.075977325439453
    9. ')

' → logprob: -16.075977325439453
    10. '<|end|>' → logprob: -16.450977325439453

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03635181486606598
    2. '   ' → logprob: -3.4113519191741943
    3. '<|end|>' → logprob: -6.161351680755615
    4. '
' → logprob: -8.411352157592773
    5. '```' → logprob: -9.661352157592773
    6. '	return' → logprob: -10.161352157592773
    7. '    
' → logprob: -10.161352157592773
    8. '        
' → logprob: -10.161352157592773
    9. '    ' → logprob: -10.411352157592773
    10. ')' → logprob: -10.411352157592773

Token 102: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14076852798461914
    2. 'return' (adapté à ' return') → logprob: -3.015768527984619
    3. '   ' → logprob: -3.140768527984619
    4. ' return' → logprob: -3.265768527984619
    5. '	return' → logprob: -7.390768527984619
    6. '
' → logprob: -9.515768051147461
    7. ' ' → logprob: -10.015768051147461
    8. ':return' → logprob: -10.140768051147461
    9. '    ' → logprob: -10.515768051147461
    10. '     ' → logprob: -11.265768051147461

Token 103: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15343455970287323
    2. '    
' → logprob: -2.6534345149993896
    3. '
' → logprob: -2.7784345149993896
    4. '<|end|>' → logprob: -5.653434753417969
    5. '  
' → logprob: -6.028434753417969
    6. ' 
' → logprob: -7.153434753417969
    7. '```' → logprob: -7.153434753417969
    8. '\n' → logprob: -7.903434753417969
    9. '   
' → logprob: -8.028434753417969
    10. '\' → logprob: -8.278434753417969

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005777581129223108
    2. '    
' → logprob: -6.005777359008789
    3. 'if' → logprob: -6.005777359008789
    4. ' if' → logprob: -8.380777359008789
    5. '```' → logprob: -9.380777359008789
    6. 'print' → logprob: -9.505777359008789
    7. '<|end|>' → logprob: -9.505777359008789
    8. '    ' → logprob: -9.755777359008789
    9. 'a' → logprob: -10.130777359008789
    10. ' 
' → logprob: -10.380777359008789

Token 105: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4496918320655823
    2. '   ' → logprob: -2.0746917724609375
    3. 'if' (adapté à ' if') → logprob: -2.0746917724609375
    4. 'c' → logprob: -3.0746917724609375
    5. 'a' → logprob: -4.4496917724609375
    6. 'i' → logprob: -4.5746917724609375
    7. 'x' → logprob: -4.9496917724609375
    8. '#' → logprob: -5.1996917724609375
    9. 'n' → logprob: -5.1996917724609375
    10. 'for' → logprob: -5.5746917724609375

Token 106: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.04507960379123688
    2. 'a' → logprob: -3.1700797080993652
    3. ' b' → logprob: -6.420079708099365
    4. 'b' → logprob: -8.920079231262207
    5. ' ' → logprob: -9.045079231262207
    6. ' max' → logprob: -9.420079231262207
    7. ' (' → logprob: -9.920079231262207
    8. '(a' → logprob: -10.920079231262207
    9. 'max' → logprob: -11.170079231262207
    10. '	a' → logprob: -11.295079231262207

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07890664041042328
    2. '2' → logprob: -2.578906536102295
    3. ' ' → logprob: -12.328907012939453
    4. '```' → logprob: -13.578907012939453
    5. ' <' → logprob: -13.766407012939453
    6. '+' → logprob: -13.828907012939453
    7. '==' → logprob: -13.953907012939453
    8. ' ==' → logprob: -14.078907012939453
    9. ' <=' → logprob: -14.203907012939453
    10. ' >' → logprob: -14.391407012939453

Token 108: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.136143445968628
    2. '>=' → logprob: -1.761143445968628
    3. ' <' → logprob: -1.886143445968628
    4. ' <=' → logprob: -2.011143445968628
    5. '<' → logprob: -2.261143445968628
    6. ' >=' → logprob: -2.886143445968628
    7. '>' → logprob: -3.386143445968628
    8. ' >' → logprob: -3.886143445968628
    9. '==' → logprob: -5.511143684387207
    10. '<b' → logprob: -6.261143684387207

Token 109: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0008268986130133271
    2. ' b' → logprob: -7.250826835632324
    3. 'a' → logprob: -9.375826835632324
    4. '=b' → logprob: -11.125826835632324
    5. '=' → logprob: -11.625826835632324
    6. '10' → logprob: -12.625826835632324
    7. '12' → logprob: -12.875826835632324
    8. ' ' → logprob: -14.375826835632324
    9. ' a' → logprob: -15.000826835632324
    10. '20' → logprob: -15.250826835632324

Token 110: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38688212633132935
    2. '1' → logprob: -1.1368820667266846
    3. '```' → logprob: -12.386881828308105
    4. ')' → logprob: -13.511881828308105
    5. ' ' → logprob: -13.511881828308105
    6. '_' → logprob: -13.636881828308105
    7. ':' → logprob: -15.449381828308105
    8. '`' → logprob: -15.636881828308105
    9. '-' → logprob: -15.699381828308105
    10. '4' → logprob: -15.886881828308105

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015342221595346928
    2. ':
' → logprob: -4.2653422355651855
    3. ' and' → logprob: -7.1403422355651855
    4. '   ' → logprob: -8.640341758728027
    5. '       ' → logprob: -9.015341758728027
    6. ' or' → logprob: -10.515341758728027
    7. 'and' → logprob: -10.765341758728027
    8. '.' → logprob: -11.890341758728027
    9. '):' → logprob: -12.140341758728027
    10. ':
' → logprob: -12.265341758728027

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06511111557483673
    2. ':' → logprob: -3.6901111602783203
    3. 'print' → logprob: -3.8151111602783203
    4. ':
' → logprob: -4.81511116027832
    5. '   ' → logprob: -5.06511116027832
    6. '
' → logprob: -7.81511116027832
    7. ' print' → logprob: -8.06511116027832
    8. '.' → logprob: -8.44011116027832
    9. ')' → logprob: -8.94011116027832
    10. '<|end|>' → logprob: -9.44011116027832

Token 113: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6604027152061462
    2. '       ' → logprob: -1.035402774810791
    3. ' print' → logprob: -2.660402774810791
    4. '
' → logprob: -3.035402774810791
    5. '\n' → logprob: -5.660402774810791
    6. '   ' → logprob: -5.785402774810791
    7. '    
' → logprob: -7.660402774810791
    8. '        
' → logprob: -7.910402774810791
    9. ' 
' → logprob: -8.285402297973633
    10. '```' → logprob: -8.410402297973633

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03387504816055298
    2. '=' → logprob: -3.408874988555908
    3. '1' → logprob: -8.783875465393066
    4. ',' → logprob: -9.908875465393066
    5. ' +=' → logprob: -11.783875465393066
    6. ')' → logprob: -12.533875465393066
    7. ' ' → logprob: -12.908875465393066
    8. ':' → logprob: -13.033875465393066
    9. '.' → logprob: -13.533875465393066
    10. ' ,' → logprob: -14.033875465393066

Token 115: ' int' (ID: 677)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17350348830223083
    2. 'b' → logprob: -2.4235033988952637
    3. '0' → logprob: -3.5485033988952637
    4. ' a' → logprob: -5.048503398895264
    5. 'max' → logprob: -5.173503398895264
    6. '12' → logprob: -5.298503398895264
    7. '"' → logprob: -5.298503398895264
    8. '(a' → logprob: -5.673503398895264
    9. 'min' → logprob: -5.923503398895264
    10. '1' → logprob: -5.923503398895264

Token 116: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3136639893054962
    2. '((' → logprob: -2.188663959503174
    3. '(b' → logprob: -2.188663959503174
    4. '(' → logprob: -3.188663959503174
    5. '(min' → logprob: -6.313663959503174
    6. '(max' → logprob: -7.313663959503174
    7. '(((' → logprob: -7.438663959503174
    8. '(round' → logprob: -7.813663959503174
    9. '(abs' → logprob: -9.188664436340332
    10. 'a' → logprob: -9.688664436340332

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25236329436302185
    2. '2' → logprob: -1.5023633241653442
    3. ' ' → logprob: -8.377363204956055
    4. ')' → logprob: -8.627363204956055
    5. ' )' → logprob: -11.252363204956055
    6. '[' → logprob: -13.689863204956055
    7. ' *' → logprob: -13.814863204956055
    8. '
' → logprob: -13.877363204956055
    9. '

' → logprob: -13.939863204956055
    10. '*' → logprob: -14.064863204956055

Token 118: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01375571172684431
    2. '+' → logprob: -5.763755798339844
    3. '//' → logprob: -5.888755798339844
    4. '-b' → logprob: -6.388755798339844
    5. '+b' → logprob: -6.763755798339844
    6. '/b' → logprob: -7.013755798339844
    7. ' +' → logprob: -7.263755798339844
    8. ')+' → logprob: -7.263755798339844
    9. '-' → logprob: -7.388755798339844
    10. ' //' → logprob: -7.513755798339844

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7555429935455322
    2. '0' → logprob: -1.2555429935455322
    3. ' ' → logprob: -1.7555429935455322
    4. '.' → logprob: -4.255542755126953
    5. ' b' → logprob: -4.255542755126953
    6. 'b' → logprob: -4.380542755126953
    7. ' (' → logprob: -4.505542755126953
    8. '10' → logprob: -4.755542755126953
    9. '-' → logprob: -5.880542755126953
    10. ' -' → logprob: -6.255542755126953

Token 120: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006531107239425182
    2. ' )' → logprob: -5.131531238555908
    3. '-' → logprob: -7.881531238555908
    4. ' -' → logprob: -9.38153076171875
    5. '//' → logprob: -10.63153076171875
    6. '0' → logprob: -10.88153076171875
    7. '+' → logprob: -11.13153076171875
    8. '/' → logprob: -11.25653076171875
    9. ')//' → logprob: -11.63153076171875
    10. ' //' → logprob: -11.75653076171875

Token 121: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6252713799476624
    2. 'a' → logprob: -1.0002713203430176
    3. ' b' → logprob: -2.7502713203430176
    4. 'b' → logprob: -3.7502713203430176
    5. ' (' → logprob: -5.125271320343018
    6. '(a' → logprob: -6.625271320343018
    7. ' int' → logprob: -7.375271320343018
    8. '(' → logprob: -7.625271320343018
    9. 'int' → logprob: -7.750271320343018
    10. ' ' → logprob: -8.000271797180176

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036585067864507437
    2. '_' → logprob: -6.878658294677734
    3. '[' → logprob: -7.003658294677734
    4. '>' → logprob: -7.628658294677734
    5. ' >' → logprob: -7.628658294677734
    6. '2' → logprob: -8.003658294677734
    7. ' ' → logprob: -9.628658294677734
    8. ' _' → logprob: -9.753658294677734
    9. ' <=' → logprob: -9.753658294677734
    10. ' <' → logprob: -10.128658294677734

Token 124: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.48824140429496765
    2. ' <=' → logprob: -1.61324143409729
    3. ' <' → logprob: -2.36324143409729
    4. '>' → logprob: -2.73824143409729
    5. '<=' → logprob: -4.113241195678711
    6. '<' → logprob: -5.238241195678711
    7. ' >=' → logprob: -5.238241195678711
    8. '>=' → logprob: -7.363241195678711
    9. ' ' → logprob: -8.363241195678711
    10. ' ==' → logprob: -9.113241195678711

Token 125: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01817873865365982
    2. ' int' → logprob: -4.018178939819336
    3. 'a' → logprob: -10.893178939819336
    4. ' ' → logprob: -12.893178939819336
    5. '(int' → logprob: -13.393178939819336
    6. '	int' → logprob: -13.643178939819336
    7. 'b' → logprob: -13.768178939819336
    8. '<int' → logprob: -13.893178939819336
    9. '12' → logprob: -14.268178939819336
    10. '=int' → logprob: -14.268178939819336

Token 126: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00038932388997636735
    2. '(' → logprob: -8.250389099121094
    3. 'a' → logprob: -9.000389099121094
    4. ' (' → logprob: -12.375389099121094
    5. '(ans' → logprob: -16.000389099121094
    6. ' a' → logprob: -16.250389099121094
    7. '(
' → logprob: -17.125389099121094
    8. '\(' → logprob: -17.125389099121094
    9. '(int' → logprob: -17.250389099121094
    10. '()' → logprob: -17.375389099121094

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6789137084269896e-05
    2. ')' → logprob: -11.00003719329834
    3. 'a' → logprob: -11.12503719329834
    4. '```' → logprob: -13.37503719329834
    5. '_' → logprob: -14.12503719329834
    6. '[' → logprob: -15.25003719329834
    7. 's' → logprob: -15.50003719329834
    8. '۱' → logprob: -15.50003719329834
    9. '(a' → logprob: -15.62503719329834
    10. ' )' → logprob: -15.75003719329834

Token 128: ')' (ID: 8)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.026116935536265373
    2. 'else' → logprob: -3.7761168479919434
    3. ')' → logprob: -5.901116847991943
    4. ' ' → logprob: -9.276117324829102
    5. ' )' → logprob: -10.526117324829102
    6. '	else' → logprob: -12.901117324829102
    7. ' and' → logprob: -13.526117324829102
    8. '+' → logprob: -14.026117324829102
    9. '0' → logprob: -14.276117324829102
    10. 'and' → logprob: -14.401117324829102

Token 129: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.23182156682014465
    2. 'else' → logprob: -1.6068215370178223
    3. '+' → logprob: -5.106821537017822
    4. '-' → logprob: -9.10682201385498
    5. ' +' → logprob: -9.10682201385498
    6. '	else' → logprob: -9.98182201385498
    7. ' ' → logprob: -10.73182201385498
    8. '<|end|>' → logprob: -10.98182201385498
    9. ')' → logprob: -12.60682201385498
    10. ',' → logprob: -12.85682201385498

Token 130: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31392112374305725
    2. 'int' → logprob: -1.3139210939407349
    3. '(int' → logprob: -8.438920974731445
    4. ' a' → logprob: -8.813920974731445
    5. ' ans' → logprob: -9.313920974731445
    6. 'a' → logprob: -9.438920974731445
    7. ' ' → logprob: -10.813920974731445
    8. 'ans' → logprob: -10.813920974731445
    9. ' (' → logprob: -11.063920974731445
    10. '<int' → logprob: -11.313920974731445

Token 131: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.000593543634749949
    2. '(' → logprob: -7.500593662261963
    3. 'a' → logprob: -10.250593185424805
    4. '(b' → logprob: -13.625593185424805
    5. '(int' → logprob: -13.750593185424805
    6. '(ai' → logprob: -14.500593185424805
    7. '((' → logprob: -14.625593185424805
    8. '(ans' → logprob: -14.625593185424805
    9. '(A' → logprob: -15.000593185424805
    10. '(
' → logprob: -15.500593185424805

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014740281039848924
    2. '2' → logprob: -8.875147819519043
    3. '(' → logprob: -13.000147819519043
    4. 'a' → logprob: -13.000147819519043
    5. '(a' → logprob: -13.375147819519043
    6. ')' → logprob: -14.000147819519043
    7. '۱' → logprob: -15.875147819519043
    8. '_' → logprob: -16.812646865844727
    9. '[' → logprob: -16.875146865844727
    10. '(b' → logprob: -17.687646865844727

Token 133: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.017130853608250618
    2. ' +' → logprob: -4.3921308517456055
    3. ')' → logprob: -5.5171308517456055
    4. ')+' → logprob: -7.6421308517456055
    5. '+)' → logprob: -9.892130851745605
    6. '<|end|>' → logprob: -10.892130851745605
    7. '+
' → logprob: -11.017130851745605
    8. '-' → logprob: -11.392130851745605
    9. ' )' → logprob: -13.017130851745605
    10. '()+' → logprob: -13.392130851745605

Token 134: '   ' (ID: 271)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -1.4709999561309814
    2. '<|end|>' → logprob: -1.4709999561309814
    3. 'else' → logprob: -1.5959999561309814
    4. '   ' → logprob: -1.8459999561309814
    5. '
' → logprob: -2.0959999561309814
    6. 'elif' → logprob: -3.9709999561309814
    7. ')' → logprob: -4.720999717712402
    8. '+' → logprob: -4.970999717712402
    9. ' elif' → logprob: -5.345999717712402
    10. '    
' → logprob: -5.470999717712402

Token 135: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6746440529823303
    2. ' else' → logprob: -0.7996440529823303
    3. 'elif' → logprob: -4.4246439933776855
    4. ':' → logprob: -4.6746439933776855
    5. '   ' → logprob: -4.9246439933776855
    6. ' elif' → logprob: -5.2996439933776855
    7. '<|end|>' → logprob: -6.6746439933776855
    8. ':
' → logprob: -6.7996439933776855
    9. '    
' → logprob: -6.9246439933776855
    10. ')' → logprob: -7.0496439933776855

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2795124053955078
    2. ' :' → logprob: -1.5295124053955078
    3. ' :
' → logprob: -4.529512405395508
    4. '    ' → logprob: -5.279512405395508
    5. ' ' → logprob: -5.529512405395508
    6. '       ' → logprob: -5.904512405395508
    7. ':
' → logprob: -6.279512405395508
    8. '   ' → logprob: -6.904512405395508
    9. '        ' → logprob: -7.904512405395508
    10. ' if' → logprob: -8.404512405395508

Token 137: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6855924129486084
    2. ' b' → logprob: -1.1855924129486084
    3. 'int' → logprob: -1.9355924129486084
    4. 'b' → logprob: -3.8105924129486084
    5. ' print' → logprob: -4.0605926513671875
    6. 'print' → logprob: -5.1855926513671875
    7. '10' → logprob: -8.185592651367188
    8. '   ' → logprob: -8.310592651367188
    9. '    ' → logprob: -8.310592651367188
    10. ' ' → logprob: -8.560592651367188

Token 138: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.9930882453918457
    2. 'int' → logprob: -1.7430882453918457
    3. ' int' → logprob: -1.9930882453918457
    4. 'print' → logprob: -2.1180882453918457
    5. 'ans' (adapté à ' ans') → logprob: -2.3680882453918457
    6. ' print' → logprob: -2.3680882453918457
    7. 'b' → logprob: -5.243088245391846
    8. ' b' → logprob: -5.743088245391846
    9. '   ' → logprob: -7.368088245391846
    10. ' ' → logprob: -7.743088245391846

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02630332112312317
    2. '=' → logprob: -3.651303291320801
    3. '=int' → logprob: -13.4013032913208
    4. ' +=' → logprob: -14.7763032913208
    5. ' ' → logprob: -15.0263032913208
    6. '_' → logprob: -15.7763032913208
    7. ' =
' → logprob: -16.276304244995117
    8. 's' → logprob: -16.401304244995117
    9. ':' → logprob: -16.401304244995117
    10. ')' → logprob: -16.651304244995117

Token 140: ' b' (ID: 287)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0033647390082478523
    2. 'b' → logprob: -6.128364562988281
    3. ' int' → logprob: -6.753364562988281
    4. '   ' → logprob: -12.378364562988281
    5. '(int' → logprob: -12.753364562988281
    6. ' b' → logprob: -12.878364562988281
    7. '10' → logprob: -13.878364562988281
    8. '	int' → logprob: -15.003364562988281
    9. 'in' → logprob: -15.253364562988281
    10. 'max' → logprob: -15.753364562988281

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00862876046448946
    2. '2' → logprob: -4.758628845214844
    3. '_' → logprob: -12.133628845214844
    4. '<|end|>' → logprob: -13.133628845214844
    5. ' ' → logprob: -13.258628845214844
    6. '[' → logprob: -14.133628845214844
    7. '+' → logprob: -14.508628845214844
    8. '0' → logprob: -14.758628845214844
    9. '```' → logprob: -15.196128845214844
    10. ' _' → logprob: -15.571128845214844

Token 142: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08538272231817245
    2. '
' → logprob: -3.2103826999664307
    3. ')' → logprob: -3.7103826999664307
    4. '<|end|>' → logprob: -4.58538293838501
    5. 'print' → logprob: -5.83538293838501
    6. '    
' → logprob: -6.08538293838501
    7. ')
' → logprob: -7.58538293838501
    8. '\n' → logprob: -8.585382461547852
    9. ' print' → logprob: -9.085382461547852
    10. '[' → logprob: -9.085382461547852

Token 144: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22598211467266083
    2. '
' → logprob: -2.225982189178467
    3. 'print' (adapté à ' print') → logprob: -2.600982189178467
    4. '<|end|>' → logprob: -4.975982189178467
    5. ' print' → logprob: -5.225982189178467
    6. ')' → logprob: -5.350982189178467
    7. '    
' → logprob: -6.475982189178467
    8. ')
' → logprob: -7.600982189178467
    9. '  
' → logprob: -8.350981712341309
    10. '  ' → logprob: -8.975981712341309

Token 145: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.1269425004720688
    2. '(' → logprob: -2.1269423961639404
    3. '()' → logprob: -12.00194263458252
    4. '('' → logprob: -12.50194263458252
    5. '("("' → logprob: -13.87694263458252
    6. '(answer' → logprob: -14.00194263458252
    7. '(
' → logprob: -14.37694263458252
    8. '(abs' → logprob: -14.62694263458252
    9. '(int' → logprob: -14.75194263458252
    10. ' (' → logprob: -14.87694263458252

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -17.25
    4. ')`' → logprob: -18.0
    5. '))' → logprob: -18.125
    6. '')' → logprob: -18.25
    7. '+' → logprob: -18.375
    8. '**' → logprob: -18.625
    9. '`)' → logprob: -18.75
    10. '```' → logprob: -18.875

Token 147: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04302705079317093
    2. '(' → logprob: -3.16802716255188
    3. '()
' → logprob: -11.2930269241333
    4. '();' → logprob: -13.0430269241333
    5. '()`' → logprob: -13.1680269241333
    6. '(
' → logprob: -13.1680269241333
    7. '()

' → logprob: -13.2930269241333
    8. '#' → logprob: -13.5430269241333
    9. '```' → logprob: -13.7930269241333
    10. '()<' → logprob: -14.0430269241333


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 146
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 122
Précision stricte (1ère position): 40.41%
Précision adaptée (1ère position): 44.52%
Précision (top 10): 83.56%
================================================================================
