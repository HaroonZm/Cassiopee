================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
R_L = []
for n in range(N):
    S, P = input().split()
    R_L.append([S, int(P)])

R_L2 = R_L.copy()
R_L2.sort(key=lambda x: (x[0], -x[1]))
for r in R_L2:
    print(R_L.index(r) + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001940040965564549
    2. '```' → logprob: -9.50019359588623
    3. '(N' → logprob: -10.50019359588623
    4. '`' → logprob: -10.87519359588623
    5. '(
' → logprob: -11.00019359588623
    6. ')' → logprob: -11.62519359588623
    7. '("("' → logprob: -11.62519359588623
    8. ''' → logprob: -11.62519359588623
    9. '()' → logprob: -11.75019359588623
    10. '('' → logprob: -12.25019359588623

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: 'R' (ID: 49)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.532151222229004
    2. 'i' → logprob: -1.657151222229004
    3. 'if' → logprob: -1.782151222229004
    4. 's' → logprob: -2.657151222229004
    5. 'f' → logprob: -3.157151222229004
    6. 'a' → logprob: -3.157151222229004
    7. ''' → logprob: -3.157151222229004
    8. 'x' → logprob: -3.407151222229004
    9. '`' → logprob: -3.532151222229004
    10. ' ' → logprob: -3.657151222229004

Token 6: '_L' (ID: 4258)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40054336190223694
    2. '=' → logprob: -1.7755433320999146
    3. '[' → logprob: -2.900543451309204
    4. ',' → logprob: -3.025543451309204
    5. '.' → logprob: -3.775543451309204
    6. ' ' → logprob: -4.900543212890625
    7. 'a' → logprob: -5.150543212890625
    8. '_' → logprob: -5.150543212890625
    9. '(' → logprob: -5.650543212890625
    10. 'E' → logprob: -6.025543212890625

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24368295073509216
    2. '[' → logprob: -2.743682861328125
    3. 'E' → logprob: -2.868682861328125
    4. '_' → logprob: -3.368682861328125
    5. ' =' → logprob: -3.618682861328125
    6. 'eft' → logprob: -4.743682861328125
    7. 'ENGTH' → logprob: -5.743682861328125
    8. 'e' → logprob: -6.118682861328125
    9. 'IST' → logprob: -6.243682861328125
    10. 'R' → logprob: -6.368682861328125

Token 8: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5980092287063599
    2. 'list' → logprob: -1.0980092287063599
    3. '[int' → logprob: -3.2230091094970703
    4. 'input' → logprob: -3.8480091094970703
    5. '[input' → logprob: -3.8480091094970703
    6. '[' → logprob: -4.34800910949707
    7. ' []' → logprob: -4.97300910949707
    8. 'int' → logprob: -5.09800910949707
    9. ' list' → logprob: -5.72300910949707
    10. '[list' → logprob: -6.34800910949707

Token 9: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003867300460115075
    2. ' for' → logprob: -5.628867149353027
    3. '[' → logprob: -9.128867149353027
    4. '```' → logprob: -9.378867149353027
    5. '
' → logprob: -10.878867149353027
    6. '\n' → logprob: -11.128867149353027
    7. '`' → logprob: -11.878867149353027
    8. '[
' → logprob: -12.003867149353027
    9. '(' → logprob: -12.503867149353027
    10. '\' → logprob: -12.628867149353027

Token 10: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37622836232185364
    2. ' i' → logprob: -1.2512283325195312
    3. ' _' → logprob: -3.6262283325195312
    4. '_' → logprob: -7.626228332519531
    5. '  ' → logprob: -9.001228332519531
    6. 'i' → logprob: -9.626228332519531
    7. ' range' → logprob: -10.251228332519531
    8. ' ' → logprob: -11.126228332519531
    9. ' x' → logprob: -11.251228332519531
    10. ' item' → logprob: -11.251228332519531

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3735653758049011
    2. 'in' → logprob: -1.748565435409546
    3. ' ' → logprob: -2.123565435409546
    4. '_' → logprob: -4.498565196990967
    5. ' i' → logprob: -5.623565196990967
    6. '  ' → logprob: -6.623565196990967
    7. '   ' → logprob: -7.123565196990967
    8. 'i' → logprob: -7.623565196990967
    9. 'n' → logprob: -8.123565673828125
    10. '```' → logprob: -9.623565673828125

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04859543219208717
    2. 'range' → logprob: -3.048595428466797
    3. ' ' → logprob: -13.048595428466797
    4. '	range' → logprob: -13.548595428466797
    5. ' in' → logprob: -13.923595428466797
    6. 'in' → logprob: -14.048595428466797
    7. '_range' → logprob: -14.423595428466797
    8. '(range' → logprob: -14.548595428466797
    9. '```' → logprob: -14.548595428466797
    10. ')' → logprob: -14.548595428466797

Token 13: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017312003299593925
    2. '(N' → logprob: -4.142312049865723
    3. ' (' → logprob: -6.767312049865723
    4. '(n' → logprob: -9.642312049865723
    5. '(len' → logprob: -9.892312049865723
    6. '(
' → logprob: -12.142312049865723
    7. '(R' → logprob: -13.392312049865723
    8. '(range' → logprob: -13.892312049865723
    9. '(

' → logprob: -15.142312049865723
    10. '(L' → logprob: -15.142312049865723

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28943565487861633
    2. ')' → logprob: -1.414435625076294
    3. '+' → logprob: -4.914435863494873
    4. ' ):' → logprob: -7.664435863494873
    5. ' )' → logprob: -8.789435386657715
    6. ' +' → logprob: -9.539435386657715
    7. ',' → logprob: -9.789435386657715
    8. '):
' → logprob: -9.789435386657715
    9. ' ' → logprob: -10.164435386657715
    10. ':' → logprob: -10.914435386657715

Token 15: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7649576663970947
    2. '    ' → logprob: -1.3899576663970947
    3. ' R' → logprob: -1.6399576663970947
    4. '     
' → logprob: -3.3899576663970947
    5. '   ' → logprob: -3.5149576663970947
    6. ' input' → logprob: -5.264957427978516
    7. ' r' → logprob: -5.264957427978516
    8. '```' → logprob: -5.889957427978516
    9. ' ```' → logprob: -5.889957427978516
    10. ' )' → logprob: -6.139957427978516

Token 16: ' S' (ID: 336)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.28317686915397644
    2. ' line' → logprob: -2.408176898956299
    3. '   ' → logprob: -2.533176898956299
    4. 'R' → logprob: -3.783176898956299
    5. ' ' → logprob: -4.033176898956299
    6. '    ' → logprob: -4.658176898956299
    7. ' ```' → logprob: -5.658176898956299
    8. ' i' → logprob: -5.908176898956299
    9. ' r' → logprob: -6.033176898956299
    10. 'r' → logprob: -6.283176898956299

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017373742535710335
    2. '=' → logprob: -4.517373561859131
    3. '=input' → logprob: -5.767373561859131
    4. 'tr' → logprob: -6.267373561859131
    5. ',' → logprob: -7.892373561859131
    6. ' ' → logprob: -8.392374038696289
    7. 'tring' → logprob: -8.767374038696289
    8. 't' → logprob: -9.267374038696289
    9. '   ' → logprob: -9.392374038696289
    10. '_' → logprob: -9.892374038696289

Token 18: ' P' (ID: 398)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4899456799030304
    2. 'T' → logprob: -1.864945650100708
    3. 'R' → logprob: -2.989945650100708
    4. 'I' → logprob: -3.114945650100708
    5. '"' → logprob: -3.364945650100708
    6. 'D' → logprob: -3.989945650100708
    7. 'input' → logprob: -4.489945888519287
    8. 'B' → logprob: -5.114945888519287
    9. 'M' → logprob: -5.114945888519287
    10. ' ' → logprob: -5.114945888519287

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17982091009616852
    2. ' =' → logprob: -1.8048208951950073
    3. ',' → logprob: -10.054821014404297
    4. '=input' → logprob: -10.804821014404297
    5. ')' → logprob: -11.929821014404297
    6. ' ' → logprob: -13.179821014404297
    7. '=int' → logprob: -13.679821014404297
    8. 'input' → logprob: -14.429821014404297
    9. '   ' → logprob: -14.804821014404297
    10. '  ' → logprob: -15.054821014404297

Token 20: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1584922820329666
    2. ' map' → logprob: -2.28349232673645
    3. 'input' → logprob: -3.15849232673645
    4. 'map' → logprob: -6.158492088317871
    5. ' ' → logprob: -11.533492088317871
    6. ' list' → logprob: -11.533492088317871
    7. ' [' → logprob: -11.908492088317871
    8. ' int' → logprob: -13.408492088317871
    9. '[input' → logprob: -13.408492088317871
    10. '(input' → logprob: -13.783492088317871

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.584068775177002
    2. '()' → logprob: -0.834068775177002
    3. '(' → logprob: -4.834068775177002
    4. '('' → logprob: -10.084068298339844
    5. '("' → logprob: -10.209068298339844
    6. '())' → logprob: -11.459068298339844
    7. '()
' → logprob: -11.584068298339844
    8. '("("' → logprob: -11.584068298339844
    9. '.split' → logprob: -12.209068298339844
    10. ')' → logprob: -12.459068298339844

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.1557283111615106e-05
    2. 'strip' → logprob: -10.875041961669922
    3. 'rstrip' → logprob: -11.125041961669922
    4. 'rs' → logprob: -12.250041961669922
    5. ' split' → logprob: -12.875041961669922
    6. 'spl' → logprob: -15.000041961669922
    7. '.split' → logprob: -17.500041961669922
    8. '(split' → logprob: -18.625041961669922
    9. ' ' → logprob: -18.875041961669922
    10. '```' → logprob: -19.000041961669922

Token 23: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.35861292481422424
    2. '(' → logprob: -1.6086128950119019
    3. '()' → logprob: -2.8586130142211914
    4. '("("' → logprob: -3.2336130142211914
    5. '("' → logprob: -6.233613014221191
    6. ''' → logprob: -6.858613014221191
    7. '(`' → logprob: -8.233613014221191
    8. '"' → logprob: -8.483613014221191
    9. '(',' → logprob: -8.858613014221191
    10. '   ' → logprob: -9.233613014221191

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4985802173614502
    2. ' R' → logprob: -1.9985802173614502
    3. '    
' → logprob: -2.24858021736145
    4. ',' → logprob: -3.37358021736145
    5. ' 
' → logprob: -3.49858021736145
    6. 'R' → logprob: -3.62358021736145
    7. '
' → logprob: -4.373579978942871
    8. ' P' → logprob: -4.498579978942871
    9. ' ' → logprob: -4.998579978942871
    10. '<|end|>' → logprob: -5.123579978942871

Token 25: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.6900724172592163
    2. ' R' → logprob: -0.9400724172592163
    3. 'P' → logprob: -2.815072536468506
    4. ' P' → logprob: -3.440072536468506
    5. '   ' → logprob: -5.690072536468506
    6. ')' → logprob: -6.190072536468506
    7. ',' → logprob: -6.190072536468506
    8. ' ' → logprob: -6.565072536468506
    9. ' 
' → logprob: -6.815072536468506
    10. '    
' → logprob: -6.940072536468506

Token 26: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.0046523879282176495
    2. '_' → logprob: -5.379652500152588
    3. ' _' → logprob: -10.75465202331543
    4. '[_' → logprob: -13.50465202331543
    5. '_S' → logprob: -13.87965202331543
    6. 'L' → logprob: -14.12965202331543
    7. '_l' → logprob: -14.12965202331543
    8. ')_' → logprob: -14.37965202331543
    9. '_LL' → logprob: -14.37965202331543
    10. '[' → logprob: -14.50465202331543

Token 27: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007625199854373932
    2. '.' → logprob: -4.882625102996826
    3. '.app' → logprob: -12.007625579833984
    4. ' .' → logprob: -12.507625579833984
    5. '.ap' → logprob: -12.507625579833984
    6. 'append' → logprob: -13.382625579833984
    7. '.extend' → logprob: -13.632625579833984
    8. '.add' → logprob: -14.007625579833984
    9. '.setdefault' → logprob: -14.507625579833984
    10. '.Append' → logprob: -15.007625579833984

Token 28: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006146111525595188
    2. '(' → logprob: -5.13114595413208
    3. '(tuple' → logprob: -9.756146430969238
    4. '(int' → logprob: -9.881146430969238
    5. '([' → logprob: -10.006146430969238
    6. '(list' → logprob: -11.006146430969238
    7. '(('' → logprob: -11.006146430969238
    8. '(S' → logprob: -11.131146430969238
    9. '(("' → logprob: -12.631146430969238
    10. '(P' → logprob: -12.881146430969238

Token 29: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.006991353817284107
    2. 'int' → logprob: -5.756991386413574
    3. ' S' → logprob: -5.756991386413574
    4. '   ' → logprob: -8.506991386413574
    5. 'P' → logprob: -8.756991386413574
    6. ' int' → logprob: -8.881991386413574
    7. 'str' → logprob: -9.756991386413574
    8. ' ' → logprob: -10.881991386413574
    9. 's' → logprob: -11.006991386413574
    10. '-' → logprob: -11.381991386413574

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010275159031152725
    2. ',int' → logprob: -4.635275363922119
    3. ' ,' → logprob: -8.010274887084961
    4. ',p' → logprob: -9.635274887084961
    5. ',P' → logprob: -9.885274887084961
    6. ',float' → logprob: -10.135274887084961
    7. 'int' → logprob: -11.135274887084961
    8. ',n' → logprob: -12.010274887084961
    9. ',
' → logprob: -12.760274887084961
    10. ',Integer' → logprob: -13.385274887084961

Token 31: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5760519504547119
    2. 'int' → logprob: -0.8260519504547119
    3. ' P' → logprob: -9.826051712036133
    4. 'P' → logprob: -11.076051712036133
    5. ',int' → logprob: -11.951051712036133
    6. '(int' → logprob: -11.951051712036133
    7. ' float' → logprob: -12.326051712036133
    8. '[int' → logprob: -12.576051712036133
    9. '=int' → logprob: -12.701051712036133
    10. 'float' → logprob: -12.826051712036133

Token 32: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.011068926192820072
    2. '(' → logprob: -4.511068820953369
    3. '(
' → logprob: -12.011069297790527
    4. 'P' → logprob: -12.136069297790527
    5. ')' → logprob: -13.011069297790527
    6. ' (' → logprob: -13.136069297790527
    7. '(p' → logprob: -13.761069297790527
    8. '('' → logprob: -13.761069297790527
    9. '(Py' → logprob: -14.386069297790527
    10. '(

' → logprob: -14.511069297790527

Token 33: ')])

' (ID: 182226)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.003935798536986113
    2. ')' → logprob: -5.628935813903809
    3. ')]' → logprob: -8.253935813903809
    4. ')])
' → logprob: -10.253935813903809
    5. '])' → logprob: -11.253935813903809
    6. '),' → logprob: -11.253935813903809
    7. ')])

' → logprob: -12.003935813903809
    8. ' )' → logprob: -12.753935813903809
    9. '))' → logprob: -13.253935813903809
    10. '   ' → logprob: -14.003935813903809

Token 34: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0003552463313098997
    2. 'sorted' → logprob: -8.75035572052002
    3. '```' → logprob: -9.12535572052002
    4. '
' → logprob: -10.75035572052002
    5. ' R' → logprob: -11.00035572052002
    6. ')' → logprob: -11.50035572052002
    7. '#' → logprob: -12.12535572052002
    8. '_R' → logprob: -12.25035572052002
    9. '`' → logprob: -12.50035572052002
    10. 'sort' → logprob: -12.62535572052002

Token 35: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -3.726595241460018e-05
    2. '_' → logprob: -10.50003719329834
    3. 'L' → logprob: -12.25003719329834
    4. '```' → logprob: -13.25003719329834
    5. ' _' → logprob: -13.75003719329834
    6. '_l' → logprob: -14.25003719329834
    7. '_S' → logprob: -15.37503719329834
    8. '\' → logprob: -15.75003719329834
    9. ''_' → logprob: -15.75003719329834
    10. '`' → logprob: -16.375038146972656

Token 36: '2' (ID: 17)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.07687581330537796
    2. '.' → logprob: -2.701875925064087
    3. '<|end|>' → logprob: -5.326875686645508
    4. '[' → logprob: -6.576875686645508
    5. '_sorted' → logprob: -8.451875686645508
    6. '<|end|>' → logprob: -9.576875686645508
    7. '
' → logprob: -9.826875686645508
    8. '.sorted' → logprob: -9.951875686645508
    9. 'sort' → logprob: -10.076875686645508
    10. '```' → logprob: -10.201875686645508

Token 37: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.011838496662676334
    2. '.' → logprob: -4.511838436126709
    3. '=' → logprob: -7.761838436126709
    4. 'sort' → logprob: -9.386838912963867
    5. ' =' → logprob: -9.511838912963867
    6. '.append' → logprob: -9.636838912963867
    7. '_sorted' → logprob: -10.386838912963867
    8. '.extend' → logprob: -10.886838912963867
    9. '.sorted' → logprob: -11.261838912963867
    10. 'sorted' → logprob: -11.511838912963867

Token 38: ' R' (ID: 460)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.05498677119612694
    2. ' sorted' → logprob: -2.9299867153167725
    3. '[' → logprob: -10.054986953735352
    4. '(sorted' → logprob: -10.679986953735352
    5. 'R' → logprob: -11.304986953735352
    6. '[R' → logprob: -12.304986953735352
    7. '   ' → logprob: -12.554986953735352
    8. '[]' → logprob: -12.554986953735352
    9. ' R' → logprob: -12.554986953735352
    10. ' [' → logprob: -12.679986953735352

Token 39: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.0002680112374946475
    2. '_' → logprob: -8.37526798248291
    3. 'L' → logprob: -11.50026798248291
    4. '```' → logprob: -11.62526798248291
    5. '[_' → logprob: -12.87526798248291
    6. ' _' → logprob: -13.00026798248291
    7. '_LL' → logprob: -13.12526798248291
    8. '_S' → logprob: -13.62526798248291
    9. '[' → logprob: -13.62526798248291
    10. '_l' → logprob: -14.00026798248291

Token 40: '.copy' (ID: 22925)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.054344434291124344
    2. '[:' → logprob: -3.804344415664673
    3. '.copy' → logprob: -4.679344654083252
    4. '.' → logprob: -4.679344654083252
    5. '.sort' → logprob: -5.304344654083252
    6. '<|end|>' → logprob: -5.679344654083252
    7. '[' → logprob: -5.804344654083252
    8. '[::-' → logprob: -8.304344177246094
    9. '
' → logprob: -8.679344177246094
    10. '[:-' → logprob: -10.054344177246094

Token 41: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.029847231227905e-05
    2. '(' → logprob: -10.250080108642578
    3. '()]' → logprob: -11.250080108642578
    4. '()`' → logprob: -11.875080108642578
    5. '()
' → logprob: -12.125080108642578
    6. '`()' → logprob: -12.375080108642578
    7. '())' → logprob: -12.500080108642578
    8. '()

' → logprob: -13.000080108642578
    9. '```' → logprob: -13.125080108642578
    10. '()<' → logprob: -13.750080108642578

Token 42: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.23893624544143677
    2. '
' → logprob: -2.113936185836792
    3. '.sort' → logprob: -2.863936185836792
    4. '.' → logprob: -3.988936185836792
    5. '.
' → logprob: -5.113936424255371
    6. '<|end|>' → logprob: -5.988936424255371
    7. ' R' → logprob: -6.238936424255371
    8. '.R' → logprob: -6.738936424255371
    9. 's' → logprob: -6.988936424255371
    10. '
' → logprob: -7.363936424255371

Token 43: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.004772580694407225
    2. '_' → logprob: -5.379772663116455
    3. '[_' → logprob: -10.379772186279297
    4. 'L' → logprob: -10.504772186279297
    5. 'underscore' → logprob: -10.629772186279297
    6. '_
' → logprob: -11.629772186279297
    7. '[' → logprob: -11.754772186279297
    8. '_[' → logprob: -11.879772186279297
    9. ' _' → logprob: -12.004772186279297
    10. '__' → logprob: -12.254772186279297

Token 44: '2' (ID: 17)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.16224676370620728
    2. '2' → logprob: -1.9122467041015625
    3. 'sort' → logprob: -6.9122467041015625
    4. '.' → logprob: -7.2872467041015625
    5. '_sorted' → logprob: -8.537246704101562
    6. 'sorted' → logprob: -10.412246704101562
    7. '_sort' → logprob: -10.662246704101562
    8. '<|end|>' → logprob: -11.037246704101562
    9. '```' → logprob: -11.412246704101562
    10. '=' → logprob: -11.412246704101562

Token 45: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.01021780539304018
    2. '.' → logprob: -4.635217666625977
    3. 'sort' → logprob: -8.510217666625977
    4. '<|end|>' → logprob: -8.510217666625977
    5. '[' → logprob: -10.760217666625977
    6. '[::-' → logprob: -12.010217666625977
    7. '[:]' → logprob: -12.260217666625977
    8. 'sorted' → logprob: -12.510217666625977
    9. '_sorted' → logprob: -12.635217666625977
    10. '.reverse' → logprob: -12.760217666625977

Token 46: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.10144855082035065
    2. '(' → logprob: -2.3514485359191895
    3. '(reverse' → logprob: -6.9764485359191895
    4. '()' → logprob: -8.726449012756348
    5. '(lambda' → logprob: -9.601449012756348
    6. 'key' → logprob: -10.226449012756348
    7. '((' → logprob: -11.226449012756348
    8. '(
' → logprob: -11.226449012756348
    9. '(()' → logprob: -12.351449012756348
    10. '()(' → logprob: -12.726449012756348

Token 47: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.01815415732562542
    2. '=' → logprob: -4.018154144287109
    3. 'lambda' → logprob: -14.39315414428711
    4. '=(' → logprob: -14.39315414428711
    5. ' =' → logprob: -14.51815414428711
    6. '=

' → logprob: -14.64315414428711
    7. '(lambda' → logprob: -14.76815414428711
    8. '=}' → logprob: -14.89315414428711
    9. '=len' → logprob: -15.01815414428711
    10. '=
' → logprob: -15.26815414428711

Token 48: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.004890142939984798
    2. ' ' → logprob: -6.129889965057373
    3. 'x' → logprob: -6.629889965057373
    4. '<|end|>' → logprob: -6.754889965057373
    5. ' s' → logprob: -9.504890441894531
    6. ' r' → logprob: -10.504890441894531
    7. ' a' → logprob: -10.754890441894531
    8. ' n' → logprob: -11.254890441894531
    9. ' i' → logprob: -11.504890441894531
    10. ')' → logprob: -11.504890441894531

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032061156816780567
    2. ' :' → logprob: -6.128206253051758
    3. ':x' → logprob: -7.003206253051758
    4. '[' → logprob: -10.003206253051758
    5. ' x' → logprob: -10.128206253051758
    6. 'x' → logprob: -10.878206253051758
    7. ':[' → logprob: -14.003206253051758
    8. '=' → logprob: -14.003206253051758
    9. ':
' → logprob: -14.003206253051758
    10. '=lambda' → logprob: -14.253206253051758

Token 50: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6751992702484131
    2. ' x' → logprob: -0.9251992702484131
    3. ' -' → logprob: -3.175199270248413
    4. '-x' → logprob: -4.175199508666992
    5. '(-' → logprob: -4.300199508666992
    6. ' (-' → logprob: -4.425199508666992
    7. '-' → logprob: -4.925199508666992
    8. ' (' → logprob: -5.800199508666992
    9. '(x' → logprob: -7.050199508666992
    10. '(' → logprob: -7.800199508666992

Token 51: 'x' (ID: 87)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.7178078293800354
    2. 'x' → logprob: -0.8428078293800354
    3. ' -' → logprob: -3.2178077697753906
    4. '-' → logprob: -3.3428077697753906
    5. ' x' → logprob: -5.342807769775391
    6. '(-' → logprob: -7.592807769775391
    7. '-int' → logprob: -8.34280776977539
    8. 'int' → logprob: -8.90530776977539
    9. '   ' → logprob: -9.46780776977539
    10. ' (-' → logprob: -10.46780776977539

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.351697033504024e-05
    2. ' [' → logprob: -10.000083923339844
    3. '1' → logprob: -11.750083923339844
    4. ':' → logprob: -12.000083923339844
    5. '[-' → logprob: -12.000083923339844
    6. ')' → logprob: -12.125083923339844
    7. ' ' → logprob: -13.000083923339844
    8. '][' → logprob: -13.312583923339844
    9. '[
' → logprob: -13.375083923339844
    10. ',' → logprob: -13.750083923339844

Token 53: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31354159116744995
    2. '0' → logprob: -1.3135416507720947
    3. ' ' → logprob: -8.813541412353516
    4. 'S' → logprob: -10.251041412353516
    5. '[' → logprob: -10.501041412353516
    6. 'P' → logprob: -11.001041412353516
    7. '-' → logprob: -11.313541412353516
    8. '   ' → logprob: -12.376041412353516
    9. '
' → logprob: -12.501041412353516
    10. '

' → logprob: -12.938541412353516

Token 54: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005286527331918478
    2. '[' → logprob: -6.005286693572998
    3. '))' → logprob: -7.005286693572998
    4. ' ,' → logprob: -7.880286693572998
    5. ',int' → logprob: -8.13028621673584
    6. ',x' → logprob: -8.13028621673584
    7. ')' → logprob: -8.38028621673584
    8. ',len' → logprob: -8.38028621673584
    9. ',
' → logprob: -9.75528621673584
    10. ',

' → logprob: -10.00528621673584

Token 55: ' -' (ID: 533)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.47064846754074097
    2. ' -' → logprob: -1.2206485271453857
    3. '-' → logprob: -2.9706485271453857
    4. 'x' → logprob: -3.7206485271453857
    5. ' x' → logprob: -5.470648288726807
    6. '-int' → logprob: -7.970648288726807
    7. '-n' → logprob: -10.345648765563965
    8. ' ' → logprob: -10.658148765563965
    9. '   ' → logprob: -10.908148765563965
    10. '-l' → logprob: -11.408148765563965

Token 56: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.15310683415737e-05
    2. ' x' → logprob: -11.000021934509277
    3. 'int' → logprob: -12.250021934509277
    4. '   ' → logprob: -18.12502098083496
    5. ' int' → logprob: -19.25002098083496
    6. ')x' → logprob: -19.37502098083496
    7. '(x' → logprob: -19.50002098083496
    8. '	x' → logprob: -19.50002098083496
    9. '1' → logprob: -20.25002098083496
    10. ' ' → logprob: -21.37502098083496

Token 57: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '1' → logprob: -12.625003814697266
    3. '[
' → logprob: -16.875003814697266
    4. '```' → logprob: -18.125003814697266
    5. '][' → logprob: -18.750003814697266
    6. ' [' → logprob: -19.000003814697266
    7. 'x' → logprob: -20.000003814697266
    8. '-' → logprob: -20.125003814697266
    9. ')' → logprob: -20.375003814697266
    10. '{' → logprob: -20.500003814697266

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '[' → logprob: -16.75
    4. '   ' → logprob: -18.875
    5. '```' → logprob: -18.875
    6. '１' → logprob: -19.125
    7. '
' → logprob: -19.375
    8. '2' → logprob: -19.5
    9. '۱' → logprob: -19.875
    10. '' → logprob: -20.3125

Token 59: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0038955609779804945
    2. ')' → logprob: -5.6288957595825195
    3. ')))' → logprob: -8.37889575958252
    4. '),' → logprob: -10.50389575958252
    5. ' ))' → logprob: -10.75389575958252
    6. '))
' → logprob: -12.25389575958252
    7. ']))' → logprob: -12.25389575958252
    8. '}))' → logprob: -13.62889575958252
    9. '])' → logprob: -13.75389575958252
    10. ')]' → logprob: -14.00389575958252

Token 60: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026796109974384308
    2. 'for' → logprob: -4.776796340942383
    3. ')
' → logprob: -5.026796340942383
    4. 'print' → logprob: -5.276796340942383
    5. '
' → logprob: -6.401796340942383
    6. '[' → logprob: -6.776796340942383
    7. 'R' → logprob: -6.901796340942383
    8. '#' → logprob: -7.401796340942383
    9. '```' → logprob: -7.651796340942383
    10. '' → logprob: -8.026796340942383

Token 61: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.046480417251586914
    2. ' i' → logprob: -3.921480417251587
    3. 'r' → logprob: -4.296480178833008
    4. ' item' → logprob: -5.546480178833008
    5. ' n' → logprob: -5.671480178833008
    6. ' x' → logprob: -6.296480178833008
    7. ' ' → logprob: -6.796480178833008
    8. ' _' → logprob: -7.296480178833008
    9. ' R' → logprob: -8.796480178833008
    10. 'n' → logprob: -9.171480178833008

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03761311620473862
    2. '_' → logprob: -3.4126131534576416
    3. ' ' → logprob: -6.1626129150390625
    4. 'in' → logprob: -6.5376129150390625
    5. '_in' → logprob: -9.037612915039062
    6. ' _' → logprob: -9.537612915039062
    7. ' i' → logprob: -9.787612915039062
    8. '  ' → logprob: -9.912612915039062
    9. '_i' → logprob: -10.037612915039062
    10. '<|end|>' → logprob: -11.412612915039062

Token 63: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.10053282976150513
    2. 'R' → logprob: -2.3505327701568604
    3. ' range' → logprob: -8.350532531738281
    4. 'range' → logprob: -10.475532531738281
    5. ' ' → logprob: -11.100532531738281
    6. '(R' → logprob: -11.475532531738281
    7. 'Range' → logprob: -11.600532531738281
    8. '<|end|>' → logprob: -11.600532531738281
    9. '<R' → logprob: -12.225532531738281
    10. '_R' → logprob: -12.975532531738281

Token 64: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.0031911435071378946
    2. 'L' → logprob: -5.753190994262695
    3. '2' → logprob: -13.003190994262695
    4. '_l' → logprob: -13.253190994262695
    5. '_' → logprob: -13.503190994262695
    6. 'in' → logprob: -13.503190994262695
    7. '[' → logprob: -14.128190994262695
    8. '   ' → logprob: -14.690690994262695
    9. '```' → logprob: -14.815690994262695
    10. ')' → logprob: -14.878190994262695

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006762159755453467
    2. ':' → logprob: -7.500676155090332
    3. ')' → logprob: -10.625676155090332
    4. '_' → logprob: -10.750676155090332
    5. 'in' → logprob: -11.125676155090332
    6. '):' → logprob: -11.500676155090332
    7. '[' → logprob: -11.625676155090332
    8. ' in' → logprob: -11.625676155090332
    9. '_:' → logprob: -11.750676155090332
    10. '   ' → logprob: -11.875676155090332

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03071148693561554
    2. '[' → logprob: -3.5307114124298096
    3. 'print' → logprob: -8.03071117401123
    4. '):' → logprob: -8.53071117401123
    5. ')' → logprob: -8.65571117401123
    6. ',' → logprob: -8.90571117401123
    7. '[]' → logprob: -10.53071117401123
    8. '[:]' → logprob: -10.53071117401123
    9. ':
' → logprob: -11.40571117401123
    10. '=' → logprob: -11.40571117401123

Token 67: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11873622238636017
    2. '   ' → logprob: -2.6187362670898438
    3. ' print' → logprob: -3.2437362670898438
    4. '```' → logprob: -10.618736267089844
    5. '	print' → logprob: -11.993736267089844
    6. ' ' → logprob: -11.993736267089844
    7. '    ' → logprob: -12.868736267089844
    8. '  ' → logprob: -12.993736267089844
    9. '    
' → logprob: -13.993736267089844
    10. '`' → logprob: -14.493736267089844

Token 68: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00018339496455155313
    2. '   ' → logprob: -9.12518310546875
    3. ' print' → logprob: -9.62518310546875
    4. 'pr' → logprob: -12.25018310546875
    5. 'for' → logprob: -14.00018310546875
    6. 'r' → logprob: -14.25018310546875
    7. '```' → logprob: -14.50018310546875
    8. '    
' → logprob: -15.00018310546875
    9. '
' → logprob: -15.50018310546875
    10. 's' → logprob: -15.75018310546875

Token 69: '(R' (ID: 4092)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.1635645478963852
    2. '(' → logprob: -1.9135645627975464
    3. '(*' → logprob: -6.038564682006836
    4. '(f' → logprob: -7.288564682006836
    5. '('' → logprob: -8.538564682006836
    6. '((' → logprob: -10.788564682006836
    7. '("("' → logprob: -10.913564682006836
    8. '("' → logprob: -11.538564682006836
    9. '(
' → logprob: -11.788564682006836
    10. 'r' → logprob: -12.038564682006836

Token 70: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.028620149940252304
    2. 'L' → logprob: -3.9036202430725098
    3. '[' → logprob: -5.02862024307251
    4. '_' → logprob: -7.15362024307251
    5. ')' → logprob: -8.153619766235352
    6. '_l' → logprob: -9.153619766235352
    7. '[]' → logprob: -10.028619766235352
    8. '[r' → logprob: -10.028619766235352
    9. '_[' → logprob: -10.153619766235352
    10. '[_' → logprob: -10.153619766235352

Token 71: '.index' (ID: 9736)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17669065296649933
    2. ')' → logprob: -2.4266905784606934
    3. '2' → logprob: -2.8016905784606934
    4. '[r' → logprob: -4.551690578460693
    5. '.index' → logprob: -7.176690578460693
    6. '[]' → logprob: -8.426691055297852
    7. '[
' → logprob: -8.801691055297852
    8. '[index' → logprob: -8.801691055297852
    9. '[count' → logprob: -9.176691055297852
    10. 'r' → logprob: -9.301691055297852

Token 72: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00020449401927180588
    2. '(' → logprob: -8.500204086303711
    3. '((' → logprob: -14.375204086303711
    4. '([' → logprob: -15.375204086303711
    5. ' (' → logprob: -16.87520408630371
    6. ')' → logprob: -17.37520408630371
    7. '(
' → logprob: -17.37520408630371
    8. 'r' → logprob: -18.62520408630371
    9. ')(' → logprob: -18.75020408630371
    10. '(

' → logprob: -18.75020408630371

Token 73: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.39911893010139465
    2. ')' → logprob: -1.2741189002990723
    3. '(r' → logprob: -3.1491189002990723
    4. '(' → logprob: -5.149118900299072
    5. '())' → logprob: -8.64911937713623
    6. '])' → logprob: -8.89911937713623
    7. '()))' → logprob: -9.02411937713623
    8. 'r' → logprob: -9.39911937713623
    9. '),' → logprob: -9.64911937713623
    10. ' ))' → logprob: -10.64911937713623

Token 74: ' +' (ID: 659)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21960532665252686
    2. ')' → logprob: -2.2196054458618164
    3. '())' → logprob: -3.0946054458618164
    4. '(r' → logprob: -3.2196054458618164
    5. '[' → logprob: -6.344605445861816
    6. '()' → logprob: -7.469605445861816
    7. '(
' → logprob: -8.344605445861816
    8. 'r' → logprob: -8.594605445861816
    9. '[r' → logprob: -8.719605445861816
    10. '([' → logprob: -9.094605445861816

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008046258008107543
    2. ' ' → logprob: -7.125804424285889
    3. ')' → logprob: -17.125804901123047
    4. '１' → logprob: -17.375804901123047
    5. '   ' → logprob: -17.375804901123047
    6. '```' → logprob: -17.625804901123047
    7. '<|end|>' → logprob: -17.750804901123047
    8. '  ' → logprob: -19.875804901123047
    9. '۱' → logprob: -19.938304901123047
    10. '१' → logprob: -20.125804901123047

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. ')' → logprob: -17.750045776367188
    4. '<|end|>' → logprob: -18.375045776367188
    5. '   ' → logprob: -18.625045776367188
    6. '１' → logprob: -18.750045776367188
    7. '```' → logprob: -20.125045776367188
    8. '  ' → logprob: -20.562545776367188
    9. '0' → logprob: -21.312545776367188
    10. '۱' → logprob: -21.312545776367188

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ')
' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.375004768371582
    4. '))' → logprob: -14.625004768371582
    5. '`)' → logprob: -15.875004768371582
    6. ')`' → logprob: -16.0000057220459
    7. '）' → logprob: -17.6250057220459
    8. ')

' → logprob: -17.7500057220459
    9. ')}' → logprob: -17.8750057220459
    10. '),' → logprob: -18.2500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 75
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 48.00%
Précision adaptée (1ère position): 50.67%
Précision (top 10): 81.33%
================================================================================
