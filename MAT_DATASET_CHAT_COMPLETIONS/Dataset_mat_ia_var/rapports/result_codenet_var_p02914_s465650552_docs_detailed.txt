================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calculate_special_sum(a):
    """
    Calcule et retourne la valeur maximale possible obtenue en partitionnant le tableau selon des règles basées sur l'opération XOR et la base de Gauss.
    
    Cette fonction sélectionne un sous-ensemble d'éléments de `a` (appelé 'blu') pour construire une base linéaire maximale en utilisant la méthode de réduction de Gauss sur le XOR binaire puis forme deux groupes dont la somme des XOR est la plus grande possible.
    
    Args:
        a (list of int): Liste des entiers sur lesquels appliquer l'algorithme.
    Returns:
        int: Le maximum de (XOR(blu) + XOR(rest)), où 'rest' sont les éléments restants et 'blu' la base construite.
    """

    n = len(a)  # Nombre d'éléments dans la liste
    sums = 0    # Sera le XOR total de tous les éléments de la liste

    # Calcul du XOR total
    for x in a:
        sums ^= x

    # blu : indices des éléments sélectionnés pour construire la "base"
    blu = set()

    # remain : indices encore disponibles pour être sélectionnés dans la base
    remain = set(range(n))

    # Parcours des 61 bits possibles du plus grand au plus petit (64 bits - quelques bits réservés à la précision)
    for i in range(60, -1, -1):
        # Vérifie si le bit i du XOR global est à 0, sinon pas la peine d'essayer de construire une base sur ce bit
        if (sums >> i) & 1 == 0:
            di = -1  # Indice d'un élément qui a le bit i à 1

            # Recherche d'un élément parmi les restants qui a le bit i à 1
            for j in remain:
                if (a[j] >> i) & 1 == 1:
                    di = j
                    break

            if di != -1:
                # On ajoute cet élément à la "base" blu
                blu.add(di)
                remain.remove(di)
                # Réduction Gaussienne : pour chaque autre élément ayant aussi un 1 sur le bit i, on l'XOR avec a[di]
                for j in range(n):
                    if j != di and (a[j] >> i) & 1 == 1:
                        a[j] ^= a[di]

    # Calcul du XOR des éléments sélectionnés pour "blu"
    bsum = 0
    for i in blu:
        bsum ^= a[i]

    # La somme maximale possible est la somme du XOR (bsum) de la base et le XOR du reste (sums ^ bsum)
    return bsum + (sums ^ bsum)

def main():
    """
    Point d'entrée du programme : lit les entrées, applique l'algorithme et affiche la réponse.
    """
    # Lecture du nombre d'éléments
    n = int(input())
    # Lecture de la liste d'entiers
    a = list(map(int, input().split()))
    # Application de l'algorithme et affichage du résultat
    print(calculate_special_sum(a))

# Appel du point d'entrée principal du programme
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calculate' (ID: 17950)
  → Token d'amorce (pas de prédiction)

Token 2: '_special' (ID: 100315)
  → Token d'amorce (pas de prédiction)

Token 3: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003272660542279482
    2. '```' → logprob: -6.503272533416748
    3. '(' → logprob: -7.003272533416748
    4. '_special' → logprob: -7.503272533416748
    5. '_token' → logprob: -9.878273010253906
    6. '_factor' → logprob: -9.878273010253906
    7. '(_' → logprob: -10.003273010253906
    8. ' _' → logprob: -10.128273010253906
    9. '_char' → logprob: -11.253273010253906
    10. '_character' → logprob: -11.253273010253906

Token 4: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009020501165650785
    2. '_' → logprob: -7.25090217590332
    3. '```' → logprob: -9.37590217590332
    4. ' (' → logprob: -10.50090217590332
    5. '(
' → logprob: -11.12590217590332
    6. '("("' → logprob: -11.37590217590332
    7. '(_' → logprob: -11.87590217590332
    8. '('' → logprob: -12.37590217590332
    9. '((' → logprob: -12.62590217590332
    10. '()' → logprob: -12.62590217590332

Token 5: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029388125985860825
    2. '):' → logprob: -3.779388189315796
    3. ')' → logprob: -5.654387950897217
    4. ',b' → logprob: -6.779387950897217
    5. '[' → logprob: -7.904387950897217
    6. 's' → logprob: -8.029388427734375
    7. ' ,' → logprob: -8.404388427734375
    8. ',a' → logprob: -8.529388427734375
    9. ':' → logprob: -8.904388427734375
    10. '_' → logprob: -9.904388427734375

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16425828635692596
    2. '   ' → logprob: -2.4142582416534424
    3. '(' → logprob: -3.4142582416534424
    4. '():' → logprob: -4.4142584800720215
    5. '```' → logprob: -4.4142584800720215
    6. '(:' → logprob: -6.6642584800720215
    7. '    
' → logprob: -7.6642584800720215
    8. ''' → logprob: -7.9142584800720215
    9. '':' → logprob: -8.414258003234863
    10. '\' → logprob: -8.539258003234863

Token 7: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5591379404067993
    2. '```' → logprob: -1.3091379404067993
    3. '`' → logprob: -2.5591378211975098
    4. '``' → logprob: -3.9341378211975098
    5. '\' → logprob: -4.05913782119751
    6. '\n' → logprob: -4.55913782119751
    7. '    
' → logprob: -4.93413782119751
    8. '       ' → logprob: -5.05913782119751
    9. ' ' → logprob: -5.30913782119751
    10. '    ' → logprob: -5.43413782119751

Token 8: '   ' (ID: 271)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.9302049279212952
    2. 'Calcul' → logprob: -1.0552048683166504
    3. '   ' → logprob: -2.6802048683166504
    4. 'Returns' → logprob: -3.0552048683166504
    5. '"""' → logprob: -3.0552048683166504
    6. 'Return' → logprob: -3.8052048683166504
    7. 'R' → logprob: -3.9302048683166504
    8. 'C' → logprob: -4.30520486831665
    9. ' Calculates' → logprob: -4.55520486831665
    10. 'S' → logprob: -4.93020486831665

Token 9: ' Cal' (ID: 4453)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.701673150062561
    2. 'Calcul' → logprob: -0.951673150062561
    3. 'S' → logprob: -3.4516730308532715
    4. '   ' → logprob: -3.5766730308532715
    5. 'Sum' → logprob: -3.7016730308532715
    6. 'Returns' → logprob: -4.2016730308532715
    7. '"""' → logprob: -5.8266730308532715
    8. 'Return' → logprob: -5.8266730308532715
    9. ' Calculates' → logprob: -5.8266730308532715
    10. 'This' → logprob: -6.0766730308532715

Token 10: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.10683885961771011
    2. 'cul' → logprob: -2.8568389415740967
    3. 'l' → logprob: -3.6068389415740967
    4. 'c' → logprob: -4.481838703155518
    5. 'cu' → logprob: -5.731838703155518
    6. 'cula' → logprob: -6.481838703155518
    7. 'lc' → logprob: -7.981838703155518
    8. '   ' → logprob: -9.606839179992676
    9. 'culated' → logprob: -9.606839179992676
    10. '```' → logprob: -9.856839179992676

Token 11: ' et' (ID: 859)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.6354480981826782
    2. 't' → logprob: -0.7604480981826782
    3. 'r' → logprob: -6.510447978973389
    4. 's' → logprob: -7.635447978973389
    5. 'tes' → logprob: -7.635447978973389
    6. 'rate' → logprob: -8.760448455810547
    7. 'late' → logprob: -9.135448455810547
    8. 'l' → logprob: -11.385448455810547
    9. 'm' → logprob: -11.385448455810547
    10. 'ate' → logprob: -11.385448455810547

Token 12: ' retourne' (ID: 178818)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7027614712715149
    2. ' retourne' → logprob: -1.2027614116668701
    3. 'return' → logprob: -2.70276141166687
    4. 's' → logprob: -3.82776141166687
    5. ' addition' → logprob: -4.077761650085449
    6. ' return' → logprob: -4.202761650085449
    7. '```' → logprob: -4.327761650085449
    8. 'r' → logprob: -4.702761650085449
    9. 'addition' → logprob: -5.077761650085449
    10. ' somme' → logprob: -5.452761650085449

Token 13: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.39233219623565674
    2. ' le' → logprob: -2.017332077026367
    3. ' l' → logprob: -2.017332077026367
    4. 'r' → logprob: -4.017332077026367
    5. 's' → logprob: -4.267332077026367
    6. 'l' → logprob: -4.392332077026367
    7. ' ' → logprob: -5.267332077026367
    8. '```' → logprob: -5.892332077026367
    9. ' the' → logprob: -6.142332077026367
    10. '   ' → logprob: -7.142332077026367

Token 14: ' valeur' (ID: 41664)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.08286880701780319
    2. 's' → logprob: -2.957868814468384
    3. '   ' → logprob: -4.082868576049805
    4. ' ' → logprob: -4.957868576049805
    5. ' sum' → logprob: -6.332868576049805
    6. '  ' → logprob: -7.082868576049805
    7. 'sum' → logprob: -7.832868576049805
    8. ' valeur' → logprob: -8.582868576049805
    9. '    ' → logprob: -8.957868576049805
    10. ' som' → logprob: -9.457868576049805

Token 15: ' maximale' (ID: 76380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9066738486289978
    2. ' de' → logprob: -1.5316739082336426
    3. ' ' → logprob: -2.1566739082336426
    4. '  ' → logprob: -2.7816739082336426
    5. ' d' → logprob: -2.9066739082336426
    6. ' du' → logprob: -3.6566739082336426
    7. '```' → logprob: -3.7816739082336426
    8. ' suivante' → logprob: -3.9066739082336426
    9. 's' → logprob: -4.156673908233643
    10. '    ' → logprob: -4.781673908233643

Token 16: ' possible' (ID: 4149)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6797641515731812
    2. ' des' → logprob: -1.4297641515731812
    3. ' du' → logprob: -2.9297642707824707
    4. ' d' → logprob: -3.0547642707824707
    5. ' ' → logprob: -3.1797642707824707
    6. 'de' → logprob: -3.3047642707824707
    7. ' entre' → logprob: -3.6797642707824707
    8. '```' → logprob: -3.9297642707824707
    9. 'des' → logprob: -5.179764270782471
    10. '_' → logprob: -5.554764270782471

Token 17: ' obten' (ID: 28150)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2366524636745453
    2. ' des' → logprob: -2.486652374267578
    3. ' d' → logprob: -2.611652374267578
    4. ' ' → logprob: -3.611652374267578
    5. ' du' → logprob: -4.611652374267578
    6. '```' → logprob: -5.486652374267578
    7. 'de' → logprob: -5.861652374267578
    8. ' entre' → logprob: -5.861652374267578
    9. '   ' → logprob: -6.486652374267578
    10. ' of' → logprob: -6.861652374267578

Token 18: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.89278644323349
    2. 'u' → logprob: -1.1427865028381348
    3. 'e' → logprob: -1.5177865028381348
    4. 'enue' → logprob: -4.017786502838135
    5. 'a' → logprob: -4.392786502838135
    6. 'ie' → logprob: -5.017786502838135
    7. '   ' → logprob: -5.142786502838135
    8. 'i' → logprob: -5.267786502838135
    9. 'ant' → logprob: -7.267786502838135
    10. 'r' → logprob: -7.392786502838135

Token 19: ' en' (ID: 469)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.7450764775276184
    2. ' en' → logprob: -1.7450764179229736
    3. ' ' → logprob: -2.2450764179229736
    4. '```' → logprob: -2.4950764179229736
    5. 'e' → logprob: -2.9950764179229736
    6. 'par' → logprob: -3.7450764179229736
    7. ' à' → logprob: -3.8700764179229736
    8. 'en' → logprob: -4.245076656341553
    9. ' de' → logprob: -4.245076656341553
    10. 'de' → logprob: -5.120076656341553

Token 20: ' partition' (ID: 31512)
  Prédit: ' multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multip' → logprob: -0.40022534132003784
    2. ' addition' → logprob: -2.2752254009246826
    3. ' ajout' → logprob: -2.6502254009246826
    4. ' chois' → logprob: -3.2752254009246826
    5. ' somm' → logprob: -3.9002254009246826
    6. ' combin' → logprob: -3.9002254009246826
    7. ' utilisant' → logprob: -4.0252251625061035
    8. '   ' → logprob: -4.7752251625061035
    9. ' prenant' → logprob: -4.9002251625061035
    10. ' effect' → logprob: -5.2752251625061035

Token 21: 'nant' (ID: 48648)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.18206354975700378
    2. 'nant' → logprob: -1.8070635795593262
    3. '_' → logprob: -7.182063579559326
    4. ' ' → logprob: -8.057063102722168
    5. 'n' → logprob: -8.182063102722168
    6. 'a' → logprob: -8.557063102722168
    7. '```' → logprob: -8.557063102722168
    8. ' ant' → logprob: -8.682063102722168
    9. '   ' → logprob: -8.807063102722168
    10. 's' → logprob: -10.682063102722168

Token 22: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11566434055566788
    2. ' ' → logprob: -2.61566424369812
    3. ' la' → logprob: -4.615664482116699
    4. '_a' → logprob: -5.115664482116699
    5. 'a' → logprob: -5.240664482116699
    6. '_le' → logprob: -6.365664482116699
    7. '_l' → logprob: -6.740664482116699
    8. ' _' → logprob: -6.740664482116699
    9. ' a' → logprob: -6.865664482116699
    10. 'def' → logprob: -6.990664482116699

Token 23: ' tableau' (ID: 67053)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4217863976955414
    2. 'a' → logprob: -1.1717864274978638
    3. 's' → logprob: -4.546786308288574
    4. '_a' → logprob: -5.296786308288574
    5. 'string' → logprob: -5.796786308288574
    6. ' a' → logprob: -5.921786308288574
    7. 'n' → logprob: -6.546786308288574
    8. ' tableau' → logprob: -6.546786308288574
    9. 'chaine' → logprob: -6.796786308288574
    10. ' string' → logprob: -6.796786308288574

Token 24: ' selon' (ID: 27571)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5530341267585754
    2. ' ' → logprob: -1.3030340671539307
    3. '_' → logprob: -3.0530340671539307
    4. 'a' → logprob: -3.1780340671539307
    5. ' a' → logprob: -4.05303430557251
    6. ')' → logprob: -5.05303430557251
    7. '[' → logprob: -5.05303430557251
    8. ' `' → logprob: -5.42803430557251
    9. ' )' → logprob: -5.67803430557251
    10. ' _' → logprob: -5.80303430557251

Token 25: ' des' (ID: 731)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6135953664779663
    2. ' des' → logprob: -2.113595485687256
    3. ' les' → logprob: -2.363595485687256
    4. ' l' → logprob: -2.863595485687256
    5. ' le' → logprob: -3.488595485687256
    6. ' un' → logprob: -3.738595485687256
    7. '```' → logprob: -3.863595485687256
    8. ' ' → logprob: -4.363595485687256
    9. ' ' → logprob: -4.488595485687256
    10. '   ' → logprob: -4.488595485687256

Token 26: ' règles' (ID: 67042)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.11030454188585281
    2. ' critères' → logprob: -3.235304594039917
    3. ' ret' → logprob: -4.110304355621338
    4. 'esp' → logprob: -4.360304355621338
    5. '_' → logprob: -4.860304355621338
    6. ' crit' → logprob: -4.985304355621338
    7. ' éléments' → logprob: -5.735304355621338
    8. ' espace' → logprob: -5.860304355621338
    9. '```' → logprob: -6.235304355621338
    10. 'élé' → logprob: -6.610304355621338

Token 27: ' bas' (ID: 3222)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.8879038095474243
    2. ' de' → logprob: -1.6379038095474243
    3. ' d' → logprob: -2.8879036903381348
    4. ' donnée' → logprob: -3.0129036903381348
    5. ' strict' → logprob: -3.1379036903381348
    6. '   ' → logprob: -3.2629036903381348
    7. ' particuli' → logprob: -3.5129036903381348
    8. ' spéc' → logprob: -3.5129036903381348
    9. ' donné' → logprob: -3.6379036903381348
    10. '```' → logprob: -4.012903690338135

Token 28: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0387684665620327
    2. 'es' → logprob: -4.163768291473389
    3. 'é' → logprob: -4.788768291473389
    4. 'e' → logprob: -5.038768291473389
    5. 'ée' → logprob: -5.663768291473389
    6. 'és' → logprob: -6.288768291473389
    7. 'iques' → logprob: -6.913768291473389
    8. 'ed' → logprob: -7.663768291473389
    9. 't' → logprob: -9.038768768310547
    10. 'd' → logprob: -9.288768768310547

Token 29: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.1281186193227768
    2. 'sur' → logprob: -2.1281185150146484
    3. '_sur' → logprob: -7.628118515014648
    4. '   ' → logprob: -7.878118515014648
    5. 'e' → logprob: -9.253118515014648
    6. 'es' → logprob: -9.628118515014648
    7. 'def' → logprob: -10.253118515014648
    8. ' on' → logprob: -10.753118515014648
    9. ' ' → logprob: -11.378118515014648
    10. 's' → logprob: -11.503118515014648

Token 30: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7245973944664001
    2. ' les' → logprob: -1.474597454071045
    3. ' l' → logprob: -2.224597454071045
    4. ' des' → logprob: -2.974597454071045
    5. 'a' → logprob: -3.474597454071045
    6. ' ' → logprob: -3.724597454071045
    7. 'les' → logprob: -3.849597454071045
    8. 'l' → logprob: -4.474597454071045
    9. ' le' → logprob: -4.724597454071045
    10. ' ' → logprob: -5.349597454071045

Token 31: ''op' (ID: 70747)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21819353103637695
    2. 'e' → logprob: -1.718193531036377
    3. 'es' → logprob: -5.093193531036377
    4. ''' → logprob: -5.093193531036377
    5. ''a' → logprob: -6.968193531036377
    6. ''ex' → logprob: -7.718193531036377
    7. ''espace' → logprob: -8.093193054199219
    8. ''''' → logprob: -8.343193054199219
    9. ''é' → logprob: -8.343193054199219
    10. '\'' → logprob: -8.968193054199219

Token 32: 'ération' (ID: 24977)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.37665295600891113
    2. 'e' → logprob: -2.251652956008911
    3. 'é' → logprob: -2.501652956008911
    4. 'ér' → logprob: -3.376652956008911
    5. 'p' → logprob: -4.001652717590332
    6. 'érations' → logprob: -4.751652717590332
    7. 'ération' → logprob: -4.751652717590332
    8. 'r' → logprob: -5.001652717590332
    9. 'ti' → logprob: -5.251652717590332
    10. 'er' → logprob: -5.251652717590332

Token 33: ' XOR' (ID: 147209)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7973026633262634
    2. '+' → logprob: -1.7973027229309082
    3. ' de' → logprob: -2.172302722930908
    4. ' ' → logprob: -3.172302722930908
    5. ' `' → logprob: -3.422302722930908
    6. ''' → logprob: -4.047302722930908
    7. ' +' → logprob: -4.047302722930908
    8. '   ' → logprob: -4.172302722930908
    9. '```' → logprob: -4.422302722930908
    10. '_' → logprob: -4.547302722930908

Token 34: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10215570777654648
    2. '.' → logprob: -2.8521556854248047
    3. ' ' → logprob: -4.977155685424805
    4. ')' → logprob: -5.602155685424805
    5. ' de' → logprob: -5.602155685424805
    6. ',' → logprob: -5.727155685424805
    7. ' entre' → logprob: -5.852155685424805
    8. ' et' → logprob: -5.852155685424805
    9. '
' → logprob: -6.102155685424805
    10. ' des' → logprob: -6.227155685424805

Token 35: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7564736604690552
    2. ' la' → logprob: -1.7564736604690552
    3. ' des' → logprob: -2.3814735412597656
    4. ' les' → logprob: -2.3814735412597656
    5. ' le' → logprob: -3.1314735412597656
    6. 'l' → logprob: -3.1314735412597656
    7. ' ' → logprob: -4.381473541259766
    8. '   ' → logprob: -4.381473541259766
    9. 'le' → logprob: -4.756473541259766
    10. 'les' → logprob: -5.131473541259766

Token 36: ' base' (ID: 3611)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.06284964829683304
    2. 's' → logprob: -3.312849760055542
    3. ' som' → logprob: -5.687849521636963
    4. ' partition' → logprob: -6.062849521636963
    5. ' maximum' → logprob: -6.187849521636963
    6. ' ' → logprob: -6.187849521636963
    7. ' max' → logprob: -6.437849521636963
    8. ' valeur' → logprob: -6.562849521636963
    9. ' sum' → logprob: -7.312849521636963
    10. ' différence' → logprob: -7.687849521636963

Token 37: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1594300270080566
    2. '64' → logprob: -1.5344300270080566
    3. '2' → logprob: -1.6594300270080566
    4. ' des' → logprob: -2.5344300270080566
    5. ' ' → logprob: -3.1594300270080566
    6. '```' → logprob: -3.2844300270080566
    7. ' of' → logprob: -4.284430027008057
    8. 'de' → logprob: -4.284430027008057
    9. '32' → logprob: -4.784430027008057
    10. ' du' → logprob: -4.784430027008057

Token 38: ' Ga' (ID: 18586)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.37562277913093567
    2. ' la' → logprob: -2.5006227493286133
    3. 'd' → logprob: -2.7506227493286133
    4. ' l' → logprob: -2.7506227493286133
    5. 'l' → logprob: -3.3756227493286133
    6. ' donnée' → logprob: -3.3756227493286133
    7. ' ' → logprob: -4.125622749328613
    8. 'don' → logprob: -5.375622749328613
    9. 'la' → logprob: -5.875622749328613
    10. ' donné' → logprob: -6.500622749328613

Token 39: 'uss' (ID: 1824)
  Prédit: 'uss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uss' → logprob: -0.4770877957344055
    2. 'b' → logprob: -1.3520877361297607
    3. 'p' → logprob: -2.7270877361297607
    4. 'ussian' → logprob: -3.3520877361297607
    5. 'ss' → logprob: -5.22708797454834
    6. 'l' → logprob: -5.47708797454834
    7. 'usse' → logprob: -6.22708797454834
    8. 'r' → logprob: -6.47708797454834
    9. 'u' → logprob: -6.60208797454834
    10. 'll' → logprob: -6.85208797454834

Token 40: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3102012872695923
    2. ' ' → logprob: -2.0602011680603027
    3. 'e' → logprob: -3.9352011680603027
    4. ',' → logprob: -4.060201168060303
    5. '   ' → logprob: -4.310201168060303
    6. '"""' → logprob: -4.435201168060303
    7. '```' → logprob: -4.935201168060303
    8. '-' → logprob: -4.935201168060303
    9. '"' → logprob: -5.060201168060303
    10. '  ' → logprob: -5.060201168060303

Token 41: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06725549697875977
    2. '\n' → logprob: -3.9422554969787598
    3. '    
' → logprob: -4.94225549697876
    4. '\' → logprob: -5.06725549697876
    5. ' 
' → logprob: -5.06725549697876
    6. '"""
' → logprob: -5.19225549697876
    7. '
' → logprob: -5.44225549697876
    8. '```' → logprob: -6.06725549697876
    9. '    ' → logprob: -6.44225549697876
    10. '  
' → logprob: -6.44225549697876

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007613494526594877
    2. '    ' → logprob: -5.882613658905029
    3. '"""' → logprob: -6.257613658905029
    4. ' """' → logprob: -6.757613658905029
    5. ' ' → logprob: -7.507613658905029
    6. '    
' → logprob: -8.507613182067871
    7. '```' → logprob: -8.757613182067871
    8. ' """
' → logprob: -8.757613182067871
    9. ' 
' → logprob: -9.257613182067871
    10. '
' → logprob: -9.507613182067871

Token 43: ' Cette' (ID: 27383)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005381741560995579
    2. '    ' → logprob: -6.5053815841674805
    3. '    
' → logprob: -6.7553815841674805
    4. '
' → logprob: -6.8803815841674805
    5. '"""' → logprob: -7.3803815841674805
    6. ' 
' → logprob: -8.13038158416748
    7. '```' → logprob: -8.50538158416748
    8. '"""
' → logprob: -9.00538158416748
    9. ' """
' → logprob: -9.38038158416748
    10. ' """' → logprob: -9.63038158416748

Token 44: ' fonction' (ID: 17610)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -1.4835864305496216
    2. '_' → logprob: -1.8585864305496216
    3. ' def' → logprob: -1.8585864305496216
    4. ' ' → logprob: -1.9835864305496216
    5. 'def' → logprob: -2.358586311340332
    6. ' fonction' → logprob: -2.608586311340332
    7. '   ' → logprob: -3.358586311340332
    8. ' function' → logprob: -3.483586311340332
    9. '_base' → logprob: -4.108586311340332
    10. 'n' → logprob: -4.233586311340332

Token 45: ' sélection' (ID: 43472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30870693922042847
    2. '   ' → logprob: -2.8087069988250732
    3. 'def' → logprob: -3.5587069988250732
    4. ' def' → logprob: -3.6837069988250732
    5. '_' → logprob: -4.058706760406494
    6. '  ' → logprob: -4.558706760406494
    7. '    ' → logprob: -4.558706760406494
    8. ' continue' → logprob: -4.683706760406494
    9. ' est' → logprob: -4.683706760406494
    10. ' retourne' → logprob: -4.933706760406494

Token 46: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.012287826277315617
    2. 'nant' → logprob: -5.512287616729736
    3. 'nera' → logprob: -5.762287616729736
    4. 'nne' → logprob: -6.387287616729736
    5. 'e' → logprob: -7.012287616729736
    6. ' ne' → logprob: -7.262287616729736
    7. 'n' → logprob: -7.512287616729736
    8. '_ne' → logprob: -8.262288093566895
    9. '_' → logprob: -8.637288093566895
    10. '   ' → logprob: -9.012288093566895

Token 47: ' un' (ID: 537)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0608197450637817
    2. ' les' → logprob: -1.0608197450637817
    3. ' la' → logprob: -2.060819625854492
    4. ' le' → logprob: -2.435819625854492
    5. ' un' → logprob: -3.685819625854492
    6. ' une' → logprob: -4.435819625854492
    7. ' ' → logprob: -4.560819625854492
    8. ' l' → logprob: -5.185819625854492
    9. 'les' → logprob: -5.310819625854492
    10. 'des' → logprob: -5.310819625854492

Token 48: ' sous' (ID: 14487)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6928374171257019
    2. ' sous' → logprob: -1.0678374767303467
    3. 's' → logprob: -2.6928374767303467
    4. 'a' → logprob: -3.5678374767303467
    5. 'élé' → logprob: -4.067837238311768
    6. ' élément' → logprob: -4.692837238311768
    7. ' ensemble' → logprob: -5.067837238311768
    8. ' maximum' → logprob: -5.442837238311768
    9. ' e' → logprob: -5.692837238311768
    10. ' subset' → logprob: -6.067837238311768

Token 49: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0817202627658844
    2. '-table' → logprob: -3.7067203521728516
    3. '_' → logprob: -3.9567203521728516
    4. 'ensemble' → logprob: -4.831720352172852
    5. '-array' → logprob: -4.956720352172852
    6. '-é' → logprob: -5.456720352172852
    7. '_array' → logprob: -5.706720352172852
    8. '_table' → logprob: -6.331720352172852
    9. '   ' → logprob: -6.331720352172852
    10. '```' → logprob: -6.331720352172852

Token 50: 'ensemble' (ID: 37301)
  Prédit: 'ensemble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.31029045581817627
    2. ' tableau' → logprob: -2.3102903366088867
    3. '_' → logprob: -2.4352903366088867
    4. ' ensemble' → logprob: -3.8102903366088867
    5. 'ense' → logprob: -4.185290336608887
    6. '-' → logprob: -4.310290336608887
    7. 'array' → logprob: -4.560290336608887
    8. 'table' → logprob: -5.060290336608887
    9. 'é' → logprob: -5.685290336608887
    10. '   ' → logprob: -6.185290336608887

Token 51: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1446901559829712
    2. ' des' → logprob: -2.5196900367736816
    3. '<|end|>' → logprob: -4.394690036773682
    4. ' d' → logprob: -4.519690036773682
    5. ' ' → logprob: -4.894690036773682
    6. ' line' → logprob: -5.644690036773682
    7. ' complet' → logprob: -5.769690036773682
    8. 'de' → logprob: -5.894690036773682
    9. ' du' → logprob: -5.894690036773682
    10. ' unique' → logprob: -6.644690036773682

Token 52: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.5150572061538696
    2. ' éléments' → logprob: -2.14005708694458
    3. ' des' → logprob: -2.39005708694458
    4. ' elements' → logprob: -2.39005708694458
    5. 'a' → logprob: -2.51505708694458
    6. ' l' → logprob: -3.14005708694458
    7. '_' → logprob: -3.39005708694458
    8. ' tokens' → logprob: -3.51505708694458
    9. 'e' → logprob: -3.51505708694458
    10. ' les' → logprob: -3.64005708694458

Token 53: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.4596710205078125
    2. 'a' → logprob: -1.2096710205078125
    3. 'indices' → logprob: -3.7096710205078125
    4. ''' → logprob: -4.3346710205078125
    5. 'e' → logprob: -4.9596710205078125
    6. ' éléments' → logprob: -4.9596710205078125
    7. ' indices' → logprob: -5.0846710205078125
    8. ''ent' → logprob: -6.0846710205078125
    9. 'ent' → logprob: -6.2096710205078125
    10. 'elements' → logprob: -6.3346710205078125

Token 54: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.03529505431652069
    2. 'ment' → logprob: -3.410295009613037
    3. 'mé' → logprob: -7.160295009613037
    4. 'm' → logprob: -7.535295009613037
    5. 'men' → logprob: -8.910295486450195
    6. 'mente' → logprob: -10.035295486450195
    7. '' → logprob: -10.410295486450195
    8. 'me' → logprob: -10.785295486450195
    9. 'éments' → logprob: -10.785295486450195
    10. 'ément' → logprob: -11.785295486450195

Token 55: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.47140365839004517
    2. ' ' → logprob: -1.8464035987854004
    3. ' à' → logprob: -1.8464035987854004
    4. ',' → logprob: -4.3464035987854
    5. ' qui' → logprob: -5.2214035987854
    6. ' dans' → logprob: -5.2214035987854
    7. ' pour' → logprob: -5.3464035987854
    8. '_' → logprob: -5.7214035987854
    9. ')' → logprob: -5.7214035987854
    10. ' du' → logprob: -5.7214035987854

Token 56: ' `' (ID: 2700)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.23785078525543213
    2. 'a' → logprob: -1.6128507852554321
    3. ' ' → logprob: -5.487850666046143
    4. ' l' → logprob: -5.737850666046143
    5. ' `' → logprob: -6.737850666046143
    6. ' la' → logprob: -6.737850666046143
    7. ' the' → logprob: -7.362850666046143
    8. 'l' → logprob: -7.362850666046143
    9. ' ' → logprob: -7.862850666046143
    10. '```' → logprob: -8.4878511428833

Token 57: 'a' (ID: 64)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.633563756942749
    2. 'a' → logprob: -0.758563756942749
    3. ' `' → logprob: -7.633563995361328
    4. '`' → logprob: -8.508563995361328
    5. 'l' → logprob: -9.258563995361328
    6. ' l' → logprob: -10.008563995361328
    7. '```' → logprob: -10.008563995361328
    8. ' la' → logprob: -10.383563995361328
    9. ' the' → logprob: -10.633563995361328
    10. ' ' → logprob: -11.008563995361328

Token 58: '`' (ID: 63)
  Prédit: '`'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '`' → logprob: -0.10366996377706528
    2. ' `' → logprob: -2.3536698818206787
    3. ')' → logprob: -6.478670120239258
    4. ')`' → logprob: -7.353670120239258
    5. '`)' → logprob: -7.728670120239258
    6. '```' → logprob: -8.103670120239258
    7. ' pour' → logprob: -8.728670120239258
    8. ' afin' → logprob: -8.853670120239258
    9. ' )' → logprob: -9.728670120239258
    10. '_' → logprob: -10.353670120239258

Token 59: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16921278834342957
    2. ',' → logprob: -3.169212818145752
    3. ' ,' → logprob: -3.544212818145752
    4. ' afin' → logprob: -3.544212818145752
    5. ' pour' → logprob: -4.169212818145752
    6. '_' → logprob: -4.169212818145752
    7. ' et' → logprob: -5.044212818145752
    8. ' en' → logprob: -5.544212818145752
    9. '.' → logprob: -6.169212818145752
    10. ')' → logprob: -6.419212818145752

Token 60: 'appel' (ID: 100200)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4371466040611267
    2. ' )' → logprob: -1.1871466636657715
    3. ' pour' → logprob: -4.1871466636657715
    4. ' afin' → logprob: -4.5621466636657715
    5. ' et' → logprob: -6.1871466636657715
    6. ' en' → logprob: -6.3121466636657715
    7. 'a' → logprob: -6.6871466636657715
    8. ',' → logprob: -6.6871466636657715
    9. ' sans' → logprob: -6.6871466636657715
    10. ' dans' → logprob: -6.6871466636657715

Token 61: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.2990206182003021
    2. 'és' → logprob: -1.5490206480026245
    3. 'e' → logprob: -3.799020528793335
    4. 'ant' → logprob: -4.424020767211914
    5. 'ée' → logprob: -5.049020767211914
    6. ')' → logprob: -6.174020767211914
    7. 'er' → logprob: -7.174020767211914
    8. 'a' → logprob: -7.424020767211914
    9. '   ' → logprob: -8.049020767211914
    10. 'd' → logprob: -8.174020767211914

Token 62: ' '' (ID: 461)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -1.4038360118865967
    2. ' la' → logprob: -1.9038360118865967
    3. ' une' → logprob: -2.1538360118865967
    4. ' un' → logprob: -2.2788360118865967
    5. ' `' → logprob: -2.2788360118865967
    6. ' '' → logprob: -2.4038360118865967
    7. ' ' → logprob: -3.6538360118865967
    8. ' le' → logprob: -3.7788360118865967
    9. '```' → logprob: -4.028836250305176
    10. ' des' → logprob: -4.028836250305176

Token 63: 'blu' (ID: 125889)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.44259077310562134
    2. 'base' → logprob: -2.4425907135009766
    3. ' basis' → logprob: -3.0675907135009766
    4. 'b' → logprob: -3.5675907135009766
    5. 'a' → logprob: -3.8175907135009766
    6. ' ' → logprob: -3.9425907135009766
    7. ' subset' → logprob: -4.067590713500977
    8. 's' → logprob: -4.192590713500977
    9. ' espace' → logprob: -4.567590713500977
    10. 'basis' → logprob: -4.817590713500977

Token 64: '')' (ID: 1542)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.003091558814048767
    2. 'etooth' → logprob: -7.503091335296631
    3. 'et' → logprob: -7.753091335296631
    4. 'r' → logprob: -7.878091335296631
    5. 'ed' → logprob: -8.003091812133789
    6. 'print' → logprob: -8.378091812133789
    7. 't' → logprob: -8.503091812133789
    8. 'es' → logprob: -8.628091812133789
    9. 's' → logprob: -9.315591812133789
    10. 'eu' → logprob: -9.503091812133789

Token 65: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.770793616771698
    2. ' ' → logprob: -1.0207936763763428
    3. ' ,' → logprob: -2.5207936763763428
    4. ')' → logprob: -3.7707936763763428
    5. '.' → logprob: -3.7707936763763428
    6. ':' → logprob: -4.020793437957764
    7. '_' → logprob: -4.520793437957764
    8. '   ' → logprob: -5.520793437957764
    9. ' )' → logprob: -5.770793437957764
    10. ' :' → logprob: -6.020793437957764

Token 66: ' construire' (ID: 92473)
  Prédit: ' maxim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maxim' → logprob: -0.3220978081226349
    2. ' maximize' → logprob: -2.0720977783203125
    3. ' construire' → logprob: -3.4470977783203125
    4. ' optimiser' → logprob: -3.4470977783203125
    5. ' créer' → logprob: -4.5720977783203125
    6. ' max' → logprob: -4.6970977783203125
    7. ' augmenter' → logprob: -4.8220977783203125
    8. ' garantir' → logprob: -5.0720977783203125
    9. ' ajouter' → logprob: -5.3220977783203125
    10. ' form' → logprob: -5.3220977783203125

Token 67: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.540692150592804
    2. ' un' → logprob: -1.4156920909881592
    3. ' une' → logprob: -2.290692090988159
    4. ' la' → logprob: -2.915692090988159
    5. '```' → logprob: -5.415692329406738
    6. ' a' → logprob: -5.540692329406738
    7. ' l' → logprob: -6.415692329406738
    8. '  ' → logprob: -6.665692329406738
    9. '    ' → logprob: -6.790692329406738
    10. ' le' → logprob: -6.915692329406738

Token 68: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.005345344077795744
    2. ' ' → logprob: -5.505345344543457
    3. 'base' → logprob: -7.005345344543457
    4. '  ' → logprob: -9.255345344543457
    5. '_base' → logprob: -9.505345344543457
    6. ' nouvelle' → logprob: -10.255345344543457
    7. ' matr' → logprob: -11.005345344543457
    8. ' space' → logprob: -11.005345344543457
    9. '   ' → logprob: -11.130345344543457
    10. ' espace' → logprob: -11.505345344543457

Token 69: ' lin' (ID: 14432)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.05062758922576904
    2. ' linear' → logprob: -4.675627708435059
    3. '  ' → logprob: -5.300627708435059
    4. '   ' → logprob: -5.425627708435059
    5. ' xor' → logprob: -5.550627708435059
    6. ' XOR' → logprob: -6.175627708435059
    7. ' ' → logprob: -6.300627708435059
    8. '_' → logprob: -6.425627708435059
    9. ' d' → logprob: -6.550627708435059
    10. 'de' → logprob: -6.800627708435059

Token 70: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.10634048283100128
    2. 'aire' → logprob: -2.3563404083251953
    3. 'a' → logprob: -5.356340408325195
    4. '```' → logprob: -7.731340408325195
    5. 'e' → logprob: -8.606340408325195
    6. 'ï' → logprob: -8.856340408325195
    7. ' ' → logprob: -9.606340408325195
    8. 'á' → logprob: -9.606340408325195
    9. ' indépendante' → logprob: -9.731340408325195
    10. 'éraire' → logprob: -10.106340408325195

Token 71: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.0012241550721228123
    2. 'a' → logprob: -7.626224040985107
    3. 'ale' → logprob: -8.251224517822266
    4. 'al' → logprob: -8.376224517822266
    5. ' aire' → logprob: -9.376224517822266
    6. ' ' → logprob: -10.251224517822266
    7. 'naire' → logprob: -10.626224517822266
    8. '```' → logprob: -10.751224517822266
    9. 'are' → logprob: -11.376224517822266
    10. 'ar' → logprob: -11.376224517822266

Token 72: ' maximale' (ID: 76380)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.09098237752914429
    2. ' ' → logprob: -3.715982437133789
    3. ' complète' → logprob: -4.340982437133789
    4. ' ,' → logprob: -5.215982437133789
    5. ' pour' → logprob: -5.340982437133789
    6. ',' → logprob: -5.465982437133789
    7. ' sur' → logprob: -5.465982437133789
    8. '   ' → logprob: -5.590982437133789
    9. 'de' → logprob: -5.965982437133789
    10. ' en' → logprob: -5.965982437133789

Token 73: ' en' (ID: 469)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7105700969696045
    2. '.' → logprob: -1.8355700969696045
    3. '<|end|>' → logprob: -2.3355700969696045
    4. ' en' → logprob: -2.7105700969696045
    5. ' ' → logprob: -3.8355700969696045
    6. ' pour' → logprob: -3.9605700969696045
    7. ' du' → logprob: -4.335570335388184
    8. ',' → logprob: -4.335570335388184
    9. ' sur' → logprob: -4.460570335388184
    10. '```' → logprob: -4.585570335388184

Token 74: ' utilisant' (ID: 92474)
  Prédit: ' utilisant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.7467063665390015
    2. ' termes' → logprob: -2.371706485748291
    3. 'xor' → logprob: -2.871706485748291
    4. '<|end|>' → logprob: -2.871706485748291
    5. '```' → logprob: -2.871706485748291
    6. ' xor' → logprob: -3.371706485748291
    7. 'X' → logprob: -3.871706485748291
    8. ' ' → logprob: -3.871706485748291
    9. ' terme' → logprob: -3.871706485748291
    10. ' XOR' → logprob: -3.871706485748291

Token 75: ' la' (ID: 557)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.829207718372345
    2. ' l' → logprob: -1.0792076587677002
    3. ' la' → logprob: -2.8292076587677
    4. ' xor' → logprob: -3.3292076587677
    5. ' les' → logprob: -3.5792076587677
    6. ' un' → logprob: -3.7042076587677
    7. ' ' → logprob: -3.7042076587677
    8. ' le' → logprob: -3.9542076587677
    9. ' une' → logprob: -5.079207897186279
    10. ' XOR' → logprob: -5.329207897186279

Token 76: ' méthode' (ID: 71490)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24051573872566223
    2. ' base' → logprob: -1.6155157089233398
    3. ' space' → logprob: -5.36551570892334
    4. '  ' → logprob: -5.49051570892334
    5. ' espace' → logprob: -6.99051570892334
    6. '   ' → logprob: -7.61551570892334
    7. ' valeur' → logprob: -7.61551570892334
    8. ' méthode' → logprob: -7.99051570892334
    9. 'base' → logprob: -8.24051570892334
    10. 'space' → logprob: -8.30301570892334

Token 77: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07722567766904831
    2. ' ' → logprob: -3.827225685119629
    3. 'de' → logprob: -3.952225685119629
    4. ' du' → logprob: -5.077225685119629
    5. ' des' → logprob: -5.327225685119629
    6. '  ' → logprob: -5.327225685119629
    7. ' d' → logprob: -5.327225685119629
    8. 'd' → logprob: -6.327225685119629
    9. ' la' → logprob: -6.452225685119629
    10. ' `' → logprob: -6.577225685119629

Token 78: ' réduction' (ID: 89072)
  Prédit: ' Ga'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ga' → logprob: -0.36682799458503723
    2. ' la' → logprob: -1.6168279647827148
    3. ' l' → logprob: -3.241827964782715
    4. ' base' → logprob: -4.241827964782715
    5. ' ga' → logprob: -4.616827964782715
    6. ' réduction' → logprob: -4.616827964782715
    7. 'l' → logprob: -4.991827964782715
    8. 'Ga' → logprob: -5.116827964782715
    9. ' Gaussian' → logprob: -5.616827964782715
    10. ' tri' → logprob: -5.741827964782715

Token 79: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.16607142984867096
    2. ' lin' → logprob: -2.7910714149475098
    3. ' des' → logprob: -3.7910714149475098
    4. ' ' → logprob: -4.04107141494751
    5. '   ' → logprob: -4.79107141494751
    6. ' du' → logprob: -5.04107141494751
    7. ' ga' → logprob: -5.04107141494751
    8. 'de' → logprob: -5.41607141494751
    9. ' lex' → logprob: -6.04107141494751
    10. ' en' → logprob: -6.04107141494751

Token 80: ' Ga' (ID: 18586)
  Prédit: ' Ga'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ga' → logprob: -0.4485226273536682
    2. ' l' → logprob: -2.3235225677490234
    3. ' la' → logprob: -2.3235225677490234
    4. ' vect' → logprob: -3.1985225677490234
    5. ' ga' → logprob: -3.4485225677490234
    6. 'l' → logprob: -3.9485225677490234
    7. ' base' → logprob: -4.323522567749023
    8. 'Ga' → logprob: -4.698522567749023
    9. ' ' → logprob: -5.073522567749023
    10. 'a' → logprob: -5.073522567749023

Token 81: 'uss' (ID: 1824)
  Prédit: 'uss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uss' → logprob: -0.003999446053057909
    2. 'ussian' → logprob: -6.37899923324585
    3. 'u' → logprob: -6.62899923324585
    4. 'ussia' → logprob: -7.87899923324585
    5. 'usse' → logprob: -8.503999710083008
    6. 'ussi' → logprob: -8.878999710083008
    7. 'ussa' → logprob: -9.753999710083008
    8. 'us' → logprob: -9.753999710083008
    9. 'uß' → logprob: -10.128999710083008
    10. 'ussion' → logprob: -10.628999710083008

Token 82: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.7179456353187561
    2. ' lin' → logprob: -2.2179455757141113
    3. '.' → logprob: -2.5929455757141113
    4. ' ,' → logprob: -2.9679455757141113
    5. '   ' → logprob: -3.0929455757141113
    6. ' dans' → logprob: -3.2179455757141113
    7. ' en' → logprob: -3.4679455757141113
    8. ' pour' → logprob: -3.7179455757141113
    9. ',' → logprob: -3.8429455757141113
    10. ' à' → logprob: -3.9679455757141113

Token 83: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4154013395309448
    2. ' l' → logprob: -2.0404014587402344
    3. ' les' → logprob: -2.1654014587402344
    4. ' la' → logprob: -3.5404014587402344
    5. '<|end|>' → logprob: -3.9154014587402344
    6. ' le' → logprob: -4.665401458740234
    7. ' a' → logprob: -5.040401458740234
    8. ' des' → logprob: -5.040401458740234
    9. '```' → logprob: -5.415401458740234
    10. ' the' → logprob: -5.540401458740234

Token 84: ' XOR' (ID: 147209)
  Prédit: ' vect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vect' → logprob: -1.2551891803741455
    2. 'a' → logprob: -2.0051891803741455
    3. ' tableau' → logprob: -2.0051891803741455
    4. ' bit' → logprob: -2.7551891803741455
    5. ' a' → logprob: -2.8801891803741455
    6. ' code' → logprob: -3.0051891803741455
    7. 's' → logprob: -3.2551891803741455
    8. ' ' → logprob: -3.2551891803741455
    9. ' espace' → logprob: -3.7551891803741455
    10. ' XOR' → logprob: -3.8801891803741455

Token 85: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7696422338485718
    2. '.' → logprob: -1.0196422338485718
    3. ' ' → logprob: -2.5196423530578613
    4. ',' → logprob: -3.2696423530578613
    5. ' ,' → logprob: -4.644642353057861
    6. ' des' → logprob: -4.644642353057861
    7. ' de' → logprob: -5.269642353057861
    8. ':' → logprob: -5.269642353057861
    9. '    ' → logprob: -5.644642353057861
    10. ' .' → logprob: -6.019642353057861

Token 86: 'inaire' (ID: 41465)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8982646465301514
    2. 'ase' → logprob: -0.8982646465301514
    3. 'i' → logprob: -3.3982646465301514
    4. 'asis' → logprob: -3.5232646465301514
    5. '-' → logprob: -3.7732646465301514
    6. 'it' → logprob: -4.0232648849487305
    7. '```' → logprob: -4.5232648849487305
    8. 'u' → logprob: -4.7732648849487305
    9. 'e' → logprob: -5.2732648849487305
    10. '_' → logprob: -5.2732648849487305

Token 87: ' puis' (ID: 18766)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7079146504402161
    2. '   ' → logprob: -0.8329146504402161
    3. ',' → logprob: -3.0829145908355713
    4. ' ' → logprob: -4.08291482925415
    5. '    ' → logprob: -6.08291482925415
    6. '  ' → logprob: -6.95791482925415
    7. ' ,' → logprob: -7.20791482925415
    8. ':' → logprob: -7.58291482925415
    9. ' .' → logprob: -7.58291482925415
    10. ' (' → logprob: -7.83291482925415

Token 88: ' forme' (ID: 27450)
  Prédit: ' ajoute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ajoute' → logprob: -0.9689626097679138
    2. ' en' → logprob: -1.3439626693725586
    3. ' retourne' → logprob: -2.4689626693725586
    4. ' ' → logprob: -3.9689626693725586
    5. ' continue' → logprob: -4.593962669372559
    6. ' ajouter' → logprob: -4.656462669372559
    7. ' les' → logprob: -4.718962669372559
    8. ' complète' → logprob: -4.781462669372559
    9. ' l' → logprob: -4.781462669372559
    10. 'aj' → logprob: -4.906462669372559

Token 89: ' deux' (ID: 10301)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7042665481567383
    2. ' une' → logprob: -1.2042665481567383
    3. ' un' → logprob: -2.0792665481567383
    4. ' a' → logprob: -3.8292665481567383
    5. ' l' → logprob: -4.329266548156738
    6. ' le' → logprob: -4.704266548156738
    7. 'une' → logprob: -4.829266548156738
    8. 'a' → logprob: -4.954266548156738
    9. ' ' → logprob: -4.954266548156738
    10. ' les' → logprob: -5.579266548156738

Token 90: ' groupes' (ID: 72206)
  Prédit: ' sous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.657325804233551
    2. ' listes' → logprob: -2.2823257446289062
    3. ' subsets' → logprob: -2.7823257446289062
    4. 's' → logprob: -3.0323257446289062
    5. ' ensembles' → logprob: -3.1573257446289062
    6. ' parts' → logprob: -3.4073257446289062
    7. ' bases' → logprob: -3.5323257446289062
    8. ' groupes' → logprob: -3.5323257446289062
    9. ' espaces' → logprob: -3.6573257446289062
    10. '_' → logprob: -4.407325744628906

Token 91: ' dont' (ID: 11562)
  Prédit: ' distinct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distinct' → logprob: -0.2863444685935974
    2. ' de' → logprob: -2.411344528198242
    3. 'distinct' → logprob: -2.536344528198242
    4. ',' → logprob: -3.536344528198242
    5. ' supplémentaires' → logprob: -4.786344528198242
    6. '.' → logprob: -4.786344528198242
    7. ':' → logprob: -5.536344528198242
    8. ' pour' → logprob: -5.661344528198242
    9. ' ,' → logprob: -5.911344528198242
    10. 'de' → logprob: -5.911344528198242

Token 92: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8089008927345276
    2. ' les' → logprob: -1.4339008331298828
    3. ' l' → logprob: -2.558900833129883
    4. 'les' → logprob: -2.683900833129883
    5. ' le' → logprob: -2.933900833129883
    6. 'l' → logprob: -3.683900833129883
    7. 'le' → logprob: -3.683900833129883
    8. 'la' → logprob: -3.683900833129883
    9. 's' → logprob: -4.933900833129883
    10. ' chaque' → logprob: -5.058900833129883

Token 93: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.34924307465553284
    2. ' partition' → logprob: -1.8492430448532104
    3. ' base' → logprob: -3.9742431640625
    4. ' séparation' → logprob: -3.9742431640625
    5. ' valeur' → logprob: -4.0992431640625
    6. 's' → logprob: -4.2242431640625
    7. ' différence' → logprob: -4.3492431640625
    8. ' separation' → logprob: -4.7242431640625
    9. ' difference' → logprob: -5.4742431640625
    10. ' s' → logprob: -5.5992431640625

Token 94: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.11352958530187607
    2. ' maximale' → logprob: -2.613529682159424
    3. ' optimale' → logprob: -4.738529682159424
    4. ' de' → logprob: -4.988529682159424
    5. ' est' → logprob: -5.238529682159424
    6. ' totale' → logprob: -5.488529682159424
    7. 'max' → logprob: -6.113529682159424
    8. 'des' → logprob: -6.488529682159424
    9. '<|end|>' → logprob: -6.738529682159424
    10. ' max' → logprob: -7.613529682159424

Token 95: ' XOR' (ID: 147209)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6902521848678589
    2. ' éléments' → logprob: -1.9402521848678589
    3. ' elements' → logprob: -2.0652523040771484
    4. 'élé' → logprob: -2.1902523040771484
    5. ' valeurs' → logprob: -2.9402523040771484
    6. ' XOR' → logprob: -2.9402523040771484
    7. ' bit' → logprob: -3.0652523040771484
    8. ' deux' → logprob: -3.8777523040771484
    9. ' xor' → logprob: -4.002752304077148
    10. ' bits' → logprob: -4.127752304077148

Token 96: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8555873036384583
    2. ' des' → logprob: -0.8555873036384583
    3. ' est' → logprob: -2.6055872440338135
    4. ' s' → logprob: -3.1055872440338135
    5. ' ' → logprob: -5.105587482452393
    6. ' de' → logprob: -5.105587482452393
    7. ' tot' → logprob: -5.480587482452393
    8. ' maximale' → logprob: -6.105587482452393
    9. 'des' → logprob: -6.605587482452393
    10. 'tot' → logprob: -6.980587482452393

Token 97: ' la' (ID: 557)
  Prédit: ' maximale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.31714358925819397
    2. ' maxim' → logprob: -1.4421435594558716
    3. 'max' → logprob: -3.567143678665161
    4. ' max' → logprob: -6.067143440246582
    5. ' maximal' → logprob: -6.192143440246582
    6. '   ' → logprob: -7.442143440246582
    7. ' maximum' → logprob: -7.567143440246582
    8. ' optimale' → logprob: -7.692143440246582
    9. ' au' → logprob: -7.692143440246582
    10. ' la' → logprob: -8.442143440246582

Token 98: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.8088108897209167
    2. ' maximum' → logprob: -1.6838109493255615
    3. ' ' → logprob: -1.8088109493255615
    4. ' maximale' → logprob: -2.6838109493255615
    5. 's' → logprob: -3.6838109493255615
    6. ' max' → logprob: -3.9338109493255615
    7. ' maximal' → logprob: -4.058810710906982
    8. ' \' → logprob: -4.683810710906982
    9. '\n' → logprob: -4.683810710906982
    10. ' somme' → logprob: -4.933810710906982

Token 99: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -1.0266096591949463
    2. 'grand' → logprob: -1.6516096591949463
    3. ' grande' → logprob: -1.7766096591949463
    4. 'é' → logprob: -1.9016096591949463
    5. ' élevée' → logprob: -2.5266096591949463
    6. ' grand' → logprob: -3.7766096591949463
    7. 'import' → logprob: -5.026609420776367
    8. ' maximale' → logprob: -5.276609420776367
    9. 'max' → logprob: -5.526609420776367
    10. '```' → logprob: -5.776609420776367

Token 100: ' possible' (ID: 4149)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7034359574317932
    2. ' possible' → logprob: -0.9534359574317932
    3. '.' → logprob: -3.4534358978271484
    4. '_' → logprob: -3.7034358978271484
    5. 'e' → logprob: -4.328435897827148
    6. '   ' → logprob: -4.453435897827148
    7. '_possible' → logprob: -4.703435897827148
    8. ' _' → logprob: -4.953435897827148
    9. 'possible' → logprob: -5.328435897827148
    10. ' 
' → logprob: -5.828435897827148

Token 101: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.149993434548378
    2. '.' → logprob: -2.524993419647217
    3. ':' → logprob: -4.649993419647217
    4. ' :' → logprob: -4.774993419647217
    5. ' 
' → logprob: -5.149993419647217
    6. '    
' → logprob: -5.149993419647217
    7. '    ' → logprob: -5.149993419647217
    8. ',' → logprob: -5.274993419647217
    9. ' ' → logprob: -5.399993419647217
    10. '
' → logprob: -6.524993419647217

Token 102: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21420587599277496
    2. ')' → logprob: -2.2142059803009033
    3. '"' → logprob: -3.3392059803009033
    4. '
' → logprob: -4.839205741882324
    5. '```' → logprob: -5.089205741882324
    6. ' 
' → logprob: -5.214205741882324
    7. '"""
' → logprob: -5.339205741882324
    8. ')
' → logprob: -5.339205741882324
    9. '"""' → logprob: -5.339205741882324
    10. ':' → logprob: -5.839205741882324

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01841915212571621
    2. '    ' → logprob: -4.39341926574707
    3. '"""' → logprob: -6.89341926574707
    4. '
' → logprob: -7.14341926574707
    5. ' """' → logprob: -7.14341926574707
    6. ')' → logprob: -7.51841926574707
    7. ' 
' → logprob: -7.76841926574707
    8. '    
' → logprob: -7.76841926574707
    9. ' ' → logprob: -8.01841926574707
    10. '     
' → logprob: -8.26841926574707

Token 104: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03365376591682434
    2. '"""' → logprob: -3.783653736114502
    3. '"""
' → logprob: -5.783653736114502
    4. '    ' → logprob: -6.408653736114502
    5. '```' → logprob: -6.783653736114502
    6. '
' → logprob: -7.158653736114502
    7. ' """' → logprob: -7.158653736114502
    8. '"' → logprob: -7.283653736114502
    9. ' """
' → logprob: -7.658653736114502
    10. '    
' → logprob: -8.03365421295166

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4259510338306427
    2. ' :' → logprob: -1.3009510040283203
    3. '   ' → logprob: -2.6759510040283203
    4. '):' → logprob: -6.80095100402832
    5. ':
' → logprob: -6.92595100402832
    6. 'a' → logprob: -7.30095100402832
    7. ' :
' → logprob: -7.67595100402832
    8. 'def' → logprob: -7.80095100402832
    9. '):
' → logprob: -7.92595100402832
    10. ',' → logprob: -8.17595100402832

Token 106: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6672770977020264
    2. ' a' → logprob: -1.1672770977020264
    3. '   ' → logprob: -1.7922770977020264
    4. '```' → logprob: -5.6672773361206055
    5. '    ' → logprob: -5.7922773361206055
    6. ')' → logprob: -7.0422773361206055
    7. 'b' → logprob: -8.542277336120605
    8. ' ' → logprob: -8.667277336120605
    9. ' 
' → logprob: -8.667277336120605
    10. ' )' → logprob: -8.792277336120605

Token 107: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.37963950634002686
    2. ' a' → logprob: -1.6296395063400269
    3. '   ' → logprob: -2.1296396255493164
    4. '    ' → logprob: -8.254639625549316
    5. 'n' → logprob: -8.254639625549316
    6. '       ' → logprob: -8.629639625549316
    7. '```' → logprob: -9.754639625549316
    8. 'self' → logprob: -10.629639625549316
    9. '`' → logprob: -10.754639625549316
    10. 'input' → logprob: -10.879639625549316

Token 108: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10168977826833725
    2. '):' → logprob: -2.7266898155212402
    3. ' :' → logprob: -4.35168981552124
    4. '):
' → logprob: -4.47668981552124
    5. '   ' → logprob: -5.35168981552124
    6. ')' → logprob: -6.85168981552124
    7. ',' → logprob: -7.22668981552124
    8. ' ):' → logprob: -8.601689338684082
    9. '[' → logprob: -9.976689338684082
    10. ':
' → logprob: -10.351689338684082

Token 109: 'list' (ID: 2641)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.15438681840896606
    2. 'list' → logprob: -2.4043867588043213
    3. ' List' → logprob: -3.1543867588043213
    4. ' list' → logprob: -4.6543869972229
    5. '   ' → logprob: -7.5293869972229
    6. '[List' → logprob: -12.029386520385742
    7. ')' → logprob: -12.404386520385742
    8. '_list' → logprob: -13.529386520385742
    9. 'Liste' → logprob: -14.029386520385742
    10. ':list' → logprob: -14.279386520385742

Token 110: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.09538645297288895
    2. '):' → logprob: -2.595386505126953
    3. '):
' → logprob: -4.720386505126953
    4. ')' → logprob: -5.595386505126953
    5. ' of' → logprob: -6.095386505126953
    6. '<int' → logprob: -7.095386505126953
    7. '   ' → logprob: -8.970386505126953
    8. ' de' → logprob: -8.970386505126953
    9. '[' → logprob: -9.470386505126953
    10. ',' → logprob: -9.845386505126953

Token 111: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0788925439119339
    2. ' int' → logprob: -2.578892469406128
    3. '   ' → logprob: -13.828892707824707
    4. '[int' → logprob: -13.953892707824707
    5. 'ints' → logprob: -14.828892707824707
    6. ' integers' → logprob: -15.828892707824707
    7. ' ints' → logprob: -16.20389175415039
    8. '<int' → logprob: -16.32889175415039
    9. '	int' → logprob: -16.32889175415039
    10. '(int' → logprob: -16.70389175415039

Token 112: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0767531618475914
    2. '):
' → logprob: -3.3267531394958496
    3. ')' → logprob: -3.8267531394958496
    4. '   ' → logprob: -4.32675313949585
    5. ' ):' → logprob: -6.45175313949585
    6. '[int' → logprob: -8.076753616333008
    7. '    ' → logprob: -8.576753616333008
    8. ']):' → logprob: -8.576753616333008
    9. ' )' → logprob: -9.076753616333008
    10. ' ' → logprob: -9.076753616333008

Token 113: ' Liste' (ID: 61030)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9872716665267944
    2. '   ' → logprob: -1.4872716665267944
    3. '<|end|>' → logprob: -1.8622716665267944
    4. '    ' → logprob: -2.112271785736084
    5. ')' → logprob: -3.237271785736084
    6. '[' → logprob: -3.862271785736084
    7. '       ' → logprob: -4.612271785736084
    8. ' The' → logprob: -4.862271785736084
    9. ' [' → logprob: -5.362271785736084
    10. ' a' → logprob: -5.737271785736084

Token 114: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5623834729194641
    2. ' d' → logprob: -1.9373834133148193
    3. '[int' → logprob: -2.0623834133148193
    4. ' de' → logprob: -2.1873834133148193
    5. ' of' → logprob: -3.5623834133148193
    6. ' ' → logprob: -5.312383651733398
    7. ')' → logprob: -5.562383651733398
    8. '[' → logprob: -5.812383651733398
    9. '   ' → logprob: -5.937383651733398
    10. ' complète' → logprob: -6.437383651733398

Token 115: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.44933074712753296
    2. ' ent' → logprob: -1.5743308067321777
    3. 'int' → logprob: -2.6993308067321777
    4. 'n' → logprob: -3.4493308067321777
    5. '   ' → logprob: -4.074330806732178
    6. 'élé' → logprob: -4.324330806732178
    7. ' nombres' → logprob: -4.324330806732178
    8. ' int' → logprob: -4.949330806732178
    9. ' éléments' → logprob: -6.574330806732178
    10. 'val' → logprob: -6.949330806732178

Token 116: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.001424045069143176
    2. '   ' → logprob: -7.1264238357543945
    3. 'ières' → logprob: -7.6264238357543945
    4. 'ier' → logprob: -9.876423835754395
    5. 'i' → logprob: -9.876423835754395
    6. '       ' → logprob: -11.376423835754395
    7. '```' → logprob: -12.501423835754395
    8. ' ' → logprob: -12.751423835754395
    9. '  ' → logprob: -12.751423835754395
    10. 'ière' → logprob: -12.876423835754395

Token 117: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38703879714012146
    2. ')' → logprob: -1.8870388269424438
    3. ' )' → logprob: -1.8870388269424438
    4. '):' → logprob: -5.512038707733154
    5. ' à' → logprob: -6.387038707733154
    6. 's' → logprob: -6.512038707733154
    7. ' ):' → logprob: -6.762038707733154
    8. ' ):
' → logprob: -6.762038707733154
    9. '    ' → logprob: -6.887038707733154
    10. ' ' → logprob: -6.887038707733154

Token 118: ' lesquels' (ID: 106476)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060499176383018494
    2. ' la' → logprob: -2.9354991912841797
    3. ' une' → logprob: -6.56049919128418
    4. ' ' → logprob: -6.93549919128418
    5. '  ' → logprob: -7.18549919128418
    6. 'la' → logprob: -7.56049919128418
    7. 'a' → logprob: -7.81049919128418
    8. ' lesquels' → logprob: -8.18549919128418
    9. ' les' → logprob: -8.31049919128418
    10. '    ' → logprob: -8.31049919128418

Token 119: ' appliquer' (ID: 172872)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3298196494579315
    2. ' effectuer' → logprob: -1.704819679260254
    3. ' on' → logprob: -2.829819679260254
    4. ' calcul' → logprob: -4.829819679260254
    5. ' la' → logprob: -5.204819679260254
    6. ' continuer' → logprob: -5.454819679260254
    7. '    ' → logprob: -5.454819679260254
    8. ' construire' → logprob: -6.079819679260254
    9. ' faire' → logprob: -6.079819679260254
    10. ' réaliser' → logprob: -6.454819679260254

Token 120: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3453059196472168
    2. '   ' → logprob: -2.095305919647217
    3. ' l' → logprob: -2.095305919647217
    4. 'l' → logprob: -4.220305919647217
    5. ' le' → logprob: -4.470305919647217
    6. 'la' → logprob: -4.845305919647217
    7. 'le' → logprob: -5.595305919647217
    8. ' ' → logprob: -5.720305919647217
    9. '    ' → logprob: -6.220305919647217
    10. ' les' → logprob: -7.595305919647217

Token 121: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1289892196655273
    2. ' partition' → logprob: -2.1289892196655273
    3. ' l' → logprob: -2.2539892196655273
    4. ' le' → logprob: -2.5039892196655273
    5. '   ' → logprob: -2.6289892196655273
    6. ' la' → logprob: -2.6289892196655273
    7. ''' → logprob: -3.0039892196655273
    8. ' e' → logprob: -3.8789892196655273
    9. ' xor' → logprob: -3.8789892196655273
    10. ''op' → logprob: -4.003989219665527

Token 122: 'alg' (ID: 15258)
  Prédit: ' partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' partition' → logprob: -1.4601521492004395
    2. ' xor' → logprob: -1.5851521492004395
    3. 'partition' → logprob: -2.0851521492004395
    4. ' XOR' → logprob: -2.3351521492004395
    5. '   ' → logprob: -2.4601521492004395
    6. 'xor' → logprob: -2.4601521492004395
    7. ' operation' → logprob: -3.0851521492004395
    8. ' base' → logprob: -3.7101521492004395
    9. 'base' → logprob: -4.5851521492004395
    10. 'max' → logprob: -4.8351521492004395

Token 123: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.5066639184951782
    2. 'orithm' → logprob: -1.7566639184951782
    3. '   ' → logprob: -1.8816639184951782
    4. '       ' → logprob: -3.7566637992858887
    5. 'orithms' → logprob: -3.8816637992858887
    6. 'ument' → logprob: -4.756663799285889
    7. ')' → logprob: -5.381663799285889
    8. ' XOR' → logprob: -6.006663799285889
    9. 'è' → logprob: -6.631663799285889
    10. 'or' → logprob: -6.756663799285889

Token 124: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0007213685312308371
    2. 'm' → logprob: -8.250720977783203
    3. '   ' → logprob: -8.375720977783203
    4. 'e' → logprob: -9.125720977783203
    5. 'ème' → logprob: -10.125720977783203
    6. 'def' → logprob: -10.750720977783203
    7. 'mes' → logprob: -11.125720977783203
    8. '       ' → logprob: -11.375720977783203
    9. '```' → logprob: -12.375720977783203
    10. 'es' → logprob: -12.500720977783203

Token 125: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02292071469128132
    2. '):
' → logprob: -4.147920608520508
    3. '):' → logprob: -5.272920608520508
    4. ')' → logprob: -6.897920608520508
    5. '```' → logprob: -8.272920608520508
    6. ')
' → logprob: -8.772920608520508
    7. '
' → logprob: -9.522920608520508
    8. '    
' → logprob: -9.647920608520508
    9. '"""
' → logprob: -10.397920608520508
    10. '       ' → logprob: -10.647920608520508

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008187107741832733
    2. '"""
' → logprob: -5.383187294006348
    3. '"""' → logprob: -6.133187294006348
    4. ')' → logprob: -7.508187294006348
    5. '```' → logprob: -8.383187294006348
    6. '    
' → logprob: -8.633187294006348
    7. '
' → logprob: -8.758187294006348
    8. ')
' → logprob: -8.883187294006348
    9. 'def' → logprob: -10.383187294006348
    10. '       ' → logprob: -10.883187294006348

Token 127: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05954497307538986
    2. '"""
' → logprob: -3.0595450401306152
    3. '"""' → logprob: -5.309545040130615
    4. '
' → logprob: -6.434545040130615
    5. '```' → logprob: -6.684545040130615
    6. ')' → logprob: -6.809545040130615
    7. '    
' → logprob: -7.059545040130615
    8. ')
' → logprob: -7.434545040130615
    9. 'def' → logprob: -8.809544563293457
    10. 'Returns' (adapté à ' Returns') → logprob: -9.559544563293457

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8805838227272034
    2. '   ' → logprob: -1.0055837631225586
    3. ':
' → logprob: -1.6305837631225586
    4. ' :' → logprob: -4.380583763122559
    5. ' int' → logprob: -5.505583763122559
    6. 'int' → logprob: -5.755583763122559
    7. ':int' → logprob: -6.630583763122559
    8. '```' → logprob: -7.255583763122559
    9. '(int' → logprob: -7.630583763122559
    10. '    ' → logprob: -7.880583763122559

Token 129: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.32869985699653625
    2. 'int' → logprob: -1.8286998271942139
    3. '       ' → logprob: -2.703699827194214
    4. '   ' → logprob: -2.953699827194214
    5. '    ' → logprob: -7.953700065612793
    6. '        ' → logprob: -10.703700065612793
    7. '(int' → logprob: -10.953700065612793
    8. '      ' → logprob: -12.203700065612793
    9. '
' → logprob: -12.328700065612793
    10. '```' → logprob: -12.703700065612793

Token 130: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.2525608241558075
    2. ' int' → logprob: -1.5025608539581299
    3. '   ' → logprob: -7.377560615539551
    4. '       ' → logprob: -12.37756061553955
    5. '
' → logprob: -13.50256061553955
    6. '(int' → logprob: -15.00256061553955
    7. '```' → logprob: -15.75256061553955
    8. '  ' → logprob: -16.377561569213867
    9. '    ' → logprob: -16.627561569213867
    10. '	int' → logprob: -16.877561569213867

Token 131: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011968977050855756
    2. '   ' → logprob: -6.87619686126709
    3. ':
' → logprob: -9.62619686126709
    4. '
' → logprob: -11.00119686126709
    5. '```' → logprob: -11.12619686126709
    6. ' :' → logprob: -11.25119686126709
    7. ':return' → logprob: -11.25119686126709
    8. '       ' → logprob: -11.25119686126709
    9. 'The' → logprob: -12.62619686126709
    10. '<|end|>' → logprob: -12.62619686126709

Token 132: ' Le' (ID: 2018)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.48051929473876953
    2. '   ' → logprob: -1.2305192947387695
    3. 'La' → logprob: -3.1055192947387695
    4. ' Le' → logprob: -4.1055192947387695
    5. ' max' → logprob: -4.3555192947387695
    6. ' la' → logprob: -4.4805192947387695
    7. 'Le' → logprob: -6.8555192947387695
    8. 'max' → logprob: -7.2305192947387695
    9. '    ' → logprob: -7.3555192947387695
    10. ' maximale' → logprob: -8.35551929473877

Token 133: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.7838415503501892
    2. ' résultat' → logprob: -1.283841609954834
    3. '   ' → logprob: -2.533841609954834
    4. 'e' → logprob: -3.533841609954834
    5. ' maximal' → logprob: -3.533841609954834
    6. 'maximum' → logprob: -4.033841609954834
    7. ' max' → logprob: -4.158841609954834
    8. ' maximale' → logprob: -4.158841609954834
    9. 'xor' → logprob: -4.408841609954834
    10. 'max' → logprob: -4.408841609954834

Token 134: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8507809042930603
    2. ' possible' → logprob: -1.100780963897705
    3. ' xor' → logprob: -2.225780963897705
    4. ' de' → logprob: -2.600780963897705
    5. ' du' → logprob: -4.600780963897705
    6. '_x' → logprob: -4.975780963897705
    7. '_' → logprob: -4.975780963897705
    8. ' XOR' → logprob: -5.100780963897705
    9. 'possible' → logprob: -5.225780963897705
    10. '   ' → logprob: -5.475780963897705

Token 135: ' (' (ID: 350)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.05456356331706047
    2. 'la' → logprob: -3.304563522338867
    3. 'a' → logprob: -4.929563522338867
    4. 's' → logprob: -6.304563522338867
    5. 'l' → logprob: -6.429563522338867
    6. ' xor' → logprob: -6.429563522338867
    7. ' ' → logprob: -6.804563522338867
    8. ' l' → logprob: -6.804563522338867
    9. ' a' → logprob: -7.679563522338867
    10. ' XOR' → logprob: -8.054563522338867

Token 136: 'X' (ID: 55)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.4324913024902344
    2. 'blu' → logprob: -2.0574913024902344
    3. ' xor' → logprob: -3.0574913024902344
    4. 'x' → logprob: -3.5574913024902344
    5. 'sum' → logprob: -3.5574913024902344
    6. 'res' → logprob: -4.557491302490234
    7. 'max' → logprob: -4.682491302490234
    8. 'part' → logprob: -4.932491302490234
    9. '(x' → logprob: -4.932491302490234
    10. 'la' → logprob: -5.057491302490234

Token 137: 'OR' (ID: 1301)
  Prédit: 'OR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.06530556082725525
    2. 'O' → logprob: -3.065305471420288
    3. '_' → logprob: -4.190305709838867
    4. '^' → logprob: -6.815305709838867
    5. '   ' → logprob: -9.565305709838867
    6. ' O' → logprob: -10.065305709838867
    7. ')' → logprob: -10.190305709838867
    8. ' ' → logprob: -10.940305709838867
    9. 'or' → logprob: -10.940305709838867
    10. '_{' → logprob: -10.940305709838867

Token 138: '(bl' (ID: 110427)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.19451074302196503
    2. ')' → logprob: -3.0695106983184814
    3. ' possible' → logprob: -3.4445106983184814
    4. ' de' → logprob: -3.6945106983184814
    5. 'des' → logprob: -3.8195106983184814
    6. '_des' → logprob: -4.8195109367370605
    7. 's' → logprob: -5.1945109367370605
    8. '_' → logprob: -5.1945109367370605
    9. 'de' → logprob: -5.4445109367370605
    10. ' )' → logprob: -5.5695109367370605

Token 139: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.007960774004459381
    2. 'ue' → logprob: -5.757960796356201
    3. '_u' → logprob: -6.257960796356201
    4. 'U' → logprob: -7.507960796356201
    5. 'e' → logprob: -7.632960796356201
    6. '(u' → logprob: -8.007960319519043
    7. '[u' → logprob: -8.257960319519043
    8. ')' → logprob: -9.132960319519043
    9. '^' → logprob: -9.257960319519043
    10. 'a' → logprob: -9.570460319519043

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3654504716396332
    2. '(a' → logprob: -2.365450382232666
    3. '(bl' → logprob: -2.740450382232666
    4. '_' → logprob: -3.490450382232666
    5. '))' → logprob: -3.615450382232666
    6. ' ^' → logprob: -3.615450382232666
    7. '^' → logprob: -4.365450382232666
    8. ' )' → logprob: -4.615450382232666
    9. 's' → logprob: -5.240450382232666
    10. 'a' → logprob: -5.365450382232666

Token 141: ' +' (ID: 659)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.16149534285068512
    2. ')' → logprob: -2.6614954471588135
    3. '^' → logprob: -2.6614954471588135
    4. ' +' → logprob: -5.786495208740234
    5. '   ' → logprob: -6.161495208740234
    6. '+' → logprob: -6.411495208740234
    7. ' ' → logprob: -6.911495208740234
    8. ',' → logprob: -7.661495208740234
    9. ' )' → logprob: -7.911495208740234
    10. ' xor' → logprob: -9.286495208740234

Token 142: ' XOR' (ID: 147209)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.1719796061515808
    2. ' XOR' → logprob: -1.9219796657562256
    3. 'xor' → logprob: -4.9219794273376465
    4. ' xor' → logprob: -6.1719794273376465
    5. ' X' → logprob: -7.1719794273376465
    6. ' ' → logprob: -7.7969794273376465
    7. '   ' → logprob: -8.109479904174805
    8. 'max' → logprob: -8.984479904174805
    9. '(X' → logprob: -9.671979904174805
    10. '  ' → logprob: -9.796979904174805

Token 143: '(rest' (ID: 117922)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.627471387386322
    2. '(rest' → logprob: -2.127471446990967
    3. '(b' → logprob: -2.252471446990967
    4. '(red' → logprob: -3.002471446990967
    5. '(no' → logprob: -3.252471446990967
    6. '(bl' → logprob: -3.627471446990967
    7. '(a' → logprob: -4.127471446990967
    8. '(other' → logprob: -4.377471446990967
    9. '(des' → logprob: -4.627471446990967
    10. '(n' → logprob: -4.752471446990967

Token 144: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.054479800164699554
    2. ')' → logprob: -3.3044798374176025
    3. 'e' → logprob: -4.679479598999023
    4. '_of' → logprob: -6.179479598999023
    5. 'a' → logprob: -6.554479598999023
    6. 'ant' → logprob: -6.679479598999023
    7. 'of' → logprob: -7.679479598999023
    8. '))
' → logprob: -7.804479598999023
    9. ''))' → logprob: -8.554479598999023
    10. ')))' → logprob: -8.929479598999023

Token 145: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16181987524032593
    2. '
' → logprob: -3.2868199348449707
    3. 'def' → logprob: -3.6618199348449707
    4. '       ' → logprob: -3.7868199348449707
    5. ' où' → logprob: -4.661819934844971
    6. '\' → logprob: -4.786819934844971
    7. '\n' → logprob: -4.911819934844971
    8. '    
' → logprob: -5.661819934844971
    9. '"""
' → logprob: -5.911819934844971
    10. '"\' → logprob: -6.036819934844971

Token 146: ' '' (ID: 461)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.49182549118995667
    2. ' blu' → logprob: -1.6168254613876343
    3. 'blu' → logprob: -1.9918254613876343
    4. 'rest' → logprob: -4.741825580596924
    5. 'bl' → logprob: -5.241825580596924
    6. ' xor' → logprob: -5.241825580596924
    7. ' bleu' → logprob: -5.241825580596924
    8. '`' → logprob: -5.241825580596924
    9. ' `' → logprob: -5.866825580596924
    10. '   ' → logprob: -5.866825580596924

Token 147: 'rest' (ID: 7134)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.052402619272470474
    2. ' blu' → logprob: -3.3024027347564697
    3. 'ble' → logprob: -5.427402496337891
    4. 'bl' → logprob: -6.052402496337891
    5. ' bleu' → logprob: -6.177402496337891
    6. 'rest' → logprob: -6.427402496337891
    7. 'len' → logprob: -6.677402496337891
    8. ' rest' → logprob: -7.177402496337891
    9. '   ' → logprob: -7.677402496337891
    10. ' ' → logprob: -8.80240249633789

Token 148: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4719066321849823
    2. '_' → logprob: -1.5969066619873047
    3. ''' → logprob: -2.8469066619873047
    4. ' )' → logprob: -3.8469066619873047
    5. ' =' → logprob: -3.9719066619873047
    6. '')' → logprob: -4.596906661987305
    7. '_des' → logprob: -4.846906661987305
    8. '_of' → logprob: -5.096906661987305
    9. '`' → logprob: -5.346906661987305
    10. '(a' → logprob: -5.471906661987305

Token 149: ' sont' (ID: 5242)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2723356783390045
    2. ' =' → logprob: -2.1473357677459717
    3. ' représente' → logprob: -3.5223357677459717
    4. ' correspond' → logprob: -3.6473357677459717
    5. ')' → logprob: -3.8973357677459717
    6. ' des' → logprob: -4.147335529327393
    7. '   ' → logprob: -4.522335529327393
    8. ' sont' → logprob: -5.272335529327393
    9. '=' → logprob: -6.147335529327393
    10. ' is' → logprob: -6.272335529327393

Token 150: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.020003942772746086
    2. 'a' → logprob: -4.770003795623779
    3. 'les' → logprob: -5.895003795623779
    4. ' ceux' → logprob: -5.895003795623779
    5. ' l' → logprob: -6.145003795623779
    6. ' a' → logprob: -6.645003795623779
    7. ' la' → logprob: -7.145003795623779
    8. ' ' → logprob: -7.645003795623779
    9. ' the' → logprob: -8.145004272460938
    10. ' des' → logprob: -8.270004272460938

Token 151: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.29213595390319824
    2. 'élé' → logprob: -1.4171359539031982
    3. ' elements' → logprob: -5.167136192321777
    4. 'a' → logprob: -6.792136192321777
    5. 'elements' → logprob: -6.917136192321777
    6. ' ' → logprob: -7.542136192321777
    7. ' a' → logprob: -7.792136192321777
    8. ' él' → logprob: -8.167136192321777
    9. ' autres' → logprob: -8.167136192321777
    10. 'é' → logprob: -8.167136192321777

Token 152: ' rest' (ID: 2867)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.082364559173584
    2. ' rest' → logprob: -1.957364559173584
    3. ' non' → logprob: -2.082364559173584
    4. '   ' → logprob: -2.332364559173584
    5. ' qui' → logprob: -2.457364559173584
    6. ' hors' → logprob: -2.707364559173584
    7. ' en' → logprob: -3.332364559173584
    8. 'non' → logprob: -3.707364559173584
    9. 'de' → logprob: -4.082364559173584
    10. 'rest' → logprob: -4.207364559173584

Token 153: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.009107892401516438
    2. 'ant' → logprob: -4.759108066558838
    3. '   ' → logprob: -8.13410758972168
    4. 'nants' → logprob: -10.00910758972168
    5. 'a' → logprob: -11.00910758972168
    6. 'it' → logprob: -11.13410758972168
    7. 'du' → logprob: -11.13410758972168
    8. '[' → logprob: -11.25910758972168
    9. '```' → logprob: -11.63410758972168
    10. ']' → logprob: -11.63410758972168

Token 154: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6062701344490051
    2. ')' → logprob: -0.9812701344490051
    3. ' de' → logprob: -2.9812700748443604
    4. ')
' → logprob: -4.6062703132629395
    5. ' )' → logprob: -4.7312703132629395
    6. 'de' → logprob: -5.6062703132629395
    7. 'def' → logprob: -6.8562703132629395
    8. ' du' → logprob: -6.8562703132629395
    9. '.' → logprob: -7.2312703132629395
    10. ').' → logprob: -7.3562703132629395

Token 155: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.355590581893921
    2. ' '' → logprob: -1.730590581893921
    3. ' leurs' → logprob: -1.855590581893921
    4. ' la' → logprob: -2.730590581893921
    5. ''' → logprob: -2.855590581893921
    6. 'a' → logprob: -2.855590581893921
    7. ' leur' → logprob: -3.105590581893921
    8. ' les' → logprob: -3.855590581893921
    9. 'blu' → logprob: -3.855590581893921
    10. ' a' → logprob: -4.1055908203125

Token 156: 'blu' (ID: 125889)
  Prédit: 'blu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.18790128827095032
    2. 'a' → logprob: -2.937901258468628
    3. ''' → logprob: -3.812901258468628
    4. ')' → logprob: -3.937901258468628
    5. 'bl' → logprob: -4.312901496887207
    6. ' blu' → logprob: -4.312901496887207
    7. '   ' → logprob: -5.062901496887207
    8. ' bleu' → logprob: -5.062901496887207
    9. ' a' → logprob: -5.187901496887207
    10. 'xor' → logprob: -5.437901496887207

Token 157: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39339593052864075
    2. ')'' → logprob: -1.2683959007263184
    3. '')' → logprob: -3.3933959007263184
    4. ''' → logprob: -5.143395900726318
    5. ' )' → logprob: -6.143395900726318
    6. ')`' → logprob: -6.643395900726318
    7. ')'
' → logprob: -7.893395900726318
    8. ' ')' → logprob: -9.143396377563477
    9. ')**' → logprob: -9.518396377563477
    10. ')',' → logprob: -9.518396377563477

Token 158: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1607283353805542
    2. ' est' → logprob: -2.4107284545898438
    3. '   ' → logprob: -3.9107284545898438
    4. ' sont' → logprob: -4.660728454589844
    5. ' =' → logprob: -4.785728454589844
    6. ' représente' → logprob: -5.285728454589844
    7. ' )' → logprob: -5.285728454589844
    8. ' (' → logprob: -6.160728454589844
    9. ' is' → logprob: -6.410728454589844
    10. '=' → logprob: -6.910728454589844

Token 159: ' base' (ID: 3611)
  Prédit: ' partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partition' → logprob: -0.20966753363609314
    2. 'partition' → logprob: -2.709667444229126
    3. ' base' → logprob: -3.834667444229126
    4. 's' → logprob: -4.084667682647705
    5. ' somme' → logprob: -4.084667682647705
    6. '   ' → logprob: -4.334667682647705
    7. ' liste' → logprob: -4.709667682647705
    8. ' partie' → logprob: -4.709667682647705
    9. ' sélection' → logprob: -4.834667682647705
    10. ' ' → logprob: -4.959667682647705

Token 160: ' constru' (ID: 14218)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10607431083917618
    2. ')' → logprob: -2.981074333190918
    3. '"""
' → logprob: -4.481074333190918
    4. ')
' → logprob: -4.856074333190918
    5. ' )' → logprob: -5.856074333190918
    6. '
' → logprob: -5.856074333190918
    7. '    ' → logprob: -5.981074333190918
    8. '    
' → logprob: -5.981074333190918
    9. '```' → logprob: -5.981074333190918
    10. '       ' → logprob: -6.106074333190918

Token 161: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.007521800696849823
    2. 'it' → logprob: -5.882521629333496
    3. 'e' → logprob: -6.382521629333496
    4. ' ite' → logprob: -7.132521629333496
    5. '   ' → logprob: -7.632521629333496
    6. 'ie' → logprob: -8.132521629333496
    7. 'its' → logprob: -8.257521629333496
    8. ' it' → logprob: -8.757521629333496
    9. 'ited' → logprob: -9.132521629333496
    10. '
' → logprob: -9.132521629333496

Token 162: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18110062181949615
    2. '):
' → logprob: -2.181100606918335
    3. ':
' → logprob: -3.806100606918335
    4. '.
' → logprob: -4.056100845336914
    5. '.' → logprob: -5.556100845336914
    6. ':' → logprob: -5.931100845336914
    7. '
' → logprob: -6.056100845336914
    8. '):' → logprob: -7.181100845336914
    9. '"""
' → logprob: -7.181100845336914
    10. '    
' → logprob: -7.556100845336914

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035086069256067276
    2. '"""
' → logprob: -6.253508567810059
    3. '"""' → logprob: -6.503508567810059
    4. ' """
' → logprob: -10.628508567810059
    5. '"' → logprob: -10.628508567810059
    6. '```' → logprob: -11.003508567810059
    7. ')' → logprob: -12.128508567810059
    8. ' """' → logprob: -12.253508567810059
    9. 'def' → logprob: -13.628508567810059
    10. '       ' → logprob: -13.878508567810059

Token 164: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17751391232013702
    2. '\n' → logprob: -2.302513837814331
    3. '
' → logprob: -3.802513837814331
    4. ':' → logprob: -4.30251407623291
    5. '    
' → logprob: -4.30251407623291
    6. '"""' → logprob: -5.55251407623291
    7. '```' → logprob: -6.42751407623291
    8. '  
' → logprob: -6.42751407623291
    9. ':
' → logprob: -6.67751407623291
    10. '"""
' → logprob: -6.80251407623291

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15615041553974152
    2. ' n' → logprob: -2.1561503410339355
    3. 'n' → logprob: -3.6561503410339355
    4. ' from' → logprob: -7.2811503410339355
    5. ' basis' → logprob: -7.7811503410339355
    6. ' import' → logprob: -8.281150817871094
    7. ' base' → logprob: -8.531150817871094
    8. ' if' → logprob: -8.531150817871094
    9. ' res' → logprob: -8.906150817871094
    10. ' def' → logprob: -9.031150817871094

Token 166: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.34589484333992004
    2. 'basis' → logprob: -2.4708948135375977
    3. 'base' → logprob: -2.5958948135375977
    4. 'blu' → logprob: -2.7208948135375977
    5. '   ' → logprob: -3.3458948135375977
    6. ' n' → logprob: -4.220894813537598
    7. 'bas' → logprob: -6.345894813537598
    8. 'b' → logprob: -6.345894813537598
    9. 'def' → logprob: -6.470894813537598
    10. 'xor' → logprob: -6.720894813537598

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019595595076680183
    2. '   ' → logprob: -6.876959323883057
    3. '=' → logprob: -7.001959323883057
    4. '    ' → logprob: -12.126959800720215
    5. ' ' → logprob: -12.126959800720215
    6. '=int' → logprob: -13.126959800720215
    7. '  ' → logprob: -13.251959800720215
    8. ',' → logprob: -14.251959800720215
    9. '=len' → logprob: -15.376959800720215
    10. ' ,' → logprob: -16.1269588470459

Token 168: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10022026300430298
    2. ' len' → logprob: -2.350220203399658
    3. '   ' → logprob: -11.225220680236816
    4. '(len' → logprob: -15.975220680236816
    5. '	len' → logprob: -17.1002197265625
    6. '[len' → logprob: -17.7252197265625
    7. '=len' → logprob: -17.7252197265625
    8. ' ' → logprob: -18.9752197265625
    9. '0' → logprob: -19.2252197265625
    10. '```' → logprob: -20.2252197265625

Token 169: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0021102898754179478
    2. '(' → logprob: -6.252110481262207
    3. 'a' → logprob: -8.627110481262207
    4. ' (' → logprob: -13.627110481262207
    5. '(n' → logprob: -14.502110481262207
    6. '(
' → logprob: -15.127110481262207
    7. ' a' → logprob: -15.752110481262207
    8. '(s' → logprob: -16.62710952758789
    9. 's' → logprob: -17.12710952758789
    10. '   ' → logprob: -17.37710952758789

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036418659146875143
    2. ')
' → logprob: -8.000364303588867
    3. '   ' → logprob: -11.000364303588867
    4. ' )' → logprob: -11.500364303588867
    5. ')
' → logprob: -15.000364303588867
    6. ')

' → logprob: -15.000364303588867
    7. ' ' → logprob: -15.250364303588867
    8. 'a' → logprob: -15.625364303588867
    9. ')a' → logprob: -15.750364303588867
    10. ')n' → logprob: -15.750364303588867

Token 171: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3830427825450897
    2. '   ' → logprob: -1.883042812347412
    3. '    
' → logprob: -1.883042812347412
    4. 'result' → logprob: -5.633042812347412
    5. '   
' → logprob: -5.883042812347412
    6. 'base' → logprob: -6.258042812347412
    7. '  
' → logprob: -6.383042812347412
    8. 'max' → logprob: -7.633042812347412
    9. 'res' → logprob: -7.883042812347412
    10. ' 
' → logprob: -7.883042812347412

Token 172: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7879424095153809
    2. 'base' → logprob: -1.5379424095153809
    3. 'blu' → logprob: -2.412942409515381
    4. 'basis' → logprob: -2.787942409515381
    5. 'max' → logprob: -3.162942409515381
    6. 'if' → logprob: -3.662942409515381
    7. 'res' → logprob: -3.912942409515381
    8. 'result' → logprob: -4.037942409515381
    9. '   ' → logprob: -4.037942409515381
    10. '    
' → logprob: -4.412942409515381

Token 173: ' Nombre' (ID: 70208)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.3190480470657349
    2. ' ' → logprob: -1.8190480470657349
    3. 'n' → logprob: -1.9440480470657349
    4. '0' → logprob: -2.0690479278564453
    5. ' max' → logprob: -2.0690479278564453
    6. 'max' → logprob: -2.9440479278564453
    7. 'len' → logprob: -3.4440479278564453
    8. ' len' → logprob: -3.4440479278564453
    9. '1' → logprob: -4.194047927856445
    10. 'a' → logprob: -4.819047927856445

Token 174: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0136001110076904
    2. '_de' → logprob: -1.2636001110076904
    3. ' de' → logprob: -2.1386001110076904
    4. '_total' → logprob: -2.8886001110076904
    5. 'de' → logprob: -3.2636001110076904
    6. '_max' → logprob: -3.7636001110076904
    7. ' =' → logprob: -3.7636001110076904
    8. '_des' → logprob: -4.1386003494262695
    9. '_' → logprob: -4.3886003494262695
    10. ' d' → logprob: -4.7636003494262695

Token 175: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4191882610321045
    2. ' éléments' → logprob: -1.5441882610321045
    3. 'e' → logprob: -1.6691882610321045
    4. ''é' → logprob: -2.2941882610321045
    5. 'élé' → logprob: -2.5441882610321045
    6. ''ent' → logprob: -3.6691882610321045
    7. ' '' → logprob: -3.6691882610321045
    8. 'é' → logprob: -3.7941882610321045
    9. 'u' → logprob: -3.9191882610321045
    10. 'a' → logprob: -4.419188499450684

Token 176: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.15349775552749634
    2. ''' → logprob: -2.0284976959228516
    3. 'é' → logprob: -5.653497695922852
    4. ''é' → logprob: -6.028497695922852
    5. ' éléments' → logprob: -6.903497695922852
    6. 'elements' → logprob: -7.028497695922852
    7. ''ent' → logprob: -7.278497695922852
    8. 'a' → logprob: -8.153497695922852
    9. 'él' → logprob: -8.278497695922852
    10. 'el' → logprob: -8.403497695922852

Token 177: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -4.36574100604048e-06
    2. 'ment' → logprob: -12.750004768371582
    3. 'nts' → logprob: -14.125004768371582
    4. 'm' → logprob: -15.000004768371582
    5. 'ents' → logprob: -15.375004768371582
    6. 'ements' → logprob: -17.000003814697266
    7. 'ts' → logprob: -17.375003814697266
    8. 'v' → logprob: -18.125003814697266
    9. 'me' → logprob: -18.625003814697266
    10. 'phants' → logprob: -18.750003814697266

Token 178: ' dans' (ID: 2671)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06760496646165848
    2. '    
' → logprob: -3.8176050186157227
    3. '   ' → logprob: -3.9426050186157227
    4. 'if' → logprob: -5.192605018615723
    5. 'max' → logprob: -5.442605018615723
    6. 'result' → logprob: -5.442605018615723
    7. '   
' → logprob: -6.567605018615723
    8. '  
' → logprob: -6.692605018615723
    9. 'blu' → logprob: -6.942605018615723
    10. ' if' → logprob: -7.067605018615723

Token 179: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06228449568152428
    2. ' a' → logprob: -2.812284469604492
    3. '   ' → logprob: -8.687284469604492
    4. ' la' → logprob: -9.312284469604492
    5. 'l' → logprob: -10.812284469604492
    6. 'la' → logprob: -10.937284469604492
    7. ' l' → logprob: -12.062284469604492
    8. ' ' → logprob: -12.187284469604492
    9. 'n' → logprob: -13.187284469604492
    10. ' the' → logprob: -13.312284469604492

Token 180: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010060039348900318
    2. ' a' → logprob: -4.635059833526611
    3. ' array' → logprob: -9.38506031036377
    4. 'array' → logprob: -9.51006031036377
    5. ' tableau' → logprob: -9.63506031036377
    6. '   ' → logprob: -11.13506031036377
    7. ' list' → logprob: -11.13506031036377
    8. 'table' → logprob: -11.38506031036377
    9. ' ' → logprob: -11.38506031036377
    10. 'list' → logprob: -11.63506031036377

Token 181: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12004570662975311
    2. '   ' → logprob: -2.7450456619262695
    3. '    
' → logprob: -3.3700456619262695
    4. 'result' → logprob: -5.3700456619262695
    5. 'res' → logprob: -6.6200456619262695
    6. 'max' → logprob: -6.6200456619262695
    7. 'blu' → logprob: -6.7450456619262695
    8. '
' → logprob: -7.1200456619262695
    9. '```' → logprob: -7.3700456619262695
    10. '  
' → logprob: -7.3700456619262695

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09298676997423172
    2. '
' → logprob: -2.967986822128296
    3. '    
' → logprob: -4.717986583709717
    4. 'base' → logprob: -4.842986583709717
    5. ' base' → logprob: -5.467986583709717
    6. 'blu' → logprob: -5.717986583709717
    7. 'basis' → logprob: -6.217986583709717
    8. 'max' → logprob: -6.717986583709717
    9. ' basis' → logprob: -7.092986583709717
    10. '```' → logprob: -7.217986583709717

Token 183: ' sums' (ID: 73121)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blu' → logprob: -1.197763442993164
    2. 'basis' → logprob: -1.697763442993164
    3. 'base' → logprob: -1.822763442993164
    4. '   ' → logprob: -2.197763442993164
    5. ' basis' → logprob: -2.822763442993164
    6. ' base' → logprob: -3.322763442993164
    7. ' blu' → logprob: -3.947763442993164
    8. 'max' → logprob: -4.197763442993164
    9. 'if' → logprob: -4.947763442993164
    10. ' if' → logprob: -4.947763442993164

Token 184: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21307402849197388
    2. ' =' → logprob: -1.713073968887329
    3. '=' → logprob: -5.963074207305908
    4. '_a' → logprob: -5.963074207305908
    5. '_x' → logprob: -6.213074207305908
    6. 'a' → logprob: -7.088074207305908
    7. '_=' → logprob: -7.088074207305908
    8. 's' → logprob: -7.338074207305908
    9. '_prefix' → logprob: -7.713074207305908
    10. '_s' → logprob: -7.963074207305908

Token 185: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27570176124572754
    2. '0' → logprob: -2.1507017612457275
    3. ' [' → logprob: -2.1507017612457275
    4. ' ' → logprob: -5.400701522827148
    5. '[a' → logprob: -6.150701522827148
    6. 'a' → logprob: -7.775701522827148
    7. '[]' → logprob: -7.775701522827148
    8. '   ' → logprob: -8.775701522827148
    9. ' []' → logprob: -9.400701522827148
    10. '{' → logprob: -9.525701522827148

Token 186: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.046299923211336136
    2. '0' → logprob: -3.421299934387207
    3. '[a' → logprob: -4.671299934387207
    4. 'a' → logprob: -6.171299934387207
    5. '[[' → logprob: -8.546299934387207
    6. '{' → logprob: -8.546299934387207
    7. 'sum' → logprob: -8.671299934387207
    8. '[]' → logprob: -8.921299934387207
    9. ' [' → logprob: -9.171299934387207
    10. '{}' → logprob: -9.921299934387207

Token 187: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08800645172595978
    2. '   ' → logprob: -2.8380064964294434
    3. '    
' → logprob: -4.713006496429443
    4. 'for' → logprob: -4.963006496429443
    5. ' 
' → logprob: -6.713006496429443
    6. '  
' → logprob: -6.963006496429443
    7. ' for' → logprob: -7.088006496429443
    8. 'a' → logprob: -7.338006496429443
    9. 'xor' → logprob: -7.338006496429443
    10. '^' → logprob: -7.588006496429443

Token 188: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.041898131370544434
    2. '^' → logprob: -4.166898250579834
    3. 'for' → logprob: -4.416898250579834
    4. 'xor' → logprob: -5.291898250579834
    5. ' ^' → logprob: -6.666898250579834
    6. 'a' → logprob: -6.791898250579834
    7. '   ' → logprob: -6.916898250579834
    8. '    
' → logprob: -7.041898250579834
    9. '=' → logprob: -7.041898250579834
    10. 'x' → logprob: -7.416898250579834

Token 189: ' S' (ID: 336)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7582145929336548
    2. ' ' → logprob: -0.7582145929336548
    3. 'a' → logprob: -4.008214473724365
    4. 'sum' → logprob: -4.633214473724365
    5. 's' → logprob: -4.883214473724365
    6. ' sums' → logprob: -5.258214473724365
    7. ' sum' → logprob: -5.633214473724365
    8. ' a' → logprob: -5.758214473724365
    9. 'xor' → logprob: -6.008214473724365
    10. ' xor' → logprob: -6.258214473724365

Token 190: 'era' (ID: 2060)
  Prédit: 'ums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.03697570785880089
    2. 'um' → logprob: -3.661975622177124
    3. 's' → logprob: -5.786975860595703
    4. '   ' → logprob: -6.286975860595703
    5. '_' → logprob: -6.786975860595703
    6. '=' → logprob: -6.786975860595703
    7. ' =' → logprob: -7.411975860595703
    8. 'omme' → logprob: -7.661975860595703
    9. '#' → logprob: -7.911975860595703
    10. 'e' → logprob: -8.286975860595703

Token 191: ' le' (ID: 505)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.6793502569198608
    2. 'ums' → logprob: -1.3043502569198608
    3. '0' → logprob: -2.5543503761291504
    4. '=' → logprob: -3.4293503761291504
    5. '   ' → logprob: -3.4293503761291504
    6. ' ' → logprob: -3.5543503761291504
    7. ' accum' → logprob: -4.92935037612915
    8. 'a' → logprob: -5.30435037612915
    9. ' =' → logprob: -5.42935037612915
    10. 'omme' → logprob: -5.80435037612915

Token 192: ' XOR' (ID: 147209)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5757013559341431
    2. ' max' → logprob: -2.3257012367248535
    3. ' maximum' → logprob: -2.4507012367248535
    4. ' result' → logprob: -2.8257012367248535
    5. 's' → logprob: -3.5757012367248535
    6. ' ' → logprob: -3.7007012367248535
    7. 'max' → logprob: -3.7007012367248535
    8. 'xor' → logprob: -3.9507012367248535
    9. ' total' → logprob: -4.0757012367248535
    10. ' xor' → logprob: -4.0757012367248535

Token 193: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1523391008377075
    2. ' de' → logprob: -1.5273391008377075
    3. ' total' → logprob: -2.402338981628418
    4. ' des' → logprob: -2.652338981628418
    5. '_total' → logprob: -3.277338981628418
    6. 'total' → logprob: -3.277338981628418
    7. ' of' → logprob: -3.277338981628418
    8. ' cumulative' → logprob: -3.527338981628418
    9. '_acc' → logprob: -3.902338981628418
    10. 's' → logprob: -4.277338981628418

Token 194: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21929490566253662
    2. ' for' → logprob: -3.219295024871826
    3. '_' → logprob: -3.344295024871826
    4. 'for' → logprob: -3.719295024871826
    5. ' =' → logprob: -3.844295024871826
    6. 'a' → logprob: -4.469295024871826
    7. ' ^' → logprob: -4.719295024871826
    8. '
' → logprob: -4.969295024871826
    9. ' ^=' → logprob: -4.969295024871826
    10. '    
' → logprob: -5.219295024871826

Token 195: ' tous' (ID: 10688)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07345674932003021
    2. ' a' → logprob: -2.6984567642211914
    3. ' tous' → logprob: -6.573456764221191
    4. ' all' → logprob: -6.823456764221191
    5. 'all' → logprob: -7.823456764221191
    6. '   ' → logprob: -8.073456764221191
    7. 'tout' → logprob: -8.948456764221191
    8. ' ' → logprob: -10.323456764221191
    9. 'l' → logprob: -10.448456764221191
    10. ' tout' → logprob: -10.698456764221191

Token 196: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3119829297065735
    2. ' a' → logprob: -1.5619828701019287
    3. ' elements' → logprob: -3.9369828701019287
    4. '   ' → logprob: -4.436983108520508
    5. '(a' → logprob: -4.811983108520508
    6. 'elements' → logprob: -5.061983108520508
    7. ' éléments' → logprob: -5.436983108520508
    8. 'élé' → logprob: -5.936983108520508
    9. ' les' → logprob: -6.061983108520508
    10. 's' → logprob: -7.936983108520508

Token 197: ' éléments' (ID: 57375)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2892514169216156
    2. ' a' → logprob: -2.2892513275146484
    3. ' elements' → logprob: -2.9142513275146484
    4. 'elements' → logprob: -3.1642513275146484
    5. ' éléments' → logprob: -3.2892513275146484
    6. 'élé' → logprob: -4.164251327514648
    7. '   ' → logprob: -9.039251327514648
    8. 'element' → logprob: -9.414251327514648
    9. 'elem' → logprob: -9.539251327514648
    10. ' ' → logprob: -9.664251327514648

Token 198: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028892219066619873
    2. '    
' → logprob: -4.2788920402526855
    3. 'a' → logprob: -5.2788920402526855
    4. '
' → logprob: -5.2788920402526855
    5. ' ' → logprob: -7.6538920402526855
    6. '<|end|>' → logprob: -7.6538920402526855
    7. '  ' → logprob: -8.153892517089844
    8. ' for' → logprob: -8.153892517089844
    9. ',' → logprob: -8.278892517089844
    10. 's' → logprob: -8.278892517089844

Token 199: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012514598667621613
    2. ' a' → logprob: -4.387514591217041
    3. ' ' → logprob: -12.7625150680542
    4. '   ' → logprob: -13.8875150680542
    5. '  ' → logprob: -15.3875150680542
    6. ' the' → logprob: -15.3875150680542
    7. '	a' → logprob: -15.6375150680542
    8. '
' → logprob: -15.7625150680542
    9. '_a' → logprob: -16.012514114379883
    10. '```' → logprob: -16.075014114379883

Token 200: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001269162748940289
    2. ' a' → logprob: -6.751269340515137
    3. 'array' → logprob: -10.376269340515137
    4. ' tableau' → logprob: -10.876269340515137
    5. 'table' → logprob: -11.501269340515137
    6. '   ' → logprob: -11.501269340515137
    7. 'liste' → logprob: -11.501269340515137
    8. ' array' → logprob: -12.126269340515137
    9. 's' → logprob: -12.376269340515137
    10. 'list' → logprob: -13.251269340515137

Token 201: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23683799803256989
    2. '
' → logprob: -1.7368379831314087
    3. ' for' → logprob: -4.361837863922119
    4. '    
' → logprob: -4.486837863922119
    5. 'for' → logprob: -6.236837863922119
    6. ' 
' → logprob: -6.611837863922119
    7. ' =' → logprob: -6.861837863922119
    8. 'a' → logprob: -6.986837863922119
    9. '  
' → logprob: -7.236837863922119
    10. 'xor' → logprob: -7.736837863922119

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07302368432283401
    2. 'for' → logprob: -3.323023796081543
    3. ' for' → logprob: -3.573023796081543
    4. '    
' → logprob: -5.698023796081543
    5. '
' → logprob: -5.948023796081543
    6. '	for' → logprob: -8.948023796081543
    7. '  
' → logprob: -9.823023796081543
    8. '   
' → logprob: -10.323023796081543
    9. '```' → logprob: -10.323023796081543
    10. ' 
' → logprob: -10.698023796081543

Token 203: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011980213224887848
    2. ' for' → logprob: -5.011980056762695
    3. '   ' → logprob: -5.261980056762695
    4. 'base' → logprob: -10.636980056762695
    5. 'blu' → logprob: -11.386980056762695
    6. 'xor' → logprob: -11.636980056762695
    7. '
' → logprob: -12.261980056762695
    8. '    
' → logprob: -12.386980056762695
    9. '	for' → logprob: -13.011980056762695
    10. 'i' → logprob: -13.011980056762695

Token 204: ' Calcul' (ID: 57243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023746537044644356
    2. ' for' → logprob: -3.7737464904785156
    3. '   ' → logprob: -7.648746490478516
    4. 'xor' → logprob: -11.023746490478516
    5. 'blu' → logprob: -13.023746490478516
    6. 'base' → logprob: -13.648746490478516
    7. '#' → logprob: -14.773746490478516
    8. '	for' → logprob: -14.898746490478516
    9. 's' → logprob: -14.898746490478516
    10. ' ' → logprob: -15.148746490478516

Token 205: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2560877799987793
    2. 'er' → logprob: -1.6310877799987793
    3. ' de' → logprob: -4.381087779998779
    4. '_' → logprob: -5.006087779998779
    5. 's' → logprob: -5.506087779998779
    6. ' total' → logprob: -6.631087779998779
    7. ' =' → logprob: -6.756087779998779
    8. ' ' → logprob: -7.381087779998779
    9. ' sums' → logprob: -7.506087779998779
    10. ' of' → logprob: -7.756087779998779

Token 206: ' XOR' (ID: 147209)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.44992873072624207
    2. 'xor' → logprob: -1.9499287605285645
    3. ' total' → logprob: -2.4499287605285645
    4. 'total' → logprob: -2.8249287605285645
    5. ' xor' → logprob: -4.0749287605285645
    6. ' XOR' → logprob: -4.0749287605285645
    7. 'X' → logprob: -4.1999287605285645
    8. 'x' → logprob: -4.5749287605285645
    9. 'a' → logprob: -5.8249287605285645
    10. 'for' → logprob: -5.9499287605285645

Token 207: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.092962384223938
    2. '_' → logprob: -1.217962384223938
    3. ' de' → logprob: -1.842962384223938
    4. 'total' → logprob: -2.8429622650146484
    5. 's' → logprob: -3.7179622650146484
    6. '=' → logprob: -3.7179622650146484
    7. '   ' → logprob: -3.7179622650146484
    8. ' for' → logprob: -3.9679622650146484
    9. ' =' → logprob: -4.092962265014648
    10. ' of' → logprob: -5.092962265014648

Token 208: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7721577286720276
    2. '   ' → logprob: -1.1471576690673828
    3. ' for' → logprob: -1.5221576690673828
    4. ':' → logprob: -7.022157669067383
    5. '=' → logprob: -7.772157669067383
    6. ' ' → logprob: -8.522157669067383
    7. ' =' → logprob: -8.772157669067383
    8. 's' → logprob: -9.147157669067383
    9. '    
' → logprob: -9.397157669067383
    10. '	for' → logprob: -9.647157669067383

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05429983511567116
    2. ' for' → logprob: -3.304299831390381
    3. 'for' → logprob: -4.179299831390381
    4. ':' → logprob: -8.054300308227539
    5. '    
' → logprob: -8.929300308227539
    6. ' =' → logprob: -9.929300308227539
    7. 's' → logprob: -9.929300308227539
    8. ' ' → logprob: -9.929300308227539
    9. '	for' → logprob: -9.929300308227539
    10. 'a' → logprob: -10.179300308227539

Token 210: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.021246924996376038
    2. ' for' → logprob: -3.896246910095215
    3. '   ' → logprob: -7.271246910095215
    4. 's' → logprob: -12.021246910095215
    5. 'xor' → logprob: -13.646246910095215
    6. 'x' → logprob: -14.646246910095215
    7. 'total' → logprob: -14.896246910095215
    8. '	for' → logprob: -15.021246910095215
    9. '
' → logprob: -15.146246910095215
    10. ' ' → logprob: -15.396246910095215

Token 211: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6820437908172607
    2. 'num' → logprob: -1.4320437908172607
    3. ' x' → logprob: -1.6820437908172607
    4. ' num' → logprob: -2.6820437908172607
    5. ' val' → logprob: -7.80704402923584
    6. 'val' → logprob: -8.30704402923584
    7. 'i' → logprob: -8.43204402923584
    8. 'value' → logprob: -9.43204402923584
    9. 'a' → logprob: -9.55704402923584
    10. ' i' → logprob: -10.43204402923584

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012622780166566372
    2. 'in' → logprob: -4.387622833251953
    3. ' ' → logprob: -9.262622833251953
    4. '   ' → logprob: -11.887622833251953
    5. '  ' → logprob: -12.262622833251953
    6. 'a' → logprob: -13.512622833251953
    7. 's' → logprob: -13.887622833251953
    8. '_' → logprob: -14.387622833251953
    9. '	in' → logprob: -15.012622833251953
    10. 'import' → logprob: -15.137622833251953

Token 213: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5231292843818665
    2. ' a' → logprob: -0.8981292843818665
    3. '	a' → logprob: -12.5231294631958
    4. ' ' → logprob: -14.3981294631958
    5. '_a' → logprob: -14.6481294631958
    6. '   ' → logprob: -15.2731294631958
    7. 's' → logprob: -15.5231294631958
    8. ')a' → logprob: -15.8981294631958
    9. '(a' → logprob: -16.023128509521484
    10. '[a' → logprob: -16.085628509521484

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006744735408574343
    2. ' :' → logprob: -5.506744861602783
    3. ':
' → logprob: -6.131744861602783
    4. '   ' → logprob: -7.756744861602783
    5. ' :
' → logprob: -10.756744384765625
    6. '       ' → logprob: -11.506744384765625
    7. '):' → logprob: -11.756744384765625
    8. ' in' → logprob: -12.256744384765625
    9. '=' → logprob: -12.506744384765625
    10. '):
' → logprob: -12.756744384765625

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007810323964804411
    2. 's' → logprob: -4.882810115814209
    3. ' sums' → logprob: -8.882810592651367
    4. '   ' → logprob: -10.757810592651367
    5. ' s' → logprob: -10.882810592651367
    6. '```' → logprob: -12.257810592651367
    7. '
' → logprob: -12.382810592651367
    8. '           ' → logprob: -13.132810592651367
    9. '[' → logprob: -13.257810592651367
    10. ',' → logprob: -13.257810592651367

Token 216: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08639410138130188
    2. ' sums' → logprob: -2.5863940715789795
    3. '       ' → logprob: -4.961394309997559
    4. '   ' → logprob: -7.836394309997559
    5. '           ' → logprob: -10.836394309997559
    6. ' s' → logprob: -11.461394309997559
    7. 'S' → logprob: -11.961394309997559
    8. '
' → logprob: -12.086394309997559
    9. '_s' → logprob: -12.086394309997559
    10. '    ' → logprob: -12.211394309997559

Token 217: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.3166840970516205
    2. '^' → logprob: -1.3166841268539429
    3. '=' → logprob: -5.691684246063232
    4. ' ' → logprob: -11.066683769226074
    5. '   ' → logprob: -11.441683769226074
    6. ' =' → logprob: -12.066683769226074
    7. ' ^' → logprob: -12.066683769226074
    8. ' ' → logprob: -13.441683769226074
    9. 'ˆ' → logprob: -14.191683769226074
    10. '	' → logprob: -14.816683769226074

Token 218: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002613358374219388
    2. ' x' → logprob: -8.250261306762695
    3. '	x' → logprob: -22.625261306762695
    4. '(x' → logprob: -24.250261306762695
    5. '$x' → logprob: -24.625261306762695
    6. ' ' → logprob: -25.625261306762695
    7. ''x' → logprob: -25.875261306762695
    8. '"x' → logprob: -26.000261306762695
    9. '{x' → logprob: -26.125261306762695
    10. '_x' → logprob: -26.375261306762695

Token 219: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5170992612838745
    2. '
' → logprob: -1.2670992612838745
    3. '    
' → logprob: -2.517099380493164
    4. 'blu' → logprob: -3.892099380493164
    5. '

' → logprob: -4.142099380493164
    6. '  
' → logprob: -6.767099380493164
    7. '   
' → logprob: -7.142099380493164
    8. 'basis' → logprob: -7.767099380493164
    9. 'def' → logprob: -7.892099380493164
    10. ' 
' → logprob: -8.392099380493164

Token 220: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5999042987823486
    2. '   ' → logprob: -1.4749042987823486
    3. '    
' → logprob: -1.8499042987823486
    4. 'blu' → logprob: -3.0999042987823486
    5. '  
' → logprob: -5.2249040603637695
    6. 'basis' → logprob: -5.8499040603637695
    7. 'base' → logprob: -5.8499040603637695
    8. '   
' → logprob: -5.9749040603637695
    9. '

' → logprob: -6.2249040603637695
    10. ' 
' → logprob: -6.7249040603637695

Token 221: ' #' (ID: 1069)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.23820388317108154
    2. 'base' → logprob: -2.113204002380371
    3. 'basis' → logprob: -2.988204002380371
    4. '   ' → logprob: -3.613204002380371
    5. 'b' → logprob: -6.488204002380371
    6. 'bas' → logprob: -6.613204002380371
    7. 'bl' → logprob: -6.613204002380371
    8. '    
' → logprob: -6.863204002380371
    9. '#' (adapté à ' #') → logprob: -6.863204002380371
    10. 'bases' → logprob: -6.988204002380371

Token 222: ' blu' (ID: 55577)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.6035559773445129
    2. 'base' → logprob: -1.3535559177398682
    3. 'basis' → logprob: -2.353555917739868
    4. ' blu' → logprob: -3.228555917739868
    5. ' base' → logprob: -4.478556156158447
    6. '#' → logprob: -4.728556156158447
    7. ' basis' → logprob: -4.791056156158447
    8. 'bas' → logprob: -5.666056156158447
    9. 'def' → logprob: -5.728556156158447
    10. 'b' → logprob: -6.041056156158447

Token 223: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011880561709403992
    2. '=' → logprob: -4.511880397796631
    3. '=[]' → logprob: -7.386880397796631
    4. ',' → logprob: -9.261880874633789
    5. '=[]
' → logprob: -9.761880874633789
    6. 'e' → logprob: -11.386880874633789
    7. 's' → logprob: -11.511880874633789
    8. '   ' → logprob: -11.761880874633789
    9. ' ' → logprob: -12.011880874633789
    10. 'se' → logprob: -12.636880874633789

Token 224: ' indices' (ID: 30378)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07000790536403656
    2. ' []' → logprob: -2.695007801055908
    3. ' [' → logprob: -10.445008277893066
    4. '[' → logprob: -10.445008277893066
    5. '[]
' → logprob: -11.820008277893066
    6. 'a' → logprob: -13.570008277893066
    7. ' []
' → logprob: -13.695008277893066
    8. '[]}' → logprob: -13.695008277893066
    9. '[a' → logprob: -14.570008277893066
    10. 'list' → logprob: -15.320008277893066

Token 225: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0033221999183297157
    2. '=' → logprob: -6.753322124481201
    3. '_selected' → logprob: -7.503322124481201
    4. '[]' → logprob: -7.628322124481201
    5. '=[]' → logprob: -7.628322124481201
    6. ' selected' → logprob: -9.75332260131836
    7. ' ' → logprob: -9.87832260131836
    8. '_b' → logprob: -9.87832260131836
    9. '_' → logprob: -9.87832260131836
    10. 'de' → logprob: -10.25332260131836

Token 226: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.503140926361084
    2. 'élé' → logprob: -1.003140926361084
    3. ' elements' → logprob: -4.003140926361084
    4. 'a' → logprob: -5.503140926361084
    5. 'elements' → logprob: -5.753140926361084
    6. ' a' → logprob: -7.128140926361084
    7. ' indices' → logprob: -7.253140926361084
    8. 'é' → logprob: -8.128141403198242
    9. ' bases' → logprob: -8.128141403198242
    10. 'indices' → logprob: -8.253141403198242

Token 227: ' sélection' (ID: 43472)
  Prédit: ' sélection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sélection' → logprob: -0.7500086426734924
    2. ' de' → logprob: -1.8750085830688477
    3. ' utilisés' → logprob: -3.0000085830688477
    4. ' qui' → logprob: -3.3750085830688477
    5. 'sel' → logprob: -3.5000085830688477
    6. ' chois' → logprob: -3.6250085830688477
    7. '_selected' → logprob: -3.8750085830688477
    8. 'cho' → logprob: -4.000008583068848
    9. ' dans' → logprob: -4.125008583068848
    10. ' =' → logprob: -4.250008583068848

Token 228: 'nés' (ID: 72145)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.8210785388946533
    2. '   ' → logprob: -1.4460785388946533
    3. 'nés' → logprob: -1.8210785388946533
    4. 's' → logprob: -2.5710785388946533
    5. ' ' → logprob: -3.3210785388946533
    6. ' =' → logprob: -3.6960785388946533
    7. '    ' → logprob: -5.571078300476074
    8. ' pour' → logprob: -5.571078300476074
    9. '  ' → logprob: -5.696078300476074
    10. '       ' → logprob: -5.946078300476074

Token 229: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05526576563715935
    2. '=' → logprob: -2.9302656650543213
    3. '=[]' → logprob: -8.680265426635742
    4. ',' → logprob: -9.430265426635742
    5. ' ' → logprob: -10.055265426635742
    6. '[]' → logprob: -10.305265426635742
    7. '   ' → logprob: -10.930265426635742
    8. '  ' → logprob: -10.930265426635742
    9. 'indices' → logprob: -12.555265426635742
    10. '_' → logprob: -12.805265426635742

Token 230: ' construire' (ID: 92473)
  Prédit: ' construire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' construire' → logprob: -0.6248853206634521
    2. ' la' → logprob: -0.8748853206634521
    3. 'la' → logprob: -3.249885320663452
    4. ' form' → logprob: -6.124885559082031
    5. ' ' → logprob: -6.999885559082031
    6. '   ' → logprob: -7.374885559082031
    7. 'constit' → logprob: -7.624885559082031
    8. ' base' → logprob: -7.624885559082031
    9. ' construir' → logprob: -7.874885559082031
    10. 'construct' → logprob: -7.999885559082031

Token 231: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.02515217661857605
    2. 'la' → logprob: -3.7751522064208984
    3. ' the' → logprob: -7.650152206420898
    4. '   ' → logprob: -7.900152206420898
    5. 'the' → logprob: -8.025152206420898
    6. ' ' → logprob: -8.525152206420898
    7. ' une' → logprob: -9.150152206420898
    8. 'a' → logprob: -9.400152206420898
    9. ' le' → logprob: -9.900152206420898
    10. 'base' → logprob: -9.900152206420898

Token 232: ' "' (ID: 392)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.23171290755271912
    2. 'base' → logprob: -1.6067129373550415
    3. ' basis' → logprob: -5.981712818145752
    4. 'basis' → logprob: -6.731712818145752
    5. ' ' → logprob: -6.856712818145752
    6. '[]' → logprob: -7.481712818145752
    7. 'b' → logprob: -8.35671329498291
    8. ' []' → logprob: -9.10671329498291
    9. '  ' → logprob: -9.48171329498291
    10. '   ' → logprob: -9.60671329498291

Token 233: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.5828256011009216
    2. ' base' → logprob: -0.8328256011009216
    3. 'basis' → logprob: -5.957825660705566
    4. ' basis' → logprob: -6.207825660705566
    5. ' ' → logprob: -7.082825660705566
    6. 'bas' → logprob: -8.582825660705566
    7. 'b' → logprob: -8.707825660705566
    8. 'blu' → logprob: -8.770325660705566
    9. '   ' → logprob: -9.082825660705566
    10. 'bl' → logprob: -9.395325660705566

Token 234: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04003862291574478
    2. ' "' → logprob: -4.040038585662842
    3. ' lin' → logprob: -4.540038585662842
    4. '_lin' → logprob: -5.790038585662842
    5. ' linear' → logprob: -6.290038585662842
    6. '"]' → logprob: -6.415038585662842
    7. '_linear' → logprob: -7.040038585662842
    8. 'linear' → logprob: -7.415038585662842
    9. 'lin' → logprob: -8.0400390625
    10. '"
' → logprob: -8.1650390625

Token 235: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09955735504627228
    2. '   ' → logprob: -2.474557399749756
    3. '[]' → logprob: -5.349557399749756
    4. '=' → logprob: -6.599557399749756
    5. 'blu' → logprob: -6.599557399749756
    6. '=[]' → logprob: -6.724557399749756
    7. '=[]
' → logprob: -7.349557399749756
    8. '  ' → logprob: -8.099556922912598
    9. ':' → logprob: -8.474556922912598
    10. 'indices' → logprob: -9.224556922912598

Token 236: ' blu' (ID: 55577)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' (adapté à ' blu') → logprob: -0.2232237011194229
    2. ' blu' → logprob: -1.7232236862182617
    3. '[]' → logprob: -3.9732236862182617
    4. ' []' → logprob: -6.348223686218262
    5. ' bleu' → logprob: -8.098223686218262
    6. '   ' → logprob: -9.223223686218262
    7. 'ble' → logprob: -9.473223686218262
    8. ' blue' → logprob: -9.723223686218262
    9. '[]
' → logprob: -9.723223686218262
    10. ' ' → logprob: -9.848223686218262

Token 237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04301813989877701
    2. '=' → logprob: -3.168018102645874
    3. ',' → logprob: -11.668018341064453
    4. ' ' → logprob: -12.293018341064453
    5. '=[]' → logprob: -12.293018341064453
    6. '   ' → logprob: -15.293018341064453
    7. '  ' → logprob: -15.418018341064453
    8. '=[]
' → logprob: -15.918018341064453
    9. ' ,' → logprob: -16.043018341064453
    10. 'indices' → logprob: -16.043018341064453

Token 238: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0002715873415581882
    2. ' []' → logprob: -8.250271797180176
    3. '[]
' → logprob: -12.250271797180176
    4. '[' → logprob: -12.875271797180176
    5. '[]}' → logprob: -13.500271797180176
    6. 'set' → logprob: -13.750271797180176
    7. '[]

' → logprob: -15.125271797180176
    8. '[],' → logprob: -16.87527084350586
    9. '[])' → logprob: -17.12527084350586
    10. '{}' → logprob: -17.12527084350586

Token 239: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4378848391061183e-05
    2. '([]' → logprob: -11.500014305114746
    3. '()
' → logprob: -13.625014305114746
    4. ' ()' → logprob: -14.875014305114746
    5. '()]' → logprob: -14.875014305114746
    6. '(' → logprob: -15.250014305114746
    7. '()\' → logprob: -15.250014305114746
    8. '()}' → logprob: -15.375014305114746
    9. '()

' → logprob: -15.375014305114746
    10. '[]' → logprob: -15.500014305114746

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2466270923614502
    2. 'base' → logprob: -2.37162709236145
    3. ' base' → logprob: -3.24662709236145
    4. 'basis' → logprob: -3.37162709236145
    5. 'for' → logprob: -3.99662709236145
    6. ' basis' → logprob: -4.371626853942871
    7. ' for' → logprob: -4.371626853942871
    8. 'bases' → logprob: -6.121626853942871
    9. '    
' → logprob: -6.746626853942871
    10. ' bases' → logprob: -6.746626853942871

Token 241: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4978908598423004
    2. 'base' → logprob: -1.372890830039978
    3. 'basis' → logprob: -2.3728909492492676
    4. 'b' → logprob: -3.8728909492492676
    5. '   ' → logprob: -4.747890949249268
    6. ' for' → logprob: -4.997890949249268
    7. ' base' → logprob: -6.372890949249268
    8. 'bas' → logprob: -6.872890949249268
    9. ' basis' → logprob: -6.872890949249268
    10. 'def' → logprob: -7.122890949249268

Token 242: ' remain' (ID: 12760)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.6498439311981201
    2. 'basis' → logprob: -1.5248439311981201
    3. ' base' → logprob: -2.52484393119812
    4. ' basis' → logprob: -2.77484393119812
    5. 'for' → logprob: -3.02484393119812
    6. 'b' → logprob: -4.149844169616699
    7. ' for' → logprob: -4.399844169616699
    8. 'def' → logprob: -5.399844169616699
    9. ' b' → logprob: -5.774844169616699
    10. '   ' → logprob: -5.899844169616699

Token 243: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14345405995845795
    2. '=' → logprob: -2.018454074859619
    3. '_indices' → logprob: -8.643453598022461
    4. '   ' → logprob: -8.643453598022461
    5. 's' → logprob: -9.393453598022461
    6. ' ' → logprob: -10.018453598022461
    7. 'indices' → logprob: -10.143453598022461
    8. '=set' → logprob: -10.143453598022461
    9. '=[]' → logprob: -10.143453598022461
    10. 'd' → logprob: -10.268453598022461

Token 244: ' indices' (ID: 30378)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.6466760635375977
    2. ' []' → logprob: -1.5216760635375977
    3. '[]' → logprob: -2.5216760635375977
    4. 'set' → logprob: -2.6466760635375977
    5. 'a' → logprob: -3.2716760635375977
    6. ' a' → logprob: -3.6466760635375977
    7. ' [' → logprob: -3.6466760635375977
    8. ' list' → logprob: -5.021676063537598
    9. '[a' → logprob: -5.271676063537598
    10. '[' → logprob: -6.021676063537598

Token 245: ' encore' (ID: 14043)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.008824333548545837
    2. 'des' → logprob: -5.633824348449707
    3. ' =' → logprob: -5.883824348449707
    4. '   ' → logprob: -6.383824348449707
    5. ' of' → logprob: -7.758824348449707
    6. ' de' → logprob: -9.008824348449707
    7. '=' → logprob: -10.258824348449707
    8. ' ' → logprob: -10.383824348449707
    9. '  ' → logprob: -10.758824348449707
    10. '    ' → logprob: -11.133824348449707

Token 246: ' disponibles' (ID: 36617)
  Prédit: ' non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.9116334915161133
    2. 'non' → logprob: -1.2866334915161133
    3. ' disponibles' → logprob: -1.6616334915161133
    4. 'à' → logprob: -3.1616334915161133
    5. '   ' → logprob: -3.5366334915161133
    6. 'dis' → logprob: -4.161633491516113
    7. ' à' → logprob: -4.161633491516113
    8. 'rest' → logprob: -4.911633491516113
    9. ' rest' → logprob: -5.661633491516113
    10. '_non' → logprob: -5.911633491516113

Token 247: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6786720752716064
    2. ' for' → logprob: -0.9286720752716064
    3. 'for' → logprob: -3.1786720752716064
    4. ' pour' → logprob: -4.053671836853027
    5. '   ' → logprob: -4.178671836853027
    6. '=' → logprob: -4.928671836853027
    7. '<|end|>' → logprob: -5.053671836853027
    8. ' ' → logprob: -5.803671836853027
    9. ',' → logprob: -6.053671836853027
    10. 'pour' → logprob: -6.928671836853027

Token 248: ' être' (ID: 9104)
  Prédit: ' selection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' selection' → logprob: -0.6241522431373596
    2. 'selection' → logprob: -1.3741521835327148
    3. ' la' → logprob: -2.499152183532715
    4. ' sélectionner' → logprob: -3.749152183532715
    5. ' l' → logprob: -4.124152183532715
    6. 'l' → logprob: -4.374152183532715
    7. 'blu' → logprob: -4.499152183532715
    8. ' construire' → logprob: -4.874152183532715
    9. ' ajouter' → logprob: -4.999152183532715
    10. 'la' → logprob: -5.124152183532715

Token 249: ' sélection' (ID: 43472)
  Prédit: ' ajout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajout' → logprob: -0.7097054123878479
    2. ' utilisés' → logprob: -1.0847053527832031
    3. 'aj' → logprob: -2.459705352783203
    4. ' sélection' → logprob: -3.334705352783203
    5. 'util' → logprob: -3.459705352783203
    6. ' ajouté' → logprob: -5.584705352783203
    7. ' ' → logprob: -6.334705352783203
    8. ' cho' → logprob: -6.334705352783203
    9. ' utilisé' → logprob: -6.834705352783203
    10. 's' → logprob: -6.834705352783203

Token 250: 'nés' (ID: 72145)
  Prédit: 'nés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nés' → logprob: -0.40347108244895935
    2. 'és' → logprob: -1.7784711122512817
    3. 's' → logprob: -2.278470993041992
    4. '   ' → logprob: -2.903470993041992
    5. '       ' → logprob: -6.778470993041992
    6. 'nées' → logprob: -6.778470993041992
    7. '    ' → logprob: -7.653470993041992
    8. 'ion' → logprob: -7.653470993041992
    9. 'ner' → logprob: -7.903470993041992
    10. 'er' → logprob: -8.528470993041992

Token 251: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18303723633289337
    2. '<|end|>' → logprob: -2.058037281036377
    3. '   ' → logprob: -4.058037281036377
    4. ' for' → logprob: -5.058037281036377
    5. ',' → logprob: -5.058037281036377
    6. '=' → logprob: -6.058037281036377
    7. '<|end|>' → logprob: -6.058037281036377
    8. ' ' → logprob: -6.183037281036377
    9. '  ' → logprob: -7.308037281036377
    10. 'for' → logprob: -7.558037281036377

Token 252: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9558730721473694
    2. 'a' → logprob: -1.0808730125427246
    3. ' a' → logprob: -1.7058730125427246
    4. 'blu' → logprob: -3.0808730125427246
    5. ' blu' → logprob: -4.330873012542725
    6. ' ' → logprob: -4.955873012542725
    7. ' l' → logprob: -5.080873012542725
    8. 'la' → logprob: -5.580873012542725
    9. ' bleu' → logprob: -5.580873012542725
    10. ' range' → logprob: -5.705873012542725

Token 253: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.8927164077758789
    2. 'blu' → logprob: -1.017716407775879
    3. ' base' → logprob: -2.017716407775879
    4. ' blu' → logprob: -2.517716407775879
    5. 'basis' → logprob: -6.017716407775879
    6. 'ble' → logprob: -6.392716407775879
    7. ' basis' → logprob: -6.705216407775879
    8. '   ' → logprob: -6.767716407775879
    9. ' bleu' → logprob: -7.142716407775879
    10. 'blue' → logprob: -7.267716407775879

Token 254: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1550280600786209
    2. '<|end|>' → logprob: -2.9050281047821045
    3. '   ' → logprob: -3.2800281047821045
    4. ' ' → logprob: -3.6550281047821045
    5. '=' → logprob: -4.780027866363525
    6. '=set' → logprob: -5.530027866363525
    7. 'indices' → logprob: -5.780027866363525
    8. ',' → logprob: -6.155027866363525
    9. 's' → logprob: -6.280027866363525
    10. '<|end|>' → logprob: -6.280027866363525

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19704043865203857
    2. 'for' → logprob: -3.072040557861328
    3. ' =' → logprob: -3.197040557861328
    4. ' for' → logprob: -3.322040557861328
    5. '
' → logprob: -3.447040557861328
    6. ',' → logprob: -5.072040557861328
    7. '=' → logprob: -6.072040557861328
    8. '    
' → logprob: -6.197040557861328
    9. 'i' → logprob: -6.447040557861328
    10. 'n' → logprob: -6.697040557861328

Token 256: ' remain' (ID: 12760)
  Prédit: ' remain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remain' → logprob: -0.8703370690345764
    2. 'remain' (adapté à ' remain') → logprob: -1.1203370094299316
    3. 'set' → logprob: -1.8703370094299316
    4. ' set' → logprob: -2.3703370094299316
    5. 'remaining' → logprob: -6.120337009429932
    6. ' remaining' → logprob: -6.620337009429932
    7. 'rem' → logprob: -7.370337009429932
    8. 'available' → logprob: -7.495337009429932
    9. 'list' → logprob: -7.620337009429932
    10. '{' → logprob: -7.745337009429932

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693199515342712
    2. '=' → logprob: -2.12693190574646
    3. '=set' → logprob: -12.626932144165039
    4. ' ' → logprob: -14.376932144165039
    5. '＝' → logprob: -17.87693214416504
    6. ',' → logprob: -18.37693214416504
    7. ' ' → logprob: -18.37693214416504
    8. '   ' → logprob: -18.50193214416504
    9. '=list' → logprob: -18.87693214416504
    10. 's' → logprob: -19.37693214416504

Token 258: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.1603960394859314
    2. ' set' → logprob: -1.9103960990905762
    3. '   ' → logprob: -9.410395622253418
    4. 'list' → logprob: -9.910395622253418
    5. ' list' → logprob: -11.035395622253418
    6. ' ' → logprob: -11.785395622253418
    7. '(set' → logprob: -12.160395622253418
    8. '{' → logprob: -12.535395622253418
    9. '	set' → logprob: -12.785395622253418
    10. '  ' → logprob: -13.160395622253418

Token 259: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.2113979209971149e-05
    2. 'range' → logprob: -11.875012397766113
    3. '(' → logprob: -12.750012397766113
    4. '(a' → logprob: -14.000012397766113
    5. '(i' → logprob: -14.625012397766113
    6. ' range' → logprob: -15.000012397766113
    7. '()' → logprob: -15.125012397766113
    8. '(list' → logprob: -15.625012397766113
    9. '([' → logprob: -16.500011444091797
    10. '	range' → logprob: -16.750011444091797

Token 260: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -10.875024795532227
    3. 'n' → logprob: -12.250024795532227
    4. '   ' → logprob: -14.750024795532227
    5. '(len' → logprob: -15.375024795532227
    6. ' n' → logprob: -16.375024795532227
    7. '	n' → logprob: -17.250024795532227
    8. ')n' → logprob: -17.250024795532227
    9. ' (' → logprob: -17.500024795532227
    10. '(
' → logprob: -18.250024795532227

Token 261: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002149802603526041
    2. ' ))' → logprob: -9.125214576721191
    3. '))
' → logprob: -9.375214576721191
    4. '   ' → logprob: -11.625214576721191
    5. ')))' → logprob: -11.875214576721191
    6. ')' → logprob: -12.625214576721191
    7. '()))' → logprob: -14.625214576721191
    8. '))

' → logprob: -15.375214576721191
    9. ''))' → logprob: -15.500214576721191
    10. ' ' → logprob: -15.500214576721191

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1720305681228638
    2. ' for' → logprob: -1.4220305681228638
    3. 'for' → logprob: -1.5470305681228638
    4. 'max' → logprob: -2.797030448913574
    5. 'bit' → logprob: -3.047030448913574
    6. ' bit' → logprob: -3.672030448913574
    7. 'base' → logprob: -4.172030448913574
    8. '
' → logprob: -4.547030448913574
    9. 'bits' → logprob: -4.672030448913574
    10. 'pos' → logprob: -4.797030448913574

Token 263: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.056664228439331
    2. 'max' → logprob: -1.431664228439331
    3. '   ' → logprob: -1.806664228439331
    4. 'bit' → logprob: -2.181664228439331
    5. 'pos' → logprob: -3.181664228439331
    6. ' for' → logprob: -3.681664228439331
    7. 'i' → logprob: -4.18166446685791
    8. 'bits' → logprob: -4.93166446685791
    9. 'base' → logprob: -5.05666446685791
    10. 'while' → logprob: -5.80666446685791

Token 264: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9734883904457092
    2. 'max' → logprob: -0.9734883904457092
    3. 'pos' → logprob: -2.5984883308410645
    4. 'bit' → logprob: -2.7234883308410645
    5. ' for' → logprob: -3.7234883308410645
    6. 'base' → logprob: -4.0984883308410645
    7. 'basis' → logprob: -4.4734883308410645
    8. ' max' → logprob: -4.5984883308410645
    9. 'bits' → logprob: -4.9734883308410645
    10. 'def' → logprob: -5.0984883308410645

Token 265: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.08920466899871826
    2. 'ours' → logprob: -2.589204788208008
    3. 'ourt' → logprob: -4.589204788208008
    4. 'or' → logprob: -10.589204788208008
    5. 'e' → logprob: -10.839204788208008
    6. 'o' → logprob: -11.589204788208008
    7. 'oure' → logprob: -11.839204788208008
    8. 'ourse' → logprob: -12.089204788208008
    9. 'orer' → logprob: -12.214204788208008
    10. 'ou' → logprob: -12.339204788208008

Token 266: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7267435193061829
    2. ' des' → logprob: -0.9767435193061829
    3. ' de' → logprob: -3.226743459701538
    4. ' for' → logprob: -3.851743459701538
    5. ' of' → logprob: -4.101743698120117
    6. ' range' → logprob: -4.476743698120117
    7. '(range' → logprob: -4.851743698120117
    8. 'range' → logprob: -4.976743698120117
    9. 'de' → logprob: -5.226743698120117
    10. 'd' → logprob: -5.601743698120117

Token 267: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6160840392112732
    2. ' reversed' → logprob: -1.366084098815918
    3. ' bits' → logprob: -1.866084098815918
    4. 'range' → logprob: -3.741084098815918
    5. ' ' → logprob: -4.616084098815918
    6. ' bit' → logprob: -5.616084098815918
    7. ' rang' → logprob: -5.991084098815918
    8. 'bits' → logprob: -5.991084098815918
    9. 'bit' → logprob: -6.991084098815918
    10. 'a' → logprob: -7.616084098815918

Token 268: '61' (ID: 8954)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06070190295577049
    2. 'bits' → logprob: -3.935701847076416
    3. 're' → logprob: -4.310701847076416
    4. 'a' → logprob: -4.435701847076416
    5. ' range' → logprob: -5.560701847076416
    6. 'bit' → logprob: -5.560701847076416
    7. ' reversed' → logprob: -5.810701847076416
    8. 'for' → logprob: -7.435701847076416
    9. 'reverse' → logprob: -7.685701847076416
    10. 'bl' → logprob: -7.685701847076416

Token 269: ' bits' (ID: 18189)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9675248861312866
    2. ' bits' → logprob: -1.2175248861312866
    3. '-bit' → logprob: -1.8425248861312866
    4. '-' → logprob: -2.467525005340576
    5. ' for' → logprob: -3.717525005340576
    6. ' bit' → logprob: -3.842525005340576
    7. ' ' → logprob: -4.467525005340576
    8. 'bits' → logprob: -5.342525005340576
    9. ',' → logprob: -5.842525005340576
    10. 'bit' → logprob: -5.842525005340576

Token 270: ' possibles' (ID: 97753)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08702065050601959
    2. ' in' → logprob: -3.8370206356048584
    3. '   ' → logprob: -3.9620206356048584
    4. ' -' → logprob: -4.3370208740234375
    5. 'for' → logprob: -4.7120208740234375
    6. '[::-' → logprob: -5.3370208740234375
    7. ',' → logprob: -5.7120208740234375
    8. ' range' → logprob: -5.9620208740234375
    9. ' i' → logprob: -6.4620208740234375
    10. 'range' → logprob: -6.5870208740234375

Token 271: ' du' (ID: 1462)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09199464321136475
    2. 'for' → logprob: -2.8419947624206543
    3. '   ' → logprob: -4.341994762420654
    4. ' (' → logprob: -4.966994762420654
    5. ' in' → logprob: -5.466994762420654
    6. ',' → logprob: -7.216994762420654
    7. '
' → logprob: -7.216994762420654
    8. ' i' → logprob: -7.216994762420654
    9. 'range' → logprob: -7.591994762420654
    10. '[::-' → logprob: -7.841994762420654

Token 272: ' plus' (ID: 2932)
  Prédit: '64'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '64' → logprob: -1.627814531326294
    2. 'a' → logprob: -1.752814531326294
    3. 'max' → logprob: -2.002814531326294
    4. ' ' → logprob: -2.002814531326294
    5. ' max' → logprob: -2.252814531326294
    6. ' maximum' → logprob: -2.877814531326294
    7. 'int' → logprob: -3.502814531326294
    8. '0' → logprob: -3.877814531326294
    9. 'ent' → logprob: -3.877814531326294
    10. 's' → logprob: -4.252814292907715

Token 273: ' grand' (ID: 6363)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.174882411956787
    2. '64' → logprob: -2.299882411956787
    3. 'haut' → logprob: -2.299882411956787
    4. 'au' → logprob: -2.549882411956787
    5. 'grand' → logprob: -2.549882411956787
    6. 'sign' → logprob: -3.049882411956787
    7. ' haut' → logprob: -3.174882411956787
    8. '```' → logprob: -3.299882411956787
    9. 'd' → logprob: -3.549882411956787
    10. '1' → logprob: -3.549882411956787

Token 274: ' au' (ID: 2791)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.2671591639518738
    2. ' bit' → logprob: -2.7671592235565186
    3. ' nombre' → logprob: -3.0171592235565186
    4. ' élément' → logprob: -3.3921592235565186
    5. 'élé' → logprob: -3.3921592235565186
    6. '64' → logprob: -3.8921592235565186
    7. 'element' → logprob: -4.8921589851379395
    8. 'nombre' → logprob: -4.8921589851379395
    9. '1' → logprob: -5.6421589851379395
    10. 'val' → logprob: -6.3921589851379395

Token 275: ' plus' (ID: 2932)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.21996548771858215
    2. 'plus' → logprob: -2.5949654579162598
    3. '0' → logprob: -3.3449654579162598
    4. '61' → logprob: -3.4699654579162598
    5. '59' → logprob: -3.8449654579162598
    6. ' ' → logprob: -4.21996545791626
    7. ' plus' → logprob: -5.09496545791626
    8. '```' → logprob: -5.96996545791626
    9. 'moins' → logprob: -6.34496545791626
    10. 'bit' → logprob: -6.71996545791626

Token 276: ' petit' (ID: 20577)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.3081510066986084
    2. 'pet' → logprob: -1.4331510066986084
    3. '0' → logprob: -4.5581512451171875
    4. 'moins' → logprob: -5.9331512451171875
    5. 'plus' → logprob: -6.1831512451171875
    6. 'b' → logprob: -6.4331512451171875
    7. '61' → logprob: -6.6831512451171875
    8. 'grand' → logprob: -6.9331512451171875
    9. '35' → logprob: -7.0581512451171875
    10. '31' → logprob: -7.0581512451171875

Token 277: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03489577770233154
    2. 'for' → logprob: -3.659895896911621
    3. '   ' → logprob: -6.159895896911621
    4. ' (' → logprob: -6.409895896911621
    5. ',' → logprob: -6.659895896911621
    6. ' i' → logprob: -7.409895896911621
    7. '
' → logprob: -7.409895896911621
    8. '[::-' → logprob: -7.534895896911621
    9. ':' → logprob: -7.909895896911621
    10. ' in' → logprob: -8.159895896911621

Token 278: '64' (ID: 2220)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35082781314849854
    2. '60' → logprob: -1.8508278131484985
    3. '59' → logprob: -3.475827693939209
    4. '   ' → logprob: -3.475827693939209
    5. ',' → logprob: -4.100827693939209
    6. '5' → logprob: -4.350827693939209
    7. ')' → logprob: -4.475827693939209
    8. ' for' → logprob: -4.725827693939209
    9. ' reverse' → logprob: -5.225827693939209
    10. '61' → logprob: -5.850827693939209

Token 279: ' bits' (ID: 18189)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3946770131587982
    2. '-' → logprob: -1.1446770429611206
    3. ')' → logprob: -5.39467716217041
    4. ',' → logprob: -6.76967716217041
    5. '   ' → logprob: -6.76967716217041
    6. ' ' → logprob: -8.14467716217041
    7. '):
' → logprob: -8.89467716217041
    8. '-bit' → logprob: -9.01967716217041
    9. '0' → logprob: -9.76967716217041
    10. '):' → logprob: -10.01967716217041

Token 280: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.35582295060157776
    2. '-' → logprob: -1.2308229207992554
    3. ',' → logprob: -5.980823040008545
    4. ')' → logprob: -6.355823040008545
    5. ' ' → logprob: -6.480823040008545
    6. '   ' → logprob: -6.855823040008545
    7. ' ,' → logprob: -9.605822563171387
    8. ' )' → logprob: -9.605822563171387
    9. '64' → logprob: -10.355822563171387
    10. '  ' → logprob: -10.355822563171387

Token 281: ' quelques' (ID: 17687)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006980106234550476
    2. ' ' → logprob: -5.006979942321777
    3. '4' → logprob: -9.256979942321777
    4. '   ' → logprob: -9.631979942321777
    5. '1' → logprob: -10.256979942321777
    6. '  ' → logprob: -10.381979942321777
    7. '2' → logprob: -10.881979942321777
    8. ' bit' → logprob: -12.881979942321777
    9. '
' → logprob: -13.131979942321777
    10. '-' → logprob: -13.256979942321777

Token 282: ' bits' (ID: 18189)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.029977375641465187
    2. ' bits' → logprob: -4.279977321624756
    3. 'bits' → logprob: -4.779977321624756
    4. ' ' → logprob: -6.279977321624756
    5. '   ' → logprob: -6.654977321624756
    6. ')' → logprob: -6.904977321624756
    7. '2' → logprob: -7.529977321624756
    8. ' espaces' → logprob: -7.654977321624756
    9. '4' → logprob: -7.779977321624756
    10. '  ' → logprob: -8.529977798461914

Token 283: ' réserv' (ID: 74951)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.864626944065094
    2. ')' → logprob: -1.4896268844604492
    3. ' -' → logprob: -1.8646268844604492
    4. ' de' → logprob: -2.989626884460449
    5. ' ' → logprob: -3.489626884460449
    6. '-' → logprob: -4.489626884460449
    7. '=' → logprob: -4.864626884460449
    8. '  ' → logprob: -4.864626884460449
    9. ' des' → logprob: -4.864626884460449
    10. '4' → logprob: -4.989626884460449

Token 284: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0010821137111634016
    2. '   ' → logprob: -7.626081943511963
    3. 'é' → logprob: -8.251082420349121
    4. 'es' → logprob: -8.626082420349121
    5. 's' → logprob: -9.626082420349121
    6. 'for' → logprob: -11.001082420349121
    7. 'ès' → logprob: -11.376082420349121
    8. 'e' → logprob: -11.751082420349121
    9. '#' → logprob: -12.001082420349121
    10. 'u' → logprob: -12.376082420349121

Token 285: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43404316902160645
    2. ' pour' → logprob: -1.4340431690216064
    3. '   ' → logprob: -3.9340431690216064
    4. 'pour' → logprob: -4.309042930603027
    5. ' for' → logprob: -4.559042930603027
    6. ' )' → logprob: -4.684042930603027
    7. ' ' → logprob: -4.809042930603027
    8. 'for' → logprob: -4.809042930603027
    9. ' -' → logprob: -4.934042930603027
    10. ',' → logprob: -4.934042930603027

Token 286: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3967429995536804
    2. '1' → logprob: -2.396743059158325
    3. ' la' → logprob: -2.646743059158325
    4. '61' → logprob: -3.396743059158325
    5. '59' → logprob: -3.896743059158325
    6. '56' → logprob: -4.021742820739746
    7. '63' → logprob: -4.396742820739746
    8. 'l' → logprob: -4.521742820739746
    9. 'la' → logprob: -4.896742820739746
    10. ' l' → logprob: -5.021742820739746

Token 287: ' précision' (ID: 130591)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1998919248580933
    2. '63' → logprob: -1.1998919248580933
    3. 'sign' → logprob: -1.6998919248580933
    4. '3' → logprob: -3.324892044067383
    5. 'signed' → logprob: -3.574892044067383
    6. ' sign' → logprob: -4.324892044067383
    7. ' ' → logprob: -4.449892044067383
    8. '  ' → logprob: -4.574892044067383
    9. '62' → logprob: -4.699892044067383
    10. '   ' → logprob: -4.699892044067383

Token 288: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4343652725219727
    2. ')' → logprob: -1.5593652725219727
    3. ',' → logprob: -1.6843652725219727
    4. '-' → logprob: -2.3093652725219727
    5. ' -' → logprob: -2.5593652725219727
    6. '):
' → logprob: -3.9343652725219727
    7. ' ' → logprob: -4.059365272521973
    8. '64' → logprob: -4.309365272521973
    9. 's' → logprob: -4.559365272521973
    10. ' pour' → logprob: -4.684365272521973

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7747415900230408
    2. ' for' → logprob: -0.7747415900230408
    3. 'for' → logprob: -2.6497416496276855
    4. '
' → logprob: -5.1497416496276855
    5. '    
' → logprob: -7.2747416496276855
    6. ' 
' → logprob: -8.149741172790527
    7. ' ' → logprob: -8.899741172790527
    8. '    ' → logprob: -9.024741172790527
    9. ',' → logprob: -9.149741172790527
    10. '	for' → logprob: -9.399741172790527

Token 290: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6944054365158081
    2. 'for' (adapté à ' for') → logprob: -0.6944054365158081
    3. '   ' → logprob: -6.694405555725098
    4. '
' → logprob: -11.819405555725098
    5. 'bit' → logprob: -12.819405555725098
    6. 'bits' → logprob: -12.819405555725098
    7. ' bit' → logprob: -13.194405555725098
    8. ' 
' → logprob: -14.194405555725098
    9. '    
' → logprob: -14.569405555725098
    10. '	for' → logprob: -14.569405555725098

Token 291: ' i' (ID: 575)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.06304654479026794
    2. ' i' → logprob: -3.313046455383301
    3. ' b' → logprob: -4.563046455383301
    4. 'bit' → logprob: -4.563046455383301
    5. 'i' → logprob: -6.813046455383301
    6. ' k' → logprob: -6.938046455383301
    7. ' j' → logprob: -7.938046455383301
    8. ' p' → logprob: -7.938046455383301
    9. ' d' → logprob: -8.1880464553833
    10. 'b' → logprob: -8.6880464553833

Token 292: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00702237244695425
    2. 'in' → logprob: -5.007022380828857
    3. ' ' → logprob: -8.3820219039917
    4. '   ' → logprob: -10.3820219039917
    5. '(' → logprob: -11.3820219039917
    6. 'n' → logprob: -11.8820219039917
    7. 's' → logprob: -12.2570219039917
    8. 'range' → logprob: -12.3820219039917
    9. '(n' → logprob: -12.5070219039917
    10. '  ' → logprob: -12.8820219039917

Token 293: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10075445473194122
    2. ' reversed' → logprob: -2.350754499435425
    3. 'range' → logprob: -7.600754261016846
    4. '   ' → logprob: -10.475754737854004
    5. ' ' → logprob: -11.850754737854004
    6. ' reverse' → logprob: -12.100754737854004
    7. 're' → logprob: -12.350754737854004
    8. '  ' → logprob: -13.475754737854004
    9. '    ' → logprob: -14.725754737854004
    10. 'reverse' → logprob: -16.350753784179688

Token 294: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007861602935008705
    2. '60' → logprob: -7.750786304473877
    3. ' ' → logprob: -8.000785827636719
    4. ' (' → logprob: -11.250785827636719
    5. '61' → logprob: -12.250785827636719
    6. '   ' → logprob: -13.500785827636719
    7. '(
' → logprob: -15.125785827636719
    8. '  ' → logprob: -15.875785827636719
    9. '(n' → logprob: -15.875785827636719
    10. '[' → logprob: -16.12578582763672

Token 295: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0003886086633428931
    2. ' ' → logprob: -8.000388145446777
    3. '61' → logprob: -10.375388145446777
    4. '6' → logprob: -10.875388145446777
    5. '   ' → logprob: -14.000388145446777
    6. '59' → logprob: -14.250388145446777
    7. '  ' → logprob: -14.750388145446777
    8. '(' → logprob: -14.750388145446777
    9. '63' → logprob: -15.750388145446777
    10. '62' → logprob: -16.187889099121094

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09605278074741364
    2. '5' → logprob: -2.971052885055542
    3. '6' → logprob: -3.846052885055542
    4. ' ,' → logprob: -4.721052646636963
    5. '9' → logprob: -5.971052646636963
    6. '7' → logprob: -6.221052646636963
    7. '0' → logprob: -6.596052646636963
    8. ' -' → logprob: -6.596052646636963
    9. '-' → logprob: -6.596052646636963
    10. ',-' → logprob: -7.721052646636963

Token 297: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019307781476527452
    2. ' -' → logprob: -6.2519307136535645
    3. ' ' → logprob: -13.501931190490723
    4. '0' → logprob: -15.626931190490723
    5. '   ' → logprob: -16.501930236816406
    6. '  ' → logprob: -16.501930236816406
    7. '1' → logprob: -16.501930236816406
    8. '6' → logprob: -17.001930236816406
    9. '7' → logprob: -17.751930236816406
    10. '19' → logprob: -17.751930236816406

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.625005722045898
    4. '```' → logprob: -15.875005722045898
    5. '
' → logprob: -16.6250057220459
    6. '  ' → logprob: -17.0625057220459
    7. '-' → logprob: -17.2500057220459
    8. '

' → logprob: -17.7500057220459
    9. '``' → logprob: -17.7500057220459
    10. '2' → logprob: -17.8125057220459

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00325994985178113
    2. ',-' → logprob: -6.503260135650635
    3. '-' → logprob: -6.628260135650635
    4. ' ,' → logprob: -7.878260135650635
    5. ' -' → logprob: -10.253259658813477
    6. '1' → logprob: -11.628259658813477
    7. ' ,-' → logprob: -11.753259658813477
    8. '   ' → logprob: -13.378259658813477
    9. ',
' → logprob: -14.628259658813477
    10. '-,' → logprob: -15.253259658813477

Token 300: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.038047123700380325
    2. ' -' → logprob: -3.2880470752716064
    3. ' ' → logprob: -12.413046836853027
    4. '   ' → logprob: -14.538046836853027
    5. ')' → logprob: -14.913046836853027
    6. '-step' → logprob: -15.288046836853027
    7. '```' → logprob: -15.788046836853027
    8. '):
' → logprob: -16.038047790527344
    9. '-)' → logprob: -16.038047790527344
    10. '  ' → logprob: -16.413047790527344

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.625003814697266
    4. '```' → logprob: -18.875003814697266
    5. '  ' → logprob: -19.625003814697266
    6. '2' → logprob: -19.625003814697266
    7. '
' → logprob: -19.750003814697266
    8. ')' → logprob: -19.875003814697266
    9. '１' → logprob: -20.375003814697266
    10. '

' → logprob: -21.000003814697266

Token 302: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011386027559638023
    2. '):
' → logprob: -5.011385917663574
    3. ' ):' → logprob: -5.386385917663574
    4. ' ):
' → logprob: -10.386385917663574
    5. ':' → logprob: -10.761385917663574
    6. '   ' → logprob: -11.886385917663574
    7. ',' → logprob: -12.011385917663574
    8. '):
' → logprob: -12.011385917663574
    9. ')' → logprob: -12.136385917663574
    10. ' :' → logprob: -12.886385917663574

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012636666186153889
    2. '   ' → logprob: -4.637636661529541
    3. ' if' → logprob: -7.012636661529541
    4. '    ' → logprob: -7.512636661529541
    5. '        
' → logprob: -8.3876371383667
    6. 'if' → logprob: -8.3876371383667
    7. ' for' → logprob: -9.1376371383667
    8. ' best' → logprob: -9.3876371383667
    9. '    
' → logprob: -9.7626371383667
    10. '```' → logprob: -9.7626371383667

Token 304: ' #' (ID: 1069)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -1.480324387550354
    2. 'best' → logprob: -1.605324387550354
    3. ' pivot' → logprob: -1.605324387550354
    4. '   ' → logprob: -2.2303242683410645
    5. ' best' → logprob: -2.3553242683410645
    6. ' candidate' → logprob: -3.4803242683410645
    7. 'candidate' → logprob: -3.7303242683410645
    8. 'cur' → logprob: -4.2303242683410645
    9. ' cand' → logprob: -4.3553242683410645
    10. 'cand' → logprob: -4.3553242683410645

Token 305: ' Vér' (ID: 159169)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.9496462941169739
    2. 'best' → logprob: -1.449646234512329
    3. 'candidate' → logprob: -2.449646234512329
    4. 'cur' → logprob: -2.574646234512329
    5. 'found' → logprob: -3.199646234512329
    6. 'cand' → logprob: -3.324646234512329
    7. 'chosen' → logprob: -4.324646472930908
    8. 'pos' → logprob: -4.324646472930908
    9. 'p' → logprob: -4.449646472930908
    10. '   ' → logprob: -4.699646472930908

Token 306: 'ifie' (ID: 46409)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7382305264472961
    2. 'ifier' → logprob: -0.9882305264472961
    3. 'ifie' → logprob: -2.4882304668426514
    4. '   ' → logprob: -3.9882304668426514
    5. 'ifiez' → logprob: -4.3632307052612305
    6. 'ify' → logprob: -4.4882307052612305
    7. ' if' → logprob: -4.6132307052612305
    8. 'ifié' → logprob: -5.2382307052612305
    9. 'ifi' → logprob: -6.4882307052612305
    10. 'ified' → logprob: -6.7382307052612305

Token 307: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08578204363584518
    2. 'if' → logprob: -3.960782051086426
    3. '   ' → logprob: -3.960782051086426
    4. ' si' → logprob: -4.085782051086426
    5. ' next' → logprob: -5.210782051086426
    6. ' les' → logprob: -5.210782051086426
    7. '    ' → logprob: -6.460782051086426
    8. ' la' → logprob: -6.585782051086426
    9. '       ' → logprob: -6.710782051086426
    10. ' not' → logprob: -7.210782051086426

Token 308: ' le' (ID: 505)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.19356699287891388
    2. ' not' → logprob: -3.1935670375823975
    3. ' sums' → logprob: -3.1935670375823975
    4. ' remain' → logprob: -3.3185670375823975
    5. 'any' → logprob: -3.9435670375823975
    6. ' i' → logprob: -4.443566799163818
    7. 'remain' → logprob: -4.443566799163818
    8. 's' → logprob: -5.693566799163818
    9. 'not' → logprob: -6.068566799163818
    10. ' True' → logprob: -6.818566799163818

Token 309: ' bit' (ID: 3546)
  Prédit: ' remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remain' → logprob: -1.6183853149414062
    2. ' any' → logprob: -1.7433853149414062
    3. 'remain' → logprob: -1.8683853149414062
    4. ' not' → logprob: -2.4933853149414062
    5. ' i' → logprob: -2.8683853149414062
    6. 'any' → logprob: -3.1183853149414062
    7. ' bit' → logprob: -3.1183853149414062
    8. ' best' → logprob: -3.3683853149414062
    9. 'bit' → logprob: -3.7433853149414062
    10. 'best' → logprob: -3.8683853149414062

Token 310: ' i' (ID: 575)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1191401481628418
    2. ' is' → logprob: -1.1191401481628418
    3. ' ' → logprob: -1.6191401481628418
    4. ' not' → logprob: -3.119140148162842
    5. ' present' → logprob: -3.869140148162842
    6. ' i' → logprob: -3.994140148162842
    7. 's' → logprob: -4.244140148162842
    8. ' est' → logprob: -5.119140148162842
    9. ' s' → logprob: -5.244140148162842
    10. ' has' → logprob: -5.494140148162842

Token 311: ' du' (ID: 1462)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.49038034677505493
    2. ' in' → logprob: -1.1153802871704102
    3. ' is' → logprob: -3.74038028717041
    4. ' n' → logprob: -4.86538028717041
    5. ' present' → logprob: -5.11538028717041
    6. ' ' → logprob: -5.61538028717041
    7. ' not' → logprob: -5.74038028717041
    8. ' dans' → logprob: -5.86538028717041
    9. ' set' → logprob: -6.36538028717041
    10. ' des' → logprob: -6.86538028717041

Token 312: ' XOR' (ID: 147209)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22822514176368713
    2. ' sums' → logprob: -1.6032251119613647
    3. ' s' → logprob: -6.728225231170654
    4. 'x' → logprob: -7.603225231170654
    5. ' ' → logprob: -8.228224754333496
    6. 'sum' → logprob: -8.853224754333496
    7. ' x' → logprob: -9.228224754333496
    8. '   ' → logprob: -9.540724754333496
    9. 'remain' → logprob: -9.665724754333496
    10. 'a' → logprob: -9.665724754333496

Token 313: ' global' (ID: 5466)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7343834638595581
    2. ' sums' → logprob: -1.484383463859558
    3. ' total' → logprob: -1.984383463859558
    4. 'total' → logprob: -3.1093835830688477
    5. ' de' → logprob: -3.7343835830688477
    6. '_s' → logprob: -4.109383583068848
    7. ' totals' → logprob: -4.234383583068848
    8. '=' → logprob: -4.484383583068848
    9. ' =' → logprob: -4.609383583068848
    10. ' ^=' → logprob: -5.109383583068848

Token 314: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.22592677175998688
    2. 's' → logprob: -2.1009268760681152
    3. ' is' → logprob: -3.1009268760681152
    4. ' s' → logprob: -4.975926876068115
    5. 'est' → logprob: -5.225926876068115
    6. ' &' → logprob: -5.725926876068115
    7. ' a' → logprob: -5.725926876068115
    8. ' de' → logprob: -6.475926876068115
    9. ' sums' → logprob: -6.600926876068115
    10. ' n' → logprob: -6.725926876068115

Token 315: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15365387499332428
    2. '0' → logprob: -2.903653860092163
    3. ' set' → logprob: -3.028653860092163
    4. ' ' → logprob: -3.403653860092163
    5. ' not' → logprob: -5.653654098510742
    6. 'set' → logprob: -7.028654098510742
    7. 's' → logprob: -7.278654098510742
    8. ' (' → logprob: -8.653654098510742
    9. '   ' → logprob: -8.778654098510742
    10. '```' → logprob: -9.153654098510742

Token 316: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.044916629791259766
    2. ' ' → logprob: -3.1699166297912598
    3. '0' → logprob: -6.29491662979126
    4. 'un' → logprob: -10.169916152954102
    5. ' True' → logprob: -11.544916152954102
    6. 'True' → logprob: -12.419916152954102
    7. '   ' → logprob: -12.544916152954102
    8. 'z' → logprob: -12.544916152954102
    9. 'l' → logprob: -12.919916152954102
    10. '```' → logprob: -13.294916152954102

Token 317: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015093892579898238
    2. '0' → logprob: -6.501509189605713
    3. ' ' → logprob: -12.001509666442871
    4. 'l' → logprob: -15.876509666442871
    5. '```' → logprob: -16.126508712768555
    6. '
' → logprob: -16.376508712768555
    7. 'True' → logprob: -16.376508712768555
    8. '   ' → logprob: -16.626508712768555
    9. 'é' → logprob: -17.251508712768555
    10. 's' → logprob: -17.251508712768555

Token 318: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10169592499732971
    2. ':' → logprob: -3.101696014404297
    3. ' if' → logprob: -4.101696014404297
    4. ' and' → logprob: -4.226696014404297
    5. '   ' → logprob: -4.726696014404297
    6. ',' → logprob: -5.726696014404297
    7. ' :' → logprob: -5.976696014404297
    8. ' et' → logprob: -6.851696014404297
    9. ':
' → logprob: -7.101696014404297
    10. 'if' → logprob: -7.351696014404297

Token 319: ' sinon' (ID: 52915)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.15588463842868805
    2. '       ' → logprob: -2.4058847427368164
    3. 'continue' → logprob: -4.155884742736816
    4. '   ' → logprob: -4.280884742736816
    5. '           ' → logprob: -4.405884742736816
    6. '    ' → logprob: -5.155884742736816
    7. ' if' → logprob: -5.530884742736816
    8. ' continuer' → logprob: -7.405884742736816
    9. 'contin' → logprob: -7.905884742736816
    10. '        ' → logprob: -8.030884742736816

Token 320: ' pas' (ID: 2173)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.11512061953544617
    2. '   ' → logprob: -2.7401206493377686
    3. '       ' → logprob: -3.8651206493377686
    4. 'continue' → logprob: -4.3651204109191895
    5. ' continuer' → logprob: -5.3651204109191895
    6. '	continue' → logprob: -6.3651204109191895
    7. '           ' → logprob: -6.6151204109191895
    8. '    ' → logprob: -6.8651204109191895
    9. ' ' → logprob: -7.8651204109191895
    10. ' if' → logprob: -7.9901204109191895

Token 321: ' la' (ID: 557)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8296762108802795
    2. ' continue' → logprob: -1.5796761512756348
    3. 'possible' → logprob: -2.4546761512756348
    4. '   ' → logprob: -2.8296761512756348
    5. ' possible' → logprob: -2.8296761512756348
    6. 'contin' → logprob: -4.204676151275635
    7. ' la' → logprob: -4.204676151275635
    8. ' de' → logprob: -4.454676151275635
    9. ' nécessaire' → logprob: -4.454676151275635
    10. ' besoin' → logprob: -4.579676151275635

Token 322: ' peine' (ID: 62983)
  Prédit: ' peine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peine' → logprob: -0.017247676849365234
    2. 'suite' → logprob: -4.517247676849365
    3. 'continue' → logprob: -7.017247676849365
    4. ' suite' → logprob: -7.142247676849365
    5. 'ction' → logprob: -7.767247676849365
    6. '   ' → logprob: -7.767247676849365
    7. 'bonne' → logprob: -7.767247676849365
    8. 's' → logprob: -8.017248153686523
    9. 'ss' → logprob: -8.517248153686523
    10. 'contin' → logprob: -8.767248153686523

Token 323: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013264105655252934
    2. '   ' → logprob: -5.138264179229736
    3. ' if' → logprob: -6.013264179229736
    4. ':' → logprob: -6.388264179229736
    5. '           ' → logprob: -7.138264179229736
    6. ',' → logprob: -7.513264179229736
    7. '    ' → logprob: -7.763264179229736
    8. ' for' → logprob: -7.888264179229736
    9. ' de' → logprob: -7.888264179229736
    10. ' continue' → logprob: -8.638263702392578

Token 324: ''ess' (ID: 94961)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.22790154814720154
    2. 'contin' → logprob: -1.727901577949524
    3. ' continue' → logprob: -4.227901458740234
    4. '   ' → logprob: -5.727901458740234
    5. 'e' → logprob: -5.852901458740234
    6. 'continue' → logprob: -6.227901458740234
    7. ' poursuivre' → logprob: -7.477901458740234
    8. ' if' → logprob: -7.852901458740234
    9. ' for' → logprob: -8.477901458740234
    10. ' continues' → logprob: -8.477901458740234

Token 325: 'ayer' (ID: 1630)
  Prédit: 'ayer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayer' → logprob: -0.023427506908774376
    2. 'er' → logprob: -5.523427486419678
    3. 'a' → logprob: -5.773427486419678
    4. 'ent' → logprob: -5.898427486419678
    5. 'uyer' → logprob: -6.148427486419678
    6. 'oyer' → logprob: -6.273427486419678
    7. 'aye' → logprob: -6.273427486419678
    8. 'e' → logprob: -6.398427486419678
    9. 'ay' → logprob: -6.648427486419678
    10. 'é' → logprob: -6.648427486419678

Token 326: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012008129619061947
    2. '   ' → logprob: -4.637008190155029
    3. ':' → logprob: -7.137008190155029
    4. ' if' → logprob: -7.637008190155029
    5. '    ' → logprob: -8.387007713317871
    6. ' for' → logprob: -8.762007713317871
    7. ',' → logprob: -9.137007713317871
    8. '           ' → logprob: -9.387007713317871
    9. '        
' → logprob: -10.012007713317871
    10. '.' → logprob: -10.137007713317871

Token 327: ' construire' (ID: 92473)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.8605642318725586
    2. ' continue' → logprob: -1.4855642318725586
    3. ' for' → logprob: -2.2355642318725586
    4. 'contin' → logprob: -2.4855642318725586
    5. 'continue' → logprob: -2.6105642318725586
    6. 'for' → logprob: -3.1105642318725586
    7. ' trouver' → logprob: -4.485564231872559
    8. ' set' → logprob: -5.735564231872559
    9. 'set' → logprob: -6.235564231872559
    10. ' x' → logprob: -6.360564231872559

Token 328: ' une' (ID: 2463)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5825627446174622
    2. ' if' → logprob: -1.5825626850128174
    3. '   ' → logprob: -2.3325626850128174
    4. 'if' → logprob: -3.5825626850128174
    5. '<|end|>' → logprob: -3.7075626850128174
    6. 'continue' → logprob: -4.2075629234313965
    7. ' ' → logprob: -5.2075629234313965
    8. '           ' → logprob: -5.2075629234313965
    9. ' un' → logprob: -5.3325629234313965
    10. ' la' → logprob: -5.4575629234313965

Token 329: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.5439043641090393
    2. 'base' → logprob: -0.9189043641090393
    3. ' ' → logprob: -4.4189043045043945
    4. '   ' → logprob: -6.5439043045043945
    5. 'basis' → logprob: -6.7939043045043945
    6. 'mask' → logprob: -7.0439043045043945
    7. 'candidate' → logprob: -7.1689043045043945
    8. ' basis' → logprob: -7.2939043045043945
    9. ' mask' → logprob: -7.6689043045043945
    10. ' candidate' → logprob: -7.7939043045043945

Token 330: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6705002784729004
    2. ':' → logprob: -1.6705002784729004
    3. '   ' → logprob: -1.6705002784729004
    4. '    ' → logprob: -3.6705002784729004
    5. ' if' → logprob: -3.6705002784729004
    6. '        
' → logprob: -4.2955002784729
    7. ',' → logprob: -4.4205002784729
    8. '    
' → logprob: -4.6705002784729
    9. ' :' → logprob: -5.7955002784729
    10. ' ' → logprob: -5.9205002784729

Token 331: ' ce' (ID: 2357)
  Prédit: ' ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.807792603969574
    2. ' i' → logprob: -1.4327926635742188
    3. ' cet' → logprob: -2.4327926635742188
    4. ' cette' → logprob: -3.0577926635742188
    5. 'i' → logprob: -3.3077926635742188
    6. ' this' → logprob: -3.3077926635742188
    7. 'cet' → logprob: -3.4327926635742188
    8. ' ces' → logprob: -3.6827926635742188
    9. ' les' → logprob: -4.932792663574219
    10. 'ce' → logprob: -5.307792663574219

Token 332: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.027731094509363174
    2. 'bit' → logprob: -3.65273118019104
    3. ' i' → logprob: -7.402730941772461
    4. '   ' → logprob: -7.652730941772461
    5. 'i' → logprob: -8.777730941772461
    6. '       ' → logprob: -9.902730941772461
    7. ' ' → logprob: -10.027730941772461
    8. ' bits' → logprob: -11.027730941772461
    9. ' ' → logprob: -11.152730941772461
    10. ' #' → logprob: -11.527730941772461

Token 333: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06045226380228996
    2. '   ' → logprob: -3.1854522228240967
    3. ':' → logprob: -4.310452461242676
    4. ' if' → logprob: -7.060452461242676
    5. ':
' → logprob: -7.310452461242676
    6. '    
' → logprob: -8.060452461242676
    7. '
' → logprob: -8.185452461242676
    8. '        
' → logprob: -8.310452461242676
    9. '<|end|>' → logprob: -8.560452461242676
    10. ',' → logprob: -8.685452461242676

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05671272799372673
    2. '   ' → logprob: -3.9317126274108887
    3. '    ' → logprob: -4.556712627410889
    4. '        
' → logprob: -4.681712627410889
    5. ':' → logprob: -5.431712627410889
    6. '     
' → logprob: -5.556712627410889
    7. '    
' → logprob: -6.181712627410889
    8. '  
' → logprob: -6.806712627410889
    9. ' ' → logprob: -7.056712627410889
    10. ' 
' → logprob: -7.431712627410889

Token 335: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06801523268222809
    2. 'if' (adapté à ' if') → logprob: -3.3180153369903564
    3. '       ' → logprob: -3.8180153369903564
    4. '   ' → logprob: -5.818015098571777
    5. '    ' → logprob: -6.068015098571777
    6. ' 
' → logprob: -6.693015098571777
    7. ' continue' → logprob: -8.193015098571777
    8. '        
' → logprob: -8.568015098571777
    9. ' ' → logprob: -8.818015098571777
    10. '     
' → logprob: -8.818015098571777

Token 336: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5631093382835388
    2. '(s' → logprob: -1.0631093978881836
    3. '((' → logprob: -3.4381093978881836
    4. ' sums' → logprob: -3.6881093978881836
    5. ' ((' → logprob: -4.188109397888184
    6. 's' → logprob: -5.063109397888184
    7. ' not' → logprob: -5.313109397888184
    8. '(sum' → logprob: -7.688109397888184
    9. '   ' → logprob: -7.938109397888184
    10. '(not' → logprob: -8.313109397888184

Token 337: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4328177571296692
    2. '(s' → logprob: -1.6828176975250244
    3. ' sums' → logprob: -1.9328176975250244
    4. ' (' → logprob: -4.0578179359436035
    5. '   ' → logprob: -5.9328179359436035
    6. ' s' → logprob: -8.807817459106445
    7. ' ' → logprob: -8.932817459106445
    8. 'sum' → logprob: -9.057817459106445
    9. '  ' → logprob: -9.807817459106445
    10. '((' → logprob: -9.995317459106445

Token 338: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -6.456358823925257e-05
    2. 's' → logprob: -10.375064849853516
    3. 'um' → logprob: -11.625064849853516
    4. '   ' → logprob: -12.125064849853516
    5. ')' → logprob: -12.500064849853516
    6. '    ' → logprob: -12.625064849853516
    7. ' sums' → logprob: -12.625064849853516
    8. ' ums' → logprob: -13.875064849853516
    9. ' ' → logprob: -14.250064849853516
    10. 'umps' → logprob: -14.500064849853516

Token 339: ' >>' (ID: 6832)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.3330867290496826
    2. '>>' → logprob: -1.4580867290496826
    3. ' >>' → logprob: -3.3330867290496826
    4. '&' → logprob: -4.208086967468262
    5. ' ' → logprob: -11.083086967468262
    6. '   ' → logprob: -11.083086967468262
    7. '>>>' → logprob: -11.833086967468262
    8. ' ' → logprob: -12.458086967468262
    9. '&gt' → logprob: -12.458086967468262
    10. ' &
' → logprob: -13.833086967468262

Token 340: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007099286303855479
    2. ' i' → logprob: -7.2507100105285645
    3. ' ' → logprob: -17.375709533691406
    4. '	i' → logprob: -18.000709533691406
    5. '60' → logprob: -18.625709533691406
    6. '61' → logprob: -18.750709533691406
    7. ')i' → logprob: -19.500709533691406
    8. '   ' → logprob: -20.125709533691406
    9. ')' → logprob: -20.375709533691406
    10. '```' → logprob: -21.000709533691406

Token 341: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006537011358886957
    2. ')&' → logprob: -8.000653266906738
    3. ' )' → logprob: -8.250653266906738
    4. '&' → logprob: -9.875653266906738
    5. ' &' → logprob: -12.375653266906738
    6. '   ' → logprob: -14.875653266906738
    7. '0' → logprob: -15.250653266906738
    8. '1' → logprob: -15.500653266906738
    9. '&)' → logprob: -16.250654220581055
    10. ')
' → logprob: -16.500654220581055

Token 342: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.867041826248169
    2. ' &' → logprob: -0.992041826248169
    3. '&' → logprob: -1.617041826248169
    4. ')&' → logprob: -4.61704158782959
    5. ' )' → logprob: -7.74204158782959
    6. '&amp' → logprob: -10.24204158782959
    7. '   ' → logprob: -10.24204158782959
    8. ' &)' → logprob: -10.74204158782959
    9. '1' → logprob: -11.11704158782959
    10. ' ' → logprob: -11.49204158782959

Token 343: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015035520773380995
    2. ' ' → logprob: -6.5015034675598145
    3. '0' → logprob: -14.251503944396973
    4. '   ' → logprob: -15.126503944396973
    5. ' ' → logprob: -16.564002990722656
    6. '```' → logprob: -17.001502990722656
    7. '
' → logprob: -17.626502990722656
    8. '  ' → logprob: -17.689002990722656
    9. '`' → logprob: -17.689002990722656
    10. '01' → logprob: -18.126502990722656

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.250031471252441
    4. '0' → logprob: -15.375031471252441
    5. '```' → logprob: -17.250032424926758
    6. '01' → logprob: -17.750032424926758
    7. '`' → logprob: -18.562532424926758
    8. '{' → logprob: -18.812532424926758
    9. '  ' → logprob: -19.000032424926758
    10. '' → logprob: -19.500032424926758

Token 345: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7614723443984985
    2. ' ==' → logprob: -0.8864723443984985
    3. ':' → logprob: -2.136472225189209
    4. ')' → logprob: -6.886472225189209
    5. ':
' → logprob: -7.261472225189209
    6. ')==' → logprob: -7.511472225189209
    7. ' :' → logprob: -8.386472702026367
    8. '=' → logprob: -9.136472702026367
    9. '   ' → logprob: -9.511472702026367
    10. '):' → logprob: -10.136472702026367

Token 346: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07980826497077942
    2. ' ' → logprob: -2.954808235168457
    3. '1' → logprob: -3.704808235168457
    4. '   ' → logprob: -11.329808235168457
    5. '    ' → logprob: -15.204808235168457
    6. '  ' → logprob: -15.829808235168457
    7. ' ' → logprob: -16.454809188842773
    8. '```' → logprob: -16.454809188842773
    9. '       ' → logprob: -16.767309188842773
    10. '=' → logprob: -16.954809188842773

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035981353372335434
    2. '1' → logprob: -4.035981178283691
    3. ' ' → logprob: -4.035981178283691
    4. '   ' → logprob: -12.848481178283691
    5. '۰' → logprob: -14.598481178283691
    6. '```' → logprob: -15.660981178283691
    7. '  ' → logprob: -15.910981178283691
    8. '	' → logprob: -15.910981178283691
    9. '=' → logprob: -16.035982131958008
    10. ')' → logprob: -16.410982131958008

Token 348: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17146103084087372
    2. ':
' → logprob: -1.9214609861373901
    3. '       ' → logprob: -4.54646110534668
    4. '           ' → logprob: -8.42146110534668
    5. ' continue' → logprob: -8.67146110534668
    6. 'continue' → logprob: -9.67146110534668
    7. '   ' → logprob: -9.79646110534668
    8. ' :' → logprob: -11.04646110534668
    9. ':
' → logprob: -11.42146110534668
    10. ' :
' → logprob: -11.42146110534668

Token 349: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032489627599716187
    2. ' continue' → logprob: -4.157489776611328
    3. ':' → logprob: -4.532489776611328
    4. 'continue' → logprob: -5.532489776611328
    5. ':
' → logprob: -7.157489776611328
    6. ' continues' → logprob: -7.782489776611328
    7. '           ' → logprob: -8.907489776611328
    8. '	continue' → logprob: -9.657489776611328
    9. '   ' → logprob: -10.032489776611328
    10. '        
' → logprob: -10.282489776611328

Token 350: ' di' (ID: 1320)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4852715730667114
    2. ' continue' → logprob: -1.4852715730667114
    3. 'continue' → logprob: -1.8602715730667114
    4. '           ' → logprob: -6.235271453857422
    5. '	continue' → logprob: -8.610271453857422
    6. '   ' → logprob: -8.860271453857422
    7. '               ' → logprob: -9.860271453857422
    8. ' continues' → logprob: -11.235271453857422
    9. '_continue' → logprob: -11.235271453857422
    10. '```' → logprob: -11.860271453857422

Token 351: ' =' (ID: 314)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.9308682680130005
    2. 'f' → logprob: -1.4308682680130005
    3. '   ' → logprob: -1.9308682680130005
    4. 'c' → logprob: -3.180868148803711
    5. 't' → logprob: -3.180868148803711
    6. 's' → logprob: -3.305868148803711
    7. 'ction' → logprob: -4.305868148803711
    8. '       ' → logprob: -4.430868148803711
    9. 'r' → logprob: -4.930868148803711
    10. ' ' → logprob: -5.055868148803711

Token 352: ' -' (ID: 533)
  Prédit: ' remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remain' → logprob: -1.2579492330551147
    2. 'remain' → logprob: -1.3829492330551147
    3. '-' → logprob: -1.7579492330551147
    4. 'None' → logprob: -2.3829493522644043
    5. ' None' → logprob: -3.3829493522644043
    6. '   ' → logprob: -3.5079493522644043
    7. '[]' → logprob: -3.6329493522644043
    8. '0' → logprob: -3.7579493522644043
    9. ' -' → logprob: -4.257949352264404
    10. 'set' → logprob: -4.757949352264404

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.196732960641384e-05
    2. ' ' → logprob: -10.000082015991211
    3. '2' → logprob: -11.375082015991211
    4. 'i' → logprob: -11.500082015991211
    5. '   ' → logprob: -11.875082015991211
    6. '100' → logprob: -13.375082015991211
    7. '10' → logprob: -13.625082015991211
    8. '-' → logprob: -13.875082015991211
    9. ' i' → logprob: -13.875082015991211
    10. 'float' → logprob: -14.875082015991211

Token 354: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 355: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: ' Ind' (ID: 2761)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7326412200927734
    2. 'continue' → logprob: -0.7326412200927734
    3. '0' → logprob: -4.482641220092773
    4. '       ' → logprob: -4.857641220092773
    5. 'None' → logprob: -5.357641220092773
    6. 'di' → logprob: -5.857641220092773
    7. '           ' → logprob: -6.232641220092773
    8. ' None' → logprob: -6.232641220092773
    9. '-' → logprob: -6.607641220092773
    10. 'i' → logprob: -6.607641220092773

Token 357: 'ice' (ID: 603)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03885503485798836
    2. 'ex' → logprob: -3.4138550758361816
    3. 'di' → logprob: -6.538855075836182
    4. 'i' → logprob: -7.038855075836182
    5. ' -' → logprob: -7.413855075836182
    6. 'ices' → logprob: -7.913855075836182
    7. 'efined' → logprob: -8.163854598999023
    8. '-ex' → logprob: -8.288854598999023
    9. '#' → logprob: -8.538854598999023
    10. 'e' → logprob: -8.663854598999023

Token 358: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: ''un' (ID: 9788)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.02349935844540596
    2. ' élément' → logprob: -4.273499488830566
    3. 'element' → logprob: -5.023499488830566
    4. 'é' → logprob: -8.148499488830566
    5. 'él' → logprob: -8.148499488830566
    6. 'el' → logprob: -8.398499488830566
    7. 'candidate' → logprob: -8.398499488830566
    8. 'remain' → logprob: -8.398499488830566
    9. 'l' → logprob: -8.648499488830566
    10. 'indice' → logprob: -8.773499488830566

Token 361: ' qui' (ID: 2780)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -1.1330361366271973
    2. '       ' → logprob: -2.0080361366271973
    3. 'candidate' → logprob: -2.5080361366271973
    4. 'dans' → logprob: -2.5080361366271973
    5. ' candidat' → logprob: -2.6330361366271973
    6. '_candidate' → logprob: -3.2580361366271973
    7. ' parmi' → logprob: -3.3830361366271973
    8. '   ' → logprob: -3.5080361366271973
    9. '<|end|>' → logprob: -3.5080361366271973
    10. ' candidate' → logprob: -3.7580361366271973

Token 362: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3259904384613037
    2. ' a' → logprob: -1.3259904384613037
    3. 'set' → logprob: -2.3259904384613037
    4. ' possède' → logprob: -2.4509904384613037
    5. 'poss' → logprob: -2.4509904384613037
    6. ' has' → logprob: -3.4509904384613037
    7. ' have' → logprob: -3.7009904384613037
    8. ' set' → logprob: -3.9509904384613037
    9. 'have' → logprob: -4.450990676879883
    10. ' pourrait' → logprob: -4.575990676879883

Token 363: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.830798327922821
    2. '1' → logprob: -1.5807983875274658
    3. ' i' → logprob: -1.7057983875274658
    4. ' (' → logprob: -2.455798387527466
    5. ' ' → logprob: -3.705798387527466
    6. '(i' → logprob: -3.830798387527466
    7. ' un' → logprob: -4.955798149108887
    8. ' remain' → logprob: -5.080798149108887
    9. ' a' → logprob: -5.580798149108887
    10. '(' → logprob: -5.705798149108887

Token 364: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.05465995520353317
    2. 'i' → logprob: -3.054659843444824
    3. ' bit' → logprob: -5.554659843444824
    4. ' i' → logprob: -6.304659843444824
    5. 'ith' → logprob: -8.804659843444824
    6. '```' → logprob: -9.804659843444824
    7. 'ibit' → logprob: -9.929659843444824
    8. ' ith' → logprob: -10.429659843444824
    9. ' ' → logprob: -11.054659843444824
    10. '1' → logprob: -11.179659843444824

Token 365: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5878172516822815
    2. 'i' → logprob: -1.5878171920776367
    3. '1' → logprob: -1.8378171920776367
    4. ' set' → logprob: -3.0878171920776367
    5. ' ' → logprob: -3.7128171920776367
    6. 'set' → logprob: -5.587817192077637
    7. '   ' → logprob: -5.962817192077637
    8. ' à' → logprob: -6.462817192077637
    9. '       ' → logprob: -7.837817192077637
    10. ' de' → logprob: -8.212817192077637

Token 366: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9488359093666077
    2. ' ' → logprob: -1.448835849761963
    3. '   ' → logprob: -1.698835849761963
    4. '       ' → logprob: -2.323835849761963
    5. ' à' → logprob: -2.948835849761963
    6. '=' → logprob: -5.198835849761963
    7. ' ' → logprob: -5.448835849761963
    8. '```' → logprob: -5.573835849761963
    9. '           ' → logprob: -5.948835849761963
    10. ' =' → logprob: -5.948835849761963

Token 367: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035798799945041537
    2. ' ' → logprob: -8.000357627868652
    3. '0' → logprob: -11.875357627868652
    4. 'i' → logprob: -12.500357627868652
    5. '   ' → logprob: -12.875357627868652
    6. 'set' → logprob: -13.000357627868652
    7. '`' → logprob: -13.500357627868652
    8. 'un' → logprob: -13.625357627868652
    9. '
' → logprob: -13.875357627868652
    10. '```' → logprob: -14.250357627868652

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027254095766693354
    2. ' ' → logprob: -8.250272750854492
    3. '0' → logprob: -11.500272750854492
    4. 'i' → logprob: -14.625272750854492
    5. '   ' → logprob: -15.750272750854492
    6. '```' → logprob: -16.750272750854492
    7. '`' → logprob: -17.250272750854492
    8. ' i' → logprob: -17.250272750854492
    9. '
' → logprob: -17.625272750854492
    10. ' set' → logprob: -17.625272750854492

Token 369: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32793211936950684
    2. '           ' → logprob: -1.5779321193695068
    3. 'for' → logprob: -2.702932119369507
    4. '       ' → logprob: -5.702932357788086
    5. '   ' → logprob: -6.202932357788086
    6. '
' → logprob: -8.577932357788086
    7. '    ' → logprob: -9.452932357788086
    8. '	       ' → logprob: -9.452932357788086
    9. '	for' → logprob: -9.577932357788086
    10. '            
' → logprob: -9.577932357788086

Token 372: ' Recherche' (ID: 114815)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015172583051025867
    2. ' for' → logprob: -4.515172481536865
    3. '           ' → logprob: -5.765172481536865
    4. '       ' → logprob: -7.515172481536865
    5. 'best' → logprob: -8.890172958374023
    6. 'found' → logprob: -9.140172958374023
    7. '   ' → logprob: -9.390172958374023
    8. 'max' → logprob: -10.265172958374023
    9. 'candidate' → logprob: -10.640172958374023
    10. 'while' → logprob: -11.765172958374023

Token 373: ' d' (ID: 272)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026527974754571915
    2. 'for' → logprob: -4.2765278816223145
    3. ' dans' → logprob: -5.7765278816223145
    4. ' in' → logprob: -6.5265278816223145
    5. '           ' → logprob: -6.9015278816223145
    6. '       ' → logprob: -7.0265278816223145
    7. '	for' → logprob: -7.2765278816223145
    8. ' x' → logprob: -7.6515278816223145
    9. ' des' → logprob: -7.9015278816223145
    10. 'd' → logprob: -8.026528358459473

Token 374: ''un' (ID: 9788)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.8107121586799622
    2. ' un' → logprob: -1.3107120990753174
    3. ' for' → logprob: -2.9357120990753174
    4. 'x' → logprob: -3.0607120990753174
    5. ' idx' → logprob: -3.3107120990753174
    6. 'next' → logprob: -3.5607120990753174
    7. ' x' → logprob: -3.6857120990753174
    8. ' ind' → logprob: -4.3107123374938965
    9. 'for' → logprob: -4.4357123374938965
    10. 'un' → logprob: -4.9357123374938965

Token 375: ' élément' (ID: 99627)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4298917055130005
    2. ' j' → logprob: -2.054891586303711
    3. 'candidate' → logprob: -2.179891586303711
    4. 'element' → logprob: -2.304891586303711
    5. 'x' → logprob: -2.554891586303711
    6. ' candidate' → logprob: -2.554891586303711
    7. 'elem' → logprob: -3.179891586303711
    8. 'indice' → logprob: -3.429891586303711
    9. ' element' → logprob: -3.554891586303711
    10. 'idx' → logprob: -3.554891586303711

Token 376: ' parmi' (ID: 51713)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42295926809310913
    2. ' dans' → logprob: -2.297959327697754
    3. 'dans' → logprob: -2.922959327697754
    4. '<|end|>' → logprob: -2.922959327697754
    5. ' x' → logprob: -3.672959327697754
    6. ' j' → logprob: -3.922959327697754
    7. ' with' → logprob: -4.172959327697754
    8. 'in' → logprob: -4.297959327697754
    9. ' within' → logprob: -4.672959327697754
    10. 'x' → logprob: -5.047959327697754

Token 377: ' les' (ID: 1341)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.18013805150985718
    2. ' remain' → logprob: -1.805138111114502
    3. 'list' → logprob: -9.555137634277344
    4. '[' → logprob: -9.680137634277344
    5. 'rem' → logprob: -10.055137634277344
    6. '   ' → logprob: -10.180137634277344
    7. 'remaining' → logprob: -10.305137634277344
    8. 'a' → logprob: -10.430137634277344
    9. ' list' → logprob: -10.992637634277344
    10. ' ' → logprob: -11.180137634277344

Token 378: ' rest' (ID: 2867)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.11374176293611526
    2. ' remain' → logprob: -2.238741874694824
    3. 'list' → logprob: -8.113741874694824
    4. ' list' → logprob: -8.113741874694824
    5. '[' → logprob: -9.113741874694824
    6. 'rem' → logprob: -9.988741874694824
    7. 'remaining' → logprob: -10.238741874694824
    8. '   ' → logprob: -10.738741874694824
    9. ' [' → logprob: -11.113741874694824
    10. ' ' → logprob: -11.238741874694824

Token 379: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.5823408961296082
    2. 'ants' → logprob: -1.207340955734253
    3. 'remain' → logprob: -2.332340955734253
    4. ' remain' → logprob: -4.082340717315674
    5. '   ' → logprob: -4.332340717315674
    6. 'nant' → logprob: -6.207340717315674
    7. 'antes' → logprob: -6.457340717315674
    8. 'nants' → logprob: -6.457340717315674
    9. 'remaining' → logprob: -6.707340717315674
    10. 'e' → logprob: -6.957340717315674

Token 380: ' qui' (ID: 2780)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9110022187232971
    2. '           ' → logprob: -1.2860021591186523
    3. '<|end|>' → logprob: -2.0360021591186523
    4. ' dans' → logprob: -3.4110021591186523
    5. ' parmi' → logprob: -3.6610021591186523
    6. ' qui' → logprob: -3.7860021591186523
    7. 'for' → logprob: -3.9110021591186523
    8. ' pour' → logprob: -4.161002159118652
    9. '<|end|>' → logprob: -4.536002159118652
    10. ',' → logprob: -4.661002159118652

Token 381: ' a' (ID: 261)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.3744052052497864
    2. ' a' → logprob: -1.4994051456451416
    3. 'a' → logprob: -2.9994051456451416
    4. 'has' → logprob: -3.9994051456451416
    5. ' possède' → logprob: -4.499405384063721
    6. ' have' → logprob: -5.124405384063721
    7. 'have' → logprob: -7.374405384063721
    8. ':' → logprob: -7.874405384063721
    9. 'poss' → logprob: -8.124404907226562
    10. ' poss' → logprob: -8.124404907226562

Token 382: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.1268682479858398
    2. ' (' → logprob: -1.2518682479858398
    3. ' un' → logprob: -1.6268682479858398
    4. 'i' → logprob: -3.25186824798584
    5. 'le' → logprob: -3.50186824798584
    6. ' bit' → logprob: -3.87686824798584
    7. '(i' → logprob: -4.00186824798584
    8. 'un' → logprob: -4.25186824798584
    9. ' ' → logprob: -4.37686824798584
    10. ' i' → logprob: -4.37686824798584

Token 383: ' bit' (ID: 3546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02935420535504818
    2. 'bit' → logprob: -4.404354095458984
    3. ' i' → logprob: -5.029354095458984
    4. '1' → logprob: -5.029354095458984
    5. ' ' → logprob: -7.029354095458984
    6. '(i' → logprob: -7.029354095458984
    7. ' bit' → logprob: -7.279354095458984
    8. '```' → logprob: -7.904354095458984
    9. ' (' → logprob: -8.279354095458984
    10. '[i' → logprob: -8.529354095458984

Token 384: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04901810362935066
    2. 'i' → logprob: -3.049018144607544
    3. ' ' → logprob: -8.174017906188965
    4. '1' → logprob: -9.549017906188965
    5. '   ' → logprob: -10.424017906188965
    6. '	i' → logprob: -11.174017906188965
    7. '    ' → logprob: -11.549017906188965
    8. '           ' → logprob: -12.049017906188965
    9. ' set' → logprob: -12.299017906188965
    10. '  ' → logprob: -12.799017906188965

Token 385: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.13707153499126434
    2. ' set' → logprob: -2.2620716094970703
    3. '1' → logprob: -5.01207160949707
    4. ' ' → logprob: -5.88707160949707
    5. 'à' → logprob: -6.01207160949707
    6. ' de' → logprob: -6.76207160949707
    7. ' dans' → logprob: -6.76207160949707
    8. ' i' → logprob: -6.88707160949707
    9. 'dans' → logprob: -7.13707160949707
    10. ' ==' → logprob: -7.13707160949707

Token 386: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003812217037193477
    2. ' ' → logprob: -7.875380992889404
    3. '```' → logprob: -14.125381469726562
    4. '0' → logprob: -16.000381469726562
    5. '`' → logprob: -16.625381469726562
    6. '   ' → logprob: -16.750381469726562
    7. '
' → logprob: -18.250381469726562
    8. ' ' → logprob: -18.375381469726562
    9. '``' → logprob: -18.500381469726562
    10. '  ' → logprob: -19.500381469726562

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020532844064291567
    2. ' ' → logprob: -8.500205039978027
    3. '0' → logprob: -14.000205039978027
    4. '```' → logprob: -14.250205039978027
    5. '<|end|>' → logprob: -16.125205993652344
    6. '   ' → logprob: -16.125205993652344
    7. '  ' → logprob: -17.500205993652344
    8. '...' → logprob: -17.937705993652344
    9. '`' → logprob: -18.375205993652344
    10. '[' → logprob: -18.625205993652344

Token 388: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17187882959842682
    2. ' for' → logprob: -1.9218788146972656
    3. '<|end|>' → logprob: -5.421878814697266
    4. 'for' → logprob: -5.921878814697266
    5. ':' → logprob: -6.046878814697266
    6. '<|end|>' → logprob: -7.296878814697266
    7. ',' → logprob: -8.171878814697266
    8. '       ' → logprob: -8.546878814697266
    9. '               ' → logprob: -8.796878814697266
    10. '   ' → logprob: -9.171878814697266

Token 389: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13548769056797028
    2. ' for' → logprob: -2.1354877948760986
    3. 'for' → logprob: -5.3854875564575195
    4. '       ' → logprob: -6.2604875564575195
    5. '		' → logprob: -8.13548755645752
    6. '<|end|>' → logprob: -8.13548755645752
    7. '	       ' → logprob: -8.38548755645752
    8. '            
' → logprob: -8.51048755645752
    9. '   ' → logprob: -8.63548755645752
    10. ',' → logprob: -8.88548755645752

Token 390: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.577236533164978
    2. '           ' → logprob: -0.952236533164978
    3. 'for' (adapté à ' for') → logprob: -2.9522366523742676
    4. '       ' → logprob: -8.95223617553711
    5. ' found' → logprob: -9.82723617553711
    6. '   ' → logprob: -9.82723617553711
    7. '
' → logprob: -9.95223617553711
    8. '            
' → logprob: -9.95223617553711
    9. ' 
' → logprob: -10.82723617553711
    10. ' ' → logprob: -10.95223617553711

Token 391: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.018450379371643
    2. 'x' → logprob: -1.643450379371643
    3. ' j' → logprob: -1.893450379371643
    4. ' idx' → logprob: -2.2684502601623535
    5. 'idx' → logprob: -2.2684502601623535
    6. ' x' → logprob: -3.0184502601623535
    7. 'index' → logprob: -5.1434502601623535
    8. 'num' → logprob: -5.1434502601623535
    9. 'v' → logprob: -5.3934502601623535
    10. '   ' → logprob: -5.3934502601623535

Token 392: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005938397720456123
    2. 'in' → logprob: -5.130938529968262
    3. ' ' → logprob: -12.130938529968262
    4. '	in' → logprob: -13.005938529968262
    5. '  ' → logprob: -14.755938529968262
    6. '    ' → logprob: -14.880938529968262
    7. '   ' → logprob: -15.130938529968262
    8. '_in' → logprob: -15.255938529968262
    9. ' not' → logprob: -15.630938529968262
    10. ' ' → logprob: -16.255937576293945

Token 393: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.42958158254623413
    2. ' remain' → logprob: -1.054581642150879
    3. ' range' → logprob: -7.679581642150879
    4. 'range' → logprob: -8.054581642150879
    5. '   ' → logprob: -10.179581642150879
    6. ' list' → logprob: -11.179581642150879
    7. ' ' → logprob: -11.304581642150879
    8. 'list' → logprob: -11.679581642150879
    9. '    ' → logprob: -12.304581642150879
    10. 'remaining' → logprob: -12.554581642150879

Token 394: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1319730579853058
    2. ':' → logprob: -2.1319730281829834
    3. '               ' → logprob: -5.3819732666015625
    4. '):
' → logprob: -8.881973266601562
    5. '():
' → logprob: -9.381973266601562
    6. '           ' → logprob: -9.631973266601562
    7. ' :
' → logprob: -9.756973266601562
    8. '       ' → logprob: -10.256973266601562
    9. ':
' → logprob: -11.256973266601562
    10. ' :' → logprob: -11.756973266601562

Token 395: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010547225829213858
    2. ' if' → logprob: -7.126054763793945
    3. '<|end|>' → logprob: -8.876054763793945
    4. '                
' → logprob: -10.126054763793945
    5. '           ' → logprob: -11.001054763793945
    6. 'if' → logprob: -11.501054763793945
    7. '	           ' → logprob: -11.876054763793945
    8. '       ' → logprob: -12.126054763793945
    9. '<|end|>' → logprob: -12.251054763793945
    10. ' ' → logprob: -12.751054763793945

Token 396: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6501207947731018
    2. ' if' → logprob: -0.7751207947731018
    3. 'if' (adapté à ' if') → logprob: -4.150120735168457
    4. '                   ' → logprob: -7.025120735168457
    5. '<|end|>' → logprob: -8.025120735168457
    6. '                
' → logprob: -9.275120735168457
    7. '<|end|>' → logprob: -10.025120735168457
    8. '                ' → logprob: -10.275120735168457
    9. '                       ' → logprob: -10.525120735168457
    10. '	           ' → logprob: -10.650120735168457

Token 397: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.18209940195083618
    2. ' (' → logprob: -1.8070993423461914
    3. '((' → logprob: -6.307099342346191
    4. '   ' → logprob: -8.432099342346191
    5. ' ((' → logprob: -8.432099342346191
    6. '(x' → logprob: -9.807099342346191
    7. '(' → logprob: -11.307099342346191
    8. ' ' → logprob: -11.557099342346191
    9. '  ' → logprob: -12.307099342346191
    10. '(A' → logprob: -12.682099342346191

Token 398: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002651047660037875
    2. '(a' → logprob: -6.127651214599609
    3. ' a' → logprob: -7.752651214599609
    4. '   ' → logprob: -11.00265121459961
    5. ' (' → logprob: -11.00265121459961
    6. ')a' → logprob: -14.00265121459961
    7. '	a' → logprob: -14.62765121459961
    8. ' ' → logprob: -15.25265121459961
    9. '       ' → logprob: -15.37765121459961
    10. '[a' → logprob: -15.50265121459961

Token 399: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.309382373117842e-05
    2. '[' → logprob: -10.500033378601074
    3. 'j' → logprob: -12.250033378601074
    4. ' [' → logprob: -14.875033378601074
    5. '[
' → logprob: -15.375033378601074
    6. '[i' → logprob: -17.250032424926758
    7. ' j' → logprob: -17.875032424926758
    8. '][' → logprob: -17.875032424926758
    9. '[a' → logprob: -18.125032424926758
    10. '```' → logprob: -18.125032424926758

Token 400: ']' (ID: 60)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.042428530752658844
    2. ' >>' → logprob: -3.417428493499756
    3. ']' → logprob: -5.417428493499756
    4. ')' → logprob: -5.667428493499756
    5. '[j' → logprob: -7.917428493499756
    6. '[' → logprob: -8.167428970336914
    7. '>' → logprob: -9.667428970336914
    8. ')>>' → logprob: -9.792428970336914
    9. ' ' → logprob: -10.417428970336914
    10. ' ' → logprob: -11.542428970336914

Token 401: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.012834643945097923
    2. ' >>' → logprob: -4.387834548950195
    3. ')' → logprob: -8.137834548950195
    4. ' ' → logprob: -11.637834548950195
    5. '>' → logprob: -12.012834548950195
    6. ')>>' → logprob: -12.012834548950195
    7. ']' → logprob: -13.137834548950195
    8. '&' → logprob: -13.262834548950195
    9. '[' → logprob: -13.387834548950195
    10. ' ' → logprob: -13.512834548950195

Token 402: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001584850688232109
    2. ' i' → logprob: -8.750158309936523
    3. ')i' → logprob: -17.250158309936523
    4. '	i' → logprob: -18.000158309936523
    5. ')' → logprob: -18.625158309936523
    6. ' ' → logprob: -19.625158309936523
    7. '_i' → logprob: -20.125158309936523
    8. '   ' → logprob: -20.500158309936523
    9. '```' → logprob: -21.375158309936523
    10. '[i' → logprob: -21.625158309936523

Token 403: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.692145012086257e-05
    2. ')&' → logprob: -10.000046730041504
    3. ' )' → logprob: -14.125046730041504
    4. '1' → logprob: -15.125046730041504
    5. '&' → logprob: -15.375046730041504
    6. '               ' → logprob: -16.37504768371582
    7. '   ' → logprob: -17.25004768371582
    8. '           ' → logprob: -17.37504768371582
    9. '0' → logprob: -17.62504768371582
    10. '&)' → logprob: -17.87504768371582

Token 404: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.001428928691893816
    2. ')&' → logprob: -7.251429080963135
    3. ')' → logprob: -7.876429080963135
    4. ' &' → logprob: -8.126428604125977
    5. '&amp' → logprob: -10.501428604125977
    6. '1' → logprob: -11.501428604125977
    7. '&
' → logprob: -13.251428604125977
    8. ']&' → logprob: -13.876428604125977
    9. '&gt' → logprob: -14.501428604125977
    10. '&)' → logprob: -14.501428604125977

Token 405: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.750051498413086
    4. '0' → logprob: -16.000051498413086
    5. '           ' → logprob: -17.125051498413086
    6. '                   ' → logprob: -18.250051498413086
    7. '               ' → logprob: -18.250051498413086
    8. '```' → logprob: -18.625051498413086
    9. '                           ' → logprob: -19.375051498413086
    10. '' → logprob: -19.625051498413086

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.249780638725497e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -15.000032424926758
    4. '```' → logprob: -15.250032424926758
    5. '`' → logprob: -16.312532424926758
    6. '' → logprob: -16.562532424926758
    7. '{' → logprob: -16.687532424926758
    8. '0' → logprob: -16.875032424926758
    9. '
' → logprob: -17.375032424926758
    10. '  ' → logprob: -17.875032424926758

Token 407: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.30410245060920715
    2. ' ==' → logprob: -2.0541024208068848
    3. ':' → logprob: -2.6791024208068848
    4. '1' → logprob: -3.1791024208068848
    5. ':
' → logprob: -4.554102420806885
    6. ')' → logprob: -5.054102420806885
    7. ')==' → logprob: -5.304102420806885
    8. ' ' → logprob: -7.804102420806885
    9. ']==' → logprob: -8.054102897644043
    10. '):' → logprob: -8.179102897644043

Token 408: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026300468016415834
    2. ' ' → logprob: -8.250263214111328
    3. '   ' → logprob: -13.500263214111328
    4. '0' → logprob: -15.250263214111328
    5. '           ' → logprob: -17.062763214111328
    6. '' → logprob: -17.187763214111328
    7. '       ' → logprob: -17.875263214111328
    8. '                   ' → logprob: -17.937763214111328
    9. '```' → logprob: -17.937763214111328
    10. '
' → logprob: -18.062763214111328

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. '0' → logprob: -14.750009536743164
    4. '   ' → logprob: -15.625009536743164
    5. '' → logprob: -16.937509536743164
    6. '```' → logprob: -17.812509536743164
    7. '
' → logprob: -18.000009536743164
    8. '۱' → logprob: -18.562509536743164
    9. '`' → logprob: -18.687509536743164
    10. '>' → logprob: -19.187509536743164

Token 410: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34879690408706665
    2. ':' → logprob: -1.2237968444824219
    3. '):
' → logprob: -8.848796844482422
    4. '                   ' → logprob: -9.223796844482422
    5. ':
' → logprob: -10.223796844482422
    6. '               ' → logprob: -10.473796844482422
    7. ' :
' → logprob: -10.723796844482422
    8. ' :' → logprob: -11.848796844482422
    9. ':

' → logprob: -12.098796844482422
    10. ' and' → logprob: -12.848796844482422

Token 411: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.30327308177948
    2. ':
' → logprob: -1.92827308177948
    3. ':' → logprob: -2.1782732009887695
    4. '               ' → logprob: -6.4282732009887695
    5. ' :' → logprob: -8.17827320098877
    6. ' :
' → logprob: -8.30327320098877
    7. '                       ' → logprob: -8.42827320098877
    8. '):
' → logprob: -8.80327320098877
    9. '           ' → logprob: -9.05327320098877
    10. 'di' → logprob: -9.92827320098877

Token 412: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' (adapté à ' di') → logprob: -0.0013124977704137564
    2. ' di' → logprob: -6.751312732696533
    3. '                   ' → logprob: -9.126312255859375
    4. '               ' → logprob: -10.501312255859375
    5. '           ' → logprob: -12.501312255859375
    6. 'd' → logprob: -13.376312255859375
    7. '   ' → logprob: -15.001312255859375
    8. '                       ' → logprob: -15.626312255859375
    9. ' ' → logprob: -15.751312255859375
    10. '_di' → logprob: -16.001312255859375

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002078503370285
    2. '=' → logprob: -2.350207805633545
    3. ' ' → logprob: -14.350208282470703
    4. '=j' → logprob: -14.600208282470703
    5. ' =
' → logprob: -17.350208282470703
    6. '=i' → logprob: -17.475208282470703
    7. '	' → logprob: -18.225208282470703
    8. '=
' → logprob: -18.725208282470703
    9. ',' → logprob: -18.725208282470703
    10. '＝' → logprob: -18.850208282470703

Token 414: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20141421258449554
    2. ' j' → logprob: -1.7014142274856567
    3. '	j' → logprob: -14.576414108276367
    4. '$j' → logprob: -15.201414108276367
    5. ' ' → logprob: -16.701414108276367
    6. '[j' → logprob: -17.201414108276367
    7. ' ' → logprob: -17.701414108276367
    8. '   ' → logprob: -17.701414108276367
    9. '                   ' → logprob: -18.201414108276367
    10. '*j' → logprob: -18.201414108276367

Token 415: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002624086628202349
    2. '               ' → logprob: -9.625262260437012
    3. '           ' → logprob: -10.125262260437012
    4. '<|end|>' → logprob: -10.125262260437012
    5. '
' → logprob: -10.250262260437012
    6. '                    
' → logprob: -10.500262260437012
    7. '				' → logprob: -11.125262260437012
    8. '                       ' → logprob: -11.500262260437012
    9. '       ' → logprob: -12.125262260437012
    10. '<|end|>' → logprob: -12.250262260437012

Token 416: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001628956088097766
    2. '                    
' → logprob: -9.125163078308105
    3. '               ' → logprob: -11.500163078308105
    4. '<|end|>' → logprob: -11.500163078308105
    5. '				' → logprob: -11.750163078308105
    6. '                       ' → logprob: -11.750163078308105
    7. '           ' → logprob: -12.375163078308105
    8. '                    ' → logprob: -12.625163078308105
    9. '		           ' → logprob: -12.875163078308105
    10. '
' → logprob: -13.250163078308105

Token 417: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6802146434783936
    2. '                   ' → logprob: -1.0552146434783936
    3. 'break' (adapté à ' break') → logprob: -1.9302146434783936
    4. '               ' → logprob: -9.180214881896973
    5. '           ' → logprob: -9.805214881896973
    6. '	break' → logprob: -10.180214881896973
    7. '                    
' → logprob: -11.055214881896973
    8. '                       ' → logprob: -11.430214881896973
    9. ' ' → logprob: -11.430214881896973
    10. '				' → logprob: -12.430214881896973

Token 418: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1335170418024063
    2. '       ' → logprob: -2.133517026901245
    3. '
' → logprob: -6.508517265319824
    4. 'if' → logprob: -6.883517265319824
    5. ' if' → logprob: -6.883517265319824
    6. '   ' → logprob: -7.258517265319824
    7. '<|end|>' → logprob: -7.258517265319824
    8. '                   ' → logprob: -7.633517265319824
    9. '               ' → logprob: -8.508517265319824
    10. '    
' → logprob: -8.758517265319824

Token 420: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22747792303562164
    2. '       ' → logprob: -2.35247802734375
    3. ' if' → logprob: -2.85247802734375
    4. 'if' (adapté à ' if') → logprob: -3.10247802734375
    5. '   ' → logprob: -5.35247802734375
    6. '
' → logprob: -7.60247802734375
    7. ' ' → logprob: -9.72747802734375
    8. '               ' → logprob: -9.72747802734375
    9. '            
' → logprob: -9.85247802734375
    10. '        
' → logprob: -9.97747802734375

Token 421: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.20142056047916412
    2. ' di' → logprob: -1.701420545578003
    3. 'd' → logprob: -12.701420783996582
    4. ' ' → logprob: -13.701420783996582
    5. '   ' → logprob: -14.076420783996582
    6. '(di' → logprob: -14.076420783996582
    7. ' ' → logprob: -14.951420783996582
    8. '  ' → logprob: -15.826420783996582
    9. '0' → logprob: -15.826420783996582
    10. 'not' → logprob: -15.951420783996582

Token 422: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02847115322947502
    2. ' !=' → logprob: -3.7784712314605713
    3. '==' → logprob: -5.403470993041992
    4. '==-' → logprob: -8.278470993041992
    5. '!=' → logprob: -8.903470993041992
    6. '=' → logprob: -9.028470993041992
    7. ' =' → logprob: -10.028470993041992
    8. ' >=' → logprob: -10.153470993041992
    9. '!=-' → logprob: -10.278470993041992
    10. ' ' → logprob: -10.403470993041992

Token 423: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00033546582562848926
    2. ' -' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.750335693359375
    4. ' ' → logprob: -20.000335693359375
    5. '-j' → logprob: -21.625335693359375
    6. '−' → logprob: -21.750335693359375
    7. '  ' → logprob: -22.625335693359375
    8. '```' → logprob: -22.750335693359375
    9. '=' → logprob: -22.875335693359375
    10. '-i' → logprob: -23.500335693359375

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '2' → logprob: -18.750001907348633
    4. '```' → logprob: -18.875001907348633
    5. '   ' → logprob: -19.125001907348633
    6. ',' → logprob: -19.375001907348633
    7. '１' → logprob: -19.687501907348633
    8. '۱' → logprob: -19.812501907348633
    9. '0' → logprob: -20.187501907348633
    10. '१' → logprob: -20.937501907348633

Token 425: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.056215088814496994
    2. ':' → logprob: -3.0562150478363037
    3. '               ' → logprob: -4.931215286254883
    4. ' :
' → logprob: -8.431215286254883
    5. ':

' → logprob: -9.681215286254883
    6. '):
' → logprob: -10.306215286254883
    7. ' and' → logprob: -10.806215286254883
    8. '           ' → logprob: -11.056215286254883
    9. ',' → logprob: -11.181215286254883
    10. ' :' → logprob: -12.056215286254883

Token 426: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006327602546662092
    2. '       ' → logprob: -6.1313276290893555
    3. ':' → logprob: -6.3813276290893555
    4. ':
' → logprob: -6.5063276290893555
    5. '           ' → logprob: -8.506327629089355
    6. '                
' → logprob: -8.881327629089355
    7. ' remain' → logprob: -9.256327629089355
    8. ' continue' → logprob: -9.506327629089355
    9. ' ' → logprob: -10.006327629089355
    10. '   ' → logprob: -10.131327629089355

Token 427: ' #' (ID: 1069)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.5997340679168701
    2. '               ' → logprob: -1.7247340679168701
    3. ' remain' → logprob: -2.22473406791687
    4. ' blu' → logprob: -2.72473406791687
    5. 'remain' → logprob: -3.22473406791687
    6. '           ' → logprob: -3.84973406791687
    7. '   ' → logprob: -4.099734306335449
    8. '       ' → logprob: -4.474734306335449
    9. ' blue' → logprob: -6.537234306335449
    10. '#' (adapté à ' #') → logprob: -6.662234306335449

Token 428: ' On' (ID: 2160)
  Prédit: ' blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blu' → logprob: -0.7961764335632324
    2. 'blu' → logprob: -0.7961764335632324
    3. ' remain' → logprob: -2.6711764335632324
    4. 'remain' → logprob: -4.796176433563232
    5. '   ' → logprob: -5.171176433563232
    6. '           ' → logprob: -5.546176433563232
    7. '       ' → logprob: -6.296176433563232
    8. '               ' → logprob: -6.421176433563232
    9. ' remains' → logprob: -7.108676433563232
    10. 'bl' → logprob: -7.171176433563232

Token 429: ' ajoute' (ID: 91611)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.4968819320201874
    2. '               ' → logprob: -2.1218819618225098
    3. '   ' → logprob: -2.2468819618225098
    4. ' blu' → logprob: -2.4968819618225098
    5. '                   ' → logprob: -3.8718819618225098
    6. '           ' → logprob: -3.8718819618225098
    7. ' remain' → logprob: -5.24688196182251
    8. ' bleu' → logprob: -5.37188196182251
    9. '       ' → logprob: -5.49688196182251
    10. ' remains' → logprob: -5.62188196182251

Token 430: ' cet' (ID: 19505)
  Prédit: ' di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' di' → logprob: -0.47423484921455383
    2. 'di' → logprob: -0.9742348194122314
    3. '                   ' → logprob: -9.349234580993652
    4. '(di' → logprob: -9.599234580993652
    5. '_di' → logprob: -13.599234580993652
    6. 'd' → logprob: -14.099234580993652
    7. '               ' → logprob: -14.474234580993652
    8. '   ' → logprob: -16.72423553466797
    9. '                       ' → logprob: -16.97423553466797
    10. '.di' → logprob: -17.09923553466797

Token 431: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.20119403302669525
    2. 'element' → logprob: -2.7011940479278564
    3. 'élé' → logprob: -2.8261940479278564
    4. ' element' → logprob: -3.0761940479278564
    5. 'di' → logprob: -5.326193809509277
    6. ' di' → logprob: -6.451193809509277
    7. ' elemento' → logprob: -7.076193809509277
    8. ' ' → logprob: -7.076193809509277
    9. ' j' → logprob: -7.951193809509277
    10. 'j' → logprob: -8.451193809509277

Token 432: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6019275784492493
    2. '               ' → logprob: -1.1019275188446045
    3. '                   ' → logprob: -2.6019275188446045
    4. ' to' → logprob: -3.2269275188446045
    5. '   ' → logprob: -6.226927757263184
    6. '           ' → logprob: -7.226927757263184
    7. ' a' → logprob: -7.601927757263184
    8. 'to' → logprob: -7.601927757263184
    9. 'blu' → logprob: -7.601927757263184
    10. ' dans' → logprob: -8.226927757263184

Token 433: ' la' (ID: 557)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.026589157059788704
    2. ' blu' → logprob: -3.6515891551971436
    3. 'ble' → logprob: -9.026589393615723
    4. '   ' → logprob: -9.526589393615723
    5. 'bl' → logprob: -10.776589393615723
    6. ' bleu' → logprob: -10.901589393615723
    7. ' ' → logprob: -11.526589393615723
    8. 'blue' → logprob: -12.026589393615723
    9. '    ' → logprob: -12.151589393615723
    10. 'blur' → logprob: -12.276589393615723

Token 434: ' "' (ID: 392)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.00012892624363303185
    2. ' blu' → logprob: -9.000128746032715
    3. 'ble' → logprob: -12.750128746032715
    4. 'bl' → logprob: -13.250128746032715
    5. 'blur' → logprob: -15.250128746032715
    6. 'blue' → logprob: -15.250128746032715
    7. 'base' → logprob: -16.87512969970703
    8. '   ' → logprob: -17.00012969970703
    9. '```' → logprob: -17.00012969970703
    10. ' bleu' → logprob: -17.37512969970703

Token 435: 'base' (ID: 5423)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.00024132427643053234
    2. ' blu' → logprob: -9.12524127960205
    3. 'ble' → logprob: -9.75024127960205
    4. 'base' → logprob: -9.87524127960205
    5. '   ' → logprob: -11.62524127960205
    6. 'bl' → logprob: -12.50024127960205
    7. 'blue' → logprob: -12.87524127960205
    8. ' ' → logprob: -13.37524127960205
    9. 'blur' → logprob: -13.87524127960205
    10. '  ' → logprob: -14.00024127960205

Token 436: '"' (ID: 1)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4934234321117401
    2. 'blu' → logprob: -1.6184234619140625
    3. '                   ' → logprob: -2.6184234619140625
    4. ',' → logprob: -3.3684234619140625
    5. '           ' → logprob: -3.4934234619140625
    6. '   ' → logprob: -3.7434234619140625
    7. '       ' → logprob: -5.1184234619140625
    8. '"' → logprob: -5.4934234619140625
    9. '
' → logprob: -5.6184234619140625
    10. ' blu' → logprob: -5.9934234619140625

Token 437: ' blu' (ID: 55577)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005343686323612928
    2. '
' → logprob: -5.505343914031982
    3. '       ' → logprob: -7.630343914031982
    4. ',' → logprob: -8.130343437194824
    5. '                   ' → logprob: -8.505343437194824
    6. '           ' → logprob: -9.130343437194824
    7. '                
' → logprob: -10.630343437194824
    8. ' and' → logprob: -11.005343437194824
    9. '<|end|>' → logprob: -11.005343437194824
    10. ',
' → logprob: -11.255343437194824

Token 438: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027523525059223175
    2. '
' → logprob: -3.7775235176086426
    3. '                   ' → logprob: -5.652523517608643
    4. '.' → logprob: -8.1525239944458
    5. '           ' → logprob: -9.5275239944458
    6. '                
' → logprob: -9.5275239944458
    7. ',' → logprob: -9.9025239944458
    8. '       ' → logprob: -10.0275239944458
    9. '.add' → logprob: -10.5275239944458
    10. ':
' → logprob: -10.5275239944458

Token 439: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012603952549397945
    2. '
' → logprob: -4.637603759765625
    3. '                   ' → logprob: -6.137603759765625
    4. '           ' → logprob: -8.387603759765625
    5. 'blu' → logprob: -8.512603759765625
    6. '       ' → logprob: -9.012603759765625
    7. ':
' → logprob: -10.012603759765625
    8. '   ' → logprob: -11.012603759765625
    9. '                
' → logprob: -11.262603759765625
    10. ',' → logprob: -11.637603759765625

Token 440: ' blu' (ID: 55577)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' (adapté à ' blu') → logprob: -0.40594130754470825
    2. ' blu' → logprob: -1.6559412479400635
    3. '               ' → logprob: -2.0309412479400635
    4. '                   ' → logprob: -5.155941486358643
    5. '           ' → logprob: -6.030941486358643
    6. '   ' → logprob: -6.155941486358643
    7. '       ' → logprob: -7.905941486358643
    8. ' blue' → logprob: -9.155941009521484
    9. ' bleu' → logprob: -9.155941009521484
    10. 'ble' → logprob: -9.530941009521484

Token 441: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0009712525061331689
    2. '.' → logprob: -7.25097131729126
    3. ' .' → logprob: -8.250970840454102
    4. ').' → logprob: -16.1259708404541
    5. '].' → logprob: -17.1259708404541
    6. '   ' → logprob: -17.3759708404541
    7. '.update' → logprob: -17.5009708404541
    8. ' ' → logprob: -18.2509708404541
    9. ')add' → logprob: -18.2509708404541
    10. 'add' → logprob: -18.3759708404541

Token 442: '(di' (ID: 131744)
  Prédit: '(di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -0.00014454191841650754
    2. '(' → logprob: -8.875144958496094
    3. ' (' → logprob: -13.000144958496094
    4. 'di' → logprob: -13.250144958496094
    5. ' di' → logprob: -15.250144958496094
    6. '(d' → logprob: -15.875144958496094
    7. '(dis' → logprob: -16.375144958496094
    8. '((' → logprob: -17.125144958496094
    9. '(
' → logprob: -17.250144958496094
    10. '(div' → logprob: -17.875144958496094

Token 443: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5767123699188232
    2. ')
' → logprob: -0.8267123699188232
    3. '               ' → logprob: -7.326712608337402
    4. ')
' → logprob: -9.576712608337402
    5. '                   ' → logprob: -10.576712608337402
    6. '<|end|>' → logprob: -11.701712608337402
    7. ' )
' → logprob: -12.701712608337402
    8. '           ' → logprob: -12.826712608337402
    9. ')

' → logprob: -13.576712608337402
    10. ' )' → logprob: -13.576712608337402

Token 444: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01351901050657034
    2. ' remain' → logprob: -5.138518810272217
    3. 'remain' → logprob: -5.138518810272217
    4. '
' → logprob: -7.263518810272217
    5. '       ' → logprob: -7.263518810272217
    6. '                   ' → logprob: -8.388519287109375
    7. '           ' → logprob: -10.513519287109375
    8. '   ' → logprob: -10.763519287109375
    9. '                
' → logprob: -12.263519287109375
    10. '
' → logprob: -12.388519287109375

Token 445: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' (adapté à ' remain') → logprob: -0.19821137189865112
    2. ' remain' → logprob: -1.948211431503296
    3. '               ' → logprob: -3.323211431503296
    4. '   ' → logprob: -7.573211193084717
    5. '       ' → logprob: -7.698211193084717
    6. '           ' → logprob: -8.948211669921875
    7. '                   ' → logprob: -9.698211669921875
    8. ' ' → logprob: -10.948211669921875
    9. '
' → logprob: -10.948211669921875
    10. 'remaining' → logprob: -11.323211669921875

Token 446: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.004237835761159658
    2. '.' → logprob: -5.504237651824951
    3. '.dis' → logprob: -8.75423812866211
    4. 'remove' → logprob: -13.75423812866211
    5. ' .' → logprob: -14.87923812866211
    6. '.Remove' → logprob: -16.12923812866211
    7. ' remove' → logprob: -17.37923812866211
    8. '   ' → logprob: -17.62923812866211
    9. ' -=' → logprob: -17.75423812866211
    10. '-remove' → logprob: -19.87923812866211

Token 447: '(di' (ID: 131744)
  Prédit: '(di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -1.9361264946837764e-07
    2. 'di' → logprob: -16.125
    3. '(' → logprob: -16.75
    4. '(dis' → logprob: -19.375
    5. '(d' → logprob: -19.5
    6. ' (' → logprob: -20.25
    7. ' di' → logprob: -20.875
    8. '(dic' → logprob: -20.875
    9. '(
' → logprob: -21.625
    10. '(div' → logprob: -22.0

Token 448: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016755410470068455
    2. ')
' → logprob: -6.751675605773926
    3. '<|end|>' → logprob: -7.751675605773926
    4. '<|end|>' → logprob: -10.376675605773926
    5. ' )' → logprob: -11.001675605773926
    6. '               ' → logprob: -11.376675605773926
    7. ')return' → logprob: -12.001675605773926
    8. '
' → logprob: -12.876675605773926
    9. ')

' → logprob: -13.751675605773926
    10. '")' → logprob: -14.251675605773926

Token 449: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09971339255571365
    2. '<|end|>' → logprob: -2.7247133255004883
    3. '
' → logprob: -3.7247133255004883
    4. '           ' → logprob: -6.724713325500488
    5. '                
' → logprob: -7.349713325500488
    6. '<|end|>' → logprob: -7.474713325500488
    7. '  
' → logprob: -7.599713325500488
    8. '                   ' → logprob: -7.724713325500488
    9. 'continue' → logprob: -7.724713325500488
    10. '       ' → logprob: -7.974713325500488

Token 450: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029007909819483757
    2. '       ' → logprob: -4.029007911682129
    3. '#' (adapté à ' #') → logprob: -5.529007911682129
    4. '               ' → logprob: -5.904007911682129
    5. '           ' → logprob: -5.904007911682129
    6. '   ' → logprob: -7.654007911682129
    7. ' for' → logprob: -7.904007911682129
    8. 's' → logprob: -8.404007911682129
    9. 'x' → logprob: -8.654007911682129
    10. 'continue' → logprob: -10.279007911682129

Token 451: ' Ré' (ID: 27181)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6066333651542664
    2. 's' → logprob: -0.8566333651542664
    3. 'x' → logprob: -4.481633186340332
    4. '   ' → logprob: -5.231633186340332
    5. 'temp' → logprob: -5.606633186340332
    6. 'new' → logprob: -5.981633186340332
    7. '       ' → logprob: -6.356633186340332
    8. 'continue' → logprob: -6.981633186340332
    9. '           ' → logprob: -7.231633186340332
    10. 'tmp' → logprob: -7.481633186340332

Token 452: 'duction' (ID: 23838)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7858567237854004
    2. 'du' → logprob: -0.9108567237854004
    3. 'main' → logprob: -3.5358567237854004
    4. 'duce' → logprob: -3.5358567237854004
    5. 'm' → logprob: -4.1608567237854
    6. '   ' → logprob: -4.2858567237854
    7. 'st' → logprob: -4.4108567237854
    8. 'duit' → logprob: -4.5358567237854
    9. '       ' → logprob: -5.1608567237854
    10. 'duction' → logprob: -5.2858567237854

Token 453: ' Ga' (ID: 18586)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0807448625564575
    2. ' for' → logprob: -1.2057448625564575
    3. '               ' → logprob: -1.2057448625564575
    4. '       ' → logprob: -3.080744743347168
    5. '           ' → logprob: -5.205744743347168
    6. '   ' → logprob: -5.455744743347168
    7. ' des' → logprob: -5.830744743347168
    8. '	for' → logprob: -7.080744743347168
    9. ' of' → logprob: -7.830744743347168
    10. '#' → logprob: -8.080744743347168

Token 454: 'uss' (ID: 1824)
  Prédit: 'uss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uss' → logprob: -3.774276774493046e-05
    2. 'us' → logprob: -11.125038146972656
    3. 'ussian' → logprob: -11.625038146972656
    4. 'ussi' → logprob: -12.375038146972656
    5. 'u' → logprob: -12.500038146972656
    6. 'ss' → logprob: -13.250038146972656
    7. 'ussa' → logprob: -13.875038146972656
    8. 'ud' → logprob: -14.250038146972656
    9. 'o' → logprob: -14.500038146972656
    10. 'a' → logprob: -14.500038146972656

Token 455: 'ienne' (ID: 18387)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17137788236141205
    2. 'for' → logprob: -2.4213778972625732
    3. ' for' → logprob: -3.0463778972625732
    4. 'ner' → logprob: -5.171377658843994
    5. '                ' → logprob: -5.796377658843994
    6. '                   ' → logprob: -5.796377658843994
    7. '#' → logprob: -6.421377658843994
    8. '   ' → logprob: -6.671377658843994
    9. 'i' → logprob: -6.796377658843994
    10. '       ' → logprob: -7.421377658843994

Token 456: ' :' (ID: 712)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06849401444196701
    2. '       ' → logprob: -2.8184940814971924
    3. ' for' → logprob: -5.443493843078613
    4. '           ' → logprob: -6.443493843078613
    5. 'for' → logprob: -7.693493843078613
    6. '
' → logprob: -10.193493843078613
    7. '                   ' → logprob: -10.943493843078613
    8. ':' → logprob: -11.193493843078613
    9. '	       ' → logprob: -11.443493843078613
    10. '   ' → logprob: -11.443493843078613

Token 457: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13990342617034912
    2. ' for' → logprob: -2.5149035453796387
    3. '               ' → logprob: -3.1399035453796387
    4. '           ' → logprob: -5.639903545379639
    5. '       ' → logprob: -6.014903545379639
    6. '   ' → logprob: -7.889903545379639
    7. '                   ' → logprob: -11.38990306854248
    8. '```' → logprob: -12.01490306854248
    9. '	for' → logprob: -12.13990306854248
    10. '
' → logprob: -12.88990306854248

Token 458: ' chaque' (ID: 21194)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8279234766960144
    2. 'x' → logprob: -1.3279235363006592
    3. 'k' → logprob: -2.452923536300659
    4. ' k' → logprob: -2.702923536300659
    5. 'r' → logprob: -3.077923536300659
    6. ' r' → logprob: -3.327923536300659
    7. ' j' → logprob: -3.952923536300659
    8. 'j' → logprob: -4.07792329788208
    9. ' y' → logprob: -4.95292329788208
    10. ' elem' → logprob: -5.32792329788208

Token 459: ' autre' (ID: 20278)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4582782983779907
    2. 'j' → logprob: -1.7082782983779907
    3. 'x' → logprob: -2.333278179168701
    4. 'r' → logprob: -3.083278179168701
    5. 'e' → logprob: -3.833278179168701
    6. 'elem' → logprob: -4.958278179168701
    7. 'v' → logprob: -5.708278179168701
    8. 'el' → logprob: -6.208278179168701
    9. 'idx' → logprob: -6.208278179168701
    10. 'ele' → logprob: -6.333278179168701

Token 460: ' élément' (ID: 99627)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.27734825015068054
    2. 'r' → logprob: -2.277348279953003
    3. 'x' → logprob: -2.277348279953003
    4. 'e' → logprob: -4.402348041534424
    5. 'j' → logprob: -4.402348041534424
    6. 'idx' → logprob: -5.152348041534424
    7. 'elem' → logprob: -5.902348041534424
    8. 'el' → logprob: -7.027348041534424
    9. 'v' → logprob: -7.277348041534424
    10. 'ele' → logprob: -7.777348041534424

Token 461: ' ayant' (ID: 45436)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12235131859779358
    2. '                   ' → logprob: -2.8723514080047607
    3. '               ' → logprob: -2.9973514080047607
    4. 'in' → logprob: -5.872351169586182
    5. ' of' → logprob: -6.622351169586182
    6. ' j' → logprob: -6.622351169586182
    7. ' for' → logprob: -7.747351169586182
    8. ' dans' → logprob: -7.872351169586182
    9. 'j' → logprob: -8.12235164642334
    10. ',' → logprob: -8.49735164642334

Token 462: ' aussi' (ID: 9894)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22832922637462616
    2. ' i' → logprob: -3.2283291816711426
    3. 'di' → logprob: -3.2283291816711426
    4. 'bit' → logprob: -3.3533291816711426
    5. 'le' → logprob: -4.353329181671143
    6. '1' → logprob: -4.478329181671143
    7. 'j' → logprob: -4.728329181671143
    8. ' le' → logprob: -4.853329181671143
    9. ' (' → logprob: -4.978329181671143
    10. ' bit' → logprob: -5.103329181671143

Token 463: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.00470483023673296
    2. ' le' → logprob: -5.62970495223999
    3. 'un' → logprob: -7.87970495223999
    4. 'bit' → logprob: -8.379704475402832
    5. '1' → logprob: -9.254704475402832
    6. 'ce' → logprob: -9.379704475402832
    7. 'i' → logprob: -9.504704475402832
    8. '(i' → logprob: -9.754704475402832
    9. ' ' → logprob: -10.379704475402832
    10. 'leur' → logprob: -10.379704475402832

Token 464: ' ' (ID: 220)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.048553526401519775
    2. '1' → logprob: -3.173553466796875
    3. ' bit' → logprob: -5.298553466796875
    4. 'i' → logprob: -8.423553466796875
    5. ' ' → logprob: -8.548553466796875
    6. '```' → logprob: -10.048553466796875
    7. 'le' → logprob: -10.923553466796875
    8. 'ibit' → logprob: -11.048553466796875
    9. ' i' → logprob: -11.298553466796875
    10. '(bit' → logprob: -11.673553466796875

Token 465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10040151327848434
    2. 'i' → logprob: -2.8504014015197754
    3. 'bit' → logprob: -3.4754014015197754
    4. ' ' → logprob: -6.100401401519775
    5. '```' → logprob: -6.100401401519775
    6. ' i' → logprob: -6.725401401519775
    7. ' bit' → logprob: -7.475401401519775
    8. '(i' → logprob: -8.600401878356934
    9. 'ibit' → logprob: -9.725401878356934
    10. '   ' → logprob: -10.225401878356934

Token 466: ' sur' (ID: 1512)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.1615295261144638
    2. 'au' → logprob: -3.286529541015625
    3. ' sur' → logprob: -3.661529541015625
    4. ' en' → logprob: -3.911529541015625
    5. '               ' → logprob: -4.161529541015625
    6. '                   ' → logprob: -4.161529541015625
    7. 'sur' → logprob: -4.411529541015625
    8. ' à' → logprob: -5.286529541015625
    9. ' dans' → logprob: -5.536529541015625
    10. '   ' → logprob: -5.911529541015625

Token 467: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.031688351184129715
    2. ' i' → logprob: -4.156688213348389
    3. 'le' → logprob: -4.531688213348389
    4. ' le' → logprob: -5.656688213348389
    5. 'l' → logprob: -7.656688213348389
    6. 'la' → logprob: -8.156688690185547
    7. ' la' → logprob: -9.156688690185547
    8. ' ' → logprob: -9.406688690185547
    9. '   ' → logprob: -9.531688690185547
    10. ' ce' → logprob: -9.656688690185547

Token 468: ' bit' (ID: 3546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007501865038648248
    2. 'bit' → logprob: -7.3757500648498535
    3. ' i' → logprob: -9.875750541687012
    4. 'j' → logprob: -10.500750541687012
    5. 'ith' → logprob: -10.875750541687012
    6. ' même' → logprob: -12.125750541687012
    7. '```' → logprob: -12.125750541687012
    8. 'ibit' → logprob: -12.625750541687012
    9. ' bit' → logprob: -12.750750541687012
    10. '[i' → logprob: -13.375750541687012

Token 469: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27611663937568665
    2. ' i' → logprob: -1.6511166095733643
    3. 'j' → logprob: -3.2761166095733643
    4. ' j' → logprob: -4.776116847991943
    5. '               ' → logprob: -6.401116847991943
    6. '                   ' → logprob: -7.151116847991943
    7. '```' → logprob: -8.026116371154785
    8. '           ' → logprob: -9.276116371154785
    9. ' ' → logprob: -9.401116371154785
    10. '   ' → logprob: -9.651116371154785

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7128170728683472
    2. '                   ' → logprob: -1.4628170728683472
    3. '               ' → logprob: -1.4628170728683472
    4. ':
' → logprob: -3.8378171920776367
    5. ':' → logprob: -4.837817192077637
    6. '           ' → logprob: -5.087817192077637
    7. ' for' → logprob: -6.337817192077637
    8. ',
' → logprob: -6.337817192077637
    9. ' ,' → logprob: -6.587817192077637
    10. '   ' → logprob: -6.837817192077637

Token 471: ' on' (ID: 402)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8240907788276672
    2. ' for' → logprob: -1.3240907192230225
    3. 'for' → logprob: -1.3240907192230225
    4. '               ' → logprob: -3.5740907192230225
    5. '   ' → logprob: -7.324090957641602
    6. '           ' → logprob: -8.574090957641602
    7. 'if' → logprob: -9.074090957641602
    8. '```' → logprob: -9.824090957641602
    9. '                       ' → logprob: -10.074090957641602
    10. '       ' → logprob: -10.199090957641602

Token 472: ' l' (ID: 305)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.7816287875175476
    2. 'a' → logprob: -1.0316288471221924
    3. ' a' → logprob: -2.6566288471221924
    4. ' xor' → logprob: -3.1566288471221924
    5. 'for' → logprob: -3.4066288471221924
    6. ' for' → logprob: -4.656628608703613
    7. '       ' → logprob: -5.281628608703613
    8. ' x' → logprob: -5.281628608703613
    9. 'x' → logprob: -5.531628608703613
    10. '   ' → logprob: -5.656628608703613

Token 473: ''' (ID: 6)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.3161434829235077
    2. 'e' → logprob: -2.56614351272583
    3. 'eff' → logprob: -3.81614351272583
    4. 'a' → logprob: -3.94114351272583
    5. 'x' → logprob: -4.06614351272583
    6. '   ' → logprob: -4.06614351272583
    7. 'en' → logprob: -4.31614351272583
    8. 'ève' → logprob: -4.31614351272583
    9. 'es' → logprob: -4.69114351272583
    10. 'ef' → logprob: -5.19114351272583

Token 474: 'X' (ID: 55)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.1577504575252533
    2. 'for' → logprob: -2.782750368118286
    3. 'a' → logprob: -3.157750368118286
    4. 'x' → logprob: -3.532750368118286
    5. 'if' → logprob: -6.157750606536865
    6. ' ^=' → logprob: -6.657750606536865
    7. '^' → logprob: -6.907750606536865
    8. ' for' → logprob: -7.157750606536865
    9. 'aj' → logprob: -7.532750606536865
    10. '   ' → logprob: -7.657750606536865

Token 475: 'OR' (ID: 1301)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.10497748851776123
    2. 'ore' → logprob: -2.979977607727051
    3. 'OR' → logprob: -3.979977607727051
    4. '^' → logprob: -4.354977607727051
    5. 'ORE' → logprob: -5.104977607727051
    6. 'ors' → logprob: -5.229977607727051
    7. 'o' → logprob: -6.979977607727051
    8. 'orre' → logprob: -7.354977607727051
    9. 'orce' → logprob: -7.729977607727051
    10. 'oref' → logprob: -7.854977607727051

Token 476: ' avec' (ID: 3937)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2754528224468231
    2. '^' → logprob: -2.0254528522491455
    3. '               ' → logprob: -3.1504528522491455
    4. '                   ' → logprob: -3.1504528522491455
    5. ' ^=' → logprob: -4.400452613830566
    6. '           ' → logprob: -5.650452613830566
    7. 'a' → logprob: -7.025452613830566
    8. '                       ' → logprob: -7.025452613830566
    9. ' avec' → logprob: -7.150452613830566
    10. ' with' → logprob: -7.525452613830566

Token 477: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04913001507520676
    2. ' a' → logprob: -3.0491299629211426
    3. '   ' → logprob: -7.674129962921143
    4. '	a' → logprob: -10.1741304397583
    5. 'di' → logprob: -11.2991304397583
    6. '                   ' → logprob: -11.4241304397583
    7. '    ' → logprob: -12.4241304397583
    8. '               ' → logprob: -12.7991304397583
    9. ' ' → logprob: -13.0491304397583
    10. '           ' → logprob: -13.4241304397583

Token 478: '[' (ID: 58)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24886064231395721
    2. '[a' → logprob: -1.6238605976104736
    3. '[' → logprob: -3.8738605976104736
    4. ' a' → logprob: -7.123860836029053
    5. '[j' → logprob: -7.248860836029053
    6. '   ' → logprob: -7.873860836029053
    7. 'di' → logprob: -8.498860359191895
    8. '[i' → logprob: -9.373860359191895
    9. '(a' → logprob: -10.748860359191895
    10. ' [' → logprob: -10.873860359191895

Token 479: 'di' (ID: 4091)
  Prédit: 'di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -1.7120533811976202e-05
    2. '[' → logprob: -11.000017166137695
    3. '(di' → logprob: -15.875017166137695
    4. ' di' → logprob: -16.125017166137695
    5. 'd' → logprob: -16.750017166137695
    6. 'j' → logprob: -17.500017166137695
    7. 'dj' → logprob: -17.875017166137695
    8. '   ' → logprob: -18.500017166137695
    9. '_di' → logprob: -18.750017166137695
    10. '```' → logprob: -19.750017166137695

Token 480: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032340367324650288
    2. ']
' → logprob: -6.503233909606934
    3. '],' → logprob: -7.628233909606934
    4. ']:
' → logprob: -7.628233909606934
    5. '[j' → logprob: -8.628233909606934
    6. ' ]' → logprob: -8.878233909606934
    7. '               ' → logprob: -8.878233909606934
    8. '])' → logprob: -9.628233909606934
    9. '                   ' → logprob: -9.753233909606934
    10. ']:' → logprob: -9.753233909606934

Token 481: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005364664364606142
    2. '
' → logprob: -6.130364894866943
    3. '                   ' → logprob: -6.880364894866943
    4. '                
' → logprob: -7.005364894866943
    5. '           ' → logprob: -7.505364894866943
    6. '       ' → logprob: -8.880364418029785
    7. '\n' → logprob: -8.880364418029785
    8. '<|end|>' → logprob: -9.130364418029785
    9. '  
' → logprob: -9.755364418029785
    10. '                    
' → logprob: -10.130364418029785

Token 482: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2874816358089447
    2. 'for' (adapté à ' for') → logprob: -1.912481665611267
    3. ' for' → logprob: -2.4124815464019775
    4. '       ' → logprob: -4.537481784820557
    5. '           ' → logprob: -6.537481784820557
    6. '   ' → logprob: -8.287481307983398
    7. '                   ' → logprob: -8.912481307983398
    8. '	for' → logprob: -12.912481307983398
    9. ' ' → logprob: -13.162481307983398
    10. '```' → logprob: -13.287481307983398

Token 483: ' j' (ID: 441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3248586058616638
    2. 'j' → logprob: -1.4498586654663086
    3. 'x' → logprob: -3.4498586654663086
    4. 'r' → logprob: -5.449858665466309
    5. ' j' → logprob: -6.449858665466309
    6. 'other' → logprob: -6.449858665466309
    7. ' k' → logprob: -6.574858665466309
    8. 'idx' → logprob: -6.824858665466309
    9. 'e' → logprob: -8.824858665466309
    10. ' x' → logprob: -8.824858665466309

Token 484: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10022392123937607
    2. 'in' → logprob: -2.350224018096924
    3. '   ' → logprob: -12.475223541259766
    4. '	in' → logprob: -12.475223541259766
    5. ' ' → logprob: -12.725223541259766
    6. '  ' → logprob: -13.225223541259766
    7. '    ' → logprob: -14.100223541259766
    8. 'd' → logprob: -14.475223541259766
    9. 's' → logprob: -14.850223541259766
    10. '               ' → logprob: -15.100223541259766

Token 485: ' range' (ID: 3352)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.2530059814453125
    2. ' remain' → logprob: -1.5030059814453125
    3. 'list' → logprob: -7.3780059814453125
    4. ' list' → logprob: -7.7530059814453125
    5. 'rem' → logprob: -11.878005981445312
    6. ' ' → logprob: -12.003005981445312
    7. '   ' → logprob: -12.628005981445312
    8. 'remaining' → logprob: -13.628005981445312
    9. '  ' → logprob: -13.753005981445312
    10. '    ' → logprob: -14.815505981445312

Token 486: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0032652919180691242
    2. '(' → logprob: -6.128265380859375
    3. '(len' → logprob: -7.628265380859375
    4. 'n' → logprob: -8.628265380859375
    5. '   ' → logprob: -8.878265380859375
    6. '(j' → logprob: -9.253265380859375
    7. 'di' → logprob: -10.003265380859375
    8. '(i' → logprob: -10.628265380859375
    9. ')' → logprob: -10.628265380859375
    10. ' (' → logprob: -10.753265380859375

Token 487: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0016075820894911885
    2. '):' → logprob: -6.626607418060303
    3. '   ' → logprob: -9.376607894897461
    4. '):
' → logprob: -9.626607894897461
    5. '():
' → logprob: -10.376607894897461
    6. ':
' → logprob: -10.376607894897461
    7. '       ' → logprob: -10.751607894897461
    8. ')' → logprob: -11.001607894897461
    9. '()):
' → logprob: -12.001607894897461
    10. '           ' → logprob: -12.126607894897461

Token 488: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02690240554511547
    2. '   ' → logprob: -4.776902198791504
    3. '           ' → logprob: -5.151902198791504
    4. '		           ' → logprob: -5.651902198791504
    5. '               ' → logprob: -5.901902198791504
    6. ' if' → logprob: -6.526902198791504
    7. '<|end|>' → logprob: -7.151902198791504
    8. '       ' → logprob: -7.526902198791504
    9. '	               ' → logprob: -7.526902198791504
    10. '			       ' → logprob: -7.651902198791504

Token 489: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5194457769393921
    2. ' if' → logprob: -1.019445776939392
    3. '   ' → logprob: -4.519445896148682
    4. '       ' → logprob: -4.519445896148682
    5. '                       ' → logprob: -4.644445896148682
    6. '               ' → logprob: -5.019445896148682
    7. '                   ' → logprob: -5.519445896148682
    8. '	if' → logprob: -7.144445896148682
    9. '           ' → logprob: -7.394445896148682
    10. '	       ' → logprob: -8.019445419311523

Token 490: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08161512762308121
    2. ' j' → logprob: -2.5816152095794678
    3. ' (' → logprob: -7.206614971160889
    4. '                   ' → logprob: -7.331614971160889
    5. '   ' → logprob: -7.581614971160889
    6. '(j' → logprob: -7.581614971160889
    7. '    ' → logprob: -9.706615447998047
    8. '                       ' → logprob: -10.081615447998047
    9. '                    ' → logprob: -10.081615447998047
    10. '(' → logprob: -10.456615447998047

Token 491: ' !=' (ID: 1666)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5162663459777832
    2. '!=' → logprob: -1.7662663459777832
    3. 'in' → logprob: -1.8912663459777832
    4. ' !=' → logprob: -2.516266345977783
    5. ' not' → logprob: -7.766266345977783
    6. 'not' → logprob: -8.641265869140625
    7. ' ' → logprob: -11.891265869140625
    8. '()!=' → logprob: -11.891265869140625
    9. '	in' → logprob: -12.141265869140625
    10. ')!=' → logprob: -12.391265869140625

Token 492: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -3.650518920039758e-06
    2. ' di' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.750003814697266
    4. 'd' → logprob: -16.750003814697266
    5. '-di' → logprob: -17.625003814697266
    6. 'j' → logprob: -18.000003814697266
    7. 'dj' → logprob: -18.125003814697266
    8. '           ' → logprob: -18.250003814697266
    9. '  ' → logprob: -18.375003814697266
    10. ' ' → logprob: -18.750003814697266

Token 493: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014193831011652946
    2. 'and' → logprob: -4.264194011688232
    3. '                       ' → logprob: -11.139193534851074
    4. '	and' → logprob: -12.014193534851074
    5. ' ' → logprob: -12.139193534851074
    6. '   ' → logprob: -13.764193534851074
    7. '                   ' → logprob: -14.139193534851074
    8. ' и' → logprob: -15.014193534851074
    9. '               ' → logprob: -15.014193534851074
    10. '           ' → logprob: -15.139193534851074

Token 494: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1076427698135376
    2. ' j' → logprob: -2.857642650604248
    3. '(j' → logprob: -3.607642650604248
    4. ' (' → logprob: -4.232642650604248
    5. '((' → logprob: -6.607642650604248
    6. '   ' → logprob: -7.232642650604248
    7. '(' → logprob: -8.107643127441406
    8. ' ((' → logprob: -8.857643127441406
    9. '    ' → logprob: -9.232643127441406
    10. ' ' → logprob: -9.357643127441406

Token 495: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2450455129146576
    2. '(a' → logprob: -1.87004554271698
    3. 'j' → logprob: -3.4950454235076904
    4. '(j' → logprob: -3.8700454235076904
    5. ' (' → logprob: -4.7450456619262695
    6. ' a' → logprob: -5.9950456619262695
    7. ' j' → logprob: -8.24504566192627
    8. '(' → logprob: -8.62004566192627
    9. '((' → logprob: -8.74504566192627
    10. '   ' → logprob: -9.24504566192627

Token 496: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.1782583391759545e-05
    2. '[' → logprob: -10.750031471252441
    3. 'j' → logprob: -11.625031471252441
    4. '[a' → logprob: -14.750031471252441
    5. '[i' → logprob: -15.125031471252441
    6. ' [' → logprob: -15.625031471252441
    7. '[
' → logprob: -16.000032424926758
    8. '
' → logprob: -16.750032424926758
    9. '   ' → logprob: -16.875032424926758
    10. 'a' → logprob: -17.000032424926758

Token 497: ']' (ID: 60)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.07016639411449432
    2. ' >>' → logprob: -2.6951663494110107
    3. ']' → logprob: -8.69516658782959
    4. '[' → logprob: -10.57016658782959
    5. ')' → logprob: -11.69516658782959
    6. ')>>' → logprob: -11.94516658782959
    7. ' ' → logprob: -11.94516658782959
    8. '>' → logprob: -12.19516658782959
    9. '>>>' → logprob: -12.57016658782959
    10. ' ' → logprob: -13.32016658782959

Token 498: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.00761218648403883
    2. ' >>' → logprob: -4.882612228393555
    3. '>' → logprob: -12.632612228393555
    4. ' ' → logprob: -14.507612228393555
    5. '>>>' → logprob: -14.507612228393555
    6. ' ' → logprob: -14.632612228393555
    7. '>>,' → logprob: -15.507612228393555
    8. '[' → logprob: -15.882612228393555
    9. '>>)' → logprob: -15.882612228393555
    10. '>>&' → logprob: -16.132612228393555

Token 499: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.639096970204264e-05
    2. ' i' → logprob: -9.250096321105957
    3. '<|end|>' → logprob: -16.125097274780273
    4. '	i' → logprob: -16.500097274780273
    5. '   ' → logprob: -17.375097274780273
    6. ')i' → logprob: -18.000097274780273
    7. ' ' → logprob: -18.125097274780273
    8. '<|end|>' → logprob: -19.000097274780273
    9. ')' → logprob: -19.375097274780273
    10. '_i' → logprob: -19.625097274780273

Token 500: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006059147883206606
    2. ')&' → logprob: -5.131059169769287
    3. ' )' → logprob: -9.006058692932129
    4. '&' → logprob: -12.131058692932129
    5. '       ' → logprob: -14.381058692932129
    6. '   ' → logprob: -14.631058692932129
    7. ' &' → logprob: -15.131058692932129
    8. '               ' → logprob: -15.381058692932129
    9. '&)' → logprob: -15.506058692932129
    10. '           ' → logprob: -15.756058692932129

Token 501: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05210256576538086
    2. ')&' → logprob: -3.302102565765381
    3. '&' → logprob: -4.302102565765381
    4. ' &' → logprob: -7.802102565765381
    5. ' )' → logprob: -12.552103042602539
    6. '       ' → logprob: -12.927103042602539
    7. '&)' → logprob: -12.927103042602539
    8. '           ' → logprob: -13.427103042602539
    9. '   ' → logprob: -14.302103042602539
    10. '               ' → logprob: -14.427103042602539

Token 502: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.500431060791016
    4. '  ' → logprob: -17.750431060791016
    5. '```' → logprob: -18.062931060791016
    6. '           ' → logprob: -18.625431060791016
    7. '                   ' → logprob: -19.000431060791016
    8. '(' → logprob: -19.000431060791016
    9. ' ' → logprob: -19.125431060791016
    10. '61' → logprob: -19.250431060791016

Token 503: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.250007629394531
    4. '```' → logprob: -16.18750762939453
    5. '61' → logprob: -16.87500762939453
    6. '0' → logprob: -16.93750762939453
    7. '(' → logprob: -17.81250762939453
    8. '=' → logprob: -17.87500762939453
    9. '  ' → logprob: -18.25000762939453
    10. '
' → logprob: -18.25000762939453

Token 504: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10501987487077713
    2. ' ==' → logprob: -2.3550198078155518
    3. '1' → logprob: -5.480020046234131
    4. ')==' → logprob: -8.480019569396973
    5. ':' → logprob: -9.230019569396973
    6. '=' → logprob: -9.605019569396973
    7. ' ' → logprob: -9.855019569396973
    8. ']==' → logprob: -9.980019569396973
    9. '   ' → logprob: -10.105019569396973
    10. '       ' → logprob: -10.730019569396973

Token 505: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -14.750140190124512
    4. '0' → logprob: -17.625141143798828
    5. '  ' → logprob: -18.000141143798828
    6. '۱' → logprob: -18.375141143798828
    7. '>' → logprob: -18.625141143798828
    8. '' → logprob: -18.750141143798828
    9. '```' → logprob: -19.125141143798828
    10. 'True' → logprob: -19.125141143798828

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. '0' → logprob: -15.750004768371582
    4. '   ' → logprob: -15.937504768371582
    5. 'True' → logprob: -17.125003814697266
    6. '' → logprob: -17.562503814697266
    7. '۱' → logprob: -18.125003814697266
    8. '```' → logprob: -18.250003814697266
    9. '
' → logprob: -18.437503814697266
    10. 'true' → logprob: -18.625003814697266

Token 507: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07213246822357178
    2. ':' → logprob: -3.1971325874328613
    3. '                       ' → logprob: -3.5721325874328613
    4. '                   ' → logprob: -8.072132110595703
    5. ' and' → logprob: -8.947132110595703
    6. ' :
' → logprob: -9.447132110595703
    7. '):
' → logprob: -9.572132110595703
    8. '               ' → logprob: -12.447132110595703
    9. ':

' → logprob: -12.572132110595703
    10. '                           ' → logprob: -12.572132110595703

Token 508: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.030216125771403313
    2. 'a' → logprob: -3.9052162170410156
    3. ' a' → logprob: -5.155216217041016
    4. ':
' → logprob: -6.280216217041016
    5. '                   ' → logprob: -7.405216217041016
    6. ':' → logprob: -8.030216217041016
    7. '                        
' → logprob: -8.405216217041016
    8. '                           ' → logprob: -8.530216217041016
    9. '					' → logprob: -8.905216217041016
    10. ' :
' → logprob: -9.405216217041016

Token 509: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0015118853189051151
    2. ' a' → logprob: -6.501512050628662
    3. '   ' → logprob: -11.751511573791504
    4. '	a' → logprob: -14.126511573791504
    5. '           ' → logprob: -15.376511573791504
    6. '                           ' → logprob: -15.751511573791504
    7. '               ' → logprob: -15.876511573791504
    8. '                               ' → logprob: -16.25151252746582
    9. '                       ' → logprob: -16.50151252746582
    10. ' ' → logprob: -16.62651252746582

Token 510: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.000006675720215
    3. ' [' → logprob: -15.000006675720215
    4. '```' → logprob: -16.12500762939453
    5. '[
' → logprob: -17.00000762939453
    6. '[i' → logprob: -17.25000762939453
    7. '[a' → logprob: -17.25000762939453
    8. '   ' → logprob: -18.25000762939453
    9. 'j' → logprob: -18.25000762939453
    10. '[js' → logprob: -18.37500762939453

Token 511: ']' (ID: 60)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.432518421206623e-05
    2. '^' → logprob: -10.5000638961792
    3. ']' → logprob: -10.7500638961792
    4. '[' → logprob: -11.8750638961792
    5. ']^' → logprob: -12.8750638961792
    6. '[i' → logprob: -13.3750638961792
    7. 'j' → logprob: -13.5000638961792
    8. ' ^=' → logprob: -13.6250638961792
    9. '][' → logprob: -14.1250638961792
    10. '^[' → logprob: -14.8750638961792

Token 512: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.01869485154747963
    2. ' ^=' → logprob: -4.018694877624512
    3. '=' → logprob: -7.518694877624512
    4. ')^' → logprob: -14.768694877624512
    5. ' ' → logprob: -15.393694877624512
    6. '   ' → logprob: -15.393694877624512
    7. '_^' → logprob: -15.518694877624512
    8. '^^' → logprob: -15.643694877624512
    9. 'ˆ' → logprob: -15.643694877624512
    10. '^

' → logprob: -15.768694877624512

Token 513: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.2729995988775045e-06
    2. ' a' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.5000057220459
    4. '                   ' → logprob: -20.5000057220459
    5. '	a' → logprob: -21.2500057220459
    6. '                       ' → logprob: -21.3750057220459
    7. '               ' → logprob: -22.3750057220459
    8. '    ' → logprob: -22.5000057220459
    9. '_a' → logprob: -22.6250057220459
    10. '           ' → logprob: -22.8750057220459

Token 514: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. 'di' → logprob: -13.875000953674316
    3. ' di' → logprob: -18.625001907348633
    4. 'd' → logprob: -18.875001907348633
    5. '   ' → logprob: -19.000001907348633
    6. 'Di' → logprob: -19.250001907348633
    7. '```' → logprob: -19.500001907348633
    8. '(di' → logprob: -19.750001907348633
    9. 'a' → logprob: -19.875001907348633
    10. '_di' → logprob: -19.875001907348633

Token 515: 'di' (ID: 4091)
  Prédit: 'di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -1.8624639324116288e-06
    2. ' di' → logprob: -13.250001907348633
    3. 'd' → logprob: -17.000001907348633
    4. '(di' → logprob: -18.875001907348633
    5. '[' → logprob: -19.000001907348633
    6. '   ' → logprob: -20.000001907348633
    7. 'dj' → logprob: -21.375001907348633
    8. ' ' → logprob: -21.375001907348633
    9. '           ' → logprob: -21.750001907348633
    10. '_di' → logprob: -21.750001907348633

Token 516: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07840836048126221
    2. ']' → logprob: -2.7034082412719727
    3. '<|end|>' → logprob: -5.078408241271973
    4. '}' → logprob: -6.203408241271973
    5. '[' → logprob: -9.578408241271973
    6. '<|end|>' → logprob: -10.453408241271973
    7. '[j' → logprob: -11.453408241271973
    8. ')]' → logprob: -11.578408241271973
    9. '']' → logprob: -11.828408241271973
    10. '```' → logprob: -11.828408241271973

Token 517: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 518: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3041917085647583
    2. '   ' → logprob: -1.4291917085647583
    3. 'result' → logprob: -4.304191589355469
    4. ' return' → logprob: -5.554191589355469
    5. '#' (adapté à ' #') → logprob: -6.054191589355469
    6. 'rest' → logprob: -7.304191589355469
    7. 'max' → logprob: -7.304191589355469
    8. '```' → logprob: -8.054191589355469
    9. 'res' → logprob: -8.179191589355469
    10. 'sum' → logprob: -8.429191589355469

Token 519: ' Calcul' (ID: 57243)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -1.2982022762298584
    2. 'result' → logprob: -1.7982022762298584
    3. 'res' → logprob: -2.0482022762298584
    4. 'return' → logprob: -2.1732022762298584
    5. '#' → logprob: -2.2982022762298584
    6. 'max' → logprob: -3.1732022762298584
    7. 'total' → logprob: -3.2982022762298584
    8. 'x' → logprob: -3.5482022762298584
    9. 'blu' → logprob: -3.6732022762298584
    10. 'rest' → logprob: -3.7982022762298584

Token 520: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04467054829001427
    2. ' du' → logprob: -4.544670581817627
    3. 'du' → logprob: -5.044670581817627
    4. ' de' → logprob: -5.169670581817627
    5. ' of' → logprob: -5.669670581817627
    6. 'result' → logprob: -5.919670581817627
    7. 'total' → logprob: -6.294670581817627
    8. 'blu' → logprob: -6.294670581817627
    9. 'rest' → logprob: -6.419670581817627
    10. ' total' → logprob: -6.669670581817627

Token 521: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.8465012311935425
    2. 'max' → logprob: -1.2215012311935425
    3. 'res' → logprob: -2.221501350402832
    4. 'result' → logprob: -2.846501350402832
    5. 'blu' → logprob: -3.346501350402832
    6. 'x' → logprob: -3.846501350402832
    7. 'best' → logprob: -3.846501350402832
    8. 'rest' → logprob: -4.471501350402832
    9. 'ans' → logprob: -5.971501350402832
    10. 'total' → logprob: -6.096501350402832

Token 522: ' des' (ID: 731)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.4660763442516327
    2. ' total' → logprob: -2.591076374053955
    3. 'total' → logprob: -2.591076374053955
    4. 'rest' → logprob: -2.716076374053955
    5. ' rest' → logprob: -3.591076374053955
    6. ' blu' → logprob: -3.591076374053955
    7. ' bleu' → logprob: -3.841076374053955
    8. '   ' → logprob: -4.466076374053955
    9. ' de' → logprob: -5.091076374053955
    10. 'result' → logprob: -5.091076374053955

Token 523: ' éléments' (ID: 57375)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' → logprob: -1.0596003532409668
    2. 'elements' → logprob: -1.3096003532409668
    3. ' elements' → logprob: -2.059600353240967
    4. 'rest' → logprob: -2.184600353240967
    5. 'élé' → logprob: -3.309600353240967
    6. 'a' → logprob: -3.809600353240967
    7. 'remain' → logprob: -4.434600353240967
    8. ' rest' → logprob: -4.809600353240967
    9. 'elem' → logprob: -5.059600353240967
    10. ' éléments' → logprob: -5.184600353240967

Token 524: ' sélection' (ID: 43472)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.2268801927566528
    2. ' de' → logprob: -1.9768801927566528
    3. ' rest' → logprob: -1.9768801927566528
    4. 'de' → logprob: -1.9768801927566528
    5. 'blu' → logprob: -1.9768801927566528
    6. '   ' → logprob: -2.8518800735473633
    7. '#' → logprob: -3.7268800735473633
    8. 'dans' → logprob: -4.101880073547363
    9. ' dans' → logprob: -5.226880073547363
    10. 'non' → logprob: -5.351880073547363

Token 525: 'nés' (ID: 72145)
  Prédit: 'nés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nés' → logprob: -0.2162918597459793
    2. 'és' → logprob: -1.716291904449463
    3. 'onn' → logprob: -4.591291904449463
    4. 'ion' → logprob: -5.966291904449463
    5. 'isés' → logprob: -7.591291904449463
    6. 'ction' → logprob: -7.966291904449463
    7. '   ' → logprob: -8.341291427612305
    8. 'érés' → logprob: -8.966291427612305
    9. 'ifiés' → logprob: -9.091291427612305
    10. 'é' → logprob: -9.091291427612305

Token 526: ' pour' (ID: 1930)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.44518420100212097
    2. '   ' → logprob: -1.6951842308044434
    3. 'xor' → logprob: -2.4451842308044434
    4. 'result' → logprob: -2.9451842308044434
    5. 'x' → logprob: -4.695184230804443
    6. 'res' → logprob: -5.320184230804443
    7. 'ble' → logprob: -5.320184230804443
    8. 'for' → logprob: -5.945184230804443
    9. 'blue' → logprob: -6.070184230804443
    10. 'ans' → logprob: -6.570184230804443

Token 527: ' "' (ID: 392)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.004837838001549244
    2. ' blu' → logprob: -6.629837989807129
    3. 'ble' → logprob: -6.879837989807129
    4. ' bleu' → logprob: -7.754837989807129
    5. 'la' → logprob: -7.879837989807129
    6. '#' → logprob: -7.879837989807129
    7. ' la' → logprob: -8.129837989807129
    8. 'bl' → logprob: -8.629837989807129
    9. 'le' → logprob: -9.004837989807129
    10. ' le' → logprob: -9.129837989807129

Token 528: 'blu' (ID: 125889)
  Prédit: 'blu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.020257355645298958
    2. 'a' → logprob: -4.020257472991943
    3. 'x' → logprob: -6.895257472991943
    4. ' blu' → logprob: -8.145256996154785
    5. 'ble' → logprob: -9.270256996154785
    6. '```' → logprob: -9.270256996154785
    7. 'j' → logprob: -9.520256996154785
    8. 'b' → logprob: -9.770256996154785
    9. 'i' → logprob: -9.770256996154785
    10. 'bl' → logprob: -9.770256996154785

Token 529: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003995053935796022
    2. '    
' → logprob: -7.378994941711426
    3. ' =' → logprob: -7.503994941711426
    4. '
' → logprob: -7.503994941711426
    5. 'blu' → logprob: -7.503994941711426
    6. ' ' → logprob: -8.128994941711426
    7. ':' → logprob: -8.378994941711426
    8. ',' → logprob: -8.628994941711426
    9. ')' → logprob: -8.753994941711426
    10. 'for' → logprob: -9.253994941711426

Token 530: '   ' (ID: 271)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.4509095847606659
    2. 'xor' → logprob: -1.7009096145629883
    3. 'res' → logprob: -2.9509096145629883
    4. 'x' → logprob: -3.0759096145629883
    5. 'result' → logprob: -3.9509096145629883
    6. 'val' → logprob: -4.200909614562988
    7. 'ans' → logprob: -4.450909614562988
    8. '   ' → logprob: -4.950909614562988
    9. 'blue' → logprob: -5.075909614562988
    10. 'bl' → logprob: -5.700909614562988

Token 531: ' b' (ID: 287)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.8323625922203064
    2. 'xor' → logprob: -1.4573626518249512
    3. 'x' → logprob: -2.207362651824951
    4. 'res' → logprob: -2.457362651824951
    5. 'ans' → logprob: -3.207362651824951
    6. 'val' → logprob: -3.832362651824951
    7. 'result' → logprob: -4.457362651824951
    8. 'blue' → logprob: -4.582362651824951
    9. 'base' → logprob: -5.082362651824951
    10. 'bl' → logprob: -5.332362651824951

Token 532: 'sum' (ID: 12298)
  Prédit: 'lu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lu' → logprob: -0.2840818464756012
    2. 'l' → logprob: -2.1590819358825684
    3. ' =' → logprob: -2.6590819358825684
    4. 'x' → logprob: -3.9090819358825684
    5. 'xor' → logprob: -3.9090819358825684
    6. 'ase' → logprob: -4.909081935882568
    7. '_x' → logprob: -5.534081935882568
    8. 'le' → logprob: -6.284081935882568
    9. '=' → logprob: -6.284081935882568
    10. 'lur' → logprob: -6.659081935882568

Token 533: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132629096508026
    2. '=' → logprob: -1.313262939453125
    3. '   ' → logprob: -14.813262939453125
    4. 's' → logprob: -15.313262939453125
    5. ' ' → logprob: -15.438262939453125
    6. ' ^=' → logprob: -15.938262939453125
    7. '  ' → logprob: -16.438262939453125
    8. 'a' → logprob: -16.688262939453125
    9. '_' → logprob: -17.188262939453125
    10. '_=' → logprob: -17.813262939453125

Token 534: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.875003814697266
    3. '   ' → logprob: -13.625003814697266
    4. 's' → logprob: -18.000003814697266
    5. '       ' → logprob: -18.000003814697266
    6. 'sum' → logprob: -18.875003814697266
    7. '1' → logprob: -19.812503814697266
    8. '  ' → logprob: -20.062503814697266
    9. '۰' → logprob: -20.062503814697266
    10. '
' → logprob: -20.187503814697266

Token 535: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -17.125
    4. 's' → logprob: -19.0
    5. 'sum' → logprob: -19.375
    6. '=' → logprob: -20.25
    7. '1' → logprob: -20.375
    8. '۰' → logprob: -20.375
    9. '０' → logprob: -20.75
    10. 'a' → logprob: -21.125

Token 536: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3878173232078552
    2. ' for' → logprob: -1.5128173828125
    3. '<|end|>' → logprob: -2.7628173828125
    4. '   ' → logprob: -4.1378173828125
    5. '
' → logprob: -4.3878173828125
    6. '    
' → logprob: -5.5128173828125
    7. '  
' → logprob: -6.2628173828125
    8. '	for' → logprob: -6.3878173828125
    9. ' 
' → logprob: -7.3878173828125
    10. ' ' → logprob: -7.7628173828125

Token 537: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08683093637228012
    2. ' for' → logprob: -2.8368308544158936
    3. '   ' → logprob: -3.8368308544158936
    4. '	for' → logprob: -6.586831092834473
    5. '
' → logprob: -7.211831092834473
    6. '    
' → logprob: -8.211831092834473
    7. '  
' → logprob: -8.336831092834473
    8. ' 
' → logprob: -8.711831092834473
    9. '	
' → logprob: -9.961831092834473
    10. '<|end|>' → logprob: -9.961831092834473

Token 538: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001431114797014743
    2. ' for' → logprob: -9.250143051147461
    3. '   ' → logprob: -10.000143051147461
    4. '	for' → logprob: -13.375143051147461
    5. ' ' → logprob: -19.00014305114746
    6. '       ' → logprob: -20.00014305114746
    7. '
' → logprob: -20.87514305114746
    8. '```' → logprob: -20.87514305114746
    9. '  ' → logprob: -21.12514305114746
    10. '    
' → logprob: -22.62514305114746

Token 539: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4014468789100647
    2. 'idx' → logprob: -1.15144681930542
    3. 'x' → logprob: -5.27644681930542
    4. 'di' → logprob: -5.40144681930542
    5. 'j' → logprob: -6.02644681930542
    6. 'index' → logprob: -7.02644681930542
    7. ' idx' → logprob: -7.02644681930542
    8. 'k' → logprob: -8.276447296142578
    9. 'bi' → logprob: -8.401447296142578
    10. ' i' → logprob: -9.026447296142578

Token 540: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25198617577552795
    2. 'in' → logprob: -1.5019861459732056
    3. ' ' → logprob: -10.751986503601074
    4. '	in' → logprob: -11.126986503601074
    5. '   ' → logprob: -11.751986503601074
    6. 'i' → logprob: -12.376986503601074
    7. '  ' → logprob: -12.376986503601074
    8. '    ' → logprob: -13.626986503601074
    9. ' i' → logprob: -14.126986503601074
    10. ' ' → logprob: -14.751986503601074

Token 541: ' blu' (ID: 55577)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.0021950986701995134
    2. ' blu' → logprob: -6.127194881439209
    3. 'ble' → logprob: -12.502195358276367
    4. '   ' → logprob: -13.127195358276367
    5. 'blue' → logprob: -13.252195358276367
    6. 'range' → logprob: -14.127195358276367
    7. 'bl' → logprob: -14.627195358276367
    8. ' range' → logprob: -14.877195358276367
    9. 'blur' → logprob: -15.127195358276367
    10. ' ' → logprob: -15.752195358276367

Token 542: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21940873563289642
    2. ':
' → logprob: -1.7194087505340576
    3. ' in' → logprob: -4.3444085121154785
    4. 'in' → logprob: -5.5944085121154785
    5. '   ' → logprob: -7.0944085121154785
    6. '       ' → logprob: -8.594408988952637
    7. '):
' → logprob: -10.594408988952637
    8. ' :' → logprob: -11.094408988952637
    9. 'not' → logprob: -11.719408988952637
    10. ':
' → logprob: -11.719408988952637

Token 543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020077669993042946
    2. 'b' → logprob: -4.270077705383301
    3. ' b' → logprob: -5.145077705383301
    4. '   ' → logprob: -10.1450777053833
    5. '```' → logprob: -10.6450777053833
    6. '	b' → logprob: -13.5200777053833
    7. '           ' → logprob: -13.5200777053833
    8. 'bs' → logprob: -14.0200777053833
    9. '
' → logprob: -14.6450777053833
    10. '        
' → logprob: -15.5200777053833

Token 544: ' b' (ID: 287)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.0074575417675077915
    2. 'b' (adapté à ' b') → logprob: -5.007457733154297
    3. ' b' → logprob: -7.382457733154297
    4. '   ' → logprob: -9.632457733154297
    5. '       ' → logprob: -10.007457733154297
    6. ' bs' → logprob: -12.257457733154297
    7. '	b' → logprob: -12.757457733154297
    8. 'bst' → logprob: -14.132457733154297
    9. '```' → logprob: -14.757457733154297
    10. 'bsd' → logprob: -15.882457733154297

Token 545: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -4.320199877838604e-07
    2. 'bs' → logprob: -15.0
    3. '=' → logprob: -17.25
    4. 's' → logprob: -17.75
    5. 'xor' → logprob: -18.125
    6. '=sum' → logprob: -18.375
    7. 'um' → logprob: -18.5
    8. '   ' → logprob: -19.25
    9. '_sum' → logprob: -19.375
    10. '+=' → logprob: -19.875

Token 546: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.02977699227631092
    2. ' ^=' → logprob: -3.5297770500183105
    3. '+=' → logprob: -11.029776573181152
    4. '=' → logprob: -12.029776573181152
    5. '   ' → logprob: -12.654776573181152
    6. '|' → logprob: -14.529776573181152
    7. '_^' → logprob: -15.529776573181152
    8. '^

' → logprob: -16.02977752685547
    9. ' ' → logprob: -16.52977752685547
    10. '^^' → logprob: -16.65477752685547

Token 547: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.676292231422849e-05
    2. ' a' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.375017166137695
    4. '	a' → logprob: -21.000017166137695
    5. '(a' → logprob: -22.250017166137695
    6. ' ' → logprob: -22.250017166137695
    7. '
' → logprob: -22.750017166137695
    8. '  ' → logprob: -22.750017166137695
    9. '[a' → logprob: -23.625017166137695
    10. '_a' → logprob: -23.750017166137695

Token 548: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011075647547841072
    2. 'i' → logprob: -4.511075496673584
    3. '[' → logprob: -10.511075973510742
    4. ' i' → logprob: -14.886075973510742
    5. '[
' → logprob: -15.261075973510742
    6. '(i' → logprob: -17.011075973510742
    7. ' [' → logprob: -18.136075973510742
    8. '   ' → logprob: -18.636075973510742
    9. '```' → logprob: -18.636075973510742
    10. '{i' → logprob: -18.761075973510742

Token 549: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07006792724132538
    2. '<|end|>' → logprob: -3.445067882537842
    3. ']' → logprob: -3.570067882537842
    4. '}' → logprob: -4.945067882537842
    5. '<|end|>' → logprob: -8.445068359375
    6. '   ' → logprob: -8.945068359375
    7. ' ' → logprob: -10.820068359375
    8. ')
' → logprob: -10.945068359375
    9. ' )' → logprob: -11.195068359375
    10. '       ' → logprob: -11.195068359375

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4818907678127289
    2. '
' → logprob: -0.9818907976150513
    3. 'return' → logprob: -5.231890678405762
    4. '    
' → logprob: -6.231890678405762
    5. ' return' → logprob: -8.731890678405762
    6. 'rest' → logprob: -8.981890678405762
    7. '#' → logprob: -9.356890678405762
    8. '
' → logprob: -10.731890678405762
    9. ' 
' → logprob: -11.106890678405762
    10. 'result' → logprob: -11.356890678405762

Token 551: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5799528956413269
    2. '   ' → logprob: -0.8299528956413269
    3. 'rest' → logprob: -6.079952716827393
    4. ' return' → logprob: -7.079952716827393
    5. 'remain' → logprob: -7.829952716827393
    6. 'result' → logprob: -8.07995319366455
    7. '#' (adapté à ' #') → logprob: -9.70495319366455
    8. 'ret' → logprob: -10.95495319366455
    9. 'res' → logprob: -11.07995319366455
    10. '```' → logprob: -11.57995319366455

Token 552: ' La' (ID: 3038)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5668356418609619
    2. 'rest' → logprob: -1.441835641860962
    3. 'rs' → logprob: -2.441835641860962
    4. 'result' → logprob: -3.441835641860962
    5. 'res' → logprob: -3.816835641860962
    6. '#' → logprob: -3.941835641860962
    7. 'r' → logprob: -4.941835403442383
    8. 'ret' → logprob: -5.191835403442383
    9. 'rets' → logprob: -5.316835403442383
    10. 'remain' → logprob: -5.691835403442383

Token 553: ' somme' (ID: 64484)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3224853575229645
    2. 'result' → logprob: -2.3224854469299316
    3. 'rest' → logprob: -2.4474854469299316
    4. ' return' → logprob: -3.4474854469299316
    5. 'remain' → logprob: -4.322485446929932
    6. ' result' → logprob: -4.697485446929932
    7. 'res' → logprob: -5.322485446929932
    8. 'max' → logprob: -5.572485446929932
    9. 's' → logprob: -5.572485446929932
    10. 'total' → logprob: -5.697485446929932

Token 554: ' maximale' (ID: 76380)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.37978696823120117
    2. 'max' → logprob: -2.504786968231201
    3. 'return' → logprob: -2.754786968231201
    4. ' rest' → logprob: -3.754786968231201
    5. ' return' → logprob: -3.879786968231201
    6. 'total' → logprob: -4.129786968231201
    7. ' totale' → logprob: -4.254786968231201
    8. 'final' → logprob: -4.379786968231201
    9. ' restante' → logprob: -4.504786968231201
    10. ' maximale' → logprob: -5.004786968231201

Token 555: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12313210219144821
    2. 'return' → logprob: -2.4981319904327393
    3. ' return' → logprob: -3.6231319904327393
    4. 'result' → logprob: -6.123132228851318
    5. 'max' → logprob: -6.248132228851318
    6. ' =' → logprob: -6.748132228851318
    7. '+' → logprob: -7.998132228851318
    8. '=' → logprob: -8.49813175201416
    9. 'ret' → logprob: -8.62313175201416
    10. ' result' → logprob: -8.74813175201416

Token 556: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2594520151615143
    2. ' return' → logprob: -2.0094521045684814
    3. 'return' → logprob: -2.3844521045684814
    4. ' =' → logprob: -6.759451866149902
    5. '=' → logprob: -8.509451866149902
    6. 'result' → logprob: -8.509451866149902
    7. '
' → logprob: -8.884451866149902
    8. '+' → logprob: -8.884451866149902
    9. '    
' → logprob: -9.759451866149902
    10. '    ' → logprob: -9.884451866149902

Token 557: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6683120131492615
    2. 'max' → logprob: -1.1683120727539062
    3. '   ' → logprob: -2.0433120727539062
    4. ' max' → logprob: -3.2933120727539062
    5. ' sums' → logprob: -4.793312072753906
    6. 'bs' → logprob: -7.293312072753906
    7. 'sum' → logprob: -8.293312072753906
    8. 'return' → logprob: -8.918312072753906
    9. 'b' → logprob: -9.293312072753906
    10. '(max' → logprob: -9.418312072753906

Token 558: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0042188167572021
    2. 'max' → logprob: -1.1292188167572021
    3. 'bs' → logprob: -1.3792188167572021
    4. 'return' → logprob: -4.004219055175781
    5. ' max' → logprob: -4.129219055175781
    6. 'b' → logprob: -4.629219055175781
    7. '   ' → logprob: -4.754219055175781
    8. 'sum' → logprob: -6.379219055175781
    9. ' sums' → logprob: -6.379219055175781
    10. ' bs' → logprob: -7.504219055175781

Token 559: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4906286895275116
    2. 's' → logprob: -0.990628719329834
    3. 'of' → logprob: -5.865628719329834
    4. 'b' → logprob: -5.990628719329834
    5. 'bs' → logprob: -5.990628719329834
    6. ' of' → logprob: -6.240628719329834
    7. 'de' → logprob: -6.365628719329834
    8. 'max' → logprob: -6.615628719329834
    9. '=' → logprob: -7.240628719329834
    10. ' de' → logprob: -7.615628719329834

Token 560: ' XOR' (ID: 147209)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.1195325031876564
    2. 'b' → logprob: -2.494532585144043
    3. 's' → logprob: -3.619532585144043
    4. 'xor' → logprob: -6.119532585144043
    5. 'blu' → logprob: -7.744532585144043
    6. ' b' → logprob: -7.994532585144043
    7. 'xs' → logprob: -9.244532585144043
    8. 'bis' → logprob: -9.994532585144043
    9. 'bl' → logprob: -10.119532585144043
    10. ' bs' → logprob: -10.619532585144043

Token 561: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4190414845943451
    2. ' of' → logprob: -2.044041395187378
    3. 's' → logprob: -2.669041395187378
    4. ' de' → logprob: -3.544041395187378
    5. 'b' → logprob: -3.794041395187378
    6. '(s' → logprob: -3.919041395187378
    7. 'bs' → logprob: -4.294041633605957
    8. ' b' → logprob: -4.419041633605957
    9. 'of' → logprob: -4.669041633605957
    10. ' des' → logprob: -4.794041633605957

Token 562: 'bs' (ID: 6229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4933047592639923
    2. ' b' → logprob: -1.11830472946167
    3. 'bs' → logprob: -3.36830472946167
    4. ')' → logprob: -4.49330472946167
    5. 's' → logprob: -5.24330472946167
    6. ' of' → logprob: -5.36830472946167
    7. '(b' → logprob: -6.11830472946167
    8. 'of' → logprob: -6.74330472946167
    9. 'bl' → logprob: -7.24330472946167
    10. ' de' → logprob: -7.61830472946167

Token 563: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0013314292300492525
    2. 'sum' → logprob: -6.626331329345703
    3. 'ums' → logprob: -12.501331329345703
    4. 'm' → logprob: -14.251331329345703
    5. 'umsum' → logprob: -14.501331329345703
    6. 'ум' → logprob: -15.751331329345703
    7. 'u' → logprob: -16.001331329345703
    8. '_sum' → logprob: -16.126331329345703
    9. 's' → logprob: -16.376331329345703
    10. '   ' → logprob: -17.126331329345703

Token 564: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13519218564033508
    2. '+' → logprob: -2.8851921558380127
    3. ' ^' → logprob: -2.8851921558380127
    4. ')' → logprob: -4.510192394256592
    5. '   ' → logprob: -6.510192394256592
    6. '^' → logprob: -6.635192394256592
    7. ' ' → logprob: -7.385192394256592
    8. ' )' → logprob: -9.010191917419434
    9. ' plus' → logprob: -9.260191917419434
    10. ' ' → logprob: -10.510191917419434

Token 565: ' de' (ID: 334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6997523307800293
    2. ' +' → logprob: -0.6997523307800293
    3. ' plus' → logprob: -5.199752330780029
    4. '   ' → logprob: -6.949752330780029
    5. 'plus' → logprob: -9.824752807617188
    6. ' ' → logprob: -11.449752807617188
    7. ')' → logprob: -11.949752807617188
    8. ' et' → logprob: -12.199752807617188
    9. '    ' → logprob: -12.324752807617188
    10. ',' → logprob: -12.574752807617188

Token 566: ' la' (ID: 557)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.8978854417800903
    2. 'bs' → logprob: -1.0228854417800903
    3. 'b' → logprob: -2.147885322570801
    4. ' b' → logprob: -2.522885322570801
    5. ' la' → logprob: -4.897885322570801
    6. 'bl' → logprob: -5.022885322570801
    7. ' blu' → logprob: -5.022885322570801
    8. 's' → logprob: -5.647885322570801
    9. 'la' → logprob: -6.397885322570801
    10. 'a' → logprob: -6.522885322570801

Token 567: ' base' (ID: 3611)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.3780222535133362
    2. 'bs' → logprob: -2.1280221939086914
    3. 's' → logprob: -2.3780221939086914
    4. 'rest' → logprob: -2.8780221939086914
    5. 'reste' → logprob: -4.628022193908691
    6. 'bl' → logprob: -4.628022193908691
    7. 'xor' → logprob: -4.753022193908691
    8. 'b' → logprob: -5.128022193908691
    9. 'ble' → logprob: -5.628022193908691
    10. 'subset' → logprob: -6.003022193908691

Token 568: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.2979388236999512
    2. ' plus' → logprob: -1.4229388236999512
    3. '+' → logprob: -1.5479388236999512
    4. '   ' → logprob: -2.297938823699951
    5. ' +' → logprob: -2.797938823699951
    6. 'plus' → logprob: -2.922938823699951
    7. 'et' → logprob: -3.172938823699951
    8. ' and' → logprob: -5.547938823699951
    9. 'and' → logprob: -6.047938823699951
    10. ' ' → logprob: -6.047938823699951

Token 569: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.104520559310913
    2. '(s' → logprob: -1.354520559310913
    3. 's' → logprob: -1.729520559310913
    4. ' sums' → logprob: -1.729520559310913
    5. '   ' → logprob: -2.979520559310913
    6. ' s' → logprob: -6.479520797729492
    7. ' b' → logprob: -7.479520797729492
    8. 'sum' → logprob: -7.729520797729492
    9. 'b' → logprob: -7.979520797729492
    10. ' de' → logprob: -8.354520797729492

Token 570: ' XOR' (ID: 147209)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4517556428909302
    2. ' sums' → logprob: -1.5767556428909302
    3. '(s' → logprob: -2.0767555236816406
    4. ' (' → logprob: -3.8267555236816406
    5. ' s' → logprob: -5.076755523681641
    6. 'sum' → logprob: -7.576755523681641
    7. ' XOR' → logprob: -7.576755523681641
    8. ' b' → logprob: -7.826755523681641
    9. '   ' → logprob: -8.07675552368164
    10. ' sum' → logprob: -8.20175552368164

Token 571: ' du' (ID: 1462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24555452167987823
    2. '   ' → logprob: -1.9955545663833618
    3. ' of' → logprob: -2.9955544471740723
    4. '(s' → logprob: -4.120554447174072
    5. ' (' → logprob: -5.995554447174072
    6. 'of' → logprob: -6.120554447174072
    7. ' des' → logprob: -6.370554447174072
    8. '^' → logprob: -6.370554447174072
    9. ' sums' → logprob: -6.370554447174072
    10. ' de' → logprob: -6.745554447174072

Token 572: ' reste' (ID: 26769)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2135249674320221
    2. 's' → logprob: -2.3385250568389893
    3. ' (' → logprob: -2.5885250568389893
    4. 'rest' → logprob: -4.46352481842041
    5. ' sums' → logprob: -5.33852481842041
    6. '(rest' → logprob: -6.71352481842041
    7. '(' → logprob: -7.21352481842041
    8. ' rest' → logprob: -7.21352481842041
    9. 'sum' → logprob: -7.71352481842041
    10. ' reste' → logprob: -8.08852481842041

Token 573: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001925182994455099
    2. 's' → logprob: -6.626924991607666
    3. ' return' → logprob: -8.626925468444824
    4. 'return' → logprob: -8.751925468444824
    5. ',' → logprob: -9.751925468444824
    6. ' sums' → logprob: -10.001925468444824
    7. '
' → logprob: -10.501925468444824
    8. '    
' → logprob: -10.876925468444824
    9. '  ' → logprob: -11.251925468444824
    10. '+' → logprob: -11.376925468444824

Token 574: 's' (ID: 82)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.7372180819511414
    2. 's' → logprob: -0.8622180819511414
    3. ' sums' → logprob: -2.612218141555786
    4. ' (' → logprob: -4.112217903137207
    5. '   ' → logprob: -5.362217903137207
    6. 'bs' → logprob: -6.362217903137207
    7. 'sum' → logprob: -6.862217903137207
    8. 'b' → logprob: -7.237217903137207
    9. '(b' → logprob: -7.862217903137207
    10. ' b' → logprob: -8.487217903137207

Token 575: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.004830361343920231
    2. 's' → logprob: -5.629830360412598
    3. 'um' → logprob: -6.879830360412598
    4. '(s' → logprob: -10.004830360412598
    5. '(' → logprob: -10.504830360412598
    6. 'a' → logprob: -11.629830360412598
    7. 'umsum' → logprob: -11.629830360412598
    8. ' =' → logprob: -11.942330360412598
    9. '=' → logprob: -11.942330360412598
    10. 'u' → logprob: -12.067330360412598

Token 576: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.07185947895050049
    2. '^' → logprob: -2.696859359741211
    3. '   ' → logprob: -7.321859359741211
    4. ')' → logprob: -7.571859359741211
    5. ' ' → logprob: -8.071859359741211
    6. ' -' → logprob: -8.071859359741211
    7. '-' → logprob: -10.821859359741211
    8. ' ^
' → logprob: -10.821859359741211
    9. ' ' → logprob: -11.071859359741211
    10. '  ' → logprob: -11.321859359741211

Token 577: ' b' (ID: 287)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.04878152534365654
    2. ' b' → logprob: -3.048781633377075
    3. 'b' → logprob: -8.548781394958496
    4. '	b' → logprob: -15.423781394958496
    5. 'bsd' → logprob: -17.048782348632812
    6. 'bst' → logprob: -17.548782348632812
    7. '   ' → logprob: -17.673782348632812
    8. ' ' → logprob: -17.798782348632812
    9. '  ' → logprob: -18.673782348632812
    10. '```' → logprob: -19.298782348632812

Token 578: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.05526711791753769
    2. 'bs' → logprob: -2.930267095565796
    3. ' b' → logprob: -8.180267333984375
    4. 'b' → logprob: -10.305267333984375
    5. 's' → logprob: -11.305267333984375
    6. 'ss' → logprob: -11.305267333984375
    7. 'ys' → logprob: -11.430267333984375
    8. 'um' → logprob: -11.680267333984375
    9. 'psum' → logprob: -12.180267333984375
    10. 'su' → logprob: -12.930267333984375

Token 579: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002275746548548341
    2. '   ' → logprob: -6.2522759437561035
    3. ')
' → logprob: -8.377275466918945
    4. ' )' → logprob: -9.377275466918945
    5. ').' → logprob: -11.877275466918945
    6. ')+' → logprob: -12.252275466918945
    7. ' +' → logprob: -12.627275466918945
    8. '.' → logprob: -12.752275466918945
    9. ')

' → logprob: -13.252275466918945
    10. '+' → logprob: -13.252275466918945

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005395257379859686
    2. 'return' → logprob: -5.255395412445068
    3. ' return' → logprob: -8.88039493560791
    4. '
' → logprob: -11.25539493560791
    5. '    
' → logprob: -11.88039493560791
    6. '	return' → logprob: -13.38039493560791
    7. '```' → logprob: -14.63039493560791
    8. '       ' → logprob: -15.88039493560791
    9. '  
' → logprob: -16.255395889282227
    10. '    ' → logprob: -17.005395889282227

Token 581: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01931220293045044
    2. '   ' → logprob: -4.019312381744385
    3. ' return' → logprob: -6.769312381744385
    4. 'result' → logprob: -11.519311904907227
    5. '
' → logprob: -13.269311904907227
    6. '    
' → logprob: -14.269311904907227
    7. '	return' → logprob: -14.394311904907227
    8. '```' → logprob: -16.019311904907227
    9. 'ret' → logprob: -17.769311904907227
    10. '  ' → logprob: -17.894311904907227

Token 582: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.27520424127578735
    2. 'b' → logprob: -1.5252041816711426
    3. 'bs' → logprob: -3.7752041816711426
    4. 's' → logprob: -10.2752046585083
    5. '(b' → logprob: -10.4002046585083
    6. '(s' → logprob: -12.6502046585083
    7. '   ' → logprob: -13.7752046585083
    8. '(' → logprob: -13.7752046585083
    9. ' bs' → logprob: -13.7752046585083
    10. '	b' → logprob: -14.6502046585083

Token 583: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.018176980316638947
    2. 's' → logprob: -4.018177032470703
    3. 'su' → logprob: -10.643177032470703
    4. 'sup' → logprob: -13.268177032470703
    5. 'summ' → logprob: -15.018177032470703
    6. 'sm' → logprob: -15.143177032470703
    7. 'sur' → logprob: -15.268177032470703
    8. 'sun' → logprob: -16.268177032470703
    9. 'ss' → logprob: -16.268177032470703
    10. 'sym' → logprob: -16.518177032470703

Token 584: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08507993817329407
    2. ' +' → logprob: -2.8350799083709717
    3. '<|end|>' → logprob: -3.8350799083709717
    4. ' ' → logprob: -7.085080146789551
    5. ' ^' → logprob: -8.96008014678955
    6. '+
' → logprob: -9.21008014678955
    7. '
' → logprob: -10.33508014678955
    8. '^' → logprob: -10.71008014678955
    9. ' +
' → logprob: -11.08508014678955
    10. '[' → logprob: -11.21008014678955

Token 585: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.048618022352457047
    2. ' (' → logprob: -3.0486180782318115
    3. '(' → logprob: -10.67361831665039
    4. '(b' → logprob: -12.17361831665039
    5. 's' → logprob: -13.29861831665039
    6. '(bs' → logprob: -15.17361831665039
    7. '(sum' → logprob: -15.42361831665039
    8. '((' → logprob: -16.67361831665039
    9. '   ' → logprob: -17.17361831665039
    10. '(scores' → logprob: -17.29861831665039

Token 586: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007977803237736225
    2. '(s' → logprob: -4.8829779624938965
    3. ' sums' → logprob: -8.007977485656738
    4. 'bs' → logprob: -10.632977485656738
    5. 'sum' → logprob: -12.007977485656738
    6. ' (' → logprob: -12.507977485656738
    7. '   ' → logprob: -13.757977485656738
    8. 'b' → logprob: -14.132977485656738
    9. ' s' → logprob: -14.382977485656738
    10. 'summ' → logprob: -14.507977485656738

Token 587: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.0006575119914487004
    2. 's' → logprob: -7.375657558441162
    3. 'um' → logprob: -10.625657081604004
    4. '[' → logprob: -13.250657081604004
    5. '#' → logprob: -13.750657081604004
    6. ')' → logprob: -14.750657081604004
    7. 'umps' → logprob: -15.125657081604004
    8. '**' → logprob: -15.250657081604004
    9. '>' → logprob: -15.375657081604004
    10. '(' → logprob: -15.500657081604004

Token 588: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.4741445481777191
    2. ' ^' → logprob: -0.9741445779800415
    3. ' ' → logprob: -10.59914493560791
    4. ' ' → logprob: -10.84914493560791
    5. ')' → logprob: -11.34914493560791
    6. ' ^=' → logprob: -12.22414493560791
    7. '^

' → logprob: -13.09914493560791
    8. ')^' → logprob: -13.84914493560791
    9. ' ^
' → logprob: -13.97414493560791
    10. '^\' → logprob: -14.47414493560791

Token 589: ' b' (ID: 287)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.003180563682690263
    2. ' b' → logprob: -5.753180503845215
    3. 'b' → logprob: -12.878180503845215
    4. ' bs' → logprob: -15.253180503845215
    5. 'bsd' → logprob: -17.62818145751953
    6. '	b' → logprob: -17.87818145751953
    7. ' ' → logprob: -19.25318145751953
    8. 'bst' → logprob: -19.37818145751953
    9. '   ' → logprob: -20.87818145751953
    10. '  ' → logprob: -21.25318145751953

Token 590: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00015717383939772844
    2. 's' → logprob: -8.875157356262207
    3. 'sm' → logprob: -11.125157356262207
    4. 'su' → logprob: -13.500157356262207
    5. 'sup' → logprob: -15.125157356262207
    6. 'sub' → logprob: -16.00015640258789
    7. 'sym' → logprob: -16.00015640258789
    8. 'sv' → logprob: -16.12515640258789
    9. 'sur' → logprob: -16.37515640258789
    10. 'ss' → logprob: -16.50015640258789

Token 591: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -14.250001907348633
    4. '))' → logprob: -17.375001907348633
    5. ')}' → logprob: -18.375001907348633
    6. ')return' → logprob: -18.500001907348633
    7. ')`' → logprob: -18.750001907348633
    8. '}' → logprob: -19.000001907348633
    9. '<|end|>' → logprob: -19.250001907348633
    10. ')

' → logprob: -19.250001907348633

Token 592: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 593: ' main' (ID: 2758)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.3963148593902588
    2. ' find' → logprob: -1.7713148593902588
    3. ' calculate' → logprob: -1.7713148593902588
    4. ' main' → logprob: -2.021314859390259
    5. ' test' → logprob: -3.021314859390259
    6. 'max' → logprob: -3.771314859390259
    7. ' maximum' → logprob: -3.771314859390259
    8. ' example' → logprob: -3.771314859390259
    9. ' maximize' → logprob: -3.771314859390259
    10. ' combine' → logprob: -3.896314859390259

Token 594: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004306564573198557
    2. '():
' → logprob: -5.504306793212891
    3. '(' → logprob: -9.50430679321289
    4. ' ():' → logprob: -10.25430679321289
    5. '()' → logprob: -10.37930679321289
    6. '()>' → logprob: -10.62930679321289
    7. '():
' → logprob: -10.62930679321289
    8. '_' → logprob: -10.87930679321289
    9. '():

' → logprob: -11.87930679321289
    10. 'def' → logprob: -13.12930679321289

Token 595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036731138825416565
    2. ' import' → logprob: -6.503673076629639
    3. ' n' → logprob: -7.128673076629639
    4. 'import' → logprob: -7.503673076629639
    5. 'n' → logprob: -8.753673553466797
    6. '<|end|>' → logprob: -9.003673553466797
    7. 'a' → logprob: -9.128673553466797
    8. ' a' → logprob: -9.253673553466797
    9. '```' → logprob: -9.628673553466797
    10. ' input' → logprob: -10.503673553466797

Token 596: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061030998826026917
    2. 'a' → logprob: -3.5610311031341553
    3. 'n' → logprob: -4.311030864715576
    4. 'import' → logprob: -4.561030864715576
    5. ' n' → logprob: -5.936030864715576
    6. ' import' → logprob: -6.061030864715576
    7. ' a' → logprob: -7.061030864715576
    8. '```' → logprob: -8.186031341552734
    9. 'input' → logprob: -9.061031341552734
    10. ' pass' → logprob: -9.186031341552734

Token 597: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11061836034059525
    2. 'n' → logprob: -3.1106183528900146
    3. '   ' → logprob: -4.110618591308594
    4. ' a' → logprob: -4.360618591308594
    5. 'import' → logprob: -4.485618591308594
    6. 'if' → logprob: -4.860618591308594
    7. 'array' → logprob: -5.110618591308594
    8. 'print' → logprob: -6.485618591308594
    9. ' n' → logprob: -6.985618591308594
    10. ' if' → logprob: -7.610618591308594

Token 598: ' Point' (ID: 9971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06188992038369179
    2. 'def' → logprob: -2.936889886856079
    3. '#' → logprob: -6.311890125274658
    4. ' code' → logprob: -6.936890125274658
    5. 'import' → logprob: -7.186890125274658
    6. ' def' → logprob: -7.436890125274658
    7. '```' → logprob: -7.811890125274658
    8. ' test' → logprob: -7.936890125274658
    9. 'print' → logprob: -8.4368896484375
    10. ' return' → logprob: -8.6868896484375

Token 599: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16988059878349304
    2. ' de' → logprob: -2.6698806285858154
    3. '   ' → logprob: -3.1698806285858154
    4. 'd' → logprob: -3.5448806285858154
    5. 'def' → logprob: -4.294880390167236
    6. 'de' → logprob: -7.044880390167236
    7. ' ' → logprob: -8.294880867004395
    8. '()' → logprob: -8.294880867004395
    9. '  ' → logprob: -8.544880867004395
    10. '    ' → logprob: -8.669880867004395

Token 600: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.201650932431221
    2. ''entrée' → logprob: -1.7016509771347046
    3. 'entr' → logprob: -8.701650619506836
    4. '’entrée' → logprob: -10.576650619506836
    5. 'entry' → logprob: -11.201650619506836
    6. 'entrant' → logprob: -11.451650619506836
    7. ''ent' → logprob: -11.951650619506836
    8. 'ent' → logprob: -12.201650619506836
    9. 'entra' → logprob: -12.201650619506836
    10. ''' → logprob: -12.701650619506836

Token 601: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.115828275680542
    2. '():
' → logprob: -1.490828275680542
    3. 'def' → logprob: -1.615828275680542
    4. '():' → logprob: -1.865828275680542
    5. ':' → logprob: -3.615828275680542
    6. '()' → logprob: -3.740828275680542
    7. ' de' → logprob: -4.240828514099121
    8. 'de' → logprob: -4.990828514099121
    9. ' du' → logprob: -5.365828514099121
    10. '(
' → logprob: -5.615828514099121

Token 602: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.008899364620447159
    2. 'program' → logprob: -4.758899211883545
    3. 'script' → logprob: -8.633899688720703
    4. ' programme' → logprob: -9.383899688720703
    5. 'programma' → logprob: -11.133899688720703
    6. 'code' → logprob: -12.258899688720703
    7. 'programm' → logprob: -13.008899688720703
    8. 'Programme' → logprob: -15.008899688720703
    9. 'rogram' → logprob: -15.133899688720703
    10. 'prog' → logprob: -15.508899688720703

Token 603: ' :' (ID: 712)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5619767904281616
    2. ':' → logprob: -1.6869767904281616
    3. '   ' → logprob: -1.9369767904281616
    4. '():' → logprob: -2.686976909637451
    5. '
' → logprob: -4.436976909637451
    6. '():
' → logprob: -4.436976909637451
    7. ':
' → logprob: -6.186976909637451
    8. '<|end|>' → logprob: -6.561976909637451
    9. '    
' → logprob: -6.936976909637451
    10. '()' → logprob: -6.936976909637451

Token 604: ' lit' (ID: 11980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06828504800796509
    2. 'a' → logprob: -3.0682849884033203
    3. ' a' → logprob: -5.19328498840332
    4. 'def' → logprob: -5.44328498840332
    5. ' code' → logprob: -6.19328498840332
    6. 'n' → logprob: -6.31828498840332
    7. '```' → logprob: -7.06828498840332
    8. ' n' → logprob: -7.06828498840332
    9. ' user' → logprob: -7.19328498840332
    10. ' if' → logprob: -7.31828498840332

Token 605: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.034327950328588486
    2. 'import' → logprob: -3.909327983856201
    3. '   ' → logprob: -4.534327983856201
    4. '():' → logprob: -6.659327983856201
    5. '():
' → logprob: -7.909327983856201
    6. '```' → logprob: -8.284327507019043
    7. ' la' → logprob: -8.659327507019043
    8. 'input' → logprob: -8.784327507019043
    9. ' les' → logprob: -9.159327507019043
    10. '().' → logprob: -9.284327507019043

Token 606: ' entr' (ID: 7072)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.618554413318634
    2. 'entrée' → logprob: -2.4935543537139893
    3. 'entr' → logprob: -2.6185543537139893
    4. 'import' → logprob: -2.6185543537139893
    5. 'n' → logprob: -2.8685543537139893
    6. 'input' → logprob: -2.9935543537139893
    7. 'inputs' → logprob: -3.2435543537139893
    8. ' données' → logprob: -3.2435543537139893
    9. 'ent' → logprob: -3.9935543537139893
    10. ' entr' → logprob: -4.743554592132568

Token 607: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.04043218493461609
    2. 'rees' → logprob: -3.5404322147369385
    3. 'r' → logprob: -4.915431976318359
    4. 'ees' → logprob: -6.040431976318359
    5. 'ée' → logprob: -7.665431976318359
    6. 'ries' → logprob: -8.41543197631836
    7. 'ies' → logprob: -10.04043197631836
    8. 'es' → logprob: -10.29043197631836
    9. 'ree' → logprob: -10.66543197631836
    10. '   ' → logprob: -10.79043197631836

Token 608: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023966766893863678
    2. ',' → logprob: -3.8989667892456055
    3. '()' → logprob: -6.7739667892456055
    4. 'def' → logprob: -7.8989667892456055
    5. 'from' → logprob: -8.023966789245605
    6. 'import' → logprob: -8.273966789245605
    7. '.' → logprob: -8.523966789245605
    8. ' et' → logprob: -8.523966789245605
    9. '```' → logprob: -8.773966789245605
    10. 'et' → logprob: -8.898966789245605

Token 609: ' applique' (ID: 180579)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2057875692844391
    2. ' construit' → logprob: -1.8307875394821167
    3. ' constru' → logprob: -4.955787658691406
    4. ' ex' → logprob: -5.455787658691406
    5. ' calc' → logprob: -5.705787658691406
    6. ' crée' → logprob: -5.955787658691406
    7. ' appelle' → logprob: -6.205787658691406
    8. ' traite' → logprob: -6.830787658691406
    9. ' trie' → logprob: -7.455787658691406
    10. '    ' → logprob: -7.580787658691406

Token 610: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06898179650306702
    2. ' la' → logprob: -3.193981885910034
    3. 'calculate' → logprob: -4.693981647491455
    4. ' l' → logprob: -5.193981647491455
    5. ' calculate' → logprob: -5.443981647491455
    6. ' le' → logprob: -6.318981647491455
    7. 'a' → logprob: -6.568981647491455
    8. 'l' → logprob: -7.068981647491455
    9. '```' → logprob: -7.318981647491455
    10. '    ' → logprob: -8.193982124328613

Token 611: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6531491875648499
    2. 'a' → logprob: -1.528149127960205
    3. '   ' → logprob: -1.653149127960205
    4. ''' → logprob: -4.153149127960205
    5. '_algorithm' → logprob: -4.653149127960205
    6. 'alg' → logprob: -4.778149127960205
    7. 'algorithm' → logprob: -4.778149127960205
    8. 'e' → logprob: -5.403149127960205
    9. '```' → logprob: -5.528149127960205
    10. '_a' → logprob: -5.528149127960205

Token 612: 'alg' (ID: 15258)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0015366430161520839
    2. 'calcul' → logprob: -6.501536846160889
    3. ' calculate' → logprob: -10.87653636932373
    4. 'print' → logprob: -12.00153636932373
    5. 'compute' → logprob: -12.25153636932373
    6. 'fonction' → logprob: -13.50153636932373
    7. 'cal' → logprob: -13.62653636932373
    8. 'code' → logprob: -14.75153636932373
    9. 'calculator' → logprob: -15.00153636932373
    10. 'process' → logprob: -15.37653636932373

Token 613: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.014701995067298412
    2. 'orithm' → logprob: -4.889701843261719
    3. 'def' → logprob: -6.014701843261719
    4. '   ' → logprob: -6.264701843261719
    5. 'orit' → logprob: -6.639701843261719
    6. 'or' → logprob: -8.139701843261719
    7. 'orithms' → logprob: -8.514701843261719
    8. '```' → logprob: -9.014701843261719
    9. 'ément' → logprob: -9.264701843261719
    10. 'ocode' → logprob: -9.514701843261719

Token 614: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0010536498157307506
    2. 'ème' → logprob: -7.626053810119629
    3. 'm' → logprob: -8.251053810119629
    4. 'ume' → logprob: -8.626053810119629
    5. 'e' → logprob: -10.251053810119629
    6. '   ' → logprob: -11.376053810119629
    7. 'yme' → logprob: -11.501053810119629
    8. 't' → logprob: -12.001053810119629
    9. '`' → logprob: -12.126053810119629
    10. 'mes' → logprob: -12.251053810119629

Token 615: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.676259458065033
    2. '   ' → logprob: -0.801259458065033
    3. ' et' → logprob: -3.1762595176696777
    4. 'def' → logprob: -8.67625904083252
    5. ' and' → logprob: -8.92625904083252
    6. '```' → logprob: -8.92625904083252
    7. ' ,' → logprob: -9.42625904083252
    8. ',
' → logprob: -9.67625904083252
    9. 'et' → logprob: -9.67625904083252
    10. '    
' → logprob: -9.80125904083252

Token 616: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8848281502723694
    2. ' affiche' → logprob: -1.2598280906677246
    3. 'aff' → logprob: -1.5098280906677246
    4. 'print' → logprob: -2.7598280906677246
    5. ' imprime' → logprob: -4.384828090667725
    6. ' print' → logprob: -5.134828090667725
    7. 'im' → logprob: -7.384828090667725
    8. '    ' → logprob: -10.259828567504883
    9. 'prints' → logprob: -10.509828567504883
    10. ''aff' → logprob: -10.759828567504883

Token 617: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0725994110107422
    2. ' le' → logprob: -1.1975994110107422
    3. 'le' → logprob: -1.9475994110107422
    4. ' la' → logprob: -2.072599411010742
    5. 'la' → logprob: -3.322599411010742
    6. '()' → logprob: -3.572599411010742
    7. '(' → logprob: -5.072599411010742
    8. 'result' → logprob: -5.822599411010742
    9. ' les' → logprob: -5.822599411010742
    10. 'les' → logprob: -6.447599411010742

Token 618: ' réponse' (ID: 50332)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.13426820933818817
    2. ' résultat' → logprob: -2.134268283843994
    3. 'result' → logprob: -5.009268283843994
    4. '   ' → logprob: -8.884267807006836
    5. 'r' → logprob: -9.009267807006836
    6. 'ré' → logprob: -9.134267807006836
    7. 'Rés' → logprob: -9.509267807006836
    8. ' résultats' → logprob: -10.259267807006836
    9. ' result' → logprob: -10.259267807006836
    10. '_' → logprob: -10.634267807006836

Token 619: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007404654286801815
    2. '():
' → logprob: -6.007404804229736
    3. '():' → logprob: -6.007404804229736
    4. '()' → logprob: -7.007404804229736
    5. 'def' → logprob: -7.882404804229736
    6. '```' → logprob: -8.382404327392578
    7. 'import' → logprob: -8.632404327392578
    8. ':' → logprob: -8.632404327392578
    9. '
' → logprob: -8.757404327392578
    10. '):' → logprob: -9.007404327392578

Token 620: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006004538154229522
    2. '```' → logprob: -8.375600814819336
    3. '    
' → logprob: -8.500600814819336
    4. ':' → logprob: -9.250600814819336
    5. ')' → logprob: -10.750600814819336
    6. '
' → logprob: -11.500600814819336
    7. '  
' → logprob: -12.250600814819336
    8. '):' → logprob: -12.500600814819336
    9. '<|end|>' → logprob: -12.500600814819336
    10. ' 
' → logprob: -12.625600814819336

Token 621: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005902059492655098
    2. '```' → logprob: -8.125590324401855
    3. '    
' → logprob: -9.250590324401855
    4. 'import' → logprob: -9.750590324401855
    5. 'a' → logprob: -9.875590324401855
    6. 'def' → logprob: -10.125590324401855
    7. '
' → logprob: -11.500590324401855
    8. 'input' → logprob: -12.000590324401855
    9. ' ' → logprob: -12.000590324401855
    10. 'n' → logprob: -12.125590324401855

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003462629159912467
    2. 'import' → logprob: -6.003462791442871
    3. '```' → logprob: -7.378462791442871
    4. ' import' → logprob: -8.878462791442871
    5. 'a' → logprob: -9.128462791442871
    6. 'n' → logprob: -10.253462791442871
    7. 'input' → logprob: -10.753462791442871
    8. '    
' → logprob: -11.628462791442871
    9. ' input' → logprob: -11.878462791442871
    10. ' a' → logprob: -12.003462791442871

Token 623: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06990019232034683
    2. ' n' → logprob: -3.0699002742767334
    3. 'import' → logprob: -4.194900035858154
    4. '   ' → logprob: -5.319900035858154
    5. ' import' → logprob: -6.819900035858154
    6. '```' → logprob: -10.694900512695312
    7. 't' → logprob: -12.194900512695312
    8. '	n' → logprob: -13.819900512695312
    9. '    
' → logprob: -14.819900512695312
    10. 'a' → logprob: -15.819900512695312

Token 624: ' Lecture' (ID: 106534)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.30425089597702026
    2. 'n' → logprob: -1.554250955581665
    3. ' import' → logprob: -3.179250955581665
    4. ' n' → logprob: -4.804250717163086
    5. '   ' → logprob: -7.179250717163086
    6. 't' → logprob: -8.054250717163086
    7. '```' → logprob: -9.804250717163086
    8. ' t' → logprob: -11.429250717163086
    9. 'input' → logprob: -11.804250717163086
    10. '#' → logprob: -12.804250717163086

Token 625: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14023061096668243
    2. 'import' → logprob: -2.640230655670166
    3. '   ' → logprob: -3.015230655670166
    4. 'n' → logprob: -5.890230655670166
    5. 's' → logprob: -5.890230655670166
    6. 'des' → logprob: -6.890230655670166
    7. ' =' → logprob: -7.140230655670166
    8. '()
' → logprob: -7.390230655670166
    9. '```' → logprob: -7.890230655670166
    10. '=' → logprob: -8.140230178833008

Token 626: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016971472650766373
    2. 'import' → logprob: -4.391971588134766
    3. ' n' → logprob: -6.141971588134766
    4. 'nombre' → logprob: -6.141971588134766
    5. 't' → logprob: -9.766971588134766
    6. ' nombre' → logprob: -9.891971588134766
    7. 'nb' → logprob: -11.141971588134766
    8. '```' → logprob: -11.766971588134766
    9. ' import' → logprob: -11.891971588134766
    10. 'input' → logprob: -12.141971588134766

Token 627: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8114055395126343
    2. '   ' → logprob: -1.8114055395126343
    3. ' =' → logprob: -2.061405658721924
    4. 'import' → logprob: -2.061405658721924
    5. 's' → logprob: -3.936405658721924
    6. 'de' → logprob: -4.061405658721924
    7. 'def' → logprob: -4.436405658721924
    8. '_of' → logprob: -4.561405658721924
    9. '=int' → logprob: -4.686405658721924
    10. '(n' → logprob: -4.811405658721924

Token 628: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.006457193288952112
    2. ' éléments' → logprob: -5.506457328796387
    3. 'l' → logprob: -7.131457328796387
    4. ' test' → logprob: -8.006457328796387
    5. 'elements' → logprob: -8.131457328796387
    6. 'é' → logprob: -8.506457328796387
    7. 'test' → logprob: -8.881457328796387
    8. 's' → logprob: -9.381457328796387
    9. ' cas' → logprob: -9.631457328796387
    10. '_' → logprob: -9.756457328796387

Token 629: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.2419319450855255
    2. 'elements' → logprob: -1.8669319152832031
    3. 'test' → logprob: -3.116931915283203
    4. 'n' → logprob: -4.991931915283203
    5. 't' → logprob: -5.616931915283203
    6. 'tests' → logprob: -5.991931915283203
    7. 'element' → logprob: -6.491931915283203
    8. 'ent' → logprob: -8.116931915283203
    9. ' éléments' → logprob: -8.241931915283203
    10. 'elem' → logprob: -8.741931915283203

Token 630: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -3.15441757265944e-05
    2. 'ment' → logprob: -10.625031471252441
    3. 'ements' → logprob: -13.250031471252441
    4. 'nts' → logprob: -13.375031471252441
    5. 'éments' → logprob: -13.625031471252441
    6. 'm' → logprob: -14.625031471252441
    7. '   ' → logprob: -15.000031471252441
    8. 'es' → logprob: -15.000031471252441
    9. 'ents' → logprob: -15.125031471252441
    10. 'MENTS' → logprob: -15.125031471252441

Token 631: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07216042280197144
    2. '   ' → logprob: -2.947160482406616
    3. ' n' → logprob: -4.072160243988037
    4. 'import' → logprob: -9.697160720825195
    5. '```' → logprob: -11.197160720825195
    6. '	n' → logprob: -11.822160720825195
    7. '    
' → logprob: -12.947160720825195
    8. 't' → logprob: -13.822160720825195
    9. '(n' → logprob: -14.197160720825195
    10. '
' → logprob: -14.322160720825195

Token 632: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5765403509140015
    2. 'n' → logprob: -0.8265403509140015
    3. '```' → logprob: -7.826540470123291
    4. ' n' → logprob: -8.701539993286133
    5. 'import' → logprob: -11.326539993286133
    6. ' =' → logprob: -12.451539993286133
    7. '=n' → logprob: -12.576539993286133
    8. '=' → logprob: -12.576539993286133
    9. '(n' → logprob: -13.201539993286133
    10. '	n' → logprob: -13.326539993286133

Token 633: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.06704716384410858
    2. ' n' → logprob: -2.817047119140625
    3. '   ' → logprob: -5.317047119140625
    4. 'import' → logprob: -8.817047119140625
    5. ' import' → logprob: -11.567047119140625
    6. '	n' → logprob: -13.442047119140625
    7. 't' → logprob: -15.692047119140625
    8. ' ' → logprob: -16.192047119140625
    9. 'num' → logprob: -16.567047119140625
    10. 'N' → logprob: -16.942047119140625

Token 634: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12700380384922028
    2. '=' → logprob: -2.1270039081573486
    3. '=int' → logprob: -10.50200366973877
    4. '   ' → logprob: -10.62700366973877
    5. ',' → logprob: -11.00200366973877
    6. '=input' → logprob: -12.25200366973877
    7. ')' → logprob: -14.37700366973877
    8. ' ' → logprob: -14.75200366973877
    9. ' ' → logprob: -14.75200366973877
    10. ' =
' → logprob: -15.25200366973877

Token 635: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06196768581867218
    2. ' int' → logprob: -2.811967611312866
    3. '=int' → logprob: -17.186967849731445
    4. '	int' → logprob: -18.061967849731445
    5. '[int' → logprob: -18.561967849731445
    6. '(int' → logprob: -18.686967849731445
    7. '<int' → logprob: -19.311967849731445
    8. ' ' → logprob: -19.436967849731445
    9. '   ' → logprob: -19.436967849731445
    10. '  ' → logprob: -21.311967849731445

Token 636: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -4.4418171455617994e-05
    2. 'input' → logprob: -10.500044822692871
    3. '(' → logprob: -11.000044822692871
    4. ' input' → logprob: -16.250043869018555
    5. '=input' → logprob: -17.000043869018555
    6. '()' → logprob: -17.000043869018555
    7. '(
' → logprob: -19.125043869018555
    8. '	input' → logprob: -19.375043869018555
    9. ',input' → logprob: -19.375043869018555
    10. ' (' → logprob: -20.125043869018555

Token 637: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011941560078412294
    2. '()' → logprob: -6.751194000244141
    3. '().' → logprob: -10.75119400024414
    4. ' ())' → logprob: -14.12619400024414
    5. '())
' → logprob: -14.25119400024414
    6. '(' → logprob: -14.25119400024414
    7. '();)' → logprob: -15.50119400024414
    8. ')' → logprob: -16.37619400024414
    9. '()),' → logprob: -16.75119400024414
    10. '())

' → logprob: -17.00119400024414

Token 638: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14335905015468597
    2. 'a' → logprob: -2.0183589458465576
    3. '    
' → logprob: -8.518359184265137
    4. ' a' → logprob: -8.518359184265137
    5. '	a' → logprob: -8.893359184265137
    6. '<|end|>' → logprob: -9.518359184265137
    7. '```' → logprob: -11.393359184265137
    8. '  ' → logprob: -11.393359184265137
    9. 's' → logprob: -11.643359184265137
    10. '    ' → logprob: -11.893359184265137

Token 639: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4744986891746521
    2. '   ' → logprob: -0.9744986891746521
    3. ' a' → logprob: -7.849498748779297
    4. '	a' → logprob: -11.224498748779297
    5. '    
' → logprob: -12.349498748779297
    6. '```' → logprob: -12.724498748779297
    7. '  ' → logprob: -12.849498748779297
    8. '<|end|>' → logprob: -12.974498748779297
    9. 'n' → logprob: -14.224498748779297
    10. 'arr' → logprob: -14.224498748779297

Token 640: ' Lecture' (ID: 106534)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00034237600630149245
    2. 'arr' → logprob: -8.62534236907959
    3. '   ' → logprob: -9.12534236907959
    4. ' a' → logprob: -10.12534236907959
    5. 'values' → logprob: -12.25034236907959
    6. 'data' → logprob: -12.75034236907959
    7. 'lst' → logprob: -13.12534236907959
    8. '#' → logprob: -13.25034236907959
    9. 'array' → logprob: -14.37534236907959
    10. 'elements' → logprob: -14.62534236907959

Token 641: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5649288892745972
    2. '()' → logprob: -1.4399288892745972
    3. '   ' → logprob: -2.5649290084838867
    4. '(a' → logprob: -2.8149290084838867
    5. ' des' → logprob: -4.189929008483887
    6. 's' → logprob: -4.689929008483887
    7. 'des' → logprob: -5.064929008483887
    8. '()
' → logprob: -5.439929008483887
    9. ' de' → logprob: -5.564929008483887
    10. ' of' → logprob: -5.689929008483887

Token 642: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6053873300552368
    2. 'list' → logprob: -0.8553873300552368
    3. ' list' → logprob: -4.105387210845947
    4. ' a' → logprob: -4.480387210845947
    5. 'l' → logprob: -7.480387210845947
    6. 'input' → logprob: -8.105387687683105
    7. 'liste' → logprob: -8.480387687683105
    8. 'n' → logprob: -10.230387687683105
    9. ' la' → logprob: -10.605387687683105
    10. 'lst' → logprob: -10.980387687683105

Token 643: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.3897988498210907
    2. 'a' → logprob: -1.764798879623413
    3. 'list' → logprob: -2.264798879623413
    4. ' liste' → logprob: -3.139798879623413
    5. ' list' → logprob: -6.139798641204834
    6. 'lst' → logprob: -7.014798641204834
    7. ' a' → logprob: -7.264798641204834
    8. 'array' → logprob: -8.764799118041992
    9. 'l' → logprob: -8.764799118041992
    10. 's' → logprob: -9.639799118041992

Token 644: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007113756611943245
    2. ' a' → logprob: -5.257113933563232
    3. '   ' → logprob: -6.382113933563232
    4. '(a' → logprob: -8.757113456726074
    5. '	a' → logprob: -11.257113456726074
    6. '(' → logprob: -11.757113456726074
    7. '_a' → logprob: -13.382113456726074
    8. 'A' → logprob: -13.632113456726074
    9. '[a' → logprob: -13.882113456726074
    10. '()' → logprob: -13.882113456726074

Token 645: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7313357591629028
    2. 'ints' → logprob: -1.3563357591629028
    3. ''ent' → logprob: -2.4813356399536133
    4. 'a' → logprob: -2.8563356399536133
    5. 'e' → logprob: -2.8563356399536133
    6. 'inte' → logprob: -3.6063356399536133
    7. ' ent' → logprob: -4.356335639953613
    8. ' integers' → logprob: -4.856335639953613
    9. 'ents' → logprob: -5.981335639953613
    10. 'n' → logprob: -5.981335639953613

Token 646: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.01586320623755455
    2. 'r' → logprob: -4.515863418579102
    3. 'rée' → logprob: -5.390863418579102
    4. 'rees' → logprob: -9.640863418579102
    5. 'ières' → logprob: -9.890863418579102
    6. 'ries' → logprob: -10.015863418579102
    7. 'rés' → logprob: -10.015863418579102
    8. 'ier' → logprob: -11.765863418579102
    9. 'ités' → logprob: -12.015863418579102
    10. 'ées' → logprob: -12.265863418579102

Token 647: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05932537093758583
    2. 'a' → logprob: -3.0593254566192627
    3. ' a' → logprob: -4.559325218200684
    4. '	a' → logprob: -9.309325218200684
    5. '(a' → logprob: -10.059325218200684
    6. '    
' → logprob: -11.434325218200684
    7. '[a' → logprob: -11.434325218200684
    8. '#a' → logprob: -11.684325218200684
    9. ',a' → logprob: -11.809325218200684
    10. '  ' → logprob: -11.809325218200684

Token 648: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.017196774482727
    2. 'a' → logprob: -1.142196774482727
    3. '   ' → logprob: -1.142196774482727
    4. '	a' → logprob: -8.892196655273438
    5. '    
' → logprob: -12.892196655273438
    6. '[a' → logprob: -12.892196655273438
    7. 'arr' → logprob: -13.017196655273438
    8. '  ' → logprob: -13.392196655273438
    9. ',a' → logprob: -13.392196655273438
    10. '    ' → logprob: -13.517196655273438

Token 649: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.004086116328835487
    2. ' a' → logprob: -5.504086017608643
    3. 'arr' → logprob: -12.1290864944458
    4. '   ' → logprob: -13.3790864944458
    5. '	a' → logprob: -14.5040864944458
    6. 'data' → logprob: -16.879085540771484
    7. ' arr' → logprob: -16.879085540771484
    8. 'array' → logprob: -18.004085540771484
    9. 'values' → logprob: -18.629085540771484
    10. ' data' → logprob: -18.754085540771484

Token 650: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326258182525635
    2. '=' → logprob: -1.3132625818252563
    3. '=[]' → logprob: -15.313262939453125
    4. ' =[' → logprob: -15.938262939453125
    5. '=list' → logprob: -16.313262939453125
    6. '=[' → logprob: -16.313262939453125
    7. '=[]
' → logprob: -16.688262939453125
    8. '   ' → logprob: -16.938262939453125
    9. '[:]' → logprob: -16.938262939453125
    10. ' ' → logprob: -17.313262939453125

Token 651: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0013864279026165605
    2. '[list' → logprob: -6.751386642456055
    3. ' list' → logprob: -8.501386642456055
    4. '[' → logprob: -11.251386642456055
    5. '[List' → logprob: -17.376386642456055
    6. '=list' → logprob: -19.001386642456055
    7. '	list' → logprob: -19.001386642456055
    8. ' [' → logprob: -19.251386642456055
    9. '[input' → logprob: -19.501386642456055
    10. '(list' → logprob: -19.751386642456055

Token 652: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.25001335144043
    3. 'map' → logprob: -17.00001335144043
    4. '(int' → logprob: -18.37501335144043
    5. '()' → logprob: -19.12501335144043
    6. '(m' → logprob: -19.37501335144043
    7. '(
' → logprob: -19.50001335144043
    8. '(range' → logprob: -20.37501335144043
    9. '	map' → logprob: -21.12501335144043
    10. '(input' → logprob: -21.12501335144043

Token 653: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20152093470096588
    2. 'int' → logprob: -1.7015209197998047
    3. ' int' → logprob: -9.701520919799805
    4. '(' → logprob: -11.201520919799805
    5. '[int' → logprob: -11.826520919799805
    6. '<int' → logprob: -11.951520919799805
    7. '=int' → logprob: -12.076520919799805
    8. 'input' → logprob: -12.326520919799805
    9. ',int' → logprob: -12.826520919799805
    10. '   ' → logprob: -12.951520919799805

Token 654: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014165864326059818
    2. ',input' → logprob: -4.889165878295898
    3. 'input' → logprob: -5.139165878295898
    4. '(' → logprob: -7.514165878295898
    5. ',' → logprob: -9.389165878295898
    6. ' input' → logprob: -10.639165878295898
    7. '(
' → logprob: -12.014165878295898
    8. ' (' → logprob: -12.139165878295898
    9. '=input' → logprob: -12.389165878295898
    10. '   ' → logprob: -12.889165878295898

Token 655: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001584850688232109
    2. ' input' → logprob: -8.750158309936523
    3. '(input' → logprob: -19.625158309936523
    4. '_input' → logprob: -21.375158309936523
    5. ',input' → logprob: -21.625158309936523
    6. '	input' → logprob: -21.750158309936523
    7. '<input' → logprob: -21.875158309936523
    8. '   ' → logprob: -22.000158309936523
    9. '=input' → logprob: -22.250158309936523
    10. 'Input' → logprob: -23.750158309936523

Token 656: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.5776860184123507e-06
    2. '()' → logprob: -13.00000286102295
    3. '.split' → logprob: -16.125001907348633
    4. ' ().' → logprob: -16.750001907348633
    5. '(' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.250001907348633
    7. '()
' → logprob: -17.500001907348633
    8. 'input' → logprob: -17.875001907348633
    9. 'split' → logprob: -17.875001907348633
    10. '.strip' → logprob: -18.750001907348633

Token 657: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003357006062287837
    2. 'strip' → logprob: -8.000335693359375
    3. ' split' → logprob: -16.250335693359375
    4. 'rstrip' → logprob: -16.250335693359375
    5. '(split' → logprob: -17.000335693359375
    6. 'spl' → logprob: -20.375335693359375
    7. '_split' → logprob: -21.500335693359375
    8. '.split' → logprob: -22.125335693359375
    9. ' strip' → logprob: -23.250335693359375
    10. 'read' → logprob: -23.250335693359375

Token 658: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0014128545299172401
    2. '()' → logprob: -6.751412868499756
    3. '))' → logprob: -8.626412391662598
    4. '(' → logprob: -10.626412391662598
    5. '())' → logprob: -10.876412391662598
    6. '()))
' → logprob: -11.001412391662598
    7. '()));' → logprob: -13.126412391662598
    8. '(),' → logprob: -14.626412391662598
    9. '()))

' → logprob: -15.126412391662598
    10. '())))' → logprob: -15.376412391662598

Token 659: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029959671199321747
    2. 'result' → logprob: -4.279959678649902
    3. '    
' → logprob: -5.029959678649902
    4. 'a' → logprob: -5.154959678649902
    5. '
' → logprob: -6.279959678649902
    6. '```' → logprob: -8.154959678649902
    7. '<|end|>' → logprob: -8.529959678649902
    8. 'for' → logprob: -8.904959678649902
    9. ' result' → logprob: -8.904959678649902
    10. 'n' → logprob: -9.279959678649902

Token 660: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07861357182264328
    2. '   ' → logprob: -2.828613519668579
    3. ' result' → logprob: -4.703613758087158
    4. 'print' → logprob: -5.078613758087158
    5. 'res' → logprob: -7.828613758087158
    6. '
' → logprob: -8.07861328125
    7. '    
' → logprob: -8.45361328125
    8. 'answer' → logprob: -9.70361328125
    9. ' print' → logprob: -10.32861328125
    10. '```' → logprob: -10.70361328125

Token 661: ' Application' (ID: 12493)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04886429011821747
    2. 'result' → logprob: -3.0488643646240234
    3. 'res' → logprob: -8.548864364624023
    4. ' print' → logprob: -9.548864364624023
    5. ' result' → logprob: -11.798864364624023
    6. '   ' → logprob: -12.798864364624023
    7. 'rés' → logprob: -14.423864364624023
    8. 'answer' → logprob: -14.673864364624023
    9. 'r' → logprob: -15.298864364624023
    10. 'ans' → logprob: -15.798864364624023

Token 662: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8063244819641113
    2. '(' → logprob: -0.9313244819641113
    3. 'calculate' → logprob: -2.4313244819641113
    4. '(c' → logprob: -3.1813244819641113
    5. 'def' → logprob: -4.181324481964111
    6. '(
' → logprob: -4.806324481964111
    7. ')' → logprob: -6.306324481964111
    8. 'result' → logprob: -6.931324481964111
    9. '(print' → logprob: -7.306324481964111
    10. '(calc' → logprob: -7.431324481964111

Token 663: ' l' (ID: 305)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.12693440914154053
    2. 'print' → logprob: -2.12693452835083
    3. ' calculate' → logprob: -12.001934051513672
    4. 'calcul' → logprob: -16.251934051513672
    5. ' print' → logprob: -17.001934051513672
    6. '.calculate' → logprob: -17.501934051513672
    7. 'Calculate' → logprob: -18.251934051513672
    8. 'calc' → logprob: -18.376934051513672
    9. 'alculate' → logprob: -18.376934051513672
    10. '   ' → logprob: -18.876934051513672

Token 664: ''' (ID: 6)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.000354769523255527
    2. ' calculate' → logprob: -8.625354766845703
    3. 'alculate' → logprob: -9.375354766845703
    4. 'special' → logprob: -10.500354766845703
    5. '.calculate' → logprob: -10.625354766845703
    6. '_special' → logprob: -11.000354766845703
    7. '_' → logprob: -11.500354766845703
    8. '_cal' → logprob: -11.875354766845703
    9. 'calcul' → logprob: -13.875354766845703
    10. 'def' → logprob: -14.250354766845703

Token 665: 'alg' (ID: 15258)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -3.054500666621607e-06
    2. ' calculate' → logprob: -12.75000286102295
    3. 'print' → logprob: -17.000003814697266
    4. 'calcul' → logprob: -18.750003814697266
    5. '.calculate' → logprob: -19.000003814697266
    6. 'compute' → logprob: -19.875003814697266
    7. 'alculate' → logprob: -20.250003814697266
    8. 'calc' → logprob: -21.500003814697266
    9. 'a' → logprob: -22.250003814697266
    10. '   ' → logprob: -22.500003814697266

Token 666: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.04315493255853653
    2. 'orithm' → logprob: -3.4181549549102783
    3. 'calculate' → logprob: -4.918154716491699
    4. 'or' → logprob: -7.543154716491699
    5. 'orit' → logprob: -7.543154716491699
    6. ' calculate' → logprob: -8.1681547164917
    7. 'culate' → logprob: -8.5431547164917
    8. 'orithms' → logprob: -8.9181547164917
    9. 'ment' → logprob: -9.7931547164917
    10. 'alculate' → logprob: -9.7931547164917

Token 667: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.00016718693950679153
    2. 'm' → logprob: -8.750166893005371
    3. 'isme' → logprob: -12.750166893005371
    4. '   ' → logprob: -13.250166893005371
    5. 'ith' → logprob: -14.500166893005371
    6. 'ume' → logprob: -14.625166893005371
    7. 'hme' → logprob: -14.625166893005371
    8. 'th' → logprob: -15.000166893005371
    9. '(me' → logprob: -15.000166893005371
    10. 'mme' → logprob: -15.375166893005371

Token 668: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4610413908958435
    2. 'result' → logprob: -1.0860414505004883
    3. ' result' → logprob: -3.5860414505004883
    4. 'print' → logprob: -5.586041450500488
    5. ' print' → logprob: -8.836041450500488
    6. 'res' → logprob: -9.586041450500488
    7. '_result' → logprob: -10.586041450500488
    8. '    
' → logprob: -10.836041450500488
    9. ' résultat' → logprob: -10.961041450500488
    10. 'resultado' → logprob: -10.961041450500488

Token 669: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003380846756044775
    2. ' print' → logprob: -8.000338554382324
    3. '   ' → logprob: -12.875338554382324
    4. '#' → logprob: -16.875337600708008
    5. '```' → logprob: -18.000337600708008
    6. '#print' → logprob: -18.125337600708008
    7. '	print' → logprob: -18.500337600708008
    8. '_print' → logprob: -18.750337600708008
    9. '(print' → logprob: -19.125337600708008
    10. 'prin' → logprob: -19.500337600708008

Token 670: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.05452732369303703
    2. '(print' → logprob: -3.5545272827148438
    3. 'print' → logprob: -3.8045272827148438
    4. 'e' → logprob: -7.429527282714844
    5. '   ' → logprob: -7.929527282714844
    6. 'er' → logprob: -8.054527282714844
    7. '(' → logprob: -8.304527282714844
    8. '(a' → logprob: -9.054527282714844
    9. '(c' → logprob: -9.179527282714844
    10. 'ation' → logprob: -9.304527282714844

Token 671: ' du' (ID: 1462)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.020536642521619797
    2. '(print' → logprob: -4.520536422729492
    3. '(' → logprob: -5.395536422729492
    4. '   ' → logprob: -5.645536422729492
    5. '(calc' → logprob: -6.895536422729492
    6. '(cal' → logprob: -8.770536422729492
    7. '(
' → logprob: -9.145536422729492
    8. 'calculate' → logprob: -10.520536422729492
    9. 'print' → logprob: -10.520536422729492
    10. ' (' → logprob: -11.395536422729492

Token 672: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011228304356336594
    2. 'result' → logprob: -4.886228084564209
    3. 'calculate' → logprob: -5.636228084564209
    4. '(print' → logprob: -10.261228561401367
    5. ' print' → logprob: -12.261228561401367
    6. 'resultado' → logprob: -13.386228561401367
    7. 'rés' → logprob: -13.761228561401367
    8. ' résultat' → logprob: -13.886228561401367
    9. 'results' → logprob: -14.011228561401367
    10. 'println' → logprob: -14.136228561401367

Token 673: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01847696863114834
    2. 'print' → logprob: -4.018476963043213
    3. 'result' → logprob: -8.768477439880371
    4. '    
' → logprob: -9.518477439880371
    5. ' print' → logprob: -9.768477439880371
    6. '```' → logprob: -10.518477439880371
    7. '	print' → logprob: -12.393477439880371
    8. '
' → logprob: -13.018477439880371
    9. ' result' → logprob: -13.268477439880371
    10. '  
' → logprob: -13.643477439880371

Token 674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04447707161307335
    2. 'print' → logprob: -3.2944769859313965
    3. 'result' → logprob: -5.2944769859313965
    4. ' print' → logprob: -6.7944769859313965
    5. ' result' → logprob: -8.294477462768555
    6. '```' → logprob: -10.794477462768555
    7. 'res' → logprob: -13.419477462768555
    8. '    
' → logprob: -13.544477462768555
    9. '	print' → logprob: -14.169477462768555
    10. '   ' → logprob: -15.044477462768555

Token 675: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.696889623621246e-06
    2. 'result' → logprob: -13.25000286102295
    3. ' print' → logprob: -14.00000286102295
    4. '   ' → logprob: -17.375001907348633
    5. '```' → logprob: -20.000001907348633
    6. 'prin' → logprob: -20.750001907348633
    7. 'pr' → logprob: -22.125001907348633
    8. '	print' → logprob: -22.250001907348633
    9. 'res' → logprob: -22.250001907348633
    10. 'println' → logprob: -23.125001907348633

Token 676: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0007143391412682831
    2. '(' → logprob: -7.250714302062988
    3. '(cal' → logprob: -13.000714302062988
    4. '(calc' → logprob: -13.375714302062988
    5. 'calculate' → logprob: -15.000714302062988
    6. '(
' → logprob: -16.125715255737305
    7. '()' → logprob: -16.250715255737305
    8. '(C' → logprob: -16.875715255737305
    9. ' (' → logprob: -17.125715255737305
    10. ' calculate' → logprob: -17.250715255737305

Token 677: 'alculate' (ID: 80190)
  Prédit: 'alculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alculate' → logprob: -0.00043400691356509924
    2. 'calculate' → logprob: -7.750433921813965
    3. 'al' → logprob: -13.125433921813965
    4. 'alc' → logprob: -13.625433921813965
    5. ' calculate' → logprob: -17.50043487548828
    6. 'aculate' → logprob: -18.00043487548828
    7. '.calculate' → logprob: -18.37543487548828
    8. 'culate' → logprob: -19.00043487548828
    9. 'ulate' → logprob: -20.50043487548828
    10. 'alk' → logprob: -20.75043487548828

Token 678: '_special' (ID: 100315)
  Prédit: '_special'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_special' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.000000953674316
    3. 'special' → logprob: -16.125001907348633
    4. '_SPECIAL' → logprob: -16.375001907348633
    5. 'pecial' → logprob: -19.125001907348633
    6. 'Special' → logprob: -19.500001907348633
    7. '_s' → logprob: -19.875001907348633
    8. '```' → logprob: -20.375001907348633
    9. ' _' → logprob: -20.750001907348633
    10. ')_' → logprob: -21.250001907348633

Token 679: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0005552975926548243
    2. '_special' → logprob: -7.500555515289307
    3. '_' → logprob: -13.125555038452148
    4. '_s' → logprob: -15.500555038452148
    5. ' _' → logprob: -16.37555503845215
    6. 'sum' → logprob: -17.87555503845215
    7. ' sum' → logprob: -18.37555503845215
    8. ')_' → logprob: -19.50055503845215
    9. '_S' → logprob: -20.00055503845215
    10. '_SUM' → logprob: -20.12555503845215

Token 680: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.0100624169572257e-05
    2. '(' → logprob: -10.875020027160645
    3. ' (' → logprob: -14.500020027160645
    4. ')' → logprob: -15.000020027160645
    5. '(
' → logprob: -16.12502098083496
    6. '   ' → logprob: -17.37502098083496
    7. '```' → logprob: -17.75002098083496
    8. ')(' → logprob: -18.25002098083496
    9. '(ai' → logprob: -18.37502098083496
    10. 'a' → logprob: -18.62502098083496

Token 681: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008776119910180569
    2. ')' → logprob: -4.7587761878967285
    3. '()))' → logprob: -9.00877571105957
    4. '())' → logprob: -10.38377571105957
    5. '))
' → logprob: -12.63377571105957
    6. ')))' → logprob: -13.13377571105957
    7. '()' → logprob: -13.38377571105957
    8. ' ))' → logprob: -14.00877571105957
    9. '   ' → logprob: -15.50877571105957
    10. '])' → logprob: -15.88377571105957

Token 682: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010981805389747024
    2. '
' → logprob: -7.001098155975342
    3. ' if' → logprob: -8.6260986328125
    4. '```' → logprob: -12.5010986328125
    5. '<|end|>' → logprob: -13.5010986328125
    6. '#' → logprob: -14.0010986328125
    7. '  
' → logprob: -15.0010986328125
    8. '    
' → logprob: -15.6260986328125
    9. '[' → logprob: -15.7510986328125
    10. '\n' → logprob: -15.8760986328125

Token 683: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.583550642360933e-05
    2. ' if' → logprob: -10.250036239624023
    3. '```' → logprob: -15.625036239624023
    4. '__' → logprob: -15.750036239624023
    5. 'main' → logprob: -16.375036239624023
    6. '#' → logprob: -16.750036239624023
    7. 'If' → logprob: -18.625036239624023
    8. '#if' → logprob: -18.625036239624023
    9. 'ifdef' → logprob: -19.625036239624023
    10. '\' → logprob: -20.000036239624023

Token 684: 'el' (ID: 296)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07078354060649872
    2. 'el' → logprob: -3.1957836151123047
    3. 'ly' → logprob: -3.9457836151123047
    4. 'le' → logprob: -5.570783615112305
    5. 'e' → logprob: -6.570783615112305
    6. '```' → logprob: -7.320783615112305
    7. 'ear' → logprob: -7.945783615112305
    8. 'lication' → logprob: -7.945783615112305
    9. 'elif' → logprob: -8.195783615112305
    10. '#' → logprob: -8.570783615112305

Token 685: ' du' (ID: 1462)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013801921159029007
    2. 'main' → logprob: -4.3888020515441895
    3. '(main' → logprob: -6.8888020515441895
    4. 'def' → logprob: -9.263801574707031
    5. '(
' → logprob: -9.638801574707031
    6. '()' → logprob: -10.388801574707031
    7. ' if' → logprob: -10.638801574707031
    8. '_main' → logprob: -11.263801574707031
    9. '```' → logprob: -11.263801574707031
    10. '__' → logprob: -11.388801574707031

Token 686: ' point' (ID: 2438)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003078840672969818
    2. 'if' → logprob: -6.003078937530518
    3. '__' → logprob: -7.503078937530518
    4. ' main' → logprob: -9.87807846069336
    5. '_main' → logprob: -16.25307846069336
    6. ' __' → logprob: -16.50307846069336
    7. '```' → logprob: -17.12807846069336
    8. 'def' → logprob: -17.37807846069336
    9. ' if' → logprob: -17.75307846069336
    10. '	main' → logprob: -18.25307846069336

Token 687: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7601391077041626
    2. 'd' → logprob: -0.8851391077041626
    3. 'if' → logprob: -2.885138988494873
    4. '_' → logprob: -3.135138988494873
    5. 'def' → logprob: -5.010138988494873
    6. '_d' → logprob: -5.010138988494873
    7. 'main' → logprob: -6.510138988494873
    8. ' if' → logprob: -6.885138988494873
    9. '<|end|>' → logprob: -7.260138988494873
    10. ' main' → logprob: -7.385138988494873

Token 688: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.1279064267873764
    2. ''entrée' → logprob: -2.127906322479248
    3. 'entr' → logprob: -7.127906322479248
    4. '_' → logprob: -9.502906799316406
    5. 'entry' → logprob: -10.377906799316406
    6. '’entrée' → logprob: -10.877906799316406
    7. '__' → logprob: -11.002906799316406
    8. 'entrant' → logprob: -11.377906799316406
    9. 'entra' → logprob: -12.252906799316406
    10. ' entrée' → logprob: -12.877906799316406

Token 689: ' principal' (ID: 10589)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4064030349254608
    2. '
' → logprob: -1.1564030647277832
    3. 'main' → logprob: -4.031403064727783
    4. '(main' → logprob: -6.906403064727783
    5. '(
' → logprob: -8.906402587890625
    6. ' if' → logprob: -9.031402587890625
    7. '```' → logprob: -9.281402587890625
    8. '()
' → logprob: -9.531402587890625
    9. '  
' → logprob: -9.781402587890625
    10. '

' → logprob: -10.281402587890625

Token 690: ' du' (ID: 1462)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0383211150765419
    2. 'if' → logprob: -3.288321018218994
    3. 'main' → logprob: -8.538321495056152
    4. '

' → logprob: -10.288321495056152
    5. '  
' → logprob: -10.913321495056152
    6. ' if' → logprob: -11.913321495056152
    7. '
' → logprob: -11.913321495056152
    8. '(main' → logprob: -12.038321495056152
    9. '```' → logprob: -12.913321495056152
    10. ' 
' → logprob: -12.913321495056152

Token 691: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.0337400957942009
    2. 'program' → logprob: -4.158740043640137
    3. 'script' → logprob: -4.533740043640137
    4. ' programme' → logprob: -5.033740043640137
    5. ' script' → logprob: -8.783740043640137
    6. 'programm' → logprob: -9.783740043640137
    7. 'module' → logprob: -10.783740043640137
    8. 'code' → logprob: -11.033740043640137
    9. 'programma' → logprob: -11.408740043640137
    10. 'prog' → logprob: -11.658740043640137

Token 692: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10029250383377075
    2. 'if' → logprob: -2.350292444229126
    3. 'main' → logprob: -10.225292205810547
    4. '

' → logprob: -10.475292205810547
    5. ' if' → logprob: -11.850292205810547
    6. '  
' → logprob: -11.975292205810547
    7. '
' → logprob: -12.350292205810547
    8. '    
' → logprob: -13.725292205810547
    9. ' 
' → logprob: -13.850292205810547
    10. '```' → logprob: -13.975292205810547

Token 693: 'if' (ID: 366)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4740772247314453
    2. 'if' → logprob: -0.9740772247314453
    3. ' main' → logprob: -15.474077224731445
    4. ' if' → logprob: -16.974077224731445
    5. '(main' → logprob: -19.974077224731445
    6. '```' → logprob: -20.099077224731445
    7. '_main' → logprob: -21.724077224731445
    8. '.main' → logprob: -21.724077224731445
    9. '	main' → logprob: -21.849077224731445
    10. '__' → logprob: -22.724077224731445

Token 694: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04859747737646103
    2. '__' → logprob: -3.048597574234009
    3. ' ' → logprob: -12.42359733581543
    4. ' ' → logprob: -13.04859733581543
    5. '_name' → logprob: -13.17359733581543
    6. 'name' → logprob: -13.54859733581543
    7. ' name' → logprob: -15.17359733581543
    8. ' True' → logprob: -15.79859733581543
    9. '```' → logprob: -15.79859733581543
    10. 'True' → logprob: -16.67359733581543

Token 695: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.29625868797302246
    2. '__' → logprob: -1.6712586879730225
    3. '==' → logprob: -3.4212586879730225
    4. 'name' → logprob: -3.5462586879730225
    5. ' __' → logprob: -5.046258926391602
    6. '=="' → logprob: -8.921258926391602
    7. '_' → logprob: -9.796258926391602
    8. ' =="' → logprob: -9.921258926391602
    9. '=='' → logprob: -10.546258926391602
    10. 'main' → logprob: -10.671258926391602

Token 696: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.896309739408025e-07
    2. '__.__' → logprob: -14.500000953674316
    3. '==' → logprob: -15.875000953674316
    4. '____' → logprob: -16.625
    5. '_' → logprob: -17.625
    6. '___' → logprob: -17.875
    7. '__('' → logprob: -18.625
    8. '__["' → logprob: -18.75
    9. '__
' → logprob: -18.75
    10. '__
' → logprob: -19.375

Token 697: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006434533279389143
    2. '==' → logprob: -7.375643253326416
    3. '=="' → logprob: -11.250643730163574
    4. ' ==' → logprob: -12.875643730163574
    5. '__.__' → logprob: -15.125643730163574
    6. '=='' → logprob: -15.375643730163574
    7. '____' → logprob: -15.375643730163574
    8. '___' → logprob: -15.500643730163574
    9. '"' → logprob: -15.875643730163574
    10. '__,' → logprob: -16.875642776489258

Token 698: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00865109171718359
    2. ''' → logprob: -4.758651256561279
    3. ' "__' → logprob: -10.258650779724121
    4. '__' → logprob: -13.633650779724121
    5. ' '__' → logprob: -15.383650779724121
    6. '"user' → logprob: -17.633651733398438
    7. '"name' → logprob: -17.758651733398438
    8. '("__' → logprob: -18.133651733398438
    9. ''"' → logprob: -18.508651733398438
    10. '"'' → logprob: -18.633651733398438

Token 699: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. 'name' → logprob: -16.625
    3. ' main' → logprob: -17.75
    4. '_main' → logprob: -19.625
    5. '__' → logprob: -19.875
    6. '	main' → logprob: -21.25
    7. 'm' → logprob: -21.875
    8. 'ma' → logprob: -22.25
    9. '(main' → logprob: -23.0
    10. 'mp' → logprob: -23.125

Token 700: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1602822095155716
    2. '__' → logprob: -1.9102822542190552
    3. '__':
' → logprob: -9.785282135009766
    4. '__["' → logprob: -13.910282135009766
    5. '__",' → logprob: -15.035282135009766
    6. '__("' → logprob: -15.535282135009766
    7. '__.' → logprob: -16.160282135009766
    8. '__.__' → logprob: -16.535282135009766
    9. '__
' → logprob: -17.035282135009766
    10. '__*/' → logprob: -17.160282135009766

Token 701: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0014147580368444324
    2. ''' → logprob: -7.001414775848389
    3. '__' → logprob: -8.12641429901123
    4. 'main' → logprob: -8.50141429901123
    5. ' "__' → logprob: -12.75141429901123
    6. '   ' → logprob: -14.00141429901123
    7. ' main' → logprob: -15.87641429901123
    8. '"name' → logprob: -16.501415252685547
    9. '("__' → logprob: -16.626415252685547
    10. 'Main' → logprob: -16.751415252685547

Token 702: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.0
    3. '	main' → logprob: -22.25
    4. '_main' → logprob: -26.5
    5. '(main' → logprob: -26.875
    6. '.main' → logprob: -27.0
    7. '   ' → logprob: -27.125
    8. '
' → logprob: -28.0
    9. '```' → logprob: -28.375
    10. 'Main' → logprob: -28.75

Token 703: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 701
Tokens correctement prédits (1ère position, stricte): 213
Tokens correctement prédits (1ère position, avec adaptation): 229
Tokens correctement prédits (top 10): 476
Précision stricte (1ère position): 30.39%
Précision adaptée (1ère position): 32.67%
Précision (top 10): 67.90%
================================================================================
