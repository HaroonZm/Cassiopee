================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import copy
import sys

def deleteProduct(nowPos):
    global product
    idx = len(product) - 1
    while idx >= 0:
        if nowPos == product[idx][2]:
            del product[idx]
        idx -= 1

def getDistance(src, dst):
    global route, temp_node

    temp_node.clear()
    temp_node = [[] for _ in range(V)]

    NODE_ROUTE, NODE_DEFINED, NODE_COST, NODE_CHG_FROM = 0, 1, 2, 3

    for v in range(V):
        temp_node[v].append(copy.deepcopy(es[v]))
        temp_node[v].append(0)
        temp_node[v].append(-1)
        temp_node[v].append(0)

    temp_node[dst][NODE_COST] = 0
    distance = 100

    while True:
        i = None
        for k in range(V):
            if temp_node[k][NODE_DEFINED] == 0 and temp_node[k][NODE_COST] >= 0:
                i = k
                break
        all_defined = True
        for x in temp_node:
            if x[NODE_DEFINED] == 0:
                all_defined = False
        if all_defined or i is None:
            break
        temp_node[i][NODE_DEFINED] = 1
        for edge in temp_node[i][NODE_ROUTE]:
            to = edge[0]
            cost = temp_node[i][NODE_COST] + edge[1]
            if temp_node[to][NODE_COST] < 0:
                temp_node[to][NODE_COST] = cost
                temp_node[to][NODE_CHG_FROM] = i
            elif temp_node[to][NODE_COST] > cost:
                temp_node[to][NODE_COST] = cost
                temp_node[to][NODE_CHG_FROM] = i

    rnum, distance, i, cost = 0, 0, src, 0
    route.clear()
    while True:
        cost += temp_node[i][NODE_COST]
        if dst == i:
            distance = cost
            break
        prev, i = i, temp_node[i][NODE_CHG_FROM]
        route.append([i, 0])
        for j in range(len(temp_node[prev][0])):
            if temp_node[prev][0][j][0] == route[rnum][0]:
                route[rnum][1] = temp_node[prev][0][j][1]
        distance += route[rnum][1]
        rnum += 1
    return distance

route = []
def getTargetPos(now_pos):
    global product, pos, route
    try:
        return product[0][2]
    except Exception:
        return -1

product=[]
def getProduct(currentTime):
    for i, o in enumerate(order):
        if time_step_before <= o[0] <= currentTime:
            product.append(copy.deepcopy(o))

def gotoVertex(x, y):
    global nowPos, route, total_move_count
    nowPos = -1
    print(route[0][0]+1, flush=True)
    route[0][1] -= 1
    if route[0][1] == 0:
        deleteProduct(route[0][0])
        nowPos = route[0][0]
        del route[0]

def initProduct(nowPos):
    global temp_node, product
    getDistance(nowPos, V-2)
    for i in range(len(product)):
        for j in range(len(temp_node)):
            if product[i][2] == j:
                product[i][3] = temp_node[j][2]
                break
    product = sorted(product, key=lambda z: z[3])

V, E = map(int, input().split())
es = [[] for _ in range(V)]
for _ in range(E):
    a, b, c = map(int, input().split())
    a, b = a-1, b-1
    es[a].append([b, c])
    es[b].append([a, c])

F = list(map(int, input().split()))
T = int(input())
order = []
temp_node = [[] for _ in range(V)]
total_move_count = 0
nowPos = 0
targetPos = -1
time_step = 0
time_step_before = 0

for i in range(T):
    Nnew = int(input())
    for _ in range(Nnew):
        new_id, dst = map(int, input().split())
        order.append([time_step, new_id, (dst-1), 0])
    Nput = int(input())
    for _ in range(Nput):
        put_id = int(input())
    if total_move_count >= T:
        break
    if nowPos == 0:
        getProduct(time_step)
        time_step_before = time_step
        if len(product) != 0:
            time_step = time_step
        else:
            print(-1, flush=True)
            time_step = time_step + 1
            total_move_count += 1
            if total_move_count >= T:
                break
    if len(product) != 0:
        targetPos = getTargetPos(nowPos)
        if len(route) == 0:
            getDistance(nowPos, targetPos)
        gotoVertex(nowPos, targetPos)
        time_step += 1
    if len(product) == 0 and nowPos != 0:
        if len(route) == 0:
            getDistance(nowPos, 0)
        gotoVertex(nowPos, 0)
        time_step += 1
    vardict = input()
    if vardict == 'NG':
        sys.exit()
    Nachive = int(input())
    for _ in range(Nachive):
        achive_id = int(input())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' copy' (ID: 5150)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003191501135006547
    2. '(' → logprob: -7.0031914710998535
    3. '\' → logprob: -7.2531914710998535
    4. '<|end|>' → logprob: -7.7531914710998535
    5. '.deepcopy' → logprob: -8.503191947937012
    6. '.copy' → logprob: -9.003191947937012
    7. 'import' → logprob: -9.003191947937012
    8. 'newline' → logprob: -9.378191947937012
    9. '[' → logprob: -9.378191947937012
    10. '```' → logprob: -9.628191947937012

Token 4: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.560068666934967
    2. ' sys' → logprob: -1.0600686073303223
    3. ' json' → logprob: -2.8100686073303223
    4. ' math' → logprob: -4.560068607330322
    5. ' collections' → logprob: -4.810068607330322
    6. ' re' → logprob: -6.560068607330322
    7. ' threading' → logprob: -7.810068607330322
    8. ' itertools' → logprob: -8.18506908416748
    9. ' shutil' → logprob: -8.31006908416748
    10. 'os' → logprob: -8.43506908416748

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8864766359329224
    2. 'import' → logprob: -1.6364766359329224
    3. '
' → logprob: -1.8864766359329224
    4. '\' → logprob: -2.511476516723633
    5. '.' → logprob: -3.011476516723633
    6. '<|end|>' → logprob: -3.386476516723633
    7. '```' → logprob: -3.386476516723633
    8. '

' → logprob: -3.886476516723633
    9. '<|end|>' → logprob: -5.261476516723633
    10. '' → logprob: -5.386476516723633

Token 6: 'def' (ID: 1314)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.16727614402771
    2. '\n' → logprob: -1.41727614402771
    3. '.' → logprob: -1.79227614402771
    4. '
' → logprob: -2.79227614402771
    5. '\' → logprob: -2.91727614402771
    6. '#' → logprob: -2.91727614402771
    7. 'def' → logprob: -3.66727614402771
    8. '```' → logprob: -3.66727614402771
    9. 'from' → logprob: -4.167276382446289
    10. '' → logprob: -5.042276382446289

Token 7: ' delete' (ID: 6168)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05142292380332947
    2. '_' → logprob: -4.176423072814941
    3. ' process' → logprob: -4.551423072814941
    4. ' copy' → logprob: -4.676423072814941
    5. ' space' → logprob: -6.176423072814941
    6. ' deepcopy' → logprob: -6.176423072814941
    7. ' calculate' → logprob: -6.426423072814941
    8. '_copy' → logprob: -6.801423072814941
    9. ' parse' → logprob: -7.051423072814941
    10. ' _' → logprob: -7.051423072814941

Token 8: 'Product' (ID: 4532)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028195010498166084
    2. '_item' → logprob: -4.278194904327393
    3. '_space' → logprob: -5.278194904327393
    4. ' _' → logprob: -6.028194904327393
    5. '_element' → logprob: -6.528194904327393
    6. '_user' → logprob: -7.153194904327393
    7. '_file' → logprob: -7.653194904327393
    8. '_node' → logprob: -7.653194904327393
    9. '_line' → logprob: -7.778194904327393
    10. '_token' → logprob: -8.02819538116455

Token 9: '(now' (ID: 65064)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001601539261173457
    2. '_' → logprob: -10.000160217285156
    3. 'Product' → logprob: -10.250160217285156
    4. ' (' → logprob: -10.875160217285156
    5. '(product' → logprob: -11.125160217285156
    6. 'Item' → logprob: -12.250160217285156
    7. '(Product' → logprob: -12.500160217285156
    8. '()' → logprob: -12.750160217285156
    9. 's' → logprob: -12.875160217285156
    10. '```' → logprob: -12.875160217285156

Token 10: 'Pos' (ID: 3501)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19334357976913452
    2. ')' → logprob: -1.8183436393737793
    3. ',' → logprob: -5.443343639373779
    4. '(' → logprob: -5.693343639373779
    5. 'Product' → logprob: -5.943343639373779
    6. 'Item' → logprob: -7.193343639373779
    7. '_' → logprob: -7.318343639373779
    8. ' ):' → logprob: -8.193343162536621
    9. '(Product' → logprob: -8.568343162536621
    10. '(product' → logprob: -9.068343162536621

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13658621907234192
    2. ',' → logprob: -2.1365861892700195
    3. ')' → logprob: -4.8865861892700195
    4. 'ition' → logprob: -6.8865861892700195
    5. ' ,' → logprob: -8.38658618927002
    6. '[' → logprob: -9.01158618927002
    7. ':' → logprob: -9.38658618927002
    8. 's' → logprob: -9.76158618927002
    9. ' ):' → logprob: -10.01158618927002
    10. 'itional' → logprob: -10.26158618927002

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2887660264968872
    2. ':' → logprob: -1.4137660264968872
    3. '(' → logprob: -6.288765907287598
    4. ' :' → logprob: -6.413765907287598
    5. '    ' → logprob: -6.788765907287598
    6. '[' → logprob: -7.038765907287598
    7. ' ' → logprob: -7.413765907287598
    8. '```' → logprob: -8.413765907287598
    9. '[:]' → logprob: -8.913765907287598
    10. ' if' → logprob: -9.038765907287598

Token 13: ' global' (ID: 5466)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.17085930705070496
    2. '   ' → logprob: -2.6708593368530273
    3. ' if' → logprob: -3.1708593368530273
    4. ' ' → logprob: -4.295859336853027
    5. ' copy' → logprob: -4.795859336853027
    6. '     
' → logprob: -5.420859336853027
    7. ' 
' → logprob: -5.670859336853027
    8. ' pass' → logprob: -5.795859336853027
    9. '    
' → logprob: -6.045859336853027
    10. ' new' → logprob: -6.795859336853027

Token 14: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.7326352000236511
    2. ' products' → logprob: -0.9826352000236511
    3. ' ' → logprob: -3.232635259628296
    4. ' data' → logprob: -3.482635259628296
    5. ' database' → logprob: -4.607635021209717
    6. ' shopping' → logprob: -5.232635021209717
    7. ' shop' → logprob: -5.232635021209717
    8. ' inventory' → logprob: -5.232635021209717
    9. 'products' → logprob: -5.482635021209717
    10. ' prod' → logprob: -5.607635021209717

Token 15: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0025056246668100357
    2. '[' → logprob: -6.127505779266357
    3. 'List' → logprob: -8.6275053024292
    4. '_list' → logprob: -9.6275053024292
    5. ',' → logprob: -10.6275053024292
    6. '[s' → logprob: -11.1275053024292
    7. '[]' → logprob: -12.3775053024292
    8. '_s' → logprob: -12.7525053024292
    9. '```' → logprob: -12.8775053024292
    10. '[:]' → logprob: -12.8775053024292

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3338581919670105
    2. '[' → logprob: -1.4588582515716553
    3. ':' → logprob: -3.4588582515716553
    4. '[:]' → logprob: -5.083858013153076
    5. '```' → logprob: -6.083858013153076
    6. '[
' → logprob: -6.708858013153076
    7. ',' → logprob: -6.833858013153076
    8. '    ' → logprob: -7.083858013153076
    9. ' if' → logprob: -7.083858013153076
    10. ' ' → logprob: -7.083858013153076

Token 17: ' idx' (ID: 14016)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1684659719467163
    2. '   ' → logprob: -2.418466091156006
    3. ':' → logprob: -3.543466091156006
    4. '[:]' → logprob: -3.918466091156006
    5. '[:' → logprob: -5.918466091156006
    6. '[
' → logprob: -5.918466091156006
    7. '```' → logprob: -6.293466091156006
    8. '.' → logprob: -6.543466091156006
    9. ' :' → logprob: -6.668466091156006
    10. '[p' → logprob: -6.668466091156006

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1288258284330368
    2. '=' → logprob: -2.1288259029388428
    3. ' ' → logprob: -6.753825664520264
    4. 'ex' → logprob: -8.128826141357422
    5. '_to' → logprob: -9.378826141357422
    6. '   ' → logprob: -9.378826141357422
    7. '_' → logprob: -9.503826141357422
    8. 's' → logprob: -10.128826141357422
    9. 'es' → logprob: -10.128826141357422
    10. 'To' → logprob: -10.878826141357422

Token 19: ' len' (ID: 4631)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.4107828140258789
    2. 'now' → logprob: -1.285782814025879
    3. ' product' → logprob: -3.035782814025879
    4. 'product' → logprob: -4.910782814025879
    5. '0' → logprob: -6.660782814025879
    6. ' ' → logprob: -6.660782814025879
    7. ' copy' → logprob: -7.160782814025879
    8. ' len' → logprob: -7.535782814025879
    9. 'len' → logprob: -8.285782814025879
    10. 'copy' → logprob: -8.410782814025879

Token 20: '(product' (ID: 31697)
  Prédit: '(product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.00012606535165105015
    2. '(now' → logprob: -9.250125885009766
    3. '(' → logprob: -11.125125885009766
    4. 'product' → logprob: -11.375125885009766
    5. '(products' → logprob: -14.125125885009766
    6. ' product' → logprob: -14.625125885009766
    7. '(prod' → logprob: -14.750125885009766
    8. ' (' → logprob: -14.875125885009766
    9. '(Product' → logprob: -15.125125885009766
    10. 'Product' → logprob: -15.875125885009766

Token 21: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036446149460971355
    2. ')-' → logprob: -6.0036444664001465
    3. '[now' → logprob: -7.3786444664001465
    4. ' )' → logprob: -8.503644943237305
    5. '[' → logprob: -8.503644943237305
    6. '[idx' → logprob: -9.253644943237305
    7. '   ' → logprob: -12.003644943237305
    8. ')>' → logprob: -12.253644943237305
    9. '[])' → logprob: -12.628644943237305
    10. ')==' → logprob: -12.753644943237305

Token 22: ' -' (ID: 533)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.039521336555481
    2. ' -' → logprob: -1.289521336555481
    3. '-' → logprob: -1.664521336555481
    4. '[' → logprob: -1.914521336555481
    5. '[now' → logprob: -4.664521217346191
    6. ')' → logprob: -5.414521217346191
    7. '[:]' → logprob: -5.414521217346191
    8. '```' → logprob: -5.539521217346191
    9. '   ' → logprob: -5.789521217346191
    10. ' ' → logprob: -6.164521217346191

Token 23: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11876966804265976
    2. ' ' → logprob: -2.243769645690918
    3. ' now' → logprob: -5.243769645690918
    4. 'now' → logprob: -7.368769645690918
    5. '2' → logprob: -11.743769645690918
    6. '[now' → logprob: -13.118769645690918
    7. '(now' → logprob: -13.243769645690918
    8. '	now' → logprob: -13.931269645690918
    9. '   ' → logprob: -14.493769645690918
    10. 'Now' → logprob: -14.556269645690918

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001140453852713108
    2. 'now' → logprob: -7.251140594482422
    3. ' ' → logprob: -7.876140594482422
    4. ' now' → logprob: -10.126140594482422
    5. '2' → logprob: -11.751140594482422
    6. '   ' → logprob: -14.376140594482422
    7. '3' → logprob: -15.001140594482422
    8. '(now' → logprob: -15.001140594482422
    9. '[now' → logprob: -15.126140594482422
    10. '```' → logprob: -15.501140594482422

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3834327161312103
    2. ' if' → logprob: -2.133432626724243
    3. '
' → logprob: -2.383432626724243
    4. ' while' → logprob: -3.383432626724243
    5. ' for' → logprob: -4.508432865142822
    6. ' -' → logprob: -4.758432865142822
    7. ' ' → logprob: -4.883432865142822
    8. '    
' → logprob: -5.008432865142822
    9. 'while' → logprob: -5.008432865142822
    10. '<|end|>' → logprob: -5.008432865142822

Token 27: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9910383820533752
    2. '
' → logprob: -1.1160383224487305
    3. 'while' (adapté à ' while') → logprob: -1.9910383224487305
    4. '   ' → logprob: -2.2410383224487305
    5. '    
' → logprob: -4.1160383224487305
    6. '	while' → logprob: -4.4910383224487305
    7. ' ' → logprob: -4.9910383224487305
    8. '    ' → logprob: -5.2410383224487305
    9. ' if' → logprob: -5.4910383224487305
    10. ':' → logprob: -5.9910383224487305

Token 28: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.012232840061187744
    2. 'idx' → logprob: -4.762232780456543
    3. ' product' → logprob: -6.137232780456543
    4. ' now' → logprob: -7.387232780456543
    5. '(idx' → logprob: -8.012232780456543
    6. ' not' → logprob: -9.012232780456543
    7. ' ' → logprob: -9.137232780456543
    8. '	idx' → logprob: -9.387232780456543
    9. 'product' → logprob: -10.262232780456543
    10. '    ' → logprob: -10.262232780456543

Token 29: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5772528648376465
    2. ' >=' → logprob: -0.8272528648376465
    3. '>' → logprob: -7.0772528648376465
    4. ' >' → logprob: -7.7022528648376465
    5. ' ' → logprob: -11.827253341674805
    6. ')>=' → logprob: -12.827253341674805
    7. ']>=' → logprob: -13.202253341674805
    8. '≥' → logprob: -14.202253341674805
    9. ')' → logprob: -14.452253341674805
    10. '-' → logprob: -14.577253341674805

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1616249680519104
    2. '0' → logprob: -1.9116249084472656
    3. ' now' → logprob: -6.786624908447266
    4. 'now' → logprob: -8.286624908447266
    5. ' len' → logprob: -12.724124908447266
    6. '   ' → logprob: -13.286624908447266
    7. '[now' → logprob: -13.286624908447266
    8. ' idx' → logprob: -13.724124908447266
    9. '1' → logprob: -13.724124908447266
    10. '  ' → logprob: -13.849124908447266

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1868564337491989
    2. 'now' → logprob: -1.8118563890457153
    3. ' now' → logprob: -5.436856269836426
    4. ' ' → logprob: -5.936856269836426
    5. '(now' → logprob: -10.936856269836426
    6. '[now' → logprob: -10.936856269836426
    7. '	now' → logprob: -11.311856269836426
    8. 'len' → logprob: -11.311856269836426
    9. '   ' → logprob: -11.499356269836426
    10. '```' → logprob: -13.249356269836426

Token 32: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02809731662273407
    2. ':' → logprob: -3.77809739112854
    3. 'and' → logprob: -5.528097152709961
    4. '   ' → logprob: -7.778097152709961
    5. ':
' → logprob: -7.903097152709961
    6. ' :' → logprob: -10.153097152709961
    7. '       ' → logprob: -11.528097152709961
    8. ' ' → logprob: -11.903097152709961
    9. '<|end|>' → logprob: -12.278097152709961
    10. ' :
' → logprob: -12.653097152709961

Token 33: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018279295414686203
    2. '   ' → logprob: -4.893279075622559
    3. ':' → logprob: -5.643279075622559
    4. '       ' → logprob: -5.768279075622559
    5. ':
' → logprob: -6.268279075622559
    6. 'and' → logprob: -6.393279075622559
    7. ' :
' → logprob: -9.268279075622559
    8. '    ' → logprob: -9.518279075622559
    9. ' :' → logprob: -9.643279075622559
    10. ' ' → logprob: -9.893279075622559

Token 34: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2755569815635681
    2. ' and' → logprob: -1.900557041168213
    3. ' if' → logprob: -3.025557041168213
    4. '   ' → logprob: -3.900557041168213
    5. ':' → logprob: -5.150557041168213
    6. ' ' → logprob: -5.525557041168213
    7. ':
' → logprob: -5.650557041168213
    8. 'if' (adapté à ' if') → logprob: -5.775557041168213
    9. '        
' → logprob: -6.525557041168213
    10. '           ' → logprob: -7.025557041168213

Token 35: ' now' (ID: 1954)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.0018869919003918767
    2. 'product' → logprob: -6.37688684463501
    3. ' now' → logprob: -9.501887321472168
    4. ' not' → logprob: -9.876887321472168
    5. ' len' → logprob: -11.251887321472168
    6. '(product' → logprob: -11.501887321472168
    7. 'Product' → logprob: -12.126887321472168
    8. ' ' → logprob: -12.126887321472168
    9. '	product' → logprob: -12.751887321472168
    10. ' (' → logprob: -12.751887321472168

Token 36: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -1.0280383548888494e-06
    2. 'Product' → logprob: -14.625000953674316
    3. 'pos' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.375001907348633
    5. ' Pos' → logprob: -16.750001907348633
    6. '[' → logprob: -16.750001907348633
    7. 'Position' → logprob: -17.375001907348633
    8. '```' → logprob: -17.625001907348633
    9. '_pos' → logprob: -17.875001907348633
    10. '(Pos' → logprob: -18.125001907348633

Token 37: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.27362751960754395
    2. '==' → logprob: -1.523627519607544
    3. ' not' → logprob: -4.773627281188965
    4. ' in' → logprob: -5.023627281188965
    5. ' !=' → logprob: -6.023627281188965
    6. '[' → logprob: -6.148627281188965
    7. '!=' → logprob: -7.648627281188965
    8. ' <' → logprob: -7.773627281188965
    9. 'not' → logprob: -8.523627281188965
    10. ' <=' → logprob: -8.773627281188965

Token 38: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.08896400779485703
    2. 'product' → logprob: -2.4639639854431152
    3. '	product' → logprob: -11.213964462280273
    4. '(product' → logprob: -12.838964462280273
    5. ' idx' → logprob: -13.213964462280273
    6. '$product' → logprob: -13.463964462280273
    7. '   ' → logprob: -13.963964462280273
    8. ' copy' → logprob: -14.088964462280273
    9. ' ' → logprob: -14.213964462280273
    10. '.product' → logprob: -14.338964462280273

Token 39: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.75000286102295
    3. 'idx' → logprob: -14.50000286102295
    4. '       ' → logprob: -15.00000286102295
    5. '   ' → logprob: -15.37500286102295
    6. '```' → logprob: -15.50000286102295
    7. '.idx' → logprob: -15.75000286102295
    8. '           ' → logprob: -16.250003814697266
    9. '.' → logprob: -16.375003814697266
    10. '	idx' → logprob: -16.500003814697266

Token 40: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14757291972637177
    2. '][' → logprob: -2.6475729942321777
    3. '):' → logprob: -3.2725729942321777
    4. '['' → logprob: -4.397572994232178
    5. ']:' → logprob: -5.647572994232178
    6. ']['' → logprob: -5.647572994232178
    7. '["' → logprob: -6.147572994232178
    8. '   ' → logprob: -6.772572994232178
    9. ')[' → logprob: -6.772572994232178
    10. '].' → logprob: -7.647572994232178

Token 41: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005889333784580231
    2. '1' → logprob: -5.880889415740967
    3. ''' → logprob: -6.755889415740967
    4. '2' → logprob: -7.005889415740967
    5. ' ' → logprob: -7.755889415740967
    6. '3' → logprob: -8.255888938903809
    7. '"' → logprob: -9.630888938903809
    8. ''s' → logprob: -9.755888938903809
    9. '4' → logprob: -9.880888938903809
    10. ')' → logprob: -10.755888938903809

Token 42: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.22730547189712524
    2. ']:
' → logprob: -1.8523054122924805
    3. ']' → logprob: -3.9773054122924805
    4. '][' → logprob: -5.3523054122924805
    5. ':' → logprob: -5.4773054122924805
    6. ']:
' → logprob: -5.4773054122924805
    7. '[' → logprob: -5.6023054122924805
    8. '):' → logprob: -5.6023054122924805
    9. ' ]' → logprob: -6.1023054122924805
    10. '       ' → logprob: -6.7273054122924805

Token 43: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044846102595329285
    2. ':' → logprob: -3.5448460578918457
    3. ':
' → logprob: -4.419846057891846
    4. ' :' → logprob: -6.919846057891846
    5. ' and' → logprob: -7.169846057891846
    6. ' :
' → logprob: -7.794846057891846
    7. '               ' → logprob: -8.669846534729004
    8. '       ' → logprob: -8.794846534729004
    9. ' or' → logprob: -9.044846534729004
    10. ',' → logprob: -10.544846534729004

Token 44: ' del' (ID: 1083)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.1067187637090683
    2. 'product' → logprob: -2.8567187786102295
    3. ' del' → logprob: -3.8567187786102295
    4. '           ' → logprob: -4.23171854019165
    5. '               ' → logprob: -5.35671854019165
    6. 'del' (adapté à ' del') → logprob: -5.85671854019165
    7. '```' → logprob: -8.481719017028809
    8. '	product' → logprob: -9.231719017028809
    9. 'Product' → logprob: -10.356719017028809
    10. '$product' → logprob: -10.481719017028809

Token 45: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.0025040784385055304
    2. 'product' → logprob: -6.002503871917725
    3. '(product' → logprob: -10.502504348754883
    4. '	product' → logprob: -14.252504348754883
    5. '.product' → logprob: -16.252504348754883
    6. '$product' → logprob: -16.377504348754883
    7. 'Product' → logprob: -17.252504348754883
    8. '_product' → logprob: -17.502504348754883
    9. ' ' → logprob: -17.877504348754883
    10. '/product' → logprob: -18.252504348754883

Token 46: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.370294846012257e-05
    2. '[' → logprob: -10.125043869018555
    3. '```' → logprob: -13.250043869018555
    4. ' [' → logprob: -14.625043869018555
    5. 'idx' → logprob: -14.875043869018555
    6. '[
' → logprob: -15.250043869018555
    7. '   ' → logprob: -16.000043869018555
    8. '	idx' → logprob: -16.625043869018555
    9. '[:' → logprob: -16.625043869018555
    10. '][' → logprob: -16.750043869018555

Token 47: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2137283980846405
    2. ')
' → logprob: -1.713728427886963
    3. ']' → logprob: -5.213728427886963
    4. '       ' → logprob: -5.338728427886963
    5. ']
' → logprob: -6.463728427886963
    6. '])' → logprob: -8.588727951049805
    7. ')
' → logprob: -8.713727951049805
    8. '）' → logprob: -10.088727951049805
    9. '])
' → logprob: -12.088727951049805
    10. ')]' → logprob: -12.088727951049805

Token 48: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3941322863101959
    2. '       ' → logprob: -1.1441322565078735
    3. '            
' → logprob: -5.894132137298584
    4. '        
' → logprob: -6.019132137298584
    5. '
' → logprob: -7.519132137298584
    6. 'idx' → logprob: -7.519132137298584
    7. ' idx' → logprob: -8.394132614135742
    8. '```' → logprob: -9.019132614135742
    9. '<|end|>' → logprob: -9.394132614135742
    10. '    
' → logprob: -9.394132614135742

Token 49: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010271970182657242
    2. '           ' → logprob: -5.010272026062012
    3. ' idx' → logprob: -6.385272026062012
    4. 'idx' (adapté à ' idx') → logprob: -6.635272026062012
    5. '        
' → logprob: -8.760272026062012
    6. ' else' → logprob: -9.510272026062012
    7. '[idx' → logprob: -9.635272026062012
    8. '   ' → logprob: -9.885272026062012
    9. 'else' → logprob: -9.885272026062012
    10. '	idx' → logprob: -10.135272026062012

Token 50: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.005004970822483301
    2. '-=' → logprob: -5.3800048828125
    3. '-' → logprob: -8.1300048828125
    4. ' -' → logprob: -9.3800048828125
    5. ' +=' → logprob: -13.0050048828125
    6. '   ' → logprob: -13.3800048828125
    7. '=' → logprob: -14.3800048828125
    8. ' ' → logprob: -14.6300048828125
    9. '    ' → logprob: -15.1300048828125
    10. ' =' → logprob: -15.5050048828125

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -17.750059127807617
    4. '   ' → logprob: -17.875059127807617
    5. '１' → logprob: -19.437559127807617
    6. '  ' → logprob: -19.437559127807617
    7. '2' → logprob: -19.937559127807617
    8. ' ' → logprob: -20.062559127807617
    9. '<|end|>' → logprob: -20.312559127807617
    10. '۱' → logprob: -20.312559127807617

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -17.1875057220459
    4. '2' → logprob: -17.4375057220459
    5. '   ' → logprob: -18.0000057220459
    6. '0' → logprob: -18.2500057220459
    7. '-' → logprob: -18.6875057220459
    8. '１' → logprob: -19.0000057220459
    9. '3' → logprob: -19.6250057220459
    10. ')' → logprob: -19.7500057220459

Token 53: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7788984179496765
    2. ' add' → logprob: -1.4038984775543213
    3. ' product' → logprob: -3.2788984775543213
    4. ' update' → logprob: -3.4038984775543213
    5. ' check' → logprob: -3.5288984775543213
    6. ' find' → logprob: -4.028898239135742
    7. ' search' → logprob: -4.153898239135742
    8. ' insert' → logprob: -4.278898239135742
    9. ' copy' → logprob: -4.278898239135742
    10. ' append' → logprob: -4.278898239135742

Token 56: 'Distance' (ID: 17525)
  Prédit: 'Product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Product' → logprob: -0.34005007147789
    2. 'Max' → logprob: -3.215049982070923
    3. 'Next' → logprob: -3.715049982070923
    4. '_product' → logprob: -3.715049982070923
    5. 'Products' → logprob: -3.965049982070923
    6. 'Price' → logprob: -4.090050220489502
    7. 'Total' → logprob: -4.090050220489502
    8. 'Best' → logprob: -4.215050220489502
    9. 'Order' → logprob: -5.090050220489502
    10. 'All' → logprob: -5.340050220489502

Token 57: '(src' (ID: 28558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04599566012620926
    2. '(now' → logprob: -3.2959957122802734
    3. '(a' → logprob: -5.920995712280273
    4. '(pos' → logprob: -6.795995712280273
    5. '(p' → logprob: -7.045995712280273
    6. ' (' → logprob: -7.295995712280273
    7. '(prev' → logprob: -7.420995712280273
    8. '(current' → logprob: -7.670995712280273
    9. '(start' → logprob: -8.295995712280273
    10. '(from' → logprob: -8.420995712280273

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002063068561255932
    2. '):' → logprob: -6.502063274383545
    3. ' ,' → logprob: -8.377062797546387
    4. ')' → logprob: -8.752062797546387
    5. '_,' → logprob: -9.877062797546387
    6. 'src' → logprob: -10.627062797546387
    7. '_src' → logprob: -10.877062797546387
    8. '(src' → logprob: -11.877062797546387
    9. '[src' → logprob: -11.877062797546387
    10. ',s' → logprob: -12.127062797546387

Token 59: ' dst' (ID: 23480)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.5913139581680298
    2. 'dst' → logprob: -1.0913139581680298
    3. ' dst' → logprob: -2.7163138389587402
    4. ' dest' → logprob: -3.3413138389587402
    5. 'target' → logprob: -6.09131383895874
    6. 'des' → logprob: -6.46631383895874
    7. 'dist' → logprob: -6.59131383895874
    8. ' tgt' → logprob: -6.59131383895874
    9. ' target' → logprob: -7.09131383895874
    10. ' trg' → logprob: -8.091314315795898

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.073596548754722e-05
    2. '):
' → logprob: -10.37505054473877
    3. ')' → logprob: -11.62505054473877
    4. ':' → logprob: -12.50005054473877
    5. ' ):' → logprob: -12.50005054473877
    6. '):
' → logprob: -13.75005054473877
    7. '   ' → logprob: -13.87505054473877
    8. ',' → logprob: -14.25005054473877
    9. '=' → logprob: -16.375051498413086
    10. ' ' → logprob: -16.625051498413086

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014083284186199307
    2. ':' → logprob: -7.251408100128174
    3. ' return' → logprob: -8.626408576965332
    4. 'return' → logprob: -9.001408576965332
    5. '       ' → logprob: -9.126408576965332
    6. '    ' → logprob: -9.376408576965332
    7. 'import' → logprob: -9.501408576965332
    8. '```' → logprob: -11.001408576965332
    9. '    
' → logprob: -11.001408576965332
    10. 'x' → logprob: -11.126408576965332

Token 62: ' global' (ID: 5466)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7174358367919922
    2. ' return' → logprob: -0.8424358367919922
    3. 'return' → logprob: -2.842435836791992
    4. ' abs' → logprob: -4.967435836791992
    5. 'abs' → logprob: -5.092435836791992
    6. 'import' → logprob: -5.342435836791992
    7. ' import' → logprob: -6.092435836791992
    8. ' x' → logprob: -6.967435836791992
    9. '```' → logprob: -7.592435836791992
    10. '    ' → logprob: -7.967435836791992

Token 63: ' route' (ID: 9656)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.6620286107063293
    2. ' product' → logprob: -1.9120285511016846
    3. 'abs' → logprob: -1.9120285511016846
    4. ' abs' → logprob: -3.2870285511016846
    5. '   ' → logprob: -3.6620285511016846
    6. 'src' → logprob: -4.037028789520264
    7. 'now' → logprob: -4.162028789520264
    8. ' now' → logprob: -4.412028789520264
    9. ' sys' → logprob: -4.662028789520264
    10. 'sys' → logprob: -4.787028789520264

Token 64: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021391501650214195
    2. '[' → logprob: -4.52139139175415
    3. '    
' → logprob: -5.77139139175415
    4. ':' → logprob: -6.14639139175415
    5. '
' → logprob: -6.27139139175415
    6. '[src' → logprob: -7.39639139175415
    7. 'def' → logprob: -7.64639139175415
    8. ',' → logprob: -7.77139139175415
    9. '```' → logprob: -8.146391868591309
    10. ':
' → logprob: -8.271391868591309

Token 65: ' temp' (ID: 5484)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.8277373313903809
    2. 'len' → logprob: -2.327737331390381
    3. ' product' → logprob: -2.827737331390381
    4. '   ' → logprob: -2.827737331390381
    5. 'pos' → logprob: -2.827737331390381
    6. 'now' → logprob: -2.952737331390381
    7. 'sys' → logprob: -3.077737331390381
    8. ' sys' → logprob: -3.327737331390381
    9. 'distance' → logprob: -3.452737331390381
    10. 'dist' → logprob: -3.702737331390381

Token 66: '_node' (ID: 11390)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6455231308937073
    2. '
' → logprob: -1.1455230712890625
    3. '    
' → logprob: -2.5205230712890625
    4. '[' → logprob: -3.7705230712890625
    5. 'def' → logprob: -4.2705230712890625
    6. 'dist' → logprob: -4.8955230712890625
    7. ')' → logprob: -5.8955230712890625
    8. ' =' → logprob: -6.0205230712890625
    9. ',' → logprob: -6.0205230712890625
    10. '_distance' → logprob: -6.0205230712890625

Token 67: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0890599712729454
    2. '[' → logprob: -3.339060068130493
    3. ':' → logprob: -3.839060068130493
    4. '
' → logprob: -4.714059829711914
    5. '    
' → logprob: -4.839059829711914
    6. ':
' → logprob: -5.339059829711914
    7. 'def' → logprob: -6.589059829711914
    8. '[]' → logprob: -6.839059829711914
    9. ',' → logprob: -7.339059829711914
    10. ')' → logprob: -7.589059829711914

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005201620515435934
    2. '    
' → logprob: -6.880201816558838
    3. 'distance' → logprob: -6.880201816558838
    4. '
' → logprob: -7.505201816558838
    5. ',' → logprob: -7.755201816558838
    6. 'dist' → logprob: -7.880201816558838
    7. 'return' → logprob: -8.00520133972168
    8. 'import' → logprob: -8.50520133972168
    9. ' return' → logprob: -8.88020133972168
    10. 'x' → logprob: -9.13020133972168

Token 69: ' temp' (ID: 5484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3250230550765991
    2. 'return' → logprob: -1.5750230550765991
    3. 'dist' → logprob: -1.5750230550765991
    4. 'x' → logprob: -1.8250230550765991
    5. 'distance' → logprob: -2.5750231742858887
    6. 'if' → logprob: -4.200023174285889
    7. 'src' → logprob: -4.575023174285889
    8. 'dx' → logprob: -4.825023174285889
    9. 'sx' → logprob: -4.825023174285889
    10. 'import' → logprob: -5.200023174285889

Token 70: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.05857173353433609
    2. ' =' → logprob: -4.058571815490723
    3. '=' → logprob: -4.308571815490723
    4. '_' → logprob: -4.558571815490723
    5. '_distance' → logprob: -5.058571815490723
    6. '_route' → logprob: -5.933571815490723
    7. '_pos' → logprob: -6.433571815490723
    8. '_dist' → logprob: -6.683571815490723
    9. '=_' → logprob: -7.183571815490723
    10. '_src' → logprob: -7.558571815490723

Token 71: '.clear' (ID: 13562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18309928476810455
    2. '=' → logprob: -1.8080992698669434
    3. '.append' → logprob: -6.433099269866943
    4. '[' → logprob: -7.058099269866943
    5. '[:]' → logprob: -8.558099746704102
    6. ',' → logprob: -8.933099746704102
    7. '=[]' → logprob: -9.183099746704102
    8. ' ' → logprob: -9.308099746704102
    9. '.' → logprob: -9.433099746704102
    10. '=[' → logprob: -10.308099746704102

Token 72: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019348275382071733
    2. '()
' → logprob: -6.251935005187988
    3. '()

' → logprob: -12.751935005187988
    4. '()
' → logprob: -13.251935005187988
    5. '()\' → logprob: -14.501935005187988
    6. ')' → logprob: -14.876935005187988
    7. '()`' → logprob: -15.501935005187988
    8. '()<' → logprob: -15.876935005187988
    9. '(' → logprob: -16.376934051513672
    10. '())' → logprob: -16.626934051513672

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010645820759236813
    2. '
' → logprob: -5.385645866394043
    3. '    
' → logprob: -5.885645866394043
    4. '<|end|>' → logprob: -6.260645866394043
    5. 'for' → logprob: -8.010645866394043
    6. ' for' → logprob: -8.010645866394043
    7. 'def' → logprob: -8.885645866394043
    8. '<|end|>' → logprob: -9.885645866394043
    9. 's' → logprob: -10.385645866394043
    10. 'distance' → logprob: -10.510645866394043

Token 74: ' temp' (ID: 5484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6461541056632996
    2. '   ' → logprob: -1.3961541652679443
    3. ' for' → logprob: -1.8961541652679443
    4. 'queue' → logprob: -3.3961541652679443
    5. 'stack' → logprob: -4.521153926849365
    6. 'temp' (adapté à ' temp') → logprob: -4.771153926849365
    7. ' queue' → logprob: -5.271153926849365
    8. 'distance' → logprob: -5.396153926849365
    9. 'src' → logprob: -6.271153926849365
    10. 'current' → logprob: -6.521153926849365

Token 75: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.000260382192209363
    2. '_' → logprob: -9.250260353088379
    3. '_nodes' → logprob: -9.875260353088379
    4. 'node' → logprob: -10.500260353088379
    5. '_n' → logprob: -11.500260353088379
    6. '._' → logprob: -11.625260353088379
    7. '_distance' → logprob: -11.750260353088379
    8. '.append' → logprob: -11.750260353088379
    9. '   ' → logprob: -12.250260353088379
    10. '_route' → logprob: -12.375260353088379

Token 76: ' =' (ID: 314)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.1972590982913971
    2. '.append' → logprob: -1.9472590684890747
    3. '.' → logprob: -3.4472591876983643
    4. '.update' → logprob: -5.947258949279785
    5. '=' → logprob: -6.447258949279785
    6. ' =' → logprob: -8.947258949279785
    7. '+=' → logprob: -9.947258949279785
    8. ' +=' → logprob: -10.072258949279785
    9. '.add' → logprob: -10.447258949279785
    10. '.=' → logprob: -10.822258949279785

Token 77: ' [[]' (ID: 182908)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -1.0323636531829834
    2. '[' → logprob: -1.4073636531829834
    3. ' copy' → logprob: -1.9073636531829834
    4. '[src' → logprob: -2.0323636531829834
    5. ' [' → logprob: -3.0323636531829834
    6. 'route' → logprob: -3.7823636531829834
    7. 'list' → logprob: -4.5323638916015625
    8. '[(' → logprob: -4.9073638916015625
    9. ' list' → logprob: -5.0323638916015625
    10. ' route' → logprob: -5.4073638916015625

Token 78: ' for' (ID: 395)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7190036177635193
    2. ']' → logprob: -1.469003677368164
    3. 'for' → logprob: -2.469003677368164
    4. ']+' → logprob: -2.469003677368164
    5. ' for' → logprob: -2.719003677368164
    6. ' +' → logprob: -3.219003677368164
    7. ',' → logprob: -5.469003677368164
    8. ' ]' → logprob: -7.219003677368164
    9. ')' → logprob: -7.594003677368164
    10. '+]' → logprob: -7.594003677368164

Token 79: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04994876682758331
    2. ' _' → logprob: -3.0499486923217773
    3. ' range' → logprob: -6.924948692321777
    4. 'range' → logprob: -8.799948692321777
    5. ' in' → logprob: -9.299948692321777
    6. ' i' → logprob: -9.299948692321777
    7. '_i' → logprob: -10.549948692321777
    8. '_range' → logprob: -11.924948692321777
    9. ' ' → logprob: -12.799948692321777
    10. 'i' → logprob: -13.049948692321777

Token 80: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009694644249975681
    2. '(range' → logprob: -7.500969409942627
    3. ' range' → logprob: -7.875969409942627
    4. 'product' → logprob: -10.875969886779785
    5. 'route' → logprob: -11.875969886779785
    6. '(' → logprob: -13.000969886779785
    7. '[' → logprob: -13.000969886779785
    8. 'x' → logprob: -13.750969886779785
    9. ')' → logprob: -14.375969886779785
    10. 'in' → logprob: -14.500969886779785

Token 81: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5761025547981262
    2. 'range' → logprob: -0.8261025547981262
    3. 'route' → logprob: -9.951102256774902
    4. ' product' → logprob: -10.451102256774902
    5. 'product' → logprob: -10.451102256774902
    6. '(range' → logprob: -10.576102256774902
    7. ' ' → logprob: -11.451102256774902
    8. ' route' → logprob: -11.576102256774902
    9. '   ' → logprob: -12.951102256774902
    10. '	range' → logprob: -13.201102256774902

Token 82: '(V' (ID: 16949)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.38841092586517334
    2. '(' → logprob: -1.1384109258651733
    3. ' (' → logprob: -6.638411045074463
    4. '(n' → logprob: -9.388410568237305
    5. '(route' → logprob: -10.263410568237305
    6. '((' → logprob: -10.513410568237305
    7. ' len' → logprob: -11.013410568237305
    8. '(N' → logprob: -11.388410568237305
    9. 'len' → logprob: -11.513410568237305
    10. '(length' → logprob: -12.263410568237305

Token 83: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.007851607166230679
    2. '+' → logprob: -5.007851600646973
    3. ')' → logprob: -8.007851600646973
    4. 'ALUE' → logprob: -8.257851600646973
    5. ' +' → logprob: -8.882851600646973
    6. 'ERT' → logprob: -9.632851600646973
    7. 'alue' → logprob: -10.007851600646973
    8. ')][' → logprob: -10.132851600646973
    9. ')])' → logprob: -10.257851600646973
    10. '-' → logprob: -10.632851600646973

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01857643574476242
    2. '<|end|>' → logprob: -4.393576622009277
    3. ' for' → logprob: -6.018576622009277
    4. 'for' → logprob: -6.393576622009277
    5. '    
' → logprob: -6.893576622009277
    6. ' ' → logprob: -8.268576622009277
    7. '       ' → logprob: -8.518576622009277
    8. '    ' → logprob: -9.018576622009277
    9. '<|end|>' → logprob: -10.018576622009277
    10. '  ' → logprob: -10.018576622009277

Token 85: ' NODE' (ID: 86739)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41412025690078735
    2. ' for' → logprob: -1.6641201972961426
    3. '   ' → logprob: -2.2891201972961426
    4. ')' → logprob: -3.7891201972961426
    5. ' ' → logprob: -4.789120197296143
    6. 'i' → logprob: -5.914120197296143
    7. '<|end|>' → logprob: -5.914120197296143
    8. '    ' → logprob: -6.164120197296143
    9. '  ' → logprob: -7.039120197296143
    10. '.' → logprob: -7.164120197296143

Token 86: '_ROUTE' (ID: 145536)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6135327816009521
    2. '_NUM' → logprob: -1.8635327816009521
    3. '_SIZE' → logprob: -2.488532781600952
    4. '_COUNT' → logprob: -2.988532781600952
    5. 's' → logprob: -3.738532781600952
    6. '_CNT' → logprob: -3.863532781600952
    7. ']' → logprob: -4.113533020019531
    8. '_IDX' → logprob: -4.113533020019531
    9. ' =' → logprob: -4.238533020019531
    10. '_DISTANCE' → logprob: -4.613533020019531

Token 87: ',' (ID: 11)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.09928645938634872
    2. ' =' → logprob: -2.9742865562438965
    3. '=' → logprob: -4.7242865562438965
    4. 's' → logprob: -4.8492865562438965
    5. '[' → logprob: -5.2242865562438965
    6. '_' → logprob: -5.5992865562438965
    7. '.append' → logprob: -5.8492865562438965
    8. '_IDX' → logprob: -5.9742865562438965
    9. '   ' → logprob: -6.2242865562438965
    10. ']' → logprob: -6.5992865562438965

Token 88: ' NODE' (ID: 86739)
  Prédit: ' NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' NODE' → logprob: -1.5718817710876465
    2. ' node' → logprob: -1.8218817710876465
    3. ' temp' → logprob: -2.6968817710876465
    4. ' dist' → logprob: -2.9468817710876465
    5. ' distance' → logprob: -3.1968817710876465
    6. ' src' → logprob: -3.1968817710876465
    7. 'NODE' → logprob: -3.1968817710876465
    8. ' current' → logprob: -3.3218817710876465
    9. 'distance' → logprob: -3.6968817710876465
    10. 'temp' → logprob: -3.9468817710876465

Token 89: '_DEFINED' (ID: 160478)
  Prédit: '_ROUTE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ROUTE' → logprob: -1.1474850177764893
    2. '_DISTANCE' → logprob: -1.3974850177764893
    3. '_IDX' → logprob: -2.3974850177764893
    4. '_' → logprob: -2.5224850177764893
    5. ' =' → logprob: -2.5224850177764893
    6. 'S' → logprob: -3.2724850177764893
    7. '=' → logprob: -3.5224850177764893
    8. '_COUNT' → logprob: -4.02248477935791
    9. '_DIST' → logprob: -4.39748477935791
    10. '_NUM' → logprob: -4.77248477935791

Token 90: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24734050035476685
    2. '=' → logprob: -1.622340440750122
    3. ',' → logprob: -3.997340440750122
    4. '_DISTANCE' → logprob: -7.247340679168701
    5. '_' → logprob: -7.497340679168701
    6. '_ROUTE' → logprob: -7.872340679168701
    7. '_SIZE' → logprob: -8.247340202331543
    8. 'S' → logprob: -8.497340202331543
    9. '_COUNT' → logprob: -8.747340202331543
    10. '_IDX' → logprob: -9.247340202331543

Token 91: ' NODE' (ID: 86739)
  Prédit: ' NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' NODE' → logprob: -0.33665600419044495
    2. ' =' → logprob: -2.711656093597412
    3. 'NODE' → logprob: -2.961656093597412
    4. ' node' → logprob: -3.586656093597412
    5. ' temp' → logprob: -3.711656093597412
    6. ' dist' → logprob: -5.024156093597412
    7. ' distance' → logprob: -5.211656093597412
    8. 'temp' → logprob: -5.274156093597412
    9. ' queue' → logprob: -5.461656093597412
    10. ' DIST' → logprob: -5.524156093597412

Token 92: '_COST' (ID: 168150)
  Prédit: '_ROUTE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ROUTE' → logprob: -1.3704686164855957
    2. '_DISTANCE' → logprob: -1.6204686164855957
    3. ' =' → logprob: -2.6204686164855957
    4. '_DIST' → logprob: -3.2454686164855957
    5. '_COST' → logprob: -3.3704686164855957
    6. '_IDX' → logprob: -3.4954686164855957
    7. 'S' → logprob: -3.4954686164855957
    8. '_' → logprob: -3.6204686164855957
    9. '=' → logprob: -3.6204686164855957
    10. '_QUEUE' → logprob: -3.6204686164855957

Token 93: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02786095067858696
    2. '=' → logprob: -3.6528608798980713
    3. ',' → logprob: -6.52786111831665
    4. ' ' → logprob: -9.652860641479492
    5. '   ' → logprob: -11.527860641479492
    6. ' ,' → logprob: -11.777860641479492
    7. '  ' → logprob: -11.902860641479492
    8. '_' → logprob: -12.402860641479492
    9. '    ' → logprob: -13.777860641479492
    10. ' ' → logprob: -13.902860641479492

Token 94: ' NODE' (ID: 86739)
  Prédit: ' NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' NODE' → logprob: -0.253199964761734
    2. ' =' → logprob: -2.128200054168701
    3. 'NODE' → logprob: -2.878200054168701
    4. ' node' → logprob: -5.128200054168701
    5. '=' → logprob: -5.253200054168701
    6. '   ' → logprob: -5.440700054168701
    7. '_NODE' → logprob: -5.628200054168701
    8. ' temp' → logprob: -6.003200054168701
    9. 'temp' → logprob: -6.253200054168701
    10. ' _' → logprob: -6.315700054168701

Token 95: '_CH' (ID: 13894)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8506243824958801
    2. '=' → logprob: -1.8506243228912354
    3. 'S' → logprob: -1.8506243228912354
    4. ',' → logprob: -2.7256243228912354
    5. '_ROUTE' → logprob: -2.8506243228912354
    6. '_IDX' → logprob: -3.6006243228912354
    7. '_COST' → logprob: -3.7256243228912354
    8. '_' → logprob: -4.6006245613098145
    9. '=[]' → logprob: -5.1006245613098145
    10. '_MAX' → logprob: -5.2256245613098145

Token 96: 'G' (ID: 38)
  Prédit: 'UNK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'UNK' → logprob: -1.1141040325164795
    2. 'ANNEL' → logprob: -1.6141040325164795
    3. 'E' → logprob: -1.9891040325164795
    4. 'AIN' → logprob: -3.1141040325164795
    5. 'OICE' → logprob: -3.2391040325164795
    6. 'AR' → logprob: -3.3641040325164795
    7. 'UN' → logprob: -3.9891040325164795
    8. 'O' → logprob: -3.9891040325164795
    9. 'IP' → logprob: -4.114104270935059
    10. 'ANGE' → logprob: -4.114104270935059

Token 97: '_FROM' (ID: 59766)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6561230421066284
    2. '=' → logprob: -0.7811230421066284
    3. ',' → logprob: -5.156123161315918
    4. '=[]' → logprob: -5.531123161315918
    5. '_COST' → logprob: -5.906123161315918
    6. 'CNT' → logprob: -7.031123161315918
    7. '   ' → logprob: -7.531123161315918
    8. 'ED' → logprob: -7.531123161315918
    9. '[]' → logprob: -7.906123161315918
    10. 'ST' → logprob: -7.906123161315918

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31932735443115234
    2. '=' → logprob: -1.5693273544311523
    3. ',' → logprob: -2.9443273544311523
    4. '_COST' → logprob: -5.319327354431152
    5. ']' → logprob: -6.569327354431152
    6. '_IDX' → logprob: -6.694327354431152
    7. 'S' → logprob: -7.069327354431152
    8. ']=' → logprob: -7.194327354431152
    9. '_ROUTE' → logprob: -7.319327354431152
    10. 'IDX' → logprob: -8.444327354431152

Token 99: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6247851252555847
    2. ' ' → logprob: -0.9997851252555847
    3. ' [],' → logprob: -3.7497851848602295
    4. '[' → logprob: -4.37478494644165
    5. '[],' → logprob: -4.37478494644165
    6. ' [[]' → logprob: -4.49978494644165
    7. ' [' → logprob: -4.99978494644165
    8. '1' → logprob: -5.37478494644165
    9. '[]' → logprob: -5.37478494644165
    10. ' range' → logprob: -5.49978494644165

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1320439875125885
    2. '[' → logprob: -3.2570440769195557
    3. '[],' → logprob: -3.2570440769195557
    4. ' ' → logprob: -4.132043838500977
    5. 'range' → logprob: -4.257043838500977
    6. '1' → logprob: -5.257043838500977
    7. '[]' → logprob: -6.382043838500977
    8. '   ' → logprob: -6.632043838500977
    9. '-' → logprob: -6.757043838500977
    10. ' [],' → logprob: -6.882043838500977

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2436676174402237
    2. '<|end|>' → logprob: -1.6186676025390625
    3. '<|end|>' → logprob: -5.1186676025390625
    4. ' ' → logprob: -5.4936676025390625
    5. '
' → logprob: -6.3686676025390625
    6. ' ,' → logprob: -6.4936676025390625
    7. ':' → logprob: -6.9936676025390625
    8. ',
' → logprob: -7.2436676025390625
    9. ')' → logprob: -7.2436676025390625
    10. '  ' → logprob: -7.9936676025390625

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14272290468215942
    2. ' ' → logprob: -2.0177228450775146
    3. '0' → logprob: -10.267723083496094
    4. '  ' → logprob: -12.267723083496094
    5. '   ' → logprob: -12.642723083496094
    6. '    ' → logprob: -13.767723083496094
    7. '4' → logprob: -14.267723083496094
    8. '3' → logprob: -14.705223083496094
    9. '2' → logprob: -15.017723083496094
    10. '     ' → logprob: -15.205223083496094

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043448375072330236
    2. ' ' → logprob: -8.000434875488281
    3. '0' → logprob: -10.125434875488281
    4. '3' → logprob: -10.875434875488281
    5. '2' → logprob: -11.000434875488281
    6. '4' → logprob: -12.375434875488281
    7. '  ' → logprob: -12.750434875488281
    8. '-' → logprob: -12.812934875488281
    9. '   ' → logprob: -12.875434875488281
    10. '[]' → logprob: -13.625434875488281

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022609983570873737
    2. ' ,' → logprob: -6.377261161804199
    3. '<|end|>' → logprob: -7.627261161804199
    4. ',
' → logprob: -10.6272611618042
    5. '<|end|>' → logprob: -10.8772611618042
    6. ' ' → logprob: -11.8772611618042
    7. ')' → logprob: -12.7522611618042
    8. '2' → logprob: -13.1272611618042
    9. '
' → logprob: -13.1272611618042
    10. '```' → logprob: -13.5022611618042

Token 105: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03804459050297737
    2. ' ' → logprob: -3.2880446910858154
    3. '   ' → logprob: -13.725544929504395
    4. '  ' → logprob: -14.288044929504395
    5. '    ' → logprob: -15.225544929504395
    6. '=' → logprob: -16.225543975830078
    7. ' ' → logprob: -16.288043975830078
    8. ',' → logprob: -16.288043975830078
    9. '     ' → logprob: -16.413043975830078
    10. '２' → logprob: -16.413043975830078

Token 106: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013903543585911393
    2. ' ' → logprob: -6.62639045715332
    3. '0' → logprob: -11.00139045715332
    4. '1' → logprob: -11.12639045715332
    5. '-' → logprob: -11.25139045715332
    6. '3' → logprob: -11.62639045715332
    7. '999' → logprob: -13.25139045715332
    8. '   ' → logprob: -13.31389045715332
    9. '100' → logprob: -13.87639045715332
    10. '  ' → logprob: -14.00139045715332

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000543261703569442
    2. ' ,' → logprob: -8.750543594360352
    3. ',
' → logprob: -8.750543594360352
    4. '<|end|>' → logprob: -8.750543594360352
    5. '   ' → logprob: -11.250543594360352
    6. ' ' → logprob: -11.750543594360352
    7. ')' → logprob: -12.000543594360352
    8. '<|end|>' → logprob: -12.125543594360352
    9. '
' → logprob: -12.375543594360352
    10. '+' → logprob: -12.625543594360352

Token 108: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.043002739548683167
    2. ' ' → logprob: -3.1680028438568115
    3. '   ' → logprob: -13.41800308227539
    4. '  ' → logprob: -13.79300308227539
    5. '    ' → logprob: -15.04300308227539
    6. '...' → logprob: -15.41800308227539
    7. '۳' → logprob: -16.04300308227539
    8. '<|end|>' → logprob: -16.10550308227539
    9. '３' → logprob: -16.98050308227539
    10. '
' → logprob: -17.16800308227539

Token 109: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00014084660506341606
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -15.000141143798828
    4. '  ' → logprob: -15.625141143798828
    5. '...' → logprob: -16.062641143798828
    6. '۳' → logprob: -16.437641143798828
    7. '３' → logprob: -17.187641143798828
    8. '4' → logprob: -17.312641143798828
    9. '    ' → logprob: -17.437641143798828
    10. '৩' → logprob: -17.625141143798828

Token 110: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6481026411056519
    2. '   ' → logprob: -1.1481026411056519
    3. '<|end|>' → logprob: -2.1481027603149414
    4. ' ' → logprob: -4.648102760314941
    5. '    
' → logprob: -4.648102760314941
    6. ' 
' → logprob: -5.023102760314941
    7. ',' → logprob: -5.273102760314941
    8. ',
' → logprob: -6.523102760314941
    9. '  
' → logprob: -6.523102760314941
    10. '  ' → logprob: -6.773102760314941

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1088566705584526
    2. ' ' → logprob: -3.233856678009033
    3. ' 
' → logprob: -4.233856678009033
    4. '<|end|>' → logprob: -4.733856678009033
    5. ')' → logprob: -4.983856678009033
    6. ' while' → logprob: -5.108856678009033
    7. ',' → logprob: -5.483856678009033
    8. '    
' → logprob: -5.733856678009033
    9. '    ' → logprob: -6.108856678009033
    10. 'token' → logprob: -6.233856678009033

Token 112: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1366661936044693
    2. '   ' → logprob: -2.8866662979125977
    3. ' for' → logprob: -3.0116662979125977
    4. 'i' → logprob: -4.761666297912598
    5. 'idx' → logprob: -5.011666297912598
    6. 'return' → logprob: -6.386666297912598
    7. 'if' → logprob: -7.011666297912598
    8. 'cur' → logprob: -7.136666297912598
    9. 'src' → logprob: -7.261666297912598
    10. 'current' → logprob: -7.886666297912598

Token 113: ' v' (ID: 323)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1930113285779953
    2. ' node' → logprob: -3.3180112838745117
    3. ' route' → logprob: -3.5680112838745117
    4. 'i' → logprob: -4.318011283874512
    5. ' src' → logprob: -4.443011283874512
    6. ' r' → logprob: -4.443011283874512
    7. ' v' → logprob: -4.693011283874512
    8. ' now' → logprob: -4.818011283874512
    9. ' idx' → logprob: -4.818011283874512
    10. ' u' → logprob: -4.943011283874512

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02073165401816368
    2. 'in' → logprob: -3.8957316875457764
    3. ',' → logprob: -10.020731925964355
    4. ' ' → logprob: -10.145731925964355
    5. 's' → logprob: -11.520731925964355
    6. 'v' → logprob: -11.520731925964355
    7. 'range' → logprob: -11.645731925964355
    8. '	in' → logprob: -11.833231925964355
    9. 'i' → logprob: -12.395731925964355
    10. '_in' → logprob: -12.458231925964355

Token 115: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47714319825172424
    2. 'range' → logprob: -0.9771431684494019
    3. 'route' → logprob: -6.102143287658691
    4. ' route' → logprob: -7.227143287658691
    5. ' product' → logprob: -10.477143287658691
    6. 'product' → logprob: -10.477143287658691
    7. ' ' → logprob: -10.977143287658691
    8. '  ' → logprob: -12.727143287658691
    9. ' V' → logprob: -13.102143287658691
    10. '   ' → logprob: -13.164643287658691

Token 116: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0077642048709094524
    2. '(' → logprob: -4.8827643394470215
    3. '(len' → logprob: -9.257763862609863
    4. ' (' → logprob: -10.257763862609863
    5. '(v' → logprob: -10.882763862609863
    6. '(
' → logprob: -13.007763862609863
    7. '(N' → logprob: -13.382763862609863
    8. '()' → logprob: -13.757763862609863
    9. ' ' → logprob: -14.507763862609863
    10. '(

' → logprob: -14.757763862609863

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.049633461982011795
    2. '):
' → logprob: -3.049633502960205
    3. '+' → logprob: -7.424633502960205
    4. ' ):' → logprob: -8.174633026123047
    5. ':' → logprob: -9.674633026123047
    6. '   ' → logprob: -10.049633026123047
    7. ')' → logprob: -10.299633026123047
    8. ' ):
' → logprob: -11.674633026123047
    9. ' +' → logprob: -12.424633026123047
    10. '):
' → logprob: -12.549633026123047

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10381896793842316
    2. ':' → logprob: -2.853818893432617
    3. '<|end|>' → logprob: -4.103818893432617
    4. '   ' → logprob: -4.478818893432617
    5. ' :' → logprob: -5.728818893432617
    6. ' ' → logprob: -5.978818893432617
    7. '    ' → logprob: -6.478818893432617
    8. ',' → logprob: -7.228818893432617
    9. ')' → logprob: -7.228818893432617
    10. '        
' → logprob: -7.478818893432617

Token 119: ' temp' (ID: 5484)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7246934771537781
    2. 'for' → logprob: -0.7246934771537781
    3. '   ' → logprob: -4.349693298339844
    4. ' temp' → logprob: -5.599693298339844
    5. ' if' → logprob: -5.599693298339844
    6. 'temp' (adapté à ' temp') → logprob: -5.974693298339844
    7. '       ' → logprob: -6.224693298339844
    8. 'if' → logprob: -6.224693298339844
    9. '<|end|>' → logprob: -6.849693298339844
    10. '	for' → logprob: -7.724693298339844

Token 120: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0007318547577597201
    2. '[node' → logprob: -7.750731945037842
    3. 'node' → logprob: -9.500731468200684
    4. '[_' → logprob: -10.125731468200684
    5. '_token' → logprob: -10.375731468200684
    6. '_nodes' → logprob: -10.500731468200684
    7. '_' → logprob: -10.625731468200684
    8. '   ' → logprob: -11.000731468200684
    9. '[v' → logprob: -11.250731468200684
    10. '_v' → logprob: -11.375731468200684

Token 121: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.041266780346632004
    2. '.append' → logprob: -3.916266679763794
    3. '[' → logprob: -4.166266918182373
    4. '[N' → logprob: -6.041266918182373
    5. '[V' → logprob: -6.416266918182373
    6. '[node' → logprob: -7.666266918182373
    7. '[temp' → logprob: -8.916266441345215
    8. ' =' → logprob: -9.666266441345215
    9. '][' → logprob: -9.916266441345215
    10. '[][' → logprob: -9.916266441345215

Token 122: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5444572567939758
    2. '][' → logprob: -1.169457197189331
    3. '].' → logprob: -2.294457197189331
    4. ']=' → logprob: -4.91945743560791
    5. '[' → logprob: -7.79445743560791
    6. ' ][' → logprob: -8.41945743560791
    7. ' ]' → logprob: -9.04445743560791
    8. ')' → logprob: -9.41945743560791
    9. '])' → logprob: -9.54445743560791
    10. ' ].' → logprob: -9.79445743560791

Token 123: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.0024659058544784784
    2. 'clear' → logprob: -6.127465724945068
    3. 'extend' → logprob: -8.252466201782227
    4. ' append' → logprob: -11.752466201782227
    5. 'appen' → logprob: -12.502466201782227
    6. '.append' → logprob: -13.502466201782227
    7. 'insert' → logprob: -13.502466201782227
    8. '_append' → logprob: -13.627466201782227
    9. 'copy' → logprob: -13.752466201782227
    10. 'app' → logprob: -13.752466201782227

Token 124: '(copy' (ID: 101585)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -2.0311167240142822
    2. '[]' → logprob: -2.1561167240142822
    3. '[' → logprob: -2.2811167240142822
    4. '([]' → logprob: -2.4061167240142822
    5. '(route' → logprob: -2.4061167240142822
    6. '[v' → logprob: -2.6561167240142822
    7. '([' → logprob: -2.9061167240142822
    8. '(v' → logprob: -2.9061167240142822
    9. 'sys' → logprob: -3.2811167240142822
    10. '(sys' → logprob: -3.2811167240142822

Token 125: '.deepcopy' (ID: 130390)
  Prédit: '.deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.deepcopy' → logprob: -0.005903792101889849
    2. '.copy' → logprob: -5.755903720855713
    3. '(route' → logprob: -6.255903720855713
    4. '(' → logprob: -7.255903720855713
    5. '(copy' → logprob: -10.005904197692871
    6. '(product' → logprob: -12.005904197692871
    7. '.' → logprob: -12.005904197692871
    8. '.route' → logprob: -12.255904197692871
    9. '.deep' → logprob: -12.255904197692871
    10. '([]' → logprob: -12.505904197692871

Token 126: '(es' (ID: 89947)
  Prédit: '(route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(route' → logprob: -0.0004496189649216831
    2. '(' → logprob: -8.000449180603027
    3. 'route' → logprob: -9.250449180603027
    4. '(now' → logprob: -12.375449180603027
    5. '(product' → logprob: -12.625449180603027
    6. '(sys' → logprob: -13.000449180603027
    7. '((' → logprob: -13.250449180603027
    8. ' (' → logprob: -14.000449180603027
    9. '(node' → logprob: -14.125449180603027
    10. ' route' → logprob: -14.250449180603027

Token 127: '[v' (ID: 36561)
  Prédit: 'cape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cape' → logprob: -0.5864665508270264
    2. 'route' → logprob: -1.9614665508270264
    3. 'tab' → logprob: -2.9614665508270264
    4. 'g' → logprob: -3.0864665508270264
    5. 'cap' → logprob: -3.3364665508270264
    6. '(route' → logprob: -4.2114667892456055
    7. 'graph' → logprob: -4.3364667892456055
    8. 'p' → logprob: -4.3364667892456055
    9. '_route' → logprob: -4.3364667892456055
    10. '[' → logprob: -4.9614667892456055

Token 128: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.20817580819129944
    2. '][' → logprob: -1.708175778388977
    3. ']' → logprob: -5.5831756591796875
    4. '[' → logprob: -6.8331756591796875
    5. ']))
' → logprob: -7.9581756591796875
    6. '])' → logprob: -8.333175659179688
    7. ']['' → logprob: -8.458175659179688
    8. '].' → logprob: -8.583175659179688
    9. '])))' → logprob: -8.833175659179688
    10. ' ][' → logprob: -8.958175659179688

Token 129: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.9155665040016174
    2. 'for' → logprob: -1.1655664443969727
    3. ' for' → logprob: -1.9155664443969727
    4. ' temp' → logprob: -2.2905664443969727
    5. '   ' → logprob: -4.415566444396973
    6. '       ' → logprob: -4.665566444396973
    7. '<|end|>' → logprob: -5.040566444396973
    8. '[temp' → logprob: -6.290566444396973
    9. '[' → logprob: -6.915566444396973
    10. 'def' → logprob: -7.040566444396973

Token 131: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00013762809976469725
    2. 'node' → logprob: -9.000137329101562
    3. '   ' → logprob: -13.250137329101562
    4. '_nodes' → logprob: -13.500137329101562
    5. '_route' → logprob: -13.500137329101562
    6. 'Node' → logprob: -13.625137329101562
    7. '[node' → logprob: -13.750137329101562
    8. '._' → logprob: -13.875137329101562
    9. '_' → logprob: -14.125137329101562
    10. '_code' → logprob: -14.250137329101562

Token 132: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.421908958349377e-05
    2. '[' → logprob: -9.75007438659668
    3. '[s' → logprob: -12.75007438659668
    4. 'v' → logprob: -13.12507438659668
    5. '[u' → logprob: -13.37507438659668
    6. '[w' → logprob: -13.50007438659668
    7. '[
' → logprob: -14.12507438659668
    8. '```' → logprob: -14.25007438659668
    9. '][' → logprob: -14.37507438659668
    10. '[V' → logprob: -14.62507438659668

Token 133: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.051263485103845596
    2. '][' → logprob: -3.1762635707855225
    3. '[' → logprob: -5.426263332366943
    4. ').' → logprob: -6.426263332366943
    5. '.append' → logprob: -7.551263332366943
    6. ']' → logprob: -7.551263332366943
    7. '   ' → logprob: -7.676263332366943
    8. '][-' → logprob: -8.301263809204102
    9. ' ].' → logprob: -8.551263809204102
    10. '[-' → logprob: -9.926263809204102

Token 134: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.003081332892179489
    2. 'pop' → logprob: -6.378081321716309
    3. 'clear' → logprob: -7.253081321716309
    4. 'insert' → logprob: -7.878081321716309
    5. 'extend' → logprob: -8.503081321716309
    6. ' append' → logprob: -10.503081321716309
    7. 'appen' → logprob: -11.378081321716309
    8. 'remove' → logprob: -11.753081321716309
    9. '__' → logprob: -12.003081321716309
    10. 'sort' → logprob: -12.128081321716309

Token 135: '(' (ID: 7)
  Prédit: '(False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(False' → logprob: -0.648172914981842
    2. '(copy' → logprob: -1.3981728553771973
    3. '([' → logprob: -2.8981728553771973
    4. '([]' → logprob: -3.0231728553771973
    5. '(' → logprob: -3.0231728553771973
    6. '({' → logprob: -3.2731728553771973
    7. '(-' → logprob: -4.523172855377197
    8. '(True' → logprob: -4.773172855377197
    9. '(set' → logprob: -4.773172855377197
    10. '([-' → logprob: -6.023172855377197

Token 136: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.17532706260681152
    2. '[' → logprob: -2.6753270626068115
    3. 'copy' → logprob: -3.6753270626068115
    4. '0' → logprob: -4.050327301025391
    5. '{})' → logprob: -4.425327301025391
    6. '[])' → logprob: -5.050327301025391
    7. '{' → logprob: -5.175327301025391
    8. 'set' → logprob: -5.175327301025391
    9. '-' → logprob: -5.175327301025391
    10. 'True' → logprob: -5.675327301025391

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029653385281562805
    2. ')
' → logprob: -5.877965450286865
    3. ' )' → logprob: -9.127964973449707
    4. '<|end|>' → logprob: -10.002964973449707
    5. '
' → logprob: -12.377964973449707
    6. ' )
' → logprob: -14.377964973449707
    7. ')#' → logprob: -15.127964973449707
    8. ')
' → logprob: -15.377964973449707
    9. '),' → logprob: -15.502964973449707
    10. '   ' → logprob: -15.502964973449707

Token 138: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' temp' (ID: 5484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045374687761068344
    2. '   ' → logprob: -3.420374631881714
    3. ' temp' → logprob: -5.170374870300293
    4. 'temp' (adapté à ' temp') → logprob: -5.670374870300293
    5. ' ' → logprob: -7.295374870300293
    6. '0' → logprob: -7.295374870300293
    7. '	' → logprob: -8.170374870300293
    8. '<|end|>' → logprob: -8.420374870300293
    9. '  ' → logprob: -9.295374870300293
    10. '           ' → logprob: -9.420374870300293

Token 140: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.000193527273950167
    2. 'node' → logprob: -9.00019359588623
    3. '_token' → logprob: -9.75019359588623
    4. '_' → logprob: -12.75019359588623
    5. 'Node' → logprob: -13.12519359588623
    6. '   ' → logprob: -13.50019359588623
    7. '_NODE' → logprob: -13.75019359588623
    8. '_code' → logprob: -14.37519359588623
    9. '[node' → logprob: -14.87519359588623
    10. '.append' → logprob: -15.00019359588623

Token 141: '[v' (ID: 36561)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5724104642868042
    2. '[' → logprob: -0.9474104642868042
    3. '[v' → logprob: -3.1974105834960938
    4. '.' → logprob: -5.572410583496094
    5. '[-' → logprob: -6.322410583496094
    6. ' .' → logprob: -7.197410583496094
    7. '][' → logprob: -8.572410583496094
    8. 'append' → logprob: -8.822410583496094
    9. ' ' → logprob: -9.697410583496094
    10. ' [' → logprob: -9.947410583496094

Token 142: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.04469243437051773
    2. ']' → logprob: -3.9196925163269043
    3. '][' → logprob: -4.294692516326904
    4. '.append' → logprob: -4.919692516326904
    5. ' ].' → logprob: -6.919692516326904
    6. '.' → logprob: -7.669692516326904
    7. '[' → logprob: -7.669692516326904
    8. ']+=' → logprob: -8.294692039489746
    9. ').' → logprob: -8.794692039489746
    10. ' .' → logprob: -9.544692039489746

Token 143: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.0003601336502470076
    2. ' append' → logprob: -8.375360488891602
    3. ' ' → logprob: -10.250360488891602
    4. 'extend' → logprob: -10.750360488891602
    5. 'index' → logprob: -11.125360488891602
    6. 'insert' → logprob: -11.500360488891602
    7. 'appen' → logprob: -11.875360488891602
    8. '0' → logprob: -12.250360488891602
    9. '  ' → logprob: -12.250360488891602
    10. 'end' → logprob: -12.250360488891602

Token 144: '(-' (ID: 8087)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.797569990158081
    2. '(' → logprob: -1.172569990158081
    3. '(float' → logprob: -1.922569990158081
    4. '(int' → logprob: -2.672569990158081
    5. 'sys' → logprob: -4.79757022857666
    6. '(-' → logprob: -4.92257022857666
    7. 'float' → logprob: -5.79757022857666
    8. 'int' → logprob: -6.54757022857666
    9. '(copy' → logprob: -6.67257022857666
    10. 'es' → logprob: -6.92257022857666

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001462107611587271
    2. 'sys' → logprob: -10.00014591217041
    3. '999' → logprob: -10.75014591217041
    4. '2' → logprob: -10.75014591217041
    5. '10' → logprob: -11.00014591217041
    6. '100' → logprob: -11.25014591217041
    7. ' ' → logprob: -11.87514591217041
    8. '99' → logprob: -12.37514591217041
    9. '9' → logprob: -12.50014591217041
    10. '-' → logprob: -13.00014591217041

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008558308705687523
    2. ')
' → logprob: -4.88355827331543
    3. ' )' → logprob: -7.25855827331543
    4. '<|end|>' → logprob: -8.75855827331543
    5. '       ' → logprob: -10.13355827331543
    6. '   ' → logprob: -10.88355827331543
    7. ' )
' → logprob: -11.00855827331543
    8. ')
' → logprob: -12.63355827331543
    9. '
' → logprob: -13.38355827331543
    10. '<|end|>' → logprob: -13.50855827331543

Token 147: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' temp' (ID: 5484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02087538316845894
    2. 'temp' (adapté à ' temp') → logprob: -4.520875453948975
    3. ' temp' → logprob: -5.645875453948975
    4. '0' → logprob: -5.645875453948975
    5. '   ' → logprob: -7.145875453948975
    6. ' ' → logprob: -7.270875453948975
    7. '	' → logprob: -7.395875453948975
    8. '	temp' → logprob: -8.270874977111816
    9. '           ' → logprob: -9.770874977111816
    10. '1' → logprob: -10.270874977111816

Token 149: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0010282850125804543
    2. '_cost' → logprob: -7.626028060913086
    3. '_token' → logprob: -8.001028060913086
    4. '_' → logprob: -9.251028060913086
    5. 'node' → logprob: -10.001028060913086
    6. '_ch' → logprob: -10.751028060913086
    7. 'Node' → logprob: -11.376028060913086
    8. '_code' → logprob: -11.501028060913086
    9. 'cost' → logprob: -12.376028060913086
    10. '_NODE' → logprob: -12.626028060913086

Token 150: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00037204305408522487
    2. '[' → logprob: -8.250371932983398
    3. '.append' → logprob: -9.375371932983398
    4. '[-' → logprob: -11.000371932983398
    5. 'v' → logprob: -13.375371932983398
    6. '   ' → logprob: -13.500371932983398
    7. '```' → logprob: -14.000371932983398
    8. '.' → logprob: -14.250371932983398
    9. '<v' → logprob: -14.375371932983398
    10. ' ' → logprob: -14.375371932983398

Token 151: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.041524700820446014
    2. '.' → logprob: -4.166524887084961
    3. ' .' → logprob: -4.166524887084961
    4. '].' → logprob: -4.916524887084961
    5. 'append' → logprob: -7.166524887084961
    6. ']' → logprob: -7.916524887084961
    7. '[' → logprob: -8.291524887084961
    8. ').' → logprob: -8.541524887084961
    9. ' append' → logprob: -8.916524887084961
    10. ' ' → logprob: -9.166524887084961

Token 152: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.007454352919012308
    2. '1' → logprob: -5.0074543952941895
    3. 'pop' → logprob: -8.882453918457031
    4. '3' → logprob: -8.882453918457031
    5. '2' → logprob: -9.257453918457031
    6. 'insert' → logprob: -9.382453918457031
    7. 'index' → logprob: -9.882453918457031
    8. 'extend' → logprob: -10.132453918457031
    9. ' append' → logprob: -10.132453918457031
    10. '4' → logprob: -10.257453918457031

Token 153: '(' (ID: 7)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12048351764678955
    2. '(-' → logprob: -2.4954833984375
    3. 'None' → logprob: -5.3704833984375
    4. '(None' → logprob: -5.3704833984375
    5. '(' → logprob: -5.7454833984375
    6. '(v' → logprob: -5.8704833984375
    7. '0' → logprob: -5.9954833984375
    8. '-v' → logprob: -5.9954833984375
    9. 'v' → logprob: -5.9954833984375
    10. 'now' → logprob: -6.1204833984375

Token 154: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09709855169057846
    2. 'v' → logprob: -2.8470985889434814
    3. '-v' → logprob: -3.7220985889434814
    4. '0' → logprob: -5.722098350524902
    5. 'src' → logprob: -6.347098350524902
    6. 'None' → logprob: -6.972098350524902
    7. 'now' → logprob: -6.972098350524902
    8. '[]' → logprob: -7.222098350524902
    9. '-src' → logprob: -7.597098350524902
    10. '-now' → logprob: -8.222098350524902

Token 155: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000387535837944597
    2. ')
' → logprob: -7.875387668609619
    3. '   ' → logprob: -12.875387191772461
    4. ' )' → logprob: -13.000387191772461
    5. '
' → logprob: -13.375387191772461
    6. '<|end|>' → logprob: -14.250387191772461
    7. ')

' → logprob: -16.00038719177246
    8. ')return' → logprob: -16.37538719177246
    9. ')
' → logprob: -16.75038719177246
    10. '),' → logprob: -17.12538719177246

Token 156: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41510990262031555
    2. '<|end|>' → logprob: -1.5401098728179932
    3. ')' → logprob: -2.665109872817993
    4. ' 
' → logprob: -4.665110111236572
    5. ' )' → logprob: -4.790110111236572
    6. '   ' → logprob: -4.790110111236572
    7. '    ' → logprob: -5.540110111236572
    8. '[' → logprob: -5.540110111236572
    9. ',' → logprob: -5.790110111236572
    10. '#' → logprob: -6.040110111236572

Token 157: ' temp' (ID: 5484)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.07847669720649719
    2. '_pos' → logprob: -3.328476667404175
    3. 'def' → logprob: -4.703476905822754
    4. '_queue' → logprob: -5.578476905822754
    5. '_src' → logprob: -5.578476905822754
    6. '_cost' → logprob: -5.828476905822754
    7. '_distance' → logprob: -6.203476905822754
    8. 'node' → logprob: -6.203476905822754
    9. ' =' → logprob: -6.578476905822754
    10. '_idx' → logprob: -6.578476905822754

Token 159: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7751635909080505
    2. '[V' → logprob: -1.2751636505126953
    3. '[src' → logprob: -1.7751636505126953
    4. '[N' → logprob: -2.7751636505126953
    5. '[now' → logprob: -3.7751636505126953
    6. '[temp' → logprob: -6.900163650512695
    7. '[v' → logprob: -7.150163650512695
    8. '[S' → logprob: -7.775163650512695
    9. 'src' → logprob: -7.775163650512695
    10. '[get' → logprob: -7.900163650512695

Token 160: 'dst' (ID: 29763)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.045209042727947235
    2. ' src' → logprob: -3.1702089309692383
    3. '0' → logprob: -6.670208930969238
    4. '[src' → logprob: -7.670208930969238
    5. 's' → logprob: -9.170208930969238
    6. ' ' → logprob: -10.170208930969238
    7. ' now' → logprob: -10.170208930969238
    8. 'now' → logprob: -10.420208930969238
    9. 'route' → logprob: -10.795208930969238
    10. '1' → logprob: -10.920208930969238

Token 161: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012066614581272006
    2. '[' → logprob: -7.376206874847412
    3. '].' → logprob: -8.376206398010254
    4. ']' → logprob: -8.626206398010254
    5. ' ][' → logprob: -9.126206398010254
    6. '][-' → logprob: -10.001206398010254
    7. '[N' → logprob: -12.001206398010254
    8. '.append' → logprob: -13.376206398010254
    9. '][_' → logprob: -13.501206398010254
    10. ']][' → logprob: -14.001206398010254

Token 162: 'NODE' (ID: 105718)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4779694676399231
    2. 'NODE' → logprob: -0.9779694676399231
    3. '2' → logprob: -5.977969646453857
    4. ' NODE' → logprob: -7.102969646453857
    5. '0' → logprob: -8.9779691696167
    6. '
' → logprob: -9.3529691696167
    7. ' ' → logprob: -9.6029691696167
    8. 'N' → logprob: -10.2279691696167
    9. '3' → logprob: -10.3529691696167
    10. '   ' → logprob: -10.7279691696167

Token 163: '_COST' (ID: 168150)
  Prédit: '_DEFINED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_DEFINED' → logprob: -0.013981555588543415
    2. 'DEFINED' → logprob: -4.513981342315674
    3. '_COST' → logprob: -6.138981342315674
    4. '_CH' → logprob: -7.388981342315674
    5. 'CH' → logprob: -9.513981819152832
    6. '_DE' → logprob: -11.388981819152832
    7. '_DEFINE' → logprob: -11.388981819152832
    8. '_defined' → logprob: -11.763981819152832
    9. 'defined' → logprob: -11.763981819152832
    10. '_CHANGED' → logprob: -11.888981819152832

Token 164: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6046581268310547
    2. ' =' → logprob: -1.3546581268310547
    3. '=' → logprob: -1.7296581268310547
    4. ']=' → logprob: -4.104658126831055
    5. ' ]' → logprob: -6.479658126831055
    6. ' ' → logprob: -8.854658126831055
    7. ',' → logprob: -9.229658126831055
    8. ')' → logprob: -10.979658126831055
    9. '[' → logprob: -11.104658126831055
    10. '0' → logprob: -11.604658126831055

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313279926776886
    2. '=' → logprob: -1.3132798671722412
    3. ',' → logprob: -11.31328010559082
    4. ' ' → logprob: -12.43828010559082
    5. ' ==' → logprob: -14.43828010559082
    6. ' +=' → logprob: -14.68828010559082
    7. '==' → logprob: -15.31328010559082
    8. '+=' → logprob: -15.81328010559082
    9. '0' → logprob: -16.06328010559082
    10. ')' → logprob: -16.68828010559082

Token 166: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025417746510356665
    2. ' ' → logprob: -6.002541542053223
    3. '1' → logprob: -10.127541542053223
    4. '   ' → logprob: -11.752541542053223
    5. '  ' → logprob: -12.815041542053223
    6. 'sys' → logprob: -13.190041542053223
    7. '100' → logprob: -13.377541542053223
    8. '-' → logprob: -13.377541542053223
    9. 'es' → logprob: -13.502541542053223
    10. 'int' → logprob: -14.252541542053223

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.68153518543113e-05
    2. ' ' → logprob: -10.000057220458984
    3. '1' → logprob: -11.875057220458984
    4. '-' → logprob: -13.625057220458984
    5. '100' → logprob: -14.312557220458984
    6. '   ' → logprob: -14.687557220458984
    7. '999' → logprob: -15.187557220458984
    8. 'sys' → logprob: -15.500057220458984
    9. '  ' → logprob: -15.750057220458984
    10. '[' → logprob: -15.937557220458984

Token 168: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25763610005378723
    2. '<|end|>' → logprob: -1.5076360702514648
    3. ' for' → logprob: -5.882636070251465
    4. ' while' → logprob: -7.382636070251465
    5. '<|end|>' → logprob: -7.507636070251465
    6. 'for' → logprob: -7.632636070251465
    7. 'token' → logprob: -8.132636070251465
    8. ' token' → logprob: -9.257636070251465
    9. '	for' → logprob: -9.507636070251465
    10. 'while' → logprob: -9.507636070251465

Token 169: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' distance' (ID: 9324)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7065550088882446
    2. '   ' → logprob: -1.8315550088882446
    3. 'queue' → logprob: -1.9565550088882446
    4. 'while' → logprob: -2.081554889678955
    5. 'idx' → logprob: -3.206554889678955
    6. 'stack' → logprob: -4.831554889678955
    7. 'import' → logprob: -5.206554889678955
    8. ' for' → logprob: -5.331554889678955
    9. 'v' → logprob: -5.456554889678955
    10. 'current' → logprob: -6.206554889678955

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027520278468728065
    2. 's' → logprob: -4.777520179748535
    3. '=' → logprob: -4.902520179748535
    4. '_queue' → logprob: -5.277520179748535
    5. ',' → logprob: -5.652520179748535
    6. 'Queue' → logprob: -7.902520179748535
    7. '_stack' → logprob: -8.027520179748535
    8. '[]' → logprob: -8.152520179748535
    9. '_list' → logprob: -8.402520179748535
    10. 'es' → logprob: -8.652520179748535

Token 172: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.94722580909729
    2. '[' → logprob: -1.07222580909729
    3. 'sys' → logprob: -1.82222580909729
    4. '[]' → logprob: -3.69722580909729
    5. 'float' → logprob: -4.197225570678711
    6. ' [' → logprob: -4.322225570678711
    7. ' sys' → logprob: -4.572225570678711
    8. '[int' → logprob: -4.572225570678711
    9. ' ' → logprob: -4.822225570678711
    10. '[-' → logprob: -5.447225570678711

Token 173: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9548702836036682
    2. '[' → logprob: -1.0798702239990234
    3. 'sys' → logprob: -1.7048702239990234
    4. '[]' → logprob: -4.204870223999023
    5. 'float' → logprob: -4.704870223999023
    6. 'copy' → logprob: -4.704870223999023
    7. '[int' → logprob: -4.829870223999023
    8. '1' → logprob: -4.954870223999023
    9. '[-' → logprob: -5.079870223999023
    10. '[(' → logprob: -5.204870223999023

Token 174: '

' (ID: 279)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.027971772477030754
    2. '00' → logprob: -3.9029717445373535
    3. '001' → logprob: -5.2779717445373535
    4. '01' → logprob: -6.6529717445373535
    5. '0' → logprob: -7.1529717445373535
    6. '1' → logprob: -9.652972221374512
    7. '007' → logprob: -10.152972221374512
    8. '_' → logprob: -10.277972221374512
    9. '*' → logprob: -10.277972221374512
    10. '009' → logprob: -11.152972221374512

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29721662402153015
    2. '000' → logprob: -2.2972166538238525
    3. '0' → logprob: -2.9222166538238525
    4. '    
' → logprob: -3.4222166538238525
    5. '
' → logprob: -4.047216415405273
    6. '<|end|>' → logprob: -4.547216415405273
    7. 'while' → logprob: -4.547216415405273
    8. '    ' → logprob: -4.797216415405273
    9. ',' → logprob: -5.297216415405273
    10. '	while' → logprob: -5.797216415405273

Token 176: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2548461854457855
    2. 'for' → logprob: -1.754846215248108
    3. 'queue' → logprob: -3.5048460960388184
    4. 'import' → logprob: -4.379846096038818
    5. 'from' → logprob: -5.879846096038818
    6. 'heap' → logprob: -6.379846096038818
    7. '   ' → logprob: -6.629846096038818
    8. 'q' → logprob: -7.379846096038818
    9. 'stack' → logprob: -7.379846096038818
    10. 'idx' → logprob: -7.879846096038818

Token 177: ' True' (ID: 6432)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.3065873086452484
    2. ' True' → logprob: -2.0565872192382812
    3. 'True' → logprob: -2.9315872192382812
    4. 'distance' → logprob: -3.4315872192382812
    5. ' len' → logprob: -4.056587219238281
    6. '(True' → logprob: -4.306587219238281
    7. ' temp' → logprob: -4.681587219238281
    8. '(distance' → logprob: -5.431587219238281
    9. '1' → logprob: -6.931587219238281
    10. ' ' → logprob: -7.056587219238281

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023572142235934734
    2. '<|end|>' → logprob: -6.627357006072998
    3. ' :' → logprob: -7.502357006072998
    4. ':
' → logprob: -7.877357006072998
    5. ',' → logprob: -10.502357482910156
    6. '<|end|>' → logprob: -10.627357482910156
    7. '   ' → logprob: -10.877357482910156
    8. '       ' → logprob: -11.377357482910156
    9. ' and' → logprob: -12.377357482910156
    10. '):' → logprob: -13.002357482910156

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01017014216631651
    2. '<|end|>' → logprob: -5.010169982910156
    3. '   ' → logprob: -6.635169982910156
    4. '    ' → logprob: -7.635169982910156
    5. 'if' → logprob: -7.635169982910156
    6. '        ' → logprob: -8.635169982910156
    7. '...' → logprob: -8.885169982910156
    8. 'for' → logprob: -9.010169982910156
    9. 'distance' → logprob: -9.010169982910156
    10. '        
' → logprob: -9.135169982910156

Token 180: ' i' (ID: 575)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6888049840927124
    2. '       ' → logprob: -2.063805103302002
    3. 'change' → logprob: -3.188805103302002
    4. 'flag' → logprob: -3.188805103302002
    5. '   ' → logprob: -3.438805103302002
    6. 'changed' → logprob: -3.563805103302002
    7. 'distance' → logprob: -3.563805103302002
    8. 'check' → logprob: -3.688805103302002
    9. 'node' → logprob: -4.063805103302002
    10. 'next' → logprob: -4.313805103302002

Token 181: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5042845606803894
    2. 'f' → logprob: -1.8792846202850342
    3. 'nd' → logprob: -2.754284620285034
    4. 'm' → logprob: -2.879284620285034
    5. ' =' → logprob: -3.504284620285034
    6. 's' → logprob: -3.754284620285034
    7. 'dx' → logprob: -4.504284381866455
    8. 'min' → logprob: -4.754284381866455
    9. '=' → logprob: -4.879284381866455
    10. 'np' → logprob: -5.004284381866455

Token 182: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02077813260257244
    2. '0' → logprob: -4.145778179168701
    3. ' -' → logprob: -6.770778179168701
    4. 'src' → logprob: -7.020778179168701
    5. 'None' → logprob: -7.270778179168701
    6. '100' → logprob: -7.895778179168701
    7. 'V' → logprob: -8.145777702331543
    8. 'min' → logprob: -8.145777702331543
    9. 'sys' → logprob: -8.520777702331543
    10. 'dst' → logprob: -8.770777702331543

Token 183: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: ' for' (ID: 395)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.32818570733070374
    2. 'for' (adapté à ' for') → logprob: -1.4531856775283813
    3. 'minimum' → logprob: -4.453185558319092
    4. ' for' → logprob: -4.828185558319092
    5. '999' → logprob: -5.453185558319092
    6. 'distance' → logprob: -5.703185558319092
    7. '100' → logprob: -5.953185558319092
    8. '-' → logprob: -6.078185558319092
    9. 'max' → logprob: -6.203185558319092
    10. ' min' → logprob: -6.703185558319092

Token 186: ' k' (ID: 372)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.010059566237032413
    2. ' v' → logprob: -4.635059356689453
    3. 'j' → logprob: -8.510059356689453
    4. 'u' → logprob: -10.385059356689453
    5. 'k' → logprob: -10.885059356689453
    6. 'w' → logprob: -11.635059356689453
    7. 'node' → logprob: -11.635059356689453
    8. '_v' → logprob: -11.760059356689453
    9. 'x' → logprob: -12.010059356689453
    10. ' j' → logprob: -12.385059356689453

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0003831252979580313
    2. 'in' → logprob: -8.250383377075195
    3. ',' → logprob: -9.125383377075195
    4. ' ' → logprob: -12.250383377075195
    5. ',v' → logprob: -12.500383377075195
    6. 'v' → logprob: -13.000383377075195
    7. 'range' → logprob: -14.750383377075195
    8. 'd' → logprob: -15.750383377075195
    9. 'n' → logprob: -16.000383377075195
    10. '   ' → logprob: -16.062883377075195

Token 188: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0486072339117527
    2. ' range' → logprob: -3.048607349395752
    3. ' ' → logprob: -11.548606872558594
    4. '[' → logprob: -13.048606872558594
    5. '  ' → logprob: -13.423606872558594
    6. '   ' → logprob: -13.423606872558594
    7. '(range' → logprob: -13.673606872558594
    8. '	range' → logprob: -13.923606872558594
    9. 'temp' → logprob: -14.298606872558594
    10. '    ' → logprob: -14.673606872558594

Token 189: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.002247438533231616
    2. 'V' → logprob: -6.252247333526611
    3. '(' → logprob: -8.75224781036377
    4. '   ' → logprob: -9.50224781036377
    5. '(len' → logprob: -10.25224781036377
    6. 'len' → logprob: -10.25224781036377
    7. '	V' → logprob: -12.62724781036377
    8. ' ' → logprob: -13.25224781036377
    9. '(
' → logprob: -13.37724781036377
    10. '(N' → logprob: -13.75224781036377

Token 190: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.474151074886322
    2. '):' → logprob: -0.974151074886322
    3. '):

' → logprob: -10.474150657653809
    4. '   ' → logprob: -11.349150657653809
    5. '):
' → logprob: -11.349150657653809
    6. '       ' → logprob: -11.724150657653809
    7. ':' → logprob: -12.349150657653809
    8. ' ):' → logprob: -13.099150657653809
    9. ' ):
' → logprob: -13.099150657653809
    10. ':
' → logprob: -13.474150657653809

Token 191: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6471248865127563
    2. '           ' → logprob: -0.7721248865127563
    3. ' if' → logprob: -5.022124767303467
    4. 'if' → logprob: -5.522124767303467
    5. '<|end|>' → logprob: -5.897124767303467
    6. '   ' → logprob: -7.647124767303467
    7. '	       ' → logprob: -9.272125244140625
    8. '<|end|>' → logprob: -9.272125244140625
    9. '
' → logprob: -9.522125244140625
    10. '0' → logprob: -10.147125244140625

Token 192: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04895136505365372
    2. '       ' → logprob: -3.2989513874053955
    3. ' if' → logprob: -4.548951148986816
    4. '           ' → logprob: -9.048951148986816
    5. '<|end|>' → logprob: -9.798951148986816
    6. '   ' → logprob: -10.298951148986816
    7. '[' → logprob: -10.423951148986816
    8. '               ' → logprob: -11.673951148986816
    9. ' ' → logprob: -11.923951148986816
    10. '	if' → logprob: -12.048951148986816

Token 193: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.09074018150568008
    2. 'not' → logprob: -2.840740203857422
    3. ' temp' → logprob: -4.090740203857422
    4. ' not' → logprob: -4.590740203857422
    5. '(temp' → logprob: -7.215740203857422
    6. '0' → logprob: -7.715740203857422
    7. '(not' → logprob: -8.715740203857422
    8. ' ' → logprob: -10.340740203857422
    9. ' (' → logprob: -10.465740203857422
    10. '(' → logprob: -11.215740203857422

Token 194: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.176947600673884e-05
    2. 'node' → logprob: -11.250021934509277
    3. '[k' → logprob: -12.250021934509277
    4. 'k' → logprob: -14.000021934509277
    5. '_k' → logprob: -14.000021934509277
    6. 'Node' → logprob: -14.625021934509277
    7. '_token' → logprob: -15.000021934509277
    8. '[node' → logprob: -15.125021934509277
    9. '_NODE' → logprob: -15.500021934509277
    10. '[i' → logprob: -15.750021934509277

Token 195: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.2723104848410003e-05
    2. '[v' → logprob: -11.625022888183594
    3. '[' → logprob: -11.875022888183594
    4. 'k' → logprob: -12.250022888183594
    5. '[i' → logprob: -14.375022888183594
    6. '[s' → logprob: -15.750022888183594
    7. ' [' → logprob: -15.750022888183594
    8. '[
' → logprob: -16.125022888183594
    9. '[node' → logprob: -16.375022888183594
    10. '[temp' → logprob: -16.625022888183594

Token 196: '][' (ID: 2696)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.011075885966420174
    2. '[' → logprob: -4.511075973510742
    3. '][' → logprob: -10.761075973510742
    4. ')[' → logprob: -13.011075973510742
    5. '>[' → logprob: -13.761075973510742
    6. '}[' → logprob: -14.386075973510742
    7. '[node' → logprob: -15.011075973510742
    8. ' [' → logprob: -15.511075973510742
    9. '
' → logprob: -15.511075973510742
    10. '[V' → logprob: -15.761075973510742

Token 197: 'NODE' (ID: 105718)
  Prédit: 'NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NODE' → logprob: -0.003206711495295167
    2. '1' → logprob: -5.753206729888916
    3. ' NODE' → logprob: -11.628206253051758
    4. '
' → logprob: -11.878206253051758
    5. '2' → logprob: -12.628206253051758
    6. '.NODE' → logprob: -13.128206253051758
    7. '   ' → logprob: -13.128206253051758
    8. '[' → logprob: -13.503206253051758
    9. '[N' → logprob: -14.003206253051758
    10. 'get' → logprob: -14.128206253051758

Token 198: '_DEFINED' (ID: 160478)
  Prédit: '_DEFINED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_DEFINED' → logprob: -0.12277863919734955
    2. 'DEFINED' → logprob: -2.7477786540985107
    3. '_COST' → logprob: -2.9977786540985107
    4. 'C' → logprob: -6.622778415679932
    5. '_CH' → logprob: -8.87277889251709
    6. 'CH' → logprob: -9.87277889251709
    7. 'defined' → logprob: -11.37277889251709
    8. '
' → logprob: -11.99777889251709
    9. '_defined' → logprob: -12.24777889251709
    10. '_DEFINE' → logprob: -12.37277889251709

Token 199: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12767332792282104
    2. ']==' → logprob: -2.127673387527466
    3. ' ]' → logprob: -7.502673149108887
    4. '==' → logprob: -9.002673149108887
    5. '']==' → logprob: -11.252673149108887
    6. ' ==' → logprob: -11.752673149108887
    7. ']]' → logprob: -11.877673149108887
    8. ' ' → logprob: -12.127673149108887
    9. '```' → logprob: -12.252673149108887
    10. ']!=' → logprob: -12.252673149108887

Token 200: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007681038696318865
    2. ' ==' → logprob: -4.882680892944336
    3. '==
' → logprob: -10.382680892944336
    4. ']==' → logprob: -10.757680892944336
    5. ' ' → logprob: -12.132680892944336
    6. '!=' → logprob: -12.257680892944336
    7. '()==' → logprob: -12.882680892944336
    8. '0' → logprob: -13.132680892944336
    9. ')==' → logprob: -13.507680892944336
    10. '```' → logprob: -14.007680892944336

Token 201: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859498515725136
    2. ' ' → logprob: -3.0485949516296387
    3. '   ' → logprob: -12.798595428466797
    4. 'False' → logprob: -13.423595428466797
    5. '1' → logprob: -14.048595428466797
    6. ' ' → logprob: -14.173595428466797
    7. '  ' → logprob: -14.298595428466797
    8. '=' → logprob: -15.298595428466797
    9. ' False' → logprob: -15.611095428466797
    10. '
' → logprob: -15.986095428466797

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008073674980551004
    2. ' ' → logprob: -7.125807285308838
    3. 'False' → logprob: -13.500807762145996
    4. '1' → logprob: -14.125807762145996
    5. '   ' → logprob: -15.125807762145996
    6. '  ' → logprob: -16.68830680847168
    7. '۰' → logprob: -16.68830680847168
    8. '=' → logprob: -17.12580680847168
    9. ' False' → logprob: -17.12580680847168
    10. '    ' → logprob: -17.31330680847168

Token 203: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5070362091064453
    2. ' and' → logprob: -1.0070362091064453
    3. ':' → logprob: -3.6320362091064453
    4. ':
' → logprob: -5.132036209106445
    5. ' or' → logprob: -11.632036209106445
    6. '               ' → logprob: -11.757036209106445
    7. '           ' → logprob: -12.007036209106445
    8. '       ' → logprob: -12.132036209106445
    9. ':

' → logprob: -12.132036209106445
    10. '<|end|>' → logprob: -12.132036209106445

Token 204: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6467381119728088
    2. '(temp' → logprob: -0.7717381119728088
    3. ' (' → logprob: -4.896738052368164
    4. ' temp' → logprob: -5.396738052368164
    5. '(' → logprob: -7.396738052368164
    6. '0' → logprob: -8.021738052368164
    7. '   ' → logprob: -8.521738052368164
    8. '(
' → logprob: -8.646738052368164
    9. '((' → logprob: -8.646738052368164
    10. '
' → logprob: -9.271738052368164

Token 205: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -6.897412822581828e-05
    2. '_i' → logprob: -10.250068664550781
    3. 'Node' → logprob: -11.625068664550781
    4. 'node' → logprob: -12.000068664550781
    5. '
' → logprob: -13.125068664550781
    6. '_' → logprob: -13.250068664550781
    7. '_distance' → logprob: -13.375068664550781
    8. 'i' → logprob: -13.625068664550781
    9. '   ' → logprob: -13.750068664550781
    10. '_token' → logprob: -13.750068664550781

Token 206: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.750003814697266
    3. 'k' → logprob: -14.375003814697266
    4. '[v' → logprob: -16.750003814697266
    5. '[i' → logprob: -17.250003814697266
    6. '[key' → logprob: -17.375003814697266
    7. '[token' → logprob: -17.500003814697266
    8. '[s' → logprob: -17.625003814697266
    9. ' [' → logprob: -17.750003814697266
    10. '{k' → logprob: -17.875003814697266

Token 207: '][' (ID: 2696)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.10967627167701721
    2. '][' → logprob: -2.8596763610839844
    3. '[' → logprob: -3.2346763610839844
    4. '>[' → logprob: -5.734676361083984
    5. ')[' → logprob: -6.859676361083984
    6. 'temp' → logprob: -6.984676361083984
    7. '}[' → logprob: -7.609676361083984
    8. '[k' → logprob: -7.609676361083984
    9. '
' → logprob: -8.359676361083984
    10. '[temp' → logprob: -8.609676361083984

Token 208: 'NODE' (ID: 105718)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.0054806252010166645
    2. 'NODE' → logprob: -5.630480766296387
    3. 'k' → logprob: -6.505480766296387
    4. '
' → logprob: -8.755480766296387
    5. '[' → logprob: -9.630480766296387
    6. '[C' → logprob: -9.880480766296387
    7. '[k' → logprob: -10.005480766296387
    8. 'cost' → logprob: -11.130480766296387
    9. '   ' → logprob: -11.630480766296387
    10. '<N' → logprob: -11.880480766296387

Token 209: '_COST' (ID: 168150)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.29439735412597656
    2. '[C' → logprob: -1.4193973541259766
    3. 'CH' → logprob: -5.044397354125977
    4. '[' → logprob: -5.919397354125977
    5. '_COST' → logprob: -6.044397354125977
    6. '
' → logprob: -8.169397354125977
    7. 'cost' → logprob: -8.419397354125977
    8. '```' → logprob: -8.419397354125977
    9. '   ' → logprob: -8.544397354125977
    10. '_CH' → logprob: -8.919397354125977

Token 210: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.547793984413147
    2. ' !=' → logprob: -1.672793984413147
    3. '!=-' → logprob: -2.0477938652038574
    4. '>=' → logprob: -2.4227938652038574
    5. '>' → logprob: -4.797793865203857
    6. ' >=' → logprob: -5.672793865203857
    7. '<' → logprob: -6.547793865203857
    8. ']' → logprob: -7.047793865203857
    9. ']!=' → logprob: -7.047793865203857
    10. ' >' → logprob: -8.047794342041016

Token 211: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4473656415939331
    2. '!=' → logprob: -1.072365641593933
    3. '>' → logprob: -4.697365760803223
    4. '!=-' → logprob: -4.947365760803223
    5. ' !=' → logprob: -6.322365760803223
    6. ' >=' → logprob: -8.447365760803223
    7. '<' → logprob: -8.572365760803223
    8. '>-' → logprob: -10.822365760803223
    9. 'is' → logprob: -11.572365760803223
    10. ' >' → logprob: -11.947365760803223

Token 212: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017055326607078314
    2. ' ' → logprob: -6.376705646514893
    3. '   ' → logprob: -13.001705169677734
    4. '  ' → logprob: -14.939205169677734
    5. '00' → logprob: -15.814205169677734
    6. '
' → logprob: -16.064205169677734
    7. '۰' → logprob: -16.626705169677734
    8. '1' → logprob: -16.876705169677734
    9. ' ' → logprob: -16.876705169677734
    10. '    ' → logprob: -17.564205169677734

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013273799559101462
    2. ' ' → logprob: -6.6263275146484375
    3. '   ' → logprob: -14.376327514648438
    4. '  ' → logprob: -15.813827514648438
    5. '00' → logprob: -16.188827514648438
    6. '
' → logprob: -16.501327514648438
    7. '1' → logprob: -16.563827514648438
    8. '۰' → logprob: -16.626327514648438
    9. 'distance' → logprob: -16.938827514648438
    10. ')' → logprob: -17.126327514648438

Token 214: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10822845250368118
    2. '           ' → logprob: -2.7332284450531006
    3. 'and' → logprob: -3.4832284450531006
    4. '               ' → logprob: -5.48322868347168
    5. ':' → logprob: -6.60822868347168
    6. ':
' → logprob: -6.85822868347168
    7. '       ' → logprob: -8.98322868347168
    8. ' :' → logprob: -10.23322868347168
    9. '0' → logprob: -10.85822868347168
    10. ' ' → logprob: -10.85822868347168

Token 215: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21918174624443054
    2. ' and' → logprob: -1.844181776046753
    3. '           ' → logprob: -3.844181776046753
    4. ' if' → logprob: -4.344181537628174
    5. ':' → logprob: -6.469181537628174
    6. ' ' → logprob: -7.469181537628174
    7. ':
' → logprob: -7.469181537628174
    8. ' :' → logprob: -8.594182014465332
    9. '<|end|>' → logprob: -8.594182014465332
    10. 'and' → logprob: -8.969182014465332

Token 216: ' i' (ID: 575)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5269249677658081
    2. '           ' → logprob: -1.026924967765808
    3. ' if' → logprob: -3.4019250869750977
    4. '               ' → logprob: -4.276925086975098
    5. '       ' → logprob: -6.026925086975098
    6. '   ' → logprob: -6.401925086975098
    7. '                   ' → logprob: -9.401925086975098
    8. 'i' (adapté à ' i') → logprob: -9.651925086975098
    9. '	if' → logprob: -10.651925086975098
    10. ' ' → logprob: -11.151925086975098

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07070267200469971
    2. ' =' → logprob: -2.69570255279541
    3. '=i' → logprob: -7.82070255279541
    4. '=k' → logprob: -8.94570255279541
    5. 'k' → logprob: -9.82070255279541
    6. ',' → logprob: -9.94570255279541
    7. '==' → logprob: -9.94570255279541
    8. '=None' → logprob: -10.69570255279541
    9. ' ' → logprob: -11.69570255279541
    10. ' is' → logprob: -11.82070255279541

Token 218: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.8325677703833207e-05
    2. ' k' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.500028610229492
    4. 'i' → logprob: -16.000028610229492
    5. '	k' → logprob: -16.250028610229492
    6. ' ' → logprob: -16.500028610229492
    7. '  ' → logprob: -17.125028610229492
    8. '0' → logprob: -17.250028610229492
    9. '    ' → logprob: -17.250028610229492
    10. '(k' → logprob: -17.250028610229492

Token 219: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006316631333902478
    2. 'break' → logprob: -7.750631809234619
    3. '                
' → logprob: -9.875631332397461
    4. '           ' → logprob: -10.125631332397461
    5. '
' → logprob: -10.500631332397461
    6. ' break' → logprob: -10.750631332397461
    7. ' if' → logprob: -11.125631332397461
    8. 'if' → logprob: -11.500631332397461
    9. '       ' → logprob: -12.000631332397461
    10. '                ' → logprob: -12.125631332397461

Token 220: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005562512087635696
    2. ' if' → logprob: -8.625555992126465
    3. 'break' → logprob: -8.750555992126465
    4. '           ' → logprob: -9.625555992126465
    5. 'if' → logprob: -9.750555992126465
    6. '                
' → logprob: -10.750555992126465
    7. ' break' → logprob: -11.375555992126465
    8. '       ' → logprob: -11.500555992126465
    9. '                   ' → logprob: -12.125555992126465
    10. '
' → logprob: -12.125555992126465

Token 221: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.049083929508924484
    2. '               ' → logprob: -3.049083948135376
    3. ' break' → logprob: -8.299083709716797
    4. '       ' → logprob: -9.424083709716797
    5. 'for' → logprob: -9.924083709716797
    6. '           ' → logprob: -10.049083709716797
    7. '                   ' → logprob: -10.174083709716797
    8. '	break' → logprob: -10.924083709716797
    9. '   ' → logprob: -11.924083709716797
    10. 'distance' → logprob: -12.049083709716797

Token 222: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07341122627258301
    2. ' for' → logprob: -4.073410987854004
    3. '        
' → logprob: -4.573410987854004
    4. ' ' → logprob: -4.698410987854004
    5. ' 
' → logprob: -4.698410987854004
    6. 'for' → logprob: -4.823410987854004
    7. '
' → logprob: -4.823410987854004
    8. '        ' → logprob: -5.948410987854004
    9. '           ' → logprob: -6.948410987854004
    10. '               ' → logprob: -6.948410987854004

Token 223: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5351558923721313
    2. '       ' → logprob: -1.2851558923721313
    3. 'for' → logprob: -2.285155773162842
    4. ' ' → logprob: -4.285155773162842
    5. '        ' → logprob: -5.035155773162842
    6. '
' → logprob: -5.285155773162842
    7. ' else' → logprob: -6.410155773162842
    8. '        
' → logprob: -6.410155773162842
    9. ' 
' → logprob: -6.535155773162842
    10. '           ' → logprob: -7.035155773162842

Token 224: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4533036947250366
    2. '       ' → logprob: -1.4533036947250366
    3. 'for' → logprob: -3.078303813934326
    4. ' ' → logprob: -3.328303813934326
    5. '   ' → logprob: -4.328303813934326
    6. ' if' → logprob: -4.328303813934326
    7. '    ' → logprob: -4.953303813934326
    8. '        ' → logprob: -5.328303813934326
    9. ' 
' → logprob: -6.078303813934326
    10. ' i' → logprob: -6.453303813934326

Token 225: '_defined' (ID: 144806)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3240687847137451
    2. ' =' → logprob: -1.9490687847137451
    3. 'k' → logprob: -2.199068784713745
    4. 'if' → logprob: -2.574068784713745
    5. ' for' → logprob: -2.824068784713745
    6. ' if' → logprob: -2.824068784713745
    7. 'for' → logprob: -3.074068784713745
    8. '_nodes' → logprob: -3.324068784713745
    9. ' k' → logprob: -3.449068784713745
    10. ' i' → logprob: -3.824068784713745

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12740080058574677
    2. '=' → logprob: -2.1274008750915527
    3. ',' → logprob: -8.377400398254395
    4. '=True' → logprob: -9.377400398254395
    5. '_' → logprob: -9.752400398254395
    6. ' ' → logprob: -10.877400398254395
    7. '   ' → logprob: -11.002400398254395
    8. '=False' → logprob: -11.627400398254395
    9. '_flag' → logprob: -11.752400398254395
    10. '()' → logprob: -12.127400398254395

Token 227: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.007265490014106035
    2. ' True' → logprob: -5.382265567779541
    3. 'all' → logprob: -6.507265567779541
    4. '   ' → logprob: -7.632265567779541
    5. '1' → logprob: -8.382265090942383
    6. '(True' → logprob: -8.632265090942383
    7. 'i' → logprob: -9.007265090942383
    8. ' all' → logprob: -9.632265090942383
    9. ' ' → logprob: -10.257265090942383
    10. '(i' → logprob: -11.382265090942383

Token 228: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011729635298252106
    2. ' for' → logprob: -7.50117301940918
    3. '<|end|>' → logprob: -8.37617301940918
    4. '           ' → logprob: -9.12617301940918
    5. '   ' → logprob: -9.25117301940918
    6. 'for' → logprob: -10.00117301940918
    7. '               ' → logprob: -10.00117301940918
    8. ' ' → logprob: -11.12617301940918
    9. ',' → logprob: -11.12617301940918
    10. '
' → logprob: -11.37617301940918

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017445581033825874
    2. ' for' → logprob: -7.251744747161865
    3. '           ' → logprob: -8.001744270324707
    4. '   ' → logprob: -8.501744270324707
    5. ' if' → logprob: -9.501744270324707
    6. 'for' → logprob: -9.501744270324707
    7. ' ' → logprob: -9.501744270324707
    8. '               ' → logprob: -9.501744270324707
    9. '<|end|>' → logprob: -9.751744270324707
    10. ',' → logprob: -10.251744270324707

Token 230: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13428384065628052
    2. 'for' (adapté à ' for') → logprob: -2.1342837810516357
    3. ' for' → logprob: -5.009284019470215
    4. '   ' → logprob: -7.884284019470215
    5. 'if' → logprob: -8.384284019470215
    6. ' ' → logprob: -11.009284019470215
    7. ' if' → logprob: -11.259284019470215
    8. '	for' → logprob: -12.134284019470215
    9. '           ' → logprob: -12.634284019470215
    10. '  ' → logprob: -12.634284019470215

Token 231: ' x' (ID: 1215)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3903982639312744
    2. 'k' → logprob: -1.1403982639312744
    3. ' v' → logprob: -6.515398025512695
    4. ' j' → logprob: -7.140398025512695
    5. 'v' → logprob: -7.390398025512695
    6. 'j' → logprob: -8.515398025512695
    7. ' i' → logprob: -9.515398025512695
    8. 'i' → logprob: -9.890398025512695
    9. '_k' → logprob: -10.015398025512695
    10. ' l' → logprob: -10.390398025512695

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025319026317447424
    2. 'in' → logprob: -6.002532005310059
    3. ' ' → logprob: -10.627532005310059
    4. 'range' → logprob: -11.377532005310059
    5. '   ' → logprob: -11.502532005310059
    6. 'k' → logprob: -13.127532005310059
    7. ' i' → logprob: -13.377532005310059
    8. 'i' → logprob: -13.752532005310059
    9. '  ' → logprob: -13.752532005310059
    10. 'x' → logprob: -14.127532005310059

Token 233: ' temp' (ID: 5484)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22556237876415253
    2. ' range' → logprob: -1.600562334060669
    3. 'temp' → logprob: -9.10056209564209
    4. ' temp' → logprob: -11.47556209564209
    5. ' ' → logprob: -11.97556209564209
    6. '[' → logprob: -12.10056209564209
    7. 'ran' → logprob: -12.85056209564209
    8. '0' → logprob: -13.60056209564209
    9. 'r' → logprob: -13.78806209564209
    10. 'k' → logprob: -13.78806209564209

Token 234: '_node' (ID: 11390)
  Prédit: '_defined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_defined' → logprob: -0.5833126902580261
    2. '_node' → logprob: -0.8333126902580261
    3. 'defined' → logprob: -5.708312511444092
    4. 'node' → logprob: -6.208312511444092
    5. 'efined' → logprob: -6.833312511444092
    6. 'range' → logprob: -7.833312511444092
    7. '_range' → logprob: -8.83331298828125
    8. 'Defined' → logprob: -9.33331298828125
    9. '   ' → logprob: -10.33331298828125
    10. '_DEFINED' → logprob: -10.33331298828125

Token 235: ':
' (ID: 734)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.3881550431251526
    2. ' in' → logprob: -1.6381549835205078
    3. '[i' → logprob: -2.388154983520508
    4. ':' → logprob: -3.638154983520508
    5. '[' → logprob: -5.638154983520508
    6. '[k' → logprob: -5.763154983520508
    7. 'in' → logprob: -6.638154983520508
    8. ':
' → logprob: -8.013154983520508
    9. ' ' → logprob: -8.513154983520508
    10. '[N' → logprob: -9.388154983520508

Token 236: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04341646656394005
    2. ' if' → logprob: -3.4184165000915527
    3. '       ' → logprob: -4.668416500091553
    4. 'if' → logprob: -8.543416023254395
    5. '   ' → logprob: -9.793416023254395
    6. ' for' → logprob: -10.793416023254395
    7. '               ' → logprob: -10.918416023254395
    8. '	       ' → logprob: -11.043416023254395
    9. '[' → logprob: -12.168416023254395
    10. '	   ' → logprob: -12.793416023254395

Token 237: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3384930491447449
    2. 'if' (adapté à ' if') → logprob: -1.3384931087493896
    3. '           ' → logprob: -3.8384931087493896
    4. '       ' → logprob: -6.0884928703308105
    5. '   ' → logprob: -6.9634928703308105
    6. ' ' → logprob: -9.838493347167969
    7. '               ' → logprob: -10.463493347167969
    8. '	if' → logprob: -10.588493347167969
    9. 'for' → logprob: -10.838493347167969
    10. 'all' → logprob: -11.338493347167969

Token 238: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03370102494955063
    2. ' x' → logprob: -3.408700942993164
    3. ' not' → logprob: -10.408700942993164
    4. 'not' → logprob: -11.283700942993164
    5. 'len' → logprob: -12.033700942993164
    6. '   ' → logprob: -13.158700942993164
    7. ' ' → logprob: -13.283700942993164
    8. ' len' → logprob: -13.783700942993164
    9. '	x' → logprob: -14.408700942993164
    10. '    ' → logprob: -14.783700942993164

Token 239: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.023255961015820503
    2. '[' → logprob: -3.7732560634613037
    3. ' [' → logprob: -12.148256301879883
    4. '[node' → logprob: -14.023256301879883
    5. '[len' → logprob: -14.398256301879883
    6. '[V' → logprob: -14.523256301879883
    7. ' ' → logprob: -14.898256301879883
    8. '[x' → logprob: -14.898256301879883
    9. '[
' → logprob: -15.273256301879883
    10. '[-' → logprob: -15.273256301879883

Token 240: 'ODE' (ID: 5715)
  Prédit: 'ODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ODE' → logprob: -0.00010187433508690447
    2. 'DEFINED' → logprob: -9.500102043151855
    3. 'NODE' → logprob: -10.625102043151855
    4. '1' → logprob: -14.125102043151855
    5. 'O' → logprob: -14.375102043151855
    6. '0' → logprob: -14.500102043151855
    7. 'ode' → logprob: -15.500102043151855
    8. 'OE' → logprob: -16.25010108947754
    9. 'ODES' → logprob: -16.37510108947754
    10. 'CODE' → logprob: -16.37510108947754

Token 241: '_DEFINED' (ID: 160478)
  Prédit: 'DEFINED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEFINED' → logprob: -0.011049704626202583
    2. '_DEFINED' → logprob: -4.511049747467041
    3. '
' → logprob: -14.011049270629883
    4. 'defined' → logprob: -14.636049270629883
    5. '```' → logprob: -15.636049270629883
    6. '_defined' → logprob: -16.136049270629883
    7. '[' → logprob: -16.386049270629883
    8. '   ' → logprob: -17.261049270629883
    9. 'Defined' → logprob: -17.261049270629883
    10. 'DEFINE' → logprob: -17.886049270629883

Token 242: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029926588758826256
    2. ']==' → logprob: -3.5299265384674072
    3. '==' → logprob: -9.029926300048828
    4. ' ==' → logprob: -10.279926300048828
    5. ' ]' → logprob: -10.904926300048828
    6. ']]' → logprob: -14.279926300048828
    7. '']==' → logprob: -14.654926300048828
    8. '']' → logprob: -14.654926300048828
    9. '[' → logprob: -14.904926300048828
    10. '   ' → logprob: -15.154926300048828

Token 243: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20153243839740753
    2. ' ==' → logprob: -1.7015324831008911
    3. ']==' → logprob: -9.201532363891602
    4. '[' → logprob: -12.576532363891602
    5. ')==' → logprob: -12.951532363891602
    6. '!=' → logprob: -13.076532363891602
    7. ' ' → logprob: -13.326532363891602
    8. ']' → logprob: -13.576532363891602
    9. '=' → logprob: -13.826532363891602
    10. ' !=' → logprob: -13.951532363891602

Token 244: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023262368515133858
    2. ' ' → logprob: -3.7732622623443604
    3. '   ' → logprob: -11.398262023925781
    4. 'False' → logprob: -13.585762023925781
    5. '  ' → logprob: -14.023262023925781
    6. '
' → logprob: -14.273262023925781
    7. '	' → logprob: -14.773262023925781
    8. '    ' → logprob: -14.898262023925781
    9. '     ' → logprob: -15.460762023925781
    10. '1' → logprob: -15.460762023925781

Token 245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029767030850052834
    2. ' ' → logprob: -3.5297670364379883
    3. '   ' → logprob: -11.529767036437988
    4. 'False' → logprob: -12.967267036437988
    5. '  ' → logprob: -14.217267036437988
    6. '1' → logprob: -14.342267036437988
    7. '
' → logprob: -14.529767036437988
    8. '    ' → logprob: -15.217267036437988
    9. ' False' → logprob: -15.342267036437988
    10. '	' → logprob: -15.467267036437988

Token 246: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.174517273902893
    2. ':
' → logprob: -1.174517273902893
    3. '           ' → logprob: -1.424517273902893
    4. ':' → logprob: -2.1745171546936035
    5. 'and' → logprob: -3.9245171546936035
    6. '               ' → logprob: -5.0495171546936035
    7. ' or' → logprob: -6.7995171546936035
    8. '       ' → logprob: -8.674517631530762
    9. ',' → logprob: -9.799517631530762
    10. ':return' → logprob: -10.049517631530762

Token 247: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20974889397621155
    2. '           ' → logprob: -2.3347489833831787
    3. 'all' → logprob: -2.9597489833831787
    4. ' all' → logprob: -3.3347489833831787
    5. ' and' → logprob: -5.7097487449646
    6. 'and' → logprob: -7.3347487449646
    7. ':
' → logprob: -8.334749221801758
    8. '(all' → logprob: -8.584749221801758
    9. '                   ' → logprob: -9.084749221801758
    10. ':' → logprob: -9.459749221801758

Token 248: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.09643227607011795
    2. 'all' (adapté à ' all') → logprob: -2.4714322090148926
    3. '               ' → logprob: -5.346432209014893
    4. '           ' → logprob: -6.221432209014893
    5. '                   ' → logprob: -7.346432209014893
    6. '   ' → logprob: -10.72143268585205
    7. '	all' → logprob: -10.72143268585205
    8. '       ' → logprob: -12.09643268585205
    9. ' ' → logprob: -12.22143268585205
    10. '                       ' → logprob: -12.72143268585205

Token 249: '_defined' (ID: 144806)
  Prédit: '_defined'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_defined' → logprob: -0.0007338665891438723
    2. ' =' → logprob: -7.875733852386475
    3. 'defined' → logprob: -8.250734329223633
    4. '_DEFINED' → logprob: -9.875734329223633
    5. 'Defined' → logprob: -11.625734329223633
    6. '=' → logprob: -11.875734329223633
    7. ' Defined' → logprob: -12.000734329223633
    8. ' defined' → logprob: -12.250734329223633
    9. '=False' → logprob: -12.750734329223633
    10. 'efined' → logprob: -12.875734329223633

Token 250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06229536235332489
    2. ' =' → logprob: -2.812295436859131
    3. '=False' → logprob: -8.062294960021973
    4. '==' → logprob: -12.187294960021973
    5. '=
' → logprob: -12.437294960021973
    6. '=True' → logprob: -13.312294960021973
    7. ':' → logprob: -14.937294960021973
    8. 'and' → logprob: -15.187294960021973
    9. ',' → logprob: -15.687294960021973
    10. ' and' → logprob: -15.812294960021973

Token 251: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019286326132714748
    2. ' False' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.751928329467773
    4. 'True' → logprob: -18.001928329467773
    5. '(False' → logprob: -18.251928329467773
    6. '=False' → logprob: -19.501928329467773
    7. 'false' → logprob: -20.126928329467773
    8. '
' → logprob: -20.251928329467773
    9. '0' → logprob: -20.376928329467773
    10. ' ' → logprob: -21.001928329467773

Token 252: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027090576477348804
    2. '           ' → logprob: -7.127708911895752
    3. '<|end|>' → logprob: -7.502708911895752
    4. '       ' → logprob: -7.752708911895752
    5. ' and' → logprob: -7.752708911895752
    6. '                   ' → logprob: -8.50270938873291
    7. '
' → logprob: -9.37770938873291
    8. ',' → logprob: -9.62770938873291
    9. '                       ' → logprob: -10.75270938873291
    10. '   ' → logprob: -11.12770938873291

Token 253: '       ' (ID: 309)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029872094746679068
    2. '           ' → logprob: -7.002987384796143
    3. '       ' → logprob: -7.127987384796143
    4. '<|end|>' → logprob: -7.252987384796143
    5. ' and' → logprob: -8.627986907958984
    6. ' if' → logprob: -8.877986907958984
    7. ',' → logprob: -9.752986907958984
    8. '                   ' → logprob: -9.752986907958984
    9. '   ' → logprob: -10.877986907958984
    10. '		       ' → logprob: -10.877986907958984

Token 254: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04620124772191048
    2. ' if' → logprob: -3.296201229095459
    3. '           ' → logprob: -5.421201229095459
    4. '   ' → logprob: -7.046201229095459
    5. ' ' → logprob: -7.421201229095459
    6. '	' → logprob: -7.546201229095459
    7. 'if' (adapté à ' if') → logprob: -7.546201229095459
    8. '               ' → logprob: -8.421201705932617
    9. ' ' → logprob: -8.921201705932617
    10. ',' → logprob: -9.296201705932617

Token 255: ' all' (ID: 722)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12392313033342361
    2. ' all' → logprob: -2.2489230632781982
    3. ' not' → logprob: -5.123923301696777
    4. 'i' → logprob: -5.748923301696777
    5. ' ' → logprob: -7.123923301696777
    6. 'all' → logprob: -7.748923301696777
    7. '(i' → logprob: -8.498923301696777
    8. '   ' → logprob: -9.498923301696777
    9. ' (' → logprob: -9.748923301696777
    10. ' distance' → logprob: -9.936423301696777

Token 256: '_defined' (ID: 144806)
  Prédit: '_defined'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_defined' → logprob: -0.00044151677866466343
    2. 'defined' → logprob: -7.750441551208496
    3. '_DEFINED' → logprob: -12.375441551208496
    4. 'i' → logprob: -13.250441551208496
    5. 'not' → logprob: -13.750441551208496
    6. '_not' → logprob: -14.000441551208496
    7. 'Defined' → logprob: -14.000441551208496
    8. 'DEFINED' → logprob: -14.625441551208496
    9. '_define' → logprob: -15.000441551208496
    10. '_decl' → logprob: -15.750441551208496

Token 257: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.506890594959259
    2. ' ==' → logprob: -2.0068905353546143
    3. '==' → logprob: -2.1318905353546143
    4. ':
' → logprob: -2.8818905353546143
    5. ' or' → logprob: -3.1318905353546143
    6. '       ' → logprob: -3.5068905353546143
    7. '           ' → logprob: -4.506890773773193
    8. ' and' → logprob: -6.381890773773193
    9. '   ' → logprob: -7.006890773773193
    10. ' is' → logprob: -7.506890773773193

Token 258: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.282570481300354
    2. ' i' → logprob: -1.407570481300354
    3. '   ' → logprob: -7.2825703620910645
    4. '       ' → logprob: -8.532570838928223
    5. ' not' → logprob: -8.657570838928223
    6. '(i' → logprob: -9.157570838928223
    7. 'temp' → logprob: -10.282570838928223
    8. 'not' → logprob: -10.407570838928223
    9. ' temp' → logprob: -10.532570838928223
    10. '    ' → logprob: -10.532570838928223

Token 259: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.011682508513331413
    2. 'is' → logprob: -4.511682510375977
    3. '==' → logprob: -7.636682510375977
    4. ' ==' → logprob: -8.886682510375977
    5. ' None' → logprob: -11.886682510375977
    6. 'None' → logprob: -12.136682510375977
    7. ' ' → logprob: -14.261682510375977
    8. '[' → logprob: -15.136682510375977
    9. '	is' → logprob: -15.386682510375977
    10. '===' → logprob: -16.011682510375977

Token 260: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.16024920344352722
    2. ' None' → logprob: -1.9102492332458496
    3. 'not' → logprob: -10.910248756408691
    4. ' not' → logprob: -12.035248756408691
    5. '_None' → logprob: -14.785248756408691
    6. '=None' → logprob: -15.785248756408691
    7. ' ' → logprob: -15.785248756408691
    8. '(None' → logprob: -16.285249710083008
    9. 'none' → logprob: -16.410249710083008
    10. '_none' → logprob: -17.785249710083008

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08962105959653854
    2. ':
' → logprob: -2.714621067047119
    3. '           ' → logprob: -3.964621067047119
    4. '       ' → logprob: -8.089620590209961
    5. ' or' → logprob: -8.589620590209961
    6. '   ' → logprob: -11.464620590209961
    7. ':
' → logprob: -12.464620590209961
    8. '               ' → logprob: -13.089620590209961
    9. ' :' → logprob: -13.589620590209961
    10. ',' → logprob: -13.714620590209961

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016357855638489127
    2. '       ' → logprob: -6.501635551452637
    3. ' break' → logprob: -9.751635551452637
    4. '               ' → logprob: -10.501635551452637
    5. '   ' → logprob: -10.751635551452637
    6. '		' → logprob: -12.001635551452637
    7. ':
' → logprob: -12.501635551452637
    8. '
' → logprob: -12.751635551452637
    9. ':' → logprob: -13.001635551452637
    10. 'break' → logprob: -13.376635551452637

Token 263: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26228004693984985
    2. '       ' → logprob: -1.637279987335205
    3. ' break' → logprob: -3.512279987335205
    4. 'break' (adapté à ' break') → logprob: -5.512279987335205
    5. '   ' → logprob: -6.387279987335205
    6. '               ' → logprob: -8.012280464172363
    7. '	break' → logprob: -8.887280464172363
    8. '
' → logprob: -9.887280464172363
    9. ' ' → logprob: -10.012280464172363
    10. '		' → logprob: -10.387280464172363

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2317858189344406
    2. '        
' → logprob: -2.731785774230957
    3. '   ' → logprob: -3.731785774230957
    4. '        ' → logprob: -3.856785774230957
    5. '    ' → logprob: -4.356785774230957
    6. ' ' → logprob: -4.356785774230957
    7. '
' → logprob: -4.356785774230957
    8. '<|end|>' → logprob: -4.356785774230957
    9. '    
' → logprob: -4.606785774230957
    10. ' 
' → logprob: -5.106785774230957

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12311260402202606
    2. '   ' → logprob: -2.623112678527832
    3. ' for' → logprob: -4.123112678527832
    4. '        
' → logprob: -5.123112678527832
    5. ' if' → logprob: -5.373112678527832
    6. '
' → logprob: -5.373112678527832
    7. '    
' → logprob: -6.248112678527832
    8. '           ' → logprob: -6.748112678527832
    9. '            
' → logprob: -6.998112678527832
    10. 'for' → logprob: -6.998112678527832

Token 266: ' temp' (ID: 5484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1698927879333496
    2. 'temp' (adapté à ' temp') → logprob: -1.4198927879333496
    3. ' temp' → logprob: -1.6698927879333496
    4. '   ' → logprob: -1.6698927879333496
    5. ' for' → logprob: -3.6698927879333496
    6. ' i' → logprob: -4.16989278793335
    7. 'i' → logprob: -4.29489278793335
    8. 'for' → logprob: -5.66989278793335
    9. 'distance' → logprob: -6.29489278793335
    10. ' distance' → logprob: -6.41989278793335

Token 267: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.3596853831550106e-05
    2. '_token' → logprob: -10.250053405761719
    3. '   ' → logprob: -12.875053405761719
    4. '_' → logprob: -13.000053405761719
    5. '_code' → logprob: -13.125053405761719
    6. '_i' → logprob: -13.125053405761719
    7. 'node' → logprob: -13.375053405761719
    8. '[node' → logprob: -13.500053405761719
    9. '_index' → logprob: -13.875053405761719
    10. 'Node' → logprob: -14.250053405761719

Token 268: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003931287210434675
    2. '[' → logprob: -5.628931522369385
    3. '[temp' → logprob: -8.878931045532227
    4. '[N' → logprob: -9.253931045532227
    5. '[I' → logprob: -10.628931045532227
    6. ' [' → logprob: -11.753931045532227
    7. '[next' → logprob: -11.878931045532227
    8. '[t' → logprob: -11.878931045532227
    9. '[ind' → logprob: -12.628931045532227
    10. '[s' → logprob: -13.003931045532227

Token 269: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14289569854736328
    2. '[N' → logprob: -2.0178956985473633
    3. ' ][' → logprob: -8.892895698547363
    4. '[' → logprob: -9.892895698547363
    5. ')[' → logprob: -11.517895698547363
    6. '   ' → logprob: -11.892895698547363
    7. '>[' → logprob: -12.892895698547363
    8. '
' → logprob: -13.017895698547363
    9. '}[' → logprob: -13.267895698547363
    10. ']' → logprob: -13.767895698547363

Token 270: 'NODE' (ID: 105718)
  Prédit: 'NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NODE' → logprob: -1.0921942703134846e-05
    2. '
' → logprob: -12.37501049041748
    3. '1' → logprob: -12.50001049041748
    4. '[N' → logprob: -13.25001049041748
    5. ' NODE' → logprob: -14.12501049041748
    6. '[' → logprob: -15.50001049041748
    7. '0' → logprob: -16.125011444091797
    8. '   ' → logprob: -16.500011444091797
    9. '_NODE' → logprob: -17.125011444091797
    10. '.NODE' → logprob: -17.125011444091797

Token 271: '_DEFINED' (ID: 160478)
  Prédit: 'DEFINED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEFINED' → logprob: -0.0071516335010528564
    2. '_DEFINED' → logprob: -5.1321516036987305
    3. 'CH' → logprob: -6.8821516036987305
    4. 'C' → logprob: -8.75715160369873
    5. '_COST' → logprob: -11.13215160369873
    6. 'defined' → logprob: -12.38215160369873
    7. '```' → logprob: -12.63215160369873
    8. 'DEFINE' → logprob: -13.00715160369873
    9. '_defined' → logprob: -13.13215160369873
    10. '[' → logprob: -13.13215160369873

Token 272: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026224244385957718
    2. '=' → logprob: -3.901224136352539
    3. ']=' → logprob: -5.526224136352539
    4. ' =' → logprob: -6.526224136352539
    5. ' ]' → logprob: -8.526224136352539
    6. ']+=' → logprob: -11.026224136352539
    7. ')' → logprob: -13.276224136352539
    8. ']==' → logprob: -13.776224136352539
    9. '+=' → logprob: -14.651224136352539
    10. ' +=' → logprob: -14.776224136352539

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006716079078614712
    2. ' =' → logprob: -5.006716251373291
    3. '+=' → logprob: -15.256715774536133
    4. ']' → logprob: -15.381715774536133
    5. ']=' → logprob: -15.506715774536133
    6. '＝' → logprob: -17.131715774536133
    7. '=True' → logprob: -17.381715774536133
    8. ' +=' → logprob: -17.631715774536133
    9. ',' → logprob: -17.756715774536133
    10. ' ' → logprob: -17.881715774536133

Token 274: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031932818237692118
    2. ' ' → logprob: -5.753193378448486
    3. '   ' → logprob: -11.878192901611328
    4. 'True' → logprob: -12.003192901611328
    5. ' True' → logprob: -13.503192901611328
    6. '  ' → logprob: -14.503192901611328
    7. '       ' → logprob: -15.753192901611328
    8. '    ' → logprob: -16.315692901611328
    9. '-' → logprob: -16.628192901611328
    10. '2' → logprob: -17.253192901611328

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.347765181795694e-05
    2. ' ' → logprob: -10.000053405761719
    3. 'True' → logprob: -12.000053405761719
    4. '   ' → logprob: -13.750053405761719
    5. '  ' → logprob: -15.437553405761719
    6. ' True' → logprob: -15.937553405761719
    7. '-' → logprob: -16.25005340576172
    8. '
' → logprob: -16.31255340576172
    9. '2' → logprob: -17.06255340576172
    10. 'true' → logprob: -17.12505340576172

Token 276: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7791198492050171
    2. '<|end|>' → logprob: -0.9041198492050171
    3. '   ' → logprob: -2.7791199684143066
    4. '       ' → logprob: -3.1541199684143066
    5. ' 
' → logprob: -4.654119968414307
    6. '  
' → logprob: -4.904119968414307
    7. ' ' → logprob: -5.404119968414307
    8. '    
' → logprob: -5.779119968414307
    9. '<|end|>' → logprob: -6.404119968414307
    10. '        
' → logprob: -6.404119968414307

Token 278: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0031304247677326202
    2. '   ' → logprob: -6.6281304359436035
    3. ' for' → logprob: -6.6281304359436035
    4. '       ' → logprob: -8.128129959106445
    5. 'cost' → logprob: -9.253129959106445
    6. 'min' → logprob: -11.003129959106445
    7. 'i' → logprob: -11.253129959106445
    8. 'if' → logprob: -11.503129959106445
    9. '	for' → logprob: -11.503129959106445
    10. 'neighbors' → logprob: -11.753129959106445

Token 279: ' edge' (ID: 11165)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5169821381568909
    2. 'k' → logprob: -2.016982078552246
    3. ' j' → logprob: -2.391982078552246
    4. 'v' → logprob: -2.641982078552246
    5. 'w' → logprob: -3.266982078552246
    6. ' v' → logprob: -4.016982078552246
    7. ' k' → logprob: -4.516982078552246
    8. 'n' → logprob: -4.641982078552246
    9. ' w' → logprob: -5.016982078552246
    10. 'u' → logprob: -5.516982078552246

Token 280: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010652788914740086
    2. 'in' → logprob: -4.635653018951416
    3. ' ' → logprob: -7.635653018951416
    4. '[' → logprob: -8.760652542114258
    5. '_idx' → logprob: -10.135652542114258
    6. 's' → logprob: -10.385652542114258
    7. ' ,' → logprob: -10.510652542114258
    8. ',' → logprob: -10.635652542114258
    9. 'v' → logprob: -10.760652542114258
    10. '_' → logprob: -11.135652542114258

Token 281: ' temp' (ID: 5484)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.39316415786743164
    2. 'route' → logprob: -1.3931641578674316
    3. ' es' → logprob: -3.3931641578674316
    4. ' route' → logprob: -4.018164157867432
    5. 'graph' → logprob: -4.643164157867432
    6. 'range' → logprob: -4.893164157867432
    7. 'temp' → logprob: -5.768164157867432
    8. ' graph' → logprob: -6.143164157867432
    9. ' temp' → logprob: -7.393164157867432
    10. ' range' → logprob: -8.143163681030273

Token 282: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0014679614687338471
    2. 'ode' → logprob: -7.751468181610107
    3. '[node' → logprob: -8.00146770477295
    4. 'node' → logprob: -8.62646770477295
    5. '[temp' → logprob: -9.37646770477295
    6. '[' → logprob: -9.50146770477295
    7. 'es' → logprob: -9.87646770477295
    8. 'o' → logprob: -10.25146770477295
    9. '_route' → logprob: -10.25146770477295
    10. '[i' → logprob: -10.62646770477295

Token 283: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0445127372804563e-05
    2. 'i' → logprob: -12.25001049041748
    3. '[' → logprob: -12.62501049041748
    4. 's' → logprob: -14.62501049041748
    5. ' [' → logprob: -14.62501049041748
    6. '[I' → logprob: -15.12501049041748
    7. '[temp' → logprob: -15.62501049041748
    8. '[node' → logprob: -15.87501049041748
    9. '[s' → logprob: -16.250009536743164
    10. '[V' → logprob: -16.625009536743164

Token 284: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09280914813280106
    2. '[N' → logprob: -3.2178092002868652
    3. ']:' → logprob: -3.5928092002868652
    4. '[' → logprob: -4.842809200286865
    5. '[i' → logprob: -4.842809200286865
    6. ']:
' → logprob: -5.467809200286865
    7. ' ][' → logprob: -8.592808723449707
    8. '[node' → logprob: -9.092808723449707
    9. '   ' → logprob: -9.342808723449707
    10. ':' → logprob: -9.467808723449707

Token 285: 'NODE' (ID: 105718)
  Prédit: 'NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NODE' → logprob: -0.0023218912538141012
    2. 'RO' → logprob: -6.252321720123291
    3. '0' → logprob: -7.877321720123291
    4. '[N' → logprob: -11.62732219696045
    5. 'N' → logprob: -13.12732219696045
    6. ' NODE' → logprob: -14.12732219696045
    7. '
' → logprob: -14.50232219696045
    8. 'route' → logprob: -15.12732219696045
    9. '.NODE' → logprob: -15.25232219696045
    10. '1' → logprob: -15.25232219696045

Token 286: '_ROUTE' (ID: 145536)
  Prédit: '_ROUTE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ROUTE' → logprob: -0.001177608733996749
    2. 'RO' → logprob: -7.126177787780762
    3. '[' → logprob: -8.376177787780762
    4. '_RO' → logprob: -10.001177787780762
    5. '_ROUT' → logprob: -10.001177787780762
    6. 'route' → logprob: -11.876177787780762
    7. '<Route' → logprob: -12.001177787780762
    8. '   ' → logprob: -12.126177787780762
    9. '	Route' → logprob: -12.751177787780762
    10. '_CH' → logprob: -12.876177787780762

Token 287: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.07573287934064865
    2. ']:
' → logprob: -2.700732946395874
    3. '][' → logprob: -5.450732707977295
    4. '[' → logprob: -7.575732707977295
    5. ']:
' → logprob: -7.575732707977295
    6. ']:

' → logprob: -9.200733184814453
    7. '[N' → logprob: -9.700733184814453
    8. '][:' → logprob: -10.075733184814453
    9. '   ' → logprob: -10.200733184814453
    10. ']' → logprob: -10.200733184814453

Token 288: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08084092289209366
    2. '       ' → logprob: -3.080840826034546
    3. ':' → logprob: -3.955840826034546
    4. '[' → logprob: -4.955841064453125
    5. ',' → logprob: -6.455841064453125
    6. ':
' → logprob: -6.955841064453125
    7. '<|end|>' → logprob: -7.455841064453125
    8. '   ' → logprob: -7.705841064453125
    9. ' if' → logprob: -8.330841064453125
    10. '	       ' → logprob: -8.455841064453125

Token 289: ' to' (ID: 316)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9782528877258301
    2. 'if' → logprob: -1.10325288772583
    3. ' if' → logprob: -2.35325288772583
    4. ' v' → logprob: -3.10325288772583
    5. 'to' (adapté à ' to') → logprob: -3.22825288772583
    6. '   ' → logprob: -3.85325288772583
    7. 'node' → logprob: -3.97825288772583
    8. 'j' → logprob: -4.35325288772583
    9. '       ' → logprob: -4.85325288772583
    10. 'u' → logprob: -5.22825288772583

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01320105604827404
    2. '=' → logprob: -4.5132012367248535
    3. ',' → logprob: -6.2632012367248535
    4. ' ,' → logprob: -9.888200759887695
    5. ' ' → logprob: -10.138200759887695
    6. '_idx' → logprob: -10.263200759887695
    7. '   ' → logprob: -10.388200759887695
    8. '[' → logprob: -10.763200759887695
    9. '    ' → logprob: -11.138200759887695
    10. '_' → logprob: -11.138200759887695

Token 291: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.008646479807794094
    2. ' edge' → logprob: -4.758646488189697
    3. '   ' → logprob: -11.258646011352539
    4. 'int' → logprob: -12.383646011352539
    5. '(edge' → logprob: -12.508646011352539
    6. ' ' → logprob: -13.383646011352539
    7. '=edge' → logprob: -13.508646011352539
    8. 'temp' → logprob: -13.508646011352539
    9. '  ' → logprob: -13.883646011352539
    10. 'es' → logprob: -14.008646011352539

Token 292: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004164913552813232
    2. ' [' → logprob: -9.00041675567627
    3. ' =' → logprob: -9.12541675567627
    4. '[N' → logprob: -9.37541675567627
    5. ' ' → logprob: -10.87541675567627
    6. '=' → logprob: -11.37541675567627
    7. '<|end|>' → logprob: -11.37541675567627
    8. ' ,' → logprob: -11.50041675567627
    9. ',' → logprob: -11.50041675567627
    10. '<|end|>' → logprob: -11.62541675567627

Token 293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28216224908828735
    2. '1' → logprob: -1.6571621894836426
    3. ' ' → logprob: -2.9071621894836426
    4. '   ' → logprob: -8.9071626663208
    5. '[' → logprob: -8.9071626663208
    6. 'NODE' → logprob: -9.1571626663208
    7. ' NODE' → logprob: -10.7821626663208
    8. '  ' → logprob: -11.2196626663208
    9. '2' → logprob: -11.2821626663208
    10. '    ' → logprob: -11.3446626663208

Token 294: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.64378821849823
    2. ']' → logprob: -0.76878821849823
    3. ',' → logprob: -5.5187883377075195
    4. '           ' → logprob: -5.6437883377075195
    5. ' ]' → logprob: -6.5187883377075195
    6. ' ]
' → logprob: -7.3937883377075195
    7. '       ' → logprob: -7.8937883377075195
    8. '],' → logprob: -8.39378833770752
    9. '][' → logprob: -9.14378833770752
    10. '<|end|>' → logprob: -9.39378833770752

Token 295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09539772570133209
    2. ' if' → logprob: -2.470397710800171
    3. 'if' → logprob: -5.59539794921875
    4. ',' → logprob: -6.84539794921875
    5. '		' → logprob: -7.59539794921875
    6. '            
' → logprob: -8.34539794921875
    7. '	       ' → logprob: -8.34539794921875
    8. '               ' → logprob: -9.22039794921875
    9. '
' → logprob: -9.22039794921875
    10. '       ' → logprob: -9.34539794921875

Token 296: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.598926842212677
    2. 'if' → logprob: -0.848926842212677
    3. 'new' → logprob: -3.9739267826080322
    4. 'to' → logprob: -7.723927021026611
    5. ' if' → logprob: -7.723927021026611
    6. 'c' → logprob: -8.223926544189453
    7. 'weight' → logprob: -8.223926544189453
    8. ' cost' → logprob: -8.473926544189453
    9. 'nc' → logprob: -8.473926544189453
    10. '           ' → logprob: -8.473926544189453

Token 297: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023411434143781662
    2. '=' → logprob: -3.773411512374878
    3. ',' → logprob: -8.898411750793457
    4. ' ' → logprob: -11.273411750793457
    5. '   ' → logprob: -12.773411750793457
    6. '    ' → logprob: -12.898411750793457
    7. '  ' → logprob: -13.898411750793457
    8. ' +' → logprob: -14.023411750793457
    9. ' ' → logprob: -14.023411750793457
    10. '	' → logprob: -14.148411750793457

Token 298: ' temp' (ID: 5484)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.21805121004581451
    2. 'temp' → logprob: -1.8430511951446533
    3. ' edge' → logprob: -3.4680511951446533
    4. ' temp' → logprob: -5.093051433563232
    5. ' ' → logprob: -10.093050956726074
    6. 'copy' → logprob: -10.093050956726074
    7. '   ' → logprob: -10.218050956726074
    8. 'cost' → logprob: -10.468050956726074
    9. '(edge' → logprob: -10.968050956726074
    10. 'int' → logprob: -11.280550956726074

Token 299: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.4319547116756439
    2. '_token' → logprob: -1.4319547414779663
    3. '_edge' → logprob: -2.3069546222686768
    4. '[' → logprob: -5.181954860687256
    5. '           ' → logprob: -6.306954860687256
    6. '_cost' → logprob: -7.056954860687256
    7. ' +' → logprob: -7.181954860687256
    8. ' _' → logprob: -7.181954860687256
    9. '               ' → logprob: -7.806954860687256
    10. ' to' → logprob: -8.306954383850098

Token 300: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006556084263138473
    2. 'i' → logprob: -8.000655174255371
    3. '[to' → logprob: -8.500655174255371
    4. '[' → logprob: -9.125655174255371
    5. '[token' → logprob: -13.000655174255371
    6. ' i' → logprob: -13.750655174255371
    7. 'to' → logprob: -13.875655174255371
    8. '[I' → logprob: -14.250655174255371
    9. '[next' → logprob: -15.250655174255371
    10. '[t' → logprob: -15.375655174255371

Token 301: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0056263236328959465
    2. '[N' → logprob: -5.255626201629639
    3. '[' → logprob: -8.005626678466797
    4. ' ][' → logprob: -10.255626678466797
    5. '   ' → logprob: -11.880626678466797
    6. '"][' → logprob: -12.380626678466797
    7. ''][' → logprob: -12.505626678466797
    8. ']' → logprob: -13.380626678466797
    9. '[C' → logprob: -13.630626678466797
    10. '```' → logprob: -13.880626678466797

Token 302: 'NODE' (ID: 105718)
  Prédit: 'NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NODE' → logprob: -0.00012606535165105015
    2. '[N' → logprob: -9.500125885009766
    3. '
' → logprob: -10.125125885009766
    4. 'cost' → logprob: -12.500125885009766
    5. 'C' → logprob: -13.250125885009766
    6. '2' → logprob: -14.000125885009766
    7. '[' → logprob: -14.125125885009766
    8. '1' → logprob: -14.250125885009766
    9. '
' → logprob: -14.250125885009766
    10. ' NODE' → logprob: -14.375125885009766

Token 303: '_COST' (ID: 168150)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0011227144859731197
    2. '_COST' → logprob: -7.001122951507568
    3. 'CH' → logprob: -8.50112247467041
    4. '[C' → logprob: -12.75112247467041
    5. '_CH' → logprob: -13.00112247467041
    6. '_cost' → logprob: -14.25112247467041
    7. ' COST' → logprob: -14.62612247467041
    8. '_C' → logprob: -15.25112247467041
    9. '2' → logprob: -15.25112247467041
    10. '   ' → logprob: -15.37612247467041

Token 304: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8160843849182129
    2. '+' → logprob: -1.316084384918213
    3. ']' → logprob: -1.441084384918213
    4. ']+' → logprob: -2.941084384918213
    5. ' ]' → logprob: -9.941083908081055
    6. '[' → logprob: -10.066083908081055
    7. '][' → logprob: -10.691083908081055
    8. '+]' → logprob: -10.816083908081055
    9. ' plus' → logprob: -12.191083908081055
    10. ')' → logprob: -12.441083908081055

Token 305: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.251943439245224
    2. ' +' → logprob: -1.5019434690475464
    3. '+
' → logprob: -12.126943588256836
    4. '+[' → logprob: -12.876943588256836
    5. '+i' → logprob: -13.751943588256836
    6. ' +
' → logprob: -13.876943588256836
    7. '＋' → logprob: -13.876943588256836
    8. '+x' → logprob: -14.001943588256836
    9. '[' → logprob: -14.376943588256836
    10. 'if' → logprob: -14.876943588256836

Token 306: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0021250417921692133
    2. ' edge' → logprob: -6.502125263214111
    3. 'es' → logprob: -7.877125263214111
    4. 'int' → logprob: -9.002124786376953
    5. 'route' → logprob: -10.002124786376953
    6. '1' → logprob: -10.627124786376953
    7. '   ' → logprob: -11.627124786376953
    8. 'temp' → logprob: -11.627124786376953
    9. '(edge' → logprob: -12.127124786376953
    10. ' ' → logprob: -12.502124786376953

Token 307: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. ' [' → logprob: -13.875001907348633
    3. '][' → logprob: -15.125001907348633
    4. '[
' → logprob: -15.750001907348633
    5. '```' → logprob: -15.750001907348633
    6. '1' → logprob: -15.875001907348633
    7. '   ' → logprob: -16.500001907348633
    8. 's' → logprob: -17.125001907348633
    9. '[[' → logprob: -17.312501907348633
    10. '	' → logprob: -17.562501907348633

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004350797680672258
    2. '[' → logprob: -7.875434875488281
    3. '2' → logprob: -10.625434875488281
    4. ' ' → logprob: -11.750434875488281
    5. '0' → logprob: -11.812934875488281
    6. '```' → logprob: -13.437934875488281
    7. '
' → logprob: -13.500434875488281
    8. '   ' → logprob: -13.687934875488281
    9. '[N' → logprob: -13.750434875488281
    10. '][' → logprob: -13.875434875488281

Token 309: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02436264045536518
    2. ' if' → logprob: -4.399362564086914
    3. '
' → logprob: -5.774362564086914
    4. '<|end|>' → logprob: -5.899362564086914
    5. '            
' → logprob: -6.399362564086914
    6. '       ' → logprob: -6.774362564086914
    7. 'if' → logprob: -7.649362564086914
    8. ' 
' → logprob: -7.774362564086914
    9. '<|end|>' → logprob: -7.774362564086914
    10. '		' → logprob: -7.899362564086914

Token 311: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32510194182395935
    2. ' if' → logprob: -1.3251019716262817
    3. '           ' → logprob: -4.450101852416992
    4. '       ' → logprob: -9.450101852416992
    5. '   ' → logprob: -12.075101852416992
    6. '            
' → logprob: -13.325101852416992
    7. '	if' → logprob: -13.450101852416992
    8. '               ' → logprob: -13.700101852416992
    9. '[' → logprob: -14.075101852416992
    10. '            ' → logprob: -14.325101852416992

Token 312: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.1978708803653717
    2. ' temp' → logprob: -2.322870969772339
    3. 'cost' → logprob: -3.072870969772339
    4. '(temp' → logprob: -4.07287073135376
    5. ' cost' → logprob: -4.57287073135376
    6. ' (' → logprob: -5.44787073135376
    7. '(cost' → logprob: -5.82287073135376
    8. '(' → logprob: -7.69787073135376
    9. '((' → logprob: -10.072871208190918
    10. ' ' → logprob: -10.697871208190918

Token 313: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0005616117268800735
    2. '_token' → logprob: -7.500561714172363
    3. '_cost' → logprob: -11.875561714172363
    4. '_to' → logprob: -14.375561714172363
    5. '[to' → logprob: -14.500561714172363
    6. '[node' → logprob: -15.750561714172363
    7. '_NODE' → logprob: -16.375560760498047
    8. 'cost' → logprob: -16.500560760498047
    9. 'to' → logprob: -16.750560760498047
    10. '[' → logprob: -16.750560760498047

Token 314: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -8.180258191714529e-06
    2. 'to' → logprob: -12.000008583068848
    3. '[i' → logprob: -13.500008583068848
    4. '[temp' → logprob: -15.750008583068848
    5. ' to' → logprob: -16.12500762939453
    6. '(to' → logprob: -16.62500762939453
    7. '[' → logprob: -16.75000762939453
    8. '   ' → logprob: -17.12500762939453
    9. 'i' → logprob: -17.12500762939453
    10. '[tmp' → logprob: -18.00000762939453

Token 315: '][' (ID: 2696)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.1271550953388214
    2. '][' → logprob: -2.127155065536499
    3. '[' → logprob: -9.127155303955078
    4. '>[' → logprob: -10.502155303955078
    5. ')[' → logprob: -10.502155303955078
    6. '}[' → logprob: -10.752155303955078
    7. '   ' → logprob: -11.752155303955078
    8. ' ][' → logprob: -11.752155303955078
    9. '
' → logprob: -12.127155303955078
    10. '```' → logprob: -12.627155303955078

Token 316: 'NODE' (ID: 105718)
  Prédit: 'NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NODE' → logprob: -6.957014556974173e-05
    2. '[N' → logprob: -9.875069618225098
    3. ' NODE' → logprob: -12.125069618225098
    4. '
' → logprob: -12.125069618225098
    5. '[' → logprob: -13.000069618225098
    6. '   ' → logprob: -14.125069618225098
    7. '2' → logprob: -14.250069618225098
    8. '0' → logprob: -14.375069618225098
    9. '3' → logprob: -14.500069618225098
    10. 'node' → logprob: -14.625069618225098

Token 317: '_COST' (ID: 168150)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001411900855600834
    2. 'CH' → logprob: -7.0014119148254395
    3. '_COST' → logprob: -7.6264119148254395
    4. 'DEFINED' → logprob: -11.376411437988281
    5. '_CH' → logprob: -14.751411437988281
    6. '[C' → logprob: -15.751411437988281
    7. 'cost' → logprob: -15.751411437988281
    8. '_DEFINED' → logprob: -16.00141143798828
    9. ' COST' → logprob: -16.50141143798828
    10. '
' → logprob: -16.50141143798828

Token 318: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5155925750732422
    2. ' ==' → logprob: -1.6405925750732422
    3. ' <' → logprob: -2.265592575073242
    4. '==' → logprob: -2.265592575073242
    5. '==-' → logprob: -6.765592575073242
    6. ' ' → logprob: -9.265592575073242
    7. ' is' → logprob: -9.390592575073242
    8. '[' → logprob: -10.265592575073242
    9. ')' → logprob: -10.515592575073242
    10. ']' → logprob: -11.390592575073242

Token 319: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.211622416973114
    2. '==' → logprob: -1.8366224765777588
    3. ' ==' → logprob: -3.836622476577759
    4. ' <' → logprob: -5.21162223815918
    5. '==-' → logprob: -5.46162223815918
    6. '[' → logprob: -9.71162223815918
    7. ' is' → logprob: -11.21162223815918
    8. ' ' → logprob: -11.83662223815918
    9. '>' → logprob: -12.33662223815918
    10. 'is' → logprob: -12.46162223815918

Token 320: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015078396536409855
    2. ' ' → logprob: -6.501507759094238
    3. '   ' → logprob: -12.626507759094238
    4. '  ' → logprob: -13.501507759094238
    5. '    ' → logprob: -15.689007759094238
    6. ' ' → logprob: -15.939007759094238
    7. '```' → logprob: -16.189008712768555
    8. '	' → logprob: -16.376508712768555
    9. '       ' → logprob: -16.939008712768555
    10. '1' → logprob: -17.001508712768555

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.000085830688477
    4. '  ' → logprob: -16.250085830688477
    5. '	' → logprob: -17.812585830688477
    6. '1' → logprob: -17.812585830688477
    7. 'or' → logprob: -17.875085830688477
    8. '```' → logprob: -17.875085830688477
    9. ' ' → logprob: -18.062585830688477
    10. '۰' → logprob: -18.375085830688477

Token 322: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00019030878320336342
    2. 'or' → logprob: -8.625190734863281
    3. '            ' → logprob: -12.750190734863281
    4. '               ' → logprob: -12.875190734863281
    5. '	or' → logprob: -13.125190734863281
    6. '           ' → logprob: -13.750190734863281
    7. ' ' → logprob: -13.750190734863281
    8. '                ' → logprob: -14.750190734863281
    9. ' and' → logprob: -16.12519073486328
    10. '                   ' → logprob: -16.25019073486328

Token 323: '               ' (ID: 506)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0007752045057713985
    2. 'or' → logprob: -8.000775337219238
    3. '               ' → logprob: -8.250775337219238
    4. '           ' → logprob: -8.750775337219238
    5. '            ' → logprob: -11.625775337219238
    6. '              ' → logprob: -12.750775337219238
    7. '	or' → logprob: -12.875775337219238
    8. '                ' → logprob: -13.125775337219238
    9. ' ' → logprob: -13.875775337219238
    10. '                   ' → logprob: -14.250775337219238

Token 324: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.4813271164894104
    2. ' temp' → logprob: -1.1063270568847656
    3. '               ' → logprob: -3.1063270568847656
    4. '                   ' → logprob: -5.106327056884766
    5. '           ' → logprob: -8.481327056884766
    6. '                       ' → logprob: -9.231327056884766
    7. '                ' → logprob: -10.356327056884766
    8. '[temp' → logprob: -10.731327056884766
    9. '	temp' → logprob: -10.981327056884766
    10. '   ' → logprob: -11.106327056884766

Token 325: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.165027217415627e-05
    2. '_token' → logprob: -10.750021934509277
    3. 'node' → logprob: -16.12502098083496
    4. '[node' → logprob: -17.75002098083496
    5. '_NODE' → logprob: -18.12502098083496
    6. '_' → logprob: -18.50002098083496
    7. 'Node' → logprob: -18.50002098083496
    8. '_cost' → logprob: -19.12502098083496
    9. '```' → logprob: -19.12502098083496
    10. '_code' → logprob: -20.00002098083496

Token 326: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -2.339278580620885e-06
    2. 'to' → logprob: -13.625001907348633
    3. '[token' → logprob: -14.625001907348633
    4. '[' → logprob: -15.250001907348633
    5. '][' → logprob: -15.500001907348633
    6. ')[' → logprob: -16.500001907348633
    7. '[temp' → logprob: -16.875001907348633
    8. '   ' → logprob: -17.750001907348633
    9. '(to' → logprob: -17.750001907348633
    10. '```' → logprob: -17.875001907348633

Token 327: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00437897490337491
    2. '[N' → logprob: -5.629378795623779
    3. '[' → logprob: -7.254378795623779
    4. ')[' → logprob: -10.629379272460938
    5. ' ][' → logprob: -11.254379272460938
    6. '>[' → logprob: -11.504379272460938
    7. ']' → logprob: -11.504379272460938
    8. '}[' → logprob: -12.754379272460938
    9. '```' → logprob: -13.004379272460938
    10. '[][' → logprob: -13.004379272460938

Token 328: 'NODE' (ID: 105718)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.05190937966108322
    2. 'C' → logprob: -3.9269094467163086
    3. 'NODE' → logprob: -3.9269094467163086
    4. ' cost' → logprob: -4.801909446716309
    5. '=' → logprob: -6.926909446716309
    6. '0' → logprob: -6.926909446716309
    7. 'TOKEN' → logprob: -8.551909446716309
    8. '[N' → logprob: -8.801909446716309
    9. '_cost' → logprob: -9.176909446716309
    10. '[' → logprob: -9.176909446716309

Token 329: '_COST' (ID: 168150)
  Prédit: '[C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[C' → logprob: -0.7973648905754089
    2. '[' → logprob: -0.9223648905754089
    3. 'C' → logprob: -2.6723649501800537
    4. '_COST' → logprob: -3.0473649501800537
    5. '[N' → logprob: -4.422364711761475
    6. 'cost' → logprob: -4.547364711761475
    7. '_cost' → logprob: -4.672364711761475
    8. '][' → logprob: -6.922364711761475
    9. '   ' → logprob: -7.422364711761475
    10. '	C' → logprob: -7.672364711761475

Token 330: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141568779945374
    2. '=' → logprob: -1.7014156579971313
    3. ' ' → logprob: -13.201416015625
    4. ')' → logprob: -15.201416015625
    5. '<|end|>' → logprob: -16.451416015625
    6. ',' → logprob: -16.951416015625
    7. '=cut' → logprob: -17.076416015625
    8. ']' → logprob: -17.076416015625
    9. ' =
' → logprob: -17.326416015625
    10. '   ' → logprob: -17.951416015625

Token 331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. '＝' → logprob: -17.251928329467773
    4. ' ' → logprob: -17.876928329467773
    5. '=
' → logprob: -20.001928329467773
    6. '=cut' → logprob: -20.126928329467773
    7. '.=' → logprob: -20.251928329467773
    8. ',' → logprob: -20.376928329467773
    9. '=

' → logprob: -20.376928329467773
    10. '==' → logprob: -20.626928329467773

Token 332: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.16022463142871857
    2. ' cost' → logprob: -1.9102246761322021
    3. '(cost' → logprob: -15.035224914550781
    4. 'Cost' → logprob: -17.03522491455078
    5. '_cost' → logprob: -17.66022491455078
    6. ' ' → logprob: -18.16022491455078
    7. 'code' → logprob: -18.53522491455078
    8. ' kost' → logprob: -19.28522491455078
    9. '.cost' → logprob: -19.28522491455078
    10. '            ' → logprob: -19.78522491455078

Token 333: '
' (ID: 198)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7631101608276367
    2. '           ' → logprob: -1.1381101608276367
    3. '               ' → logprob: -2.1381101608276367
    4. '<|end|>' → logprob: -2.7631101608276367
    5. ' elif' → logprob: -4.013110160827637
    6. 'elif' → logprob: -4.763110160827637
    7. '<|end|>' → logprob: -6.013110160827637
    8. ',' → logprob: -6.638110160827637
    9. '	elif' → logprob: -8.013110160827637
    10. 'or' → logprob: -8.263110160827637

Token 334: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04264822602272034
    2. ' or' → logprob: -3.4176483154296875
    3. 'elif' → logprob: -5.4176483154296875
    4. '               ' → logprob: -6.1676483154296875
    5. ' elif' → logprob: -6.5426483154296875
    6. '<|end|>' → logprob: -7.2926483154296875
    7. 'or' → logprob: -8.667648315429688
    8. ',' → logprob: -10.167648315429688
    9. '<|end|>' → logprob: -10.917648315429688
    10. '		' → logprob: -11.042648315429688

Token 335: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.00016098834748845547
    2. '               ' → logprob: -9.625161170959473
    3. ' temp' → logprob: -10.375161170959473
    4. '                   ' → logprob: -10.375161170959473
    5. '           ' → logprob: -11.250161170959473
    6. '	temp' → logprob: -13.125161170959473
    7. 'tmp' → logprob: -13.625161170959473
    8. 'copy' → logprob: -13.625161170959473
    9. 'continue' → logprob: -13.625161170959473
    10. 'product' → logprob: -13.625161170959473

Token 336: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0001887591351987794
    2. '_token' → logprob: -8.875188827514648
    3. 'node' → logprob: -10.000188827514648
    4. 'Node' → logprob: -13.750188827514648
    5. '[node' → logprob: -13.875188827514648
    6. '_NODE' → logprob: -14.500188827514648
    7. 'token' → logprob: -15.375188827514648
    8. '-node' → logprob: -15.375188827514648
    9. '	node' → logprob: -16.00018882751465
    10. ' node' → logprob: -16.87518882751465

Token 337: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -4.246537173457909e-06
    2. 'to' → logprob: -12.625003814697266
    3. '[' → logprob: -15.125003814697266
    4. '[i' → logprob: -15.250003814697266
    5. '(to' → logprob: -16.125003814697266
    6. '```' → logprob: -16.625003814697266
    7. '
' → logprob: -17.625003814697266
    8. ' to' → logprob: -18.250003814697266
    9. '[token' → logprob: -18.375003814697266
    10. ',to' → logprob: -18.375003814697266

Token 338: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.39277997612953186
    2. '[N' → logprob: -1.2677799463272095
    3. '[' → logprob: -3.142780065536499
    4. ')[' → logprob: -10.392780303955078
    5. '>[' → logprob: -10.392780303955078
    6. '[][' → logprob: -10.517780303955078
    7. '```' → logprob: -10.642780303955078
    8. '}[' → logprob: -11.517780303955078
    9. '[C' → logprob: -11.517780303955078
    10. ' ][' → logprob: -11.767780303955078

Token 339: 'NODE' (ID: 105718)
  Prédit: 'NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NODE' → logprob: -0.20720146596431732
    2. 'i' → logprob: -1.7072014808654785
    3. '[N' → logprob: -5.8322014808654785
    4. '[' → logprob: -6.7072014808654785
    5. 'CH' → logprob: -7.8322014808654785
    6. '(N' → logprob: -8.45720100402832
    7. '4' → logprob: -9.08220100402832
    8. '   ' → logprob: -9.33220100402832
    9. 'chg' → logprob: -9.45720100402832
    10. '[i' → logprob: -9.58220100402832

Token 340: '_CH' (ID: 13894)
  Prédit: 'CH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CH' → logprob: -4.4418171455617994e-05
    2. '_CH' → logprob: -11.000044822692871
    3. ' CH' → logprob: -11.375044822692871
    4. '[' → logprob: -11.500044822692871
    5. '```' → logprob: -13.250044822692871
    6. '   ' → logprob: -14.125044822692871
    7. '
' → logprob: -14.125044822692871
    8. ' ' → logprob: -14.375044822692871
    9. '	' → logprob: -14.750044822692871
    10. '(CH' → logprob: -15.000044822692871

Token 341: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.259079363080673e-05
    2. 'GF' → logprob: -12.375012397766113
    3. 'FROM' → logprob: -13.125012397766113
    4. '_FROM' → logprob: -13.500012397766113
    5. 'ANGE' → logprob: -13.750012397766113
    6. '
' → logprob: -14.875012397766113
    7. 'ANGED' → logprob: -15.125012397766113
    8. 'From' → logprob: -15.187512397766113
    9. '_from' → logprob: -15.250012397766113
    10. ' G' → logprob: -15.312512397766113

Token 342: '_FROM' (ID: 59766)
  Prédit: '_FROM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FROM' → logprob: -0.00018220659694634378
    2. 'FROM' → logprob: -8.625182151794434
    3. '[_' → logprob: -14.750182151794434
    4. '_from' → logprob: -14.750182151794434
    5. '[' → logprob: -14.875182151794434
    6. '_TO' → logprob: -15.875182151794434
    7. '	FROM' → logprob: -16.00018310546875
    8. '```' → logprob: -16.00018310546875
    9. '_FOR' → logprob: -16.12518310546875
    10. '_From' → logprob: -16.25018310546875

Token 343: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015532275661826134
    2. ']=' → logprob: -4.390532493591309
    3. '=' → logprob: -6.390532493591309
    4. ' =' → logprob: -6.765532493591309
    5. '[' → logprob: -10.140532493591309
    6. ')' → logprob: -10.265532493591309
    7. ' ]' → logprob: -10.390532493591309
    8. '=i' → logprob: -10.390532493591309
    9. 's' → logprob: -11.390532493591309
    10. '[i' → logprob: -11.890532493591309

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868729770183563
    2. '=' → logprob: -1.1368730068206787
    3. '=i' → logprob: -13.761873245239258
    4. '[' → logprob: -14.761873245239258
    5. ' ' → logprob: -15.011873245239258
    6. '＝' → logprob: -16.511873245239258
    7. ']' → logprob: -17.636873245239258
    8. ',' → logprob: -17.761873245239258
    9. ']=' → logprob: -17.886873245239258
    10. ')' → logprob: -18.136873245239258

Token 345: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0036022020503878593
    2. ' i' → logprob: -5.628602027893066
    3. '   ' → logprob: -14.128602027893066
    4. ' ' → logprob: -14.503602027893066
    5. '	i' → logprob: -15.253602027893066
    6. 'idx' → logprob: -15.503602027893066
    7. '                   ' → logprob: -15.753602027893066
    8. ' ' → logprob: -16.253602981567383
    9. '  ' → logprob: -17.003602981567383
    10. '               ' → logprob: -17.128602981567383

Token 346: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034435756504535675
    2. '<|end|>' → logprob: -4.159435749053955
    3. 'elif' → logprob: -4.784435749053955
    4. '               ' → logprob: -4.784435749053955
    5. ' elif' → logprob: -8.034436225891113
    6. 'else' → logprob: -8.159436225891113
    7. '<|end|>' → logprob: -8.909436225891113
    8. '
' → logprob: -9.034436225891113
    9. 'continue' → logprob: -9.159436225891113
    10. '       ' → logprob: -9.284436225891113

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014258292503654957
    2. 'elif' → logprob: -6.626425743103027
    3. 'else' → logprob: -10.001425743103027
    4. '               ' → logprob: -10.876425743103027
    5. ' or' → logprob: -11.626425743103027
    6. '          ' → logprob: -11.876425743103027
    7. ' elif' → logprob: -12.126425743103027
    8. '       ' → logprob: -12.251425743103027
    9. '<|end|>' → logprob: -13.001425743103027
    10. 'or' → logprob: -13.376425743103027

Token 348: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.16425423324108124
    2. '           ' → logprob: -2.0392541885375977
    3. ' elif' → logprob: -4.414254188537598
    4. 'else' → logprob: -4.789254188537598
    5. '       ' → logprob: -7.414254188537598
    6. ' else' → logprob: -8.539254188537598
    7. '               ' → logprob: -9.664254188537598
    8. '	elif' → logprob: -10.539254188537598
    9. ' or' → logprob: -10.789254188537598
    10. '```' → logprob: -12.414254188537598

Token 349: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.9647226333618164
    2. ' temp' → logprob: -1.0897226333618164
    3. 'cost' → logprob: -1.8397226333618164
    4. ' cost' → logprob: -2.0897226333618164
    5. '(temp' → logprob: -12.464722633361816
    6. ' ' → logprob: -12.464722633361816
    7. '	temp' → logprob: -12.964722633361816
    8. '   ' → logprob: -13.589722633361816
    9. 'tmp' → logprob: -13.589722633361816
    10. '(cost' → logprob: -13.714722633361816

Token 350: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.002813194179907441
    2. '_token' → logprob: -5.877813339233398
    3. '[to' → logprob: -12.377813339233398
    4. '_cost' → logprob: -14.252813339233398
    5. '[token' → logprob: -14.252813339233398
    6. '_code' → logprob: -14.502813339233398
    7. '[node' → logprob: -14.627813339233398
    8. '[_' → logprob: -15.252813339233398
    9. '_NODE' → logprob: -15.377813339233398
    10. '[t' → logprob: -15.627813339233398

Token 351: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.0445127372804563e-05
    2. 'to' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.500009536743164
    4. '(to' → logprob: -16.625009536743164
    5. '
' → logprob: -17.375009536743164
    6. ' [' → logprob: -17.750009536743164
    7. '[' → logprob: -18.000009536743164
    8. ' to' → logprob: -18.250009536743164
    9. 'cost' → logprob: -18.500009536743164
    10. '[temp' → logprob: -18.750009536743164

Token 352: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010098267812281847
    2. '[N' → logprob: -7.001009941101074
    3. '[' → logprob: -10.251009941101074
    4. ')[' → logprob: -10.751009941101074
    5. ']' → logprob: -11.876009941101074
    6. '>[' → logprob: -12.001009941101074
    7. ' ][' → logprob: -12.001009941101074
    8. '}[' → logprob: -13.001009941101074
    9. 'token' → logprob: -13.126009941101074
    10. '
' → logprob: -13.251009941101074

Token 353: 'NODE' (ID: 105718)
  Prédit: 'NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NODE' → logprob: -6.32523515378125e-05
    2. '[N' → logprob: -9.750062942504883
    3. '
' → logprob: -12.875062942504883
    4. 'N' → logprob: -14.625062942504883
    5. '
' → logprob: -14.750062942504883
    6. '   ' → logprob: -15.250062942504883
    7. ' NODE' → logprob: -15.250062942504883
    8. '[' → logprob: -15.250062942504883
    9. '_NODE' → logprob: -15.375062942504883
    10. '.NODE' → logprob: -15.625062942504883

Token 354: '_COST' (ID: 168150)
  Prédit: '_COST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_COST' → logprob: -0.009081783704459667
    2. '[C' → logprob: -5.259081840515137
    3. '[' → logprob: -5.634081840515137
    4. '_CH' → logprob: -8.884081840515137
    5. 'C' → logprob: -9.759081840515137
    6. '_cost' → logprob: -11.259081840515137
    7. '][' → logprob: -11.259081840515137
    8. 'cost' → logprob: -11.759081840515137
    9. '	C' → logprob: -12.009081840515137
    10. '   ' → logprob: -12.134081840515137

Token 355: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3133993148803711
    2. '>' → logprob: -1.313399314880371
    3. '   ' → logprob: -10.063399314880371
    4. ' ' → logprob: -10.188399314880371
    5. ')' → logprob: -10.313399314880371
    6. '[' → logprob: -11.688399314880371
    7. '  ' → logprob: -12.813399314880371
    8. ' >=' → logprob: -12.938399314880371
    9. '+' → logprob: -13.688399314880371
    10. '    ' → logprob: -13.813399314880371

Token 356: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0549028255045414
    2. ' >' → logprob: -2.9299027919769287
    3. ' ' → logprob: -11.929903030395508
    4. '   ' → logprob: -12.054903030395508
    5. '>=' → logprob: -13.179903030395508
    6. ')' → logprob: -13.554903030395508
    7. '>tag' → logprob: -14.929903030395508
    8. '  ' → logprob: -15.179903030395508
    9. '()>' → logprob: -15.242403030395508
    10. '">' → logprob: -15.304903030395508

Token 357: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.005929982289671898
    2. 'cost' → logprob: -5.130929946899414
    3. '(cost' → logprob: -14.130929946899414
    4. ' code' → logprob: -15.505929946899414
    5. 'Cost' → logprob: -16.130929946899414
    6. ' kost' → logprob: -16.505929946899414
    7. ' ' → logprob: -16.630929946899414
    8. ' space' → logprob: -17.005929946899414
    9. '=' → logprob: -17.130929946899414
    10. '_cost' → logprob: -17.755929946899414

Token 358: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045190125703811646
    2. '               ' → logprob: -4.045190334320068
    3. ' :' → logprob: -4.420190334320068
    4. ' and' → logprob: -4.920190334320068
    5. ':
' → logprob: -5.545190334320068
    6. '<|end|>' → logprob: -6.420190334320068
    7. '           ' → logprob: -7.670190334320068
    8. ' :
' → logprob: -7.795190334320068
    9. 'and' → logprob: -8.92018985748291
    10. '            ' → logprob: -9.04518985748291

Token 359: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001869021449238062
    2. ' temp' → logprob: -6.501869201660156
    3. ' ' → logprob: -9.751869201660156
    4. ':
' → logprob: -9.751869201660156
    5. '                   ' → logprob: -10.251869201660156
    6. '                       ' → logprob: -10.251869201660156
    7. '           ' → logprob: -10.376869201660156
    8. ':' → logprob: -10.751869201660156
    9. '                               ' → logprob: -11.126869201660156
    10. '```' → logprob: -11.126869201660156

Token 360: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.47453027963638306
    2. 'temp' (adapté à ' temp') → logprob: -0.9745302796363831
    3. '               ' → logprob: -7.849530220031738
    4. '                   ' → logprob: -9.974530220031738
    5. '           ' → logprob: -11.724530220031738
    6. '[temp' → logprob: -13.349530220031738
    7. '	temp' → logprob: -13.474530220031738
    8. '                       ' → logprob: -13.849530220031738
    9. 'tmp' → logprob: -13.974530220031738
    10. '   ' → logprob: -13.974530220031738

Token 361: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.688212614681106e-05
    2. '_token' → logprob: -11.000017166137695
    3. '[node' → logprob: -17.375017166137695
    4. '[_' → logprob: -17.500017166137695
    5. 'node' → logprob: -17.625017166137695
    6. '_NODE' → logprob: -18.500017166137695
    7. 'Node' → logprob: -18.625017166137695
    8. '```' → logprob: -18.625017166137695
    9. '_' → logprob: -19.375017166137695
    10. ' _' → logprob: -19.500017166137695

Token 362: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.0206720617134124e-05
    2. 'to' → logprob: -11.50001049041748
    3. '(to' → logprob: -17.375009536743164
    4. 'toc' → logprob: -18.250009536743164
    5. '	to' → logprob: -18.875009536743164
    6. '[' → logprob: -19.000009536743164
    7. '```' → logprob: -19.125009536743164
    8. 'cost' → logprob: -19.250009536743164
    9. '[token' → logprob: -19.500009536743164
    10. ' to' → logprob: -19.500009536743164

Token 363: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003746405942365527
    2. '[N' → logprob: -6.128746509552002
    3. '[' → logprob: -6.503746509552002
    4. ' ][' → logprob: -10.378746032714844
    5. ')[' → logprob: -11.253746032714844
    6. '>[' → logprob: -12.378746032714844
    7. ']' → logprob: -12.878746032714844
    8. '[][' → logprob: -13.128746032714844
    9. ''][' → logprob: -13.503746032714844
    10. '}[' → logprob: -14.003746032714844

Token 364: 'NODE' (ID: 105718)
  Prédit: 'NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NODE' → logprob: -0.39005717635154724
    2. 'cost' → logprob: -1.2650572061538696
    3. '[N' → logprob: -3.39005708694458
    4. 'C' → logprob: -5.64005708694458
    5. 'to' → logprob: -6.64005708694458
    6. '[' → logprob: -7.26505708694458
    7. ' cost' → logprob: -7.89005708694458
    8. '_COST' → logprob: -8.390057563781738
    9. '[C' → logprob: -8.640057563781738
    10. '
' → logprob: -8.765057563781738

Token 365: '_COST' (ID: 168150)
  Prédit: '_COST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_COST' → logprob: -0.6554398536682129
    2. '_CH' → logprob: -0.7804398536682129
    3. 'CH' → logprob: -4.030439853668213
    4. 'C' → logprob: -6.155439853668213
    5. 'cost' → logprob: -6.780439853668213
    6. '[to' → logprob: -7.155439853668213
    7. 'to' → logprob: -8.405439376831055
    8. 'Ch' → logprob: -8.655439376831055
    9. '[' → logprob: -8.780439376831055
    10. '_cost' → logprob: -9.530439376831055

Token 366: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05491793900728226
    2. '=' → logprob: -2.929918050765991
    3. ']' → logprob: -10.80491828918457
    4. ')' → logprob: -11.17991828918457
    5. ']=' → logprob: -14.17991828918457
    6. '<|end|>' → logprob: -15.05491828918457
    7. ')=' → logprob: -15.92991828918457
    8. ' ' → logprob: -16.80491828918457
    9. ',' → logprob: -16.80491828918457
    10. '=cut' → logprob: -16.92991828918457

Token 367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519291639328003
    2. ' =' → logprob: -1.5019291639328003
    3. '=
' → logprob: -17.126928329467773
    4. '＝' → logprob: -17.376928329467773
    5. '=

' → logprob: -17.376928329467773
    6. ')' → logprob: -17.876928329467773
    7. '[' → logprob: -18.251928329467773
    8. '.=' → logprob: -18.501928329467773
    9. '=cut' → logprob: -18.751928329467773
    10. ',' → logprob: -19.001928329467773

Token 368: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.07889033854007721
    2. 'cost' → logprob: -2.578890323638916
    3. '(cost' → logprob: -14.578890800476074
    4. ' code' → logprob: -16.828889846801758
    5. 'code' → logprob: -16.953889846801758
    6. ' kost' → logprob: -17.828889846801758
    7. 'Cost' → logprob: -18.453889846801758
    8. '_cost' → logprob: -19.078889846801758
    9. ' ' → logprob: -19.203889846801758
    10. ' costo' → logprob: -19.953889846801758

Token 369: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005212200339883566
    2. '<|end|>' → logprob: -7.750521183013916
    3. '
' → logprob: -10.125521659851074
    4. '			' → logprob: -10.750521659851074
    5. '<|end|>' → logprob: -11.875521659851074
    6. '           ' → logprob: -12.875521659851074
    7. '                
' → logprob: -12.875521659851074
    8. '                   ' → logprob: -13.000521659851074
    9. '```' → logprob: -13.000521659851074
    10. '       ' → logprob: -13.375521659851074

Token 370: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.6166903151315637e-05
    2. '<|end|>' → logprob: -12.000016212463379
    3. '			' → logprob: -12.125016212463379
    4. '                   ' → logprob: -14.125016212463379
    5. '           ' → logprob: -14.375016212463379
    6. '              ' → logprob: -14.500016212463379
    7. '<|end|>' → logprob: -14.625016212463379
    8. '                ' → logprob: -15.125016212463379
    9. '		       ' → logprob: -15.125016212463379
    10. '```' → logprob: -15.250016212463379

Token 371: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.00572565570473671
    2. ' temp' → logprob: -5.255725860595703
    3. '               ' → logprob: -7.630725860595703
    4. '           ' → logprob: -13.005725860595703
    5. '                   ' → logprob: -13.005725860595703
    6. 'tmp' → logprob: -14.505725860595703
    7. '   ' → logprob: -15.005725860595703
    8. '	temp' → logprob: -15.130725860595703
    9. ' ' → logprob: -15.630725860595703
    10. '[temp' → logprob: -15.880725860595703

Token 372: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.128163257315464e-07
    2. '[node' → logprob: -16.25
    3. '_token' → logprob: -16.5
    4. 'node' → logprob: -17.375
    5. '_NODE' → logprob: -18.125
    6. 'Node' → logprob: -18.5
    7. '[_' → logprob: -18.625
    8. '[' → logprob: -19.25
    9. '\' → logprob: -19.625
    10. '```' → logprob: -20.25

Token 373: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -6.635164754698053e-05
    2. 'to' → logprob: -9.625066757202148
    3. '(to' → logprob: -15.625066757202148
    4. '```' → logprob: -17.50006675720215
    5. 'toc' → logprob: -18.25006675720215
    6. '[' → logprob: -18.50006675720215
    7. '
' → logprob: -18.50006675720215
    8. 'tos' → logprob: -18.75006675720215
    9. '	to' → logprob: -19.12506675720215
    10. ' to' → logprob: -19.37506675720215

Token 374: '][' (ID: 2696)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.02058393508195877
    2. '][' → logprob: -3.8955838680267334
    3. '[' → logprob: -10.895584106445312
    4. ')[' → logprob: -11.520584106445312
    5. '[temp' → logprob: -13.145584106445312
    6. '```' → logprob: -13.270584106445312
    7. ',to' → logprob: -13.395584106445312
    8. 'to' → logprob: -13.520584106445312
    9. '[][' → logprob: -13.895584106445312
    10. ' ][' → logprob: -14.145584106445312

Token 375: 'NODE' (ID: 105718)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6427322030067444
    2. 'i' → logprob: -0.7677322030067444
    3. 'NODE' → logprob: -4.6427321434021
    4. '[N' → logprob: -9.392732620239258
    5. 'CH' → logprob: -9.642732620239258
    6. ' i' → logprob: -9.892732620239258
    7. '[' → logprob: -9.892732620239258
    8. ' to' → logprob: -10.017732620239258
    9. 'TO' → logprob: -10.142732620239258
    10. '(N' → logprob: -10.767732620239258

Token 376: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -0.06387254595756531
    2. 'CH' → logprob: -2.8138725757598877
    3. '[' → logprob: -6.313872337341309
    4. '```' → logprob: -11.188872337341309
    5. '_ch' → logprob: -11.313872337341309
    6. '(CH' → logprob: -11.688872337341309
    7. ' CH' → logprob: -11.938872337341309
    8. '   ' → logprob: -12.063872337341309
    9. '[_' → logprob: -12.063872337341309
    10. '[i' → logprob: -12.063872337341309

Token 377: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -4.263011578586884e-05
    2. 'ANGE' → logprob: -10.500042915344238
    3. '_FROM' → logprob: -12.250042915344238
    4. 'ANGED' → logprob: -13.375042915344238
    5. 'ANG' → logprob: -14.062542915344238
    6. 'FROM' → logprob: -14.187542915344238
    7. '_' → logprob: -14.187542915344238
    8. 'GE' → logprob: -14.437542915344238
    9. '_from' → logprob: -14.750042915344238
    10. 'ANGES' → logprob: -14.812542915344238

Token 378: '_FROM' (ID: 59766)
  Prédit: '_FROM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FROM' → logprob: -4.751746746478602e-05
    2. 'FROM' → logprob: -10.25004768371582
    3. 'From' → logprob: -12.12504768371582
    4. '[' → logprob: -13.37504768371582
    5. '[_' → logprob: -13.75004768371582
    6. '_From' → logprob: -14.12504768371582
    7. '[from' → logprob: -14.50004768371582
    8. '```' → logprob: -14.62504768371582
    9. '_from' → logprob: -15.00004768371582
    10. '_FORM' → logprob: -15.12504768371582

Token 379: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010472540743649006
    2. '=' → logprob: -5.010472774505615
    3. ' =' → logprob: -5.885472774505615
    4. ']=' → logprob: -7.010472774505615
    5. ')' → logprob: -9.885472297668457
    6. ' ]' → logprob: -11.385472297668457
    7. '}' → logprob: -13.885472297668457
    8. '<|end|>' → logprob: -14.010472297668457
    9. '[i' → logprob: -14.260472297668457
    10. ' ' → logprob: -14.510472297668457

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751067981123924
    2. ' =' → logprob: -3.5297510623931885
    3. ']=' → logprob: -15.77975082397461
    4. ']' → logprob: -16.02975082397461
    5. ')' → logprob: -16.52975082397461
    6. '=i' → logprob: -16.52975082397461
    7. ')=' → logprob: -17.40475082397461
    8. '＝' → logprob: -17.52975082397461
    9. '<|end|>' → logprob: -17.77975082397461
    10. ' ' → logprob: -18.65475082397461

Token 381: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804171830415726
    2. ' i' → logprob: -3.288041830062866
    3. '	i' → logprob: -15.788042068481445
    4. '   ' → logprob: -16.538042068481445
    5. ' ' → logprob: -17.163042068481445
    6. '[i' → logprob: -18.913042068481445
    7. '           ' → logprob: -19.038042068481445
    8. '               ' → logprob: -19.288042068481445
    9. '                   ' → logprob: -19.413042068481445
    10. '_i' → logprob: -20.038042068481445

Token 382: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5934635400772095
    2. '<|end|>' → logprob: -1.7184635400772095
    3. '   ' → logprob: -2.21846342086792
    4. '       ' → logprob: -2.84346342086792
    5. ',' → logprob: -3.71846342086792
    6. '    ' → logprob: -3.84346342086792
    7. ' )' → logprob: -4.84346342086792
    8. ' ' → logprob: -5.09346342086792
    9. '        ' → logprob: -5.59346342086792
    10. ' if' → logprob: -5.84346342086792

Token 384: ' r' (ID: 428)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6332329511642456
    2. '   ' → logprob: -1.0082329511642456
    3. 'if' → logprob: -3.258233070373535
    4. 'for' → logprob: -3.508233070373535
    5. 'i' → logprob: -4.633233070373535
    6. 'temp' → logprob: -4.758233070373535
    7. ')' → logprob: -6.008233070373535
    8. 'src' → logprob: -6.258233070373535
    9. ' return' → logprob: -6.508233070373535
    10. ' if' → logprob: -6.758233070373535

Token 385: 'num' (ID: 4571)
  Prédit: 'oute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.007929311133921146
    2. 'eturn' → logprob: -5.13292932510376
    3. 'es' → logprob: -6.88292932510376
    4. 'out' → logprob: -7.13292932510376
    5. 'outes' → logprob: -9.132928848266602
    6. 'e' → logprob: -10.757928848266602
    7. 'o' → logprob: -11.257928848266602
    8. 'outer' → logprob: -12.132928848266602
    9. 'route' → logprob: -12.257928848266602
    10. 'ou' → logprob: -12.257928848266602

Token 386: ',' (ID: 11)
  Prédit: 'oute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.016770686954259872
    2. ' =' → logprob: -4.266770839691162
    3. '=' → logprob: -6.641770839691162
    4. 'outes' → logprob: -7.516770839691162
    5. 'o' → logprob: -8.016770362854004
    6. 'out' → logprob: -8.891770362854004
    7. 'ute' → logprob: -9.141770362854004
    8. '   ' → logprob: -10.516770362854004
    9. 'e' → logprob: -10.891770362854004
    10. ' ' → logprob: -11.016770362854004

Token 387: ' distance' (ID: 9324)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.64047771692276
    2. 'now' → logprob: -2.6404776573181152
    3. 'cur' → logprob: -2.6404776573181152
    4. 'pos' → logprob: -2.8904776573181152
    5. 'route' → logprob: -3.3904776573181152
    6. ' now' → logprob: -3.7654776573181152
    7. 'node' → logprob: -3.8904776573181152
    8. ' r' → logprob: -4.140477657318115
    9. ' cur' → logprob: -4.140477657318115
    10. 'current' → logprob: -4.390477657318115

Token 388: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4104166030883789
    2. '=' → logprob: -1.160416603088379
    3. ',' → logprob: -3.785416603088379
    4. ' ' → logprob: -7.785416603088379
    5. '[' → logprob: -9.285416603088379
    6. ' ,' → logprob: -10.660416603088379
    7. '   ' → logprob: -11.035416603088379
    8. '  ' → logprob: -12.285416603088379
    9. ' =
' → logprob: -12.535416603088379
    10. ')' → logprob: -12.785416603088379

Token 389: ' i' (ID: 575)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.3637255430221558
    2. 'r' → logprob: -1.7387255430221558
    3. 'route' → logprob: -2.1137256622314453
    4. 'cost' → logprob: -2.6137256622314453
    5. 'path' → logprob: -3.1137256622314453
    6. 'now' → logprob: -3.1137256622314453
    7. 'NODE' → logprob: -3.6137256622314453
    8. 'node' → logprob: -3.6137256622314453
    9. ' now' → logprob: -3.7387256622314453
    10. ' route' → logprob: -4.238725662231445

Token 390: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11310744285583496
    2. '=' → logprob: -2.238107442855835
    3. ',' → logprob: -8.238107681274414
    4. ' ' → logprob: -11.238107681274414
    5. ' =
' → logprob: -12.988107681274414
    6. ' ,' → logprob: -14.113107681274414
    7. '   ' → logprob: -14.238107681274414
    8. '=
' → logprob: -14.488107681274414
    9. ' ' → logprob: -14.738107681274414
    10. '=

' → logprob: -14.863107681274414

Token 391: ' cost' (ID: 3097)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' now' → logprob: -1.6974050998687744
    2. 'temp' → logprob: -2.0724050998687744
    3. 'now' → logprob: -2.1974050998687744
    4. 'dst' → logprob: -2.1974050998687744
    5. ' =' → logprob: -2.3224050998687744
    6. 'tmp' → logprob: -2.9474050998687744
    7. '=' → logprob: -3.0724050998687744
    8. 'route' → logprob: -3.3224050998687744
    9. 'r' → logprob: -3.3224050998687744
    10. 'node' → logprob: -3.6974050998687744

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4369273781776428
    2. '=' → logprob: -1.061927318572998
    3. ',' → logprob: -4.811927318572998
    4. ' ' → logprob: -10.436927795410156
    5. ' ,' → logprob: -11.061927795410156
    6. '[' → logprob: -12.186927795410156
    7. '   ' → logprob: -13.561927795410156
    8. 's' → logprob: -13.561927795410156
    9. ' =
' → logprob: -13.686927795410156
    10. '_' → logprob: -14.311927795410156

Token 393: ' ' (ID: 220)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.8511601686477661
    2. '0' → logprob: -1.4761601686477661
    3. ' dst' → logprob: -1.6011601686477661
    4. 'src' → logprob: -2.9761600494384766
    5. 'temp' → logprob: -3.7261600494384766
    6. ' ' → logprob: -4.226160049438477
    7. '-' → logprob: -4.476160049438477
    8. ' -' → logprob: -5.101160049438477
    9. ' now' → logprob: -5.226160049438477
    10. ' src' → logprob: -5.226160049438477

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7772301435470581
    2. 'dst' → logprob: -1.527230143547058
    3. 'src' → logprob: -2.0272302627563477
    4. 'temp' → logprob: -2.7772302627563477
    5. '-' → logprob: -2.9022302627563477
    6. '[],' → logprob: -4.027230262756348
    7. ' dst' → logprob: -4.652230262756348
    8. 'None' → logprob: -4.902230262756348
    9. 'now' → logprob: -5.152230262756348
    10. 'len' → logprob: -5.152230262756348

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16829189658164978
    2. ' =' → logprob: -2.9182918071746826
    3. '=' → logprob: -3.2932918071746826
    4. ',
' → logprob: -3.7932918071746826
    5. '<|end|>' → logprob: -3.7932918071746826
    6. '
' → logprob: -4.418292045593262
    7. ' ,' → logprob: -6.543292045593262
    8. '   ' → logprob: -7.043292045593262
    9. ' 
' → logprob: -7.918292045593262
    10. ' ' → logprob: -7.918292045593262

Token 396: ' ' (ID: 220)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.8515681028366089
    2. ' temp' → logprob: -1.7265681028366089
    3. '-' → logprob: -1.9765681028366089
    4. '0' → logprob: -2.2265682220458984
    5. ' ' → logprob: -3.1015682220458984
    6. ' -' → logprob: -3.4765682220458984
    7. ' sys' → logprob: -3.4765682220458984
    8. 'sys' → logprob: -3.4765682220458984
    9. '100' → logprob: -5.226568222045898
    10. 'float' → logprob: -6.726568222045898

Token 397: '0' (ID: 15)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.010379456914961338
    2. '-' → logprob: -5.510379314422607
    3. '0' → logprob: -5.760379314422607
    4. 'sys' → logprob: -7.135379314422607
    5. '100' → logprob: -7.510379314422607
    6. ' temp' → logprob: -7.635379314422607
    7. 'int' → logprob: -7.760379314422607
    8. '999' → logprob: -8.135379791259766
    9. 'copy' → logprob: -8.760379791259766
    10. 'float' → logprob: -9.010379791259766

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3839317560195923
    2. '<|end|>' → logprob: -1.2589317560195923
    3. '
' → logprob: -3.7589316368103027
    4. ',
' → logprob: -5.133931636810303
    5. '<|end|>' → logprob: -6.508931636810303
    6. '   ' → logprob: -7.133931636810303
    7. '[' → logprob: -7.383931636810303
    8. ' ' → logprob: -7.508931636810303
    9. ' ,' → logprob: -7.633931636810303
    10. ',None' → logprob: -7.758931636810303

Token 399: ' src' (ID: 4537)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.04134410619735718
    2. 'src' → logprob: -3.666344165802002
    3. ' dst' → logprob: -4.291344165802002
    4. 'temp' → logprob: -7.791344165802002
    5. '   ' → logprob: -8.666343688964844
    6. ' src' → logprob: -8.666343688964844
    7. '0' → logprob: -9.041343688964844
    8. 'tmp' → logprob: -9.666343688964844
    9. '	dst' → logprob: -10.041343688964844
    10. ' ' → logprob: -10.478843688964844

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11872541904449463
    2. ' ,' → logprob: -3.368725299835205
    3. ' -' → logprob: -3.993725299835205
    4. '+' → logprob: -3.993725299835205
    5. '<|end|>' → logprob: -3.993725299835205
    6. '-' → logprob: -4.368725299835205
    7. ' +' → logprob: -5.618725299835205
    8. '   ' → logprob: -6.243725299835205
    9. '<|end|>' → logprob: -6.743725299835205
    10. ' ' → logprob: -7.118725299835205

Token 401: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6546198725700378
    2. 'temp' → logprob: -0.7796198725700378
    3. '-' → logprob: -5.1546196937561035
    4. ' ' → logprob: -5.2796196937561035
    5. ' temp' → logprob: -5.5296196937561035
    6. '100' → logprob: -6.0296196937561035
    7. 'sys' → logprob: -6.1546196937561035
    8. '[]' → logprob: -7.6546196937561035
    9. 'copy' → logprob: -8.279620170593262
    10. '   ' → logprob: -8.279620170593262

Token 402: '0' (ID: 15)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.20241737365722656
    2. '0' → logprob: -1.8274173736572266
    3. '-' → logprob: -4.327417373657227
    4. '100' → logprob: -5.327417373657227
    5. 'sys' → logprob: -6.202417373657227
    6. ' temp' → logprob: -7.577417373657227
    7. '-temp' → logprob: -8.077417373657227
    8. ' ' → logprob: -8.077417373657227
    9. '999' → logprob: -8.452417373657227
    10. 'tmp' → logprob: -8.952417373657227

Token 403: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 404: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3839777410030365
    2. '<|end|>' → logprob: -1.3839777708053589
    3. '   ' → logprob: -4.133977890014648
    4. '[' → logprob: -4.258977890014648
    5. ' while' → logprob: -4.258977890014648
    6. 'while' → logprob: -5.133977890014648
    7. ',' → logprob: -5.508977890014648
    8. ' ' → logprob: -6.133977890014648
    9. ',
' → logprob: -6.508977890014648
    10. '\n' → logprob: -6.633977890014648

Token 405: ' route' (ID: 9656)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.002622862346470356
    2. 'if' → logprob: -6.752623081207275
    3. ' while' → logprob: -6.752623081207275
    4. '   ' → logprob: -8.752622604370117
    5. 'distance' → logprob: -9.752622604370117
    6. 'for' → logprob: -10.627622604370117
    7. 'r' → logprob: -11.627622604370117
    8. '
' → logprob: -11.752622604370117
    9. 'i' → logprob: -12.377622604370117
    10. '	while' → logprob: -12.502622604370117

Token 406: '.clear' (ID: 13562)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5435166358947754
    2. ' =' → logprob: -1.2935166358947754
    3. '[' → logprob: -2.6685166358947754
    4. '=' → logprob: -3.0435166358947754
    5. '.' → logprob: -4.918516635894775
    6. '_' → logprob: -5.543516635894775
    7. ',' → logprob: -5.793516635894775
    8. '[:]' → logprob: -5.918516635894775
    9. '[N' → logprob: -6.043516635894775
    10. '[i' → logprob: -6.293516635894775

Token 407: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003382038848940283
    2. '()
' → logprob: -8.000338554382324
    3. '()

' → logprob: -14.000338554382324
    4. '()
' → logprob: -14.250338554382324
    5. '(' → logprob: -14.500338554382324
    6. '()\' → logprob: -14.875338554382324
    7. '()`' → logprob: -16.000337600708008
    8. ')' → logprob: -16.250337600708008
    9. ' ()' → logprob: -16.375337600708008
    10. '();' → logprob: -16.625337600708008

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28804102540016174
    2. '
' → logprob: -1.6630409955978394
    3. 'while' → logprob: -3.663041114807129
    4. ' while' → logprob: -4.413041114807129
    5. '<|end|>' → logprob: -4.413041114807129
    6. 'route' → logprob: -5.538041114807129
    7. '[' → logprob: -6.288041114807129
    8. '    
' → logprob: -6.663041114807129
    9. '	while' → logprob: -7.413041114807129
    10. ' route' → logprob: -7.413041114807129

Token 409: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.01401952002197504
    2. 'if' → logprob: -4.76401948928833
    3. 'route' → logprob: -5.26401948928833
    4. ' while' → logprob: -9.514019966125488
    5. 'for' → logprob: -9.514019966125488
    6. '   ' → logprob: -10.764019966125488
    7. 'temp' → logprob: -11.014019966125488
    8. 'distance' → logprob: -12.264019966125488
    9. 'tmp' → logprob: -12.389019966125488
    10. '
' → logprob: -12.639019966125488

Token 410: ' True' (ID: 6432)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35361745953559875
    2. ' i' → logprob: -1.2286174297332764
    3. 'temp' → logprob: -6.2286176681518555
    4. 'True' → logprob: -6.7286176681518555
    5. ' temp' → logprob: -7.1036176681518555
    6. ' True' → logprob: -7.6036176681518555
    7. '(i' → logprob: -8.103617668151855
    8. '   ' → logprob: -9.103617668151855
    9. ' now' → logprob: -9.728617668151855
    10. ' ' → logprob: -9.853617668151855

Token 411: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.027811560779809952
    2. '   ' → logprob: -4.152811527252197
    3. 'and' → logprob: -4.527811527252197
    4. ':
' → logprob: -7.777811527252197
    5. ':' → logprob: -8.777812004089355
    6. '       ' → logprob: -8.777812004089355
    7. '<|end|>' → logprob: -9.527812004089355
    8. ' i' → logprob: -10.402812004089355
    9. ' if' → logprob: -10.902812004089355
    10. ',' → logprob: -11.402812004089355

Token 412: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4919285774230957
    2. ' i' → logprob: -1.3669285774230957
    3. 'i' → logprob: -2.2419285774230957
    4. ' if' → logprob: -3.9919285774230957
    5. 'if' → logprob: -5.116928577423096
    6. '       ' → logprob: -6.991928577423096
    7. '	i' → logprob: -7.491928577423096
    8. ' route' → logprob: -7.616928577423096
    9. 'route' → logprob: -8.366928100585938
    10. ' not' → logprob: -8.366928100585938

Token 413: ' cost' (ID: 3097)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.9212349057197571
    2. 'if' → logprob: -1.0462348461151123
    3. 'i' → logprob: -1.4212348461151123
    4. '       ' → logprob: -4.796235084533691
    5. ' route' → logprob: -8.171235084533691
    6. '   ' → logprob: -8.421235084533691
    7. ' if' → logprob: -8.421235084533691
    8. ' i' → logprob: -9.171235084533691
    9. 'r' → logprob: -9.546235084533691
    10. 'temp' → logprob: -9.921235084533691

Token 414: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.1572989225387573
    2. '=' → logprob: -1.2822989225387573
    3. '+=' → logprob: -1.6572989225387573
    4. ',' → logprob: -2.032299041748047
    5. ' =' → logprob: -2.532299041748047
    6. '!=' → logprob: -5.907299041748047
    7. ' ,' → logprob: -7.032299041748047
    8. ' !=' → logprob: -7.032299041748047
    9. '+' → logprob: -7.407299041748047
    10. ' ' → logprob: -8.032299041748047

Token 415: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.00025287605240009725
    2. ' temp' → logprob: -9.000252723693848
    3. 'distance' → logprob: -10.250252723693848
    4. 'es' → logprob: -10.500252723693848
    5. 'copy' → logprob: -10.875252723693848
    6. '   ' → logprob: -11.375252723693848
    7. 'next' → logprob: -11.875252723693848
    8. '1' → logprob: -12.000252723693848
    9. 'cost' → logprob: -12.375252723693848
    10. 'tmp' → logprob: -12.625252723693848

Token 416: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0001801801408873871
    2. '_token' → logprob: -8.6251802444458
    3. 'node' → logprob: -14.8751802444458
    4. '_user' → logprob: -16.000179290771484
    5. '_cost' → logprob: -16.250179290771484
    6. '[node' → logprob: -17.875179290771484
    7. '_code' → logprob: -18.250179290771484
    8. 'Node' → logprob: -19.000179290771484
    9. '   ' → logprob: -19.250179290771484
    10. '_NODE' → logprob: -19.375179290771484

Token 417: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.6776029699249193e-05
    2. 'i' → logprob: -10.75002670288086
    3. '[' → logprob: -12.75002670288086
    4. '[to' → logprob: -13.37502670288086
    5. 'to' → logprob: -15.12502670288086
    6. '[I' → logprob: -16.00002670288086
    7. ' i' → logprob: -16.50002670288086
    8. '[src' → logprob: -16.50002670288086
    9. '(i' → logprob: -17.00002670288086
    10. ' ' → logprob: -17.12502670288086

Token 418: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002013813704252243
    2. '[N' → logprob: -6.252013683319092
    3. '[' → logprob: -9.50201416015625
    4. ' ][' → logprob: -12.25201416015625
    5. '   ' → logprob: -13.37701416015625
    6. ']' → logprob: -13.50201416015625
    7. ')[' → logprob: -13.62701416015625
    8. '}[' → logprob: -15.12701416015625
    9. ' ' → logprob: -15.37701416015625
    10. '	' → logprob: -15.50201416015625

Token 419: 'NODE' (ID: 105718)
  Prédit: 'NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NODE' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -15.125000953674316
    3. '[' → logprob: -15.250000953674316
    4. ' NODE' → logprob: -15.750000953674316
    5. '[N' → logprob: -15.875000953674316
    6. '3' → logprob: -16.000001907348633
    7. '   ' → logprob: -16.000001907348633
    8. '2' → logprob: -16.250001907348633
    9. '4' → logprob: -17.250001907348633
    10. 'N' → logprob: -17.750001907348633

Token 420: '_COST' (ID: 168150)
  Prédit: 'CH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CH' → logprob: -0.04576978087425232
    2. '_CH' → logprob: -3.170769691467285
    3. 'C' → logprob: -6.045769691467285
    4. '_COST' → logprob: -8.045769691467285
    5. '_C' → logprob: -10.295769691467285
    6. ' CH' → logprob: -10.420769691467285
    7. '```' → logprob: -12.670769691467285
    8. '   ' → logprob: -13.170769691467285
    9. '[' → logprob: -13.795769691467285
    10. 'CHO' → logprob: -13.795769691467285

Token 421: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.42895057797431946
    2. ']' → logprob: -1.053950548171997
    3. ']

' → logprob: -9.803950309753418
    4. ']
' → logprob: -9.928950309753418
    5. '<|end|>' → logprob: -9.928950309753418
    6. '       ' → logprob: -10.053950309753418
    7. 'if' → logprob: -11.553950309753418
    8. '
' → logprob: -11.553950309753418
    9. '   ' → logprob: -12.303950309753418
    10. '<|end|>' → logprob: -12.428950309753418

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22860272228717804
    2. ' if' → logprob: -1.9786027669906616
    3. 'if' → logprob: -3.103602647781372
    4. '
' → logprob: -4.353602886199951
    5. '<|end|>' → logprob: -5.353602886199951
    6. '        
' → logprob: -6.978602886199951
    7. '   ' → logprob: -7.353602886199951
    8. '        ' → logprob: -7.978602886199951
    9. ' ' → logprob: -8.228602409362793
    10. ' 
' → logprob: -8.228602409362793

Token 423: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06298274546861649
    2. 'route' → logprob: -2.8129827976226807
    3. ' if' → logprob: -7.187982559204102
    4. '       ' → logprob: -9.312982559204102
    5. '   ' → logprob: -9.562982559204102
    6. 'i' → logprob: -10.062982559204102
    7. ' route' → logprob: -10.312982559204102
    8. '```' → logprob: -11.312982559204102
    9. 'print' → logprob: -13.437982559204102
    10. '	if' → logprob: -13.562982559204102

Token 424: ' dst' (ID: 23480)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012673631310462952
    2. ' i' → logprob: -4.387673854827881
    3. 'temp' → logprob: -9.137673377990723
    4. '   ' → logprob: -10.262673377990723
    5. ' ' → logprob: -12.137673377990723
    6. '	i' → logprob: -12.137673377990723
    7. '  ' → logprob: -12.512673377990723
    8. ' temp' → logprob: -13.387673377990723
    9. 'route' → logprob: -13.637673377990723
    10. 'src' → logprob: -14.137673377990723

Token 425: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023747000843286514
    2. '==' → logprob: -3.773746967315674
    3. ' !=' → logprob: -7.648746967315674
    4. '!=' → logprob: -11.398747444152832
    5. '[' → logprob: -12.148747444152832
    6. ' ' → logprob: -12.523747444152832
    7. ')' → logprob: -13.273747444152832
    8. ' ' → logprob: -14.648747444152832
    9. ']==' → logprob: -15.023747444152832
    10. ' is' → logprob: -15.148747444152832

Token 426: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00014370749704539776
    2. ' i' → logprob: -8.875144004821777
    3. '   ' → logprob: -13.375144004821777
    4. ' ' → logprob: -13.625144004821777
    5. '  ' → logprob: -14.125144004821777
    6. 'src' → logprob: -15.875144004821777
    7. '	i' → logprob: -15.875144004821777
    8. '    ' → logprob: -17.37514305114746
    9. ' ' → logprob: -17.75014305114746
    10. '```' → logprob: -17.87514305114746

Token 427: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13037773966789246
    2. ' or' → logprob: -2.505377769470215
    3. ' and' → logprob: -3.880377769470215
    4. ':
' → logprob: -4.005377769470215
    5. 'and' → logprob: -6.630377769470215
    6. ':return' → logprob: -8.755377769470215
    7. '   ' → logprob: -9.005377769470215
    8. ' :' → logprob: -9.880377769470215
    9. 'or' → logprob: -10.380377769470215
    10. ' ' → logprob: -11.380377769470215

Token 428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003764535649679601
    2. ' break' → logprob: -8.00037670135498
    3. '       ' → logprob: -10.75037670135498
    4. 'break' → logprob: -12.37537670135498
    5. '   ' → logprob: -12.50037670135498
    6. ':
' → logprob: -13.12537670135498
    7. '	break' → logprob: -13.12537670135498
    8. '		' → logprob: -13.12537670135498
    9. '               ' → logprob: -13.75037670135498
    10. '          ' → logprob: -14.00037670135498

Token 429: ' distance' (ID: 9324)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4191455841064453
    2. ' break' → logprob: -1.1691455841064453
    3. 'break' → logprob: -3.6691455841064453
    4. '           ' → logprob: -5.669145584106445
    5. '	break' → logprob: -6.044145584106445
    6. '   ' → logprob: -8.294145584106445
    7. '	' → logprob: -9.294145584106445
    8. '               ' → logprob: -10.169145584106445
    9. ' ' → logprob: -10.794145584106445
    10. ' ' → logprob: -12.169145584106445

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20145153999328613
    2. '=' → logprob: -1.7014515399932861
    3. ',' → logprob: -11.451451301574707
    4. ' +=' → logprob: -11.826451301574707
    5. '   ' → logprob: -11.951451301574707
    6. '           ' → logprob: -12.201451301574707
    7. '       ' → logprob: -12.451451301574707
    8. '+=' → logprob: -12.451451301574707
    9. ' ' → logprob: -15.701451301574707
    10. 'break' → logprob: -16.076452255249023

Token 431: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4815475642681122
    2. 'temp' → logprob: -1.1065475940704346
    3. ' cost' → logprob: -3.3565475940704346
    4. ' temp' → logprob: -4.1065473556518555
    5. '0' → logprob: -9.856547355651855
    6. '   ' → logprob: -10.106547355651855
    7. ' ' → logprob: -10.606547355651855
    8. '	temp' → logprob: -11.856547355651855
    9. '    ' → logprob: -12.106547355651855
    10. '  ' → logprob: -12.481547355651855

Token 432: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0445127372804563e-05
    2. '       ' → logprob: -12.62501049041748
    3. '		' → logprob: -13.12501049041748
    4. '
' → logprob: -13.62501049041748
    5. '               ' → logprob: -13.87501049041748
    6. '\n' → logprob: -14.25001049041748
    7. ',' → logprob: -14.50001049041748
    8. '.' → logprob: -15.00001049041748
    9. '   ' → logprob: -15.12501049041748
    10. ' break' → logprob: -15.25001049041748

Token 433: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.56364209135063e-05
    2. '       ' → logprob: -9.875065803527832
    3. ' break' → logprob: -11.500065803527832
    4. '   ' → logprob: -13.875065803527832
    5. 'break' → logprob: -14.000065803527832
    6. '               ' → logprob: -14.375065803527832
    7. '		' → logprob: -14.500065803527832
    8. '          ' → logprob: -15.500065803527832
    9. ',' → logprob: -15.500065803527832
    10. '	       ' → logprob: -16.250064849853516

Token 434: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.27767032384872437
    2. '           ' → logprob: -1.7776703834533691
    3. ' break' → logprob: -2.652670383453369
    4. '       ' → logprob: -5.902670383453369
    5. '	break' → logprob: -8.652669906616211
    6. '   ' → logprob: -10.527669906616211
    7. 'return' → logprob: -11.277669906616211
    8. '               ' → logprob: -13.027669906616211
    9. ' ' → logprob: -13.402669906616211
    10. 'route' → logprob: -13.527669906616211

Token 435: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15483109652996063
    2. '
' → logprob: -2.0298311710357666
    3. '<|end|>' → logprob: -4.6548309326171875
    4. '        
' → logprob: -6.7798309326171875
    5. '\n' → logprob: -7.9048309326171875
    6. ' if' → logprob: -8.654830932617188
    7. '' → logprob: -8.779830932617188
    8. '	' → logprob: -9.279830932617188
    9. '   ' → logprob: -9.404830932617188
    10. ' 
' → logprob: -9.654830932617188

Token 436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034835562109947205
    2. '
' → logprob: -4.659835338592529
    3. ' if' → logprob: -4.784835338592529
    4. '        
' → logprob: -5.034835338592529
    5. ' 
' → logprob: -5.909835338592529
    6. '\n' → logprob: -6.909835338592529
    7. '   ' → logprob: -6.909835338592529
    8. '        ' → logprob: -7.159835338592529
    9. ' ' → logprob: -7.159835338592529
    10. ' ' → logprob: -7.409835338592529

Token 437: ' prev' (ID: 10258)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006648818496614695
    2. '       ' → logprob: -5.756649017333984
    3. 'next' → logprob: -6.506649017333984
    4. 'if' → logprob: -7.131649017333984
    5. 'prev' (adapté à ' prev') → logprob: -7.131649017333984
    6. ' i' → logprob: -9.381649017333984
    7. 'n' → logprob: -9.381649017333984
    8. 'j' → logprob: -9.756649017333984
    9. 'route' → logprob: -10.381649017333984
    10. 'p' → logprob: -10.881649017333984

Token 438: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026503480970859528
    2. '=' → logprob: -3.651503562927246
    3. '_i' → logprob: -9.526503562927246
    4. '_' → logprob: -9.776503562927246
    5. '_idx' → logprob: -10.526503562927246
    6. '_node' → logprob: -11.151503562927246
    7. '_pos' → logprob: -12.276503562927246
    8. 'i' → logprob: -12.401503562927246
    9. '_from' → logprob: -12.651503562927246
    10. '_token' → logprob: -13.026503562927246

Token 439: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13604876399040222
    2. ' i' → logprob: -2.1360487937927246
    3. '       ' → logprob: -5.386048793792725
    4. ' =' → logprob: -6.386048793792725
    5. '=' → logprob: -7.261048793792725
    6. '   ' → logprob: -7.511048793792725
    7. '    ' → logprob: -8.011048316955566
    8. 'to' → logprob: -8.386048316955566
    9. 'prev' → logprob: -8.761048316955566
    10. '        ' → logprob: -9.136048316955566

Token 440: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759416818618774
    2. ' =' → logprob: -0.8259416818618774
    3. ',' → logprob: -13.825942039489746
    4. ' ' → logprob: -14.200942039489746
    5. ' ' → logprob: -14.825942039489746
    6. '   ' → logprob: -16.57594108581543
    7. '＝' → logprob: -17.07594108581543
    8. '	' → logprob: -17.32594108581543
    9. '=

' → logprob: -17.57594108581543
    10. '  ' → logprob: -17.70094108581543

Token 441: ' i' (ID: 575)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0007386347278952599
    2. ' temp' → logprob: -7.250738620758057
    3. '   ' → logprob: -11.375739097595215
    4. '	temp' → logprob: -12.250739097595215
    5. 'copy' → logprob: -12.625739097595215
    6. 'i' → logprob: -12.625739097595215
    7. ' ' → logprob: -13.000739097595215
    8. '  ' → logprob: -13.500739097595215
    9. 'tmp' → logprob: -14.125739097595215
    10. '    ' → logprob: -14.250739097595215

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11900485306978226
    2. 'temp' → logprob: -2.994004964828491
    3. ',temp' → logprob: -3.119004964828491
    4. '[temp' → logprob: -4.869004726409912
    5. ' ,' → logprob: -5.119004726409912
    6. ' temp' → logprob: -6.619004726409912
    7. '[' → logprob: -6.869004726409912
    8. ',
' → logprob: -7.244004726409912
    9. '
' → logprob: -8.24400520324707
    10. ',[' → logprob: -8.49400520324707

Token 443: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0003811025235336274
    2. ' temp' → logprob: -7.875380992889404
    3. '   ' → logprob: -14.625381469726562
    4. ' ' → logprob: -15.625381469726562
    5. '	temp' → logprob: -15.875381469726562
    6. 'copy' → logprob: -16.000381469726562
    7. 'tmp' → logprob: -16.000381469726562
    8. '  ' → logprob: -16.625381469726562
    9. 'tem' → logprob: -17.625381469726562
    10. '    ' → logprob: -18.500381469726562

Token 444: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.9266199160483666e-05
    2. '_token' → logprob: -10.875019073486328
    3. 'Node' → logprob: -16.500019073486328
    4. 'Pos' → logprob: -17.125019073486328
    5. '_pos' → logprob: -17.250019073486328
    6. '[node' → logprob: -17.750019073486328
    7. 'node' → logprob: -17.875019073486328
    8. '_NODE' → logprob: -18.125019073486328
    9. 'ode' → logprob: -18.500019073486328
    10. '[' → logprob: -19.125019073486328

Token 445: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.2729995988775045e-06
    2. 'i' → logprob: -12.500006675720215
    3. '[to' → logprob: -13.500006675720215
    4. '[' → logprob: -14.000006675720215
    5. 'to' → logprob: -16.3750057220459
    6. '[temp' → logprob: -17.3750057220459
    7. '```' → logprob: -17.7500057220459
    8. ' i' → logprob: -18.3750057220459
    9. '[now' → logprob: -18.3750057220459
    10. '[I' → logprob: -18.5000057220459

Token 446: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001507405104348436
    2. '[' → logprob: -9.875150680541992
    3. '][' → logprob: -9.875150680541992
    4. '[N' → logprob: -10.125150680541992
    5. '[to' → logprob: -12.125150680541992
    6. '[][' → logprob: -14.250150680541992
    7. '[I' → logprob: -15.125150680541992
    8. ')[' → logprob: -15.250150680541992
    9. ' [' → logprob: -16.000150680541992
    10. '[C' → logprob: -16.125150680541992

Token 447: 'NODE' (ID: 105718)
  Prédit: 'NODE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NODE' → logprob: -0.10035040974617004
    2. 'i' → logprob: -2.3503503799438477
    3. '[N' → logprob: -9.975350379943848
    4. '.NODE' → logprob: -10.725350379943848
    5. ' NODE' → logprob: -10.850350379943848
    6. '[i' → logprob: -10.975350379943848
    7. '[' → logprob: -11.225350379943848
    8. '_NODE' → logprob: -11.350350379943848
    9. 'to' → logprob: -12.725350379943848
    10. '<Node' → logprob: -13.100350379943848

Token 448: '_CH' (ID: 13894)
  Prédit: 'CH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CH' → logprob: -0.19185304641723633
    2. '_CH' → logprob: -1.8168530464172363
    3. '[' → logprob: -4.441853046417236
    4. '_C' → logprob: -9.441852569580078
    5. ' CH' → logprob: -9.441852569580078
    6. '(CH' → logprob: -10.441852569580078
    7. '```' → logprob: -10.941852569580078
    8. 'C' → logprob: -11.316852569580078
    9. '   ' → logprob: -11.941852569580078
    10. '[C' → logprob: -12.066852569580078

Token 449: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -2.057743949990254e-05
    2. '[' → logprob: -11.500020980834961
    3. 'ANGE' → logprob: -12.250020980834961
    4. 'ANGED' → logprob: -13.250020980834961
    5. '_' → logprob: -14.250020980834961
    6. '[G' → logprob: -14.250020980834961
    7. '   ' → logprob: -14.750020980834961
    8. '
' → logprob: -14.875020980834961
    9. '

' → logprob: -15.625020980834961
    10. '```' → logprob: -16.37502098083496

Token 450: '_FROM' (ID: 59766)
  Prédit: '_FROM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FROM' → logprob: -6.885492621222511e-05
    2. 'FROM' → logprob: -9.625068664550781
    3. '[from' → logprob: -13.875068664550781
    4. '[_' → logprob: -14.500068664550781
    5. '	FROM' → logprob: -15.625068664550781
    6. '_from' → logprob: -15.625068664550781
    7. '_TO' → logprob: -15.750068664550781
    8. '```' → logprob: -15.875068664550781
    9. '[' → logprob: -16.25006866455078
    10. 'From' → logprob: -16.25006866455078

Token 451: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019455771893262863
    2. ']
' → logprob: -4.144455909729004
    3. ')' → logprob: -6.394455909729004
    4. '       ' → logprob: -6.644455909729004
    5. '<|end|>' → logprob: -8.769455909729004
    6. ' ]' → logprob: -8.894455909729004
    7. ')]' → logprob: -10.019455909729004
    8. ')
' → logprob: -10.144455909729004
    9. ']

' → logprob: -10.644455909729004
    10. '   ' → logprob: -11.644455909729004

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6681709885597229
    2. '<|end|>' → logprob: -1.1681709289550781
    3. '[' → logprob: -2.543170928955078
    4. '   ' → logprob: -3.543170928955078
    5. ' +' → logprob: -4.543170928955078
    6. ' ' → logprob: -4.793170928955078
    7. '    ' → logprob: -4.793170928955078
    8. ' 
' → logprob: -4.918170928955078
    9. '        ' → logprob: -5.043170928955078
    10. '
' → logprob: -5.543170928955078

Token 453: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' (adapté à ' route') → logprob: -0.17939576506614685
    2. 'if' → logprob: -2.0543956756591797
    3. ' if' → logprob: -4.17939567565918
    4. '       ' → logprob: -4.42939567565918
    5. ' route' → logprob: -4.92939567565918
    6. 'return' → logprob: -6.92939567565918
    7. 'r' → logprob: -8.05439567565918
    8. '   ' → logprob: -9.80439567565918
    9. 'while' → logprob: -10.67939567565918
    10. 'break' → logprob: -10.67939567565918

Token 454: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.015065844170749187
    2. '.insert' → logprob: -4.265065670013428
    3. '.' → logprob: -7.015065670013428
    4. 'append' → logprob: -13.140066146850586
    5. '.clear' → logprob: -14.140066146850586
    6. 'insert' → logprob: -15.015066146850586
    7. ' .' → logprob: -15.265066146850586
    8. '.reverse' → logprob: -15.515066146850586
    9. '.pre' → logprob: -16.265066146850586
    10. '=' → logprob: -16.640066146850586

Token 455: '([' (ID: 5194)
  Prédit: '(prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.4487626254558563
    2. '(i' → logprob: -1.0737626552581787
    3. '((' → logprob: -4.0737624168396
    4. '(copy' → logprob: -6.9487624168396
    5. '([' → logprob: -7.4487624168396
    6. '(temp' → logprob: -7.4487624168396
    7. 'prev' → logprob: -7.9487624168396
    8. '(' → logprob: -8.698762893676758
    9. 'copy' → logprob: -9.823762893676758
    10. '[i' → logprob: -10.323762893676758

Token 456: 'i' (ID: 72)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.2526465058326721
    2. 'i' → logprob: -1.5026464462280273
    3. ' prev' → logprob: -8.252646446228027
    4. ' i' → logprob: -8.877646446228027
    5. 'temp' → logprob: -9.252646446228027
    6. '   ' → logprob: -9.877646446228027
    7. '(prev' → logprob: -10.127646446228027
    8. '(i' → logprob: -10.877646446228027
    9. '	prev' → logprob: -11.565146446228027
    10. 'cost' → logprob: -11.627646446228027

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06873387843370438
    2. '])' → logprob: -2.8187339305877686
    3. ' ,' → logprob: -5.1937336921691895
    4. ' ])' → logprob: -7.1937336921691895
    5. ',
' → logprob: -9.193734169006348
    6. 'prev' → logprob: -9.443734169006348
    7. '])
' → logprob: -9.693734169006348
    8. '+' → logprob: -10.318734169006348
    9. ',c' → logprob: -10.318734169006348
    10. ')' → logprob: -11.068734169006348

Token 458: ' ' (ID: 220)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.34362202882766724
    2. 'temp' → logprob: -1.7186219692230225
    3. 'prev' → logprob: -2.7186219692230225
    4. '0' → logprob: -4.343622207641602
    5. ' cost' → logprob: -4.343622207641602
    6. '1' → logprob: -5.343622207641602
    7. 'None' → logprob: -5.843622207641602
    8. 'distance' → logprob: -5.843622207641602
    9. 'copy' → logprob: -6.093622207641602
    10. '-' → logprob: -6.218622207641602

Token 459: '0' (ID: 15)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.4373556673526764
    2. 'cost' → logprob: -1.062355637550354
    3. '0' → logprob: -5.1873555183410645
    4. '1' → logprob: -7.1873555183410645
    5. 'distance' → logprob: -7.3123555183410645
    6. '-' → logprob: -7.8123555183410645
    7. ' cost' → logprob: -8.312355995178223
    8. ' temp' → logprob: -8.437355995178223
    9. 'copy' → logprob: -8.437355995178223
    10. 'None' → logprob: -8.937355995178223

Token 460: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.09035047888755798
    2. ',' → logprob: -2.465350389480591
    3. ' ])' → logprob: -6.84035062789917
    4. '])
' → logprob: -8.965350151062012
    5. ' ,' → logprob: -9.340350151062012
    6. ']' → logprob: -10.715350151062012
    7. '   ' → logprob: -10.965350151062012
    8. ']);' → logprob: -10.965350151062012
    9. ')' → logprob: -11.215350151062012
    10. ',
' → logprob: -11.715350151062012

Token 461: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 462: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1163043975830078
    2. '    ' → logprob: -1.6163043975830078
    3. '<|end|>' → logprob: -2.366304397583008
    4. ' if' → logprob: -2.491304397583008
    5. 'return' → logprob: -2.991304397583008
    6. ' ' → logprob: -3.241304397583008
    7. '   ' → logprob: -3.366304397583008
    8. '       ' → logprob: -3.491304397583008
    9. 'if' → logprob: -3.616304397583008
    10. '[::-' → logprob: -3.741304397583008

Token 463: ' j' (ID: 441)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.12765705585479736
    2. 'e' → logprob: -2.752656936645508
    3. ' edge' → logprob: -4.877656936645508
    4. 'j' → logprob: -4.877656936645508
    5. 'x' → logprob: -5.002656936645508
    6. 'route' → logprob: -5.002656936645508
    7. 'r' → logprob: -5.502656936645508
    8. 'idx' → logprob: -5.502656936645508
    9. 'k' → logprob: -5.877656936645508
    10. 'node' → logprob: -6.127656936645508

Token 464: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07905370742082596
    2. 'in' → logprob: -2.5790536403656006
    3. ' ' → logprob: -9.70405387878418
    4. '  ' → logprob: -10.32905387878418
    5. ',' → logprob: -10.82905387878418
    6. '[' → logprob: -11.32905387878418
    7. '   ' → logprob: -11.70405387878418
    8. 'range' → logprob: -11.95405387878418
    9. '    ' → logprob: -12.07905387878418
    10. '	in' → logprob: -12.95405387878418

Token 465: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.15875990688800812
    2. ' range' → logprob: -2.033759832382202
    3. 'temp' → logprob: -4.533760070800781
    4. 'route' → logprob: -5.908760070800781
    5. 'product' → logprob: -6.408760070800781
    6. ' temp' → logprob: -8.158760070800781
    7. ' route' → logprob: -9.158760070800781
    8. ' product' → logprob: -9.533760070800781
    9. '[' → logprob: -9.658760070800781
    10. 're' → logprob: -9.908760070800781

Token 466: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.16025570034980774
    2. '(prev' → logprob: -2.4102556705474854
    3. 'len' → logprob: -4.1602559089660645
    4. '(route' → logprob: -4.5352559089660645
    5. '(i' → logprob: -4.6602559089660645
    6. 'prev' → logprob: -4.7852559089660645
    7. '(' → logprob: -5.0352559089660645
    8. '(temp' → logprob: -5.9102559089660645
    9. '(now' → logprob: -6.6602559089660645
    10. '(N' → logprob: -7.1602559089660645

Token 467: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.6579543352127075
    2. '(route' → logprob: -0.7829543352127075
    3. '(product' → logprob: -3.782954216003418
    4. '(now' → logprob: -6.657954216003418
    5. '(' → logprob: -8.157954216003418
    6. 'temp' → logprob: -8.657954216003418
    7. '(edge' → logprob: -8.907954216003418
    8. 'route' → logprob: -9.032954216003418
    9. '(i' → logprob: -10.532954216003418
    10. '(tmp' → logprob: -10.532954216003418

Token 468: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0005906827282160521
    2. '_route' → logprob: -7.625590801239014
    3. '_product' → logprob: -10.000590324401855
    4. 'node' → logprob: -10.625590324401855
    5. '[node' → logprob: -11.625590324401855
    6. '[' → logprob: -12.000590324401855
    7. '_token' → logprob: -12.375590324401855
    8. 'Node' → logprob: -12.750590324401855
    9. 'route' → logprob: -12.875590324401855
    10. ')' → logprob: -13.375590324401855

Token 469: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01873779110610485
    2. '[' → logprob: -4.01873779296875
    3. 'prev' → logprob: -8.26873779296875
    4. 'i' → logprob: -9.14373779296875
    5. '))' → logprob: -10.01873779296875
    6. '[to' → logprob: -10.14373779296875
    7. '[j' → logprob: -10.51873779296875
    8. 'to' → logprob: -11.26873779296875
    9. '[temp' → logprob: -11.26873779296875
    10. ')' → logprob: -11.51873779296875

Token 470: 'prev' (ID: 15969)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6308535933494568
    2. '[i' → logprob: -1.0058536529541016
    3. 'prev' → logprob: -2.7558536529541016
    4. '[' → logprob: -3.5058536529541016
    5. '[temp' → logprob: -5.630853652954102
    6. 'route' → logprob: -6.130853652954102
    7. 'temp' → logprob: -6.380853652954102
    8. '[j' → logprob: -8.880853652954102
    9. ' i' → logprob: -9.130853652954102
    10. '[to' → logprob: -9.255853652954102

Token 471: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20270924270153046
    2. '[N' → logprob: -1.8277091979980469
    3. '[i' → logprob: -4.202709197998047
    4. '[' → logprob: -4.952709197998047
    5. ' ][' → logprob: -8.577709197998047
    6. ']))' → logprob: -8.952709197998047
    7. '])):
' → logprob: -9.827709197998047
    8. ')[' → logprob: -10.077709197998047
    9. '[j' → logprob: -10.577709197998047
    10. 'i' → logprob: -10.827709197998047

Token 472: '0' (ID: 15)
  Prédit: 'NODE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NODE' → logprob: -0.010478315874934196
    2. '0' → logprob: -5.260478496551514
    3. '[N' → logprob: -5.885478496551514
    4. 'prev' → logprob: -6.885478496551514
    5. 'i' → logprob: -7.510478496551514
    6. '1' → logprob: -8.635478019714355
    7. '[' → logprob: -8.885478019714355
    8. 'route' → logprob: -8.885478019714355
    9. 'j' → logprob: -9.260478019714355
    10. 'temp' → logprob: -9.635478019714355

Token 473: '])):
' (ID: 145266)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.6157419085502625
    2. '])):
' → logprob: -1.2407419681549072
    3. '][' → logprob: -1.8657419681549072
    4. '[' → logprob: -4.865741729736328
    5. ']):' → logprob: -5.740741729736328
    6. ']' → logprob: -6.365741729736328
    7. '[i' → logprob: -6.740741729736328
    8. '[j' → logprob: -7.240741729736328
    9. '])-' → logprob: -8.365741729736328
    10. '])' → logprob: -8.365741729736328

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010651958175003529
    2. ' if' → logprob: -5.2606520652771
    3. 'if' → logprob: -5.3856520652771
    4. '       ' → logprob: -7.6356520652771
    5. '   ' → logprob: -8.635651588439941
    6. '               ' → logprob: -9.135651588439941
    7. '	       ' → logprob: -10.885651588439941
    8. '<|end|>' → logprob: -11.760651588439941
    9. '		' → logprob: -11.885651588439941
    10. ' ' → logprob: -12.260651588439941

Token 475: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.055781811475753784
    2. '           ' → logprob: -2.930781841278076
    3. ' if' → logprob: -7.180781841278076
    4. '   ' → logprob: -9.430781364440918
    5. '               ' → logprob: -10.430781364440918
    6. 'to' → logprob: -11.680781364440918
    7. '       ' → logprob: -11.805781364440918
    8. '	if' → logprob: -11.805781364440918
    9. ' ' → logprob: -13.055781364440918
    10. 'If' → logprob: -14.555781364440918

Token 476: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.002204378368332982
    2. ' temp' → logprob: -6.127204418182373
    3. '   ' → logprob: -11.377203941345215
    4. '  ' → logprob: -13.252203941345215
    5. ' ' → logprob: -13.377203941345215
    6. 'tmp' → logprob: -14.002203941345215
    7. 'route' → logprob: -14.002203941345215
    8. '	temp' → logprob: -14.127203941345215
    9. '(temp' → logprob: -14.377203941345215
    10. 'es' → logprob: -15.252203941345215

Token 477: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -8.77627644513268e-06
    2. '_token' → logprob: -11.875008583068848
    3. '[node' → logprob: -14.375008583068848
    4. 'node' → logprob: -15.250008583068848
    5. '[i' → logprob: -15.375008583068848
    6. '           ' → logprob: -15.625008583068848
    7. '[' → logprob: -15.750008583068848
    8. '```' → logprob: -16.875009536743164
    9. '               ' → logprob: -17.125009536743164
    10. '   ' → logprob: -17.250009536743164

Token 478: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010235115041723475
    2. 'prev' → logprob: -9.875102043151855
    3. '[i' → logprob: -10.125102043151855
    4. 'i' → logprob: -13.000102043151855
    5. '           ' → logprob: -13.125102043151855
    6. ' [' → logprob: -13.875102043151855
    7. '   ' → logprob: -14.250102043151855
    8. '```' → logprob: -14.250102043151855
    9. ' ' → logprob: -14.625102043151855
    10. '       ' → logprob: -14.625102043151855

Token 479: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0024264329113066196
    2. 'i' → logprob: -6.127426624298096
    3. '[' → logprob: -8.377426147460938
    4. ' prev' → logprob: -12.377426147460938
    5. 'j' → logprob: -13.127426147460938
    6. '	prev' → logprob: -13.502426147460938
    7. '[i' → logprob: -13.752426147460938
    8. '(prev' → logprob: -14.127426147460938
    9. 'temp' → logprob: -14.752426147460938
    10. 'pre' → logprob: -14.877426147460938

Token 480: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.31552571058273315
    2. '[' → logprob: -1.315525770187378
    3. '[j' → logprob: -6.940525531768799
    4. '[N' → logprob: -7.315525531768799
    5. '[node' → logprob: -9.565526008605957
    6. ' [' → logprob: -9.815526008605957
    7. '   ' → logprob: -9.815526008605957
    8. '[][' → logprob: -9.815526008605957
    9. ' ][' → logprob: -9.815526008605957
    10. ']' → logprob: -9.940526008605957

Token 481: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03932231292128563
    2. '[' → logprob: -3.6643223762512207
    3. 'NODE' → logprob: -4.789322376251221
    4. 'j' → logprob: -6.414322376251221
    5. 'prev' → logprob: -6.539322376251221
    6. '[j' → logprob: -7.289322376251221
    7. '[N' → logprob: -8.539321899414062
    8. ' ' → logprob: -9.289321899414062
    9. '
' → logprob: -9.414321899414062
    10. '][' → logprob: -9.539321899414062

Token 482: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.05785207077860832
    2. '][' → logprob: -2.932852029800415
    3. '[' → logprob: -6.057852268218994
    4. ' [' → logprob: -8.557851791381836
    5. '[i' → logprob: -8.682851791381836
    6. '           ' → logprob: -9.807851791381836
    7. '   ' → logprob: -9.807851791381836
    8. '```' → logprob: -10.682851791381836
    9. ')[' → logprob: -10.932851791381836
    10. '       ' → logprob: -11.182851791381836

Token 483: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.4391956685576588e-05
    2. '[j' → logprob: -11.375024795532227
    3. ' j' → logprob: -11.750024795532227
    4. 'i' → logprob: -13.625024795532227
    5. '	j' → logprob: -13.750024795532227
    6. '   ' → logprob: -14.250024795532227
    7. '0' → logprob: -14.875024795532227
    8. '
' → logprob: -14.875024795532227
    9. 'to' → logprob: -15.125024795532227
    10. '```' → logprob: -15.750024795532227

Token 484: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06204532831907272
    2. '][' → logprob: -2.8120453357696533
    3. '   ' → logprob: -11.187045097351074
    4. '==' → logprob: -11.312045097351074
    5. ' [' → logprob: -11.562045097351074
    6. ' ==' → logprob: -12.187045097351074
    7. '0' → logprob: -12.312045097351074
    8. '
' → logprob: -12.687045097351074
    9. 'and' → logprob: -12.812045097351074
    10. ')[' → logprob: -13.187045097351074

Token 485: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -13.125005722045898
    3. '1' → logprob: -13.250005722045898
    4. '[' → logprob: -14.687505722045898
    5. 'to' → logprob: -14.937505722045898
    6. '
' → logprob: -15.312505722045898
    7. '   ' → logprob: -15.625005722045898
    8. '```' → logprob: -15.812505722045898
    9. '2' → logprob: -16.3750057220459
    10. '۰' → logprob: -16.5000057220459

Token 486: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7015027403831482
    2. ' ==' → logprob: -0.8265027403831482
    3. ']' → logprob: -3.076502799987793
    4. '[' → logprob: -4.326502799987793
    5. ']==' → logprob: -4.951502799987793
    6. '][' → logprob: -9.326502799987793
    7. '[]' → logprob: -10.951502799987793
    8. ')' → logprob: -11.326502799987793
    9. ' ' → logprob: -11.326502799987793
    10. ' ]' → logprob: -11.326502799987793

Token 487: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2017865628004074
    2. ' ==' → logprob: -1.9517865180969238
    3. '[' → logprob: -3.201786518096924
    4. ']==' → logprob: -12.076786994934082
    5. '[i' → logprob: -12.076786994934082
    6. '==
' → logprob: -13.326786994934082
    7. '   ' → logprob: -13.451786994934082
    8. '!=' → logprob: -13.951786994934082
    9. '==(' → logprob: -13.951786994934082
    10. ' ' → logprob: -14.201786994934082

Token 488: ' route' (ID: 9656)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00023858259373810142
    2. ' i' → logprob: -8.625238418579102
    3. 'route' → logprob: -10.375238418579102
    4. 'temp' → logprob: -11.000238418579102
    5. '   ' → logprob: -12.250238418579102
    6. '  ' → logprob: -12.625238418579102
    7. ' ' → logprob: -14.000238418579102
    8. '	i' → logprob: -14.000238418579102
    9. 'prev' → logprob: -14.250238418579102
    10. ' route' → logprob: -15.125238418579102

Token 489: '[r' (ID: 33265)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.275086909532547
    2. '[i' → logprob: -1.6500868797302246
    3. '[r' → logprob: -3.9000868797302246
    4. 'r' → logprob: -4.150086879730225
    5. 'i' → logprob: -4.525086879730225
    6. '[' → logprob: -6.650086879730225
    7. '[len' → logprob: -9.650087356567383
    8. 'prev' → logprob: -9.775087356567383
    9. '   ' → logprob: -10.650087356567383
    10. ' i' → logprob: -10.650087356567383

Token 490: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -5.200166469876422e-06
    2. 'um' → logprob: -13.250004768371582
    3. ' num' → logprob: -14.250004768371582
    4. '[-' → logprob: -14.625004768371582
    5. '   ' → logprob: -14.750004768371582
    6. '[num' → logprob: -14.875004768371582
    7. '-' → logprob: -15.125004768371582
    8. '	num' → logprob: -15.500004768371582
    9. 'len' → logprob: -15.625004768371582
    10. '```' → logprob: -15.875004768371582

Token 491: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013972385786473751
    2. '][-' → logprob: -4.513972282409668
    3. '[' → logprob: -6.138972282409668
    4. '[-' → logprob: -8.013972282409668
    5. '-' → logprob: -8.013972282409668
    6. ' ][' → logprob: -9.763972282409668
    7. ' -' → logprob: -11.138972282409668
    8. '[i' → logprob: -12.138972282409668
    9. ']' → logprob: -12.388972282409668
    10. '+' → logprob: -12.388972282409668

Token 492: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013896391028538346
    2. '1' → logprob: -6.626389503479004
    3. ' ' → logprob: -9.876389503479004
    4. 'i' → logprob: -12.001389503479004
    5. '   ' → logprob: -13.501389503479004
    6. 'to' → logprob: -14.001389503479004
    7. '
' → logprob: -14.188889503479004
    8. '-' → logprob: -14.251389503479004
    9. '[' → logprob: -14.313889503479004
    10. '  ' → logprob: -14.438889503479004

Token 493: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.48894038796424866
    2. ']:
' → logprob: -1.1139403581619263
    3. ']' → logprob: -3.113940477371216
    4. ' ]' → logprob: -4.738940238952637
    5. ' and' → logprob: -5.988940238952637
    6. ':' → logprob: -6.613940238952637
    7. '           ' → logprob: -8.363940238952637
    8. ']:

' → logprob: -8.363940238952637
    9. ']:
' → logprob: -8.488940238952637
    10. ':
' → logprob: -8.613940238952637

Token 494: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16263650357723236
    2. '               ' → logprob: -2.2876365184783936
    3. ':
' → logprob: -3.6626365184783936
    4. ' and' → logprob: -3.9126365184783936
    5. '           ' → logprob: -6.5376362800598145
    6. ':return' → logprob: -7.6626362800598145
    7. ' :' → logprob: -8.287636756896973
    8. ',' → logprob: -9.162636756896973
    9. '                       ' → logprob: -9.162636756896973
    10. '<|end|>' → logprob: -9.287636756896973

Token 495: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' (adapté à ' route') → logprob: -0.02030688151717186
    2. ' route' → logprob: -4.1453070640563965
    3. 'cost' → logprob: -6.1453070640563965
    4. '               ' → logprob: -6.6453070640563965
    5. '                   ' → logprob: -8.270306587219238
    6. ' cost' → logprob: -8.770306587219238
    7. '           ' → logprob: -8.895306587219238
    8. 'break' → logprob: -9.020306587219238
    9. 'temp' → logprob: -10.395306587219238
    10. '                ' → logprob: -11.395306587219238

Token 496: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.6047699318733066e-05
    2. '[' → logprob: -11.875016212463379
    3. ' [' → logprob: -12.625016212463379
    4. '][' → logprob: -13.125016212463379
    5. '[j' → logprob: -13.250016212463379
    6. '```' → logprob: -15.125016212463379
    7. '
' → logprob: -15.500016212463379
    8. '[row' → logprob: -15.625016212463379
    9. '[
' → logprob: -15.750016212463379
    10. '[m' → logprob: -15.875016212463379

Token 497: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -9.088346359931165e-07
    2. 'um' → logprob: -14.125000953674316
    3. '[num' → logprob: -17.375
    4. ' num' → logprob: -17.875
    5. '_num' → logprob: -19.125
    6. '	num' → logprob: -19.25
    7. 'Num' → logprob: -20.125
    8. 'nu' → logprob: -20.625
    9. 'NUM' → logprob: -21.0
    10. '   ' → logprob: -21.25

Token 498: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005745976231992245
    2. ']' → logprob: -8.250575065612793
    3. ' ][' → logprob: -8.500575065612793
    4. '[' → logprob: -9.250575065612793
    5. '][-' → logprob: -12.000575065612793
    6. ']][' → logprob: -13.500575065612793
    7. '"][' → logprob: -13.625575065612793
    8. ' ' → logprob: -14.125575065612793
    9. '][]' → logprob: -14.250575065612793
    10. ''][' → logprob: -14.500575065612793

Token 499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. '][' → logprob: -12.125011444091797
    3. ' ' → logprob: -12.500011444091797
    4. '0' → logprob: -14.125011444091797
    5. ']' → logprob: -14.125011444091797
    6. '   ' → logprob: -16.125011444091797
    7. 'route' → logprob: -16.375011444091797
    8. '
' → logprob: -16.500011444091797
    9. '' → logprob: -17.500011444091797
    10. '2' → logprob: -17.812511444091797

Token 500: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5875647664070129
    2. '=' → logprob: -1.0875647068023682
    3. ']' → logprob: -2.837564706802368
    4. ' +=' → logprob: -3.212564706802368
    5. '+=' → logprob: -5.587564945220947
    6. ']+=' → logprob: -6.462564945220947
    7. '+' → logprob: -6.837564945220947
    8. ']=' → logprob: -6.837564945220947
    9. ' ]' → logprob: -7.337564945220947
    10. ')' → logprob: -9.462564468383789

Token 501: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5762773752212524
    2. '=' → logprob: -0.8262773752212524
    3. ' +=' → logprob: -8.576277732849121
    4. '+=' → logprob: -8.826277732849121
    5. ' ' → logprob: -14.076277732849121
    6. ',' → logprob: -14.576277732849121
    7. '+' → logprob: -14.701277732849121
    8. ' ' → logprob: -16.076276779174805
    9. '=int' → logprob: -16.451276779174805
    10. '    ' → logprob: -16.826276779174805

Token 502: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.004804261028766632
    2. ' temp' → logprob: -5.3798041343688965
    3. '   ' → logprob: -9.629804611206055
    4. 'copy' → logprob: -10.504804611206055
    5. '1' → logprob: -10.879804611206055
    6. ' ' → logprob: -10.879804611206055
    7. 'tmp' → logprob: -11.004804611206055
    8. 'cost' → logprob: -11.379804611206055
    9. '  ' → logprob: -12.004804611206055
    10. '	temp' → logprob: -12.504804611206055

Token 503: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.816093228830141e-06
    2. '_token' → logprob: -13.62500286102295
    3. '_cost' → logprob: -14.50000286102295
    4. '_temp' → logprob: -15.25000286102295
    5. 'node' → logprob: -15.37500286102295
    6. '[node' → logprob: -15.87500286102295
    7. 'cost' → logprob: -16.125001907348633
    8. '_NODE' → logprob: -16.375001907348633
    9. 'temp' → logprob: -17.250001907348633
    10. 'Node' → logprob: -17.375001907348633

Token 504: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004095377866178751
    2. 'prev' → logprob: -5.504095554351807
    3. '[i' → logprob: -12.129095077514648
    4. 'i' → logprob: -12.504095077514648
    5. '_prev' → logprob: -12.504095077514648
    6. '	prev' → logprob: -13.754095077514648
    7. '(prev' → logprob: -13.879095077514648
    8. ' prev' → logprob: -14.004095077514648
    9. '```' → logprob: -14.504095077514648
    10. '[temp' → logprob: -15.754095077514648

Token 505: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -2.2842308680992573e-05
    2. 'i' → logprob: -10.750022888183594
    3. '[' → logprob: -14.000022888183594
    4. ' prev' → logprob: -14.875022888183594
    5. '	prev' → logprob: -16.625022888183594
    6. '
' → logprob: -17.375022888183594
    7. '(prev' → logprob: -17.875022888183594
    8. '[i' → logprob: -19.750022888183594
    9. '```' → logprob: -20.500022888183594
    10. '.prev' → logprob: -20.625022888183594

Token 506: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017119476106017828
    2. '][' → logprob: -6.376711845397949
    3. 'prev' → logprob: -12.87671184539795
    4. '```' → logprob: -13.37671184539795
    5. '0' → logprob: -13.87671184539795
    6. '[N' → logprob: -14.25171184539795
    7. ' [' → logprob: -14.50171184539795
    8. '   ' → logprob: -15.00171184539795
    9. '[][' → logprob: -15.00171184539795
    10. 'def' → logprob: -15.00171184539795

Token 507: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.727905979962088e-05
    2. '[' → logprob: -10.12504768371582
    3. 'NODE' → logprob: -12.37504768371582
    4. '
' → logprob: -13.00004768371582
    5. ' ' → logprob: -14.75004768371582
    6. '   ' → logprob: -15.75004768371582
    7. 'i' → logprob: -16.62504768371582
    8. '[N' → logprob: -17.37504768371582
    9. '```' → logprob: -17.75004768371582
    10. '
' → logprob: -18.00004768371582

Token 508: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004789191763848066
    2. '[j' → logprob: -5.879789352416992
    3. '[' → logprob: -6.254789352416992
    4. ' ][' → logprob: -11.004789352416992
    5. ']' → logprob: -11.129789352416992
    6. '```' → logprob: -11.879789352416992
    7. '[i' → logprob: -12.004789352416992
    8. '}[' → logprob: -12.004789352416992
    9. '[][' → logprob: -13.629789352416992
    10. 'j' → logprob: -13.754789352416992

Token 509: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.18738269805908203
    2. '0' → logprob: -1.937382698059082
    3. '[' → logprob: -4.187382698059082
    4. '[j' → logprob: -4.562382698059082
    5. '][' → logprob: -7.687382698059082
    6. '
' → logprob: -8.062382698059082
    7. 'prev' → logprob: -8.937382698059082
    8. '```' → logprob: -9.812382698059082
    9. ' j' → logprob: -9.937382698059082
    10. 'i' → logprob: -10.437382698059082

Token 510: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.590104698669165e-05
    2. ']' → logprob: -9.750085830688477
    3. ' ][' → logprob: -11.125085830688477
    4. '[' → logprob: -11.375085830688477
    5. ']][' → logprob: -14.750085830688477
    6. '   ' → logprob: -15.625085830688477
    7. '"][' → logprob: -15.875085830688477
    8. ']
' → logprob: -16.000085830688477
    9. '1' → logprob: -16.125085830688477
    10. ''][' → logprob: -16.500085830688477

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002581209992058575
    2. '][' → logprob: -8.750258445739746
    3. '[' → logprob: -9.375258445739746
    4. ' ' → logprob: -11.875258445739746
    5. ']' → logprob: -12.625258445739746
    6. '
' → logprob: -13.500258445739746
    7. '   ' → logprob: -13.750258445739746
    8. '2' → logprob: -15.500258445739746
    9. ')[' → logprob: -15.625258445739746
    10. '')[' → logprob: -15.875258445739746

Token 512: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 513: '       ' (ID: 309)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002504793694242835
    2. '       ' → logprob: -6.377504825592041
    3. '<|end|>' → logprob: -8.127504348754883
    4. '
' → logprob: -8.377504348754883
    5. '                
' → logprob: -10.252504348754883
    6. '[r' → logprob: -10.252504348754883
    7. '```' → logprob: -10.252504348754883
    8. '<|end|>' → logprob: -10.752504348754883
    9. '                   ' → logprob: -10.877504348754883
    10. ',' → logprob: -11.002504348754883

Token 514: ' distance' (ID: 9324)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6392940282821655
    2. 'r' → logprob: -0.7642940282821655
    3. ' r' → logprob: -5.889294147491455
    4. '   ' → logprob: -6.639294147491455
    5. '+' → logprob: -6.764294147491455
    6. '++' → logprob: -8.139293670654297
    7. '+r' → logprob: -8.514293670654297
    8. '	r' → logprob: -8.889293670654297
    9. 'n' → logprob: -9.014293670654297
    10. ',r' → logprob: -9.014293670654297

Token 515: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.19361482560634613
    2. ' =' → logprob: -2.4436147212982178
    3. '=' → logprob: -2.9436147212982178
    4. ',' → logprob: -4.318614959716797
    5. '<|end|>' → logprob: -4.318614959716797
    6. '+=' → logprob: -5.318614959716797
    7. '+' → logprob: -6.568614959716797
    8. ' +' → logprob: -6.818614959716797
    9. ' -=' → logprob: -6.943614959716797
    10. ')' → logprob: -7.693614959716797

Token 516: ' route' (ID: 9656)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.0518990755081177
    2. 'cost' → logprob: -1.0518990755081177
    3. ' cost' → logprob: -2.051898956298828
    4. ' temp' → logprob: -2.176898956298828
    5. 'route' → logprob: -3.051898956298828
    6. ' route' → logprob: -4.551898956298828
    7. '1' → logprob: -7.426898956298828
    8. '0' → logprob: -7.676898956298828
    9. ' ' → logprob: -7.926898956298828
    10. 'edge' → logprob: -10.551898956298828

Token 517: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.00000286102295
    3. ' [' → logprob: -15.00000286102295
    4. '[-' → logprob: -15.25000286102295
    5. '[i' → logprob: -17.500003814697266
    6. '[n' → logprob: -18.875003814697266
    7. '   ' → logprob: -19.000003814697266
    8. '(r' → logprob: -19.875003814697266
    9. '[l' → logprob: -20.125003814697266
    10. '[len' → logprob: -20.125003814697266

Token 518: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0012836871901527047
    2. '[r' → logprob: -6.751283645629883
    3. '[num' → logprob: -9.251283645629883
    4. 'r' → logprob: -11.626283645629883
    5. '_num' → logprob: -13.001283645629883
    6. 'Num' → logprob: -13.376283645629883
    7. 'um' → logprob: -14.001283645629883
    8. 'nums' → logprob: -14.001283645629883
    9. ' num' → logprob: -14.126283645629883
    10. '	num' → logprob: -14.501283645629883

Token 519: '][' (ID: 2696)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0027883611619472504
    2. '[' → logprob: -6.627788543701172
    3. '][' → logprob: -6.627788543701172
    4. ' [' → logprob: -9.127788543701172
    5. ' ][' → logprob: -11.002788543701172
    6. '   ' → logprob: -12.377788543701172
    7. ']' → logprob: -13.127788543701172
    8. '[t' → logprob: -14.377788543701172
    9. '[s' → logprob: -14.627788543701172
    10. '[n' → logprob: -14.627788543701172

Token 520: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.682846287731081e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.250066757202148
    4. '[' → logprob: -15.375066757202148
    5. '
' → logprob: -16.50006675720215
    6. '0' → logprob: -16.62506675720215
    7. '```' → logprob: -17.50006675720215
    8. '

' → logprob: -18.12506675720215
    9. '１' → logprob: -18.12506675720215
    10. ' [' → logprob: -18.25006675720215

Token 521: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03171917051076889
    2. '<|end|>' → logprob: -4.781719207763672
    3. '
' → logprob: -4.906719207763672
    4. '\n' → logprob: -5.656719207763672
    5. '[r' → logprob: -6.281719207763672
    6. '+' → logprob: -6.406719207763672
    7. '   ' → logprob: -6.406719207763672
    8. 'r' → logprob: -6.781719207763672
    9. '        
' → logprob: -7.031719207763672
    10. ' ' → logprob: -7.031719207763672

Token 523: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0007316163973882794
    2. ' r' → logprob: -7.250731468200684
    3. '       ' → logprob: -11.000731468200684
    4. '   ' → logprob: -13.250731468200684
    5. '	r' → logprob: -13.625731468200684
    6. ',r' → logprob: -14.375731468200684
    7. ',' → logprob: -15.250731468200684
    8. '[r' → logprob: -15.750731468200684
    9. 'route' → logprob: -15.750731468200684
    10. '+r' → logprob: -15.875731468200684

Token 524: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -7.672236824873835e-05
    2. 'um' → logprob: -9.750076293945312
    3. 'u' → logprob: -11.125076293945312
    4. ' num' → logprob: -13.250076293945312
    5. '_num' → logprob: -14.375076293945312
    6. 'a' → logprob: -14.375076293945312
    7. 'n' → logprob: -14.875076293945312
    8. 'nu' → logprob: -15.250076293945312
    9. '	num' → logprob: -16.750076293945312
    10. 'un' → logprob: -17.250076293945312

Token 525: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20141908526420593
    2. '+=' → logprob: -1.7014191150665283
    3. '+' → logprob: -12.82641887664795
    4. '=' → logprob: -12.95141887664795
    5. ' -=' → logprob: -15.32641887664795
    6. ']+=' → logprob: -15.45141887664795
    7. ' +' → logprob: -16.326419830322266
    8. '++' → logprob: -16.451419830322266
    9. '   ' → logprob: -16.701419830322266
    10. '+='' → logprob: -17.201419830322266

Token 526: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.12509536743164
    4. '+' → logprob: -19.00009536743164
    5. '１' → logprob: -19.31259536743164
    6. '  ' → logprob: -19.50009536743164
    7. '```' → logprob: -19.50009536743164
    8. '۱' → logprob: -20.12509536743164
    9. '<|end|>' → logprob: -20.31259536743164
    10. '       ' → logprob: -20.68759536743164

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.375019073486328
    4. '```' → logprob: -18.000019073486328
    5. '１' → logprob: -18.062519073486328
    6. '+' → logprob: -18.937519073486328
    7. '
' → logprob: -19.187519073486328
    8. '  ' → logprob: -19.500019073486328
    9. '۱' → logprob: -19.500019073486328
    10. '0' → logprob: -19.750019073486328

Token 528: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 530: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 531: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.1128983348608017
    2. 'distance' → logprob: -2.237898349761963
    3. '(distance' → logprob: -10.112897872924805
    4. ' None' → logprob: -11.487897872924805
    5. ' route' → logprob: -11.737897872924805
    6. ' ' → logprob: -11.987897872924805
    7. 'None' → logprob: -12.237897872924805
    8. ' cost' → logprob: -13.112897872924805
    9. ' ' → logprob: -13.487897872924805
    10. ' (' → logprob: -14.862897872924805

Token 532: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0482475757598877
    2. '<|end|>' → logprob: -1.4232475757598877
    3. ' ' → logprob: -1.6732475757598877
    4. '[' → logprob: -1.7982475757598877
    5. '
' → logprob: -3.9232475757598877
    6. ',' → logprob: -4.423247337341309
    7. '   ' → logprob: -6.048247337341309
    8. '.' → logprob: -6.173247337341309
    9. '=' → logprob: -6.173247337341309
    10. '+' → logprob: -6.298247337341309

Token 533: 'route' (ID: 10466)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.882183849811554
    2. '[' → logprob: -1.2571837902069092
    3. ')' → logprob: -1.6321837902069092
    4. ',' → logprob: -3.382183790206909
    5. '   ' → logprob: -3.882183790206909
    6. '=' → logprob: -4.507184028625488
    7. '_' → logprob: -4.757184028625488
    8. 'r' → logprob: -5.757184028625488
    9. ' )' → logprob: -5.757184028625488
    10. '    ' → logprob: -5.882184028625488

Token 534: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 535: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -9.674858301877975e-05
    2. ' []' → logprob: -9.250096321105957
    3. '[]
' → logprob: -15.000096321105957
    4. '[' → logprob: -16.000097274780273
    5. '[]}' → logprob: -16.125097274780273
    6. '[][]' → logprob: -17.750097274780273
    7. '[],' → logprob: -18.250097274780273
    8. '[]

' → logprob: -18.500097274780273
    9. '[]"' → logprob: -19.250097274780273
    10. '[]>' → logprob: -19.375097274780273

Token 536: 'def' (ID: 1314)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.14180313050746918
    2. 'product' → logprob: -2.516803026199341
    3. 'V' → logprob: -3.016803026199341
    4. 'es' → logprob: -6.64180326461792
    5. '#' → logprob: -8.141802787780762
    6. 'src' → logprob: -8.266802787780762
    7. 'def' → logprob: -8.766802787780762
    8. 'products' → logprob: -9.391802787780762
    9. 'global' → logprob: -9.516802787780762
    10. 'tmp' → logprob: -9.766802787780762

Token 537: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6823760271072388
    2. ' get' → logprob: -1.3073760271072388
    3. 'main' → logprob: -2.682375907897949
    4. 'get' → logprob: -2.932375907897949
    5. ' add' → logprob: -4.307375907897949
    6. ' dfs' → logprob: -4.682375907897949
    7. ' calculate' → logprob: -4.682375907897949
    8. ' find' → logprob: -4.807375907897949
    9. ' solve' → logprob: -4.807375907897949
    10. ' calc' → logprob: -4.932375907897949

Token 538: 'Target' (ID: 7889)
  Prédit: 'Distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Distance' → logprob: -0.025196349248290062
    2. '_distance' → logprob: -4.775196552276611
    3. 'Product' → logprob: -5.150196552276611
    4. 'Route' → logprob: -5.775196552276611
    5. 'Next' → logprob: -5.775196552276611
    6. 'Cost' → logprob: -6.900196552276611
    7. 'Position' → logprob: -8.150196075439453
    8. 'Delivery' → logprob: -8.400196075439453
    9. 'Total' → logprob: -8.525196075439453
    10. 'Shortest' → logprob: -8.650196075439453

Token 539: 'Pos' (ID: 3501)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41822555661201477
    2. 'Product' → logprob: -2.2932255268096924
    3. 'Pos' → logprob: -2.4182255268096924
    4. '():' → logprob: -2.6682255268096924
    5. 'Position' → logprob: -3.2932255268096924
    6. ' (' → logprob: -4.1682257652282715
    7. 'Token' → logprob: -4.4182257652282715
    8. '(token' → logprob: -5.7932257652282715
    9. ' ():' → logprob: -6.4182257652282715
    10. '(Position' → logprob: -6.5432257652282715

Token 540: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.06974711269140244
    2. '(src' → logprob: -3.06974720954895
    3. '():' → logprob: -5.069746971130371
    4. '(' → logprob: -5.069746971130371
    5. '(pos' → logprob: -5.694746971130371
    6. ' (' → logprob: -6.194746971130371
    7. '(target' → logprob: -6.944746971130371
    8. '(start' → logprob: -7.819746971130371
    9. ' ():' → logprob: -8.069746971130371
    10. '(source' → logprob: -8.444746971130371

Token 541: '_pos' (ID: 14692)
  Prédit: 'Pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.044578779488801956
    2. 'Token' → logprob: -4.294578552246094
    3. ')' → logprob: -4.669578552246094
    4. '(' → logprob: -4.794578552246094
    5. '   ' → logprob: -6.044578552246094
    6. '):' → logprob: -6.044578552246094
    7. 'Target' → logprob: -6.169578552246094
    8. '  ' → logprob: -6.919578552246094
    9. ' ' → logprob: -7.544578552246094
    10. 'Position' → logprob: -7.669578552246094

Token 542: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012189284898340702
    2. ',' → logprob: -7.251218795776367
    3. '):
' → logprob: -8.376218795776367
    4. ')' → logprob: -8.376218795776367
    5. ':' → logprob: -10.876218795776367
    6. '():' → logprob: -11.501218795776367
    7. ' ):' → logprob: -11.501218795776367
    8. '=' → logprob: -13.501218795776367
    9. '[]):' → logprob: -13.751218795776367
    10. '):
' → logprob: -14.001218795776367

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004971762653440237
    2. ' global' → logprob: -6.504971981048584
    3. ' for' → logprob: -6.629971981048584
    4. '    
' → logprob: -6.754971981048584
    5. '
' → logprob: -8.004971504211426
    6. ' return' → logprob: -9.129971504211426
    7. ' if' → logprob: -9.254971504211426
    8. 'global' → logprob: -9.754971504211426
    9. '   ' → logprob: -9.879971504211426
    10. 'for' → logprob: -10.129971504211426

Token 544: ' global' (ID: 5466)
  Prédit: ' global'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' global' → logprob: -0.6053763628005981
    2. '   ' → logprob: -1.9803763628005981
    3. ' target' → logprob: -2.1053762435913086
    4. ' for' → logprob: -2.4803762435913086
    5. 'global' (adapté à ' global') → logprob: -3.8553762435913086
    6. ' min' → logprob: -4.105376243591309
    7. 'target' → logprob: -4.230376243591309
    8. ' candidates' → logprob: -4.355376243591309
    9. ' targets' → logprob: -4.480376243591309
    10. 'for' → logprob: -4.855376243591309

Token 545: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.3784031569957733
    2. ' route' → logprob: -1.5034031867980957
    3. 'product' → logprob: -3.1284031867980957
    4. 'route' → logprob: -3.2534031867980957
    5. ' V' → logprob: -5.378403186798096
    6. ' temp' → logprob: -6.628403186798096
    7. 'V' → logprob: -6.753403186798096
    8. ' target' → logprob: -7.503403186798096
    9. ' now' → logprob: -8.003402709960938
    10. 'temp' → logprob: -8.003402709960938

Token 546: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: ' pos' (ID: 1253)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.4901537299156189
    2. 'temp' → logprob: -1.7401537895202637
    3. ' route' → logprob: -2.1151537895202637
    4. 'V' → logprob: -3.2401537895202637
    5. ' temp' → logprob: -3.9901537895202637
    6. ' V' → logprob: -4.115153789520264
    7. 'product' → logprob: -4.740153789520264
    8. ' product' → logprob: -5.865153789520264
    9. 'es' → logprob: -6.115153789520264
    10. 'now' → logprob: -6.615153789520264

Token 548: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8450990319252014
    2. ',' → logprob: -1.3450989723205566
    3. '
' → logprob: -1.4700989723205566
    4. '    
' → logprob: -4.095098972320557
    5. 's' → logprob: -4.220098972320557
    6. '[' → logprob: -4.345098972320557
    7. '_idx' → logprob: -5.220098972320557
    8. ' =' → logprob: -5.345098972320557
    9. ',
' → logprob: -5.470098972320557
    10. '_list' → logprob: -6.220098972320557

Token 549: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -1.0839629173278809
    2. ' route' → logprob: -1.7089629173278809
    3. 'V' → logprob: -2.208962917327881
    4. 'temp' → logprob: -2.208962917327881
    5. ' V' → logprob: -2.833962917327881
    6. ' temp' → logprob: -3.458962917327881
    7. 'product' → logprob: -3.958962917327881
    8. 'target' → logprob: -3.958962917327881
    9. 'now' → logprob: -4.083962917327881
    10. ' product' → logprob: -4.208962917327881

Token 550: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10653703659772873
    2. ':' → logprob: -3.356537103652954
    3. ',' → logprob: -4.106536865234375
    4. '[' → logprob: -4.231536865234375
    5. '
' → logprob: -4.481536865234375
    6. '<|end|>' → logprob: -4.731536865234375
    7. '    
' → logprob: -5.231536865234375
    8. ':
' → logprob: -5.481536865234375
    9. '[]' → logprob: -6.606536865234375
    10. '(' → logprob: -7.981536865234375

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02352113649249077
    2. '
' → logprob: -4.1485209465026855
    3. '    
' → logprob: -5.6485209465026855
    4. ':' → logprob: -6.2735209465026855
    5. ',' → logprob: -7.2735209465026855
    6. ':
' → logprob: -7.5235209465026855
    7. '<|end|>' → logprob: -7.8985209465026855
    8. '  
' → logprob: -9.523521423339844
    9. 'for' → logprob: -10.023521423339844
    10. '[' → logprob: -10.523521423339844

Token 552: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.80271977186203
    2. '
' → logprob: -1.1777198314666748
    3. ' if' → logprob: -2.802719831466675
    4. 'if' → logprob: -3.802719831466675
    5. ' for' → logprob: -3.802719831466675
    6. 'target' → logprob: -3.927719831466675
    7. 'for' → logprob: -3.927719831466675
    8. ' target' → logprob: -4.177719593048096
    9. '    
' → logprob: -4.302719593048096
    10. ' 
' → logprob: -4.427719593048096

Token 553: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44270437955856323
    2. ':
' → logprob: -1.067704439163208
    3. '   ' → logprob: -4.567704200744629
    4. '       ' → logprob: -5.692704200744629
    5. '    ' → logprob: -9.817704200744629
    6. ' :' → logprob: -10.317704200744629
    7. ':

' → logprob: -11.067704200744629
    8. ' :
' → logprob: -11.067704200744629
    9. ':
' → logprob: -11.692704200744629
    10. ':return' → logprob: -12.317704200744629

Token 554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030228151008486748
    2. ':' → logprob: -3.9052281379699707
    3. '   ' → logprob: -4.905228137969971
    4. '    ' → logprob: -7.280228137969971
    5. ':
' → logprob: -7.280228137969971
    6. ' for' → logprob: -8.780228614807129
    7. '{' → logprob: -9.155228614807129
    8. ' :' → logprob: -9.280228614807129
    9. '<|end|>' → logprob: -9.780228614807129
    10. '	   ' → logprob: -9.905228614807129

Token 555: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8003195524215698
    2. '   ' → logprob: -2.3003196716308594
    3. ' target' → logprob: -2.6753196716308594
    4. ' return' → logprob: -2.9253196716308594
    5. 'return' (adapté à ' return') → logprob: -2.9253196716308594
    6. 'target' → logprob: -3.1753196716308594
    7. ' now' → logprob: -3.5503196716308594
    8. 'pos' → logprob: -3.5503196716308594
    9. ' idx' → logprob: -3.6753196716308594
    10. ' for' → logprob: -3.8003196716308594

Token 556: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.009866109117865562
    2. 'product' → logprob: -4.759866237640381
    3. ' pos' → logprob: -7.634866237640381
    4. ' int' → logprob: -8.759865760803223
    5. 'pos' → logprob: -8.759865760803223
    6. ' next' → logprob: -9.259865760803223
    7. ' min' → logprob: -9.259865760803223
    8. ' ' → logprob: -9.509865760803223
    9. 'int' → logprob: -9.884865760803223
    10. '   ' → logprob: -10.384865760803223

Token 557: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004591042175889015
    2. '.pop' → logprob: -5.62959098815918
    3. '.index' → logprob: -7.12959098815918
    4. '[-' → logprob: -9.25459098815918
    5. '[now' → logprob: -10.87959098815918
    6. '[pos' → logprob: -11.12959098815918
    7. '[len' → logprob: -11.50459098815918
    8. 'index' → logprob: -11.62959098815918
    9. '[index' → logprob: -11.62959098815918
    10. '.' → logprob: -11.75459098815918

Token 558: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013846253568772227
    2. ' ' → logprob: -9.375138282775879
    3. '[' → logprob: -10.125138282775879
    4. '   ' → logprob: -12.000138282775879
    5. '1' → logprob: -13.250138282775879
    6. '-' → logprob: -13.875138282775879
    7. '...' → logprob: -14.687638282775879
    8. '       ' → logprob: -15.125138282775879
    9. '
' → logprob: -15.187638282775879
    10. 'now' → logprob: -15.187638282775879

Token 559: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00019972586596850306
    2. ']' → logprob: -9.250199317932129
    3. '[' → logprob: -9.875199317932129
    4. ' ][' → logprob: -10.000199317932129
    5. '][-' → logprob: -13.000199317932129
    6. ']][' → logprob: -13.875199317932129
    7. '   ' → logprob: -14.625199317932129
    8. '][]' → logprob: -14.625199317932129
    9. '[][' → logprob: -15.125199317932129
    10. '][:' → logprob: -15.125199317932129

Token 560: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.025088578462600708
    2. '0' → logprob: -3.7750885486602783
    3. '3' → logprob: -6.775088787078857
    4. '1' → logprob: -7.525088787078857
    5. '4' → logprob: -9.4000883102417
    6. ' ' → logprob: -9.7750883102417
    7. '```' → logprob: -12.1500883102417
    8. '5' → logprob: -12.4625883102417
    9. ']' → logprob: -13.7750883102417
    10. '[' → logprob: -13.9625883102417

Token 561: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003722407156601548
    2. ' ]' → logprob: -5.753722190856934
    3. ']
' → logprob: -7.878722190856934
    4. ']+' → logprob: -9.628722190856934
    5. '<|end|>' → logprob: -10.253722190856934
    6. '   ' → logprob: -10.878722190856934
    7. ']==' → logprob: -11.503722190856934
    8. '+' → logprob: -12.003722190856934
    9. '][' → logprob: -12.128722190856934
    10. ')' → logprob: -13.003722190856934

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36116984486579895
    2. 'except' → logprob: -1.8611698150634766
    3. ' except' → logprob: -2.2361698150634766
    4. '
' → logprob: -3.7361698150634766
    5. '	except' → logprob: -4.236169815063477
    6. '    
' → logprob: -6.236169815063477
    7. '<|end|>' → logprob: -9.236169815063477
    8. '       ' → logprob: -9.486169815063477
    9. '        
' → logprob: -10.236169815063477
    10. '\n' → logprob: -10.236169815063477

Token 563: ' except' (ID: 6384)
  Prédit: ' except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.3445739448070526
    2. 'except' (adapté à ' except') → logprob: -1.594573974609375
    3. '   ' → logprob: -2.594573974609375
    4. '	except' → logprob: -4.719573974609375
    5. '
' → logprob: -5.344573974609375
    6. '    
' → logprob: -9.469573974609375
    7. '       ' → logprob: -12.094573974609375
    8. ' 
' → logprob: -12.094573974609375
    9. '        
' → logprob: -12.219573974609375
    10. '

' → logprob: -12.594573974609375

Token 564: ' Exception' (ID: 6851)
  Prédit: ' Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Index' → logprob: -0.13638080656528473
    2. '(Index' → logprob: -2.636380910873413
    3. 'Index' → logprob: -2.886380910873413
    4. '[Index' → logprob: -9.636381149291992
    5. '_index' → logprob: -11.636381149291992
    6. ' (' → logprob: -11.886381149291992
    7. '_Index' → logprob: -12.011381149291992
    8. '(index' → logprob: -13.761381149291992
    9. ' index' → logprob: -13.886381149291992
    10. 'index' → logprob: -14.136381149291992

Token 565: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28178855776786804
    2. ' as' → logprob: -1.4067885875701904
    3. 'as' → logprob: -8.03178882598877
    4. ' :' → logprob: -8.28178882598877
    5. ':
' → logprob: -10.28178882598877
    6. '[' → logprob: -11.65678882598877
    7. '    ' → logprob: -12.53178882598877
    8. '   ' → logprob: -12.65678882598877
    9. ':return' → logprob: -12.90678882598877
    10. '	as' → logprob: -13.40678882598877

Token 566: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6768168807029724
    2. ' as' → logprob: -1.0518169403076172
    3. ':
' → logprob: -2.676816940307617
    4. '   ' → logprob: -2.926816940307617
    5. '    ' → logprob: -4.426816940307617
    6. '       ' → logprob: -5.301816940307617
    7. ':return' → logprob: -6.426816940307617
    8. 'as' → logprob: -7.801816940307617
    9. '           ' → logprob: -8.051816940307617
    10. ' :' → logprob: -8.926816940307617

Token 567: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.43613508343696594
    2. ' return' → logprob: -1.0611350536346436
    3. '   ' → logprob: -5.561135292053223
    4. '       ' → logprob: -5.811135292053223
    5. '	return' → logprob: -8.311135292053223
    6. ' pass' → logprob: -9.311135292053223
    7. 'None' → logprob: -9.436135292053223
    8. ' None' → logprob: -9.686135292053223
    9. 'pass' → logprob: -9.936135292053223
    10. '0' → logprob: -11.311135292053223

Token 568: ' -' (ID: 533)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.0430721044540405
    2. '-' → logprob: -1.2930721044540405
    3. ' None' → logprob: -2.04307222366333
    4. 'now' → logprob: -2.16807222366333
    5. ' now' → logprob: -2.66807222366333
    6. 'pos' → logprob: -3.66807222366333
    7. ' -' → logprob: -3.79307222366333
    8. ' pos' → logprob: -4.66807222366333
    9. '0' → logprob: -7.29307222366333
    10. '-now' → logprob: -7.29307222366333

Token 569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002028251619776711
    2. ' ' → logprob: -8.750203132629395
    3. '2' → logprob: -10.375203132629395
    4. '100' → logprob: -12.750203132629395
    5. '   ' → logprob: -12.750203132629395
    6. '  ' → logprob: -13.875203132629395
    7. '3' → logprob: -13.875203132629395
    8. '999' → logprob: -13.875203132629395
    9. '       ' → logprob: -14.375203132629395
    10. '-' → logprob: -14.500203132629395

Token 570: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 571: 'product' (ID: 5260)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 572: '=[]
' (ID: 63466)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7205124497413635
    2. '<|end|>' → logprob: -1.3455123901367188
    3. '=' → logprob: -1.7205123901367188
    4. '=[]' → logprob: -3.4705123901367188
    5. '[' → logprob: -3.9705123901367188
    6. '[:]' → logprob: -4.220512390136719
    7. '[]' → logprob: -4.970512390136719
    8. '<|end|>' → logprob: -7.595512390136719
    9. '=[' → logprob: -7.970512390136719
    10. '
' → logprob: -8.095512390136719

Token 573: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 574: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2501048743724823
    2. ' add' → logprob: -1.7501049041748047
    3. ' get' → logprob: -3.8751049041748047
    4. 'main' → logprob: -5.125104904174805
    5. ' initialize' → logprob: -5.125104904174805
    6. ' delete' → logprob: -5.500104904174805
    7. ' init' → logprob: -6.500104904174805
    8. ' pos' → logprob: -6.625104904174805
    9. ' load' → logprob: -7.250104904174805
    10. ' product' → logprob: -7.375104904174805

Token 575: 'Product' (ID: 4532)
  Prédit: 'Target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Target' → logprob: -0.3008567690849304
    2. 'Product' → logprob: -1.8008568286895752
    3. 'Distance' → logprob: -2.800856828689575
    4. 'Next' → logprob: -4.425856590270996
    5. 'Route' → logprob: -4.925856590270996
    6. 'Pos' → logprob: -5.675856590270996
    7. 'Total' → logprob: -6.300856590270996
    8. 'Position' → logprob: -7.050856590270996
    9. '_target' → logprob: -7.050856590270996
    10. 'Best' → logprob: -7.050856590270996

Token 576: '(current' (ID: 15023)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02307017147541046
    2. '(' → logprob: -4.023070335388184
    3. '():
' → logprob: -5.773070335388184
    4. 'Pos' → logprob: -8.148070335388184
    5. ' ():' → logprob: -8.273070335388184
    6. 'List' → logprob: -8.398070335388184
    7. '[]' → logprob: -9.023070335388184
    8. 'Positions' → logprob: -9.148070335388184
    9. '()' → logprob: -9.273070335388184
    10. 'Now' → logprob: -9.648070335388184

Token 577: 'Time' (ID: 1929)
  Prédit: 'Pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.3645973801612854
    2. '_pos' → logprob: -1.2395973205566406
    3. 'Position' → logprob: -5.114597320556641
    4. '_position' → logprob: -5.489597320556641
    5. 'pos' → logprob: -5.739597320556641
    6. 'Product' → logprob: -7.239597320556641
    7. '):' → logprob: -7.364597320556641
    8. '_product' → logprob: -8.11459732055664
    9. '):
' → logprob: -8.23959732055664
    10. ')' → logprob: -8.48959732055664

Token 578: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6388001441955566
    2. '):' → logprob: -0.7638001441955566
    3. ',current' → logprob: -6.263800144195557
    4. '):
' → logprob: -7.388800144195557
    5. ')' → logprob: -7.388800144195557
    6. '_now' → logprob: -7.513800144195557
    7. '(' → logprob: -7.763800144195557
    8. ' ,' → logprob: -8.013799667358398
    9. '(now' → logprob: -8.138799667358398
    10. ',pos' → logprob: -8.388799667358398

Token 579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009152670972980559
    2. 'global' → logprob: -7.750915050506592
    3. '	global' → logprob: -8.25091552734375
    4. '<|end|>' → logprob: -9.62591552734375
    5. ' global' → logprob: -10.00091552734375
    6. 'pass' → logprob: -10.37591552734375
    7. '    
' → logprob: -10.50091552734375
    8. '	pass' → logprob: -11.00091552734375
    9. ' pass' → logprob: -11.25091552734375
    10. '   ' → logprob: -13.12591552734375

Token 580: ' for' (ID: 395)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.4929846525192261
    2. '   ' → logprob: -1.367984652519226
    3. ' global' → logprob: -2.1179847717285156
    4. 'if' → logprob: -5.242984771728516
    5. 'for' (adapté à ' for') → logprob: -6.617984771728516
    6. ' if' → logprob: -6.867984771728516
    7. ' res' → logprob: -7.367984771728516
    8. '	global' → logprob: -7.492984771728516
    9. 'available' → logprob: -7.492984771728516
    10. 'result' → logprob: -7.617984771728516

Token 581: ' i' (ID: 575)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8140430450439453
    2. ' i' → logprob: -1.0640430450439453
    3. ' idx' → logprob: -2.0640430450439453
    4. ' product' → logprob: -3.3140430450439453
    5. ' now' → logprob: -4.314043045043945
    6. ' _' → logprob: -4.939043045043945
    7. ' pos' → logprob: -5.064043045043945
    8. 'p' → logprob: -5.189043045043945
    9. ' prod' → logprob: -5.564043045043945
    10. 'product' → logprob: -6.064043045043945

Token 582: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005135561805218458
    2. 'in' → logprob: -5.380135536193848
    3. ',' → logprob: -8.005135536193848
    4. ' ' → logprob: -9.755135536193848
    5. '   ' → logprob: -10.005135536193848
    6. 'product' → logprob: -10.630135536193848
    7. 'range' → logprob: -11.130135536193848
    8. '	in' → logprob: -11.755135536193848
    9. '  ' → logprob: -12.380135536193848
    10. ' ,' → logprob: -12.380135536193848

Token 583: ' o' (ID: 293)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2412712574005127
    2. 'item' → logprob: -2.4912712574005127
    3. ' p' → logprob: -3.1162712574005127
    4. 'prod' → logprob: -3.1162712574005127
    5. '(p' → logprob: -4.491271018981934
    6. ' item' → logprob: -4.616271018981934
    7. ' prod' → logprob: -5.366271018981934
    8. 'product' → logprob: -6.366271018981934
    9. 'info' → logprob: -6.491271018981934
    10. 'v' → logprob: -6.491271018981934

Token 584: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19066563248634338
    2. ',' → logprob: -2.8156657218933105
    3. 'r' → logprob: -3.6906657218933105
    4. 'b' → logprob: -3.6906657218933105
    5. 'range' → logprob: -3.9406657218933105
    6. 'p' → logprob: -4.1906657218933105
    7. 'n' → logprob: -5.0656657218933105
    8. 'f' → logprob: -5.3156657218933105
    9. 'in' → logprob: -5.4406657218933105
    10. 'product' → logprob: -5.6906657218933105

Token 585: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.7388715744018555
    2. 'product' → logprob: -0.8638715744018555
    3. ' enumerate' → logprob: -2.4888715744018555
    4. 'range' → logprob: -4.3638715744018555
    5. ' product' → logprob: -5.3638715744018555
    6. ' range' → logprob: -8.988871574401855
    7. 'route' → logprob: -9.988871574401855
    8. 'copy' → logprob: -10.113871574401855
    9. '(product' → logprob: -10.488871574401855
    10. 'list' → logprob: -10.863871574401855

Token 586: '(order' (ID: 33050)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.7415168881416321
    2. ' product' → logprob: -0.8665168881416321
    3. 'product' → logprob: -2.3665168285369873
    4. 'range' → logprob: -5.991517066955566
    5. ' range' → logprob: -6.116517066955566
    6. '(order' → logprob: -6.991517066955566
    7. '(range' → logprob: -7.366517066955566
    8. '(route' → logprob: -7.491517066955566
    9. ' (' → logprob: -8.241517066955566
    10. 'route' → logprob: -8.429017066955566

Token 587: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07444271445274353
    2. '):
' → logprob: -2.6994426250457764
    3. 's' → logprob: -5.4494428634643555
    4. '[i' → logprob: -8.949442863464355
    5. '):
' → logprob: -10.449442863464355
    6. '[' → logprob: -11.699442863464355
    7. '[]):' → logprob: -11.949442863464355
    8. '_list' → logprob: -12.574442863464355
    9. ' ):' → logprob: -12.574442863464355
    10. '[s' → logprob: -12.699442863464355

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07145058363676071
    2. '   ' → logprob: -3.3214504718780518
    3. ':' → logprob: -4.071450710296631
    4. ' if' → logprob: -5.196450710296631
    5. '<|end|>' → logprob: -5.196450710296631
    6. '[' → logprob: -6.071450710296631
    7. ':
' → logprob: -7.196450710296631
    8. '<|end|>' → logprob: -7.946450710296631
    9. 'if' → logprob: -8.321450233459473
    10. '        
' → logprob: -8.696450233459473

Token 589: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43361252546310425
    2. '       ' → logprob: -1.183612585067749
    3. 'if' (adapté à ' if') → logprob: -3.183612585067749
    4. ' pass' → logprob: -5.93361234664917
    5. '   ' → logprob: -7.80861234664917
    6. '<|end|>' → logprob: -7.80861234664917
    7. 'pass' → logprob: -8.683612823486328
    8. ' time' → logprob: -8.808612823486328
    9. '	if' → logprob: -9.183612823486328
    10. 'time' → logprob: -9.183612823486328

Token 590: ' time' (ID: 1058)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.29670071601867676
    2. ' o' → logprob: -1.5467007160186768
    3. 'current' → logprob: -4.171700477600098
    4. ' current' → logprob: -4.296700477600098
    5. ' not' → logprob: -4.796700477600098
    6. 'order' → logprob: -5.921700477600098
    7. ' order' → logprob: -6.546700477600098
    8. 'not' → logprob: -6.796700477600098
    9. ' product' → logprob: -7.671700477600098
    10. 'product' → logprob: -8.296700477600098

Token 591: '_step' (ID: 27360)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.020558703690767288
    2. '[' → logprob: -4.895558834075928
    3. '>=' → logprob: -5.270558834075928
    4. '[]' → logprob: -6.520558834075928
    5. ' >=' → logprob: -6.645558834075928
    6. 'i' → logprob: -7.145558834075928
    7. 's' → logprob: -7.395558834075928
    8. '   ' → logprob: -7.520558834075928
    9. ' i' → logprob: -7.520558834075928
    10. '<=' → logprob: -7.645558834075928

Token 592: '_before' (ID: 56638)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4990255534648895
    2. '[i' → logprob: -1.624025583267212
    3. '>=' → logprob: -3.124025583267212
    4. '[' → logprob: -3.124025583267212
    5. ' ==' → logprob: -3.749025583267212
    6. '   ' → logprob: -3.749025583267212
    7. ' <=' → logprob: -3.999025583267212
    8. ' ' → logprob: -4.374025344848633
    9. '==' → logprob: -5.124025344848633
    10. ' >' → logprob: -5.499025344848633

Token 593: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0811686515808105
    2. ' >=' → logprob: -1.4561686515808105
    3. '[i' → logprob: -1.8311686515808105
    4. '<=' → logprob: -2.2061686515808105
    5. '>=' → logprob: -2.5811686515808105
    6. '[' → logprob: -3.3311686515808105
    7. '>' → logprob: -5.2061686515808105
    8. ' and' → logprob: -5.3311686515808105
    9. '   ' → logprob: -5.4561686515808105
    10. '==' → logprob: -5.5811686515808105

Token 594: ' o' (ID: 293)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.18046294152736664
    2. ' current' → logprob: -2.3054628372192383
    3. 'o' → logprob: -3.3054628372192383
    4. 'i' → logprob: -3.6804628372192383
    5. ' o' → logprob: -6.430462837219238
    6. ' i' → logprob: -6.555462837219238
    7. 'order' → logprob: -8.680462837219238
    8. '=' → logprob: -9.180462837219238
    9. '=current' → logprob: -10.180462837219238
    10. '   ' → logprob: -10.555462837219238

Token 595: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03508732095360756
    2. '[i' → logprob: -3.6600873470306396
    3. '['' → logprob: -4.9100871086120605
    4. '["' → logprob: -6.9100871086120605
    5. ' [' → logprob: -9.785087585449219
    6. '_time' → logprob: -10.410087585449219
    7. '<=' → logprob: -10.785087585449219
    8. '['_' → logprob: -10.785087585449219
    9. '["_' → logprob: -10.785087585449219
    10. 'time' → logprob: -10.910087585449219

Token 596: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9173091650009155
    2. '2' → logprob: -1.4173091650009155
    3. '0' → logprob: -1.5423091650009155
    4. '1' → logprob: -2.667309284210205
    5. '3' → logprob: -2.917309284210205
    6. '[' → logprob: -4.667309284210205
    7. '4' → logprob: -5.292309284210205
    8. 'current' → logprob: -6.417309284210205
    9. ' i' → logprob: -6.542309284210205
    10. ' ' → logprob: -7.042309284210205

Token 597: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8004796504974365
    2. ' <=' → logprob: -0.8004796504974365
    3. '<=' → logprob: -2.6754796504974365
    4. 'and' → logprob: -4.050479888916016
    5. ' <' → logprob: -4.675479888916016
    6. '<' → logprob: -5.425479888916016
    7. ']' → logprob: -7.050479888916016
    8. '[' → logprob: -7.550479888916016
    9. ']<=' → logprob: -9.050479888916016
    10. '[i' → logprob: -9.925479888916016

Token 598: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4478317201137543
    2. ' <=' → logprob: -1.5728317499160767
    3. '<=' → logprob: -2.322831630706787
    4. 'and' → logprob: -2.947831630706787
    5. '<' → logprob: -6.447831630706787
    6. ' <' → logprob: -6.572831630706787
    7. '<|end|>' → logprob: -10.572832107543945
    8. '[' → logprob: -10.697832107543945
    9. '==' → logprob: -11.697832107543945
    10. ' ' → logprob: -11.822832107543945

Token 599: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.011256369762122631
    2. ' current' → logprob: -4.511256217956543
    3. 'time' → logprob: -8.511256217956543
    4. ' time' → logprob: -12.511256217956543
    5. '   ' → logprob: -12.886256217956543
    6. '	current' → logprob: -14.761256217956543
    7. '       ' → logprob: -15.886256217956543
    8. '           ' → logprob: -16.38625717163086
    9. 'urrent' → logprob: -16.38625717163086
    10. '
' → logprob: -16.38625717163086

Token 600: 'Time' (ID: 1929)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.006249426398426294
    2. 'Time' → logprob: -5.75624942779541
    3. 'time' → logprob: -6.25624942779541
    4. '_step' → logprob: -7.00624942779541
    5. '_' → logprob: -8.75624942779541
    6. '_t' → logprob: -10.88124942779541
    7. ' time' → logprob: -11.00624942779541
    8. ' _' → logprob: -11.13124942779541
    9. 'step' → logprob: -11.38124942779541
    10. 'Step' → logprob: -12.00624942779541

Token 601: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005766665562987328
    2. 'and' → logprob: -6.130766868591309
    3. ':' → logprob: -6.255766868591309
    4. ':
' → logprob: -7.505766868591309
    5. ' :' → logprob: -8.255766868591309
    6. '       ' → logprob: -8.380766868591309
    7. '<|end|>' → logprob: -8.380766868591309
    8. '           ' → logprob: -8.755766868591309
    9. ' ' → logprob: -9.630766868591309
    10. ' :
' → logprob: -10.005766868591309

Token 602: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5875899195671082
    2. '           ' → logprob: -0.8375899195671082
    3. ',' → logprob: -5.837589740753174
    4. '            ' → logprob: -6.212589740753174
    5. ' ' → logprob: -6.462589740753174
    6. '<|end|>' → logprob: -6.712589740753174
    7. '       ' → logprob: -7.462589740753174
    8. 'and' → logprob: -7.587589740753174
    9. '          ' → logprob: -7.837589740753174
    10. ':' → logprob: -7.837589740753174

Token 603: ' product' (ID: 1888)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9845495223999023
    2. '           ' → logprob: -1.3595495223999023
    3. 'product' (adapté à ' product') → logprob: -1.9845495223999023
    4. ' product' → logprob: -2.1095495223999023
    5. 'if' → logprob: -2.2345495223999023
    6. '               ' → logprob: -6.234549522399902
    7. ' pass' → logprob: -7.484549522399902
    8. 'pass' → logprob: -7.609549522399902
    9. '       ' → logprob: -8.734549522399902
    10. ' continue' → logprob: -8.859549522399902

Token 604: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012356207298580557
    2. '.' → logprob: -9.250123977661133
    3. '.extend' → logprob: -10.875123977661133
    4. '.setdefault' → logprob: -13.250123977661133
    5. '.insert' → logprob: -13.375123977661133
    6. 'append' → logprob: -13.750123977661133
    7. ' .' → logprob: -14.250123977661133
    8. '=' → logprob: -14.250123977661133
    9. ' =' → logprob: -14.375123977661133
    10. '.add' → logprob: -14.375123977661133

Token 605: '(copy' (ID: 101585)
  Prédit: '(o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(o' → logprob: -0.08538447320461273
    2. '(copy' → logprob: -3.3353843688964844
    3. '(order' → logprob: -3.8353843688964844
    4. '([' → logprob: -3.9603843688964844
    5. 'copy' → logprob: -5.335384368896484
    6. '[o' → logprob: -8.335384368896484
    7. '((' → logprob: -8.710384368896484
    8. '(list' → logprob: -8.710384368896484
    9. '(' → logprob: -9.335384368896484
    10. '(i' → logprob: -10.210384368896484

Token 606: '.deepcopy' (ID: 130390)
  Prédit: '.deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.deepcopy' → logprob: -0.045007240027189255
    2. '.copy' → logprob: -3.2950072288513184
    3. '(o' → logprob: -5.920007228851318
    4. 'copy' → logprob: -5.920007228851318
    5. '(order' → logprob: -7.170007228851318
    6. '(copy' → logprob: -7.420007228851318
    7. '(' → logprob: -10.170007705688477
    8. '(i' → logprob: -10.420007705688477
    9. ' deepcopy' → logprob: -10.795007705688477
    10. '(op' → logprob: -10.795007705688477

Token 607: '(o' (ID: 18928)
  Prédit: '(o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(o' → logprob: -0.02349690906703472
    2. '(order' → logprob: -3.7734968662261963
    3. 'order' → logprob: -8.648496627807617
    4. 'o' → logprob: -9.648496627807617
    5. '(' → logprob: -12.273496627807617
    6. '(i' → logprob: -12.523496627807617
    7. '((' → logprob: -13.648496627807617
    8. ' o' → logprob: -14.773496627807617
    9. '	o' → logprob: -15.148496627807617
    10. '(ord' → logprob: -15.523496627807617

Token 608: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0037616088520735502
    2. '))
' → logprob: -5.6287617683410645
    3. ')' → logprob: -9.503761291503906
    4. '[' → logprob: -9.753761291503906
    5. '))

' → logprob: -11.878761291503906
    6. ')))' → logprob: -12.378761291503906
    7. ' ))' → logprob: -12.378761291503906
    8. '()))' → logprob: -12.628761291503906
    9. ')[' → logprob: -12.878761291503906
    10. '));' → logprob: -13.253761291503906

Token 609: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 610: ' goto' (ID: 17448)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.1499679833650589
    2. ' main' → logprob: -3.024967908859253
    3. 'get' → logprob: -4.024968147277832
    4. 'main' → logprob: -4.149968147277832
    5. ' delete' → logprob: -4.899968147277832
    6. ' update' → logprob: -4.899968147277832
    7. ' sys' → logprob: -5.524968147277832
    8. 'delete' → logprob: -5.649968147277832
    9. 'time' → logprob: -5.774968147277832
    10. ' clear' → logprob: -5.899968147277832

Token 611: 'Vertex' (ID: 14196)
  Prédit: 'Pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.46519818902015686
    2. '(' → logprob: -1.3401981592178345
    3. 'Position' → logprob: -3.340198278427124
    4. '(pos' → logprob: -4.090198040008545
    5. '(Pos' → logprob: -4.090198040008545
    6. 'Target' → logprob: -4.840198040008545
    7. '(Position' → logprob: -5.090198040008545
    8. 'Product' → logprob: -5.090198040008545
    9. '()' → logprob: -5.590198040008545
    10. '(position' → logprob: -5.840198040008545

Token 612: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2758774757385254
    2. '(now' → logprob: -1.7758774757385254
    3. '(pos' → logprob: -4.025877475738525
    4. '(v' → logprob: -4.400877475738525
    5. '(src' → logprob: -4.900877475738525
    6. ' (' → logprob: -5.275877475738525
    7. '(node' → logprob: -5.400877475738525
    8. '(target' → logprob: -5.400877475738525
    9. '(next' → logprob: -5.525877475738525
    10. '(vertex' → logprob: -6.275877475738525

Token 613: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025365441106259823
    2. '):
' → logprob: -6.502536773681641
    3. ',' → logprob: -7.627536773681641
    4. ')' → logprob: -8.00253677368164
    5. '[' → logprob: -9.87753677368164
    6. '_' → logprob: -10.75253677368164
    7. ' ):' → logprob: -10.75253677368164
    8. '):
' → logprob: -11.00253677368164
    9. '[]):' → logprob: -11.62753677368164
    10. '[i' → logprob: -11.75253677368164

Token 614: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06487440317869186
    2. ' y' → logprob: -2.8148744106292725
    3. 'now' → logprob: -7.439874172210693
    4. 'pos' → logprob: -8.314874649047852
    5. ' now' → logprob: -8.314874649047852
    6. ')' → logprob: -8.314874649047852
    7. 'route' → logprob: -8.564874649047852
    8. '):' → logprob: -8.689874649047852
    9. 'v' → logprob: -9.189874649047852
    10. 'current' → logprob: -9.439874649047852

Token 615: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019614976190496236
    2. ')' → logprob: -9.12519645690918
    3. '):
' → logprob: -9.62519645690918
    4. ',' → logprob: -11.12519645690918
    5. ':' → logprob: -12.62519645690918
    6. ' ):' → logprob: -13.87519645690918
    7. '):
' → logprob: -14.37519645690918
    8. '   ' → logprob: -14.87519645690918
    9. '):

' → logprob: -15.37519645690918
    10. '_' → logprob: -15.75019645690918

Token 616: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3478609323501587
    2. 'pass' → logprob: -2.097860813140869
    3. ' pass' → logprob: -2.097860813140869
    4. 'global' → logprob: -3.847860813140869
    5. ' global' → logprob: -4.597860813140869
    6. 'return' → logprob: -4.597860813140869
    7. ' return' → logprob: -5.597860813140869
    8. '	pass' → logprob: -6.972860813140869
    9. 'print' → logprob: -7.347860813140869
    10. 'if' → logprob: -8.097861289978027

Token 617: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -1.2146837711334229
    2. 'pass' → logprob: -1.4646837711334229
    3. '   ' → logprob: -1.7146837711334229
    4. ' pass' → logprob: -2.339683771133423
    5. ' global' → logprob: -2.589683771133423
    6. 'return' → logprob: -2.714683771133423
    7. 'print' → logprob: -4.089683532714844
    8. ' return' → logprob: -4.339683532714844
    9. 'if' → logprob: -5.089683532714844
    10. 'route' → logprob: -5.714683532714844

Token 618: ' now' (ID: 1954)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.8614019751548767
    2. 'pos' → logprob: -1.1114020347595215
    3. ' route' → logprob: -1.9864020347595215
    4. 'route' → logprob: -2.8614020347595215
    5. ' product' → logprob: -3.4864020347595215
    6. 'product' → logprob: -4.8614020347595215
    7. ' now' → logprob: -5.3614020347595215
    8. ' V' → logprob: -5.6114020347595215
    9. 'V' → logprob: -6.1114020347595215
    10. ' current' → logprob: -6.8614020347595215

Token 619: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.3136267066001892
    2. '_pos' → logprob: -1.313626766204834
    3. '_' → logprob: -9.063626289367676
    4. '_Pos' → logprob: -9.313626289367676
    5. 'pos' → logprob: -9.438626289367676
    6. '_x' → logprob: -10.688626289367676
    7. '_POS' → logprob: -11.188626289367676
    8. '_position' → logprob: -11.438626289367676
    9. '_P' → logprob: -11.438626289367676
    10. '_p' → logprob: -12.063626289367676

Token 620: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9548041820526123
    2. '   ' → logprob: -1.9548041820526123
    3. ' =' → logprob: -1.9548041820526123
    4. '
' → logprob: -2.2048041820526123
    5. '=' → logprob: -2.5798041820526123
    6. ':' → logprob: -2.9548041820526123
    7. ':
' → logprob: -4.204804420471191
    8. '_now' → logprob: -4.329804420471191
    9. '_pos' → logprob: -4.329804420471191
    10. '[now' → logprob: -4.579804420471191

Token 621: ' route' (ID: 9656)
  Prédit: ' route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' route' → logprob: -0.9603646397590637
    2. 'route' → logprob: -1.335364580154419
    3. ' product' → logprob: -1.835364580154419
    4. 'product' → logprob: -2.835364580154419
    5. 'x' → logprob: -2.960364580154419
    6. ' x' → logprob: -3.460364580154419
    7. 'pos' → logprob: -4.460364818572998
    8. ' pos' → logprob: -4.960364818572998
    9. ' now' → logprob: -5.210364818572998
    10. 'y' → logprob: -5.460364818572998

Token 622: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6910428404808044
    2. '[now' → logprob: -1.3160429000854492
    3. '[' → logprob: -2.566042900085449
    4. ',' → logprob: -2.691042900085449
    5. ' =' → logprob: -3.441042900085449
    6. '
' → logprob: -4.816042900085449
    7. '[next' → logprob: -4.941042900085449
    8. '[:]' → logprob: -5.441042900085449
    9. ':
' → logprob: -5.566042900085449
    10. '[current' → logprob: -5.691042900085449

Token 623: ' total' (ID: 3609)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.9454553723335266
    2. 'product' → logprob: -2.195455312728882
    3. 'pos' → logprob: -2.320455312728882
    4. 'temp' → logprob: -2.570455312728882
    5. ' pos' → logprob: -2.695455312728882
    6. 'route' → logprob: -2.945455312728882
    7. ' route' → logprob: -3.070455312728882
    8. ' temp' → logprob: -3.320455312728882
    9. ' now' → logprob: -3.570455312728882
    10. 'now' → logprob: -4.320455551147461

Token 624: '_move' (ID: 39414)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.7032555937767029
    2. '_time' → logprob: -0.9532555937767029
    3. 'Time' → logprob: -3.2032556533813477
    4. 'Cost' → logprob: -3.3282556533813477
    5. '_distance' → logprob: -4.453255653381348
    6. '_len' → logprob: -5.453255653381348
    7. '_length' → logprob: -5.453255653381348
    8. ',' → logprob: -5.578255653381348
    9. ' =' → logprob: -6.078255653381348
    10. 'time' → logprob: -6.203255653381348

Token 625: '_count' (ID: 7536)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.447812557220459
    2. '_time' → logprob: -1.822812557220459
    3. 'Time' → logprob: -2.072812557220459
    4. '_distance' → logprob: -2.322812557220459
    5. ',' → logprob: -2.572812557220459
    6. '
' → logprob: -2.572812557220459
    7. '_cost' → logprob: -2.947812557220459
    8. 'Distance' → logprob: -3.072812557220459
    9. ' =' → logprob: -3.322812557220459
    10. 'time' → logprob: -4.072812557220459

Token 626: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2892807722091675
    2. ',' → logprob: -2.164280891418457
    3. '
' → logprob: -2.789280891418457
    4. ' +=' → logprob: -3.539280891418457
    5. ' =' → logprob: -4.164280891418457
    6. '[now' → logprob: -4.664280891418457
    7. '=' → logprob: -5.164280891418457
    8. '+=' → logprob: -5.164280891418457
    9. '    
' → logprob: -6.664280891418457
    10. '+' → logprob: -6.789280891418457

Token 627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04296424612402916
    2. ' now' → logprob: -3.292964220046997
    3. '
' → logprob: -6.417964458465576
    4. '	now' → logprob: -6.667964458465576
    5. '[now' → logprob: -7.167964458465576
    6. ' if' → logprob: -7.792964458465576
    7. '    
' → logprob: -8.542963981628418
    8. '(now' → logprob: -9.417963981628418
    9. 'now' → logprob: -9.417963981628418
    10. ',' → logprob: -9.917963981628418

Token 628: ' now' (ID: 1954)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6571071147918701
    2. 'if' → logprob: -1.2821071147918701
    3. ' if' → logprob: -2.28210711479187
    4. ' now' → logprob: -3.53210711479187
    5. 'global' → logprob: -3.53210711479187
    6. 'now' (adapté à ' now') → logprob: -4.407107353210449
    7. ' global' → logprob: -4.657107353210449
    8. 'distance' → logprob: -4.907107353210449
    9. 'while' → logprob: -5.782107353210449
    10. 'total' → logprob: -6.032107353210449

Token 629: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -5.512236498361744e-07
    2. '.Pos' → logprob: -15.375000953674316
    3. '.' → logprob: -16.5
    4. '_pos' → logprob: -17.0
    5. '(Pos' → logprob: -17.25
    6. '_Pos' → logprob: -17.5
    7. ' Pos' → logprob: -17.625
    8. 'P' → logprob: -18.125
    9. ')' → logprob: -18.25
    10. '=' → logprob: -18.25

Token 630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21465080976486206
    2. '=' → logprob: -1.7146508693695068
    3. ' +=' → logprob: -4.464650630950928
    4. ',' → logprob: -6.964650630950928
    5. '+=' → logprob: -7.464650630950928
    6. ' ==' → logprob: -9.464651107788086
    7. '[' → logprob: -11.589651107788086
    8. ' -=' → logprob: -11.714651107788086
    9. '==' → logprob: -11.839651107788086
    10. ' ,' → logprob: -12.214651107788086

Token 631: ' -' (ID: 533)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23378190398216248
    2. 'y' → logprob: -1.9837819337844849
    3. 'route' → logprob: -3.4837818145751953
    4. ' x' → logprob: -3.8587818145751953
    5. ' y' → logprob: -4.483781814575195
    6. ' route' → logprob: -4.858781814575195
    7. 'product' → logprob: -10.983781814575195
    8. '(route' → logprob: -11.483781814575195
    9. '   ' → logprob: -11.733781814575195
    10. ' product' → logprob: -11.858781814575195

Token 632: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026594819501042366
    2. ' ' → logprob: -6.002659320831299
    3. ' y' → logprob: -9.752659797668457
    4. 'y' → logprob: -9.877659797668457
    5. '2' → logprob: -10.502659797668457
    6. 'x' → logprob: -11.127659797668457
    7. ' x' → logprob: -11.752659797668457
    8. '-' → logprob: -12.252659797668457
    9. '999' → logprob: -12.377659797668457
    10. '100' → logprob: -12.627659797668457

Token 633: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 634: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 635: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3874917030334473
    2. 'if' → logprob: -1.5124917030334473
    3. '   ' → logprob: -1.7624917030334473
    4. 'while' → logprob: -1.8874917030334473
    5. 'total' → logprob: -3.0124917030334473
    6. 'return' → logprob: -3.1374917030334473
    7. ' for' → logprob: -3.7624917030334473
    8. 'now' → logprob: -4.012491703033447
    9. ' if' → logprob: -4.137491703033447
    10. ' while' → logprob: -4.387491703033447

Token 636: '(route' (ID: 64883)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06700190901756287
    2. '()' → logprob: -3.8170018196105957
    3. '('' → logprob: -4.192001819610596
    4. '(x' → logprob: -4.317001819610596
    5. '("' → logprob: -5.067001819610596
    6. '("("' → logprob: -5.567001819610596
    7. '(f' → logprob: -6.442001819610596
    8. ' (' → logprob: -7.317001819610596
    9. '("")' → logprob: -7.442001819610596
    10. '(route' → logprob: -7.442001819610596

Token 637: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006467382423579693
    2. '[' → logprob: -5.131467342376709
    3. '[x' → logprob: -8.006467819213867
    4. ' )' → logprob: -10.006467819213867
    5. '   ' → logprob: -10.381467819213867
    6. '[now' → logprob: -10.756467819213867
    7. ',' → logprob: -11.131467819213867
    8. '[-' → logprob: -11.256467819213867
    9. '[y' → logprob: -11.506467819213867
    10. ')
' → logprob: -11.631467819213867

Token 638: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0038010270800441504
    2. '[' → logprob: -6.378800868988037
    3. 'x' → logprob: -7.628800868988037
    4. 'total' → logprob: -7.628800868988037
    5. '][' → logprob: -7.878800868988037
    6. ' ' → logprob: -8.378801345825195
    7. '])' → logprob: -9.003801345825195
    8. ']' → logprob: -9.503801345825195
    9. '1' → logprob: -9.628801345825195
    10. '   ' → logprob: -9.628801345825195

Token 639: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001845101942308247
    2. '])' → logprob: -6.501844882965088
    3. ']' → logprob: -8.376845359802246
    4. '[' → logprob: -9.751845359802246
    5. ' ][' → logprob: -10.376845359802246
    6. '])[' → logprob: -12.001845359802246
    7. ']][' → logprob: -12.751845359802246
    8. '],' → logprob: -12.751845359802246
    9. '0' → logprob: -13.626845359802246
    10. ')][' → logprob: -13.626845359802246

Token 640: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013041645288467407
    2. '1' → logprob: -7.2513041496276855
    3. '][' → logprob: -8.126304626464844
    4. ' ' → logprob: -8.251304626464844
    5. '])' → logprob: -10.626304626464844
    6. ']' → logprob: -12.376304626464844
    7. ' ][' → logprob: -13.126304626464844
    8. '])[' → logprob: -13.938804626464844
    9. ')][' → logprob: -14.063804626464844
    10. '],' → logprob: -14.376304626464844

Token 641: ']+' (ID: 15344)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.006162697449326515
    2. '],' → logprob: -5.131162643432617
    3. ' ])' → logprob: -9.006162643432617
    4. ']' → logprob: -10.256162643432617
    5. '])
' → logprob: -10.381162643432617
    6. ')' → logprob: -10.381162643432617
    7. ']])' → logprob: -12.506162643432617
    8. ')])' → logprob: -13.256162643432617
    9. ')]' → logprob: -13.381162643432617
    10. ' ],' → logprob: -14.131162643432617

Token 642: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2192440629005432
    2. '1' → logprob: -2.3442440032958984
    3. ' )' → logprob: -2.4692440032958984
    4. ' ' → logprob: -4.594244003295898
    5. '"' → logprob: -6.469244003295898
    6. ' "' → logprob: -6.594244003295898
    7. '0' → logprob: -7.219244003295898
    8. ''' → logprob: -7.594244003295898
    9. ' route' → logprob: -8.219244003295898
    10. ' '' → logprob: -8.344244003295898

Token 643: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001502636878285557
    2. ' )' → logprob: -8.875150680541992
    3. '))' → logprob: -12.750150680541992
    4. ')
' → logprob: -13.250150680541992
    5. ',' → logprob: -13.625150680541992
    6. '   ' → logprob: -14.125150680541992
    7. ')`' → logprob: -14.125150680541992
    8. ')}' → logprob: -14.125150680541992
    9. ')#' → logprob: -14.875150680541992
    10. ' ' → logprob: -15.125150680541992

Token 644: ' flush' (ID: 37790)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05632597208023071
    2. 'end' → logprob: -3.681325912475586
    3. ' )' → logprob: -3.806325912475586
    4. '"' → logprob: -6.306325912475586
    5. 'route' → logprob: -6.431325912475586
    6. ''' → logprob: -7.056325912475586
    7. '')' → logprob: -7.306325912475586
    8. '")' → logprob: -7.681325912475586
    9. 'flush' → logprob: -8.056325912475586
    10. ''end' → logprob: -8.181325912475586

Token 645: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.1251971572637558
    2. ')' → logprob: -2.250197172164917
    3. '=' → logprob: -4.625196933746338
    4. '(True' → logprob: -6.625196933746338
    5. '())' → logprob: -7.625196933746338
    6. '=False' → logprob: -7.625196933746338
    7. '()' → logprob: -9.500197410583496
    8. 'True' → logprob: -10.625197410583496
    9. '=end' → logprob: -10.625197410583496
    10. 'end' → logprob: -11.000197410583496

Token 646: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.085517113911919e-05
    2. ' )' → logprob: -10.12505054473877
    3. ')
' → logprob: -11.87505054473877
    4. '   ' → logprob: -13.62505054473877
    5. '))' → logprob: -14.37505054473877
    6. ')`' → logprob: -14.75005054473877
    7. ',' → logprob: -15.00005054473877
    8. '')' → logprob: -15.50005054473877
    9. '")' → logprob: -15.75005054473877
    10. ')")' → logprob: -16.000051498413086

Token 647: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 648: ' route' (ID: 9656)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 649: '[' (ID: 58)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.003942213952541351
    2. '.' → logprob: -5.753942012786865
    3. '=' → logprob: -7.253942012786865
    4. ' =' → logprob: -10.253942489624023
    5. '[' → logprob: -11.253942489624023
    6. '.clear' → logprob: -12.628942489624023
    7. '[:]' → logprob: -13.378942489624023
    8. ' .' → logprob: -14.003942489624023
    9. 'pop' → logprob: -14.128942489624023
    10. '.remove' → logprob: -14.128942489624023

Token 650: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045718882232904434
    2. '.pop' → logprob: -3.4207189083099365
    3. '=' → logprob: -4.670718669891357
    4. 'pop' → logprob: -6.545718669891357
    5. ' =' → logprob: -7.295718669891357
    6. '.' → logprob: -8.545719146728516
    7. ' ' → logprob: -9.045719146728516
    8. '1' → logprob: -9.670719146728516
    9. ':' → logprob: -9.795719146728516
    10. '].' → logprob: -10.670719146728516

Token 651: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.040362004190683365
    2. ']' → logprob: -3.4153621196746826
    3. ' ][' → logprob: -5.9153618812561035
    4. '].' → logprob: -6.1653618812561035
    5. ']=' → logprob: -6.9153618812561035
    6. '.pop' → logprob: -8.540362358093262
    7. ']+=' → logprob: -9.165362358093262
    8. '[' → logprob: -9.290362358093262
    9. '][]' → logprob: -9.415362358093262
    10. ' ]' → logprob: -9.540362358093262

Token 652: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019330672919750214
    2. '][' → logprob: -4.0193305015563965
    3. ']' → logprob: -7.1443305015563965
    4. '-' → logprob: -9.769330978393555
    5. '0' → logprob: -10.019330978393555
    6. '=' → logprob: -10.144330978393555
    7. ' ' → logprob: -10.394330978393555
    8. '])[' → logprob: -10.769330978393555
    9. ')][' → logprob: -10.894330978393555
    10. ']=' → logprob: -10.894330978393555

Token 653: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17536517977714539
    2. ']' → logprob: -2.4253652095794678
    3. '])' → logprob: -3.5503652095794678
    4. ' )' → logprob: -4.175364971160889
    5. ' -=' → logprob: -4.675364971160889
    6. '=' → logprob: -5.550364971160889
    7. ' ]' → logprob: -5.800364971160889
    8. ' =' → logprob: -5.925364971160889
    9. ',' → logprob: -6.175364971160889
    10. '-' → logprob: -6.425364971160889

Token 654: ' -=' (ID: 12583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 655: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003372502396814525
    2. ' ' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.375337600708008
    4. '  ' → logprob: -15.750337600708008
    5. ' ' → logprob: -17.250337600708008
    6. '0' → logprob: -17.437837600708008
    7. '100' → logprob: -17.625337600708008
    8. '    ' → logprob: -17.687837600708008
    9. '10' → logprob: -17.937837600708008
    10. '2' → logprob: -18.125337600708008

Token 656: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.250296592712402
    4. '  ' → logprob: -17.250295639038086
    5. '0' → logprob: -17.562795639038086
    6. ' ' → logprob: -18.625295639038086
    7. '-' → logprob: -19.125295639038086
    8. '2' → logprob: -19.125295639038086
    9. '    ' → logprob: -19.250295639038086
    10. '10' → logprob: -19.250295639038086

Token 657: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 658: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6258152723312378
    2. '<|end|>' → logprob: -0.8758152723312378
    3. '   ' → logprob: -3.5008153915405273
    4. '\n' → logprob: -4.500815391540527
    5. ')' → logprob: -5.625815391540527
    6. '```' → logprob: -7.375815391540527
    7. '<|end|>' → logprob: -7.500815391540527
    8. '[' → logprob: -7.875815391540527
    9. ' ' → logprob: -8.125815391540527
    10. '    
' → logprob: -8.875815391540527

Token 659: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03881020098924637
    2. ' if' → logprob: -3.4138102531433105
    3. '<|end|>' → logprob: -5.5388102531433105
    4. '   ' → logprob: -8.038809776306152
    5. ')' → logprob: -8.288809776306152
    6. '	if' → logprob: -8.413809776306152
    7. '[' → logprob: -8.413809776306152
    8. '```' → logprob: -10.038809776306152
    9. '0' → logprob: -10.163809776306152
    10. '.' → logprob: -10.663809776306152

Token 660: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.6326636075973511
    2. ' route' → logprob: -0.7576636075973511
    3. 'len' → logprob: -10.63266372680664
    4. ' len' → logprob: -11.13266372680664
    5. '(route' → logprob: -11.63266372680664
    6. ' ' → logprob: -12.25766372680664
    7. ' not' → logprob: -12.25766372680664
    8. '0' → logprob: -13.38266372680664
    9. ' ' → logprob: -13.50766372680664
    10. 'not' → logprob: -13.88266372680664

Token 661: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009081258322112262
    2. ' and' → logprob: -7.375907897949219
    3. 'and' → logprob: -8.500907897949219
    4. '0' → logprob: -9.750907897949219
    5. ' ' → logprob: -12.375907897949219
    6. '   ' → logprob: -12.500907897949219
    7. '==' → logprob: -12.875907897949219
    8. '<|end|>' → logprob: -13.875907897949219
    9. '```' → logprob: -13.875907897949219
    10. '<|end|>' → logprob: -14.000907897949219

Token 662: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.125041007995605
    3. '[' → logprob: -14.750041007995605
    4. '   ' → logprob: -16.25004005432129
    5. '۰' → logprob: -17.37504005432129
    6. '    ' → logprob: -18.18754005432129
    7. '1' → logprob: -18.37504005432129
    8. '  ' → logprob: -18.56254005432129
    9. '...' → logprob: -18.87504005432129
    10. '000' → logprob: -19.12504005432129

Token 663: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1130112037062645
    2. '[' → logprob: -2.238011121749878
    3. ')[' → logprob: -9.488011360168457
    4. ' ][' → logprob: -10.238011360168457
    5. '   ' → logprob: -10.738011360168457
    6. ']' → logprob: -11.113011360168457
    7. ''][' → logprob: -11.988011360168457
    8. '1' → logprob: -12.238011360168457
    9. '}[' → logprob: -12.238011360168457
    10. '"][' → logprob: -12.363011360168457

Token 664: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. '0' → logprob: -11.62501335144043
    3. ' ' → logprob: -12.87501335144043
    4. '[' → logprob: -13.50001335144043
    5. '
' → logprob: -15.50001335144043
    6. '```' → logprob: -16.06251335144043
    7. '   ' → logprob: -16.62501335144043
    8. '-' → logprob: -17.06251335144043
    9. '' → logprob: -17.93751335144043
    10. '>' → logprob: -18.00001335144043

Token 665: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1477317214012146
    2. ' ==' → logprob: -2.2727317810058594
    3. '<=' → logprob: -3.5227317810058594
    4. ' <=' → logprob: -5.397731781005859
    5. '>' → logprob: -8.52273178100586
    6. '<' → logprob: -10.27273178100586
    7. ']==' → logprob: -11.77273178100586
    8. ' <' → logprob: -12.39773178100586
    9. ' >' → logprob: -12.64773178100586
    10. '===' → logprob: -13.02273178100586

Token 666: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06021210551261902
    2. ' ==' → logprob: -3.1852121353149414
    3. '<=' → logprob: -4.185212135314941
    4. ' <=' → logprob: -6.935212135314941
    5. '>' → logprob: -7.185212135314941
    6. '<' → logprob: -9.310212135314941
    7. ' >' → logprob: -11.435212135314941
    8. '=' → logprob: -12.560212135314941
    9. '0' → logprob: -12.810212135314941
    10. ' <' → logprob: -12.935212135314941

Token 667: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3484455943107605
    2. ' ' → logprob: -1.2234456539154053
    3. '   ' → logprob: -15.223445892333984
    4. '1' → logprob: -15.348445892333984
    5. ' ' → logprob: -15.848445892333984
    6. '  ' → logprob: -15.973445892333984
    7. '	' → logprob: -17.223445892333984
    8. '=' → logprob: -17.535945892333984
    9. '```' → logprob: -17.785945892333984
    10. '00' → logprob: -17.910945892333984

Token 668: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.125335693359375
    4. '1' → logprob: -16.625335693359375
    5. '  ' → logprob: -17.250335693359375
    6. '۰' → logprob: -17.687835693359375
    7. ' ' → logprob: -18.000335693359375
    8. '00' → logprob: -18.187835693359375
    9. '	' → logprob: -18.250335693359375
    10. '    ' → logprob: -18.875335693359375

Token 669: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32100534439086914
    2. ':' → logprob: -1.3210053443908691
    3. '   ' → logprob: -5.321005344390869
    4. '       ' → logprob: -5.946005344390869
    5. ' and' → logprob: -9.071004867553711
    6. '):
' → logprob: -10.071004867553711
    7. ':
' → logprob: -10.946004867553711
    8. ':

' → logprob: -11.946004867553711
    9. ',' → logprob: -12.571004867553711
    10. '           ' → logprob: -12.946004867553711

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1566588431596756
    2. '   ' → logprob: -2.656658887863159
    3. ' del' → logprob: -2.906658887863159
    4. ' route' → logprob: -4.40665864944458
    5. 'route' → logprob: -5.53165864944458
    6. 'del' → logprob: -5.78165864944458
    7. '	   ' → logprob: -8.531659126281738
    8. '	del' → logprob: -8.531659126281738
    9. '   ' → logprob: -8.531659126281738
    10. ',' → logprob: -9.156659126281738

Token 671: ' delete' (ID: 6168)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.16106943786144257
    2. 'del' → logprob: -1.911069393157959
    3. ' del' → logprob: -7.786069393157959
    4. '   ' → logprob: -8.036069869995117
    5. ' route' → logprob: -9.786069869995117
    6. '       ' → logprob: -10.536069869995117
    7. '	del' → logprob: -11.286069869995117
    8. '           ' → logprob: -11.911069869995117
    9. '```' → logprob: -13.161069869995117
    10. '   ' → logprob: -15.161069869995117

Token 672: 'Product' (ID: 4532)
  Prédit: 'Product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Product' → logprob: -2.3557529857498594e-05
    2. 'product' → logprob: -10.75002384185791
    3. 'route' → logprob: -14.12502384185791
    4. ' product' → logprob: -14.25002384185791
    5. ' Product' → logprob: -15.00002384185791
    6. 'Route' → logprob: -16.000022888183594
    7. '_product' → logprob: -16.250022888183594
    8. '(route' → logprob: -17.375022888183594
    9. 'now' → logprob: -18.000022888183594
    10. '	Product' → logprob: -18.250022888183594

Token 673: '(route' (ID: 64883)
  Prédit: '(route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(route' → logprob: -0.010641339235007763
    2. '(now' → logprob: -4.635641574859619
    3. 'route' → logprob: -7.260641574859619
    4. 'now' → logprob: -8.885641098022461
    5. '(' → logprob: -10.635641098022461
    6. '(product' → logprob: -12.260641098022461
    7. ' (' → logprob: -12.635641098022461
    8. ' now' → logprob: -13.635641098022461
    9. ' route' → logprob: -13.635641098022461
    10. '(Route' → logprob: -13.635641098022461

Token 674: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1160349458805285e-05
    2. '0' → logprob: -12.125011444091797
    3. ')' → logprob: -13.500011444091797
    4. '.pop' → logprob: -13.750011444091797
    5. '[
' → logprob: -14.125011444091797
    6. '```' → logprob: -14.500011444091797
    7. '   ' → logprob: -15.000011444091797
    8. '(' → logprob: -15.000011444091797
    9. ')[' → logprob: -15.000011444091797
    10. 'pop' → logprob: -15.375011444091797

Token 675: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00045783669338561594
    2. '[' → logprob: -7.875457763671875
    3. ' ' → logprob: -9.500457763671875
    4. '   ' → logprob: -13.750457763671875
    5. '<|end|>' → logprob: -15.000457763671875
    6. '  ' → logprob: -15.375457763671875
    7. '(' → logprob: -15.625457763671875
    8. ')' → logprob: -15.937957763671875
    9. '.' → logprob: -16.000457763671875
    10. '.pop' → logprob: -16.375457763671875

Token 676: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012596181593835354
    2. '[' → logprob: -4.387596130371094
    3. ' ][' → logprob: -9.887596130371094
    4. '```' → logprob: -11.637596130371094
    5. '>[' → logprob: -11.887596130371094
    6. ')[' → logprob: -12.762596130371094
    7. ''][' → logprob: -12.762596130371094
    8. ']' → logprob: -12.762596130371094
    9. '   ' → logprob: -12.887596130371094
    10. '0' → logprob: -13.012596130371094

Token 677: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.805981972021982e-05
    2. ' ' → logprob: -9.37509822845459
    3. '[' → logprob: -11.62509822845459
    4. '1' → logprob: -13.93759822845459
    5. '```' → logprob: -14.68759822845459
    6. '   ' → logprob: -14.87509822845459
    7. '][' → logprob: -15.18759822845459
    8. '
' → logprob: -15.18759822845459
    9. '  ' → logprob: -15.50009822845459
    10. '2' → logprob: -15.50009822845459

Token 678: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00024144348572008312
    2. '])
' → logprob: -8.75024127960205
    3. ')' → logprob: -9.87524127960205
    4. ']' → logprob: -11.25024127960205
    5. ')])' → logprob: -12.12524127960205
    6. '[' → logprob: -12.50024127960205
    7. ')]' → logprob: -13.12524127960205
    8. ' ])' → logprob: -13.37524127960205
    9. '   ' → logprob: -14.00024127960205
    10. '])]' → logprob: -14.12524127960205

Token 679: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 680: ' now' (ID: 1954)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.012594414874911308
    2. 'del' → logprob: -4.387594223022461
    3. '   ' → logprob: -10.137594223022461
    4. '       ' → logprob: -10.512594223022461
    5. ' del' → logprob: -11.387594223022461
    6. ' route' → logprob: -12.512594223022461
    7. '	del' → logprob: -13.887594223022461
    8. '```' → logprob: -14.012594223022461
    9. '$route' → logprob: -15.262594223022461
    10. '           ' → logprob: -15.387594223022461

Token 681: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -9.088346359931165e-07
    2. '_pos' → logprob: -15.000000953674316
    3. ' Pos' → logprob: -15.750000953674316
    4. 'Po' → logprob: -17.0
    5. '(Pos' → logprob: -17.0
    6. 'pos' → logprob: -17.125
    7. '_Pos' → logprob: -17.125
    8. '=' → logprob: -17.25
    9. 'P' → logprob: -17.25
    10. ')' → logprob: -17.5

Token 682: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740784466266632
    2. '=' → logprob: -0.9740784168243408
    3. ' ' → logprob: -14.724078178405762
    4. '<|end|>' → logprob: -15.349078178405762
    5. ' =)' → logprob: -15.724078178405762
    6. ' +=' → logprob: -15.724078178405762
    7. ')' → logprob: -15.974078178405762
    8. ',' → logprob: -16.224079132080078
    9. '＝' → logprob: -16.724079132080078
    10. '+=' → logprob: -17.099079132080078

Token 683: ' route' (ID: 9656)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.011059965938329697
    2. ' route' → logprob: -4.511059761047363
    3. '-' → logprob: -12.136059761047363
    4. '-route' → logprob: -12.511059761047363
    5. ' -' → logprob: -13.761059761047363
    6. '(route' → logprob: -14.136059761047363
    7. ' ' → logprob: -15.136059761047363
    8. '   ' → logprob: -15.386059761047363
    9. 'x' → logprob: -15.636059761047363
    10. 'product' → logprob: -15.761059761047363

Token 684: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015938883880153298
    2. '][' → logprob: -6.876594066619873
    3. '.pop' → logprob: -7.876594066619873
    4. '0' → logprob: -9.126593589782715
    5. ']' → logprob: -11.001593589782715
    6. '].' → logprob: -11.126593589782715
    7. '.' → logprob: -11.126593589782715
    8. '   ' → logprob: -11.876593589782715
    9. '```' → logprob: -12.001593589782715
    10. 'pop' → logprob: -13.251593589782715

Token 685: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016635251813568175
    2. '1' → logprob: -9.000165939331055
    3. ' ' → logprob: -10.875165939331055
    4. '[' → logprob: -11.000165939331055
    5. '-' → logprob: -13.312665939331055
    6. '   ' → logprob: -13.875165939331055
    7. '```' → logprob: -14.062665939331055
    8. '(' → logprob: -14.437665939331055
    9. '۰' → logprob: -14.937665939331055
    10. 'next' → logprob: -15.187665939331055

Token 686: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002595872851088643
    2. '[' → logprob: -6.127595901489258
    3. '0' → logprob: -8.002595901489258
    4. ' ][' → logprob: -10.627595901489258
    5. ']' → logprob: -11.502595901489258
    6. '   ' → logprob: -11.752595901489258
    7. '+' → logprob: -11.752595901489258
    8. '"][' → logprob: -12.002595901489258
    9. '```' → logprob: -12.002595901489258
    10. '-' → logprob: -12.877595901489258

Token 687: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025465316139161587
    2. '1' → logprob: -6.002546310424805
    3. '[' → logprob: -9.877546310424805
    4. ' ' → logprob: -12.565046310424805
    5. '][' → logprob: -13.065046310424805
    6. ']' → logprob: -13.065046310424805
    7. '```' → logprob: -13.065046310424805
    8. '-' → logprob: -13.815046310424805
    9. '۰' → logprob: -13.877546310424805
    10. '2' → logprob: -13.940046310424805

Token 688: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5367811322212219
    2. ')' → logprob: -0.9117811322212219
    3. '<|end|>' → logprob: -4.786781311035156
    4. '])' → logprob: -5.786781311035156
    5. ')]' → logprob: -7.411781311035156
    6. ')
' → logprob: -7.536781311035156
    7. ']
' → logprob: -7.786781311035156
    8. '   ' → logprob: -8.411781311035156
    9. '<|end|>' → logprob: -9.536781311035156
    10. '+' → logprob: -10.161781311035156

Token 689: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 690: ' del' (ID: 1083)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.3876035213470459
    2. 'del' (adapté à ' del') → logprob: -1.137603521347046
    3. '       ' → logprob: -8.012603759765625
    4. ' del' → logprob: -8.262603759765625
    5. '   ' → logprob: -9.012603759765625
    6. '	del' → logprob: -11.637603759765625
    7. '```' → logprob: -12.387603759765625
    8. ' route' → logprob: -12.512603759765625
    9. '$route' → logprob: -14.137603759765625
    10. '_route' → logprob: -14.262603759765625

Token 691: ' route' (ID: 9656)
  Prédit: ' route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' route' → logprob: -0.12693503499031067
    2. 'route' → logprob: -2.1269350051879883
    3. '(route' → logprob: -12.501935005187988
    4. 'Route' → logprob: -14.001935005187988
    5. '_route' → logprob: -14.001935005187988
    6. '.route' → logprob: -14.251935005187988
    7. '$route' → logprob: -14.501935005187988
    8. ' ' → logprob: -15.751935005187988
    9. ' product' → logprob: -16.626935958862305
    10. ' ' → logprob: -16.876935958862305

Token 692: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.941850526549388e-06
    2. '[:]' → logprob: -12.125007629394531
    3. '[:' → logprob: -13.625007629394531
    4. '0' → logprob: -14.500007629394531
    5. '```' → logprob: -14.750007629394531
    6. ' [' → logprob: -15.000007629394531
    7. '\[' → logprob: -16.50000762939453
    8. '.' → logprob: -18.37500762939453
    9. '[...]' → logprob: -18.50000762939453
    10. ' ' → logprob: -18.75000762939453

Token 693: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003728774609044194
    2. '[' → logprob: -8.000372886657715
    3. ' ' → logprob: -10.250372886657715
    4. '(' → logprob: -14.250372886657715
    5. 'route' → logprob: -15.125372886657715
    6. ' [' → logprob: -15.375372886657715
    7. '   ' → logprob: -15.875372886657715
    8. '][' → logprob: -16.3128719329834
    9. '```' → logprob: -16.4378719329834
    10. ':' → logprob: -16.4378719329834

Token 694: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.945094355614856e-05
    2. ']
' → logprob: -10.375069618225098
    3. ')]' → logprob: -11.875069618225098
    4. '])' → logprob: -12.250069618225098
    5. '<|end|>' → logprob: -12.250069618225098
    6. '0' → logprob: -12.500069618225098
    7. '[' → logprob: -12.625069618225098
    8. ']

' → logprob: -12.625069618225098
    9. ')' → logprob: -12.875069618225098
    10. ' ]' → logprob: -13.000069618225098

Token 695: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 696: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.025012323632836342
    2. 'main' → logprob: -4.775012493133545
    3. ' get' → logprob: -5.275012493133545
    4. ' move' → logprob: -6.150012493133545
    5. ' goto' → logprob: -6.775012493133545
    6. ' run' → logprob: -7.650012493133545
    7. ' sys' → logprob: -7.650012493133545
    8. ' update' → logprob: -7.775012493133545
    9. ' check' → logprob: -7.775012493133545
    10. ' product' → logprob: -7.900012493133545

Token 697: 'Product' (ID: 4532)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0025052670389413834
    2. '():
' → logprob: -7.002505302429199
    3. '()' → logprob: -7.252505302429199
    4. ' ():' → logprob: -7.752505302429199
    5. '(' → logprob: -8.8775053024292
    6. 'ialize' → logprob: -9.2525053024292
    7. '(V' → logprob: -9.6275053024292
    8. '_' → logprob: -10.2525053024292
    9. '_V' → logprob: -11.3775053024292
    10. ':' → logprob: -11.5025053024292

Token 698: '(now' (ID: 65064)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002941095153801143
    2. '():
' → logprob: -8.500293731689453
    3. ' ():' → logprob: -9.625293731689453
    4. '()' → logprob: -11.750293731689453
    5. '(now' → logprob: -12.000293731689453
    6. '():
' → logprob: -12.250293731689453
    7. '(' → logprob: -12.625293731689453
    8. '(current' → logprob: -14.625293731689453
    9. 'def' → logprob: -14.875293731689453
    10. '=' → logprob: -15.375293731689453

Token 699: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.0005243193008936942
    2. 'pos' → logprob: -8.250524520874023
    3. '_pos' → logprob: -9.000524520874023
    4. 'Product' → logprob: -9.625524520874023
    5. ')' → logprob: -10.375524520874023
    6. 'Position' → logprob: -11.875524520874023
    7. 'Prod' → logprob: -12.000524520874023
    8. ',' → logprob: -12.125524520874023
    9. 'P' → logprob: -12.500524520874023
    10. '_Pos' → logprob: -13.375524520874023

Token 700: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017393168527632952
    2. '):
' → logprob: -6.501739501953125
    3. ',' → logprob: -8.501739501953125
    4. '):
' → logprob: -11.251739501953125
    5. ')' → logprob: -11.751739501953125
    6. ':' → logprob: -11.876739501953125
    7. '   ' → logprob: -12.626739501953125
    8. ' ):' → logprob: -13.751739501953125
    9. '):

' → logprob: -14.876739501953125
    10. ' ' → logprob: -15.376739501953125

Token 701: '   ' (ID: 271)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.4845234751701355
    2. '   ' → logprob: -0.9845234751701355
    3. 'for' → logprob: -4.734523296356201
    4. ' global' → logprob: -6.734523296356201
    5. '	global' → logprob: -8.23452377319336
    6. 'product' → logprob: -10.10952377319336
    7. 'def' → logprob: -10.10952377319336
    8. ' for' → logprob: -10.35952377319336
    9. 'if' → logprob: -10.73452377319336
    10. 'while' → logprob: -12.60952377319336

Token 702: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -0.17127874493598938
    2. 'product' → logprob: -2.421278715133667
    3. 'for' → logprob: -2.796278715133667
    4. '   ' → logprob: -5.421278953552246
    5. 'if' → logprob: -7.046278953552246
    6. 'temp' → logprob: -7.421278953552246
    7. 'pass' → logprob: -7.671278953552246
    8. 'idx' → logprob: -8.046278953552246
    9. 'def' → logprob: -9.296278953552246
    10. 'tmp' → logprob: -9.296278953552246

Token 703: ' temp' (ID: 5484)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.18391020596027374
    2. ' product' → logprob: -2.0589101314544678
    3. 'pos' → logprob: -4.058910369873047
    4. 'route' → logprob: -4.183910369873047
    5. ' route' → logprob: -6.058910369873047
    6. 'now' → logprob: -6.058910369873047
    7. ' pos' → logprob: -6.433910369873047
    8. ' now' → logprob: -7.558910369873047
    9. 'order' → logprob: -8.183910369873047
    10. 'V' → logprob: -8.808910369873047

Token 704: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0009588662651367486
    2. '_product' → logprob: -7.0009589195251465
    3. '_' → logprob: -10.250958442687988
    4. '_pos' → logprob: -12.875958442687988
    5. '_nodes' → logprob: -13.375958442687988
    6. '_route' → logprob: -14.000958442687988
    7. '_Node' → logprob: -14.125958442687988
    8. ' _' → logprob: -14.375958442687988
    9. 'node' → logprob: -14.375958442687988
    10. '_token' → logprob: -14.500958442687988

Token 705: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2873428463935852
    2. '   ' → logprob: -1.5373427867889404
    3. '
' → logprob: -3.5373427867889404
    4. ',temp' → logprob: -6.9123430252075195
    5. 'def' → logprob: -7.1623430252075195
    6. ' =' → logprob: -7.2873430252075195
    7. '    
' → logprob: -7.4123430252075195
    8. '[' → logprob: -7.5373430252075195
    9. ',
' → logprob: -7.7873430252075195
    10. '[
' → logprob: -8.53734302520752

Token 706: ' product' (ID: 1888)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -1.0504153966903687
    2. 'product' → logprob: -1.8004153966903687
    3. ' route' → logprob: -1.8004153966903687
    4. ' product' → logprob: -1.9254153966903687
    5. 'V' → logprob: -2.800415515899658
    6. 'pos' → logprob: -3.550415515899658
    7. 'es' → logprob: -3.675415515899658
    8. ' V' → logprob: -3.800415515899658
    9. ' pos' → logprob: -4.675415515899658
    10. 'now' → logprob: -5.300415515899658

Token 707: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0325344055891037
    2. ',' → logprob: -3.65753436088562
    3. '
' → logprob: -6.032534599304199
    4. 'for' → logprob: -6.282534599304199
    5. 'global' → logprob: -7.407534599304199
    6. 'temp' → logprob: -7.657534599304199
    7. 'def' → logprob: -9.1575345993042
    8. ' =' → logprob: -9.2825345993042
    9. 'product' → logprob: -9.2825345993042
    10. '[' → logprob: -9.5325345993042

Token 708: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018016016110777855
    2. '
' → logprob: -4.5180158615112305
    3. 'temp' → logprob: -5.1430158615112305
    4. ',' → logprob: -8.14301586151123
    5. 'for' → logprob: -8.51801586151123
    6. 'global' → logprob: -8.64301586151123
    7. ' temp' → logprob: -9.26801586151123
    8. '    
' → logprob: -9.26801586151123
    9. 'product' → logprob: -9.76801586151123
    10. '	temp' → logprob: -10.14301586151123

Token 709: ' get' (ID: 717)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.5768090486526489
    2. 'temp' → logprob: -1.576809048652649
    3. 'for' → logprob: -1.826809048652649
    4. 'global' → logprob: -3.2018089294433594
    5. '   ' → logprob: -4.451808929443359
    6. 'if' → logprob: -5.076808929443359
    7. 'route' → logprob: -5.701808929443359
    8. 'idx' → logprob: -5.951808929443359
    9. 'node' → logprob: -7.201808929443359
    10. 'def' → logprob: -7.326808929443359

Token 710: 'Distance' (ID: 17525)
  Prédit: 'Product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Product' → logprob: -4.961759259458631e-06
    2. 'Target' → logprob: -13.125004768371582
    3. 'product' → logprob: -13.625004768371582
    4. '_product' → logprob: -14.500004768371582
    5. 'Distance' → logprob: -14.625004768371582
    6. ' Product' → logprob: -14.875004768371582
    7. '	Product' → logprob: -15.875004768371582
    8. '_Product' → logprob: -16.8750057220459
    9. 'Products' → logprob: -17.0000057220459
    10. '<Product' → logprob: -17.2500057220459

Token 711: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.0003727582807186991
    2. '(' → logprob: -8.000372886657715
    3. 'now' → logprob: -10.875372886657715
    4. '[now' → logprob: -12.250372886657715
    5. '(product' → logprob: -13.250372886657715
    6. ' now' → logprob: -13.625372886657715
    7. '(route' → logprob: -13.625372886657715
    8. '(temp' → logprob: -13.875372886657715
    9. '(init' → logprob: -13.875372886657715
    10. ' (' → logprob: -14.125372886657715

Token 712: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -4.127333340875339e-06
    2. '(Pos' → logprob: -13.125003814697266
    3. '_pos' → logprob: -13.750003814697266
    4. ' Pos' → logprob: -14.875003814697266
    5. '_Pos' → logprob: -15.250003814697266
    6. 'pos' → logprob: -16.000003814697266
    7. 'Product' → logprob: -16.500003814697266
    8. ',' → logprob: -16.625003814697266
    9. ')' → logprob: -16.875003814697266
    10. 'Prod' → logprob: -17.750003814697266

Token 713: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006587947718799114
    2. '(now' → logprob: -5.506587982177734
    3. '(product' → logprob: -6.756587982177734
    4. '(' → logprob: -7.131587982177734
    5. ')' → logprob: -8.381587982177734
    6. 'now' → logprob: -8.756587982177734
    7. 'product' → logprob: -9.881587982177734
    8. '[now' → logprob: -10.006587982177734
    9. ' ,' → logprob: -10.756587982177734
    10. ',get' → logprob: -12.006587982177734

Token 714: ' V' (ID: 631)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1325815916061401
    2. 'get' → logprob: -1.1325815916061401
    3. 'product' → logprob: -1.3825815916061401
    4. 'now' → logprob: -3.1325817108154297
    5. 'pos' → logprob: -3.7575817108154297
    6. ' get' → logprob: -4.13258171081543
    7. ' product' → logprob: -4.63258171081543
    8. ' ' → logprob: -5.63258171081543
    9. 'V' → logprob: -5.75758171081543
    10. ' now' → logprob: -6.50758171081543

Token 715: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008916613645851612
    2. ' -' → logprob: -4.75891637802124
    3. ')' → logprob: -8.133916854858398
    4. '   ' → logprob: -12.883916854858398
    5. '[' → logprob: -13.008916854858398
    6. ' ' → logprob: -13.633916854858398
    7. '<|end|>' → logprob: -14.633916854858398
    8. '1' → logprob: -14.758916854858398
    9. '),' → logprob: -15.633916854858398
    10. ')
' → logprob: -15.633916854858398

Token 716: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001637812121771276
    2. ' ' → logprob: -6.501637935638428
    3. '2' → logprob: -9.25163745880127
    4. '   ' → logprob: -11.25163745880127
    5. '```' → logprob: -12.31413745880127
    6. '3' → logprob: -12.68913745880127
    7. '4' → logprob: -13.18913745880127
    8. '
' → logprob: -13.31413745880127
    9. '10' → logprob: -13.56413745880127
    10. '  ' → logprob: -13.62663745880127

Token 717: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4060561776859686e-05
    2. ')
' → logprob: -10.125043869018555
    3. ' )' → logprob: -13.000043869018555
    4. '   ' → logprob: -14.125043869018555
    5. '<|end|>' → logprob: -14.750043869018555
    6. ')

' → logprob: -15.625043869018555
    7. ')
' → logprob: -16.375043869018555
    8. ')#' → logprob: -16.750043869018555
    9. ');' → logprob: -17.000043869018555
    10. '),' → logprob: -17.000043869018555

Token 718: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05892501398921013
    2. '<|end|>' → logprob: -3.308924913406372
    3. 'for' → logprob: -4.808925151824951
    4. 'temp' → logprob: -5.433925151824951
    5. 'product' → logprob: -5.808925151824951
    6. ' for' → logprob: -6.183925151824951
    7. '```' → logprob: -7.308925151824951
    8. ' temp' → logprob: -7.558925151824951
    9. '
' → logprob: -7.808925151824951
    10. ' product' → logprob: -8.433924674987793

Token 719: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.35556650161743164
    2. 'product' → logprob: -1.8555665016174316
    3. 'temp' → logprob: -2.8555665016174316
    4. 'distance' → logprob: -3.7305665016174316
    5. 'route' → logprob: -3.8555665016174316
    6. 'get' → logprob: -4.730566501617432
    7. '   ' → logprob: -5.105566501617432
    8. 'now' → logprob: -5.230566501617432
    9. 'total' → logprob: -5.855566501617432
    10. 'if' → logprob: -5.980566501617432

Token 720: ' i' (ID: 575)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7387335896492004
    2. 'p' → logprob: -1.4887335300445557
    3. ' i' → logprob: -1.7387335300445557
    4. 'i' → logprob: -2.6137335300445557
    5. ' v' → logprob: -4.738733768463135
    6. 'v' → logprob: -5.113733768463135
    7. ' product' → logprob: -5.738733768463135
    8. ' idx' → logprob: -5.738733768463135
    9. ' prod' → logprob: -5.738733768463135
    10. 'x' → logprob: -5.863733768463135

Token 721: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3347512483596802
    2. 'in' → logprob: -1.4597512483596802
    3. ',' → logprob: -2.9597511291503906
    4. 'product' → logprob: -9.20975112915039
    5. ' ,' → logprob: -9.70975112915039
    6. '   ' → logprob: -10.45975112915039
    7. ',v' → logprob: -10.70975112915039
    8. ' ' → logprob: -10.83475112915039
    9. ',p' → logprob: -11.33475112915039
    10. ' product' → logprob: -11.64725112915039

Token 722: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.015667006373405457
    2. 'product' → logprob: -4.640666961669922
    3. ' range' → logprob: -5.140666961669922
    4. ' product' → logprob: -10.890666961669922
    5. ' ' → logprob: -12.765666961669922
    6. '   ' → logprob: -13.015666961669922
    7. 'route' → logprob: -13.265666961669922
    8. '  ' → logprob: -13.390666961669922
    9. 're' → logprob: -13.515666961669922
    10. 'temp' → logprob: -13.640666961669922

Token 723: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.03249863162636757
    2. '(V' → logprob: -4.032498836517334
    3. 'len' → logprob: -4.407498836517334
    4. '(' → logprob: -6.407498836517334
    5. ' len' → logprob: -8.782498359680176
    6. '(product' → logprob: -8.782498359680176
    7. 'V' → logprob: -10.407498359680176
    8. ' (' → logprob: -10.657498359680176
    9. 'product' → logprob: -11.032498359680176
    10. ' V' → logprob: -12.407498359680176

Token 724: '(product' (ID: 31697)
  Prédit: '(product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.0015585471410304308
    2. '(route' → logprob: -6.876558780670166
    3. 'product' → logprob: -8.001558303833008
    4. ' product' → logprob: -9.251558303833008
    5. '(temp' → logprob: -10.001558303833008
    6. '(' → logprob: -10.876558303833008
    7. '(range' → logprob: -11.876558303833008
    8. ' (' → logprob: -12.001558303833008
    9. 'route' → logprob: -12.251558303833008
    10. ')' → logprob: -13.376558303833008

Token 725: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6445304751396179
    2. '):' → logprob: -0.7695304751396179
    3. ')):
' → logprob: -4.894530296325684
    4. ')):' → logprob: -5.519530296325684
    5. '   ' → logprob: -8.644530296325684
    6. ' ):' → logprob: -10.269530296325684
    7. '):
' → logprob: -10.519530296325684
    8. '[' → logprob: -10.769530296325684
    9. '))' → logprob: -11.144530296325684
    10. '       ' → logprob: -11.144530296325684

Token 726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01585569605231285
    2. '   ' → logprob: -4.76585578918457
    3. ' if' → logprob: -5.26585578918457
    4. 'if' → logprob: -7.01585578918457
    5. ' product' → logprob: -7.64085578918457
    6. 'product' → logprob: -8.14085578918457
    7. ',' → logprob: -9.26585578918457
    8. '<|end|>' → logprob: -9.26585578918457
    9. '        
' → logprob: -10.64085578918457
    10. '
' → logprob: -11.01585578918457

Token 727: ' for' (ID: 395)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.22380730509757996
    2. ' product' → logprob: -2.7238073348999023
    3. 'if' → logprob: -3.3488073348999023
    4. 'distance' → logprob: -3.7238073348999023
    5. '   ' → logprob: -3.8488073348999023
    6. ' if' → logprob: -4.473807334899902
    7. 'get' → logprob: -4.473807334899902
    8. '       ' → logprob: -4.598807334899902
    9. 'temp' → logprob: -4.723807334899902
    10. ' get' → logprob: -6.098807334899902

Token 728: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5796335339546204
    2. ' j' → logprob: -0.8296335339546204
    3. 'v' → logprob: -7.454633712768555
    4. ' product' → logprob: -7.829633712768555
    5. ' v' → logprob: -7.954633712768555
    6. 'product' → logprob: -7.954633712768555
    7. 'range' → logprob: -8.204633712768555
    8. ' range' → logprob: -8.329633712768555
    9. 'route' → logprob: -8.579633712768555
    10. 'x' → logprob: -8.704633712768555

Token 729: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12705840170383453
    2. 'in' → logprob: -2.127058506011963
    3. 'range' → logprob: -10.252058029174805
    4. '(' → logprob: -10.752058029174805
    5. '   ' → logprob: -10.752058029174805
    6. ',' → logprob: -11.127058029174805
    7. ' ' → logprob: -11.502058029174805
    8. ' range' → logprob: -12.127058029174805
    9. '(range' → logprob: -12.377058029174805
    10. ' i' → logprob: -12.752058029174805

Token 730: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.013207763433456421
    2. ' range' → logprob: -4.763207912445068
    3. 'product' → logprob: -5.513207912445068
    4. 'route' → logprob: -7.888207912445068
    5. 'es' → logprob: -9.38820743560791
    6. ' product' → logprob: -10.26320743560791
    7. 'temp' → logprob: -11.01320743560791
    8. '(range' → logprob: -11.51320743560791
    9. '[' → logprob: -11.76320743560791
    10. 'len' → logprob: -12.76320743560791

Token 731: '(len' (ID: 14990)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.050121575593948364
    2. ' range' → logprob: -3.050121545791626
    3. 'product' → logprob: -7.300121784210205
    4. '(range' → logprob: -8.300121307373047
    5. 'len' → logprob: -8.425121307373047
    6. 'i' → logprob: -8.800121307373047
    7. ' product' → logprob: -10.050121307373047
    8. '(i' → logprob: -10.425121307373047
    9. ' ' → logprob: -10.550121307373047
    10. '   ' → logprob: -10.675121307373047

Token 732: '(temp' (ID: 19094)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.10238181054592133
    2. '(route' → logprob: -2.727381706237793
    3. '(es' → logprob: -3.727381706237793
    4. '(temp' → logprob: -4.977381706237793
    5. '(range' → logprob: -8.102381706237793
    6. 'product' → logprob: -8.227381706237793
    7. '(V' → logprob: -9.727381706237793
    8. ' product' → logprob: -9.852381706237793
    9. '(order' → logprob: -9.852381706237793
    10. 'route' → logprob: -9.977381706237793

Token 733: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00013977376511320472
    2. '_product' → logprob: -9.250140190124512
    3. '[' → logprob: -11.000140190124512
    4. 'node' → logprob: -11.500140190124512
    5. '[node' → logprob: -11.875140190124512
    6. '[i' → logprob: -12.625140190124512
    7. 'Node' → logprob: -13.625140190124512
    8. 'product' → logprob: -14.375140190124512
    9. '   ' → logprob: -14.625140190124512
    10. '_i' → logprob: -14.750140190124512

Token 734: ')):
' (ID: 22530)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004189637023955584
    2. ')):' → logprob: -6.129189491271973
    3. '[' → logprob: -6.754189491271973
    4. ')):
' → logprob: -7.254189491271973
    5. '[j' → logprob: -9.754189491271973
    6. '))' → logprob: -10.254189491271973
    7. ')' → logprob: -12.129189491271973
    8. ' ' → logprob: -12.504189491271973
    9. '[-' → logprob: -12.879189491271973
    10. ')-' → logprob: -13.004189491271973

Token 735: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06486580520868301
    2. ' if' → logprob: -3.064865827560425
    3. 'if' → logprob: -4.939865589141846
    4. '       ' → logprob: -5.189865589141846
    5. '<|end|>' → logprob: -6.689865589141846
    6. '	       ' → logprob: -7.314865589141846
    7. '               ' → logprob: -7.564865589141846
    8. '   ' → logprob: -8.564866065979004
    9. ' for' → logprob: -8.939866065979004
    10. '[' → logprob: -9.689866065979004

Token 736: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2299354076385498
    2. '           ' → logprob: -2.22993540763855
    3. ' if' → logprob: -3.22993540763855
    4. 'temp' → logprob: -3.47993540763855
    5. 'product' → logprob: -4.354935646057129
    6. 'cost' → logprob: -5.354935646057129
    7. '   ' → logprob: -6.229935646057129
    8. '       ' → logprob: -6.479935646057129
    9. ' temp' → logprob: -6.729935646057129
    10. 'for' → logprob: -6.854935646057129

Token 737: ' product' (ID: 1888)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.23856821656227112
    2. 'product' → logprob: -1.8635681867599487
    3. 'len' → logprob: -3.8635683059692383
    4. 'j' → logprob: -4.488568305969238
    5. 'get' → logprob: -5.238568305969238
    6. 'route' → logprob: -5.238568305969238
    7. 'V' → logprob: -5.488568305969238
    8. 'es' → logprob: -5.488568305969238
    9. 'i' → logprob: -6.613568305969238
    10. ' temp' → logprob: -6.738568305969238

Token 738: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3133696913719177
    2. '[j' → logprob: -1.3133697509765625
    3. '[' → logprob: -9.938369750976562
    4. '       ' → logprob: -10.688369750976562
    5. ' [' → logprob: -11.938369750976562
    6. '][' → logprob: -12.063369750976562
    7. '           ' → logprob: -12.313369750976562
    8. '```' → logprob: -12.313369750976562
    9. '[I' → logprob: -12.938369750976562
    10. '   ' → logprob: -13.313369750976562

Token 739: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.11710754036903381
    2. '][' → logprob: -2.367107629776001
    3. '[' → logprob: -4.117107391357422
    4. '[i' → logprob: -7.992107391357422
    5. ']' → logprob: -10.492107391357422
    6. '[][' → logprob: -10.742107391357422
    7. ' ][' → logprob: -10.992107391357422
    8. '   ' → logprob: -10.992107391357422
    9. 'j' → logprob: -11.867107391357422
    10. '
' → logprob: -12.117107391357422

Token 740: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22667695581912994
    2. '1' → logprob: -1.6016769409179688
    3. '0' → logprob: -7.101676940917969
    4. '3' → logprob: -8.351676940917969
    5. 'j' → logprob: -9.351676940917969
    6. ' ' → logprob: -9.726676940917969
    7. '
' → logprob: -11.476676940917969
    8. '[' → logprob: -11.476676940917969
    9. '4' → logprob: -11.914176940917969
    10. '   ' → logprob: -11.976676940917969

Token 741: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.8400653004646301
    2. ']' → logprob: -1.5900652408599854
    3. '==' → logprob: -1.5900652408599854
    4. ' ==' → logprob: -1.8400652408599854
    5. '][' → logprob: -7.0900654792785645
    6. '[' → logprob: -7.4650654792785645
    7. '']==' → logprob: -9.340065002441406
    8. ' ]' → logprob: -10.215065002441406
    9. '       ' → logprob: -10.965065002441406
    10. '           ' → logprob: -11.090065002441406

Token 742: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04894500970840454
    2. ' ==' → logprob: -3.0489449501037598
    3. '[' → logprob: -8.673945426940918
    4. '>=' → logprob: -9.798945426940918
    5. ']==' → logprob: -10.298945426940918
    6. '!=' → logprob: -10.673945426940918
    7. 'and' → logprob: -10.673945426940918
    8. '           ' → logprob: -12.173945426940918
    9. ' and' → logprob: -12.298945426940918
    10. '=' → logprob: -12.298945426940918

Token 743: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.013070112094283104
    2. ' j' → logprob: -4.513070106506348
    3. 'temp' → logprob: -6.263070106506348
    4. ' temp' → logprob: -10.138070106506348
    5. '   ' → logprob: -10.763070106506348
    6. ' ' → logprob: -10.888070106506348
    7. '	j' → logprob: -10.888070106506348
    8. '  ' → logprob: -12.263070106506348
    9. '    ' → logprob: -12.763070106506348
    10. 'route' → logprob: -13.138070106506348

Token 744: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7383550405502319
    2. 'and' → logprob: -0.7383550405502319
    3. ':
' → logprob: -3.4883551597595215
    4. ':' → logprob: -4.7383551597595215
    5. '           ' → logprob: -5.6133551597595215
    6. '               ' → logprob: -6.8633551597595215
    7. '       ' → logprob: -9.363354682922363
    8. ' or' → logprob: -10.988354682922363
    9. '   ' → logprob: -11.113354682922363
    10. '              ' → logprob: -11.363354682922363

Token 745: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5000566244125366
    2. ' and' → logprob: -1.1250566244125366
    3. 'and' → logprob: -3.000056743621826
    4. 'if' → logprob: -4.625056743621826
    5. ' if' → logprob: -5.500056743621826
    6. 'temp' → logprob: -6.250056743621826
    7. '<|end|>' → logprob: -6.875056743621826
    8. '           ' → logprob: -7.000056743621826
    9. ' temp' → logprob: -8.000056266784668
    10. ' or' → logprob: -8.750056266784668

Token 746: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' (adapté à ' product') → logprob: -0.017126280814409256
    2. '               ' → logprob: -5.017126083374023
    3. 'temp' → logprob: -5.267126083374023
    4. '           ' → logprob: -6.142126083374023
    5. ' product' → logprob: -6.392126083374023
    6. '                   ' → logprob: -7.392126083374023
    7. 'route' → logprob: -8.392126083374023
    8. '   ' → logprob: -8.767126083374023
    9. 'if' → logprob: -8.892126083374023
    10. '	product' → logprob: -9.517126083374023

Token 747: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013810492237098515
    2. '][' → logprob: -9.125138282775879
    3. '[' → logprob: -11.000138282775879
    4. '[j' → logprob: -11.625138282775879
    5. '[I' → logprob: -14.500138282775879
    6. ' [' → logprob: -14.625138282775879
    7. '[][' → logprob: -14.875138282775879
    8. '   ' → logprob: -15.250138282775879
    9. '
' → logprob: -15.500138282775879
    10. '[
' → logprob: -15.625138282775879

Token 748: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000457605579867959
    2. '[' → logprob: -7.875457763671875
    3. ']' → logprob: -10.625457763671875
    4. '][-' → logprob: -11.250457763671875
    5. ' ][' → logprob: -11.625457763671875
    6. ''][' → logprob: -11.750457763671875
    7. '"][' → logprob: -12.000457763671875
    8. ']['' → logprob: -12.125457763671875
    9. '][:' → logprob: -12.625457763671875
    10. '].' → logprob: -12.875457763671875

Token 749: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32595741748809814
    2. '3' → logprob: -1.4509574174880981
    3. '2' → logprob: -3.4509572982788086
    4. '4' → logprob: -5.450957298278809
    5. '][' → logprob: -5.825957298278809
    6. '0' → logprob: -6.200957298278809
    7. '=' → logprob: -7.575957298278809
    8. '-' → logprob: -7.575957298278809
    9. '[' → logprob: -8.075957298278809
    10. '5' → logprob: -8.825957298278809

Token 750: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06965350359678268
    2. ']+=' → logprob: -3.1946535110473633
    3. ']=' → logprob: -4.069653511047363
    4. '=' → logprob: -4.819653511047363
    5. '+=' → logprob: -7.444653511047363
    6. ' =' → logprob: -8.819653511047363
    7. ' ]' → logprob: -8.819653511047363
    8. '][' → logprob: -9.194653511047363
    9. ' +=' → logprob: -9.444653511047363
    10. ']+' → logprob: -10.194653511047363

Token 751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2920859456062317
    2. ' =' → logprob: -1.417085886001587
    3. '+=' → logprob: -4.792086124420166
    4. ' +=' → logprob: -6.042086124420166
    5. ',' → logprob: -9.542085647583008
    6. ' ' → logprob: -10.417085647583008
    7. '-=' → logprob: -10.542085647583008
    8. ' -=' → logprob: -11.167085647583008
    9. '   ' → logprob: -11.542085647583008
    10. '[' → logprob: -12.042085647583008

Token 752: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.037234626710414886
    2. 'get' → logprob: -3.5372345447540283
    3. ' temp' → logprob: -5.287234783172607
    4. 'copy' → logprob: -6.662234783172607
    5. '0' → logprob: -8.41223430633545
    6. ' get' → logprob: -8.66223430633545
    7. 'j' → logprob: -9.16223430633545
    8. '100' → logprob: -9.53723430633545
    9. 'len' → logprob: -9.78723430633545
    10. 'now' → logprob: -10.16223430633545

Token 753: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.297462171758525e-05
    2. 'node' → logprob: -11.000033378601074
    3. '[j' → logprob: -12.500033378601074
    4. 'Node' → logprob: -13.125033378601074
    5. '[node' → logprob: -13.250033378601074
    6. '_pos' → logprob: -13.875033378601074
    7. '_NODE' → logprob: -14.125033378601074
    8. '_j' → logprob: -14.125033378601074
    9. '[i' → logprob: -14.375033378601074
    10. '_' → logprob: -14.375033378601074

Token 754: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.73052782076411e-05
    2. '[' → logprob: -10.750067710876465
    3. 'j' → logprob: -10.875067710876465
    4. '[i' → logprob: -11.625067710876465
    5. '][' → logprob: -11.625067710876465
    6. '[][' → logprob: -12.875067710876465
    7. '```' → logprob: -13.500067710876465
    8. '<|end|>' → logprob: -13.750067710876465
    9. '[js' → logprob: -13.875067710876465
    10. '[token' → logprob: -15.125067710876465

Token 755: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004894073354080319
    2. '[' → logprob: -7.875489234924316
    3. '[N' → logprob: -9.750489234924316
    4. ' ][' → logprob: -10.500489234924316
    5. ']' → logprob: -11.500489234924316
    6. '   ' → logprob: -11.875489234924316
    7. '	' → logprob: -13.375489234924316
    8. '"][' → logprob: -14.500489234924316
    9. ''][' → logprob: -14.875489234924316
    10. '    ' → logprob: -14.875489234924316

Token 756: '2' (ID: 17)
  Prédit: 'NODE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NODE' → logprob: -0.0036571992095559835
    2. '[N' → logprob: -6.128657341003418
    3. '   ' → logprob: -7.128657341003418
    4. '2' → logprob: -8.128657341003418
    5. 'cost' → logprob: -9.003657341003418
    6. '[' → logprob: -9.628657341003418
    7. '3' → logprob: -9.878657341003418
    8. '       ' → logprob: -11.003657341003418
    9. ' NODE' → logprob: -11.003657341003418
    10. '0' → logprob: -11.128657341003418

Token 757: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 758: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 759: ' break' (ID: 2338)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 760: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 761: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 762: ' product' (ID: 1888)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 763: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0005767432739958167
    2. '=' → logprob: -7.750576972961426
    3. ' =' → logprob: -9.250576972961426
    4. 'sort' → logprob: -11.000576972961426
    5. '[:]' → logprob: -11.375576972961426
    6. '<|end|>' → logprob: -11.375576972961426
    7. '.' → logprob: -12.125576972961426
    8. '[' → logprob: -13.875576972961426
    9. '   ' → logprob: -14.125576972961426
    10. '=[]' → logprob: -14.125576972961426

Token 764: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0025810126680880785
    2. ' sorted' → logprob: -6.0025811195373535
    3. '[' → logprob: -9.627580642700195
    4. 'copy' → logprob: -10.752580642700195
    5. 'list' → logprob: -11.752580642700195
    6. '(sorted' → logprob: -12.627580642700195
    7. 'product' → logprob: -12.752580642700195
    8. 'sort' → logprob: -13.502580642700195
    9. ' ' → logprob: -14.377580642700195
    10. '   ' → logprob: -14.627580642700195

Token 765: '(product' (ID: 31697)
  Prédit: '(product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -1.6240566083070007e-06
    2. 'product' → logprob: -14.000001907348633
    3. '(' → logprob: -14.375001907348633
    4. '(copy' → logprob: -16.250001907348633
    5. '(key' → logprob: -16.500001907348633
    6. '((' → logprob: -19.625001907348633
    7. '	product' → logprob: -19.875001907348633
    8. '(products' → logprob: -19.875001907348633
    9. '(
' → logprob: -20.000001907348633
    10. '(Product' → logprob: -20.250001907348633

Token 766: ',' (ID: 11)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.001968958182260394
    2. '(reverse' → logprob: -6.501968860626221
    3. ',key' → logprob: -7.876968860626221
    4. 'key' → logprob: -9.876969337463379
    5. '()' → logprob: -11.251969337463379
    6. '(' → logprob: -11.501969337463379
    7. 'reverse' → logprob: -12.251969337463379
    8. ',' → logprob: -12.501969337463379
    9. '[key' → logprob: -13.751969337463379
    10. '   ' → logprob: -14.626969337463379

Token 767: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.029770279303193092
    2. ' key' → logprob: -3.5297703742980957
    3. '   ' → logprob: -11.029769897460938
    4. 'lambda' → logprob: -12.779769897460938
    5. '       ' → logprob: -15.279769897460938
    6. '(key' → logprob: -15.779769897460938
    7. ',key' → logprob: -15.904769897460938
    8. 'reverse' → logprob: -15.904769897460938
    9. '	key' → logprob: -16.529769897460938
    10. '           ' → logprob: -18.029769897460938

Token 768: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -1.6240566083070007e-06
    2. '=' → logprob: -13.500001907348633
    3. 'lambda' → logprob: -16.000001907348633
    4. '(lambda' → logprob: -21.125001907348633
    5. ' lambda' → logprob: -21.625001907348633
    6. '=
' → logprob: -22.000001907348633
    7. ' =' → logprob: -23.125001907348633
    8. '=len' → logprob: -23.125001907348633
    9. '=l' → logprob: -23.750001907348633
    10. '=item' → logprob: -23.750001907348633

Token 769: ' z' (ID: 579)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1941673904657364
    2. 'lambda' → logprob: -1.9441673755645752
    3. ' x' → logprob: -3.944167375564575
    4. ' lambda' → logprob: -4.569167613983154
    5. 'product' → logprob: -5.819167613983154
    6. 'p' → logprob: -8.194167137145996
    7. ' product' → logprob: -9.069167137145996
    8. 'a' → logprob: -9.319167137145996
    9. 'item' → logprob: -10.319167137145996
    10. 'prod' → logprob: -10.319167137145996

Token 770: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06432938575744629
    2. ':z' → logprob: -2.8143293857574463
    3. ' :' → logprob: -6.064329147338867
    4. 'z' → logprob: -10.689329147338867
    5. ':(' → logprob: -12.064329147338867
    6. ' z' → logprob: -12.939329147338867
    7. ':
' → logprob: -13.689329147338867
    8. '   ' → logprob: -15.189329147338867
    9. ':[' → logprob: -15.314329147338867
    10. '(z' → logprob: -15.439329147338867

Token 771: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.016741732135415077
    2. ' z' → logprob: -4.141741752624512
    3. 'lambda' → logprob: -7.391741752624512
    4. ' lambda' → logprob: -9.516741752624512
    5. '(z' → logprob: -11.766741752624512
    6. '(lambda' → logprob: -12.516741752624512
    7. ' (' → logprob: -13.141741752624512
    8. 'x' → logprob: -13.891741752624512
    9. 'int' → logprob: -14.391741752624512
    10. '   ' → logprob: -14.391741752624512

Token 772: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014180023572407663
    2. ':' → logprob: -9.250142097473145
    3. '[-' → logprob: -11.125142097473145
    4. '.z' → logprob: -11.625142097473145
    5. '3' → logprob: -12.125142097473145
    6. '[z' → logprob: -12.625142097473145
    7. '.' → logprob: -12.625142097473145
    8. ' [' → logprob: -12.750142097473145
    9. ':[' → logprob: -13.500142097473145
    10. ':z' → logprob: -13.500142097473145

Token 773: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00255212327465415
    2. '[' → logprob: -6.002552032470703
    3. ' ' → logprob: -10.002552032470703
    4. ':' → logprob: -11.752552032470703
    5. '(' → logprob: -11.752552032470703
    6. '-' → logprob: -12.752552032470703
    7. ' [' → logprob: -12.877552032470703
    8. '   ' → logprob: -13.252552032470703
    9. '  ' → logprob: -13.377552032470703
    10. '
' → logprob: -14.002552032470703

Token 774: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004360334132798016
    2. ' )' → logprob: -8.125435829162598
    3. ',' → logprob: -9.000435829162598
    4. ' if' → logprob: -11.375435829162598
    5. ')
' → logprob: -13.375435829162598
    6. ')#' → logprob: -13.750435829162598
    7. ' ,' → logprob: -14.000435829162598
    8. '))' → logprob: -14.625435829162598
    9. ')return' → logprob: -14.875435829162598
    10. 'if' → logprob: -15.750435829162598

Token 775: 'V' (ID: 53)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 776: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4297652542591095
    2. '=' → logprob: -1.054765224456787
    3. ',' → logprob: -7.054765224456787
    4. '<|end|>' → logprob: -8.679765701293945
    5. ' ,' → logprob: -11.304765701293945
    6. ' ' → logprob: -11.929765701293945
    7. '=int' → logprob: -12.679765701293945
    8. '>' → logprob: -13.429765701293945
    9. ' =
' → logprob: -13.804765701293945
    10. '<|end|>' → logprob: -13.804765701293945

Token 777: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0012309459270909429
    2. ' E' → logprob: -8.12623119354248
    3. 'int' → logprob: -8.37623119354248
    4. '100' → logprob: -8.87623119354248
    5. 'product' → logprob: -9.25123119354248
    6. '10' → logprob: -9.62623119354248
    7. 'K' → logprob: -10.12623119354248
    8. '1' → logprob: -10.12623119354248
    9. 'M' → logprob: -10.25123119354248
    10. 'N' → logprob: -10.50123119354248

Token 778: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05161960422992706
    2. ' =' → logprob: -3.051619529724121
    3. ',' → logprob: -5.801619529724121
    4. '=int' → logprob: -12.801619529724121
    5. '=input' → logprob: -14.301619529724121
    6. '=
' → logprob: -14.551619529724121
    7. '＝' → logprob: -15.176619529724121
    8. ' ,' → logprob: -15.301619529724121
    9. ' ' → logprob: -15.676619529724121
    10. ' =
' → logprob: -15.926619529724121

Token 779: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.25341343879699707
    2. ' map' → logprob: -1.503413438796997
    3. 'list' → logprob: -7.878413200378418
    4. '5' → logprob: -8.628413200378418
    5. '10' → logprob: -8.753413200378418
    6. ' ' → logprob: -8.753413200378418
    7. '[' → logprob: -9.378413200378418
    8. '20' → logprob: -9.753413200378418
    9. '0' → logprob: -9.753413200378418
    10. '7' → logprob: -10.128413200378418

Token 780: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001144741545431316
    2. 'int' → logprob: -6.876144886016846
    3. '(lambda' → logprob: -10.251144409179688
    4. '<int' → logprob: -10.501144409179688
    5. '(' → logprob: -11.501144409179688
    6. '[int' → logprob: -11.626144409179688
    7. '(input' → logprob: -11.876144409179688
    8. '=int' → logprob: -12.001144409179688
    9. 'input' → logprob: -12.001144409179688
    10. '()' → logprob: -12.251144409179688

Token 781: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2515231370925903
    2. '(input' → logprob: -1.2515231370925903
    3. 'input' → logprob: -1.6265231370925903
    4. '(),' → logprob: -1.7515231370925903
    5. ',input' → logprob: -4.001523017883301
    6. '())' → logprob: -4.126523017883301
    7. '().' → logprob: -4.251523017883301
    8. ',' → logprob: -6.126523017883301
    9. '=input' → logprob: -6.376523017883301
    10. '(' → logprob: -6.376523017883301

Token 782: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02993098832666874
    2. 'sys' → logprob: -3.52993106842041
    3. ' input' → logprob: -8.77993106842041
    4. ' sys' → logprob: -10.52993106842041
    5. '=sys' → logprob: -18.029930114746094
    6. '(sys' → logprob: -18.404930114746094
    7. '=input' → logprob: -18.654930114746094
    8. '<input' → logprob: -18.779930114746094
    9. 'list' → logprob: -18.904930114746094
    10. '(input' → logprob: -19.279930114746094

Token 783: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5048530030981055e-06
    2. '()' → logprob: -14.125001907348633
    3. '(' → logprob: -14.750001907348633
    4. '())' → logprob: -15.500001907348633
    5. ' ().' → logprob: -16.125001907348633
    6. '()[' → logprob: -18.875001907348633
    7. '("").' → logprob: -19.875001907348633
    8. ')' → logprob: -20.250001907348633
    9. '(),' → logprob: -20.500001907348633
    10. '()
' → logprob: -20.625001907348633

Token 784: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6405310816480778e-05
    2. 'strip' → logprob: -11.625016212463379
    3. '().' → logprob: -12.500016212463379
    4. ' split' → logprob: -13.625016212463379
    5. 'rstrip' → logprob: -13.875016212463379
    6. '()' → logprob: -14.500016212463379
    7. '(split' → logprob: -14.500016212463379
    8. 'spl' → logprob: -15.625016212463379
    9. '())' → logprob: -15.750016212463379
    10. '_split' → logprob: -16.500017166137695

Token 785: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02990923821926117
    2. ')' → logprob: -3.779909133911133
    3. '()' → logprob: -5.029909133911133
    4. '())
' → logprob: -9.654909133911133
    5. '(' → logprob: -10.904909133911133
    6. '(),' → logprob: -11.279909133911133
    7. '());' → logprob: -13.154909133911133
    8. '())
' → logprob: -13.779909133911133
    9. '().' → logprob: -13.904909133911133
    10. ' ())' → logprob: -14.404909133911133

Token 786: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0762709304690361
    2. 'order' → logprob: -3.076270818710327
    3. 'product' → logprob: -4.451271057128906
    4. 'route' → logprob: -4.576271057128906
    5. 'for' → logprob: -6.326271057128906
    6. 'sys' → logprob: -7.076271057128906
    7. 'graph' → logprob: -7.201271057128906
    8. 'temp' → logprob: -7.701271057128906
    9. 'now' → logprob: -7.951271057128906
    10. 'import' → logprob: -8.201271057128906

Token 787: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3954493999481201
    2. ' =' → logprob: -1.1454493999481201
    3. '=[]' → logprob: -4.770449638366699
    4. '=[' → logprob: -10.5204496383667
    5. '=[]
' → logprob: -10.8954496383667
    6. '[]' → logprob: -11.3954496383667
    7. ',' → logprob: -13.2704496383667
    8. '=[]
' → logprob: -13.2704496383667
    9. '＝' → logprob: -13.5204496383667
    10. '={}' → logprob: -14.1454496383667

Token 788: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.007445951923727989
    2. '[' → logprob: -5.007445812225342
    3. '[]
' → logprob: -7.257445812225342
    4. '[][]' → logprob: -11.3824462890625
    5. ' [[]' → logprob: -11.7574462890625
    6. '[]

' → logprob: -13.0074462890625
    7. ' []' → logprob: -13.5074462890625
    8. '[][' → logprob: -14.1324462890625
    9. '[[' → logprob: -14.5074462890625
    10. '[
' → logprob: -15.2574462890625

Token 789: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0076795038767158985
    2. ' for' → logprob: -4.882679462432861
    3. ')' → logprob: -10.88267993927002
    4. '
' → logprob: -11.00767993927002
    5. ']' → logprob: -11.00767993927002
    6. '<|end|>' → logprob: -11.25767993927002
    7. '	for' → logprob: -12.13267993927002
    8. '   ' → logprob: -14.25767993927002
    9. ',' → logprob: -14.38267993927002
    10. ' ' → logprob: -15.00767993927002

Token 790: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004427863284945488
    2. 'in' → logprob: -5.879427909851074
    3. ' in' → logprob: -6.754427909851074
    4. 'range' → logprob: -8.254427909851074
    5. ' _' → logprob: -8.754427909851074
    6. ' range' → logprob: -10.629427909851074
    7. 'i' → logprob: -12.129427909851074
    8. '_range' → logprob: -13.504427909851074
    9. '_v' → logprob: -13.629427909851074
    10. '_i' → logprob: -13.754427909851074

Token 791: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011267447844147682
    2. ' range' → logprob: -5.13626766204834
    3. 'in' → logprob: -5.26126766204834
    4. '_' → logprob: -9.13626766204834
    5. ' in' → logprob: -10.88626766204834
    6. '0' → logprob: -12.76126766204834
    7. '(range' → logprob: -13.01126766204834
    8. '_range' → logprob: -13.76126766204834
    9. ' _' → logprob: -13.88626766204834
    10. ' ' → logprob: -14.38626766204834

Token 792: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052350712940096855
    2. ' range' → logprob: -5.255235195159912
    3. '_range' → logprob: -14.130234718322754
    4. '_' → logprob: -14.755234718322754
    5. '(range' → logprob: -15.630234718322754
    6. '	range' → logprob: -18.38023567199707
    7. '   ' → logprob: -20.38023567199707
    8. 'V' → logprob: -20.75523567199707
    9. '.range' → logprob: -20.75523567199707
    10. 'in' → logprob: -20.88023567199707

Token 793: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.38689154386520386
    2. 'V' → logprob: -1.1368916034698486
    3. 'range' → logprob: -11.88689136505127
    4. '   ' → logprob: -12.38689136505127
    5. ' V' → logprob: -12.76189136505127
    6. '	V' → logprob: -13.01189136505127
    7. '(' → logprob: -13.13689136505127
    8. 'E' → logprob: -14.26189136505127
    9. ' (' → logprob: -15.13689136505127
    10. '(E' → logprob: -15.38689136505127

Token 794: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3245594799518585
    2. ')]' → logprob: -1.3245594501495361
    3. ')' → logprob: -4.699559688568115
    4. ']
' → logprob: -6.199559688568115
    5. ')]
' → logprob: -9.449559211730957
    6. ')
' → logprob: -11.449559211730957
    7. ']
' → logprob: -12.449559211730957
    8. ' ]' → logprob: -12.699559211730957
    9. ']

' → logprob: -12.824559211730957
    10. ')],' → logprob: -12.949559211730957

Token 795: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00037192381569184363
    2. 'edge' → logprob: -8.625371932983398
    3. ' for' → logprob: -8.875371932983398
    4. 'u' → logprob: -10.750371932983398
    5. 'e' → logprob: -11.125371932983398
    6. 'v' → logprob: -11.750371932983398
    7. 'a' → logprob: -13.000371932983398
    8. '<|end|>' → logprob: -13.750371932983398
    9. 'E' → logprob: -14.000371932983398
    10. 'edges' → logprob: -14.500371932983398

Token 796: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00045677117304876447
    2. ' _' → logprob: -7.750456809997559
    3. '_i' → logprob: -10.625456809997559
    4. 'i' → logprob: -14.000456809997559
    5. '_e' → logprob: -14.750456809997559
    6. '_E' → logprob: -15.500456809997559
    7. ' ' → logprob: -16.000455856323242
    8. '_=' → logprob: -16.375455856323242
    9. '_in' → logprob: -16.875455856323242
    10. '_v' → logprob: -17.000455856323242

Token 797: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07930711656808853
    2. ' in' → logprob: -2.5793070793151855
    3. 'range' → logprob: -7.8293070793151855
    4. ' range' → logprob: -11.829307556152344
    5. ' ' → logprob: -12.079307556152344
    6. 'E' → logprob: -12.704307556152344
    7. '_' → logprob: -13.079307556152344
    8. ',' → logprob: -15.079307556152344
    9. 'V' → logprob: -15.829307556152344
    10. 'In' → logprob: -16.329307556152344

Token 798: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. 'r' → logprob: -19.000059127807617
    4. '	range' → logprob: -19.750059127807617
    5. ' ' → logprob: -20.000059127807617
    6. '_range' → logprob: -20.625059127807617
    7. 'E' → logprob: -21.125059127807617
    8. 'ran' → logprob: -21.125059127807617
    9. '(range' → logprob: -21.250059127807617
    10. '   ' → logprob: -21.500059127807617

Token 799: '(E' (ID: 20882)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.006225252058357
    2. '(E' → logprob: -5.131225109100342
    3. ' E' → logprob: -8.1312255859375
    4. '(' → logprob: -14.3812255859375
    5. 'int' → logprob: -14.3812255859375
    6. '(int' → logprob: -15.0062255859375
    7. ' (' → logprob: -15.2562255859375
    8. '   ' → logprob: -15.5062255859375
    9. ',E' → logprob: -15.6312255859375
    10. '	E' → logprob: -16.2562255859375

Token 800: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04091188311576843
    2. '):' → logprob: -3.290911912918091
    3. '():
' → logprob: -7.540911674499512
    4. ',' → logprob: -7.665911674499512
    5. '):
' → logprob: -7.790911674499512
    6. '   ' → logprob: -7.790911674499512
    7. ':' → logprob: -7.915911674499512
    8. ':
' → logprob: -8.040911674499512
    9. ')' → logprob: -9.665911674499512
    10. ' ):
' → logprob: -9.665911674499512

Token 801: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.032336022704839706
    2. 'u' → logprob: -3.5323359966278076
    3. 's' → logprob: -6.657336235046387
    4. ' a' → logprob: -7.532336235046387
    5. 'f' → logprob: -7.907336235046387
    6. ' u' → logprob: -9.282336235046387
    7. 'v' → logprob: -9.532336235046387
    8. 'from' → logprob: -9.532336235046387
    9. 'x' → logprob: -9.657336235046387
    10. 'A' → logprob: -10.407336235046387

Token 802: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.07947449386119843
    2. 'u' → logprob: -3.329474449157715
    3. 'f' → logprob: -3.579474449157715
    4. 's' → logprob: -4.954474449157715
    5. 'from' → logprob: -6.329474449157715
    6. ' a' → logprob: -6.579474449157715
    7. 'frm' → logprob: -6.954474449157715
    8. 'fr' → logprob: -7.579474449157715
    9. 'x' → logprob: -8.329474449157715
    10. 'v' → logprob: -8.329474449157715

Token 803: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47418639063835144
    2. ',b' → logprob: -0.9741864204406738
    3. ' ,' → logprob: -10.099185943603516
    4. 'b' → logprob: -10.099185943603516
    5. ',v' → logprob: -11.349185943603516
    6. ',s' → logprob: -12.974185943603516
    7. ',c' → logprob: -13.099185943603516
    8. ',n' → logprob: -13.224185943603516
    9. ',k' → logprob: -13.474185943603516
    10. ',d' → logprob: -13.724185943603516

Token 804: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0052342405542731285
    2. ' b' → logprob: -5.255234241485596
    3. 'bc' → logprob: -14.630233764648438
    4. 'w' → logprob: -18.505233764648438
    5. 't' → logprob: -18.630233764648438
    6. 'c' → logprob: -18.755233764648438
    7. 'e' → logprob: -19.630233764648438
    8. ',b' → logprob: -19.880233764648438
    9. '	b' → logprob: -20.130233764648438
    10. 's' → logprob: -20.255233764648438

Token 805: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.318655401468277
    2. ',' → logprob: -1.3186553716659546
    3. ' =' → logprob: -5.318655490875244
    4. ' ,' → logprob: -7.818655490875244
    5. 'a' → logprob: -10.943655014038086
    6. ',b' → logprob: -10.943655014038086
    7. ',a' → logprob: -11.068655014038086
    8. ',c' → logprob: -11.693655014038086
    9. ',v' → logprob: -12.318655014038086
    10. 'b' → logprob: -13.193655014038086

Token 806: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004098195640835911
    2. ' c' → logprob: -7.8754096031188965
    3. 'cost' → logprob: -11.000410079956055
    4. 'd' → logprob: -11.750410079956055
    5. 'l' → logprob: -13.000410079956055
    6. 't' → logprob: -13.750410079956055
    7. 'w' → logprob: -13.875410079956055
    8. '	c' → logprob: -15.625410079956055
    9. 'p' → logprob: -16.375410079956055
    10. ' cost' → logprob: -16.625410079956055

Token 807: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. '=input' → logprob: -17.648244857788086
    4. ' ' → logprob: -18.148244857788086
    5. '＝' → logprob: -18.523244857788086
    6. '   ' → logprob: -19.773244857788086
    7. '=list' → logprob: -19.773244857788086
    8. ',' → logprob: -19.898244857788086
    9. '=sys' → logprob: -21.273244857788086
    10. '=line' → logprob: -21.398244857788086

Token 808: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.03804183006286621
    2. ' map' → logprob: -3.288041830062866
    3. '	map' → logprob: -15.413042068481445
    4. 'list' → logprob: -15.788042068481445
    5. ' list' → logprob: -19.413042068481445
    6. '.map' → logprob: -20.163042068481445
    7. '_map' → logprob: -20.413042068481445
    8. '(map' → logprob: -21.038042068481445
    9. ' ' → logprob: -21.663042068481445
    10. ',map' → logprob: -21.913042068481445

Token 809: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.0802738870552275e-05
    2. 'int' → logprob: -11.50001049041748
    3. '=int' → logprob: -15.12501049041748
    4. ',int' → logprob: -15.50001049041748
    5. '[int' → logprob: -16.125011444091797
    6. '<int' → logprob: -17.000011444091797
    7. ' int' → logprob: -18.250011444091797
    8. '(input' → logprob: -19.500011444091797
    9. '	int' → logprob: -19.750011444091797
    10. '(' → logprob: -20.000011444091797

Token 810: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4970875084400177
    2. 'input' → logprob: -1.8720874786376953
    3. '(input' → logprob: -1.9970874786376953
    4. ',' → logprob: -2.4970874786376953
    5. '(' → logprob: -4.747087478637695
    6. ' input' → logprob: -5.372087478637695
    7. '=input' → logprob: -5.872087478637695
    8. ')' → logprob: -6.747087478637695
    9. '()' → logprob: -7.122087478637695
    10. '(),' → logprob: -7.372087478637695

Token 811: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0003183041699230671
    2. 'sys' → logprob: -8.75031852722168
    3. ' input' → logprob: -8.75031852722168
    4. ' sys' → logprob: -13.62531852722168
    5. 'stdin' → logprob: -17.50031852722168
    6. ' ' → logprob: -17.62531852722168
    7. '1' → logprob: -18.00031852722168
    8. '_input' → logprob: -18.00031852722168
    9. '0' → logprob: -18.00031852722168
    10. 'list' → logprob: -20.00031852722168

Token 812: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.7491250875755213e-05
    2. '()' → logprob: -10.625027656555176
    3. ' ().' → logprob: -14.125027656555176
    4. 'split' → logprob: -14.250027656555176
    5. '.' → logprob: -14.750027656555176
    6. '()
' → logprob: -15.375027656555176
    7. '())' → logprob: -15.625027656555176
    8. '   ' → logprob: -16.25002670288086
    9. '()[' → logprob: -16.25002670288086
    10. '.split' → logprob: -16.25002670288086

Token 813: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.696889623621246e-06
    2. 'plit' → logprob: -13.62500286102295
    3. 'strip' → logprob: -14.12500286102295
    4. 'spl' → logprob: -15.75000286102295
    5. '_split' → logprob: -15.87500286102295
    6. 'skip' → logprob: -16.250001907348633
    7. ' split' → logprob: -16.375001907348633
    8. 'rstrip' → logprob: -16.500001907348633
    9. 'splice' → logprob: -17.000001907348633
    10. 'scanf' → logprob: -17.125001907348633

Token 814: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5747517347335815
    2. ')
' → logprob: -1.0747517347335815
    3. '())
' → logprob: -2.699751853942871
    4. '())' → logprob: -3.574751853942871
    5. ')
' → logprob: -8.449751853942871
    6. ');' → logprob: -9.324751853942871
    7. '()' → logprob: -9.449751853942871
    8. '());' → logprob: -9.949751853942871
    9. '())
' → logprob: -10.449751853942871
    10. '(' → logprob: -10.449751853942871

Token 815: '   ' (ID: 271)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.29446476697921753
    2. '   ' → logprob: -1.5444648265838623
    3. '	es' → logprob: -3.5444648265838623
    4. ' es' → logprob: -4.669464588165283
    5. '
' → logprob: -6.294464588165283
    6. '<|end|>' → logprob: -7.544464588165283
    7. '    
' → logprob: -8.544465065002441
    8. '[' → logprob: -9.044465065002441
    9. '-es' → logprob: -9.294465065002441
    10. 's' → logprob: -9.294465065002441

Token 816: ' a' (ID: 261)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.11379548907279968
    2. ' es' → logprob: -2.238795518875122
    3. '   ' → logprob: -7.363795280456543
    4. 'a' (adapté à ' a') → logprob: -8.488795280456543
    5. ' a' → logprob: -9.988795280456543
    6. '	es' → logprob: -9.988795280456543
    7. 'e' → logprob: -10.863795280456543
    8. '-es' → logprob: -11.988795280456543
    9. ' ' → logprob: -12.863795280456543
    10. '
' → logprob: -12.988795280456543

Token 817: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7447932958602905
    2. '-=' → logprob: -0.9947932958602905
    3. ' -=' → logprob: -1.8697932958602905
    4. 'a' → logprob: -7.24479341506958
    5. ' -' → logprob: -8.369792938232422
    6. ',' → logprob: -8.994792938232422
    7. ',a' → logprob: -10.369792938232422
    8. ' ' → logprob: -10.494792938232422
    9. '[' → logprob: -10.619792938232422
    10. '--' → logprob: -11.369792938232422

Token 818: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1602243334054947
    2. ' b' → logprob: -1.9102243185043335
    3. '	b' → logprob: -16.16022491455078
    4. ' ' → logprob: -16.16022491455078
    5. ',b' → logprob: -18.28522491455078
    6. '_b' → logprob: -19.16022491455078
    7. '   ' → logprob: -19.16022491455078
    8. ')b' → logprob: -19.66022491455078
    9. ' ' → logprob: -19.91022491455078
    10. '    ' → logprob: -20.03522491455078

Token 819: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.08696731925010681
    2. ' -=' → logprob: -2.5869672298431396
    3. '-' → logprob: -4.961967468261719
    4. ',' → logprob: -7.211967468261719
    5. ',a' → logprob: -8.586967468261719
    6. 'a' → logprob: -10.211967468261719
    7. '-,' → logprob: -10.336967468261719
    8. ' ' → logprob: -10.836967468261719
    9. ' ,' → logprob: -10.961967468261719
    10. '   ' → logprob: -12.461967468261719

Token 820: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02324605919420719
    2. ' a' → logprob: -3.7732460498809814
    3. '	a' → logprob: -14.648245811462402
    4. '(a' → logprob: -16.89824676513672
    5. ' ' → logprob: -17.39824676513672
    6. '[a' → logprob: -17.64824676513672
    7. '   ' → logprob: -17.89824676513672
    8. 'b' → logprob: -19.27324676513672
    9. ' (' → logprob: -19.27324676513672
    10. '0' → logprob: -20.02324676513672

Token 821: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007104054093360901
    2. ' -' → logprob: -7.250710487365723
    3. '-=' → logprob: -14.750710487365723
    4. ' ' → logprob: -18.500709533691406
    5. '--' → logprob: -18.750709533691406
    6. '-,' → logprob: -19.000709533691406
    7. 'b' → logprob: -19.125709533691406
    8. '−' → logprob: -19.250709533691406
    9. '–' → logprob: -19.500709533691406
    10. 'a' → logprob: -19.500709533691406

Token 822: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. 'a' → logprob: -20.50000762939453
    4. ',' → logprob: -21.37500762939453
    5. '<|end|>' → logprob: -21.62500762939453
    6. ' one' → logprob: -22.62500762939453
    7. '１' → logprob: -22.62500762939453
    8. ' a' → logprob: -22.62500762939453
    9. 'b' → logprob: -22.75000762939453
    10. '2' → logprob: -22.75000762939453

Token 823: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025544962845742702
    2. ',b' → logprob: -6.252554416656494
    3. ' ,' → logprob: -7.377554416656494
    4. ',c' → logprob: -15.627554893493652
    5. 'b' → logprob: -15.877554893493652
    6. ',a' → logprob: -16.252553939819336
    7. 'a' → logprob: -16.627553939819336
    8. ',
' → logprob: -17.002553939819336
    9. ' b' → logprob: -17.627553939819336
    10. 'c' → logprob: -18.252553939819336

Token 824: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196768581867218
    2. ' b' → logprob: -2.811967611312866
    3. '   ' → logprob: -17.936967849731445
    4. '	b' → logprob: -18.561967849731445
    5. ' ' → logprob: -19.061967849731445
    6. '  ' → logprob: -21.436967849731445
    7. ')b' → logprob: -21.436967849731445
    8. '_b' → logprob: -21.811967849731445
    9. '>b' → logprob: -21.936967849731445
    10. ',b' → logprob: -22.061967849731445

Token 825: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001911432045744732
    2. ' -' → logprob: -9.000190734863281
    3. 'b' → logprob: -9.875190734863281
    4. ',' → logprob: -11.250190734863281
    5. 'a' → logprob: -13.250190734863281
    6. ',b' → logprob: -14.000190734863281
    7. ' b' → logprob: -15.000190734863281
    8. '   ' → logprob: -15.750190734863281
    9. ' ,' → logprob: -16.87519073486328
    10. 'c' → logprob: -17.37519073486328

Token 826: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'b' → logprob: -18.000001907348633
    4. '<|end|>' → logprob: -19.500001907348633
    5. '-' → logprob: -19.875001907348633
    6. 'a' → logprob: -20.625001907348633
    7. '１' → logprob: -20.875001907348633
    8. '2' → logprob: -20.875001907348633
    9. '```' → logprob: -21.250001907348633
    10. '   ' → logprob: -21.500001907348633

Token 827: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004213501699268818
    2. 'es' → logprob: -5.504213333129883
    3. ' es' → logprob: -9.004213333129883
    4. '	es' → logprob: -11.629213333129883
    5. '
' → logprob: -13.254213333129883
    6. '  ' → logprob: -15.129213333129883
    7. '    
' → logprob: -15.379213333129883
    8. ' ' → logprob: -15.379213333129883
    9. '   ' → logprob: -15.504213333129883
    10. '       ' → logprob: -15.754213333129883

Token 828: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005947286728769541
    2. 'es' → logprob: -5.130947113037109
    3. ' es' → logprob: -11.25594711303711
    4. '	es' → logprob: -12.38094711303711
    5. '  ' → logprob: -14.75594711303711
    6. ' ' → logprob: -15.25594711303711
    7. '   ' → logprob: -15.50594711303711
    8. '```' → logprob: -15.63094711303711
    9. '       ' → logprob: -15.75594711303711
    10. '
' → logprob: -16.00594711303711

Token 829: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -1.1875571544806007e-05
    2. ' es' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.625011444091797
    4. '	es' → logprob: -16.250011444091797
    5. '
' → logprob: -17.125011444091797
    6. 'esi' → logprob: -18.250011444091797
    7. '-es' → logprob: -19.000011444091797
    8. ' ' → logprob: -19.375011444091797
    9. 'esz' → logprob: -19.375011444091797
    10. 'ES' → logprob: -19.875011444091797

Token 830: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.128163257315464e-07
    2. 'a' → logprob: -16.0
    3. '[b' → logprob: -16.5
    4. '
' → logprob: -19.75
    5. '[' → logprob: -21.0
    6. '[e' → logprob: -21.375
    7. '[i' → logprob: -21.625
    8. ' [' → logprob: -21.75
    9. '.append' → logprob: -21.75
    10. '[A' → logprob: -21.875

Token 831: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0003374886582605541
    2. '.' → logprob: -8.250337600708008
    3. '.append' → logprob: -9.625337600708008
    4. ').' → logprob: -11.625337600708008
    5. 'append' → logprob: -14.750337600708008
    6. '}.' → logprob: -15.375337600708008
    7. ']' → logprob: -15.500337600708008
    8. ''].' → logprob: -16.000337600708008
    9. ' ].' → logprob: -16.500337600708008
    10. ']].' → logprob: -16.625337600708008

Token 832: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. '.append' → logprob: -15.000000953674316
    3. 'app' → logprob: -16.25
    4. ' append' → logprob: -17.5
    5. 'appen' → logprob: -17.875
    6. '_append' → logprob: -20.375
    7. 'Append' → logprob: -20.875
    8. '	append' → logprob: -21.25
    9. 'ap' → logprob: -23.375
    10. 'pend' → logprob: -25.125

Token 833: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.013287634588778019
    2. '[b' → logprob: -5.513287544250488
    3. '[c' → logprob: -6.013287544250488
    4. '[' → logprob: -6.138287544250488
    5. '(b' → logprob: -6.138287544250488
    6. '((' → logprob: -7.138287544250488
    7. '(' → logprob: -7.138287544250488
    8. '(c' → logprob: -7.263287544250488
    9. '[(' → logprob: -9.888287544250488
    10. '[a' → logprob: -9.888287544250488

Token 834: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.2729995988775045e-06
    2. ' b' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.7500057220459
    4. '	b' → logprob: -18.1250057220459
    5. '
' → logprob: -19.3750057220459
    6. '(b' → logprob: -19.6250057220459
    7. 'B' → logprob: -20.5000057220459
    8. 'a' → logprob: -21.1250057220459
    9. ',b' → logprob: -21.6250057220459
    10. '
' → logprob: -21.6250057220459

Token 835: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0387403666973114
    2. ',c' → logprob: -3.288740396499634
    3. ' ,' → logprob: -7.288740158081055
    4. 'c' → logprob: -11.288740158081055
    5. ',
' → logprob: -13.413740158081055
    6. ' c' → logprob: -13.788740158081055
    7. '   ' → logprob: -15.913740158081055
    8. '	c' → logprob: -16.163740158081055
    9. '‌,' → logprob: -16.788740158081055
    10. '
' → logprob: -17.663740158081055

Token 836: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005823421524837613
    2. ' c' → logprob: -7.500582218170166
    3. '   ' → logprob: -10.875582695007324
    4. '    ' → logprob: -12.875582695007324
    5. '  ' → logprob: -13.250582695007324
    6. '	c' → logprob: -13.625582695007324
    7. ' ' → logprob: -13.875582695007324
    8. 'copy' → logprob: -14.125582695007324
    9. '     ' → logprob: -14.750582695007324
    10. '1' → logprob: -14.750582695007324

Token 837: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.011198020540177822
    2. '])
' → logprob: -4.511198043823242
    3. ',' → logprob: -9.136198043823242
    4. ' ])' → logprob: -10.261198043823242
    5. '])
' → logprob: -13.011198043823242
    6. ')' → logprob: -13.636198043823242
    7. ']);' → logprob: -13.886198043823242
    8. '])

' → logprob: -14.261198043823242
    9. ' ])
' → logprob: -14.261198043823242
    10. '])]' → logprob: -14.886198043823242

Token 838: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0907309278845787
    2. 'es' → logprob: -2.465730905532837
    3. ' es' → logprob: -6.840731143951416
    4. '<|end|>' → logprob: -7.840731143951416
    5. '	es' → logprob: -8.215730667114258
    6. '<|end|>' → logprob: -11.340730667114258
    7. ' ' → logprob: -11.590730667114258
    8. '[' → logprob: -11.840730667114258
    9. '```' → logprob: -12.465730667114258
    10. '-es' → logprob: -12.465730667114258

Token 839: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -2.8206473871250637e-05
    2. ' es' → logprob: -10.625028610229492
    3. '   ' → logprob: -13.375028610229492
    4. '	es' → logprob: -13.500028610229492
    5. '[' → logprob: -15.000028610229492
    6. '-es' → logprob: -15.250028610229492
    7. '<|end|>' → logprob: -15.750028610229492
    8. ''es' → logprob: -16.875028610229492
    9. '_es' → logprob: -17.000028610229492
    10. 'e' → logprob: -17.125028610229492

Token 840: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0006370236515067518
    2. '[a' → logprob: -7.375637054443359
    3. 'b' → logprob: -11.50063705444336
    4. '[' → logprob: -15.75063705444336
    5. 's' → logprob: -16.62563705444336
    6. '[s' → logprob: -17.12563705444336
    7. 'a' → logprob: -17.25063705444336
    8. '=b' → logprob: -18.87563705444336
    9. '[B' → logprob: -19.12563705444336
    10. '[c' → logprob: -19.25063705444336

Token 841: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.01123844925314188
    2. ',' → logprob: -5.3862385749816895
    3. '.append' → logprob: -5.3862385749816895
    4. '.' → logprob: -6.7612385749816895
    5. '][' → logprob: -8.136238098144531
    6. '   ' → logprob: -8.261238098144531
    7. '[' → logprob: -8.511238098144531
    8. ' ].' → logprob: -10.011238098144531
    9. ' ,' → logprob: -11.261238098144531
    10. ').' → logprob: -11.386238098144531

Token 842: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.1008713702030946e-06
    2. '.append' → logprob: -13.625001907348633
    3. 'appen' → logprob: -14.625001907348633
    4. ' append' → logprob: -15.125001907348633
    5. '1' → logprob: -16.125001907348633
    6. 'Append' → logprob: -17.000001907348633
    7. '	append' → logprob: -17.125001907348633
    8. '0' → logprob: -17.875001907348633
    9. 'app' → logprob: -18.250001907348633
    10. 'add' → logprob: -18.500001907348633

Token 843: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.048802535980939865
    2. '[a' → logprob: -3.048802614212036
    3. '[' → logprob: -8.923802375793457
    4. '[b' → logprob: -9.548802375793457
    5. ' [' → logprob: -11.548802375793457
    6. ' ' → logprob: -15.548802375793457
    7. ' ([' → logprob: -15.798802375793457
    8. '   ' → logprob: -16.173803329467773
    9. '(a' → logprob: -16.423803329467773
    10. 'a' → logprob: -16.548803329467773

Token 844: 'a' (ID: 64)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.011057964526116848
    2. 'a' → logprob: -4.5110578536987305
    3. ' [' → logprob: -12.63605785369873
    4. '[
' → logprob: -12.63605785369873
    5. '[' → logprob: -13.38605785369873
    6. '   ' → logprob: -14.26105785369873
    7. '(a' → logprob: -14.26105785369873
    8. ' a' → logprob: -14.63605785369873
    9. '<a' → logprob: -15.63605785369873
    10. '	a' → logprob: -16.761058807373047

Token 845: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013452880375552922
    2. ',c' → logprob: -9.250134468078613
    3. ' ,' → logprob: -10.250134468078613
    4. '[' → logprob: -13.000134468078613
    5. 'c' → logprob: -14.875134468078613
    6. '[c' → logprob: -15.250134468078613
    7. ',[' → logprob: -16.75013542175293
    8. '```' → logprob: -17.12513542175293
    9. ',
' → logprob: -17.87513542175293
    10. ' ' → logprob: -18.25013542175293

Token 846: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6931476593017578
    2. ' c' → logprob: -0.6931476593017578
    3. ',c' → logprob: -15.693147659301758
    4. '	c' → logprob: -15.943147659301758
    5. ' ' → logprob: -16.443147659301758
    6. '   ' → logprob: -16.568147659301758
    7. ')c' → logprob: -16.693147659301758
    8. '+c' → logprob: -18.193147659301758
    9. ' ' → logprob: -18.443147659301758
    10. '    ' → logprob: -18.443147659301758

Token 847: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.963691804325208e-05
    2. '])
' → logprob: -11.250029563903809
    3. ' ])' → logprob: -11.500029563903809
    4. ')' → logprob: -12.250029563903809
    5. ')]' → logprob: -14.500029563903809
    6. ')])' → logprob: -14.750029563903809
    7. ',' → logprob: -15.375029563903809
    8. '])

' → logprob: -16.125030517578125
    9. ']' → logprob: -16.250030517578125
    10. '   ' → logprob: -16.625030517578125

Token 848: 'F' (ID: 37)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.03144613280892372
    2. 'time' → logprob: -4.2814459800720215
    3. 'now' → logprob: -4.5314459800720215
    4. 'route' → logprob: -5.2814459800720215
    5. 'total' → logprob: -8.15644645690918
    6. '0' → logprob: -8.78144645690918
    7. 'V' → logprob: -8.90644645690918
    8. 'start' → logprob: -9.53144645690918
    9. '#' → logprob: -9.90644645690918
    10. ' order' → logprob: -10.15644645690918

Token 849: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5372079014778137
    2. ',' → logprob: -1.037207841873169
    3. '=' → logprob: -2.912207841873169
    4. 'or' → logprob: -6.287208080291748
    5. '=int' → logprob: -7.037208080291748
    6. 'inish' → logprob: -7.162208080291748
    7. 'I' → logprob: -8.41220760345459
    8. 'rom' → logprob: -8.66220760345459
    9. 'Q' → logprob: -8.66220760345459
    10. 'R' → logprob: -8.78720760345459

Token 850: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002681945450603962
    2. ' int' → logprob: -6.127681732177734
    3. '1' → logprob: -8.377681732177734
    4. '3' → logprob: -9.752681732177734
    5. '10' → logprob: -9.752681732177734
    6. '5' → logprob: -10.502681732177734
    7. '0' → logprob: -10.752681732177734
    8. '(int' → logprob: -10.877681732177734
    9. '[int' → logprob: -11.252681732177734
    10. '2' → logprob: -11.377681732177734

Token 851: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.1008713702030946e-06
    2. '()' → logprob: -13.875001907348633
    3. 'map' → logprob: -14.500001907348633
    4. '(int' → logprob: -14.750001907348633
    5. '(range' → logprob: -16.000001907348633
    6. ',map' → logprob: -17.125001907348633
    7. '(input' → logprob: -17.375001907348633
    8. '(' → logprob: -17.500001907348633
    9. '	map' → logprob: -17.875001907348633
    10. ' map' → logprob: -18.000001907348633

Token 852: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000982435536570847
    2. 'int' → logprob: -7.000982284545898
    3. ',int' → logprob: -9.750982284545898
    4. '=int' → logprob: -11.875982284545898
    5. '[int' → logprob: -12.750982284545898
    6. ' int' → logprob: -13.625982284545898
    7. '<int' → logprob: -13.875982284545898
    8. ':int' → logprob: -15.625982284545898
    9. ']int' → logprob: -15.625982284545898
    10. '   ' → logprob: -16.5009822845459

Token 853: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.49243593215942383
    2. ',input' → logprob: -1.2424359321594238
    3. ',' → logprob: -2.367435932159424
    4. '(' → logprob: -5.742435932159424
    5. ' (' → logprob: -6.617435932159424
    6. 'input' → logprob: -7.492435932159424
    7. '(int' → logprob: -7.742435932159424
    8. '(),' → logprob: -8.117435455322266
    9. '(map' → logprob: -8.742435455322266
    10. ',int' → logprob: -9.117435455322266

Token 854: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015024791937321424
    2. ' input' → logprob: -6.501502513885498
    3. '(input' → logprob: -16.251502990722656
    4. 'sys' → logprob: -17.001502990722656
    5. ' ' → logprob: -17.876502990722656
    6. ',input' → logprob: -17.876502990722656
    7. '_input' → logprob: -18.251502990722656
    8. 'Input' → logprob: -19.751502990722656
    9. '[input' → logprob: -20.251502990722656
    10. '=input' → logprob: -20.376502990722656

Token 855: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11787606030702591
    2. '().' → logprob: -2.7428760528564453
    3. '()))' → logprob: -3.6178760528564453
    4. '()' → logprob: -4.242876052856445
    5. '(' → logprob: -5.992876052856445
    6. '(),' → logprob: -6.742876052856445
    7. ' ())' → logprob: -7.117876052856445
    8. '()[' → logprob: -8.117876052856445
    9. ' ()' → logprob: -8.117876052856445
    10. '());' → logprob: -9.117876052856445

Token 856: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10081417858600616
    2. 'input' → logprob: -2.3508141040802
    3. 'strip' → logprob: -8.100813865661621
    4. '(input' → logprob: -9.225813865661621
    5. '().' → logprob: -9.350813865661621
    6. ')' → logprob: -10.725813865661621
    7. ' input' → logprob: -10.725813865661621
    8. '(split' → logprob: -10.850813865661621
    9. '.split' → logprob: -11.350813865661621
    10. '()' → logprob: -11.600813865661621

Token 857: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04457490146160126
    2. '())' → logprob: -3.1695749759674072
    3. '))' → logprob: -6.919574737548828
    4. '()' → logprob: -8.294574737548828
    5. '(' → logprob: -8.794574737548828
    6. '()));' → logprob: -9.544574737548828
    7. '()))
' → logprob: -9.919574737548828
    8. '(),' → logprob: -10.669574737548828
    9. '()[' → logprob: -11.794574737548828
    10. '());' → logprob: -11.794574737548828

Token 858: 'T' (ID: 51)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.09760179370641708
    2. 'order' → logprob: -2.847601890563965
    3. 'now' → logprob: -3.597601890563965
    4. 'for' → logprob: -6.972601890563965
    5. 'current' → logprob: -7.097601890563965
    6. 'Q' → logprob: -7.097601890563965
    7. 'N' → logprob: -7.222601890563965
    8. 'S' → logprob: -7.472601890563965
    9. 'T' → logprob: -7.847601890563965
    10. 'product' → logprob: -7.972601890563965

Token 859: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0754874050617218
    2. ' =' → logprob: -3.2004873752593994
    3. ',' → logprob: -3.4504873752593994
    4. '=[]' → logprob: -9.95048713684082
    5. '=int' → logprob: -10.45048713684082
    6. '=list' → logprob: -10.57548713684082
    7. '=input' → logprob: -10.82548713684082
    8. ' ,' → logprob: -11.45048713684082
    9. '=[' → logprob: -11.57548713684082
    10. '[' → logprob: -11.57548713684082

Token 860: ' int' (ID: 677)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02215622365474701
    2. ' list' → logprob: -4.522156238555908
    3. 'int' → logprob: -4.647156238555908
    4. '[int' → logprob: -7.397156238555908
    5. 'F' → logprob: -8.52215576171875
    6. '[]' → logprob: -8.77215576171875
    7. '[' → logprob: -9.27215576171875
    8. 'map' → logprob: -9.39715576171875
    9. ' int' → logprob: -9.77215576171875
    10. '[list' → logprob: -9.77215576171875

Token 861: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06739414483308792
    2. 'input' → logprob: -3.317394256591797
    3. '()' → logprob: -3.567394256591797
    4. '(' → logprob: -7.692394256591797
    5. '=input' → logprob: -8.942394256591797
    6. '()
' → logprob: -9.942394256591797
    7. ' input' → logprob: -11.192394256591797
    8. '().' → logprob: -11.192394256591797
    9. ',input' → logprob: -11.817394256591797
    10. '();' → logprob: -11.942394256591797

Token 862: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0066699013113975525
    2. '()' → logprob: -5.881669998168945
    3. '())
' → logprob: -5.881669998168945
    4. ')' → logprob: -6.881669998168945
    5. '()
' → logprob: -11.131669998168945
    6. ' ())' → logprob: -11.131669998168945
    7. '(' → logprob: -12.506669998168945
    8. ')
' → logprob: -13.131669998168945
    9. '())
' → logprob: -13.131669998168945
    10. '())

' → logprob: -13.506669998168945

Token 863: 'order' (ID: 2143)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.4983005225658417
    2. 'order' → logprob: -0.9983005523681641
    3. 'time' → logprob: -3.873300552368164
    4. 'current' → logprob: -6.623300552368164
    5. 'product' → logprob: -7.248300552368164
    6. 'route' → logprob: -7.748300552368164
    7. '#' → logprob: -8.123300552368164
    8. 'total' → logprob: -9.248300552368164
    9. 'for' → logprob: -9.998300552368164
    10. 'sys' → logprob: -10.123300552368164

Token 864: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10713707655668259
    2. '=[]' → logprob: -2.3571369647979736
    3. ' =' → logprob: -4.982137203216553
    4. '=[]
' → logprob: -10.357136726379395
    5. ',' → logprob: -12.607136726379395
    6. '=[],' → logprob: -12.982136726379395
    7. '=[' → logprob: -13.107136726379395
    8. '=list' → logprob: -13.107136726379395
    9. '[]' → logprob: -13.232136726379395
    10. '=[]
' → logprob: -13.482136726379395

Token 865: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2628887891769409
    2. '[' → logprob: -1.512888789176941
    3. '[]
' → logprob: -4.7628889083862305
    4. '[int' → logprob: -6.2628889083862305
    5. '[list' → logprob: -9.13788890838623
    6. '[array' → logprob: -9.51288890838623
    7. '[][' → logprob: -10.13788890838623
    8. '[c' → logprob: -10.38788890838623
    9. ' []' → logprob: -10.51288890838623
    10. '[][]' → logprob: -10.51288890838623

Token 866: 'temp' (ID: 7340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -15.25
    3. 'while' → logprob: -16.625
    4. '
' → logprob: -19.5
    5. 'import' → logprob: -20.0
    6. '```' → logprob: -20.875
    7. '	for' → logprob: -21.375
    8. 'from' → logprob: -21.375
    9. 'product' → logprob: -21.5
    10. '[' → logprob: -22.5

Token 867: '_node' (ID: 11390)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.5720463395118713
    2. '_node' → logprob: -1.9470462799072266
    3. '_' → logprob: -2.3220462799072266
    4. '_time' → logprob: -2.9470462799072266
    5. '_tokens' → logprob: -3.3220462799072266
    6. ' =' → logprob: -4.072046279907227
    7. '=' → logprob: -4.447046279907227
    8. '_nodes' → logprob: -4.572046279907227
    9. '_step' → logprob: -4.697046279907227
    10. '()' → logprob: -4.822046279907227

Token 868: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05011432617902756
    2. ' =' → logprob: -3.300114393234253
    3. '=[]' → logprob: -4.425114154815674
    4. ',' → logprob: -11.175114631652832
    5. '=[]
' → logprob: -12.050114631652832
    6. '=[' → logprob: -13.050114631652832
    7. '[]' → logprob: -13.675114631652832
    8. '=[],' → logprob: -13.800114631652832
    9. '=[]
' → logprob: -13.925114631652832
    10. '={}' → logprob: -14.550114631652832

Token 869: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.030202357098460197
    2. '[' → logprob: -3.5302023887634277
    3. '[][]' → logprob: -8.15520191192627
    4. '[]
' → logprob: -8.90520191192627
    5. '[[' → logprob: -11.40520191192627
    6. '[][' → logprob: -12.03020191192627
    7. '[['' → logprob: -12.90520191192627
    8. '[]}' → logprob: -13.03020191192627
    9. ' []' → logprob: -13.15520191192627
    10. '0' → logprob: -13.28020191192627

Token 870: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16022534668445587
    2. ' for' → logprob: -1.9102253913879395
    3. '	for' → logprob: -14.160224914550781
    4. ']' → logprob: -14.660224914550781
    5. '
' → logprob: -16.66022491455078
    6. ')' → logprob: -17.66022491455078
    7. ' ' → logprob: -18.41022491455078
    8. 'in' → logprob: -19.28522491455078
    9. '<|end|>' → logprob: -19.41022491455078
    10. 'f' → logprob: -19.53522491455078

Token 871: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.049643103033304214
    2. 'range' → logprob: -3.049643039703369
    3. ' _' → logprob: -7.799643039703369
    4. ' range' → logprob: -7.799643039703369
    5. '_range' → logprob: -9.049643516540527
    6. 'in' → logprob: -10.174643516540527
    7. '(range' → logprob: -10.924643516540527
    8. '_V' → logprob: -11.299643516540527
    9. '(' → logprob: -11.924643516540527
    10. '=' → logprob: -11.924643516540527

Token 872: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013690461637452245
    2. 'in' → logprob: -7.001368999481201
    3. ' range' → logprob: -7.876368999481201
    4. '(range' → logprob: -9.75136947631836
    5. ' in' → logprob: -11.00136947631836
    6. '(V' → logprob: -13.75136947631836
    7. '_' → logprob: -14.75136947631836
    8. '(' → logprob: -15.12636947631836
    9. '	range' → logprob: -15.37636947631836
    10. 'V' → logprob: -15.62636947631836

Token 873: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006717267446219921
    2. ' range' → logprob: -5.006717205047607
    3. '(range' → logprob: -13.381717681884766
    4. '_' → logprob: -15.631717681884766
    5. '(V' → logprob: -16.506717681884766
    6. 'V' → logprob: -16.631717681884766
    7. '	range' → logprob: -17.506717681884766
    8. ' V' → logprob: -18.131717681884766
    9. '_range' → logprob: -19.381717681884766
    10. '(' → logprob: -20.006717681884766

Token 874: '(V' (ID: 16949)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018395395949482918
    2. ' range' → logprob: -4.01839542388916
    3. '(V' → logprob: -8.39339542388916
    4. '(range' → logprob: -11.51839542388916
    5. 'V' → logprob: -11.76839542388916
    6. ' V' → logprob: -14.26839542388916
    7. ' (' → logprob: -14.39339542388916
    8. '_range' → logprob: -16.768394470214844
    9. '	range' → logprob: -17.143394470214844
    10. '   ' → logprob: -17.393394470214844

Token 875: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003424373921006918
    2. ')]' → logprob: -5.753424167633057
    3. ']
' → logprob: -9.128424644470215
    4. ')' → logprob: -9.128424644470215
    5. ' ]' → logprob: -11.503424644470215
    6. '()]' → logprob: -11.753424644470215
    7. '])' → logprob: -12.628424644470215
    8. ']

' → logprob: -13.003424644470215
    9. '<|end|>' → logprob: -13.003424644470215
    10. ']]' → logprob: -13.628424644470215

Token 876: 'total' (ID: 9577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05238248035311699
    2. 'total' → logprob: -3.677382469177246
    3. 'now' → logprob: -4.802382469177246
    4. 'current' → logprob: -4.927382469177246
    5. 'while' → logprob: -5.052382469177246
    6. 'product' → logprob: -6.927382469177246
    7. 'time' → logprob: -7.427382469177246
    8. ' for' → logprob: -7.427382469177246
    9. 'print' → logprob: -7.552382469177246
    10. 'route' → logprob: -7.802382469177246

Token 877: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.0011286636581644416
    2. '_moves' → logprob: -7.876128673553467
    3. '_time' → logprob: -8.501128196716309
    4. '_count' → logprob: -8.626128196716309
    5. ' =' → logprob: -9.001128196716309
    6. '_m' → logprob: -9.751128196716309
    7. '_steps' → logprob: -10.376128196716309
    8. '=' → logprob: -10.376128196716309
    9. '_' → logprob: -10.501128196716309
    10. '_total' → logprob: -11.126128196716309

Token 878: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.002709892112761736
    2. '=' → logprob: -6.127709865570068
    3. 'count' → logprob: -8.002710342407227
    4. ' =' → logprob: -8.877710342407227
    5. '_' → logprob: -11.127710342407227
    6. '_time' → logprob: -11.752710342407227
    7. '_counts' → logprob: -12.377710342407227
    8. '_cost' → logprob: -12.502710342407227
    9. '=_' → logprob: -12.502710342407227
    10. '=count' → logprob: -12.627710342407227

Token 879: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022241622209549
    2. ' =' → logprob: -2.35022234916687
    3. ',' → logprob: -11.10022258758545
    4. ' ' → logprob: -14.85022258758545
    5. '0' → logprob: -15.47522258758545
    6. '<|end|>' → logprob: -16.975221633911133
    7. '=
' → logprob: -17.100221633911133
    8. '=int' → logprob: -17.475221633911133
    9. 's' → logprob: -17.725221633911133
    10. ' ,' → logprob: -17.850221633911133

Token 880: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024807697627693415
    2. ' ' → logprob: -6.002480983734131
    3. '   ' → logprob: -13.627480506896973
    4. '1' → logprob: -14.002480506896973
    5. '=' → logprob: -14.877480506896973
    6. '100' → logprob: -15.064980506896973
    7. '  ' → logprob: -15.127480506896973
    8. '000' → logprob: -15.377480506896973
    9. 'int' → logprob: -15.752480506896973
    10. 'total' → logprob: -15.877480506896973

Token 881: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011403311509639025
    2. ' ' → logprob: -9.125114440917969
    3. '1' → logprob: -13.000114440917969
    4. '100' → logprob: -14.625114440917969
    5. '=' → logprob: -14.937614440917969
    6. '000' → logprob: -15.062614440917969
    7. 'int' → logprob: -15.250114440917969
    8. '-' → logprob: -15.312614440917969
    9. '00' → logprob: -16.00011444091797
    10. '   ' → logprob: -16.18761444091797

Token 882: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1697399616241455
    2. 'current' → logprob: -1.4197399616241455
    3. 'now' → logprob: -1.4197399616241455
    4. '<|end|>' → logprob: -2.7947399616241455
    5. 'for' → logprob: -2.9197399616241455
    6. '#' → logprob: -3.0447399616241455
    7. 'def' → logprob: -4.169739723205566
    8. '```' → logprob: -4.544739723205566
    9. 'Now' → logprob: -5.169739723205566
    10. '...' → logprob: -5.669739723205566

Token 883: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.01579268090426922
    2. 'current' → logprob: -4.3907928466796875
    3. 'for' → logprob: -5.8907928466796875
    4. 'while' → logprob: -8.015792846679688
    5. 'time' → logprob: -9.515792846679688
    6. 'route' → logprob: -10.515792846679688
    7. 'product' → logprob: -10.515792846679688
    8. ' now' → logprob: -11.015792846679688
    9. '#' → logprob: -11.265792846679688
    10. 'order' → logprob: -12.265792846679688

Token 884: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -1.7432603272027336e-06
    2. ' =' → logprob: -14.000001907348633
    3. '_pos' → logprob: -14.625001907348633
    4. '=' → logprob: -15.625001907348633
    5. 'pos' → logprob: -16.625001907348633
    6. ' Pos' → logprob: -16.750001907348633
    7. 'Position' → logprob: -17.000001907348633
    8. '_Pos' → logprob: -17.500001907348633
    9. '_POS' → logprob: -19.125001907348633
    10. ',' → logprob: -19.125001907348633

Token 885: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693440914154053
    2. ' =' → logprob: -2.12693452835083
    3. ',' → logprob: -12.251934051513672
    4. '=-' → logprob: -13.876934051513672
    5. '＝' → logprob: -15.376934051513672
    6. ' ' → logprob: -16.251934051513672
    7. '=int' → logprob: -16.501934051513672
    8. '=None' → logprob: -17.376934051513672
    9. ' ,' → logprob: -17.501934051513672
    10. ' ' → logprob: -18.126934051513672

Token 886: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10937026888132095
    2. 'V' → logprob: -2.984370231628418
    3. '-' → logprob: -3.234370231628418
    4. 'F' → logprob: -4.359370231628418
    5. ' ' → logprob: -8.109370231628418
    6. '1' → logprob: -8.859370231628418
    7. '-V' → logprob: -9.234370231628418
    8. ' -' → logprob: -9.484370231628418
    9. 'T' → logprob: -9.734370231628418
    10. ' V' → logprob: -10.109370231628418

Token 887: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2751496434211731
    2. 'F' → logprob: -2.1501495838165283
    3. 'V' → logprob: -2.5251495838165283
    4. '-' → logprob: -3.1501495838165283
    5. '1' → logprob: -8.02514934539795
    6. 'T' → logprob: -8.77514934539795
    7. '-V' → logprob: -8.90014934539795
    8. 'int' → logprob: -9.52514934539795
    9. '(V' → logprob: -9.52514934539795
    10. 'S' → logprob: -9.90014934539795

Token 888: '
' (ID: 198)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3573263883590698
    2. 'while' → logprob: -1.3573263883590698
    3. 'for' → logprob: -3.2323265075683594
    4. 'print' → logprob: -6.732326507568359
    5. '```' → logprob: -7.232326507568359
    6. 'time' → logprob: -7.482326507568359
    7. '#' → logprob: -7.732326507568359
    8. 'def' → logprob: -8.73232650756836
    9. 'if' → logprob: -9.35732650756836
    10. 'total' → logprob: -9.85732650756836

Token 889: 'target' (ID: 10857)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.34707319736480713
    2. 'for' → logprob: -1.9720731973648071
    3. 'while' → logprob: -1.9720731973648071
    4. 'time' → logprob: -4.597073078155518
    5. '#' → logprob: -6.097073078155518
    6. 'print' → logprob: -6.847073078155518
    7. '```' → logprob: -7.097073078155518
    8. 'def' → logprob: -8.722073554992676
    9. '...' → logprob: -9.347073554992676
    10. 'Current' → logprob: -9.722073554992676

Token 890: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.004865361377596855
    2. ' =' → logprob: -6.2548651695251465
    3. '_pos' → logprob: -6.2548651695251465
    4. '=' → logprob: -7.1298651695251465
    5. 'pos' → logprob: -8.504865646362305
    6. '_Pos' → logprob: -12.754865646362305
    7. 'Position' → logprob: -13.629865646362305
    8. '_POS' → logprob: -14.629865646362305
    9. '=get' → logprob: -14.754865646362305
    10. 'POS' → logprob: -14.879865646362305

Token 891: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688766956329346
    2. '=' → logprob: -1.1368876695632935
    3. ',' → logprob: -11.261887550354004
    4. ' ' → logprob: -13.261887550354004
    5. '=None' → logprob: -14.511887550354004
    6. '<|end|>' → logprob: -14.761887550354004
    7. '  ' → logprob: -15.386887550354004
    8. ')' → logprob: -15.636887550354004
    9. ' =)' → logprob: -15.636887550354004
    10. '＝' → logprob: -16.01188850402832

Token 892: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5714720487594604
    2. '-' → logprob: -1.1964720487594604
    3. 'get' → logprob: -2.94647216796875
    4. 'now' → logprob: -3.44647216796875
    5. 'V' → logprob: -4.07147216796875
    6. 'F' → logprob: -4.44647216796875
    7. ' ' → logprob: -4.94647216796875
    8. ' -' → logprob: -5.07147216796875
    9. ' now' → logprob: -6.32147216796875
    10. ' get' → logprob: -6.44647216796875

Token 893: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.664371848164592e-05
    2. '2' → logprob: -11.250016212463379
    3. ' ' → logprob: -12.750016212463379
    4. '-' → logprob: -15.750016212463379
    5. '```' → logprob: -16.500017166137695
    6. '   ' → logprob: -16.562517166137695
    7. ',' → logprob: -17.250017166137695
    8. '3' → logprob: -17.375017166137695
    9. '１' → logprob: -17.687517166137695
    10. '0' → logprob: -18.062517166137695

Token 894: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6684527397155762
    2. 'current' → logprob: -1.4184527397155762
    3. 'for' → logprob: -2.418452739715576
    4. '```' → logprob: -2.668452739715576
    5. '#' → logprob: -2.793452739715576
    6. '...' → logprob: -4.168452739715576
    7. 'time' → logprob: -5.918452739715576
    8. 'print' → logprob: -6.668452739715576
    9. 'Current' → logprob: -6.918452739715576
    10. ' while' → logprob: -7.293452739715576

Token 895: 'time' (ID: 4580)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.43382394313812256
    2. 'current' → logprob: -1.3088239431381226
    3. 'for' → logprob: -2.558824062347412
    4. '#' → logprob: -6.308824062347412
    5. 'def' → logprob: -6.933824062347412
    6. 'print' → logprob: -7.183824062347412
    7. 'time' → logprob: -8.183823585510254
    8. '```' → logprob: -8.308823585510254
    9. ' while' → logprob: -8.808823585510254
    10. 'total' → logprob: -10.558823585510254

Token 896: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.0005897291121073067
    2. '=' → logprob: -8.375589370727539
    3. ' =' → logprob: -9.000589370727539
    4. 'Step' → logprob: -9.125589370727539
    5. '_line' → logprob: -10.375589370727539
    6. '_' → logprob: -10.500589370727539
    7. 'step' → logprob: -10.625589370727539
    8. '_now' → logprob: -11.500589370727539
    9. '_current' → logprob: -11.750589370727539
    10. '_=' → logprob: -12.250589370727539

Token 897: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27390921115875244
    2. ' =' → logprob: -2.023909091949463
    3. '_before' → logprob: -2.898909091949463
    4. ',' → logprob: -3.523909091949463
    5. '_' → logprob: -4.023909091949463
    6. 'before' → logprob: -6.148909091949463
    7. '_=' → logprob: -6.648909091949463
    8. '_now' → logprob: -8.148909568786621
    9. ',_' → logprob: -8.148909568786621
    10. '0' → logprob: -8.773909568786621

Token 898: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0050952378660440445
    2. '-' → logprob: -6.0050950050354
    3. ' ' → logprob: -6.5050950050354
    4. '1' → logprob: -6.8800950050354
    5. 'int' → logprob: -9.630095481872559
    6. ' -' → logprob: -10.880095481872559
    7. '100' → logprob: -12.880095481872559
    8. '   ' → logprob: -14.130095481872559
    9. 'T' → logprob: -14.130095481872559
    10. '10' → logprob: -14.255095481872559

Token 899: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010772605426609516
    2. '-' → logprob: -4.760772705078125
    3. '1' → logprob: -6.260772705078125
    4. ' ' → logprob: -8.885772705078125
    5. 'int' → logprob: -9.635772705078125
    6. '100' → logprob: -11.760772705078125
    7. 'T' → logprob: -11.885772705078125
    8. 'F' → logprob: -12.260772705078125
    9. ' -' → logprob: -12.260772705078125
    10. '10' → logprob: -12.760772705078125

Token 900: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04162738844752312
    2. 'current' → logprob: -3.7916274070739746
    3. 'time' → logprob: -4.666627407073975
    4. '<|end|>' → logprob: -6.041627407073975
    5. 'target' → logprob: -6.666627407073975
    6. 'for' → logprob: -6.916627407073975
    7. ' while' → logprob: -7.166627407073975
    8. '```' → logprob: -7.166627407073975
    9. 'total' → logprob: -7.666627407073975
    10. 'print' → logprob: -8.041626930236816

Token 901: 'time' (ID: 4580)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03672534599900246
    2. 'for' → logprob: -4.2867255210876465
    3. 'current' → logprob: -4.2867255210876465
    4. 'time' → logprob: -5.0367255210876465
    5. 'total' → logprob: -6.9117255210876465
    6. ' while' → logprob: -7.5367255210876465
    7. 'def' → logprob: -9.036725044250488
    8. 'order' → logprob: -9.286725044250488
    9. 'now' → logprob: -9.661725044250488
    10. '#' → logprob: -9.786725044250488

Token 902: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.0005507678724825382
    2. '=' → logprob: -9.375551223754883
    3. '_' → logprob: -9.375551223754883
    4. ' +=' → logprob: -9.500551223754883
    5. '+=' → logprob: -9.625551223754883
    6. ' =' → logprob: -9.750551223754883
    7. 'Step' → logprob: -9.875551223754883
    8. 'step' → logprob: -10.000551223754883
    9. '_steps' → logprob: -10.750551223754883
    10. '_count' → logprob: -11.000551223754883

Token 903: '_before' (ID: 56638)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2565469443798065
    2. ' =' → logprob: -1.506546974182129
    3. ' +=' → logprob: -5.881546974182129
    4. '+=' → logprob: -6.506546974182129
    5. ',' → logprob: -8.381546974182129
    6. '+' → logprob: -9.881546974182129
    7. ' ' → logprob: -11.131546974182129
    8. ' ,' → logprob: -11.756546974182129
    9. '0' → logprob: -12.756546974182129
    10. ' +' → logprob: -12.881546974182129

Token 904: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858850687742233
    2. ' =' → logprob: -3.048588514328003
    3. ',' → logprob: -14.173588752746582
    4. '0' → logprob: -15.673588752746582
    5. ' ' → logprob: -16.423587799072266
    6. '＝' → logprob: -17.798587799072266
    7. ' ,' → logprob: -18.298587799072266
    8. '=
' → logprob: -19.298587799072266
    9. ' ' → logprob: -19.798587799072266
    10. '=int' → logprob: -20.298587799072266

Token 905: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18745751678943634
    2. '-' → logprob: -1.81245756149292
    3. ' ' → logprob: -5.43745756149292
    4. 'time' → logprob: -5.93745756149292
    5. ' -' → logprob: -7.43745756149292
    6. ' time' → logprob: -9.687457084655762
    7. '1' → logprob: -11.437457084655762
    8. 'T' → logprob: -11.687457084655762
    9. '-time' → logprob: -12.312457084655762
    10. '=' → logprob: -12.437457084655762

Token 906: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3555951714515686
    2. '-' → logprob: -1.2305951118469238
    3. 'time' → logprob: -4.980595111846924
    4. ' ' → logprob: -9.355595588684082
    5. ' -' → logprob: -9.855595588684082
    6. '1' → logprob: -10.105595588684082
    7. 'T' → logprob: -11.230595588684082
    8. '-time' → logprob: -11.230595588684082
    9. ' time' → logprob: -11.605595588684082
    10. '=' → logprob: -11.980595588684082

Token 907: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18064367771148682
    2. 'for' → logprob: -1.8056436777114868
    3. 'current' → logprob: -8.055644035339355
    4. ' while' → logprob: -8.680644035339355
    5. '#' → logprob: -9.305644035339355
    6. 'time' → logprob: -9.430644035339355
    7. 'def' → logprob: -9.680644035339355
    8. '```' → logprob: -9.805644035339355
    9. ' for' → logprob: -10.555644035339355
    10. 'order' → logprob: -10.680644035339355

Token 908: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04520437866449356
    2. 'for' → logprob: -3.1702044010162354
    3. 'time' → logprob: -7.045204162597656
    4. 'current' → logprob: -7.545204162597656
    5. ' while' → logprob: -8.170204162597656
    6. '#' → logprob: -8.420204162597656
    7. 'def' → logprob: -8.670204162597656
    8. 'order' → logprob: -9.795204162597656
    9. 'print' → logprob: -10.795204162597656
    10. '```' → logprob: -11.045204162597656

Token 909: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015279557555913925
    2. ' _' → logprob: -6.501527786254883
    3. ' in' → logprob: -11.126527786254883
    4. '_i' → logprob: -12.001527786254883
    5. 'i' → logprob: -13.501527786254883
    6. 'in' → logprob: -14.001527786254883
    7. ' range' → logprob: -14.376527786254883
    8. 'range' → logprob: -14.501527786254883
    9. ' i' → logprob: -14.751527786254883
    10. '_range' → logprob: -15.251527786254883

Token 910: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5233224630355835
    2. ' in' → logprob: -0.8983224630355835
    3. ',' → logprob: -8.648322105407715
    4. 'n' → logprob: -11.523322105407715
    5. 'range' → logprob: -12.023322105407715
    6. '_' → logprob: -13.273322105407715
    7. ' ' → logprob: -13.398322105407715
    8. 'import' → logprob: -14.898322105407715
    9. ',n' → logprob: -15.023322105407715
    10. ' ,' → logprob: -15.023322105407715

Token 911: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889121770858765
    2. ' range' → logprob: -2.5788912773132324
    3. 'r' → logprob: -14.828890800476074
    4. 'in' → logprob: -15.078890800476074
    5. '[' → logprob: -15.578890800476074
    6. ' ' → logprob: -15.703890800476074
    7. '_' → logprob: -15.953890800476074
    8. ' in' → logprob: -16.70389175415039
    9. '  ' → logprob: -17.07889175415039
    10. 'order' → logprob: -17.32889175415039

Token 912: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.06005967780947685
    2. '(F' → logprob: -2.9350597858428955
    3. '(int' → logprob: -5.435059547424316
    4. 'T' → logprob: -7.935059547424316
    5. '(' → logprob: -8.185059547424316
    6. 'F' → logprob: -10.060059547424316
    7. '(E' → logprob: -10.685059547424316
    8. '(V' → logprob: -10.810059547424316
    9. 'int' → logprob: -10.935059547424316
    10. '(N' → logprob: -11.560059547424316

Token 913: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2278141975402832
    2. '):' → logprob: -1.6028141975402832
    3. '):
' → logprob: -6.227814197540283
    4. '+' → logprob: -8.602813720703125
    5. ',' → logprob: -9.227813720703125
    6. ')' → logprob: -10.102813720703125
    7. '   ' → logprob: -10.227813720703125
    8. 'int' → logprob: -11.227813720703125
    9. ',input' → logprob: -11.477813720703125
    10. ':' → logprob: -11.977813720703125

Token 914: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019448186503723264
    2. 'order' → logprob: -6.8769450187683105
    3. ' order' → logprob: -7.5019450187683105
    4. 'o' → logprob: -8.876944541931152
    5. 't' → logprob: -9.126944541931152
    6. ' o' → logprob: -10.251944541931152
    7. '	order' → logprob: -10.751944541931152
    8. 'a' → logprob: -11.376944541931152
    9. ' t' → logprob: -11.376944541931152
    10. 'b' → logprob: -12.126944541931152

Token 915: ' N' (ID: 478)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.4837189018726349
    2. 'o' → logprob: -1.6087188720703125
    3. 'a' → logprob: -2.4837188720703125
    4. 'l' → logprob: -3.6087188720703125
    5. 't' → logprob: -3.6087188720703125
    6. '   ' → logprob: -4.2337188720703125
    7. 'tmp' → logprob: -5.6087188720703125
    8. 'L' → logprob: -5.8587188720703125
    9. 'time' → logprob: -5.8587188720703125
    10. 's' → logprob: -5.9837188720703125

Token 916: 'new' (ID: 1389)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10066898167133331
    2. ',' → logprob: -2.7256689071655273
    3. ' =' → logprob: -3.7256689071655273
    4. '=int' → logprob: -5.100668907165527
    5. '   ' → logprob: -10.475668907165527
    6. 'int' → logprob: -11.975668907165527
    7. '=input' → logprob: -11.975668907165527
    8. ' ,' → logprob: -12.350668907165527
    9. ' ' → logprob: -12.475668907165527
    10. '  ' → logprob: -13.100668907165527

Token 917: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30500558018684387
    2. ' =' → logprob: -1.4300055503845215
    3. ',' → logprob: -3.9300055503845215
    4. '=int' → logprob: -5.5550055503845215
    5. ' ,' → logprob: -10.30500602722168
    6. ',n' → logprob: -12.55500602722168
    7. '=input' → logprob: -12.68000602722168
    8. ' ' → logprob: -12.80500602722168
    9. ',N' → logprob: -13.05500602722168
    10. '   ' → logprob: -13.18000602722168

Token 918: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015291442396119237
    2. ' int' → logprob: -6.501529216766357
    3. 'list' → logprob: -10.7515287399292
    4. '[int' → logprob: -12.7515287399292
    5. '(int' → logprob: -14.3765287399292
    6. '
' → logprob: -15.0015287399292
    7. 'len' → logprob: -15.2515287399292
    8. 'input' → logprob: -15.3765287399292
    9. ' ' → logprob: -15.5015287399292
    10. '	int' → logprob: -15.7515287399292

Token 919: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005888947052881122
    2. 'input' → logprob: -7.500588893890381
    3. '(sys' → logprob: -10.250589370727539
    4. 'sys' → logprob: -15.250589370727539
    5. '=input' → logprob: -16.25058937072754
    6. ' input' → logprob: -16.25058937072754
    7. '()' → logprob: -16.62558937072754
    8. '(' → logprob: -17.00058937072754
    9. ',input' → logprob: -18.25058937072754
    10. '[input' → logprob: -18.37558937072754

Token 920: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3881577253341675
    2. '())
' → logprob: -1.1381577253341675
    3. ')' → logprob: -7.388157844543457
    4. '()' → logprob: -8.138157844543457
    5. '())
' → logprob: -8.638157844543457
    6. ')
' → logprob: -8.888157844543457
    7. '().' → logprob: -11.138157844543457
    8. ' ())' → logprob: -11.138157844543457
    9. '()
' → logprob: -11.638157844543457
    10. '())

' → logprob: -11.763157844543457

Token 921: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018275313079357147
    2. 'for' → logprob: -4.018275260925293
    3. ' for' → logprob: -9.143275260925293
    4. '<|end|>' → logprob: -11.393275260925293
    5. '	for' → logprob: -12.393275260925293
    6. '
' → logprob: -14.768275260925293
    7. '       ' → logprob: -14.768275260925293
    8. 'if' → logprob: -15.518275260925293
    9. ' ' → logprob: -15.643275260925293
    10. 'and' → logprob: -15.768275260925293

Token 922: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.2471589798224159e-05
    2. 'order' → logprob: -11.750012397766113
    3. 'new' → logprob: -13.125012397766113
    4. ' for' → logprob: -13.500012397766113
    5. 'if' → logprob: -14.750012397766113
    6. '   ' → logprob: -15.000012397766113
    7. 'orders' → logprob: -15.250012397766113
    8. 'time' → logprob: -16.75001335144043
    9. 'while' → logprob: -16.87501335144043
    10. 'product' → logprob: -17.00001335144043

Token 923: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4776119589805603
    2. '_j' → logprob: -0.9776119589805603
    3. 'j' → logprob: -5.727612018585205
    4. ' _' → logprob: -9.227611541748047
    5. '__' → logprob: -9.727611541748047
    6. '_i' → logprob: -9.977611541748047
    7. ' j' → logprob: -10.977611541748047
    8. '_t' → logprob: -11.352611541748047
    9. '_n' → logprob: -11.477611541748047
    10. '___' → logprob: -12.227611541748047

Token 924: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.46707895398139954
    2. 'range' → logprob: -1.4670789241790771
    3. 'in' → logprob: -1.9670789241790771
    4. ' range' → logprob: -5.967079162597656
    5. '_' → logprob: -9.842079162597656
    6. ' ' → logprob: -9.967079162597656
    7. '  ' → logprob: -10.717079162597656
    8. '0' → logprob: -11.592079162597656
    9. '   ' → logprob: -12.467079162597656
    10. '
' → logprob: -12.592079162597656

Token 925: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '_range' → logprob: -17.62507438659668
    4. '	range' → logprob: -18.62507438659668
    5. '_' → logprob: -19.12507438659668
    6. '0' → logprob: -19.75007438659668
    7. ' ' → logprob: -20.12507438659668
    8. '
' → logprob: -20.50007438659668
    9. '   ' → logprob: -20.62507438659668
    10. 'r' → logprob: -21.62507438659668

Token 926: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002209973521530628
    2. 'N' → logprob: -6.1272101402282715
    3. '   ' → logprob: -11.002209663391113
    4. '(' → logprob: -11.877209663391113
    5. '	N' → logprob: -15.127209663391113
    6. '  ' → logprob: -15.252209663391113
    7. '(n' → logprob: -15.752209663391113
    8. ' (' → logprob: -16.12721061706543
    9. '
' → logprob: -16.37721061706543
    10. '       ' → logprob: -16.50221061706543

Token 927: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.047195471823215485
    2. 'N' → logprob: -3.1721954345703125
    3. 'ew' → logprob: -5.5471954345703125
    4. ' new' → logprob: -9.172195434570312
    5. '(new' → logprob: -9.672195434570312
    6. '_new' → logprob: -10.047195434570312
    7. 'New' → logprob: -10.172195434570312
    8. '(N' → logprob: -11.047195434570312
    9. ')new' → logprob: -12.047195434570312
    10. 'NEW' → logprob: -12.547195434570312

Token 928: '):
' (ID: 1883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5623819231987
    2. '):
' → logprob: -1.0623819828033447
    3. '):' → logprob: -3.0623819828033447
    4. '   ' → logprob: -4.062381744384766
    5. ':
' → logprob: -4.312381744384766
    6. ':' → logprob: -5.812381744384766
    7. ')' → logprob: -6.562381744384766
    8. '():
' → logprob: -6.812381744384766
    9. ',' → logprob: -7.062381744384766
    10. 'n' → logprob: -9.062381744384766

Token 929: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022015247959643602
    2. 'order' → logprob: -6.502201557159424
    3. '   ' → logprob: -7.627201557159424
    4. ' order' → logprob: -9.502201080322266
    5. 'n' → logprob: -9.752201080322266
    6. 'o' → logprob: -11.127201080322266
    7. '	order' → logprob: -11.502201080322266
    8. 'new' → logprob: -12.127201080322266
    9. '           ' → logprob: -12.252201080322266
    10. 'product' → logprob: -12.502201080322266

Token 930: ' new' (ID: 620)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1912442445755005
    2. 'o' → logprob: -1.4412442445755005
    3. 't' → logprob: -1.5662442445755005
    4. 's' → logprob: -2.691244125366211
    5. 'order' → logprob: -2.941244125366211
    6. 'A' → logprob: -3.441244125366211
    7. 'p' → logprob: -3.566244125366211
    8. 'd' → logprob: -4.566244125366211
    9. 'x' → logprob: -4.691244125366211
    10. 'tmp' → logprob: -5.066244125366211

Token 931: '_id' (ID: 1537)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.3447641134262085
    2. 'order' → logprob: -1.5947641134262085
    3. ' =' → logprob: -1.8447641134262085
    4. '=' → logprob: -1.8447641134262085
    5. 'input' → logprob: -2.594764232635498
    6. 'o' → logprob: -2.969764232635498
    7. '_input' → logprob: -3.969764232635498
    8. 'time' → logprob: -4.344764232635498
    9. '_time' → logprob: -4.469764232635498
    10. '=input' → logprob: -4.844764232635498

Token 932: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007510318420827389
    2. ' ,' → logprob: -6.257510185241699
    3. ',new' → logprob: -6.257510185241699
    4. '=' → logprob: -6.757510185241699
    5. ',time' → logprob: -6.757510185241699
    6. ' =' → logprob: -7.257510185241699
    7. 'new' → logprob: -8.5075101852417
    8. 'time' → logprob: -8.7575101852417
    9. ',input' → logprob: -10.2575101852417
    10. '_,' → logprob: -10.3825101852417

Token 933: ' dst' (ID: 23480)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4414353370666504
    2. 'x' → logprob: -1.9414353370666504
    3. 'pos' → logprob: -3.1914353370666504
    4. 'p' → logprob: -3.9414353370666504
    5. 's' → logprob: -4.31643533706665
    6. 'num' → logprob: -4.56643533706665
    7. 'start' → logprob: -4.56643533706665
    8. 'now' → logprob: -4.56643533706665
    9. 'from' → logprob: -4.56643533706665
    10. 'a' → logprob: -4.69143533706665

Token 934: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02911282889544964
    2. '=' → logprob: -3.6541128158569336
    3. ' =' → logprob: -6.029112815856934
    4. ' ,' → logprob: -7.904112815856934
    5. ',pos' → logprob: -11.529112815856934
    6. 'pos' → logprob: -12.404112815856934
    7. '_,' → logprob: -12.404112815856934
    8. ',d' → logprob: -12.779112815856934
    9. ',time' → logprob: -14.404112815856934
    10. '=int' → logprob: -14.404112815856934

Token 935: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.002502771094441414
    2. ' map' → logprob: -6.002502918243408
    3. '   ' → logprob: -11.75250244140625
    4. 'list' → logprob: -11.75250244140625
    5. '	map' → logprob: -12.37750244140625
    6. 'input' → logprob: -12.50250244140625
    7. '_map' → logprob: -14.62750244140625
    8. '_' → logprob: -14.75250244140625
    9. '  ' → logprob: -15.00250244140625
    10. '       ' → logprob: -15.00250244140625

Token 936: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12750175595283508
    2. '(int' → logprob: -2.1275017261505127
    3. '[int' → logprob: -8.002501487731934
    4. '=int' → logprob: -8.502501487731934
    5. ' int' → logprob: -11.377501487731934
    6. ',int' → logprob: -11.752501487731934
    7. 'list' → logprob: -12.002501487731934
    8. 'input' → logprob: -12.252501487731934
    9. '<int' → logprob: -12.627501487731934
    10. ':int' → logprob: -13.627501487731934

Token 937: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08945780247449875
    2. '(),' → logprob: -2.5894577503204346
    3. ',int' → logprob: -5.589457988739014
    4. '=' → logprob: -6.589457988739014
    5. 'int' → logprob: -6.839457988739014
    6. '=int' → logprob: -6.839457988739014
    7. '(int' → logprob: -7.089457988739014
    8. '()' → logprob: -7.339457988739014
    9. ' ,' → logprob: -7.464457988739014
    10. ',input' → logprob: -7.839457988739014

Token 938: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008819366805255413
    2. ' input' → logprob: -4.758819580078125
    3. 'list' → logprob: -9.258819580078125
    4. 'map' → logprob: -9.758819580078125
    5. 'sys' → logprob: -10.008819580078125
    6. ' map' → logprob: -12.883819580078125
    7. 'int' → logprob: -13.508819580078125
    8. ' sys' → logprob: -13.758819580078125
    9. 'range' → logprob: -15.008819580078125
    10. '[input' → logprob: -15.383819580078125

Token 939: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020795092859771103
    2. '()' → logprob: -9.375207901000977
    3. 'split' → logprob: -9.500207901000977
    4. '=' → logprob: -10.500207901000977
    5. '()[' → logprob: -12.625207901000977
    6. '().__' → logprob: -12.750207901000977
    7. '())' → logprob: -13.000207901000977
    8. '()
' → logprob: -13.250207901000977
    9. '()>' → logprob: -13.250207901000977
    10. '.readline' → logprob: -13.625207901000977

Token 940: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.246537173457909e-06
    2. 'skip' → logprob: -13.125003814697266
    3. 'list' → logprob: -14.500003814697266
    4. ' split' → logprob: -15.000003814697266
    5. 'strip' → logprob: -15.250003814697266
    6. 'range' → logprob: -15.250003814697266
    7. 'start' → logprob: -15.875003814697266
    8. '(split' → logprob: -16.375003814697266
    9. 'spl' → logprob: -16.625003814697266
    10. 'sys' → logprob: -16.625003814697266

Token 941: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.22571666538715363
    2. ')' → logprob: -1.6007167100906372
    3. '())
' → logprob: -8.475716590881348
    4. ');' → logprob: -10.350716590881348
    5. ')
' → logprob: -10.850716590881348
    6. '())' → logprob: -11.350716590881348
    7. '()' → logprob: -11.475716590881348
    8. ' )
' → logprob: -11.975716590881348
    9. '   ' → logprob: -12.600716590881348
    10. '       ' → logprob: -12.725716590881348

Token 942: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006939699524082243
    2. '   ' → logprob: -7.8756937980651855
    3. 'product' → logprob: -8.500694274902344
    4. ' product' → logprob: -10.375694274902344
    5. 'order' → logprob: -10.625694274902344
    6. '<|end|>' → logprob: -10.875694274902344
    7. 'new' → logprob: -11.375694274902344
    8. ' ' → logprob: -11.625694274902344
    9. ' new' → logprob: -12.875694274902344
    10. '           ' → logprob: -13.000694274902344

Token 943: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -0.22208157181739807
    2. 'product' → logprob: -1.9720815420150757
    3. '       ' → logprob: -2.9720816612243652
    4. ' order' → logprob: -5.347081661224365
    5. ' product' → logprob: -5.597081661224365
    6. 'new' → logprob: -8.597081184387207
    7. '   ' → logprob: -10.097081184387207
    8. '	order' → logprob: -10.597081184387207
    9. '	product' → logprob: -10.972081184387207
    10. ' ' → logprob: -11.847081184387207

Token 944: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002165299083571881
    2. '.' → logprob: -8.500216484069824
    3. ' .' → logprob: -12.000216484069824
    4. 'append' → logprob: -12.375216484069824
    5. '       ' → logprob: -14.625216484069824
    6. '.extend' → logprob: -14.750216484069824
    7. '=' → logprob: -14.875216484069824
    8. '   ' → logprob: -14.875216484069824
    9. '.app' → logprob: -15.250216484069824
    10. 'Append' → logprob: -15.875216484069824

Token 945: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0007574541959911585
    2. '[' → logprob: -7.625757217407227
    3. '(copy' → logprob: -9.125757217407227
    4. '((' → logprob: -9.375757217407227
    5. '[new' → logprob: -10.250757217407227
    6. '(' → logprob: -10.375757217407227
    7. '[now' → logprob: -12.375757217407227
    8. '(new' → logprob: -12.750757217407227
    9. '[(' → logprob: -14.500757217407227
    10. '[[' → logprob: -15.000757217407227

Token 946: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.48132893443107605
    2. 'i' → logprob: -1.1063289642333984
    3. '0' → logprob: -3.1063289642333984
    4. 'new' → logprob: -5.231328964233398
    5. 'now' → logprob: -8.231328964233398
    6. 'F' → logprob: -8.356328964233398
    7. ' time' → logprob: -8.856328964233398
    8. 'T' → logprob: -9.231328964233398
    9. 'N' → logprob: -9.606328964233398
    10. '_i' → logprob: -9.731328964233398

Token 947: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.08863972872495651
    2. 'i' → logprob: -2.713639736175537
    3. 'step' → logprob: -4.963639736175537
    4. ' i' → logprob: -5.213639736175537
    5. '_i' → logprob: -6.463639736175537
    6. ',' → logprob: -6.838639736175537
    7. '   ' → logprob: -6.838639736175537
    8. ',i' → logprob: -7.213639736175537
    9. ' step' → logprob: -7.838639736175537
    10. '_' → logprob: -8.713639259338379

Token 948: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024007266387343407
    2. ',new' → logprob: -3.8990073204040527
    3. ' ,' → logprob: -5.899007320404053
    4. '+' → logprob: -7.524007320404053
    5. 'new' → logprob: -9.524006843566895
    6. ' +' → logprob: -10.399006843566895
    7. ',n' → logprob: -11.524006843566895
    8. '   ' → logprob: -11.774006843566895
    9. ',N' → logprob: -11.774006843566895
    10. ',current' → logprob: -11.774006843566895

Token 949: ' new' (ID: 620)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.05479618161916733
    2. ' dst' → logprob: -3.0547962188720703
    3. 'new' → logprob: -5.17979621887207
    4. ' new' → logprob: -7.80479621887207
    5. 'now' → logprob: -10.17979621887207
    6. '(dst' → logprob: -10.80479621887207
    7. '	dst' → logprob: -11.30479621887207
    8. ' now' → logprob: -11.30479621887207
    9. '0' → logprob: -11.55479621887207
    10. '   ' → logprob: -11.67979621887207

Token 950: '_id' (ID: 1537)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.5135079622268677
    2. ',' → logprob: -1.5135079622268677
    3. '_id' → logprob: -3.013507843017578
    4. '1' → logprob: -3.388507843017578
    5. '_pos' → logprob: -3.638507843017578
    6. 'Pos' → logprob: -3.888507843017578
    7. '_dst' → logprob: -4.263507843017578
    8. '2' → logprob: -4.388507843017578
    9. '3' → logprob: -4.888507843017578
    10. 'id' → logprob: -5.263507843017578

Token 951: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043650537729263306
    2. ',d' → logprob: -3.1686506271362305
    3. ' ,' → logprob: -7.4186506271362305
    4. '-' → logprob: -10.41865062713623
    5. 'dst' → logprob: -12.16865062713623
    6. '       ' → logprob: -12.41865062713623
    7. '(dst' → logprob: -12.41865062713623
    8. ' dst' → logprob: -13.54365062713623
    9. '	dst' → logprob: -13.54365062713623
    10. '   ' → logprob: -13.79365062713623

Token 952: ' (' (ID: 350)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.00219735992141068
    2. ' dst' → logprob: -6.127197265625
    3. '	dst' → logprob: -12.502197265625
    4. '(dst' → logprob: -12.752197265625
    5. '   ' → logprob: -13.377197265625
    6. 'dest' → logprob: -14.002197265625
    7. ' ' → logprob: -14.127197265625
    8. 'F' → logprob: -14.752197265625
    9. '  ' → logprob: -14.877197265625
    10. 'destination' → logprob: -15.002197265625

Token 953: 'dst' (ID: 29763)
  Prédit: 'dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.00012725738633889705
    2. ' dst' → logprob: -9.000126838684082
    3. '(dst' → logprob: -13.125126838684082
    4. '	dst' → logprob: -14.000126838684082
    5. '   ' → logprob: -15.500126838684082
    6. 'destination' → logprob: -15.625126838684082
    7. ' ' → logprob: -16.2501277923584
    8. 'dest' → logprob: -16.3751277923584
    9. 'Dst' → logprob: -16.6251277923584
    10. 'd' → logprob: -16.8751277923584

Token 954: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.051033779978752136
    2. ' -' → logprob: -3.0510337352752686
    3. ')-' → logprob: -6.051033973693848
    4. ')' → logprob: -9.426033973693848
    5. '()-' → logprob: -13.426033973693848
    6. ']-' → logprob: -13.426033973693848
    7. ' )' → logprob: -13.926033973693848
    8. ')])' → logprob: -13.926033973693848
    9. ' ' → logprob: -14.301033973693848
    10. '-)' → logprob: -14.801033973693848

Token 955: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5941604690160602e-05
    2. ' ' → logprob: -10.625025749206543
    3. '   ' → logprob: -14.375025749206543
    4. '2' → logprob: -15.000025749206543
    5. ')' → logprob: -15.937525749206543
    6. '<|end|>' → logprob: -16.43752670288086
    7. 'to' → logprob: -16.50002670288086
    8. '       ' → logprob: -16.62502670288086
    9. '           ' → logprob: -17.31252670288086
    10. '```' → logprob: -17.62502670288086

Token 956: '),' (ID: 936)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.005154300481081009
    2. '),' → logprob: -6.255154132843018
    3. ',' → logprob: -6.755154132843018
    4. ')' → logprob: -7.130154132843018
    5. ' )' → logprob: -7.380154132843018
    6. ')])
' → logprob: -7.630154132843018
    7. ')])

' → logprob: -9.505154609680176
    8. ')],' → logprob: -11.130154609680176
    9. ',)' → logprob: -11.255154609680176
    10. ')]' → logprob: -11.755154609680176

Token 957: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1580645889043808
    2. '1' → logprob: -2.783064603805542
    3. 'F' → logprob: -2.908064603805542
    4. 'False' → logprob: -4.408064365386963
    5. '-' → logprob: -4.783064365386963
    6. '100' → logprob: -5.908064365386963
    7. ' ' → logprob: -6.033064365386963
    8. 'T' → logprob: -6.783064365386963
    9. '10' → logprob: -7.033064365386963
    10. '2' → logprob: -8.158064842224121

Token 958: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19860582053661346
    2. 'F' → logprob: -2.57360577583313
    3. '1' → logprob: -2.94860577583313
    4. '-' → logprob: -3.32360577583313
    5. 'False' → logprob: -5.198606014251709
    6. 'T' → logprob: -5.573606014251709
    7. '100' → logprob: -6.073606014251709
    8. 'copy' → logprob: -7.448606014251709
    9. 'time' → logprob: -7.573606014251709
    10. '10' → logprob: -7.698606014251709

Token 959: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003478593716863543
    2. ')' → logprob: -8.375348091125488
    3. ')])' → logprob: -9.375348091125488
    4. '])
' → logprob: -11.250348091125488
    5. ')]' → logprob: -11.375348091125488
    6. ' ])' → logprob: -12.750348091125488
    7. ',' → logprob: -13.250348091125488
    8. '))' → logprob: -13.875348091125488
    9. '])]' → logprob: -14.000348091125488
    10. '})' → logprob: -14.875348091125488

Token 960: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 961: ' N' (ID: 478)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.06466914713382721
    2. 'while' → logprob: -3.564669132232666
    3. 'for' → logprob: -4.689669132232666
    4. '#' → logprob: -4.814669132232666
    5. 'print' → logprob: -5.439669132232666
    6. 'target' → logprob: -5.439669132232666
    7. '<|end|>' → logprob: -6.314669132232666
    8. '```' → logprob: -6.564669132232666
    9. 'current' → logprob: -6.689669132232666
    10. 'if' → logprob: -6.689669132232666

Token 962: 'put' (ID: 772)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.6341402530670166
    2. 'new' → logprob: -0.7591402530670166
    3. 'step' → logprob: -7.2591400146484375
    4. 'ext' → logprob: -8.384140014648438
    5. '=' → logprob: -9.134140014648438
    6. 'old' → logprob: -9.884140014648438
    7. 'before' → logprob: -10.009140014648438
    8. 'ow' → logprob: -10.134140014648438
    9. 'w' → logprob: -10.509140014648438
    10. '_new' → logprob: -10.509140014648438

Token 963: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34380245208740234
    2. ' =' → logprob: -1.3438024520874023
    3. '+=' → logprob: -4.718802452087402
    4. ' +=' → logprob: -4.718802452087402
    5. ' ' → logprob: -5.343802452087402
    6. '=int' → logprob: -5.593802452087402
    7. 't' → logprob: -7.218802452087402
    8. '=input' → logprob: -7.468802452087402
    9. '  ' → logprob: -7.843802452087402
    10. '_' → logprob: -7.843802452087402

Token 964: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005464801797643304
    2. ' int' → logprob: -7.750546455383301
    3. '0' → logprob: -9.2505464553833
    4. '(int' → logprob: -12.2505464553833
    5. '[int' → logprob: -13.0005464553833
    6. ' ' → logprob: -13.1255464553833
    7. '1' → logprob: -13.1255464553833
    8. 'list' → logprob: -13.3755464553833
    9. '   ' → logprob: -13.5005464553833
    10. '  ' → logprob: -13.6255464553833

Token 965: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.386890709400177
    2. 'input' → logprob: -1.1368906497955322
    3. ' input' → logprob: -11.636890411376953
    4. '=input' → logprob: -12.261890411376953
    5. '()' → logprob: -12.386890411376953
    6. '<input' → logprob: -14.636890411376953
    7. ',input' → logprob: -14.761890411376953
    8. '0' → logprob: -14.886890411376953
    9. '[input' → logprob: -14.886890411376953
    10. '	input' → logprob: -16.136890411376953

Token 966: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5447114109992981
    2. ')' → logprob: -1.4197113513946533
    3. '()' → logprob: -1.7947113513946533
    4. '())
' → logprob: -4.794711589813232
    5. '()
' → logprob: -6.294711589813232
    6. ')
' → logprob: -6.669711589813232
    7. '(' → logprob: -8.294711112976074
    8. '();)' → logprob: -8.794711112976074
    9. ' ())' → logprob: -9.544711112976074
    10. '   ' → logprob: -10.294711112976074

Token 967: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34946054220199585
    2. '   ' → logprob: -1.7244606018066406
    3. 'time' → logprob: -2.2244606018066406
    4. 'if' → logprob: -5.849460601806641
    5. '<|end|>' → logprob: -6.349460601806641
    6. 'while' → logprob: -6.474460601806641
    7. 'order' → logprob: -6.974460601806641
    8. 'continue' → logprob: -8.34946060180664
    9. 'total' → logprob: -8.34946060180664
    10. ' for' → logprob: -8.47446060180664

Token 968: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0013278567930683494
    2. 'time' → logprob: -7.876327991485596
    3. 'order' → logprob: -8.126327514648438
    4. '   ' → logprob: -8.251327514648438
    5. 'if' → logprob: -9.001327514648438
    6. ' for' → logprob: -9.126327514648438
    7. '_' → logprob: -9.876327514648438
    8. 'input' → logprob: -10.501327514648438
    9. 'current' → logprob: -11.376327514648438
    10. 'product' → logprob: -11.376327514648438

Token 969: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.15310683415737e-05
    2. ' _' → logprob: -10.750021934509277
    3. '_range' → logprob: -16.87502098083496
    4. '_=' → logprob: -17.87502098083496
    5. ' range' → logprob: -18.25002098083496
    6. ' in' → logprob: -18.87502098083496
    7. '_j' → logprob: -19.00002098083496
    8. 'range' → logprob: -19.62502098083496
    9. '_]' → logprob: -20.12502098083496
    10. '_in' → logprob: -20.25002098083496

Token 970: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.6656825866666622e-05
    2. 'range' → logprob: -11.12502670288086
    3. '_range' → logprob: -11.75002670288086
    4. ' range' → logprob: -13.37502670288086
    5. ' in' → logprob: -14.00002670288086
    6. ' _' → logprob: -14.12502670288086
    7. 'in' → logprob: -14.87502670288086
    8. '_=' → logprob: -14.87502670288086
    9. '_]' → logprob: -17.12502670288086
    10. '_j' → logprob: -17.25002670288086

Token 971: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000825229799374938
    2. ' range' → logprob: -7.25082540512085
    3. '_' → logprob: -9.125824928283691
    4. '_range' → logprob: -12.000824928283691
    5. '(range' → logprob: -15.250824928283691
    6. '	range' → logprob: -16.750825881958008
    7. '_=' → logprob: -19.000825881958008
    8. '.range' → logprob: -20.000825881958008
    9. 'in' → logprob: -20.125825881958008
    10. '0' → logprob: -20.125825881958008

Token 972: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01831253431737423
    2. 'N' → logprob: -4.018312454223633
    3. '(' → logprob: -9.018312454223633
    4. '(int' → logprob: -10.893312454223633
    5. '   ' → logprob: -11.893312454223633
    6. '	N' → logprob: -12.768312454223633
    7. ' (' → logprob: -13.143312454223633
    8. 'int' → logprob: -13.143312454223633
    9. '(n' → logprob: -13.143312454223633
    10. ' N' → logprob: -13.393312454223633

Token 973: 'put' (ID: 772)
  Prédit: 'put'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.00023214559769257903
    2. 'N' → logprob: -8.625231742858887
    3. '(N' → logprob: -10.875231742858887
    4. '1' → logprob: -12.500231742858887
    5. '(' → logprob: -12.625231742858887
    6. 'input' → logprob: -12.875231742858887
    7. '_put' → logprob: -12.875231742858887
    8. 'int' → logprob: -13.125231742858887
    9. '):
' → logprob: -13.125231742858887
    10. ')' → logprob: -13.125231742858887

Token 974: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1392451524734497
    2. '):
' → logprob: -1.2642451524734497
    3. '       ' → logprob: -1.5142451524734497
    4. '   ' → logprob: -2.51424503326416
    5. '():
' → logprob: -3.13924503326416
    6. '):' → logprob: -3.88924503326416
    7. ':' → logprob: -5.38924503326416
    8. '()):
' → logprob: -5.38924503326416
    9. '():' → logprob: -5.63924503326416
    10. '<|end|>' → logprob: -5.88924503326416

Token 975: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012083157896995544
    2. 'new' → logprob: -4.762083053588867
    3. ' new' → logprob: -6.387083053588867
    4. 'input' → logprob: -7.012083053588867
    5. '   ' → logprob: -7.512083053588867
    6. 'put' → logprob: -10.137083053588867
    7. ' input' → logprob: -10.262083053588867
    8. '<|end|>' → logprob: -10.387083053588867
    9. ' ' → logprob: -10.512083053588867
    10. 'n' → logprob: -11.012083053588867

Token 976: ' put' (ID: 3006)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' (adapté à ' put') → logprob: -0.5027531981468201
    2. 'input' → logprob: -2.627753257751465
    3. '_' → logprob: -3.002753257751465
    4. 'new' → logprob: -3.502753257751465
    5. 'remove' → logprob: -3.877753257751465
    6. 'product' → logprob: -3.877753257751465
    7. 'p' → logprob: -4.127753257751465
    8. ' product' → logprob: -4.502753257751465
    9. 'get' → logprob: -4.627753257751465
    10. 'removed' → logprob: -4.752753257751465

Token 977: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.03981766849756241
    2. 'id' → logprob: -3.4148175716400146
    3. ',' → logprob: -5.664817810058594
    4. '_idx' → logprob: -8.289817810058594
    5. '_token' → logprob: -8.664817810058594
    6. 'new' → logprob: -8.664817810058594
    7. '_,' → logprob: -8.664817810058594
    8. '_input' → logprob: -8.789817810058594
    9. 'order' → logprob: -9.039817810058594
    10. '=' → logprob: -9.039817810058594

Token 978: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10353583842515945
    2. '=' → logprob: -2.9785358905792236
    3. ' ,' → logprob: -3.6035358905792236
    4. ' =' → logprob: -4.1035356521606445
    5. '=int' → logprob: -6.7285356521606445
    6. 'int' → logprob: -7.2285356521606445
    7. '(int' → logprob: -8.103535652160645
    8. ',input' → logprob: -8.228535652160645
    9. ' int' → logprob: -8.478535652160645
    10. '=input' → logprob: -8.478535652160645

Token 979: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0046355342492461205
    2. ' int' → logprob: -5.379635334014893
    3. '   ' → logprob: -12.12963581085205
    4. '	int' → logprob: -12.87963581085205
    5. 'input' → logprob: -13.25463581085205
    6. ' ' → logprob: -13.62963581085205
    7. '  ' → logprob: -13.75463581085205
    8. '(int' → logprob: -13.75463581085205
    9. '[int' → logprob: -14.37963581085205
    10. '<int' → logprob: -15.00463581085205

Token 980: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005236837547272444
    2. 'input' → logprob: -5.255236625671387
    3. ' input' → logprob: -13.380236625671387
    4. '=input' → logprob: -14.005236625671387
    5. '(int' → logprob: -15.380236625671387
    6. '(' → logprob: -15.755236625671387
    7. '<input' → logprob: -16.505237579345703
    8. '()' → logprob: -16.630237579345703
    9. '	input' → logprob: -16.630237579345703
    10. ',input' → logprob: -16.755237579345703

Token 981: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038349945098161697
    2. '())' → logprob: -6.003835201263428
    3. ')
' → logprob: -7.128835201263428
    4. '()' → logprob: -7.628835201263428
    5. '())
' → logprob: -10.87883472442627
    6. '   ' → logprob: -11.00383472442627
    7. '(' → logprob: -12.12883472442627
    8. ' )' → logprob: -12.12883472442627
    9. '<|end|>' → logprob: -12.37883472442627
    10. '       ' → logprob: -12.75383472442627

Token 982: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 983: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 984: ' total' (ID: 3609)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.7348425388336182
    2. 'time' → logprob: -0.8598425388336182
    3. 'N' → logprob: -3.484842538833618
    4. ' now' → logprob: -3.984842538833618
    5. ' N' → logprob: -4.109842300415039
    6. 'now' → logprob: -4.984842300415039
    7. ' i' → logprob: -5.234842300415039
    8. 'put' → logprob: -5.859842300415039
    9. ' not' → logprob: -5.984842300415039
    10. 'i' → logprob: -5.984842300415039

Token 985: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.009691399522125721
    2. '_' → logprob: -5.25969123840332
    3. ' >=' → logprob: -6.88469123840332
    4. ' _' → logprob: -7.13469123840332
    5. ' <' → logprob: -7.50969123840332
    6. '_MOVE' → logprob: -7.50969123840332
    7. ' ' → logprob: -8.13469123840332
    8. '<' → logprob: -8.75969123840332
    9. ' +=' → logprob: -8.88469123840332
    10. '+' → logprob: -9.00969123840332

Token 986: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.03041273169219494
    2. 'count' → logprob: -3.7804126739501953
    3. '<' → logprob: -5.655412673950195
    4. '<count' → logprob: -6.280412673950195
    5. ' <' → logprob: -7.655412673950195
    6. '_' → logprob: -7.780412673950195
    7. ' ' → logprob: -8.530412673950195
    8. '+' → logprob: -8.655412673950195
    9. '<_' → logprob: -9.405412673950195
    10. ' count' → logprob: -9.780412673950195

Token 987: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.520163357257843
    2. ' <' → logprob: -1.8951632976531982
    3. ' >' → logprob: -2.3951632976531982
    4. ' ==' → logprob: -2.5201632976531982
    5. '>=' → logprob: -3.3951632976531982
    6. ' <=' → logprob: -3.8951632976531982
    7. '==' → logprob: -4.645163536071777
    8. '   ' → logprob: -5.020163536071777
    9. '<' → logprob: -5.145163536071777
    10. '>' → logprob: -5.395163536071777

Token 988: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.39801111817359924
    2. '100' → logprob: -1.5230110883712769
    3. 'F' → logprob: -3.8980112075805664
    4. '0' → logprob: -4.148011207580566
    5. '10' → logprob: -4.148011207580566
    6. '300' → logprob: -4.648011207580566
    7. '200' → logprob: -4.773011207580566
    8. '500' → logprob: -5.148011207580566
    9. 'time' → logprob: -5.273011207580566
    10. '600' → logprob: -5.648011207580566

Token 989: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08778111636638641
    2. ':
' → logprob: -3.2127811908721924
    3. '   ' → logprob: -3.8377811908721924
    4. '       ' → logprob: -3.9627811908721924
    5. ' or' → logprob: -6.337780952453613
    6. ' and' → logprob: -7.212780952453613
    7. ' :' → logprob: -8.337780952453613
    8. 'and' → logprob: -8.837780952453613
    9. '==' → logprob: -9.962780952453613
    10. '    ' → logprob: -10.212780952453613

Token 990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010336418636143208
    2. '   ' → logprob: -7.126033782958984
    3. ' break' → logprob: -8.876033782958984
    4. 'break' → logprob: -9.626033782958984
    5. '	break' → logprob: -11.376033782958984
    6. '           ' → logprob: -12.376033782958984
    7. '```' → logprob: -12.751033782958984
    8. '	' → logprob: -13.251033782958984
    9. '	   ' → logprob: -13.376033782958984
    10. '     ' → logprob: -15.751033782958984

Token 991: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.15837182104587555
    2. '   ' → logprob: -2.158371925354004
    3. 'break' (adapté à ' break') → logprob: -3.658371925354004
    4. '       ' → logprob: -5.408371925354004
    5. '	break' → logprob: -8.408371925354004
    6. '    ' → logprob: -8.658371925354004
    7. ' sys' → logprob: -9.158371925354004
    8. ' continue' → logprob: -9.533371925354004
    9. ' exit' → logprob: -10.283371925354004
    10. 'sys' → logprob: -10.908371925354004

Token 992: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.44422468543052673
    2. 'time' → logprob: -1.4442247152328491
    3. '   ' → logprob: -2.4442245960235596
    4. ' while' → logprob: -4.194224834442139
    5. '<|end|>' → logprob: -4.444224834442139
    6. 'for' → logprob: -5.694224834442139
    7. 'if' → logprob: -6.694224834442139
    8. '#' → logprob: -6.944224834442139
    9. ' time' → logprob: -7.569224834442139
    10. 'total' → logprob: -7.819224834442139

Token 993: '   ' (ID: 271)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3699648678302765
    2. 'while' → logprob: -1.619964838027954
    3. '<|end|>' → logprob: -2.619964838027954
    4. 'for' → logprob: -4.744965076446533
    5. '#' → logprob: -4.869965076446533
    6. 'def' → logprob: -5.744965076446533
    7. '```' → logprob: -5.869965076446533
    8. 'total' → logprob: -5.869965076446533
    9. 'if' → logprob: -5.994965076446533
    10. '   ' → logprob: -5.994965076446533

Token 994: ' if' (ID: 538)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.008970490656793118
    2. '   ' → logprob: -5.383970260620117
    3. '<|end|>' → logprob: -6.758970260620117
    4. '#' → logprob: -6.883970260620117
    5. 'total' → logprob: -7.258970260620117
    6. 'if' (adapté à ' if') → logprob: -7.758970260620117
    7. '```' → logprob: -8.383970260620117
    8. 'for' → logprob: -9.008970260620117
    9. ' time' → logprob: -9.008970260620117
    10. 'continue' → logprob: -9.258970260620117

Token 995: ' now' (ID: 1954)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.5263605117797852
    2. ' now' → logprob: -1.2763605117797852
    3. 'target' → logprob: -2.901360511779785
    4. ' time' → logprob: -3.776360511779785
    5. ' total' → logprob: -4.026360511779785
    6. ' route' → logprob: -4.401360511779785
    7. ' not' → logprob: -5.276360511779785
    8. 'now' → logprob: -5.401360511779785
    9. ' True' → logprob: -6.026360511779785
    10. 'route' → logprob: -6.151360511779785

Token 996: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -4.7994282795116305e-05
    2. '_pos' → logprob: -10.12504768371582
    3. '==' → logprob: -12.75004768371582
    4. 'pos' → logprob: -13.62504768371582
    5. '!=' → logprob: -13.62504768371582
    6. ' !=' → logprob: -14.62504768371582
    7. ' ==' → logprob: -14.62504768371582
    8. ' Pos' → logprob: -15.12504768371582
    9. '<' → logprob: -15.37504768371582
    10. 'P' → logprob: -15.87504768371582

Token 997: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.766172468662262
    2. ' !=' → logprob: -1.3911724090576172
    3. '==' → logprob: -1.5161724090576172
    4. '!=' → logprob: -2.766172409057617
    5. '!=-' → logprob: -7.016172409057617
    6. '==-' → logprob: -7.266172409057617
    7. ' <' → logprob: -7.641172409057617
    8. '<' → logprob: -7.766172409057617
    9. '>=' → logprob: -7.766172409057617
    10. ' >=' → logprob: -8.141172409057617

Token 998: ' ' (ID: 220)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.03382861241698265
    2. '-' → logprob: -3.4088284969329834
    3. ' target' → logprob: -9.283828735351562
    4. ' -' → logprob: -10.283828735351562
    5. '-target' → logprob: -11.033828735351562
    6. '-V' → logprob: -11.783828735351562
    7. 'V' → logprob: -11.908828735351562
    8. '0' → logprob: -12.033828735351562
    9. 'product' → logprob: -12.283828735351562
    10. '   ' → logprob: -12.283828735351562

Token 999: '0' (ID: 15)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.02092265896499157
    2. '-' → logprob: -3.8959226608276367
    3. 'V' → logprob: -8.645922660827637
    4. '0' → logprob: -9.770922660827637
    5. '-target' → logprob: -10.270922660827637
    6. 'F' → logprob: -10.395922660827637
    7. '-V' → logprob: -10.770922660827637
    8. 'T' → logprob: -11.395922660827637
    9. ' target' → logprob: -11.645922660827637
    10. 'product' → logprob: -11.770922660827637

Token 1000: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7787516117095947
    2. ' and' → logprob: -0.9037516117095947
    3. ':
' → logprob: -2.0287516117095947
    4. 'and' → logprob: -6.028751373291016
    5. ' or' → logprob: -7.278751373291016
    6. '   ' → logprob: -7.278751373291016
    7. '       ' → logprob: -7.403751373291016
    8. ',' → logprob: -11.403751373291016
    9. '<|end|>' → logprob: -11.403751373291016
    10. ':

' → logprob: -11.903751373291016

Token 1001: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21316833794116974
    2. 'target' → logprob: -2.5881683826446533
    3. 'if' → logprob: -3.0881683826446533
    4. '       ' → logprob: -3.4631683826446533
    5. 'and' → logprob: -3.9631683826446533
    6. ' and' → logprob: -4.588168144226074
    7. ' if' → logprob: -6.088168144226074
    8. 'now' → logprob: -6.338168144226074
    9. 'current' → logprob: -6.838168144226074
    10. ' now' → logprob: -6.838168144226074

Token 1002: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' (adapté à ' get') → logprob: -0.43370169401168823
    2. 'if' → logprob: -1.933701753616333
    3. 'target' → logprob: -2.308701753616333
    4. 'init' → logprob: -2.933701753616333
    5. 'time' → logprob: -3.558701753616333
    6. 'product' → logprob: -4.433701515197754
    7. '   ' → logprob: -5.308701515197754
    8. 'order' → logprob: -5.933701515197754
    9. 'now' → logprob: -6.433701515197754
    10. 'goto' → logprob: -6.558701515197754

Token 1003: 'Product' (ID: 4532)
  Prédit: 'Product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Product' → logprob: -6.420598219847307e-05
    2. 'Target' → logprob: -9.8750638961792
    3. 'product' → logprob: -11.6250638961792
    4. '_product' → logprob: -13.7500638961792
    5. 'target' → logprob: -14.0000638961792
    6. 'time' → logprob: -14.8750638961792
    7. 'current' → logprob: -15.2500638961792
    8. 'Time' → logprob: -15.6250638961792
    9. 'Current' → logprob: -15.6250638961792
    10. ' Product' → logprob: -15.7500638961792

Token 1004: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.005055502522736788
    2. 'time' → logprob: -5.8800554275512695
    3. '(now' → logprob: -6.2550554275512695
    4. '(' → logprob: -8.88005542755127
    5. '(total' → logprob: -9.63005542755127
    6. 'now' → logprob: -9.88005542755127
    7. '(t' → logprob: -10.75505542755127
    8. '(T' → logprob: -10.88005542755127
    9. ' (' → logprob: -11.00505542755127
    10. '(current' → logprob: -11.75505542755127

Token 1005: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.03806421533226967
    2. 'step' → logprob: -3.2880642414093018
    3. ')' → logprob: -12.413064002990723
    4. '-step' → logprob: -12.413064002990723
    5. '+' → logprob: -12.788064002990723
    6. '0' → logprob: -13.038064002990723
    7. '_STEP' → logprob: -13.288064002990723
    8. 'Step' → logprob: -13.413064002990723
    9. '	step' → logprob: -13.663064002990723
    10. ' step' → logprob: -14.038064002990723

Token 1006: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5772982835769653
    2. ')' → logprob: -0.8272982835769653
    3. '+' → logprob: -7.327298164367676
    4. ')
' → logprob: -7.827298164367676
    5. '       ' → logprob: -8.827298164367676
    6. '   ' → logprob: -9.452298164367676
    7. ' )
' → logprob: -11.327298164367676
    8. '-' → logprob: -11.452298164367676
    9. ')

' → logprob: -11.452298164367676
    10. ');' → logprob: -11.702298164367676

Token 1007: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20223549008369446
    2. '   ' → logprob: -1.827235460281372
    3. 'target' → logprob: -4.077235698699951
    4. '<|end|>' → logprob: -5.952235698699951
    5. 'if' → logprob: -6.202235698699951
    6. 'now' → logprob: -8.952235221862793
    7. 'current' → logprob: -9.327235221862793
    8. 'time' → logprob: -9.452235221862793
    9. 'Now' → logprob: -10.077235221862793
    10. 'while' → logprob: -10.452235221862793

Token 1008: ' time' (ID: 1058)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.11826937645673752
    2. 'if' → logprob: -2.368269443511963
    3. 'target' → logprob: -4.618269443511963
    4. '   ' → logprob: -5.118269443511963
    5. '       ' → logprob: -6.243269443511963
    6. ' init' → logprob: -10.868268966674805
    7. 'for' → logprob: -11.618268966674805
    8. 'product' → logprob: -11.743268966674805
    9. 'time' (adapté à ' time') → logprob: -11.743268966674805
    10. 'now' → logprob: -11.743268966674805

Token 1009: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.0006181967910379171
    2. ' +=' → logprob: -8.125617980957031
    3. '+=' → logprob: -8.375617980957031
    4. 'step' → logprob: -10.000617980957031
    5. 'Step' → logprob: -11.625617980957031
    6. '_' → logprob: -11.750617980957031
    7. '_increment' → logprob: -11.875617980957031
    8. '   ' → logprob: -12.250617980957031
    9. '_STEP' → logprob: -12.625617980957031
    10. '	step' → logprob: -12.875617980957031

Token 1010: '_before' (ID: 56638)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25198349356651306
    2. ' +=' → logprob: -1.5019835233688354
    3. '=' → logprob: -10.376983642578125
    4. '+' → logprob: -10.876983642578125
    5. ']+=' → logprob: -13.001983642578125
    6. '++' → logprob: -14.876983642578125
    7. '+='' → logprob: -14.876983642578125
    8. '   ' → logprob: -15.251983642578125
    9. '+="' → logprob: -15.751983642578125
    10. ' =' → logprob: -16.001983642578125

Token 1011: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3405093252658844
    2. ' =' → logprob: -1.340509295463562
    3. ' +=' → logprob: -4.090509414672852
    4. '+=' → logprob: -4.590509414672852
    5. '<=' → logprob: -15.340509414672852
    6. ',' → logprob: -15.590509414672852
    7. ' ' → logprob: -16.09050941467285
    8. ' -=' → logprob: -16.34050941467285
    9. '＝' → logprob: -16.34050941467285
    10. ' ' → logprob: -16.46550941467285

Token 1012: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.011049231514334679
    2. ' time' → logprob: -4.511049270629883
    3. '   ' → logprob: -14.761049270629883
    4. '	time' → logprob: -15.136049270629883
    5. 'now' → logprob: -15.636049270629883
    6. ' ' → logprob: -15.886049270629883
    7. '0' → logprob: -16.136049270629883
    8. '(time' → logprob: -16.511049270629883
    9. 'current' → logprob: -17.136049270629883
    10. 'max' → logprob: -17.136049270629883

Token 1013: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.9228352904319763
    2. '+' → logprob: -1.672835350036621
    3. ' +=' → logprob: -1.797835350036621
    4. '<|end|>' → logprob: -2.422835350036621
    5. '+=' → logprob: -3.047835350036621
    6. '   ' → logprob: -3.922835350036621
    7. '-step' → logprob: -4.547835350036621
    8. '_' → logprob: -4.922835350036621
    9. '<|end|>' → logprob: -4.922835350036621
    10. ')' → logprob: -5.047835350036621

Token 1014: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7325828671455383
    2. '       ' → logprob: -0.9825828671455383
    3. 'if' → logprob: -2.6075828075408936
    4. '<|end|>' → logprob: -2.8575828075408936
    5. 'while' → logprob: -5.482583045959473
    6. ' if' → logprob: -5.607583045959473
    7. 'target' → logprob: -6.607583045959473
    8. 'time' → logprob: -6.732583045959473
    9. '...' → logprob: -7.607583045959473
    10. '<|end|>' → logprob: -7.732583045959473

Token 1015: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17210085690021515
    2. '       ' → logprob: -2.297100782394409
    3. '<|end|>' → logprob: -3.672100782394409
    4. 'if' → logprob: -4.422101020812988
    5. 'time' → logprob: -5.047101020812988
    6. 'target' → logprob: -5.172101020812988
    7. '```' → logprob: -5.672101020812988
    8. 'while' → logprob: -6.672101020812988
    9. '#' → logprob: -7.047101020812988
    10. '...' → logprob: -7.297101020812988

Token 1016: ' if' (ID: 538)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.483699232339859
    2. 'if' (adapté à ' if') → logprob: -1.7336992025375366
    3. 'time' → logprob: -1.8586992025375366
    4. '   ' → logprob: -3.233699321746826
    5. 'continue' → logprob: -5.108699321746826
    6. '#' → logprob: -6.858699321746826
    7. 'while' → logprob: -7.108699321746826
    8. 'current' → logprob: -7.108699321746826
    9. 'route' → logprob: -7.358699321746826
    10. 'for' → logprob: -7.983699321746826

Token 1017: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07224969565868378
    2. 'product' → logprob: -2.8222496509552
    3. ' len' → logprob: -5.197249889373779
    4. 'target' → logprob: -5.822249889373779
    5. 'now' → logprob: -7.197249889373779
    6. 'not' → logprob: -7.447249889373779
    7. ' product' → logprob: -8.572249412536621
    8. 'route' → logprob: -9.322249412536621
    9. 'order' → logprob: -9.572249412536621
    10. '(len' → logprob: -10.572249412536621

Token 1018: '(product' (ID: 31697)
  Prédit: '(product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.02785376086831093
    2. 'product' → logprob: -3.6528537273406982
    3. '(route' → logprob: -6.652853965759277
    4. '(order' → logprob: -8.777853965759277
    5. 'route' → logprob: -9.527853965759277
    6. ' product' → logprob: -10.902853965759277
    7. '(' → logprob: -11.902853965759277
    8. 'order' → logprob: -13.027853965759277
    9. '(products' → logprob: -13.277853965759277
    10. ' (' → logprob: -13.777853965759277

Token 1019: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020378610119223595
    2. ')>' → logprob: -4.020378589630127
    3. ')==' → logprob: -6.520378589630127
    4. ' >' → logprob: -8.145379066467285
    5. '>' → logprob: -8.645379066467285
    6. ' ==' → logprob: -9.395379066467285
    7. ' )' → logprob: -9.645379066467285
    8. '==' → logprob: -10.395379066467285
    9. '[' → logprob: -10.770379066467285
    10. ')<' → logprob: -11.020379066467285

Token 1020: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0027459859848022
    2. '>' → logprob: -1.1277459859848022
    3. ' ==' → logprob: -1.3777459859848022
    4. ' >' → logprob: -2.877746105194092
    5. '()>' → logprob: -7.752746105194092
    6. ':' → logprob: -9.127745628356934
    7. '()==' → logprob: -9.252745628356934
    8. ')' → logprob: -9.752745628356934
    9. ')==' → logprob: -10.002745628356934
    10. ')>' → logprob: -10.127745628356934

Token 1021: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.25007438659668
    4. '1' → logprob: -16.50007438659668
    5. '>' → logprob: -17.00007438659668
    6. '```' → logprob: -18.37507438659668
    7. '  ' → logprob: -18.62507438659668
    8. '           ' → logprob: -19.25007438659668
    9. '       ' → logprob: -19.37507438659668
    10. '    ' → logprob: -19.50007438659668

Token 1022: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.250017166137695
    4. '>' → logprob: -16.750017166137695
    5. '1' → logprob: -17.375017166137695
    6. '```' → logprob: -17.750017166137695
    7. '=' → logprob: -18.125017166137695
    8. '    ' → logprob: -18.625017166137695
    9. '  ' → logprob: -18.750017166137695
    10. '       ' → logprob: -18.875017166137695

Token 1023: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23987191915512085
    2. ':' → logprob: -1.7398719787597656
    3. ' and' → logprob: -3.3648719787597656
    4. '       ' → logprob: -6.739871978759766
    5. '           ' → logprob: -6.739871978759766
    6. ',' → logprob: -8.239871978759766
    7. '<|end|>' → logprob: -8.864871978759766
    8. 'and' → logprob: -9.114871978759766
    9. ' or' → logprob: -9.364871978759766
    10. '):
' → logprob: -9.489871978759766

Token 1024: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1034938246011734
    2. 'init' → logprob: -3.2284939289093018
    3. 'target' → logprob: -3.3534939289093018
    4. '           ' → logprob: -4.353493690490723
    5. 'and' → logprob: -6.478493690490723
    6. '
' → logprob: -6.478493690490723
    7. 'get' → logprob: -6.728493690490723
    8. '   ' → logprob: -6.978493690490723
    9. '        
' → logprob: -6.978493690490723
    10. ' and' → logprob: -7.103493690490723

Token 1025: ' time' (ID: 1058)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0012382064014673233
    2. ' init' → logprob: -6.8762383460998535
    3. 'target' → logprob: -8.751237869262695
    4. '   ' → logprob: -11.001237869262695
    5. 'goto' → logprob: -11.626237869262695
    6. 'initialize' → logprob: -12.501237869262695
    7. '```' → logprob: -13.126237869262695
    8. 'continue' → logprob: -13.126237869262695
    9. 'route' → logprob: -13.376237869262695
    10. '           ' → logprob: -13.626237869262695

Token 1026: '_step' (ID: 27360)
  Prédit: 'Pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.3536410331726074
    2. '_step' → logprob: -1.3536410331726074
    3. '_pos' → logprob: -3.8536410331726074
    4. '_target' → logprob: -4.478641033172607
    5. 'Step' → logprob: -5.228641033172607
    6. 'step' → logprob: -7.228641033172607
    7. 'target' → logprob: -7.978641033172607
    8. '       ' → logprob: -8.853641510009766
    9. '   ' → logprob: -9.228641510009766
    10. '=' → logprob: -9.603641510009766

Token 1027: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2916218936443329
    2. ' +=' → logprob: -1.4166219234466553
    3. '=' → logprob: -4.916621685028076
    4. '+' → logprob: -6.791621685028076
    5. ',' → logprob: -6.791621685028076
    6. ' =' → logprob: -8.041622161865234
    7. '   ' → logprob: -8.541622161865234
    8. '       ' → logprob: -10.041622161865234
    9. '_target' → logprob: -10.166622161865234
    10. '==' → logprob: -10.291622161865234

Token 1028: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.35765689611434937
    2. 'product' → logprob: -1.9826569557189941
    3. 'now' → logprob: -3.482656955718994
    4. '0' → logprob: -3.982656955718994
    5. 'get' → logprob: -4.107656955718994
    6. 'route' → logprob: -4.107656955718994
    7. 'T' → logprob: -4.232656955718994
    8. 'order' → logprob: -4.482656955718994
    9. 'copy' → logprob: -4.732656955718994
    10. 'total' → logprob: -4.857656955718994

Token 1029: '_step' (ID: 27360)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023175589740276337
    2. ' +' → logprob: -4.2731757164001465
    3. '_step' → logprob: -4.7731757164001465
    4. '+=' → logprob: -8.773175239562988
    5. ' +=' → logprob: -8.898175239562988
    6. '_' → logprob: -9.023175239562988
    7. ' ' → logprob: -11.273175239562988
    8. 'step' → logprob: -11.273175239562988
    9. '   ' → logprob: -11.398175239562988
    10. '```' → logprob: -11.898175239562988

Token 1030: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016091030091047287
    2. ' +' → logprob: -4.1410908699035645
    3. '<|end|>' → logprob: -10.141091346740723
    4. '+=' → logprob: -12.141091346740723
    5. '+
' → logprob: -12.516091346740723
    6. ' ' → logprob: -13.141091346740723
    7. '<|end|>' → logprob: -13.891091346740723
    8. 'time' → logprob: -14.266091346740723
    9. ')' → logprob: -14.516091346740723
    10. ' +=' → logprob: -14.641091346740723

Token 1031: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4242933392524719
    2. '<|end|>' → logprob: -1.1742932796478271
    3. ' +' → logprob: -3.924293279647827
    4. '<|end|>' → logprob: -4.799293518066406
    5. '       ' → logprob: -6.674293518066406
    6. '   ' → logprob: -6.674293518066406
    7. '           ' → logprob: -6.924293518066406
    8. ' else' → logprob: -6.924293518066406
    9. '+=' → logprob: -7.299293518066406
    10. 'else' → logprob: -7.424293518066406

Token 1032: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1033: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5134807825088501
    2. ':' → logprob: -1.01348078250885
    3. '           ' → logprob: -3.3884806632995605
    4. '<|end|>' → logprob: -6.5134806632995605
    5. ',' → logprob: -7.2634806632995605
    6. '   ' → logprob: -7.5134806632995605
    7. '       ' → logprob: -7.6384806632995605
    8. '+' → logprob: -7.7634806632995605
    9. '<|end|>' → logprob: -8.388481140136719
    10. '.' → logprob: -8.888481140136719

Token 1034: '           ' (ID: 352)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.3821430504322052
    2. '           ' → logprob: -1.3821430206298828
    3. '   ' → logprob: -3.132143020629883
    4. 'time' → logprob: -4.382143020629883
    5. '       ' → logprob: -5.382143020629883
    6. '```' → logprob: -5.882143020629883
    7. '	time' → logprob: -7.257143020629883
    8. ' continue' → logprob: -7.507143020629883
    9. '
' → logprob: -8.007143020629883
    10. ' ' → logprob: -8.257143020629883

Token 1035: ' print' (ID: 2123)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.39410457015037537
    2. ' time' → logprob: -1.2691045999526978
    3. '           ' → logprob: -3.269104480743408
    4. '   ' → logprob: -5.144104480743408
    5. '       ' → logprob: -7.894104480743408
    6. '	time' → logprob: -8.019104957580566
    7. 'break' → logprob: -11.644104957580566
    8. '"time' → logprob: -12.019104957580566
    9. 'pass' → logprob: -12.144104957580566
    10. 'print' (adapté à ' print') → logprob: -12.269104957580566

Token 1036: '(-' (ID: 8087)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021526850759983063
    2. '(' → logprob: -5.02152681350708
    3. '("' → logprob: -5.02152681350708
    4. '("")' → logprob: -5.52152681350708
    5. '(-' → logprob: -6.02152681350708
    6. '()
' → logprob: -6.77152681350708
    7. '('' → logprob: -7.77152681350708
    8. '(""' → logprob: -10.771527290344238
    9. '("\' → logprob: -11.396527290344238
    10. '(
' → logprob: -11.521527290344238

Token 1037: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011391390580683947
    2. ' ' → logprob: -9.125113487243652
    3. '2' → logprob: -12.875113487243652
    4. '100' → logprob: -13.750113487243652
    5. '
' → logprob: -15.125113487243652
    6. 'time' → logprob: -15.125113487243652
    7. '0' → logprob: -16.00011444091797
    8. '10' → logprob: -16.37511444091797
    9. '１' → logprob: -16.62511444091797
    10. '-' → logprob: -16.75011444091797

Token 1038: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004471420310437679
    2. ')
' → logprob: -5.504471302032471
    3. '<|end|>' → logprob: -7.879471302032471
    4. ' )' → logprob: -12.504471778869629
    5. ')return' → logprob: -13.004471778869629
    6. '<|end|>' → logprob: -13.129471778869629
    7. '```' → logprob: -13.754471778869629
    8. '')' → logprob: -13.879471778869629
    9. '
' → logprob: -14.254471778869629
    10. '")' → logprob: -14.379471778869629

Token 1039: ' flush' (ID: 37790)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.043609119951725006
    2. ')' → logprob: -3.543609142303467
    3. ' flush' → logprob: -4.293609142303467
    4. ')
' → logprob: -9.668608665466309
    5. ' )' → logprob: -10.793608665466309
    6. 'end' → logprob: -11.168608665466309
    7. ' ' → logprob: -13.043608665466309
    8. '_flush' → logprob: -13.293608665466309
    9. '.flush' → logprob: -13.793608665466309
    10. '),' → logprob: -13.918608665466309

Token 1040: '=True' (ID: 7827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005211582873016596
    2. '())' → logprob: -5.630211353302002
    3. ')
' → logprob: -6.505211353302002
    4. '()' → logprob: -9.50521183013916
    5. '())
' → logprob: -10.38021183013916
    6. ' )' → logprob: -12.50521183013916
    7. '()
' → logprob: -13.00521183013916
    8. '`)' → logprob: -14.63021183013916
    9. '```' → logprob: -14.75521183013916
    10. '<|end|>' → logprob: -14.88021183013916

Token 1041: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012660210020840168
    2. ')
' → logprob: -4.387660026550293
    3. '<|end|>' → logprob: -8.887660026550293
    4. ')return' → logprob: -12.512660026550293
    5. ')

' → logprob: -13.137660026550293
    6. '       ' → logprob: -13.387660026550293
    7. ')
' → logprob: -14.387660026550293
    8. '   ' → logprob: -14.387660026550293
    9. '
' → logprob: -14.387660026550293
    10. '<|end|>' → logprob: -14.637660026550293

Token 1042: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1043: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.49370160698890686
    2. 'continue' → logprob: -1.8687015771865845
    3. '           ' → logprob: -2.618701696395874
    4. 'break' → logprob: -2.993701696395874
    5. '<|end|>' → logprob: -3.368701696395874
    6. '   ' → logprob: -3.618701696395874
    7. '
' → logprob: -4.118701457977295
    8. '       ' → logprob: -4.493701457977295
    9. '```' → logprob: -5.493701457977295
    10. ' time' → logprob: -5.868701457977295

Token 1044: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.02829989418387413
    2. '+=' → logprob: -4.278299808502197
    3. '_break' → logprob: -5.153299808502197
    4. '_' → logprob: -5.653299808502197
    5. ' +=' → logprob: -6.028299808502197
    6. 'break' → logprob: -7.403299808502197
    7. 'step' → logprob: -7.778299808502197
    8. '_
' → logprob: -8.278300285339355
    9. '_steps' → logprob: -8.528300285339355
    10. '_time' → logprob: -9.403300285339355

Token 1045: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0032942749094218016
    2. ' +=' → logprob: -5.753294467926025
    3. '=' → logprob: -9.378293991088867
    4. '+' → logprob: -10.378293991088867
    5. '-=' → logprob: -15.503293991088867
    6. '   ' → logprob: -15.753293991088867
    7. ']+=' → logprob: -16.003293991088867
    8. '==' → logprob: -16.628293991088867
    9. '+='' → logprob: -16.628293991088867
    10. '```' → logprob: -16.753293991088867

Token 1046: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0014207109343260527
    2. ' time' → logprob: -7.001420497894287
    3. 'T' → logprob: -7.876420497894287
    4. '(time' → logprob: -10.251420974731445
    5. '0' → logprob: -10.501420974731445
    6. 'now' → logprob: -10.751420974731445
    7. 'int' → logprob: -11.501420974731445
    8. ' T' → logprob: -11.626420974731445
    9. '-' → logprob: -11.751420974731445
    10. '1' → logprob: -12.251420974731445

Token 1047: '_step' (ID: 27360)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5832202434539795
    2. '<|end|>' → logprob: -0.8332202434539795
    3. '
' → logprob: -6.083220481872559
    4. ' +' → logprob: -6.208220481872559
    5. '<|end|>' → logprob: -6.708220481872559
    6. '+
' → logprob: -7.833220481872559
    7. '+=' → logprob: -8.208220481872559
    8. ')' → logprob: -8.458220481872559
    9. '++' → logprob: -8.958220481872559
    10. '[' → logprob: -9.083220481872559

Token 1048: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10063006728887558
    2. ' +' → logprob: -2.350630044937134
    3. '<|end|>' → logprob: -7.975630283355713
    4. '<|end|>' → logprob: -9.725629806518555
    5. '+
' → logprob: -12.100629806518555
    6. '   ' → logprob: -13.100629806518555
    7. '+=' → logprob: -13.100629806518555
    8. ' +=' → logprob: -13.225629806518555
    9. '	' → logprob: -13.600629806518555
    10. '
' → logprob: -13.600629806518555

Token 1049: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016349162615370005
    2. ' ' → logprob: -8.750163078308105
    3. '100' → logprob: -13.000163078308105
    4. '   ' → logprob: -13.500163078308105
    5. '0' → logprob: -14.500163078308105
    6. '10' → logprob: -14.875163078308105
    7. '2' → logprob: -16.000164031982422
    8. '  ' → logprob: -17.000164031982422
    9. '+' → logprob: -17.125164031982422
    10. '3' → logprob: -17.250164031982422

Token 1050: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5014188799541444e-05
    2. ' ' → logprob: -10.750044822692871
    3. '100' → logprob: -11.250044822692871
    4. '10' → logprob: -12.250044822692871
    5. '0' → logprob: -13.250044822692871
    6. '2' → logprob: -14.125044822692871
    7. '5' → logprob: -14.500044822692871
    8. '   ' → logprob: -14.625044822692871
    9. '3' → logprob: -14.750044822692871
    10. '20' → logprob: -15.250044822692871

Token 1051: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4023621380329132
    2. '<|end|>' → logprob: -1.5273621082305908
    3. 'elif' → logprob: -2.527362108230591
    4. 'if' → logprob: -4.40236234664917
    5. '   ' → logprob: -4.52736234664917
    6. '```' → logprob: -5.40236234664917
    7. '
' → logprob: -5.65236234664917
    8. 'while' → logprob: -7.02736234664917
    9. ' else' → logprob: -7.52736234664917
    10. ')' → logprob: -7.77736234664917

Token 1052: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1053: ' total' (ID: 3609)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7780139446258545
    2. '   ' → logprob: -1.7780139446258545
    3. '<|end|>' → logprob: -2.1530139446258545
    4. '       ' → logprob: -2.4030139446258545
    5. ' continue' → logprob: -2.6530139446258545
    6. '	continue' → logprob: -3.0280139446258545
    7. '           ' → logprob: -3.2780139446258545
    8. 'else' → logprob: -6.528014183044434
    9. '<|end|>' → logprob: -6.528014183044434
    10. '...' → logprob: -7.028014183044434

Token 1054: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.0001818489981815219
    2. 'move' → logprob: -8.750182151794434
    3. '_step' → logprob: -11.125182151794434
    4. '_MOVE' → logprob: -12.250182151794434
    5. 'Move' → logprob: -14.625182151794434
    6. '```' → logprob: -14.625182151794434
    7. '_continue' → logprob: -14.750182151794434
    8. '_moves' → logprob: -14.750182151794434
    9. '_' → logprob: -15.000182151794434
    10. ' move' → logprob: -15.250182151794434

Token 1055: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.2352385965641588e-05
    2. 'count' → logprob: -11.750012397766113
    3. '_' → logprob: -12.750012397766113
    4. '```' → logprob: -14.875012397766113
    5. '_counts' → logprob: -14.875012397766113
    6. '_counter' → logprob: -15.750012397766113
    7. ' count' → logprob: -16.125011444091797
    8. '_step' → logprob: -16.375011444091797
    9. '_COUNT' → logprob: -17.000011444091797
    10. '=' → logprob: -17.000011444091797

Token 1056: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2734855115413666
    2. ' +=' → logprob: -1.648485541343689
    3. '<|end|>' → logprob: -3.2734854221343994
    4. '+' → logprob: -5.6484856605529785
    5. '   ' → logprob: -6.1484856605529785
    6. '=' → logprob: -6.1484856605529785
    7. '<|end|>' → logprob: -7.0234856605529785
    8. '       ' → logprob: -9.27348518371582
    9. '  ' → logprob: -10.39848518371582
    10. ' ' → logprob: -10.64848518371582

Token 1057: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028366113547235727
    2. ' ' → logprob: -5.87783670425415
    3. '0' → logprob: -10.502836227416992
    4. '   ' → logprob: -13.377836227416992
    5. 'time' → logprob: -14.002836227416992
    6. '```' → logprob: -14.877836227416992
    7. '
' → logprob: -15.002836227416992
    8. '-' → logprob: -15.502836227416992
    9. ' ' → logprob: -16.190336227416992
    10. '  ' → logprob: -16.377836227416992

Token 1058: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.857719275401905e-05
    2. ' ' → logprob: -10.625038146972656
    3. '0' → logprob: -11.375038146972656
    4. '-' → logprob: -13.625038146972656
    5. '   ' → logprob: -14.750038146972656
    6. '2' → logprob: -15.562538146972656
    7. '
' → logprob: -15.687538146972656
    8. '10' → logprob: -16.625038146972656
    9. '```' → logprob: -16.750038146972656
    10. 'time' → logprob: -16.812538146972656

Token 1059: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2720838189125061
    2. '<|end|>' → logprob: -2.2720837593078613
    3. 'elif' → logprob: -2.3970837593078613
    4. '   ' → logprob: -3.8970837593078613
    5. 'while' → logprob: -4.772083759307861
    6. '```' → logprob: -5.272083759307861
    7. 'if' → logprob: -5.647083759307861
    8. 'continue' → logprob: -6.022083759307861
    9. '       ' → logprob: -6.272083759307861
    10. '
' → logprob: -7.022083759307861

Token 1060: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.058110229671001434
    2. 'elif' → logprob: -2.933110237121582
    3. '   ' → logprob: -7.183110237121582
    4. 'while' → logprob: -7.308110237121582
    5. '```' → logprob: -7.308110237121582
    6. '<|end|>' → logprob: -7.933110237121582
    7. 'if' → logprob: -8.183110237121582
    8. ' else' → logprob: -8.433110237121582
    9. 'continue' → logprob: -8.558110237121582
    10. '
' → logprob: -11.058110237121582

Token 1061: ' if' (ID: 538)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7470633387565613
    2. '	continue' → logprob: -1.747063398361206
    3. '   ' → logprob: -1.872063398361206
    4. ' continue' → logprob: -1.872063398361206
    5. '<|end|>' → logprob: -3.622063398361206
    6. '       ' → logprob: -4.372063159942627
    7. 'else' → logprob: -6.622063159942627
    8. '           ' → logprob: -7.372063159942627
    9. 'elif' → logprob: -7.497063159942627
    10. '```' → logprob: -7.622063159942627

Token 1062: ' total' (ID: 3609)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.19792026281356812
    2. 'now' → logprob: -2.197920322418213
    3. ' time' → logprob: -3.947920322418213
    4. ' now' → logprob: -4.072920322418213
    5. 'route' → logprob: -4.072920322418213
    6. 'target' → logprob: -5.697920322418213
    7. 'False' → logprob: -6.072920322418213
    8. 'not' → logprob: -6.197920322418213
    9. 'total' → logprob: -6.197920322418213
    10. 'len' → logprob: -6.322920322418213

Token 1063: '_move' (ID: 39414)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.006884680595248938
    2. '_pos' → logprob: -5.881884574890137
    3. '_time' → logprob: -6.506884574890137
    4. 'Pos' → logprob: -6.756884574890137
    5. 'Step' → logprob: -7.756884574890137
    6. '_move' → logprob: -7.756884574890137
    7. '```' → logprob: -8.506884574890137
    8. '_position' → logprob: -9.381884574890137
    9. 'step' → logprob: -9.631884574890137
    10. '_code' → logprob: -9.881884574890137

Token 1064: '_count' (ID: 7536)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.36748409271240234
    2. '+' → logprob: -1.9924840927124023
    3. '```' → logprob: -2.9924840927124023
    4. '_' → logprob: -3.3674840927124023
    5. '_count' → logprob: -3.7424840927124023
    6. '_time' → logprob: -3.8674840927124023
    7. '   ' → logprob: -4.367484092712402
    8. ' +=' → logprob: -4.867484092712402
    9. '_pos' → logprob: -5.492484092712402
    10. ' +' → logprob: -6.117484092712402

Token 1065: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.85228431224823
    2. '==' → logprob: -1.47728431224823
    3. ' >=' → logprob: -1.60228431224823
    4. '>=' → logprob: -2.3522844314575195
    5. ' >' → logprob: -3.8522844314575195
    6. '>' → logprob: -4.2272844314575195
    7. ' <=' → logprob: -5.3522844314575195
    8. '<' → logprob: -5.7272844314575195
    9. '<=' → logprob: -5.9772844314575195
    10. ' <' → logprob: -6.3522844314575195

Token 1066: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0004511685692705214
    2. ' T' → logprob: -7.75045108795166
    3. '   ' → logprob: -11.00045108795166
    4. ' ' → logprob: -13.62545108795166
    5. '	T' → logprob: -14.12545108795166
    6. '  ' → logprob: -15.00045108795166
    7. 'time' → logprob: -15.12545108795166
    8. '100' → logprob: -15.25045108795166
    9. '10' → logprob: -15.25045108795166
    10. 'total' → logprob: -15.62545108795166

Token 1067: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7205631732940674
    2. ':
' → logprob: -0.8455631732940674
    3. '               ' → logprob: -2.9705631732940674
    4. '       ' → logprob: -4.095562934875488
    5. '           ' → logprob: -4.220562934875488
    6. '   ' → logprob: -7.595562934875488
    7. '():
' → logprob: -8.595562934875488
    8. ':return' → logprob: -8.720562934875488
    9. '==' → logprob: -9.220562934875488
    10. '):
' → logprob: -9.220562934875488

Token 1068: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0288761854171753
    2. '               ' → logprob: -1.0288761854171753
    3. '       ' → logprob: -1.9038761854171753
    4. 'continue' → logprob: -2.903876304626465
    5. ' continue' → logprob: -3.153876304626465
    6. '   ' → logprob: -3.903876304626465
    7. '```' → logprob: -4.778876304626465
    8. ':
' → logprob: -5.153876304626465
    9. '<|end|>' → logprob: -6.528876304626465
    10. '	continue' → logprob: -7.528876304626465

Token 1069: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.22001533210277557
    2. 'continue' → logprob: -1.970015287399292
    3. '           ' → logprob: -3.720015287399292
    4. ' break' → logprob: -3.720015287399292
    5. '```' → logprob: -5.345015525817871
    6. ' continue' → logprob: -6.345015525817871
    7. '               ' → logprob: -6.470015525817871
    8. '       ' → logprob: -7.345015525817871
    9. '   ' → logprob: -7.845015525817871
    10. '	break' → logprob: -8.470015525817871

Token 1070: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2143351137638092
    2. '   ' → logprob: -1.9643350839614868
    3. 'elif' → logprob: -4.089334964752197
    4. 'if' → logprob: -4.214334964752197
    5. 'continue' → logprob: -4.839334964752197
    6. '<|end|>' → logprob: -4.964334964752197
    7. 'while' → logprob: -6.214334964752197
    8. '       ' → logprob: -6.464334964752197
    9. '```' → logprob: -6.714334964752197
    10. ' else' → logprob: -7.714334964752197

Token 1071: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.029125098139047623
    2. '   ' → logprob: -4.529125213623047
    3. 'elif' → logprob: -4.904125213623047
    4. 'while' → logprob: -5.154125213623047
    5. '```' → logprob: -6.154125213623047
    6. 'if' → logprob: -6.654125213623047
    7. 'continue' → logprob: -7.154125213623047
    8. 'time' → logprob: -8.904125213623047
    9. ' else' → logprob: -9.029125213623047
    10. '       ' → logprob: -9.529125213623047

Token 1072: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9290487170219421
    2. 'else' → logprob: -1.054048776626587
    3. '   ' → logprob: -1.679048776626587
    4. 'if' (adapté à ' if') → logprob: -3.804048776626587
    5. 'time' → logprob: -4.179048538208008
    6. '<|end|>' → logprob: -5.054048538208008
    7. 'elif' → logprob: -5.054048538208008
    8. 'continue' → logprob: -5.554048538208008
    9. 'for' → logprob: -5.554048538208008
    10. '```' → logprob: -5.929048538208008

Token 1073: ' len' (ID: 4631)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.8187001943588257
    2. ' target' → logprob: -1.8187001943588257
    3. ' now' → logprob: -2.0687003135681152
    4. 'now' → logprob: -2.3187003135681152
    5. 'route' → logprob: -2.6937003135681152
    6. 'len' → logprob: -3.1937003135681152
    7. ' route' → logprob: -4.068700313568115
    8. ' len' → logprob: -4.068700313568115
    9. 'time' → logprob: -4.443700313568115
    10. ' time' → logprob: -5.068700313568115

Token 1074: '(product' (ID: 31697)
  Prédit: '(product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.07507931441068649
    2. '(route' → logprob: -3.0750792026519775
    3. ' (' → logprob: -3.9500792026519775
    4. '(' → logprob: -5.575079441070557
    5. 'product' → logprob: -6.325079441070557
    6. ' product' → logprob: -7.075079441070557
    7. '(
' → logprob: -9.200078964233398
    8. ' >' → logprob: -9.450078964233398
    9. 'route' → logprob: -9.700078964233398
    10. '(order' → logprob: -10.200078964233398

Token 1075: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34299150109291077
    2. ' ==' → logprob: -2.092991590499878
    3. ')==' → logprob: -3.092991590499878
    4. '==' → logprob: -3.467991590499878
    5. ' !=' → logprob: -3.467991590499878
    6. ' >' → logprob: -3.967991590499878
    7. ')>' → logprob: -4.467991352081299
    8. '>' → logprob: -4.467991352081299
    9. ')!=' → logprob: -5.217991352081299
    10. '[' → logprob: -5.342991352081299

Token 1076: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.29713010787963867
    2. '==' → logprob: -1.6721301078796387
    3. '>' → logprob: -3.7971301078796387
    4. ' !=' → logprob: -3.7971301078796387
    5. ' >' → logprob: -3.9221301078796387
    6. '!=' → logprob: -5.672130107879639
    7. ' and' → logprob: -8.172130584716797
    8. ')' → logprob: -8.797130584716797
    9. ':' → logprob: -8.922130584716797
    10. '[' → logprob: -9.172130584716797

Token 1077: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061988186091184616
    2. ' ' → logprob: -2.811988115310669
    3. '=' → logprob: -12.06198787689209
    4. '```' → logprob: -12.06198787689209
    5. '1' → logprob: -12.81198787689209
    6. ' ' → logprob: -13.43698787689209
    7. '   ' → logprob: -13.68698787689209
    8. '>' → logprob: -14.06198787689209
    9. '<|end|>' → logprob: -14.43698787689209
    10. '  ' → logprob: -15.06198787689209

Token 1078: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026884564431384206
    2. ' ' → logprob: -8.250268936157227
    3. '```' → logprob: -12.375268936157227
    4. '=' → logprob: -13.500268936157227
    5. '1' → logprob: -13.750268936157227
    6. '   ' → logprob: -15.750268936157227
    7. '``' → logprob: -16.500268936157227
    8. ' ' → logprob: -16.875268936157227
    9. ' ' → logprob: -16.875268936157227
    10. '
' → logprob: -16.875268936157227

Token 1079: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5262026786804199
    2. ':
' → logprob: -1.02620267868042
    3. ' and' → logprob: -3.27620267868042
    4. '       ' → logprob: -4.40120267868042
    5. '   ' → logprob: -8.151203155517578
    6. ',' → logprob: -8.276203155517578
    7. 'and' → logprob: -9.776203155517578
    8. '):
' → logprob: -10.276203155517578
    9. '<|end|>' → logprob: -10.651203155517578
    10. ':

' → logprob: -10.776203155517578

Token 1080: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26231634616851807
    2. ':' → logprob: -1.637316346168518
    3. ':
' → logprob: -4.0123162269592285
    4. '   ' → logprob: -5.1373162269592285
    5. ' and' → logprob: -5.3873162269592285
    6. '<|end|>' → logprob: -6.1373162269592285
    7. 'target' → logprob: -6.5123162269592285
    8. '[target' → logprob: -6.8873162269592285
    9. '(target' → logprob: -7.6373162269592285
    10. ' target' → logprob: -7.7623162269592285

Token 1081: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' (adapté à ' target') → logprob: -0.004600415471941233
    2. 'if' → logprob: -5.504600524902344
    3. '   ' → logprob: -8.129600524902344
    4. 'distance' → logprob: -9.504600524902344
    5. 'goto' → logprob: -10.504600524902344
    6. ' target' → logprob: -10.504600524902344
    7. 'init' → logprob: -10.879600524902344
    8. 'get' → logprob: -11.129600524902344
    9. 'for' → logprob: -11.254600524902344
    10. '       ' → logprob: -11.879600524902344

Token 1082: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -2.7491250875755213e-05
    2. '_pos' → logprob: -11.250027656555176
    3. ' =' → logprob: -12.125027656555176
    4. '[' → logprob: -12.625027656555176
    5. '=' → logprob: -13.000027656555176
    6. '_Pos' → logprob: -13.375027656555176
    7. '```' → logprob: -14.000027656555176
    8. '_' → logprob: -15.250027656555176
    9. '=_' → logprob: -15.625027656555176
    10. ' Pos' → logprob: -16.12502670288086

Token 1083: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6369546055793762
    2. ' =' → logprob: -0.7619546055793762
    3. '==' → logprob: -6.0119547843933105
    4. '<|end|>' → logprob: -7.0119547843933105
    5. ' ==' → logprob: -7.1369547843933105
    6. '=get' → logprob: -9.386954307556152
    7. '   ' → logprob: -10.761954307556152
    8. '<|end|>' → logprob: -11.386954307556152
    9. ' ' → logprob: -11.886954307556152
    10. ')' → logprob: -12.136954307556152

Token 1084: ' get' (ID: 717)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.1851656585931778
    2. 'get' → logprob: -1.8101656436920166
    3. ' product' → logprob: -5.435165882110596
    4. ' get' → logprob: -6.935165882110596
    5. 'copy' → logprob: -9.685165405273438
    6. '   ' → logprob: -12.810165405273438
    7. '0' → logprob: -13.935165405273438
    8. 'init' → logprob: -14.185165405273438
    9. 'int' → logprob: -14.310165405273438
    10. 'target' → logprob: -14.435165405273438

Token 1085: 'Target' (ID: 7889)
  Prédit: 'Target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Target' → logprob: -0.003631431143730879
    2. 'Product' → logprob: -5.628631591796875
    3. 'Pos' → logprob: -10.753631591796875
    4. 'target' → logprob: -11.878631591796875
    5. 'get' → logprob: -13.628631591796875
    6. 'Position' → logprob: -13.753631591796875
    7. 'product' → logprob: -14.628631591796875
    8. '_target' → logprob: -15.878631591796875
    9. 'arget' → logprob: -16.878631591796875
    10. ' Target' → logprob: -17.253631591796875

Token 1086: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -2.816093228830141e-06
    2. '(target' → logprob: -13.00000286102295
    3. 'pos' → logprob: -14.87500286102295
    4. 'target' → logprob: -16.250001907348633
    5. 'Target' → logprob: -16.500001907348633
    6. '_pos' → logprob: -18.125001907348633
    7. '(Pos' → logprob: -18.875001907348633
    8. ' Pos' → logprob: -19.625001907348633
    9. '```' → logprob: -19.625001907348633
    10. '(' → logprob: -19.625001907348633

Token 1087: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.00017886889690998942
    2. 'now' → logprob: -9.000179290771484
    3. '[now' → logprob: -11.125179290771484
    4. '(' → logprob: -11.250179290771484
    5. '(target' → logprob: -11.500179290771484
    6. '(time' → logprob: -11.500179290771484
    7. ' now' → logprob: -12.875179290771484
    8. '(route' → logprob: -13.625179290771484
    9. 'Now' → logprob: -14.500179290771484
    10. '   ' → logprob: -14.625179290771484

Token 1088: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.0789632648229599
    2. '_pos' → logprob: -2.578963279724121
    3. '[' → logprob: -10.953963279724121
    4. '_Pos' → logprob: -10.953963279724121
    5. ' Pos' → logprob: -11.078963279724121
    6. 'pos' → logprob: -11.828963279724121
    7. '```' → logprob: -12.328963279724121
    8. '_position' → logprob: -12.953963279724121
    9. '   ' → logprob: -12.953963279724121
    10. '_positions' → logprob: -13.453963279724121

Token 1089: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034809779026545584
    2. ')
' → logprob: -8.500348091125488
    3. ')+' → logprob: -10.000348091125488
    4. '<|end|>' → logprob: -10.500348091125488
    5. '   ' → logprob: -10.625348091125488
    6. '())' → logprob: -10.750348091125488
    7. '+' → logprob: -12.125348091125488
    8. ' )' → logprob: -12.125348091125488
    9. '<|end|>' → logprob: -13.250348091125488
    10. '       ' → logprob: -13.625348091125488

Token 1090: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20225681364536285
    2. 'if' → logprob: -2.327256917953491
    3. '       ' → logprob: -3.202256917953491
    4. '<|end|>' → logprob: -4.077256679534912
    5. ')' → logprob: -4.452256679534912
    6. 'else' → logprob: -5.702256679534912
    7. '```' → logprob: -5.702256679534912
    8. 'elif' → logprob: -6.077256679534912
    9. ' if' → logprob: -6.202256679534912
    10. '#' → logprob: -6.952256679534912

Token 1091: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10531358420848846
    2. 'distance' → logprob: -2.730313539505005
    3. '       ' → logprob: -4.105313777923584
    4. 'goto' → logprob: -4.855313777923584
    5. 'route' → logprob: -5.730313777923584
    6. 'get' → logprob: -5.855313777923584
    7. 'init' → logprob: -6.355313777923584
    8. 'dist' → logprob: -7.480313777923584
    9. ' if' → logprob: -7.605313777923584
    10. '   ' → logprob: -7.730313777923584

Token 1092: ' len' (ID: 4631)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.04054323583841324
    2. ' target' → logprob: -3.7905433177948
    3. 'route' → logprob: -4.165543079376221
    4. 'now' → logprob: -7.040543079376221
    5. ' route' → logprob: -8.165543556213379
    6. ' now' → logprob: -8.415543556213379
    7. 'time' → logprob: -9.415543556213379
    8. 'len' → logprob: -9.540543556213379
    9. 'product' → logprob: -10.540543556213379
    10. 'not' → logprob: -10.915543556213379

Token 1093: '(route' (ID: 64883)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.011597801931202412
    2. '(route' → logprob: -4.636597633361816
    3. 'product' → logprob: -6.636597633361816
    4. '(target' → logprob: -8.011597633361816
    5. 'route' → logprob: -9.636597633361816
    6. ' (' → logprob: -9.761597633361816
    7. ' product' → logprob: -9.761597633361816
    8. '(' → logprob: -11.636597633361816
    9. 'target' → logprob: -12.261597633361816
    10. '(products' → logprob: -14.511597633361816

Token 1094: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05379127338528633
    2. ')==' → logprob: -3.4287912845611572
    3. ')>' → logprob: -4.428791046142578
    4. '[' → logprob: -4.928791046142578
    5. ')<' → logprob: -8.553791046142578
    6. '>' → logprob: -8.678791046142578
    7. '==' → logprob: -8.803791046142578
    8. ')!=' → logprob: -9.178791046142578
    9. ' ==' → logprob: -10.053791046142578
    10. '```' → logprob: -10.553791046142578

Token 1095: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3256329298019409
    2. '==' → logprob: -1.325632929801941
    3. '>' → logprob: -5.2006330490112305
    4. ' >' → logprob: -5.2006330490112305
    5. ' <' → logprob: -7.2006330490112305
    6. ' !=' → logprob: -8.20063304901123
    7. '<' → logprob: -9.70063304901123
    8. '!=' → logprob: -9.70063304901123
    9. '()==' → logprob: -10.20063304901123
    10. ')' → logprob: -10.70063304901123

Token 1096: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -15.00001335144043
    4. '```' → logprob: -17.00001335144043
    5. '   ' → logprob: -18.37501335144043
    6. '=' → logprob: -18.50001335144043
    7. '۰' → logprob: -19.00001335144043
    8. ')' → logprob: -19.87501335144043
    9. '<|end|>' → logprob: -20.37501335144043
    10. '０' → logprob: -20.50001335144043

Token 1097: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. '1' → logprob: -14.87501049041748
    4. '```' → logprob: -16.250011444091797
    5. '   ' → logprob: -17.375011444091797
    6. '=' → logprob: -18.625011444091797
    7. '﻿' → logprob: -19.000011444091797
    8. '０' → logprob: -19.375011444091797
    9. '۰' → logprob: -19.375011444091797
    10. ')' → logprob: -19.500011444091797

Token 1098: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20655463635921478
    2. ':
' → logprob: -2.331554651260376
    3. ' and' → logprob: -2.956554651260376
    4. '       ' → logprob: -4.081554412841797
    5. ' or' → logprob: -4.456554412841797
    6. '           ' → logprob: -5.831554412841797
    7. ',' → logprob: -6.206554412841797
    8. '<|end|>' → logprob: -6.206554412841797
    9. '   ' → logprob: -7.581554412841797
    10. 'and' → logprob: -7.831554412841797

Token 1099: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3886222839355469
    2. '       ' → logprob: -2.013622283935547
    3. ':
' → logprob: -2.138622283935547
    4. '<|end|>' → logprob: -3.513622283935547
    5. ' and' → logprob: -4.013622283935547
    6. ' or' → logprob: -4.513622283935547
    7. '():
' → logprob: -6.013622283935547
    8. '.' → logprob: -6.513622283935547
    9. '   ' → logprob: -6.888622283935547
    10. '():' → logprob: -7.013622283935547

Token 1100: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' (adapté à ' get') → logprob: -0.0378921739757061
    2. 'init' → logprob: -3.9128921031951904
    3. ' get' → logprob: -4.2878923416137695
    4. 'distance' → logprob: -6.1628923416137695
    5. 'target' → logprob: -7.9128923416137695
    6. '           ' → logprob: -8.03789234161377
    7. '       ' → logprob: -8.78789234161377
    8. '```' → logprob: -8.91289234161377
    9. '   ' → logprob: -9.16289234161377
    10. ' init' → logprob: -9.28789234161377

Token 1101: 'Distance' (ID: 17525)
  Prédit: 'Distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Distance' → logprob: -0.0019430378451943398
    2. 'Target' → logprob: -6.251943111419678
    3. 'Route' → logprob: -11.62694263458252
    4. 'Next' → logprob: -13.00194263458252
    5. 'Destination' → logprob: -13.62694263458252
    6. 'distance' → logprob: -14.00194263458252
    7. '_distance' → logprob: -14.00194263458252
    8. 'target' → logprob: -16.001943588256836
    9. ' Distance' → logprob: -17.251943588256836
    10. ' distance' → logprob: -17.376943588256836

Token 1102: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.008908223360776901
    2. 'now' → logprob: -4.758908271789551
    3. '(target' → logprob: -8.50890827178955
    4. '(' → logprob: -10.50890827178955
    5. ' now' → logprob: -10.63390827178955
    6. 'target' → logprob: -11.00890827178955
    7. '[now' → logprob: -11.13390827178955
    8. '   ' → logprob: -13.00890827178955
    9. '	now' → logprob: -13.63390827178955
    10. '```' → logprob: -14.13390827178955

Token 1103: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.12994571030139923
    2. 'now' → logprob: -3.004945755004883
    3. 'target' → logprob: -3.504945755004883
    4. '(target' → logprob: -3.629945755004883
    5. '(now' → logprob: -4.629945755004883
    6. '(' → logprob: -6.629945755004883
    7. ' now' → logprob: -6.629945755004883
    8. '[now' → logprob: -7.004945755004883
    9. '   ' → logprob: -7.629945755004883
    10. '[target' → logprob: -7.879945755004883

Token 1104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042543161544017494
    2. ',target' → logprob: -7.875425338745117
    3. 'target' → logprob: -10.750425338745117
    4. ' ,' → logprob: -11.625425338745117
    5. ',
' → logprob: -12.250425338745117
    6. '           ' → logprob: -12.375425338745117
    7. '(target' → logprob: -12.625425338745117
    8. ' target' → logprob: -14.000425338745117
    9. ')' → logprob: -14.750425338745117
    10. '[target' → logprob: -15.250425338745117

Token 1105: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.00673135370016098
    2. ' target' → logprob: -5.1317315101623535
    3. 'V' → logprob: -7.2567315101623535
    4. 'product' → logprob: -9.631731033325195
    5. ' V' → logprob: -10.881731033325195
    6. '0' → logprob: -12.256731033325195
    7. '(target' → logprob: -13.006731033325195
    8. ' product' → logprob: -13.506731033325195
    9. 'now' → logprob: -13.756731033325195
    10. '   ' → logprob: -14.381731033325195

Token 1106: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -4.656383680412546e-05
    2. '[' → logprob: -10.000046730041504
    3. ')' → logprob: -14.375046730041504
    4. '```' → logprob: -15.250046730041504
    5. '_pos' → logprob: -17.000045776367188
    6. '_Pos' → logprob: -17.250045776367188
    7. ' Pos' → logprob: -17.625045776367188
    8. 'Positions' → logprob: -17.625045776367188
    9. '+' → logprob: -17.625045776367188
    10. '   ' → logprob: -17.625045776367188

Token 1107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.615255839889869e-05
    2. ')
' → logprob: -9.375096321105957
    3. ' )' → logprob: -12.125096321105957
    4. '   ' → logprob: -13.250096321105957
    5. '),' → logprob: -14.000096321105957
    6. ')[' → logprob: -14.750096321105957
    7. '))' → logprob: -14.750096321105957
    8. ')return' → logprob: -15.250096321105957
    9. ')#' → logprob: -15.250096321105957
    10. '[' → logprob: -15.375096321105957

Token 1108: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3191564679145813
    2. '       ' → logprob: -1.9441564083099365
    3. '   ' → logprob: -3.0691564083099365
    4. '[' → logprob: -3.3191564083099365
    5. '<|end|>' → logprob: -3.8191564083099365
    6. ' route' → logprob: -5.444156646728516
    7. '.' → logprob: -5.569156646728516
    8. '(route' → logprob: -5.694156646728516
    9. '           ' → logprob: -5.819156646728516
    10. 'route' → logprob: -6.069156646728516

Token 1109: ' goto' (ID: 17448)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5643211603164673
    2. '   ' → logprob: -1.4393211603164673
    3. 'print' → logprob: -2.9393210411071777
    4. 'route' → logprob: -3.1893210411071777
    5. ')' → logprob: -3.5643210411071777
    6. '<|end|>' → logprob: -3.8143210411071777
    7. 'target' → logprob: -4.439321041107178
    8. '[' → logprob: -5.189321041107178
    9. ' route' → logprob: -5.189321041107178
    10. '.' → logprob: -5.189321041107178

Token 1110: 'Vertex' (ID: 14196)
  Prédit: 'Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.010745474137365818
    2. 'route' → logprob: -4.635745525360107
    3. 'target' → logprob: -7.010745525360107
    4. 'vertex' → logprob: -10.13574504852295
    5. ' route' → logprob: -11.26074504852295
    6. ' Vertex' → logprob: -11.51074504852295
    7. '(route' → logprob: -11.76074504852295
    8. '_vertex' → logprob: -12.51074504852295
    9. ' ' → logprob: -13.38574504852295
    10. '
' → logprob: -13.38574504852295

Token 1111: '(now' (ID: 65064)
  Prédit: '(route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(route' → logprob: -0.004331490956246853
    2. '(' → logprob: -5.504331588745117
    3. '(target' → logprob: -8.754331588745117
    4. '(now' → logprob: -9.879331588745117
    5. 'route' → logprob: -10.504331588745117
    6. '(
' → logprob: -11.379331588745117
    7. '(Route' → logprob: -13.504331588745117
    8. ' (' → logprob: -13.629331588745117
    9. '()' → logprob: -14.129331588745117
    10. '(next' → logprob: -15.004331588745117

Token 1112: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.01117655634880066
    2. '[' → logprob: -4.511176586151123
    3. '_pos' → logprob: -9.261176109313965
    4. '```' → logprob: -11.636176109313965
    5. ' Pos' → logprob: -11.761176109313965
    6. '][' → logprob: -12.761176109313965
    7. '_Pos' → logprob: -13.011176109313965
    8. 'pos' → logprob: -13.136176109313965
    9. '   ' → logprob: -13.761176109313965
    10. '‌' → logprob: -13.886176109313965

Token 1113: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.065608562901616e-05
    2. ')
' → logprob: -9.625081062316895
    3. '[' → logprob: -11.750081062316895
    4. ' )' → logprob: -12.750081062316895
    5. '   ' → logprob: -13.750081062316895
    6. '<|end|>' → logprob: -14.125081062316895
    7. '))' → logprob: -15.250081062316895
    8. ')`' → logprob: -15.500081062316895
    9. ',' → logprob: -15.875081062316895
    10. '),' → logprob: -16.125080108642578

Token 1114: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.09348858892917633
    2. 'now' → logprob: -2.5934886932373047
    3. ' target' → logprob: -4.593488693237305
    4. ' now' → logprob: -5.968488693237305
    5. '0' → logprob: -7.093488693237305
    6. 'route' → logprob: -7.218488693237305
    7. '-' → logprob: -9.718488693237305
    8. 'None' → logprob: -10.218488693237305
    9. ')' → logprob: -10.468488693237305
    10. '	target' → logprob: -10.718488693237305

Token 1115: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.0192754827439785
    2. ')' → logprob: -4.269275665283203
    3. '[' → logprob: -5.894275665283203
    4. '+' → logprob: -6.394275665283203
    5. '_pos' → logprob: -8.269275665283203
    6. '```' → logprob: -8.894275665283203
    7. '[target' → logprob: -9.894275665283203
    8. ']' → logprob: -10.269275665283203
    9. ')]' → logprob: -10.519275665283203
    10. '_Pos' → logprob: -10.644275665283203

Token 1116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. ')
' → logprob: -11.250014305114746
    3. ' )' → logprob: -14.500014305114746
    4. '))' → logprob: -16.37501335144043
    5. ')return' → logprob: -16.37501335144043
    6. '   ' → logprob: -16.75001335144043
    7. '<|end|>' → logprob: -16.87501335144043
    8. ')#' → logprob: -17.00001335144043
    9. ')}' → logprob: -17.00001335144043
    10. ')}}' → logprob: -17.50001335144043

Token 1117: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4715549647808075
    2. '<|end|>' → logprob: -1.3465549945831299
    3. '```' → logprob: -2.84655499458313
    4. '   ' → logprob: -3.84655499458313
    5. '+' → logprob: -4.471554756164551
    6. '    ' → logprob: -5.721554756164551
    7. '
' → logprob: -5.846554756164551
    8. '       ' → logprob: -6.096554756164551
    9. '#' → logprob: -6.346554756164551
    10. '`' → logprob: -6.471554756164551

Token 1118: ' time' (ID: 1058)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1119: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.0008118899422697723
    2. 'step' → logprob: -7.25081205368042
    3. 'Step' → logprob: -9.500811576843262
    4. '+=' → logprob: -11.750811576843262
    5. '	step' → logprob: -11.875811576843262
    6. ' +=' → logprob: -12.500811576843262
    7. '_STEP' → logprob: -12.625811576843262
    8. '   ' → logprob: -13.750811576843262
    9. '_' → logprob: -13.875811576843262
    10. '_steps' → logprob: -13.875811576843262

Token 1120: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.41159114241600037
    2. '+=' → logprob: -1.4115911722183228
    3. ' +=' → logprob: -2.411591053009033
    4. '<|end|>' → logprob: -5.911591053009033
    5. ' +' → logprob: -7.036591053009033
    6. '=' → logprob: -8.161591529846191
    7. '++' → logprob: -10.536591529846191
    8. ')' → logprob: -11.036591529846191
    9. '```' → logprob: -11.286591529846191
    10. '+
' → logprob: -11.536591529846191

Token 1121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010151672904612496
    2. ' ' → logprob: -9.250101089477539
    3. '0' → logprob: -13.000101089477539
    4. '   ' → logprob: -13.500101089477539
    5. 'route' → logprob: -13.750101089477539
    6. '```' → logprob: -15.000101089477539
    7. 'total' → logprob: -16.68760108947754
    8. '  ' → logprob: -17.00010108947754
    9. '<|end|>' → logprob: -17.12510108947754
    10. ' route' → logprob: -17.31260108947754

Token 1122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001149867384810932
    2. ' ' → logprob: -9.375115394592285
    3. '0' → logprob: -11.125115394592285
    4. 'route' → logprob: -11.625115394592285
    5. 'total' → logprob: -12.375115394592285
    6. '```' → logprob: -14.250115394592285
    7. '   ' → logprob: -14.500115394592285
    8. '-' → logprob: -16.06261444091797
    9. '
' → logprob: -16.06261444091797
    10. 'len' → logprob: -16.75011444091797

Token 1123: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1124: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1125: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1126: ' len' (ID: 4631)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3403122127056122
    2. 'total' → logprob: -1.3403122425079346
    3. ' now' → logprob: -4.2153120040893555
    4. ' time' → logprob: -5.2153120040893555
    5. 'time' → logprob: -5.4653120040893555
    6. 'now' → logprob: -6.9653120040893555
    7. ' not' → logprob: -7.9653120040893555
    8. ' len' → logprob: -8.215312004089355
    9. 'route' → logprob: -8.590312004089355
    10. ' route' → logprob: -8.715312004089355

Token 1127: '(product' (ID: 31697)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.2022407352924347
    2. 'product' → logprob: -2.0772407054901123
    3. ' route' → logprob: -3.5772407054901123
    4. 'route' → logprob: -3.7022407054901123
    5. '(product' → logprob: -5.827240943908691
    6. '(route' → logprob: -6.327240943908691
    7. ' time' → logprob: -8.452240943908691
    8. 'time' → logprob: -9.077240943908691
    9. ' ' → logprob: -10.452240943908691
    10. ' not' → logprob: -10.702240943908691

Token 1128: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5426990389823914
    2. ' !=' → logprob: -1.0426990985870361
    3. '==' → logprob: -3.167699098587036
    4. '!=' → logprob: -4.417698860168457
    5. '   ' → logprob: -5.542698860168457
    6. ')' → logprob: -5.667698860168457
    7. ' >' → logprob: -5.667698860168457
    8. ' <' → logprob: -7.542698860168457
    9. '>' → logprob: -7.667698860168457
    10. ')==' → logprob: -8.792698860168457

Token 1129: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.19640035927295685
    2. '==' → logprob: -1.8214004039764404
    3. ' !=' → logprob: -4.446400165557861
    4. '!=' → logprob: -6.071400165557861
    5. ' >' → logprob: -6.446400165557861
    6. '>' → logprob: -7.071400165557861
    7. '   ' → logprob: -10.94640064239502
    8. ':' → logprob: -11.19640064239502
    9. ' <' → logprob: -11.94640064239502
    10. ' <=' → logprob: -12.07140064239502

Token 1130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02976958453655243
    2. ' ' → logprob: -3.5297696590423584
    3. '   ' → logprob: -12.029769897460938
    4. '=' → logprob: -12.779769897460938
    5. '1' → logprob: -12.779769897460938
    6. ' ' → logprob: -12.904769897460938
    7. '==' → logprob: -13.404769897460938
    8. '	' → logprob: -14.029769897460938
    9. ' =' → logprob: -14.654769897460938
    10. '  ' → logprob: -14.779769897460938

Token 1131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01107341144233942
    2. ' ' → logprob: -4.511073589324951
    3. '   ' → logprob: -11.261073112487793
    4. '=' → logprob: -12.511073112487793
    5. '	' → logprob: -13.136073112487793
    6. '1' → logprob: -13.136073112487793
    7. '  ' → logprob: -13.261073112487793
    8. '    ' → logprob: -14.136073112487793
    9. ' ' → logprob: -14.261073112487793
    10. '     ' → logprob: -14.511073112487793

Token 1132: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9321374893188477
    2. ':
' → logprob: -0.9321374893188477
    3. '       ' → logprob: -1.5571374893188477
    4. ' and' → logprob: -7.182137489318848
    5. '   ' → logprob: -7.557137489318848
    6. '<|end|>' → logprob: -8.182137489318848
    7. ',' → logprob: -9.932137489318848
    8. '==' → logprob: -10.307137489318848
    9. ' or' → logprob: -10.432137489318848
    10. 'and' → logprob: -10.432137489318848

Token 1133: ' now' (ID: 1954)
  Prédit: ' now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -1.3592382669448853
    2. 'now' → logprob: -1.6092382669448853
    3. 'time' → logprob: -1.8592382669448853
    4. ' time' → logprob: -2.1092381477355957
    5. 'total' → logprob: -2.1092381477355957
    6. ' total' → logprob: -2.2342381477355957
    7. 'target' → logprob: -4.109238147735596
    8. ' target' → logprob: -4.984238147735596
    9. 'route' → logprob: -5.109238147735596
    10. ' route' → logprob: -6.109238147735596

Token 1134: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -6.704273118884885e-07
    2. '==' → logprob: -15.000000953674316
    3. '_pos' → logprob: -15.875000953674316
    4. ' Pos' → logprob: -16.375
    5. 'pos' → logprob: -16.5
    6. 'P' → logprob: -17.125
    7. ' ==' → logprob: -17.25
    8. '```' → logprob: -17.625
    9. '_Pos' → logprob: -18.625
    10. '!=' → logprob: -18.75

Token 1135: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6342742443084717
    2. ' ==' → logprob: -0.7592742443084717
    3. ' !=' → logprob: -6.884274482727051
    4. '!=' → logprob: -7.384274482727051
    5. '==-' → logprob: -11.38427448272705
    6. ' ' → logprob: -11.88427448272705
    7. '	' → logprob: -12.75927448272705
    8. '==
' → logprob: -12.88427448272705
    9. ' ' → logprob: -13.88427448272705
    10. '   ' → logprob: -14.00927448272705

Token 1136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08913924545049667
    2. '-' → logprob: -2.589139223098755
    3. ' ' → logprob: -4.714139461517334
    4. ' -' → logprob: -7.089139461517334
    5. 'V' → logprob: -8.464138984680176
    6. 'target' → logprob: -9.964138984680176
    7. '=' → logprob: -10.089138984680176
    8. '-V' → logprob: -10.464138984680176
    9. ' V' → logprob: -10.964138984680176
    10. '   ' → logprob: -10.964138984680176

Token 1137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11344348639249802
    2. '-' → logprob: -2.238443374633789
    3. ' ' → logprob: -8.113443374633789
    4. 'V' → logprob: -8.738443374633789
    5. ' -' → logprob: -9.238443374633789
    6. '-V' → logprob: -10.488443374633789
    7. 'target' → logprob: -11.113443374633789
    8. '=' → logprob: -12.363443374633789
    9. '   ' → logprob: -12.738443374633789
    10. '(-' → logprob: -13.363443374633789

Token 1138: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4301607608795166
    2. ':' → logprob: -1.0551607608795166
    3. '       ' → logprob: -7.0551605224609375
    4. ' and' → logprob: -8.055160522460938
    5. '   ' → logprob: -8.430160522460938
    6. 'and' → logprob: -10.930160522460938
    7. '==' → logprob: -11.555160522460938
    8. '):
' → logprob: -11.805160522460938
    9. ':

' → logprob: -12.055160522460938
    10. ' or' → logprob: -12.430160522460938

Token 1139: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.09111750125885
    2. '       ' → logprob: -1.21611750125885
    3. ':' → logprob: -1.96611750125885
    4. '```' → logprob: -1.96611750125885
    5. '   ' → logprob: -2.8411173820495605
    6. '<|end|>' → logprob: -3.8411173820495605
    7. ' and' → logprob: -6.5911173820495605
    8. '):
' → logprob: -6.7161173820495605
    9. '``' → logprob: -6.7161173820495605
    10. '
' → logprob: -6.9661173820495605

Token 1140: ' if' (ID: 538)
  Prédit: 'goto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'goto' → logprob: -1.0740203857421875
    2. ' now' → logprob: -1.3240203857421875
    3. 'now' → logprob: -1.5740203857421875
    4. ' goto' → logprob: -2.6990203857421875
    5. '       ' → logprob: -3.0740203857421875
    6. '```' → logprob: -3.1990203857421875
    7. 'target' → logprob: -4.8240203857421875
    8. 'print' → logprob: -4.9490203857421875
    9. '   ' → logprob: -5.5740203857421875
    10. 'get' → logprob: -5.9490203857421875

Token 1141: ' len' (ID: 4631)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.39029163122177124
    2. ' now' → logprob: -1.140291690826416
    3. 'time' → logprob: -6.515291690826416
    4. 'target' → logprob: -7.515291690826416
    5. 'route' → logprob: -7.515291690826416
    6. ' time' → logprob: -7.890291690826416
    7. 'total' → logprob: -9.015291213989258
    8. ' route' → logprob: -9.265291213989258
    9. ' target' → logprob: -9.890291213989258
    10. '(now' → logprob: -10.015291213989258

Token 1142: '(route' (ID: 64883)
  Prédit: '(route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(route' → logprob: -0.21141557395458221
    2. '(product' → logprob: -1.7114155292510986
    3. 'route' → logprob: -4.836415767669678
    4. 'product' → logprob: -6.211415767669678
    5. '(order' → logprob: -12.21141529083252
    6. '(' → logprob: -13.96141529083252
    7. '(target' → logprob: -14.21141529083252
    8. ' product' → logprob: -14.33641529083252
    9. '(path' → logprob: -14.58641529083252
    10. ' route' → logprob: -14.58641529083252

Token 1143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00642142491415143
    2. ')==' → logprob: -5.3814215660095215
    3. ')>' → logprob: -6.3814215660095215
    4. ')!=' → logprob: -10.131421089172363
    5. '>' → logprob: -10.381421089172363
    6. '==' → logprob: -11.006421089172363
    7. '[' → logprob: -11.881421089172363
    8. ' ==' → logprob: -12.881421089172363
    9. ' )' → logprob: -12.881421089172363
    10. '）' → logprob: -13.381421089172363

Token 1144: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20423471927642822
    2. ' ==' → logprob: -1.7042347192764282
    3. '()==' → logprob: -6.454234600067139
    4. '>' → logprob: -7.579234600067139
    5. ')==' → logprob: -7.704234600067139
    6. '!=' → logprob: -9.579235076904297
    7. '()' → logprob: -9.829235076904297
    8. ')' → logprob: -9.829235076904297
    9. ' >' → logprob: -9.954235076904297
    10. ' !=' → logprob: -10.579235076904297

Token 1145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010235115041723475
    2. ' ' → logprob: -9.250102043151855
    3. '>' → logprob: -13.125102043151855
    4. '   ' → logprob: -13.125102043151855
    5. '1' → logprob: -13.250102043151855
    6. '```' → logprob: -15.250102043151855
    7. '=' → logprob: -16.750102996826172
    8. '       ' → logprob: -17.000102996826172
    9. '  ' → logprob: -17.750102996826172
    10. '           ' → logprob: -18.000102996826172

Token 1146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.8497312895488e-05
    2. ' ' → logprob: -9.625068664550781
    3. '   ' → logprob: -13.125068664550781
    4. '1' → logprob: -15.875068664550781
    5. '```' → logprob: -16.50006866455078
    6. '=' → logprob: -17.00006866455078
    7. '       ' → logprob: -17.12506866455078
    8. '  ' → logprob: -17.37506866455078
    9. '    ' → logprob: -18.00006866455078
    10. 'route' → logprob: -18.00006866455078

Token 1147: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.280076801776886
    2. '           ' → logprob: -2.030076742172241
    3. '       ' → logprob: -2.405076742172241
    4. ' and' → logprob: -4.28007698059082
    5. ':' → logprob: -5.28007698059082
    6. 'and' → logprob: -6.28007698059082
    7. 'get' → logprob: -6.90507698059082
    8. '   ' → logprob: -8.65507698059082
    9. '):
' → logprob: -8.78007698059082
    10. ' or' → logprob: -9.03007698059082

Token 1148: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39197927713394165
    2. 'get' → logprob: -1.2669792175292969
    3. '           ' → logprob: -3.266979217529297
    4. '   ' → logprob: -5.891979217529297
    5. ' get' → logprob: -7.141979217529297
    6. '```' → logprob: -7.266979217529297
    7. ':
' → logprob: -9.266979217529297
    8. '	get' → logprob: -10.016979217529297
    9. '(get' → logprob: -11.266979217529297
    10. ':' → logprob: -11.391979217529297

Token 1149: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' (adapté à ' get') → logprob: -0.0005552975926548243
    2. 'target' → logprob: -7.875555515289307
    3. '   ' → logprob: -9.500555038452148
    4. 'distance' → logprob: -10.125555038452148
    5. '       ' → logprob: -10.875555038452148
    6. 'now' → logprob: -11.000555038452148
    7. 'time' → logprob: -11.875555038452148
    8. ' get' → logprob: -12.250555038452148
    9. 'goto' → logprob: -12.375555038452148
    10. '           ' → logprob: -12.750555038452148

Token 1150: 'Distance' (ID: 17525)
  Prédit: 'Distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Distance' → logprob: -1.1875571544806007e-05
    2. 'Target' → logprob: -11.625011444091797
    3. 'distance' → logprob: -13.375011444091797
    4. '_distance' → logprob: -13.750011444091797
    5. 'Destination' → logprob: -16.000011444091797
    6. ' Distance' → logprob: -16.750011444091797
    7. 'Product' → logprob: -16.875011444091797
    8. 'Route' → logprob: -17.375011444091797
    9. 'target' → logprob: -17.375011444091797
    10. 'Position' → logprob: -18.125011444091797

Token 1151: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.028537768870592117
    2. '(' → logprob: -3.7785377502441406
    3. 'now' → logprob: -5.278537750244141
    4. '0' → logprob: -8.77853775024414
    5. '```' → logprob: -11.65353775024414
    6. '[now' → logprob: -12.02853775024414
    7. ' now' → logprob: -12.15353775024414
    8. 'Now' → logprob: -13.77853775024414
    9. '(last' → logprob: -14.40353775024414
    10. '_now' → logprob: -14.52853775024414

Token 1152: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.0030064657330513
    2. '0' → logprob: -6.128006458282471
    3. '(' → logprob: -7.503006458282471
    4. '[' → logprob: -9.753006935119629
    5. ',' → logprob: -10.003006935119629
    6. '_pos' → logprob: -10.253006935119629
    7. '```' → logprob: -10.503006935119629
    8. 'pos' → logprob: -10.628006935119629
    9. 'now' → logprob: -11.003006935119629
    10. ' Pos' → logprob: -11.253006935119629

Token 1153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.621933451038785e-05
    2. '0' → logprob: -10.500056266784668
    3. ' ,' → logprob: -10.500056266784668
    4. '(),' → logprob: -15.000056266784668
    5. '(' → logprob: -15.250056266784668
    6. '```' → logprob: -15.625056266784668
    7. ',
' → logprob: -16.37505531311035
    8. ')' → logprob: -16.62505531311035
    9. '),' → logprob: -16.62505531311035
    10. 'now' → logprob: -16.75005531311035

Token 1154: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024858469259925187
    2. 'V' → logprob: -8.375248908996582
    3. ' ' → logprob: -11.750248908996582
    4. '(V' → logprob: -12.250248908996582
    5. 'now' → logprob: -13.125248908996582
    6. '(' → logprob: -13.125248908996582
    7. ' V' → logprob: -15.125248908996582
    8. '```' → logprob: -15.250248908996582
    9. '1' → logprob: -15.875248908996582
    10. ')' → logprob: -16.625247955322266

Token 1155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001415618316968903
    2. 'V' → logprob: -9.125141143798828
    3. '(V' → logprob: -11.250141143798828
    4. 'F' → logprob: -11.875141143798828
    5. '(' → logprob: -11.875141143798828
    6. ' ' → logprob: -12.500141143798828
    7. 'now' → logprob: -14.250141143798828
    8. '(F' → logprob: -15.000141143798828
    9. '-' → logprob: -16.000141143798828
    10. '```' → logprob: -16.562641143798828

Token 1156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038339123129844666
    2. ')
' → logprob: -3.288339138031006
    3. '       ' → logprob: -8.163338661193848
    4. '   ' → logprob: -12.288338661193848
    5. ')
' → logprob: -12.413338661193848
    6. ')return' → logprob: -13.538338661193848
    7. '           ' → logprob: -14.413338661193848
    8. ' )' → logprob: -15.288338661193848
    9. ')#' → logprob: -15.413338661193848
    10. '```' → logprob: -15.413338661193848

Token 1157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019050708040595055
    2. ')' → logprob: -4.769050598144531
    3. 'goto' → logprob: -5.019050598144531
    4. '<|end|>' → logprob: -6.769050598144531
    5. '           ' → logprob: -6.894050598144531
    6. '   ' → logprob: -7.019050598144531
    7. '```' → logprob: -8.019050598144531
    8. ' goto' → logprob: -8.769050598144531
    9. '[' → logprob: -10.269050598144531
    10. '	goto' → logprob: -10.769050598144531

Token 1158: ' goto' (ID: 17448)
  Prédit: 'goto'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goto' (adapté à ' goto') → logprob: -0.0002111694193445146
    2. '```' → logprob: -9.375210762023926
    3. '   ' → logprob: -9.750210762023926
    4. ' goto' → logprob: -10.125210762023926
    5. 'got' → logprob: -11.375210762023926
    6. '       ' → logprob: -12.000210762023926
    7. '	goto' → logprob: -12.000210762023926
    8. '.goto' → logprob: -13.500210762023926
    9. '``' → logprob: -13.625210762023926
    10. 'Goto' → logprob: -14.375210762023926

Token 1159: 'Vertex' (ID: 14196)
  Prédit: 'Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -4.008129963040119e-06
    2. 'vertex' → logprob: -12.500003814697266
    3. '_vertex' → logprob: -15.875003814697266
    4. 'Vertices' → logprob: -17.125003814697266
    5. ' Vertex' → logprob: -17.375003814697266
    6. '0' → logprob: -17.625003814697266
    7. 'Vert' → logprob: -17.750003814697266
    8. 'now' → logprob: -18.000003814697266
    9. 'Pos' → logprob: -18.125003814697266
    10. '```' → logprob: -18.125003814697266

Token 1160: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.010778502561151981
    2. '(' → logprob: -4.885778427124023
    3. 'now' → logprob: -5.760778427124023
    4. '()' → logprob: -11.510778427124023
    5. '[now' → logprob: -12.510778427124023
    6. '0' → logprob: -13.010778427124023
    7. ' now' → logprob: -13.760778427124023
    8. '	now' → logprob: -14.885778427124023
    9. '```' → logprob: -15.135778427124023
    10. '(current' → logprob: -15.260778427124023

Token 1161: 'Pos' (ID: 3501)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46198898553848267
    2. '0' → logprob: -1.086988925933838
    3. 'now' → logprob: -4.086988925933838
    4. 'Pos' → logprob: -4.586988925933838
    5. '(' → logprob: -5.711988925933838
    6. '```' → logprob: -6.461988925933838
    7. '[now' → logprob: -8.336989402770996
    8. '[' → logprob: -8.586989402770996
    9. 'Now' → logprob: -8.961989402770996
    10. '(now' → logprob: -9.336989402770996

Token 1162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.729906196298543e-06
    2. ' ,' → logprob: -11.625009536743164
    3. '0' → logprob: -14.625009536743164
    4. ')' → logprob: -15.875009536743164
    5. ',
' → logprob: -17.375009536743164
    6. '<|end|>' → logprob: -17.375009536743164
    7. '‌,' → logprob: -18.375009536743164
    8. '   ' → logprob: -18.875009536743164
    9. '),' → logprob: -19.000009536743164
    10. '```' → logprob: -19.125009536743164

Token 1163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. 'now' → logprob: -16.750051498413086
    4. '```' → logprob: -17.125051498413086
    5. '   ' → logprob: -17.875051498413086
    6. '
' → logprob: -18.125051498413086
    7. '1' → logprob: -18.625051498413086
    8. ' ' → logprob: -18.625051498413086
    9. '`' → logprob: -19.125051498413086
    10. ')' → logprob: -19.562551498413086

Token 1164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. 'target' → logprob: -18.125
    4. '۰' → logprob: -19.375
    5. 'route' → logprob: -20.125
    6. '```' → logprob: -20.5
    7. 'now' → logprob: -20.75
    8. '-' → logprob: -20.75
    9. '1' → logprob: -21.0
    10. '０' → logprob: -21.1875

Token 1165: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020783171930816025
    2. ')
' → logprob: -8.500207901000977
    3. '   ' → logprob: -12.625207901000977
    4. ' )' → logprob: -14.750207901000977
    5. '<|end|>' → logprob: -15.625207901000977
    6. '       ' → logprob: -16.000207901000977
    7. ')#' → logprob: -16.500207901000977
    8. ')

' → logprob: -16.625207901000977
    9. ')return' → logprob: -16.875207901000977
    10. ')
' → logprob: -17.000207901000977

Token 1166: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09782590717077255
    2. '<|end|>' → logprob: -2.4728260040283203
    3. '   ' → logprob: -5.84782600402832
    4. '```' → logprob: -6.22282600402832
    5. '...' → logprob: -6.59782600402832
    6. '       ' → logprob: -6.97282600402832
    7. ']' → logprob: -7.84782600402832
    8. '<|end|>' → logprob: -8.22282600402832
    9. ').' → logprob: -8.72282600402832
    10. '.' → logprob: -9.34782600402832

Token 1167: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.08789706230163574
    2. '   ' → logprob: -2.5878970623016357
    3. 'total' → logprob: -5.337897300720215
    4. '       ' → logprob: -6.087897300720215
    5. ' time' → logprob: -6.462897300720215
    6. '	time' → logprob: -9.587897300720215
    7. '           ' → logprob: -9.962897300720215
    8. 'continue' → logprob: -10.337897300720215
    9. '```' → logprob: -10.462897300720215
    10. '+' → logprob: -10.712897300720215

Token 1168: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -1.3663626305060461e-05
    2. 'Step' → logprob: -12.00001335144043
    3. 'step' → logprob: -12.62501335144043
    4. ' +=' → logprob: -13.25001335144043
    5. '+=' → logprob: -13.50001335144043
    6. '	step' → logprob: -15.12501335144043
    7. '   ' → logprob: -15.25001335144043
    8. '+' → logprob: -15.62501335144043
    9. '_STEP' → logprob: -16.25001335144043
    10. '_' → logprob: -16.62501335144043

Token 1169: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06197318062186241
    2. ' +=' → logprob: -2.8119730949401855
    3. '=' → logprob: -12.311973571777344
    4. '   ' → logprob: -14.686973571777344
    5. '+' → logprob: -14.811973571777344
    6. '	' → logprob: -15.686973571777344
    7. ']+=' → logprob: -16.936973571777344
    8. ' ' → logprob: -18.061973571777344
    9. ' =' → logprob: -18.311973571777344
    10. '+='' → logprob: -18.436973571777344

Token 1170: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004895264864899218
    2. ' ' → logprob: -7.625489711761475
    3. '   ' → logprob: -13.875489234924316
    4. '```' → logprob: -15.125489234924316
    5. '0' → logprob: -17.125490188598633
    6. '
' → logprob: -17.250490188598633
    7. '１' → logprob: -17.250490188598633
    8. '	' → logprob: -17.500490188598633
    9. ' ' → logprob: -18.000490188598633
    10. '           ' → logprob: -18.375490188598633

Token 1171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.375
    4. '```' → logprob: -18.25
    5. '0' → logprob: -19.25
    6. '１' → logprob: -19.75
    7. '+' → logprob: -20.125
    8. '
' → logprob: -20.375
    9. '	' → logprob: -21.5
    10. ' ' → logprob: -21.75

Token 1172: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03737773001194
    2. '<|end|>' → logprob: -3.7873778343200684
    3. ']' → logprob: -5.537377834320068
    4. '   ' → logprob: -5.912377834320068
    5. '#' → logprob: -6.537377834320068
    6. '[' → logprob: -7.162377834320068
    7. '...' → logprob: -7.162377834320068
    8. 'if' → logprob: -7.537377834320068
    9. '```' → logprob: -7.537377834320068
    10. '}' → logprob: -7.787377834320068

Token 1173: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15160448849201202
    2. '<|end|>' → logprob: -2.151604413986206
    3. '   ' → logprob: -4.526604652404785
    4. '```' → logprob: -5.151604652404785
    5. '#' → logprob: -6.276604652404785
    6. '       ' → logprob: -6.526604652404785
    7. '}' → logprob: -7.026604652404785
    8. '...' → logprob: -7.151604652404785
    9. 'if' → logprob: -7.776604652404785
    10. '<|end|>' → logprob: -7.901604652404785

Token 1174: ' vard' (ID: 57756)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033646851778030396
    2. '   ' → logprob: -4.158647060394287
    3. '<|end|>' → logprob: -4.283647060394287
    4. '       ' → logprob: -6.658647060394287
    5. 'if' → logprob: -7.533647060394287
    6. '```' → logprob: -7.783647060394287
    7. '}' → logprob: -8.533646583557129
    8. '    ' → logprob: -8.908646583557129
    9. '<|end|>' → logprob: -9.033646583557129
    10. '...' → logprob: -9.158646583557129

Token 1175: 'ict' (ID: 1360)
  Prédit: 'ict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.14976274967193604
    2. 'ef' → logprob: -2.6497626304626465
    3. 'al' → logprob: -4.3997626304626465
    4. 'el' → logprob: -4.6497626304626465
    5. ' =' → logprob: -4.7747626304626465
    6. '=' → logprob: -4.8997626304626465
    7. 'ebug' → logprob: -5.2747626304626465
    8. 'is' → logprob: -5.7747626304626465
    9. 'ar' → logprob: -6.0247626304626465
    10. 'ic' → logprob: -6.2747626304626465

Token 1176: ' =' (ID: 314)
  Prédit: '={}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={}' → logprob: -0.3893424868583679
    2. '{}' → logprob: -1.7643425464630127
    3. ' =' → logprob: -2.5143425464630127
    4. '=' → logprob: -3.6393425464630127
    5. '<|end|>' → logprob: -4.264342308044434
    6. '{' → logprob: -4.639342308044434
    7. '={' → logprob: -4.889342308044434
    8. '.clear' → logprob: -5.639342308044434
    9. '={'' → logprob: -6.139342308044434
    10. '={}
' → logprob: -6.639342308044434

Token 1177: ' input' (ID: 3422)
  Prédit: 'globals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'globals' → logprob: -0.8479191064834595
    2. '{}' → logprob: -1.4729191064834595
    3. '{' → logprob: -1.5979191064834595
    4. 'locals' → logprob: -2.34791898727417
    5. '{
' → logprob: -3.84791898727417
    6. 'vars' → logprob: -4.34791898727417
    7. '{'' → logprob: -4.97291898727417
    8. '{"' → logprob: -6.34791898727417
    9. ' globals' → logprob: -7.22291898727417
    10. '{}
' → logprob: -8.472919464111328

Token 1178: '()
' (ID: 1234)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3959670066833496
    2. '()' → logprob: -1.3959670066833496
    3. '<|end|>' → logprob: -1.5209670066833496
    4. '(' → logprob: -2.5209670066833496
    5. ')' → logprob: -2.7709670066833496
    6. '[]' → logprob: -3.6459670066833496
    7. '=' → logprob: -3.7709670066833496
    8. '[:]' → logprob: -4.14596700668335
    9. '.' → logprob: -4.52096700668335
    10. ' =' → logprob: -4.52096700668335

Token 1179: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.384664386510849
    2. '<|end|>' → logprob: -1.7596644163131714
    3. 'if' → logprob: -3.134664297103882
    4. '...' → logprob: -4.259664535522461
    5. '[' → logprob: -4.509664535522461
    6. '```' → logprob: -4.759664535522461
    7. '#' → logprob: -4.884664535522461
    8. '(' → logprob: -5.009664535522461
    9. ':' → logprob: -5.134664535522461
    10. '.' → logprob: -5.134664535522461

Token 1180: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1181: ' vard' (ID: 57756)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.46890467405319214
    2. 'vard' → logprob: -1.093904733657837
    3. 'not' → logprob: -3.593904733657837
    4. ' vard' → logprob: -4.468904495239258
    5. '	not' → logprob: -8.968904495239258
    6. 'len' → logprob: -9.718904495239258
    7. 'var' → logprob: -9.968904495239258
    8. 'time' → logprob: -10.343904495239258
    9. 'total' → logprob: -10.343904495239258
    10. ' time' → logprob: -10.718904495239258

Token 1182: 'ict' (ID: 1360)
  Prédit: 'ict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.00013047587708570063
    2. 'ect' → logprob: -9.375130653381348
    3. '_' → logprob: -11.500130653381348
    4. 'dict' → logprob: -12.000130653381348
    5. 'irt' → logprob: -12.250130653381348
    6. '[' → logprob: -12.375130653381348
    7. '_dict' → logprob: -12.375130653381348
    8. 'ar' → logprob: -12.625130653381348
    9. 'ct' → logprob: -12.750130653381348
    10. '=' → logprob: -12.875130653381348

Token 1183: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2841435670852661
    2. '==' → logprob: -1.4091435670852661
    3. ' is' → logprob: -7.159143447875977
    4. '.startswith' → logprob: -7.534143447875977
    5. '()==' → logprob: -8.034143447875977
    6. '[' → logprob: -8.284143447875977
    7. ')' → logprob: -8.909143447875977
    8. ':' → logprob: -9.159143447875977
    9. '<|end|>' → logprob: -9.159143447875977
    10. ' =' → logprob: -9.284143447875977

Token 1184: ' '' (ID: 461)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.7230046391487122
    2. '''' → logprob: -0.9730046391487122
    3. ''' → logprob: -2.8480045795440674
    4. '"' → logprob: -2.9730045795440674
    5. ' ""' → logprob: -5.0980048179626465
    6. '"":' → logprob: -5.2230048179626465
    7. ' ''' → logprob: -5.2230048179626465
    8. ' "' → logprob: -5.5980048179626465
    9. ' '' → logprob: -6.3480048179626465
    10. ''ex' → logprob: -6.4730048179626465

Token 1185: 'NG' (ID: 19236)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.37617021799087524
    2. ''\' → logprob: -1.5011701583862305
    3. '''' → logprob: -3.3761701583862305
    4. ''' → logprob: -3.7511701583862305
    5. '"\' → logprob: -4.0011701583862305
    6. '""' → logprob: -5.5011701583862305
    7. '"' → logprob: -6.1261701583862305
    8. '':' → logprob: -7.0011701583862305
    9. '''
' → logprob: -7.1261701583862305
    10. '```' → logprob: -7.2511701583862305

Token 1186: '':
' (ID: 7669)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5346398949623108
    2. ''' → logprob: -1.534639835357666
    3. ''):
' → logprob: -2.659639835357666
    4. '')' → logprob: -2.659639835357666
    5. ''):' → logprob: -3.159639835357666
    6. '':' → logprob: -5.159639835357666
    7. '':
' → logprob: -5.534639835357666
    8. ')' → logprob: -5.784639835357666
    9. '):' → logprob: -7.409639835357666
    10. '):
' → logprob: -7.409639835357666

Token 1187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16427730023860931
    2. '   ' → logprob: -2.1642773151397705
    3. ':' → logprob: -3.6642773151397705
    4. ':
' → logprob: -5.289277076721191
    5. ' continue' → logprob: -6.539277076721191
    6. 'continue' → logprob: -6.539277076721191
    7. '<|end|>' → logprob: -7.289277076721191
    8. '):' → logprob: -7.664277076721191
    9. ')' → logprob: -8.164277076721191
    10. '	continue' → logprob: -8.164277076721191

Token 1188: ' sys' (ID: 12228)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05735905468463898
    2. '   ' → logprob: -3.557358980178833
    3. '           ' → logprob: -4.057359218597412
    4. 'continue' → logprob: -5.432359218597412
    5. 'break' → logprob: -5.932359218597412
    6. ' continue' → logprob: -6.557359218597412
    7. ' break' → logprob: -6.932359218597412
    8. '	break' → logprob: -8.682358741760254
    9. '	continue' → logprob: -9.557358741760254
    10. '\t' → logprob: -10.057358741760254

Token 1189: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -3.762356209335849e-05
    2. '.stderr' → logprob: -10.75003719329834
    3. '.stdout' → logprob: -11.87503719329834
    4. 'exit' → logprob: -12.75003719329834
    5. '.' → logprob: -12.87503719329834
    6. '_exit' → logprob: -13.75003719329834
    7. '	exit' → logprob: -14.00003719329834
    8. '.stdin' → logprob: -14.75003719329834
    9. '.quit' → logprob: -15.50003719329834
    10. ' .' → logprob: -15.62503719329834

Token 1190: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14445731043815613
    2. '(' → logprob: -2.1444573402404785
    3. '()
' → logprob: -5.1444573402404785
    4. '(
' → logprob: -5.3944573402404785
    5. ')' → logprob: -5.7694573402404785
    6. '
' → logprob: -6.0194573402404785
    7. '<|end|>' → logprob: -7.1444573402404785
    8. '\n' → logprob: -8.01945686340332
    9. '()\' → logprob: -9.39445686340332
    10. '())' → logprob: -10.14445686340332

Token 1191: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024087227880954742
    2. '<|end|>' → logprob: -4.274087429046631
    3. '[' → logprob: -5.149087429046631
    4. ']' → logprob: -6.899087429046631
    5. ':' → logprob: -7.399087429046631
    6. ',' → logprob: -7.899087429046631
    7. '   ' → logprob: -7.899087429046631
    8. '#' → logprob: -7.899087429046631
    9. '```' → logprob: -8.649086952209473
    10. '(' → logprob: -8.774086952209473

Token 1192: ' Nach' (ID: 14261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020423922687768936
    2. '<|end|>' → logprob: -4.395423889160156
    3. '   ' → logprob: -5.270423889160156
    4. ']' → logprob: -7.395423889160156
    5. '```' → logprob: -7.895423889160156
    6. '#' → logprob: -7.895423889160156
    7. '}' → logprob: -8.520423889160156
    8. '    ' → logprob: -8.645423889160156
    9. '[' → logprob: -9.020423889160156
    10. '<|end|>' → logprob: -9.145423889160156

Token 1193: 'ive' (ID: 585)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4023211598396301
    2. 'T' → logprob: -3.0273211002349854
    3. 'r' → logprob: -3.2773211002349854
    4. 'o' → logprob: -3.2773211002349854
    5. 'at' → logprob: -3.7773211002349854
    6. 'i' → logprob: -3.9023211002349854
    7. 'tml' → logprob: -4.4023213386535645
    8. 'um' → logprob: -4.6523213386535645
    9. 'ts' → logprob: -5.0273213386535645
    10. 'a' → logprob: -5.2773213386535645

Token 1194: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1195: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.45708945393562317
    2. 'int' → logprob: -1.3320894241333008
    3. '0' → logprob: -3.707089424133301
    4. '[]' → logprob: -4.082089424133301
    5. ' input' → logprob: -4.457089424133301
    6. 'True' → logprob: -4.957089424133301
    7. '<|end|>' → logprob: -5.207089424133301
    8. 'time' → logprob: -5.332089424133301
    9. 'False' → logprob: -5.582089424133301
    10. 'None' → logprob: -5.832089424133301

Token 1196: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016797063872218132
    2. '(v' → logprob: -4.141797065734863
    3. '()' → logprob: -8.016797065734863
    4. 'input' → logprob: -8.016797065734863
    5. '(' → logprob: -9.891797065734863
    6. '(N' → logprob: -10.016797065734863
    7. '(n' → logprob: -13.641797065734863
    8. '((' → logprob: -14.266797065734863
    9. '(sys' → logprob: -14.266797065734863
    10. '();' → logprob: -14.391797065734863

Token 1197: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008680874481797218
    2. '()' → logprob: -4.883680820465088
    3. '())
' → logprob: -7.383680820465088
    4. ')' → logprob: -7.883680820465088
    5. '()
' → logprob: -10.008681297302246
    6. '(' → logprob: -11.258681297302246
    7. '()\' → logprob: -12.133681297302246
    8. ' ())' → logprob: -12.383681297302246
    9. '())

' → logprob: -13.633681297302246
    10. '()]' → logprob: -13.883681297302246

Token 1198: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1199: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07533794641494751
    2. '<|end|>' → logprob: -3.0753378868103027
    3. '   ' → logprob: -4.325337886810303
    4. '```' → logprob: -5.825337886810303
    5. ']' → logprob: -6.075337886810303
    6. '       ' → logprob: -6.325337886810303
    7. 'if' → logprob: -6.575337886810303
    8. '<|end|>' → logprob: -7.200337886810303
    9. '    ' → logprob: -7.325337886810303
    10. '...' → logprob: -7.325337886810303

Token 1200: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04019083082675934
    2. 'i' → logprob: -3.2901909351348877
    3. '_i' → logprob: -6.415190696716309
    4. ' _' → logprob: -9.290190696716309
    5. '_n' → logprob: -9.665190696716309
    6. '_j' → logprob: -9.790190696716309
    7. '_token' → logprob: -10.165190696716309
    8. '_=' → logprob: -10.165190696716309
    9. '_N' → logprob: -10.415190696716309
    10. 'token' → logprob: -11.290190696716309

Token 1201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.598251223564148
    2. 'in' → logprob: -0.848251223564148
    3. 'i' → logprob: -4.4732513427734375
    4. '_' → logprob: -4.5982513427734375
    5. 'range' → logprob: -9.098251342773438
    6. ' _' → logprob: -9.223251342773438
    7. ' i' → logprob: -9.348251342773438
    8. ' ' → logprob: -9.973251342773438
    9. 'x' → logprob: -10.348251342773438
    10. '_in' → logprob: -10.973251342773438

Token 1202: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010833692736923695
    2. ' range' → logprob: -4.885833740234375
    3. '_' → logprob: -5.760833740234375
    4. 'in' → logprob: -10.010833740234375
    5. ' in' → logprob: -11.135833740234375
    6. 'vard' → logprob: -12.760833740234375
    7. '_range' → logprob: -13.010833740234375
    8. '[' → logprob: -13.260833740234375
    9. '[]' → logprob: -13.510833740234375
    10. '	range' → logprob: -13.885833740234375

Token 1203: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.8081616163253784
    2. 'N' → logprob: -1.1831616163253784
    3. 'Nach' → logprob: -1.9331616163253784
    4. '(' → logprob: -2.808161735534668
    5. '(int' → logprob: -4.558161735534668
    6. '(T' → logprob: -5.558161735534668
    7. '(F' → logprob: -5.683161735534668
    8. 'F' → logprob: -5.808161735534668
    9. '(len' → logprob: -6.308161735534668
    10. '3' → logprob: -6.308161735534668

Token 1204: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.1290675699710846
    2. 'put' → logprob: -2.7540676593780518
    3. 'Ach' → logprob: -3.5040676593780518
    4. 'ew' → logprob: -4.504067420959473
    5. 'new' → logprob: -4.879067420959473
    6. 'Nach' → logprob: -6.004067420959473
    7. 'Put' → logprob: -7.379067420959473
    8. ')' → logprob: -7.441567420959473
    9. 'arch' → logprob: -7.504067420959473
    10. 'N' → logprob: -8.254067420959473

Token 1205: 'ive' (ID: 585)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.0725523978471756
    2. 'new' → logprob: -3.197552442550659
    3. 'put' → logprob: -3.822552442550659
    4. 'w' → logprob: -4.94755220413208
    5. 'um' → logprob: -10.197552680969238
    6. '```' → logprob: -10.322552680969238
    7. '1' → logprob: -11.947552680969238
    8. ')' → logprob: -11.947552680969238
    9. 'ut' → logprob: -12.072552680969238
    10. 'ow' → logprob: -12.322552680969238

Token 1206: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5543884634971619
    2. '):' → logprob: -0.9293884634971619
    3. '   ' → logprob: -4.054388523101807
    4. ')' → logprob: -5.304388523101807
    5. '       ' → logprob: -5.304388523101807
    6. '():
' → logprob: -6.929388523101807
    7. '<|end|>' → logprob: -6.929388523101807
    8. '()):
' → logprob: -7.804388523101807
    9. '()' → logprob: -8.304388046264648
    10. '():' → logprob: -8.554388046264648

Token 1207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38753408193588257
    2. '   ' → logprob: -1.7625341415405273
    3. '_' → logprob: -2.1375341415405273
    4. 'input' → logprob: -4.137534141540527
    5. 'new' → logprob: -5.637534141540527
    6. 'put' → logprob: -6.637534141540527
    7. 'dummy' → logprob: -6.887534141540527
    8. 'ach' → logprob: -7.262534141540527
    9. '_n' → logprob: -7.637534141540527
    10. 'int' → logprob: -7.637534141540527

Token 1208: ' ach' (ID: 5023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16464097797870636
    2. 'input' → logprob: -2.5396409034729004
    3. 'discard' → logprob: -4.5396409034729
    4. 'new' → logprob: -4.7896409034729
    5. 'delete' → logprob: -5.2896409034729
    6. 'dummy' → logprob: -5.4146409034729
    7. 'put' → logprob: -5.7896409034729
    8. 'ach' (adapté à ' ach') → logprob: -6.0396409034729
    9. 'ack' → logprob: -6.1646409034729
    10. 'order' → logprob: -6.2896409034729

Token 1209: 'ive' (ID: 585)
  Prédit: 'ieve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.04788262024521828
    2. 'ievement' → logprob: -3.547882556915283
    3. 'iev' → logprob: -4.797882556915283
    4. 'ieved' → logprob: -5.422882556915283
    5. 'ievements' → logprob: -5.672882556915283
    6. 'ieves' → logprob: -7.297882556915283
    7. 'ivement' → logprob: -7.547882556915283
    8. 'ieving' → logprob: -8.297883033752441
    9. '_' → logprob: -9.297883033752441
    10. 'ievable' → logprob: -9.672883033752441

Token 1210: '_id' (ID: 1537)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42460837960243225
    2. '=' → logprob: -1.1746083498001099
    3. '_id' → logprob: -3.5496084690093994
    4. '_ids' → logprob: -6.29960823059082
    5. '   ' → logprob: -6.67460823059082
    6. '_' → logprob: -7.04960823059082
    7. '=int' → logprob: -7.04960823059082
    8. '=input' → logprob: -7.29960823059082
    9. ',' → logprob: -7.42460823059082
    10. 'id' → logprob: -7.79960823059082

Token 1211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1673684120178223
    2. '()' → logprob: -1.1673684120178223
    3. ' =' → logprob: -1.4173684120178223
    4. '<|end|>' → logprob: -2.1673684120178223
    5. '   ' → logprob: -5.417368412017822
    6. '<|end|>' → logprob: -5.792368412017822
    7. '=int' → logprob: -6.167368412017822
    8. '       ' → logprob: -6.292368412017822
    9. '	' → logprob: -6.792368412017822
    10. '[]' → logprob: -6.792368412017822

Token 1212: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.6087021473795176e-05
    2. ' int' → logprob: -10.000045776367188
    3. '	int' → logprob: -15.625045776367188
    4. 'input' → logprob: -15.625045776367188
    5. '[int' → logprob: -16.125045776367188
    6. '0' → logprob: -17.250045776367188
    7. '=int' → logprob: -17.250045776367188
    8. '<int' → logprob: -17.375045776367188
    9. '(int' → logprob: -17.625045776367188
    10. '   ' → logprob: -18.375045776367188

Token 1213: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002477796748280525
    2. 'input' → logprob: -6.002477645874023
    3. '()' → logprob: -14.127477645874023
    4. '=input' → logprob: -14.377477645874023
    5. '(' → logprob: -15.377477645874023
    6. '[input' → logprob: -15.502477645874023
    7. ',input' → logprob: -16.252477645874023
    8. '(int' → logprob: -16.377477645874023
    9. '<input' → logprob: -16.752477645874023
    10. 'put' → logprob: -17.252477645874023

Token 1214: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4753305912017822
    2. ')' → logprob: -0.9753305912017822
    3. '()' → logprob: -6.725330352783203
    4. '())
' → logprob: -10.350330352783203
    5. ')
' → logprob: -12.475330352783203
    6. '(' → logprob: -12.475330352783203
    7. ' ())' → logprob: -12.975330352783203
    8. '();)' → logprob: -12.975330352783203
    9. '[])' → logprob: -13.475330352783203
    10. ' )' → logprob: -13.475330352783203


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1212
Tokens correctement prédits (1ère position, stricte): 477
Tokens correctement prédits (1ère position, avec adaptation): 519
Tokens correctement prédits (top 10): 994
Précision stricte (1ère position): 39.36%
Précision adaptée (1ère position): 42.82%
Précision (top 10): 82.01%
================================================================================
