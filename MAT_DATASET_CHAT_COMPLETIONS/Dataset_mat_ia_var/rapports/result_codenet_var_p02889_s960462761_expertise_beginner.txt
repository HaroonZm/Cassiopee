================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

# Variables globales
INF = 10 ** 18
l = 0

def merge(d, cost):
    total = d + cost
    refill, use = divmod(total, 10 ** 15)
    if use > l:
        refill += 1
        new_total = refill * 10 ** 15 + cost
    else:
        new_total = total
    return new_total

def dijkstra(start, matrix):
    n = len(matrix)
    used = [False] * n
    dist = [INF] * n
    dist[start] = 0
    while True:
        v = -1
        for u in range(n):
            if not used[u] and (v == -1 or dist[u] < dist[v]):
                v = u
        if v == -1:
            break
        used[v] = True
        for nxt in range(n):
            temp = merge(dist[v], matrix[v][nxt])
            if dist[nxt] > temp:
                dist[nxt] = temp
    return dist

n, m, l = map(int, input().split())
info = []
for i in range(m):
    info.append(list(map(int, input().split())))

q = int(input())
query = []
for i in range(q):
    query.append(list(map(int, input().split())))

# Matrice d'adjacence (graphe)
matrix = []
for i in range(n):
    row = []
    for j in range(n):
        if i == j:
            row.append(0)
        else:
            row.append(INF)
    matrix.append(row)

for edge in info:
    a, b, cost = edge
    a -= 1
    b -= 1
    if cost > l:
        continue
    matrix[a][b] = cost
    matrix[b][a] = cost

ans = []
for i in range(n):
    ans.append([0] * n)
for i in range(n):
    tmp = dijkstra(i, matrix)
    for j in range(n):
        ans[i][j] = tmp[j] // (10 ** 15)

for pair in query:
    a, b = pair
    a -= 1
    b -= 1
    if ans[a][b] == 1000:
        print(-1)
    else:
        print(ans[a][b])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004960254766047001
    2. '.' → logprob: -5.379960060119629
    3. ' (' → logprob: -9.379960060119629
    4. '(
' → logprob: -9.504960060119629
    5. ')' → logprob: -9.879960060119629
    6. '()' → logprob: -10.129960060119629
    7. '('' → logprob: -11.129960060119629
    8. '[' → logprob: -11.129960060119629
    9. ' ' → logprob: -11.754960060119629
    10. '=' → logprob: -11.879960060119629

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16052936017513275
    2. 'sys' → logprob: -1.910529375076294
    3. ' input' → logprob: -8.785529136657715
    4. 'input' → logprob: -8.910529136657715
    5. '	sys' → logprob: -11.910529136657715
    6. '=sys' → logprob: -12.035529136657715
    7. '(sys' → logprob: -12.910529136657715
    8. ' ' → logprob: -13.535529136657715
    9. ' system' → logprob: -15.035529136657715
    10. '_sys' → logprob: -15.660529136657715

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001290454383706674
    2. ' .' → logprob: -10.000128746032715
    3. '.readline' → logprob: -10.375128746032715
    4. '.stdin' → logprob: -11.000128746032715
    5. '.import' → logprob: -12.375128746032715
    6. '.setdefault' → logprob: -12.375128746032715
    7. '.
' → logprob: -12.625128746032715
    8. '[' → logprob: -12.750128746032715
    9. '.​' → logprob: -13.000128746032715
    10. '.get' → logprob: -13.125128746032715

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.019614169374108315
    2. '.read' → logprob: -4.519614219665527
    3. '.' → logprob: -4.769614219665527
    4. '.readlines' → logprob: -10.519614219665527
    5. 'read' → logprob: -11.519614219665527
    6. '.Read' → logprob: -12.519614219665527
    7. '.buffer' → logprob: -13.769614219665527
    8. '<|end|>' → logprob: -14.019614219665527
    9. ' .' → logprob: -14.269614219665527
    10. ' readline' → logprob: -14.644614219665527

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.056260839104652405
    2. '(' → logprob: -3.056260824203491
    3. '()
' → logprob: -5.68126106262207
    4. '(
' → logprob: -6.80626106262207
    5. '().' → logprob: -7.05626106262207
    6. '
' → logprob: -7.43126106262207
    7. '()\' → logprob: -7.43126106262207
    8. '\n' → logprob: -7.55626106262207
    9. '\' → logprob: -8.43126106262207
    10. '()

' → logprob: -9.05626106262207

Token 9: '#' (ID: 2)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34944549202919006
    2. '(' → logprob: -1.2244454622268677
    3. '().' → logprob: -7.849445343017578
    4. '()
' → logprob: -8.849445343017578
    5. '(
' → logprob: -8.849445343017578
    6. 'def' → logprob: -9.599445343017578
    7. ')' → logprob: -10.099445343017578
    8. '()

' → logprob: -10.224445343017578
    9. '()\' → logprob: -10.849445343017578
    10. 'a' → logprob: -11.099445343017578

Token 10: ' Variables' (ID: 46975)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2809465825557709
    2. 'd' → logprob: -2.7809464931488037
    3. '#' → logprob: -3.0309464931488037
    4. 'i' → logprob: -3.5309464931488037
    5. 's' → logprob: -3.9059464931488037
    6. ' #' → logprob: -4.030946731567383
    7. 'n' → logprob: -4.405946731567383
    8. 'def' → logprob: -4.655946731567383
    9. 'data' → logprob: -4.780946731567383
    10. 'a' → logprob: -4.780946731567383

Token 11: ' global' (ID: 5466)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11800296604633331
    2. ' ' → logprob: -3.2430028915405273
    3. 'n' → logprob: -3.6180028915405273
    4. 'a' → logprob: -4.618002891540527
    5. 'count' → logprob: -4.868002891540527
    6. 's' → logprob: -4.993002891540527
    7. '=' → logprob: -5.868002891540527
    8. ')' → logprob: -6.118002891540527
    9. '\' → logprob: -6.243002891540527
    10. 'x' → logprob: -6.368002891540527

Token 12: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004100246820598841
    2. '_' → logprob: -6.129100322723389
    3. '_s' → logprob: -6.629100322723389
    4. 'es' → logprob: -8.12909984588623
    5. ' ' → logprob: -9.37909984588623
    6. '#' → logprob: -9.62909984588623
    7. 'x' → logprob: -10.62909984588623
    8. ''s' → logprob: -10.62909984588623
    9. '```' → logprob: -11.50409984588623
    10. '_variable' → logprob: -11.75409984588623

Token 13: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8083853125572205
    2. '_' → logprob: -0.9333853125572205
    3. '#' → logprob: -2.8083853721618652
    4. '\' → logprob: -2.9333853721618652
    5. 'n' → logprob: -5.183385372161865
    6. '\n' → logprob: -5.433385372161865
    7. ' ' → logprob: -5.558385372161865
    8. '_s' → logprob: -5.808385372161865
    9. 'x' → logprob: -6.183385372161865
    10. 'count' → logprob: -6.183385372161865

Token 14: 'INF' (ID: 64358)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9590699076652527
    2. 'counter' → logprob: -1.7090699672698975
    3. 'max' → logprob: -1.9590699672698975
    4. 'n' → logprob: -2.8340699672698975
    5. 'total' → logprob: -3.2090699672698975
    6. 'data' → logprob: -3.7090699672698975
    7. 'contador' → logprob: -3.7090699672698975
    8. 'nombre' → logprob: -3.8340699672698975
    9. 'num' → logprob: -3.8340699672698975
    10. 'MAX' → logprob: -4.209069728851318

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007717243395745754
    2. '=' → logprob: -4.882717132568359
    3. ' ' → logprob: -9.63271713256836
    4. '  ' → logprob: -11.38271713256836
    5. '_' → logprob: -11.75771713256836
    6. '   ' → logprob: -12.13271713256836
    7. 'INT' → logprob: -12.63271713256836
    8. '=int' → logprob: -12.75771713256836
    9. '```' → logprob: -13.50771713256836
    10. '=float' → logprob: -13.50771713256836

Token 16: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.6336958408355713
    2. ' ' → logprob: -1.5086958408355713
    3. 'float' → logprob: -1.5086958408355713
    4. '10' → logprob: -3.8836958408355713
    5. ' int' → logprob: -5.383695602416992
    6. 'int' → logprob: -6.508695602416992
    7. '1' → logprob: -9.008695602416992
    8. '100' → logprob: -9.258695602416992
    9. '	float' → logprob: -9.883695602416992
    10. '(float' → logprob: -11.008695602416992

Token 17: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.27631813287734985
    2. '10' → logprob: -1.901318073272705
    3. 'int' → logprob: -3.026318073272705
    4. ' float' → logprob: -3.526318073272705
    5. ' ' → logprob: -4.651318073272705
    6. '1' → logprob: -6.026318073272705
    7. ' int' → logprob: -6.276318073272705
    8. '100' → logprob: -8.276318550109863
    9. '999' → logprob: -10.901318550109863
    10. '  ' → logprob: -12.276318550109863

Token 18: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.037831343710422516
    2. '**' → logprob: -3.5378313064575195
    3. '8' → logprob: -5.0378313064575195
    4. '7' → logprob: -6.9128313064575195
    5. '6' → logprob: -8.41283130645752
    6. '10' → logprob: -8.78783130645752
    7. '09' → logprob: -9.66283130645752
    8. '12' → logprob: -9.78783130645752
    9. '18' → logprob: -9.91283130645752
    10. '000' → logprob: -11.78783130645752

Token 19: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0009161015041172504
    2. '18' → logprob: -7.250916004180908
    3. '15' → logprob: -9.000916481018066
    4. '10' → logprob: -9.875916481018066
    5. '12' → logprob: -10.500916481018066
    6. '7' → logprob: -13.000916481018066
    7. '14' → logprob: -14.875916481018066
    8. '20' → logprob: -15.000916481018066
    9. '16' → logprob: -15.250916481018066
    10. '8' → logprob: -15.375916481018066

Token 20: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0030479393899440765
    2. '18' → logprob: -6.128047943115234
    3. '15' → logprob: -7.378047943115234
    4. '10' → logprob: -8.753047943115234
    5. '12' → logprob: -9.503047943115234
    6. '7' → logprob: -13.378047943115234
    7. '14' → logprob: -13.753047943115234
    8. '20' → logprob: -14.253047943115234
    9. '13' → logprob: -14.253047943115234
    10. '16' → logprob: -14.378047943115234

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017637774348258972
    2. '
' → logprob: -4.892637729644775
    3. '

' → logprob: -5.017637729644775
    4. '' → logprob: -6.517637729644775
    5. '\n' → logprob: -6.892637729644775
    6. '\' → logprob: -8.017638206481934
    7. ' 
' → logprob: -8.392638206481934
    8. '  
' → logprob: -9.267638206481934
    9. ' ' → logprob: -10.392638206481934
    10. '```' → logprob: -10.642638206481934

Token 22: 'l' (ID: 75)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5076019763946533
    2. 'n' → logprob: -1.6326019763946533
    3. '

' → logprob: -2.8826019763946533
    4. '#' → logprob: -3.2576019763946533
    5. 'MAX' → logprob: -3.5076019763946533
    6. 'max' → logprob: -4.132601737976074
    7. '' → logprob: -4.632601737976074
    8. 'distance' → logprob: -4.757601737976074
    9. '
' → logprob: -5.007601737976074
    10. '\' → logprob: -5.257601737976074

Token 23: ' =' (ID: 314)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.003842471167445183
    2. 'e' → logprob: -6.378842353820801
    3. 'im' → logprob: -7.503842353820801
    4. 'ist' → logprob: -7.753842353820801
    5. 'og' → logprob: -8.0038423538208
    6. 'imit' → logprob: -8.3788423538208
    7. 'en' → logprob: -8.8788423538208
    8. 'ef' → logprob: -9.1288423538208
    9. ' =' → logprob: -9.2538423538208
    10. 'ine' → logprob: -10.0038423538208

Token 24: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3075020909309387
    2. '[]' → logprob: -2.182502031326294
    3. ' ' → logprob: -2.807502031326294
    4. '0' → logprob: -3.307502031326294
    5. ' [' → logprob: -3.307502031326294
    6. '[' → logprob: -4.682502269744873
    7. '[int' → logprob: -5.557502269744873
    8. 'ist' → logprob: -6.557502269744873
    9. 'int' → logprob: -7.057502269744873
    10. '100' → logprob: -7.557502269744873

Token 25: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6373475193977356
    2. 'int' → logprob: -1.1373474597930908
    3. '[int' → logprob: -2.262347459793091
    4. '0' → logprob: -3.887347459793091
    5. '[' → logprob: -4.26234769821167
    6. 'ist' → logprob: -5.63734769821167
    7. 'list' → logprob: -6.51234769821167
    8. 'map' → logprob: -6.88734769821167
    9. '100' → logprob: -7.13734769821167
    10. 'INF' → logprob: -7.26234769821167

Token 26: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6556394696235657
    2. '#' → logprob: -1.655639410018921
    3. ' ' → logprob: -2.280639410018921
    4. '<|end|>' → logprob: -2.530639410018921
    5. ' #' → logprob: -3.155639410018921
    6. 'b' → logprob: -3.780639410018921
    7. ' 
' → logprob: -4.7806396484375
    8. '<|end|>' → logprob: -4.9056396484375
    9. 'x' → logprob: -5.0306396484375
    10. 's' → logprob: -6.1556396484375

Token 27: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8377518653869629
    2. '#' → logprob: -1.212751865386963
    3. '<|end|>' → logprob: -2.212751865386963
    4. 'x' → logprob: -2.462751865386963
    5. 'l' → logprob: -3.712751865386963
    6. ',' → logprob: -4.587751865386963
    7. 'n' → logprob: -4.962751865386963
    8. 'b' → logprob: -4.962751865386963
    9. '<|end|>' → logprob: -5.212751865386963
    10. ' #' → logprob: -5.462751865386963

Token 28: ' merge' (ID: 20345)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.7812207341194153
    2. ' main' → logprob: -1.4062206745147705
    3. ' dfs' → logprob: -1.7812206745147705
    4. ' max' → logprob: -3.2812206745147705
    5. ' ' → logprob: -3.9062206745147705
    6. ' bfs' → logprob: -4.15622091293335
    7. ' calculate' → logprob: -4.40622091293335
    8. ' binary' → logprob: -5.28122091293335
    9. 'solve' → logprob: -5.53122091293335
    10. ' calcular' → logprob: -5.65622091293335

Token 29: '(d' (ID: 2572)
  Prédit: '_sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.39552587270736694
    2. '(' → logprob: -1.3955259323120117
    3. '(left' → logprob: -4.020525932312012
    4. '_sorted' → logprob: -4.395525932312012
    5. '_lists' → logprob: -4.520525932312012
    6. '_arrays' → logprob: -4.520525932312012
    7. '(arr' → logprob: -4.770525932312012
    8. '(a' → logprob: -5.520525932312012
    9. '_' → logprob: -5.645525932312012
    10. '(l' → logprob: -5.770525932312012

Token 30: ',' (ID: 11)
  Prédit: 'ict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.6169353127479553
    2. 'icts' → logprob: -0.8669353127479553
    3. 'ictionaries' → logprob: -3.8669352531433105
    4. 'ata' → logprob: -5.1169352531433105
    5. ',' → logprob: -5.6169352531433105
    6. 'ic' → logprob: -6.4919352531433105
    7. 'ist' → logprob: -6.4919352531433105
    8. 'efs' → logprob: -6.8669352531433105
    9. ')' → logprob: -6.9919352531433105
    10. 'ics' → logprob: -6.9919352531433105

Token 31: ' cost' (ID: 3097)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.9896882176399231
    2. ' i' → logprob: -1.4896881580352783
    3. ' r' → logprob: -2.3646881580352783
    4. 'e' → logprob: -2.8646881580352783
    5. 'i' → logprob: -3.2396881580352783
    6. ' a' → logprob: -3.3646881580352783
    7. ' left' → logprob: -3.3646881580352783
    8. 'r' → logprob: -3.9896881580352783
    9. ' m' → logprob: -3.9896881580352783
    10. ' d' → logprob: -4.114688396453857

Token 32: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5906403660774231
    2. '):' → logprob: -0.8406403660774231
    3. ')' → logprob: -4.465640544891357
    4. 's' → logprob: -6.590640544891357
    5. ' ):' → logprob: -7.840640544891357
    6. ' ,' → logprob: -8.0906400680542
    7. '_list' → logprob: -8.5906400680542
    8. '_,' → logprob: -8.8406400680542
    9. '_' → logprob: -9.2156400680542
    10. '1' → logprob: -9.3406400680542

Token 33: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16338485479354858
    2. '   ' → logprob: -2.1633849143981934
    3. ',' → logprob: -3.9133849143981934
    4. ' :' → logprob: -4.913384914398193
    5. '):' → logprob: -5.663384914398193
    6. ' ' → logprob: -6.913384914398193
    7. '[]' → logprob: -7.413384914398193
    8. '<|end|>' → logprob: -7.538384914398193
    9. ':
' → logprob: -7.663384914398193
    10. ' if' → logprob: -8.163384437561035

Token 34: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9477943778038025
    2. '   ' → logprob: -0.9477943778038025
    3. ' for' → logprob: -3.1977944374084473
    4. ' if' → logprob: -3.5727944374084473
    5. ' d' → logprob: -3.6977944374084473
    6. ':' → logprob: -3.6977944374084473
    7. '    ' → logprob: -3.6977944374084473
    8. ',' → logprob: -4.322794437408447
    9. 'd' → logprob: -4.697794437408447
    10. ' =' → logprob: -4.947794437408447

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19296081364154816
    2. ' +=' → logprob: -2.442960739135742
    3. '_' → logprob: -3.192960739135742
    4. '_cost' → logprob: -3.192960739135742
    5. '=' → logprob: -5.942960739135742
    6. ',' → logprob: -6.817960739135742
    7. 'cost' → logprob: -6.942960739135742
    8. ' ' → logprob: -7.442960739135742
    9. ' +' → logprob: -8.067960739135742
    10. '_space' → logprob: -8.692960739135742

Token 36: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1038103774189949
    2. '0' → logprob: -2.3538103103637695
    3. ' d' → logprob: -5.9788103103637695
    4. ' cost' → logprob: -8.10381031036377
    5. ' sum' → logprob: -8.47881031036377
    6. ' len' → logprob: -8.60381031036377
    7. 'd' → logprob: -8.72881031036377
    8. 'cost' → logprob: -9.47881031036377
    9. 'len' → logprob: -9.85381031036377
    10. ' ' → logprob: -10.60381031036377

Token 37: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.32201850414276123
    2. '[' → logprob: -2.072018623352051
    3. '+' → logprob: -2.197018623352051
    4. '[:]' → logprob: -3.447018623352051
    5. '.copy' → logprob: -6.822018623352051
    6. '.pop' → logprob: -8.07201862335205
    7. '[u' → logprob: -8.19701862335205
    8. '[i' → logprob: -8.19701862335205
    9. '   ' → logprob: -8.32201862335205
    10. '[l' → logprob: -8.44701862335205

Token 38: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.6933882236480713
    2. 'cost' → logprob: -0.6933882236480713
    3. ' ' → logprob: -9.193387985229492
    4. '1' → logprob: -9.818387985229492
    5. '(cost' → logprob: -11.193387985229492
    6. '   ' → logprob: -11.568387985229492
    7. '"' → logprob: -11.693387985229492
    8. ' d' → logprob: -11.693387985229492
    9. ' l' → logprob: -12.068387985229492
    10. 'l' → logprob: -12.255887985229492

Token 39: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9322493672370911
    2. '<|end|>' → logprob: -1.5572493076324463
    3. '   ' → logprob: -2.3072493076324463
    4. '
' → logprob: -2.3072493076324463
    5. ')' → logprob: -3.0572493076324463
    6. '<|end|>' → logprob: -3.4322493076324463
    7. ' if' → logprob: -3.8072493076324463
    8. '    ' → logprob: -4.307249546051025
    9. 'return' → logprob: -4.432249546051025
    10. 'def' → logprob: -4.557249546051025

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18886588513851166
    2. ' ' → logprob: -3.063865900039673
    3. '<|end|>' → logprob: -3.188865900039673
    4. 'return' → logprob: -3.688865900039673
    5. '   ' → logprob: -4.688865661621094
    6. ')' → logprob: -4.813865661621094
    7. ' 
' → logprob: -4.938865661621094
    8. ' return' → logprob: -5.063865661621094
    9. '<|end|>' → logprob: -5.188865661621094
    10. ' if' → logprob: -5.688865661621094

Token 41: ' refill' (ID: 112807)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.093544602394104
    2. ' if' → logprob: -1.343544602394104
    3. ' return' → logprob: -2.0935444831848145
    4. '   ' → logprob: -2.2185444831848145
    5. 'return' → logprob: -2.2185444831848145
    6. ' ' → logprob: -3.7185444831848145
    7. 'if' → logprob: -3.9685444831848145
    8. ' 
' → logprob: -5.8435444831848145
    9. '    
' → logprob: -5.9685444831848145
    10. '<|end|>' → logprob: -6.0935444831848145

Token 42: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1637369990348816
    2. 'ed' → logprob: -3.0387370586395264
    3. '_cost' → logprob: -3.5387370586395264
    4. '=' → logprob: -3.5387370586395264
    5. '_amount' → logprob: -4.038736820220947
    6. 's' → logprob: -4.288736820220947
    7. 'd' → logprob: -5.288736820220947
    8. ' ' → logprob: -6.538736820220947
    9. '_count' → logprob: -6.663736820220947
    10. '_' → logprob: -6.663736820220947

Token 43: ' use' (ID: 1199)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -1.4425458908081055
    2. ' rem' → logprob: -1.5675458908081055
    3. ' remain' → logprob: -2.1925458908081055
    4. ' remainder' → logprob: -2.1925458908081055
    5. ' cost' → logprob: -2.9425458908081055
    6. ' total' → logprob: -3.3175458908081055
    7. ' change' → logprob: -3.9425458908081055
    8. ' left' → logprob: -4.0050458908081055
    9. ' carry' → logprob: -4.1925458908081055
    10. ' remaining' → logprob: -4.1925458908081055

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058412082493305206
    2. 'd' → logprob: -3.3084120750427246
    3. '=' → logprob: -3.9334120750427246
    4. ',' → logprob: -8.183412551879883
    5. ' ' → logprob: -8.808412551879883
    6. '_cost' → logprob: -10.058412551879883
    7. 's' → logprob: -10.308412551879883
    8. 'cost' → logprob: -10.683412551879883
    9. 'r' → logprob: -10.933412551879883
    10. '_' → logprob: -11.308412551879883

Token 45: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.6396423578262329
    2. ' total' → logprob: -1.389642357826233
    3. ' ' → logprob: -2.2646422386169434
    4. 'div' → logprob: -2.8896422386169434
    5. '0' → logprob: -3.1396422386169434
    6. 'total' → logprob: -4.514642238616943
    7. ' map' → logprob: -5.764642238616943
    8. ' cost' → logprob: -6.639642238616943
    9. ' (' → logprob: -6.639642238616943
    10. ' d' → logprob: -6.889642238616943

Token 46: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0001640876434976235
    2. 'total' → logprob: -8.875164031982422
    3. '(total' → logprob: -11.250164031982422
    4. 'ide' → logprob: -12.250164031982422
    5. 'de' → logprob: -13.875164031982422
    6. ' total' → logprob: -14.000164031982422
    7. 'mode' → logprob: -14.000164031982422
    8. 'div' → logprob: -14.375164031982422
    9. ' mod' → logprob: -14.625164031982422
    10. 'm' → logprob: -14.750164031982422

Token 47: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0013079755008220673
    2. 'total' → logprob: -6.876307964324951
    3. '(' → logprob: -8.75130844116211
    4. ' total' → logprob: -9.25130844116211
    5. ' (' → logprob: -11.37630844116211
    6. '(t' → logprob: -12.87630844116211
    7. '(d' → logprob: -13.25130844116211
    8. '(l' → logprob: -13.25130844116211
    9. '(cost' → logprob: -13.50130844116211
    10. '	total' → logprob: -14.37630844116211

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005881795077584684
    2. ' ,' → logprob: -7.875588417053223
    3. ')' → logprob: -9.500588417053223
    4. ',l' → logprob: -10.500588417053223
    5. ',d' → logprob: -10.875588417053223
    6. ',
' → logprob: -11.500588417053223
    7. ' l' → logprob: -11.750588417053223
    8. '(),' → logprob: -11.938088417053223
    9. 'l' → logprob: -12.000588417053223
    10. 'd' → logprob: -12.000588417053223

Token 49: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5602217316627502
    2. '10' → logprob: -2.4352216720581055
    3. '100' → logprob: -2.6852216720581055
    4. ' l' → logprob: -2.6852216720581055
    5. '5' → logprob: -2.9352216720581055
    6. 'l' → logprob: -3.0602216720581055
    7. 'INF' → logprob: -3.4352216720581055
    8. ' INF' → logprob: -3.8102216720581055
    9. '6' → logprob: -5.0602216720581055
    10. '9' → logprob: -5.1852216720581055

Token 50: '10' (ID: 702)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9519500732421875
    2. '5' → logprob: -1.7019500732421875
    3. '10' → logprob: -1.8269500732421875
    4. '100' → logprob: -2.4519500732421875
    5. 'INF' → logprob: -2.4519500732421875
    6. '2' → logprob: -3.8269500732421875
    7. '3' → logprob: -4.4519500732421875
    8. '6' → logprob: -4.8269500732421875
    9. '9' → logprob: -5.0769500732421875
    10. '20' → logprob: -5.2019500732421875

Token 51: ' **' (ID: 6240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0044354586862027645
    2. ')
' → logprob: -5.6294355392456055
    3. ' )' → logprob: -7.2544355392456055
    4. ')

' → logprob: -10.004435539245605
    5. '**' → logprob: -10.254435539245605
    6. '0' → logprob: -11.004435539245605
    7. ' )
' → logprob: -11.504435539245605
    8. ' ' → logprob: -12.379435539245605
    9. '00' → logprob: -13.004435539245605
    10. '6' → logprob: -13.254435539245605

Token 52: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.061334095895290375
    2. '6' → logprob: -3.6863341331481934
    3. '18' → logprob: -3.9363341331481934
    4. '7' → logprob: -5.186334133148193
    5. '10' → logprob: -5.811334133148193
    6. '8' → logprob: -6.061334133148193
    7. '12' → logprob: -6.311334133148193
    8. '15' → logprob: -7.186334133148193
    9. '5' → logprob: -7.311334133148193
    10. '1' → logprob: -9.436333656311035

Token 53: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1605336219072342
    2. '6' → logprob: -2.7855336666107178
    3. '18' → logprob: -3.7855336666107178
    4. '7' → logprob: -4.160533428192139
    5. '10' → logprob: -4.285533428192139
    6. '15' → logprob: -4.660533428192139
    7. '8' → logprob: -4.660533428192139
    8. '12' → logprob: -4.910533428192139
    9. '5' → logprob: -5.535533428192139
    10. '16' → logprob: -7.035533428192139

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010980613296851516
    2. ')
' → logprob: -7.251098155975342
    3. ' )' → logprob: -7.876098155975342
    4. ')

' → logprob: -12.876097679138184
    5. ' )
' → logprob: -13.626097679138184
    6. '   ' → logprob: -13.751097679138184
    7. ' ' → logprob: -13.751097679138184
    8. ',' → logprob: -14.251097679138184
    9. ')
' → logprob: -15.001097679138184
    10. '0' → logprob: -15.501097679138184

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019661864265799522
    2. '
' → logprob: -4.644661903381348
    3. ',' → logprob: -6.019661903381348
    4. '<|end|>' → logprob: -6.269661903381348
    5. ')' → logprob: -6.644661903381348
    6. '    
' → logprob: -6.644661903381348
    7. ' ' → logprob: -7.519661903381348
    8. ' return' → logprob: -7.519661903381348
    9. 'return' → logprob: -7.894661903381348
    10. '  ' → logprob: -8.394661903381348

Token 56: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31765270233154297
    2. '   ' → logprob: -2.192652702331543
    3. 'return' → logprob: -2.817652702331543
    4. ' if' → logprob: -2.817652702331543
    5. ' ' → logprob: -4.192652702331543
    6. ' 
' → logprob: -5.317652702331543
    7. 'if' (adapté à ' if') → logprob: -5.567652702331543
    8. '    ' → logprob: -6.067652702331543
    9. ' cost' → logprob: -6.192652702331543
    10. '
' → logprob: -6.692652702331543

Token 57: ' use' (ID: 1199)
  Prédit: ' refill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' refill' → logprob: -0.2423713654279709
    2. ' use' → logprob: -1.7423713207244873
    3. 'ref' → logprob: -3.8673713207244873
    4. 'use' → logprob: -4.367371559143066
    5. ' ref' → logprob: -6.492371559143066
    6. ' ' → logprob: -6.617371559143066
    7. ' not' → logprob: -6.992371559143066
    8. ' total' → logprob: -7.992371559143066
    9. ' cost' → logprob: -8.117371559143066
    10. ' (' → logprob: -8.242371559143066

Token 58: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.256589651107788
    2. ' >=' → logprob: -1.506589651107788
    3. ' ==' → logprob: -1.756589651107788
    4. ' <' → logprob: -2.006589651107788
    5. ' <=' → logprob: -2.256589651107788
    6. '==' → logprob: -3.506589651107788
    7. '>' → logprob: -3.631589651107788
    8. '<' → logprob: -5.006589889526367
    9. '>=' → logprob: -5.131589889526367
    10. '<=' → logprob: -5.631589889526367

Token 59: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3533803224563599
    2. ' ' → logprob: -1.3533803224563599
    3. 'INF' → logprob: -2.1033802032470703
    4. '9' → logprob: -2.4783802032470703
    5. ' INF' → logprob: -2.8533802032470703
    6. 'l' → logprob: -2.8533802032470703
    7. ' l' → logprob: -3.1033802032470703
    8. ' refill' → logprob: -4.10338020324707
    9. '5' → logprob: -4.22838020324707
    10. 'ref' → logprob: -4.35338020324707

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023733148351311684
    2. ' :' → logprob: -4.523733139038086
    3. ' or' → logprob: -5.523733139038086
    4. ' and' → logprob: -5.648733139038086
    5. ':
' → logprob: -5.773733139038086
    6. '   ' → logprob: -7.398733139038086
    7. ':return' → logprob: -7.898733139038086
    8. ' ' → logprob: -8.398733139038086
    9. '+' → logprob: -8.898733139038086
    10. ' +' → logprob: -9.148733139038086

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2188720554113388
    2. ' return' → logprob: -2.7188720703125
    3. ':' → logprob: -3.5938720703125
    4. 'return' → logprob: -4.2188720703125
    5. ':
' → logprob: -4.2188720703125
    6. 'eturn' → logprob: -4.3438720703125
    7. ' l' → logprob: -4.4688720703125
    8. ',' → logprob: -4.9688720703125
    9. 'l' → logprob: -5.0938720703125
    10. ' use' → logprob: -5.2188720703125

Token 62: ' refill' (ID: 112807)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2851234674453735
    2. ' l' → logprob: -1.7851234674453735
    3. ' return' → logprob: -1.9101234674453735
    4. 'l' → logprob: -2.160123348236084
    5. ' refill' → logprob: -2.285123348236084
    6. 'return' → logprob: -2.785123348236084
    7. ' use' → logprob: -3.035123348236084
    8. 'ref' → logprob: -3.160123348236084
    9. '   ' → logprob: -4.410123348236084
    10. 'use' → logprob: -5.035123348236084

Token 63: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.05062215030193329
    2. '+=' → logprob: -3.1756222248077393
    3. ' -=' → logprob: -5.80062198638916
    4. ' =' → logprob: -6.17562198638916
    5. ',' → logprob: -6.80062198638916
    6. '=' → logprob: -7.05062198638916
    7. '   ' → logprob: -8.80062198638916
    8. ' +' → logprob: -9.17562198638916
    9. '-=' → logprob: -9.42562198638916
    10. '+' → logprob: -9.55062198638916

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015173576539382339
    2. ' ' → logprob: -6.876517295837402
    3. '-' → logprob: -7.751517295837402
    4. ' -' → logprob: -10.751517295837402
    5. '0' → logprob: -11.251517295837402
    6. 'l' → logprob: -12.126517295837402
    7. 'use' → logprob: -12.251517295837402
    8. '   ' → logprob: -13.064017295837402
    9. 'cost' → logprob: -13.439017295837402
    10. '10' → logprob: -13.564017295837402

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026922940742224455
    2. '-' → logprob: -6.002692222595215
    3. ' ' → logprob: -9.002692222595215
    4. 'use' → logprob: -10.377692222595215
    5. ' -' → logprob: -10.502692222595215
    6. '0' → logprob: -11.502692222595215
    7. 'l' → logprob: -12.002692222595215
    8. '10' → logprob: -13.190192222595215
    9. '   ' → logprob: -13.315192222595215
    10. '2' → logprob: -13.565192222595215

Token 66: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3080264627933502
    2. '
' → logprob: -1.4330264329910278
    3. 'return' → logprob: -4.433026313781738
    4. 'def' → logprob: -5.683026313781738
    5. '       ' → logprob: -5.808026313781738
    6. ' return' → logprob: -6.433026313781738
    7. 'use' → logprob: -6.558026313781738
    8. 'l' → logprob: -6.683026313781738
    9. '
' → logprob: -6.933026313781738
    10. '    
' → logprob: -7.433026313781738

Token 67: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25271010398864746
    2. 'return' → logprob: -2.0027101039886475
    3. ' return' → logprob: -3.0027101039886475
    4. 'use' → logprob: -4.127710342407227
    5. ' use' → logprob: -4.502710342407227
    6. '
' → logprob: -5.502710342407227
    7. 'l' → logprob: -6.377710342407227
    8. ' ' → logprob: -6.627710342407227
    9. '	return' → logprob: -7.002710342407227
    10. 'def' → logprob: -7.502710342407227

Token 68: ' new' (ID: 620)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.003985673654824495
    2. 'l' → logprob: -6.50398588180542
    3. ' use' → logprob: -6.50398588180542
    4. '       ' → logprob: -8.003985404968262
    5. '0' → logprob: -8.003985404968262
    6. '   ' → logprob: -9.503985404968262
    7. '=' → logprob: -10.003985404968262
    8. 'return' → logprob: -10.003985404968262
    9. ' =' → logprob: -10.003985404968262
    10. 'def' → logprob: -10.878985404968262

Token 69: '_total' (ID: 23814)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.21539689600467682
    2. 'use' → logprob: -1.8403968811035156
    3. ' l' → logprob: -4.340396881103516
    4. '_use' → logprob: -4.715396881103516
    5. 'l' → logprob: -5.215396881103516
    6. ' cost' → logprob: -6.090396881103516
    7. ' =' → logprob: -6.340396881103516
    8. 'cost' → logprob: -6.840396881103516
    9. '_l' → logprob: -7.465396881103516
    10. '_cost' → logprob: -7.840396881103516

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194862484931946
    2. '=' → logprob: -1.501948595046997
    3. 'use' → logprob: -11.626948356628418
    4. ' ' → logprob: -12.501948356628418
    5. ',' → logprob: -13.001948356628418
    6. '_use' → logprob: -13.251948356628418
    7. ' -=' → logprob: -13.876948356628418
    8. '-=' → logprob: -14.376948356628418
    9. '＝' → logprob: -15.126948356628418
    10. ' +=' → logprob: -15.626948356628418

Token 71: ' refill' (ID: 112807)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.6334642171859741
    2. '0' → logprob: -1.3834642171859741
    3. 'ref' → logprob: -2.2584643363952637
    4. ' use' → logprob: -3.1334643363952637
    5. 'cost' → logprob: -3.7584643363952637
    6. 'total' → logprob: -4.133464336395264
    7. '10' → logprob: -4.383464336395264
    8. ' ' → logprob: -5.508464336395264
    9. ' ref' → logprob: -5.508464336395264
    10. ' cost' → logprob: -5.883464336395264

Token 72: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6373698711395264
    2. ' *' → logprob: -0.7623698711395264
    3. '0' → logprob: -5.3873701095581055
    4. ' ' → logprob: -10.137370109558105
    5. '000' → logprob: -10.262370109558105
    6. '10' → logprob: -10.387370109558105
    7. '*(' → logprob: -10.387370109558105
    8. '   ' → logprob: -11.512370109558105
    9. '00' → logprob: -12.262370109558105
    10. '```' → logprob: -12.574870109558105

Token 73: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.11438235640525818
    2. '(' → logprob: -2.989382266998291
    3. ' ' → logprob: -3.114382266998291
    4. ' (' → logprob: -4.364382266998291
    5. '0' → logprob: -7.989382266998291
    6. '100' → logprob: -9.48938274383545
    7. '1' → logprob: -9.61438274383545
    8. 'cost' → logprob: -10.23938274383545
    9. '(cost' → logprob: -11.11438274383545
    10. ' cost' → logprob: -11.17688274383545

Token 74: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02477266639471054
    2. '(' → logprob: -3.7747726440429688
    3. ' ' → logprob: -6.899772644042969
    4. ' (' → logprob: -7.774772644042969
    5. '1' → logprob: -10.774772644042969
    6. '0' → logprob: -11.024772644042969
    7. '100' → logprob: -11.274772644042969
    8. 'cost' → logprob: -11.399772644042969
    9. 'l' → logprob: -11.774772644042969
    10. '`' → logprob: -12.024772644042969

Token 75: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0437849685549736
    2. '15' → logprob: -3.1687848567962646
    3. ' **' → logprob: -7.168785095214844
    4. '+' → logprob: -11.918785095214844
    5. '*' → logprob: -12.543785095214844
    6. ' ' → logprob: -13.293785095214844
    7. '```' → logprob: -13.793785095214844
    8. '^' → logprob: -14.043785095214844
    9. '015' → logprob: -15.168785095214844
    10. ' ' → logprob: -15.543785095214844

Token 76: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.250006675720215
    3. '' → logprob: -14.875006675720215
    4. '015' → logprob: -15.187506675720215
    5. '१५' → logprob: -15.687506675720215
    6. '```' → logprob: -15.750006675720215
    7. '۱۵' → logprob: -15.750006675720215
    8. '十五' → logprob: -15.875006675720215
    9. '1' → logprob: -15.875006675720215
    10. '{' → logprob: -16.37500762939453

Token 77: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -11.750025749206543
    3. '1' → logprob: -12.000025749206543
    4. '' → logprob: -12.750025749206543
    5. '१५' → logprob: -12.750025749206543
    6. '۱۵' → logprob: -13.687525749206543
    7. '１５' → logprob: -13.750025749206543
    8. '5' → logprob: -14.187525749206543
    9. '১৫' → logprob: -14.250025749206543
    10. '十五' → logprob: -15.062525749206543

Token 78: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5261190533638
    2. ' +' → logprob: -1.2761189937591553
    3. ' -' → logprob: -3.2761189937591553
    4. '-' → logprob: -3.2761189937591553
    5. '<|end|>' → logprob: -3.2761189937591553
    6. '   ' → logprob: -4.651119232177734
    7. '
' → logprob: -6.151119232177734
    8. ' ' → logprob: -7.026119232177734
    9. '+l' → logprob: -7.151119232177734
    10. '<|end|>' → logprob: -7.526119232177734

Token 79: ' cost' (ID: 3097)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.24749138951301575
    2. 'l' → logprob: -1.9974913597106934
    3. '0' → logprob: -2.6224913597106934
    4. '(use' → logprob: -5.372491359710693
    5. ' use' → logprob: -5.747491359710693
    6. '(' → logprob: -7.497491359710693
    7. '10' → logprob: -7.622491359710693
    8. ' l' → logprob: -7.997491359710693
    9. ' (' → logprob: -7.997491359710693
    10. '(l' → logprob: -8.247491836547852

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.286786288022995
    2. ' else' → logprob: -2.1617863178253174
    3. '       ' → logprob: -3.4117863178253174
    4. '
' → logprob: -3.4117863178253174
    5. ' ' → logprob: -3.5367863178253174
    6. '	else' → logprob: -4.661786079406738
    7. 'else' → logprob: -5.036786079406738
    8. '	return' → logprob: -5.536786079406738
    9. ' return' → logprob: -5.661786079406738
    10. '    
' → logprob: -6.161786079406738

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06276848167181015
    2. '       ' → logprob: -3.0627684593200684
    3. ' else' → logprob: -4.437768459320068
    4. 'else' → logprob: -6.687768459320068
    5. ' ' → logprob: -8.562768936157227
    6. ' return' → logprob: -8.562768936157227
    7. '	else' → logprob: -8.687768936157227
    8. 'return' → logprob: -9.437768936157227
    9. '	' → logprob: -9.562768936157227
    10. '	return' → logprob: -9.812768936157227

Token 82: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5880109667778015
    2. '   ' → logprob: -0.9630109667778015
    3. 'else' (adapté à ' else') → logprob: -2.8380110263824463
    4. ' return' → logprob: -6.338010787963867
    5. '       ' → logprob: -6.338010787963867
    6. 'return' → logprob: -7.838010787963867
    7. '	else' → logprob: -8.713010787963867
    8. ' ' → logprob: -10.088010787963867
    9. '    
' → logprob: -10.963010787963867
    10. '
' → logprob: -10.963010787963867

Token 83: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8091250061988831
    2. '       ' → logprob: -1.1841249465942383
    3. ':' → logprob: -1.4341249465942383
    4. '   ' → logprob: -5.559124946594238
    5. 'new' → logprob: -5.809124946594238
    6. '
' → logprob: -6.309124946594238
    7. ' new' → logprob: -6.559124946594238
    8. '           ' → logprob: -9.934124946594238
    9. ' :
' → logprob: -10.309124946594238
    10. '    ' → logprob: -10.434124946594238

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09072820097208023
    2. '   ' → logprob: -2.715728282928467
    3. 'new' → logprob: -4.090728282928467
    4. ' new' → logprob: -5.590728282928467
    5. 'return' → logprob: -9.840727806091309
    6. ' ' → logprob: -11.090727806091309
    7. '    ' → logprob: -11.590727806091309
    8. '  ' → logprob: -11.840727806091309
    9. '     ' → logprob: -11.965727806091309
    10. '      ' → logprob: -12.090727806091309

Token 85: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.3885924816131592
    2. ' new' → logprob: -1.1385924816131592
    3. '       ' → logprob: -6.638592720031738
    4. '   ' → logprob: -8.388592720031738
    5. 'return' → logprob: -9.013592720031738
    6. ' return' → logprob: -10.638592720031738
    7. ' ' → logprob: -11.513592720031738
    8. '	new' → logprob: -12.013592720031738
    9. '           ' → logprob: -12.138592720031738
    10. ' use' → logprob: -12.888592720031738

Token 86: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.47626737493556e-05
    2. 'total' → logprob: -10.62503433227539
    3. ' _' → logprob: -12.00003433227539
    4. '_' → logprob: -13.00003433227539
    5. 'Total' → logprob: -14.12503433227539
    6. '_TOTAL' → logprob: -14.50003433227539
    7. ' total' → logprob: -15.50003433227539
    8. 'otal' → logprob: -16.00003433227539
    9. '_Total' → logprob: -16.37503433227539
    10. ' ' → logprob: -16.50003433227539

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02055543102324009
    2. '=' → logprob: -3.8955554962158203
    3. ' +=' → logprob: -11.39555549621582
    4. ' ' → logprob: -13.64555549621582
    5. '   ' → logprob: -15.39555549621582
    6. '+=' → logprob: -15.64555549621582
    7. ' =)' → logprob: -15.89555549621582
    8. ',' → logprob: -16.02055549621582
    9. ' *=' → logprob: -16.64555549621582
    10. '    ' → logprob: -16.64555549621582

Token 88: ' total' (ID: 3609)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.2261824756860733
    2. 'total' → logprob: -1.851182460784912
    3. ' use' → logprob: -3.351182460784912
    4. ' total' → logprob: -4.601182460784912
    5. 'ref' → logprob: -8.60118293762207
    6. '   ' → logprob: -10.47618293762207
    7. '	use' → logprob: -11.47618293762207
    8. ' ' → logprob: -11.85118293762207
    9. '0' → logprob: -12.22618293762207
    10. ' ref' → logprob: -12.28868293762207

Token 89: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00958289299160242
    2. '
' → logprob: -5.009582996368408
    3. ' return' → logprob: -6.759582996368408
    4. 'return' → logprob: -7.009582996368408
    5. '    
' → logprob: -7.634582996368408
    6. '
' → logprob: -8.75958251953125
    7. ',' → logprob: -9.63458251953125
    8. '        
' → logprob: -10.88458251953125
    9. ' 
' → logprob: -11.63458251953125
    10. ' ' → logprob: -11.88458251953125

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033772189635783434
    2. ' return' → logprob: -6.128377437591553
    3. 'return' → logprob: -7.003377437591553
    4. '    
' → logprob: -8.503376960754395
    5. '```' → logprob: -10.878376960754395
    6. '
' → logprob: -11.128376960754395
    7. '	return' → logprob: -11.253376960754395
    8. '<|end|>' → logprob: -11.753376960754395
    9. '       ' → logprob: -12.253376960754395
    10. '        
' → logprob: -12.378376960754395

Token 91: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02645089477300644
    2. ' return' → logprob: -3.7764508724212646
    3. 'return' (adapté à ' return') → logprob: -5.776451110839844
    4. '    
' → logprob: -10.026451110839844
    5. '	return' → logprob: -11.526451110839844
    6. ' l' → logprob: -11.651451110839844
    7. ' ' → logprob: -11.776451110839844
    8. '  ' → logprob: -12.026451110839844
    9. '```' → logprob: -12.151451110839844
    10. '       ' → logprob: -12.651451110839844

Token 92: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.012520013377070427
    2. ' new' → logprob: -4.387519836425781
    3. 'ref' → logprob: -12.012519836425781
    4. '(new' → logprob: -13.012519836425781
    5. 'merge' → logprob: -13.637519836425781
    6. '[new' → logprob: -15.137519836425781
    7. '   ' → logprob: -16.01251983642578
    8. ' (' → logprob: -16.38751983642578
    9. '	new' → logprob: -16.38751983642578
    10. 'l' → logprob: -16.76251983642578

Token 93: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.5690089639974758e-05
    2. '_' → logprob: -11.625015258789062
    3. '_tot' → logprob: -12.250015258789062
    4. '_t' → logprob: -13.875015258789062
    5. ' _' → logprob: -14.750015258789062
    6. '_TOTAL' → logprob: -16.000015258789062
    7. '_Total' → logprob: -16.125015258789062
    8. '_w' → logprob: -16.375015258789062
    9. '_to' → logprob: -16.500015258789062
    10. 'total' → logprob: -17.250015258789062

Token 94: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' d' (ID: 272)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5532103180885315
    2. ' solve' → logprob: -1.1782102584838867
    3. ' calculate' → logprob: -3.9282102584838867
    4. ' max' → logprob: -4.428210258483887
    5. ' process' → logprob: -4.928210258483887
    6. ' dfs' → logprob: -4.928210258483887
    7. ' update' → logprob: -5.053210258483887
    8. ' merge' → logprob: -5.053210258483887
    9. ' binary' → logprob: -5.303210258483887
    10. ' solution' → logprob: -5.303210258483887

Token 97: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.42140650749206543
    2. 'p' → logprob: -1.7964065074920654
    3. 'fs' → logprob: -2.2964065074920654
    4. 'ijk' → logprob: -3.4214065074920654
    5. 'ef' → logprob: -4.7964067459106445
    6. 'ij' → logprob: -4.9214067459106445
    7. 'jik' → logprob: -5.0464067459106445
    8. 'o' → logprob: -5.0464067459106445
    9. 'is' → logprob: -5.1714067459106445
    10. 'ist' → logprob: -5.9214067459106445

Token 98: '(start' (ID: 20008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7397133111953735
    2. '(graph' → logprob: -0.7397133111953735
    3. '(node' → logprob: -3.864713191986084
    4. '(s' → logprob: -5.239713191986084
    5. '(n' → logprob: -5.489713191986084
    6. ' (' → logprob: -5.489713191986084
    7. '(nodes' → logprob: -5.864713191986084
    8. '(start' → logprob: -6.739713191986084
    9. '(Graph' → logprob: -6.989713191986084
    10. '(a' → logprob: -7.114713191986084

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038074489566497505
    2. ' ,' → logprob: -8.750380516052246
    3. ',node' → logprob: -9.250380516052246
    4. '(graph' → logprob: -9.750380516052246
    5. ',n' → logprob: -10.000380516052246
    6. '):' → logprob: -11.625380516052246
    7. ',l' → logprob: -13.250380516052246
    8. ',d' → logprob: -13.750380516052246
    9. '(n' → logprob: -13.750380516052246
    10. '(node' → logprob: -13.875380516052246

Token 100: ' matrix' (ID: 12248)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.13896021246910095
    2. ' graph' → logprob: -2.138960123062134
    3. 'n' → logprob: -5.513960361480713
    4. 'adj' → logprob: -6.013960361480713
    5. 'g' → logprob: -6.388960361480713
    6. 'edges' → logprob: -6.638960361480713
    7. 'end' → logprob: -7.388960361480713
    8. ' n' → logprob: -7.638960361480713
    9. ' edges' → logprob: -7.763960361480713
    10. 'G' → logprob: -8.263959884643555

Token 101: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008981481194496155
    2. '):' → logprob: -4.758981704711914
    3. ' ,' → logprob: -8.383981704711914
    4. '):
' → logprob: -9.633981704711914
    5. ',n' → logprob: -10.383981704711914
    6. '   ' → logprob: -11.133981704711914
    7. ' ):' → logprob: -11.383981704711914
    8. '):
' → logprob: -12.508981704711914
    9. ')' → logprob: -12.633981704711914
    10. ',size' → logprob: -12.883981704711914

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04328679293394089
    2. ' n' → logprob: -3.2932868003845215
    3. 'n' → logprob: -5.4182868003845215
    4. ' distances' → logprob: -8.168286323547363
    5. ' dist' → logprob: -8.543286323547363
    6. ' import' → logprob: -9.168286323547363
    7. 'import' → logprob: -9.543286323547363
    8. 'dist' → logprob: -9.793286323547363
    9. '```' → logprob: -10.668286323547363
    10. '	n' → logprob: -10.918286323547363

Token 103: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.1646993160247803
    2. '   ' → logprob: -1.4146993160247803
    3. 'n' (adapté à ' n') → logprob: -1.9146993160247803
    4. ' import' → logprob: -1.9146993160247803
    5. 'import' → logprob: -2.0396993160247803
    6. 'dist' → logprob: -4.664699554443359
    7. ' dist' → logprob: -4.789699554443359
    8. ' from' → logprob: -7.164699554443359
    9. ' distances' → logprob: -7.539699554443359
    10. 'from' → logprob: -7.914699554443359

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002637249417603016
    2. ',' → logprob: -6.3776373863220215
    3. '=' → logprob: -7.0026373863220215
    4. '   ' → logprob: -10.877636909484863
    5. ' ' → logprob: -12.627636909484863
    6. ' ,' → logprob: -14.377636909484863
    7. '  ' → logprob: -14.377636909484863
    8. ')' → logprob: -14.502636909484863
    9. ',n' → logprob: -14.752636909484863
    10. '=int' → logprob: -15.127636909484863

Token 105: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.02324547804892063
    2. 'len' → logprob: -3.7732455730438232
    3. '(len' → logprob: -17.148244857788086
    4. '=len' → logprob: -18.648244857788086
    5. '	len' → logprob: -19.273244857788086
    6. '   ' → logprob: -19.273244857788086
    7. '[len' → logprob: -20.148244857788086
    8. ' ' → logprob: -20.523244857788086
    9. ' ' → logprob: -21.648244857788086
    10. ',len' → logprob: -22.523244857788086

Token 106: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -6.034592388459714e-06
    2. 'matrix' → logprob: -12.125005722045898
    3. '(' → logprob: -14.625005722045898
    4. ' matrix' → logprob: -16.5000057220459
    5. '	matrix' → logprob: -17.3750057220459
    6. '(Matrix' → logprob: -19.1250057220459
    7. '_matrix' → logprob: -19.8750057220459
    8. ' (' → logprob: -20.0000057220459
    9. '(m' → logprob: -20.1250057220459
    10. '(
' → logprob: -21.0000057220459

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010363764129579067
    2. ')
' → logprob: -4.635363578796387
    3. ' )' → logprob: -7.760363578796387
    4. '   ' → logprob: -8.760363578796387
    5. ')n' → logprob: -11.385363578796387
    6. ' )
' → logprob: -11.760363578796387
    7. ' ' → logprob: -13.635363578796387
    8. 'def' → logprob: -13.760363578796387
    9. ')

' → logprob: -14.385363578796387
    10. ')
' → logprob: -14.385363578796387

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3324000835418701
    2. 'dist' → logprob: -1.3324000835418701
    3. ' dist' → logprob: -4.832400321960449
    4. '    
' → logprob: -5.707400321960449
    5. ' distances' → logprob: -5.957400321960449
    6. '	dist' → logprob: -6.582400321960449
    7. '
' → logprob: -6.707400321960449
    8. 'distance' → logprob: -7.082400321960449
    9. 'import' → logprob: -7.707400321960449
    10. '  ' → logprob: -8.33240032196045

Token 109: ' used' (ID: 2061)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.006215774454176426
    2. 'import' → logprob: -5.131215572357178
    3. 'distance' → logprob: -9.381216049194336
    4. 'd' → logprob: -9.881216049194336
    5. ' dist' → logprob: -10.131216049194336
    6. '   ' → logprob: -10.256216049194336
    7. 'visited' → logprob: -10.631216049194336
    8. 'cost' → logprob: -11.131216049194336
    9. ' import' → logprob: -11.506216049194336
    10. 'dis' → logprob: -11.631216049194336

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00863336119800806
    2. '=' → logprob: -4.758633136749268
    3. ' ' → logprob: -11.883633613586426
    4. '   ' → logprob: -12.758633613586426
    5. ',' → logprob: -12.883633613586426
    6. ')' → logprob: -13.383633613586426
    7. '  ' → logprob: -13.508633613586426
    8. '[]' → logprob: -14.133633613586426
    9. '[' → logprob: -14.258633613586426
    10. 'd' → logprob: -14.383633613586426

Token 111: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.25312575697898865
    2. '[' → logprob: -1.503125786781311
    3. '[n' → logprob: -6.7531256675720215
    4. ' ' → logprob: -12.37812614440918
    5. '[int' → logprob: -12.50312614440918
    6. '[node' → logprob: -13.12812614440918
    7. '[len' → logprob: -13.50312614440918
    8. '[a' → logprob: -13.62812614440918
    9. '[input' → logprob: -13.62812614440918
    10. '[name' → logprob: -13.75312614440918

Token 112: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.5649528298527e-05
    2. ' False' → logprob: -9.500075340270996
    3. '0' → logprob: -14.500075340270996
    4. '(False' → logprob: -15.875075340270996
    5. 'True' → logprob: -17.250076293945312
    6. '   ' → logprob: -18.250076293945312
    7. '=False' → logprob: -20.125076293945312
    8. '[' → logprob: -20.250076293945312
    9. 'float' → logprob: -20.500076293945312
    10. 'F' → logprob: -21.875076293945312

Token 113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005266997031867504
    2. ']*' → logprob: -7.6255269050598145
    3. ' for' → logprob: -10.625526428222656
    4. ' ]' → logprob: -11.375526428222656
    5. 'for' → logprob: -13.375526428222656
    6. ']*(' → logprob: -13.750526428222656
    7. ')' → logprob: -15.000526428222656
    8. ',' → logprob: -17.250526428222656
    9. ']+' → logprob: -18.000526428222656
    10. '}' → logprob: -18.125526428222656

Token 114: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06112666055560112
    2. ')' → logprob: -3.936126708984375
    3. '*' → logprob: -4.686126708984375
    4. ' for' → logprob: -4.811126708984375
    5. ' *' → logprob: -5.061126708984375
    6. ',' → logprob: -5.186126708984375
    7. ']*' → logprob: -5.311126708984375
    8. '[' → logprob: -5.811126708984375
    9. 'for' → logprob: -6.436126708984375
    10. ' ]' → logprob: -8.311126708984375

Token 115: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011722482740879059
    2. ' n' → logprob: -6.751172065734863
    3. '(n' → logprob: -13.126172065734863
    4. ' (' → logprob: -17.87617301940918
    5. '	n' → logprob: -18.00117301940918
    6. ')n' → logprob: -19.50117301940918
    7. '   ' → logprob: -19.87617301940918
    8. '(' → logprob: -19.87617301940918
    9. '```' → logprob: -21.37617301940918
    10. '$n' → logprob: -21.62617301940918

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008210519328713417
    2. '<|end|>' → logprob: -5.1332106590271
    3. 'distance' → logprob: -6.7582106590271
    4. '   ' → logprob: -8.383210182189941
    5. ' distances' → logprob: -8.758210182189941
    6. '  
' → logprob: -8.758210182189941
    7. '    
' → logprob: -8.758210182189941
    8. 'dist' → logprob: -9.133210182189941
    9. ' 
' → logprob: -9.258210182189941
    10. '
' → logprob: -10.258210182189941

Token 117: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.029789254069328308
    2. 'd' → logprob: -4.279789447784424
    3. '   ' → logprob: -4.529789447784424
    4. 'distance' → logprob: -6.029789447784424
    5. 'import' → logprob: -6.779789447784424
    6. ' dist' → logprob: -7.279789447784424
    7. ' distances' → logprob: -8.779788970947266
    8. 'dis' → logprob: -9.779788970947266
    9. ' d' → logprob: -9.904788970947266
    10. '```' → logprob: -10.404788970947266

Token 118: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.17035584151744843
    2. 'd' → logprob: -1.9203557968139648
    3. 'distance' → logprob: -5.170355796813965
    4. 'import' → logprob: -5.795355796813965
    5. ' dist' → logprob: -8.045355796813965
    6. 'l' → logprob: -8.420355796813965
    7. 'dp' → logprob: -8.545355796813965
    8. 'cost' → logprob: -9.045355796813965
    9. 'from' → logprob: -9.045355796813965
    10. '   ' → logprob: -9.420355796813965

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0486164316534996
    2. '=' → logprob: -3.048616409301758
    3. ',' → logprob: -11.548616409301758
    4. '[' → logprob: -12.048616409301758
    5. ' ' → logprob: -12.298616409301758
    6. '<|end|>' → logprob: -12.298616409301758
    7. ']' → logprob: -14.173616409301758
    8. ')' → logprob: -14.298616409301758
    9. ' =
' → logprob: -14.423616409301758
    10. ' =[' → logprob: -14.798616409301758

Token 120: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16026780009269714
    2. ' [' → logprob: -1.9102678298950195
    3. '[in' → logprob: -11.41026782989502
    4. '[n' → logprob: -11.91026782989502
    5. '[node' → logprob: -12.53526782989502
    6. '[input' → logprob: -12.78526782989502
    7. '[ind' → logprob: -12.91026782989502
    8. '[int' → logprob: -13.28526782989502
    9. '[l' → logprob: -13.41026782989502
    10. '[start' → logprob: -13.66026782989502

Token 121: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.007651353720575571
    2. '[' → logprob: -4.882651329040527
    3. ' INF' → logprob: -10.257651329040527
    4. ' [' → logprob: -11.882651329040527
    5. 'inf' → logprob: -13.757651329040527
    6. '_INF' → logprob: -14.507651329040527
    7. '[int' → logprob: -14.632651329040527
    8. '0' → logprob: -14.882651329040527
    9. '-INF' → logprob: -15.882651329040527
    10. ' ' → logprob: -16.132652282714844

Token 122: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005751936114393175
    2. ']*' → logprob: -7.750575065612793
    3. ' ]' → logprob: -8.875575065612793
    4. ' for' → logprob: -12.750575065612793
    5. ']*(' → logprob: -14.125575065612793
    6. '()]' → logprob: -15.375575065612793
    7. 'for' → logprob: -15.875575065612793
    8. '[' → logprob: -16.00057601928711
    9. '`]' → logprob: -16.12557601928711
    10. ',' → logprob: -16.50057601928711

Token 123: ' *' (ID: 425)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.6467894315719604
    2. '*' → logprob: -1.3967894315719604
    3. '.copy' → logprob: -2.14678955078125
    4. ']' → logprob: -2.77178955078125
    5. ']*' → logprob: -3.64678955078125
    6. 'for' → logprob: -4.89678955078125
    7. '[' → logprob: -5.27178955078125
    8. ' for' → logprob: -5.77178955078125
    9. ')' → logprob: -6.27178955078125
    10. '[:' → logprob: -6.27178955078125

Token 124: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019286326132714748
    2. ' n' → logprob: -6.251928806304932
    3. '	n' → logprob: -17.376928329467773
    4. '<|end|>' → logprob: -17.376928329467773
    5. '```' → logprob: -19.376928329467773
    6. ' ' → logprob: -19.751928329467773
    7. '
' → logprob: -19.876928329467773
    8. '(n' → logprob: -19.876928329467773
    9. ' (' → logprob: -20.001928329467773
    10. '   ' → logprob: -20.001928329467773

Token 125: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010548277758061886
    2. 'dist' → logprob: -4.760548114776611
    3. '<|end|>' → logprob: -7.260548114776611
    4. ' 
' → logprob: -8.26054859161377
    5. '    
' → logprob: -8.26054859161377
    6. '
' → logprob: -8.38554859161377
    7. '  
' → logprob: -8.63554859161377
    8. ' dist' → logprob: -10.13554859161377
    9. '	
' → logprob: -10.26054859161377
    10. '   ' → logprob: -10.51054859161377

Token 126: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4027504622936249
    2. '
' → logprob: -1.1527504920959473
    3. '<|end|>' → logprob: -4.402750492095947
    4. ' dist' → logprob: -6.527750492095947
    5. '    
' → logprob: -7.402750492095947
    6. ' 
' → logprob: -8.152750015258789
    7. '	dist' → logprob: -8.152750015258789
    8. '  
' → logprob: -8.402750015258789
    9. '[' → logprob: -8.652750015258789
    10. '(dist' → logprob: -9.277750015258789

Token 127: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -4.179569077678025e-05
    2. ' dist' → logprob: -10.250041961669922
    3. '   ' → logprob: -12.500041961669922
    4. '	dist' → logprob: -13.750041961669922
    5. 'import' → logprob: -13.875041961669922
    6. '
' → logprob: -15.125041961669922
    7. ' ' → logprob: -16.625041961669922
    8. '  ' → logprob: -17.125041961669922
    9. '0' → logprob: -17.125041961669922
    10. 'd' → logprob: -17.375041961669922

Token 128: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -8.756989700486884e-05
    2. '[' → logprob: -9.37508773803711
    3. '[end' → logprob: -14.25008773803711
    4. '[s' → logprob: -14.37508773803711
    5. 'start' → logprob: -15.00008773803711
    6. '```' → logprob: -15.25008773803711
    7. ' [' → logprob: -16.12508773803711
    8. ' =' → logprob: -16.37508773803711
    9. '=' → logprob: -16.37508773803711
    10. '[:]' → logprob: -16.50008773803711

Token 129: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015894850948825479
    2. ' ]' → logprob: -6.501589298248291
    3. ']=' → logprob: -10.25158977508545
    4. '=' → logprob: -10.75158977508545
    5. ' =' → logprob: -10.75158977508545
    6. '[' → logprob: -12.00158977508545
    7. ')' → logprob: -13.12658977508545
    8. ']+=' → logprob: -15.62658977508545
    9. '`]' → logprob: -15.62658977508545
    10. '[start' → logprob: -16.501588821411133

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868718445301056
    2. ' =' → logprob: -1.1368718147277832
    3. ' ' → logprob: -15.511872291564941
    4. ',' → logprob: -16.386871337890625
    5. '[' → logprob: -16.636871337890625
    6. ']' → logprob: -16.761871337890625
    7. ')' → logprob: -17.011871337890625
    8. '=

' → logprob: -17.136871337890625
    9. ' =
' → logprob: -17.261871337890625
    10. '＝' → logprob: -17.261871337890625

Token 131: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۰' → logprob: -17.500003814697266
    4. '000' → logprob: -18.250003814697266
    5. '   ' → logprob: -18.562503814697266
    6. '00' → logprob: -18.687503814697266
    7. 'l' → logprob: -18.875003814697266
    8. '  ' → logprob: -19.312503814697266
    9. '０' → logprob: -19.500003814697266
    10. '(' → logprob: -19.562503814697266

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. 'l' → logprob: -16.625001907348633
    4. '۰' → logprob: -17.687501907348633
    5. '00' → logprob: -18.500001907348633
    6. '(' → logprob: -19.000001907348633
    7. '000' → logprob: -19.000001907348633
    8. '０' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.500001907348633
    10. '```' → logprob: -20.125001907348633

Token 133: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09805808961391449
    2. '<|end|>' → logprob: -2.473057985305786
    3. '   ' → logprob: -5.848058223724365
    4. '    
' → logprob: -6.598058223724365
    5. '<|end|>' → logprob: -6.973058223724365
    6. ' 
' → logprob: -6.973058223724365
    7. '	
' → logprob: -7.473058223724365
    8. '\n' → logprob: -7.473058223724365
    9. '  
' → logprob: -7.598058223724365
    10. ' for' → logprob: -8.098057746887207

Token 134: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4859021008014679
    2. 'while' (adapté à ' while') → logprob: -0.9859020709991455
    3. 'import' → logprob: -4.735902309417725
    4. '   ' → logprob: -7.110902309417725
    5. 'heap' → logprob: -7.110902309417725
    6. 'stack' → logprob: -7.485902309417725
    7. ' for' → logprob: -8.110901832580566
    8. ' while' → logprob: -8.110901832580566
    9. 'queue' → logprob: -9.110901832580566
    10. '	while' → logprob: -11.360901832580566

Token 136: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5865964293479919
    2. 'True' → logprob: -0.8365964293479919
    3. ' not' → logprob: -5.211596488952637
    4. 'not' → logprob: -5.836596488952637
    5. 'any' → logprob: -6.836596488952637
    6. ' any' → logprob: -6.836596488952637
    7. '(True' → logprob: -9.836596488952637
    8. ' ' → logprob: -11.461596488952637
    9. 'sum' → logprob: -11.961596488952637
    10. '
' → logprob: -12.961596488952637

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028337446972727776
    2. '<|end|>' → logprob: -3.7783374786376953
    3. ':
' → logprob: -6.028337478637695
    4. '<|end|>' → logprob: -6.903337478637695
    5. '       ' → logprob: -7.528337478637695
    6. '   ' → logprob: -7.903337478637695
    7. ',' → logprob: -8.153337478637695
    8. ' :' → logprob: -9.028337478637695
    9. ' ' → logprob: -9.778337478637695
    10. ' and' → logprob: -9.778337478637695

Token 138: '       ' (ID: 309)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7963923215866089
    2. 'min' → logprob: -1.6713923215866089
    3. '   ' → logprob: -1.9213923215866089
    4. '       ' → logprob: -2.6713924407958984
    5. ' u' → logprob: -2.9213924407958984
    6. '    ' → logprob: -3.5463924407958984
    7. 'v' → logprob: -4.171392440795898
    8. 'next' → logprob: -4.796392440795898
    9. 'current' → logprob: -5.296392440795898
    10. ' min' → logprob: -5.296392440795898

Token 139: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.5021266937255859
    2. 'u' → logprob: -1.252126693725586
    3. 'min' → logprob: -2.752126693725586
    4. ' v' → logprob: -3.877126693725586
    5. ' u' → logprob: -4.002126693725586
    6. '   ' → logprob: -6.002126693725586
    7. ' min' → logprob: -6.627126693725586
    8. 'idx' → logprob: -7.377126693725586
    9. 'cur' → logprob: -8.127126693725586
    10. '    
' → logprob: -8.377126693725586

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763934254646301
    2. ' =' → logprob: -0.8263934254646301
    3. ',' → logprob: -7.9513936042785645
    4. '=None' → logprob: -10.201393127441406
    5. 'ar' → logprob: -11.951393127441406
    6. 'ariable' → logprob: -11.951393127441406
    7. '=int' → logprob: -12.201393127441406
    8. '_=' → logprob: -12.326393127441406
    9. 'al' → logprob: -12.451393127441406
    10. '_' → logprob: -12.451393127441406

Token 141: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.596781946020201e-05
    2. ' -' → logprob: -10.000045776367188
    3. 'None' → logprob: -14.500045776367188
    4. '-n' → logprob: -18.000045776367188
    5. '-min' → logprob: -19.625045776367188
    6. 'min' → logprob: -19.875045776367188
    7. '-none' → logprob: -19.875045776367188
    8. '-v' → logprob: -20.000045776367188
    9. '
' → logprob: -20.625045776367188
    10. '\-' → logprob: -21.000045776367188

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '-' → logprob: -19.375
    4. '   ' → logprob: -19.5
    5. '
' → logprob: -20.0
    6. '2' → logprob: -20.5
    7. '  ' → logprob: -20.75
    8. ' -' → logprob: -20.875
    9. 'l' → logprob: -21.25
    10. '11' → logprob: -21.375

Token 143: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5536681413650513
    2. '0' → logprob: -2.3036680221557617
    3. ' for' → logprob: -2.5536680221557617
    4. '1' → logprob: -2.6786680221557617
    5. 'for' → logprob: -3.0536680221557617
    6. ' ' → logprob: -3.0536680221557617
    7. '<|end|>' → logprob: -3.0536680221557617
    8. ' 
' → logprob: -4.053668022155762
    9. '       ' → logprob: -4.678668022155762
    10. 'v' → logprob: -6.303668022155762

Token 145: ' for' (ID: 395)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01403210312128067
    2. 'mn' → logprob: -5.014031887054443
    3. 'v' → logprob: -5.889031887054443
    4. 'dist' → logprob: -6.639031887054443
    5. 'm' → logprob: -6.889031887054443
    6. 'mi' → logprob: -7.889031887054443
    7. 'mind' → logprob: -7.889031887054443
    8. 'mini' → logprob: -8.014032363891602
    9. 'minimum' → logprob: -8.139032363891602
    10. '_min' → logprob: -8.764032363891602

Token 146: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0321536548435688
    2. 'i' → logprob: -3.782153606414795
    3. ' u' → logprob: -4.782153606414795
    4. ' i' → logprob: -7.907153606414795
    5. 'j' → logprob: -9.157154083251953
    6. 'nv' → logprob: -12.282154083251953
    7. '	u' → logprob: -12.782154083251953
    8. ' j' → logprob: -12.782154083251953
    9. ' ' → logprob: -13.407154083251953
    10. '0' → logprob: -13.657154083251953

Token 147: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003612186061218381
    2. 'in' → logprob: -5.628612041473389
    3. ' ' → logprob: -12.253612518310547
    4. ',' → logprob: -12.503612518310547
    5. '<|end|>' → logprob: -13.628612518310547
    6. 'n' → logprob: -14.128612518310547
    7. 'range' → logprob: -14.378612518310547
    8. '	in' → logprob: -14.753612518310547
    9. 'v' → logprob: -15.878612518310547
    10. 'In' → logprob: -16.378612518310547

Token 148: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048170737922192
    2. ' range' → logprob: -4.511048316955566
    3. '	range' → logprob: -15.511048316955566
    4. ' ' → logprob: -16.38604736328125
    5. '(range' → logprob: -16.63604736328125
    6. '   ' → logprob: -17.51104736328125
    7. '  ' → logprob: -18.88604736328125
    8. '
' → logprob: -19.76104736328125
    9. '_range' → logprob: -20.01104736328125
    10. '

' → logprob: -20.13604736328125

Token 149: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009300446254201233
    2. '(n' → logprob: -7.000929832458496
    3. ' n' → logprob: -11.000929832458496
    4. '	n' → logprob: -13.500929832458496
    5. ')n' → logprob: -15.500929832458496
    6. ',n' → logprob: -16.750930786132812
    7. '   ' → logprob: -16.875930786132812
    8. '<n' → logprob: -17.125930786132812
    9. '_n' → logprob: -17.375930786132812
    10. '(' → logprob: -17.500930786132812

Token 150: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31328079104423523
    2. '):' → logprob: -1.3132808208465576
    3. '):
' → logprob: -11.313281059265137
    4. '):

' → logprob: -13.188281059265137
    5. ' ):
' → logprob: -13.563281059265137
    6. ' ):' → logprob: -13.813281059265137
    7. ')' → logprob: -14.063281059265137
    8. '       ' → logprob: -14.188281059265137
    9. '   ' → logprob: -14.438281059265137
    10. ':' → logprob: -15.188281059265137

Token 151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0574331134557724
    2. ' if' → logprob: -3.1824331283569336
    3. '       ' → logprob: -5.182433128356934
    4. 'if' → logprob: -5.182433128356934
    5. '<|end|>' → logprob: -6.182433128356934
    6. '	       ' → logprob: -8.182433128356934
    7. '<|end|>' → logprob: -8.932433128356934
    8. '0' → logprob: -9.682433128356934
    9. '```' → logprob: -9.807433128356934
    10. ':' → logprob: -9.807433128356934

Token 152: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.048730093985795975
    2. ' if' → logprob: -3.0487301349639893
    3. '           ' → logprob: -8.92372989654541
    4. '   ' → logprob: -12.42372989654541
    5. '       ' → logprob: -12.92372989654541
    6. '               ' → logprob: -14.04872989654541
    7. '```' → logprob: -14.04872989654541
    8. ' ' → logprob: -14.67372989654541
    9. '	if' → logprob: -14.79872989654541
    10. 'If' → logprob: -15.54872989654541

Token 153: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0792662724852562
    2. ' not' → logprob: -2.579266309738159
    3. '(not' → logprob: -8.079266548156738
    4. '!' → logprob: -10.579266548156738
    5. 'used' → logprob: -11.454266548156738
    6. 'n' → logprob: -12.204266548156738
    7. ' (' → logprob: -12.329266548156738
    8. '
' → logprob: -12.454266548156738
    9. '(' → logprob: -12.829266548156738
    10. 'u' → logprob: -12.954266548156738

Token 154: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.47407761216163635
    2. ' used' → logprob: -0.974077582359314
    3. '.used' → logprob: -15.224077224731445
    4. '_used' → logprob: -15.474077224731445
    5. '-used' → logprob: -16.724077224731445
    6. 'Used' → logprob: -16.724077224731445
    7. 'use' → logprob: -18.599077224731445
    8. ' usado' → logprob: -19.099077224731445
    9. ' ' → logprob: -19.349077224731445
    10. ' use' → logprob: -20.099077224731445

Token 155: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0002795703476294875
    2. 'and' → logprob: -9.000279426574707
    3. '[v' → logprob: -9.625279426574707
    4. ' and' → logprob: -9.625279426574707
    5. '[' → logprob: -11.000279426574707
    6. ' [' → logprob: -12.250279426574707
    7. 'u' → logprob: -13.000279426574707
    8. ' u' → logprob: -15.375279426574707
    9. '(u' → logprob: -17.125280380249023
    10. '[user' → logprob: -18.375280380249023

Token 156: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20141538977622986
    2. 'and' → logprob: -1.7014154195785522
    3. ' ' → logprob: -13.951415061950684
    4. ')' → logprob: -14.201415061950684
    5. ' и' → logprob: -15.201415061950684
    6. ']' → logprob: -16.076416015625
    7. '   ' → logprob: -16.451416015625
    8. '	and' → logprob: -16.701416015625
    9. '
' → logprob: -17.326416015625
    10. ',' → logprob: -17.326416015625

Token 157: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.20141372084617615
    2. ' and' → logprob: -1.7014137506484985
    3. ' ' → logprob: -15.201414108276367
    4. '   ' → logprob: -16.201414108276367
    5. '	and' → logprob: -16.576414108276367
    6. '
' → logprob: -16.951414108276367
    7. ' и' → logprob: -17.576414108276367
    8. '  ' → logprob: -17.951414108276367
    9. '

' → logprob: -19.076414108276367
    10. '       ' → logprob: -19.201414108276367

Token 158: ' (' (ID: 350)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.11424487084150314
    2. ' (' → logprob: -2.2392449378967285
    3. ' dist' → logprob: -7.2392449378967285
    4. 'dist' → logprob: -7.3642449378967285
    5. '(d' → logprob: -10.73924446105957
    6. '(distance' → logprob: -11.48924446105957
    7. '((' → logprob: -11.73924446105957
    8. '(' → logprob: -12.23924446105957
    9. '(v' → logprob: -12.36424446105957
    10. ' ' → logprob: -12.98924446105957

Token 159: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.35331475734710693
    2. 'dist' → logprob: -1.228314757347107
    3. '(v' → logprob: -5.8533148765563965
    4. ' dist' → logprob: -7.1033148765563965
    5. ' v' → logprob: -7.3533148765563965
    6. '(dist' → logprob: -7.6033148765563965
    7. 'd' → logprob: -12.228314399719238
    8. ' (' → logprob: -12.228314399719238
    9. '   ' → logprob: -13.228314399719238
    10. '(' → logprob: -13.478314399719238

Token 160: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.15850956737995148
    2. ' ==' → logprob: -2.0335094928741455
    3. '==-' → logprob: -4.158509731292725
    4. '<' → logprob: -10.033509254455566
    5. '==
' → logprob: -11.283509254455566
    6. 'is' → logprob: -11.908509254455566
    7. '[' → logprob: -12.283509254455566
    8. '=' → logprob: -12.408509254455566
    9. ' ' → logprob: -13.408509254455566
    10. '=="' → logprob: -13.783509254455566

Token 161: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0564331205387134e-05
    2. ' -' → logprob: -11.50001049041748
    3. '-u' → logprob: -14.87501049041748
    4. 'u' → logprob: -18.750011444091797
    5. ' ' → logprob: -19.500011444091797
    6. '   ' → logprob: -20.000011444091797
    7. '  ' → logprob: -21.375011444091797
    8. '−' → logprob: -21.750011444091797
    9. ' u' → logprob: -22.625011444091797
    10. ')' → logprob: -22.750011444091797

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. ' -' → logprob: -15.12500286102295
    4. '-' → logprob: -16.125001907348633
    5. '   ' → logprob: -17.062501907348633
    6. '

' → logprob: -17.375001907348633
    7. '
' → logprob: -17.375001907348633
    8. '```' → logprob: -17.625001907348633
    9. '  ' → logprob: -18.125001907348633
    10. 'None' → logprob: -18.812501907348633

Token 163: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06197429448366165
    2. 'or' → logprob: -2.811974287033081
    3. '           ' → logprob: -13.68697452545166
    4. '	or' → logprob: -13.68697452545166
    5. '       ' → logprob: -13.81197452545166
    6. '    ' → logprob: -13.81197452545166
    7. '```' → logprob: -14.56197452545166
    8. '               ' → logprob: -14.93697452545166
    9. '        ' → logprob: -14.93697452545166
    10. '   ' → logprob: -15.06197452545166

Token 164: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0067156096920371056
    2. ' dist' → logprob: -5.006715774536133
    3. '	dist' → logprob: -16.381715774536133
    4. '(dist' → logprob: -16.506715774536133
    5. '.dist' → logprob: -19.006715774536133
    6. '_dist' → logprob: -19.131715774536133
    7. 'd' → logprob: -20.006715774536133
    8. '   ' → logprob: -20.006715774536133
    9. 'Dist' → logprob: -20.006715774536133
    10. ' ' → logprob: -20.381715774536133

Token 165: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.36574100604048e-06
    2. 'u' → logprob: -12.500004768371582
    3. '[v' → logprob: -15.000004768371582
    4. '[' → logprob: -15.750004768371582
    5. '<u' → logprob: -16.875003814697266
    6. '```' → logprob: -18.750003814697266
    7. '
' → logprob: -19.250003814697266
    8. '[
' → logprob: -20.500003814697266
    9. '	u' → logprob: -21.250003814697266
    10. '(u' → logprob: -21.750003814697266

Token 166: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5762559175491333
    2. ' <' → logprob: -0.8262559175491333
    3. '<u' → logprob: -8.576255798339844
    4. '<v' → logprob: -9.826255798339844
    5. '[' → logprob: -10.576255798339844
    6. ' ' → logprob: -10.701255798339844
    7. ']<' → logprob: -11.951255798339844
    8. ']' → logprob: -12.076255798339844
    9. '[u' → logprob: -12.826255798339844
    10. '<n' → logprob: -13.576255798339844

Token 167: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1270790845155716
    2. ' <' → logprob: -2.1270790100097656
    3. '<u' → logprob: -9.627079010009766
    4. '<v' → logprob: -9.877079010009766
    5. '[' → logprob: -11.377079010009766
    6. ' ' → logprob: -11.627079010009766
    7. '<int' → logprob: -13.252079010009766
    8. '<n' → logprob: -13.627079010009766
    9. '<size' → logprob: -13.752079010009766
    10. '<class' → logprob: -14.002079010009766

Token 168: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007607458624988794
    2. ' dist' → logprob: -4.882607460021973
    3. '	dist' → logprob: -14.382607460021973
    4. '(dist' → logprob: -15.632607460021973
    5. ' ' → logprob: -16.132606506347656
    6. '.dist' → logprob: -16.132606506347656
    7. '   ' → logprob: -16.382606506347656
    8. '
' → logprob: -16.507606506347656
    9. '_dist' → logprob: -16.632606506347656
    10. 'd' → logprob: -17.757606506347656

Token 169: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.018158020451664925
    2. '[u' → logprob: -4.018157958984375
    3. 'v' → logprob: -11.768157958984375
    4. 'dist' → logprob: -15.143157958984375
    5. 'u' → logprob: -16.518157958984375
    6. '[' → logprob: -17.393157958984375
    7. '[user' → logprob: -21.268157958984375
    8. '```' → logprob: -21.393157958984375
    9. '	v' → logprob: -22.018157958984375
    10. '[
' → logprob: -22.018157958984375

Token 170: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007244677981361747
    2. '):
' → logprob: -8.000724792480469
    3. ' ):' → logprob: -8.125724792480469
    4. ']):' → logprob: -9.750724792480469
    5. ')' → logprob: -11.000724792480469
    6. ')):' → logprob: -12.000724792480469
    7. '[u' → logprob: -12.375724792480469
    8. '>):' → logprob: -13.125724792480469
    9. '):
' → logprob: -13.875724792480469
    10. ':' → logprob: -13.875724792480469

Token 171: '               ' (ID: 506)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7386906147003174
    2. '           ' → logprob: -1.4886906147003174
    3. '               ' → logprob: -1.8636906147003174
    4. '       ' → logprob: -3.2386906147003174
    5. '):
' → logprob: -3.4886906147003174
    6. ':
' → logprob: -3.9886906147003174
    7. ':' → logprob: -4.238690376281738
    8. '	v' → logprob: -4.488690376281738
    9. ' v' → logprob: -5.363690376281738
    10. 'u' → logprob: -5.363690376281738

Token 172: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.017905360087752342
    2. ' v' → logprob: -4.392905235290527
    3. 'u' → logprob: -5.267905235290527
    4. ' u' → logprob: -9.017905235290527
    5. '                   ' → logprob: -10.267905235290527
    6. '	v' → logprob: -10.267905235290527
    7. '
' → logprob: -11.017905235290527
    8. '               ' → logprob: -11.392905235290527
    9. '           ' → logprob: -12.642905235290527
    10. '   ' → logprob: -13.767905235290527

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20349901914596558
    2. '=' → logprob: -1.7034990787506104
    3. '=u' → logprob: -6.203498840332031
    4. '=v' → logprob: -9.953498840332031
    5. '[u' → logprob: -11.578498840332031
    6. 'u' → logprob: -12.953498840332031
    7. ' u' → logprob: -14.203498840332031
    8. '=user' → logprob: -15.328498840332031
    9. ' =
' → logprob: -15.328498840332031
    10. ' ' → logprob: -15.703498840332031

Token 174: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.014163747429847717
    2. ' u' → logprob: -4.264163970947266
    3. '	u' → logprob: -15.264163970947266
    4. '
' → logprob: -18.139163970947266
    5. '   ' → logprob: -18.639163970947266
    6. ' ' → logprob: -18.889163970947266
    7. '[u' → logprob: -19.264163970947266
    8. ' ' → logprob: -19.764163970947266
    9. '<u' → logprob: -19.889163970947266
    10. ''u' → logprob: -20.389163970947266

Token 175: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44165703654289246
    2. '<|end|>' → logprob: -1.1916570663452148
    3. '
' → logprob: -3.316657066345215
    4. '<|end|>' → logprob: -5.066657066345215
    5. '        
' → logprob: -5.191657066345215
    6. ')' → logprob: -6.941657066345215
    7. ' if' → logprob: -7.066657066345215
    8. '  
' → logprob: -7.566657066345215
    9. '        ' → logprob: -7.816657066345215
    10. 'if' → logprob: -8.066657066345215

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12864284217357635
    2. '<|end|>' → logprob: -2.2536427974700928
    3. '<|end|>' → logprob: -5.878643035888672
    4. '
' → logprob: -6.003643035888672
    5. ' if' → logprob: -6.128643035888672
    6. '	' → logprob: -6.128643035888672
    7. ')' → logprob: -6.503643035888672
    8. ' used' → logprob: -6.878643035888672
    9. '        
' → logprob: -7.128643035888672
    10. '   ' → logprob: -7.628643035888672

Token 177: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0404707193374634
    2. 'if' (adapté à ' if') → logprob: -1.0404707193374634
    3. ' if' → logprob: -1.2904707193374634
    4. 'used' → logprob: -4.915470600128174
    5. '   ' → logprob: -5.165470600128174
    6. ' used' → logprob: -5.415470600128174
    7. '	if' → logprob: -7.540470600128174
    8. '	' → logprob: -9.040471076965332
    9. ' ' → logprob: -9.915471076965332
    10. '           ' → logprob: -10.915471076965332

Token 178: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5515369772911072
    2. 'v' → logprob: -0.9265369772911072
    3. ' dist' → logprob: -3.801537036895752
    4. ' used' → logprob: -5.676537036895752
    5. 'dist' → logprob: -6.301537036895752
    6. 'used' → logprob: -7.801537036895752
    7. '	v' → logprob: -12.426536560058594
    8. '(v' → logprob: -13.176536560058594
    9. '(dist' → logprob: -13.926536560058594
    10. ' ' → logprob: -14.426536560058594

Token 179: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5549962520599365
    2. ' ==' → logprob: -1.0549962520599365
    3. '==-' → logprob: -2.5549962520599365
    4. '==
' → logprob: -11.429996490478516
    5. '<' → logprob: -11.679996490478516
    6. '=' → logprob: -12.179996490478516
    7. ')==' → logprob: -12.429996490478516
    8. '===' → logprob: -12.429996490478516
    9. 'is' → logprob: -12.929996490478516
    10. ']==' → logprob: -13.804996490478516

Token 180: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001584850688232109
    2. ' -' → logprob: -8.750158309936523
    3. ' ' → logprob: -18.000158309936523
    4. '   ' → logprob: -19.000158309936523
    5. '  ' → logprob: -21.000158309936523
    6. '```' → logprob: -22.625158309936523
    7. '-v' → logprob: -22.750158309936523
    8. '−' → logprob: -23.500158309936523
    9. ' ' → logprob: -23.750158309936523
    10. '	' → logprob: -24.125158309936523

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. '-' → logprob: -15.875001907348633
    4. '2' → logprob: -16.250001907348633
    5. '```' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.937501907348633
    7. '0' → logprob: -18.000001907348633
    8. '
' → logprob: -18.375001907348633
    9. '  ' → logprob: -18.500001907348633
    10. ' -' → logprob: -18.750001907348633

Token 182: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04303630441427231
    2. ':
' → logprob: -3.6680362224578857
    3. ' or' → logprob: -4.293036460876465
    4. '           ' → logprob: -6.043036460876465
    5. '       ' → logprob: -7.668036460876465
    6. '   ' → logprob: -9.918036460876465
    7. 'or' → logprob: -10.668036460876465
    8. ':return' → logprob: -12.168036460876465
    9. ' :' → logprob: -13.043036460876465
    10. '	or' → logprob: -13.668036460876465

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025771720334887505
    2. '       ' → logprob: -4.275771617889404
    3. 'break' → logprob: -4.525771617889404
    4. ' break' → logprob: -7.400771617889404
    5. '   ' → logprob: -9.900772094726562
    6. '	break' → logprob: -11.025772094726562
    7. '               ' → logprob: -11.150772094726562
    8. '		' → logprob: -11.900772094726562
    9. '          ' → logprob: -12.400772094726562
    10. ' ' → logprob: -13.150772094726562

Token 184: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14114497601985931
    2. 'break' (adapté à ' break') → logprob: -2.1411449909210205
    3. ' break' → logprob: -4.266144752502441
    4. '               ' → logprob: -10.141144752502441
    5. '       ' → logprob: -11.141144752502441
    6. '	break' → logprob: -11.266144752502441
    7. '		' → logprob: -12.141144752502441
    8. '   ' → logprob: -12.391144752502441
    9. '          ' → logprob: -13.516144752502441
    10. 'return' → logprob: -14.641144752502441

Token 185: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8896940350532532
    2. '       ' → logprob: -1.0146939754486084
    3. '<|end|>' → logprob: -1.6396939754486084
    4. '        
' → logprob: -3.8896939754486084
    5. '   ' → logprob: -5.2646942138671875
    6. ' used' → logprob: -6.0146942138671875
    7. '    
' → logprob: -6.5146942138671875
    8. '  
' → logprob: -6.8896942138671875
    9. '<|end|>' → logprob: -7.5146942138671875
    10. 'used' → logprob: -8.014694213867188

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07234573364257812
    2. '<|end|>' → logprob: -2.947345733642578
    3. '
' → logprob: -4.572345733642578
    4. '   ' → logprob: -5.697345733642578
    5. ' used' → logprob: -6.322345733642578
    6. '        
' → logprob: -7.572345733642578
    7. '<|end|>' → logprob: -7.822345733642578
    8. 'used' → logprob: -7.947345733642578
    9. '	' → logprob: -8.322345733642578
    10. ',' → logprob: -10.322345733642578

Token 187: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.19180582463741302
    2. ' used' → logprob: -2.191805839538574
    3. '   ' → logprob: -2.816805839538574
    4. '       ' → logprob: -5.816805839538574
    5. '  ' → logprob: -11.691805839538574
    6. '	' → logprob: -11.816805839538574
    7. '
' → logprob: -12.066805839538574
    8. '    ' → logprob: -12.066805839538574
    9. ' ' → logprob: -12.191805839538574
    10. '    
' → logprob: -12.816805839538574

Token 188: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: 0.0
    2. '[u' → logprob: -16.875
    3. '[' → logprob: -17.125
    4. 'v' → logprob: -19.0
    5. ' [' → logprob: -21.125
    6. '```' → logprob: -21.375
    7. '[V' → logprob: -21.375
    8. '[c' → logprob: -22.625
    9. '	v' → logprob: -22.75
    10. '[t' → logprob: -23.125

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.8444881536415778e-05
    2. ']=' → logprob: -10.875028610229492
    3. '=' → logprob: -11.750028610229492
    4. ' =' → logprob: -14.125028610229492
    5. ' ]' → logprob: -14.125028610229492
    6. ')' → logprob: -16.625028610229492
    7. '[' → logprob: -17.625028610229492
    8. ']
' → logprob: -18.250028610229492
    9. '=True' → logprob: -18.500028610229492
    10. '   ' → logprob: -18.875028610229492

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759401917457581
    2. ' =' → logprob: -0.8259401917457581
    3. '=True' → logprob: -14.825940132141113
    4. ']' → logprob: -15.325940132141113
    5. '[' → logprob: -15.450940132141113
    6. ' ' → logprob: -17.57594108581543
    7. '   ' → logprob: -17.95094108581543
    8. '	' → logprob: -18.32594108581543
    9. ')' → logprob: -18.70094108581543
    10. ' ' → logprob: -18.95094108581543

Token 191: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0024756586644798517
    2. ' True' → logprob: -6.002475738525391
    3. '(True' → logprob: -20.00247573852539
    4. '=True' → logprob: -20.25247573852539
    5. ' ' → logprob: -23.12747573852539
    6. 'true' → logprob: -23.25247573852539
    7. '.True' → logprob: -23.25247573852539
    8. '1' → logprob: -24.00247573852539
    9. 'TRUE' → logprob: -24.37747573852539
    10. '_true' → logprob: -24.75247573852539

Token 192: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.041953351348638535
    2. '<|end|>' → logprob: -3.2919533252716064
    3. '       ' → logprob: -5.6669535636901855
    4. '<|end|>' → logprob: -8.666953086853027
    5. '
' → logprob: -9.666953086853027
    6. '        
' → logprob: -9.666953086853027
    7. '  
' → logprob: -10.291953086853027
    8. ' 
' → logprob: -10.916953086853027
    9. '```' → logprob: -10.916953086853027
    10. ' for' → logprob: -11.291953086853027

Token 193: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1305467039346695
    2. '<|end|>' → logprob: -2.505546808242798
    3. '   ' → logprob: -3.755546808242798
    4. '       ' → logprob: -4.380546569824219
    5. '    
' → logprob: -7.005546569824219
    6. '  
' → logprob: -7.005546569824219
    7. '<|end|>' → logprob: -7.255546569824219
    8. ' for' → logprob: -7.505546569824219
    9. ' 
' → logprob: -7.755546569824219
    10. '        
' → logprob: -8.005546569824219

Token 194: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07921098172664642
    2. ' for' → logprob: -2.5792109966278076
    3. '   ' → logprob: -8.204211235046387
    4. '	for' → logprob: -10.579211235046387
    5. '       ' → logprob: -10.829211235046387
    6. ' ' → logprob: -14.204211235046387
    7. '
' → logprob: -14.329211235046387
    8. '```' → logprob: -14.704211235046387
    9. ' ' → logprob: -15.579211235046387
    10. '    
' → logprob: -16.45421028137207

Token 195: ' nxt' (ID: 160200)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5268837213516235
    2. 'to' → logprob: -1.4018837213516235
    3. ' u' → logprob: -2.401883602142334
    4. 'w' → logprob: -3.401883602142334
    5. ' to' → logprob: -3.526883602142334
    6. ' w' → logprob: -4.776883602142334
    7. 'i' → logprob: -7.526883602142334
    8. '(u' → logprob: -7.776883602142334
    9. 'e' → logprob: -8.401884078979492
    10. ' i' → logprob: -8.651884078979492

Token 196: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5770218968391418
    2. ' in' → logprob: -0.8270218968391418
    3. ',' → logprob: -7.202022075653076
    4. ' ' → logprob: -9.452021598815918
    5. ',v' → logprob: -9.452021598815918
    6. 'v' → logprob: -9.952021598815918
    7. 'u' → logprob: -10.702021598815918
    8. '[' → logprob: -10.827021598815918
    9. ' ,' → logprob: -10.827021598815918
    10. '	in' → logprob: -11.202021598815918

Token 197: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024756586644798517
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -17.00247573852539
    4. ' ' → logprob: -17.75247573852539
    5. '	range' → logprob: -17.75247573852539
    6. '   ' → logprob: -17.87747573852539
    7. '  ' → logprob: -19.37747573852539
    8. 'matrix' → logprob: -19.50247573852539
    9. 'r' → logprob: -19.62747573852539
    10. '.range' → logprob: -21.50247573852539

Token 198: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000712670327629894
    2. 'n' → logprob: -7.250712871551514
    3. '(len' → logprob: -13.500712394714355
    4. ' n' → logprob: -14.500712394714355
    5. 'len' → logprob: -14.500712394714355
    6. '	n' → logprob: -15.500712394714355
    7. '(' → logprob: -16.875713348388672
    8. '   ' → logprob: -17.625713348388672
    9. '<n' → logprob: -17.875713348388672
    10. ',n' → logprob: -18.000713348388672

Token 199: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008717869408428669
    2. '):
' → logprob: -4.758718013763428
    3. 'n' → logprob: -10.13371753692627
    4. ')' → logprob: -10.75871753692627
    5. '):
' → logprob: -11.25871753692627
    6. '(n' → logprob: -11.50871753692627
    7. '       ' → logprob: -12.50871753692627
    8. '   ' → logprob: -13.00871753692627
    9. ',' → logprob: -13.13371753692627
    10. ':' → logprob: -13.13371753692627

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06227698549628258
    2. ':' → logprob: -2.93727707862854
    3. ' if' → logprob: -5.812276840209961
    4. ':
' → logprob: -6.062276840209961
    5. '       ' → logprob: -7.437276840209961
    6. '	       ' → logprob: -8.187276840209961
    7. '<|end|>' → logprob: -8.312276840209961
    8. '		' → logprob: -8.687276840209961
    9. ',' → logprob: -8.812276840209961
    10. ' :' → logprob: -8.812276840209961

Token 201: ' temp' (ID: 5484)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.370574414730072
    2. 'if' → logprob: -1.6205744743347168
    3. '           ' → logprob: -2.620574474334717
    4. '               ' → logprob: -3.245574474334717
    5. '       ' → logprob: -10.745573997497559
    6. '	if' → logprob: -10.870573997497559
    7. '
' → logprob: -10.995573997497559
    8. '   ' → logprob: -11.120573997497559
    9. '```' → logprob: -11.245573997497559
    10. '            
' → logprob: -11.495573997497559

Token 202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6534720063209534
    2. ' =' → logprob: -1.1534719467163086
    3. '_dist' → logprob: -2.0284719467163086
    4. 'dist' → logprob: -3.5284719467163086
    5. '_cost' → logprob: -6.778471946716309
    6. '_distance' → logprob: -7.153471946716309
    7. ' dist' → logprob: -7.903471946716309
    8. '_' → logprob: -8.028471946716309
    9. '   ' → logprob: -9.153471946716309
    10. 'd' → logprob: -9.528471946716309

Token 203: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.007646848913282156
    2. ' merge' → logprob: -4.8826470375061035
    3. 'dist' → logprob: -10.882646560668945
    4. '   ' → logprob: -11.632646560668945
    5. 'matrix' → logprob: -11.882646560668945
    6. 'd' → logprob: -13.132646560668945
    7. ' dist' → logprob: -13.632646560668945
    8. ' ' → logprob: -13.757646560668945
    9. '  ' → logprob: -14.632646560668945
    10. '.merge' → logprob: -15.007646560668945

Token 204: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -1.771655115589965e-05
    2. '(' → logprob: -11.125018119812012
    3. 'dist' → logprob: -13.250018119812012
    4. ' (' → logprob: -15.375018119812012
    5. '(d' → logprob: -15.375018119812012
    6. '(distance' → logprob: -15.375018119812012
    7. '(
' → logprob: -15.500018119812012
    8. '(div' → logprob: -16.000017166137695
    9. ' dist' → logprob: -16.750017166137695
    10. '	dist' → logprob: -16.875017166137695

Token 205: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.093505099765025e-05
    2. '[' → logprob: -11.625020980834961
    3. 'v' → logprob: -12.125020980834961
    4. '[n' → logprob: -12.750020980834961
    5. '[u' → logprob: -13.000020980834961
    6. '[x' → logprob: -15.000020980834961
    7. ' [' → logprob: -15.875020980834961
    8. '[s' → logprob: -16.00002098083496
    9. '[val' → logprob: -16.25002098083496
    10. '```' → logprob: -16.62502098083496

Token 206: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013134514447301626
    2. ' ,' → logprob: -7.50131368637085
    3. ',n' → logprob: -8.001313209533691
    4. ',m' → logprob: -8.376313209533691
    5. '],' → logprob: -9.376313209533691
    6. '[' → logprob: -10.126313209533691
    7. '[n' → logprob: -10.876313209533691
    8. '][' → logprob: -11.626313209533691
    9. '   ' → logprob: -11.751313209533691
    10. '[m' → logprob: -12.001313209533691

Token 207: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.005234713666141033
    2. ' matrix' → logprob: -5.255234718322754
    3. '	matrix' → logprob: -14.880234718322754
    4. '   ' → logprob: -15.005234718322754
    5. '           ' → logprob: -16.630233764648438
    6. '_matrix' → logprob: -17.130233764648438
    7. ' ' → logprob: -17.755233764648438
    8. 'Matrix' → logprob: -17.755233764648438
    9. 'm' → logprob: -18.380233764648438
    10. 'mat' → logprob: -18.505233764648438

Token 208: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -12.375009536743164
    3. '][' → logprob: -13.750009536743164
    4. 'v' → logprob: -14.125009536743164
    5. '[n' → logprob: -14.250009536743164
    6. ' [' → logprob: -14.375009536743164
    7. '[u' → logprob: -14.375009536743164
    8. ')[' → logprob: -14.875009536743164
    9. '[x' → logprob: -15.500009536743164
    10. '[val' → logprob: -15.625009536743164

Token 209: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00012023169983876869
    2. ']' → logprob: -9.375120162963867
    3. '[n' → logprob: -10.500120162963867
    4. ' ][' → logprob: -12.250120162963867
    5. '[' → logprob: -13.500120162963867
    6. '[v' → logprob: -14.875120162963867
    7. 'n' → logprob: -15.750120162963867
    8. '][_' → logprob: -15.875120162963867
    9. '"][' → logprob: -16.500120162963867
    10. '[next' → logprob: -16.625120162963867

Token 210: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.392202976712724e-06
    2. ' nxt' → logprob: -12.500006675720215
    3. '   ' → logprob: -13.875006675720215
    4. '[n' → logprob: -14.125006675720215
    5. ']' → logprob: -15.750006675720215
    6. ' ' → logprob: -15.875006675720215
    7. 'n't' → logprob: -16.0000057220459
    8. 'nt' → logprob: -16.0000057220459
    9. ''n' → logprob: -16.3750057220459
    10. '  ' → logprob: -16.7500057220459

Token 211: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.00011832444579340518
    2. 't' → logprob: -9.500118255615234
    3. 'x' → logprob: -10.375118255615234
    4. ']' → logprob: -11.750118255615234
    5. 'ext' → logprob: -13.750118255615234
    6. '][' → logprob: -13.750118255615234
    7. '```' → logprob: -14.875118255615234
    8. '[' → logprob: -15.000118255615234
    9. 'txt' → logprob: -15.250118255615234
    10. '])' → logprob: -15.375118255615234

Token 212: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0186720322817564
    2. ')' → logprob: -4.018671989440918
    3. '])
' → logprob: -8.018671989440918
    4. ']' → logprob: -9.393671989440918
    5. '))' → logprob: -10.143671989440918
    6. ')
' → logprob: -10.643671989440918
    7. ' ])' → logprob: -10.893671989440918
    8. '[' → logprob: -12.018671989440918
    9. ' )' → logprob: -12.018671989440918
    10. '])
' → logprob: -13.018671989440918

Token 213: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037118387408554554
    2. ' if' → logprob: -6.753711700439453
    3. '<|end|>' → logprob: -6.878711700439453
    4. '
' → logprob: -7.503711700439453
    5. 'if' → logprob: -7.878711700439453
    6. '<|end|>' → logprob: -8.503711700439453
    7. '		' → logprob: -9.253711700439453
    8. ')' → logprob: -9.503711700439453
    9. '            
' → logprob: -9.503711700439453
    10. '               ' → logprob: -9.753711700439453

Token 214: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5361028909683228
    2. 'if' (adapté à ' if') → logprob: -1.1611028909683228
    3. ' if' → logprob: -2.286102771759033
    4. '               ' → logprob: -9.286103248596191
    5. '<|end|>' → logprob: -10.661103248596191
    6. '       ' → logprob: -11.661103248596191
    7. '		' → logprob: -12.161103248596191
    8. ')' → logprob: -12.161103248596191
    9. '[' → logprob: -12.286103248596191
    10. '            
' → logprob: -12.411103248596191

Token 215: ' dist' (ID: 3601)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.9600740075111389
    2. 'temp' → logprob: -1.0850739479064941
    3. ' dist' → logprob: -1.7100739479064941
    4. 'dist' → logprob: -2.335073947906494
    5. ' not' → logprob: -6.835073947906494
    6. 'not' → logprob: -8.210074424743652
    7. '	temp' → logprob: -9.210074424743652
    8. '	dist' → logprob: -9.835074424743652
    9. '   ' → logprob: -10.335074424743652
    10. ' ' → logprob: -10.585074424743652

Token 216: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.008747652173042297
    2. '[temp' → logprob: -4.758747577667236
    3. '[tmp' → logprob: -9.758748054504395
    4. '[' → logprob: -10.508748054504395
    5. 'n' → logprob: -10.883748054504395
    6. '[v' → logprob: -11.133748054504395
    7. '[t' → logprob: -12.633748054504395
    8. '[next' → logprob: -12.633748054504395
    9. '[new' → logprob: -12.883748054504395
    10. '[u' → logprob: -13.133748054504395

Token 217: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.00014180023572407663
    2. 'x' → logprob: -8.875142097473145
    3. ']' → logprob: -13.750142097473145
    4. '[x' → logprob: -15.000142097473145
    5. 't' → logprob: -15.875142097473145
    6. 'ext' → logprob: -16.000141143798828
    7. '```' → logprob: -16.625141143798828
    8. '   ' → logprob: -17.000141143798828
    9. '[' → logprob: -17.125141143798828
    10. '][' → logprob: -17.500141143798828

Token 218: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11339262127876282
    2. ' >' → logprob: -2.2383925914764404
    3. ']' → logprob: -7.9883928298950195
    4. '==' → logprob: -8.98839282989502
    5. ' ==' → logprob: -10.23839282989502
    6. '[' → logprob: -10.23839282989502
    7. ']>' → logprob: -11.23839282989502
    8. ')' → logprob: -12.23839282989502
    9. ' ' → logprob: -12.73839282989502
    10. '[n' → logprob: -12.73839282989502

Token 219: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16023488342761993
    2. ' >' → logprob: -1.9102349281311035
    3. '[' → logprob: -12.785234451293945
    4. ' ' → logprob: -13.285234451293945
    5. '">' → logprob: -13.785234451293945
    6. '>

' → logprob: -14.285234451293945
    7. '==' → logprob: -14.410234451293945
    8. '>`' → logprob: -14.660234451293945
    9. '>b' → logprob: -15.035234451293945
    10. ' >
' → logprob: -15.285234451293945

Token 220: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.5759484171867371
    2. ' temp' → logprob: -0.8259484171867371
    3. '	temp' → logprob: -12.075948715209961
    4. '(temp' → logprob: -13.575948715209961
    5. '$temp' → logprob: -14.825948715209961
    6. '=temp' → logprob: -14.950948715209961
    7. ' ' → logprob: -15.325948715209961
    8. '[temp' → logprob: -15.450948715209961
    9. '_temp' → logprob: -15.700948715209961
    10. '   ' → logprob: -15.950948715209961

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002824016148224473
    2. ':
' → logprob: -6.002823829650879
    3. ' :' → logprob: -8.377823829650879
    4. ' and' → logprob: -10.127823829650879
    5. '):' → logprob: -10.127823829650879
    6. '):
' → logprob: -12.002823829650879
    7. '<|end|>' → logprob: -12.002823829650879
    8. ' :
' → logprob: -12.377823829650879
    9. '<|end|>' → logprob: -12.377823829650879
    10. '           ' → logprob: -12.877823829650879

Token 222: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0115047013387084
    2. ':
' → logprob: -5.136504650115967
    3. ':' → logprob: -5.511504650115967
    4. '):
' → logprob: -7.761504650115967
    5. '                
' → logprob: -8.136505126953125
    6. ' :
' → logprob: -8.636505126953125
    7. '           ' → logprob: -8.886505126953125
    8. ' :' → logprob: -9.386505126953125
    9. '```' → logprob: -9.636505126953125
    10. ',' → logprob: -10.386505126953125

Token 223: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.01616820879280567
    2. 'dist' (adapté à ' dist') → logprob: -4.141168117523193
    3. '               ' → logprob: -9.141168594360352
    4. '	dist' → logprob: -11.516168594360352
    5. '                   ' → logprob: -11.641168594360352
    6. '_dist' → logprob: -12.641168594360352
    7. '                ' → logprob: -13.891168594360352
    8. '(dist' → logprob: -14.016168594360352
    9. '
' → logprob: -14.391168594360352
    10. '```' → logprob: -14.766168594360352

Token 224: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.250005722045898
    3. '[u' → logprob: -14.625005722045898
    4. 'n' → logprob: -16.5000057220459
    5. '[v' → logprob: -16.7500057220459
    6. ' [' → logprob: -17.0000057220459
    7. '[
' → logprob: -17.0000057220459
    8. '[next' → logprob: -17.2500057220459
    9. '=n' → logprob: -18.5000057220459
    10. '[x' → logprob: -18.8750057220459

Token 225: 'xt' (ID: 711)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.03820879012346268
    2. 'xt' → logprob: -3.6632087230682373
    3. '[x' → logprob: -5.413208961486816
    4. 'xn' → logprob: -5.663208961486816
    5. 'x' → logprob: -5.788208961486816
    6. 'nx' → logprob: -8.163208961486816
    7. '[' → logprob: -8.663208961486816
    8. 'ext' → logprob: -8.663208961486816
    9. ' nxt' → logprob: -9.413208961486816
    10. 'n' → logprob: -10.163208961486816

Token 226: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2441108375787735
    2. '[n' → logprob: -1.7441108226776123
    3. '=' → logprob: -3.4941108226776123
    4. ']' → logprob: -4.494111061096191
    5. ']=' → logprob: -9.994111061096191
    6. ' nxt' → logprob: -9.994111061096191
    7. 'n' → logprob: -10.119111061096191
    8. '=n' → logprob: -10.244111061096191
    9. ' =
' → logprob: -10.869111061096191
    10. ' ' → logprob: -10.994111061096191

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602267622947693
    2. '=' → logprob: -1.910226821899414
    3. '[n' → logprob: -14.035226821899414
    4. '=n' → logprob: -14.160226821899414
    5. ' ' → logprob: -15.035226821899414
    6. ' =
' → logprob: -15.285226821899414
    7. ']' → logprob: -15.660226821899414
    8. '＝' → logprob: -16.160226821899414
    9. '<|end|>' → logprob: -16.910226821899414
    10. ']=' → logprob: -17.035226821899414

Token 228: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.6931476593017578
    2. 'temp' → logprob: -0.6931476593017578
    3. '	temp' → logprob: -15.443147659301758
    4. '(temp' → logprob: -16.193147659301758
    5. 'tmp' → logprob: -16.318147659301758
    6. '[temp' → logprob: -16.943147659301758
    7. '$temp' → logprob: -18.068147659301758
    8. '_temp' → logprob: -18.568147659301758
    9. ' tmp' → logprob: -18.693147659301758
    10. 't' → logprob: -19.318147659301758

Token 229: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06873665750026703
    2. 'return' (adapté à ' return') → logprob: -2.8187365531921387
    3. ' return' → logprob: -6.068736553192139
    4. '           ' → logprob: -6.068736553192139
    5. '       ' → logprob: -6.568736553192139
    6. '   ' → logprob: -7.943736553192139
    7. '              ' → logprob: -8.818737030029297
    8. '                   ' → logprob: -9.318737030029297
    9. 'break' → logprob: -10.818737030029297
    10. 'print' → logprob: -10.943737030029297

Token 232: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0031777136027812958
    2. ' dist' → logprob: -5.753177642822266
    3. '	dist' → logprob: -17.878177642822266
    4. '(dist' → logprob: -18.253177642822266
    5. ' ' → logprob: -21.128177642822266
    6. '_dist' → logprob: -22.003177642822266
    7. '.dist' → logprob: -22.878177642822266
    8. 'Dist' → logprob: -23.128177642822266
    9. ' ' → logprob: -23.128177642822266
    10. '[' → logprob: -23.378177642822266

Token 233: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05141081660985947
    2. ' m' → logprob: -3.5514109134674072
    3. 'k' → logprob: -3.9264109134674072
    4. ' k' → logprob: -6.801410675048828
    5. 'l' → logprob: -8.301410675048828
    6. 'q' → logprob: -8.801410675048828
    7. 's' → logprob: -9.926410675048828
    8. ' l' → logprob: -10.801410675048828
    9. 'a' → logprob: -11.051410675048828
    10. ' =' → logprob: -11.301410675048828

Token 237: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20154958963394165
    2. ' =' → logprob: -1.7015495300292969
    3. ',' → logprob: -9.201549530029297
    4. '=input' → logprob: -10.326549530029297
    5. '=n' → logprob: -14.451549530029297
    6. '=int' → logprob: -14.701549530029297
    7. '=sys' → logprob: -14.701549530029297
    8. '=line' → logprob: -15.576549530029297
    9. ' ' → logprob: -15.951549530029297
    10. '=list' → logprob: -16.326549530029297

Token 238: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.23626278340816498
    2. 's' → logprob: -1.8612627983093262
    3. 'k' → logprob: -3.736262798309326
    4. 'q' → logprob: -4.361262798309326
    5. 'start' → logprob: -4.361262798309326
    6. 'x' → logprob: -6.861262798309326
    7. 't' → logprob: -6.986262798309326
    8. 'L' → logprob: -7.236262798309326
    9. 'a' → logprob: -7.361262798309326
    10. ' l' → logprob: -7.486262798309326

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38689595460891724
    2. ' =' → logprob: -1.1368958950042725
    3. '=input' → logprob: -10.761896133422852
    4. ',' → logprob: -13.261896133422852
    5. '=sys' → logprob: -13.386896133422852
    6. ' ' → logprob: -15.761896133422852
    7. '=list' → logprob: -15.886896133422852
    8. 'input' → logprob: -16.26189613342285
    9. '=line' → logprob: -16.76189613342285
    10. '=user' → logprob: -18.38689613342285

Token 240: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12692853808403015
    2. ' map' → logprob: -2.1269285678863525
    3. 'input' → logprob: -15.001928329467773
    4. 'list' → logprob: -16.876928329467773
    5. '	map' → logprob: -17.251928329467773
    6. ' input' → logprob: -17.626928329467773
    7. '(map' → logprob: -17.876928329467773
    8. ' ' → logprob: -18.376928329467773
    9. '[' → logprob: -19.626928329467773
    10. ' list' → logprob: -20.126928329467773

Token 241: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014083284186199307
    2. 'int' → logprob: -6.626408100128174
    3. 'input' → logprob: -11.001408576965332
    4. '(' → logprob: -11.001408576965332
    5. '(input' → logprob: -11.251408576965332
    6. '[int' → logprob: -11.251408576965332
    7. 'map' → logprob: -12.501408576965332
    8. '(
' → logprob: -12.626408576965332
    9. '<int' → logprob: -12.626408576965332
    10. '=int' → logprob: -12.751408576965332

Token 242: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.642324686050415
    2. ',' → logprob: -1.392324686050415
    3. ',input' → logprob: -1.892324686050415
    4. '(input' → logprob: -2.892324686050415
    5. '(sys' → logprob: -4.767324447631836
    6. 'sys' → logprob: -4.892324447631836
    7. ' input' → logprob: -6.767324447631836
    8. '(' → logprob: -7.142324447631836
    9. '=input' → logprob: -8.017324447631836
    10. ')' → logprob: -8.267324447631836

Token 243: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019286326132714748
    2. ' input' → logprob: -6.251928806304932
    3. 'sys' → logprob: -17.251928329467773
    4. '(input' → logprob: -19.751928329467773
    5. '	input' → logprob: -20.876928329467773
    6. ' sys' → logprob: -20.876928329467773
    7. 'Input' → logprob: -21.876928329467773
    8. '=input' → logprob: -22.001928329467773
    9. ' ' → logprob: -22.126928329467773
    10. '<input' → logprob: -22.126928329467773

Token 244: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1637164789135568e-05
    2. '()' → logprob: -11.375011444091797
    3. ' ().' → logprob: -16.000011444091797
    4. '())' → logprob: -18.000011444091797
    5. '(' → logprob: -18.250011444091797
    6. ')' → logprob: -19.750011444091797
    7. '()[' → logprob: -20.500011444091797
    8. '()
' → logprob: -20.625011444091797
    9. '().__' → logprob: -20.875011444091797
    10. '()?.' → logprob: -21.000011444091797

Token 245: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0025349983479827642
    2. 'strip' → logprob: -6.002534866333008
    3. 'rstrip' → logprob: -9.752534866333008
    4. ' split' → logprob: -14.252534866333008
    5. 'read' → logprob: -15.377534866333008
    6. '().' → logprob: -16.002534866333008
    7. '(split' → logprob: -16.252534866333008
    8. ' strip' → logprob: -17.877534866333008
    9. '.split' → logprob: -18.377534866333008
    10. 'spl' → logprob: -19.252534866333008

Token 246: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009644880890846252
    2. '())' → logprob: -4.759644985198975
    3. '()' → logprob: -6.884644985198975
    4. '))' → logprob: -12.634644508361816
    5. '(' → logprob: -13.759644508361816
    6. ')`' → logprob: -14.134644508361816
    7. ')
' → logprob: -14.384644508361816
    8. ' )' → logprob: -14.509644508361816
    9. '())
' → logprob: -16.759645462036133
    10. '),' → logprob: -16.884645462036133

Token 247: 'info' (ID: 5789)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7673112750053406
    2. 'matrix' → logprob: -0.8923112750053406
    3. 'for' → logprob: -2.5173113346099854
    4. 'edges' → logprob: -3.2673113346099854
    5. 'g' → logprob: -6.142311096191406
    6. 'a' → logprob: -6.392311096191406
    7. 'u' → logprob: -7.142311096191406
    8. ' for' → logprob: -7.517311096191406
    9. ' graph' → logprob: -7.892311096191406
    10. 'data' → logprob: -7.892311096191406

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21317584812641144
    2. ' =' → logprob: -1.713175892829895
    3. 's' → logprob: -4.4631757736206055
    4. '_' → logprob: -10.213175773620605
    5. '()' → logprob: -10.463175773620605
    6. '_lines' → logprob: -10.588175773620605
    7. 'for' → logprob: -10.838175773620605
    8. '=[]' → logprob: -11.588175773620605
    9. '=[]
' → logprob: -11.838175773620605
    10. '_list' → logprob: -11.838175773620605

Token 249: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022417953237891197
    2. '[]' → logprob: -5.272418022155762
    3. ' [' → logprob: -5.522418022155762
    4. '[list' → logprob: -5.522418022155762
    5. '[input' → logprob: -6.272418022155762
    6. '[]
' → logprob: -6.522418022155762
    7. '[int' → logprob: -6.772418022155762
    8. '[n' → logprob: -6.772418022155762
    9. ' [[]' → logprob: -7.022418022155762
    10. '[m' → logprob: -7.397418022155762

Token 250: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007141007808968425
    2. ' for' → logprob: -7.250714302062988
    3. 'matrix' → logprob: -12.875714302062988
    4. '[' → logprob: -14.125714302062988
    5. '
' → logprob: -15.000714302062988
    6. 'edges' → logprob: -15.625714302062988
    7. '[
' → logprob: -16.250713348388672
    8. 'graph' → logprob: -16.375713348388672
    9. '	for' → logprob: -16.875713348388672
    10. '[n' → logprob: -17.125713348388672

Token 251: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006717743817716837
    2. ' _' → logprob: -5.006717681884766
    3. '_i' → logprob: -13.006717681884766
    4. ' ' → logprob: -16.256717681884766
    5. ' ' → logprob: -17.506717681884766
    6. '   ' → logprob: -18.256717681884766
    7. 'i' → logprob: -18.256717681884766
    8. '__' → logprob: -18.256717681884766
    9. ' i' → logprob: -18.506717681884766
    10. '_=' → logprob: -19.006717681884766

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055408675223588943
    2. 'in' → logprob: -2.9304087162017822
    3. '_' → logprob: -7.680408477783203
    4. ' _' → logprob: -10.805408477783203
    5. ' ' → logprob: -10.805408477783203
    6. 'n' → logprob: -11.055408477783203
    7. '_in' → logprob: -13.305408477783203
    8. ',' → logprob: -13.430408477783203
    9. 's' → logprob: -13.680408477783203
    10. 'range' → logprob: -14.305408477783203

Token 253: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00671584764495492
    2. ' range' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.506715774536133
    4. '_' → logprob: -16.756715774536133
    5. 'in' → logprob: -16.756715774536133
    6. '  ' → logprob: -16.881715774536133
    7. 'r' → logprob: -17.131715774536133
    8. '	range' → logprob: -17.381715774536133
    9. '   ' → logprob: -17.506715774536133
    10. '(range' → logprob: -18.256715774536133

Token 254: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00027015688829123974
    2. 'm' → logprob: -8.250269889831543
    3. '(' → logprob: -11.875269889831543
    4. ' m' → logprob: -13.875269889831543
    5. '(n' → logprob: -14.000269889831543
    6. '	m' → logprob: -16.50027084350586
    7. ' (' → logprob: -17.00027084350586
    8. '[m' → logprob: -18.87527084350586
    9. '   ' → logprob: -19.25027084350586
    10. '(
' → logprob: -19.37527084350586

Token 255: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08919638395309448
    2. '):' → logprob: -2.4641964435577393
    3. '+' → logprob: -9.08919620513916
    4. '):
' → logprob: -9.58919620513916
    5. ')' → logprob: -10.08919620513916
    6. ':' → logprob: -11.21419620513916
    7. ' ):
' → logprob: -11.96419620513916
    8. '):

' → logprob: -13.21419620513916
    9. ':
' → logprob: -13.33919620513916
    10. ',' → logprob: -13.46419620513916

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5241642594337463
    2. 'u' → logprob: -1.7741641998291016
    3. ' u' → logprob: -1.7741641998291016
    4. 'a' → logprob: -3.0241641998291016
    5. ' line' → logprob: -4.524164199829102
    6. ' a' → logprob: -5.899164199829102
    7. ' s' → logprob: -5.899164199829102
    8. '	u' → logprob: -7.149164199829102
    9. 's' → logprob: -7.399164199829102
    10. 'line' → logprob: -7.649164199829102

Token 257: ' info' (ID: 5377)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5266057252883911
    2. 'a' → logprob: -0.9016057252883911
    3. ' u' → logprob: -6.276605606079102
    4. ' a' → logprob: -7.776605606079102
    5. 's' → logprob: -7.901605606079102
    6. 'x' → logprob: -7.901605606079102
    7. '   ' → logprob: -8.401605606079102
    8. ' ' → logprob: -9.901605606079102
    9. 'f' → logprob: -10.026605606079102
    10. 'v' → logprob: -10.651605606079102

Token 258: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2856503129005432
    2. ' =' → logprob: -1.4106502532958984
    3. '.append' → logprob: -5.535650253295898
    4. ' ' → logprob: -9.035650253295898
    5. '=input' → logprob: -9.285650253295898
    6. '.' → logprob: -9.910650253295898
    7. ' +=' → logprob: -10.035650253295898
    8. '+=' → logprob: -10.160650253295898
    9. '   ' → logprob: -10.410650253295898
    10. 's' → logprob: -10.535650253295898

Token 259: '(list' (ID: 13116)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.12998799979686737
    2. '(list' → logprob: -2.129987955093384
    3. 'tuple' → logprob: -5.879988193511963
    4. '(' → logprob: -9.129987716674805
    5. 'list' → logprob: -9.129987716674805
    6. ' tuple' → logprob: -10.129987716674805
    7. '=list' → logprob: -13.254987716674805
    8. '(*' → logprob: -13.879987716674805
    9. '(map' → logprob: -14.754987716674805
    10. ' list' → logprob: -15.004987716674805

Token 260: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007124318508431315
    2. 'map' → logprob: -7.2507123947143555
    3. '(' → logprob: -13.625712394714355
    4. ' map' → logprob: -14.250712394714355
    5. '	map' → logprob: -15.125712394714355
    6. ',map' → logprob: -15.500712394714355
    7. '```' → logprob: -17.250713348388672
    8. '
' → logprob: -17.250713348388672
    9. '.map' → logprob: -17.750713348388672
    10. '(
' → logprob: -17.875713348388672

Token 261: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03084203414618969
    2. 'int' → logprob: -3.5308420658111572
    3. ',int' → logprob: -6.905841827392578
    4. ' int' → logprob: -9.780841827392578
    5. '[int' → logprob: -11.655841827392578
    6. '(' → logprob: -11.905841827392578
    7. '=int' → logprob: -12.530841827392578
    8. '```' → logprob: -12.655841827392578
    9. '<int' → logprob: -13.030841827392578
    10. ',' → logprob: -13.155841827392578

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2818596661090851
    2. ',input' → logprob: -1.4068596363067627
    3. '(),' → logprob: -8.156859397888184
    4. 'input' → logprob: -8.656859397888184
    5. ' ,' → logprob: -9.281859397888184
    6. ',int' → logprob: -9.406859397888184
    7. '(input' → logprob: -9.906859397888184
    8. '   ' → logprob: -11.656859397888184
    9. '```' → logprob: -12.531859397888184
    10. '(' → logprob: -12.781859397888184

Token 263: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023245712742209435
    2. ' input' → logprob: -3.7732458114624023
    3. '	input' → logprob: -17.148244857788086
    4. ' ' → logprob: -17.273244857788086
    5. ',input' → logprob: -17.273244857788086
    6. '(input' → logprob: -17.648244857788086
    7. 'sys' → logprob: -18.273244857788086
    8. '=input' → logprob: -18.523244857788086
    9. '   ' → logprob: -18.773244857788086
    10. '<input' → logprob: -18.898244857788086

Token 264: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.292907877039397e-06
    2. '()' → logprob: -12.75000286102295
    3. '.readline' → logprob: -16.000003814697266
    4. '   ' → logprob: -16.500003814697266
    5. '(' → logprob: -16.625003814697266
    6. '.split' → logprob: -17.125003814697266
    7. '()
' → logprob: -17.750003814697266
    8. '().__' → logprob: -18.125003814697266
    9. ' ().' → logprob: -18.125003814697266
    10. '	' → logprob: -18.875003814697266

Token 265: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0683535037969705e-05
    2. 'strip' → logprob: -11.50001049041748
    3. 'rstrip' → logprob: -15.00001049041748
    4. ' split' → logprob: -15.75001049041748
    5. 'read' → logprob: -16.750011444091797
    6. '(split' → logprob: -17.125011444091797
    7. 'spl' → logprob: -18.625011444091797
    8. '.split' → logprob: -20.875011444091797
    9. 'str' → logprob: -21.500011444091797
    10. 'plit' → logprob: -22.125011444091797

Token 266: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.16755960881710052
    2. ')))' → logprob: -2.0425596237182617
    3. '()))' → logprob: -4.167559623718262
    4. '()' → logprob: -4.792559623718262
    5. '())))
' → logprob: -7.667559623718262
    6. '())' → logprob: -8.792559623718262
    7. '()));' → logprob: -10.042559623718262
    8. '))' → logprob: -10.667559623718262
    9. '))))' → logprob: -10.792559623718262
    10. '().' → logprob: -10.917559623718262

Token 267: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38935646414756775
    2. '))' → logprob: -1.1393564939498901
    3. ')))' → logprob: -7.13935661315918
    4. ')
' → logprob: -7.51435661315918
    5. '[' → logprob: -8.01435661315918
    6. '))
' → logprob: -8.38935661315918
    7. '   ' → logprob: -8.51435661315918
    8. '[:-' → logprob: -10.01435661315918
    9. '
' → logprob: -10.13935661315918
    10. '[i' → logprob: -10.26435661315918

Token 268: 'q' (ID: 80)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22986075282096863
    2. '           ' → logprob: -1.729860782623291
    3. '       ' → logprob: -4.104860782623291
    4. '                   ' → logprob: -5.479860782623291
    5. '   ' → logprob: -5.979860782623291
    6. 'info' → logprob: -6.729860782623291
    7. '			' → logprob: -7.104860782623291
    8. '		' → logprob: -7.354860782623291
    9. '	' → logprob: -8.479860305786133
    10. '<|end|>' → logprob: -8.479860305786133

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007002840866334736
    2. 'u' → logprob: -7.8757004737854
    3. '=' → logprob: -8.125699996948242
    4. 'ue' → logprob: -11.250699996948242
    5. ',' → logprob: -12.875699996948242
    6. 's' → logprob: -13.125699996948242
    7. ' =
' → logprob: -13.250699996948242
    8. '   ' → logprob: -14.125699996948242
    9. '=[]' → logprob: -14.625699996948242
    10. 't' → logprob: -14.750699996948242

Token 270: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003666467731818557
    2. ' int' → logprob: -5.628666400909424
    3. '[]' → logprob: -10.003666877746582
    4. '[int' → logprob: -11.003666877746582
    5. ' []' → logprob: -12.878666877746582
    6. '(int' → logprob: -14.253666877746582
    7. '[]
' → logprob: -15.003666877746582
    8. ' ' → logprob: -15.503666877746582
    9. '  ' → logprob: -15.628666877746582
    10. '<int' → logprob: -15.878666877746582

Token 271: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -13.12500286102295
    3. 'input' → logprob: -13.87500286102295
    4. ' (' → logprob: -15.12500286102295
    5. '=input' → logprob: -18.000003814697266
    6. '()' → logprob: -18.250003814697266
    7. '(in' → logprob: -20.375003814697266
    8. ' input' → logprob: -20.500003814697266
    9. '(int' → logprob: -20.625003814697266
    10. ',input' → logprob: -20.750003814697266

Token 272: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.230385422706604
    2. '())' → logprob: -1.730385422706604
    3. '()' → logprob: -3.7303853034973145
    4. '())
' → logprob: -5.9803853034973145
    5. ')
' → logprob: -6.2303853034973145
    6. '()
' → logprob: -9.605385780334473
    7. '(' → logprob: -12.855385780334473
    8. ' )' → logprob: -13.230385780334473
    9. '())
' → logprob: -13.855385780334473
    10. ')
' → logprob: -13.980385780334473

Token 273: 'query' (ID: 2975)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6384106874465942
    2. 'graph' → logprob: -1.0134106874465942
    3. 'matrix' → logprob: -2.6384105682373047
    4. 'edges' → logprob: -4.013410568237305
    5. 'g' → logprob: -5.013410568237305
    6. 'answers' → logprob: -6.013410568237305
    7. 'dist' → logprob: -6.263410568237305
    8. 'result' → logprob: -6.763410568237305
    9. 'answer' → logprob: -7.013410568237305
    10. 'queries' → logprob: -7.013410568237305

Token 274: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1242528185248375
    2. ' =' → logprob: -2.3742527961730957
    3. '=' → logprob: -3.7492527961730957
    4. '_' → logprob: -9.499253273010254
    5. ' ' → logprob: -10.124253273010254
    6. ' s' → logprob: -10.249253273010254
    7. '=[]' → logprob: -10.249253273010254
    8. ',' → logprob: -11.999253273010254
    9. '[]' → logprob: -12.249253273010254
    10. '  ' → logprob: -12.249253273010254

Token 275: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10099952667951584
    2. '[' → logprob: -2.850999593734741
    3. ' []' → logprob: -3.850999593734741
    4. ' [' → logprob: -4.475999355316162
    5. '[int' → logprob: -6.100999355316162
    6. '[list' → logprob: -6.350999355316162
    7. '[q' → logprob: -7.475999355316162
    8. '[]
' → logprob: -7.975999355316162
    9. '[input' → logprob: -8.10099983215332
    10. '[s' → logprob: -9.85099983215332

Token 276: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005249176174402237
    2. ' for' → logprob: -5.2552490234375
    3. 'query' → logprob: -11.6302490234375
    4. '<|end|>' → logprob: -12.8802490234375
    5. '	for' → logprob: -13.1302490234375
    6. '[' → logprob: -14.1302490234375
    7. '
' → logprob: -14.7552490234375
    8. '[
' → logprob: -15.2552490234375
    9. '[]' → logprob: -15.6302490234375
    10. 'q' → logprob: -16.3802490234375

Token 277: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00487495819106698
    2. '_i' → logprob: -5.504875183105469
    3. ' _' → logprob: -7.254875183105469
    4. 'i' → logprob: -9.504875183105469
    5. ' i' → logprob: -11.129875183105469
    6. '_j' → logprob: -15.504875183105469
    7. '_=' → logprob: -16.50487518310547
    8. ' ' → logprob: -17.50487518310547
    9. '   ' → logprob: -18.37987518310547
    10. '__' → logprob: -18.75487518310547

Token 278: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038072481751441956
    2. 'in' → logprob: -3.2880725860595703
    3. '_' → logprob: -10.78807258605957
    4. ' ' → logprob: -12.16307258605957
    5. 'n' → logprob: -12.66307258605957
    6. '=' → logprob: -14.66307258605957
    7. 's' → logprob: -15.41307258605957
    8. '  ' → logprob: -15.53807258605957
    9. 'range' → logprob: -15.53807258605957
    10. 'i' → logprob: -15.66307258605957

Token 279: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008616108447313309
    2. ' range' → logprob: -4.758615970611572
    3. 'query' → logprob: -13.88361644744873
    4. 'in' → logprob: -14.63361644744873
    5. ' ' → logprob: -16.633615493774414
    6. ' in' → logprob: -17.633615493774414
    7. 'q' → logprob: -17.883615493774414
    8. '_' → logprob: -18.133615493774414
    9. '	range' → logprob: -18.383615493774414
    10. '  ' → logprob: -18.383615493774414

Token 280: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -9.102680633077398e-05
    2. 'q' → logprob: -9.500090599060059
    3. '(' → logprob: -11.125090599060059
    4. 'range' → logprob: -14.000090599060059
    5. '(range' → logprob: -15.250090599060059
    6. ' (' → logprob: -15.375090599060059
    7. '(query' → logprob: -17.125091552734375
    8. '(int' → logprob: -18.125091552734375
    9. 'in' → logprob: -18.375091552734375
    10. '(n' → logprob: -18.375091552734375

Token 281: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006092322990298271
    2. '):' → logprob: -5.131092548370361
    3. ')' → logprob: -9.631092071533203
    4. '):
' → logprob: -10.381092071533203
    5. 'in' → logprob: -11.131092071533203
    6. ' in' → logprob: -11.256092071533203
    7. '():
' → logprob: -11.256092071533203
    8. ':
' → logprob: -11.631092071533203
    9. ' ):
' → logprob: -12.506092071533203
    10. '   ' → logprob: -13.006092071533203

Token 282: '   ' (ID: 271)
  Prédit: ' query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.7459112405776978
    2. '   ' → logprob: -1.3709112405776978
    3. 'query' → logprob: -1.9959112405776978
    4. '	query' → logprob: -1.9959112405776978
    5. '(query' → logprob: -11.120911598205566
    6. '=query' → logprob: -11.870911598205566
    7. '_query' → logprob: -12.620911598205566
    8. '\t' → logprob: -12.620911598205566
    9. '   ' → logprob: -12.995911598205566
    10. '	line' → logprob: -13.370911598205566

Token 283: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' (adapté à ' query') → logprob: -0.02177160419523716
    2. ' query' → logprob: -3.8967716693878174
    3. 'u' → logprob: -7.146771430969238
    4. 'a' → logprob: -9.271771430969238
    5. 'x' → logprob: -9.396771430969238
    6. ' u' → logprob: -9.521771430969238
    7. '   ' → logprob: -9.521771430969238
    8. 's' → logprob: -9.771771430969238
    9. '	query' → logprob: -10.896771430969238
    10. 't' → logprob: -11.521771430969238

Token 284: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023114902898669243
    2. '=' → logprob: -4.2731146812438965
    3. '.' → logprob: -4.7731146812438965
    4. ' =' → logprob: -8.273115158081055
    5. '.extend' → logprob: -9.898115158081055
    6. '+=' → logprob: -10.273115158081055
    7. ' .' → logprob: -10.273115158081055
    8. ' +=' → logprob: -10.773115158081055
    9. '.=' → logprob: -11.148115158081055
    10. '.app' → logprob: -11.648115158081055

Token 285: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.02329089865088463
    2. '(tuple' → logprob: -3.7732908725738525
    3. '(' → logprob: -10.773290634155273
    4. 'list' → logprob: -10.773290634155273
    5. 'tuple' → logprob: -12.898290634155273
    6. '=list' → logprob: -15.023290634155273
    7. '(int' → logprob: -15.523290634155273
    8. '(map' → logprob: -15.523290634155273
    9. ' list' → logprob: -15.648290634155273
    10. ' tuple' → logprob: -16.398290634155273

Token 286: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0024814847856760025
    2. 'map' → logprob: -6.002481460571289
    3. ',map' → logprob: -13.002481460571289
    4. '(int' → logprob: -13.252481460571289
    5. ' map' → logprob: -14.377481460571289
    6. '(' → logprob: -14.502481460571289
    7. '	map' → logprob: -15.002481460571289
    8. 'int' → logprob: -15.627481460571289
    9. '(
' → logprob: -16.00248146057129
    10. ' (' → logprob: -17.62748146057129

Token 287: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02371172420680523
    2. '(int' → logprob: -3.773711681365967
    3. ',int' → logprob: -8.023712158203125
    4. ' int' → logprob: -9.148712158203125
    5. '[int' → logprob: -11.273712158203125
    6. '=int' → logprob: -11.773712158203125
    7. ',' → logprob: -12.523712158203125
    8. '<int' → logprob: -13.023712158203125
    9. '```' → logprob: -13.148712158203125
    10. '   ' → logprob: -13.148712158203125

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027553332969546318
    2. ',int' → logprob: -4.027553558349609
    3. ',input' → logprob: -4.902553558349609
    4. '(int' → logprob: -6.777553558349609
    5. 'int' → logprob: -7.277553558349609
    6. ' ,' → logprob: -9.90255355834961
    7. '(),' → logprob: -11.02755355834961
    8. 'input' → logprob: -11.15255355834961
    9. '<int' → logprob: -12.27755355834961
    10. '[int' → logprob: -12.65255355834961

Token 289: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04945693910121918
    2. ' input' → logprob: -3.049456834793091
    3. 'int' → logprob: -7.04945707321167
    4. ' int' → logprob: -13.799456596374512
    5. ',input' → logprob: -16.424457550048828
    6. 'lambda' → logprob: -16.799457550048828
    7. '(input' → logprob: -17.049457550048828
    8. 'map' → logprob: -17.674457550048828
    9. 'str' → logprob: -18.049457550048828
    10. ' ' → logprob: -18.174457550048828

Token 290: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.895480277715251e-06
    2. '.split' → logprob: -12.375008583068848
    3. '())))' → logprob: -13.500008583068848
    4. ')))' → logprob: -13.750008583068848
    5. '()' → logprob: -14.250008583068848
    6. '.' → logprob: -14.500008583068848
    7. '.readline' → logprob: -14.875008583068848
    8. '()))' → logprob: -15.000008583068848
    9. ' ().' → logprob: -16.250009536743164
    10. ' .' → logprob: -16.625009536743164

Token 291: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.438573680294212e-06
    2. 'strip' → logprob: -12.250005722045898
    3. 'read' → logprob: -14.750005722045898
    4. '().' → logprob: -16.0000057220459
    5. ' split' → logprob: -16.8750057220459
    6. 'spl' → logprob: -17.1250057220459
    7. 'rstrip' → logprob: -17.2500057220459
    8. 'sys' → logprob: -17.7500057220459
    9. '.split' → logprob: -18.0000057220459
    10. 'str' → logprob: -18.1250057220459

Token 292: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.37402039766311646
    2. ')))' → logprob: -1.2490203380584717
    3. '()))' → logprob: -3.9990203380584717
    4. '()' → logprob: -5.124020576477051
    5. '())))
' → logprob: -7.249020576477051
    6. '))' → logprob: -9.24902057647705
    7. '))))' → logprob: -9.74902057647705
    8. ' ' → logprob: -10.62402057647705
    9. '   ' → logprob: -10.74902057647705
    10. '())' → logprob: -11.49902057647705

Token 293: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008869222365319729
    2. '))' → logprob: -7.125886917114258
    3. '<|end|>' → logprob: -10.000886917114258
    4. ')
' → logprob: -12.000886917114258
    5. ')n' → logprob: -12.125886917114258
    6. ' )' → logprob: -12.250886917114258
    7. '   ' → logprob: -12.750886917114258
    8. ')}' → logprob: -12.875886917114258
    9. ')))' → logprob: -13.250886917114258
    10. '
' → logprob: -13.250886917114258

Token 294: '#' (ID: 2)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30272188782691956
    2. '           ' → logprob: -1.6777218580245972
    3. '   ' → logprob: -2.8027219772338867
    4. '               ' → logprob: -5.552721977233887
    5. '	' → logprob: -5.927721977233887
    6. '<|end|>' → logprob: -6.052721977233887
    7. '		' → logprob: -6.802721977233887
    8. '                   ' → logprob: -7.177721977233887
    9. 'for' → logprob: -7.427721977233887
    10. 'matrix' → logprob: -7.802721977233887

Token 295: ' Mat' (ID: 9926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41012197732925415
    2. 'matrix' → logprob: -1.4101219177246094
    3. 'graph' → logprob: -2.5351219177246094
    4. '#' → logprob: -5.160121917724609
    5. 'adj' → logprob: -6.410121917724609
    6. 'INF' → logprob: -6.410121917724609
    7. 'dist' → logprob: -6.785121917724609
    8. 'g' → logprob: -7.160121917724609
    9. 'import' → logprob: -7.785121917724609
    10. ' for' → logprob: -7.910121917724609

Token 296: 'rice' (ID: 44478)
  Prédit: 'rix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rix' → logprob: -0.00869422685354948
    2. 'riz' → logprob: -5.008694171905518
    3. 'tr' → logprob: -6.758694171905518
    4. 'r' → logprob: -7.633694171905518
    5. 'rice' → logprob: -8.258694648742676
    6. 'atrix' → logprob: -10.883694648742676
    7. 'rices' → logprob: -11.758694648742676
    8. '
' → logprob: -11.883694648742676
    9. 'ris' → logprob: -11.883694648742676
    10. '#' → logprob: -12.133694648742676

Token 297: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12860383093357086
    2. 'matrix' → logprob: -2.753603935241699
    3. '=' → logprob: -3.503603935241699
    4. '[' → logprob: -5.503603935241699
    5. '(matrix' → logprob: -5.753603935241699
    6. 'graph' → logprob: -5.878603935241699
    7. '[n' → logprob: -6.003603935241699
    8. 'size' → logprob: -6.003603935241699
    9. '[m' → logprob: -6.378603935241699
    10. 'n' → logprob: -6.753603935241699

Token 298: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.006507301703095436
    2. ' adjacency' → logprob: -5.881507396697998
    3. 'ad' → logprob: -6.381507396697998
    4. ' adj' → logprob: -6.881507396697998
    5. 'distance' → logprob: -8.00650691986084
    6. '_adj' → logprob: -9.00650691986084
    7. ''ad' → logprob: -9.25650691986084
    8. 'dist' → logprob: -9.50650691986084
    9. 'istance' → logprob: -9.63150691986084
    10. 'n' → logprob: -10.38150691986084

Token 299: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.029977139085531235
    2. 'j' → logprob: -3.5299770832061768
    3. 'ja' → logprob: -8.779976844787598
    4. 'jec' → logprob: -10.404976844787598
    5. 'jc' → logprob: -11.154976844787598
    6. '
' → logprob: -12.154976844787598
    7. '[j' → logprob: -12.529976844787598
    8. 'jaz' → logprob: -12.779976844787598
    9. 'jm' → logprob: -13.529976844787598
    10. ' jac' → logprob: -13.779976844787598

Token 300: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.00035369666875340044
    2. 'e' → logprob: -9.125353813171387
    3. 'ance' → logprob: -10.125353813171387
    4. 'ente' → logprob: -10.250353813171387
    5. 'cence' → logprob: -10.500353813171387
    6. 'ac' → logprob: -10.750353813171387
    7. 'en' → logprob: -11.125353813171387
    8. 'ences' → logprob: -11.375353813171387
    9. 'rence' → logprob: -11.375353813171387
    10. '```' → logprob: -11.875353813171387

Token 301: ' (' (ID: 350)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.07994704693555832
    2. ' =' → logprob: -3.079946994781494
    3. ' matrix' → logprob: -3.954946994781494
    4. 'graph' → logprob: -5.579946994781494
    5. '=' → logprob: -5.954946994781494
    6. '(matrix' → logprob: -7.454946994781494
    7. 'import' → logprob: -7.579946994781494
    8. '
' → logprob: -7.704946994781494
    9. 'mat' → logprob: -7.829946994781494
    10. 'm' → logprob: -7.954946994781494

Token 302: 'gr' (ID: 896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8033276200294495
    2. 'matrix' → logprob: -1.0533275604248047
    3. 'graph' → logprob: -2.6783275604248047
    4. 'n' → logprob: -3.3033275604248047
    5. 'INF' → logprob: -3.3033275604248047
    6. 'size' → logprob: -4.053327560424805
    7. ' matrix' → logprob: -4.303327560424805
    8. '[n' → logprob: -5.303327560424805
    9. '[' → logprob: -5.803327560424805
    10. 'adj' → logprob: -5.803327560424805

Token 303: 'aphe' (ID: 98856)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.8833549618721008
    2. 'e' → logprob: -1.633354902267456
    3. 'r' → logprob: -1.758354902267456
    4. 'rap' → logprob: -3.383354902267456
    5. 'u' → logprob: -3.383354902267456
    6. 'aph' → logprob: -4.008355140686035
    7. '[' → logprob: -4.008355140686035
    8. '```' → logprob: -4.008355140686035
    9. ')' → logprob: -4.133355140686035
    10. 'l' → logprob: -4.758355140686035

Token 304: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030723391100764275
    2. ')
' → logprob: -4.030723571777344
    3. ',' → logprob: -5.030723571777344
    4. ' =' → logprob: -6.155723571777344
    5. ' )' → logprob: -6.655723571777344
    6. 'import' → logprob: -7.780723571777344
    7. 'matrix' → logprob: -7.905723571777344
    8. ',
' → logprob: -8.030723571777344
    9. 'n' → logprob: -8.155723571777344
    10. 'size' → logprob: -8.530723571777344

Token 305: 'matrix' (ID: 37307)
  Prédit: 'matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.10781927406787872
    2. 'graph' → logprob: -2.6078193187713623
    3. ' matrix' → logprob: -3.7328193187713623
    4. ' graph' → logprob: -5.607819080352783
    5. 'adj' → logprob: -7.357819080352783
    6. 'mat' → logprob: -9.232819557189941
    7. 'distance' → logprob: -9.482819557189941
    8. 'import' → logprob: -10.482819557189941
    9. '```' → logprob: -11.357819557189941
    10. 'size' → logprob: -11.607819557189941

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740891754627228
    2. '=' → logprob: -0.9740891456604004
    3. '=[[' → logprob: -12.099089622497559
    4. '=
' → logprob: -12.974089622497559
    5. '=[' → logprob: -13.224089622497559
    6. '=[]' → logprob: -14.349089622497559
    7. ' =
' → logprob: -14.974089622497559
    8. '=[]
' → logprob: -15.099089622497559
    9. ' ' → logprob: -15.099089622497559
    10. 'import' → logprob: -15.474089622497559

Token 307: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0019308974733576179
    2. ' [[' → logprob: -6.2519307136535645
    3. '[' → logprob: -13.001931190490723
    4. ' [' → logprob: -16.876930236816406
    5. '[
' → logprob: -18.126930236816406
    6. '([[' → logprob: -19.251930236816406
    7. '[]
' → logprob: -19.501930236816406
    8. '[['' → logprob: -20.126930236816406
    9. ' ' → logprob: -20.501930236816406
    10. '[]' → logprob: -20.626930236816406

Token 308: 'for' (ID: 1938)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.40113309025764465
    2. 'for' → logprob: -1.1511330604553223
    3. ' for' → logprob: -4.901133060455322
    4. ' [[' → logprob: -5.401133060455322
    5. '[' → logprob: -6.151133060455322
    6. '[]' → logprob: -10.15113353729248
    7. '[]
' → logprob: -11.02613353729248
    8. '[
' → logprob: -11.27613353729248
    9. ' [' → logprob: -12.02613353729248
    10. '
' → logprob: -13.77613353729248

Token 309: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.044551752507686615
    2. '_i' → logprob: -3.2945518493652344
    3. 'i' → logprob: -5.044551849365234
    4. ' i' → logprob: -10.919551849365234
    5. ' _' → logprob: -11.169551849365234
    6. '_range' → logprob: -11.419551849365234
    7. '_in' → logprob: -14.044551849365234
    8. '   ' → logprob: -15.419551849365234
    9. '_init' → logprob: -16.169551849365234
    10. '	i' → logprob: -16.794551849365234

Token 310: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5233622193336487
    2. 'in' → logprob: -0.8983622193336487
    3. '_' → logprob: -9.523362159729004
    4. 'n' → logprob: -9.523362159729004
    5. ' ' → logprob: -10.773362159729004
    6. 'In' → logprob: -11.898362159729004
    7. 'import' → logprob: -11.898362159729004
    8. 'i' → logprob: -12.148362159729004
    9. '_in' → logprob: -12.148362159729004
    10. '	in' → logprob: -12.148362159729004

Token 311: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008616581559181213
    2. ' range' → logprob: -4.7586164474487305
    3. 'in' → logprob: -13.50861644744873
    4. ' ' → logprob: -14.75861644744873
    5. '   ' → logprob: -16.133617401123047
    6. '  ' → logprob: -16.883617401123047
    7. 'n' → logprob: -17.133617401123047
    8. '	range' → logprob: -17.258617401123047
    9. ' in' → logprob: -17.383617401123047
    10. '0' → logprob: -17.633617401123047

Token 312: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010961392894387245
    2. 'n' → logprob: -4.760961532592773
    3. 'in' → logprob: -6.260961532592773
    4. ' range' → logprob: -7.760961532592773
    5. '(n' → logprob: -12.385961532592773
    6. '(range' → logprob: -13.010961532592773
    7. ' in' → logprob: -13.135961532592773
    8. '   ' → logprob: -15.760961532592773
    9. '_' → logprob: -16.010961532592773
    10. ' n' → logprob: -16.885961532592773

Token 313: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5441116094589233
    2. '):
' → logprob: -0.9191116094589233
    3. '):' → logprob: -4.294111728668213
    4. 'in' → logprob: -5.794111728668213
    5. ' in' → logprob: -6.544111728668213
    6. ',' → logprob: -7.044111728668213
    7. ']' → logprob: -7.419111728668213
    8. '=' → logprob: -8.419111251831055
    9. '   ' → logprob: -8.419111251831055
    10. '+' → logprob: -9.044111251831055

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003524171421304345
    2. '	matrix' → logprob: -6.003524303436279
    3. ' matrix' → logprob: -7.003524303436279
    4. 'matrix' → logprob: -9.003523826599121
    5. '   ' → logprob: -11.503523826599121
    6. '	m' → logprob: -13.253523826599121
    7. ' ' → logprob: -14.003523826599121
    8. '[m' → logprob: -14.128523826599121
    9. '  ' → logprob: -14.253523826599121
    10. '	row' → logprob: -14.753523826599121

Token 315: ' row' (ID: 5225)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.002629161812365055
    2. ' matrix' → logprob: -6.002629280090332
    3. '	matrix' → logprob: -9.252629280090332
    4. '   ' → logprob: -9.877629280090332
    5. 'row' (adapté à ' row') → logprob: -12.002629280090332
    6. '_matrix' → logprob: -17.252628326416016
    7. 'line' → logprob: -17.502628326416016
    8. ' row' → logprob: -17.752628326416016
    9. ' ' → logprob: -18.252628326416016
    10. 'Matrix' → logprob: -18.377628326416016

Token 316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029808353632688522
    2. ' =' → logprob: -3.529808282852173
    3. '.append' → logprob: -9.904808044433594
    4. '=[]' → logprob: -11.904808044433594
    5. '=[' → logprob: -14.279808044433594
    6. ' =[' → logprob: -16.029808044433594
    7. '=[]
' → logprob: -16.404808044433594
    8. 'append' → logprob: -16.529808044433594
    9. '＝' → logprob: -16.529808044433594
    10. ' ' → logprob: -16.779808044433594

Token 317: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008425032719969749
    2. ' [' → logprob: -8.125842094421387
    3. '[input' → logprob: -8.125842094421387
    4. '[]' → logprob: -8.750842094421387
    5. '[int' → logprob: -10.625842094421387
    6. '[list' → logprob: -11.250842094421387
    7. '[n' → logprob: -11.375842094421387
    8. '[m' → logprob: -11.375842094421387
    9. '[in' → logprob: -11.875842094421387
    10. '   ' → logprob: -12.250842094421387

Token 318: '   ' (ID: 271)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.7045217156410217
    2. '   ' → logprob: -1.329521656036377
    3. ' for' → logprob: -1.704521656036377
    4. 'for' → logprob: -2.829521656036377
    5. '       ' → logprob: -9.204522132873535
    6. ' ' → logprob: -10.829522132873535
    7. '	row' → logprob: -11.829522132873535
    8. '	   ' → logprob: -11.954522132873535
    9. '   ' → logprob: -12.204522132873535
    10. '  ' → logprob: -13.079522132873535

Token 319: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.019172219559550285
    2. ' for' → logprob: -4.019172191619873
    3. '   ' → logprob: -7.019172191619873
    4. '	for' → logprob: -9.019172668457031
    5. ' ' → logprob: -12.144172668457031
    6. '       ' → logprob: -14.394172668457031
    7. '  ' → logprob: -15.144172668457031
    8. 'row' → logprob: -16.89417266845703
    9. ' ' → logprob: -17.51917266845703
    10. '\t' → logprob: -17.89417266845703

Token 320: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001985140610486269
    2. ' j' → logprob: -6.2519850730896
    3. 'range' → logprob: -10.126985549926758
    4. '0' → logprob: -11.501985549926758
    5. '_j' → logprob: -12.501985549926758
    6. ' range' → logprob: -13.501985549926758
    7. '   ' → logprob: -14.376985549926758
    8. '_' → logprob: -14.876985549926758
    9. ' ' → logprob: -15.501985549926758
    10. '	j' → logprob: -15.626985549926758

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023257708176970482
    2. 'in' → logprob: -3.7732577323913574
    3. ' ' → logprob: -11.8982572555542
    4. 'n' → logprob: -13.2732572555542
    5. '   ' → logprob: -14.1482572555542
    6. '	in' → logprob: -14.1482572555542
    7. 'import' → logprob: -14.2732572555542
    8. '0' → logprob: -15.3982572555542
    9. '    ' → logprob: -15.3982572555542
    10. '=' → logprob: -15.5232572555542

Token 322: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023247109726071358
    2. ' range' → logprob: -3.773247003555298
    3. '(range' → logprob: -13.398246765136719
    4. ' ' → logprob: -16.52324676513672
    5. '	range' → logprob: -17.39824676513672
    6. '0' → logprob: -17.89824676513672
    7. '   ' → logprob: -17.89824676513672
    8. 'in' → logprob: -18.14824676513672
    9. '(' → logprob: -18.27324676513672
    10. ')' → logprob: -18.64824676513672

Token 323: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00024048985505942255
    2. 'n' → logprob: -8.500240325927734
    3. '(' → logprob: -10.500240325927734
    4. 'range' → logprob: -12.375240325927734
    5. ' (' → logprob: -13.000240325927734
    6. ' n' → logprob: -13.625240325927734
    7. ' range' → logprob: -14.250240325927734
    8. '(range' → logprob: -14.500240325927734
    9. 'in' → logprob: -15.125240325927734
    10. '	n' → logprob: -16.250240325927734

Token 324: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3330928087234497
    2. '):' → logprob: -1.3330928087234497
    3. ')' → logprob: -3.95809268951416
    4. ':' → logprob: -8.08309268951416
    5. ':
' → logprob: -9.45809268951416
    6. 'if' → logprob: -10.33309268951416
    7. '):

' → logprob: -10.45809268951416
    8. '):
' → logprob: -11.33309268951416
    9. ',' → logprob: -11.58309268951416
    10. '   ' → logprob: -11.58309268951416

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13669270277023315
    2. '   ' → logprob: -2.511692762374878
    3. ' if' → logprob: -3.136692762374878
    4. '	   ' → logprob: -7.136692523956299
    5. 'if' → logprob: -7.636692523956299
    6. '	if' → logprob: -7.636692523956299
    7. '	' → logprob: -7.761692523956299
    8. '0' → logprob: -8.261693000793457
    9. '    ' → logprob: -8.636693000793457
    10. ' ' → logprob: -9.136693000793457

Token 326: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.391633540391922
    2. ' if' → logprob: -1.5166335105895996
    3. ' row' → logprob: -2.7666335105895996
    4. 'row' → logprob: -3.2666335105895996
    5. '   ' → logprob: -5.8916335105896
    6. '       ' → logprob: -7.1416335105896
    7. '           ' → logprob: -11.266633987426758
    8. ' ' → logprob: -11.891633987426758
    9. '    ' → logprob: -12.391633987426758
    10. '	row' → logprob: -12.641633987426758

Token 327: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005239564459770918
    2. ' i' → logprob: -5.255239486694336
    3. '	i' → logprob: -12.130239486694336
    4. ' ' → logprob: -15.380239486694336
    5. '   ' → logprob: -15.505239486694336
    6. ' ' → logprob: -17.380239486694336
    7. 'j' → logprob: -19.255239486694336
    8. '  ' → logprob: -19.255239486694336
    9. '    ' → logprob: -19.755239486694336
    10. '     ' → logprob: -20.630239486694336

Token 328: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0004936986370012164
    2. ' ==' → logprob: -7.62549352645874
    3. '!=' → logprob: -12.375494003295898
    4. '==
' → logprob: -14.250494003295898
    5. '=' → logprob: -14.625494003295898
    6. ']==' → logprob: -15.750494003295898
    7. '===' → logprob: -16.5004940032959
    8. ')==' → logprob: -17.3754940032959
    9. '()==' → logprob: -17.3754940032959
    10. ' ' → logprob: -17.5004940032959

Token 329: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00029708960209973156
    2. ' j' → logprob: -8.125297546386719
    3. '   ' → logprob: -14.375297546386719
    4. '	j' → logprob: -14.875297546386719
    5. '    ' → logprob: -17.25029754638672
    6. ' ' → logprob: -17.50029754638672
    7. '  ' → logprob: -18.25029754638672
    8. ' ' → logprob: -18.50029754638672
    9. '
' → logprob: -19.50029754638672
    10. '=j' → logprob: -19.50029754638672

Token 330: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5595225095748901
    2. ':
' → logprob: -0.9345225095748901
    3. 'else' → logprob: -3.6845226287841797
    4. '   ' → logprob: -5.43452262878418
    5. ' else' → logprob: -6.18452262878418
    6. '       ' → logprob: -6.43452262878418
    7. 'row' → logprob: -6.68452262878418
    8. '           ' → logprob: -7.05952262878418
    9. '):
' → logprob: -9.30952262878418
    10. ')' → logprob: -9.80952262878418

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007543585379607975
    2. 'row' → logprob: -8.000754356384277
    3. ' row' → logprob: -8.750754356384277
    4. '		' → logprob: -9.000754356384277
    5. '	       ' → logprob: -10.000754356384277
    6. '	row' → logprob: -11.125754356384277
    7. '       ' → logprob: -11.250754356384277
    8. '               ' → logprob: -11.500754356384277
    9. '   ' → logprob: -11.625754356384277
    10. '	   ' → logprob: -11.875754356384277

Token 332: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.06292800605297089
    2. ' row' → logprob: -2.8129279613494873
    3. '           ' → logprob: -7.687928199768066
    4. '0' → logprob: -7.812928199768066
    5. '   ' → logprob: -10.187928199768066
    6. '       ' → logprob: -10.187928199768066
    7. '               ' → logprob: -11.437928199768066
    8. ' ' → logprob: -11.812928199768066
    9. '	row' → logprob: -12.687928199768066
    10. ',row' → logprob: -16.06292724609375

Token 333: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00022833107504993677
    2. '.' → logprob: -8.750227928161621
    3. '=' → logprob: -9.750227928161621
    4. 'append' → logprob: -12.000227928161621
    5. '.extend' → logprob: -13.500227928161621
    6. ' .' → logprob: -13.625227928161621
    7. '+=' → logprob: -14.000227928161621
    8. ' =' → logprob: -14.625227928161621
    9. '.app' → logprob: -15.250227928161621
    10. '.=' → logprob: -15.375227928161621

Token 334: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.500011444091797
    4. '           ' → logprob: -14.750011444091797
    5. '               ' → logprob: -15.875011444091797
    6. '                   ' → logprob: -16.250011444091797
    7. '(' → logprob: -16.875011444091797
    8. '       ' → logprob: -17.750011444091797
    9. '                       ' → logprob: -18.500011444091797
    10. '  ' → logprob: -19.000011444091797

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'INF' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.125001907348633
    5. '۰' → logprob: -19.500001907348633
    6. '000' → logprob: -19.750001907348633
    7. '00' → logprob: -20.000001907348633
    8. '  ' → logprob: -20.625001907348633
    9. ')' → logprob: -21.125001907348633
    10. ' ' → logprob: -21.250001907348633

Token 336: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5466998219490051
    2. ')
' → logprob: -1.2966997623443604
    3. '       ' → logprob: -1.9216997623443604
    4. 'else' → logprob: -7.4217000007629395
    5. '   ' → logprob: -7.6717000007629395
    6. ' else' → logprob: -8.921699523925781
    7. ' )' → logprob: -10.421699523925781
    8. '	' → logprob: -10.546699523925781
    9. '<|end|>' → logprob: -10.546699523925781
    10. ')
' → logprob: -10.671699523925781

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5424301028251648
    2. 'else' → logprob: -0.9174301028251648
    3. ' else' → logprob: -4.2924299240112305
    4. '	' → logprob: -5.2924299240112305
    5. '	else' → logprob: -8.04242992401123
    6. '   ' → logprob: -10.41742992401123
    7. 'elif' → logprob: -10.79242992401123
    8. '<|end|>' → logprob: -10.91742992401123
    9. '```' → logprob: -11.29242992401123
    10. ',' → logprob: -12.16742992401123

Token 338: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2596099078655243
    2. '       ' → logprob: -1.5096099376678467
    3. ' else' → logprob: -4.884609699249268
    4. '   ' → logprob: -10.384610176086426
    5. '	else' → logprob: -10.509610176086426
    6. 'elif' → logprob: -10.509610176086426
    7. '	' → logprob: -13.384610176086426
    8. '<|end|>' → logprob: -13.884610176086426
    9. '           ' → logprob: -14.759610176086426
    10. 'elser' → logprob: -15.134610176086426

Token 339: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10170883685350418
    2. ':' → logprob: -2.7267088890075684
    3. ':
' → logprob: -3.4767088890075684
    4. ',' → logprob: -9.10170841217041
    5. '          ' → logprob: -9.35170841217041
    6. '       ' → logprob: -9.72670841217041
    7. '   ' → logprob: -10.72670841217041
    8. '		' → logprob: -10.85170841217041
    9. '	       ' → logprob: -11.10170841217041
    10. '.' → logprob: -11.85170841217041

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05045362934470177
    2. 'row' → logprob: -3.3004536628723145
    3. '   ' → logprob: -5.0504536628723145
    4. ' row' → logprob: -5.1754536628723145
    5. '       ' → logprob: -8.925453186035156
    6. '	row' → logprob: -9.175453186035156
    7. '		' → logprob: -11.175453186035156
    8. ' ' → logprob: -11.300453186035156
    9. '	       ' → logprob: -12.550453186035156
    10. '  ' → logprob: -13.300453186035156

Token 341: ' row' (ID: 5225)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0894850566983223
    2. 'row' (adapté à ' row') → logprob: -2.4644851684570312
    3. 'matrix' → logprob: -7.839485168457031
    4. ' INF' → logprob: -9.714485168457031
    5. '   ' → logprob: -10.339485168457031
    6. ' row' → logprob: -11.339485168457031
    7. '           ' → logprob: -11.464485168457031
    8. '100' → logprob: -11.714485168457031
    9. 'inf' → logprob: -11.964485168457031
    10. 'ROW' → logprob: -12.089485168457031

Token 342: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.7133641196996905e-05
    2. '.' → logprob: -11.75002670288086
    3. '           ' → logprob: -11.87502670288086
    4. 'append' → logprob: -11.87502670288086
    5. '].' → logprob: -12.37502670288086
    6. ').' → logprob: -14.00002670288086
    7. ' .' → logprob: -15.75002670288086
    8. '.app' → logprob: -16.87502670288086
    9. '          ' → logprob: -17.12502670288086
    10. '       ' → logprob: -17.62502670288086

Token 343: '(IN' (ID: 46131)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -6.630610641877865e-06
    2. '(IN' → logprob: -12.625006675720215
    3. ' INF' → logprob: -13.375006675720215
    4. '10' → logprob: -13.875006675720215
    5. '-INF' → logprob: -14.875006675720215
    6. 'IN' → logprob: -15.875006675720215
    7. '   ' → logprob: -16.5000057220459
    8. '0' → logprob: -16.6250057220459
    9. '100' → logprob: -16.6250057220459
    10. 'inf' → logprob: -16.8750057220459

Token 344: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: 0.0
    2. 'FF' → logprob: -17.625
    3. 'f' → logprob: -18.25
    4. '
' → logprob: -18.5
    5. ' F' → logprob: -20.25
    6. 'Ф' → logprob: -21.625
    7. 'INF' → logprob: -22.0
    8. '   ' → logprob: -22.125
    9. '1' → logprob: -22.25
    10. 'Ｆ' → logprob: -22.375

Token 345: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011464104754850268
    2. ')
' → logprob: -7.00114631652832
    3. '       ' → logprob: -8.50114631652832
    4. ' )' → logprob: -11.00114631652832
    5. '   ' → logprob: -11.75114631652832
    6. '	' → logprob: -13.12614631652832
    7. '           ' → logprob: -13.50114631652832
    8. '))' → logprob: -13.62614631652832
    9. ')

' → logprob: -14.12614631652832
    10. '               ' → logprob: -15.37614631652832

Token 346: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.05940748378634453
    2. ' matrix' → logprob: -3.1844074726104736
    3. '	matrix' → logprob: -5.059407711029053
    4. '   ' → logprob: -5.309407711029053
    5. '<|end|>' → logprob: -5.434407711029053
    6. ' ' → logprob: -8.184407234191895
    7. ')' → logprob: -8.309407234191895
    8. 'for' → logprob: -10.559407234191895
    9. '_matrix' → logprob: -11.059407234191895
    10. '<|end|>' → logprob: -11.309407234191895

Token 348: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.38742387294769287
    2. '[i' → logprob: -1.1374238729476929
    3. '.' → logprob: -7.887423992156982
    4. '[-' → logprob: -8.762423515319824
    5. '[row' → logprob: -11.387423515319824
    6. '[j' → logprob: -13.262423515319824
    7. '[' → logprob: -13.262423515319824
    8. '   ' → logprob: -13.387423515319824
    9. '[u' → logprob: -14.012423515319824
    10. ' .' → logprob: -14.262423515319824

Token 349: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.500006675720215
    3. 'row' → logprob: -13.000006675720215
    4. '(
' → logprob: -15.750006675720215
    5. ' row' → logprob: -17.5000057220459
    6. '[row' → logprob: -17.6250057220459
    7. '([' → logprob: -18.0000057220459
    8. '(rows' → logprob: -18.1250057220459
    9. '(line' → logprob: -18.6250057220459
    10. ',row' → logprob: -18.8750057220459

Token 350: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -14.000001907348633
    3. ')
' → logprob: -14.500001907348633
    4. ')

' → logprob: -16.875001907348633
    5. '))' → logprob: -17.750001907348633
    6. '#' → logprob: -18.375001907348633
    7. '}' → logprob: -18.375001907348633
    8. ')n' → logprob: -18.375001907348633
    9. '),' → logprob: -18.500001907348633
    10. ')#' → logprob: -18.500001907348633

Token 351: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013108343817293644
    2. ' for' → logprob: -4.388108253479004
    3. '   ' → logprob: -8.138108253479004
    4. 'matrix' → logprob: -8.263108253479004
    5. '<|end|>' → logprob: -10.888108253479004
    6. '	for' → logprob: -10.888108253479004
    7. 'u' → logprob: -13.138108253479004
    8. ' matrix' → logprob: -13.638108253479004
    9. '<|end|>' → logprob: -13.763108253479004
    10. '```' → logprob: -14.013108253479004

Token 352: ' edge' (ID: 11165)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3331487774848938
    2. 'i' → logprob: -1.708148717880249
    3. 'u' → logprob: -2.708148717880249
    4. 'x' → logprob: -3.958148717880249
    5. '_i' → logprob: -5.208148956298828
    6. '_' → logprob: -5.708148956298828
    7. 's' → logprob: -6.333148956298828
    8. '_a' → logprob: -6.708148956298828
    9. ' a' → logprob: -6.958148956298828
    10. ' i' → logprob: -7.708148956298828

Token 353: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3284202516078949
    2. '[' → logprob: -1.5784202814102173
    3. 'in' → logprob: -2.7034201622009277
    4. '_' → logprob: -6.453420162200928
    5. 's' → logprob: -6.703420162200928
    6. '[i' → logprob: -7.078420162200928
    7. '[in' → logprob: -7.953420162200928
    8. '[u' → logprob: -8.078420639038086
    9. ' ' → logprob: -8.578420639038086
    10. ',' → logprob: -8.703420639038086

Token 354: ' info' (ID: 5377)
  Prédit: ' info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' info' → logprob: -0.31327563524246216
    2. 'info' → logprob: -1.3132755756378174
    3. '	info' → logprob: -12.063275337219238
    4. 'Info' → logprob: -12.688275337219238
    5. '(info' → logprob: -12.938275337219238
    6. 'range' → logprob: -13.813275337219238
    7. '   ' → logprob: -14.313275337219238
    8. ' range' → logprob: -15.063275337219238
    9. '_info' → logprob: -15.188275337219238
    10. ' ' → logprob: -15.438275337219238

Token 355: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42944639921188354
    2. ':
' → logprob: -1.0544464588165283
    3. '[' → logprob: -7.554446220397949
    4. '   ' → logprob: -9.30444622039795
    5. '):
' → logprob: -10.55444622039795
    6. '[:-' → logprob: -10.92944622039795
    7. '):' → logprob: -11.30444622039795
    8. '[:' → logprob: -11.30444622039795
    9. ' :' → logprob: -11.42944622039795
    10. ' :
' → logprob: -11.42944622039795

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006395249627530575
    2. ' u' → logprob: -6.25639533996582
    3. 'a' → logprob: -6.63139533996582
    4. 'u' → logprob: -6.63139533996582
    5. ' matrix' → logprob: -6.63139533996582
    6. 'matrix' → logprob: -8.38139533996582
    7. ' a' → logprob: -9.88139533996582
    8. '[u' → logprob: -10.25639533996582
    9. '[' → logprob: -10.63139533996582
    10. '	u' → logprob: -10.63139533996582

Token 357: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.21275541186332703
    2. 'u' → logprob: -1.7127554416656494
    3. '   ' → logprob: -4.71275520324707
    4. ' a' → logprob: -6.96275520324707
    5. ' u' → logprob: -6.96275520324707
    6. 's' → logprob: -8.58775520324707
    7. 'v' → logprob: -8.96275520324707
    8. 'x' → logprob: -9.71275520324707
    9. 'matrix' → logprob: -11.83775520324707
    10. 'f' → logprob: -12.33775520324707

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41338178515434265
    2. ' =' → logprob: -1.413381814956665
    3. '=' → logprob: -3.288381814956665
    4. '=edge' → logprob: -3.788381814956665
    5. ' ,' → logprob: -4.288381576538086
    6. '[' → logprob: -4.538381576538086
    7. ',b' → logprob: -5.163381576538086
    8. '-' → logprob: -5.913381576538086
    9. ',a' → logprob: -6.538381576538086
    10. 'a' → logprob: -8.038381576538086

Token 359: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001584850688232109
    2. ' b' → logprob: -8.750158309936523
    3. ',b' → logprob: -20.875158309936523
    4. '   ' → logprob: -21.250158309936523
    5. '	b' → logprob: -23.500158309936523
    6. 'c' → logprob: -24.125158309936523
    7. 'bb' → logprob: -24.500158309936523
    8. '  ' → logprob: -24.625158309936523
    9. '1' → logprob: -24.875158309936523
    10. ' ' → logprob: -25.000158309936523

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011517672101035714
    2. ' =' → logprob: -8.001152038574219
    3. ' ,' → logprob: -8.376152038574219
    4. '=' → logprob: -8.501152038574219
    5. '-' → logprob: -8.751152038574219
    6. ',b' → logprob: -8.876152038574219
    7. ',a' → logprob: -9.876152038574219
    8. 'a' → logprob: -11.751152038574219
    9. '-=' → logprob: -11.751152038574219
    10. '_,' → logprob: -12.501152038574219

Token 361: ' cost' (ID: 3097)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0020025114063173532
    2. ' c' → logprob: -6.502002716064453
    3. 'cost' → logprob: -8.127002716064453
    4. 'w' → logprob: -9.127002716064453
    5. 't' → logprob: -10.127002716064453
    6. 'd' → logprob: -10.502002716064453
    7. 'l' → logprob: -11.877002716064453
    8. 'k' → logprob: -12.502002716064453
    9. '	c' → logprob: -13.002002716064453
    10. ' cost' → logprob: -13.127002716064453

Token 362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31711435317993164
    2. ' =' → logprob: -1.3171143531799316
    3. ',' → logprob: -5.567114353179932
    4. 'a' → logprob: -11.567113876342773
    5. ' ,' → logprob: -12.442113876342773
    6. '[' → logprob: -12.692113876342773
    7. ',a' → logprob: -12.817113876342773
    8. '=a' → logprob: -13.067113876342773
    9. ' ' → logprob: -13.567113876342773
    10. '-' → logprob: -15.567113876342773

Token 363: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.011048170737922192
    2. ' edge' → logprob: -4.511048316955566
    3. '(edge' → logprob: -15.636048316955566
    4. '   ' → logprob: -16.38604736328125
    5. '=edge' → logprob: -16.51104736328125
    6. ' ' → logprob: -17.76104736328125
    7. 'edges' → logprob: -19.63604736328125
    8. '  ' → logprob: -19.76104736328125
    9. '_edge' → logprob: -20.13604736328125
    10. 'a' → logprob: -20.26104736328125

Token 364: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7619431018829346
    2. ' =' → logprob: -1.2619431018829346
    3. '-' → logprob: -2.3869431018829346
    4. '
' → logprob: -2.3869431018829346
    5. 'a' → logprob: -3.2619431018829346
    6. ',' → logprob: -4.1369428634643555
    7. '=' → logprob: -5.6369428634643555
    8. '    
' → logprob: -6.0119428634643555
    9. ' -' → logprob: -6.3869428634643555
    10. '[' → logprob: -7.3869428634643555

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029277801513671875
    2. '    
' → logprob: -6.502927780151367
    3. ' matrix' → logprob: -7.877927780151367
    4. ' 
' → logprob: -7.877927780151367
    5. '   
' → logprob: -8.252927780151367
    6. '  ' → logprob: -9.752927780151367
    7. '	matrix' → logprob: -9.752927780151367
    8. '<|end|>' → logprob: -10.002927780151367
    9. ',' → logprob: -10.252927780151367
    10. '   ' → logprob: -10.502927780151367

Token 366: ' a' (ID: 261)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.2985258102416992
    2. ' matrix' → logprob: -1.6735258102416992
    3. '   ' → logprob: -2.923525810241699
    4. 'a' (adapté à ' a') → logprob: -4.173525810241699
    5. ' a' → logprob: -6.673525810241699
    6. '
' → logprob: -10.1735258102417
    7. '    
' → logprob: -10.9235258102417
    8. '	matrix' → logprob: -11.0485258102417
    9. 'cost' → logprob: -12.0485258102417
    10. ' 
' → logprob: -12.5485258102417

Token 367: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.030599340796470642
    2. '-=' → logprob: -3.530599355697632
    3. '-' → logprob: -7.155599117279053
    4. ',' → logprob: -10.405599594116211
    5. ' ' → logprob: -11.405599594116211
    6. 'a' → logprob: -11.405599594116211
    7. ' -' → logprob: -12.155599594116211
    8. ',a' → logprob: -12.530599594116211
    9. ' ,' → logprob: -12.905599594116211
    10. '   ' → logprob: -13.405599594116211

Token 368: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.000003814697266
    4. '```' → logprob: -20.875003814697266
    5. '１' → logprob: -22.250003814697266
    6. '۱' → logprob: -22.750003814697266
    7. '<|end|>' → logprob: -22.937503814697266
    8. '=' → logprob: -22.937503814697266
    9. '
' → logprob: -23.312503814697266
    10. '১' → logprob: -23.562503814697266

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '１' → logprob: -21.0
    4. '```' → logprob: -21.25
    5. '   ' → logprob: -21.75
    6. '۱' → logprob: -22.125
    7. '<|end|>' → logprob: -22.75
    8. '১' → logprob: -23.0
    9. '2' → logprob: -23.125
    10. '१' → logprob: -23.25

Token 370: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6248444318771362
    2. '
' → logprob: -1.2498444318771362
    3. '   ' → logprob: -2.749844551086426
    4. ' b' → logprob: -3.124844551086426
    5. ',b' → logprob: -3.374844551086426
    6. ',' → logprob: -3.499844551086426
    7. ' ' → logprob: -6.499844551086426
    8. ';' → logprob: -6.874844551086426
    9. '<|end|>' → logprob: -6.999844551086426
    10. ';b' → logprob: -7.374844551086426

Token 371: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.40766841173171997
    2. '   ' → logprob: -1.4076683521270752
    3. ' b' → logprob: -2.532668352127075
    4. '	b' → logprob: -4.657668590545654
    5. ',b' → logprob: -7.157668590545654
    6. ' ' → logprob: -8.407668113708496
    7. ',' → logprob: -9.532668113708496
    8. '
' → logprob: -10.282668113708496
    9. '  ' → logprob: -11.782668113708496
    10. '    
' → logprob: -11.907668113708496

Token 372: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0052342405542731285
    2. ' b' → logprob: -5.255234241485596
    3. '   ' → logprob: -14.630233764648438
    4. '	b' → logprob: -19.255233764648438
    5. ' ' → logprob: -21.255233764648438
    6. ',b' → logprob: -21.505233764648438
    7. '  ' → logprob: -21.880233764648438
    8. '    ' → logprob: -22.380233764648438
    9. '_b' → logprob: -23.130233764648438
    10. ')b' → logprob: -23.880233764648438

Token 373: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4773685038089752
    2. '-=' → logprob: -0.9773684740066528
    3. '-' → logprob: -5.727368354797363
    4. '   ' → logprob: -10.727368354797363
    5. ' ' → logprob: -12.602368354797363
    6. '=' → logprob: -12.602368354797363
    7. ' -' → logprob: -14.602368354797363
    8. '```' → logprob: -14.602368354797363
    9. '    ' → logprob: -15.852368354797363
    10. '  ' → logprob: -15.977368354797363

Token 374: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.378177642822266
    4. '2' → logprob: -17.878177642822266
    5. '  ' → logprob: -18.753177642822266
    6. '<|end|>' → logprob: -18.878177642822266
    7. '```' → logprob: -19.065677642822266
    8. '    ' → logprob: -19.440677642822266
    9. 'b' → logprob: -19.503177642822266
    10. '0' → logprob: -19.628177642822266

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.500051498413086
    4. '```' → logprob: -17.625051498413086
    5. '2' → logprob: -18.937551498413086
    6. '<|end|>' → logprob: -19.312551498413086
    7. '  ' → logprob: -19.875051498413086
    8. '１' → logprob: -20.250051498413086
    9. 'b' → logprob: -20.250051498413086
    10. '۱' → logprob: -20.250051498413086

Token 376: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007761581800878048
    2. 'matrix' → logprob: -7.625776290893555
    3. ' matrix' → logprob: -8.250776290893555
    4. '
' → logprob: -11.250776290893555
    5. '	matrix' → logprob: -11.250776290893555
    6. '    
' → logprob: -14.625776290893555
    7. '```' → logprob: -15.125776290893555
    8. '       ' → logprob: -16.625776290893555
    9. '_matrix' → logprob: -17.500776290893555
    10. '   ' → logprob: -17.500776290893555

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06294356286525726
    2. ' matrix' → logprob: -3.187943458557129
    3. 'matrix' → logprob: -3.937943458557129
    4. '	matrix' → logprob: -8.437943458557129
    5. '
' → logprob: -10.562943458557129
    6. '    
' → logprob: -11.937943458557129
    7. '```' → logprob: -13.312943458557129
    8. ' if' → logprob: -13.312943458557129
    9. '  ' → logprob: -13.687943458557129
    10. '<|end|>' → logprob: -13.937943458557129

Token 378: ' if' (ID: 538)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.16505838930606842
    2. '   ' → logprob: -2.2900583744049072
    3. ' matrix' → logprob: -3.5400583744049072
    4. 'if' (adapté à ' if') → logprob: -3.9150583744049072
    5. ' if' → logprob: -6.290058612823486
    6. ' ' → logprob: -10.290058135986328
    7. '	matrix' → logprob: -11.040058135986328
    8. 'cost' → logprob: -11.415058135986328
    9. '  ' → logprob: -11.790058135986328
    10. 'current' → logprob: -12.727558135986328

Token 379: ' cost' (ID: 3097)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.06701382994651794
    2. ' matrix' → logprob: -3.067013740539551
    3. 'cost' → logprob: -4.067013740539551
    4. ' cost' → logprob: -6.817013740539551
    5. '	matrix' → logprob: -10.69201374053955
    6. '   ' → logprob: -12.44201374053955
    7. '(matrix' → logprob: -13.06701374053955
    8. ' ' → logprob: -13.56701374053955
    9. 'mat' → logprob: -14.06701374053955
    10. 'not' → logprob: -14.69201374053955

Token 380: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.483218252658844
    2. ' <' → logprob: -0.983218252658844
    3. '<=' → logprob: -5.108218193054199
    4. ' <=' → logprob: -5.858218193054199
    5. '<m' → logprob: -9.4832181930542
    6. '<th' → logprob: -10.8582181930542
    7. '<n' → logprob: -10.8582181930542
    8. '<size' → logprob: -11.4832181930542
    9. '<w' → logprob: -11.6082181930542
    10. '<len' → logprob: -11.7332181930542

Token 381: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2044592946767807
    2. 'matrix' → logprob: -2.7044591903686523
    3. ' l' → logprob: -3.0794591903686523
    4. '0' → logprob: -3.2044591903686523
    5. ' matrix' → logprob: -3.8294591903686523
    6. ' ' → logprob: -5.454459190368652
    7. 'INF' → logprob: -5.954459190368652
    8. '100' → logprob: -7.079459190368652
    9. '10' → logprob: -7.204459190368652
    10. ' INF' → logprob: -8.204459190368652

Token 382: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21383324265480042
    2. ' and' → logprob: -2.3388333320617676
    3. ':' → logprob: -3.3388333320617676
    4. '       ' → logprob: -3.4638333320617676
    5. '   ' → logprob: -3.8388333320617676
    6. 'and' → logprob: -5.463833332061768
    7. ' or' → logprob: -6.088833332061768
    8. '<=' → logprob: -8.46383285522461
    9. '           ' → logprob: -8.71383285522461
    10. '==' → logprob: -8.71383285522461

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014767199754714966
    2. '   ' → logprob: -5.014767169952393
    3. 'continue' → logprob: -5.889767169952393
    4. ' continue' → logprob: -6.014767169952393
    5. ' matrix' → logprob: -6.639767169952393
    6. 'matrix' → logprob: -6.639767169952393
    7. 'cost' → logprob: -9.38976764678955
    8. ' cost' → logprob: -9.76476764678955
    9. ':
' → logprob: -11.63976764678955
    10. '	continue' → logprob: -11.88976764678955

Token 384: ' continue' (ID: 4901)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.12449640035629272
    2. 'continue' (adapté à ' continue') → logprob: -2.7494964599609375
    3. 'matrix' → logprob: -3.3744964599609375
    4. '   ' → logprob: -4.8744964599609375
    5. ' cost' → logprob: -5.1244964599609375
    6. '       ' → logprob: -5.6244964599609375
    7. ' continue' → logprob: -6.8744964599609375
    8. '           ' → logprob: -8.374496459960938
    9. ' matrix' → logprob: -8.874496459960938
    10. 'continu' → logprob: -10.874496459960938

Token 385: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.893480243277736e-05
    2. 'matrix' → logprob: -10.875039100646973
    3. ' matrix' → logprob: -11.000039100646973
    4. '	matrix' → logprob: -13.125039100646973
    5. '    
' → logprob: -14.750039100646973
    6. '
' → logprob: -14.750039100646973
    7. '       ' → logprob: -15.625039100646973
    8. '```' → logprob: -16.625038146972656
    9. '_matrix' → logprob: -16.750038146972656
    10. '   ' → logprob: -17.000038146972656

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006827684701420367
    2. 'matrix' → logprob: -7.750682830810547
    3. ' matrix' → logprob: -8.375682830810547
    4. '
' → logprob: -11.625682830810547
    5. '    
' → logprob: -12.500682830810547
    6. '	matrix' → logprob: -12.500682830810547
    7. 'if' → logprob: -14.000682830810547
    8. '       ' → logprob: -14.125682830810547
    9. '```' → logprob: -14.375682830810547
    10. 'else' → logprob: -14.750682830810547

Token 387: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.07631400972604752
    2. '   ' → logprob: -2.7013139724731445
    3. ' matrix' → logprob: -5.0763139724731445
    4. 'if' → logprob: -9.326313972473145
    5. '	matrix' → logprob: -11.826313972473145
    6. ' ' → logprob: -11.951313972473145
    7. ' if' → logprob: -12.076313972473145
    8. '
' → logprob: -13.076313972473145
    9. '```' → logprob: -13.451313972473145
    10. '    
' → logprob: -13.951313972473145

Token 388: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.9361264946837764e-07
    2. 'a' → logprob: -17.25
    3. '[' → logprob: -17.375
    4. '   ' → logprob: -19.0
    5. ' [' → logprob: -19.75
    6. ')[' → logprob: -20.125
    7. '[b' → logprob: -20.25
    8. '[min' → logprob: -20.375
    9. '```' → logprob: -20.875
    10. '[m' → logprob: -20.875

Token 389: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001314295077463612
    2. '[b' → logprob: -9.000131607055664
    3. ' ][' → logprob: -12.750131607055664
    4. ']' → logprob: -13.125131607055664
    5. '[' → logprob: -13.375131607055664
    6. '[a' → logprob: -14.375131607055664
    7. '   ' → logprob: -15.250131607055664
    8. ')[' → logprob: -15.375131607055664
    9. 'b' → logprob: -15.875131607055664
    10. ']][' → logprob: -16.125131607055664

Token 390: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.2994620242971e-06
    2. ' b' → logprob: -11.750008583068848
    3. '   ' → logprob: -16.50000762939453
    4. '	b' → logprob: -16.62500762939453
    5. ')b' → logprob: -16.75000762939453
    6. '][' → logprob: -16.87500762939453
    7. ' ' → logprob: -17.00000762939453
    8. ']' → logprob: -17.25000762939453
    9. 'a' → logprob: -17.62500762939453
    10. '>b' → logprob: -17.75000762939453

Token 391: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002118735108524561
    2. ']=' → logprob: -6.7521185874938965
    3. ' ]' → logprob: -7.0021185874938965
    4. '=' → logprob: -10.752119064331055
    5. ' =' → logprob: -11.127119064331055
    6. '][' → logprob: -13.627119064331055
    7. '   ' → logprob: -14.877119064331055
    8. '[' → logprob: -15.877119064331055
    9. ',' → logprob: -16.627119064331055
    10. 'cost' → logprob: -16.627119064331055

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192928314208984
    2. '=' → logprob: -1.5019292831420898
    3. '=min' → logprob: -15.37692928314209
    4. ',' → logprob: -18.376930236816406
    5. ' ' → logprob: -18.501930236816406
    6. '[' → logprob: -18.751930236816406
    7. '＝' → logprob: -19.876930236816406
    8. '.=' → logprob: -19.876930236816406
    9. '=max' → logprob: -20.001930236816406
    10. ']' → logprob: -20.126930236816406

Token 393: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0004722603189293295
    2. ' cost' → logprob: -7.750472068786621
    3. 'min' → logprob: -10.125472068786621
    4. 'co' → logprob: -14.000472068786621
    5. '(cost' → logprob: -15.750472068786621
    6. 'c' → logprob: -15.875472068786621
    7. 'cos' → logprob: -16.125473022460938
    8. ' min' → logprob: -16.375473022460938
    9. '   ' → logprob: -16.375473022460938
    10. 'code' → logprob: -17.125473022460938

Token 394: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.392202976712724e-06
    2. '<|end|>' → logprob: -12.875006675720215
    3. 'matrix' → logprob: -13.000006675720215
    4. ' matrix' → logprob: -13.875006675720215
    5. '	matrix' → logprob: -15.000006675720215
    6. '
' → logprob: -16.1250057220459
    7. ' and' → logprob: -16.7500057220459
    8. '       ' → logprob: -17.5000057220459
    9. '  ' → logprob: -18.2500057220459
    10. '<|end|>' → logprob: -18.2500057220459

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007720202207565308
    2. 'matrix' → logprob: -4.882719993591309
    3. ' matrix' → logprob: -9.257719993591309
    4. '	matrix' → logprob: -11.007719993591309
    5. '<|end|>' → logprob: -13.632719993591309
    6. '
' → logprob: -15.132719993591309
    7. '_matrix' → logprob: -15.632719993591309
    8. '```' → logprob: -16.132720947265625
    9. '       ' → logprob: -16.507720947265625
    10. '(matrix' → logprob: -16.507720947265625

Token 396: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.018616462126374245
    2. ' matrix' → logprob: -4.518616676330566
    3. '   ' → logprob: -4.893616676330566
    4. '	matrix' → logprob: -10.018616676330566
    5. '_matrix' → logprob: -15.018616676330566
    6. '.matrix' → logprob: -15.143616676330566
    7. ' ' → logprob: -15.518616676330566
    8. '  ' → logprob: -16.01861572265625
    9. '<|end|>' → logprob: -16.39361572265625
    10. '(matrix' → logprob: -16.51861572265625

Token 397: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -5.512236498361744e-07
    2. '[a' → logprob: -15.000000953674316
    3. 'b' → logprob: -16.25
    4. '[' → logprob: -19.25
    5. '```' → logprob: -21.25
    6. '][' → logprob: -21.375
    7. '	b' → logprob: -21.875
    8. ' [' → logprob: -22.125
    9. '[B' → logprob: -22.25
    10. '[c' → logprob: -22.375

Token 398: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03892681747674942
    2. '[a' → logprob: -3.288926839828491
    3. '[b' → logprob: -7.163926601409912
    4. ']' → logprob: -10.03892707824707
    5. '   ' → logprob: -10.53892707824707
    6. '[' → logprob: -11.16392707824707
    7. 'a' → logprob: -11.28892707824707
    8. ' ][' → logprob: -12.28892707824707
    9. ' [' → logprob: -12.41392707824707
    10. ')[' → logprob: -12.91392707824707

Token 399: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.088346359931165e-07
    2. ' a' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.625
    4. ' ' → logprob: -18.625
    5. 'а' → logprob: -18.625
    6. '	a' → logprob: -18.875
    7. '  ' → logprob: -20.25
    8. '[a' → logprob: -20.625
    9. '0' → logprob: -20.75
    10. '
' → logprob: -20.875

Token 400: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26997390389442444
    2. ']' → logprob: -2.0199739933013916
    3. ' =' → logprob: -2.2699739933013916
    4. ']=' → logprob: -7.5199737548828125
    5. ' ]' → logprob: -9.644973754882812
    6. '[' → logprob: -11.769973754882812
    7. ')' → logprob: -11.894973754882812
    8. '   ' → logprob: -12.519973754882812
    9. ' ' → logprob: -14.769973754882812
    10. '<|end|>' → logprob: -15.019973754882812

Token 401: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023281237110495567
    2. ' =' → logprob: -3.7732813358306885
    3. '[' → logprob: -10.27328109741211
    4. ']' → logprob: -14.14828109741211
    5. ']=' → logprob: -15.02328109741211
    6. '   ' → logprob: -16.02328109741211
    7. ')' → logprob: -17.02328109741211
    8. '=
' → logprob: -18.27328109741211
    9. ' [' → logprob: -18.39828109741211
    10. '+=' → logprob: -18.52328109741211

Token 402: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.5759395360946655
    2. 'cost' → logprob: -0.8259395360946655
    3. '(cost' → logprob: -16.575939178466797
    4. 'Cost' → logprob: -17.200939178466797
    5. ' kost' → logprob: -17.950939178466797
    6. '_cost' → logprob: -18.450939178466797
    7. ' ' → logprob: -18.575939178466797
    8. 'c' → logprob: -18.700939178466797
    9. 'cos' → logprob: -18.950939178466797
    10. 'code' → logprob: -19.075939178466797

Token 403: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5887652039527893
    2. '           ' → logprob: -1.5887651443481445
    3. '<|end|>' → logprob: -2.2137651443481445
    4. '               ' → logprob: -2.4637651443481445
    5. '   ' → logprob: -4.5887651443481445
    6. '		' → logprob: -5.0887651443481445
    7. '	' → logprob: -5.4637651443481445
    8. '        
' → logprob: -5.5887651443481445
    9. '                   ' → logprob: -5.5887651443481445
    10. '            
' → logprob: -5.8387651443481445

Token 404: 'ans' (ID: 616)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39119216799736023
    2. '       ' → logprob: -1.7661921977996826
    3. '               ' → logprob: -2.1411921977996826
    4. 'for' → logprob: -4.1411919593811035
    5. ' for' → logprob: -4.7661919593811035
    6. '                   ' → logprob: -5.2661919593811035
    7. '   ' → logprob: -6.3911919593811035
    8. '		' → logprob: -6.7661919593811035
    9. '	' → logprob: -7.5161919593811035
    10. '            ' → logprob: -8.391192436218262

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05699314922094345
    2. '=' → logprob: -2.931993246078491
    3. 's' → logprob: -6.181993007659912
    4. '[' → logprob: -11.43199348449707
    5. '_' → logprob: -11.80699348449707
    6. '=[]' → logprob: -12.05699348449707
    7. '[]' → logprob: -12.43199348449707
    8. '[:]' → logprob: -12.68199348449707
    9. 'w' → logprob: -12.80699348449707
    10. ' ' → logprob: -13.43199348449707

Token 406: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.028416238725185394
    2. '[]
' → logprob: -3.653416156768799
    3. '[' → logprob: -6.653416156768799
    4. '[]

' → logprob: -8.028416633605957
    5. ' []' → logprob: -8.903416633605957
    6. '{}' → logprob: -9.028416633605957
    7. 'd' → logprob: -9.278416633605957
    8. '[d' → logprob: -9.403416633605957
    9. '["' → logprob: -10.778416633605957
    10. '[-' → logprob: -11.528416633605957

Token 407: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010044389637187123
    2. ' for' → logprob: -9.500100135803223
    3. '   ' → logprob: -10.750100135803223
    4. 'i' → logprob: -13.375100135803223
    5. 'q' → logprob: -14.000100135803223
    6. 'while' → logprob: -14.375100135803223
    7. 'query' → logprob: -15.125100135803223
    8. '	for' → logprob: -15.125100135803223
    9. 'u' → logprob: -15.250100135803223
    10. 'def' → logprob: -16.00010108947754

Token 408: ' i' (ID: 575)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.28459495306015015
    2. 's' → logprob: -2.409595012664795
    3. 'i' → logprob: -3.534595012664795
    4. 'u' → logprob: -3.784595012664795
    5. 'query' → logprob: -3.909595012664795
    6. 'q' → logprob: -3.909595012664795
    7. 'qi' → logprob: -4.284595012664795
    8. '_' → logprob: -4.409595012664795
    9. 'src' → logprob: -4.534595012664795
    10. '_start' → logprob: -5.159595012664795

Token 409: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10026974976062775
    2. 'in' → logprob: -2.3502697944641113
    3. 'n' → logprob: -10.475269317626953
    4. 'range' → logprob: -10.475269317626953
    5. ' ' → logprob: -12.725269317626953
    6. ',' → logprob: -14.100269317626953
    7. '	in' → logprob: -14.975269317626953
    8. 'q' → logprob: -14.975269317626953
    9. '   ' → logprob: -15.100269317626953
    10. '0' → logprob: -15.475269317626953

Token 410: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028719231486320496
    2. ' range' → logprob: -5.877871990203857
    3. 'query' → logprob: -9.6278715133667
    4. 'q' → logprob: -15.3778715133667
    5. 'r' → logprob: -15.6278715133667
    6. '(range' → logprob: -15.6278715133667
    7. 'ran' → logprob: -15.7528715133667
    8. ' query' → logprob: -16.752872467041016
    9. 'in' → logprob: -17.377872467041016
    10. ' ' → logprob: -17.502872467041016

Token 411: '(n' (ID: 2406)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.5464498996734619
    2. 'q' → logprob: -0.9214498996734619
    3. '(n' → logprob: -4.171449661254883
    4. 'range' → logprob: -5.296449661254883
    5. '(' → logprob: -6.671449661254883
    6. 'n' → logprob: -7.046449661254883
    7. '(len' → logprob: -9.171449661254883
    8. '(range' → logprob: -9.171449661254883
    9. ' q' → logprob: -9.296449661254883
    10. 'len' → logprob: -9.671449661254883

Token 412: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08016140758991241
    2. '):' → logprob: -2.5801613330841064
    3. ')' → logprob: -7.3301615715026855
    4. ':' → logprob: -8.080161094665527
    5. ':
' → logprob: -8.330161094665527
    6. '):
' → logprob: -11.205161094665527
    7. ',' → logprob: -11.205161094665527
    8. '   ' → logprob: -11.205161094665527
    9. 'n' → logprob: -11.830161094665527
    10. ')
' → logprob: -12.830161094665527

Token 413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039094895124435425
    2. 'dist' → logprob: -3.289094924926758
    3. ' dist' → logprob: -7.039094924926758
    4. 'ans' → logprob: -9.164094924926758
    5. '	dist' → logprob: -10.414094924926758
    6. 'd' → logprob: -10.914094924926758
    7. ' ans' → logprob: -11.539094924926758
    8. ' distances' → logprob: -12.539094924926758
    9. '	ans' → logprob: -13.289094924926758
    10. '  ' → logprob: -13.289094924926758

Token 414: ' ans' (ID: 3345)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02878451533615589
    2. 'ans' (adapté à ' ans') → logprob: -3.7787845134735107
    3. 'd' → logprob: -5.65378475189209
    4. '   ' → logprob: -6.90378475189209
    5. 'res' → logprob: -7.77878475189209
    6. 'tmp' → logprob: -8.40378475189209
    7. 'temp' → logprob: -8.52878475189209
    8. ' dist' → logprob: -9.65378475189209
    9. 'distance' → logprob: -10.27878475189209
    10. 'row' → logprob: -11.02878475189209

Token 415: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6537611484527588
    2. '.append' → logprob: -1.2787611484527588
    3. '+=' → logprob: -1.9037611484527588
    4. '.extend' → logprob: -3.903761148452759
    5. ' =' → logprob: -4.15376091003418
    6. ' +=' → logprob: -4.77876091003418
    7. '.' → logprob: -5.27876091003418
    8. '.=' → logprob: -6.02876091003418
    9. '+' → logprob: -7.65376091003418
    10. 'append' → logprob: -10.15376091003418

Token 416: '([' (ID: 5194)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.048588622361421585
    2. 'd' → logprob: -3.048588514328003
    3. ' d' → logprob: -14.048588752746582
    4. '(' → logprob: -14.673588752746582
    5. '	d' → logprob: -17.673587799072266
    6. '(
' → logprob: -17.798587799072266
    7. '[d' → logprob: -17.798587799072266
    8. '   ' → logprob: -19.298587799072266
    9. ')d' → logprob: -19.298587799072266
    10. '=d' → logprob: -19.673587799072266

Token 417: '0' (ID: 15)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.01400060672312975
    2. '0' → logprob: -4.764000415802002
    3. '-' → logprob: -5.639000415802002
    4. 'dist' → logprob: -7.514000415802002
    5. 'False' → logprob: -8.63900089263916
    6. ']' → logprob: -8.63900089263916
    7. 'inf' → logprob: -8.76400089263916
    8. '*' → logprob: -9.01400089263916
    9. 'matrix' → logprob: -9.13900089263916
    10. 'd' → logprob: -9.13900089263916

Token 418: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06186302751302719
    2. ']*' → logprob: -3.4368629455566406
    3. ' if' → logprob: -4.061862945556641
    4. 'if' → logprob: -4.811862945556641
    5. ']+' → logprob: -6.311862945556641
    6. ']*(' → logprob: -8.18686294555664
    7. '])' → logprob: -8.31186294555664
    8. ' for' → logprob: -10.06186294555664
    9. '*' → logprob: -10.81186294555664
    10. 'for' → logprob: -10.81186294555664

Token 419: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5918982028961182
    2. ' for' → logprob: -1.5918982028961182
    3. ']*' → logprob: -2.341898202896118
    4. 'for' → logprob: -2.591898202896118
    5. ')' → logprob: -3.091898202896118
    6. '*' → logprob: -4.216897964477539
    7. ' *' → logprob: -5.341897964477539
    8. '+' → logprob: -5.966897964477539
    9. '])' → logprob: -6.716897964477539
    10. ']*(' → logprob: -7.091897964477539

Token 420: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.935296834039036e-06
    2. ' n' → logprob: -12.87500286102295
    3. '(n' → logprob: -15.25000286102295
    4. ')n' → logprob: -17.250003814697266
    5. '	n' → logprob: -17.500003814697266
    6. 'len' → logprob: -18.750003814697266
    7. '
' → logprob: -19.000003814697266
    8. '   ' → logprob: -19.125003814697266
    9. '(' → logprob: -19.625003814697266
    10. ',n' → logprob: -20.625003814697266

Token 421: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012296605564188212
    2. ' )' → logprob: -9.625123023986816
    3. ')
' → logprob: -10.000123023986816
    4. '   ' → logprob: -12.125123023986816
    5. ']' → logprob: -12.750123023986816
    6. ')]' → logprob: -13.875123023986816
    7. ')n' → logprob: -14.250123023986816
    8. '])' → logprob: -14.625123023986816
    9. '
' → logprob: -14.875123023986816
    10. ' ' → logprob: -15.500123023986816

Token 422: 'for' (ID: 1938)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.408069133758545
    2. '	for' → logprob: -1.408069133758545
    3. 'for' → logprob: -1.658069133758545
    4. '       ' → logprob: -1.783069133758545
    5. ' for' → logprob: -1.908069133758545
    6. '	' → logprob: -6.533069133758545
    7. '           ' → logprob: -7.158069133758545
    8. '	   ' → logprob: -7.908069133758545
    9. '<|end|>' → logprob: -8.033069610595703
    10. '	dist' → logprob: -9.283069610595703

Token 423: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04208296164870262
    2. 'j' → logprob: -4.417082786560059
    3. 'u' → logprob: -4.667082786560059
    4. ' i' → logprob: -4.792082786560059
    5. 'v' → logprob: -5.042082786560059
    6. 'k' → logprob: -6.417082786560059
    7. 'start' → logprob: -6.917082786560059
    8. 's' → logprob: -7.292082786560059
    9. 'x' → logprob: -7.667082786560059
    10. ' v' → logprob: -8.167082786560059

Token 424: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12701630592346191
    2. 'in' → logprob: -2.127016305923462
    3. 'n' → logprob: -10.002016067504883
    4. 'range' → logprob: -10.752016067504883
    5. '(' → logprob: -12.252016067504883
    6. ' ' → logprob: -12.377016067504883
    7. ',' → logprob: -12.627016067504883
    8. '	in' → logprob: -13.502016067504883
    9. 'In' → logprob: -14.127016067504883
    10. '(n' → logprob: -14.252016067504883

Token 425: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931599974632263
    2. 'range' → logprob: -0.6931599974632263
    3. '(range' → logprob: -11.818160057067871
    4. 'n' → logprob: -12.943160057067871
    5. '	range' → logprob: -14.068160057067871
    6. 'Range' → logprob: -14.943160057067871
    7. ' ' → logprob: -14.943160057067871
    8. '(' → logprob: -15.318160057067871
    9. '   ' → logprob: -15.443160057067871
    10. '.range' → logprob: -15.818160057067871

Token 426: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00014692598779220134
    2. 'range' → logprob: -9.750146865844727
    3. '(range' → logprob: -10.250146865844727
    4. 'n' → logprob: -10.500146865844727
    5. '(' → logprob: -10.625146865844727
    6. ' range' → logprob: -13.625146865844727
    7. '(
' → logprob: -16.875146865844727
    8. '(s' → logprob: -17.625146865844727
    9. ' n' → logprob: -17.875146865844727
    10. ' (' → logprob: -18.125146865844727

Token 427: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04125248268246651
    2. '):
' → logprob: -3.416252374649048
    3. ')' → logprob: -4.916252613067627
    4. ':' → logprob: -9.166252136230469
    5. ' ):' → logprob: -9.916252136230469
    6. '+' → logprob: -10.541252136230469
    7. '   ' → logprob: -10.916252136230469
    8. ' ' → logprob: -11.291252136230469
    9. '):
' → logprob: -11.791252136230469
    10. '  ' → logprob: -12.041252136230469

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029834376648068428
    2. 'dist' → logprob: -4.279834270477295
    3. ' dist' → logprob: -4.404834270477295
    4. ' for' → logprob: -6.529834270477295
    5. ' ans' → logprob: -6.779834270477295
    6. 'for' → logprob: -8.154834747314453
    7. 'ans' → logprob: -8.154834747314453
    8. '	ans' → logprob: -9.779834747314453
    9. '	dist' → logprob: -10.154834747314453
    10. 'd' → logprob: -10.529834747314453

Token 429: ' tmp' (ID: 8919)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007197550963610411
    2. 'd' → logprob: -5.882197380065918
    3. 'temp' → logprob: -6.007197380065918
    4. 'tmp' (adapté à ' tmp') → logprob: -7.382197380065918
    5. 'ans' → logprob: -7.382197380065918
    6. 'res' → logprob: -8.132197380065918
    7. 'for' → logprob: -8.382197380065918
    8. ' dist' → logprob: -9.257197380065918
    9. 'result' → logprob: -11.507197380065918
    10. '   ' → logprob: -11.632197380065918

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2348950058221817
    2. ' =' → logprob: -1.6098949909210205
    3. '_dist' → logprob: -5.2348952293396
    4. 'dist' → logprob: -5.6098952293396
    5. 'd' → logprob: -8.484894752502441
    6. '_' → logprob: -9.484894752502441
    7. '_d' → logprob: -9.734894752502441
    8. '_=' → logprob: -10.234894752502441
    9. ' ' → logprob: -11.734894752502441
    10. 'for' → logprob: -12.109894752502441

Token 431: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012510236352682114
    2. ' d' → logprob: -4.387510299682617
    3. '   ' → logprob: -15.137510299682617
    4. '	d' → logprob: -15.637510299682617
    5. ' ' → logprob: -15.887510299682617
    6. '  ' → logprob: -18.262510299682617
    7. 'dist' → logprob: -18.387510299682617
    8. '(d' → logprob: -18.512510299682617
    9. ' ' → logprob: -18.887510299682617
    10. '
' → logprob: -19.012510299682617

Token 432: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -3.273621405242011e-05
    2. 'ijk' → logprob: -10.750032424926758
    3. 'i' → logprob: -12.375032424926758
    4. 'ij' → logprob: -12.500032424926758
    5. 'jik' → logprob: -14.625032424926758
    6. '[i' → logprob: -14.625032424926758
    7. '```' → logprob: -14.750032424926758
    8. 'd' → logprob: -14.875032424926758
    9. 'is' → logprob: -15.250032424926758
    10. 'j' → logprob: -15.250032424926758

Token 433: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.250001907348633
    3. '(
' → logprob: -16.375001907348633
    4. '(n' → logprob: -17.125001907348633
    5. '(ii' → logprob: -19.625001907348633
    6. '<|end|>' → logprob: -19.625001907348633
    7. 'i' → logprob: -19.750001907348633
    8. ' (' → logprob: -20.250001907348633
    9. '[i' → logprob: -20.375001907348633
    10. '(I' → logprob: -20.875001907348633

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005949704209342599
    2. ',m' → logprob: -8.125595092773438
    3. '(matrix' → logprob: -8.375595092773438
    4. ' ,' → logprob: -9.625595092773438
    5. ',
' → logprob: -14.000595092773438
    6. 'matrix' → logprob: -14.750595092773438
    7. '(' → logprob: -15.125595092773438
    8. ',(' → logprob: -15.625595092773438
    9. '   ' → logprob: -15.875595092773438
    10. ')' → logprob: -16.000595092773438

Token 435: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.0007100477814674377
    2. ' matrix' → logprob: -7.2507100105285645
    3. '	matrix' → logprob: -16.625709533691406
    4. '(matrix' → logprob: -17.625709533691406
    5. '   ' → logprob: -18.250709533691406
    6. ')' → logprob: -18.625709533691406
    7. 'm' → logprob: -18.875709533691406
    8. 'Matrix' → logprob: -19.500709533691406
    9. ' ' → logprob: -19.750709533691406
    10. '_matrix' → logprob: -19.875709533691406

Token 436: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.062011487782001495
    2. ')' → logprob: -2.812011480331421
    3. ')
' → logprob: -10.06201171875
    4. ' )
' → logprob: -14.31201171875
    5. '   ' → logprob: -15.43701171875
    6. ')

' → logprob: -15.56201171875
    7. ')i' → logprob: -16.31201171875
    8. ' )' → logprob: -17.18701171875
    9. ' ' → logprob: -17.43701171875
    10. ')`
' → logprob: -17.68701171875

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33070051670074463
    2. ' for' → logprob: -1.5807005167007446
    3. 'for' → logprob: -2.580700397491455
    4. '	for' → logprob: -11.205700874328613
    5. '
' → logprob: -11.580700874328613
    6. '<|end|>' → logprob: -13.205700874328613
    7. ' ' → logprob: -14.080700874328613
    8. '```' → logprob: -14.080700874328613
    9. '    
' → logprob: -14.455700874328613
    10. '   ' → logprob: -14.830700874328613

Token 438: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00012761499965563416
    2. '   ' → logprob: -9.625127792358398
    3. 'ans' → logprob: -10.125127792358398
    4. ' for' → logprob: -10.750127792358398
    5. '	for' → logprob: -16.7501277923584
    6. ' ' → logprob: -18.2501277923584
    7. ' ans' → logprob: -18.5001277923584
    8. '  ' → logprob: -19.0001277923584
    9. '
' → logprob: -19.2501277923584
    10. '```' → logprob: -19.5001277923584

Token 439: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001170225441455841
    2. ' j' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.001171112060547
    4. 'v' → logprob: -18.126171112060547
    5. '	j' → logprob: -19.126171112060547
    6. 'k' → logprob: -19.751171112060547
    7. 'x' → logprob: -20.376171112060547
    8. '_j' → logprob: -20.376171112060547
    9. ' ' → logprob: -20.751171112060547
    10. ' ' → logprob: -20.876171112060547

Token 440: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00133285962510854
    2. 'in' → logprob: -6.626332759857178
    3. 'range' → logprob: -12.626333236694336
    4. ' range' → logprob: -13.126333236694336
    5. ' ' → logprob: -14.376333236694336
    6. '   ' → logprob: -15.501333236694336
    7. 'import' → logprob: -15.626333236694336
    8. ',' → logprob: -15.626333236694336
    9. '(range' → logprob: -15.751333236694336
    10. '  ' → logprob: -16.251333236694336

Token 441: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '(range' → logprob: -17.875911712646484
    4. ' ' → logprob: -19.250911712646484
    5. 'ange' → logprob: -19.500911712646484
    6. '   ' → logprob: -20.125911712646484
    7. '	range' → logprob: -20.875911712646484
    8. '  ' → logprob: -21.875911712646484
    9. '
' → logprob: -22.625911712646484
    10. '```' → logprob: -23.500911712646484

Token 442: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014916352927684784
    2. '(n' → logprob: -4.51491641998291
    3. ' range' → logprob: -6.51491641998291
    4. '(range' → logprob: -6.51491641998291
    5. 'n' → logprob: -7.01491641998291
    6. '(' → logprob: -16.264915466308594
    7. 'Range' → logprob: -17.514915466308594
    8. ' n' → logprob: -17.639915466308594
    9. '_range' → logprob: -17.639915466308594
    10. ' ' → logprob: -17.764915466308594

Token 443: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03527295961976051
    2. '):' → logprob: -3.4102730751037598
    3. '   ' → logprob: -7.16027307510376
    4. ':' → logprob: -7.91027307510376
    5. '       ' → logprob: -8.785272598266602
    6. ')' → logprob: -9.535272598266602
    7. '):
' → logprob: -9.660272598266602
    8. ' ' → logprob: -10.035272598266602
    9. ':
' → logprob: -10.410272598266602
    10. ']:
' → logprob: -10.410272598266602

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008571469807066023
    2. ' ans' → logprob: -7.375857353210449
    3. '	ans' → logprob: -9.62585735321045
    4. '	' → logprob: -9.75085735321045
    5. 'ans' → logprob: -9.87585735321045
    6. '           ' → logprob: -10.50085735321045
    7. '   ' → logprob: -12.00085735321045
    8. '	   ' → logprob: -12.37585735321045
    9. '```' → logprob: -12.50085735321045
    10. '(ans' → logprob: -12.75085735321045

Token 445: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.06466010212898254
    2. ' ans' → logprob: -2.81466007232666
    3. '       ' → logprob: -6.18966007232666
    4. '   ' → logprob: -8.06466007232666
    5. 'if' → logprob: -8.93966007232666
    6. '           ' → logprob: -9.18966007232666
    7. '	ans' → logprob: -9.56466007232666
    8. ' if' → logprob: -11.31466007232666
    9. '(ans' → logprob: -12.06466007232666
    10. '               ' → logprob: -14.43966007232666

Token 446: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.372294698550832e-06
    2. '[j' → logprob: -11.875009536743164
    3. '][' → logprob: -13.500009536743164
    4. '[' → logprob: -14.625009536743164
    5. ')[' → logprob: -15.500009536743164
    6. '[I' → logprob: -15.625009536743164
    7. '```' → logprob: -17.125009536743164
    8. ' [' → logprob: -17.250009536743164
    9. '\[' → logprob: -17.750009536743164
    10. 'i' → logprob: -18.500009536743164

Token 447: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003211819101125002
    2. '[j' → logprob: -5.753211975097656
    3. ']' → logprob: -10.503211975097656
    4. '[i' → logprob: -13.003211975097656
    5. ' ][' → logprob: -13.253211975097656
    6. '[' → logprob: -13.753211975097656
    7. '```' → logprob: -15.128211975097656
    8. '"][' → logprob: -15.253211975097656
    9. ']][' → logprob: -15.378211975097656
    10. '   ' → logprob: -15.628211975097656

Token 448: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.7697225252486533e-06
    2. ' j' → logprob: -12.625003814697266
    3. '[j' → logprob: -15.500003814697266
    4. ']' → logprob: -16.000003814697266
    5. '	j' → logprob: -17.750003814697266
    6. '   ' → logprob: -18.750003814697266
    7. '_j' → logprob: -20.500003814697266
    8. '$j' → logprob: -20.625003814697266
    9. '```' → logprob: -20.625003814697266
    10. '       ' → logprob: -21.000003814697266

Token 449: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5212424993515015
    2. ']' → logprob: -1.2712424993515015
    3. ' =' → logprob: -2.146242618560791
    4. ']=' → logprob: -4.771242618560791
    5. ' ]' → logprob: -8.021242141723633
    6. ')' → logprob: -12.021242141723633
    7. ']+=' → logprob: -12.521242141723633
    8. ')=' → logprob: -13.396242141723633
    9. '=j' → logprob: -14.521242141723633
    10. '[' → logprob: -14.521242141723633

Token 450: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868710398674011
    2. ' =' → logprob: -1.136871099472046
    3. '=j' → logprob: -17.761871337890625
    4. '+=' → logprob: -17.886871337890625
    5. '＝' → logprob: -18.761871337890625
    6. ' ' → logprob: -19.011871337890625
    7. '=int' → logprob: -19.011871337890625
    8. '=
' → logprob: -19.136871337890625
    9. '[' → logprob: -19.386871337890625
    10. '<' → logprob: -19.636871337890625

Token 451: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.00028040475444868207
    2. 'min' → logprob: -8.375280380249023
    3. ' tmp' → logprob: -10.250280380249023
    4. 'max' → logprob: -11.625280380249023
    5. '0' → logprob: -13.125280380249023
    6. 'merge' → logprob: -13.625280380249023
    7. 'int' → logprob: -14.875280380249023
    8. '(tmp' → logprob: -14.875280380249023
    9. '1' → logprob: -15.000280380249023
    10. '	tmp' → logprob: -15.000280380249023

Token 452: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.750001907348633
    3. ' [' → logprob: -14.625001907348633
    4. '```' → logprob: -16.250001907348633
    5. '[i' → logprob: -16.625001907348633
    6. 'j' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '][' → logprob: -17.500001907348633
    9. '[n' → logprob: -18.000001907348633
    10. ']' → logprob: -18.125001907348633

Token 453: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40730252861976624
    2. '<|end|>' → logprob: -1.1573024988174438
    3. ' ]' → logprob: -4.657302379608154
    4. ' if' → logprob: -5.032302379608154
    5. '<|end|>' → logprob: -5.782302379608154
    6. ')' → logprob: -7.407302379608154
    7. 'if' → logprob: -9.032302856445312
    8. '
' → logprob: -9.282302856445312
    9. ')]' → logprob: -9.782302856445312
    10. ' ' → logprob: -9.782302856445312

Token 454: ' //' (ID: 602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: ' (' (ID: 350)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5807706713676453
    2. '(' → logprob: -0.8307706713676453
    3. '100' → logprob: -5.455770492553711
    4. '1' → logprob: -8.205770492553711
    5. ' ' → logprob: -8.705770492553711
    6. ' (' → logprob: -9.330770492553711
    7. 'pow' → logprob: -12.080770492553711
    8. '   ' → logprob: -12.830770492553711
    9. '```' → logprob: -13.080770492553711
    10. 'l' → logprob: -13.330770492553711

Token 456: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0701858401298523
    2. '(' → logprob: -2.695185899734497
    3. '100' → logprob: -8.695185661315918
    4. ' ' → logprob: -9.820185661315918
    5. ' (' → logprob: -10.695185661315918
    6. '1' → logprob: -12.570185661315918
    7. '   ' → logprob: -13.945185661315918
    8. '
' → logprob: -15.195185661315918
    9. 'pow' → logprob: -16.445186614990234
    10. '```' → logprob: -16.820186614990234

Token 457: ' **' (ID: 6240)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.006728634238243103
    2. '**' → logprob: -5.006728649139404
    3. ' ' → logprob: -12.006728172302246
    4. '+' → logprob: -12.506728172302246
    5. '```' → logprob: -13.756728172302246
    6. ' **' → logprob: -14.131728172302246
    7. '^' → logprob: -14.506728172302246
    8. '9' → logprob: -14.756728172302246
    9. '*' → logprob: -15.381728172302246
    10. '14' → logprob: -16.256729125976562

Token 458: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -5.5861724831629544e-05
    2. '9' → logprob: -10.250056266784668
    3. '6' → logprob: -11.125056266784668
    4. '5' → logprob: -13.000056266784668
    5. '3' → logprob: -14.375056266784668
    6. '12' → logprob: -14.500056266784668
    7. '7' → logprob: -14.500056266784668
    8. '8' → logprob: -15.000056266784668
    9. '10' → logprob: -15.125056266784668
    10. ' ' → logprob: -15.125056266784668

Token 459: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0001234428636962548
    2. '9' → logprob: -9.125123023986816
    3. '6' → logprob: -11.375123023986816
    4. '5' → logprob: -14.375123023986816
    5. '
' → logprob: -14.625123023986816
    6. '12' → logprob: -14.875123023986816
    7. '14' → logprob: -15.000123023986816
    8. '

' → logprob: -15.562623023986816
    9. '10' → logprob: -15.562623023986816
    10. '3' → logprob: -16.062623977661133

Token 460: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024404549039900303
    2. '<|end|>' → logprob: -6.627440452575684
    3. ' )' → logprob: -6.877440452575684
    4. ')
' → logprob: -9.877440452575684
    5. '
' → logprob: -11.377440452575684
    6. '<|end|>' → logprob: -12.252440452575684
    7. ' if' → logprob: -12.627440452575684
    8. ' ' → logprob: -13.002440452575684
    9. ')return' → logprob: -13.252440452575684
    10. '+' → logprob: -14.127440452575684

Token 461: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 462: ' pair' (ID: 10610)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45264217257499695
    2. 'query' → logprob: -1.8276422023773193
    3. ' i' → logprob: -2.8276422023773193
    4. '_' → logprob: -2.9526422023773193
    5. 'q' → logprob: -3.4526422023773193
    6. ' query' → logprob: -3.8276422023773193
    7. ' _' → logprob: -4.57764196395874
    8. '_i' → logprob: -4.70264196395874
    9. 'range' → logprob: -5.07764196395874
    10. 'r' → logprob: -5.45264196395874

Token 463: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602816879749298
    2. 'in' → logprob: -1.9102816581726074
    3. ' ' → logprob: -11.035282135009766
    4. 's' → logprob: -11.160282135009766
    5. '[' → logprob: -12.160282135009766
    6. '_' → logprob: -12.785282135009766
    7. 'a' → logprob: -13.035282135009766
    8. 'i' → logprob: -13.410282135009766
    9. '1' → logprob: -13.535282135009766
    10. '_in' → logprob: -13.785282135009766

Token 464: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.011048054322600365
    2. ' query' → logprob: -4.511047840118408
    3. 'range' → logprob: -16.51104736328125
    4. 'q' → logprob: -17.01104736328125
    5. '(query' → logprob: -17.13604736328125
    6. '	query' → logprob: -17.26104736328125
    7. '=query' → logprob: -19.01104736328125
    8. 'queue' → logprob: -19.13604736328125
    9. '
' → logprob: -19.26104736328125
    10. '   ' → logprob: -19.51104736328125

Token 465: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3625048100948334
    2. ':
' → logprob: -1.2375048398971558
    3. 'in' → logprob: -5.862504959106445
    4. ',' → logprob: -6.112504959106445
    5. ' in' → logprob: -6.237504959106445
    6. '   ' → logprob: -6.362504959106445
    7. '[' → logprob: -6.987504959106445
    8. '(' → logprob: -7.237504959106445
    9. '):
' → logprob: -7.362504959106445
    10. ' :' → logprob: -7.737504959106445

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2353612333536148
    2. 'a' → logprob: -2.235361337661743
    3. ' a' → logprob: -2.485361337661743
    4. ',' → logprob: -4.485361099243164
    5. ',a' → logprob: -6.485361099243164
    6. '(a' → logprob: -6.610361099243164
    7. ' print' → logprob: -6.860361099243164
    8. ':' → logprob: -7.235361099243164
    9. '```' → logprob: -7.235361099243164
    10. '    
' → logprob: -7.235361099243164

Token 467: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.009690692648291588
    2. 's' → logprob: -5.509690761566162
    3. 'x' → logprob: -6.009690761566162
    4. ' a' → logprob: -6.384690761566162
    5. 'u' → logprob: -6.634690761566162
    6. '   ' → logprob: -10.634690284729004
    7. ' s' → logprob: -10.634690284729004
    8. 'from' → logprob: -10.759690284729004
    9. ' u' → logprob: -10.884690284729004
    10. 'print' → logprob: -11.134690284729004

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031226979568600655
    2. ' ,' → logprob: -3.531226873397827
    3. '[' → logprob: -7.031227111816406
    4. 'a' → logprob: -8.656227111816406
    5. ' =' → logprob: -9.406227111816406
    6. ' -=' → logprob: -9.656227111816406
    7. ',b' → logprob: -9.656227111816406
    8. ',a' → logprob: -9.906227111816406
    9. '_,' → logprob: -10.031227111816406
    10. '-' → logprob: -10.031227111816406

Token 469: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12692810595035553
    2. ' b' → logprob: -2.1269280910491943
    3. ' ' → logprob: -18.251928329467773
    4. '   ' → logprob: -19.751928329467773
    5. ' =' → logprob: -19.751928329467773
    6. ',b' → logprob: -20.126928329467773
    7. '	b' → logprob: -20.501928329467773
    8. '=' → logprob: -21.126928329467773
    9. ',' → logprob: -21.251928329467773
    10. '  ' → logprob: -21.251928329467773

Token 470: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14278842508792877
    2. '=' → logprob: -2.0177884101867676
    3. ',' → logprob: -9.267788887023926
    4. '   ' → logprob: -11.392788887023926
    5. '=a' → logprob: -12.767788887023926
    6. '=line' → logprob: -13.517788887023926
    7. ' ' → logprob: -13.642788887023926
    8. ',a' → logprob: -14.642788887023926
    9. 'a' → logprob: -15.267788887023926
    10. '=int' → logprob: -15.517788887023926

Token 471: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.20141470432281494
    2. 'pair' → logprob: -1.701414704322815
    3. 'map' → logprob: -14.451415061950684
    4. ' map' → logprob: -14.576415061950684
    5. '(pair' → logprob: -14.701415061950684
    6. '0' → logprob: -16.826414108276367
    7. '   ' → logprob: -17.326414108276367
    8. '_pair' → logprob: -18.076414108276367
    9. ' ' → logprob: -18.451414108276367
    10. 'list' → logprob: -19.826414108276367

Token 472: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04767011106014252
    2. '   ' → logprob: -3.5476701259613037
    3. '=' → logprob: -4.297669887542725
    4. ',' → logprob: -6.922669887542725
    5. 'a' → logprob: -7.547669887542725
    6. ' ' → logprob: -7.547669887542725
    7. '=a' → logprob: -7.672669887542725
    8. ' a' → logprob: -7.797669887542725
    9. '[' → logprob: -7.797669887542725
    10. ',a' → logprob: -8.172670364379883

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10422570258378983
    2. ' print' → logprob: -3.2292256355285645
    3. ' a' → logprob: -3.7292256355285645
    4. 'a' → logprob: -4.1042256355285645
    5. '    
' → logprob: -5.1042256355285645
    6. 'print' → logprob: -5.2292256355285645
    7. ' 
' → logprob: -6.3542256355285645
    8. '<|end|>' → logprob: -6.3542256355285645
    9. '
' → logprob: -6.8542256355285645
    10. '[' → logprob: -6.9792256355285645

Token 474: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1700344681739807
    2. 'a' (adapté à ' a') → logprob: -1.920034408569336
    3. '   ' → logprob: -4.920034408569336
    4. ' print' → logprob: -6.170034408569336
    5. 'print' → logprob: -8.670034408569336
    6. ' if' → logprob: -9.420034408569336
    7. ' 
' → logprob: -10.045034408569336
    8. '
' → logprob: -10.170034408569336
    9. '	a' → logprob: -11.545034408569336
    10. '```' → logprob: -12.045034408569336

Token 475: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.05859522894024849
    2. '-=' → logprob: -2.9335951805114746
    3. '-' → logprob: -5.683595180511475
    4. ',' → logprob: -8.183595657348633
    5. ' -' → logprob: -11.308595657348633
    6. ' ,' → logprob: -12.183595657348633
    7. '=' → logprob: -12.683595657348633
    8. ' ' → logprob: -13.433595657348633
    9. ' =' → logprob: -14.058595657348633
    10. '-,' → logprob: -14.183595657348633

Token 476: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.876171112060547
    4. '```' → logprob: -19.501171112060547
    5. '１' → logprob: -19.626171112060547
    6. '0' → logprob: -20.501171112060547
    7. ' ' → logprob: -20.501171112060547
    8. '۱' → logprob: -20.501171112060547
    9. '<|end|>' → logprob: -20.751171112060547
    10. 'a' → logprob: -21.001171112060547

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '１' → logprob: -19.875001907348633
    4. '```' → logprob: -20.250001907348633
    5. '<|end|>' → logprob: -20.250001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '۱' → logprob: -21.000001907348633
    8. '১' → logprob: -21.062501907348633
    9. '१' → logprob: -21.250001907348633
    10. '0' → logprob: -22.500001907348633

Token 478: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3251449167728424
    2. '   ' → logprob: -1.45014488697052
    3. ' b' → logprob: -3.3251450061798096
    4. '
' → logprob: -5.2001447677612305
    5. '	b' → logprob: -6.9501447677612305
    6. ',b' → logprob: -7.7001447677612305
    7. ',' → logprob: -9.82514476776123
    8. '```' → logprob: -10.57514476776123
    9. '    
' → logprob: -10.95014476776123
    10. ' 
' → logprob: -11.07514476776123

Token 479: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05870416760444641
    2. ' b' → logprob: -3.308704137802124
    3. '   ' → logprob: -3.933704137802124
    4. '	b' → logprob: -7.058704376220703
    5. ' ' → logprob: -11.183704376220703
    6. ',b' → logprob: -13.058704376220703
    7. '    ' → logprob: -13.683704376220703
    8. '  ' → logprob: -14.433704376220703
    9. ' 
' → logprob: -14.683704376220703
    10. '
' → logprob: -14.933704376220703

Token 480: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0003676324849948287
    2. ' b' → logprob: -8.000367164611816
    3. '   ' → logprob: -10.500367164611816
    4. 'print' → logprob: -12.750367164611816
    5. '	b' → logprob: -13.250367164611816
    6. ' ' → logprob: -16.750368118286133
    7. '  ' → logprob: -18.250368118286133
    8. ',b' → logprob: -18.500368118286133
    9. ' print' → logprob: -18.875368118286133
    10. '```' → logprob: -20.000368118286133

Token 481: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.04919935762882233
    2. '-=' → logprob: -3.049199342727661
    3. '-' → logprob: -7.42419958114624
    4. '   ' → logprob: -11.549199104309082
    5. ' ' → logprob: -12.799199104309082
    6. ',' → logprob: -13.799199104309082
    7. '    ' → logprob: -14.924199104309082
    8. ' -' → logprob: -15.174199104309082
    9. '  ' → logprob: -15.174199104309082
    10. '=' → logprob: -15.174199104309082

Token 482: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -17.500804901123047
    4. '```' → logprob: -18.500804901123047
    5. '<|end|>' → logprob: -19.063304901123047
    6. 'b' → logprob: -19.750804901123047
    7. '0' → logprob: -19.875804901123047
    8. '  ' → logprob: -20.313304901123047
    9. '2' → logprob: -20.438304901123047
    10. '۱' → logprob: -20.563304901123047

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -19.250001907348633
    4. '   ' → logprob: -21.000001907348633
    5. '<|end|>' → logprob: -21.750001907348633
    6. '１' → logprob: -21.875001907348633
    7. '۱' → logprob: -22.000001907348633
    8. '-' → logprob: -22.687501907348633
    9. '
' → logprob: -22.750001907348633
    10. '0' → logprob: -22.812501907348633

Token 484: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02210269868373871
    2. 'print' → logprob: -3.8971025943756104
    3. '
' → logprob: -7.1471028327941895
    4. '```' → logprob: -7.2721028327941895
    5. ' print' → logprob: -10.147102355957031
    6. 'if' → logprob: -11.272102355957031
    7. '	print' → logprob: -11.647102355957031
    8. '``' → logprob: -11.772102355957031
    9. '    
' → logprob: -12.522102355957031
    10. '<|end|>' → logprob: -12.647102355957031

Token 485: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.33129698038101196
    2. '   ' → logprob: -1.3312969207763672
    3. '```' → logprob: -4.331296920776367
    4. ' print' → logprob: -5.581296920776367
    5. 'if' → logprob: -7.206296920776367
    6. ' if' → logprob: -9.456296920776367
    7. '``' → logprob: -9.456296920776367
    8. '
' → logprob: -9.956296920776367
    9. '	print' → logprob: -11.956296920776367
    10. '<|end|>' → logprob: -13.206296920776367

Token 486: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002670575922820717
    2. 'if' (adapté à ' if') → logprob: -8.250267028808594
    3. ' print' → logprob: -12.125267028808594
    4. '```' → logprob: -15.625267028808594
    5. ' if' → logprob: -16.625267028808594
    6. '
' → logprob: -16.875267028808594
    7. '   ' → logprob: -18.125267028808594
    8. 'result' → logprob: -20.125267028808594
    9. '``' → logprob: -20.750267028808594
    10. 'pr' → logprob: -21.000267028808594

Token 487: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11290121078491211
    2. ' ans' → logprob: -2.237901210784912
    3. 'dist' → logprob: -10.23790168762207
    4. ' dist' → logprob: -10.48790168762207
    5. '(ans' → logprob: -11.73790168762207
    6. 'a' → logprob: -12.48790168762207
    7. '	ans' → logprob: -13.73790168762207
    8. ' a' → logprob: -13.98790168762207
    9. ' ' → logprob: -14.61290168762207
    10. '0' → logprob: -14.86290168762207

Token 488: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.319370302458992e-06
    2. 'a' → logprob: -12.250005722045898
    3. '[i' → logprob: -15.750005722045898
    4. '[b' → logprob: -15.875005722045898
    5. '[' → logprob: -16.1250057220459
    6. '][' → logprob: -17.5000057220459
    7. '}[' → logprob: -17.7500057220459
    8. '```' → logprob: -18.0000057220459
    9. ' [' → logprob: -18.7500057220459
    10. '   ' → logprob: -19.0000057220459

Token 489: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009845096617937088
    2. '[b' → logprob: -4.63484525680542
    3. '[' → logprob: -10.134844779968262
    4. '[a' → logprob: -10.384844779968262
    5. 'b' → logprob: -12.009844779968262
    6. ']' → logprob: -12.259844779968262
    7. ' ][' → logprob: -12.759844779968262
    8. '[j' → logprob: -13.884844779968262
    9. '   ' → logprob: -14.634844779968262
    10. 'a' → logprob: -14.759844779968262

Token 490: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.128163257315464e-07
    2. ' b' → logprob: -15.25
    3. '	b' → logprob: -18.125
    4. 'a' → logprob: -18.75
    5. '>b' → logprob: -18.75
    6. '[b' → logprob: -19.0
    7. ')b' → logprob: -19.0
    8. '   ' → logprob: -19.0
    9. ']' → logprob: -19.125
    10. '[' → logprob: -19.375

Token 491: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1415613442659378
    2. ' ==' → logprob: -2.141561269760132
    3. ']' → logprob: -4.641561508178711
    4. ']==' → logprob: -5.516561508178711
    5. '<' → logprob: -8.266561508178711
    6. '==-' → logprob: -8.516561508178711
    7. '>=' → logprob: -8.641561508178711
    8. '[' → logprob: -9.141561508178711
    9. '>' → logprob: -10.016561508178711
    10. '!=' → logprob: -11.016561508178711

Token 492: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0488961897790432
    2. ' ==' → logprob: -3.173896074295044
    3. '>=' → logprob: -5.673896312713623
    4. '<' → logprob: -6.298896312713623
    5. '==-' → logprob: -8.548895835876465
    6. '<=' → logprob: -8.798895835876465
    7. '!=' → logprob: -9.048895835876465
    8. '>' → logprob: -9.548895835876465
    9. ' >=' → logprob: -10.548895835876465
    10. '[' → logprob: -10.923895835876465

Token 493: ' ' (ID: 220)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.4049514830112457
    2. '0' → logprob: -1.1549514532089233
    3. '-' → logprob: -4.529951572418213
    4. 'float' → logprob: -5.029951572418213
    5. 'inf' → logprob: -8.529951095581055
    6. 'sys' → logprob: -9.154951095581055
    7. '-INF' → logprob: -9.779951095581055
    8. ' INF' → logprob: -10.029951095581055
    9. '10' → logprob: -10.404951095581055
    10. ' ' → logprob: -10.654951095581055

Token 494: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2794511318206787
    2. 'INF' → logprob: -1.5294511318206787
    3. 'float' → logprob: -4.279451370239258
    4. '-' → logprob: -4.404451370239258
    5. '10' → logprob: -7.654451370239258
    6. 'inf' → logprob: -8.404451370239258
    7. 'sys' → logprob: -9.529451370239258
    8. '(' → logprob: -10.154451370239258
    9. '-INF' → logprob: -10.154451370239258
    10. '999' → logprob: -10.154451370239258

Token 495: '0' (ID: 15)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.07647988945245743
    2. '00' → logprob: -2.701479911804199
    3. '0' → logprob: -5.701479911804199
    4. '**' → logprob: -6.576479911804199
    5. ':' → logprob: -6.951479911804199
    6. ':
' → logprob: -8.4514799118042
    7. '-' → logprob: -8.4514799118042
    8. '_' → logprob: -9.0764799118042
    9. ' ' → logprob: -10.2639799118042
    10. '```' → logprob: -10.3889799118042

Token 496: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.48896700143814087
    2. ':' → logprob: -0.9889670014381409
    3. '0' → logprob: -4.488966941833496
    4. '000' → logprob: -6.238966941833496
    5. '   ' → logprob: -7.363966941833496
    6. '00' → logprob: -7.488966941833496
    7. ' or' → logprob: -8.363966941833496
    8. ':return' → logprob: -9.613966941833496
    9. '       ' → logprob: -10.988966941833496
    10. ':
' → logprob: -11.363966941833496

Token 497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00617182906717062
    2. 'print' → logprob: -5.756171703338623
    3. '   ' → logprob: -6.506171703338623
    4. ' print' → logprob: -7.131171703338623
    5. ':' → logprob: -7.756171703338623
    6. ' or' → logprob: -9.131172180175781
    7. ':
' → logprob: -9.256172180175781
    8. '	print' → logprob: -11.631172180175781
    9. '	' → logprob: -11.756172180175781
    10. '.' → logprob: -12.006172180175781

Token 498: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.398067828034982e-05
    2. '   ' → logprob: -9.62507438659668
    3. ' print' → logprob: -12.37507438659668
    4. '```' → logprob: -12.87507438659668
    5. '
' → logprob: -14.50007438659668
    6. '	print' → logprob: -15.37507438659668
    7. '    
' → logprob: -16.12507438659668
    8. 'ans' → logprob: -16.75007438659668
    9. '``' → logprob: -16.87507438659668
    10. '-' → logprob: -17.00007438659668

Token 499: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.704273118884885e-07
    2. ' -' → logprob: -14.875000953674316
    3. '(-' → logprob: -15.250000953674316
    4. '-inf' → logprob: -18.125
    5. '"-' → logprob: -18.25
    6. '```' → logprob: -18.375
    7. '-INF' → logprob: -18.5
    8. '10' → logprob: -18.5
    9. '\-' → logprob: -18.625
    10. '0' → logprob: -18.75

Token 500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. ')' → logprob: -17.875
    4. '2' → logprob: -18.0
    5. '11' → logprob: -18.875
    6. '10' → logprob: -19.5625
    7. '000' → logprob: -19.625
    8. '```' → logprob: -19.6875
    9. '01' → logprob: -20.1875
    10. '100' → logprob: -20.5

Token 501: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005591244902461767
    2. ')
' → logprob: -5.25559139251709
    3. '   ' → logprob: -8.00559139251709
    4. 'else' → logprob: -11.88059139251709
    5. ' )' → logprob: -12.25559139251709
    6. '       ' → logprob: -12.38059139251709
    7. ' else' → logprob: -12.75559139251709
    8. '())' → logprob: -13.88059139251709
    9. '<|end|>' → logprob: -14.00559139251709
    10. '	else' → logprob: -14.75559139251709

Token 502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10642290860414505
    2. 'else' → logprob: -2.3564229011535645
    3. ' else' → logprob: -5.2314229011535645
    4. '       ' → logprob: -7.3564229011535645
    5. '	else' → logprob: -9.106423377990723
    6. ')' → logprob: -10.106423377990723
    7. '<|end|>' → logprob: -10.731423377990723
    8. ' ' → logprob: -11.981423377990723
    9. '```' → logprob: -12.231423377990723
    10. 'continue' → logprob: -12.356423377990723

Token 503: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07914765179157257
    2. ' else' → logprob: -2.5791475772857666
    3. '   ' → logprob: -8.329147338867188
    4. '	else' → logprob: -11.704147338867188
    5. '<|end|>' → logprob: -12.704147338867188
    6. 'elif' → logprob: -12.954147338867188
    7. '       ' → logprob: -13.829147338867188
    8. '```' → logprob: -14.704147338867188
    9. ' ' → logprob: -14.829147338867188
    10. 'continue' → logprob: -14.829147338867188

Token 504: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04220764711499214
    2. ':' → logprob: -3.542207717895508
    3. ':
' → logprob: -4.417207717895508
    4. '   ' → logprob: -8.792207717895508
    5. 'print' → logprob: -9.917207717895508
    6. '           ' → logprob: -10.417207717895508
    7. ' print' → logprob: -10.792207717895508
    8. '():
' → logprob: -11.417207717895508
    9. ',' → logprob: -11.792207717895508
    10. ' :
' → logprob: -12.042207717895508

Token 505: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.698846161365509
    2. ' print' → logprob: -0.698846161365509
    3. '       ' → logprob: -5.198846340179443
    4. '   ' → logprob: -8.823845863342285
    5. '           ' → logprob: -12.573845863342285
    6. '    ' → logprob: -12.823845863342285
    7. '```' → logprob: -12.823845863342285
    8. '	print' → logprob: -13.448845863342285
    9. ' ' → logprob: -14.073845863342285
    10. ' ' → logprob: -14.698845863342285

Token 506: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.5491004129871726e-05
    2. ' print' → logprob: -10.000045776367188
    3. '```' → logprob: -18.125045776367188
    4. '   ' → logprob: -19.000045776367188
    5. '       ' → logprob: -21.000045776367188
    6. '	print' → logprob: -21.500045776367188
    7. '
' → logprob: -23.500045776367188
    8. '``' → logprob: -23.500045776367188
    9. 'printf' → logprob: -23.625045776367188
    10. '.print' → logprob: -24.125045776367188

Token 507: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04883648455142975
    2. 'ans' → logprob: -3.0488364696502686
    3. ' ans' → logprob: -8.298836708068848
    4. '	ans' → logprob: -16.17383575439453
    5. '(' → logprob: -17.42383575439453
    6. '_ans' → logprob: -19.04883575439453
    7. 'Ans' → logprob: -20.17383575439453
    8. 'ANS' → logprob: -20.17383575439453
    9. '0' → logprob: -21.17383575439453
    10. ' (' → logprob: -21.54883575439453

Token 508: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.512236498361744e-07
    2. 'a' → logprob: -15.250000953674316
    3. '[b' → logprob: -15.875000953674316
    4. '[' → logprob: -16.125
    5. ')[' → logprob: -18.625
    6. ' [' → logprob: -19.625
    7. '   ' → logprob: -20.125
    8. ' a' → logprob: -20.125
    9. '[u' → logprob: -20.125
    10. '[i' → logprob: -20.5

Token 509: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00119296764023602
    2. '[b' → logprob: -6.751193046569824
    3. '[a' → logprob: -11.626193046569824
    4. 'b' → logprob: -11.876193046569824
    5. '[' → logprob: -12.626193046569824
    6. ']' → logprob: -13.126193046569824
    7. 'a' → logprob: -14.501193046569824
    8. ' ][' → logprob: -15.001193046569824
    9. ')[' → logprob: -15.876193046569824
    10. '}[' → logprob: -15.876193046569824

Token 510: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. '	b' → logprob: -16.75
    3. ' b' → logprob: -18.375
    4. ')b' → logprob: -18.375
    5. '1' → logprob: -18.875
    6. '[b' → logprob: -19.0
    7. '```' → logprob: -19.0
    8. 'б' → logprob: -20.25
    9. ''b' → logprob: -20.375
    10. '$b' → logprob: -21.0

Token 511: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '))' → logprob: -15.250000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')
' → logprob: -15.750000953674316
    5. '})' → logprob: -16.75
    6. '}' → logprob: -17.375
    7. ')}' → logprob: -17.75
    8. '])' → logprob: -17.875
    9. '())' → logprob: -17.875
    10. '),' → logprob: -18.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 509
Tokens correctement prédits (1ère position, stricte): 203
Tokens correctement prédits (1ère position, avec adaptation): 228
Tokens correctement prédits (top 10): 433
Précision stricte (1ère position): 39.88%
Précision adaptée (1ère position): 44.79%
Précision (top 10): 85.07%
================================================================================
