================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
nums = [int(x) for x in input().split()]
def custom_sort(lst):
    for i in range(len(lst)):
        for j in range(i+1, len(lst)):
            if lst[j] < lst[i]:
                lst[i], lst[j] = lst[j], lst[i]
    return lst

sorted_nums = custom_sort(nums)
def compute_difference(arr):
    return arr[-1] - arr[0]
print(compute_difference(sorted_nums))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'nums' (ID: 44465)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' [' (ID: 723)
  → Token d'amorce (pas de prédiction)

Token 3: 'int' (ID: 491)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06463239341974258
    2. '0' → logprob: -2.8146324157714844
    3. ']' → logprob: -6.064632415771484
    4. '42' → logprob: -8.939632415771484
    5. '4' → logprob: -9.939632415771484
    6. '10' → logprob: -10.314632415771484
    7. '7' → logprob: -10.564632415771484
    8. '```' → logprob: -10.814632415771484
    9. '5' → logprob: -10.939632415771484
    10. '3' → logprob: -11.064632415771484

Token 4: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003491705865599215
    2. ']' → logprob: -8.375349044799805
    3. '[' → logprob: -10.375349044799805
    4. ')' → logprob: -10.500349044799805
    5. '(nums' → logprob: -11.375349044799805
    6. '```' → logprob: -11.625349044799805
    7. '(x' → logprob: -11.875349044799805
    8. '(user' → logprob: -11.875349044799805
    9. '('' → logprob: -12.375349044799805
    10. 's' → logprob: -12.875349044799805

Token 5: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08078363537788391
    2. ')]' → logprob: -2.5807836055755615
    3. ')])' → logprob: -7.330783843994141
    4. '(' → logprob: -7.830783843994141
    5. '(x' → logprob: -7.955783843994141
    6. ']' → logprob: -8.33078384399414
    7. '(nums' → logprob: -9.95578384399414
    8. '))' → logprob: -10.83078384399414
    9. 'for' → logprob: -10.95578384399414
    10. ' )' → logprob: -10.95578384399414

Token 6: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08610878139734268
    2. 'for' → logprob: -3.586108684539795
    3. '(' → logprob: -3.711108684539795
    4. ' for' → logprob: -4.711108684539795
    5. ')]' → logprob: -4.711108684539795
    6. '(x' → logprob: -4.711108684539795
    7. ']' → logprob: -6.711108684539795
    8. ',' → logprob: -7.711108684539795
    9. ' in' → logprob: -7.836108684539795
    10. 'in' → logprob: -8.461109161376953

Token 7: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38254377245903015
    2. ' ' → logprob: -1.5075438022613525
    3. ' in' → logprob: -2.8825438022613525
    4. ' range' → logprob: -3.3825438022613525
    5. 'range' → logprob: -6.257543563842773
    6. 'x' → logprob: -6.757543563842773
    7. '  ' → logprob: -7.007543563842773
    8. 'in' → logprob: -7.382543563842773
    9. ' xrange' → logprob: -7.882543563842773
    10. '<|end|>' → logprob: -8.007543563842773

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026304712519049644
    2. 'in' → logprob: -3.6513047218322754
    3. 'import' → logprob: -13.526304244995117
    4. ' ' → logprob: -13.526304244995117
    5. '	in' → logprob: -14.651304244995117
    6. '<|end|>' → logprob: -14.776304244995117
    7. 'inx' → logprob: -16.026304244995117
    8. ')' → logprob: -16.463804244995117
    9. '_in' → logprob: -16.526304244995117
    10. 'space' → logprob: -16.588804244995117

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.122062087059021
    2. ' input' → logprob: -1.122062087059021
    3. 'range' → logprob: -1.747062087059021
    4. ' range' → logprob: -1.747062087059021
    5. ' nums' → logprob: -9.747061729431152
    6. '"' → logprob: -9.997061729431152
    7. 'nums' → logprob: -10.372061729431152
    8. ' ' → logprob: -10.747061729431152
    9. '(input' → logprob: -11.122061729431152
    10. ''' → logprob: -11.747061729431152

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05904302000999451
    2. '()]' → logprob: -3.5590429306030273
    3. ']' → logprob: -3.9340429306030273
    4. '()' → logprob: -5.559042930603027
    5. ')]' → logprob: -6.934042930603027
    6. ']()' → logprob: -7.184042930603027
    7. ')' → logprob: -7.309042930603027
    8. '())' → logprob: -7.559042930603027
    9. '[' → logprob: -7.934042930603027
    10. '('' → logprob: -8.184042930603027

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007309010834433138
    2. 'strip' → logprob: -7.250730991363525
    3. 'rstrip' → logprob: -10.875730514526367
    4. ' split' → logprob: -13.375730514526367
    5. ')' → logprob: -15.750730514526367
    6. '(split' → logprob: -15.875730514526367
    7. 'replace' → logprob: -16.250730514526367
    8. 'spl' → logprob: -16.750730514526367
    9. '()' → logprob: -18.000730514526367
    10. 'read' → logprob: -18.375730514526367

Token 12: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.009853360243141651
    2. '())' → logprob: -5.384853363037109
    3. '()' → logprob: -5.884853363037109
    4. '(' → logprob: -6.259853363037109
    5. ')]' → logprob: -8.13485336303711
    6. ']' → logprob: -8.63485336303711
    7. ']()' → logprob: -11.50985336303711
    8. ')' → logprob: -11.88485336303711
    9. '`]' → logprob: -11.88485336303711
    10. '()][' → logprob: -12.00985336303711

Token 13: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4215153455734253
    2. 'if' → logprob: -1.9215153455734253
    3. '[' → logprob: -2.546515464782715
    4. '+' → logprob: -3.421515464782715
    5. 'for' → logprob: -3.421515464782715
    6. '#' → logprob: -4.671515464782715
    7. ':' → logprob: -5.046515464782715
    8. ',' → logprob: -5.296515464782715
    9. '```' → logprob: -5.296515464782715
    10. ' if' → logprob: -5.796515464782715

Token 14: ' custom' (ID: 2602)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1846625953912735
    2. ' sum' → logprob: -2.5596625804901123
    3. ' max' → logprob: -4.059662818908691
    4. ' space' → logprob: -4.434662818908691
    5. ' factorial' → logprob: -4.559662818908691
    6. ' find' → logprob: -4.934662818908691
    7. ' calculate' → logprob: -5.309662818908691
    8. '_' → logprob: -5.309662818908691
    9. ' ' → logprob: -5.559662818908691
    10. ' add' → logprob: -5.559662818908691

Token 15: '_sort' (ID: 43815)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04514636844396591
    2. '_function' → logprob: -3.1701464653015137
    3. ' _' → logprob: -7.670146465301514
    4. '_func' → logprob: -8.045145988464355
    5. '(' → logprob: -8.420145988464355
    6. '_f' → logprob: -8.545145988464355
    7. '_filter' → logprob: -9.045145988464355
    8. '_sort' → logprob: -9.170145988464355
    9. '_sum' → logprob: -9.795145988464355
    10. '_append' → logprob: -9.920145988464355

Token 16: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013697978109121323
    2. '(nums' → logprob: -4.388698101043701
    3. '_' → logprob: -7.013698101043701
    4. '_(' → logprob: -9.138697624206543
    5. '(_' → logprob: -10.388697624206543
    6. '(items' → logprob: -11.013697624206543
    7. '((' → logprob: -11.388697624206543
    8. '(numbers' → logprob: -11.388697624206543
    9. '(lst' → logprob: -11.513697624206543
    10. '(ls' → logprob: -11.513697624206543

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1854233741760254
    2. ',' → logprob: -1.9354233741760254
    3. ')' → logprob: -3.8104233741760254
    4. '[' → logprob: -6.810423374176025
    5. '(' → logprob: -6.935423374176025
    6. ' ):' → logprob: -9.185422897338867
    7. '(lst' → logprob: -9.310422897338867
    8. '[]):' → logprob: -9.685422897338867
    9. '_' → logprob: -9.810422897338867
    10. ']:' → logprob: -10.435422897338867

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022146310657262802
    2. ' lst' → logprob: -5.397146224975586
    3. ' return' → logprob: -5.772146224975586
    4. 'return' → logprob: -5.772146224975586
    5. 'lst' → logprob: -5.772146224975586
    6. ':' → logprob: -6.022146224975586
    7. ' sorted' → logprob: -6.772146224975586
    8. '    
' → logprob: -6.897146224975586
    9. '```' → logprob: -7.022146224975586
    10. '(lst' → logprob: -7.272146224975586

Token 19: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5022185444831848
    2. 'lst' → logprob: -1.62721848487854
    3. 'return' → logprob: -2.12721848487854
    4. ' lst' → logprob: -2.75221848487854
    5. ' return' → logprob: -4.752218723297119
    6. 'sorted' → logprob: -5.377218723297119
    7. ' sorted' → logprob: -6.627218723297119
    8. '    ' → logprob: -8.002218246459961
    9. ' ' → logprob: -8.377218246459961
    10. '```' → logprob: -8.877218246459961

Token 20: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.001737539772875607
    2. ' ' → logprob: -6.751737594604492
    3. 'i' → logprob: -7.501737594604492
    4. ' _' → logprob: -11.626737594604492
    5. '_' → logprob: -13.251737594604492
    6. '  ' → logprob: -13.626737594604492
    7. ' space' → logprob: -14.376737594604492
    8. '	i' → logprob: -14.751737594604492
    9. ' range' → logprob: -14.876737594604492
    10. ' j' → logprob: -15.001737594604492

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01534844096750021
    2. 'in' → logprob: -4.265348434448242
    3. ' ' → logprob: -7.265348434448242
    4. '  ' → logprob: -8.015348434448242
    5. 'n' → logprob: -9.390348434448242
    6. '   ' → logprob: -10.140348434448242
    7. '    ' → logprob: -11.765348434448242
    8. ' n' → logprob: -12.015348434448242
    9. ',' → logprob: -12.515348434448242
    10. ' i' → logprob: -12.765348434448242

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04859123006463051
    2. 'range' → logprob: -3.048591136932373
    3. ' ' → logprob: -13.423591613769531
    4. '	range' → logprob: -13.673591613769531
    5. '   ' → logprob: -14.173591613769531
    6. '  ' → logprob: -15.548591613769531
    7. ' xrange' → logprob: -16.17359161376953
    8. ')' → logprob: -16.42359161376953
    9. '0' → logprob: -16.79859161376953
    10. '    ' → logprob: -17.29859161376953

Token 23: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.07889331132173538
    2. '(' → logprob: -2.5788934230804443
    3. ' (' → logprob: -12.953893661499023
    4. ' len' → logprob: -14.328893661499023
    5. '(length' → logprob: -15.703893661499023
    6. 'len' → logprob: -15.953893661499023
    7. '(n' → logprob: -16.203893661499023
    8. ' ' → logprob: -16.203893661499023
    9. '<len' → logprob: -16.328893661499023
    10. '(range' → logprob: -17.578893661499023

Token 24: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.21306459605693817
    2. '(' → logprob: -1.7130645513534546
    3. '(nums' → logprob: -4.463064670562744
    4. '(l' → logprob: -11.463064193725586
    5. '(
' → logprob: -11.588064193725586
    6. '(ls' → logprob: -11.588064193725586
    7. '(lista' → logprob: -11.963064193725586
    8. '(

' → logprob: -12.213064193725586
    9. '(s' → logprob: -12.713064193725586
    10. '(n' → logprob: -13.088064193725586

Token 25: ')):
' (ID: 22530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6080576181411743
    2. ')):' → logprob: -0.8580576181411743
    3. '))' → logprob: -4.358057498931885
    4. ')-' → logprob: -4.858057498931885
    5. '):' → logprob: -4.983057498931885
    6. ')):
' → logprob: -6.483057498931885
    7. '-' → logprob: -6.608057498931885
    8. '   ' → logprob: -7.608057498931885
    9. ' -' → logprob: -7.733057498931885
    10. ' ' → logprob: -9.233057975769043

Token 26: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.12588419020175934
    2. '   ' → logprob: -3.0008842945098877
    3. '       ' → logprob: -3.1258842945098877
    4. ' ' → logprob: -3.8758842945098877
    5. '        ' → logprob: -7.125884056091309
    6. ' for' → logprob: -7.500884056091309
    7. ':' → logprob: -7.500884056091309
    8. '<|end|>' → logprob: -7.500884056091309
    9. '     ' → logprob: -8.000884056091309
    10. '     
' → logprob: -8.375884056091309

Token 27: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12986759841442108
    2. '    ' → logprob: -2.7548675537109375
    3. '   ' → logprob: -3.2548675537109375
    4. 'for' (adapté à ' for') → logprob: -4.0048675537109375
    5. '       ' → logprob: -7.2548675537109375
    6. ' ' → logprob: -7.7548675537109375
    7. '  ' → logprob: -9.504867553710938
    8. '	for' → logprob: -10.629867553710938
    9. ' j' → logprob: -10.754867553710938
    10. '<|end|>' → logprob: -11.379867553710938

Token 28: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.21874044835567474
    2. ' range' → logprob: -1.843740463256836
    3. 'j' → logprob: -3.968740463256836
    4. 'range' → logprob: -3.968740463256836
    5. ' ' → logprob: -9.218740463256836
    6. '<|end|>' → logprob: -9.218740463256836
    7. ' ' → logprob: -9.593740463256836
    8. '```' → logprob: -9.968740463256836
    9. ')' → logprob: -10.718740463256836
    10. '_range' → logprob: -10.718740463256836

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00919943954795599
    2. 'in' → logprob: -4.759199619293213
    3. ' ' → logprob: -8.259199142456055
    4. '    ' → logprob: -8.634199142456055
    5. 'range' → logprob: -10.009199142456055
    6. ' range' → logprob: -10.009199142456055
    7. '<|end|>' → logprob: -10.384199142456055
    8. '   ' → logprob: -12.134199142456055
    9. '	in' → logprob: -12.259199142456055
    10. '        ' → logprob: -12.634199142456055

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008615754544734955
    2. 'range' → logprob: -4.758615970611572
    3. ' ' → logprob: -14.383615493774414
    4. '	range' → logprob: -14.758615493774414
    5. '(range' → logprob: -15.508615493774414
    6. ' xrange' → logprob: -16.258615493774414
    7. ' i' → logprob: -18.383615493774414
    8. '_range' → logprob: -18.508615493774414
    9. '  ' → logprob: -19.883615493774414
    10. '   ' → logprob: -20.008615493774414

Token 31: '(i' (ID: 3649)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.1646960824728012
    2. '(i' → logprob: -1.9146960973739624
    3. '(' → logprob: -5.414696216583252
    4. ' (' → logprob: -12.164695739746094
    5. '(length' → logprob: -13.164695739746094
    6. '(j' → logprob: -13.414695739746094
    7. 'len' → logprob: -14.414695739746094
    8. '<len' → logprob: -14.539695739746094
    9. ' len' → logprob: -15.039695739746094
    10. '(ii' → logprob: -15.414695739746094

Token 32: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0040799472481012344
    2. ' +' → logprob: -5.504079818725586
    3. '+)' → logprob: -14.379079818725586
    4. '1' → logprob: -14.879079818725586
    5. '+,' → logprob: -15.379079818725586
    6. '+
' → logprob: -15.754079818725586
    7. '+j' → logprob: -16.504079818725586
    8. ')+' → logprob: -17.629079818725586
    9. '()+' → logprob: -17.629079818725586
    10. ',' → logprob: -17.754079818725586

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. ' ' → logprob: -11.000019073486328
    3. 'len' → logprob: -13.375019073486328
    4. '<|end|>' → logprob: -14.500019073486328
    5. '   ' → logprob: -16.875019073486328
    6. '```' → logprob: -17.250019073486328
    7. ')' → logprob: -17.625019073486328
    8. '  ' → logprob: -18.125019073486328
    9. ' len' → logprob: -18.375019073486328
    10. '<len' → logprob: -18.375019073486328

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2016347497701645
    2. ',len' → logprob: -1.7016347646713257
    3. ',length' → logprob: -9.326634407043457
    4. 'len' → logprob: -10.326634407043457
    5. ')' → logprob: -10.701634407043457
    6. '<len' → logprob: -10.826634407043457
    7. ' ,' → logprob: -11.076634407043457
    8. ',num' → logprob: -11.451634407043457
    9. ',n' → logprob: -11.576634407043457
    10. '(len' → logprob: -11.951634407043457

Token 35: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02326621301472187
    2. ' len' → logprob: -3.773266315460205
    3. '   ' → logprob: -11.523265838623047
    4. '	len' → logprob: -12.273265838623047
    5. '<len' → logprob: -13.023265838623047
    6. '(len' → logprob: -13.648265838623047
    7. ',len' → logprob: -13.773265838623047
    8. ')' → logprob: -14.898265838623047
    9. '[len' → logprob: -14.898265838623047
    10. '=len' → logprob: -15.148265838623047

Token 36: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -4.394135612528771e-05
    2. '(' → logprob: -10.250043869018555
    3. '(nums' → logprob: -12.000043869018555
    4. '(ls' → logprob: -13.875043869018555
    5. '(lista' → logprob: -14.500043869018555
    6. '(l' → logprob: -14.625043869018555
    7. '(list' → logprob: -15.375043869018555
    8. 'lst' → logprob: -16.000043869018555
    9. '(len' → logprob: -17.500043869018555
    10. '(arr' → logprob: -18.000043869018555

Token 37: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.005337643437087536
    2. '))' → logprob: -5.505337715148926
    3. '):' → logprob: -6.880337715148926
    4. ')):
' → logprob: -8.755337715148926
    5. '       ' → logprob: -10.755337715148926
    6. ':' → logprob: -11.005337715148926
    7. ')):
' → logprob: -11.380337715148926
    8. ')' → logprob: -11.630337715148926
    9. '   ' → logprob: -12.880337715148926
    10. ' ' → logprob: -13.380337715148926

Token 38: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6970436573028564
    2. ':' → logprob: -0.9470436573028564
    3. '           ' → logprob: -2.3220436573028564
    4. ':
' → logprob: -5.447043418884277
    5. ' :' → logprob: -5.697043418884277
    6. '<|end|>' → logprob: -5.822043418884277
    7. '   ' → logprob: -6.447043418884277
    8. '               ' → logprob: -7.447043418884277
    9. ' ' → logprob: -7.447043418884277
    10. '<|end|>' → logprob: -8.197043418884277

Token 39: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2730677127838135
    2. 'if' (adapté à ' if') → logprob: -2.1480677127838135
    3. '               ' → logprob: -3.2730677127838135
    4. ' 
' → logprob: -3.5230677127838135
    5. '           ' → logprob: -3.6480677127838135
    6. ' ' → logprob: -4.148067474365234
    7. '\n' → logprob: -5.773067474365234
    8. '       ' → logprob: -6.398067474365234
    9. '            
' → logprob: -6.648067474365234
    10. ':' → logprob: -6.773067474365234

Token 40: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.00012094692647224292
    2. 'lst' → logprob: -9.750121116638184
    3. ' nums' → logprob: -9.750121116638184
    4. ' ls' → logprob: -13.125121116638184
    5. '(lst' → logprob: -13.500121116638184
    6. ' len' → logprob: -15.375121116638184
    7. ' abs' → logprob: -15.750121116638184
    8. '_lst' → logprob: -15.875121116638184
    9. '    ' → logprob: -16.000120162963867
    10. ' ' → logprob: -16.250120162963867

Token 41: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.25198987126350403
    2. '[i' → logprob: -1.5019898414611816
    3. '[' → logprob: -9.75199031829834
    4. '```' → logprob: -14.50199031829834
    5. '[I' → logprob: -14.50199031829834
    6. '[index' → logprob: -15.25199031829834
    7. '[
' → logprob: -15.37699031829834
    8. '[min' → logprob: -15.37699031829834
    9. '[a' → logprob: -16.126989364624023
    10. '[k' → logprob: -16.126989364624023

Token 42: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5437397360801697
    2. '%' → logprob: -2.0437397956848145
    3. ']' → logprob: -2.0437397956848145
    4. ' %' → logprob: -2.7937397956848145
    5. '<' → logprob: -3.0437397956848145
    6. '>' → logprob: -4.0437397956848145
    7. '[' → logprob: -4.4187397956848145
    8. ')' → logprob: -4.7937397956848145
    9. ' ' → logprob: -4.7937397956848145
    10. ' >' → logprob: -6.0437397956848145

Token 43: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11716447025537491
    2. '<' → logprob: -2.617164373397827
    3. '%' → logprob: -3.867164373397827
    4. '>' → logprob: -4.867164611816406
    5. ' >' → logprob: -5.617164611816406
    6. ' %' → logprob: -5.867164611816406
    7. ' ' → logprob: -6.617164611816406
    8. '[' → logprob: -8.242164611816406
    9. ')' → logprob: -8.742164611816406
    10. '<|end|>' → logprob: -8.867164611816406

Token 44: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.12695908546447754
    2. 'lst' → logprob: -2.1269590854644775
    3. '_lst' → logprob: -11.376958847045898
    4. '(lst' → logprob: -11.501958847045898
    5. ' ' → logprob: -12.001958847045898
    6. ' nums' → logprob: -14.126958847045898
    7. '.lst' → logprob: -14.251958847045898
    8. ' ' → logprob: -14.876958847045898
    9. ' ls' → logprob: -15.626958847045898
    10. 'Lst' → logprob: -15.751958847045898

Token 45: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023596010578330606
    2. '[j' → logprob: -8.500235557556152
    3. '][' → logprob: -11.000235557556152
    4. '[' → logprob: -11.125235557556152
    5. ']' → logprob: -15.000235557556152
    6. 'i' → logprob: -15.375235557556152
    7. '[I' → logprob: -16.25023651123047
    8. '[l' → logprob: -16.37523651123047
    9. ')[' → logprob: -16.62523651123047
    10. '```' → logprob: -17.62523651123047

Token 46: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000981243560090661
    2. ']:' → logprob: -8.000981330871582
    3. ')' → logprob: -8.250981330871582
    4. ':' → logprob: -8.625981330871582
    5. ' ):' → logprob: -9.000981330871582
    6. ']):' → logprob: -10.375981330871582
    7. '       ' → logprob: -10.875981330871582
    8. '):
' → logprob: -11.000981330871582
    9. '           ' → logprob: -12.250981330871582
    10. '               ' → logprob: -13.500981330871582

Token 47: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008804833516478539
    2. '           ' → logprob: -5.758804798126221
    3. ',' → logprob: -7.133804798126221
    4. ':
' → logprob: -7.258804798126221
    5. ':' → logprob: -7.383804798126221
    6. '.swap' → logprob: -7.383804798126221
    7. '                
' → logprob: -8.008805274963379
    8. '              ' → logprob: -8.133805274963379
    9. 'swap' → logprob: -8.383805274963379
    10. '                ' → logprob: -8.383805274963379

Token 48: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.011660589836537838
    2. 'lst' (adapté à ' lst') → logprob: -4.636660575866699
    3. '               ' → logprob: -6.511660575866699
    4. ' 
' → logprob: -8.7616605758667
    5. '_lst' → logprob: -9.8866605758667
    6. '                   ' → logprob: -10.0116605758667
    7. '(lst' → logprob: -10.1366605758667
    8. '                ' → logprob: -10.3866605758667
    9. '\n' → logprob: -10.7616605758667
    10. '                
' → logprob: -11.0116605758667

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07076987624168396
    2. '[j' → logprob: -3.070769786834717
    3. '[' → logprob: -3.820769786834717
    4. ',' → logprob: -11.570770263671875
    5. '[int' → logprob: -13.195770263671875
    6. '[k' → logprob: -13.445770263671875
    7. '[I' → logprob: -13.570770263671875
    8. '\[' → logprob: -13.570770263671875
    9. '[o' → logprob: -13.695770263671875
    10. '[s' → logprob: -13.945770263671875

Token 50: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0006719246739521623
    2. ',' → logprob: -7.375671863555908
    3. ']' → logprob: -10.500672340393066
    4. '>,' → logprob: -11.500672340393066
    5. '},' → logprob: -12.875672340393066
    6. '],[' → logprob: -13.500672340393066
    7. ''],' → logprob: -13.750672340393066
    8. '"],' → logprob: -13.875672340393066
    9. ' ],' → logprob: -14.250672340393066
    10. '[' → logprob: -14.250672340393066

Token 51: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.023246407508850098
    2. 'lst' → logprob: -3.7732462882995605
    3. '(lst' → logprob: -14.023246765136719
    4. '_lst' → logprob: -16.02324676513672
    5. ' ' → logprob: -18.39824676513672
    6. '<|end|>' → logprob: -18.64824676513672
    7. ' ls' → logprob: -18.89824676513672
    8. '.lst' → logprob: -19.02324676513672
    9. 'Lst' → logprob: -19.14824676513672
    10. ' ' → logprob: -19.89824676513672

Token 52: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -12.125006675720215
    3. '<|end|>' → logprob: -15.875006675720215
    4. ']' → logprob: -16.1250057220459
    5. '[js' → logprob: -16.2500057220459
    6. '```' → logprob: -16.5000057220459
    7. '][' → logprob: -16.6250057220459
    8. '[i' → logprob: -17.0000057220459
    9. '[
' → logprob: -17.2500057220459
    10. '_j' → logprob: -17.3750057220459

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00033188972156494856
    2. ']=' → logprob: -8.37533187866211
    3. '=' → logprob: -9.25033187866211
    4. ')' → logprob: -13.25033187866211
    5. ' ]' → logprob: -13.25033187866211
    6. ' =' → logprob: -13.75033187866211
    7. '}' → logprob: -16.12533187866211
    8. '']' → logprob: -16.75033187866211
    9. '<|end|>' → logprob: -16.75033187866211
    10. ' ' → logprob: -16.87533187866211

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715967319905758
    2. ' =' → logprob: -5.006715774536133
    3. '=

' → logprob: -15.381715774536133
    4. '=
' → logprob: -15.756715774536133
    5. '=int' → logprob: -17.131715774536133
    6. '.=' → logprob: -17.381715774536133
    7. ',' → logprob: -17.631715774536133
    8. '=`' → logprob: -17.756715774536133
    9. '=user' → logprob: -18.381715774536133
    10. '<|end|>' → logprob: -18.381715774536133

Token 55: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.10021130740642548
    2. 'lst' → logprob: -2.3502113819122314
    3. '(lst' → logprob: -12.850211143493652
    4. '_lst' → logprob: -13.600211143493652
    5. ' ls' → logprob: -14.850211143493652
    6. 'Lst' → logprob: -15.725211143493652
    7. '.lst' → logprob: -15.975211143493652
    8. ' ' → logprob: -15.975211143493652
    9. 'ls' → logprob: -16.97521209716797
    10. '               ' → logprob: -18.22521209716797

Token 56: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.804671233519912e-05
    2. '[i' → logprob: -9.37508773803711
    3. 'j' → logprob: -13.50008773803711
    4. '[' → logprob: -13.87508773803711
    5. 'i' → logprob: -15.25008773803711
    6. '```' → logprob: -15.75008773803711
    7. '   ' → logprob: -16.75008773803711
    8. '_j' → logprob: -16.87508773803711
    9. '[js' → logprob: -17.75008773803711
    10. ' ' → logprob: -17.75008773803711

Token 57: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008373909629881382
    2. '],' → logprob: -5.008373737335205
    3. ']' → logprob: -6.633373737335205
    4. ' ,' → logprob: -8.508374214172363
    5. '<|end|>' → logprob: -9.258374214172363
    6. ' ' → logprob: -12.133374214172363
    7. '],[' → logprob: -12.383374214172363
    8. '},' → logprob: -12.508374214172363
    9. '‌,' → logprob: -12.508374214172363
    10. ',
' → logprob: -12.758374214172363

Token 58: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.038042064756155014
    2. ' lst' → logprob: -3.2880420684814453
    3. '(lst' → logprob: -15.038042068481445
    4. '_lst' → logprob: -16.038042068481445
    5. 'ls' → logprob: -16.413042068481445
    6. '.lst' → logprob: -17.413042068481445
    7. ' ' → logprob: -17.538042068481445
    8. 'l' → logprob: -18.413042068481445
    9. 'list' → logprob: -18.538042068481445
    10. 'lis' → logprob: -18.788042068481445

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.125006675720215
    3. '[j' → logprob: -13.750006675720215
    4. 'i' → logprob: -15.625006675720215
    5. ']' → logprob: -18.00000762939453
    6. '[I' → logprob: -18.12500762939453
    7. '][' → logprob: -18.37500762939453
    8. '[
' → logprob: -19.00000762939453
    9. ',i' → logprob: -19.62500762939453
    10. '```' → logprob: -19.75000762939453

Token 60: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00293360254727304
    2. ')' → logprob: -6.252933502197266
    3. '}' → logprob: -7.627933502197266
    4. '<|end|>' → logprob: -7.627933502197266
    5. ']
' → logprob: -11.627933502197266
    6. '<|end|>' → logprob: -11.752933502197266
    7. ')]' → logprob: -12.627933502197266
    8. '']' → logprob: -12.752933502197266
    9. '```' → logprob: -13.252933502197266
    10. ' ]' → logprob: -13.627933502197266

Token 61: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.29727739095687866
    2. '   ' → logprob: -2.0472774505615234
    3. ' ' → logprob: -3.6722774505615234
    4. '
' → logprob: -3.7972774505615234
    5. '<|end|>' → logprob: -3.7972774505615234
    6. 'return' → logprob: -3.9222774505615234
    7. '    
' → logprob: -4.922277450561523
    8. '\' → logprob: -5.297277450561523
    9. ')' → logprob: -5.797277450561523
    10. 'n' → logprob: -5.922277450561523

Token 62: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7514678239822388
    2. '\n' → logprob: -1.6264678239822388
    3. '   ' → logprob: -2.126467704772949
    4. '<|end|>' → logprob: -2.626467704772949
    5. ' ' → logprob: -2.751467704772949
    6. '
' → logprob: -4.001467704772949
    7. ' return' → logprob: -4.251467704772949
    8. '    
' → logprob: -4.751467704772949
    9. '  
' → logprob: -5.376467704772949
    10. ')' → logprob: -5.501467704772949

Token 63: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.5759430527687073
    2. 'lst' → logprob: -0.8259430527687073
    3. '(lst' → logprob: -13.200942993164062
    4. '_lst' → logprob: -14.575942993164062
    5. ' ls' → logprob: -14.825942993164062
    6. ' ' → logprob: -15.200942993164062
    7. 'list' → logprob: -15.700942993164062
    8. 'ls' → logprob: -15.700942993164062
    9. ' ' → logprob: -16.325942993164062
    10. 'l' → logprob: -16.325942993164062

Token 64: '

' (ID: 279)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -1.2334315776824951
    2. 'print' → logprob: -1.3584315776824951
    3. '\n' → logprob: -2.358431577682495
    4. '[' → logprob: -2.358431577682495
    5. '
' → logprob: -2.608431577682495
    6. '<|end|>' → logprob: -2.858431577682495
    7. 'newline' → logprob: -3.733431577682495
    8. '  
' → logprob: -3.983431577682495
    9. 'for' → logprob: -4.358431816101074
    10. '(nums' → logprob: -4.733431816101074

Token 65: 'sorted' (ID: 64288)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2528841495513916
    2. 'nums' → logprob: -1.8778841495513916
    3. 'sorted' → logprob: -3.0028841495513916
    4. 'custom' → logprob: -4.5028839111328125
    5. 'result' → logprob: -5.2528839111328125
    6. '[' → logprob: -6.5028839111328125
    7. 'for' → logprob: -7.2528839111328125
    8. '#' → logprob: -7.7528839111328125
    9. 'n' → logprob: -8.002883911132812
    10. 'new' → logprob: -8.002883911132812

Token 66: '_nums' (ID: 128266)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04862506315112114
    2. '(nums' → logprob: -3.0486249923706055
    3. '(num' → logprob: -11.298624992370605
    4. '(numbers' → logprob: -11.673624992370605
    5. '(sorted' → logprob: -12.048624992370605
    6. '(lst' → logprob: -12.048624992370605
    7. '(ls' → logprob: -14.173624992370605
    8. '(

' → logprob: -14.298624992370605
    9. '(s' → logprob: -14.423624992370605
    10. '(
' → logprob: -14.923624992370605

Token 67: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002990655368193984
    2. '(nums' → logprob: -5.87799072265625
    3. '(sorted' → logprob: -9.12799072265625
    4. '(s' → logprob: -11.12799072265625
    5. '(lst' → logprob: -11.12799072265625
    6. '("("' → logprob: -11.50299072265625
    7. '(ls' → logprob: -12.12799072265625
    8. '(sort' → logprob: -12.62799072265625
    9. ')' → logprob: -12.62799072265625
    10. '=' → logprob: -12.87799072265625

Token 68: ' custom' (ID: 2602)
  Prédit: ' custom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' custom' → logprob: -0.3868774473667145
    2. 'custom' → logprob: -1.136877417564392
    3. '(custom' → logprob: -12.511877059936523
    4. '	custom' → logprob: -13.386877059936523
    5. 'sorted' → logprob: -15.136877059936523
    6. 'nums' → logprob: -15.261877059936523
    7. '_custom' → logprob: -15.261877059936523
    8. ' sorted' → logprob: -15.761877059936523
    9. ' nums' → logprob: -15.886877059936523
    10. '.custom' → logprob: -16.136877059936523

Token 69: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.009231330826878548
    2. '_' → logprob: -4.8842315673828125
    3. '_sorted' → logprob: -6.5092315673828125
    4. '_s' → logprob: -9.009231567382812
    5. ' _' → logprob: -12.509231567382812
    6. '_SORT' → logprob: -13.634231567382812
    7. '```' → logprob: -13.759231567382812
    8. '_split' → logprob: -14.259231567382812
    9. '_sn' → logprob: -14.259231567382812
    10. '__' → logprob: -15.009231567382812

Token 70: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.10082753002643585
    2. '(' → logprob: -2.35082745552063
    3. '(lst' → logprob: -7.725827693939209
    4. '(num' → logprob: -9.22582721710205
    5. '(_' → logprob: -10.47582721710205
    6. '(numbers' → logprob: -10.60082721710205
    7. '(ls' → logprob: -12.10082721710205
    8. '(sorted' → logprob: -12.35082721710205
    9. '_nums' → logprob: -12.85082721710205
    10. '(list' → logprob: -12.97582721710205

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ']' → logprob: -14.12500286102295
    3. '[' → logprob: -14.25000286102295
    4. '))' → logprob: -14.37500286102295
    5. ' )' → logprob: -14.75000286102295
    6. ')]' → logprob: -16.000001907348633
    7. ')}' → logprob: -17.250001907348633
    8. ')
' → logprob: -17.500001907348633
    9. '])' → logprob: -17.875001907348633
    10. '),' → logprob: -18.000001907348633

Token 72: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007379194721579552
    2. 'for' → logprob: -7.250738143920898
    3. 'prin' → logprob: -11.375738143920898
    4. '
' → logprob: -12.125738143920898
    5. '[' → logprob: -12.750738143920898
    6. '<|end|>' → logprob: -13.375738143920898
    7. 'pr' → logprob: -13.625738143920898
    8. '#print' → logprob: -13.875738143920898
    9. '```' → logprob: -13.875738143920898
    10. ' print' → logprob: -14.000738143920898

Token 73: ' compute' (ID: 23864)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -1.2738008499145508
    2. ' calculate' → logprob: -2.148800849914551
    3. ' ' → logprob: -2.398800849914551
    4. ' add' → logprob: -2.398800849914551
    5. ' main' → logprob: -2.398800849914551
    6. ' custom' → logprob: -2.898800849914551
    7. ' print' → logprob: -2.898800849914551
    8. ' factorial' → logprob: -3.023800849914551
    9. ' new' → logprob: -3.273800849914551
    10. ' sum' → logprob: -3.523800849914551

Token 74: '_difference' (ID: 123771)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.10317755490541458
    2. '_average' → logprob: -3.103177547454834
    3. '_' → logprob: -3.478177547454834
    4. '_factor' → logprob: -4.603177547454834
    5. '(' → logprob: -4.728177547454834
    6. '_s' → logprob: -7.603177547454834
    7. '_max' → logprob: -7.853177547454834
    8. '_product' → logprob: -7.853177547454834
    9. '_total' → logprob: -7.853177547454834
    10. '_square' → logprob: -7.853177547454834

Token 75: '(arr' (ID: 19646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4185299575328827
    2. '(nums' → logprob: -1.793529987335205
    3. '(lst' → logprob: -2.043529987335205
    4. '(a' → logprob: -3.793529987335205
    5. '(sorted' → logprob: -4.543529987335205
    6. '(num' → logprob: -5.293529987335205
    7. ' (' → logprob: -5.793529987335205
    8. '(n' → logprob: -6.918529987335205
    9. '(numbers' → logprob: -7.043529987335205
    10. '(list' → logprob: -7.293529987335205

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005543439765460789
    2. ')' → logprob: -8.250554084777832
    3. '):
' → logprob: -9.375554084777832
    4. ',' → logprob: -9.625554084777832
    5. ' ):' → logprob: -10.125554084777832
    6. '[]):' → logprob: -10.375554084777832
    7. '[' → logprob: -10.500554084777832
    8. '   ' → logprob: -10.500554084777832
    9. '[i' → logprob: -12.000554084777832
    10. '):
' → logprob: -13.250554084777832

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000488811288960278
    2. ' return' → logprob: -8.625489234924316
    3. '<|end|>' → logprob: -8.875489234924316
    4. '    
' → logprob: -9.875489234924316
    5. '
' → logprob: -10.500489234924316
    6. '```' → logprob: -11.000489234924316
    7. ' ' → logprob: -11.375489234924316
    8. '<|end|>' → logprob: -11.500489234924316
    9. ' if' → logprob: -11.625489234924316
    10. '    ' → logprob: -11.875489234924316

Token 78: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7369447350502014
    2. ' return' → logprob: -0.8619447350502014
    3. ' max' → logprob: -2.8619446754455566
    4. '   ' → logprob: -4.111944675445557
    5. ' result' → logprob: -4.736944675445557
    6. 'return' (adapté à ' return') → logprob: -4.736944675445557
    7. 'if' → logprob: -5.611944675445557
    8. 'max' → logprob: -5.986944675445557
    9. ' total' → logprob: -7.236944675445557
    10. ' min' → logprob: -8.361945152282715

Token 79: ' arr' (ID: 1724)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7649443745613098
    2. 'arr' → logprob: -1.389944314956665
    3. ' arr' → logprob: -1.514944314956665
    4. 'max' → logprob: -2.764944314956665
    5. ' abs' → logprob: -6.764944553375244
    6. 'abs' → logprob: -7.264944553375244
    7. ' sorted' → logprob: -7.514944553375244
    8. 'sorted' → logprob: -8.264944076538086
    9. 'len' → logprob: -10.889944076538086
    10. ' ' → logprob: -11.514944076538086

Token 80: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0723186731338501
    2. '[' → logprob: -2.9473185539245605
    3. '[len' → logprob: -4.0723185539245605
    4. '[:-' → logprob: -9.947319030761719
    5. '[::-' → logprob: -9.947319030761719
    6. '[:]' → logprob: -9.947319030761719
    7. 'len' → logprob: -10.697319030761719
    8. ' [-' → logprob: -10.947319030761719
    9. '   ' → logprob: -11.947319030761719
    10. '```' → logprob: -11.947319030761719

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.625019073486328
    4. '2' → logprob: -16.687519073486328
    5. '  ' → logprob: -16.937519073486328
    6. '１' → logprob: -17.312519073486328
    7. '    ' → logprob: -17.562519073486328
    8. '```' → logprob: -17.687519073486328
    9. '-' → logprob: -17.812519073486328
    10. '۱' → logprob: -18.312519073486328

Token 82: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04305022954940796
    2. '-' → logprob: -3.1680502891540527
    3. ' ' → logprob: -10.793049812316895
    4. ')' → logprob: -10.918049812316895
    5. ' ' → logprob: -11.543049812316895
    6. '-arr' → logprob: -14.543049812316895
    7. '<|end|>' → logprob: -14.668049812316895
    8. ']' → logprob: -14.918049812316895
    9. '   ' → logprob: -15.168049812316895
    10. '‌' → logprob: -15.293049812316895

Token 83: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1428520828485489
    2. '-' → logprob: -2.0178520679473877
    3. ' ' → logprob: -8.892851829528809
    4. ' ' → logprob: -10.517851829528809
    5. '"' → logprob: -12.267851829528809
    6. ''' → logprob: -13.017851829528809
    7. '  ' → logprob: -13.642851829528809
    8. '`' → logprob: -14.142851829528809
    9. '   ' → logprob: -14.267851829528809
    10. ' –' → logprob: -14.642851829528809

Token 84: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0008067715098150074
    2. ' arr' → logprob: -7.12580680847168
    3. '	arr' → logprob: -13.12580680847168
    4. '   ' → logprob: -16.50080680847168
    5. '$arr' → logprob: -16.62580680847168
    6. ' ' → logprob: -16.87580680847168
    7. '<arr' → logprob: -17.75080680847168
    8. '(arr' → logprob: -17.87580680847168
    9. '[arr' → logprob: -18.37580680847168
    10. '_arr' → logprob: -18.62580680847168

Token 85: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.062003422528505325
    2. '[-' → logprob: -2.8120033740997314
    3. '[len' → logprob: -10.437003135681152
    4. '\[' → logprob: -13.062003135681152
    5. '```' → logprob: -13.312003135681152
    6. '[i' → logprob: -14.812003135681152
    7. '[]' → logprob: -14.812003135681152
    8. '0' → logprob: -15.062003135681152
    9. '[
' → logprob: -15.187003135681152
    10. ''[' → logprob: -15.687003135681152

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013917774776928127
    2. ' ' → logprob: -9.000139236450195
    3. 'arr' → logprob: -11.625139236450195
    4. '   ' → logprob: -12.875139236450195
    5. '[' → logprob: -13.250139236450195
    6. '1' → logprob: -14.187639236450195
    7. '  ' → logprob: -14.875139236450195
    8. ']' → logprob: -14.875139236450195
    9. '-' → logprob: -15.750139236450195
    10. '```' → logprob: -15.750139236450195

Token 87: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020950057660229504
    2. ']' → logprob: -8.50020980834961
    3. '}' → logprob: -13.25020980834961
    4. '<|end|>' → logprob: -13.75020980834961
    5. '）' → logprob: -14.00020980834961
    6. ')
' → logprob: -14.37520980834961
    7. '[' → logprob: -14.87520980834961
    8. '])' → logprob: -15.00020980834961
    9. ' )' → logprob: -15.75020980834961
    10. ')]' → logprob: -16.00020980834961

Token 88: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04332241043448448
    2. 'difference' → logprob: -3.9183223247528076
    3. 'result' → logprob: -4.168322563171387
    4. 'diff' → logprob: -5.543322563171387
    5. '
' → logprob: -5.793322563171387
    6. '```' → logprob: -10.668322563171387
    7. '  
' → logprob: -11.668322563171387
    8. '<|end|>' → logprob: -11.918322563171387
    9. 'dif' → logprob: -12.168322563171387
    10. '

' → logprob: -12.418322563171387

Token 89: '(com' (ID: 27868)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16031795740127563
    2. '(sorted' → logprob: -1.9103178977966309
    3. '(sort' → logprob: -10.035318374633789
    4. '(s' → logprob: -11.160318374633789
    5. '(print' → logprob: -11.535318374633789
    6. '('' → logprob: -11.785318374633789
    7. '("("' → logprob: -12.285318374633789
    8. 'sorted' → logprob: -12.410318374633789
    9. ' (' → logprob: -13.285318374633789
    10. '()' → logprob: -13.910318374633789

Token 90: 'pute' (ID: 13605)
  Prédit: 'pute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.0004071971052326262
    2. 'put' → logprob: -8.250407218933105
    3. 'puted' → logprob: -8.875407218933105
    4. 'ute' → logprob: -12.750407218933105
    5. '_put' → logprob: -13.500407218933105
    6. 'p' → logprob: -14.375407218933105
    7. 'pte' → logprob: -15.000407218933105
    8. 'pt' → logprob: -15.125407218933105
    9. '_' → logprob: -15.375407218933105
    10. 'puter' → logprob: -16.00040626525879

Token 91: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -7.195421494543552e-05
    2. '_' → logprob: -9.87507152557373
    3. '_diff' → logprob: -11.37507152557373
    4. '_sorted' → logprob: -12.25007152557373
    5. '_d' → logprob: -13.37507152557373
    6. 'difference' → logprob: -13.50007152557373
    7. '_distance' → logprob: -14.75007152557373
    8. 'Difference' → logprob: -15.37507152557373
    9. ' difference' → logprob: -16.500072479248047
    10. '_(' → logprob: -16.500072479248047

Token 92: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.040571048855781555
    2. '(nums' → logprob: -3.5405709743499756
    3. '(' → logprob: -4.540571212768555
    4. '(s' → logprob: -9.790571212768555
    5. '(sort' → logprob: -11.415571212768555
    6. '()' → logprob: -12.040571212768555
    7. ')' → logprob: -12.040571212768555
    8. '(lst' → logprob: -12.540571212768555
    9. '(numbers' → logprob: -12.665571212768555
    10. '(num' → logprob: -13.665571212768555

Token 93: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -1.981667537620524e-06
    2. '_num' → logprob: -13.625001907348633
    3. '_' → logprob: -14.875001907348633
    4. '_numbers' → logprob: -15.625001907348633
    5. '(nums' → logprob: -16.000001907348633
    6. '_n' → logprob: -16.500001907348633
    7. 'nums' → logprob: -17.375001907348633
    8. ')_' → logprob: -17.500001907348633
    9. '_vals' → logprob: -18.375001907348633
    10. 'Nums' → logprob: -19.125001907348633

Token 94: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015908108616713434
    2. '))' → logprob: -8.75015926361084
    3. ' )' → logprob: -15.00015926361084
    4. ')`' → logprob: -16.250158309936523
    5. '())' → logprob: -17.125158309936523
    6. ')))' → logprob: -17.250158309936523
    7. '`)' → logprob: -17.375158309936523
    8. ')
' → logprob: -18.000158309936523
    9. '')' → logprob: -18.125158309936523
    10. ')}' → logprob: -18.375158309936523


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 92
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 53.26%
Précision adaptée (1ère position): 54.35%
Précision (top 10): 81.52%
================================================================================
