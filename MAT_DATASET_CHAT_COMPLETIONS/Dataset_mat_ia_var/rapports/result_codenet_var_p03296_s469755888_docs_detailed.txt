================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def count_pairs_in_sequence():
    """
    Lit une séquence d'entiers depuis l'entrée standard, compte pour chaque sous-séquence de nombres identiques
    combien de paires (paquets de deux éléments ayant la même valeur consécutivement) peuvent être formées,
    puis affiche le nombre total de paires trouvées.
    
    Entrée:
        - Un entier N suivi de N entiers séparés par des espaces.
    
    Sortie:
        - Un entier : le total de paires pouvant être formées dans la liste fournie.
    """
    # Lire le nombre d'éléments de la liste
    N = int(input())
    
    # Initialiser la liste qui contiendra les longueurs des sous-séquences consécutives
    dif = []
    
    # Lire la séquence de N entiers
    a = list(map(int, input().split()))
    
    # Initialiser la valeur précédente et le compteur de la séquence courante
    bef = a[0]
    count = 0
    
    # Parcourir la séquence pour détecter les blocs consécutifs de la même valeur
    for i, j in enumerate(a):
        if i == 0:
            # Premier élément : initialiser 'bef' et le compteur de la séquence
            bef = j
            count = 1
        elif j == bef:
            # Même valeur que la précédente : continuer la séquence
            count += 1
        else:
            # Valeur différente : sauvegarder la taille de la séquence précédente,
            # réinitialiser le compteur et mettre à jour 'bef'
            dif.append(count)
            count = 1
            bef = j
    # Ajouter la dernière séquence (en dehors de la boucle)
    dif.append(count)
    
    # Calculer le nombre total de paires (chaque paire = deux éléments identiques consécutifs)
    res = 0
    for seq_len in dif:
        res += seq_len // 2  # Division entière : nombre de paires dans chaque bloc
    
    # Afficher le résultat final
    print(res)

# Appeler la fonction principale
count_pairs_in_sequence()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' count' (ID: 3605)
  → Token d'amorce (pas de prédiction)

Token 2: '_pairs' (ID: 90005)
  → Token d'amorce (pas de prédiction)

Token 3: '_in' (ID: 2267)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008801760151982307
    2. '_' → logprob: -4.7588019371032715
    3. '(_' → logprob: -10.133801460266113
    4. '(_:' → logprob: -10.508801460266113
    5. ' (' → logprob: -10.758801460266113
    6. '(:' → logprob: -10.883801460266113
    7. '```' → logprob: -10.883801460266113
    8. '_:' → logprob: -11.258801460266113
    9. ':' → logprob: -11.508801460266113
    10. '_(' → logprob: -12.508801460266113

Token 4: '_sequence' (ID: 55606)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4634278416633606
    2. 'put' → logprob: -1.7134277820587158
    3. '_string' → logprob: -2.213427782058716
    4. 'string' → logprob: -3.588427782058716
    5. '_list' → logprob: -3.963427782058716
    6. 's' → logprob: -4.963428020477295
    7. 't' → logprob: -5.088428020477295
    8. '_range' → logprob: -5.463428020477295
    9. '_array' → logprob: -6.088428020477295
    10. '_parent' → logprob: -6.088428020477295

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003700165543705225
    2. '(:' → logprob: -8.750370025634766
    3. '_' → logprob: -9.750370025634766
    4. '():' → logprob: -10.000370025634766
    5. ':' → logprob: -10.250370025634766
    6. '(_:' → logprob: -10.750370025634766
    7. '```' → logprob: -11.000370025634766
    8. ' (' → logprob: -11.875370025634766
    9. '(":' → logprob: -12.750370025634766
    10. '(a' → logprob: -13.000370025634766

Token 6: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7476876378059387
    2. '   ' → logprob: -1.122687578201294
    3. '\n' → logprob: -2.122687578201294
    4. '\' → logprob: -2.872687578201294
    5. ':' → logprob: -4.122687816619873
    6. '    ' → logprob: -6.622687816619873
    7. '
' → logprob: -6.747687816619873
    8. '    
' → logprob: -6.997687816619873
    9. '<|end|>' → logprob: -7.622687816619873
    10. '``' → logprob: -7.622687816619873

Token 7: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9050508141517639
    2. '   ' → logprob: -1.4050507545471191
    3. 'a' → logprob: -1.9050507545471191
    4. '\' → logprob: -3.155050754547119
    5. '```' → logprob: -3.280050754547119
    6. '\n' → logprob: -3.655050754547119
    7. ' ' → logprob: -3.905050754547119
    8. '    ' → logprob: -4.280050754547119
    9. 'r' → logprob: -4.780050754547119
    10. '(' → logprob: -4.780050754547119

Token 8: '   ' (ID: 271)
  Prédit: 'Count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Count' → logprob: -0.39776167273521423
    2. 'Counts' → logprob: -1.3977617025375366
    3. '"""' → logprob: -3.772761583328247
    4. 'Calculate' → logprob: -4.022761821746826
    5. 'C' → logprob: -4.522761821746826
    6. 'Returns' → logprob: -4.647761821746826
    7. ' Counts' → logprob: -5.272761821746826
    8. 'Counting' → logprob: -5.397761821746826
    9. '   ' → logprob: -5.647761821746826
    10. 'Calcul' → logprob: -6.397761821746826

Token 9: ' Lit' (ID: 45595)
  Prédit: 'Count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Count' → logprob: -0.19726206362247467
    2. 'Counts' → logprob: -1.8222620487213135
    3. 'Returns' → logprob: -4.822262287139893
    4. 'Calculate' → logprob: -5.947262287139893
    5. 'Return' → logprob: -5.947262287139893
    6. ' Counts' → logprob: -7.072262287139893
    7. '   ' → logprob: -7.322262287139893
    8. 'C' → logprob: -7.447262287139893
    9. '"""' → logprob: -7.697262287139893
    10. 'Calcul' → logprob: -8.072261810302734

Token 10: ' une' (ID: 2463)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.1807471662759781
    2. 'tle' → logprob: -2.1807472705841064
    3. '   ' → logprob: -4.055747032165527
    4. 'eral' → logprob: -4.680747032165527
    5. 'ral' → logprob: -5.055747032165527
    6. 'def' → logprob: -5.805747032165527
    7. 'e' → logprob: -5.930747032165527
    8. 'ers' → logprob: -6.055747032165527
    9. '```' → logprob: -6.305747032165527
    10. 't' → logprob: -6.305747032165527

Token 11: ' sé' (ID: 7462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1879901885986328
    2. 'chaine' → logprob: -3.187990188598633
    3. '   ' → logprob: -3.562990188598633
    4. 's' → logprob: -3.812990188598633
    5. ' chaîne' → logprob: -3.812990188598633
    6. 'sé' → logprob: -4.187990188598633
    7. 'cha' → logprob: -5.187990188598633
    8. ' sequence' → logprob: -5.312990188598633
    9. 'sequence' → logprob: -5.312990188598633
    10. 'texte' → logprob: -5.812990188598633

Token 12: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.001986090559512377
    2. 'q' → logprob: -6.251986026763916
    3. 'quences' → logprob: -11.001986503601074
    4. 'QUENCE' → logprob: -11.626986503601074
    5. '   ' → logprob: -11.751986503601074
    6. 'rie' → logprob: -12.751986503601074
    7. 'qu' → logprob: -12.876986503601074
    8. '#' → logprob: -12.876986503601074
    9. 'que' → logprob: -13.001986503601074
    10. '`' → logprob: -13.251986503601074

Token 13: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6680043935775757
    2. ' et' → logprob: -1.6680043935775757
    3. ' ' → logprob: -1.7930043935775757
    4. '   ' → logprob: -2.7930045127868652
    5. 'de' → logprob: -3.5430045127868652
    6. ' d' → logprob: -4.543004512786865
    7. ',' → logprob: -4.793004512786865
    8. ' en' → logprob: -4.918004512786865
    9. ' complète' → logprob: -5.418004512786865
    10. 'e' → logprob: -6.543004512786865

Token 14: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0170766115188599
    2. ''entrée' → logprob: -1.3920766115188599
    3. ''' → logprob: -1.5170766115188599
    4. ''ent' → logprob: -2.5170764923095703
    5. ' caractères' → logprob: -3.7670764923095703
    6. ''esp' → logprob: -4.39207649230957
    7. ''une' → logprob: -4.76707649230957
    8. ''espace' → logprob: -4.76707649230957
    9. ''un' → logprob: -5.26707649230957
    10. ''e' → logprob: -5.51707649230957

Token 15: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.1284998506307602
    2. 'r' → logprob: -2.503499746322632
    3. 'ier' → logprob: -3.503499746322632
    4. 'ières' → logprob: -6.253499984741211
    5. '```' → logprob: -6.378499984741211
    6. 'i' → logprob: -6.503499984741211
    7. 'êtes' → logprob: -6.878499984741211
    8. 'er' → logprob: -7.378499984741211
    9. 're' → logprob: -8.003499984741211
    10. 'ités' → logprob: -8.253499984741211

Token 16: ' depuis' (ID: 16277)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3597197532653809
    2. ' et' → logprob: -1.4847197532653809
    3. ' ' → logprob: -1.4847197532653809
    4. '   ' → logprob: -2.109719753265381
    5. ' ,' → logprob: -3.234719753265381
    6. 's' → logprob: -3.609719753265381
    7. ' en' → logprob: -3.609719753265381
    8. '.' → logprob: -4.734719753265381
    9. '\n' → logprob: -4.734719753265381
    10. ' (' → logprob: -4.859719753265381

Token 17: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.38901835680007935
    2. 'l' → logprob: -1.2640182971954346
    3. '   ' → logprob: -3.7640182971954346
    4. ' input' → logprob: -4.639018535614014
    5. ' stdin' → logprob: -5.889018535614014
    6. ' ' → logprob: -6.639018535614014
    7. 'input' → logprob: -7.264018535614014
    8. 'stdin' → logprob: -7.639018535614014
    9. ' standard' → logprob: -7.889018535614014
    10. '    ' → logprob: -8.389018058776855

Token 18: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.5115469098091125
    2. 'a' → logprob: -1.1365468502044678
    3. ''' → logprob: -2.8865468502044678
    4. 'e' → logprob: -4.886547088623047
    5. 'entrée' → logprob: -5.136547088623047
    6. 'input' → logprob: -5.261547088623047
    7. ' input' → logprob: -6.761547088623047
    8. '_' → logprob: -6.761547088623047
    9. '   ' → logprob: -6.886547088623047
    10. ' ' → logprob: -8.261547088623047

Token 19: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13932709395885468
    2. ' ' → logprob: -3.389327049255371
    3. '    ' → logprob: -3.514327049255371
    4. '\n' → logprob: -4.139327049255371
    5. ',' → logprob: -4.389327049255371
    6. '\' → logprob: -5.264327049255371
    7. '`' → logprob: -5.389327049255371
    8. '.' → logprob: -5.639327049255371
    9. ' \' → logprob: -5.639327049255371
    10. ' et' → logprob: -5.764327049255371

Token 20: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17038077116012573
    2. '\n' → logprob: -2.4203808307647705
    3. '    ' → logprob: -3.9203808307647705
    4. ',' → logprob: -4.295380592346191
    5. '\' → logprob: -4.670380592346191
    6. '    
' → logprob: -5.045380592346191
    7. '     
' → logprob: -5.545380592346191
    8. '.' → logprob: -5.670380592346191
    9. '
' → logprob: -6.295380592346191
    10. ' ' → logprob: -6.545380592346191

Token 21: ' compte' (ID: 19657)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06307340413331985
    2. ' et' → logprob: -2.9380733966827393
    3. 'et' → logprob: -5.813073635101318
    4. '    ' → logprob: -6.063073635101318
    5. ' puis' → logprob: -7.313073635101318
    6. ' ' → logprob: -7.938073635101318
    7. ' tokenize' → logprob: -8.56307315826416
    8. ' retourne' → logprob: -8.68807315826416
    9. ' line' → logprob: -8.81307315826416
    10. ' ligne' → logprob: -9.31307315826416

Token 22: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0731149911880493
    2. ' les' → logprob: -1.5731149911880493
    3. 's' → logprob: -2.1981148719787598
    4. ' et' → logprob: -2.9481148719787598
    5. 'les' → logprob: -3.0731148719787598
    6. '    ' → logprob: -3.0731148719787598
    7. '_' → logprob: -3.0731148719787598
    8. '   ' → logprob: -3.1981148719787598
    9. '```' → logprob: -3.4481148719787598
    10. ' le' → logprob: -4.07311487197876

Token 23: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.004044563975185156
    2. ' ' → logprob: -5.754044532775879
    3. ' les' → logprob: -8.504044532775879
    4. ' chacune' → logprob: -9.129044532775879
    5. ' each' → logprob: -9.254044532775879
    6. ' la' → logprob: -9.379044532775879
    7. '   ' → logprob: -9.629044532775879
    8. ' every' → logprob: -10.254044532775879
    9. 'les' → logprob: -10.254044532775879
    10. ' le' → logprob: -10.754044532775879

Token 24: ' sous' (ID: 14487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29455870389938354
    2. ' caractère' → logprob: -1.6695587635040283
    3. 'mot' → logprob: -3.6695587635040283
    4. ' espace' → logprob: -4.669558525085449
    5. '```' → logprob: -5.044558525085449
    6. ' caract' → logprob: -5.294558525085449
    7. ' mot' → logprob: -5.419558525085449
    8. '_' → logprob: -6.169558525085449
    9. 'car' → logprob: -6.169558525085449
    10. '  ' → logprob: -6.544558525085449

Token 25: '-s' (ID: 2011)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6932165026664734
    2. '_' → logprob: -0.8182165026664734
    3. '-s' → logprob: -3.568216562271118
    4. '_s' → logprob: -4.318216323852539
    5. 'sé' → logprob: -5.068216323852539
    6. 'chaine' → logprob: -5.693216323852539
    7. 's' → logprob: -6.318216323852539
    8. '_sequence' → logprob: -7.193216323852539
    9. '```' → logprob: -7.193216323852539
    10. '-cha' → logprob: -7.318216323852539

Token 26: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.01136728748679161
    2. 'équ' → logprob: -4.886367321014404
    3. 'è' → logprob: -6.511367321014404
    4. 'ê' → logprob: -7.136367321014404
    5. 'u' → logprob: -8.011366844177246
    6. 'e' → logprob: -8.636366844177246
    7. 'érie' → logprob: -8.761366844177246
    8. 'èque' → logprob: -8.761366844177246
    9. 'ér' → logprob: -9.386366844177246
    10. 'q' → logprob: -9.886366844177246

Token 27: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.024095486849546432
    2. 'q' → logprob: -3.7740955352783203
    3. '`' → logprob: -8.52409553527832
    4. '   ' → logprob: -8.77409553527832
    5. 'quent' → logprob: -9.02409553527832
    6. 'quences' → logprob: -9.14909553527832
    7. '#' → logprob: -9.52409553527832
    8. 'qu' → logprob: -10.02409553527832
    9. '```' → logprob: -10.64909553527832
    10. '_' → logprob: -11.27409553527832

Token 28: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6802718639373779
    2. ' de' → logprob: -2.305271863937378
    3. ' suivante' → logprob: -2.430271863937378
    4. ' ,' → logprob: -2.555271863937378
    5. '<|end|>' → logprob: -3.305271863937378
    6. ' la' → logprob: -3.430271863937378
    7. ' "' → logprob: -3.805271863937378
    8. ' possible' → logprob: -3.805271863937378
    9. ' d' → logprob: -3.930271863937378
    10. ',' → logprob: -4.180272102355957

Token 29: ' nombres' (ID: 76205)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7429185509681702
    2. ' ' → logprob: -1.1179184913635254
    3. ' longueur' → logprob: -2.8679184913635254
    4. ' deux' → logprob: -3.1179184913635254
    5. '2' → logprob: -3.6179184913635254
    6. ' la' → logprob: -4.117918491363525
    7. 'long' → logprob: -4.367918491363525
    8. 'l' → logprob: -4.992918491363525
    9. ' long' → logprob: -5.367918491363525
    10. '1' → logprob: -5.492918491363525

Token 30: ' ident' (ID: 3951)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14635328948497772
    2. ' ,' → logprob: -2.521353244781494
    3. '  ' → logprob: -3.896353244781494
    4. '_' → logprob: -5.021353244781494
    5. ',' → logprob: -5.146353244781494
    6. ' "' → logprob: -5.396353244781494
    7. ' s' → logprob: -6.021353244781494
    8. '<|end|>' → logprob: -6.396353244781494
    9. 's' → logprob: -6.646353244781494
    10. ' )' → logprob: -6.771353244781494

Token 31: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.01107093133032322
    2. 'ique' → logprob: -4.636070728302002
    3. 'i' → logprob: -7.386070728302002
    4. 'ifi' → logprob: -8.13607120513916
    5. '```' → logprob: -9.01107120513916
    6. 'iqu' → logprob: -9.63607120513916
    7. 'es' → logprob: -10.26107120513916
    8. 'iq' → logprob: -10.38607120513916
    9. 'iquement' → logprob: -10.63607120513916
    10. 'ifiques' → logprob: -10.76107120513916

Token 32: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7079427242279053
    2. ',' → logprob: -1.7079427242279053
    3. ' ,' → logprob: -2.3329427242279053
    4. 's' → logprob: -2.5829427242279053
    5. '  ' → logprob: -3.3329427242279053
    6. ' s' → logprob: -3.5829427242279053
    7. '```' → logprob: -3.8329427242279053
    8. '_' → logprob: -3.9579427242279053
    9. '"""' → logprob: -5.207942962646484
    10. ' la' → logprob: -5.332942962646484

Token 33: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8893157839775085
    2. '   ' → logprob: -1.3893158435821533
    3. ',' → logprob: -1.5143158435821533
    4. ' ,' → logprob: -3.5143158435821533
    5. 's' → logprob: -3.6393158435821533
    6. '    ' → logprob: -4.514315605163574
    7. ' et' → logprob: -4.514315605163574
    8. ''' → logprob: -4.639315605163574
    9. '  ' → logprob: -5.139315605163574
    10. '_' → logprob: -5.389315605163574

Token 34: ' combien' (ID: 106648)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13784725964069366
    2. '   ' → logprob: -2.8878471851348877
    3. ',' → logprob: -3.6378471851348877
    4. ''' → logprob: -5.012847423553467
    5. ' ,' → logprob: -5.012847423553467
    6. '    ' → logprob: -5.137847423553467
    7. 's' → logprob: -5.512847423553467
    8. '"' → logprob: -5.762847423553467
    9. '  ' → logprob: -5.887847423553467
    10. ' et' → logprob: -6.137847423553467

Token 35: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.17118985950946808
    2. ' d' → logprob: -2.046189785003662
    3. 'de' → logprob: -3.796189785003662
    4. 'd' → logprob: -5.921189785003662
    5. ' ' → logprob: -6.546189785003662
    6. 's' → logprob: -7.796189785003662
    7. '<|end|>' → logprob: -8.42119026184082
    8. '  ' → logprob: -8.54619026184082
    9. ' il' → logprob: -9.17119026184082
    10. '_de' → logprob: -9.54619026184082

Token 36: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.36392176151275635
    2. ' ' → logprob: -1.6139217615127563
    3. 'élé' → logprob: -3.488921642303467
    4. ' espaces' → logprob: -3.738921642303467
    5. ' pairs' → logprob: -3.738921642303467
    6. 'p' → logprob: -4.738921642303467
    7. ' éléments' → logprob: -4.988921642303467
    8. 'pairs' → logprob: -6.238921642303467
    9. ' fois' → logprob: -6.363921642303467
    10. ' caractères' → logprob: -6.488921642303467

Token 37: 'aires' (ID: 8507)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010416148230433464
    2. 'airs' → logprob: -5.510416030883789
    3. 'aires' → logprob: -6.510416030883789
    4. 'air' → logprob: -6.760416030883789
    5. 'r' → logprob: -7.135416030883789
    6. 'i' → logprob: -7.510416030883789
    7. ' a' → logprob: -7.635416030883789
    8. 'u' → logprob: -8.385416030883789
    9. 'ai' → logprob: -8.510416030883789
    10. 'aire' → logprob: -8.760416030883789

Token 38: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42014288902282715
    2. '   ' → logprob: -1.6701428890228271
    3. ''' → logprob: -3.170142889022827
    4. '"' → logprob: -3.545142889022827
    5. '    ' → logprob: -3.795142889022827
    6. ' de' → logprob: -4.420143127441406
    7. '.' → logprob: -4.670143127441406
    8. '_' → logprob: -5.045143127441406
    9. '"""' → logprob: -5.170143127441406
    10. ')' → logprob: -5.295143127441406

Token 39: 'pa' (ID: 3899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23091834783554077
    2. ' )' → logprob: -1.8559184074401855
    3. ' ' → logprob: -3.9809184074401855
    4. '   ' → logprob: -4.6059184074401855
    5. ' de' → logprob: -4.7309184074401855
    6. 'de' → logprob: -5.2309184074401855
    7. ' d' → logprob: -6.3559184074401855
    8. ' form' → logprob: -6.9809184074401855
    9. 'd' → logprob: -7.6059184074401855
    10. ' deux' → logprob: -7.6059184074401855

Token 40: 'quets' (ID: 82953)
  Prédit: 'ire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.19920982420444489
    2. 'ir' → logprob: -2.5742099285125732
    3. 'i' → logprob: -2.8242099285125732
    4. 'ires' → logprob: -3.4492099285125732
    5. ')' → logprob: -4.949209690093994
    6. '   ' → logprob: -5.949209690093994
    7. 'r' → logprob: -7.074209690093994
    8. 'ired' → logprob: -7.824209690093994
    9. 's' → logprob: -8.074210166931152
    10. 'irs' → logprob: -8.074210166931152

Token 41: ' de' (ID: 334)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.66446453332901
    2. ')' → logprob: -1.0394644737243652
    3. ' de' → logprob: -2.5394644737243652
    4. ' ' → logprob: -3.2894644737243652
    5. 'de' → logprob: -5.039464473724365
    6. ' d' → logprob: -5.164464473724365
    7. '   ' → logprob: -6.164464473724365
    8. '  ' → logprob: -8.539464950561523
    9. 'd' → logprob: -8.914464950561523
    10. '    ' → logprob: -9.164464950561523

Token 42: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5267343521118164
    2. '2' → logprob: -1.0267343521118164
    3. 'de' → logprob: -3.4017343521118164
    4. ' deux' → logprob: -4.026734352111816
    5. ' two' → logprob: -9.151734352111816
    6. '  ' → logprob: -11.901734352111816
    7. ')' → logprob: -11.901734352111816
    8. '```' → logprob: -12.151734352111816
    9. ' dois' → logprob: -12.526734352111816
    10. ' de' → logprob: -12.776734352111816

Token 43: ' éléments' (ID: 57375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12562821805477142
    2. ' )' → logprob: -2.2506282329559326
    3. ' cons' → logprob: -4.5006279945373535
    4. ' ident' → logprob: -7.0006279945373535
    5. '   ' → logprob: -8.375628471374512
    6. 'con' → logprob: -8.750628471374512
    7. ' ' → logprob: -9.750628471374512
    8. 'de' → logprob: -10.000628471374512
    9. 'ident' → logprob: -10.125628471374512
    10. ' de' → logprob: -10.375628471374512

Token 44: ' ayant' (ID: 45436)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11441425234079361
    2. ' )' → logprob: -2.2394142150878906
    3. '   ' → logprob: -6.864414215087891
    4. ' ident' → logprob: -8.23941421508789
    5. ' ' → logprob: -9.48941421508789
    6. 's' → logprob: -9.61441421508789
    7. ' dans' → logprob: -10.86441421508789
    8. ' de' → logprob: -10.98941421508789
    9. ' cons' → logprob: -11.11441421508789
    10. 'de' → logprob: -11.36441421508789

Token 45: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9232293367385864
    2. ' la' → logprob: -1.0482293367385864
    3. 'la' → logprob: -2.048229217529297
    4. ' le' → logprob: -2.548229217529297
    5. ' ' → logprob: -4.173229217529297
    6. '```' → logprob: -5.173229217529297
    7. 'une' → logprob: -5.673229217529297
    8. 'été' → logprob: -5.798229217529297
    9. '   ' → logprob: -6.173229217529297
    10. 's' → logprob: -6.423229217529297

Token 46: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.00837131217122078
    2. 'm' → logprob: -5.758371353149414
    3. ' m' → logprob: -6.133371353149414
    4. ' ' → logprob: -6.258371353149414
    5. ' mêmes' → logprob: -6.883371353149414
    6. ' Même' → logprob: -10.758371353149414
    7. ' meme' → logprob: -12.008371353149414
    8. '-même' → logprob: -12.133371353149414
    9. '   ' → logprob: -12.133371353149414
    10. 'Même' → logprob: -12.258371353149414

Token 47: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.6025955677032471
    2. 'val' → logprob: -1.477595567703247
    3. '   ' → logprob: -2.227595567703247
    4. ' ' → logprob: -2.477595567703247
    5. ' val' → logprob: -3.602595567703247
    6. ' vale' → logprob: -5.977595329284668
    7. '  ' → logprob: -6.727595329284668
    8. '_val' → logprob: -7.602595329284668
    9. '    ' → logprob: -7.852595329284668
    10. ' )' → logprob: -8.977595329284668

Token 48: ' cons' (ID: 1473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016483796760439873
    2. ' )' → logprob: -4.141483783721924
    3. '   ' → logprob: -9.141484260559082
    4. ' ' → logprob: -9.516484260559082
    5. '")' → logprob: -9.641484260559082
    6. ',' → logprob: -9.891484260559082
    7. 's' → logprob: -10.016484260559082
    8. '')' → logprob: -10.641484260559082
    9. 'dans' → logprob: -10.641484260559082
    10. '"' → logprob: -11.641484260559082

Token 49: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.3932338058948517
    2. 'é' → logprob: -1.1432337760925293
    3. 'éc' → logprob: -6.518233776092529
    4. 'e' → logprob: -6.643233776092529
    5. '```' → logprob: -7.018233776092529
    6. '{' → logprob: -7.643233776092529
    7. '\' → logprob: -8.393234252929688
    8. '#' → logprob: -8.393234252929688
    9. '\'' → logprob: -8.518234252929688
    10. '"' → logprob: -8.518234252929688

Token 50: 'ivement' (ID: 37978)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.18415287137031555
    2. 's' → logprob: -2.184152841567993
    3. 'e' → logprob: -3.559152841567993
    4. 'i' → logprob: -4.434153079986572
    5. 'ives' → logprob: -5.809153079986572
    6. 'es' → logprob: -5.809153079986572
    7. '   ' → logprob: -6.184153079986572
    8. 'utive' → logprob: -6.184153079986572
    9. '```' → logprob: -7.059153079986572
    10. 'ents' → logprob: -7.309153079986572

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006902447901666164
    2. ' )' → logprob: -5.00690221786499
    3. ',' → logprob: -9.881902694702148
    4. 'e' → logprob: -10.256902694702148
    5. 's' → logprob: -10.256902694702148
    6. '   ' → logprob: -11.256902694702148
    7. ' ' → logprob: -11.381902694702148
    8. '")' → logprob: -11.381902694702148
    9. '')' → logprob: -12.256902694702148
    10. ')
' → logprob: -12.256902694702148

Token 52: ' peuvent' (ID: 21321)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4635831117630005
    2. ',' → logprob: -2.088582992553711
    3. ' ' → logprob: -2.838582992553711
    4. ')' → logprob: -2.963582992553711
    5. '"' → logprob: -3.213582992553711
    6. '.' → logprob: -3.213582992553711
    7. '"""' → logprob: -4.338582992553711
    8. '    ' → logprob: -4.963582992553711
    9. ''' → logprob: -5.088582992553711
    10. '
' → logprob: -5.463582992553711

Token 53: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.5530911684036255
    2. 'être' → logprob: -1.0530911684036255
    3. ' ' → logprob: -3.053091049194336
    4. ' ' → logprob: -4.928091049194336
    5. ' ê' → logprob: -5.178091049194336
    6. 'ex' → logprob: -5.928091049194336
    7. '   ' → logprob: -6.053091049194336
    8. '    ' → logprob: -6.428091049194336
    9. ' etre' → logprob: -6.678091049194336
    10. 'êtres' → logprob: -6.678091049194336

Token 54: ' form' (ID: 1625)
  Prédit: ' form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' form' → logprob: -0.2590210735797882
    2. 'form' → logprob: -1.5090210437774658
    3. '```' → logprob: -6.134021282196045
    4. '   ' → logprob: -6.259021282196045
    5. ' ' → logprob: -7.384021282196045
    6. ' formed' → logprob: -7.509021282196045
    7. ' compt' → logprob: -7.634021282196045
    8. 'com' → logprob: -8.009020805358887
    9. ' f' → logprob: -9.134020805358887
    10. 'f' → logprob: -9.384020805358887

Token 55: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.8655280470848083
    2. 'ées' → logprob: -0.8655280470848083
    3. 'ée' → logprob: -2.115528106689453
    4. 'és' → logprob: -3.490528106689453
    5. 'er' → logprob: -4.990528106689453
    6. 'e' → logprob: -8.365528106689453
    7. 'es' → logprob: -9.365528106689453
    8. 'ed' → logprob: -9.490528106689453
    9. '```' → logprob: -10.115528106689453
    10. '   ' → logprob: -11.615528106689453

Token 56: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046643130481243134
    2. ',' → logprob: -4.421643257141113
    3. '    ' → logprob: -4.671643257141113
    4. '.' → logprob: -5.171643257141113
    5. '\n' → logprob: -5.171643257141113
    6. '"' → logprob: -6.046643257141113
    7. '
' → logprob: -6.296643257141113
    8. ':' → logprob: -6.421643257141113
    9. ' ' → logprob: -6.671643257141113
    10. '\' → logprob: -6.796643257141113

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026022054255008698
    2. '    ' → logprob: -4.401021957397461
    3. ' et' → logprob: -4.526021957397461
    4. 'et' → logprob: -7.151021957397461
    5. 'e' → logprob: -7.901021957397461
    6. ' ' → logprob: -8.526021957397461
    7. '"' → logprob: -8.651021957397461
    8. '  ' → logprob: -9.276021957397461
    9. ' en' → logprob: -9.276021957397461
    10. ' e' → logprob: -9.401021957397461

Token 58: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021483104676008224
    2. '    ' → logprob: -4.396482944488525
    3. ' et' → logprob: -5.021482944488525
    4. 'et' → logprob: -6.646482944488525
    5. ' ' → logprob: -8.646483421325684
    6. 'e' → logprob: -8.771483421325684
    7. ' ' → logprob: -9.521483421325684
    8. '  ' → logprob: -9.771483421325684
    9. '\n' → logprob: -9.771483421325684
    10. '"' → logprob: -10.271483421325684

Token 59: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10738732665777206
    2. ' return' → logprob: -2.7323873043060303
    3. ' retourne' → logprob: -3.9823873043060303
    4. '    ' → logprob: -5.232387542724609
    5. ' retour' → logprob: -6.607387542724609
    6. ' returns' → logprob: -6.732387542724609
    7. ' retourner' → logprob: -6.857387542724609
    8. ' ' → logprob: -6.982387542724609
    9. ' continues' → logprob: -7.357387542724609
    10. ' ren' → logprob: -7.482387542724609

Token 60: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6174949407577515
    2. ' ' → logprob: -1.4924949407577515
    3. ' l' → logprob: -2.242495059967041
    4. ' la' → logprob: -2.242495059967041
    5. ' chaque' → logprob: -5.492495059967041
    6. ' les' → logprob: -5.742495059967041
    7. '    ' → logprob: -5.867495059967041
    8. '   ' → logprob: -5.867495059967041
    9. 's' → logprob: -6.117495059967041
    10. ' ' → logprob: -6.492495059967041

Token 61: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.02678218111395836
    2. ' résultat' → logprob: -4.401782035827637
    3. ' total' → logprob: -5.151782035827637
    4. 's' → logprob: -5.776782035827637
    5. 'nombre' → logprob: -5.776782035827637
    6. ' code' → logprob: -6.901782035827637
    7. ' nombres' → logprob: -8.276782035827637
    8. ' resultat' → logprob: -8.651782035827637
    9. '   ' → logprob: -9.026782035827637
    10. ' result' → logprob: -9.151782035827637

Token 62: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8353411555290222
    2. '\n' → logprob: -0.8353411555290222
    3. '\' → logprob: -2.835341215133667
    4. '"""' → logprob: -3.460341215133667
    5. '_' → logprob: -4.960340976715088
    6. ' ' → logprob: -5.085340976715088
    7. '"' → logprob: -5.210340976715088
    8. '
' → logprob: -5.710340976715088
    9. '```' → logprob: -5.835340976715088
    10. '    
' → logprob: -5.835340976715088

Token 63: ' de' (ID: 334)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.0021419525146484
    2. '\n' → logprob: -1.2521419525146484
    3. '   ' → logprob: -2.3771419525146484
    4. '
' → logprob: -2.5021419525146484
    5. ' 
' → logprob: -2.8771419525146484
    6. ' ' → logprob: -3.5021419525146484
    7. '    
' → logprob: -3.6271419525146484
    8. '  
' → logprob: -4.002141952514648
    9. '"' → logprob: -4.877141952514648
    10. '"\' → logprob: -5.377141952514648

Token 64: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.15005150437355042
    2. ' pairs' → logprob: -2.0250515937805176
    3. ' ' → logprob: -5.400051593780518
    4. 'p' → logprob: -6.400051593780518
    5. 'pairs' → logprob: -7.650051593780518
    6. ' paire' → logprob: -8.40005111694336
    7. ' espaces' → logprob: -9.77505111694336
    8. '```' → logprob: -9.77505111694336
    9. ' pair' → logprob: -10.27505111694336
    10. '_pairs' → logprob: -10.40005111694336

Token 65: 'aires' (ID: 8507)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.040519993752241135
    2. 'aires' → logprob: -3.540519952774048
    3. 'airs' → logprob: -5.415520191192627
    4. 'ai' → logprob: -5.665520191192627
    5. 'r' → logprob: -6.540520191192627
    6. 'air' → logprob: -7.415520191192627
    7. ' a' → logprob: -9.290519714355469
    8. 'i' → logprob: -9.540519714355469
    9. '`' → logprob: -9.915519714355469
    10. '_' → logprob: -9.915519714355469

Token 66: ' trouv' (ID: 40254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5173608064651489
    2. '\n' → logprob: -1.142360806465149
    3. '
' → logprob: -3.5173606872558594
    4. '    
' → logprob: -4.392360687255859
    5. '\' → logprob: -4.517360687255859
    6. '  
' → logprob: -4.642360687255859
    7. '```' → logprob: -5.267360687255859
    8. ' 
' → logprob: -5.642360687255859
    9. '"""' → logprob: -5.892360687255859
    10. '   
' → logprob: -6.017360687255859

Token 67: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.1610097736120224
    2. 'é' → logprob: -1.9110097885131836
    3. 'és' → logprob: -7.286009788513184
    4. 'ée' → logprob: -9.411009788513184
    5. 'es' → logprob: -11.161009788513184
    6. 'e' → logprob: -13.286009788513184
    7. '```' → logprob: -14.161009788513184
    8. 'è' → logprob: -14.661009788513184
    9. '&eacute' → logprob: -15.286009788513184
    10. ' é' → logprob: -15.411009788513184

Token 68: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046363092958927155
    2. '\n' → logprob: -3.546363115310669
    3. '"""' → logprob: -4.67136287689209
    4. '
' → logprob: -6.04636287689209
    5. '.' → logprob: -6.54636287689209
    6. '```' → logprob: -6.92136287689209
    7. '    
' → logprob: -7.42136287689209
    8. '"' → logprob: -7.79636287689209
    9. ')' → logprob: -8.29636287689209
    10. '\' → logprob: -8.42136287689209

Token 69: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7131280899047852
    2. '"""' → logprob: -0.7131280899047852
    3. '"""
' → logprob: -4.338128089904785
    4. '```' → logprob: -5.463128089904785
    5. '"' → logprob: -6.463128089904785
    6. '""' → logprob: -7.463128089904785
    7. '
' → logprob: -8.963128089904785
    8. '\n' → logprob: -9.463128089904785
    9. '`' → logprob: -9.963128089904785
    10. '    
' → logprob: -11.338128089904785

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007276022341102362
    2. '"""' → logprob: -5.0072760581970215
    3. '```' → logprob: -8.007275581359863
    4. '    ' → logprob: -9.882275581359863
    5. ' """' → logprob: -10.007275581359863
    6. 'def' → logprob: -10.007275581359863
    7. ')' → logprob: -10.632275581359863
    8. 'n' → logprob: -10.882275581359863
    9. '  ' → logprob: -11.632275581359863
    10. '"""
' → logprob: -12.507275581359863

Token 71: ' Entr' (ID: 50650)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035170648247003555
    2. '"""' → logprob: -3.785170555114746
    3. 'n' → logprob: -5.160170555114746
    4. '```' → logprob: -6.160170555114746
    5. 'total' → logprob: -6.660170555114746
    6. 'result' → logprob: -7.535170555114746
    7. 'input' → logprob: -7.535170555114746
    8. 'def' → logprob: -7.910170555114746
    9. '#' → logprob: -8.160170555114746
    10. 'count' → logprob: -8.535170555114746

Token 72: 'ée' (ID: 2894)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.31831926107406616
    2. 'ée' → logprob: -1.318319320678711
    3. 'r' → logprob: -5.443319320678711
    4. 'ré' → logprob: -7.568319320678711
    5. 'é' → logprob: -9.193319320678711
    6. '   ' → logprob: -10.193319320678711
    7. '```' → logprob: -10.318319320678711
    8. 'ree' → logprob: -11.318319320678711
    9. 'ées' → logprob: -11.693319320678711
    10. '       ' → logprob: -13.193319320678711

Token 73: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.4056273400783539
    2. ':' → logprob: -1.4056273698806763
    3. '   ' → logprob: -2.6556272506713867
    4. 's' → logprob: -4.780627250671387
    5. '    ' → logprob: -5.655627250671387
    6. ')' → logprob: -6.655627250671387
    7. '):' → logprob: -7.280627250671387
    8. ' ' → logprob: -7.530627250671387
    9. '```' → logprob: -7.780627250671387
    10. ':
' → logprob: -8.155627250671387

Token 74: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.15628807246685028
    2. '   ' → logprob: -2.2812881469726562
    3. ' ' → logprob: -3.9062881469726562
    4. ' )' → logprob: -5.031288146972656
    5. ' """' → logprob: -5.281288146972656
    6. '     ' → logprob: -6.031288146972656
    7. '```' → logprob: -6.656288146972656
    8. ' \' → logprob: -6.781288146972656
    9. ' ```' → logprob: -6.781288146972656
    10. '"""' → logprob: -7.406288146972656

Token 75: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.413473516702652
    2. 'n' → logprob: -2.163473606109619
    3. 'sequence' → logprob: -2.288473606109619
    4. ' sequence' → logprob: -3.288473606109619
    5. 's' → logprob: -3.413473606109619
    6. '"""' → logprob: -5.163473606109619
    7. '```' → logprob: -5.538473606109619
    8. 'l' → logprob: -5.538473606109619
    9. '       ' → logprob: -5.663473606109619
    10. ' ' → logprob: -5.913473606109619

Token 76: ' Un' (ID: 1367)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2427030801773071
    2. 'n' → logprob: -1.2427030801773071
    3. '   ' → logprob: -1.6177030801773071
    4. 'sequence' → logprob: -2.6177029609680176
    5. 's' → logprob: -3.7427029609680176
    6. ' sequence' → logprob: -3.8677029609680176
    7. ' la' → logprob: -3.9927029609680176
    8. 'la' → logprob: -4.617702960968018
    9. ' ' → logprob: -4.867702960968018
    10. ' n' → logprob: -5.117702960968018

Token 77: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04100434109568596
    2. ' entier' → logprob: -3.9160044193267822
    3. ' ' → logprob: -4.166004180908203
    4. ' e' → logprob: -6.666004180908203
    5. 'n' → logprob: -7.041004180908203
    6. ' nombre' → logprob: -7.166004180908203
    7. 'es' → logprob: -7.541004180908203
    8. 'ent' → logprob: -8.041004180908203
    9. ' ent' → logprob: -8.416004180908203
    10. ' int' → logprob: -8.916004180908203

Token 78: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7953459024429321
    2. 's' → logprob: -1.7953459024429321
    3. ' \' → logprob: -1.9203459024429321
    4. '\' → logprob: -2.7953457832336426
    5. ')' → logprob: -3.1703457832336426
    6. '   ' → logprob: -3.6703457832336426
    7. '\n' → logprob: -3.6703457832336426
    8. '_' → logprob: -4.170345783233643
    9. ' )' → logprob: -4.170345783233643
    10. 'n' → logprob: -4.170345783233643

Token 79: ' suivi' (ID: 60370)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4093637466430664
    2. ' ' → logprob: -1.5343637466430664
    3. '\n' → logprob: -1.6593637466430664
    4. '<|end|>' → logprob: -1.9093637466430664
    5. '  ' → logprob: -3.2843637466430664
    6. '  
' → logprob: -3.4093637466430664
    7. '\' → logprob: -3.5343637466430664
    8. '<|end|>' → logprob: -3.6593637466430664
    9. ' 
' → logprob: -3.9093637466430664
    10. ')' → logprob: -4.159363746643066

Token 80: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3987368941307068
    2. '   ' → logprob: -1.5237369537353516
    3. ' de' → logprob: -3.0237369537353516
    4. ' par' → logprob: -3.7737369537353516
    5. '  ' → logprob: -4.273736953735352
    6. 'd' → logprob: -4.898736953735352
    7. 'de' → logprob: -5.148736953735352
    8. '    ' → logprob: -5.148736953735352
    9. 'par' → logprob: -6.023736953735352
    10. ' ' → logprob: -6.148736953735352

Token 81: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7097244262695312
    2. ' un' → logprob: -1.5847244262695312
    3. ' une' → logprob: -2.5847244262695312
    4. ' la' → logprob: -2.5847244262695312
    5. ''' → logprob: -3.3347244262695312
    6. 'un' → logprob: -3.8347244262695312
    7. '```' → logprob: -4.334724426269531
    8. '"' → logprob: -4.584724426269531
    9. 'l' → logprob: -4.834724426269531
    10. '\' → logprob: -4.959724426269531

Token 82: ' ent' (ID: 1121)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00042888117604888976
    2. 'i' → logprob: -7.875428676605225
    3. 'ières' → logprob: -10.375429153442383
    4. 'ier' → logprob: -11.625429153442383
    5. '   ' → logprob: -12.500429153442383
    6. '```' → logprob: -13.250429153442383
    7. ' i' → logprob: -13.875429153442383
    8. 'ié' → logprob: -14.000429153442383
    9. 'ers' → logprob: -14.750429153442383
    10. 'ière' → logprob: -15.250429153442383

Token 84: ' sépar' (ID: 97160)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0131080150604248
    2. '   ' → logprob: -1.0131080150604248
    3. '\n' → logprob: -2.513108015060425
    4. '    
' → logprob: -2.888108015060425
    5. '\' → logprob: -3.513108015060425
    6. ':' → logprob: -4.013108253479004
    7. '```' → logprob: -4.013108253479004
    8. '  
' → logprob: -4.138108253479004
    9. ' 
' → logprob: -4.638108253479004
    10. 'n' → logprob: -4.763108253479004

Token 85: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.011285483837127686
    2. 'é' → logprob: -4.511285305023193
    3. 'par' → logprob: -9.511285781860352
    4. 'es' → logprob: -9.636285781860352
    5. ' par' → logprob: -10.011285781860352
    6. 'ès' → logprob: -11.386285781860352
    7. 'e' → logprob: -11.386285781860352
    8. 's' → logprob: -11.886285781860352
    9. 'ées' → logprob: -12.261285781860352
    10. 'ant' → logprob: -13.136285781860352

Token 86: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.03999452665448189
    2. 'par' → logprob: -4.164994716644287
    3. ' by' → logprob: -4.664994716644287
    4. 'es' → logprob: -5.289994716644287
    5. ' espaces' → logprob: -5.914994716644287
    6. ' ' → logprob: -6.289994716644287
    7. 'e' → logprob: -7.039994716644287
    8. '```' → logprob: -7.289994716644287
    9. '  ' → logprob: -7.414994716644287
    10. 's' → logprob: -7.664994716644287

Token 87: ' des' (ID: 731)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.2929593324661255
    2. ' ' → logprob: -1.7929593324661255
    3. 'un' → logprob: -1.9179593324661255
    4. ' un' → logprob: -2.042959213256836
    5. ' espace' → logprob: -2.667959213256836
    6. ''espace' → logprob: -2.917959213256836
    7. 'es' → logprob: -3.417959213256836
    8. ' des' → logprob: -3.542959213256836
    9. ''un' → logprob: -3.917959213256836
    10. 'esp' → logprob: -3.917959213256836

Token 88: ' espaces' (ID: 98361)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0463534593582153
    2. 'es' → logprob: -1.1713534593582153
    3. ' espaces' → logprob: -2.046353340148926
    4. 'esp' → logprob: -2.296353340148926
    5. ''espace' → logprob: -3.046353340148926
    6. 'spaces' → logprob: -4.046353340148926
    7. ' espace' → logprob: -4.171353340148926
    8. 'space' → logprob: -4.796353340148926
    9. 'l' → logprob: -5.546353340148926
    10. 's' → logprob: -5.796353340148926

Token 89: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5316622257232666
    2. '\n' → logprob: -1.1566622257232666
    3. '\' → logprob: -3.5316622257232666
    4. 'n' → logprob: -4.1566619873046875
    5. '    
' → logprob: -4.1566619873046875
    6. ')' → logprob: -5.0316619873046875
    7. ':' → logprob: -5.0316619873046875
    8. '
' → logprob: -5.2816619873046875
    9. '```' → logprob: -5.6566619873046875
    10. '   
' → logprob: -5.9066619873046875

Token 90: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5260792374610901
    2. '"""' → logprob: -1.0260791778564453
    3. '"' → logprob: -4.026079177856445
    4. '"""
' → logprob: -4.401079177856445
    5. '\n' → logprob: -4.901079177856445
    6. '```' → logprob: -5.401079177856445
    7. 'n' → logprob: -6.401079177856445
    8. '\' → logprob: -6.651079177856445
    9. ' """' → logprob: -6.651079177856445
    10. ' """
' → logprob: -7.276079177856445

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006124552339315414
    2. '"""' → logprob: -5.256124496459961
    3. ' """' → logprob: -7.506124496459961
    4. '```' → logprob: -8.756124496459961
    5. '    ' → logprob: -9.631124496459961
    6. '    
' → logprob: -10.756124496459961
    7. 'def' → logprob: -11.006124496459961
    8. '"""
' → logprob: -11.131124496459961
    9. ' """
' → logprob: -11.256124496459961
    10. '"' → logprob: -11.631124496459961

Token 92: ' Sort' (ID: 25945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22767029702663422
    2. '"""' → logprob: -2.102670192718506
    3. '"""
' → logprob: -2.727670192718506
    4. '```' → logprob: -4.852670192718506
    5. 'Returns' → logprob: -5.852670192718506
    6. '    
' → logprob: -6.227670192718506
    7. '""' → logprob: -7.477670192718506
    8. 'def' → logprob: -7.477670192718506
    9. ' """
' → logprob: -7.602670192718506
    10. ' """' → logprob: -7.977670192718506

Token 93: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.1510028839111328
    2. 'i' → logprob: -2.401002883911133
    3. 'e' → logprob: -3.026002883911133
    4. 'ies' → logprob: -7.901002883911133
    5. 'a' → logprob: -9.026002883911133
    6. 'ié' → logprob: -9.526002883911133
    7. ' ie' → logprob: -9.526002883911133
    8. 'é' → logprob: -9.776002883911133
    9. 'ue' → logprob: -10.026002883911133
    10. '   ' → logprob: -10.151002883911133

Token 94: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.1615411937236786
    2. ':' → logprob: -1.911541223526001
    3. ' :
' → logprob: -6.911540985107422
    4. '   ' → logprob: -8.911540985107422
    5. ':
' → logprob: -9.286540985107422
    6. ',' → logprob: -10.411540985107422
    7. ' ' → logprob: -11.286540985107422
    8. 's' → logprob: -11.286540985107422
    9. '":' → logprob: -11.661540985107422
    10. '  ' → logprob: -12.411540985107422

Token 95: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13920918107032776
    2. '    ' → logprob: -2.139209270477295
    3. '"' → logprob: -5.014209270477295
    4. ' ' → logprob: -6.014209270477295
    5. ' "' → logprob: -6.639209270477295
    6. '  ' → logprob: -8.389208793640137
    7. '    
' → logprob: -8.389208793640137
    8. '     ' → logprob: -8.639208793640137
    9. '       ' → logprob: -8.764208793640137
    10. ''' → logprob: -8.764208793640137

Token 96: ' -' (ID: 533)
  Prédit: 'Un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Un' → logprob: -0.7636072635650635
    2. '   ' → logprob: -1.1386072635650635
    3. 'Le' → logprob: -2.1386072635650635
    4. ' Un' → logprob: -4.013607025146484
    5. ' Le' → logprob: -4.138607025146484
    6. '"' → logprob: -4.138607025146484
    7. 'int' → logprob: -5.138607025146484
    8. ' 
' → logprob: -5.138607025146484
    9. ' return' → logprob: -5.263607025146484
    10. '       ' → logprob: -5.513607025146484

Token 97: ' Un' (ID: 1367)
  Prédit: 'Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Le' → logprob: -1.38163423538208
    2. 'Un' → logprob: -1.50663423538208
    3. '   ' → logprob: -1.63163423538208
    4. ' Le' → logprob: -2.13163423538208
    5. 'Ent' → logprob: -3.13163423538208
    6. ' Un' → logprob: -3.25663423538208
    7. ' un' → logprob: -3.75663423538208
    8. ' return' → logprob: -3.75663423538208
    9. ' print' → logprob: -4.00663423538208
    10. ' int' → logprob: -4.63163423538208

Token 98: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.3276332914829254
    2. 'e' → logprob: -1.577633261680603
    3. ' ' → logprob: -3.7026333808898926
    4. ' int' → logprob: -4.077633380889893
    5. ' ent' → logprob: -4.952633380889893
    6. 'ent' → logprob: -4.952633380889893
    7. ' e' → logprob: -5.202633380889893
    8. ' espace' → logprob: -5.452633380889893
    9. '   ' → logprob: -5.827633380889893
    10. ' nombre' → logprob: -6.202633380889893

Token 99: ' :' (ID: 712)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7746228575706482
    2. '   ' → logprob: -1.149622917175293
    3. '\n' → logprob: -1.899622917175293
    4. '    
' → logprob: -3.149622917175293
    5. 'n' → logprob: -4.524622917175293
    6. ':' → logprob: -5.399622917175293
    7. '\' → logprob: -5.399622917175293
    8. 'def' → logprob: -6.024622917175293
    9. '   
' → logprob: -6.274622917175293
    10. ' 
' → logprob: -6.524622917175293

Token 100: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2993220388889313
    2. ' total' → logprob: -2.5493221282958984
    3. ' ' → logprob: -3.0493221282958984
    4. ' "' → logprob: -3.4243221282958984
    5. '   ' → logprob: -3.9243221282958984
    6. ' nombre' → logprob: -4.174322128295898
    7. ' """' → logprob: -4.424322128295898
    8. ' la' → logprob: -4.674322128295898
    9. ' the' → logprob: -4.799322128295898
    10. ' n' → logprob: -4.924322128295898

Token 101: ' total' (ID: 3609)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.05403232201933861
    2. 'nombre' → logprob: -3.429032325744629
    3. ' total' → logprob: -4.054032325744629
    4. ' ' → logprob: -6.304032325744629
    5. 'n' → logprob: -8.304032325744629
    6. 's' → logprob: -9.054032325744629
    7. ' nombres' → logprob: -9.054032325744629
    8. ' ' → logprob: -9.179032325744629
    9. 'total' → logprob: -9.679032325744629
    10. ' n' → logprob: -9.804032325744629

Token 102: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7586974501609802
    2. '_' → logprob: -1.508697509765625
    3. ' de' → logprob: -1.633697509765625
    4. '   ' → logprob: -3.633697509765625
    5. ' \' → logprob: -3.633697509765625
    6. '\' → logprob: -4.633697509765625
    7. '  ' → logprob: -4.633697509765625
    8. ' _' → logprob: -4.883697509765625
    9. ' des' → logprob: -5.383697509765625
    10. ' )' → logprob: -5.633697509765625

Token 103: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.006185336969792843
    2. ' pairs' → logprob: -5.131185531616211
    3. ' ' → logprob: -9.256185531616211
    4. 'p' → logprob: -9.506185531616211
    5. ' pair' → logprob: -10.506185531616211
    6. ' paire' → logprob: -10.756185531616211
    7. 'pairs' → logprob: -11.381185531616211
    8. 's' → logprob: -11.631185531616211
    9. ' l' → logprob: -12.506185531616211
    10. ' la' → logprob: -12.756185531616211

Token 104: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.021536540240049362
    2. 'ai' → logprob: -4.896536350250244
    3. 'a' → logprob: -5.146536350250244
    4. 'air' → logprob: -5.146536350250244
    5. 'airs' → logprob: -6.646536350250244
    6. ' a' → logprob: -7.771536350250244
    7. '   ' → logprob: -9.146536827087402
    8. 'aire' → logprob: -9.271536827087402
    9. 'ares' → logprob: -10.146536827087402
    10. 'aises' → logprob: -11.021536827087402

Token 105: ' pouvant' (ID: 104840)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.591215193271637
    2. '_possible' → logprob: -2.466215133666992
    3. ' form' → logprob: -2.591215133666992
    4. '_form' → logprob: -3.216215133666992
    5. ' ' → logprob: -3.341215133666992
    6. '\n' → logprob: -3.466215133666992
    7. '_' → logprob: -3.716215133666992
    8. ' possible' → logprob: -3.841215133666992
    9. ' \' → logprob: -3.966215133666992
    10. '    
' → logprob: -4.216215133666992

Token 106: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.05729207023978233
    2. 'être' → logprob: -3.1822919845581055
    3. ' ' → logprob: -5.0572919845581055
    4. ' se' → logprob: -6.3072919845581055
    5. ' ê' → logprob: -6.9322919845581055
    6. ' form' → logprob: -7.1822919845581055
    7. ' etre' → logprob: -7.1822919845581055
    8. ''être' → logprob: -7.4322919845581055
    9. ' be' → logprob: -7.4322919845581055
    10. ' former' → logprob: -7.6822919845581055

Token 107: ' form' (ID: 1625)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.030238451436161995
    2. ' form' → logprob: -3.780238389968872
    3. '   ' → logprob: -6.155238628387451
    4. ' ' → logprob: -6.280238628387451
    5. 'f' → logprob: -7.280238628387451
    6. '```' → logprob: -7.530238628387451
    7. '
' → logprob: -8.155238151550293
    8. 'format' → logprob: -8.780238151550293
    9. 'formations' → logprob: -8.905238151550293
    10. 'const' → logprob: -8.905238151550293

Token 108: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.03997035697102547
    2. 'ées' → logprob: -3.6649703979492188
    3. 'ée' → logprob: -4.789970397949219
    4. 'ed' → logprob: -5.289970397949219
    5. 'és' → logprob: -8.789970397949219
    6. 'e' → logprob: -10.414970397949219
    7. 'er' → logprob: -11.289970397949219
    8. 'éd' → logprob: -11.664970397949219
    9. 'a' → logprob: -12.039970397949219
    10. 'at' → logprob: -13.539970397949219

Token 109: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005804132204502821
    2. '.' → logprob: -6.505804061889648
    3. '    
' → logprob: -6.880804061889648
    4. ',' → logprob: -7.130804061889648
    5. ' à' → logprob: -7.130804061889648
    6. ' par' → logprob: -7.380804061889648
    7. '\n' → logprob: -8.630804061889648
    8. '    ' → logprob: -8.755804061889648
    9. ' en' → logprob: -8.755804061889648
    10. ' ' → logprob: -9.005804061889648

Token 110: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.03011583909392357
    2. 'la' → logprob: -4.030115604400635
    3. ' l' → logprob: -5.530115604400635
    4. '   ' → logprob: -5.905115604400635
    5. ' ' → logprob: -6.530115604400635
    6. ' toute' → logprob: -6.905115604400635
    7. ' cette' → logprob: -6.905115604400635
    8. ' toutes' → logprob: -7.655115604400635
    9. 'l' → logprob: -8.155116081237793
    10. ' le' → logprob: -8.155116081237793

Token 111: ' liste' (ID: 31719)
  Prédit: ' sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.5585006475448608
    2. 'sé' → logprob: -1.1835006475448608
    3. ' ' → logprob: -2.6835007667541504
    4. ' sequence' → logprob: -3.4335007667541504
    5. 's' → logprob: -4.68350076675415
    6. '   ' → logprob: -5.30850076675415
    7. 'sequence' → logprob: -5.68350076675415
    8. ' s' → logprob: -6.80850076675415
    9. 'suite' → logprob: -7.55850076675415
    10. ' suite' → logprob: -7.55850076675415

Token 112: ' four' (ID: 4242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08153536915779114
    2. '
' → logprob: -3.3315353393554688
    3. '\n' → logprob: -4.081535339355469
    4. '    
' → logprob: -4.456535339355469
    5. '\' → logprob: -5.081535339355469
    6. ':' → logprob: -5.581535339355469
    7. '    ' → logprob: -6.831535339355469
    8. 'def' → logprob: -7.081535339355469
    9. '```' → logprob: -7.581535339355469
    10. '   
' → logprob: -8.206535339355469

Token 113: 'nie' (ID: 7640)
  Prédit: 'nie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nie' → logprob: -0.004800226539373398
    2. 'ie' → logprob: -5.754800319671631
    3. 'n' → logprob: -7.254800319671631
    4. '   ' → logprob: -7.879800319671631
    5. 'ni' → logprob: -8.254799842834473
    6. 'i' → logprob: -10.504799842834473
    7. '```' → logprob: -10.504799842834473
    8. 'e' → logprob: -10.629799842834473
    9. '     ' → logprob: -11.254799842834473
    10. ' ' → logprob: -11.254799842834473

Token 114: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.636799693107605
    2. '
' → logprob: -1.136799693107605
    3. '\n' → logprob: -2.0117998123168945
    4. '    
' → logprob: -4.5117998123168945
    5. ':' → logprob: -6.0117998123168945
    6. '\' → logprob: -7.0117998123168945
    7. '   
' → logprob: -7.7617998123168945
    8. '  
' → logprob: -8.011799812316895
    9. ' 
' → logprob: -8.386799812316895
    10. ':
' → logprob: -8.761799812316895

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021412154659628868
    2. '"""' → logprob: -3.8964121341705322
    3. '"' → logprob: -7.771412372589111
    4. '```' → logprob: -8.896411895751953
    5. 'def' → logprob: -9.271411895751953
    6. '"""
' → logprob: -10.271411895751953
    7. '    ' → logprob: -10.271411895751953
    8. '    
' → logprob: -10.396411895751953
    9. ')' → logprob: -10.396411895751953
    10. ' """' → logprob: -10.521411895751953

Token 116: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03307487070560455
    2. '
' → logprob: -3.9080748558044434
    3. '    
' → logprob: -5.783074855804443
    4. '\n' → logprob: -6.033074855804443
    5. '```' → logprob: -6.033074855804443
    6. '"""' → logprob: -6.158074855804443
    7. '    ' → logprob: -7.283074855804443
    8. '\' → logprob: -8.033075332641602
    9. 'n' → logprob: -8.283075332641602
    10. 'def' → logprob: -8.283075332641602

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04186886176466942
    2. '
' → logprob: -3.6668689250946045
    3. '    
' → logprob: -4.416868686676025
    4. 'n' → logprob: -6.291868686676025
    5. '\n' → logprob: -7.916868686676025
    6. '\' → logprob: -8.541869163513184
    7. 'def' → logprob: -8.666869163513184
    8. '    ' → logprob: -8.791869163513184
    9. ' 
' → logprob: -8.791869163513184
    10. '```' → logprob: -8.916869163513184

Token 118: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35552072525024414
    2. '   ' → logprob: -1.3555207252502441
    3. 'N' → logprob: -3.980520725250244
    4. ' n' → logprob: -4.105520725250244
    5. 'import' → logprob: -6.355520725250244
    6. 'input' → logprob: -6.480520725250244
    7. ' N' → logprob: -6.855520725250244
    8. ' lines' → logprob: -7.855520725250244
    9. ' input' → logprob: -8.230520248413086
    10. '#' (adapté à ' #') → logprob: -8.355520248413086

Token 119: ' Lire' (ID: 57624)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3425029218196869
    2. ' n' → logprob: -2.0925028324127197
    3. '   ' → logprob: -2.4675028324127197
    4. 'N' → logprob: -3.3425028324127197
    5. 'input' → logprob: -4.342503070831299
    6. ' input' → logprob: -4.342503070831299
    7. ' N' → logprob: -4.967503070831299
    8. 'import' → logprob: -5.217503070831299
    9. ' import' → logprob: -6.467503070831299
    10. ' line' → logprob: -6.592503070831299

Token 120: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1147361472249031
    2. ' N' → logprob: -2.8647360801696777
    3. 'n' → logprob: -3.6147360801696777
    4. '   ' → logprob: -4.114736080169678
    5. ' ' → logprob: -6.239736080169678
    6. 'N' → logprob: -6.364736080169678
    7. ' input' → logprob: -6.364736080169678
    8. ' l' → logprob: -6.739736080169678
    9. '    ' → logprob: -7.614736080169678
    10. ' ' → logprob: -7.614736080169678

Token 121: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14196430146694183
    2. 'N' → logprob: -2.3919641971588135
    3. 'input' → logprob: -4.516964435577393
    4. 'int' → logprob: -4.891964435577393
    5. 'nombre' → logprob: -5.016964435577393
    6. ' n' → logprob: -5.516964435577393
    7. ' N' → logprob: -5.641964435577393
    8. ' input' → logprob: -5.641964435577393
    9. 'import' → logprob: -6.516964435577393
    10. ' nombre' → logprob: -6.891964435577393

Token 122: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7128139138221741
    2. ' N' → logprob: -1.5878138542175293
    3. ' ' → logprob: -1.9628138542175293
    4. ' n' → logprob: -2.8378138542175293
    5. '   ' → logprob: -2.9628138542175293
    6. 'n' → logprob: -3.3378138542175293
    7. '    ' → logprob: -5.837813854217529
    8. ' de' → logprob: -5.962813854217529
    9. ' _' → logprob: -6.087813854217529
    10. '  ' → logprob: -6.212813854217529

Token 123: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02773028425872326
    2. '_' → logprob: -3.6527302265167236
    3. '  ' → logprob: -7.527730464935303
    4. ' )' → logprob: -8.277729988098145
    5. ' _' → logprob: -8.652729988098145
    6. 'élé' → logprob: -9.402729988098145
    7. '   ' → logprob: -9.652729988098145
    8. ')' → logprob: -9.652729988098145
    9. ' =' → logprob: -9.902729988098145
    10. 's' → logprob: -10.527729988098145

Token 124: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.02070281282067299
    2. ' éléments' → logprob: -4.145702838897705
    3. 'elements' → logprob: -6.270702838897705
    4. 'ent' → logprob: -6.895702838897705
    5. 'é' → logprob: -7.895702838897705
    6. ' elements' → logprob: -8.145702362060547
    7. ' ent' → logprob: -8.395702362060547
    8. 'n' → logprob: -8.395702362060547
    9. ' ' → logprob: -8.645702362060547
    10. 'él' → logprob: -9.020702362060547

Token 125: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0001305950863752514
    2. 'ment' → logprob: -9.250130653381348
    3. 'm' → logprob: -10.625130653381348
    4. 'nts' → logprob: -12.500130653381348
    5. 'me' → logprob: -12.750130653381348
    6. 'ents' → logprob: -14.000130653381348
    7. '   ' → logprob: -14.625130653381348
    8. 'ements' → logprob: -14.875130653381348
    9. 'e' → logprob: -15.125130653381348
    10. 'phants' → logprob: -15.500130653381348

Token 126: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.551929771900177
    2. '   ' → logprob: -0.926929771900177
    3. '    
' → logprob: -4.301929950714111
    4. ' n' → logprob: -4.926929950714111
    5. ' 
' → logprob: -5.926929950714111
    6. 'N' → logprob: -6.551929950714111
    7. ' N' → logprob: -6.676929950714111
    8. '
' → logprob: -7.051929950714111
    9. '\n' → logprob: -7.176929950714111
    10. '   
' → logprob: -8.301929473876953

Token 127: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3724972903728485
    2. ' l' → logprob: -2.247497320175171
    3. 'l' → logprob: -2.372497320175171
    4. ' input' → logprob: -2.872497320175171
    5. ' ' → logprob: -3.372497320175171
    6. 'la' → logprob: -4.372497081756592
    7. 'input' → logprob: -6.372497081756592
    8. 'n' → logprob: -6.622497081756592
    9. '_' → logprob: -6.747497081756592
    10. 'entrée' → logprob: -6.997497081756592

Token 128: ' liste' (ID: 31719)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.5964654684066772
    2. ' input' → logprob: -2.471465587615967
    3. 'sequence' → logprob: -2.471465587615967
    4. ' sé' → logprob: -2.471465587615967
    5. 'sé' → logprob: -2.721465587615967
    6. 's' → logprob: -3.721465587615967
    7. ' liste' → logprob: -3.721465587615967
    8. 'input' → logprob: -3.721465587615967
    9. ' ' → logprob: -3.971465587615967
    10. 'entrée' → logprob: -4.846465587615967

Token 129: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18292248249053955
    2. '   ' → logprob: -2.05792236328125
    3. '    
' → logprob: -3.93292236328125
    4. '
' → logprob: -4.68292236328125
    5. ' 
' → logprob: -5.05792236328125
    6. 'N' → logprob: -6.30792236328125
    7. '\n' → logprob: -6.93292236328125
    8. ' n' → logprob: -7.18292236328125
    9. '   
' → logprob: -8.55792236328125
    10. '  
' → logprob: -8.55792236328125

Token 130: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2663574814796448
    2. '   ' → logprob: -1.516357421875
    3. ' n' → logprob: -5.016357421875
    4. '    
' → logprob: -5.391357421875
    5. ' 
' → logprob: -6.266357421875
    6. 'N' → logprob: -7.266357421875
    7. ' N' → logprob: -8.516357421875
    8. '\n' → logprob: -9.266357421875
    9. '   
' → logprob: -9.391357421875
    10. '
' → logprob: -10.766357421875

Token 131: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08160941302776337
    2. ' n' → logprob: -2.7066094875335693
    3. 'N' (adapté à ' N') → logprob: -4.58160924911499
    4. ' N' → logprob: -6.70660924911499
    5. '   ' → logprob: -8.956609725952148
    6. ' 
' → logprob: -11.831609725952148
    7. '	n' → logprob: -12.581609725952148
    8. ' ' → logprob: -13.331609725952148
    9. '    
' → logprob: -13.956609725952148
    10. ' ' → logprob: -14.331609725952148

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0041733719408512115
    2. '=' → logprob: -5.504173278808594
    3. ',' → logprob: -9.379173278808594
    4. ' ' → logprob: -12.379173278808594
    5. '=int' → logprob: -12.879173278808594
    6. '=input' → logprob: -13.379173278808594
    7. ' =
' → logprob: -14.379173278808594
    8. '   ' → logprob: -14.879173278808594
    9. ')' → logprob: -15.004173278808594
    10. '.' → logprob: -15.379173278808594

Token 133: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.004079470410943031
    2. 'int' → logprob: -5.504079341888428
    3. ' ' → logprob: -14.504079818725586
    4. '=int' → logprob: -14.879079818725586
    5. '[int' → logprob: -16.754079818725586
    6. ' ' → logprob: -16.754079818725586
    7. ' input' → logprob: -16.879079818725586
    8. '	int' → logprob: -16.879079818725586
    9. '(int' → logprob: -18.629079818725586
    10. ' in' → logprob: -18.879079818725586

Token 134: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.024858947843313217
    2. '(' → logprob: -4.0248589515686035
    3. 'input' → logprob: -5.0248589515686035
    4. ' input' → logprob: -9.149858474731445
    5. ' (' → logprob: -12.524858474731445
    6. '(
' → logprob: -13.524858474731445
    7. '()' → logprob: -13.774858474731445
    8. '=input' → logprob: -13.899858474731445
    9. '	input' → logprob: -14.774858474731445
    10. ' ' → logprob: -15.774858474731445

Token 135: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20168453454971313
    2. '()' → logprob: -1.7016844749450684
    3. ')' → logprob: -9.201684951782227
    4. '(' → logprob: -9.201684951782227
    5. '().' → logprob: -10.576684951782227
    6. '()))' → logprob: -10.701684951782227
    7. ' ())' → logprob: -11.701684951782227
    8. '();)' → logprob: -12.826684951782227
    9. '()
' → logprob: -12.951684951782227
    10. '())
' → logprob: -13.326684951782227

Token 136: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22540786862373352
    2. '    
' → logprob: -1.8504078388214111
    3. '    ' → logprob: -4.22540807723999
    4. 'n' → logprob: -4.97540807723999
    5. 's' → logprob: -5.72540807723999
    6. '
' → logprob: -5.97540807723999
    7. ')' → logprob: -6.35040807723999
    8. ' 
' → logprob: -6.35040807723999
    9. '     
' → logprob: -6.35040807723999
    10. '   
' → logprob: -6.85040807723999

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06738165766000748
    2. 'sequence' → logprob: -4.067381858825684
    3. ' sequence' → logprob: -4.567381858825684
    4. 'numbers' → logprob: -4.817381858825684
    5. '#' → logprob: -5.192381858825684
    6. ' numbers' → logprob: -5.317381858825684
    7. 'arr' → logprob: -5.442381858825684
    8. 'values' → logprob: -5.692381858825684
    9. 'lst' → logprob: -6.067381858825684
    10. 'elements' → logprob: -6.192381858825684

Token 138: ' #' (ID: 1069)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5463014841079712
    2. 'sequence' → logprob: -1.7963014841079712
    3. 'nums' → logprob: -2.6713013648986816
    4. 'arr' → logprob: -2.6713013648986816
    5. 'lst' → logprob: -3.2963013648986816
    6. 'elements' → logprob: -3.7963013648986816
    7. 'values' → logprob: -3.7963013648986816
    8. 'seq' → logprob: -3.9213013648986816
    9. '#' (adapté à ' #') → logprob: -4.546301364898682
    10. 'data' → logprob: -6.421301364898682

Token 139: ' Initial' (ID: 9209)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.529002070426941
    2. 'numbers' → logprob: -1.654002070426941
    3. ' numbers' → logprob: -1.904002070426941
    4. ' sequence' → logprob: -2.1540021896362305
    5. 'lst' → logprob: -2.6540021896362305
    6. 'arr' → logprob: -2.9040021896362305
    7. 'elements' → logprob: -3.2790021896362305
    8. 'nums' → logprob: -3.2790021896362305
    9. 'seq' → logprob: -3.4040021896362305
    10. 'values' → logprob: -3.6540021896362305

Token 140: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.03527364879846573
    2. 'izer' → logprob: -4.410273551940918
    3. 'ize' → logprob: -4.535273551940918
    4. 'er' → logprob: -5.535273551940918
    5. 'isez' → logprob: -6.160273551940918
    6. '_list' → logprob: -6.160273551940918
    7. 'isation' → logprob: -7.160273551940918
    8. 'izing' → logprob: -8.160273551940918
    9. 'elements' → logprob: -8.160273551940918
    10. 'e' → logprob: -8.410273551940918

Token 141: ' la' (ID: 557)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.39653053879737854
    2. ' pairs' → logprob: -2.1465306282043457
    3. ' sequence' → logprob: -2.1465306282043457
    4. 'total' → logprob: -3.2715306282043457
    5. ' la' → logprob: -3.3965306282043457
    6. 'sequence' → logprob: -5.146530628204346
    7. 'pairs' → logprob: -5.521530628204346
    8. ' count' → logprob: -5.896530628204346
    9. '   ' → logprob: -6.146530628204346
    10. ' lst' → logprob: -6.646530628204346

Token 142: ' liste' (ID: 31719)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3770800530910492
    2. 'sequence' → logprob: -1.6270800828933716
    3. 'pairs' → logprob: -3.377079963684082
    4. ' total' → logprob: -3.877079963684082
    5. ' sequence' → logprob: -4.502079963684082
    6. 'count' → logprob: -4.627079963684082
    7. 'result' → logprob: -4.627079963684082
    8. 'prev' → logprob: -5.127079963684082
    9. 'liste' → logprob: -5.252079963684082
    10. 'numbers' → logprob: -5.877079963684082

Token 143: ' qui' (ID: 2780)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -1.05599844455719
    2. ' numbers' → logprob: -2.0559983253479004
    3. 'sequence' → logprob: -2.0559983253479004
    4. 'numbers' → logprob: -2.4309983253479004
    5. ' lst' → logprob: -2.6809983253479004
    6. '   ' → logprob: -2.6809983253479004
    7. ' =' → logprob: -3.4309983253479004
    8. ' elements' → logprob: -4.3059983253479
    9. ' sequences' → logprob: -4.4309983253479
    10. 'values' → logprob: -4.4309983253479

Token 144: ' cont' (ID: 836)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.7556607723236084
    2. ' cont' → logprob: -1.2556607723236084
    3. ' contient' → logprob: -2.5056607723236084
    4. ' =' → logprob: -2.8806607723236084
    5. '_' → logprob: -3.8806607723236084
    6. ' recev' → logprob: -4.0056610107421875
    7. 'cont' → logprob: -4.2556610107421875
    8. '_cont' → logprob: -5.0056610107421875
    9. ' sera' → logprob: -5.3806610107421875
    10. '   ' → logprob: -5.5056610107421875

Token 145: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.7597166299819946
    2. 'i' → logprob: -0.8847166299819946
    3. 'iend' → logprob: -2.259716510772705
    4. 'inue' → logprob: -6.009716510772705
    5. 'endra' → logprob: -6.384716510772705
    6. 'ien' → logprob: -6.384716510772705
    7. 'in' → logprob: -6.384716510772705
    8. '   ' → logprob: -6.509716510772705
    9. 'enu' → logprob: -7.134716510772705
    10. 'e' → logprob: -7.384716510772705

Token 146: 'endra' (ID: 32364)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.1317356824874878
    2. 'endra' → logprob: -2.6317358016967773
    3. 'era' → logprob: -3.3817358016967773
    4. 'end' → logprob: -5.506735801696777
    5. 'e' → logprob: -5.631735801696777
    6. 't' → logprob: -6.006735801696777
    7. 'er' → logprob: -6.131735801696777
    8. '   ' → logprob: -7.006735801696777
    9. 'uera' → logprob: -7.131735801696777
    10. 'u' → logprob: -8.131735801696777

Token 147: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.21297883987426758
    2. ' la' → logprob: -1.8379788398742676
    3. '_' → logprob: -4.337978839874268
    4. 'les' → logprob: -4.337978839874268
    5. 's' → logprob: -5.837978839874268
    6. ' l' → logprob: -7.462978839874268
    7. 'the' → logprob: -7.587978839874268
    8. ' the' → logprob: -7.837978839874268
    9. ' ' → logprob: -7.962978839874268
    10. 'sequence' → logprob: -8.08797836303711

Token 148: ' longue' (ID: 59564)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.12476666271686554
    2. 'numbers' → logprob: -2.9997665882110596
    3. ' numbers' → logprob: -3.8747665882110596
    4. 'elements' → logprob: -4.249766826629639
    5. 'élé' → logprob: -4.374766826629639
    6. ' elements' → logprob: -4.999766826629639
    7. ' éléments' → logprob: -5.249766826629639
    8. 'nombre' → logprob: -6.124766826629639
    9. ' valeurs' → logprob: -6.499766826629639
    10. 'n' → logprob: -6.874766826629639

Token 149: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.25213345885276794
    2. 'ur' → logprob: -1.5021334886550903
    3. 'r' → logprob: -9.0021333694458
    4. 'u' → logprob: -10.3771333694458
    5. 'urse' → logprob: -11.2521333694458
    6. ' ur' → logprob: -11.7521333694458
    7. 'rs' → logprob: -12.2521333694458
    8. 's' → logprob: -12.3771333694458
    9. 'eurs' → logprob: -12.7521333694458
    10. '   ' → logprob: -13.1271333694458

Token 150: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.16197256743907928
    2. '_' → logprob: -2.5369725227355957
    3. 'des' → logprob: -3.1619725227355957
    4. '_des' → logprob: -4.286972522735596
    5. ' de' → logprob: -5.786972522735596
    6. ' _' → logprob: -6.161972522735596
    7. ' d' → logprob: -6.286972522735596
    8. ' =' → logprob: -7.036972522735596
    9. '   ' → logprob: -7.286972522735596
    10. 'd' → logprob: -7.411972522735596

Token 151: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.6711472272872925
    2. ' sé' → logprob: -1.2961472272872925
    3. 's' → logprob: -1.7961472272872925
    4. 'sé' → logprob: -3.796147346496582
    5. ' groupes' → logprob: -5.171147346496582
    6. ' sequences' → logprob: -5.421147346496582
    7. 'runs' → logprob: -6.046147346496582
    8. ' segments' → logprob: -6.171147346496582
    9. ' séries' → logprob: -6.421147346496582
    10. 'pa' → logprob: -6.671147346496582

Token 152: '-s' (ID: 2011)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2678798735141754
    2. '_s' → logprob: -2.2678799629211426
    3. '_sequences' → logprob: -2.2678799629211426
    4. 'sé' → logprob: -4.892879962921143
    5. '   ' → logprob: -5.392879962921143
    6. '-' → logprob: -5.392879962921143
    7. ' sé' → logprob: -5.642879962921143
    8. ' _' → logprob: -6.517879962921143
    9. ' sequences' → logprob: -6.642879962921143
    10. 's' → logprob: -6.892879962921143

Token 153: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.05648709461092949
    2. 'équ' → logprob: -3.1814870834350586
    3. 'quences' → logprob: -4.931487083435059
    4. 'e' → logprob: -6.181487083435059
    5. '_' → logprob: -7.431487083435059
    6. 'eq' → logprob: -7.931487083435059
    7. 'quence' → logprob: -8.056487083435059
    8. '-' → logprob: -8.181487083435059
    9. 'equ' → logprob: -8.556487083435059
    10. 'uites' → logprob: -8.681487083435059

Token 154: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.43086034059524536
    2. 'quence' → logprob: -1.0558602809906006
    3. 'q' → logprob: -6.43086051940918
    4. '   ' → logprob: -9.55586051940918
    5. 'qu' → logprob: -9.68086051940918
    6. '_' → logprob: -9.68086051940918
    7. '-' → logprob: -10.05586051940918
    8. '#' → logprob: -10.30586051940918
    9. '`' → logprob: -10.55586051940918
    10. '--' → logprob: -10.68086051940918

Token 155: ' cons' (ID: 1473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4523999691009521
    2. ' cons' → logprob: -1.7023999691009521
    3. ' sequences' → logprob: -2.702399969100952
    4. 'counts' → logprob: -2.702399969100952
    5. ' des' → logprob: -2.827399969100952
    6. 'count' → logprob: -2.952399969100952
    7. ' counts' → logprob: -3.327399969100952
    8. 'current' → logprob: -3.702399969100952
    9. ' de' → logprob: -3.702399969100952
    10. ' pairs' → logprob: -3.952399969100952

Token 156: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0010126839624717832
    2. 'ecut' → logprob: -7.001012802124023
    3. 'éc' → logprob: -9.751012802124023
    4. 'é' → logprob: -10.501012802124023
    5. 'ec' → logprob: -12.001012802124023
    6. 'e' → logprob: -13.001012802124023
    7. 'ect' → logprob: -13.001012802124023
    8. '```' → logprob: -13.126012802124023
    9. 'équ' → logprob: -14.126012802124023
    10. '   ' → logprob: -14.751012802124023

Token 157: 'ives' (ID: 2264)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.13897649943828583
    2. 'ives' → logprob: -2.763976573944092
    3. '   ' → logprob: -4.138976573944092
    4. 'utive' → logprob: -4.388976573944092
    5. 'utes' → logprob: -5.013976573944092
    6. ' ut' → logprob: -5.013976573944092
    7. 'atives' → logprob: -5.513976573944092
    8. 'es' → logprob: -6.013976573944092
    9. 'uves' → logprob: -6.013976573944092
    10. 'ive' → logprob: -6.138976573944092

Token 158: '
' (ID: 198)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.6769973635673523
    2. ' pairs' → logprob: -2.551997423171997
    3. ' lengths' → logprob: -2.551997423171997
    4. 'sequence' → logprob: -2.551997423171997
    5. ' sequence' → logprob: -2.676997423171997
    6. 'pairs' → logprob: -3.301997423171997
    7. ' lines' → logprob: -3.801997423171997
    8. '   ' → logprob: -3.926997423171997
    9. 'counts' → logprob: -4.176997184753418
    10. ' counts' → logprob: -4.426997184753418

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04258951172232628
    2. ' lengths' → logprob: -4.6675896644592285
    3. ' sequences' → logprob: -5.0425896644592285
    4. 's' → logprob: -5.2925896644592285
    5. 'sequence' → logprob: -5.9175896644592285
    6. ',' → logprob: -6.2925896644592285
    7. '    
' → logprob: -6.4175896644592285
    8. 'length' → logprob: -6.4175896644592285
    9. 'n' → logprob: -6.5425896644592285
    10. ' sequence' → logprob: -6.7925896644592285

Token 160: ' dif' (ID: 1501)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.37324807047843933
    2. ' lengths' → logprob: -1.3732481002807617
    3. 'counts' → logprob: -3.7482481002807617
    4. 'sequence' → logprob: -4.373248100280762
    5. 'seq' → logprob: -5.373248100280762
    6. ' subse' → logprob: -5.873248100280762
    7. ' sequence' → logprob: -5.998248100280762
    8. ' counts' → logprob: -6.123248100280762
    9. ' sequences' → logprob: -6.248248100280762
    10. ' length' → logprob: -6.248248100280762

Token 161: ' =' (ID: 314)
  Prédit: 'fér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fér' → logprob: -0.705805778503418
    2. 'f' → logprob: -0.830805778503418
    3. 'fs' → logprob: -3.455805778503418
    4. 'ferences' → logprob: -3.705805778503418
    5. 'fé' → logprob: -5.580805778503418
    6. '   ' → logprob: -6.080805778503418
    7. '_f' → logprob: -6.455805778503418
    8. 'férence' → logprob: -6.705805778503418
    9. 'fic' → logprob: -6.830805778503418
    10. 'fer' → logprob: -7.080805778503418

Token 162: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.38939815759658813
    2. '[]' → logprob: -1.1393980979919434
    3. ' []
' → logprob: -7.139398097991943
    4. '0' → logprob: -7.514398097991943
    5. ' [' → logprob: -7.514398097991943
    6. '[' → logprob: -8.139398574829102
    7. '[]
' → logprob: -8.639398574829102
    8. ' ' → logprob: -9.014398574829102
    9. '   ' → logprob: -11.014398574829102
    10. '1' → logprob: -11.514398574829102

Token 163: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0792689174413681
    2. '    
' → logprob: -3.4542689323425293
    3. '
' → logprob: -4.204268932342529
    4. ' sequence' → logprob: -4.829268932342529
    5. 'sequence' → logprob: -4.829268932342529
    6. ' 
' → logprob: -6.204268932342529
    7. '   
' → logprob: -6.329268932342529
    8. '  
' → logprob: -6.579268932342529
    9. '    ' → logprob: -6.829268932342529
    10. ' ' → logprob: -6.954268932342529

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8286142349243164
    2. 'lst' → logprob: -1.9536142349243164
    3. 'arr' → logprob: -2.4536142349243164
    4. 'sequence' → logprob: -2.8286142349243164
    5. ' sequence' → logprob: -3.2036142349243164
    6. ' lst' → logprob: -3.3286142349243164
    7. 'seq' → logprob: -3.4536142349243164
    8. 'numbers' → logprob: -3.7036142349243164
    9. ' arr' → logprob: -3.8286142349243164
    10. 'values' → logprob: -3.9536142349243164

Token 165: ' #' (ID: 1069)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.1211395263671875
    2. 'prev' → logprob: -1.7461395263671875
    3. 'seq' → logprob: -1.9961395263671875
    4. 'sequence' → logprob: -2.1211395263671875
    5. 'arr' → logprob: -2.2461395263671875
    6. 'if' → logprob: -3.3711395263671875
    7. 'current' → logprob: -3.3711395263671875
    8. 'numbers' → logprob: -3.9961395263671875
    9. 'nums' → logprob: -4.1211395263671875
    10. 'values' → logprob: -4.8711395263671875

Token 166: ' Lire' (ID: 57624)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.3483514785766602
    2. 'lst' → logprob: -1.5983514785766602
    3. 'seq' → logprob: -2.22335147857666
    4. 'if' → logprob: -2.22335147857666
    5. 'sequence' → logprob: -2.47335147857666
    6. 'arr' → logprob: -2.84835147857666
    7. 'values' → logprob: -3.22335147857666
    8. 'nums' → logprob: -3.59835147857666
    9. 'numbers' → logprob: -4.09835147857666
    10. 'elements' → logprob: -4.47335147857666

Token 167: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.011283124797046185
    2. ' les' → logprob: -5.011282920837402
    3. ' the' → logprob: -6.636282920837402
    4. 's' → logprob: -7.136282920837402
    5. 'la' → logprob: -7.386282920837402
    6. ' lst' → logprob: -8.011282920837402
    7. '()' → logprob: -8.011282920837402
    8. ' ' → logprob: -8.261282920837402
    9. 'the' → logprob: -9.011282920837402
    10. '_' → logprob: -9.136282920837402

Token 168: ' sé' (ID: 7462)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.4097268581390381
    2. 'liste' → logprob: -1.784726858139038
    3. ' sequence' → logprob: -2.159726858139038
    4. 'sequence' → logprob: -4.034727096557617
    5. 's' → logprob: -4.284727096557617
    6. ' sé' → logprob: -5.034727096557617
    7. ' list' → logprob: -5.284727096557617
    8. 'list' → logprob: -5.659727096557617
    9. ' ligne' → logprob: -6.159727096557617
    10. 'lst' → logprob: -6.784727096557617

Token 169: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0009562437771819532
    2. 'q' → logprob: -7.000956058502197
    3. 'quences' → logprob: -11.125956535339355
    4. 'qu' → logprob: -11.250956535339355
    5. 'QUENCE' → logprob: -12.250956535339355
    6. 'que' → logprob: -12.375956535339355
    7. 'rie' → logprob: -12.625956535339355
    8. '   ' → logprob: -12.875956535339355
    9. '
' → logprob: -14.875956535339355
    10. '#' → logprob: -15.125956535339355

Token 170: ' de' (ID: 334)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -1.297512412071228
    2. ' =' → logprob: -1.547512412071228
    3. ' numbers' → logprob: -2.5475125312805176
    4. ' nums' → logprob: -2.9225125312805176
    5. ' sequence' → logprob: -3.0475125312805176
    6. ' des' → logprob: -3.1725125312805176
    7. 's' → logprob: -3.2975125312805176
    8. ' elements' → logprob: -3.6725125312805176
    9. ' data' → logprob: -3.7975125312805176
    10. ' values' → logprob: -3.7975125312805176

Token 171: ' N' (ID: 478)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.4072135090827942
    2. 'N' → logprob: -2.0322134494781494
    3. ' N' → logprob: -2.5322134494781494
    4. ' ent' → logprob: -2.9072134494781494
    5. 'n' → logprob: -3.5322134494781494
    6. 'ent' → logprob: -4.1572136878967285
    7. 'inte' → logprob: -5.2822136878967285
    8. 'ints' → logprob: -5.4072136878967285
    9. ' la' → logprob: -6.1572136878967285
    10. ' integers' → logprob: -6.2822136878967285

Token 172: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.24463193118572235
    2. ' integers' → logprob: -1.7446318864822388
    3. ' nombres' → logprob: -4.119631767272949
    4. 'ent' → logprob: -4.619631767272949
    5. ' éléments' → logprob: -5.119631767272949
    6. ' ' → logprob: -5.994631767272949
    7. ' elements' → logprob: -6.369631767272949
    8. 'inte' → logprob: -6.744631767272949
    9. ' numbers' → logprob: -7.119631767272949
    10. ' entier' → logprob: -7.744631767272949

Token 173: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0035044457763433456
    2. 't' → logprob: -5.753504276275635
    3. 'ières' → logprob: -9.753504753112793
    4. 'ers' → logprob: -9.878504753112793
    5. 'eurs' → logprob: -10.003504753112793
    6. 'i' → logprob: -10.128504753112793
    7. 'ti' → logprob: -10.753504753112793
    8. 'ires' → logprob: -11.378504753112793
    9. 'tiers' → logprob: -11.503504753112793
    10. 'ieurs' → logprob: -11.628504753112793

Token 174: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021657755598425865
    2. '    
' → logprob: -4.396657943725586
    3. 's' → logprob: -5.896657943725586
    4. 'sequence' → logprob: -6.146657943725586
    5. ' sequence' → logprob: -6.771657943725586
    6. 'n' → logprob: -7.771657943725586
    7. 'elements' → logprob: -7.896657943725586
    8. '
' → logprob: -7.896657943725586
    9. 'numbers' → logprob: -7.896657943725586
    10. 'seq' → logprob: -8.271657943725586

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23629385232925415
    2. ' sequence' → logprob: -2.4862937927246094
    3. 'sequence' → logprob: -3.3612937927246094
    4. 'numbers' → logprob: -3.8612937927246094
    5. ' numbers' → logprob: -3.9862937927246094
    6. ' seq' → logprob: -4.611293792724609
    7. '    
' → logprob: -4.986293792724609
    8. 'seq' → logprob: -5.111293792724609
    9. 'nums' → logprob: -5.361293792724609
    10. 's' → logprob: -5.486293792724609

Token 176: ' a' (ID: 261)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.9252935647964478
    2. ' numbers' → logprob: -1.5502935647964478
    3. ' seq' → logprob: -2.175293445587158
    4. 'seq' → logprob: -2.550293445587158
    5. 'sequence' → logprob: -2.925293445587158
    6. 'numbers' → logprob: -3.050293445587158
    7. 'arr' → logprob: -3.425293445587158
    8. ' arr' → logprob: -3.925293445587158
    9. ' nums' → logprob: -3.925293445587158
    10. 'nums' → logprob: -4.050293445587158

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006732541602104902
    2. '=' → logprob: -5.00673246383667
    3. ' ' → logprob: -11.756732940673828
    4. 's' → logprob: -12.131732940673828
    5. ' =[' → logprob: -12.756732940673828
    6. ' ' → logprob: -15.506732940673828
    7. 'rray' → logprob: -15.506732940673828
    8. ' =
' → logprob: -15.881732940673828
    9. 'r' → logprob: -16.756732940673828
    10. 'b' → logprob: -17.256732940673828

Token 178: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.005234475247561932
    2. 'list' → logprob: -5.255234241485596
    3. ' [' → logprob: -14.880234718322754
    4. ' input' → logprob: -15.880234718322754
    5. 'input' → logprob: -16.630233764648438
    6. '[' → logprob: -17.130233764648438
    7. '[list' → logprob: -17.755233764648438
    8. ' ' → logprob: -17.880233764648438
    9. '	list' → logprob: -18.130233764648438
    10. 'List' → logprob: -19.130233764648438

Token 179: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.13046038150787354
    2. '(' → logprob: -2.130460262298584
    3. '(input' → logprob: -6.130460262298584
    4. '(int' → logprob: -6.630460262298584
    5. '()' → logprob: -11.130460739135742
    6. '(
' → logprob: -12.630460739135742
    7. '(range' → logprob: -12.880460739135742
    8. '(s' → logprob: -13.130460739135742
    9. ' (' → logprob: -13.380460739135742
    10. 'map' → logprob: -13.380460739135742

Token 180: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0045753768645226955
    2. '(' → logprob: -5.504575252532959
    3. '(str' → logprob: -8.379575729370117
    4. 'int' → logprob: -9.629575729370117
    5. ' int' → logprob: -10.129575729370117
    6. '(lambda' → logprob: -10.379575729370117
    7. '<|end|>' → logprob: -10.504575729370117
    8. '<int' → logprob: -10.629575729370117
    9. '(input' → logprob: -10.629575729370117
    10. '(
' → logprob: -10.754575729370117

Token 181: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09551311284303665
    2. ',input' → logprob: -2.595513105392456
    3. 'input' → logprob: -4.470513343811035
    4. ',' → logprob: -5.470513343811035
    5. '(' → logprob: -7.345513343811035
    6. ' input' → logprob: -8.970513343811035
    7. ' (' → logprob: -11.220513343811035
    8. '=input' → logprob: -11.345513343811035
    9. '   ' → logprob: -11.470513343811035
    10. ' ,' → logprob: -11.720513343811035

Token 182: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00317783304490149
    2. ' input' → logprob: -5.753177642822266
    3. '(input' → logprob: -16.128177642822266
    4. ',input' → logprob: -17.753177642822266
    5. '   ' → logprob: -17.878177642822266
    6. ' ' → logprob: -18.378177642822266
    7. '<input' → logprob: -18.378177642822266
    8. '	input' → logprob: -18.753177642822266
    9. '=input' → logprob: -18.878177642822266
    10. '_input' → logprob: -20.503177642822266

Token 183: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0445127372804563e-05
    2. '()' → logprob: -11.50001049041748
    3. ' ().' → logprob: -15.62501049041748
    4. '(' → logprob: -17.000009536743164
    5. '()
' → logprob: -18.375009536743164
    6. '   ' → logprob: -19.000009536743164
    7. ' .' → logprob: -19.750009536743164
    8. ')' → logprob: -20.125009536743164
    9. '.' → logprob: -20.500009536743164
    10. '.split' → logprob: -20.750009536743164

Token 184: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019299437990412116
    2. 'strip' → logprob: -6.251929759979248
    3. 'rstrip' → logprob: -14.126930236816406
    4. ' split' → logprob: -14.626930236816406
    5. '(split' → logprob: -16.626930236816406
    6. 'spl' → logprob: -17.626930236816406
    7. ' strip' → logprob: -19.626930236816406
    8. 'read' → logprob: -19.626930236816406
    9. '.split' → logprob: -20.001930236816406
    10. 's' → logprob: -20.376930236816406

Token 185: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2653472423553467
    2. '()' → logprob: -1.5153472423553467
    3. '))' → logprob: -4.640347480773926
    4. '())' → logprob: -6.015347480773926
    5. '(' → logprob: -7.390347480773926
    6. '())))' → logprob: -8.015347480773926
    7. ')' → logprob: -8.765347480773926
    8. ')))' → logprob: -10.015347480773926
    9. '()))
' → logprob: -10.515347480773926
    10. '(),' → logprob: -10.890347480773926

Token 186: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7116031646728516
    2. '    
' → logprob: -1.3366031646728516
    3. '   ' → logprob: -1.4616031646728516
    4. '   
' → logprob: -5.461603164672852
    5. '     
' → logprob: -5.836603164672852
    6. ' 
' → logprob: -6.086603164672852
    7. '    ' → logprob: -6.336603164672852
    8. '  
' → logprob: -6.586603164672852
    9. '\n' → logprob: -7.461603164672852
    10. 'n' → logprob: -7.711603164672852

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18621473014354706
    2. 'count' → logprob: -2.0612146854400635
    3. 'i' → logprob: -3.3112146854400635
    4. 'current' → logprob: -5.811214923858643
    5. 'pairs' → logprob: -7.186214923858643
    6. 'total' → logprob: -7.311214923858643
    7. ' i' → logprob: -7.561214923858643
    8. ' count' → logprob: -7.811214923858643
    9. 'cnt' → logprob: -8.686214447021484
    10. '    
' → logprob: -9.311214447021484

Token 188: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5676215291023254
    2. 'if' → logprob: -1.1926214694976807
    3. 'i' → logprob: -2.5676214694976807
    4. 'current' → logprob: -3.3176214694976807
    5. 'pairs' → logprob: -5.06762170791626
    6. 'total' → logprob: -5.31762170791626
    7. '   ' → logprob: -6.81762170791626
    8. 'pair' → logprob: -7.19262170791626
    9. 'comp' → logprob: -7.19262170791626
    10. 'curr' → logprob: -7.31762170791626

Token 189: ' Initial' (ID: 9209)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45816877484321594
    2. ' if' → logprob: -1.4581687450408936
    3. 'i' → logprob: -2.5831687450408936
    4. 'count' → logprob: -3.7081687450408936
    5. 'current' → logprob: -4.333168983459473
    6. ' i' → logprob: -4.458168983459473
    7. '   ' → logprob: -5.958168983459473
    8. 'prev' → logprob: -5.958168983459473
    9. ' current' → logprob: -6.083168983459473
    10. ' count' → logprob: -7.083168983459473

Token 190: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.45212796330451965
    2. 'i' → logprob: -1.4521279335021973
    3. 'izer' → logprob: -3.5771279335021973
    4. 'count' → logprob: -3.8271279335021973
    5. '   ' → logprob: -3.9521279335021973
    6. 'er' → logprob: -4.077127933502197
    7. '_count' → logprob: -4.202127933502197
    8. 'e' → logprob: -4.452127933502197
    9. 'ize' → logprob: -4.827127933502197
    10. '_' → logprob: -6.827127933502197

Token 191: ' la' (ID: 557)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.24927806854248047
    2. 'count' → logprob: -2.4992780685424805
    3. ' total' → logprob: -2.4992780685424805
    4. ' current' → logprob: -3.6242780685424805
    5. ' prev' → logprob: -4.1242780685424805
    6. ' pairs' → logprob: -5.2492780685424805
    7. 'total' → logprob: -5.9992780685424805
    8. ' i' → logprob: -6.3742780685424805
    9. ' pair' → logprob: -6.6242780685424805
    10. 'prev' → logprob: -7.1242780685424805

Token 192: ' valeur' (ID: 41664)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.042099643498659134
    2. 'current' → logprob: -4.167099475860596
    3. 'total' → logprob: -4.542099475860596
    4. 'prev' → logprob: -5.042099475860596
    5. ' count' → logprob: -5.417099475860596
    6. 'i' → logprob: -6.292099475860596
    7. ' total' → logprob: -8.042099952697754
    8. ' current' → logprob: -8.042099952697754
    9. 'cnt' → logprob: -8.042099952697754
    10. 'pair' → logprob: -8.292099952697754

Token 193: ' précédente' (ID: 177319)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.105668306350708
    2. ' actuelle' → logprob: -1.605668306350708
    3. '_pr' → logprob: -2.230668306350708
    4. '_act' → logprob: -2.480668306350708
    5. '_' → logprob: -2.605668306350708
    6. 'cour' → logprob: -2.855668306350708
    7. '_current' → logprob: -2.980668306350708
    8. '_prev' → logprob: -3.230668306350708
    9. 'pr' → logprob: -4.480668067932129
    10. '   ' → logprob: -4.980668067932129

Token 194: ' et' (ID: 859)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.7336206436157227
    2. 'prev' → logprob: -0.7336206436157227
    3. '_prev' → logprob: -4.358620643615723
    4. ',' → logprob: -4.733620643615723
    5. ' previous' → logprob: -5.858620643615723
    6. ' =' → logprob: -5.858620643615723
    7. ' current' → logprob: -6.108620643615723
    8. 'current' → logprob: -6.483620643615723
    9. ' a' → logprob: -6.733620643615723
    10. 'a' → logprob: -6.983620643615723

Token 195: ' le' (ID: 505)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.3047563433647156
    2. 'count' → logprob: -2.1797564029693604
    3. ' current' → logprob: -2.5547564029693604
    4. '   ' → logprob: -3.6797564029693604
    5. ' le' → logprob: -4.054756164550781
    6. ' la' → logprob: -4.054756164550781
    7. 'current' → logprob: -5.429756164550781
    8. ' ' → logprob: -6.554756164550781
    9. ' compteur' → logprob: -6.679756164550781
    10. ' counter' → logprob: -7.054756164550781

Token 196: ' compteur' (ID: 163344)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.20924386382102966
    2. ' count' → logprob: -2.4592437744140625
    3. ' compteur' → logprob: -2.5842437744140625
    4. 'comp' → logprob: -4.0842437744140625
    5. 'counter' → logprob: -5.8342437744140625
    6. 'current' → logprob: -5.9592437744140625
    7. ' compte' → logprob: -6.4592437744140625
    8. ' current' → logprob: -6.7092437744140625
    9. 'cnt' → logprob: -7.0842437744140625
    10. 'c' → logprob: -8.084243774414062

Token 197: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5729082226753235
    2. ' count' → logprob: -1.6979081630706787
    3. ' current' → logprob: -2.0729081630706787
    4. 'count' → logprob: -3.0729081630706787
    5. ' prev' → logprob: -3.5729081630706787
    6. 'current' → logprob: -3.9479081630706787
    7. ' =' → logprob: -4.697908401489258
    8. ',' → logprob: -4.822908401489258
    9. 'prev' → logprob: -4.947908401489258
    10. ' curr' → logprob: -6.697908401489258

Token 198: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.39272257685661316
    2. 'con' → logprob: -2.6427226066589355
    3. ' count' → logprob: -3.0177226066589355
    4. ' longueur' → logprob: -3.1427226066589355
    5. 'long' → logprob: -3.3927226066589355
    6. 'current' → logprob: -3.5177226066589355
    7. ' compteur' → logprob: -4.2677226066589355
    8. 'cou' → logprob: -4.5177226066589355
    9. 'comp' → logprob: -4.6427226066589355
    10. ' la' → logprob: -4.6427226066589355

Token 199: ' sé' (ID: 7462)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.18828114867210388
    2. ' première' → logprob: -3.3132810592651367
    3. 'sé' → logprob: -3.3132810592651367
    4. ' sé' → logprob: -3.3132810592651367
    5. 's' → logprob: -3.8132810592651367
    6. 'current' → logprob: -4.063281059265137
    7. 'sequence' → logprob: -5.188281059265137
    8. ' ' → logprob: -6.438281059265137
    9. 'der' → logprob: -6.688281059265137
    10. ' current' → logprob: -6.688281059265137

Token 200: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0010022050701081753
    2. 'rie' → logprob: -7.126002311706543
    3. 'q' → logprob: -8.751002311706543
    4. '   ' → logprob: -11.376002311706543
    5. 'qu' → logprob: -12.376002311706543
    6. 'QUENCE' → logprob: -12.501002311706543
    7. 'quences' → logprob: -12.751002311706543
    8. 'ance' → logprob: -12.876002311706543
    9. '
' → logprob: -12.876002311706543
    10. '#' → logprob: -13.251002311706543

Token 201: ' cour' (ID: 2871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42323142290115356
    2. ' current' → logprob: -2.048231363296509
    3. 'current' → logprob: -2.673231363296509
    4. ' prev' → logprob: -3.423231363296509
    5. ' count' → logprob: -3.548231363296509
    6. 'count' → logprob: -3.673231363296509
    7. 'prev' → logprob: -4.173231601715088
    8. ' curr' → logprob: -5.298231601715088
    9. ' précédente' → logprob: -5.298231601715088
    10. '_' → logprob: -5.423231601715088

Token 202: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.29644328355789185
    2. 'ente' → logprob: -1.796443223953247
    3. 'ent' → logprob: -3.296443223953247
    4. 'r' → logprob: -3.796443223953247
    5. '   ' → logprob: -3.921443223953247
    6. 'ant' → logprob: -5.296443462371826
    7. 'u' → logprob: -6.421443462371826
    8. 'rent' → logprob: -6.921443462371826
    9. '    ' → logprob: -7.046443462371826
    10. 'a' → logprob: -7.921443462371826

Token 203: '
' (ID: 198)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.20942381024360657
    2. 'prev' → logprob: -2.084423780441284
    3. '   ' → logprob: -2.959423780441284
    4. ' current' → logprob: -5.334424018859863
    5. ' previous' → logprob: -6.459424018859863
    6. ' val' → logprob: -6.709424018859863
    7. ',' → logprob: -6.709424018859863
    8. 'current' → logprob: -7.084424018859863
    9. ' curr' → logprob: -7.334424018859863
    10. ' cur' → logprob: -7.709424018859863

Token 204: '   ' (ID: 271)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.43277445435523987
    2. '   ' → logprob: -1.6827744245529175
    3. 'prev' → logprob: -1.9327744245529175
    4. ' val' → logprob: -5.057774543762207
    5. ' current' → logprob: -5.557774543762207
    6. ' previous' → logprob: -5.682774543762207
    7. 'val' → logprob: -6.557774543762207
    8. 'current' → logprob: -7.182774543762207
    9. 'previous' → logprob: -7.557774543762207
    10. '_prev' → logprob: -7.557774543762207

Token 205: ' bef' (ID: 50245)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.23590779304504395
    2. 'prev' → logprob: -1.735907793045044
    3. ' previous' → logprob: -3.610907793045044
    4. ' current' → logprob: -5.985907554626465
    5. 'previous' → logprob: -6.110907554626465
    6. '   ' → logprob: -7.235907554626465
    7. 'current' → logprob: -7.985907554626465
    8. ' a' → logprob: -8.110907554626465
    9. 'a' → logprob: -8.985907554626465
    10. ' val' → logprob: -9.110907554626465

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2571726441383362
    2. '_val' → logprob: -1.6321725845336914
    3. '_' → logprob: -4.257172584533691
    4. '_value' → logprob: -4.757172584533691
    5. '=' → logprob: -4.882172584533691
    6. ' ' → logprob: -7.757172584533691
    7. 'val' → logprob: -9.007172584533691
    8. '   ' → logprob: -9.632172584533691
    9. 'er' → logprob: -9.757172584533691
    10. ',' → logprob: -9.882172584533691

Token 207: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5259358286857605
    2. ' a' → logprob: -1.0259358882904053
    3. ' None' → logprob: -3.1509358882904053
    4. 'None' → logprob: -4.900935649871826
    5. ' ' → logprob: -8.400936126708984
    6. '  ' → logprob: -11.525936126708984
    7. '   ' → logprob: -11.650936126708984
    8. ' -' → logprob: -11.650936126708984
    9. '	a' → logprob: -11.900936126708984
    10. 'N' → logprob: -12.275936126708984

Token 208: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0802738870552275e-05
    2. '0' → logprob: -11.50001049041748
    3. ' [' → logprob: -14.62501049041748
    4. '   ' → logprob: -16.375011444091797
    5. '\[' → logprob: -17.125011444091797
    6. '[
' → logprob: -17.375011444091797
    7. '1' → logprob: -17.750011444091797
    8. ' ' → logprob: -18.000011444091797
    9. 's' → logprob: -18.000011444091797
    10. '[-' → logprob: -18.250011444091797

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.125001907348633
    4. '[' → logprob: -17.687501907348633
    5. '
' → logprob: -18.687501907348633
    6. '۰' → logprob: -18.812501907348633
    7. '1' → logprob: -18.875001907348633
    8. '00' → logprob: -18.875001907348633
    9. '```' → logprob: -19.125001907348633
    10. ']' → logprob: -19.312501907348633

Token 210: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.429934024810791
    2. ']
' → logprob: -1.054934024810791
    3. ')' → logprob: -7.679934024810791
    4. ' ]
' → logprob: -8.054933547973633
    5. ' ]' → logprob: -8.304933547973633
    6. ')
' → logprob: -9.054933547973633
    7. ']
' → logprob: -9.929933547973633
    8. '   ' → logprob: -11.054933547973633
    9. ']

' → logprob: -12.054933547973633
    10. '])' → logprob: -12.929933547973633

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.665798544883728
    2. '
' → logprob: -0.790798544883728
    3. '    
' → logprob: -4.165798664093018
    4. 'count' → logprob: -4.165798664093018
    5. 'cnt' → logprob: -7.790798664093018
    6. ' count' → logprob: -8.16579818725586
    7. 'c' → logprob: -8.29079818725586
    8. '   
' → logprob: -8.91579818725586
    9. 'n' → logprob: -9.41579818725586
    10. '\n' → logprob: -9.79079818725586

Token 212: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.20822101831436157
    2. 'cnt' → logprob: -1.7082209587097168
    3. 'c' → logprob: -6.333220958709717
    4. 'length' → logprob: -6.708220958709717
    5. ' count' → logprob: -6.958220958709717
    6. 'counter' → logprob: -7.458220958709717
    7. 'cur' → logprob: -7.583220958709717
    8. 'cou' → logprob: -7.583220958709717
    9. 'current' → logprob: -7.958220958709717
    10. ' cnt' → logprob: -8.083221435546875

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890763878822327
    2. '=' → logprob: -2.5789077281951904
    3. '_' → logprob: -11.45390796661377
    4. 's' → logprob: -12.45390796661377
    5. ' ' → logprob: -13.82890796661377
    6. ')' → logprob: -14.32890796661377
    7. '_=' → logprob: -14.70390796661377
    8. '<|end|>' → logprob: -15.57890796661377
    9. ' ' → logprob: -15.70390796661377
    10. '_space' → logprob: -15.82890796661377

Token 214: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001263090642169118
    2. ' ' → logprob: -6.87626314163208
    3. '0' → logprob: -8.376262664794922
    4. '   ' → logprob: -17.126262664794922
    5. '  ' → logprob: -19.001262664794922
    6. '```' → logprob: -19.126262664794922
    7. ' ' → logprob: -20.001262664794922
    8. '۱' → logprob: -20.126262664794922
    9. '`' → logprob: -20.438762664794922
    10. '１' → logprob: -20.438762664794922

Token 215: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. '0' → logprob: -11.875006675720215
    3. ' ' → logprob: -16.25000762939453
    4. '   ' → logprob: -20.62500762939453
    5. '```' → logprob: -21.00000762939453
    6. '１' → logprob: -21.62500762939453
    7. '' → logprob: -22.12500762939453
    8. '`' → logprob: -22.25000762939453
    9. '۱' → logprob: -22.25000762939453
    10. '2' → logprob: -22.75000762939453

Token 216: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19079449772834778
    2. '    
' → logprob: -2.3157944679260254
    3. '
' → logprob: -3.0657944679260254
    4. ' for' → logprob: -3.9407944679260254
    5. ' 
' → logprob: -5.690794467926025
    6. 'for' → logprob: -6.190794467926025
    7. '  
' → logprob: -6.315794467926025
    8. '   
' → logprob: -6.815794467926025
    9. '\n' → logprob: -8.315794944763184
    10. '    ' → logprob: -9.440794944763184

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004630315117537975
    2. 'for' → logprob: -5.504630088806152
    3. ' for' → logprob: -7.504630088806152
    4. '    
' → logprob: -13.879630088806152
    5. '	for' → logprob: -15.879630088806152
    6. '
' → logprob: -16.62963104248047
    7. '       ' → logprob: -17.62963104248047
    8. '    ' → logprob: -17.62963104248047
    9. '  ' → logprob: -18.25463104248047
    10. '   ' → logprob: -18.37963104248047

Token 218: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004763330332934856
    2. 'total' → logprob: -5.504763126373291
    3. '   ' → logprob: -8.12976360321045
    4. ' for' → logprob: -8.12976360321045
    5. 'result' → logprob: -9.37976360321045
    6. 'pairs' → logprob: -12.00476360321045
    7. 'i' → logprob: -13.12976360321045
    8. ' total' → logprob: -13.50476360321045
    9. 'res' → logprob: -14.25476360321045
    10. 'rés' → logprob: -15.00476360321045

Token 219: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2519907057285309
    2. ' for' → logprob: -1.5019906759262085
    3. 'range' → logprob: -10.50199031829834
    4. '   ' → logprob: -10.62699031829834
    5. ' range' → logprob: -12.50199031829834
    6. 'For' → logprob: -12.75199031829834
    7. 'count' → logprob: -14.87699031829834
    8. 'i' → logprob: -15.00199031829834
    9. 'Pour' → logprob: -15.25199031829834
    10. 'from' → logprob: -15.25199031829834

Token 220: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0020775748416781425
    2. '   ' → logprob: -7.002077579498291
    3. 'ours' → logprob: -7.502077579498291
    4. 'o' → logprob: -9.002077102661133
    5. 'or' → logprob: -9.377077102661133
    6. '       ' → logprob: -9.502077102661133
    7. 'er' → logprob: -9.627077102661133
    8. 'ourt' → logprob: -9.752077102661133
    9. 'ou' → logprob: -10.002077102661133
    10. 'orrer' → logprob: -10.877077102661133

Token 221: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.000287795381154865
    2. 'er' → logprob: -8.375288009643555
    3. 'i' → logprob: -10.750288009643555
    4. 'for' → logprob: -10.750288009643555
    5. 'r' → logprob: -12.500288009643555
    6. 'e' → logprob: -13.125288009643555
    7. ' for' → logprob: -13.125288009643555
    8. 't' → logprob: -13.250288009643555
    9. '   ' → logprob: -13.250288009643555
    10. 'ent' → logprob: -13.625288009643555

Token 222: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.36310359835624695
    2. 'a' → logprob: -1.4881036281585693
    3. ' range' → logprob: -2.7381036281585693
    4. 'range' → logprob: -4.48810338973999
    5. '   ' → logprob: -6.23810338973999
    6. ' for' → logprob: -7.98810338973999
    7. 'for' → logprob: -8.988103866577148
    8. ' ' → logprob: -9.113103866577148
    9. ' la' → logprob: -10.238103866577148
    10. ' len' → logprob: -10.488103866577148

Token 223: ' sé' (ID: 7462)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03128647431731224
    2. 'range' → logprob: -4.281286239624023
    3. ' a' → logprob: -4.406286239624023
    4. ' range' → logprob: -5.781286239624023
    5. 'for' → logprob: -6.531286239624023
    6. ' for' → logprob: -9.031286239624023
    7. '   ' → logprob: -9.781286239624023
    8. ' ' → logprob: -11.156286239624023
    9. 'sequence' → logprob: -11.281286239624023
    10. 'enumer' → logprob: -11.406286239624023

Token 224: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -3.35706390615087e-05
    2. 'q' → logprob: -10.750033378601074
    3. 'qu' → logprob: -13.000033378601074
    4. '   ' → logprob: -13.000033378601074
    5. '
' → logprob: -13.000033378601074
    6. 'que' → logprob: -13.500033378601074
    7. 'ence' → logprob: -13.750033378601074
    8. '`' → logprob: -14.500033378601074
    9. 'u' → logprob: -14.625033378601074
    10. 'QUENCE' → logprob: -14.625033378601074

Token 225: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31386321783065796
    2. ' for' → logprob: -1.4388632774353027
    3. 'for' → logprob: -3.4388632774353027
    4. ' pour' → logprob: -10.438862800598145
    5. '    
' → logprob: -11.563862800598145
    6. ' range' → logprob: -11.813862800598145
    7. '
' → logprob: -11.938862800598145
    8. '	for' → logprob: -12.188862800598145
    9. '    ' → logprob: -12.313862800598145
    10. ':' → logprob: -12.313862800598145

Token 226: ' détect' (ID: 118715)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.856278657913208
    2. ' i' → logprob: -0.856278657913208
    3. 'a' → logprob: -2.481278657913208
    4. 'i' → logprob: -3.106278657913208
    5. ' range' → logprob: -4.481278419494629
    6. ' count' → logprob: -5.731278419494629
    7. ' ' → logprob: -6.356278419494629
    8. 'range' → logprob: -6.606278419494629
    9. 'count' → logprob: -6.981278419494629
    10. ' n' → logprob: -7.481278419494629

Token 227: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.6047699318733066e-05
    2. '   ' → logprob: -11.500016212463379
    3. 'e' → logprob: -12.875016212463379
    4. 'iner' → logprob: -13.625016212463379
    5. 'urer' → logprob: -14.625016212463379
    6. 'uer' → logprob: -14.750016212463379
    7. '       ' → logprob: -14.750016212463379
    8. 'ent' → logprob: -15.125016212463379
    9. 'érer' → logprob: -16.500015258789062
    10. 'rer' → logprob: -16.750015258789062

Token 228: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7888991832733154
    2. ' a' → logprob: -1.1638991832733154
    3. ' len' → logprob: -2.4138991832733154
    4. 'len' → logprob: -3.4138991832733154
    5. ' i' → logprob: -3.5388991832733154
    6. 'i' → logprob: -4.2888994216918945
    7. '1' → logprob: -4.2888994216918945
    8. ' ' → logprob: -4.5388994216918945
    9. ' la' → logprob: -4.7888994216918945
    10. ' range' → logprob: -4.9138994216918945

Token 229: ' blocs' (ID: 182599)
  Prédit: ' changements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' changements' → logprob: -0.3981054425239563
    2. ' groupes' → logprob: -2.3981053829193115
    3. 'chang' → logprob: -2.5231053829193115
    4. 'i' → logprob: -3.5231053829193115
    5. ' éléments' → logprob: -3.8981053829193115
    6. 'élé' → logprob: -4.148105621337891
    7. ' i' → logprob: -4.523105621337891
    8. 'ch' → logprob: -4.773105621337891
    9. 's' → logprob: -5.398105621337891
    10. ' répét' → logprob: -5.398105621337891

Token 230: ' cons' (ID: 1473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4762507379055023
    2. ' for' → logprob: -1.2262507677078247
    3. 'for' → logprob: -3.226250648498535
    4. ' de' → logprob: -3.476250648498535
    5. ' i' → logprob: -5.476250648498535
    6. ' of' → logprob: -5.976250648498535
    7. ' if' → logprob: -6.101250648498535
    8. 'de' → logprob: -6.226250648498535
    9. '    ' → logprob: -7.476250648498535
    10. ' d' → logprob: -7.976250648498535

Token 231: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.002554261591285467
    2. 'ecut' → logprob: -6.252554416656494
    3. 'éc' → logprob: -7.877554416656494
    4. 'é' → logprob: -8.627553939819336
    5. '   ' → logprob: -10.627553939819336
    6. 'ect' → logprob: -11.627553939819336
    7. 'ec' → logprob: -11.877553939819336
    8. '```' → logprob: -12.002553939819336
    9. 'écution' → logprob: -12.377553939819336
    10. 'e' → logprob: -12.627553939819336

Token 232: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.1406548023223877
    2. 'if' → logprob: -2.7656548023223877
    3. '   ' → logprob: -3.1406548023223877
    4. 'ive' → logprob: -3.8906548023223877
    5. 'ives' → logprob: -5.640654563903809
    6. 'i' → logprob: -8.015654563903809
    7. 'ents' → logprob: -8.765654563903809
    8. '       ' → logprob: -8.765654563903809
    9. 'ut' → logprob: -10.015654563903809
    10. 'ent' → logprob: -10.015654563903809

Token 233: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6476399898529053
    2. 'for' → logprob: -1.0226399898529053
    3. '   ' → logprob: -2.1476399898529053
    4. ' pour' → logprob: -8.522640228271484
    5. 'pour' → logprob: -10.272640228271484
    6. '	for' → logprob: -10.772640228271484
    7. '
' → logprob: -11.272640228271484
    8. ',' → logprob: -11.397640228271484
    9. ' ' → logprob: -11.647640228271484
    10. ' range' → logprob: -12.397640228271484

Token 234: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6655189394950867
    2. 'm' → logprob: -1.2905189990997314
    3. 'val' → logprob: -3.2905189990997314
    4. '   ' → logprob: -3.5405189990997314
    5. 'élé' → logprob: -3.5405189990997314
    6. ' a' → logprob: -3.6655189990997314
    7. 'ident' → logprob: -4.040518760681152
    8. 'la' → logprob: -4.790518760681152
    9. ' mêmes' → logprob: -4.790518760681152
    10. ' ' → logprob: -4.915518760681152

Token 235: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.009799769148230553
    2. ' même' → logprob: -4.759799957275391
    3. 'same' → logprob: -7.634799957275391
    4. 'mé' → logprob: -7.884799957275391
    5. 'suite' → logprob: -9.25979995727539
    6. '   ' → logprob: -9.38479995727539
    7. '```' → logprob: -10.38479995727539
    8. ' ' → logprob: -10.88479995727539
    9. 'sequence' → logprob: -11.00979995727539
    10. 'even' → logprob: -11.13479995727539

Token 236: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.021292198449373245
    2. ' valeur' → logprob: -4.271292209625244
    3. 'a' → logprob: -6.021292209625244
    4. ' val' → logprob: -6.146292209625244
    5. '   ' → logprob: -7.146292209625244
    6. ' a' → logprob: -7.521292209625244
    7. 'value' → logprob: -7.521292209625244
    8. ' ' → logprob: -7.646292209625244
    9. 'élé' → logprob: -10.146291732788086
    10. ' value' → logprob: -10.396291732788086

Token 237: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18297041952610016
    2. ' for' → logprob: -1.932970404624939
    3. 'for' → logprob: -3.8079705238342285
    4. '    
' → logprob: -8.55797004699707
    5. '
' → logprob: -9.93297004699707
    6. '	for' → logprob: -10.30797004699707
    7. '    ' → logprob: -12.18297004699707
    8. ' ' → logprob: -12.80797004699707
    9. '  ' → logprob: -12.93297004699707
    10. ' pour' → logprob: -12.93297004699707

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04562936723232269
    2. ' for' → logprob: -3.1706292629241943
    3. 'for' → logprob: -6.420629501342773
    4. '    
' → logprob: -7.295629501342773
    5. ' 
' → logprob: -8.920629501342773
    6. '
' → logprob: -9.295629501342773
    7. '  
' → logprob: -10.670629501342773
    8. '    ' → logprob: -10.920629501342773
    9. ' ' → logprob: -11.170629501342773
    10. ' ' → logprob: -11.920629501342773

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4854293465614319
    2. ' for' → logprob: -0.9854293465614319
    3. '   ' → logprob: -4.485429286956787
    4. ' ' → logprob: -12.485429763793945
    5. '    
' → logprob: -12.860429763793945
    6. '
' → logprob: -12.985429763793945
    7. ' 
' → logprob: -13.485429763793945
    8. '	for' → logprob: -13.610429763793945
    9. 'i' → logprob: -14.235429763793945
    10. ' i' → logprob: -14.235429763793945

Token 240: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.064486026763916
    2. 'i' → logprob: -1.439486026763916
    3. ' num' → logprob: -2.064486026763916
    4. ' x' → logprob: -2.189486026763916
    5. 'x' → logprob: -2.314486026763916
    6. 'num' → logprob: -2.564486026763916
    7. ' val' → logprob: -6.564486026763916
    8. ' number' → logprob: -7.439486026763916
    9. 'val' → logprob: -7.564486026763916
    10. ' v' → logprob: -9.064485549926758

Token 241: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03096223622560501
    2. 'in' → logprob: -3.5309622287750244
    3. ' ' → logprob: -6.7809624671936035
    4. '_' → logprob: -10.905961990356445
    5. '  ' → logprob: -11.155961990356445
    6. '   ' → logprob: -11.405961990356445
    7. ',' → logprob: -11.655961990356445
    8. ' i' → logprob: -11.780961990356445
    9. ' ,' → logprob: -12.780961990356445
    10. '    ' → logprob: -13.280961990356445

Token 242: ' j' (ID: 441)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1079124212265015
    2. 'num' → logprob: -1.2329124212265015
    3. 'val' → logprob: -1.3579124212265015
    4. 'value' → logprob: -2.607912540435791
    5. 'v' → logprob: -3.482912540435791
    6. ' val' → logprob: -4.732912540435791
    7. ' num' → logprob: -5.607912540435791
    8. ' x' → logprob: -6.107912540435791
    9. ' value' → logprob: -7.357912540435791
    10. ' v' → logprob: -7.732912540435791

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07032819092273712
    2. 'in' → logprob: -2.6953282356262207
    3. ' ' → logprob: -8.070327758789062
    4. ',' → logprob: -9.695327758789062
    5. '   ' → logprob: -11.945327758789062
    6. '  ' → logprob: -12.695327758789062
    7. 'n' → logprob: -13.195327758789062
    8. '	in' → logprob: -13.320327758789062
    9. ' ,' → logprob: -13.570327758789062
    10. ')' → logprob: -14.195327758789062

Token 244: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.041905105113983154
    2. ' enumerate' → logprob: -3.416905164718628
    3. 'a' → logprob: -5.166904926300049
    4. 'zip' → logprob: -6.041904926300049
    5. ' zip' → logprob: -9.166905403137207
    6. ' a' → logprob: -10.666905403137207
    7. '[(' → logprob: -11.666905403137207
    8. '(zip' → logprob: -12.291905403137207
    9. ' ' → logprob: -13.291905403137207
    10. '```' → logprob: -14.166905403137207

Token 245: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7042621970176697
    2. '(a' → logprob: -0.7042621970176697
    3. ' a' → logprob: -4.5792622566223145
    4. '(' → logprob: -7.3292622566223145
    5. ' (' → logprob: -9.079261779785156
    6. ')' → logprob: -11.454261779785156
    7. '	a' → logprob: -12.704261779785156
    8. ' ' → logprob: -13.079261779785156
    9. ')a' → logprob: -13.829261779785156
    10. ',a' → logprob: -14.204261779785156

Token 246: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16036994755268097
    2. '):
' → logprob: -1.9103699922561646
    3. ')' → logprob: -9.785369873046875
    4. ' ):' → logprob: -9.910369873046875
    5. '):
' → logprob: -11.035369873046875
    6. '):

' → logprob: -12.285369873046875
    7. '   ' → logprob: -12.410369873046875
    8. '[' → logprob: -12.410369873046875
    9. ' ):
' → logprob: -12.410369873046875
    10. ':' → logprob: -12.535369873046875

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09085220843553543
    2. '   ' → logprob: -2.5908522605895996
    3. '    ' → logprob: -5.2158522605896
    4. ' if' → logprob: -6.4658522605896
    5. '    
' → logprob: -6.5908522605896
    6. '        
' → logprob: -6.8408522605896
    7. ':' → logprob: -7.0908522605896
    8. ' 
' → logprob: -7.3408522605896
    9. '     
' → logprob: -8.465851783752441
    10. '  
' → logprob: -8.465851783752441

Token 248: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1681232452392578
    2. 'if' (adapté à ' if') → logprob: -2.293123245239258
    3. ' ' → logprob: -3.793123245239258
    4. '       ' → logprob: -4.543123245239258
    5. '    ' → logprob: -4.668123245239258
    6. '   ' → logprob: -5.043123245239258
    7. ' 
' → logprob: -5.668123245239258
    8. '        ' → logprob: -8.168123245239258
    9. '    
' → logprob: -8.668123245239258
    10. '     
' → logprob: -8.668123245239258

Token 249: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0233105830848217
    2. ' j' → logprob: -3.773310661315918
    3. '   ' → logprob: -10.773310661315918
    4. 'i' → logprob: -11.023310661315918
    5. ' ' → logprob: -11.148310661315918
    6. '	j' → logprob: -12.773310661315918
    7. ' i' → logprob: -13.023310661315918
    8. '    ' → logprob: -13.148310661315918
    9. '  ' → logprob: -13.148310661315918
    10. 'a' → logprob: -13.648310661315918

Token 250: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4298878014087677
    2. '==' → logprob: -1.0548877716064453
    3. ' >' → logprob: -7.804887771606445
    4. '>' → logprob: -8.054887771606445
    5. ' ' → logprob: -8.804887771606445
    6. '=' → logprob: -9.054887771606445
    7. '0' → logprob: -9.179887771606445
    8. 'and' → logprob: -9.679887771606445
    9. ' =' → logprob: -11.929887771606445
    10. ' and' → logprob: -11.929887771606445

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11283773928880692
    2. ' ' → logprob: -2.237837791442871
    3. 'len' → logprob: -12.237837791442871
    4. '   ' → logprob: -12.487837791442871
    5. ' len' → logprob: -13.237837791442871
    6. 'N' → logprob: -13.425337791442871
    7. '  ' → logprob: -13.612837791442871
    8. ' N' → logprob: -14.362837791442871
    9. '    ' → logprob: -14.800337791442871
    10. '۰' → logprob: -15.550337791442871

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001801801408873871
    2. ' ' → logprob: -8.6251802444458
    3. 'len' → logprob: -14.8751802444458
    4. '   ' → logprob: -16.125179290771484
    5. 'N' → logprob: -16.875179290771484
    6. '۰' → logprob: -17.500179290771484
    7. '  ' → logprob: -18.000179290771484
    8. '    ' → logprob: -18.500179290771484
    9. '1' → logprob: -18.625179290771484
    10. '     ' → logprob: -18.875179290771484

Token 253: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18314911425113678
    2. ':
' → logprob: -1.9331490993499756
    3. ' or' → logprob: -3.9331490993499756
    4. '           ' → logprob: -6.058149337768555
    5. '       ' → logprob: -8.058149337768555
    6. ' and' → logprob: -8.183149337768555
    7. ':
' → logprob: -9.683149337768555
    8. '   ' → logprob: -10.058149337768555
    9. ' :' → logprob: -11.308149337768555
    10. ' :
' → logprob: -12.183149337768555

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028250182047486305
    2. 'count' → logprob: -4.653250217437744
    3. ' continue' → logprob: -4.653250217437744
    4. ' count' → logprob: -5.028250217437744
    5. 'continue' → logprob: -6.153250217437744
    6. '       ' → logprob: -10.653249740600586
    7. '
' → logprob: -10.778249740600586
    8. '0' → logprob: -11.403249740600586
    9. '          ' → logprob: -11.903249740600586
    10. '   ' → logprob: -12.028249740600586

Token 255: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04704706370830536
    2. ' count' → logprob: -3.1720471382141113
    3. '           ' → logprob: -5.922047138214111
    4. 'continue' → logprob: -6.922047138214111
    5. ' continue' → logprob: -8.547046661376953
    6. '       ' → logprob: -8.922046661376953
    7. '
' → logprob: -11.172046661376953
    8. '   ' → logprob: -11.422046661376953
    9. '	count' → logprob: -12.422046661376953
    10. '               ' → logprob: -12.672046661376953

Token 256: ' Premier' (ID: 27686)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.006808449048548937
    2. ' count' → logprob: -5.006808280944824
    3. '   ' → logprob: -10.006808280944824
    4. '       ' → logprob: -10.256808280944824
    5. 'continue' → logprob: -11.506808280944824
    6. '           ' → logprob: -13.881808280944824
    7. ' ' → logprob: -14.881808280944824
    8. '	count' → logprob: -15.256808280944824
    9. '```' → logprob: -15.256808280944824
    10. '
' → logprob: -15.756808280944824

Token 257: ' élément' (ID: 99627)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6886342167854309
    2. 'count' → logprob: -0.8136342167854309
    3. '       ' → logprob: -4.313634395599365
    4. '
' → logprob: -4.688634395599365
    5. '   ' → logprob: -4.938634395599365
    6. ' compte' → logprob: -5.313634395599365
    7. '           ' → logprob: -5.563634395599365
    8. ' if' → logprob: -5.563634395599365
    9. ' compteur' → logprob: -6.063634395599365
    10. ' ' → logprob: -6.313634395599365

Token 258: ' :' (ID: 712)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06294278055429459
    2. 'count' → logprob: -3.4379427433013916
    3. ' count' → logprob: -3.9379427433013916
    4. '       ' → logprob: -5.062942981719971
    5. ':
' → logprob: -6.812942981719971
    6. '
' → logprob: -7.437942981719971
    7. ':' → logprob: -7.687942981719971
    8. ',' → logprob: -8.062942504882812
    9. '               ' → logprob: -9.062942504882812
    10. ',count' → logprob: -9.562942504882812

Token 259: ' initial' (ID: 4871)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6385259628295898
    2. ' count' → logprob: -0.7635259628295898
    3. '           ' → logprob: -5.51352596282959
    4. '       ' → logprob: -6.38852596282959
    5. ' continue' → logprob: -9.63852596282959
    6. '   ' → logprob: -10.13852596282959
    7. 'continue' → logprob: -10.51352596282959
    8. '               ' → logprob: -10.76352596282959
    9. '	count' → logprob: -11.26352596282959
    10. ' ' → logprob: -11.51352596282959

Token 260: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.00017290872347075492
    2. 'ise' → logprob: -9.50017261505127
    3. 'er' → logprob: -10.00017261505127
    4. 'is' → logprob: -10.50017261505127
    5. 'ize' → logprob: -11.75017261505127
    6. '   ' → logprob: -12.25017261505127
    7. 'isation' → logprob: -12.50017261505127
    8. 'izer' → logprob: -12.75017261505127
    9. 'isez' → logprob: -14.00017261505127
    10. '```' → logprob: -14.37517261505127

Token 261: ' '' (ID: 461)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07903255522251129
    2. ' count' → logprob: -2.5790326595306396
    3. '           ' → logprob: -9.079032897949219
    4. '   ' → logprob: -11.079032897949219
    5. '               ' → logprob: -12.329032897949219
    6. '       ' → logprob: -12.829032897949219
    7. ' the' → logprob: -13.329032897949219
    8. '
' → logprob: -13.954032897949219
    9. '	count' → logprob: -14.329032897949219
    10. 'the' → logprob: -14.579032897949219

Token 262: 'bef' (ID: 47030)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00015109812375158072
    2. ' count' → logprob: -8.875150680541992
    3. 'bef' → logprob: -12.375150680541992
    4. '   ' → logprob: -12.875150680541992
    5. '  ' → logprob: -14.125150680541992
    6. ' ' → logprob: -14.375150680541992
    7. '```' → logprob: -14.500150680541992
    8. '	count' → logprob: -14.750150680541992
    9. 'counter' → logprob: -15.875150680541992
    10. 'counts' → logprob: -15.937650680541992

Token 263: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6559979319572449
    2. ' =' → logprob: -0.9059979319572449
    3. '=' → logprob: -2.7809979915618896
    4. 'count' → logprob: -4.6559977531433105
    5. '',' → logprob: -6.1559977531433105
    6. ',' → logprob: -7.5309977531433105
    7. '           ' → logprob: -7.6559977531433105
    8. ' ='' → logprob: -7.9059977531433105
    9. '='' → logprob: -8.030998229980469
    10. 'et' → logprob: -8.155998229980469

Token 264: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2753654718399048
    2. '=' → logprob: -2.0253653526306152
    3. ' and' → logprob: -2.9003653526306152
    4. ' =' → logprob: -3.1503653526306152
    5. 'and' → logprob: -4.900365352630615
    6. ',' → logprob: -6.275365352630615
    7. '
' → logprob: -7.525365352630615
    8. '            ' → logprob: -8.275365829467773
    9. ';' → logprob: -8.775365829467773
    10. '       ' → logprob: -8.775365829467773

Token 265: ' le' (ID: 505)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.016123754903674126
    2. ' count' → logprob: -4.1411237716674805
    3. 'continue' → logprob: -9.51612377166748
    4. ' continue' → logprob: -11.39112377166748
    5. '   ' → logprob: -14.01612377166748
    6. ' compter' → logprob: -14.14112377166748
    7. '1' → logprob: -14.39112377166748
    8. 'contin' → logprob: -14.51612377166748
    9. '       ' → logprob: -15.01612377166748
    10. '           ' → logprob: -15.39112377166748

Token 266: ' compteur' (ID: 163344)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -5.6457742175552994e-05
    2. ' count' → logprob: -10.125056266784668
    3. 'comp' → logprob: -12.000056266784668
    4. 'continue' → logprob: -12.625056266784668
    5. 'counter' → logprob: -12.875056266784668
    6. '   ' → logprob: -13.125056266784668
    7. 'com' → logprob: -14.625056266784668
    8. ' compteur' → logprob: -14.625056266784668
    9. '```' → logprob: -15.125056266784668
    10. 'continu' → logprob: -15.875056266784668

Token 267: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06046483665704727
    2. 'count' → logprob: -3.685464859008789
    3. ' count' → logprob: -4.310464859008789
    4. '=' → logprob: -4.435464859008789
    5. ' =' → logprob: -5.185464859008789
    6. ',' → logprob: -7.060464859008789
    7. ' and' → logprob: -8.185464859008789
    8. ' à' → logprob: -8.310464859008789
    9. ' et' → logprob: -8.435464859008789
    10. '=count' → logprob: -8.560464859008789

Token 268: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03234155848622322
    2. 'count' → logprob: -3.657341480255127
    3. ' ' → logprob: -5.657341480255127
    4. ' count' → logprob: -7.532341480255127
    5. 'sequence' → logprob: -7.782341480255127
    6. 'la' → logprob: -7.907341480255127
    7. 'con' → logprob: -8.282341957092285
    8. 'comp' → logprob: -8.782341957092285
    9. ' la' → logprob: -9.407341957092285
    10. 'pa' → logprob: -9.657341957092285

Token 269: ' sé' (ID: 7462)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05296096205711365
    2. 'count' → logprob: -3.6779608726501465
    3. ' ' → logprob: -3.9279608726501465
    4. ' count' → logprob: -5.5529608726501465
    5. 'current' → logprob: -7.3029608726501465
    6. ' current' → logprob: -7.8029608726501465
    7. ' sequence' → logprob: -7.9279608726501465
    8. 'sequence' → logprob: -7.9279608726501465
    9. 'con' → logprob: -8.177961349487305
    10. 'comp' → logprob: -8.927961349487305

Token 270: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.000275040598353371
    2. 'rie' → logprob: -8.625274658203125
    3. 'q' → logprob: -10.125274658203125
    4. 'quences' → logprob: -11.000274658203125
    5. 'QUENCE' → logprob: -11.125274658203125
    6. 'ance' → logprob: -11.875274658203125
    7. 'qu' → logprob: -12.125274658203125
    8. '   ' → logprob: -12.750274658203125
    9. 'que' → logprob: -13.625274658203125
    10. '#' → logprob: -13.750274658203125

Token 271: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3313625454902649
    2. ' =' → logprob: -1.5813624858856201
    3. ' à' → logprob: -3.58136248588562
    4. ' +=' → logprob: -4.081362724304199
    5. '1' → logprob: -4.581362724304199
    6. '+=' → logprob: -4.831362724304199
    7. '   ' → logprob: -5.456362724304199
    8. 'à' → logprob: -5.956362724304199
    9. 'count' → logprob: -6.081362724304199
    10. '           ' → logprob: -6.706362724304199

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2322208434343338
    2. ' count' → logprob: -1.8572208881378174
    3. 'count' → logprob: -2.9822208881378174
    4. '            ' → logprob: -8.357220649719238
    5. ',count' → logprob: -10.482220649719238
    6. '       ' → logprob: -10.857220649719238
    7. ',' → logprob: -10.982220649719238
    8. ' and' → logprob: -11.107220649719238
    9. ' =' → logprob: -11.232220649719238
    10. '(count' → logprob: -11.357220649719238

Token 273: ' bef' (ID: 50245)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.08901743590831757
    2. ' count' → logprob: -2.464017391204834
    3. '   ' → logprob: -9.589017868041992
    4. '1' → logprob: -12.714017868041992
    5. '	count' → logprob: -13.214017868041992
    6. '       ' → logprob: -13.589017868041992
    7. ' ' → logprob: -13.714017868041992
    8. '           ' → logprob: -14.464017868041992
    9. 'Count' → logprob: -15.089017868041992
    10. '    ' → logprob: -15.214017868041992

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47447097301483154
    2. '=' → logprob: -0.9744709730148315
    3. ' ==' → logprob: -9.099471092224121
    4. ' ' → logprob: -9.349471092224121
    5. '==' → logprob: -9.599471092224121
    6. ',' → logprob: -9.849471092224121
    7. 'count' → logprob: -10.224471092224121
    8. '   ' → logprob: -11.724471092224121
    9. '=j' → logprob: -12.099471092224121
    10. '=i' → logprob: -12.349471092224121

Token 275: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005561320576816797
    2. ' j' → logprob: -7.500555992126465
    3. 'a' → logprob: -12.750555992126465
    4. '   ' → logprob: -16.00055694580078
    5. ' ' → logprob: -16.37555694580078
    6. '	j' → logprob: -16.75055694580078
    7. ' a' → logprob: -18.50055694580078
    8. '  ' → logprob: -18.87555694580078
    9. 'i' → logprob: -18.87555694580078
    10. '$j' → logprob: -19.00055694580078

Token 276: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5250904560089111
    2. '           ' → logprob: -0.9000904560089111
    3. '       ' → logprob: -6.775090217590332
    4. '
' → logprob: -7.775090217590332
    5. 'count' → logprob: -8.775090217590332
    6. '   ' → logprob: -10.025090217590332
    7. ',' → logprob: -10.275090217590332
    8. ' and' → logprob: -10.650090217590332
    9. 'and' → logprob: -10.775090217590332
    10. ';' → logprob: -10.775090217590332

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021940404549241066
    2. '
' → logprob: -6.752193927764893
    3. '       ' → logprob: -7.627193927764893
    4. ' and' → logprob: -8.37719440460205
    5. '<|end|>' → logprob: -9.00219440460205
    6. ',' → logprob: -9.50219440460205
    7. '   ' → logprob: -11.25219440460205
    8. '            
' → logprob: -11.25219440460205
    9. '1' → logprob: -11.25219440460205
    10. ';' → logprob: -11.37719440460205

Token 278: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.5783639550209045
    2. '1' → logprob: -0.8283639550209045
    3. ' count' → logprob: -6.32836389541626
    4. ' ' → logprob: -7.95336389541626
    5. '           ' → logprob: -8.578364372253418
    6. '   ' → logprob: -10.078364372253418
    7. '0' → logprob: -10.203364372253418
    8. '       ' → logprob: -11.078364372253418
    9. 'counts' → logprob: -14.703364372253418
    10. '
' → logprob: -15.078364372253418

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6626873016357422
    2. '=' → logprob: -0.9126873016357422
    3. ' +=' → logprob: -2.537687301635742
    4. '+=' → logprob: -5.537687301635742
    5. ' ' → logprob: -10.037687301635742
    6. '1' → logprob: -10.037687301635742
    7. '+' → logprob: -11.162687301635742
    8. ' +' → logprob: -13.162687301635742
    9. '0' → logprob: -13.662687301635742
    10. '   ' → logprob: -13.787687301635742

Token 280: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.625024795532227
    3. '0' → logprob: -14.625024795532227
    4. '   ' → logprob: -16.375024795532227
    5. '۱' → logprob: -19.437524795532227
    6. '  ' → logprob: -20.000024795532227
    7. 'count' → logprob: -20.187524795532227
    8. '```' → logprob: -20.187524795532227
    9. '１' → logprob: -20.687524795532227
    10. '`' → logprob: -20.937524795532227

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.75
    3. ' ' → logprob: -16.5
    4. '   ' → logprob: -19.25
    5. '۱' → logprob: -19.75
    6. '１' → logprob: -20.5625
    7. '```' → logprob: -20.75
    8. '१' → logprob: -21.3125
    9. '১' → logprob: -21.375
    10. '`' → logprob: -21.4375

Token 282: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.436450636712834e-05
    2. '   ' → logprob: -9.750094413757324
    3. '           ' → logprob: -10.750094413757324
    4. '
' → logprob: -12.000094413757324
    5. 'continue' → logprob: -12.750094413757324
    6. 'else' → logprob: -14.000094413757324
    7. ' continue' → logprob: -14.000094413757324
    8. '\n' → logprob: -14.000094413757324
    9. '	' → logprob: -14.625094413757324
    10. 'elif' → logprob: -14.750094413757324

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013369438238441944
    2. '   ' → logprob: -9.250133514404297
    3. '           ' → logprob: -10.750133514404297
    4. 'continue' → logprob: -12.125133514404297
    5. ' continue' → logprob: -12.375133514404297
    6. '<|end|>' → logprob: -13.125133514404297
    7. '.' → logprob: -14.375133514404297
    8. 'elif' → logprob: -14.500133514404297
    9. 'else' → logprob: -14.625133514404297
    10. ' else' → logprob: -14.625133514404297

Token 284: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19952350854873657
    2. ' else' → logprob: -2.699523448944092
    3. 'elif' (adapté à ' elif') → logprob: -2.949523448944092
    4. 'else' → logprob: -3.074523448944092
    5. ' elif' → logprob: -4.324523448944092
    6. '   ' → logprob: -6.324523448944092
    7. '	elif' → logprob: -11.69952392578125
    8. '    ' → logprob: -12.19952392578125
    9. 'continue' → logprob: -12.57452392578125
    10. ' continue' → logprob: -12.69952392578125

Token 285: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.28159379959106445
    2. 'j' → logprob: -1.4065937995910645
    3. '   ' → logprob: -8.906593322753906
    4. '    ' → logprob: -9.031593322753906
    5. ' ' → logprob: -9.531593322753906
    6. 'bef' → logprob: -9.781593322753906
    7. '	j' → logprob: -10.406593322753906
    8. ' bef' → logprob: -11.406593322753906
    9. '  ' → logprob: -12.406593322753906
    10. ' ' → logprob: -13.094093322753906

Token 286: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023256778717041016
    2. '==' → logprob: -3.773256778717041
    3. ' ' → logprob: -11.898256301879883
    4. ' !=' → logprob: -12.523256301879883
    5. ' ' → logprob: -14.648256301879883
    6. '!=' → logprob: -15.773256301879883
    7. '=' → logprob: -16.148256301879883
    8. ')' → logprob: -17.148256301879883
    9. ')==' → logprob: -17.523256301879883
    10. '[' → logprob: -17.773256301879883

Token 287: ' bef' (ID: 50245)
  Prédit: 'bef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bef' → logprob: -0.31326761841773987
    2. ' bef' → logprob: -1.3132675886154175
    3. ' ' → logprob: -12.438267707824707
    4. 'bek' → logprob: -14.313267707824707
    5. ' bof' → logprob: -15.313267707824707
    6. 'b' → logprob: -15.688267707824707
    7. ' Bef' → logprob: -15.688267707824707
    8. '  ' → logprob: -15.813267707824707
    9. 'bf' → logprob: -16.06326675415039
    10. 'beg' → logprob: -16.18826675415039

Token 288: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05676747485995293
    2. ':
' → logprob: -2.931767463684082
    3. '       ' → logprob: -6.306767463684082
    4. '           ' → logprob: -10.056767463684082
    5. '   ' → logprob: -11.431767463684082
    6. ':
' → logprob: -13.306767463684082
    7. ' :' → logprob: -13.806767463684082
    8. '):
' → logprob: -14.056767463684082
    9. ':

' → logprob: -14.806767463684082
    10. '):' → logprob: -15.181767463684082

Token 289: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010541079565882683
    2. '           ' → logprob: -5.135540962219238
    3. 'count' → logprob: -5.510540962219238
    4. ' count' → logprob: -8.260540962219238
    5. '
' → logprob: -8.760540962219238
    6. ' ' → logprob: -10.635540962219238
    7. '        
' → logprob: -10.885540962219238
    8. '   ' → logprob: -11.010540962219238
    9. '	count' → logprob: -11.260540962219238
    10. '[count' → logprob: -11.510540962219238

Token 290: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1592196226119995
    2. ' count' → logprob: -2.284219741821289
    3. '           ' → logprob: -3.159219741821289
    4. '       ' → logprob: -7.034219741821289
    5. '
' → logprob: -7.159219741821289
    6. '               ' → logprob: -7.284219741821289
    7. ' 
' → logprob: -8.784219741821289
    8. '            
' → logprob: -9.409219741821289
    9. '   ' → logprob: -9.784219741821289
    10. '	count' → logprob: -10.034219741821289

Token 291: ' Même' (ID: 89628)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16022878885269165
    2. ' count' → logprob: -1.9102287292480469
    3. '	count' → logprob: -13.410228729248047
    4. '           ' → logprob: -13.910228729248047
    5. ' ' → logprob: -14.535228729248047
    6. ' ' → logprob: -14.660228729248047
    7. '   ' → logprob: -14.785228729248047
    8. '_count' → logprob: -15.285228729248047
    9. 'Count' → logprob: -15.410228729248047
    10. '    ' → logprob: -15.660228729248047

Token 292: ' valeur' (ID: 41664)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04321339353919029
    2. ' count' → logprob: -3.668213367462158
    3. '   ' → logprob: -4.168213367462158
    4. '       ' → logprob: -7.418213367462158
    5. ' ' → logprob: -8.543213844299316
    6. '           ' → logprob: -8.918213844299316
    7. '    ' → logprob: -9.043213844299316
    8. '               ' → logprob: -9.918213844299316
    9. '  ' → logprob: -10.793213844299316
    10. '_count' → logprob: -11.043213844299316

Token 293: ' que' (ID: 661)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05070578306913376
    2. '               ' → logprob: -3.175705671310425
    3. 'count' → logprob: -6.050705909729004
    4. ':' → logprob: -6.925705909729004
    5. '                   ' → logprob: -6.925705909729004
    6. '            ' → logprob: -7.050705909729004
    7. '            
' → logprob: -7.175705909729004
    8. '       ' → logprob: -7.675705909729004
    9. '   ' → logprob: -7.925705909729004
    10. '
' → logprob: -8.800705909729004

Token 294: ' la' (ID: 557)
  Prédit: 'bef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bef' → logprob: -0.0617070347070694
    2. ' bef' → logprob: -2.936707019805908
    3. ' ' → logprob: -5.186707019805908
    4. ' ' → logprob: -8.561707496643066
    5. '   ' → logprob: -8.686707496643066
    6. ' the' → logprob: -8.811707496643066
    7. '  ' → logprob: -8.811707496643066
    8. 'b' → logprob: -8.811707496643066
    9. '    ' → logprob: -9.311707496643066
    10. ' bof' → logprob: -9.686707496643066

Token 295: ' précédente' (ID: 177319)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.8113753199577332
    2. ' précédente' → logprob: -1.311375379562378
    3. ' précédent' → logprob: -2.436375379562378
    4. 'bef' → logprob: -2.436375379562378
    5. 'preced' → logprob: -2.811375379562378
    6. 'previous' → logprob: -4.186375141143799
    7. ' previous' → logprob: -4.436375141143799
    8. ' bef' → logprob: -4.936375141143799
    9. '   ' → logprob: -5.311375141143799
    10. ' ' → logprob: -5.686375141143799

Token 296: ' :' (ID: 712)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12846148014068604
    2. ':' → logprob: -3.0034613609313965
    3. '               ' → logprob: -3.1284613609313965
    4. ':
' → logprob: -4.3784613609313965
    5. '       ' → logprob: -5.5034613609313965
    6. ',' → logprob: -5.7534613609313965
    7. '                   ' → logprob: -6.2534613609313965
    8. '
' → logprob: -6.7534613609313965
    9. '            
' → logprob: -7.1284613609313965
    10. '   ' → logprob: -7.2534613609313965

Token 297: ' continuer' (ID: 75597)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.20148009061813354
    2. ' count' → logprob: -1.7014801502227783
    3. '           ' → logprob: -10.0764799118042
    4. '               ' → logprob: -11.8264799118042
    5. '            ' → logprob: -12.2014799118042
    6. '   ' → logprob: -12.7014799118042
    7. '	count' → logprob: -12.7014799118042
    8. '    ' → logprob: -12.9514799118042
    9. ' ' → logprob: -13.0764799118042
    10. ' ' → logprob: -14.2014799118042

Token 298: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.43110114336013794
    2. '           ' → logprob: -1.0561010837554932
    3. ' count' → logprob: -6.556101322174072
    4. ' à' → logprob: -7.931101322174072
    5. 'à' → logprob: -8.556100845336914
    6. '               ' → logprob: -9.056100845336914
    7. '       ' → logprob: -9.306100845336914
    8. '	count' → logprob: -9.681100845336914
    9. '   ' → logprob: -10.181100845336914
    10. '_count' → logprob: -10.806100845336914

Token 299: ' sé' (ID: 7462)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.027922164648771286
    2. '   ' → logprob: -3.7779221534729004
    3. ' count' → logprob: -5.9029221534729
    4. 'sequence' → logprob: -6.9029221534729
    5. ' ' → logprob: -7.7779221534729
    6. ' sequence' → logprob: -8.777922630310059
    7. '       ' → logprob: -9.277922630310059
    8. 'comp' → logprob: -9.277922630310059
    9. '    ' → logprob: -10.027922630310059
    10. '  ' → logprob: -10.902922630310059

Token 300: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -4.584861744660884e-05
    2. 'q' → logprob: -10.875045776367188
    3. 'qu' → logprob: -11.125045776367188
    4. 'que' → logprob: -12.500045776367188
    5. 'ance' → logprob: -12.875045776367188
    6. 'quences' → logprob: -13.250045776367188
    7. 'QUENCE' → logprob: -13.250045776367188
    8. '   ' → logprob: -14.250045776367188
    9. 'rie' → logprob: -14.625045776367188
    10. '#' → logprob: -15.125045776367188

Token 301: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029128119349479675
    2. 'count' → logprob: -6.002912998199463
    3. '       ' → logprob: -8.502912521362305
    4. '               ' → logprob: -9.502912521362305
    5. ',' → logprob: -10.002912521362305
    6. '            
' → logprob: -10.127912521362305
    7. ' count' → logprob: -10.877912521362305
    8. '		' → logprob: -11.752912521362305
    9. '   ' → logprob: -12.127912521362305
    10. '<|end|>' → logprob: -12.252912521362305

Token 302: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04986824840307236
    2. 'count' → logprob: -3.17486834526062
    3. '       ' → logprob: -5.924868106842041
    4. ' count' → logprob: -6.174868106842041
    5. '            
' → logprob: -6.799868106842041
    6. '               ' → logprob: -7.799868106842041
    7. '            ' → logprob: -8.9248685836792
    8. '   ' → logprob: -9.0498685836792
    9. '                   ' → logprob: -9.9248685836792
    10. '
' → logprob: -10.2998685836792

Token 303: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.31430408358573914
    2. ' count' → logprob: -1.3143041133880615
    3. '           ' → logprob: -7.064303874969482
    4. '   ' → logprob: -10.06430435180664
    5. '            ' → logprob: -10.06430435180664
    6. '	count' → logprob: -10.31430435180664
    7. '               ' → logprob: -10.68930435180664
    8. '    ' → logprob: -11.06430435180664
    9. ' ' → logprob: -11.56430435180664
    10. ' ' → logprob: -11.93930435180664

Token 304: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12693682312965393
    2. '+=' → logprob: -2.126936912536621
    3. '+' → logprob: -12.126936912536621
    4. '   ' → logprob: -13.751936912536621
    5. ']+=' → logprob: -14.126936912536621
    6. '=' → logprob: -14.251936912536621
    7. '    ' → logprob: -15.376936912536621
    8. '<|end|>' → logprob: -16.251935958862305
    9. ' +' → logprob: -16.626935958862305
    10. '+="' → logprob: -16.751935958862305

Token 305: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -21.25037956237793
    4. '```' → logprob: -21.50037956237793
    5. '<|end|>' → logprob: -22.12537956237793
    6. '0' → logprob: -22.25037956237793
    7. '2' → logprob: -22.37537956237793
    8. ' ' → logprob: -22.62537956237793
    9. '۱' → logprob: -22.87537956237793
    10. '１' → logprob: -22.87537956237793

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -21.375
    4. '۱' → logprob: -22.375
    5. '１' → logprob: -23.25
    6. '<|end|>' → logprob: -23.375
    7. '१' → logprob: -23.75
    8. '   ' → logprob: -24.0
    9. '১' → logprob: -24.125
    10. '2' → logprob: -24.25

Token 307: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013166792632546276
    2. 'else' → logprob: -9.750131607055664
    3. ' else' → logprob: -10.000131607055664
    4. '<|end|>' → logprob: -11.500131607055664
    5. '
' → logprob: -12.000131607055664
    6. '   ' → logprob: -12.125131607055664
    7. 'elif' → logprob: -13.375131607055664
    8. ',' → logprob: -13.875131607055664
    9. ')' → logprob: -14.000131607055664
    10. '\n' → logprob: -14.500131607055664

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006428572814911604
    2. ' else' → logprob: -7.750642776489258
    3. 'else' → logprob: -8.500642776489258
    4. '<|end|>' → logprob: -12.875642776489258
    5. 'elif' → logprob: -13.125642776489258
    6. ' elif' → logprob: -13.625642776489258
    7. '   ' → logprob: -14.000642776489258
    8. '           ' → logprob: -14.375642776489258
    9. ')' → logprob: -15.125642776489258
    10. ',' → logprob: -15.500642776489258

Token 309: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.33069050312042236
    2. ' else' → logprob: -1.5806905031204224
    3. '       ' → logprob: -2.580690383911133
    4. 'elif' → logprob: -11.955690383911133
    5. '	else' → logprob: -12.080690383911133
    6. '   ' → logprob: -12.455690383911133
    7. ' elif' → logprob: -13.455690383911133
    8. '_else' → logprob: -15.080690383911133
    9. '```' → logprob: -16.705690383911133
    10. ' ' → logprob: -17.580690383911133

Token 310: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43824636936187744
    2. ':
' → logprob: -1.0632463693618774
    3. '           ' → logprob: -4.938246250152588
    4. '       ' → logprob: -6.188246250152588
    5. ' :
' → logprob: -8.813246726989746
    6. ' :' → logprob: -9.563246726989746
    7. '   ' → logprob: -10.438246726989746
    8. '):
' → logprob: -11.313246726989746
    9. ':

' → logprob: -12.438246726989746
    10. ':
' → logprob: -12.938246726989746

Token 311: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39427173137664795
    2. '           ' → logprob: -1.269271731376648
    3. 'dif' → logprob: -3.7692718505859375
    4. ' dif' → logprob: -4.5192718505859375
    5. '#' → logprob: -5.2692718505859375
    6. '   ' → logprob: -5.3942718505859375
    7. ' #' → logprob: -7.5192718505859375
    8. 'd' → logprob: -8.519271850585938
    9. 'diff' → logprob: -8.519271850585938
    10. '        ' → logprob: -10.394271850585938

Token 312: ' #' (ID: 1069)
  Prédit: ' dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dif' → logprob: -0.6600285768508911
    2. '       ' → logprob: -1.2850285768508911
    3. 'dif' → logprob: -1.9100285768508911
    4. '           ' → logprob: -2.9100284576416016
    5. 'd' → logprob: -6.285028457641602
    6. 'diff' → logprob: -6.785028457641602
    7. '   ' → logprob: -7.535028457641602
    8. '	d' → logprob: -9.035028457641602
    9. '#' (adapté à ' #') → logprob: -9.910028457641602
    10. '    ' → logprob: -9.910028457641602

Token 313: ' Vale' (ID: 55242)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.3734784722328186
    2. ' dif' → logprob: -1.2484784126281738
    3. '#' → logprob: -4.498478412628174
    4. '   ' → logprob: -4.748478412628174
    5. 'diff' → logprob: -5.748478412628174
    6. 'd' → logprob: -7.123478412628174
    7. ' #' → logprob: -7.873478412628174
    8. '           ' → logprob: -8.498478889465332
    9. 'Dif' → logprob: -9.248478889465332
    10. '       ' → logprob: -9.373478889465332

Token 314: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0013144051190465689
    2. 'r' → logprob: -7.626314640045166
    3. '   ' → logprob: -8.126314163208008
    4. 'u' → logprob: -8.251314163208008
    5. '       ' → logprob: -8.876314163208008
    6. 'urs' → logprob: -10.501314163208008
    7. '    ' → logprob: -11.126314163208008
    8. 'f' → logprob: -11.126314163208008
    9. '#' → logprob: -11.376314163208008
    10. '           ' → logprob: -11.626314163208008

Token 315: ' différente' (ID: 140707)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18465279042720795
    2. '_pairs' → logprob: -2.934652805328369
    3. ' =' → logprob: -4.059652805328369
    4. ':' → logprob: -4.059652805328369
    5. '   ' → logprob: -4.059652805328369
    6. '       ' → logprob: -4.559652805328369
    7. 'pairs' → logprob: -4.934652805328369
    8. ' de' → logprob: -5.559652805328369
    9. '=' → logprob: -5.559652805328369
    10. 'diff' → logprob: -5.684652805328369

Token 316: ' :' (ID: 712)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01781964860856533
    2. ':' → logprob: -4.142819881439209
    3. '       ' → logprob: -6.892819881439209
    4. '
' → logprob: -8.51781940460205
    5. ',' → logprob: -8.51781940460205
    6. ':
' → logprob: -8.76781940460205
    7. '               ' → logprob: -9.64281940460205
    8. ' :' → logprob: -9.76781940460205
    9. '   ' → logprob: -10.01781940460205
    10. '          ' → logprob: -11.76781940460205

Token 317: ' sauveg' (ID: 133494)
  Prédit: ' dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dif' → logprob: -0.07344257086515427
    2. 'dif' → logprob: -2.6984424591064453
    3. '           ' → logprob: -6.448442459106445
    4. '   ' → logprob: -6.823442459106445
    5. 'diff' → logprob: -8.198442459106445
    6. '       ' → logprob: -8.698442459106445
    7. 'd' → logprob: -8.823442459106445
    8. '    ' → logprob: -9.073442459106445
    9. ' append' → logprob: -10.198442459106445
    10. '	d' → logprob: -10.573442459106445

Token 318: 'arder' (ID: 59603)
  Prédit: 'arder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arder' → logprob: -0.0002875569916795939
    2. 'ard' → logprob: -9.125288009643555
    3. 'er' → logprob: -9.375288009643555
    4. 'a' → logprob: -10.625288009643555
    5. '#' → logprob: -11.375288009643555
    6. 'arde' → logprob: -11.500288009643555
    7. '   ' → logprob: -11.500288009643555
    8. 'ar' → logprob: -12.000288009643555
    9. 'ader' → logprob: -12.375288009643555
    10. '       ' → logprob: -13.000288009643555

Token 319: ' la' (ID: 557)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.8650786280632019
    2. 'count' → logprob: -1.2400786876678467
    3. ' dif' → logprob: -1.8650786876678467
    4. '   ' → logprob: -2.7400786876678467
    5. ' count' → logprob: -2.9900786876678467
    6. 'diff' → logprob: -4.240078449249268
    7. ' le' → logprob: -6.365078449249268
    8. '           ' → logprob: -6.490078449249268
    9. ' la' → logprob: -7.365078449249268
    10. ' the' → logprob: -8.365078926086426

Token 320: ' taille' (ID: 41644)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.12993252277374268
    2. 'dif' → logprob: -3.004932403564453
    3. ' count' → logprob: -3.379932403564453
    4. 'diff' → logprob: -4.254932403564453
    5. '   ' → logprob: -4.504932403564453
    6. ' dif' → logprob: -4.754932403564453
    7. ' longueur' → logprob: -6.754932403564453
    8. 'long' → logprob: -7.004932403564453
    9. ' ' → logprob: -7.879932403564453
    10. 'd' → logprob: -8.004932403564453

Token 321: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.5589041709899902
    2. ' de' → logprob: -1.0589041709899902
    3. '   ' → logprob: -2.8089041709899902
    4. '    ' → logprob: -5.05890417098999
    5. ' count' → logprob: -5.43390417098999
    6. '           ' → logprob: -5.55890417098999
    7. ' ' → logprob: -6.30890417098999
    8. 'count' → logprob: -6.43390417098999
    9. 'du' → logprob: -6.55890417098999
    10. 'de' → logprob: -7.80890417098999

Token 322: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5267471671104431
    2. ' la' → logprob: -1.276747226715088
    3. 'la' → logprob: -2.651747226715088
    4. ' count' → logprob: -3.026747226715088
    5. 'diff' → logprob: -4.651747226715088
    6. 'dif' → logprob: -7.526747226715088
    7. 'l' → logprob: -7.651747226715088
    8. '   ' → logprob: -7.651747226715088
    9. ' dif' → logprob: -8.02674674987793
    10. ' ' → logprob: -9.90174674987793

Token 323: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.08605136722326279
    2. ' sé' → logprob: -2.7110514640808105
    3. 'sequence' → logprob: -4.7110514640808105
    4. 's' → logprob: -5.5860514640808105
    5. 'diff' → logprob: -7.0860514640808105
    6. 'count' → logprob: -7.0860514640808105
    7. ' sequence' → logprob: -7.2110514640808105
    8. 'seq' → logprob: -8.211050987243652
    9. 'sub' → logprob: -8.586050987243652
    10. ' ' → logprob: -9.461050987243652

Token 324: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -7.302704761968926e-05
    2. 'q' → logprob: -9.625073432922363
    3. 'QUENCE' → logprob: -12.500073432922363
    4. 'qu' → logprob: -14.125073432922363
    5. '#' → logprob: -14.625073432922363
    6. 'que' → logprob: -14.875073432922363
    7. '-' → logprob: -15.250073432922363
    8. 'quences' → logprob: -15.250073432922363
    9. '
' → logprob: -15.750073432922363
    10. '_' → logprob: -16.000072479248047

Token 325: ' précédente' (ID: 177319)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06252987682819366
    2. ' dif' → logprob: -3.1875298023223877
    3. 'dif' → logprob: -4.187530040740967
    4. '               ' → logprob: -6.312530040740967
    5. 'diff' → logprob: -6.562530040740967
    6. '   ' → logprob: -8.187529563903809
    7. ',' → logprob: -8.312529563903809
    8. ' ,' → logprob: -9.312529563903809
    9. '            ' → logprob: -9.812529563903809
    10. 'd' → logprob: -10.062529563903809

Token 326: ',
' (ID: 412)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005026352009736001
    2. ' dif' → logprob: -8.375502586364746
    3. ',' → logprob: -9.125502586364746
    4. '       ' → logprob: -9.625502586364746
    5. 'dif' → logprob: -10.250502586364746
    6. '
' → logprob: -10.500502586364746
    7. '   ' → logprob: -11.500502586364746
    8. '               ' → logprob: -12.000502586364746
    9. 'diff' → logprob: -12.250502586364746
    10. '          ' → logprob: -12.625502586364746

Token 327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021736434428021312
    2. ' dif' → logprob: -9.12521743774414
    3. '       ' → logprob: -9.62521743774414
    4. '   ' → logprob: -11.37521743774414
    5. 'diff' → logprob: -11.50021743774414
    6. '               ' → logprob: -11.75021743774414
    7. '          ' → logprob: -12.50021743774414
    8. '		' → logprob: -13.50021743774414
    9. '            ' → logprob: -13.50021743774414
    10. 'dif' → logprob: -14.00021743774414

Token 328: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3094918429851532
    2. 'dif' → logprob: -1.9344918727874756
    3. ' dif' → logprob: -2.1844918727874756
    4. '       ' → logprob: -5.4344916343688965
    5. 'diff' → logprob: -5.9344916343688965
    6. '   ' → logprob: -7.0594916343688965
    7. '            ' → logprob: -7.6844916343688965
    8. '          ' → logprob: -8.559492111206055
    9. '               ' → logprob: -8.684492111206055
    10. '    ' → logprob: -9.184492111206055

Token 329: ' ré' (ID: 3146)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.580210268497467
    2. '           ' → logprob: -1.3302102088928223
    3. ' dif' → logprob: -1.8302102088928223
    4. 'diff' → logprob: -4.830210208892822
    5. '       ' → logprob: -5.705210208892822
    6. '   ' → logprob: -6.080210208892822
    7. '               ' → logprob: -7.455210208892822
    8. '            ' → logprob: -7.955210208892822
    9. 'bef' → logprob: -8.58021068572998
    10. '          ' → logprob: -8.95521068572998

Token 330: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.0015165306394919753
    2. 'init' → logprob: -6.626516342163086
    3. 'set' → logprob: -9.126516342163086
    4. '   ' → logprob: -10.376516342163086
    5. 'initialize' → logprob: -11.626516342163086
    6. '       ' → logprob: -11.751516342163086
    7. 'initializer' → logprob: -12.001516342163086
    8. 'ini' → logprob: -12.126516342163086
    9. 'INITIAL' → logprob: -12.376516342163086
    10. 'int' → logprob: -12.876516342163086

Token 331: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.02987186424434185
    2. 'iser' → logprob: -3.529871940612793
    3. '   ' → logprob: -10.029871940612793
    4. 'e' → logprob: -11.404871940612793
    5. 'ier' → logprob: -11.529871940612793
    6. '       ' → logprob: -11.529871940612793
    7. 'is' → logprob: -11.654871940612793
    8. '```' → logprob: -11.904871940612793
    9. '           ' → logprob: -12.029871940612793
    10. '#' → logprob: -12.154871940612793

Token 332: ' le' (ID: 505)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.14607717096805573
    2. ' count' → logprob: -2.0210771560668945
    3. 'bef' → logprob: -6.1460771560668945
    4. '   ' → logprob: -7.0210771560668945
    5. ' bef' → logprob: -9.021077156066895
    6. '           ' → logprob: -9.271077156066895
    7. '               ' → logprob: -10.146077156066895
    8. ' le' → logprob: -10.771077156066895
    9. ' ' → logprob: -11.021077156066895
    10. '    ' → logprob: -11.646077156066895

Token 333: ' compteur' (ID: 163344)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.014902148395776749
    2. 'comp' → logprob: -4.764902114868164
    3. 'bef' → logprob: -5.264902114868164
    4. ' count' → logprob: -7.514902114868164
    5. 'counter' → logprob: -7.889902114868164
    6. ' compteur' → logprob: -9.514902114868164
    7. 'com' → logprob: -10.639902114868164
    8. '   ' → logprob: -10.889902114868164
    9. 'cnt' → logprob: -11.764902114868164
    10. 'counts' → logprob: -12.139902114868164

Token 334: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002277530962601304
    2. ',' → logprob: -7.002277374267578
    3. ' =' → logprob: -7.377277374267578
    4. 'count' → logprob: -7.752277374267578
    5. '=' → logprob: -9.127277374267578
    6. ' à' → logprob: -9.877277374267578
    7. ' et' → logprob: -10.252277374267578
    8. ' count' → logprob: -10.627277374267578
    9. ' and' → logprob: -10.877277374267578
    10. '       ' → logprob: -11.377277374267578

Token 335: ' mettre' (ID: 25339)
  Prédit: 'bef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bef' → logprob: -0.043690603226423264
    2. '           ' → logprob: -3.2936906814575195
    3. '   ' → logprob: -6.0436906814575195
    4. ' bef' → logprob: -6.4186906814575195
    5. '       ' → logprob: -7.4186906814575195
    6. '#' → logprob: -8.29369068145752
    7. '               ' → logprob: -8.91869068145752
    8. ' ' → logprob: -9.41869068145752
    9. '          ' → logprob: -9.79369068145752
    10. '            ' → logprob: -9.79369068145752

Token 336: ' à' (ID: 1221)
  Prédit: 'bef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bef' → logprob: -0.009403877891600132
    2. 'à' → logprob: -5.384403705596924
    3. '   ' → logprob: -5.884403705596924
    4. '```' → logprob: -7.009403705596924
    5. ' à' → logprob: -8.509404182434082
    6. '`' → logprob: -8.509404182434082
    7. '  ' → logprob: -9.009404182434082
    8. '    ' → logprob: -9.134404182434082
    9. ' ' → logprob: -9.384404182434082
    10. '_b' → logprob: -9.384404182434082

Token 337: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.04559292271733284
    2. 'j' → logprob: -3.420593023300171
    3. 'bef' → logprob: -4.545592784881592
    4. ' jour' → logprob: -7.045592784881592
    5. '```' → logprob: -9.04559326171875
    6. 'jou' → logprob: -9.17059326171875
    7. 'jours' → logprob: -9.42059326171875
    8. 'b' → logprob: -10.67059326171875
    9. 'jf' → logprob: -11.42059326171875
    10. 'day' → logprob: -12.17059326171875

Token 338: ' '' (ID: 461)
  Prédit: ' bef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bef' → logprob: -0.12696968019008636
    2. 'bef' → logprob: -2.126969575881958
    3. ' bof' → logprob: -11.751969337463379
    4. ' Bef' → logprob: -12.001969337463379
    5. '   ' → logprob: -12.126969337463379
    6. ' baf' → logprob: -12.251969337463379
    7. ' be' → logprob: -12.626969337463379
    8. '```' → logprob: -12.876969337463379
    9. ' ' → logprob: -13.501969337463379
    10. '    ' → logprob: -13.876969337463379

Token 339: 'bef' (ID: 47030)
  Prédit: 'bef'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bef' → logprob: -0.03809806704521179
    2. ' bef' → logprob: -3.288098096847534
    3. 'beb' → logprob: -11.538098335266113
    4. 'bek' → logprob: -11.788098335266113
    5. 'bec' → logprob: -12.288098335266113
    6. 'b' → logprob: -12.413098335266113
    7. 'be' → logprob: -12.413098335266113
    8. '```' → logprob: -12.538098335266113
    9. ' be' → logprob: -12.663098335266113
    10. ' Bef' → logprob: -12.913098335266113

Token 340: ''
' (ID: 2207)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14314274489879608
    2. '           ' → logprob: -2.2681427001953125
    3. '=' → logprob: -3.5181427001953125
    4. '   ' → logprob: -9.393142700195312
    5. '       ' → logprob: -10.143142700195312
    6. '=j' → logprob: -10.518142700195312
    7. '               ' → logprob: -10.768142700195312
    8. ',' → logprob: -11.393142700195312
    9. '          ' → logprob: -12.018142700195312
    10. '            ' → logprob: -12.018142700195312

Token 341: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04784148558974266
    2. '       ' → logprob: -3.1728415489196777
    3. ' dif' → logprob: -6.047841548919678
    4. 'dif' → logprob: -6.297841548919678
    5. '   ' → logprob: -7.547841548919678
    6. 'diff' → logprob: -10.29784107208252
    7. '
' → logprob: -11.29784107208252
    8. '               ' → logprob: -11.54784107208252
    9. '    
' → logprob: -11.79784107208252
    10. 'd' → logprob: -11.92284107208252

Token 342: ' dif' (ID: 1501)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' (adapté à ' dif') → logprob: -0.2286667376756668
    2. ' dif' → logprob: -1.7286667823791504
    3. '   ' → logprob: -3.8536667823791504
    4. 'diff' → logprob: -6.10366678237915
    5. '       ' → logprob: -6.47866678237915
    6. '           ' → logprob: -6.97866678237915
    7. 'd' → logprob: -7.35366678237915
    8. '	d' → logprob: -8.228666305541992
    9. '  ' → logprob: -10.728666305541992
    10. '    ' → logprob: -11.103666305541992

Token 343: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006716317031532526
    2. '.' → logprob: -5.006716251373291
    3. ' .' → logprob: -14.50671672821045
    4. '.app' → logprob: -15.50671672821045
    5. '.ap' → logprob: -15.88171672821045
    6. '.extend' → logprob: -17.131715774536133
    7. '.push' → logprob: -19.881715774536133
    8. '   ' → logprob: -20.006715774536133
    9. '.Append' → logprob: -20.631715774536133
    10. 'append' → logprob: -20.631715774536133

Token 344: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -2.7729658540920354e-05
    2. 'count' → logprob: -10.500027656555176
    3. '(' → logprob: -16.750028610229492
    4. ' count' → logprob: -18.500028610229492
    5. '[count' → logprob: -18.875028610229492
    6. ',count' → logprob: -19.750028610229492
    7. '=count' → logprob: -20.125028610229492
    8. '(cnt' → logprob: -20.500028610229492
    9. '(c' → logprob: -21.125028610229492
    10. ' (' → logprob: -21.125028610229492

Token 345: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25216367840766907
    2. ')' → logprob: -1.5021636486053467
    3. '           ' → logprob: -8.502163887023926
    4. ' )
' → logprob: -11.752163887023926
    5. ')
' → logprob: -11.752163887023926
    6. '               ' → logprob: -12.252163887023926
    7. ')

' → logprob: -12.502163887023926
    8. '
' → logprob: -13.377163887023926
    9. '       ' → logprob: -13.752163887023926
    10. ' )' → logprob: -13.877163887023926

Token 346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015647877007722855
    2. 'count' → logprob: -4.765647888183594
    3. '
' → logprob: -5.015647888183594
    4. '       ' → logprob: -9.140647888183594
    5. '            
' → logprob: -9.765647888183594
    6. '    
' → logprob: -9.890647888183594
    7. ' count' → logprob: -10.015647888183594
    8. '\n' → logprob: -10.765647888183594
    9. 'bef' → logprob: -10.890647888183594
    10. ' 
' → logprob: -11.265647888183594

Token 347: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.2938633859157562
    2. 'bef' → logprob: -1.4188634157180786
    3. '           ' → logprob: -5.043863296508789
    4. ' count' → logprob: -5.793863296508789
    5. '   ' → logprob: -6.918863296508789
    6. '               ' → logprob: -7.293863296508789
    7. ' bef' → logprob: -7.293863296508789
    8. '       ' → logprob: -8.168863296508789
    9. '```' → logprob: -9.731363296508789
    10. 'bec' → logprob: -9.856363296508789

Token 348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407710552215576
    2. ' =' → logprob: -0.9740771055221558
    3. '＝' → logprob: -17.099077224731445
    4. '<|end|>' → logprob: -17.724077224731445
    5. 's' → logprob: -18.224077224731445
    6. ' ' → logprob: -18.474077224731445
    7. '1' → logprob: -18.724077224731445
    8. ')' → logprob: -19.599077224731445
    9. '.=' → logprob: -19.974077224731445
    10. ' =)' → logprob: -20.099077224731445

Token 349: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -21.0
    4. '  ' → logprob: -24.5
    5. '۱' → logprob: -25.125
    6. '0' → logprob: -25.375
    7. '１' → logprob: -26.0
    8. '```' → logprob: -26.25
    9. '=' → logprob: -26.625
    10. '2' → logprob: -26.625

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '۱' → logprob: -24.5
    4. '   ' → logprob: -24.875
    5. '１' → logprob: -25.25
    6. '१' → logprob: -26.125
    7. '```' → logprob: -26.125
    8. '১' → logprob: -26.625
    9. '0' → logprob: -26.875
    10. '  ' → logprob: -27.625

Token 351: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009816419333219528
    2. 'bef' → logprob: -4.634816646575928
    3. '       ' → logprob: -10.50981616973877
    4. '   ' → logprob: -10.88481616973877
    5. ' bef' → logprob: -11.88481616973877
    6. '
' → logprob: -13.13481616973877
    7. '               ' → logprob: -13.13481616973877
    8. '          ' → logprob: -14.00981616973877
    9. '```' → logprob: -14.25981616973877
    10. 'bec' → logprob: -15.00981616973877

Token 352: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06505995988845825
    2. 'bef' → logprob: -2.8150599002838135
    3. '       ' → logprob: -6.190060138702393
    4. '   ' → logprob: -7.440060138702393
    5. ' bef' → logprob: -7.815060138702393
    6. '               ' → logprob: -10.940059661865234
    7. '
' → logprob: -11.315059661865234
    8. '```' → logprob: -12.065059661865234
    9. '          ' → logprob: -12.690059661865234
    10. ' ' → logprob: -13.690059661865234

Token 353: ' bef' (ID: 50245)
  Prédit: 'bef'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bef' (adapté à ' bef') → logprob: -8.77627644513268e-06
    2. ' bef' → logprob: -11.750008583068848
    3. '           ' → logprob: -14.250008583068848
    4. 'bek' → logprob: -16.875009536743164
    5. 'beb' → logprob: -16.875009536743164
    6. 'bec' → logprob: -17.500009536743164
    7. '   ' → logprob: -18.250009536743164
    8. '       ' → logprob: -18.500009536743164
    9. 'beg' → logprob: -19.125009536743164
    10. '               ' → logprob: -19.750009536743164

Token 354: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018184710294008255
    2. ' =' → logprob: -4.018184661865234
    3. '=j' → logprob: -10.268184661865234
    4. '＝' → logprob: -18.143184661865234
    5. '=
' → logprob: -19.893184661865234
    6. '=i' → logprob: -19.893184661865234
    7. '=k' → logprob: -20.018184661865234
    8. ')' → logprob: -20.018184661865234
    9. '==' → logprob: -20.268184661865234
    10. '<|end|>' → logprob: -20.518184661865234

Token 355: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0019286326132714748
    2. ' j' → logprob: -6.251928806304932
    3. '	j' → logprob: -17.876928329467773
    4. '$j' → logprob: -19.751928329467773
    5. '_j' → logprob: -21.501928329467773
    6. '[j' → logprob: -22.626928329467773
    7. ' ' → logprob: -23.001928329467773
    8. '   ' → logprob: -23.376928329467773
    9. ' ' → logprob: -25.001928329467773
    10. ',j' → logprob: -25.251928329467773

Token 356: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007241340819746256
    2. '    
' → logprob: -5.382241249084473
    3. '
' → logprob: -6.382241249084473
    4. 'if' → logprob: -7.632241249084473
    5. ' if' → logprob: -8.382241249084473
    6. '#' → logprob: -9.007241249084473
    7. '  
' → logprob: -11.257241249084473
    8. ')' → logprob: -11.507241249084473
    9. 'else' → logprob: -11.507241249084473
    10. '   
' → logprob: -11.507241249084473

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023805228993296623
    2. '#' → logprob: -6.12738037109375
    3. 'if' → logprob: -8.87738037109375
    4. 'dif' → logprob: -10.87738037109375
    5. 'diff' → logprob: -11.25238037109375
    6. '    
' → logprob: -11.37738037109375
    7. '```' → logprob: -12.75238037109375
    8. ' dif' → logprob: -13.00238037109375
    9. '
' → logprob: -13.12738037109375
    10. ' if' → logprob: -13.75238037109375

Token 358: ' #' (ID: 1069)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.35488051176071167
    2. '#' (adapté à ' #') → logprob: -1.3548805713653564
    3. '   ' → logprob: -3.3548805713653564
    4. ' dif' → logprob: -5.354880332946777
    5. 'diff' → logprob: -6.854880332946777
    6. '    
' → logprob: -10.604880332946777
    7. ' #' → logprob: -10.979880332946777
    8. 'd' → logprob: -11.729880332946777
    9. 'if' → logprob: -11.854880332946777
    10. '
' → logprob: -11.854880332946777

Token 359: ' Ajouter' (ID: 165754)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.08101540058851242
    2. '#' → logprob: -2.5810153484344482
    3. 'diff' → logprob: -6.831015586853027
    4. 'if' → logprob: -7.081015586853027
    5. ' dif' → logprob: -9.206015586853027
    6. '   ' → logprob: -9.456015586853027
    7. ' #' → logprob: -11.831015586853027
    8. 'Dif' → logprob: -12.331015586853027
    9. '  ' → logprob: -13.331015586853027
    10. ' ' → logprob: -13.456015586853027

Token 360: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00352701754309237
    2. ' count' → logprob: -5.7535271644592285
    3. 'le' → logprob: -8.62852668762207
    4. ' le' → logprob: -8.87852668762207
    5. 'la' → logprob: -10.75352668762207
    6. '(count' → logprob: -12.25352668762207
    7. ' la' → logprob: -12.50352668762207
    8. '[count' → logprob: -14.12852668762207
    9. 'the' → logprob: -16.12852668762207
    10. ' the' → logprob: -16.25352668762207

Token 361: ' dernière' (ID: 39497)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.36091941595077515
    2. 'der' → logprob: -1.86091947555542
    3. 'dern' → logprob: -2.48591947555542
    4. ' dernière' → logprob: -2.86091947555542
    5. ' derni' → logprob: -5.86091947555542
    6. 'last' → logprob: -5.86091947555542
    7. 'Dern' → logprob: -7.86091947555542
    8. ' dernier' → logprob: -8.610918998718262
    9. 'diff' → logprob: -8.985918998718262
    10. ' der' → logprob: -8.985918998718262

Token 362: ' sé' (ID: 7462)
  Prédit: ' sé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.03907918930053711
    2. 'sé' → logprob: -3.539079189300537
    3. 'sequence' → logprob: -5.664079189300537
    4. 'count' → logprob: -5.789079189300537
    5. ' sequence' → logprob: -6.789079189300537
    6. 'diff' → logprob: -7.414079189300537
    7. 'seq' → logprob: -7.789079189300537
    8. 's' → logprob: -8.039079666137695
    9. ' count' → logprob: -9.664079666137695
    10. 'sequ' → logprob: -9.914079666137695

Token 363: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -4.692145012086257e-05
    2. 'q' → logprob: -10.000046730041504
    3. 'qu' → logprob: -14.375046730041504
    4. 'QUENCE' → logprob: -14.875046730041504
    5. 'quences' → logprob: -15.000046730041504
    6. 'que' → logprob: -15.500046730041504
    7. 'ance' → logprob: -18.25004768371582
    8. '#' → logprob: -18.62504768371582
    9. '
' → logprob: -19.25004768371582
    10. 'Q' → logprob: -19.37504768371582

Token 364: ' (' (ID: 350)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.42657896876335144
    2. '   ' → logprob: -1.3015789985656738
    3. ' dif' → logprob: -2.801578998565674
    4. 'diff' → logprob: -4.301578998565674
    5. 'count' → logprob: -7.426578998565674
    6. 'd' → logprob: -8.426578521728516
    7. '```' → logprob: -10.301578521728516
    8. '
' → logprob: -11.051578521728516
    9. '    
' → logprob: -11.801578521728516
    10. ' count' → logprob: -12.051578521728516

Token 365: 'en' (ID: 262)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0002036595979006961
    2. ' count' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.750204086303711
    4. 'diff' → logprob: -16.50020408630371
    5. 'counts' → logprob: -17.87520408630371
    6. '(count' → logprob: -18.62520408630371
    7. 'dif' → logprob: -18.87520408630371
    8. '[count' → logprob: -19.25020408630371
    9. '	count' → logprob: -19.62520408630371
    10. 'cou' → logprob: -19.87520408630371

Token 366: ' dehors' (ID: 95167)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.017710736021399498
    2. ' fin' → logprob: -5.0177106857299805
    3. 'diff' → logprob: -5.5177106857299805
    4. 'cours' → logprob: -5.8927106857299805
    5. 'dif' → logprob: -6.3927106857299805
    6. 'count' → logprob: -6.5177106857299805
    7. ' cours' → logprob: -8.39271068572998
    8. 'suite' → logprob: -8.76771068572998
    9. ' dif' → logprob: -9.26771068572998
    10. 'tail' → logprob: -9.51771068572998

Token 367: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0019841194152832
    2. ' du' → logprob: -1.7519841194152832
    3. 'du' → logprob: -1.7519841194152832
    4. 'de' → logprob: -1.8769841194152832
    5. ' de' → logprob: -2.126984119415283
    6. ')' → logprob: -6.001984119415283
    7. 'of' → logprob: -6.126984119415283
    8. 'for' → logprob: -6.126984119415283
    9. '#' → logprob: -6.251984119415283
    10. ' ' → logprob: -6.751984119415283

Token 368: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.038350485265254974
    2. 'the' → logprob: -4.288350582122803
    3. 'for' → logprob: -4.288350582122803
    4. ' la' → logprob: -4.788350582122803
    5. ')' → logprob: -7.288350582122803
    6. 'loop' → logprob: -7.788350582122803
    7. ' the' → logprob: -8.163350105285645
    8. 'bou' → logprob: -9.038350105285645
    9. ' boucle' → logprob: -9.663350105285645
    10. 'le' → logprob: -9.913350105285645

Token 369: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.1126166433095932
    2. 'for' → logprob: -2.362616539001465
    3. ' boucle' → logprob: -4.487616539001465
    4. 'loop' → logprob: -6.987616539001465
    5. ' for' → logprob: -8.987616539001465
    6. 'pour' → logprob: -11.862616539001465
    7. 'b' → logprob: -12.237616539001465
    8. ' bou' → logprob: -12.237616539001465
    9. '   ' → logprob: -12.237616539001465
    10. 'Bou' → logprob: -13.112616539001465

Token 370: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.096842460334301
    2. '   ' → logprob: -2.7218425273895264
    3. ' dif' → logprob: -4.221842288970947
    4. ')
' → logprob: -5.221842288970947
    5. 'dif' → logprob: -5.221842288970947
    6. 'diff' → logprob: -7.221842288970947
    7. ' )' → logprob: -8.721842765808105
    8. 'if' → logprob: -10.096842765808105
    9. 'count' → logprob: -10.096842765808105
    10. ')
' → logprob: -10.721842765808105

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08684655278921127
    2. ' dif' → logprob: -2.9618465900421143
    3. 'dif' → logprob: -3.4618465900421143
    4. 'diff' → logprob: -9.836846351623535
    5. 'd' → logprob: -10.961846351623535
    6. '	d' → logprob: -11.461846351623535
    7. '-d' → logprob: -13.836846351623535
    8. '    
' → logprob: -14.211846351623535
    9. '  ' → logprob: -14.336846351623535
    10. ' ' → logprob: -14.586846351623535

Token 372: ' dif' (ID: 1501)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' (adapté à ' dif') → logprob: -0.04664301499724388
    2. ' dif' → logprob: -3.171643018722534
    3. '   ' → logprob: -5.796642780303955
    4. 'diff' → logprob: -7.421642780303955
    5. 'd' → logprob: -14.921643257141113
    6. '	d' → logprob: -15.171643257141113
    7. '  ' → logprob: -15.546643257141113
    8. ' ' → logprob: -15.796643257141113
    9. '```' → logprob: -16.171642303466797
    10. 'Dif' → logprob: -16.421642303466797

Token 373: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.56102097814437e-05
    2. '.' → logprob: -10.000045776367188
    3. '.app' → logprob: -16.875045776367188
    4. ' .' → logprob: -17.750045776367188
    5. '.Append' → logprob: -17.750045776367188
    6. '.extend' → logprob: -18.500045776367188
    7. '.add' → logprob: -18.625045776367188
    8. '.ap' → logprob: -18.625045776367188
    9. 'append' → logprob: -18.875045776367188
    10. ').' → logprob: -19.000045776367188

Token 374: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -8.77627644513268e-06
    2. 'count' → logprob: -11.750008583068848
    3. '(' → logprob: -14.000008583068848
    4. ' count' → logprob: -18.625009536743164
    5. '[count' → logprob: -20.375009536743164
    6. '	count' → logprob: -20.875009536743164
    7. ' (' → logprob: -21.000009536743164
    8. ',count' → logprob: -21.000009536743164
    9. '=count' → logprob: -21.125009536743164
    10. '(
' → logprob: -21.250009536743164

Token 375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8802491215174086e-05
    2. ')
' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.125028610229492
    4. ' )' → logprob: -14.750028610229492
    5. ')

' → logprob: -17.250028610229492
    6. ')`' → logprob: -18.000028610229492
    7. ')return' → logprob: -18.125028610229492
    8. '))' → logprob: -18.750028610229492
    9. ')
' → logprob: -19.625028610229492
    10. '`)' → logprob: -19.750028610229492

Token 376: '    
' (ID: 1944)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1973734050989151
    2. '   ' → logprob: -2.322373390197754
    3. ' total' → logprob: -3.072373390197754
    4. '    
' → logprob: -3.697373390197754
    5. '
' → logprob: -5.197373390197754
    6. 'result' → logprob: -5.697373390197754
    7. 'pairs' → logprob: -7.697373390197754
    8. 't' → logprob: -9.447373390197754
    9. ' result' → logprob: -9.572373390197754
    10. 'return' → logprob: -9.572373390197754

Token 377: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.03849354013800621
    2. 'result' → logprob: -3.7884936332702637
    3. 'pairs' → logprob: -4.288493633270264
    4. '   ' → logprob: -7.288493633270264
    5. 'pair' → logprob: -8.413493156433105
    6. ' total' → logprob: -8.788493156433105
    7. 'res' → logprob: -8.788493156433105
    8. 'return' → logprob: -8.788493156433105
    9. 's' → logprob: -11.663493156433105
    10. ' result' → logprob: -12.163493156433105

Token 378: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.03693779185414314
    2. 'result' → logprob: -3.911937713623047
    3. 'pairs' → logprob: -4.286937713623047
    4. 'res' → logprob: -6.286937713623047
    5. 'pair' → logprob: -8.036937713623047
    6. 's' → logprob: -9.036937713623047
    7. 'tot' → logprob: -9.536937713623047
    8. 'print' → logprob: -10.286937713623047
    9. 'ans' → logprob: -10.411937713623047
    10. 'answer' → logprob: -11.411937713623047

Token 379: ' Calcul' (ID: 57243)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0486636720597744
    2. 'result' → logprob: -3.79866361618042
    3. 'pairs' → logprob: -3.79866361618042
    4. 'res' → logprob: -6.29866361618042
    5. 'pair' → logprob: -7.92366361618042
    6. '#' → logprob: -8.798664093017578
    7. 's' → logprob: -9.048664093017578
    8. 'ans' → logprob: -9.548664093017578
    9. 'tot' → logprob: -10.048664093017578
    10. 'print' → logprob: -10.548664093017578

Token 380: 'er' (ID: 259)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0414191409945488
    2. 'result' → logprob: -4.16641902923584
    3. '   ' → logprob: -4.41641902923584
    4. ' total' → logprob: -5.04141902923584
    5. 'er' → logprob: -5.16641902923584
    6. '_total' → logprob: -7.66641902923584
    7. 's' → logprob: -9.54141902923584
    8. ' result' → logprob: -9.79141902923584
    9. 'pairs' → logprob: -10.16641902923584
    10. '_' → logprob: -10.54141902923584

Token 381: ' le' (ID: 505)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1230408176779747
    2. 'result' → logprob: -2.7480409145355225
    3. 'pairs' → logprob: -3.1230409145355225
    4. 'res' → logprob: -5.873040676116943
    5. ' total' → logprob: -6.498040676116943
    6. 'pair' → logprob: -6.998040676116943
    7. 'sum' → logprob: -7.123040676116943
    8. '   ' → logprob: -7.623040676116943
    9. 's' → logprob: -7.748040676116943
    10. ' pairs' → logprob: -7.873040676116943

Token 382: ' nombre' (ID: 9733)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.09825735539197922
    2. 'result' → logprob: -2.473257303237915
    3. 'sum' → logprob: -4.973257541656494
    4. 's' → logprob: -6.973257541656494
    5. 'pairs' → logprob: -7.348257541656494
    6. 'res' → logprob: -7.598257541656494
    7. 'pair' → logprob: -9.223257064819336
    8. 'answer' → logprob: -10.223257064819336
    9. ' total' → logprob: -10.348257064819336
    10. 'ans' → logprob: -10.598257064819336

Token 383: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7088260054588318
    2. 'total' → logprob: -1.0838260650634766
    3. '_total' → logprob: -2.0838260650634766
    4. '_' → logprob: -3.7088260650634766
    5. '   ' → logprob: -4.083826065063477
    6. ' de' → logprob: -6.333826065063477
    7. '(total' → logprob: -7.333826065063477
    8. '	total' → logprob: -7.708826065063477
    9. 'de' → logprob: -8.833826065063477
    10. ' tot' → logprob: -8.958826065063477

Token 384: ' de' (ID: 334)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0686172246932983
    2. ' total' → logprob: -1.1936172246932983
    3. ' de' → logprob: -1.3186172246932983
    4. 'de' → logprob: -2.568617343902588
    5. '   ' → logprob: -5.318617343902588
    6. '_total' → logprob: -5.693617343902588
    7. '_' → logprob: -8.19361686706543
    8. '_de' → logprob: -8.44361686706543
    9. '_pairs' → logprob: -9.31861686706543
    10. '	total' → logprob: -9.69361686706543

Token 385: ' p' (ID: 275)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.22065608203411102
    2. 'p' → logprob: -1.7206560373306274
    3. ' p' → logprob: -4.720655918121338
    4. 'sum' → logprob: -5.345655918121338
    5. ' pairs' → logprob: -5.720655918121338
    6. 'pair' → logprob: -6.845655918121338
    7. 'pa' → logprob: -8.095656394958496
    8. 'pares' → logprob: -8.470656394958496
    9. 'total' → logprob: -8.470656394958496
    10. 'diff' → logprob: -9.220656394958496

Token 386: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.00015312091272789985
    2. 'airs' → logprob: -9.625153541564941
    3. 'ai' → logprob: -9.750153541564941
    4. 'a' → logprob: -10.875153541564941
    5. 'air' → logprob: -11.875153541564941
    6. 'aire' → logprob: -13.250153541564941
    7. 'ares' → logprob: -14.875153541564941
    8. 'aises' → logprob: -16.125152587890625
    9. '[' → logprob: -16.375152587890625
    10. 'ar' → logprob: -16.625152587890625

Token 387: ' (' (ID: 350)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2825823426246643
    2. '   ' → logprob: -2.0325822830200195
    3. 'result' → logprob: -2.2825822830200195
    4. ' total' → logprob: -5.5325822830200195
    5. '=' → logprob: -6.1575822830200195
    6. ' =' → logprob: -6.2825822830200195
    7. 'res' → logprob: -6.2825822830200195
    8. 'pairs' → logprob: -6.2825822830200195
    9. 'answer' → logprob: -7.4075822830200195
    10. ' result' → logprob: -8.28258228302002

Token 388: 'cha' (ID: 3836)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.16029022634029388
    2. 'pairs' → logprob: -2.785290241241455
    3. 'sum' → logprob: -2.910290241241455
    4. ' total' → logprob: -4.410290241241455
    5. 'result' → logprob: -4.535290241241455
    6. 'res' → logprob: -5.160290241241455
    7. ' pairs' → logprob: -7.035290241241455
    8. ' sum' → logprob: -7.535290241241455
    9. 's' → logprob: -7.910290241241455
    10. 'ans' → logprob: -8.160289764404297

Token 389: 'que' (ID: 1126)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.338593989610672
    2. 'que' → logprob: -1.3385939598083496
    3. '    ' → logprob: -5.33859395980835
    4. 'q' → logprob: -5.71359395980835
    5. '       ' → logprob: -5.71359395980835
    6. 'ques' → logprob: -5.71359395980835
    7. '  ' → logprob: -5.83859395980835
    8. 'c' → logprob: -5.96359395980835
    9. '      ' → logprob: -6.96359395980835
    10. ' =' → logprob: -7.08859395980835

Token 390: ' paire' (ID: 148856)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -2.0093109607696533
    2. 'diff' → logprob: -2.1343109607696533
    3. 'pair' → logprob: -2.6343109607696533
    4. ' paire' → logprob: -2.6343109607696533
    5. ' x' → logprob: -2.7593109607696533
    6. ' pair' → logprob: -2.8843109607696533
    7. ' seq' → logprob: -3.1343109607696533
    8. 'sequence' → logprob: -3.2593109607696533
    9. 'x' → logprob: -3.3843109607696533
    10. 'd' → logprob: -3.3843109607696533

Token 391: ' =' (ID: 314)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3481626808643341
    2. ' =' → logprob: -1.8481626510620117
    3. '//' → logprob: -2.5981626510620117
    4. '=' → logprob: -2.9731626510620117
    5. '   ' → logprob: -5.473162651062012
    6. ')' → logprob: -5.598162651062012
    7. 'diff' → logprob: -7.348162651062012
    8. ' dif' → logprob: -7.848162651062012
    9. '//=' → logprob: -8.098162651062012
    10. 'd' → logprob: -8.098162651062012

Token 392: ' deux' (ID: 10301)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5946407914161682
    2. 'count' → logprob: -0.8446407914161682
    3. 'dif' → logprob: -5.219640731811523
    4. ' ' → logprob: -5.719640731811523
    5. '   ' → logprob: -6.094640731811523
    6. 'diff' → logprob: -6.594640731811523
    7. ' dif' → logprob: -7.094640731811523
    8. ' c' → logprob: -7.344640731811523
    9. 'c' → logprob: -7.594640731811523
    10. 'len' → logprob: -7.594640731811523

Token 393: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.13342410326004028
    2. 'elements' → logprob: -3.8834240436553955
    3. 'élé' → logprob: -4.008424282073975
    4. ' elements' → logprob: -4.258424282073975
    5. ')' → logprob: -4.383424282073975
    6. ' //' → logprob: -4.383424282073975
    7. '//' → logprob: -4.508424282073975
    8. ' espaces' → logprob: -4.883424282073975
    9. 'div' → logprob: -5.133424282073975
    10. '#' → logprob: -5.133424282073975

Token 394: ' ident' (ID: 3951)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.31664153933525085
    2. '//' → logprob: -1.3166415691375732
    3. '#' → logprob: -6.191641330718994
    4. ' #' → logprob: -7.191641330718994
    5. ')' → logprob: -7.941641330718994
    6. '   ' → logprob: -9.441641807556152
    7. 'div' → logprob: -10.066641807556152
    8. ' ' → logprob: -10.441641807556152
    9. ' ' → logprob: -11.066641807556152
    10. ')//' → logprob: -11.316641807556152

Token 395: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.0007759197615087032
    2. 'ique' → logprob: -7.2507758140563965
    3. 'aux' → logprob: -10.500776290893555
    4. 'iqu' → logprob: -11.375776290893555
    5. '```' → logprob: -11.375776290893555
    6. 'ical' → logprob: -12.500776290893555
    7. 'ifiés' → logprob: -13.375776290893555
    8. 'ques' → logprob: -13.375776290893555
    9. '#' → logprob: -13.625776290893555
    10. 'if' → logprob: -13.750776290893555

Token 396: ' cons' (ID: 1473)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.12044303864240646
    2. '//' → logprob: -2.245443105697632
    3. ')' → logprob: -5.370442867279053
    4. '   ' → logprob: -6.870442867279053
    5. '#' → logprob: -7.745442867279053
    6. ' #' → logprob: -7.745442867279053
    7. ' ' → logprob: -7.995442867279053
    8. ' )' → logprob: -8.620443344116211
    9. ')//' → logprob: -8.870443344116211
    10. 'div' → logprob: -8.995443344116211

Token 397: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0009573166607879102
    2. 'ecut' → logprob: -7.000957489013672
    3. '{' → logprob: -11.125957489013672
    4. 'cut' → logprob: -11.625957489013672
    5. 'éc' → logprob: -12.000957489013672
    6. 'é' → logprob: -12.500957489013672
    7. '```' → logprob: -12.500957489013672
    8. 'secut' → logprob: -13.375957489013672
    9. 'équ' → logprob: -13.500957489013672
    10. 'q' → logprob: -14.375957489013672

Token 398: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.04988174885511398
    2. 'ivement' → logprob: -3.67488169670105
    3. 'ents' → logprob: -4.799881935119629
    4. 'if' → logprob: -5.424881935119629
    5. 'ives' → logprob: -5.549881935119629
    6. 'es' → logprob: -6.174881935119629
    7. '```' → logprob: -6.799881935119629
    8. '   ' → logprob: -7.049881935119629
    9. 'it' → logprob: -7.924881935119629
    10. 'ive' → logprob: -7.924881935119629

Token 399: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5671172738075256
    2. ')' → logprob: -1.0671172142028809
    3. 'total' → logprob: -3.442117214202881
    4. ' dans' → logprob: -4.567117214202881
    5. ')
' → logprob: -4.692117214202881
    6. ' =' → logprob: -4.692117214202881
    7. ' total' → logprob: -4.817117214202881
    8. ',' → logprob: -5.317117214202881
    9. '
' → logprob: -5.942117214202881
    10. 's' → logprob: -6.067117214202881

Token 400: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.15255959331989288
    2. 'result' → logprob: -2.527559518814087
    3. '   ' → logprob: -3.152559518814087
    4. 'res' → logprob: -5.027559757232666
    5. '
' → logprob: -5.402559757232666
    6. ' total' → logprob: -5.777559757232666
    7. 'pairs' → logprob: -5.777559757232666
    8. '    
' → logprob: -7.277559757232666
    9. ' result' → logprob: -8.277559280395508
    10. 'ans' → logprob: -8.777559280395508

Token 401: ' res' (ID: 694)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.06595875322818756
    2. 'result' → logprob: -3.3159587383270264
    3. 'pairs' → logprob: -4.0659589767456055
    4. ' total' → logprob: -5.0659589767456055
    5. 'res' (adapté à ' res') → logprob: -6.1909589767456055
    6. '   ' → logprob: -6.9409589767456055
    7. ' result' → logprob: -7.8159589767456055
    8. 'pair' → logprob: -8.315958976745605
    9. ' pairs' → logprob: -8.815958976745605
    10. 'answer' → logprob: -9.190958976745605

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04895487427711487
    2. '=' → logprob: -3.048954963684082
    3. 'ult' → logprob: -7.923954963684082
    4. ' ' → logprob: -13.423954963684082
    5. 'ults' → logprob: -13.673954963684082
    6. 'ault' → logprob: -13.923954963684082
    7. '   ' → logprob: -14.423954963684082
    8. 's' → logprob: -15.173954963684082
    9. 'ultat' → logprob: -15.173954963684082
    10. 't' → logprob: -15.423954963684082

Token 403: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4561794698238373
    2. '0' → logprob: -1.2061794996261597
    3. ' sum' → logprob: -2.70617938041687
    4. ' ' → logprob: -8.70617961883545
    5. '   ' → logprob: -12.70617961883545
    6. '(sum' → logprob: -14.83117961883545
    7. '	sum' → logprob: -15.33117961883545
    8. '=sum' → logprob: -15.45617961883545
    9. '  ' → logprob: -16.456178665161133
    10. '.sum' → logprob: -16.706178665161133

Token 404: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.011170192621648312
    2. '0' → logprob: -4.511170387268066
    3. ' sum' → logprob: -9.011170387268066
    4. ' ' → logprob: -15.761170387268066
    5. '(sum' → logprob: -16.01116943359375
    6. '   ' → logprob: -16.26116943359375
    7. '=sum' → logprob: -17.13616943359375
    8. '	sum' → logprob: -18.26116943359375
    9. 'Sum' → logprob: -18.63616943359375
    10. '.sum' → logprob: -18.76116943359375

Token 405: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6722905039787292
    2. '   ' → logprob: -1.172290563583374
    3. 'for' → logprob: -2.047290563583374
    4. ' for' → logprob: -3.172290563583374
    5. '    
' → logprob: -4.797290325164795
    6. ' 
' → logprob: -8.172290802001953
    7. '  
' → logprob: -9.297290802001953
    8. '   
' → logprob: -9.922290802001953
    9. '\n' → logprob: -10.422290802001953
    10. ' ' → logprob: -10.797290802001953

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5522614121437073
    2. 'for' → logprob: -1.5522613525390625
    3. '
' → logprob: -2.0522613525390625
    4. ' for' → logprob: -2.5522613525390625
    5. '    
' → logprob: -5.3022613525390625
    6. ' 
' → logprob: -7.3022613525390625
    7. '<|end|>' → logprob: -8.677261352539062
    8. ' ' → logprob: -9.052261352539062
    9. '  
' → logprob: -9.302261352539062
    10. '   
' → logprob: -10.052261352539062

Token 407: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005891331238672137
    2. ' for' → logprob: -7.750589370727539
    3. '   ' → logprob: -8.750589370727539
    4. '	for' → logprob: -18.37558937072754
    5. ' ' → logprob: -19.87558937072754
    6. 'For' → logprob: -20.62558937072754
    7. '
' → logprob: -20.62558937072754
    8. '  ' → logprob: -21.50058937072754
    9. '```' → logprob: -21.50058937072754
    10. '    
' → logprob: -21.62558937072754

Token 408: ' seq' (ID: 26775)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0262856483459473
    2. 'length' → logprob: -1.2762856483459473
    3. 'x' → logprob: -2.0262856483459473
    4. 'count' → logprob: -2.7762856483459473
    5. ' length' → logprob: -3.4012856483459473
    6. 'val' → logprob: -3.7762856483459473
    7. 'seq' → logprob: -3.7762856483459473
    8. 'l' → logprob: -4.151285648345947
    9. 'c' → logprob: -4.276285648345947
    10. 'cnt' → logprob: -4.776285648345947

Token 409: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.4958750307559967
    2. '_length' → logprob: -1.8708750009536743
    3. ' in' → logprob: -2.120875120162964
    4. '_' → logprob: -2.870875120162964
    5. '_count' → logprob: -3.370875120162964
    6. 'u' → logprob: -4.745874881744385
    7. 'len' → logprob: -5.245874881744385
    8. 'ence' → logprob: -5.370874881744385
    9. 'in' → logprob: -6.745874881744385
    10. 'ue' → logprob: -6.870874881744385

Token 410: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04301620274782181
    2. 'in' → logprob: -3.168016195297241
    3. ' ' → logprob: -11.66801643371582
    4. 's' → logprob: -12.91801643371582
    5. '   ' → logprob: -12.91801643371582
    6. '_in' → logprob: -14.16801643371582
    7. '	in' → logprob: -14.16801643371582
    8. '  ' → logprob: -14.29301643371582
    9. ',' → logprob: -15.16801643371582
    10. 'n' → logprob: -15.29301643371582

Token 411: ' dif' (ID: 1501)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.28206944465637207
    2. ' dif' → logprob: -1.407069444656372
    3. 'diff' → logprob: -7.032069206237793
    4. '   ' → logprob: -11.157069206237793
    5. 'd' → logprob: -11.157069206237793
    6. ' ' → logprob: -12.532069206237793
    7. ' diff' → logprob: -14.157069206237793
    8. '	d' → logprob: -14.282069206237793
    9. 'Dif' → logprob: -14.407069206237793
    10. '  ' → logprob: -14.907069206237793

Token 412: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00675149355083704
    2. ':
' → logprob: -5.006751537322998
    3. '   ' → logprob: -10.88175106048584
    4. ' :' → logprob: -11.50675106048584
    5. '):
' → logprob: -13.13175106048584
    6. '       ' → logprob: -13.25675106048584
    7. '):' → logprob: -13.25675106048584
    8. ',' → logprob: -14.63175106048584
    9. ' :
' → logprob: -14.88175106048584
    10. '=' → logprob: -15.13175106048584

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014592852676287293
    2. ' res' → logprob: -6.876459121704102
    3. '   ' → logprob: -8.376459121704102
    4. 'res' → logprob: -8.751459121704102
    5. '<|end|>' → logprob: -11.376459121704102
    6. ' 
' → logprob: -12.501459121704102
    7. ' ' → logprob: -12.501459121704102
    8. '      ' → logprob: -12.501459121704102
    9. '    
' → logprob: -12.876459121704102
    10. '    ' → logprob: -12.876459121704102

Token 414: ' res' (ID: 694)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35240301489830017
    2. 'res' (adapté à ' res') → logprob: -1.6024030447006226
    3. ' res' → logprob: -2.352402925491333
    4. '   ' → logprob: -7.727403163909912
    5. '
' → logprob: -12.352402687072754
    6. '           ' → logprob: -12.977402687072754
    7. '	res' → logprob: -13.477402687072754
    8. 'ress' → logprob: -14.102402687072754
    9. '      ' → logprob: -15.102402687072754
    10. '    ' → logprob: -15.352402687072754

Token 415: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.038043782114982605
    2. '+=' → logprob: -3.288043737411499
    3. '+' → logprob: -13.663043975830078
    4. '+=(' → logprob: -14.413043975830078
    5. '   ' → logprob: -14.663043975830078
    6. ']+=' → logprob: -16.788043975830078
    7. '+='' → logprob: -17.038043975830078
    8. '+="' → logprob: -17.163043975830078
    9. '    ' → logprob: -17.288043975830078
    10. '	' → logprob: -18.163043975830078

Token 416: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.0003576304006855935
    2. ' seq' → logprob: -8.000357627868652
    3. '(seq' → logprob: -10.750357627868652
    4. '   ' → logprob: -14.125357627868652
    5. '(' → logprob: -17.75035858154297
    6. ' ' → logprob: -17.87535858154297
    7. ' (' → logprob: -18.25035858154297
    8. 'sq' → logprob: -18.75035858154297
    9. '_seq' → logprob: -19.00035858154297
    10. 'sequence' → logprob: -19.25035858154297

Token 417: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.320199877838604e-07
    2. 'len' → logprob: -15.0
    3. '_LEN' → logprob: -17.875
    4. '//' → logprob: -18.375
    5. 'en' → logprob: -18.625
    6. 'Len' → logprob: -19.25
    7. '[len' → logprob: -20.0
    8. 'e' → logprob: -20.0
    9. 't' → logprob: -20.25
    10. 'ent' → logprob: -21.0

Token 418: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3133518099784851
    2. ' //' → logprob: -1.3133518695831299
    3. ' ' → logprob: -9.56335163116455
    4. '#' → logprob: -11.81335163116455
    5. '   ' → logprob: -12.06335163116455
    6. '2' → logprob: -12.43835163116455
    7. '```' → logprob: -14.06335163116455
    8. '
' → logprob: -14.31335163116455
    9. '  ' → logprob: -15.18835163116455
    10. '1' → logprob: -15.18835163116455

Token 419: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -19.625
    5. '۲' → logprob: -19.75
    6. '２' → logprob: -20.625
    7. '२' → logprob: -21.75
    8. '২' → logprob: -21.75
    9. '٢' → logprob: -22.0
    10. 'def' → logprob: -22.125

Token 420: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.5
    4. '   ' → logprob: -20.0
    5. '２' → logprob: -20.375
    6. '۲' → logprob: -20.375
    7. '=' → logprob: -21.9375
    8. '٢' → logprob: -22.1875
    9. 'two' → logprob: -22.25
    10. '`' → logprob: -22.3125

Token 421: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03373203054070473
    2. '   ' → logprob: -3.5337319374084473
    3. '    
' → logprob: -5.533731937408447
    4. '
' → logprob: -12.158732414245605
    5. 'print' → logprob: -12.408732414245605
    6. '

' → logprob: -12.408732414245605
    7. 'return' → logprob: -12.783732414245605
    8. '  
' → logprob: -13.033732414245605
    9. '   
' → logprob: -13.408732414245605
    10. '        
' → logprob: -13.783732414245605

Token 422: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.052896179258823395
    2. '   ' → logprob: -3.05289626121521
    3. '    
' → logprob: -5.552896022796631
    4. 'return' → logprob: -8.177896499633789
    5. ' return' → logprob: -9.677896499633789
    6. '  
' → logprob: -10.552896499633789
    7. '   
' → logprob: -10.927896499633789
    8. '\n' → logprob: -11.677896499633789
    9. '
' → logprob: -11.802896499633789
    10. '

' → logprob: -11.802896499633789

Token 423: ' Division' (ID: 25413)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04198923707008362
    2. ' return' → logprob: -3.541989326477051
    3. '
' → logprob: -5.041989326477051
    4. '   ' → logprob: -6.666989326477051
    5. '1' → logprob: -7.041989326477051
    6. '```' → logprob: -7.291989326477051
    7. ' ' → logprob: -7.541989326477051
    8. ' 
' → logprob: -7.541989326477051
    9. '<|end|>' → logprob: -7.541989326477051
    10. '    
' → logprob: -7.916989326477051

Token 424: ' entière' (ID: 61583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: ' :' (ID: 712)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2151339054107666
    2. '   ' → logprob: -2.3401339054107666
    3. '    
' → logprob: -2.3401339054107666
    4. 'return' → logprob: -8.215133666992188
    5. '   
' → logprob: -8.840133666992188
    6. '  
' → logprob: -8.965133666992188
    7. '        
' → logprob: -9.090133666992188
    8. ' return' → logprob: -9.465133666992188
    9. '\n' → logprob: -10.090133666992188
    10. ' 
' → logprob: -10.090133666992188

Token 426: ' nombre' (ID: 9733)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 428: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.043928034603595734
    2. ' p' → logprob: -3.2939281463623047
    3. 'pa' → logprob: -5.418928146362305
    4. 'pairs' → logprob: -6.668928146362305
    5. ' pairs' → logprob: -10.168928146362305
    6. '2' → logprob: -10.418928146362305
    7. '```' → logprob: -10.793928146362305
    8. '
' → logprob: -10.793928146362305
    9. 'pair' → logprob: -10.918928146362305
    10. ' ' → logprob: -12.168928146362305

Token 429: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.0009286141721531749
    2. 'a' → logprob: -7.2509284019470215
    3. 'ai' → logprob: -9.62592887878418
    4. 'airs' → logprob: -9.75092887878418
    5. 'air' → logprob: -9.87592887878418
    6. 'aire' → logprob: -10.37592887878418
    7. 'ares' → logprob: -12.62592887878418
    8. ' p' → logprob: -14.12592887878418
    9. '   ' → logprob: -14.25092887878418
    10. '```' → logprob: -14.37592887878418

Token 430: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.755378007888794
    2. '
' → logprob: -0.880378007888794
    3. '    
' → logprob: -2.255378007888794
    4. ' return' → logprob: -6.130377769470215
    5. 'return' → logprob: -6.130377769470215
    6. '  
' → logprob: -6.255377769470215
    7. '   
' → logprob: -6.755377769470215
    8. '<|end|>' → logprob: -6.755377769470215
    9. '\n' → logprob: -7.380377769470215
    10. ' 
' → logprob: -7.380377769470215

Token 431: ' chaque' (ID: 21194)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.18375638127326965
    2. 'la' → logprob: -1.9337563514709473
    3. ' la' → logprob: -4.183756351470947
    4. ' seq' → logprob: -5.808756351470947
    5. 'une' → logprob: -6.058756351470947
    6. '(seq' → logprob: -6.808756351470947
    7. 'sequence' → logprob: -7.933756351470947
    8. ' chaque' → logprob: -8.058756828308105
    9. 'le' → logprob: -8.183756828308105
    10. ' une' → logprob: -8.683756828308105

Token 432: ' bloc' (ID: 51218)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.07813651859760284
    2. 'sequence' → logprob: -2.953136444091797
    3. ' seq' → logprob: -4.953136444091797
    4. 'sé' → logprob: -5.078136444091797
    5. ' sequence' → logprob: -5.578136444091797
    6. ' sé' → logprob: -5.953136444091797
    7. 'bloc' → logprob: -6.578136444091797
    8. 's' → logprob: -7.453136444091797
    9. 'sub' → logprob: -7.828136444091797
    10. 'block' → logprob: -8.703136444091797

Token 433: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4848727881908417
    2. '
' → logprob: -1.484872817993164
    3. '    
' → logprob: -1.859872817993164
    4. 'return' → logprob: -7.234872817993164
    5. ' return' → logprob: -7.734872817993164
    6. '  
' → logprob: -8.359872817993164
    7. '        
' → logprob: -8.609872817993164
    8. '   
' → logprob: -8.734872817993164
    9. ' 
' → logprob: -9.109872817993164
    10. '\n' → logprob: -9.609872817993164

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.693345308303833
    2. 'print' → logprob: -0.693345308303833
    3. ' print' → logprob: -8.943345069885254
    4. 'return' → logprob: -9.943345069885254
    5. '    
' → logprob: -11.443345069885254
    6. '```' → logprob: -11.818345069885254
    7. '
' → logprob: -13.943345069885254
    8. ' return' → logprob: -16.06834602355957
    9. '	print' → logprob: -16.06834602355957
    10. '       ' → logprob: -16.56834602355957

Token 435: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.117345684382599e-05
    2. ' print' → logprob: -11.250020980834961
    3. '   ' → logprob: -11.750020980834961
    4. 'return' → logprob: -15.500020980834961
    5. '```' → logprob: -19.00002098083496
    6. '	print' → logprob: -22.50002098083496
    7. ' return' → logprob: -24.25002098083496
    8. '#print' → logprob: -24.37502098083496
    9. '  ' → logprob: -25.37502098083496
    10. ' ' → logprob: -25.75002098083496

Token 436: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00033939589047804475
    2. ' print' → logprob: -8.00033950805664
    3. '   ' → logprob: -12.75033950805664
    4. 'return' → logprob: -13.75033950805664
    5. 'Print' → logprob: -19.50033950805664
    6. ' return' → logprob: -20.75033950805664
    7. '```' → logprob: -20.75033950805664
    8. '	print' → logprob: -21.25033950805664
    9. '#print' → logprob: -22.00033950805664
    10. '#' → logprob: -22.12533950805664

Token 437: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0003820524725597352
    2. 'iche' → logprob: -8.000382423400879
    3. '   ' → logprob: -11.000382423400879
    4. 'ic' → logprob: -11.250382423400879
    5. '#' → logprob: -11.625382423400879
    6. '
' → logprob: -12.875382423400879
    7. 'cher' → logprob: -13.375382423400879
    8. 'ichage' → logprob: -13.500382423400879
    9. 'ich' → logprob: -14.625382423400879
    10. 'icer' → logprob: -15.250382423400879

Token 438: ' le' (ID: 505)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.002739731688052416
    2. 'res' → logprob: -6.002739906311035
    3. '(' → logprob: -8.252739906311035
    4. ' res' → logprob: -12.627739906311035
    5. '(result' → logprob: -17.12773895263672
    6. ' (' → logprob: -17.37773895263672
    7. '   ' → logprob: -17.62773895263672
    8. '_res' → logprob: -18.50273895263672
    9. '	res' → logprob: -18.87773895263672
    10. '(
' → logprob: -19.37773895263672

Token 439: ' résultat' (ID: 62556)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005079937167465687
    2. '(res' → logprob: -5.880079746246338
    3. 'result' → logprob: -6.255079746246338
    4. 'rés' → logprob: -8.380080223083496
    5. ' res' → logprob: -9.255080223083496
    6. 'total' → logprob: -11.505080223083496
    7. '(' → logprob: -12.380080223083496
    8. 's' → logprob: -12.880080223083496
    9. ' résultat' → logprob: -12.880080223083496
    10. ' result' → logprob: -13.255080223083496

Token 440: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00195444468408823
    2. 'print' → logprob: -6.251954555511475
    3. ' print' → logprob: -10.876954078674316
    4. '
' → logprob: -12.251954078674316
    5. '```' → logprob: -13.626954078674316
    6. '    
' → logprob: -14.001954078674316
    7. '	print' → logprob: -16.251955032348633
    8. '       ' → logprob: -17.626955032348633
    9. '    ' → logprob: -19.876955032348633
    10. '   ' → logprob: -20.126955032348633

Token 441: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06207546219229698
    2. 'print' → logprob: -2.81207537651062
    3. ' print' → logprob: -9.3120756149292
    4. '
' → logprob: -11.3120756149292
    5. '```' → logprob: -12.3120756149292
    6. '    
' → logprob: -14.5620756149292
    7. '	print' → logprob: -15.1870756149292
    8. '       ' → logprob: -17.687074661254883
    9. '\n' → logprob: -18.562074661254883
    10. '(print' → logprob: -18.687074661254883

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0818290188908577
    2. 'print' → logprob: -2.581829071044922
    3. ' print' → logprob: -5.831829071044922
    4. '```' → logprob: -13.081829071044922
    5. '	print' → logprob: -16.706829071044922
    6. '       ' → logprob: -19.581829071044922
    7. '
' → logprob: -19.706829071044922
    8. '`' → logprob: -20.331829071044922
    9. '``' → logprob: -20.456829071044922
    10. '    
' → logprob: -20.581829071044922

Token 443: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.2994620242971e-06
    2. ' print' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.000008583068848
    4. '```' → logprob: -17.25000762939453
    5. '`' → logprob: -23.50000762939453
    6. '	print' → logprob: -24.50000762939453
    7. '``' → logprob: -24.75000762939453
    8. 'return' → logprob: -25.37500762939453
    9. '
' → logprob: -26.37500762939453
    10. 'Print' → logprob: -27.37500762939453

Token 444: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16022615134716034
    2. '(res' → logprob: -1.9102261066436768
    3. ' (' → logprob: -13.910225868225098
    4. '('' → logprob: -14.410225868225098
    5. '(
' → logprob: -14.910225868225098
    6. '()' → logprob: -16.535226821899414
    7. 'res' → logprob: -17.285226821899414
    8. '(

' → logprob: -17.410226821899414
    9. '("("' → logprob: -17.660226821899414
    10. '(f' → logprob: -17.785226821899414

Token 445: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.125001907348633
    3. '()' → logprob: -14.500001907348633
    4. '())' → logprob: -15.375001907348633
    5. ')`' → logprob: -17.500001907348633
    6. '')' → logprob: -18.625001907348633
    7. '))' → logprob: -18.875001907348633
    8. ')
' → logprob: -19.125001907348633
    9. '`)' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.375001907348633

Token 446: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 447: ' App' (ID: 2583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: 'eler' (ID: 6998)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.1415387988090515
    2. 'ly' → logprob: -2.6415388584136963
    3. 'le' → logprob: -3.3915388584136963
    4. 'l' → logprob: -4.891538619995117
    5. 'end' → logprob: -5.141538619995117
    6. 'count' → logprob: -5.391538619995117
    7. 'e' → logprob: -6.391538619995117
    8. 'ount' → logprob: -6.391538619995117
    9. '#' → logprob: -6.516538619995117
    10. 'ear' → logprob: -7.266538619995117

Token 449: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.320199877838604e-07
    2. ' count' → logprob: -14.75
    3. '(count' → logprob: -17.25
    4. 'code' → logprob: -21.125
    5. 'def' → logprob: -22.125
    6. '	count' → logprob: -22.875
    7. '$count' → logprob: -22.875
    8. '[count' → logprob: -22.875
    9. 'call' → logprob: -23.625
    10. '_count' → logprob: -23.875

Token 450: ' fonction' (ID: 17610)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2664456789934775e-06
    2. 'def' → logprob: -13.625000953674316
    3. ' count' → logprob: -16.875001907348633
    4. 'code' → logprob: -19.000001907348633
    5. 'function' → logprob: -19.000001907348633
    6. '(count' → logprob: -19.250001907348633
    7. 'counter' → logprob: -20.125001907348633
    8. '```' → logprob: -20.875001907348633
    9. '[count' → logprob: -21.625001907348633
    10. 'call' → logprob: -22.375001907348633

Token 451: ' principale' (ID: 68926)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.2127087504486553e-05
    2. '
' → logprob: -10.750021934509277
    3. ' count' → logprob: -15.250021934509277
    4. '()
' → logprob: -15.500021934509277
    5. '(count' → logprob: -16.250022888183594
    6. '(
' → logprob: -18.125022888183594
    7. '	count' → logprob: -18.500022888183594
    8. '\' → logprob: -18.750022888183594
    9. '_count' → logprob: -19.000022888183594
    10. '\n' → logprob: -19.000022888183594

Token 452: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0620475672185421
    2. '
' → logprob: -2.8120474815368652
    3. '

' → logprob: -9.812047958374023
    4. '(count' → logprob: -11.437047958374023
    5. ' count' → logprob: -12.187047958374023
    6. '```' → logprob: -12.812047958374023
    7. '()
' → logprob: -13.312047958374023
    8. 'if' → logprob: -13.812047958374023
    9. '\n' → logprob: -14.187047958374023
    10. '[count' → logprob: -14.812047958374023

Token 453: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: 0.0
    2. ' count' → logprob: -21.25
    3. 'if' → logprob: -22.25
    4. '```' → logprob: -24.5
    5. '(count' → logprob: -24.75
    6. 'counter' → logprob: -26.0
    7. '[count' → logprob: -26.25
    8. '$count' → logprob: -26.5
    9. 'call' → logprob: -26.625
    10. 'code' → logprob: -27.0

Token 454: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.011159592308104038
    2. '_' → logprob: -4.511159420013428
    3. '_p' → logprob: -9.136159896850586
    4. '_pair' → logprob: -13.011159896850586
    5. '_pa' → logprob: -14.511159896850586
    6. '_par' → logprob: -15.761159896850586
    7. 'Pairs' → logprob: -16.386159896850586
    8. '(' → logprob: -16.386159896850586
    9. 'pairs' → logprob: -16.511159896850586
    10. '_)' → logprob: -16.636159896850586

Token 455: '_in' (ID: 2267)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05785296857357025
    2. '_in' → logprob: -3.3078529834747314
    3. '_pairs' → logprob: -4.057852745056152
    4. '(' → logprob: -6.182852745056152
    5. '_tokens' → logprob: -9.307852745056152
    6. '_p' → logprob: -10.307852745056152
    7. '_(' → logprob: -10.807852745056152
    8. '(_' → logprob: -11.307852745056152
    9. ' _' → logprob: -11.432852745056152
    10. '(_)' → logprob: -11.682852745056152

Token 456: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.005569302476942539
    2. 'sequence' → logprob: -5.2555694580078125
    3. 'quence' → logprob: -8.005569458007812
    4. 'e' → logprob: -14.005569458007812
    5. ' sequence' → logprob: -14.755569458007812
    6. 'Sequence' → logprob: -15.505569458007812
    7. '_sequences' → logprob: -16.380569458007812
    8. 'put' → logprob: -16.630569458007812
    9. '(sequence' → logprob: -16.880569458007812
    10. 't' → logprob: -17.005569458007812

Token 457: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 455
Tokens correctement prédits (1ère position, stricte): 146
Tokens correctement prédits (1ère position, avec adaptation): 157
Tokens correctement prédits (top 10): 297
Précision stricte (1ère position): 32.09%
Précision adaptée (1ère position): 34.51%
Précision (top 10): 65.27%
================================================================================
