================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
# sys.setrecursionlimit(n)
import heapq
import re
import bisect
import random
import math
import itertools
from collections import defaultdict, deque
from copy import deepcopy
from decimal import *

readl = lambda: list(map(int, sys.stdin.readline().split()))
readt = lambda: tuple(map(int, sys.stdin.readline().split()))
read = lambda: sys.stdin.readline().rstrip()
readi = lambda: int(read())
readmi = lambda: map(int, sys.stdin.readline().split())
readms = lambda: map(str, sys.stdin.readline().split())

n = readi()
t = readl()

left = 0
right = 1
mx = 0
current = 0

if n == 1:
    print(0)
    exit()

while True:
    if t[left] >= t[right]:
        current += 1
        mx = max(current, mx)
    else:
        current = 0
    left += 1
    right += 1
    if left >= n or right >= n:
        break

print(mx)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' sys' (ID: 12228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014290554448962212
    2. 'import' → logprob: -4.5142903327941895
    3. '#' → logprob: -6.8892903327941895
    4. '<|end|>' → logprob: -7.5142903327941895
    5. ',' → logprob: -7.8892903327941895
    6. '[' → logprob: -8.514290809631348
    7. '<|end|>' → logprob: -8.639290809631348
    8. ' ' → logprob: -8.639290809631348
    9. '```' → logprob: -9.264290809631348
    10. '\' → logprob: -9.264290809631348

Token 5: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001398929744027555
    2. ' .' → logprob: -9.375140190124512
    3. '.import' → logprob: -11.375140190124512
    4. '.exit' → logprob: -11.875140190124512
    5. '.​' → logprob: -12.625140190124512
    6. '.
' → logprob: -12.750140190124512
    7. '.`' → logprob: -12.875140190124512
    8. 'import' → logprob: -12.875140190124512
    9. '.system' → logprob: -13.000140190124512
    10. '.readline' → logprob: -13.250140190124512

Token 6: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.03870480880141258
    2. 'rec' → logprob: -4.038704872131348
    3. 'encoding' → logprob: -5.163704872131348
    4. '_trace' → logprob: -5.538704872131348
    5. 'set' → logprob: -5.788704872131348
    6. 'uptools' → logprob: -6.538704872131348
    7. 'sys' → logprob: -6.663704872131348
    8. '_' → logprob: -7.663704872131348
    9. '```' → logprob: -7.788704872131348
    10. 'debug' → logprob: -7.788704872131348

Token 7: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.1354404240846634
    2. 'w' → logprob: -2.8854403495788574
    3. 'ursive' → logprob: -3.7604403495788574
    4. 't' → logprob: -5.010440349578857
    5. '_w' → logprob: -5.010440349578857
    6. 'u' → logprob: -5.260440349578857
    7. 'limit' → logprob: -5.760440349578857
    8. 'ur' → logprob: -5.760440349578857
    9. 'ut' → logprob: -6.010440349578857
    10. 'wr' → logprob: -6.260440349578857

Token 8: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.015014301054179668
    2. '_' → logprob: -4.890014171600342
    3. '_depth' → logprob: -5.515014171600342
    4. 'limit' → logprob: -6.015014171600342
    5. '_limits' → logprob: -8.5150146484375
    6. ' _' → logprob: -8.8900146484375
    7. '_max' → logprob: -9.0150146484375
    8. '_lim' → logprob: -9.1400146484375
    9. '_stack' → logprob: -9.6400146484375
    10. ' limit' → logprob: -10.0150146484375

Token 9: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -8.7689099018462e-05
    2. ' (' → logprob: -9.75008773803711
    3. '(
' → logprob: -11.25008773803711
    4. '('' → logprob: -11.62508773803711
    5. '.' → logprob: -12.62508773803711
    6. '(

' → logprob: -13.50008773803711
    7. '("("' → logprob: -14.50008773803711
    8. '()' → logprob: -14.87508773803711
    9. ''' → logprob: -14.87508773803711
    10. ')' → logprob: -15.12508773803711

Token 10: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001943514565937221
    2. '(' → logprob: -6.251943588256836
    3. '()' → logprob: -12.001943588256836
    4. '))' → logprob: -13.001943588256836
    5. ' )' → logprob: -13.376943588256836
    6. '.' → logprob: -13.501943588256836
    7. '#' → logprob: -14.126943588256836
    8. ')
' → logprob: -14.251943588256836
    9. ' ' → logprob: -14.751943588256836
    10. '[' → logprob: -15.126943588256836

Token 11: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.035752031952142715
    2. '#' → logprob: -4.160751819610596
    3. ')' → logprob: -4.910751819610596
    4. '.' → logprob: -4.910751819610596
    5. '_' → logprob: -5.660751819610596
    6. '(
' → logprob: -8.410752296447754
    7. '40' → logprob: -8.785752296447754
    8. '\(' → logprob: -8.785752296447754
    9. '()' → logprob: -9.160752296447754
    10. '\' → logprob: -9.160752296447754

Token 12: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.019108597189188004
    2. ' math' → logprob: -4.269108772277832
    3. ' threading' → logprob: -5.519108772277832
    4. ' ' → logprob: -8.019108772277832
    5. ' numpy' → logprob: -8.644108772277832
    6. 'os' → logprob: -9.644108772277832
    7. ' functools' → logprob: -9.644108772277832
    8. ' random' → logprob: -10.019108772277832
    9. ' sys' → logprob: -10.269108772277832
    10. ' itertools' → logprob: -10.269108772277832

Token 13: 'q' (ID: 80)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22555305063724518
    2. 'q' → logprob: -1.600553035736084
    3. '_' → logprob: -10.475553512573242
    4. 'space' → logprob: -10.600553512573242
    5. 'p' → logprob: -10.725553512573242
    6. '.
' → logprob: -11.100553512573242
    7. ' .' → logprob: -11.475553512573242
    8. '[' → logprob: -12.100553512573242
    9. '.q' → logprob: -12.600553512573242
    10. 's' → logprob: -12.725553512573242

Token 14: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08971119672060013
    2. '
' → logprob: -3.5897111892700195
    3. '#' → logprob: -3.7147111892700195
    4. '(' → logprob: -4.3397111892700195
    5. ' ' → logprob: -5.2147111892700195
    6. '<|end|>' → logprob: -5.3397111892700195
    7. '\' → logprob: -5.4647111892700195
    8. '' → logprob: -6.3397111892700195
    9. '

' → logprob: -7.2147111892700195
    10. 'import' → logprob: -7.5897111892700195

Token 15: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' re' (ID: 322)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.437290757894516
    2. ' os' → logprob: -1.6872907876968384
    3. ' math' → logprob: -1.9372907876968384
    4. ' itertools' → logprob: -4.062290668487549
    5. 'collections' → logprob: -4.937290668487549
    6. ' threading' → logprob: -8.312291145324707
    7. 'os' → logprob: -8.437291145324707
    8. 'math' → logprob: -8.687291145324707
    9. ' random' → logprob: -10.562291145324707
    10. ' time' → logprob: -10.687291145324707

Token 17: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0442957878112793
    2. '
' → logprob: -1.5442957878112793
    3. '#' → logprob: -1.7942957878112793
    4. '<|end|>' → logprob: -2.5442957878112793
    5. ' ' → logprob: -3.2942957878112793
    6. '\' → logprob: -3.2942957878112793
    7. 'import' → logprob: -3.4192957878112793
    8. '' → logprob: -3.5442957878112793
    9. '.' → logprob: -4.169295787811279
    10. 'n' → logprob: -4.419295787811279

Token 18: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9188154935836792
    2. '#' → logprob: -1.4188154935836792
    3. '\n' → logprob: -2.0438156127929688
    4. '' → logprob: -2.5438156127929688
    5. '\' → logprob: -3.2938156127929688
    6. '

' → logprob: -3.7938156127929688
    7. 'n' → logprob: -3.7938156127929688
    8. 'import' → logprob: -3.9188156127929688
    9. ' ' → logprob: -4.043815612792969
    10. '.' → logprob: -5.043815612792969

Token 19: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.4739743173122406
    2. ' math' → logprob: -1.223974347114563
    3. ' collections' → logprob: -3.0989742279052734
    4. 'os' → logprob: -3.7239742279052734
    5. 'collections' → logprob: -4.973974227905273
    6. 'math' → logprob: -5.598974227905273
    7. ' itertools' → logprob: -5.848974227905273
    8. ' threading' → logprob: -8.598974227905273
    9. ' functools' → logprob: -9.348974227905273
    10. ' time' → logprob: -9.598974227905273

Token 20: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.015367107465863228
    2. 't' → logprob: -4.640367031097412
    3. '.' → logprob: -5.640367031097412
    4. 'n' → logprob: -8.01536750793457
    5. 'ection' → logprob: -8.64036750793457
    6. 'ects' → logprob: -8.76536750793457
    7. ' ' → logprob: -9.01536750793457
    8. 'p' → logprob: -9.01536750793457
    9. 'h' → logprob: -9.14036750793457
    10. '#' → logprob: -9.14036750793457

Token 21: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: 'import' (ID: 561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9871536493301392
    2. '<|end|>' → logprob: -1.6121536493301392
    3. '
' → logprob: -1.9871536493301392
    4. '\n' → logprob: -2.2371535301208496
    5. '\' → logprob: -2.6121535301208496
    6. 'import' → logprob: -3.8621535301208496
    7. 'def' → logprob: -4.11215353012085
    8. '.' → logprob: -4.36215353012085
    9. '' → logprob: -4.48715353012085
    10. '

' → logprob: -4.73715353012085

Token 23: ' random' (ID: 7526)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2284408062696457
    2. 'math' → logprob: -1.728440761566162
    3. 'collections' → logprob: -4.103440761566162
    4. ' collections' → logprob: -4.853440761566162
    5. ' itertools' → logprob: -6.103440761566162
    6. ' threading' → logprob: -10.60344123840332
    7. ' functools' → logprob: -11.10344123840332
    8. 'random' → logprob: -11.22844123840332
    9. 'os' → logprob: -11.47844123840332
    10. ' os' → logprob: -11.47844123840332

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5856960415840149
    2. 'math' → logprob: -0.8356960415840149
    3. 'collections' → logprob: -5.460696220397949
    4. ' collections' → logprob: -6.585696220397949
    5. ' itertools' → logprob: -6.710696220397949
    6. 'time' → logprob: -6.835696220397949
    7. 'string' → logprob: -6.960696220397949
    8. ' string' → logprob: -7.585696220397949
    9. ' time' → logprob: -8.33569622039795
    10. 'it' → logprob: -10.21069622039795

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.682929277420044
    2. '#' → logprob: -1.807929277420044
    3. '<|end|>' → logprob: -1.807929277420044
    4. '\n' → logprob: -2.807929277420044
    5. 'import' → logprob: -3.557929277420044
    6. '' → logprob: -3.682929277420044
    7. '

' → logprob: -4.182929039001465
    8. '\' → logprob: -4.182929039001465
    9. '.' → logprob: -4.932929039001465
    10. '```' → logprob: -5.807929039001465

Token 28: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.928435742855072
    2. '#' → logprob: -1.6784358024597168
    3. '

' → logprob: -2.178435802459717
    4. 'def' → logprob: -2.303435802459717
    5. '<|end|>' → logprob: -2.553435802459717
    6. 'import' → logprob: -3.428435802459717
    7. '\n' → logprob: -3.678435802459717
    8. '```' → logprob: -3.678435802459717
    9. '' → logprob: -4.303435802459717
    10. 'n' → logprob: -4.928435802459717

Token 29: ' itertools' (ID: 103178)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.1264115869998932
    2. ' itertools' → logprob: -2.8764116764068604
    3. ' collections' → logprob: -3.0014116764068604
    4. 'time' → logprob: -5.876411437988281
    5. 'os' → logprob: -6.126411437988281
    6. 'it' → logprob: -6.251411437988281
    7. ' functools' → logprob: -6.626411437988281
    8. 'statistics' → logprob: -6.751411437988281
    9. 'operator' → logprob: -7.001411437988281
    10. 'decimal' → logprob: -7.626411437988281

Token 30: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.20061457157135
    2. '
' → logprob: -1.57561457157135
    3. '<|end|>' → logprob: -1.82561457157135
    4. '#' → logprob: -2.3256144523620605
    5. 'import' → logprob: -2.5756144523620605
    6. '\' → logprob: -2.5756144523620605
    7. '' → logprob: -3.4506144523620605
    8. '

' → logprob: -3.7006144523620605
    9. 'n' → logprob: -5.2006144523620605
    10. '.' → logprob: -6.2006144523620605

Token 31: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6434038877487183
    2. '#' → logprob: -2.018404006958008
    3. '\n' → logprob: -2.018404006958008
    4. '

' → logprob: -3.143404006958008
    5. '\' → logprob: -3.143404006958008
    6. 'd' → logprob: -3.768404006958008
    7. 'def' → logprob: -3.893404006958008
    8. 'n' → logprob: -3.893404006958008
    9. '' → logprob: -4.018404006958008
    10. '.' → logprob: -4.518404006958008

Token 32: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.05296740680932999
    2. 'collections' → logprob: -3.0529673099517822
    3. ' functools' → logprob: -6.302967548370361
    4. ' ' → logprob: -6.427967548370361
    5. ' operator' → logprob: -8.052967071533203
    6. ' sys' → logprob: -8.552967071533203
    7. ' typing' → logprob: -9.052967071533203
    8. '_' → logprob: -9.302967071533203
    9. ' fractions' → logprob: -9.927967071533203
    10. ' copy' → logprob: -10.302967071533203

Token 33: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03818585351109505
    2. ' import' → logprob: -3.2881858348846436
    3. '.' → logprob: -10.163186073303223
    4. 'from' → logprob: -10.663186073303223
    5. '	import' → logprob: -11.538186073303223
    6. ' ' → logprob: -11.538186073303223
    7. '```' → logprob: -11.538186073303223
    8. 'abc' → logprob: -11.663186073303223
    9. '<|end|>' → logprob: -11.788186073303223
    10. '.Counter' → logprob: -12.663186073303223

Token 34: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.010515122674405575
    2. ' ' → logprob: -5.010515213012695
    3. ' deque' → logprob: -5.635515213012695
    4. ' collections' → logprob: -9.260515213012695
    5. ' abc' → logprob: -10.135515213012695
    6. ' Counter' → logprob: -10.135515213012695
    7. 'deque' → logprob: -10.260515213012695
    8. ' ' → logprob: -11.760515213012695
    9. ' default' → logprob: -12.760515213012695
    10. 'default' → logprob: -13.635515213012695

Token 35: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.16063404083251953
    2. ' deque' → logprob: -1.9106340408325195
    3. 'Counter' → logprob: -7.9106340408325195
    4. ' Counter' → logprob: -10.28563404083252
    5. 'de' → logprob: -12.16063404083252
    6. 'Deque' → logprob: -13.03563404083252
    7. 'Ordered' → logprob: -13.78563404083252
    8. 'named' → logprob: -15.41063404083252
    9. ' Ordered' → logprob: -16.660633087158203
    10. '```' → logprob: -17.160633087158203

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5489557385444641
    2. '

' → logprob: -0.9239557385444641
    3. '\n' → logprob: -4.548955917358398
    4. '<|end|>' → logprob: -5.423955917358398
    5. 'import' → logprob: -5.673955917358398
    6. '' → logprob: -6.298955917358398
    7. '
' → logprob: -6.673955917358398
    8. '#' → logprob: -7.048955917358398
    9. '```' → logprob: -7.298955917358398
    10. 'def' → logprob: -7.798955917358398

Token 38: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2638840675354004
    2. '

' → logprob: -1.8888840675354004
    3. 'class' → logprob: -4.1388840675354
    4. 'def' → logprob: -4.3888840675354
    5. '#' → logprob: -4.5138840675354
    6. '' → logprob: -4.6388840675354
    7. 'import' → logprob: -4.7638840675354
    8. 'n' → logprob: -5.2638840675354
    9. '<|end|>' → logprob: -5.2638840675354
    10. '\n' → logprob: -5.5138840675354

Token 39: ' copy' (ID: 5150)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.3446953296661377
    2. ' collections' → logprob: -1.9696953296661377
    3. ' ' → logprob: -2.8446953296661377
    4. ' operator' → logprob: -3.2196953296661377
    5. ' functools' → logprob: -3.5946953296661377
    6. ' heap' → logprob: -5.344695091247559
    7. ' enum' → logprob: -5.719695091247559
    8. 'collections' → logprob: -5.844695091247559
    9. ' queue' → logprob: -5.969695091247559
    10. ' math' → logprob: -6.094695091247559

Token 40: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11392856389284134
    2. 'import' → logprob: -2.2389285564422607
    3. ' ' → logprob: -7.11392879486084
    4. '	import' → logprob: -8.36392879486084
    5. '_import' → logprob: -11.61392879486084
    6. ' ' → logprob: -11.73892879486084
    7. ' impor' → logprob: -11.98892879486084
    8. ' im' → logprob: -12.11392879486084
    9. ' importar' → logprob: -12.36392879486084
    10. '.import' → logprob: -12.36392879486084

Token 41: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.0029180420096963644
    2. ' copy' → logprob: -6.002918243408203
    3. 'copy' → logprob: -7.877918243408203
    4. 'deep' → logprob: -10.377918243408203
    5. '.deepcopy' → logprob: -10.377918243408203
    6. ' deep' → logprob: -14.627918243408203
    7. ' import' → logprob: -14.627918243408203
    8. 'import' → logprob: -16.252918243408203
    9. '	copy' → logprob: -17.627918243408203
    10. '(copy' → logprob: -17.752918243408203

Token 42: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.37891075015068054
    2. '
' → logprob: -1.378910779953003
    3. '<|end|>' → logprob: -2.878910779953003
    4. '\n' → logprob: -5.878910541534424
    5. 'def' → logprob: -7.128910541534424
    6. 'import' → logprob: -7.128910541534424
    7. '<|end|>' → logprob: -7.378910541534424
    8. '' → logprob: -7.378910541534424
    9. '```' → logprob: -8.128911018371582
    10. '


' → logprob: -8.378911018371582

Token 43: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.737238347530365
    2. '<|end|>' → logprob: -1.7372384071350098
    3. 'import' → logprob: -2.4872384071350098
    4. '#' → logprob: -2.9872384071350098
    5. 'class' → logprob: -3.1122384071350098
    6. '\n' → logprob: -3.2372384071350098
    7. 'def' → logprob: -3.2372384071350098
    8. '

' → logprob: -3.3622384071350098
    9. '```' → logprob: -4.11223840713501
    10. 'n' → logprob: -4.73723840713501

Token 44: ' decimal' (ID: 26964)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.4756641089916229
    2. ' itertools' → logprob: -2.1006641387939453
    3. ' math' → logprob: -2.9756641387939453
    4. ' operator' → logprob: -3.1006641387939453
    5. ' typing' → logprob: -3.2256641387939453
    6. ' heap' → logprob: -3.7256641387939453
    7. ' collections' → logprob: -3.8506641387939453
    8. 'collections' → logprob: -4.475664138793945
    9. ' fractions' → logprob: -4.475664138793945
    10. 'operator' → logprob: -4.600664138793945

Token 45: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.004935935605317354
    2. ' ' → logprob: -5.8799357414245605
    3. 'import' → logprob: -6.5049357414245605
    4. '	import' → logprob: -8.004936218261719
    5. '<|end|>' → logprob: -8.254936218261719
    6. '.' → logprob: -11.129936218261719
    7. ' ```' → logprob: -12.254936218261719
    8. ' ' → logprob: -12.504936218261719
    9. ' Import' → logprob: -13.129936218261719
    10. '_import' → logprob: -13.129936218261719

Token 46: ' *

' (ID: 40558)
  Prédit: ' Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.04319329932332039
    2. 'Decimal' → logprob: -3.1681933403015137
    3. '.Decimal' → logprob: -9.043192863464355
    4. ' ' → logprob: -10.543192863464355
    5. ' ' → logprob: -11.168192863464355
    6. '	' → logprob: -11.418192863464355
    7. '```' → logprob: -11.543192863464355
    8. ' decimal' → logprob: -12.418192863464355
    9. 'decimal' → logprob: -12.418192863464355
    10. '`' → logprob: -12.793192863464355

Token 47: 'read' (ID: 1293)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0963295698165894
    2. '
' → logprob: -1.5963295698165894
    3. 'd' → logprob: -2.221329689025879
    4. 'n' → logprob: -2.596329689025879
    5. ' ' → logprob: -2.846329689025879
    6. '\' → logprob: -3.096329689025879
    7. ' 
' → logprob: -3.221329689025879
    8. '' → logprob: -3.221329689025879
    9. '\n' → logprob: -3.471329689025879
    10. 'def' → logprob: -4.221329689025879

Token 48: 'l' (ID: 75)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8622829914093018
    2. '()' → logprob: -1.2372829914093018
    3. '(' → logprob: -1.4872829914093018
    4. '_line' → logprob: -3.2372829914093018
    5. '_' → logprob: -4.237282752990723
    6. '_input' → logprob: -6.362282752990723
    7. ' =' → logprob: -6.737282752990723
    8. ')' → logprob: -7.487282752990723
    9. 'lines' → logprob: -7.612282752990723
    10. 'ln' → logprob: -7.737282752990723

Token 49: ' =' (ID: 314)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.010579879395663738
    2. '()' → logprob: -5.135580062866211
    3. 'ines' → logprob: -5.385580062866211
    4. '(' → logprob: -10.635580062866211
    5. 'INE' → logprob: -11.385580062866211
    6. 'ne' → logprob: -11.385580062866211
    7. ' ine' → logprob: -13.135580062866211
    8. 'inear' → logprob: -13.510580062866211
    9. 'n' → logprob: -14.260580062866211
    10. '\' → logprob: -14.260580062866211

Token 50: ' lambda' (ID: 27871)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.49977147579193115
    2. 'ambda' → logprob: -1.2497714757919312
    3. 'sys' → logprob: -2.8747715950012207
    4. 'lambda' → logprob: -3.4997715950012207
    5. '(sys' → logprob: -4.874771595001221
    6. 'amb' → logprob: -5.374771595001221
    7. '=sys' → logprob: -5.874771595001221
    8. ' input' → logprob: -6.624771595001221
    9. 'ine' → logprob: -6.999771595001221
    10. '(lambda' → logprob: -7.499771595001221

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004490411840379238
    2. '=sys' → logprob: -6.629490375518799
    3. ' :' → logprob: -6.754490375518799
    4. 'sys' → logprob: -7.504490375518799
    5. 's' → logprob: -7.879490375518799
    6. ' sys' → logprob: -8.254490852355957
    7. 'input' → logprob: -8.504490852355957
    8. '.readline' → logprob: -9.004490852355957
    9. '():' → logprob: -9.129490852355957
    10. 'ambda' → logprob: -9.504490852355957

Token 52: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.032443344593048096
    2. 'sys' → logprob: -3.7824432849884033
    3. ' input' → logprob: -4.782443523406982
    4. ' sys' → logprob: -7.157443523406982
    5. 'int' → logprob: -14.907443046569824
    6. 'inp' → logprob: -15.032443046569824
    7. 'stdin' → logprob: -15.907443046569824
    8. '=sys' → logprob: -16.90744400024414
    9. '(sys' → logprob: -17.03244400024414
    10. '(input' → logprob: -17.03244400024414

Token 53: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.015701157972216606
    2. '(' → logprob: -4.2657012939453125
    3. '(sys' → logprob: -7.0157012939453125
    4. '(input' → logprob: -7.6407012939453125
    5. '(int' → logprob: -9.390701293945312
    6. '()' → logprob: -9.765701293945312
    7. '(stdin' → logprob: -12.515701293945312
    8. ' map' → logprob: -12.640701293945312
    9. '(str' → logprob: -12.890701293945312
    10. 'map' → logprob: -12.890701293945312

Token 54: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012688051210716367
    2. 'int' → logprob: -7.6262688636779785
    3. '(str' → logprob: -7.8762688636779785
    4. '(' → logprob: -8.00126838684082
    5. '<int' → logprob: -10.25126838684082
    6. 'str' → logprob: -11.00126838684082
    7. ',int' → logprob: -12.62626838684082
    8. '[int' → logprob: -13.00126838684082
    9. '=int' → logprob: -13.00126838684082
    10. ' int' → logprob: -13.12626838684082

Token 55: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4566287696361542
    2. ',' → logprob: -1.4566287994384766
    3. '(input' → logprob: -2.7066287994384766
    4. '(sys' → logprob: -2.9566287994384766
    5. 'input' → logprob: -4.706628799438477
    6. '(' → logprob: -5.831628799438477
    7. 'sys' → logprob: -6.581628799438477
    8. '(read' → logprob: -7.581628799438477
    9. '(stdin' → logprob: -8.456628799438477
    10. ' ,' → logprob: -8.706628799438477

Token 56: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0498412549495697
    2. 'sys' → logprob: -3.2998411655426025
    3. ' input' → logprob: -4.549841403961182
    4. ' sys' → logprob: -6.799841403961182
    5. 'stdin' → logprob: -10.174840927124023
    6. ',input' → logprob: -12.549840927124023
    7. '=sys' → logprob: -12.674840927124023
    8. '(sys' → logprob: -14.424840927124023
    9. '	input' → logprob: -14.549840927124023
    10. '	sys' → logprob: -14.674840927124023

Token 57: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0008322591311298311
    2. '.' → logprob: -7.3758320808410645
    3. '.readline' → logprob: -9.250832557678223
    4. '.argv' → logprob: -9.250832557678223
    5. '.stdout' → logprob: -12.000832557678223
    6. '.std' → logprob: -12.375832557678223
    7. '.read' → logprob: -13.250832557678223
    8. '.st' → logprob: -15.000832557678223
    9. '.input' → logprob: -15.000832557678223
    10. 'stdin' → logprob: -15.375832557678223

Token 58: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.861651490908116e-05
    2. '.' → logprob: -10.000068664550781
    3. '.read' → logprob: -10.750068664550781
    4. '.readlines' → logprob: -13.625068664550781
    5. '.buffer' → logprob: -14.875068664550781
    6. '.stdin' → logprob: -16.37506866455078
    7. '.)' → logprob: -17.12506866455078
    8. ')' → logprob: -17.37506866455078
    9. ' .' → logprob: -17.62506866455078
    10. ' readline' → logprob: -17.75006866455078

Token 59: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00038813185528852046
    2. '()))' → logprob: -8.125388145446777
    3. '()' → logprob: -9.500388145446777
    4. '))' → logprob: -11.125388145446777
    5. '())' → logprob: -14.000388145446777
    6. ' ().' → logprob: -14.500388145446777
    7. '.readline' → logprob: -15.000388145446777
    8. '.' → logprob: -15.375388145446777
    9. '())))' → logprob: -15.625388145446777
    10. '(' → logprob: -15.625388145446777

Token 60: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.13769446313381195
    2. 'rstrip' → logprob: -2.1376943588256836
    3. 'split' → logprob: -5.012694358825684
    4. 'read' → logprob: -5.512694358825684
    5. ')' → logprob: -11.512694358825684
    6. ' strip' → logprob: -11.637694358825684
    7. 'decode' → logprob: -14.512694358825684
    8. 'r' → logprob: -15.637694358825684
    9. 'rst' → logprob: -15.762694358825684
    10. '-strip' → logprob: -16.0126953125

Token 61: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2539423704147339
    2. '()))' → logprob: -1.5039423704147339
    3. '()' → logprob: -6.503942489624023
    4. ')))' → logprob: -7.878942489624023
    5. '())' → logprob: -9.378942489624023
    6. ')' → logprob: -10.503942489624023
    7. '())))' → logprob: -11.253942489624023
    8. '()))
' → logprob: -12.628942489624023
    9. '(' → logprob: -12.753942489624023
    10. ' ))' → logprob: -13.128942489624023

Token 62: 'read' (ID: 1293)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2020949125289917
    2. 'def' → logprob: -1.5770949125289917
    3. '\n' → logprob: -1.8270949125289917
    4. '' → logprob: -1.9520949125289917
    5. 'n' → logprob: -2.8270950317382812
    6. '\' → logprob: -3.5770950317382812
    7. 'r' → logprob: -3.5770950317382812
    8. '
' → logprob: -4.202095031738281
    9. '#' → logprob: -4.327095031738281
    10. 'd' → logprob: -4.702095031738281

Token 63: 't' (ID: 83)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4144017696380615
    2. 'l' → logprob: -1.2894017696380615
    3. 'ine' → logprob: -2.7894017696380615
    4. 'ines' → logprob: -6.664402008056641
    5. 'ln' → logprob: -7.789402008056641
    6. 'lin' → logprob: -8.78940200805664
    7. 'li' → logprob: -8.78940200805664
    8. 'int' → logprob: -8.78940200805664
    9. 'lines' → logprob: -9.66440200805664
    10. 'i' → logprob: -9.78940200805664

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3563237488269806
    2. '=' → logprob: -1.3563237190246582
    3. 'ine' → logprob: -3.231323719024658
    4. '()' → logprob: -6.731323719024658
    5. '(' → logprob: -8.231324195861816
    6. 'ime' → logprob: -8.856324195861816
    7. 'o' → logprob: -9.231324195861816
    8. '=lambda' → logprob: -9.231324195861816
    9. '_line' → logprob: -9.606324195861816
    10. 'l' → logprob: -9.606324195861816

Token 65: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.12231270968914032
    2. '(lambda' → logprob: -2.4973127841949463
    3. ' lambda' → logprob: -3.4973127841949463
    4. 'list' → logprob: -6.997312545776367
    5. 'tuple' → logprob: -7.622312545776367
    6. '()' → logprob: -8.122312545776367
    7. 'int' → logprob: -8.247312545776367
    8. 'map' → logprob: -8.872312545776367
    9. '=lambda' → logprob: -8.997312545776367
    10. 'sys' → logprob: -9.247312545776367

Token 66: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08976622670888901
    2. ' :' → logprob: -3.339766263961792
    3. 'list' → logprob: -3.839766263961792
    4. '():' → logprob: -4.589766025543213
    5. 'lambda' → logprob: -5.214766025543213
    6. ':list' → logprob: -5.214766025543213
    7. 'sys' → logprob: -6.464766025543213
    8. '()' → logprob: -6.839766025543213
    9. 's' → logprob: -7.089766025543213
    10. ':int' → logprob: -7.214766025543213

Token 67: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.32957977056503296
    2. 'tuple' → logprob: -1.3295798301696777
    3. ' sys' → logprob: -4.579579830169678
    4. 'sys' → logprob: -5.204579830169678
    5. 'list' → logprob: -9.20457935333252
    6. 'int' → logprob: -9.32957935333252
    7. ' map' → logprob: -9.57957935333252
    8. ' list' → logprob: -9.70457935333252
    9. '(tuple' → logprob: -10.20457935333252
    10. 'map' → logprob: -10.57957935333252

Token 68: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9582979083061218
    2. '(map' → logprob: -0.9582979083061218
    3. '(int' → logprob: -1.4582979679107666
    4. '(list' → logprob: -8.833297729492188
    5. '(lambda' → logprob: -9.583297729492188
    6. '(
' → logprob: -10.958297729492188
    7. '(sys' → logprob: -11.458297729492188
    8. 'map' → logprob: -11.958297729492188
    9. '()' → logprob: -12.333297729492188
    10. '(

' → logprob: -12.458297729492188

Token 69: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.876193169271573e-05
    2. 'int' → logprob: -9.625088691711426
    3. '(str' → logprob: -11.250088691711426
    4. '[int' → logprob: -12.500088691711426
    5. '<int' → logprob: -12.750088691711426
    6. '=int' → logprob: -13.375088691711426
    7. '(' → logprob: -14.625088691711426
    8. ',int' → logprob: -14.750088691711426
    9. ' int' → logprob: -15.125088691711426
    10. ']int' → logprob: -15.875088691711426

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.448370838072151e-05
    2. ' ,' → logprob: -9.625094413757324
    3. '(sys' → logprob: -10.750094413757324
    4. ',int' → logprob: -12.625094413757324
    5. ',System' → logprob: -13.375094413757324
    6. '=sys' → logprob: -14.000094413757324
    7. 'sys' → logprob: -15.250094413757324
    8. '(),' → logprob: -15.750094413757324
    9. ',map' → logprob: -15.875094413757324
    10. ' sys' → logprob: -16.00009536743164

Token 71: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07889155298471451
    2. ' sys' → logprob: -2.5788915157318115
    3. '(sys' → logprob: -14.07889175415039
    4. '=sys' → logprob: -14.57889175415039
    5. '	sys' → logprob: -14.95389175415039
    6. ')' → logprob: -15.70389175415039
    7. ' ' → logprob: -16.57889175415039
    8. '_sys' → logprob: -18.20389175415039
    9. '/sys' → logprob: -18.45389175415039
    10. 'input' → logprob: -18.57889175415039

Token 72: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.676292231422849e-05
    2. '.stdout' → logprob: -11.375017166137695
    3. 'stdin' → logprob: -12.625017166137695
    4. '.argv' → logprob: -13.875017166137695
    5. '.std' → logprob: -14.625017166137695
    6. '.' → logprob: -14.875017166137695
    7. '.stderr' → logprob: -17.250017166137695
    8. ' stdin' → logprob: -17.500017166137695
    9. '```' → logprob: -18.000017166137695
    10. ' .' → logprob: -18.375017166137695

Token 73: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0012054694816470146
    2. '().' → logprob: -6.7512054443359375
    3. '.' → logprob: -11.126205444335938
    4. ' readline' → logprob: -11.501205444335938
    5. '()' → logprob: -13.126205444335938
    6. '.stdin' → logprob: -13.251205444335938
    7. ').' → logprob: -13.376205444335938
    8. ')' → logprob: -13.501205444335938
    9. 'stdin' → logprob: -14.126205444335938
    10. 'line' → logprob: -14.126205444335938

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9146995327901095e-05
    2. '()' → logprob: -11.000019073486328
    3. ' ().' → logprob: -13.250019073486328
    4. '.' → logprob: -15.250019073486328
    5. '(' → logprob: -15.875019073486328
    6. ' .' → logprob: -16.250019073486328
    7. ')' → logprob: -16.375019073486328
    8. '.split' → logprob: -17.125019073486328
    9. '.readline' → logprob: -17.625019073486328
    10. '())' → logprob: -17.750019073486328

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2961512513575144e-05
    2. 'strip' → logprob: -11.125022888183594
    3. ' split' → logprob: -12.500022888183594
    4. ')' → logprob: -13.000022888183594
    5. 'read' → logprob: -13.250022888183594
    6. 'rstrip' → logprob: -15.125022888183594
    7. '(split' → logprob: -16.875022888183594
    8. 'plit' → logprob: -17.125022888183594
    9. 'decode' → logprob: -17.625022888183594
    10. 'spl' → logprob: -17.750022888183594

Token 76: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2531431317329407
    2. '()))' → logprob: -1.503143072128296
    3. '()' → logprob: -7.128143310546875
    4. ')' → logprob: -8.503143310546875
    5. '())' → logprob: -8.628143310546875
    6. '()))
' → logprob: -11.253143310546875
    7. ' ))' → logprob: -11.878143310546875
    8. '))
' → logprob: -12.753143310546875
    9. ')))' → logprob: -12.878143310546875
    10. '(' → logprob: -13.878143310546875

Token 77: 'read' (ID: 1293)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6454488635063171
    2. 'read' → logprob: -1.645448923110962
    3. 'def' → logprob: -2.395448923110962
    4. 'n' → logprob: -2.645448923110962
    5. 'r' → logprob: -2.895448923110962
    6. '\n' → logprob: -3.895448923110962
    7. '#' → logprob: -4.020448684692383
    8. '' → logprob: -4.770448684692383
    9. '\' → logprob: -5.520448684692383
    10. 'a' → logprob: -5.895448684692383

Token 78: ' =' (ID: 314)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.26311057806015015
    2. 'ine' → logprob: -2.013110637664795
    3. 'l' → logprob: -3.388110637664795
    4. ' =' → logprob: -3.388110637664795
    5. 'i' → logprob: -4.138110637664795
    6. 'int' → logprob: -4.638110637664795
    7. '=' → logprob: -6.638110637664795
    8. 'ines' → logprob: -6.888110637664795
    9. 'ln' → logprob: -7.388110637664795
    10. 'in' → logprob: -7.888110637664795

Token 79: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.8230106234550476
    2. 'lambda' → logprob: -1.3230106830596924
    3. '(lambda' → logprob: -1.3230106830596924
    4. '(' → logprob: -4.323010444641113
    5. ' ()' → logprob: -5.448010444641113
    6. '()' → logprob: -5.573010444641113
    7. ' (' → logprob: -6.198010444641113
    8. '(sys' → logprob: -6.823010444641113
    9. 'l' → logprob: -7.073010444641113
    10. '=lambda' → logprob: -7.448010444641113

Token 80: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.96724933385849
    2. 'int' → logprob: -1.2172493934631348
    3. 'sys' → logprob: -2.3422493934631348
    4. '():' → logprob: -2.9672493934631348
    5. ' sys' → logprob: -2.9672493934631348
    6. '()' → logprob: -3.0922493934631348
    7. 'lambda' → logprob: -3.4672493934631348
    8. ' lambda' → logprob: -4.217249393463135
    9. '=sys' → logprob: -4.592249393463135
    10. ' ' → logprob: -5.217249393463135

Token 81: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.774138867855072
    2. 'int' → logprob: -1.2741389274597168
    3. ' sys' → logprob: -1.3991389274597168
    4. ' int' → logprob: -4.399138927459717
    5. 'input' → logprob: -9.649138450622559
    6. ' input' → logprob: -10.524138450622559
    7. ' ' → logprob: -11.649138450622559
    8. '	sys' → logprob: -11.774138450622559
    9. '=sys' → logprob: -12.024138450622559
    10. 'map' → logprob: -12.274138450622559

Token 82: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.40998875699006e-05
    2. 'stdin' → logprob: -10.12507438659668
    3. '.stdout' → logprob: -10.37507438659668
    4. '.' → logprob: -13.50007438659668
    5. '.readline' → logprob: -14.50007438659668
    6. '.argv' → logprob: -14.75007438659668
    7. '.std' → logprob: -15.75007438659668
    8. ' stdin' → logprob: -16.25007438659668
    9. '(stdin' → logprob: -16.37507438659668
    10. '.stderr' → logprob: -16.75007438659668

Token 83: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0022059278562664986
    2. '.stdin' → logprob: -6.252205848693848
    3. '.' → logprob: -9.377205848693848
    4. 'stdin' → logprob: -9.377205848693848
    5. 'read' → logprob: -9.752205848693848
    6. '.read' → logprob: -10.002205848693848
    7. ' readline' → logprob: -13.127205848693848
    8. '.stdout' → logprob: -13.877205848693848
    9. '_read' → logprob: -14.627205848693848
    10. '.readlines' → logprob: -15.127205848693848

Token 84: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.061976201832294464
    2. '()' → logprob: -2.811976194381714
    3. ')' → logprob: -13.311976432800293
    4. '())' → logprob: -13.436976432800293
    5. '.' → logprob: -13.561976432800293
    6. ' ().' → logprob: -14.311976432800293
    7. '().__' → logprob: -14.436976432800293
    8. '()

' → logprob: -14.561976432800293
    9. '()).' → logprob: -14.936976432800293
    10. '()
' → logprob: -14.936976432800293

Token 85: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.023246178403496742
    2. 'rstrip' → logprob: -3.7732462882995605
    3. 'read' → logprob: -14.648245811462402
    4. ' strip' → logprob: -15.773245811462402
    5. 'str' → logprob: -16.77324676513672
    6. 'decode' → logprob: -17.14824676513672
    7. 'rst' → logprob: -17.89824676513672
    8. '_strip' → logprob: -18.02324676513672
    9. '-strip' → logprob: -19.64824676513672
    10. 'stri' → logprob: -19.64824676513672

Token 86: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00298328697681427
    2. '()
' → logprob: -6.502983093261719
    3. '(' → logprob: -6.627983093261719
    4. '()\' → logprob: -9.502983093261719
    5. '()

' → logprob: -9.752983093261719
    6. 'def' → logprob: -12.002983093261719
    7. '#' → logprob: -12.127983093261719
    8. '(
' → logprob: -12.252983093261719
    9. '()
' → logprob: -13.627983093261719
    10. '\' → logprob: -14.002983093261719

Token 87: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49543240666389465
    2. '#' → logprob: -1.9954323768615723
    3. 'n' → logprob: -1.9954323768615723
    4. 'd' → logprob: -3.4954323768615723
    5. '\n' → logprob: -3.4954323768615723
    6. '
' → logprob: -3.6204323768615723
    7. 'for' → logprob: -4.870432376861572
    8. 'a' → logprob: -5.120432376861572
    9. '\' → logprob: -5.495432376861572
    10. '' → logprob: -5.620432376861572

Token 88: 'i' (ID: 72)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003811025235336274
    2. '()
' → logprob: -9.625381469726562
    3. '(' → logprob: -9.750381469726562
    4. '().' → logprob: -9.875381469726562
    5. '()\' → logprob: -10.000381469726562
    6. '()

' → logprob: -10.625381469726562
    7. '_line' → logprob: -11.000381469726562
    8. 'line' → logprob: -11.000381469726562
    9. '())' → logprob: -11.375381469726562
    10. '()>' → logprob: -11.500381469726562

Token 89: ' =' (ID: 314)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.016332175582647324
    2. 'n' → logprob: -4.141332149505615
    3. '=' → logprob: -8.891332626342773
    4. ' =' → logprob: -9.891332626342773
    5. '()' → logprob: -10.766332626342773
    6. 'ntl' → logprob: -10.891332626342773
    7. 'nts' → logprob: -11.516332626342773
    8. 'ng' → logprob: -11.516332626342773
    9. 'nte' → logprob: -11.891332626342773
    10. 'ntil' → logprob: -12.016332626342773

Token 90: ' lambda' (ID: 27871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4086802899837494
    2. 'nt' → logprob: -2.1586802005767822
    3. 'lambda' → logprob: -2.5336802005767822
    4. ' lambda' → logprob: -2.5336802005767822
    5. '(lambda' → logprob: -3.4086802005767822
    6. ' int' → logprob: -4.658680438995361
    7. '(int' → logprob: -4.908680438995361
    8. ' ()' → logprob: -5.658680438995361
    9. 'ambda' → logprob: -5.783680438995361
    10. '()' → logprob: -6.408680438995361

Token 91: ':' (ID: 25)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2927913963794708
    2. '():' → logprob: -1.7927913665771484
    3. 'int' → logprob: -3.4177913665771484
    4. ' ()' → logprob: -3.5427913665771484
    5. ':' → logprob: -3.7927913665771484
    6. ':int' → logprob: -7.292791366577148
    7. ' ():' → logprob: -7.292791366577148
    8. ' :' → logprob: -7.917791366577148
    9. '=int' → logprob: -8.042791366577148
    10. ' =' → logprob: -8.042791366577148

Token 92: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4740813374519348
    2. 'int' → logprob: -0.9740813374519348
    3. ' in' → logprob: -13.349081039428711
    4. ' ' → logprob: -14.099081039428711
    5. '	int' → logprob: -14.474081039428711
    6. '(int' → logprob: -14.474081039428711
    7. 'in' → logprob: -14.599081039428711
    8. '<int' → logprob: -16.47408103942871
    9. ':int' → logprob: -16.47408103942871
    10. '=int' → logprob: -16.59908103942871

Token 93: '(read' (ID: 45738)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.2043815702199936
    2. '(' → logprob: -1.7043815851211548
    3. '(read' → logprob: -5.829381465911865
    4. 'sys' → logprob: -12.079381942749023
    5. '(Sys' → logprob: -12.204381942749023
    6. '(s' → logprob: -13.204381942749023
    7. ' (' → logprob: -13.454381942749023
    8. '(input' → logprob: -13.579381942749023
    9. '(system' → logprob: -13.704381942749023
    10. '()' → logprob: -13.704381942749023

Token 94: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00939277932047844
    2. '()' → logprob: -4.759392738342285
    3. ')' → logprob: -7.259392738342285
    4. '(' → logprob: -10.634392738342285
    5. ' ())' → logprob: -10.884392738342285
    6. '())
' → logprob: -11.134392738342285
    7. '()))' → logprob: -11.509392738342285
    8. '().' → logprob: -13.009392738342285
    9. '()
' → logprob: -13.259392738342285
    10. '())

' → logprob: -13.634392738342285

Token 95: 'read' (ID: 1293)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7100797295570374
    2. 'def' → logprob: -1.5850796699523926
    3. 'n' → logprob: -1.8350796699523926
    4. '
' → logprob: -2.9600796699523926
    5. 'd' → logprob: -3.3350796699523926
    6. '\n' → logprob: -3.5850796699523926
    7. '\' → logprob: -4.585079669952393
    8. 'a' → logprob: -5.585079669952393
    9. 'for' → logprob: -5.710079669952393
    10. ' ' → logprob: -6.085079669952393

Token 96: 'mi' (ID: 3900)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005485066794790328
    2. '(' → logprob: -8.000548362731934
    3. '<|end|>' → logprob: -9.625548362731934
    4. 'i' → logprob: -10.250548362731934
    5. '()
' → logprob: -10.500548362731934
    6. ')' → logprob: -10.750548362731934
    7. ' ()' → logprob: -11.250548362731934
    8. '()

' → logprob: -11.250548362731934
    9. '#' → logprob: -12.000548362731934
    10. '())' → logprob: -12.250548362731934

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04368546977639198
    2. ' =' → logprob: -3.2936854362487793
    3. 'n' → logprob: -5.418685436248779
    4. 'nt' → logprob: -7.543685436248779
    5. 't' → logprob: -8.418685913085938
    6. 'ni' → logprob: -9.293685913085938
    7. '=lambda' → logprob: -9.293685913085938
    8. '()' → logprob: -9.918685913085938
    9. 'p' → logprob: -10.418685913085938
    10. 'x' → logprob: -10.543685913085938

Token 98: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.4568117558956146
    2. 'lambda' → logprob: -1.581811785697937
    3. '(lambda' → logprob: -2.2068116664886475
    4. 'ambda' → logprob: -3.0818116664886475
    5. '=lambda' → logprob: -6.456811904907227
    6. '()' → logprob: -7.081811904907227
    7. 'map' → logprob: -7.331811904907227
    8. ' ()' → logprob: -7.456811904907227
    9. ' (' → logprob: -8.206811904907227
    10. 'int' → logprob: -8.581811904907227

Token 99: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4015245735645294
    2. '():' → logprob: -1.151524543762207
    3. ' ():' → logprob: -5.151524543762207
    4. ' :' → logprob: -5.401524543762207
    5. '()' → logprob: -5.901524543762207
    6. ':list' → logprob: -7.026524543762207
    7. ' ()' → logprob: -8.276524543762207
    8. ' list' → logprob: -8.776524543762207
    9. 'list' → logprob: -9.276524543762207
    10. ':int' → logprob: -10.401524543762207

Token 100: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.05745900049805641
    2. 'list' → logprob: -3.5574591159820557
    3. ' map' → logprob: -3.9324591159820557
    4. 'int' → logprob: -5.057458877563477
    5. 'lambda' → logprob: -7.182458877563477
    6. ' list' → logprob: -7.807458877563477
    7. 'float' → logprob: -10.057458877563477
    8. ' int' → logprob: -10.182458877563477
    9. ' lambda' → logprob: -10.682458877563477
    10. 'min' → logprob: -10.682458877563477

Token 101: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000182921823579818
    2. 'int' → logprob: -8.62518310546875
    3. '(' → logprob: -13.25018310546875
    4. '<int' → logprob: -14.12518310546875
    5. '=int' → logprob: -15.00018310546875
    6. '[int' → logprob: -15.75018310546875
    7. '(lambda' → logprob: -15.87518310546875
    8. ' int' → logprob: -16.87518310546875
    9. '	int' → logprob: -17.37518310546875
    10. '(i' → logprob: -17.50018310546875

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6719745993614197
    2. '(sys' → logprob: -0.7969745993614197
    3. '(),' → logprob: -3.2969746589660645
    4. '(' → logprob: -7.1719746589660645
    5. ')' → logprob: -8.546974182128906
    6. '())' → logprob: -9.046974182128906
    7. ' ,' → logprob: -9.046974182128906
    8. ',(' → logprob: -9.421974182128906
    9. '=sys' → logprob: -9.421974182128906
    10. ',s' → logprob: -9.546974182128906

Token 103: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.013383971527218819
    2. ' sys' → logprob: -4.388383865356445
    3. ')' → logprob: -7.263383865356445
    4. '(sys' → logprob: -9.638383865356445
    5. 'read' → logprob: -9.888383865356445
    6. '	sys' → logprob: -10.513383865356445
    7. '=sys' → logprob: -11.138383865356445
    8. ' ' → logprob: -12.138383865356445
    9. '  ' → logprob: -12.888383865356445
    10. ' )' → logprob: -13.513383865356445

Token 104: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002585978072602302
    2. '.stdout' → logprob: -8.625258445739746
    3. '.' → logprob: -10.000258445739746
    4. 'stdin' → logprob: -11.250258445739746
    5. '.readline' → logprob: -11.500258445739746
    6. '.argv' → logprob: -12.625258445739746
    7. '(stdin' → logprob: -12.750258445739746
    8. '.stderr' → logprob: -13.625258445739746
    9. '.std' → logprob: -13.625258445739746
    10. '().' → logprob: -15.000258445739746

Token 105: '.readline' (ID: 74673)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.13692454993724823
    2. '.readline' → logprob: -2.1369245052337646
    3. '()' → logprob: -4.886924743652344
    4. '())' → logprob: -6.511924743652344
    5. '.' → logprob: -7.636924743652344
    6. ')' → logprob: -8.636924743652344
    7. '().__' → logprob: -8.636924743652344
    8. '.stdin' → logprob: -9.886924743652344
    9. '()
' → logprob: -12.386924743652344
    10. '()).' → logprob: -12.636924743652344

Token 106: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010819212911883369
    2. '()' → logprob: -9.875107765197754
    3. ' ().' → logprob: -10.750107765197754
    4. '.' → logprob: -10.875107765197754
    5. '.readline' → logprob: -11.250107765197754
    6. '())' → logprob: -13.250107765197754
    7. '()).' → logprob: -14.625107765197754
    8. ')' → logprob: -15.000107765197754
    9. ' .' → logprob: -15.500107765197754
    10. '()
' → logprob: -16.00010871887207

Token 107: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.007636439986526966
    2. 'read' → logprob: -4.882636547088623
    3. ')' → logprob: -10.882636070251465
    4. 'rstrip' → logprob: -12.007636070251465
    5. 'strip' → logprob: -13.007636070251465
    6. 'spl' → logprob: -13.507636070251465
    7. '.readline' → logprob: -14.632636070251465
    8. '__' → logprob: -15.882636070251465
    9. 'write' → logprob: -16.00763702392578
    10. 'plit' → logprob: -16.00763702392578

Token 108: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.060194261372089386
    2. ')' → logprob: -3.060194253921509
    3. '()' → logprob: -4.685194492340088
    4. '))' → logprob: -6.435194492340088
    5. '()))' → logprob: -7.435194492340088
    6. '())
' → logprob: -9.18519401550293
    7. '()
' → logprob: -12.81019401550293
    8. ' ())' → logprob: -12.93519401550293
    9. '(' → logprob: -13.81019401550293
    10. ')
' → logprob: -13.81019401550293

Token 109: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.190926194190979
    2. 'n' → logprob: -1.940926194190979
    3. 'class' → logprob: -3.9409260749816895
    4. 'd' → logprob: -5.1909260749816895
    5. '#' → logprob: -6.1909260749816895
    6. 'N' → logprob: -7.4409260749816895
    7. 'for' → logprob: -7.5659260749816895
    8. 'dp' → logprob: -7.8159260749816895
    9. 'a' → logprob: -7.9409260749816895
    10. '\' → logprob: -8.190926551818848

Token 110: 'ms' (ID: 1782)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0023519801907241344
    2. 'i' → logprob: -7.127351760864258
    3. '(' → logprob: -7.502351760864258
    4. ')' → logprob: -8.377351760864258
    5. '()
' → logprob: -8.752351760864258
    6. '<|end|>' → logprob: -8.752351760864258
    7. '())' → logprob: -9.877351760864258
    8. '()

' → logprob: -10.127351760864258
    9. '()>' → logprob: -10.127351760864258
    10. '()]' → logprob: -10.377351760864258

Token 111: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132794201374054
    2. ' =' → logprob: -1.313279390335083
    3. '=lambda' → logprob: -11.188279151916504
    4. 'a' → logprob: -13.563279151916504
    5. ')' → logprob: -14.063279151916504
    6. ' ' → logprob: -14.938279151916504
    7. '<|end|>' → logprob: -15.688279151916504
    8. 'p' → logprob: -15.938279151916504
    9. '＝' → logprob: -16.06328010559082
    10. 'b' → logprob: -16.31328010559082

Token 112: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1280670017004013
    2. ' lambda' → logprob: -2.1280670166015625
    3. '(lambda' → logprob: -6.8780670166015625
    4. '=lambda' → logprob: -9.253067016601562
    5. 'ambda' → logprob: -12.878067016601562
    6. ' =' → logprob: -13.003067016601562
    7. 'lam' → logprob: -13.128067016601562
    8. '()' → logprob: -13.128067016601562
    9. '_lambda' → logprob: -13.503067016601562
    10. ' lamb' → logprob: -14.253067016601562

Token 113: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5377430319786072
    2. ':' → logprob: -1.162743091583252
    3. ' lambda' → logprob: -2.412743091583252
    4. 'list' → logprob: -5.287743091583252
    5. '():' → logprob: -5.537743091583252
    6. '(lambda' → logprob: -6.287743091583252
    7. ' list' → logprob: -6.287743091583252
    8. ' :' → logprob: -7.912743091583252
    9. 'str' → logprob: -8.537742614746094
    10. '=lambda' → logprob: -8.912742614746094

Token 114: ' map' (ID: 4014)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0981607437133789
    2. 'list' → logprob: -3.223160743713379
    3. 'lambda' → logprob: -3.223160743713379
    4. ' sys' → logprob: -4.598160743713379
    5. 'map' → logprob: -6.098160743713379
    6. ' lambda' → logprob: -6.723160743713379
    7. ' list' → logprob: -8.348160743713379
    8. ' map' → logprob: -10.473160743713379
    9. 'tuple' → logprob: -11.598160743713379
    10. 'str' → logprob: -11.598160743713379

Token 115: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -2.7848862373502925e-05
    2. 'str' → logprob: -10.625027656555176
    3. '(lambda' → logprob: -13.250027656555176
    4. '=str' → logprob: -13.750027656555176
    5. '(int' → logprob: -15.375027656555176
    6. '(' → logprob: -15.500027656555176
    7. '(sys' → logprob: -16.125028610229492
    8. '[str' → logprob: -16.625028610229492
    9. ' str' → logprob: -17.875028610229492
    10. '	str' → logprob: -18.250028610229492

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.774276774493046e-05
    2. ' ,' → logprob: -10.750038146972656
    3. ',s' → logprob: -11.375038146972656
    4. '(),' → logprob: -13.000038146972656
    5. '(sys' → logprob: -14.125038146972656
    6. '=sys' → logprob: -14.125038146972656
    7. ',int' → logprob: -15.000038146972656
    8. ',System' → logprob: -15.625038146972656
    9. 's' → logprob: -16.125038146972656
    10. '(' → logprob: -16.125038146972656

Token 117: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02631806768476963
    2. ' sys' → logprob: -3.651318073272705
    3. '(sys' → logprob: -11.151317596435547
    4. '=sys' → logprob: -13.526317596435547
    5. ')' → logprob: -13.776317596435547
    6. '	sys' → logprob: -14.401317596435547
    7. '.sys' → logprob: -16.651317596435547
    8. 'system' → logprob: -16.776317596435547
    9. 'stdin' → logprob: -16.901317596435547
    10. '/sys' → logprob: -16.901317596435547

Token 118: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00011319868644932285
    2. 'stdin' → logprob: -9.125113487243652
    3. '.' → logprob: -12.750113487243652
    4. '.stdout' → logprob: -13.875113487243652
    5. '.argv' → logprob: -15.375113487243652
    6. '.std' → logprob: -16.875112533569336
    7. '```' → logprob: -17.000112533569336
    8. ' stdin' → logprob: -17.875112533569336
    9. '(stdin' → logprob: -18.000112533569336
    10. '.readline' → logprob: -18.250112533569336

Token 119: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004751934204250574
    2. '.stdin' → logprob: -6.129752159118652
    3. '().' → logprob: -6.379752159118652
    4. 'stdin' → logprob: -7.129752159118652
    5. '.' → logprob: -10.254752159118652
    6. '(stdin' → logprob: -11.004752159118652
    7. '```' → logprob: -12.254752159118652
    8. '()' → logprob: -13.129752159118652
    9. ').' → logprob: -13.379752159118652
    10. '.stdout' → logprob: -13.629752159118652

Token 120: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.3438327843905427e-05
    2. '()' → logprob: -10.87502384185791
    3. '.readline' → logprob: -13.00002384185791
    4. '.split' → logprob: -13.87502384185791
    5. ' ().' → logprob: -14.37502384185791
    6. ' .' → logprob: -15.75002384185791
    7. ')' → logprob: -15.75002384185791
    8. '.' → logprob: -16.125022888183594
    9. ').' → logprob: -16.750022888183594
    10. '())' → logprob: -16.875022888183594

Token 121: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006024802569299936
    2. 'rstrip' → logprob: -7.5006022453308105
    3. 'strip' → logprob: -10.000602722167969
    4. ' split' → logprob: -13.125602722167969
    5. 'read' → logprob: -13.250602722167969
    6. '(split' → logprob: -15.625602722167969
    7. 'spl' → logprob: -15.875602722167969
    8. ')' → logprob: -17.25060272216797
    9. '.split' → logprob: -18.50060272216797
    10. 'decode' → logprob: -18.62560272216797

Token 122: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011979508213698864
    2. ')' → logprob: -5.011979579925537
    3. '()' → logprob: -5.261979579925537
    4. '())
' → logprob: -10.261979103088379
    5. '()))' → logprob: -11.011979103088379
    6. '))' → logprob: -12.136979103088379
    7. ' ())' → logprob: -12.386979103088379
    8. '()
' → logprob: -13.761979103088379
    9. '(' → logprob: -14.136979103088379
    10. '();)' → logprob: -14.386979103088379

Token 123: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06759650260210037
    2. 'class' → logprob: -3.317596435546875
    3. 'n' → logprob: -3.567596435546875
    4. 'd' → logprob: -7.692596435546875
    5. '#' → logprob: -8.567596435546875
    6. 'N' → logprob: -9.067596435546875
    7. 'for' → logprob: -10.692596435546875
    8. '

' → logprob: -11.067596435546875
    9. '
' → logprob: -11.192596435546875
    10. '\' → logprob: -11.442596435546875

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5087942481040955
    2. '=' → logprob: -1.0087943077087402
    3. ',' → logprob: -3.3837943077087402
    4. '=int' → logprob: -9.008793830871582
    5. ' ,' → logprob: -10.008793830871582
    6. ' ' → logprob: -10.633793830871582
    7. '.' → logprob: -12.383793830871582
    8. ' =
' → logprob: -13.133793830871582
    9. '=input' → logprob: -13.633793830871582
    10. ')' → logprob: -14.383793830871582

Token 125: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.05955788493156433
    2. 'read' → logprob: -3.4345579147338867
    3. ' int' → logprob: -4.309557914733887
    4. ' ' → logprob: -4.559557914733887
    5. 'int' → logprob: -6.434557914733887
    6. '10' → logprob: -9.934557914733887
    7. '	read' → logprob: -12.809557914733887
    8. '0' → logprob: -13.184557914733887
    9. '<|end|>' → logprob: -13.434557914733887
    10. '  ' → logprob: -13.684557914733887

Token 126: 'i' (ID: 72)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007512215059250593
    2. ' ()' → logprob: -5.632512092590332
    3. '(' → logprob: -6.257512092590332
    4. ')' → logprob: -6.882512092590332
    5. ' ' → logprob: -7.507512092590332
    6. ',' → logprob: -9.257512092590332
    7. '()
' → logprob: -9.882512092590332
    8. '=' → logprob: -10.132512092590332
    9. '()>' → logprob: -10.382512092590332
    10. '()\' → logprob: -10.507512092590332

Token 127: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: 't' (ID: 83)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21527715027332306
    2. 'arr' → logprob: -2.8402771949768066
    3. 'data' → logprob: -2.8402771949768066
    4. 's' → logprob: -3.5902771949768066
    5. 'd' → logprob: -3.7152771949768066
    6. 'lst' → logprob: -4.340277194976807
    7. 'A' → logprob: -5.715277194976807
    8. '<|end|>' → logprob: -6.840277194976807
    9. 'items' → logprob: -7.215277194976807
    10. 'n' → logprob: -7.340277194976807

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4407750368118286
    2. 'imes' → logprob: -1.8157750368118286
    3. '=' → logprob: -1.9407750368118286
    4. 'okens' → logprob: -4.065774917602539
    5. 'asks' → logprob: -4.065774917602539
    6. 'ime' → logprob: -5.565774917602539
    7. 's' → logprob: -6.690774917602539
    8. ',' → logprob: -6.690774917602539
    9. 'emp' → logprob: -7.065774917602539
    10. 'emps' → logprob: -7.065774917602539

Token 130: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.5296860933303833
    2. ' [' → logprob: -2.0296859741210938
    3. ' []' → logprob: -2.1546859741210938
    4. 'read' → logprob: -2.2796859741210938
    5. '[]' → logprob: -3.0296859741210938
    6. '[' → logprob: -5.029685974121094
    7. ' list' → logprob: -6.529685974121094
    8. 'uple' → logprob: -6.654685974121094
    9. '[n' → logprob: -6.779685974121094
    10. '[int' → logprob: -7.404685974121094

Token 131: 'l' (ID: 75)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.420030415058136
    2. '.strip' → logprob: -2.045030355453491
    3. '.split' → logprob: -2.045030355453491
    4. '=' → logprob: -4.42003059387207
    5. '<|end|>' → logprob: -4.54503059387207
    6. '.rstrip' → logprob: -4.79503059387207
    7. '.' → logprob: -4.92003059387207
    8. ' =' → logprob: -5.04503059387207
    9. '().' → logprob: -5.04503059387207
    10. ')' → logprob: -5.54503059387207

Token 132: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: 'left' (ID: 4530)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010191502049565315
    2. '#' → logprob: -5.635191440582275
    3. '
' → logprob: -6.135191440582275
    4. ' 
' → logprob: -7.135191440582275
    5. '[' → logprob: -7.510191440582275
    6. ' ' → logprob: -7.635191440582275
    7. '\n' → logprob: -8.010191917419434
    8. 'n' → logprob: -8.260191917419434
    9. '

' → logprob: -8.260191917419434
    10. '=' → logprob: -8.510191917419434

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4751671552658081
    2. ',' → logprob: -1.225167155265808
    3. '=' → logprob: -2.7251672744750977
    4. ' ,' → logprob: -5.225167274475098
    5. '_' → logprob: -5.475167274475098
    6. 's' → logprob: -6.350167274475098
    7. '_idx' → logprob: -6.850167274475098
    8. '_count' → logprob: -7.100167274475098
    9. ' ' → logprob: -7.725167274475098
    10. '_counts' → logprob: -7.725167274475098

Token 135: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018317768117412925
    2. ' ' → logprob: -6.501832008361816
    3. '[' → logprob: -9.126832008361816
    4. '1' → logprob: -9.501832008361816
    5. '[]' → logprob: -10.626832008361816
    6. '-' → logprob: -11.001832008361816
    7. 't' → logprob: -11.251832008361816
    8. '=' → logprob: -11.251832008361816
    9. 'deque' → logprob: -11.251832008361816
    10. '(' → logprob: -11.376832008361816

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023982475977391005
    2. '[' → logprob: -7.1273980140686035
    3. '-' → logprob: -7.7523980140686035
    4. '{}' → logprob: -8.252398490905762
    5. 'deque' → logprob: -8.252398490905762
    6. '[]' → logprob: -8.502398490905762
    7. '1' → logprob: -9.377398490905762
    8. 't' → logprob: -10.002398490905762
    9. 'default' → logprob: -10.002398490905762
    10. 'right' → logprob: -10.252398490905762

Token 137: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.604620099067688
    2. '<|end|>' → logprob: -1.104620099067688
    3. 'right' → logprob: -3.2296199798583984
    4. ' ' → logprob: -3.7296199798583984
    5. ' 
' → logprob: -3.9796199798583984
    6. ',' → logprob: -3.9796199798583984
    7. ' right' → logprob: -5.104619979858398
    8. '<|end|>' → logprob: -5.729619979858398
    9. ',right' → logprob: -6.104619979858398
    10. '+' → logprob: -6.604619979858398

Token 138: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.13243313133716583
    2. '
' → logprob: -2.2574331760406494
    3. ' right' → logprob: -4.25743293762207
    4. 'total' → logprob: -6.13243293762207
    5. 'max' → logprob: -6.88243293762207
    6. ' 
' → logprob: -7.63243293762207
    7. 'result' → logprob: -8.00743293762207
    8. 'sum' → logprob: -8.25743293762207
    9. 'ans' → logprob: -8.75743293762207
    10. 'answer' → logprob: -9.00743293762207

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519644796848297
    2. '=' → logprob: -1.5019644498825073
    3. '=n' → logprob: -10.751964569091797
    4. '=len' → logprob: -11.251964569091797
    5. 'n' → logprob: -15.376964569091797
    6. ',' → logprob: -15.501964569091797
    7. ' ' → logprob: -16.126964569091797
    8. '=max' → logprob: -16.751964569091797
    9. '＝' → logprob: -16.751964569091797
    10. '=int' → logprob: -16.751964569091797

Token 140: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8232870697975159
    2. 'max' → logprob: -1.198287010192871
    3. '10' → logprob: -1.948287010192871
    4. '0' → logprob: -3.198287010192871
    5. 'len' → logprob: -3.323287010192871
    6. 'sum' → logprob: -3.448287010192871
    7. ' n' → logprob: -5.573287010192871
    8. ' max' → logprob: -6.448287010192871
    9. '100' → logprob: -7.073287010192871
    10. ' ' → logprob: -7.323287010192871

Token 141: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29181787371635437
    2. '10' → logprob: -2.0418179035186768
    3. 'max' → logprob: -2.7918179035186768
    4. 'len' → logprob: -3.5418179035186768
    5. '0' → logprob: -4.166817665100098
    6. 'sum' → logprob: -4.166817665100098
    7. '1' → logprob: -7.166817665100098
    8. '100' → logprob: -7.291817665100098
    9. 'int' → logprob: -7.916817665100098
    10. ' n' → logprob: -10.166817665100098

Token 142: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0020449827425181866
    2. 'while' → logprob: -7.752045154571533
    3. ' 
' → logprob: -7.877045154571533
    4. '<|end|>' → logprob: -8.127044677734375
    5. '0' → logprob: -8.252044677734375
    6. 'max' → logprob: -8.627044677734375
    7. 'total' → logprob: -9.127044677734375
    8. 'sum' → logprob: -9.252044677734375
    9. '
' → logprob: -9.627044677734375
    10. 'n' → logprob: -10.377044677734375

Token 143: 'mx' (ID: 32467)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06102023646235466
    2. 'max' → logprob: -2.9360201358795166
    3. 'sum' → logprob: -6.311020374298096
    4. 'result' → logprob: -6.561020374298096
    5. 'total' → logprob: -7.186020374298096
    6. 'while' → logprob: -7.561020374298096
    7. 'best' → logprob: -8.061019897460938
    8. 'ans' → logprob: -8.436019897460938
    9. 'current' → logprob: -8.436019897460938
    10. '
' → logprob: -9.311019897460938

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.052857283502817154
    2. '=' → logprob: -3.5528573989868164
    3. 'x' → logprob: -3.9278573989868164
    4. 'sum' → logprob: -6.677857398986816
    5. '_sum' → logprob: -7.427857398986816
    6. 'ax' → logprob: -7.552857398986816
    7. '_len' → logprob: -8.552857398986816
    8. '_' → logprob: -8.927857398986816
    9. '_length' → logprob: -9.802857398986816
    10. 'len' → logprob: -10.302857398986816

Token 145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2712057828903198
    2. 't' → logprob: -1.5212057828903198
    3. '-' → logprob: -4.146205902099609
    4. 'float' → logprob: -6.646205902099609
    5. 'max' → logprob: -6.771205902099609
    6. '-t' → logprob: -8.27120590209961
    7. ' ' → logprob: -8.52120590209961
    8. ' t' → logprob: -8.77120590209961
    9. '-max' → logprob: -9.52120590209961
    10. '1' → logprob: -9.89620590209961

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2533557116985321
    2. 't' → logprob: -1.6283557415008545
    3. '-' → logprob: -3.6283557415008545
    4. 'float' → logprob: -7.503355503082275
    5. '1' → logprob: -8.378355979919434
    6. 'max' → logprob: -9.378355979919434
    7. 'math' → logprob: -10.753355979919434
    8. '-t' → logprob: -10.753355979919434
    9. 'mx' → logprob: -11.253355979919434
    10. '-m' → logprob: -11.503355979919434

Token 147: '
' (ID: 198)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3013617992401123
    2. 'while' → logprob: -2.0513617992401123
    3. 'curr' → logprob: -2.5513617992401123
    4. 'cur' → logprob: -3.4263617992401123
    5. 'for' → logprob: -4.926362037658691
    6. 'sum' → logprob: -5.176362037658691
    7. 'total' → logprob: -5.676362037658691
    8. 's' → logprob: -6.551362037658691
    9. 'acc' → logprob: -6.926362037658691
    10. 'cum' → logprob: -7.426362037658691

Token 148: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.24097274243831635
    2. 'curr' → logprob: -2.1159727573394775
    3. 'cur' → logprob: -3.3659727573394775
    4. 'while' → logprob: -3.3659727573394775
    5. 's' → logprob: -4.865972518920898
    6. 'total' → logprob: -5.615972518920898
    7. 'sum' → logprob: -5.740972518920898
    8. 'acc' → logprob: -6.365972518920898
    9. 'c' → logprob: -6.365972518920898
    10. 'for' → logprob: -6.990972518920898

Token 149: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.008538100868463516
    2. '_' → logprob: -5.133538246154785
    3. ' =' → logprob: -6.383538246154785
    4. '=' → logprob: -7.633538246154785
    5. 'sum' → logprob: -8.258538246154785
    6. '_length' → logprob: -9.758538246154785
    7. 'Sum' → logprob: -10.258538246154785
    8. '_=' → logprob: -11.133538246154785
    9. '_s' → logprob: -11.383538246154785
    10. '_len' → logprob: -11.508538246154785

Token 150: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00967168714851141
    2. 't' → logprob: -5.259671688079834
    3. '{}' → logprob: -5.509671688079834
    4. ' ' → logprob: -8.259671211242676
    5. 'default' → logprob: -9.634671211242676
    6. '{' → logprob: -10.759671211242676
    7. ' t' → logprob: -11.509671211242676
    8. ' defaultdict' → logprob: -11.759671211242676
    9. '[]' → logprob: -12.884671211242676
    10. '1' → logprob: -13.009671211242676

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010957146063446999
    2. '{}' → logprob: -5.38595724105835
    3. 'default' → logprob: -5.76095724105835
    4. 't' → logprob: -5.88595724105835
    5. 'deque' → logprob: -8.760956764221191
    6. 'set' → logprob: -9.385956764221191
    7. '{' → logprob: -9.635956764221191
    8. ' defaultdict' → logprob: -10.260956764221191
    9. '[]' → logprob: -11.260956764221191
    10. ' ' → logprob: -11.510956764221191

Token 152: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.410214364528656
    2. 'while' → logprob: -1.7852144241333008
    3. '\n' → logprob: -3.035214424133301
    4. ':' → logprob: -3.035214424133301
    5. ' while' → logprob: -3.535214424133301
    6. '<|end|>' → logprob: -4.160214424133301
    7. ' 
' → logprob: -4.410214424133301
    8. ':
' → logprob: -4.785214424133301
    9. 'for' → logprob: -6.035214424133301
    10. ' ' → logprob: -6.660214424133301

Token 153: 'if' (ID: 366)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.006023125723004341
    2. 'for' → logprob: -5.131022930145264
    3. ' while' → logprob: -9.381023406982422
    4. '<|end|>' → logprob: -11.756023406982422
    5. '	while' → logprob: -14.131023406982422
    6. 'While' → logprob: -14.756023406982422
    7. '<|end|>' → logprob: -15.256023406982422
    8. 'n' → logprob: -15.381023406982422
    9. '
' → logprob: -15.381023406982422
    10. ' for' → logprob: -15.631023406982422

Token 154: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.805346667766571
    2. ' t' → logprob: -0.930346667766571
    3. 'n' → logprob: -2.430346727371216
    4. 't' → logprob: -3.180346727371216
    5. ' right' → logprob: -3.930346727371216
    6. ' left' → logprob: -5.555346488952637
    7. 'right' → logprob: -5.805346488952637
    8. 'left' → logprob: -6.930346488952637
    9. ' len' → logprob: -7.930346488952637
    10. ' ' → logprob: -8.055346488952637

Token 155: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14463961124420166
    2. '>' → logprob: -2.019639492034912
    3. ' ==' → logprob: -7.144639492034912
    4. ' ' → logprob: -7.519639492034912
    5. ' >=' → logprob: -8.01963996887207
    6. '==' → logprob: -9.01963996887207
    7. ':' → logprob: -9.89463996887207
    8. ' <' → logprob: -10.14463996887207
    9. '>=' → logprob: -10.26963996887207
    10. '[' → logprob: -10.89463996887207

Token 156: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20372317731380463
    2. '0' → logprob: -1.7037231922149658
    3. ' ' → logprob: -6.078722953796387
    4. '2' → logprob: -11.828722953796387
    5. 'left' → logprob: -12.703722953796387
    6. ')' → logprob: -13.391222953796387
    7. '  ' → logprob: -14.891222953796387
    8. '   ' → logprob: -14.891222953796387
    9. '    ' → logprob: -15.078722953796387
    10. 'right' → logprob: -15.266222953796387

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20152053236961365
    2. '0' → logprob: -1.701520562171936
    3. ' ' → logprob: -9.326520919799805
    4. '   ' → logprob: -12.076520919799805
    5. '2' → logprob: -12.201520919799805
    6. '    ' → logprob: -13.451520919799805
    7. '  ' → logprob: -13.764020919799805
    8. '```' → logprob: -13.889020919799805
    9. 'single' → logprob: -15.264020919799805
    10. '        ' → logprob: -15.451520919799805

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029764382168650627
    2. ':
' → logprob: -3.529764413833618
    3. ' and' → logprob: -11.529764175415039
    4. ' :' → logprob: -13.654764175415039
    5. 'and' → logprob: -14.279764175415039
    6. ':

' → logprob: -14.654764175415039
    7. ':return' → logprob: -14.654764175415039
    8. ' :
' → logprob: -14.904764175415039
    9. ':
' → logprob: -15.154764175415039
    10. '.' → logprob: -16.02976417541504

Token 159: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5424396395683289
    2. '   ' → logprob: -1.9174396991729736
    3. '
' → logprob: -2.0424396991729736
    4. ' print' → logprob: -2.6674396991729736
    5. '\n' → logprob: -3.2924396991729736
    6. 'mx' → logprob: -4.0424394607543945
    7. 'current' → logprob: -5.2924394607543945
    8. ' mx' → logprob: -5.7924394607543945
    9. '	print' → logprob: -6.0424394607543945
    10. ' 
' → logprob: -6.2924394607543945

Token 160: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005483825691044331
    2. ' print' → logprob: -5.880483627319336
    3. 'mx' → logprob: -6.130483627319336
    4. '   ' → logprob: -8.005483627319336
    5. 'current' → logprob: -9.005483627319336
    6. ' mx' → logprob: -10.505483627319336
    7. '
' → logprob: -11.880483627319336
    8. '0' → logprob: -12.755483627319336
    9. ' current' → logprob: -13.005483627319336
    10. '```' → logprob: -14.130483627319336

Token 161: '(' (ID: 7)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0006199848721735179
    2. '(' → logprob: -7.875619888305664
    3. 't' → logprob: -8.375619888305664
    4. ' (' → logprob: -12.375619888305664
    5. '((' → logprob: -13.375619888305664
    6. '(max' → logprob: -13.875619888305664
    7. '(*' → logprob: -14.125619888305664
    8. ' t' → logprob: -15.000619888305664
    9. '('' → logprob: -15.125619888305664
    10. '(f' → logprob: -15.625619888305664

Token 162: '0' (ID: 15)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005541055579669774
    2. '1' → logprob: -8.250554084777832
    3. '0' → logprob: -8.375554084777832
    4. 'max' → logprob: -9.875554084777832
    5. ' t' → logprob: -11.750554084777832
    6. '(t' → logprob: -14.375554084777832
    7. 'abs' → logprob: -15.000554084777832
    8. 'mx' → logprob: -15.000554084777832
    9. ')' → logprob: -15.125554084777832
    10. ')t' → logprob: -15.375554084777832

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20150260627269745
    2. ')
' → logprob: -1.7015025615692139
    3. '
' → logprob: -9.576502799987793
    4. ')
' → logprob: -12.076502799987793
    5. ' )' → logprob: -12.076502799987793
    6. ')return' → logprob: -12.451502799987793
    7. ' )
' → logprob: -13.076502799987793
    8. '   ' → logprob: -14.201502799987793
    9. ')

' → logprob: -14.326502799987793
    10. '')' → logprob: -15.201502799987793

Token 164: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07904445379972458
    2. '
' → logprob: -2.8290443420410156
    3. 'exit' → logprob: -4.704044342041016
    4. ' 
' → logprob: -5.704044342041016
    5. '    
' → logprob: -6.579044342041016
    6. 'elif' → logprob: -6.954044342041016
    7. '   ' → logprob: -6.954044342041016
    8. ' else' → logprob: -7.829044342041016
    9. ' exit' → logprob: -8.329044342041016
    10. '  
' → logprob: -8.704044342041016

Token 165: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.1418667584657669
    2. 'sys' → logprob: -2.141866683959961
    3. 'else' → logprob: -4.766866683959961
    4. '   ' → logprob: -5.141866683959961
    5. ' exit' → logprob: -9.016866683959961
    6. ' sys' → logprob: -9.016866683959961
    7. '	exit' → logprob: -9.266866683959961
    8. 'import' → logprob: -10.141866683959961
    9. 'quit' → logprob: -10.141866683959961
    10. '
' → logprob: -11.391866683959961

Token 166: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0031699873507022858
    2. '\n' → logprob: -6.378170013427734
    3. '

' → logprob: -7.003170013427734
    4. '
' → logprob: -8.253170013427734
    5. ' 
' → logprob: -8.378170013427734
    6. '  
' → logprob: -10.503170013427734
    7. '<|end|>' → logprob: -11.253170013427734
    8. '    
' → logprob: -12.003170013427734
    9. '```' → logprob: -12.628170013427734
    10. ')' → logprob: -12.753170013427734

Token 167: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.23384332656860352
    2. ' while' → logprob: -1.7338433265686035
    3. ':' → logprob: -3.9838433265686035
    4. 'for' → logprob: -4.8588433265686035
    5. ' for' → logprob: -6.2338433265686035
    6. '<|end|>' → logprob: -6.2338433265686035
    7. '
' → logprob: -7.9838433265686035
    8. ' ' → logprob: -8.108842849731445
    9. 'else' → logprob: -8.483842849731445
    10. '<|end|>' → logprob: -8.608842849731445

Token 168: ' True' (ID: 6432)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.0019971546716988087
    2. 'right' → logprob: -6.251996994018555
    3. ' left' → logprob: -10.001996994018555
    4. ' True' → logprob: -11.501996994018555
    5. '(right' → logprob: -12.376996994018555
    6. '	right' → logprob: -12.876996994018555
    7. ' ' → logprob: -13.001996994018555
    8. ' current' → logprob: -13.876996994018555
    9. 'True' → logprob: -14.376996994018555
    10. 'Right' → logprob: -14.626996994018555

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00040409780922345817
    2. ':
' → logprob: -7.875403881072998
    3. ' :' → logprob: -10.875404357910156
    4. '   ' → logprob: -12.750404357910156
    5. '):' → logprob: -14.250404357910156
    6. '<|end|>' → logprob: -15.125404357910156
    7. ':

' → logprob: -15.250404357910156
    8. '():' → logprob: -15.750404357910156
    9. '=' → logprob: -15.750404357910156
    10. ' :
' → logprob: -15.875404357910156

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000464035285403952
    2. ' if' → logprob: -7.750463962554932
    3. ' current' → logprob: -12.00046443939209
    4. '    ' → logprob: -12.12546443939209
    5. '    
' → logprob: -12.25046443939209
    6. '   ' → logprob: -12.50046443939209
    7. ' while' → logprob: -12.62546443939209
    8. '	if' → logprob: -12.87546443939209
    9. 'if' → logprob: -13.37546443939209
    10. '<|end|>' → logprob: -13.62546443939209

Token 171: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2553538382053375
    2. 'if' (adapté à ' if') → logprob: -1.8803538084030151
    3. 'current' → logprob: -3.5053539276123047
    4. 'right' → logprob: -4.130353927612305
    5. ' if' → logprob: -4.505353927612305
    6. ' current' → logprob: -4.630353927612305
    7. ' right' → logprob: -5.380353927612305
    8. 't' → logprob: -7.755353927612305
    9. '
' → logprob: -8.505353927612305
    10. '    
' → logprob: -8.880353927612305

Token 172: ' t' (ID: 260)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5336976647377014
    2. ' right' → logprob: -0.9086976647377014
    3. ' current' → logprob: -5.033697605133057
    4. 'current' → logprob: -6.283697605133057
    5. ' t' → logprob: -6.783697605133057
    6. 't' → logprob: -7.158697605133057
    7. 'left' → logprob: -9.533698081970215
    8. ' ' → logprob: -10.283698081970215
    9. '   ' → logprob: -10.533698081970215
    10. '	right' → logprob: -10.533698081970215

Token 173: '[left' (ID: 98859)
  Prédit: '[right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.006081187631934881
    2. '[left' → logprob: -5.1310811042785645
    3. '[' → logprob: -9.256081581115723
    4. 'right' → logprob: -10.131081581115723
    5. ' [' → logprob: -12.256081581115723
    6. '[current' → logprob: -12.881081581115723
    7. '   ' → logprob: -12.881081581115723
    8. ' right' → logprob: -13.506081581115723
    9. ':right' → logprob: -13.506081581115723
    10. '	right' → logprob: -14.256081581115723

Token 174: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07273852080106735
    2. ']==' → logprob: -3.4477384090423584
    3. '==' → logprob: -3.9477384090423584
    4. '[' → logprob: -5.3227386474609375
    5. '<' → logprob: -5.4477386474609375
    6. ']!=' → logprob: -5.8227386474609375
    7. '!=' → logprob: -6.0727386474609375
    8. '<=' → logprob: -7.0727386474609375
    9. ']<=' → logprob: -7.3227386474609375
    10. ' ==' → logprob: -7.3227386474609375

Token 175: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8067629337310791
    2. '<' → logprob: -1.556762933731079
    3. '!=' → logprob: -1.556762933731079
    4. ' ==' → logprob: -3.181762933731079
    5. ' !=' → logprob: -3.556762933731079
    6. '<=' → logprob: -3.681762933731079
    7. ' <' → logprob: -4.3067626953125
    8. '+' → logprob: -4.6817626953125
    9. '>=' → logprob: -5.4317626953125
    10. '>' → logprob: -5.5567626953125

Token 176: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0006086751818656921
    2. ' t' → logprob: -8.250608444213867
    3. 'right' → logprob: -9.000608444213867
    4. 'current' → logprob: -9.375608444213867
    5. '0' → logprob: -9.500608444213867
    6. '1' → logprob: -10.750608444213867
    7. '2' → logprob: -10.875608444213867
    8. '   ' → logprob: -12.750608444213867
    9. 'mx' → logprob: -12.875608444213867
    10. '100' → logprob: -13.000608444213867

Token 177: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.0001996066712308675
    2. '[left' → logprob: -8.625199317932129
    3. '   ' → logprob: -11.875199317932129
    4. 'right' → logprob: -12.000199317932129
    5. '[' → logprob: -12.500199317932129
    6. ' ' → logprob: -14.625199317932129
    7. ':right' → logprob: -14.625199317932129
    8. ',right' → logprob: -14.875199317932129
    9. ' [' → logprob: -15.000199317932129
    10. '
' → logprob: -15.000199317932129

Token 178: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.013476423919200897
    2. ']:
' → logprob: -4.888476371765137
    3. ':' → logprob: -5.263476371765137
    4. ']' → logprob: -8.138476371765137
    5. ' ]' → logprob: -9.388476371765137
    6. '   ' → logprob: -9.638476371765137
    7. ']:
' → logprob: -10.138476371765137
    8. '-' → logprob: -10.513476371765137
    9. ']+' → logprob: -10.513476371765137
    10. ':
' → logprob: -10.763476371765137

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008048642775975168
    2. '   ' → logprob: -7.250804901123047
    3. 'left' → logprob: -10.125804901123047
    4. 'right' → logprob: -10.750804901123047
    5. ' left' → logprob: -11.250804901123047
    6. ' right' → logprob: -12.750804901123047
    7. 'current' → logprob: -12.875804901123047
    8. '      ' → logprob: -13.375804901123047
    9. ',' → logprob: -13.500804901123047
    10. ':' → logprob: -13.500804901123047

Token 180: ' current' (ID: 2208)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7158617377281189
    2. 'current' (adapté à ' current') → logprob: -1.0908617973327637
    3. '   ' → logprob: -2.4658617973327637
    4. 'mx' → logprob: -2.4658617973327637
    5. 'right' → logprob: -5.465861797332764
    6. 'if' → logprob: -8.090861320495605
    7. '
' → logprob: -8.215861320495605
    8. 'max' → logprob: -8.590861320495605
    9. 'break' → logprob: -9.090861320495605
    10. '       ' → logprob: -9.340861320495605

Token 181: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.099405288696289
    2. '+=' → logprob: -1.349405288696289
    3. ' =' → logprob: -1.474405288696289
    4. ' +=' → logprob: -1.724405288696289
    5. ' -=' → logprob: -8.849405288696289
    6. '-=' → logprob: -9.349405288696289
    7. '+' → logprob: -10.724405288696289
    8. '   ' → logprob: -10.974405288696289
    9. ' ' → logprob: -11.349405288696289
    10. ']+=' → logprob: -11.474405288696289

Token 182: ' ' (ID: 220)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07452327013015747
    2. '1' → logprob: -2.9495232105255127
    3. 'right' → logprob: -4.449523448944092
    4. '(t' → logprob: -5.199523448944092
    5. 'mx' → logprob: -7.199523448944092
    6. ' t' → logprob: -7.449523448944092
    7. '(mx' → logprob: -8.699522972106934
    8. 'abs' → logprob: -8.824522972106934
    9. '(right' → logprob: -8.949522972106934
    10. ' ' → logprob: -9.074522972106934

Token 183: '1' (ID: 16)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2811482846736908
    2. '1' → logprob: -1.5311483144760132
    3. '(t' → logprob: -4.031148433685303
    4. 'right' → logprob: -4.656148433685303
    5. '(' → logprob: -7.781148433685303
    6. ' t' → logprob: -8.031147956848145
    7. '(right' → logprob: -8.031147956848145
    8. 'abs' → logprob: -8.531147956848145
    9. ' ' → logprob: -9.906147956848145
    10. '0' → logprob: -10.281147956848145

Token 184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030807817354798317
    2. '   ' → logprob: -3.5308077335357666
    3. '
' → logprob: -7.530807971954346
    4. 'right' → logprob: -7.905807971954346
    5. 'left' → logprob: -9.905807495117188
    6. 'else' → logprob: -10.780807495117188
    7. '        
' → logprob: -11.155807495117188
    8. 'elif' → logprob: -11.655807495117188
    9. ' right' → logprob: -11.780807495117188
    10. ',' → logprob: -11.780807495117188

Token 185: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5442487001419067
    2. '   ' → logprob: -1.1692487001419067
    3. '       ' → logprob: -2.919248580932617
    4. 'left' → logprob: -3.044248580932617
    5. '
' → logprob: -5.794248580932617
    6. 'else' → logprob: -6.044248580932617
    7. ' right' → logprob: -7.294248580932617
    8. 'elif' → logprob: -7.919248580932617
    9. 'if' → logprob: -8.169248580932617
    10. '	right' → logprob: -8.794248580932617

Token 186: ' mx' (ID: 28004)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0026446215342730284
    2. 'left' → logprob: -7.0026445388793945
    3. 'mx' (adapté à ' mx') → logprob: -7.3776445388793945
    4. 'if' → logprob: -7.7526445388793945
    5. '   ' → logprob: -8.002644538879395
    6. ' right' → logprob: -8.127644538879395
    7. 'current' → logprob: -11.377644538879395
    8. 'max' → logprob: -11.752644538879395
    9. '	right' → logprob: -11.752644538879395
    10. '
' → logprob: -12.377644538879395

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520514726638794
    2. '=' → logprob: -1.5020514726638794
    3. '=max' → logprob: -9.12705135345459
    4. 'max' → logprob: -11.25205135345459
    5. ' max' → logprob: -14.87705135345459
    6. ' ' → logprob: -16.752052307128906
    7. '(max' → logprob: -16.752052307128906
    8. '[max' → logprob: -17.127052307128906
    9. '=current' → logprob: -17.502052307128906
    10. 'current' → logprob: -17.502052307128906

Token 188: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0015104549238458276
    2. ' max' → logprob: -6.5015106201171875
    3. 'current' → logprob: -11.751510620117188
    4. '	max' → logprob: -15.501510620117188
    5. '(max' → logprob: -16.626510620117188
    6. ' current' → logprob: -17.126510620117188
    7. '=max' → logprob: -17.751510620117188
    8. '[max' → logprob: -18.126510620117188
    9. 'min' → logprob: -18.501510620117188
    10. '
' → logprob: -19.126510620117188

Token 189: '(current' (ID: 15023)
  Prédit: '(mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mx' → logprob: -0.00033951509976759553
    2. '(current' → logprob: -8.00033950805664
    3. '(' → logprob: -12.50033950805664
    4. 'mx' → logprob: -15.25033950805664
    5. 'current' → logprob: -16.37533950805664
    6. '(mc' → logprob: -17.25033950805664
    7. '(max' → logprob: -17.75033950805664
    8. '(
' → logprob: -18.25033950805664
    9. '()' → logprob: -18.37533950805664
    10. '(curr' → logprob: -18.87533950805664

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34913530945777893
    2. ')' → logprob: -1.2241352796554565
    3. ',
' → logprob: -8.849135398864746
    4. ' )' → logprob: -8.849135398864746
    5. ')
' → logprob: -8.974135398864746
    6. ' ,' → logprob: -9.099135398864746
    7. ',)' → logprob: -9.224135398864746
    8. '   ' → logprob: -10.724135398864746
    9. ',current' → logprob: -10.724135398864746
    10. ',right' → logprob: -12.349135398864746

Token 191: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.05489446595311165
    2. ' mx' → logprob: -2.92989444732666
    3. '(mx' → logprob: -12.05489444732666
    4. '   ' → logprob: -12.55489444732666
    5. ' ' → logprob: -13.42989444732666
    6. '.mx' → logprob: -15.30489444732666
    7. '  ' → logprob: -15.55489444732666
    8. ')' → logprob: -15.80489444732666
    9. '
' → logprob: -15.92989444732666
    10. '    ' → logprob: -15.92989444732666

Token 192: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06252774596214294
    2. ')' → logprob: -2.812527656555176
    3. '   ' → logprob: -7.937527656555176
    4. '       ' → logprob: -9.062527656555176
    5. ')
' → logprob: -9.937527656555176
    6. ' )
' → logprob: -10.312527656555176
    7. ')

' → logprob: -13.187527656555176
    8. ' )' → logprob: -13.687527656555176
    9. '```' → logprob: -14.437527656555176
    10. '
' → logprob: -14.937527656555176

Token 193: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30604657530784607
    2. 'right' → logprob: -1.4310466051101685
    3. '   ' → logprob: -3.806046485900879
    4. ' right' → logprob: -6.556046485900879
    5. 'left' → logprob: -7.681046485900879
    6. '        
' → logprob: -9.181046485900879
    7. '	right' → logprob: -9.431046485900879
    8. '
' → logprob: -9.556046485900879
    9. '    
' → logprob: -10.181046485900879
    10. ',right' → logprob: -10.431046485900879

Token 194: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.22926056385040283
    2. '   ' → logprob: -1.6042605638504028
    3. ' else' → logprob: -6.104260444641113
    4. 'elif' → logprob: -6.979260444641113
    5. 'right' → logprob: -7.729260444641113
    6. 'left' → logprob: -8.854260444641113
    7. '       ' → logprob: -9.729260444641113
    8. '	else' → logprob: -11.604260444641113
    9. '```' → logprob: -11.979260444641113
    10. '    
' → logprob: -12.604260444641113

Token 195: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015191596932709217
    2. ':
' → logprob: -4.890191555023193
    3. '   ' → logprob: -5.390191555023193
    4. 'current' → logprob: -6.140191555023193
    5. ':' → logprob: -7.515191555023193
    6. ' current' → logprob: -9.140192031860352
    7. '
' → logprob: -9.640192031860352
    8. '):
' → logprob: -9.765192031860352
    9. ',' → logprob: -10.390192031860352
    10. '```' → logprob: -12.265192031860352

Token 196: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.576991856098175
    2. '       ' → logprob: -1.0769917964935303
    3. '   ' → logprob: -2.3269917964935303
    4. 'left' → logprob: -9.32699203491211
    5. ' current' → logprob: -9.45199203491211
    6. 'right' → logprob: -10.57699203491211
    7. '	current' → logprob: -11.70199203491211
    8. '
' → logprob: -12.57699203491211
    9. '           ' → logprob: -14.57699203491211
    10. '	' → logprob: -15.07699203491211

Token 197: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.0401911735534668
    2. '   ' → logprob: -3.290191173553467
    3. ' current' → logprob: -6.540191173553467
    4. 'left' → logprob: -7.415191173553467
    5. '       ' → logprob: -10.165191650390625
    6. 'right' → logprob: -10.790191650390625
    7. 'mx' → logprob: -10.915191650390625
    8. '
' → logprob: -11.665191650390625
    9. '	current' → logprob: -11.665191650390625
    10. ' left' → logprob: -13.540191650390625

Token 198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023252584040164948
    2. ' =' → logprob: -3.773252487182617
    3. '+=' → logprob: -12.148252487182617
    4. ' +=' → logprob: -13.898252487182617
    5. '   ' → logprob: -14.773252487182617
    6. ' ' → logprob: -16.523252487182617
    7. '.=' → logprob: -16.523252487182617
    8. '       ' → logprob: -16.773252487182617
    9. '-=' → logprob: -16.773252487182617
    10. '    ' → logprob: -16.773252487182617

Token 199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010900930501520634
    2. '1' → logprob: -7.251090049743652
    3. ' ' → logprob: -7.876090049743652
    4. '   ' → logprob: -16.06359100341797
    5. '
' → logprob: -16.75109100341797
    6. ' ' → logprob: -17.06359100341797
    7. 'left' → logprob: -17.18859100341797
    8. 'right' → logprob: -17.50109100341797
    9. 'reset' → logprob: -17.62609100341797
    10. '

' → logprob: -17.68859100341797

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021954562980681658
    2. '1' → logprob: -6.127195358276367
    3. ' ' → logprob: -11.627195358276367
    4. 'right' → logprob: -14.127195358276367
    5. '
' → logprob: -15.564695358276367
    6. '   ' → logprob: -15.877195358276367
    7. 'left' → logprob: -16.502195358276367
    8. '  ' → logprob: -17.877195358276367
    9. '```' → logprob: -17.877195358276367
    10. '-' → logprob: -17.939695358276367

Token 201: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002844576956704259
    2. 'right' → logprob: -9.000284194946289
    3. '    
' → logprob: -9.875284194946289
    4. ' right' → logprob: -10.250284194946289
    5. 'left' → logprob: -10.375284194946289
    6. '
' → logprob: -10.875284194946289
    7. ' left' → logprob: -11.000284194946289
    8. '       ' → logprob: -13.000284194946289
    9. 'if' → logprob: -13.375284194946289
    10. '        
' → logprob: -14.000284194946289

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25490936636924744
    2. 'right' → logprob: -1.5049093961715698
    3. 'left' → logprob: -6.129909515380859
    4. ' right' → logprob: -7.754909515380859
    5. 'if' → logprob: -8.12990951538086
    6. '	right' → logprob: -10.25490951538086
    7. '    
' → logprob: -11.50490951538086
    8. ' left' → logprob: -11.87990951538086
    9. '
' → logprob: -12.00490951538086
    10. ',right' → logprob: -12.25490951538086

Token 203: ' left' (ID: 3561)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2149035632610321
    2. '   ' → logprob: -1.9649035930633545
    3. 'left' (adapté à ' left') → logprob: -2.9649035930633545
    4. 'if' → logprob: -6.464903354644775
    5. ' right' → logprob: -9.714903831481934
    6. ' left' → logprob: -11.589903831481934
    7. '    
' → logprob: -11.839903831481934
    8. '	right' → logprob: -12.089903831481934
    9. '	left' → logprob: -13.839903831481934
    10. '  ' → logprob: -13.964903831481934

Token 204: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04452815279364586
    2. ' +=' → logprob: -3.2945282459259033
    3. '=' → logprob: -5.044528007507324
    4. ' =' → logprob: -11.419528007507324
    5. '+' → logprob: -11.544528007507324
    6. ']+=' → logprob: -15.294528007507324
    7. ',' → logprob: -15.794528007507324
    8. ' ' → logprob: -16.79452896118164
    9. '+=(' → logprob: -17.16952896118164
    10. '<|end|>' → logprob: -17.41952896118164

Token 205: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020389800192788243
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.125204086303711
    4. '  ' → logprob: -18.06270408630371
    5. '0' → logprob: -18.12520408630371
    6. '```' → logprob: -18.93770408630371
    7. '
' → logprob: -19.18770408630371
    8. 'right' → logprob: -19.37520408630371
    9. '<|end|>' → logprob: -19.68770408630371
    10. '１' → logprob: -19.87520408630371

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.12500762939453
    4. '```' → logprob: -17.68750762939453
    5. '
' → logprob: -18.18750762939453
    6. 'right' → logprob: -18.56250762939453
    7. '<|end|>' → logprob: -19.31250762939453
    8. '2' → logprob: -19.31250762939453
    9. '１' → logprob: -19.43750762939453
    10. '0' → logprob: -19.93750762939453

Token 207: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.6047699318733066e-05
    2. ' right' → logprob: -11.250016212463379
    3. '   ' → logprob: -13.000016212463379
    4. ',right' → logprob: -14.250016212463379
    5. '	right' → logprob: -16.625015258789062
    6. '[right' → logprob: -16.750015258789062
    7. ',' → logprob: -18.875015258789062
    8. '.right' → logprob: -19.625015258789062
    9. ':right' → logprob: -19.625015258789062
    10. '(right' → logprob: -20.875015258789062

Token 208: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -5.319370302458992e-06
    2. '   ' → logprob: -12.750005722045898
    3. ' right' → logprob: -13.000005722045898
    4. '	right' → logprob: -17.1250057220459
    5. ',right' → logprob: -17.1250057220459
    6. '[right' → logprob: -19.0000057220459
    7. '    
' → logprob: -20.1250057220459
    8. '.right' → logprob: -21.3750057220459
    9. 'Right' → logprob: -21.5000057220459
    10. ':right' → logprob: -21.6250057220459

Token 209: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -2.2200749754119897e-06
    2. ' right' → logprob: -13.250001907348633
    3. '   ' → logprob: -14.875001907348633
    4. '	right' → logprob: -20.250001907348633
    5. ',right' → logprob: -20.875001907348633
    6. '[right' → logprob: -21.375001907348633
    7. 'if' → logprob: -21.625001907348633
    8. '    
' → logprob: -22.000001907348633
    9. '.right' → logprob: -22.625001907348633
    10. '
' → logprob: -23.375001907348633

Token 210: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0018029843922704458
    2. ' +=' → logprob: -6.501802921295166
    3. '+' → logprob: -8.126803398132324
    4. '=' → logprob: -12.501803398132324
    5. ']+=' → logprob: -14.876803398132324
    6. '+='' → logprob: -15.001803398132324
    7. '+="' → logprob: -15.251803398132324
    8. '<|end|>' → logprob: -15.501803398132324
    9. '++' → logprob: -16.126802444458008
    10. '+=(' → logprob: -17.001802444458008

Token 211: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -16.750003814697266
    4. '   ' → logprob: -17.875003814697266
    5. '2' → logprob: -19.250003814697266
    6. '0' → logprob: -19.625003814697266
    7. '<|end|>' → logprob: -19.750003814697266
    8. '１' → logprob: -20.687503814697266
    9. '۱' → logprob: -21.062503814697266
    10. '
' → logprob: -21.125003814697266

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -17.625
    4. '2' → logprob: -17.75
    5. '   ' → logprob: -18.5
    6. '0' → logprob: -20.0625
    7. '１' → logprob: -20.625
    8. '
' → logprob: -20.625
    9. '+' → logprob: -20.9375
    10. '`' → logprob: -21.0625

Token 213: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027223803102970123
    2. 'if' → logprob: -3.652223825454712
    3. 'print' → logprob: -7.152223587036133
    4. ' if' → logprob: -9.027223587036133
    5. '<|end|>' → logprob: -11.152223587036133
    6. '```' → logprob: -13.277223587036133
    7. '    
' → logprob: -13.652223587036133
    8. '	if' → logprob: -14.527223587036133
    9. '
' → logprob: -14.652223587036133
    10. '  ' → logprob: -14.777223587036133

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10075003653764725
    2. 'if' → logprob: -2.350749969482422
    3. ' if' → logprob: -7.600749969482422
    4. '<|end|>' → logprob: -11.100749969482422
    5. ' ' → logprob: -11.350749969482422
    6. '  ' → logprob: -12.225749969482422
    7. '```' → logprob: -12.725749969482422
    8. 'print' → logprob: -12.975749969482422
    9. '	if' → logprob: -13.475749969482422
    10. '
' → logprob: -13.725749969482422

Token 215: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005607772618532181
    2. ' if' → logprob: -7.875560760498047
    3. '   ' → logprob: -8.625560760498047
    4. '<|end|>' → logprob: -14.750560760498047
    5. '	if' → logprob: -15.250560760498047
    6. '    
' → logprob: -16.375560760498047
    7. '```' → logprob: -16.500560760498047
    8. 'If' → logprob: -16.625560760498047
    9. '    ' → logprob: -16.875560760498047
    10. ' ' → logprob: -17.000560760498047

Token 216: ' left' (ID: 3561)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.03804229199886322
    2. ' right' → logprob: -3.2880423069000244
    3. '	right' → logprob: -14.663042068481445
    4. '(right' → logprob: -15.788042068481445
    5. '[right' → logprob: -16.413042068481445
    6. '   ' → logprob: -16.663042068481445
    7. 'left' → logprob: -17.413042068481445
    8. 'Right' → logprob: -17.788042068481445
    9. ' ' → logprob: -18.663042068481445
    10. 'r' → logprob: -18.663042068481445

Token 217: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6053475141525269
    2. '>=' → logprob: -0.8553475141525269
    3. ' ==' → logprob: -3.8553476333618164
    4. ' >=' → logprob: -4.855347633361816
    5. '>' → logprob: -11.855347633361816
    6. '==
' → logprob: -12.730347633361816
    7. ' ' → logprob: -12.855347633361816
    8. '   ' → logprob: -12.855347633361816
    9. ']>=' → logprob: -13.105347633361816
    10. '=' → logprob: -13.230347633361816

Token 218: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006671638693660498
    2. 'len' → logprob: -7.500667095184326
    3. ' n' → logprob: -9.125667572021484
    4. '(n' → logprob: -12.375667572021484
    5. '   ' → logprob: -14.125667572021484
    6. '	n' → logprob: -15.875667572021484
    7. ' len' → logprob: -16.000667572021484
    8. '
' → logprob: -17.125667572021484
    9. ' ' → logprob: -17.375667572021484
    10. '(len' → logprob: -17.500667572021484

Token 219: ' or' (ID: 503)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014467977918684483
    2. ' -' → logprob: -5.014468193054199
    3. ':' → logprob: -5.264468193054199
    4. 'or' → logprob: -6.639468193054199
    5. ' or' → logprob: -6.889468193054199
    6. ':
' → logprob: -8.6394681930542
    7. ':return' → logprob: -11.0144681930542
    8. '   ' → logprob: -11.5144681930542
    9. ' ' → logprob: -12.1394681930542
    10. ')' → logprob: -12.5144681930542

Token 220: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0002615742268972099
    2. ' right' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.625261306762695
    4. '	right' → logprob: -16.875261306762695
    5. ' ' → logprob: -18.250261306762695
    6. '
' → logprob: -18.250261306762695
    7. '[right' → logprob: -19.250261306762695
    8. '  ' → logprob: -19.750261306762695
    9. '\
' → logprob: -19.750261306762695
    10. '    
' → logprob: -19.875261306762695

Token 221: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0017249188385903835
    2. ' >=' → logprob: -6.376724720001221
    3. '>' → logprob: -10.751725196838379
    4. '==' → logprob: -14.126725196838379
    5. ')>=' → logprob: -15.376725196838379
    6. '≥' → logprob: -16.126724243164062
    7. ' >' → logprob: -16.251724243164062
    8. ']>=' → logprob: -16.376724243164062
    9. '<|end|>' → logprob: -17.001724243164062
    10. ' ' → logprob: -19.376724243164062

Token 222: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006266565760597587
    2. ' n' → logprob: -7.375626564025879
    3. '	n' → logprob: -16.500627517700195
    4. 'len' → logprob: -17.375627517700195
    5. '   ' → logprob: -17.875627517700195
    6. ' ' → logprob: -18.000627517700195
    7. '
' → logprob: -18.625627517700195
    8. ' ' → logprob: -19.250627517700195
    9. ')n' → logprob: -19.875627517700195
    10. '(n' → logprob: -19.875627517700195

Token 223: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007894190028309822
    2. ':
' → logprob: -4.882894039154053
    3. '   ' → logprob: -8.382894515991211
    4. '       ' → logprob: -9.757894515991211
    5. '):' → logprob: -14.882894515991211
    6. ':return' → logprob: -15.507894515991211
    7. ',' → logprob: -15.757894515991211
    8. '():
' → logprob: -16.13289451599121
    9. '):
' → logprob: -16.25789451599121
    10. ':
' → logprob: -16.25789451599121

Token 224: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3132685124874115
    2. '       ' → logprob: -1.3132685422897339
    3. 'break' → logprob: -13.438268661499023
    4. '	break' → logprob: -13.563268661499023
    5. ':' → logprob: -14.063268661499023
    6. '   ' → logprob: -14.313268661499023
    7. '```' → logprob: -14.938268661499023
    8. '	' → logprob: -14.938268661499023
    9. '           ' → logprob: -15.313268661499023
    10. '     ' → logprob: -15.313268661499023

Token 225: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.008601689711213112
    2. '   ' → logprob: -5.258601665496826
    3. ' break' → logprob: -5.758601665496826
    4. '	break' → logprob: -9.008602142333984
    5. '       ' → logprob: -9.508602142333984
    6. '    
' → logprob: -12.133602142333984
    7. '
' → logprob: -13.133602142333984
    8. '        
' → logprob: -14.008602142333984
    9. '```' → logprob: -14.258602142333984
    10. ' ' → logprob: -14.758602142333984

Token 226: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.85366350505501e-05
    2. '
' → logprob: -9.37509822845459
    3. ' print' → logprob: -12.00009822845459
    4. '```' → logprob: -12.12509822845459
    5. ')
' → logprob: -14.25009822845459
    6. '  
' → logprob: -14.75009822845459
    7. ')' → logprob: -15.00009822845459
    8. '    
' → logprob: -15.62509822845459
    9. '(print' → logprob: -16.000099182128906
    10. '<|end|>' → logprob: -16.000099182128906

Token 227: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.9153885558771435e-06
    2. '
' → logprob: -12.250005722045898
    3. ' print' → logprob: -14.125005722045898
    4. '```' → logprob: -15.250005722045898
    5. 'if' → logprob: -17.1250057220459
    6. '(print' → logprob: -18.1250057220459
    7. '\n' → logprob: -18.3750057220459
    8. '0' → logprob: -18.3750057220459
    9. '  
' → logprob: -18.6250057220459
    10. 'mx' → logprob: -18.7500057220459

Token 228: '(mx' (ID: 160663)
  Prédit: '(mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mx' → logprob: -2.816093228830141e-06
    2. 'mx' → logprob: -13.50000286102295
    3. '(' → logprob: -13.75000286102295
    4. '(max' → logprob: -16.375001907348633
    5. ' mx' → logprob: -17.000001907348633
    6. '(m' → logprob: -18.625001907348633
    7. '(nx' → logprob: -18.625001907348633
    8. '.mx' → logprob: -19.000001907348633
    9. '(ms' → logprob: -19.500001907348633
    10. '(mm' → logprob: -19.750001907348633

Token 229: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.179569077678025e-05
    2. '+' → logprob: -10.125041961669922
    3. ' )' → logprob: -13.875041961669922
    4. '+)' → logprob: -14.875041961669922
    5. ')
' → logprob: -15.625041961669922
    6. '))' → logprob: -16.625041961669922
    7. ')`' → logprob: -16.875041961669922
    8. '`)' → logprob: -17.750041961669922
    9. ')#' → logprob: -17.875041961669922
    10. ' +' → logprob: -18.250041961669922


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 227
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 83
Tokens correctement prédits (top 10): 178
Précision stricte (1ère position): 33.48%
Précision adaptée (1ère position): 36.56%
Précision (top 10): 78.41%
================================================================================
