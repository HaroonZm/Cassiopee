================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def compute_result(param_a, param_b):
    if param_a == 0 and param_b <= 99:
        return param_b
    if param_a == 1 and param_b <= 99:
        return 100 * param_b
    if param_a == 2 and param_b <= 99:
        return 10000 * param_b
    if param_a == 0:
        return 101
    if param_a == 1:
        return 10100
    return 1010000

def parse_input_line():
    input_line = sys.stdin.readline().rstrip()
    str_a, str_b = input_line.split(' ')
    int_a = int(str_a)
    int_b = int(str_b)
    return int_a, int_b

def run_program():
    input_a, input_b = parse_input_line()
    output_result = compute_result(input_a, input_b)
    print(output_result)

if __name__ == '__main__':
    run_program()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2506629228591919
    2. '\n' → logprob: -2.1256628036499023
    3. 'import' → logprob: -3.1256628036499023
    4. '<|end|>' → logprob: -3.2506628036499023
    5. 'newline' → logprob: -5.500662803649902
    6. '\' → logprob: -5.625662803649902
    7. '<|end|>' → logprob: -6.125662803649902
    8. '' → logprob: -6.250662803649902
    9. 'print' → logprob: -6.875662803649902
    10. '\r' → logprob: -6.875662803649902

Token 4: ' compute' (ID: 23864)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: '_result' (ID: 11623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00839305855333805
    2. '(' → logprob: -4.883393287658691
    3. '_factor' → logprob: -8.758393287658691
    4. ' _' → logprob: -9.008393287658691
    5. '(_' → logprob: -9.133393287658691
    6. '```' → logprob: -9.758393287658691
    7. '_space' → logprob: -10.133393287658691
    8. '_value' → logprob: -10.383393287658691
    9. '_:' → logprob: -10.883393287658691
    10. '_s' → logprob: -11.008393287658691

Token 6: '(param' (ID: 16775)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006759775569662452
    2. '_' → logprob: -7.625676155090332
    3. ' (' → logprob: -10.125676155090332
    4. '```' → logprob: -10.125676155090332
    5. '("("' → logprob: -11.375676155090332
    6. ':' → logprob: -11.375676155090332
    7. '('' → logprob: -11.500676155090332
    8. '(
' → logprob: -11.875676155090332
    9. '(`' → logprob: -12.000676155090332
    10. '():' → logprob: -12.000676155090332

Token 7: '_a' (ID: 10852)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07800178974866867
    2. 's' → logprob: -2.8280017375946045
    3. ')' → logprob: -4.203001976013184
    4. ':' → logprob: -7.953001976013184
    5. '):
' → logprob: -8.328001976013184
    6. ',' → logprob: -8.828001976013184
    7. ')s' → logprob: -9.078001976013184
    8. '=' → logprob: -11.203001976013184
    9. 'eter' → logprob: -11.328001976013184
    10. ' ):' → logprob: -11.453001976013184

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3534962832927704
    2. '):' → logprob: -1.2284963130950928
    3. ')' → logprob: -5.728496074676514
    4. ':' → logprob: -6.603496074676514
    5. ' ,' → logprob: -8.978496551513672
    6. '):
' → logprob: -9.228496551513672
    7. '=' → logprob: -9.728496551513672
    8. ',
' → logprob: -9.853496551513672
    9. '_' → logprob: -10.853496551513672
    10. 's' → logprob: -10.978496551513672

Token 9: ' param' (ID: 3802)
  Prédit: ' param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.004148561041802168
    2. 'param' → logprob: -6.129148483276367
    3. ' ' → logprob: -6.254148483276367
    4. ' ' → logprob: -11.004148483276367
    5. ')' → logprob: -12.379148483276367
    6. ' parameter' → logprob: -12.379148483276367
    7. ',param' → logprob: -12.754148483276367
    8. ' params' → logprob: -12.879148483276367
    9. ')param' → logprob: -13.129148483276367
    10. '	param' → logprob: -13.629148483276367

Token 10: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.07521521300077438
    2. '_' → logprob: -2.7002151012420654
    3. '_a' → logprob: -6.3252153396606445
    4. '_s' → logprob: -7.0752153396606445
    5. '):' → logprob: -7.2002153396606445
    6. ' _' → logprob: -7.7002153396606445
    7. '_c' → logprob: -8.200215339660645
    8. ')_' → logprob: -8.325215339660645
    9. '_,' → logprob: -8.700215339660645
    10. ')' → logprob: -8.700215339660645

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012410636991262436
    2. ')' → logprob: -7.001241207122803
    3. ':' → logprob: -8.126240730285645
    4. ',' → logprob: -10.751240730285645
    5. '):
' → logprob: -11.626240730285645
    6. ' ):' → logprob: -13.751240730285645
    7. ''):' → logprob: -14.501240730285645
    8. '**' → logprob: -15.126240730285645
    9. '   ' → logprob: -15.376240730285645
    10. '}:' → logprob: -15.626240730285645

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12852711975574493
    2. '   ' → logprob: -2.2535271644592285
    3. ':
' → logprob: -5.5035271644592285
    4. '():' → logprob: -5.6285271644592285
    5. '(' → logprob: -6.2535271644592285
    6. '):' → logprob: -6.5035271644592285
    7. ' :' → logprob: -6.6285271644592285
    8. ':return' → logprob: -7.1285271644592285
    9. '\' → logprob: -8.12852668762207
    10. ' ' → logprob: -8.25352668762207

Token 13: ' if' (ID: 538)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7959443926811218
    2. '   ' → logprob: -1.4209444522857666
    3. ' ' → logprob: -2.1709444522857666
    4. '       ' → logprob: -2.4209444522857666
    5. ' return' → logprob: -3.2959444522857666
    6. 'return' → logprob: -3.5459444522857666
    7. '\' → logprob: -4.7959442138671875
    8. '    
' → logprob: -5.1709442138671875
    9. ' 
' → logprob: -5.1709442138671875
    10. '     ' → logprob: -5.9209442138671875

Token 14: ' param' (ID: 3802)
  Prédit: ' param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.05476435273885727
    2. ' ' → logprob: -3.0547642707824707
    3. 'param' → logprob: -5.304764270782471
    4. ' not' → logprob: -6.929764270782471
    5. ' params' → logprob: -10.179764747619629
    6. '  ' → logprob: -10.429764747619629
    7. '(param' → logprob: -10.554764747619629
    8. '    ' → logprob: -10.804764747619629
    9. '	param' → logprob: -11.179764747619629
    10. ' ' → logprob: -11.429764747619629

Token 15: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.053425759077072144
    2. '_' → logprob: -3.0534257888793945
    3. '_b' → logprob: -6.4284257888793945
    4. ' _' → logprob: -6.5534257888793945
    5. '_s' → logprob: -6.5534257888793945
    6. '._' → logprob: -9.053425788879395
    7. 's' → logprob: -9.553425788879395
    8. '```' → logprob: -10.428425788879395
    9. ')_' → logprob: -11.053425788879395
    10. '_.' → logprob: -11.428425788879395

Token 16: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.021382048726081848
    2. ' ==' → logprob: -4.521381855010986
    3. ' >=' → logprob: -5.646381855010986
    4. '>' → logprob: -6.021381855010986
    5. ' ' → logprob: -6.021381855010986
    6. ' <' → logprob: -6.771381855010986
    7. ' <=' → logprob: -8.271382331848145
    8. '   ' → logprob: -9.021382331848145
    9. '  ' → logprob: -9.021382331848145
    10. '==' → logprob: -9.771382331848145

Token 17: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6618351340293884
    2. ' None' → logprob: -0.9118351340293884
    3. ' True' → logprob: -3.786835193634033
    4. ''' → logprob: -4.161835193634033
    5. 'None' → logprob: -4.161835193634033
    6. '"' → logprob: -4.911835193634033
    7. ' '' → logprob: -5.036835193634033
    8. '0' → logprob: -5.536835193634033
    9. 'param' → logprob: -5.911835193634033
    10. ' param' → logprob: -6.411835193634033

Token 18: '0' (ID: 15)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.009403758682310581
    2. ' param' → logprob: -5.384403705596924
    3. 'None' → logprob: -5.509403705596924
    4. ' None' → logprob: -7.759403705596924
    5. '0' → logprob: -8.384404182434082
    6. 'True' → logprob: -10.759404182434082
    7. ':param' → logprob: -11.009404182434082
    8. ')param' → logprob: -11.384404182434082
    9. '(param' → logprob: -12.384404182434082
    10. ' ' → logprob: -12.634404182434082

Token 19: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012551113031804562
    2. ' :' → logprob: -6.876255035400391
    3. ':
' → logprob: -9.00125503540039
    4. '       ' → logprob: -10.12625503540039
    5. ':return' → logprob: -11.12625503540039
    6. '   ' → logprob: -11.50125503540039
    7. '    ' → logprob: -11.62625503540039
    8. ' and' → logprob: -11.75125503540039
    9. '):' → logprob: -11.75125503540039
    10. ' :
' → logprob: -12.87625503540039

Token 20: ' param' (ID: 3802)
  Prédit: ' param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.0023284326307475567
    2. 'param' → logprob: -6.127328395843506
    3. ' ' → logprob: -9.377328872680664
    4. ' not' → logprob: -10.377328872680664
    5. ' ' → logprob: -11.377328872680664
    6. '(param' → logprob: -12.002328872680664
    7. '	param' → logprob: -13.377328872680664
    8. ''' → logprob: -13.627328872680664
    9. ')param' → logprob: -13.627328872680664
    10. ',param' → logprob: -13.752328872680664

Token 21: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0005658994195982814
    2. '_a' → logprob: -7.500566005706787
    3. '_' → logprob: -12.000565528869629
    4. ' _' → logprob: -12.500565528869629
    5. '_c' → logprob: -14.250565528869629
    6. '```' → logprob: -15.125565528869629
    7. ')_' → logprob: -15.125565528869629
    8. '}_' → logprob: -15.375565528869629
    9. '\' → logprob: -15.625565528869629
    10. '_s' → logprob: -15.750565528869629

Token 22: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0036159895826131105
    2. ' ' → logprob: -6.503615856170654
    3. '==' → logprob: -6.503615856170654
    4. ' !=' → logprob: -7.503615856170654
    5. ' >' → logprob: -11.253616333007812
    6. '  ' → logprob: -11.253616333007812
    7. ' <' → logprob: -11.628616333007812
    8. ')' → logprob: -12.753616333007812
    9. '   ' → logprob: -12.878616333007812
    10. ' ===' → logprob: -12.878616333007812

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007619171869009733
    2. '0' → logprob: -4.882619380950928
    3. '  ' → logprob: -11.88261890411377
    4. '1' → logprob: -13.13261890411377
    5. 'param' → logprob: -13.50761890411377
    6. '   ' → logprob: -14.00761890411377
    7. ' param' → logprob: -14.00761890411377
    8. '10' → logprob: -15.13261890411377
    9. '5' → logprob: -15.13261890411377
    10. ' ' → logprob: -15.94511890411377

Token 24: '99' (ID: 2058)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5234301686286926
    2. ' ' → logprob: -0.8984301686286926
    3. 'param' → logprob: -9.023429870605469
    4. '10' → logprob: -9.648429870605469
    5. '1' → logprob: -10.023429870605469
    6. '  ' → logprob: -10.148429870605469
    7. ' param' → logprob: -11.273429870605469
    8. '5' → logprob: -11.398429870605469
    9. '100' → logprob: -12.273429870605469
    10. '   ' → logprob: -12.898429870605469

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.3120038501219824e-05
    2. ' :' → logprob: -10.625053405761719
    3. ':
' → logprob: -11.375053405761719
    4. ':return' → logprob: -11.625053405761719
    5. '):' → logprob: -12.375053405761719
    6. ':**' → logprob: -12.875053405761719
    7. '   ' → logprob: -14.750053405761719
    8. '':' → logprob: -15.375053405761719
    9. '>:' → logprob: -15.500053405761719
    10. ',' → logprob: -15.625053405761719

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01783112622797489
    2. ':' → logprob: -5.017831325531006
    3. ':
' → logprob: -5.517831325531006
    4. ' :' → logprob: -5.767831325531006
    5. '\n' → logprob: -7.142831325531006
    6. ' :
' → logprob: -7.142831325531006
    7. '   ' → logprob: -7.892831325531006
    8. ':\' → logprob: -8.142830848693848
    9. ' return' → logprob: -8.392830848693848
    10. '    ' → logprob: -8.392830848693848

Token 27: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7115640640258789
    2. '       ' → logprob: -1.086564064025879
    3. 'return' (adapté à ' return') → logprob: -2.461564064025879
    4. '\n' → logprob: -3.461564064025879
    5. '           ' → logprob: -3.961564064025879
    6. ' 
' → logprob: -5.211564064025879
    7. ':return' → logprob: -5.461564064025879
    8. ':' → logprob: -5.461564064025879
    9. '        
' → logprob: -5.586564064025879
    10. '        ' → logprob: -5.836564064025879

Token 28: ' param' (ID: 3802)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.9003658890724182
    2. ' ' → logprob: -1.1503658294677734
    3. ' param' → logprob: -2.0253658294677734
    4. ' True' → logprob: -2.4003658294677734
    5. '0' → logprob: -3.9003658294677734
    6. 'None' → logprob: -4.150365829467773
    7. 'param' → logprob: -4.525365829467773
    8. 'True' → logprob: -5.400365829467773
    9. ' False' → logprob: -6.400365829467773
    10. 'False' → logprob: -8.025365829467773

Token 29: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.02111434005200863
    2. '_b' → logprob: -3.8961143493652344
    3. '_' → logprob: -7.521114349365234
    4. ' _' → logprob: -11.146114349365234
    5. '_c' → logprob: -12.146114349365234
    6. 'a' → logprob: -12.271114349365234
    7. '_s' → logprob: -13.396114349365234
    8. '```' → logprob: -13.396114349365234
    9. '_result' → logprob: -14.896114349365234
    10. ')_' → logprob: -15.021114349365234

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0444142818450928
    2. '   ' → logprob: -1.1694142818450928
    3. '+' → logprob: -1.9194142818450928
    4. '    
' → logprob: -2.7944142818450928
    5. '*' → logprob: -3.5444142818450928
    6. ' 
' → logprob: -3.9194142818450928
    7. ' +' → logprob: -4.044414520263672
    8. '\n' → logprob: -4.669414520263672
    9. ' *' → logprob: -4.919414520263672
    10. '+
' → logprob: -5.044414520263672

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2250588834285736
    2. '
' → logprob: -3.2250587940216064
    3. '<|end|>' → logprob: -3.2250587940216064
    4. '    
' → logprob: -3.4750587940216064
    5. '*' → logprob: -4.2250590324401855
    6. ':' → logprob: -4.3500590324401855
    7. '+' → logprob: -4.6000590324401855
    8. '\n' → logprob: -4.7250590324401855
    9. ':
' → logprob: -5.2250590324401855
    10. ')' → logprob: -5.2250590324401855

Token 32: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09447316825389862
    2. '
' → logprob: -4.344473361968994
    3. '    
' → logprob: -4.344473361968994
    4. 'elif' → logprob: -4.719473361968994
    5. '       ' → logprob: -4.844473361968994
    6. ':' → logprob: -4.844473361968994
    7. ' else' → logprob: -4.969473361968994
    8. 'else' → logprob: -5.094473361968994
    9. ':
' → logprob: -5.844473361968994
    10. '-' → logprob: -5.969473361968994

Token 33: ' param' (ID: 3802)
  Prédit: ' param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.0006319015519693494
    2. 'param' → logprob: -7.750631809234619
    3. ' ' → logprob: -9.250632286071777
    4. ' not' → logprob: -9.625632286071777
    5. '(param' → logprob: -11.000632286071777
    6. ' ' → logprob: -11.375632286071777
    7. ' params' → logprob: -12.750632286071777
    8. ' sys' → logprob: -13.500632286071777
    9. ' isinstance' → logprob: -14.000632286071777
    10. ')param' → logprob: -14.250632286071777

Token 34: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.04338119551539421
    2. '_b' → logprob: -3.1683812141418457
    3. '_' → logprob: -8.168380737304688
    4. ' _' → logprob: -9.418380737304688
    5. '_c' → logprob: -12.168380737304688
    6. '_s' → logprob: -13.168380737304688
    7. 'a' → logprob: -13.293380737304688
    8. '```' → logprob: -13.293380737304688
    9. '._' → logprob: -14.293380737304688
    10. '__' → logprob: -14.543380737304688

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.21398481726646423
    2. ' ' → logprob: -2.088984727859497
    3. ' >' → logprob: -2.838984727859497
    4. ' <=' → logprob: -5.338984966278076
    5. ' <' → logprob: -6.088984966278076
    6. ' >=' → logprob: -6.588984966278076
    7. '==' → logprob: -6.838984966278076
    8. ' !=' → logprob: -7.963984966278076
    9. '>' → logprob: -8.338984489440918
    10. '  ' → logprob: -9.213984489440918

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01843881607055664
    2. '1' → logprob: -4.018438816070557
    3. '0' → logprob: -8.518438339233398
    4. ' -' → logprob: -10.643438339233398
    5. ' None' → logprob: -11.080938339233398
    6. '2' → logprob: -12.018438339233398
    7. ' param' → logprob: -12.018438339233398
    8. 'param' → logprob: -12.268438339233398
    9. '100' → logprob: -12.768438339233398
    10. '-' → logprob: -12.768438339233398

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12732157111167908
    2. ' ' → logprob: -2.127321481704712
    3. '0' → logprob: -8.627321243286133
    4. '100' → logprob: -9.627321243286133
    5. '99' → logprob: -10.252321243286133
    6. '2' → logprob: -10.564821243286133
    7. '-' → logprob: -10.814821243286133
    8. ' -' → logprob: -11.689821243286133
    9. '10' → logprob: -11.877321243286133
    10. '  ' → logprob: -12.127321243286133

Token 38: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06232403963804245
    2. ' :' → logprob: -3.312324047088623
    3. ' and' → logprob: -3.812324047088623
    4. ' ' → logprob: -7.062324047088623
    5. ':return' → logprob: -8.562323570251465
    6. '<|end|>' → logprob: -8.562323570251465
    7. '    ' → logprob: -8.812323570251465
    8. 'and' → logprob: -9.312323570251465
    9. ':
' → logprob: -9.562323570251465
    10. '       ' → logprob: -9.687323570251465

Token 39: ' param' (ID: 3802)
  Prédit: ' param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.02527748979628086
    2. ' ' → logprob: -3.7752773761749268
    3. 'param' → logprob: -6.400277614593506
    4. ' not' → logprob: -9.150277137756348
    5. '  ' → logprob: -9.275277137756348
    6. '(param' → logprob: -9.775277137756348
    7. ' (' → logprob: -10.400277137756348
    8. ' ' → logprob: -10.400277137756348
    9. ' space' → logprob: -11.400277137756348
    10. ' params' → logprob: -12.337777137756348

Token 40: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.12798583507537842
    2. '_a' → logprob: -2.127985954284668
    3. ' _' → logprob: -7.502985954284668
    4. '_' → logprob: -7.752985954284668
    5. '._' → logprob: -10.627985954284668
    6. '_c' → logprob: -11.252985954284668
    7. 'a' → logprob: -11.752985954284668
    8. ' ' → logprob: -12.127985954284668
    9. '   ' → logprob: -12.627985954284668
    10. '_e' → logprob: -12.627985954284668

Token 41: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.1087367534637451
    2. ' ==' → logprob: -1.3587367534637451
    3. ' ' → logprob: -1.8587367534637451
    4. ' >' → logprob: -1.8587367534637451
    5. ' >=' → logprob: -2.608736753463745
    6. ' <' → logprob: -4.233736991882324
    7. '==' → logprob: -5.483736991882324
    8. '>' → logprob: -5.733736991882324
    9. '<=' → logprob: -6.608736991882324
    10. ' %' → logprob: -6.733736991882324

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06537803262472153
    2. '99' → logprob: -2.940377950668335
    3. '9' → logprob: -6.065378189086914
    4. '100' → logprob: -6.440378189086914
    5. '199' → logprob: -6.565378189086914
    6. '49' → logprob: -6.690378189086914
    7. '50' → logprob: -6.690378189086914
    8. '1' → logprob: -7.440378189086914
    9. '0' → logprob: -7.440378189086914
    10. '10' → logprob: -7.565378189086914

Token 43: '99' (ID: 2058)
  Prédit: '99'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '99' → logprob: -0.5645304322242737
    2. ' ' → logprob: -1.064530372619629
    3. '49' → logprob: -4.189530372619629
    4. '9' → logprob: -4.189530372619629
    5. '100' → logprob: -4.189530372619629
    6. '50' → logprob: -4.189530372619629
    7. '10' → logprob: -4.939530372619629
    8. '199' → logprob: -4.939530372619629
    9. '0' → logprob: -5.939530372619629
    10. '1' → logprob: -6.189530372619629

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024659058544784784
    2. ' :' → logprob: -6.752465724945068
    3. ':
' → logprob: -7.252465724945068
    4. ':return' → logprob: -8.127466201782227
    5. '       ' → logprob: -8.377466201782227
    6. ' and' → logprob: -10.877466201782227
    7. '   ' → logprob: -11.252466201782227
    8. '):' → logprob: -11.502466201782227
    9. ' :
' → logprob: -12.252466201782227
    10. ',' → logprob: -12.752466201782227

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03391769155859947
    2. ':' → logprob: -4.0339179039001465
    3. ' return' → logprob: -5.1589179039001465
    4. '        ' → logprob: -5.2839179039001465
    5. ':return' → logprob: -6.6589179039001465
    6. ' ' → logprob: -7.1589179039001465
    7. ' :' → logprob: -7.4089179039001465
    8. 'return' → logprob: -7.6589179039001465
    9. '    ' → logprob: -8.033917427062988
    10. '0' → logprob: -8.533917427062988

Token 46: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04132695496082306
    2. 'return' (adapté à ' return') → logprob: -3.5413269996643066
    3. '        ' → logprob: -5.541326999664307
    4. ' ' → logprob: -5.916326999664307
    5. ' param' → logprob: -6.291326999664307
    6. '           ' → logprob: -6.541326999664307
    7. 'param' → logprob: -7.541326999664307
    8. '       ' → logprob: -8.291326522827148
    9. ' ' → logprob: -8.791326522827148
    10. '            ' → logprob: -8.916326522827148

Token 47: ' ' (ID: 220)
  Prédit: ' param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.03456428274512291
    2. 'param' → logprob: -3.409564256668091
    3. ' ' → logprob: -7.53456449508667
    4. ' ' → logprob: -9.409564018249512
    5. '1' → logprob: -9.534564018249512
    6. '(param' → logprob: -9.659564018249512
    7. '0' → logprob: -9.784564018249512
    8. ' sys' → logprob: -11.284564018249512
    9. ':param' → logprob: -11.409564018249512
    10. '100' → logprob: -11.534564018249512

Token 48: '100' (ID: 1353)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.006728161126375198
    2. ' param' → logprob: -5.631728172302246
    3. '100' → logprob: -6.381728172302246
    4. '99' → logprob: -7.131728172302246
    5. '1' → logprob: -8.631728172302246
    6. ' ' → logprob: -9.256728172302246
    7. '   ' → logprob: -9.756728172302246
    8. '0' → logprob: -9.756728172302246
    9. '(param' → logprob: -9.881728172302246
    10. '10' → logprob: -10.631728172302246

Token 49: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7812190055847168
    2. '+' → logprob: -1.4062190055847168
    3. ' ' → logprob: -1.9062190055847168
    4. ' -' → logprob: -3.406219005584717
    5. '0' → logprob: -3.781219005584717
    6. ' else' → logprob: -4.031219005584717
    7. ' *' → logprob: -4.281219005584717
    8. '*' → logprob: -4.281219005584717
    9. '   ' → logprob: -4.531219005584717
    10. 'else' → logprob: -4.781219005584717

Token 50: ' param' (ID: 3802)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.0046316226944327354
    2. ' param' → logprob: -5.379631519317627
    3. '(param' → logprob: -12.379631996154785
    4. ':param' → logprob: -13.629631996154785
    5. '1' → logprob: -13.754631996154785
    6. '   ' → logprob: -13.879631996154785
    7. ' ' → logprob: -13.879631996154785
    8. '	param' → logprob: -14.004631996154785
    9. ')param' → logprob: -14.629631996154785
    10. '100' → logprob: -15.379631996154785

Token 51: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.38757094740867615
    2. '_a' → logprob: -1.1375709772109985
    3. '_' → logprob: -7.637570858001709
    4. 'a' → logprob: -8.637571334838867
    5. ' _' → logprob: -10.637571334838867
    6. 'b' → logprob: -12.262571334838867
    7. '_c' → logprob: -12.762571334838867
    8. ')' → logprob: -13.137571334838867
    9. ' ' → logprob: -13.762571334838867
    10. '_)' → logprob: -13.887571334838867

Token 52: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3451586067676544
    2. '
' → logprob: -2.345158576965332
    3. '+' → logprob: -2.470158576965332
    4. '<|end|>' → logprob: -2.595158576965332
    5. ' ' → logprob: -4.720158576965332
    6. '+
' → logprob: -5.220158576965332
    7. '\n' → logprob: -5.470158576965332
    8. ' +' → logprob: -5.470158576965332
    9. '    
' → logprob: -5.845158576965332
    10. '<|end|>' → logprob: -6.595158576965332

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29252779483795166
    2. '<|end|>' → logprob: -2.167527675628662
    3. '
' → logprob: -2.417527675628662
    4. '\n' → logprob: -4.167527675628662
    5. '    
' → logprob: -4.167527675628662
    6. '\' → logprob: -5.542527675628662
    7. '```' → logprob: -5.917527675628662
    8. ' ' → logprob: -6.417527675628662
    9. '  
' → logprob: -6.917527675628662
    10. '  ' → logprob: -7.167527675628662

Token 54: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08993828296661377
    2. '\n' → logprob: -3.839938163757324
    3. '
' → logprob: -4.089938163757324
    4. ' ' → logprob: -4.339938163757324
    5. '<|end|>' → logprob: -4.964938163757324
    6. '+' → logprob: -5.089938163757324
    7. '    
' → logprob: -5.589938163757324
    8. 'return' → logprob: -6.089938163757324
    9. ' 
' → logprob: -6.589938163757324
    10. ' else' → logprob: -6.589938163757324

Token 55: ' param' (ID: 3802)
  Prédit: ' param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.005130338948220015
    2. 'param' → logprob: -5.380130290985107
    3. ' not' → logprob: -8.130130767822266
    4. ' ' → logprob: -8.755130767822266
    5. '(param' → logprob: -10.380130767822266
    6. ' params' → logprob: -12.130130767822266
    7. ' ' → logprob: -12.255130767822266
    8. ' (' → logprob: -12.505130767822266
    9. ' isinstance' → logprob: -12.880130767822266
    10. ' sys' → logprob: -13.005130767822266

Token 56: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.003269568784162402
    2. '_b' → logprob: -5.753269672393799
    3. '_c' → logprob: -10.00326919555664
    4. '_' → logprob: -10.87826919555664
    5. ' _' → logprob: -11.25326919555664
    6. '```' → logprob: -12.87826919555664
    7. 'a' → logprob: -13.37826919555664
    8. '_s' → logprob: -13.50326919555664
    9. ''_' → logprob: -14.12826919555664
    10. '<|end|>' → logprob: -14.31576919555664

Token 57: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018733341246843338
    2. ' ' → logprob: -4.143733501434326
    3. '==' → logprob: -6.143733501434326
    4. ' >' → logprob: -8.393733024597168
    5. ' <=' → logprob: -8.518733024597168
    6. ' <' → logprob: -10.018733024597168
    7. ' >=' → logprob: -10.143733024597168
    8. '  ' → logprob: -11.893733024597168
    9. ' =' → logprob: -12.268733024597168
    10. '<|end|>' → logprob: -12.268733024597168

Token 58: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03821201249957085
    2. '2' → logprob: -3.2882120609283447
    3. '0' → logprob: -9.038211822509766
    4. '1' → logprob: -11.163211822509766
    5. ' None' → logprob: -11.725711822509766
    6. 'None' → logprob: -12.100711822509766
    7. 'param' → logprob: -12.913211822509766
    8. '3' → logprob: -12.975711822509766
    9. '  ' → logprob: -13.038211822509766
    10. ' -' → logprob: -13.288211822509766

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016083991155028343
    2. '0' → logprob: -5.01608419418335
    3. ' ' → logprob: -5.01608419418335
    4. '1' → logprob: -6.51608419418335
    5. '99' → logprob: -7.76608419418335
    6. '3' → logprob: -7.89108419418335
    7. '100' → logprob: -8.766083717346191
    8. '10' → logprob: -9.828583717346191
    9. '4' → logprob: -10.203583717346191
    10. '9' → logprob: -10.578583717346191

Token 60: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6121889352798462
    2. ' ' → logprob: -1.1121889352798462
    3. ':' → logprob: -2.7371888160705566
    4. ' *' → logprob: -3.6121888160705566
    5. ' :' → logprob: -4.362188816070557
    6. '   ' → logprob: -4.737188816070557
    7. '    ' → logprob: -4.862188816070557
    8. 'and' → logprob: -6.862188816070557
    9. '*' → logprob: -6.987188816070557
    10. '  ' → logprob: -6.987188816070557

Token 61: ' param' (ID: 3802)
  Prédit: ' param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.009026252664625645
    2. 'param' → logprob: -5.009026050567627
    3. ' ' → logprob: -6.634026050567627
    4. '(param' → logprob: -7.509026050567627
    5. ' (' → logprob: -8.759026527404785
    6. ' sys' → logprob: -9.634026527404785
    7. ' not' → logprob: -9.634026527404785
    8. '0' → logprob: -10.759026527404785
    9. '100' → logprob: -11.321526527404785
    10. ' ' → logprob: -11.509026527404785

Token 62: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.024370206519961357
    2. '_a' → logprob: -3.7743701934814453
    3. ' _' → logprob: -7.024370193481445
    4. '_' → logprob: -9.024370193481445
    5. '_c' → logprob: -9.524370193481445
    6. '<|end|>' → logprob: -11.774370193481445
    7. '._' → logprob: -12.961870193481445
    8. ' ' → logprob: -12.961870193481445
    9. '_s' → logprob: -12.961870193481445
    10. '   ' → logprob: -13.086870193481445

Token 63: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2426079362630844
    2. ' <' → logprob: -2.492607831954956
    3. ' ' → logprob: -2.992607831954956
    4. ' ==' → logprob: -3.117607831954956
    5. ' >' → logprob: -4.492608070373535
    6. ' >=' → logprob: -4.742608070373535
    7. '<=' → logprob: -4.992608070373535
    8. ' %' → logprob: -5.742608070373535
    9. '<' → logprob: -6.117608070373535
    10. '==' → logprob: -6.242608070373535

Token 64: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018061203882098198
    2. '99' → logprob: -4.14306116104126
    3. '9' → logprob: -7.76806116104126
    4. '49' → logprob: -8.268061637878418
    5. '100' → logprob: -8.518061637878418
    6. '999' → logprob: -8.518061637878418
    7. '50' → logprob: -9.143061637878418
    8. '19' → logprob: -9.580561637878418
    9. '199' → logprob: -9.705561637878418
    10. '20' → logprob: -9.830561637878418

Token 65: '99' (ID: 2058)
  Prédit: '99'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '99' → logprob: -0.3654404580593109
    2. ' ' → logprob: -1.2404404878616333
    3. '9' → logprob: -4.490440368652344
    4. '49' → logprob: -6.865440368652344
    5. '999' → logprob: -7.115440368652344
    6. '199' → logprob: -7.615440368652344
    7. '50' → logprob: -7.740440368652344
    8. '19' → logprob: -7.865440368652344
    9. '100' → logprob: -8.115440368652344
    10. '10' → logprob: -8.302940368652344

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006552543956786394
    2. ' :' → logprob: -5.756552696228027
    3. ':
' → logprob: -6.381552696228027
    4. '       ' → logprob: -6.756552696228027
    5. '   ' → logprob: -9.131552696228027
    6. '        ' → logprob: -9.131552696228027
    7. '    ' → logprob: -9.881552696228027
    8. ' :
' → logprob: -9.881552696228027
    9. ' and' → logprob: -10.131552696228027
    10. ',' → logprob: -10.506552696228027

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.715541422367096
    2. '        ' → logprob: -1.2155413627624512
    3. ' ' → logprob: -1.9655413627624512
    4. ' return' → logprob: -3.840541362762451
    5. '    ' → logprob: -4.215541362762451
    6. '   ' → logprob: -5.215541362762451
    7. ' 
' → logprob: -5.215541362762451
    8. ':
' → logprob: -5.840541362762451
    9. ':' → logprob: -6.090541362762451
    10. '0' → logprob: -6.090541362762451

Token 68: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23984940350055695
    2. ' param' → logprob: -2.364849328994751
    3. ' ' → logprob: -3.114849328994751
    4. 'return' (adapté à ' return') → logprob: -3.114849328994751
    5. 'param' → logprob: -3.989849328994751
    6. ' (' → logprob: -5.73984956741333
    7. '100' → logprob: -5.86484956741333
    8. '        ' → logprob: -6.98984956741333
    9. '    ' → logprob: -6.98984956741333
    10. '(param' → logprob: -7.23984956741333

Token 69: ' ' (ID: 220)
  Prédit: ' param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.5656868815422058
    2. ' ' → logprob: -1.0656869411468506
    3. 'param' → logprob: -2.6906869411468506
    4. '100' → logprob: -4.9406867027282715
    5. ' (' → logprob: -5.0656867027282715
    6. '(param' → logprob: -5.8156867027282715
    7. '25' → logprob: -7.4406867027282715
    8. '(' → logprob: -7.9406867027282715
    9. '250' → logprob: -8.19068717956543
    10. '0' → logprob: -8.19068717956543

Token 70: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.7405813336372375
    2. 'param' → logprob: -0.7405813336372375
    3. '(' → logprob: -4.115581512451172
    4. '10' → logprob: -5.615581512451172
    5. ' ' → logprob: -5.615581512451172
    6. '250' → logprob: -5.865581512451172
    7. '200' → logprob: -5.990581512451172
    8. '1' → logprob: -5.990581512451172
    9. '(param' → logprob: -5.990581512451172
    10. ' param' → logprob: -6.115581512451172

Token 71: '00' (ID: 504)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0072647822089493275
    2. '*' → logprob: -5.132264614105225
    3. ' +' → logprob: -7.507264614105225
    4. '0' → logprob: -7.882264614105225
    5. '00' → logprob: -8.757265090942383
    6. ' **' → logprob: -9.382265090942383
    7. '000' → logprob: -9.632265090942383
    8. ' ' → logprob: -10.507265090942383
    9. '**' → logprob: -11.132265090942383
    10. '+' → logprob: -11.132265090942383

Token 72: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.016165511682629585
    2. '*' → logprob: -4.141165733337402
    3. ' +' → logprob: -9.516165733337402
    4. ' ' → logprob: -10.016165733337402
    5. '+' → logprob: -12.391165733337402
    6. ' ' → logprob: -12.391165733337402
    7. ' **' → logprob: -14.016165733337402
    8. '0' → logprob: -14.016165733337402
    9. '    ' → logprob: -14.266165733337402
    10. ' param' → logprob: -14.891165733337402

Token 73: ' param' (ID: 3802)
  Prédit: ' param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.03466711938381195
    2. 'param' → logprob: -3.4096670150756836
    3. ' ' → logprob: -7.909667015075684
    4. '<|end|>' → logprob: -8.034667015075684
    5. '(param' → logprob: -9.159667015075684
    6. ' ' → logprob: -9.659667015075684
    7. '	param' → logprob: -10.159667015075684
    8. ':param' → logprob: -10.784667015075684
    9. ')param' → logprob: -10.909667015075684
    10. '@param' → logprob: -11.034667015075684

Token 74: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0009165783412754536
    2. '_a' → logprob: -7.000916481018066
    3. 'b' → logprob: -12.375916481018066
    4. 'a' → logprob: -14.375916481018066
    5. '_' → logprob: -15.750916481018066
    6. '_c' → logprob: -16.250917434692383
    7. '   ' → logprob: -17.875917434692383
    8. ' _' → logprob: -17.875917434692383
    9. '_B' → logprob: -18.250917434692383
    10. '	b' → logprob: -18.625917434692383

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40966305136680603
    2. '
' → logprob: -1.7846630811691284
    3. '\n' → logprob: -1.9096630811691284
    4. '    
' → logprob: -4.909663200378418
    5. '<|end|>' → logprob: -5.409663200378418
    6. '\' → logprob: -5.659663200378418
    7. '```' → logprob: -5.909663200378418
    8. '  
' → logprob: -7.659663200378418
    9. 'newline' → logprob: -8.909663200378418
    10. '  ' → logprob: -8.909663200378418

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02208673022687435
    2. '<|end|>' → logprob: -4.8970866203308105
    3. '    
' → logprob: -5.1470866203308105
    4. ' ' → logprob: -5.7720866203308105
    5. '\n' → logprob: -6.5220866203308105
    6. ' 
' → logprob: -7.2720866203308105
    7. '
' → logprob: -7.3970866203308105
    8. '  
' → logprob: -7.5220866203308105
    9. '  ' → logprob: -7.7720866203308105
    10. 'n' → logprob: -8.022087097167969

Token 77: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03591914847493172
    2. '    
' → logprob: -4.660919189453125
    3. ' ' → logprob: -5.035919189453125
    4. 'else' → logprob: -5.660919189453125
    5. ' else' → logprob: -6.035919189453125
    6. 'return' → logprob: -6.035919189453125
    7. ')' → logprob: -6.785919189453125
    8. ' 
' → logprob: -6.785919189453125
    9. '  
' → logprob: -6.910919189453125
    10. '\n' → logprob: -6.910919189453125

Token 78: ' param' (ID: 3802)
  Prédit: ' param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.0001561009994475171
    2. 'param' → logprob: -8.87515640258789
    3. '(param' → logprob: -12.00015640258789
    4. ' ' → logprob: -12.62515640258789
    5. ' not' → logprob: -13.12515640258789
    6. ' (' → logprob: -13.50015640258789
    7. ' ' → logprob: -13.75015640258789
    8. ' isinstance' → logprob: -14.25015640258789
    9. ' parameter' → logprob: -14.50015640258789
    10. ' params' → logprob: -14.87515640258789

Token 79: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -6.52788148727268e-05
    2. '_b' → logprob: -10.000064849853516
    3. '_' → logprob: -11.625064849853516
    4. '_c' → logprob: -12.250064849853516
    5. ' _' → logprob: -13.000064849853516
    6. 'a' → logprob: -13.625064849853516
    7. '```' → logprob: -14.250064849853516
    8. '__' → logprob: -14.625064849853516
    9. '<|end|>' → logprob: -15.375064849853516
    10. '_o' → logprob: -15.750064849853516

Token 80: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.010176394134759903
    2. '==' → logprob: -5.260176181793213
    3. ' ' → logprob: -5.760176181793213
    4. ' >' → logprob: -6.510176181793213
    5. ' >=' → logprob: -9.260176658630371
    6. '<|end|>' → logprob: -9.885176658630371
    7. ' <' → logprob: -10.135176658630371
    8. ' =' → logprob: -10.385176658630371
    9. ' <=' → logprob: -10.760176658630371
    10. '>' → logprob: -10.760176658630371

Token 81: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20151127874851227
    2. '3' → logprob: -1.701511263847351
    3. '2' → logprob: -10.20151138305664
    4. '0' → logprob: -10.70151138305664
    5. '  ' → logprob: -12.26401138305664
    6. '1' → logprob: -12.51401138305664
    7. 'param' → logprob: -12.63901138305664
    8. ')' → logprob: -12.76401138305664
    9. 'None' → logprob: -13.07651138305664
    10. 'int' → logprob: -13.32651138305664

Token 82: '0' (ID: 15)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0029340796172618866
    2. ' ' → logprob: -5.877933979034424
    3. '0' → logprob: -9.752934455871582
    4. '2' → logprob: -10.252934455871582
    5. '1' → logprob: -12.002934455871582
    6. 'param' → logprob: -12.190434455871582
    7. '99' → logprob: -12.252934455871582
    8. '100' → logprob: -12.690434455871582
    9. 'elif' → logprob: -13.440434455871582
    10. 'else' → logprob: -13.502934455871582

Token 83: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.34329158067703247
    2. ':' → logprob: -1.4682915210723877
    3. ' >' → logprob: -4.218291759490967
    4. ' or' → logprob: -4.593291759490967
    5. ' :' → logprob: -4.843291759490967
    6. 'and' → logprob: -5.093291759490967
    7. ' ' → logprob: -5.593291759490967
    8. '>' → logprob: -5.968291759490967
    9. 'x' → logprob: -6.093291759490967
    10. '0' → logprob: -6.093291759490967

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17663711309432983
    2. '   ' → logprob: -2.4266371726989746
    3. ':' → logprob: -3.1766371726989746
    4. '    ' → logprob: -4.301637172698975
    5. ' ' → logprob: -5.301637172698975
    6. ':
' → logprob: -6.426637172698975
    7. '    
' → logprob: -6.551637172698975
    8. ' return' → logprob: -6.676637172698975
    9. ' raise' → logprob: -6.676637172698975
    10. ' :' → logprob: -6.801637172698975

Token 85: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0604521706700325
    2. '   ' → logprob: -3.9354522228240967
    3. 'return' (adapté à ' return') → logprob: -4.185451984405518
    4. ' param' → logprob: -4.560451984405518
    5. ' raise' → logprob: -5.185451984405518
    6. ' sys' → logprob: -6.185451984405518
    7. '       ' → logprob: -6.685451984405518
    8. '    ' → logprob: -6.810451984405518
    9. ' None' → logprob: -6.810451984405518
    10. ' ' → logprob: -6.935451984405518

Token 86: ' ' (ID: 220)
  Prédit: ' param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.8922080993652344
    2. ' None' → logprob: -1.1422080993652344
    3. 'param' → logprob: -2.2672080993652344
    4. 'None' → logprob: -2.7672080993652344
    5. ' ' → logprob: -2.8922080993652344
    6. '0' → logprob: -4.017208099365234
    7. '100' → logprob: -4.142208099365234
    8. ' sys' → logprob: -4.767208099365234
    9. '99' → logprob: -6.642208099365234
    10. 'sys' → logprob: -7.017208099365234

Token 87: '101' (ID: 7959)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.22732286155223846
    2. 'compute' → logprob: -2.602322816848755
    3. 'None' → logprob: -2.977322816848755
    4. '100' → logprob: -3.977322816848755
    5. '0' → logprob: -4.227323055267334
    6. '-' → logprob: -4.477323055267334
    7. '99' → logprob: -4.602323055267334
    8. 'sys' → logprob: -4.602323055267334
    9. '999' → logprob: -5.727323055267334
    10. ' param' → logprob: -5.852323055267334

Token 88: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6910004615783691
    2. '<|end|>' → logprob: -1.6910004615783691
    3. '   ' → logprob: -2.066000461578369
    4. ' 
' → logprob: -3.191000461578369
    5. '0' → logprob: -3.441000461578369
    6. '    ' → logprob: -3.691000461578369
    7. '    
' → logprob: -3.816000461578369
    8. '  ' → logprob: -4.316000461578369
    9. '  
' → logprob: -4.691000461578369
    10. ' elif' → logprob: -4.941000461578369

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06992187350988388
    2. ' ' → logprob: -3.4449219703674316
    3. '<|end|>' → logprob: -4.444921970367432
    4. '    
' → logprob: -4.694921970367432
    5. '  ' → logprob: -5.819921970367432
    6. ' elif' → logprob: -6.569921970367432
    7. ' 
' → logprob: -6.569921970367432
    8. '  
' → logprob: -6.694921970367432
    9. '    ' → logprob: -6.694921970367432
    10. ')' → logprob: -6.944921970367432

Token 90: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8211960792541504
    2. ' if' → logprob: -1.3211960792541504
    3. '   ' → logprob: -2.4461960792541504
    4. ' ' → logprob: -2.5711960792541504
    5. 'elif' → logprob: -3.0711960792541504
    6. '<|end|>' → logprob: -3.5711960792541504
    7. 'else' → logprob: -3.8211960792541504
    8. ' else' → logprob: -4.69619607925415
    9. '  ' → logprob: -5.07119607925415
    10. ' elif' → logprob: -5.32119607925415

Token 91: ' param' (ID: 3802)
  Prédit: ' param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -0.004355583339929581
    2. 'param' → logprob: -5.504355430603027
    3. ' ' → logprob: -8.754355430603027
    4. '(param' → logprob: -9.504355430603027
    5. '[param' → logprob: -11.379355430603027
    6. '<|end|>' → logprob: -11.504355430603027
    7. ' not' → logprob: -12.129355430603027
    8. '	param' → logprob: -12.379355430603027
    9. ')param' → logprob: -12.504355430603027
    10. ':param' → logprob: -12.754355430603027

Token 92: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00013643606507685035
    2. '_b' → logprob: -9.125136375427246
    3. '_' → logprob: -11.125136375427246
    4. 'a' → logprob: -11.625136375427246
    5. '<|end|>' → logprob: -13.125136375427246
    6. ' _' → logprob: -13.750136375427246
    7. '_ai' → logprob: -15.750136375427246
    8. '```' → logprob: -16.000137329101562
    9. '_=' → logprob: -17.000137329101562
    10. '<|end|>' → logprob: -17.312637329101562

Token 93: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016219589859247208
    2. '==' → logprob: -4.141219615936279
    3. ' ' → logprob: -9.141219139099121
    4. '<|end|>' → logprob: -10.016219139099121
    5. ' >' → logprob: -11.766219139099121
    6. '  ' → logprob: -12.141219139099121
    7. ' =' → logprob: -12.516219139099121
    8. '1' → logprob: -12.891219139099121
    9. '   ' → logprob: -13.703719139099121
    10. '=' → logprob: -13.828719139099121

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5761988162994385
    2. ' ' → logprob: -0.8261988162994385
    3. '<|end|>' → logprob: -8.57619857788086
    4. '2' → logprob: -10.45119857788086
    5. '0' → logprob: -12.01369857788086
    6. '3' → logprob: -12.07619857788086
    7. '  ' → logprob: -12.45119857788086
    8. '4' → logprob: -12.70119857788086
    9. '   ' → logprob: -12.82619857788086
    10. '<|end|>' → logprob: -12.88869857788086

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001639354508370161
    2. ' ' → logprob: -6.501639366149902
    3. '2' → logprob: -9.251639366149902
    4. '<|end|>' → logprob: -11.251639366149902
    5. '3' → logprob: -11.564139366149902
    6. '0' → logprob: -11.939139366149902
    7. '4' → logprob: -12.689139366149902
    8. '100' → logprob: -14.189139366149902
    9. '<|end|>' → logprob: -14.626639366149902
    10. '  ' → logprob: -14.689139366149902

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004430470522493124
    2. ':
' → logprob: -6.004430294036865
    3. ' :' → logprob: -7.254430294036865
    4. ' and' → logprob: -7.504430294036865
    5. '<|end|>' → logprob: -8.129430770874023
    6. '       ' → logprob: -8.879430770874023
    7. ':return' → logprob: -9.254430770874023
    8. '   ' → logprob: -9.754430770874023
    9. 'and' → logprob: -10.629430770874023
    10. ' ' → logprob: -10.754430770874023

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06701618432998657
    2. ':' → logprob: -2.942016124725342
    3. ':
' → logprob: -5.442016124725342
    4. '   ' → logprob: -5.692016124725342
    5. ':return' → logprob: -6.567016124725342
    6. ' ' → logprob: -7.067016124725342
    7. '<|end|>' → logprob: -7.067016124725342
    8. ' return' → logprob: -8.1920166015625
    9. '      ' → logprob: -8.4420166015625
    10. ' and' → logprob: -8.8170166015625

Token 98: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36886462569236755
    2. 'return' (adapté à ' return') → logprob: -1.74386465549469
    3. '102' → logprob: -2.4938645362854004
    4. ' return' → logprob: -3.4938645362854004
    5. '100' → logprob: -5.4938645362854
    6. '   ' → logprob: -5.4938645362854
    7. '101' → logprob: -5.8688645362854
    8. ' ' → logprob: -5.9938645362854
    9. '      ' → logprob: -6.6188645362854
    10. '104' → logprob: -6.7438645362854

Token 99: ' ' (ID: 220)
  Prédit: '102'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '102' → logprob: -0.3758406937122345
    2. '101' → logprob: -1.625840663909912
    3. '202' → logprob: -3.250840663909912
    4. '100' → logprob: -3.250840663909912
    5. ' ' → logprob: -3.375840663909912
    6. '10' → logprob: -6.750840663909912
    7. '201' → logprob: -7.250840663909912
    8. '999' → logprob: -7.625840663909912
    9. '110' → logprob: -7.625840663909912
    10. '104' → logprob: -8.00084114074707

Token 100: '101' (ID: 7959)
  Prédit: '102'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '102' → logprob: -0.047109268605709076
    2. '101' → logprob: -3.297109365463257
    3. '100' → logprob: -5.797109127044678
    4. '202' → logprob: -5.922109127044678
    5. ' ' → logprob: -6.547109127044678
    6. '999' → logprob: -8.297109603881836
    7. '201' → logprob: -8.547109603881836
    8. '103' → logprob: -8.672109603881836
    9. '10' → logprob: -8.797109603881836
    10. '110' → logprob: -8.859609603881836

Token 101: '00' (ID: 504)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014831089414656162
    2. '    
' → logprob: -5.014831066131592
    3. '<|end|>' → logprob: -5.639831066131592
    4. '
' → logprob: -6.014831066131592
    5. '  
' → logprob: -7.139831066131592
    6. '   
' → logprob: -7.889831066131592
    7. '  ' → logprob: -8.26483154296875
    8. ' 
' → logprob: -8.38983154296875
    9. ' ' → logprob: -8.51483154296875
    10. ' if' → logprob: -9.51483154296875

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014408307615667582
    2. '    
' → logprob: -7.25144100189209
    3. ' if' → logprob: -8.12644100189209
    4. '<|end|>' → logprob: -8.12644100189209
    5. 'if' → logprob: -10.00144100189209
    6. '  
' → logprob: -10.87644100189209
    7. '
' → logprob: -11.12644100189209
    8. ' ' → logprob: -11.25144100189209
    9. ' 
' → logprob: -11.50144100189209
    10. '  ' → logprob: -11.50144100189209

Token 104: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2842516005039215
    2. '   ' → logprob: -1.7842515707015991
    3. ' if' → logprob: -2.5342516899108887
    4. ' ' → logprob: -9.65925121307373
    5. 'return' (adapté à ' return') → logprob: -9.78425121307373
    6. '  ' → logprob: -10.78425121307373
    7. '    
' → logprob: -11.28425121307373
    8. '```' → logprob: -12.53425121307373
    9. 'else' → logprob: -12.78425121307373
    10. '       ' → logprob: -12.78425121307373

Token 105: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4860931932926178
    2. '101' → logprob: -1.1110931634902954
    3. '100' → logprob: -2.986093282699585
    4. 'param' → logprob: -6.861093044281006
    5. '102' → logprob: -6.986093044281006
    6. ' param' → logprob: -6.986093044281006
    7. '0' → logprob: -7.111093044281006
    8. 'None' → logprob: -7.736093044281006
    9. '999' → logprob: -8.111093521118164
    10. ' None' → logprob: -8.236093521118164

Token 106: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.0645458847284317
    2. '102' → logprob: -3.4395458698272705
    3. '-' → logprob: -4.18954610824585
    4. '100' → logprob: -5.06454610824585
    5. 'None' → logprob: -5.68954610824585
    6. '0' → logprob: -6.56454610824585
    7. '202' → logprob: -6.93954610824585
    8. 'param' → logprob: -7.18954610824585
    9. '999' → logprob: -7.68954610824585
    10. ' ' → logprob: -7.81454610824585

Token 107: '000' (ID: 1302)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '0' (ID: 15)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.20852530002594
    2. '#' → logprob: -1.33352530002594
    3. '<|end|>' → logprob: -1.70852530002594
    4. '\n' → logprob: -2.3335251808166504
    5. '\' → logprob: -2.8335251808166504
    6. '
' → logprob: -3.2085251808166504
    7. 'n' → logprob: -4.70852518081665
    8. '*' → logprob: -4.95852518081665
    9. '+' → logprob: -5.33352518081665
    10. '.' → logprob: -5.45852518081665

Token 111: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.003220133949071169
    2. ' _' → logprob: -6.753220081329346
    3. ' compute' → logprob: -6.753220081329346
    4. ' process' → logprob: -7.878220081329346
    5. '_main' → logprob: -9.128220558166504
    6. ' calculate' → logprob: -9.128220558166504
    7. ' ' → logprob: -9.878220558166504
    8. '_' → logprob: -10.128220558166504
    9. ' parse' → logprob: -10.503220558166504
    10. ' solve' → logprob: -10.628220558166504

Token 112: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18775328993797302
    2. '_input' → logprob: -1.9377533197402954
    3. '_param' → logprob: -4.562753200531006
    4. '_argument' → logprob: -4.937753200531006
    5. '_data' → logprob: -6.562753200531006
    6. '_command' → logprob: -6.812753200531006
    7. '_line' → logprob: -6.937753200531006
    8. '_arguments' → logprob: -6.937753200531006
    9. '_parameter' → logprob: -6.937753200531006
    10. '_parameters' → logprob: -7.312753200531006

Token 113: '_line' (ID: 14418)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.808809757232666
    2. '(' → logprob: -1.433809757232666
    3. '():' → logprob: -1.433809757232666
    4. '(line' → logprob: -3.308809757232666
    5. ' (' → logprob: -4.558809757232666
    6. '(user' → logprob: -4.808809757232666
    7. ' ():' → logprob: -4.933809757232666
    8. '(prompt' → logprob: -5.308809757232666
    9. '(argv' → logprob: -5.683809757232666
    10. '(s' → logprob: -6.183809757232666

Token 114: '():
' (ID: 8595)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.019606806337833405
    2. ' (' → logprob: -4.019606590270996
    3. '(' → logprob: -6.644606590270996
    4. '(input' → logprob: -8.894606590270996
    5. ' line' → logprob: -11.769606590270996
    6. '(s' → logprob: -12.144606590270996
    7. '(lines' → logprob: -13.394606590270996
    8. '(user' → logprob: -14.519606590270996
    9. '(data' → logprob: -15.394606590270996
    10. '():' → logprob: -15.519606590270996

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023274829145520926
    2. ' line' → logprob: -6.1273274421691895
    3. ' input' → logprob: -9.377327919006348
    4. ' return' → logprob: -11.502327919006348
    5. 'line' → logprob: -11.627327919006348
    6. '    ' → logprob: -11.627327919006348
    7. ' try' → logprob: -11.752327919006348
    8. 'input' → logprob: -12.377327919006348
    9. '   ' → logprob: -12.377327919006348
    10. ' readline' → logprob: -12.877327919006348

Token 116: ' input' (ID: 3422)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.028560597449541092
    2. 'line' → logprob: -3.7785606384277344
    3. ' try' → logprob: -6.528560638427734
    4. '   ' → logprob: -6.528560638427734
    5. ' return' → logprob: -6.653560638427734
    6. ' input' → logprob: -7.903560638427734
    7. 'try' → logprob: -8.403560638427734
    8. 'return' → logprob: -9.028560638427734
    9. ' import' → logprob: -9.153560638427734
    10. 'import' → logprob: -9.403560638427734

Token 117: '_line' (ID: 14418)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016325023025274277
    2. '().' → logprob: -4.391324996948242
    3. '_line' → logprob: -5.891324996948242
    4. '(' → logprob: -7.641324996948242
    5. '_' → logprob: -7.891324996948242
    6. '()
' → logprob: -10.016324996948242
    7. ' ()' → logprob: -11.141324996948242
    8. '())' → logprob: -11.141324996948242
    9. '();' → logprob: -11.266324996948242
    10. '()`' → logprob: -11.391324996948242

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006771856918931007
    2. '=' → logprob: -5.006772041320801
    3. '()' → logprob: -10.1317720413208
    4. ' ' → logprob: -11.3817720413208
    5. 's' → logprob: -12.7567720413208
    6. '_' → logprob: -14.2567720413208
    7. '	' → logprob: -14.6317720413208
    8. ' ' → logprob: -14.7567720413208
    9. '(' → logprob: -15.2567720413208
    10. '   ' → logprob: -16.381771087646484

Token 119: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014594395644962788
    2. 'sys' → logprob: -4.639594554901123
    3. ' input' → logprob: -5.389594554901123
    4. 'input' → logprob: -8.264594078063965
    5. ' ' → logprob: -13.014594078063965
    6. '	sys' → logprob: -13.014594078063965
    7. '=sys' → logprob: -14.389594078063965
    8. '(sys' → logprob: -15.139594078063965
    9. ' ' → logprob: -16.76459503173828
    10. ' raw' → logprob: -17.01459503173828

Token 120: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00010044389637187123
    2. '.' → logprob: -9.625100135803223
    3. '.stdout' → logprob: -10.750100135803223
    4. '.argv' → logprob: -11.625100135803223
    5. '.readline' → logprob: -13.000100135803223
    6. '.std' → logprob: -14.000100135803223
    7. '.input' → logprob: -14.625100135803223
    8. 'stdin' → logprob: -15.750100135803223
    9. '.st' → logprob: -16.00010108947754
    10. '.stderr' → logprob: -16.25010108947754

Token 121: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00015920029545668513
    2. '.' → logprob: -8.75015926361084
    3. '.readlines' → logprob: -15.00015926361084
    4. '.read' → logprob: -15.25015926361084
    5. ' readline' → logprob: -16.000158309936523
    6. ' .' → logprob: -19.500158309936523
    7. '.stdin' → logprob: -19.750158309936523
    8. '.rstrip' → logprob: -20.125158309936523
    9. '.fetchone' → logprob: -20.250158309936523
    10. 'read' → logprob: -20.250158309936523

Token 122: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3869117796421051
    2. '().' → logprob: -1.1369117498397827
    3. '(' → logprob: -10.386911392211914
    4. '()
' → logprob: -12.136911392211914
    5. '()

' → logprob: -13.261911392211914
    6. ' ()' → logprob: -14.261911392211914
    7. '())' → logprob: -14.761911392211914
    8. '()`' → logprob: -15.011911392211914
    9. ' ().' → logprob: -15.386911392211914
    10. '()<' → logprob: -15.511911392211914

Token 123: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0067154900170862675
    2. 'rstrip' → logprob: -5.006715297698975
    3. ' strip' → logprob: -16.256715774536133
    4. '(strip' → logprob: -17.631715774536133
    5. '_strip' → logprob: -18.506715774536133
    6. 'str' → logprob: -20.006715774536133
    7. 'decode' → logprob: -20.256715774536133
    8. 'split' → logprob: -20.756715774536133
    9. '.strip' → logprob: -21.506715774536133
    10. 'rst' → logprob: -21.631715774536133

Token 124: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005975929088890553
    2. '(' → logprob: -7.6255974769592285
    3. '()\' → logprob: -9.875597953796387
    4. '()
' → logprob: -10.125597953796387
    5. '('\' → logprob: -11.375597953796387
    6. '()

' → logprob: -13.500597953796387
    7. '('' → logprob: -13.750597953796387
    8. '().' → logprob: -14.125597953796387
    9. ' ()' → logprob: -14.250597953796387
    10. '())' → logprob: -14.375597953796387

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015544365160167217
    2. ' if' → logprob: -5.640544414520264
    3. '.split' → logprob: -5.890544414520264
    4. 'tokens' → logprob: -6.015544414520264
    5. ' ' → logprob: -6.390544414520264
    6. '    
' → logprob: -6.765544414520264
    7. '<|end|>' → logprob: -7.390544414520264
    8. ' tokens' → logprob: -7.765544414520264
    9. '()' → logprob: -8.140543937683105
    10. '    ' → logprob: -8.390543937683105

Token 126: ' str' (ID: 989)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -1.2738906145095825
    2. 'if' → logprob: -1.6488906145095825
    3. ' parts' → logprob: -1.8988906145095825
    4. 'tokens' → logprob: -2.023890495300293
    5. 'return' → logprob: -2.773890495300293
    6. ' if' → logprob: -2.773890495300293
    7. 'params' → logprob: -3.148890495300293
    8. 'values' → logprob: -3.773890495300293
    9. ' tokens' → logprob: -3.773890495300293
    10. ' return' → logprob: -4.398890495300293

Token 127: '_a' (ID: 10852)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.236038476228714
    2. '_tokens' → logprob: -2.7360384464263916
    3. '_parts' → logprob: -2.8610384464263916
    4. 'ings' → logprob: -3.4860384464263916
    5. '_values' → logprob: -3.7360384464263916
    6. '_vals' → logprob: -4.611038684844971
    7. 'ing' → logprob: -5.111038684844971
    8. '_s' → logprob: -5.361038684844971
    9. '_items' → logprob: -6.611038684844971
    10. '_value' → logprob: -6.611038684844971

Token 128: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11916729062795639
    2. ',' → logprob: -2.3691673278808594
    3. '=' → logprob: -4.494167327880859
    4. ' ,' → logprob: -5.494167327880859
    5. '_parts' → logprob: -6.869167327880859
    6. 's' → logprob: -6.994167327880859
    7. '_tokens' → logprob: -7.244167327880859
    8. '_a' → logprob: -8.99416732788086
    9. ',a' → logprob: -9.24416732788086
    10. '_val' → logprob: -9.24416732788086

Token 129: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.19707940518856049
    2. ' str' → logprob: -2.4470794200897217
    3. ' ' → logprob: -2.5720794200897217
    4. '<|end|>' → logprob: -4.822079181671143
    5. '_str' → logprob: -5.822079181671143
    6. 'space' → logprob: -6.072079181671143
    7. '  ' → logprob: -7.197079181671143
    8. '_' → logprob: -7.822079181671143
    9. '=str' → logprob: -8.3220796585083
    10. ' =' → logprob: -8.6970796585083

Token 130: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00596398813650012
    2. '_' → logprob: -5.1309638023376465
    3. 'b' → logprob: -10.755964279174805
    4. '_a' → logprob: -12.630964279174805
    5. '_p' → logprob: -12.880964279174805
    6. ' _' → logprob: -13.130964279174805
    7. '_space' → logprob: -14.005964279174805
    8. '_=' → logprob: -14.005964279174805
    9. '__' → logprob: -14.380964279174805
    10. '_,' → logprob: -15.005964279174805

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804275393486023
    2. '=' → logprob: -3.2880427837371826
    3. ',' → logprob: -13.913043022155762
    4. ' ' → logprob: -15.413043022155762
    5. ' =
' → logprob: -16.788042068481445
    6. '=input' → logprob: -17.663042068481445
    7. ')' → logprob: -17.663042068481445
    8. '=line' → logprob: -18.038042068481445
    9. '  ' → logprob: -18.163042068481445
    10. '＝' → logprob: -18.163042068481445

Token 132: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04865288361907005
    2. 'input' → logprob: -3.0486528873443604
    3. ' ' → logprob: -9.673652648925781
    4. 'Input' → logprob: -14.298652648925781
    5. '_input' → logprob: -14.548652648925781
    6. '	input' → logprob: -14.673652648925781
    7. '(input' → logprob: -15.173652648925781
    8. '<|end|>' → logprob: -15.548652648925781
    9. '=input' → logprob: -15.673652648925781
    10. '    ' → logprob: -15.923652648925781

Token 133: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -12.500003814697266
    3. 'line' → logprob: -15.750003814697266
    4. '_LINE' → logprob: -16.625003814697266
    5. '_l' → logprob: -16.750003814697266
    6. '_lines' → logprob: -16.750003814697266
    7. '_lin' → logprob: -17.125003814697266
    8. ' _' → logprob: -17.375003814697266
    9. '_Line' → logprob: -17.750003814697266
    10. 'Line' → logprob: -18.125003814697266

Token 134: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.25313740968704224
    2. '.' → logprob: -1.5031373500823975
    3. ' .' → logprob: -6.753137588500977
    4. '().' → logprob: -10.503137588500977
    5. '.strip' → logprob: -12.253137588500977
    6. 'split' → logprob: -13.003137588500977
    7. '.Split' → logprob: -13.878137588500977
    8. ' split' → logprob: -14.003137588500977
    9. ' =' → logprob: -14.128137588500977
    10. '=' → logprob: -14.378137588500977

Token 135: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.21137183904647827
    2. '()' → logprob: -1.711371898651123
    3. '(' → logprob: -4.711371898651123
    4. '("' → logprob: -7.086371898651123
    5. '(',' → logprob: -9.836371421813965
    6. '("("' → logprob: -11.711371421813965
    7. ''' → logprob: -12.711371421813965
    8. '(None' → logprob: -12.711371421813965
    9. '(','' → logprob: -12.836371421813965
    10. '()='' → logprob: -13.961371421813965

Token 136: ' ')
' (ID: 49195)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7079159021377563
    2. '()' → logprob: -1.3329159021377563
    3. '('' → logprob: -2.457915782928467
    4. ' ')' → logprob: -2.707915782928467
    5. ')' → logprob: -3.332915782928467
    6. ' )' → logprob: -3.707915782928467
    7. '(' → logprob: -4.082915782928467
    8. '')' → logprob: -5.707915782928467
    9. '<|end|>' → logprob: -5.957915782928467
    10. ' '' → logprob: -6.457915782928467

Token 137: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0861239954829216
    2. '   ' → logprob: -3.0861239433288574
    3. '<|end|>' → logprob: -4.086123943328857
    4. '    
' → logprob: -4.336123943328857
    5. 'return' → logprob: -5.711123943328857
    6. '  
' → logprob: -6.711123943328857
    7. '<|end|>' → logprob: -7.336123943328857
    8. ')' → logprob: -8.461124420166016
    9. ' ' → logprob: -8.461124420166016
    10. '   
' → logprob: -8.586124420166016

Token 138: ' int' (ID: 677)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.14454327523708344
    2. 'a' → logprob: -2.144543170928955
    3. 'return' → logprob: -4.269543170928955
    4. 'try' → logprob: -6.019543170928955
    5. 'int' (adapté à ' int') → logprob: -7.144543170928955
    6. 'result' → logprob: -8.644543647766113
    7. 'val' → logprob: -10.644543647766113
    8. ' param' → logprob: -10.769543647766113
    9. 'value' → logprob: -12.269543647766113
    10. 'print' → logprob: -12.394543647766113

Token 139: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -2.558399319241289e-05
    2. '<|end|>' → logprob: -11.125025749206543
    3. 'a' → logprob: -11.875025749206543
    4. '_' → logprob: -13.125025749206543
    5. '_param' → logprob: -14.375025749206543
    6. ' _' → logprob: -14.375025749206543
    7. '_b' → logprob: -15.125025749206543
    8. 'A' → logprob: -16.500024795532227
    9. 'param' → logprob: -16.875024795532227
    10. '_A' → logprob: -17.750024795532227

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061992447823286057
    2. '=' → logprob: -2.8119924068450928
    3. '=int' → logprob: -11.686992645263672
    4. ',' → logprob: -12.061992645263672
    5. ' ' → logprob: -12.561992645263672
    6. '  ' → logprob: -12.811992645263672
    7. ')' → logprob: -13.311992645263672
    8. '<|end|>' → logprob: -13.936992645263672
    9. '_' → logprob: -14.311992645263672
    10. ' =
' → logprob: -15.436992645263672

Token 141: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031777136027812958
    2. ' int' → logprob: -5.753177642822266
    3. '[int' → logprob: -19.128177642822266
    4. ' ' → logprob: -20.003177642822266
    5. '<int' → logprob: -20.003177642822266
    6. '=int' → logprob: -20.378177642822266
    7. '  ' → logprob: -20.378177642822266
    8. '(int' → logprob: -20.628177642822266
    9. ':int' → logprob: -21.878177642822266
    10. '	int' → logprob: -22.003177642822266

Token 142: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.01815052703022957
    2. '(' → logprob: -4.018150329589844
    3. '(
' → logprob: -15.393150329589844
    4. 'str' → logprob: -15.518150329589844
    5. ' (' → logprob: -16.268150329589844
    6. '(s' → logprob: -16.893150329589844
    7. '	str' → logprob: -17.268150329589844
    8. '('' → logprob: -17.268150329589844
    9. '(Str' → logprob: -18.018150329589844
    10. ' str' → logprob: -18.268150329589844

Token 143: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.5
    3. '_b' → logprob: -16.625
    4. ' _' → logprob: -16.875
    5. 'a' → logprob: -17.125
    6. ')_' → logprob: -19.0
    7. ')' → logprob: -20.25
    8. '(_' → logprob: -20.75
    9. ' ' → logprob: -20.75
    10. '(a' → logprob: -20.875

Token 144: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046153197763487697
    2. ')
' → logprob: -8.00046157836914
    3. ' )' → logprob: -9.00046157836914
    4. ' )
' → logprob: -14.12546157836914
    5. '<|end|>' → logprob: -14.37546157836914
    6. ')

' → logprob: -14.62546157836914
    7. ',' → logprob: -15.25046157836914
    8. ' ' → logprob: -15.50046157836914
    9. ')
' → logprob: -16.25046157836914
    10. '),' → logprob: -16.50046157836914

Token 145: '   ' (ID: 271)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.33146175742149353
    2. 'int' → logprob: -1.581461787223816
    3. ' 
' → logprob: -3.0814616680145264
    4. ' ' → logprob: -3.5814616680145264
    5. '<|end|>' → logprob: -6.8314619064331055
    6. '  
' → logprob: -7.4564619064331055
    7. '    
' → logprob: -8.081461906433105
    8. '=int' → logprob: -9.331461906433105
    9. ',int' → logprob: -9.331461906433105
    10. '   ' → logprob: -9.456461906433105

Token 146: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.04858986660838127
    2. ' int' → logprob: -3.0485899448394775
    3. ' ' → logprob: -14.173589706420898
    4. '=int' → logprob: -14.423589706420898
    5. ' 
' → logprob: -15.048589706420898
    6. 'intval' → logprob: -15.298589706420898
    7. '	int' → logprob: -15.548589706420898
    8. '<int' → logprob: -16.0485897064209
    9. '(int' → logprob: -16.0485897064209
    10. '_int' → logprob: -16.5485897064209

Token 147: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.04105090722441673
    2. '_' → logprob: -3.791050910949707
    3. '_a' → logprob: -4.041050910949707
    4. ' _' → logprob: -9.666050910949707
    5. '_B' → logprob: -13.166050910949707
    6. 'a' → logprob: -14.291050910949707
    7. '```' → logprob: -14.416050910949707
    8. '__' → logprob: -14.666050910949707
    9. ' ' → logprob: -15.041050910949707
    10. '}_' → logprob: -15.291050910949707

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02976737916469574
    2. '=' → logprob: -3.5297672748565674
    3. '=int' → logprob: -11.029767036437988
    4. ' ' → logprob: -15.529767036437988
    5. ')' → logprob: -15.654767036437988
    6. ' =)' → logprob: -16.279767990112305
    7. '<|end|>' → logprob: -16.404767990112305
    8. ' =
' → logprob: -16.529767990112305
    9. '＝' → logprob: -17.904767990112305
    10. ' ' → logprob: -18.279767990112305

Token 149: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004078639671206474
    2. ' int' → logprob: -5.5040788650512695
    3. '<int' → logprob: -16.504077911376953
    4. '=int' → logprob: -17.254077911376953
    5. '[int' → logprob: -17.254077911376953
    6. '(int' → logprob: -17.379077911376953
    7. ' ' → logprob: -18.254077911376953
    8. '	int' → logprob: -18.254077911376953
    9. ':int' → logprob: -18.879077911376953
    10. '   ' → logprob: -19.879077911376953

Token 150: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -8.41866585687967e-06
    2. '(int' → logprob: -12.125008583068848
    3. '(' → logprob: -13.625008583068848
    4. '_b' → logprob: -14.125008583068848
    5. '_str' → logprob: -14.625008583068848
    6. 'str' → logprob: -15.250008583068848
    7. '=str' → logprob: -16.12500762939453
    8. '[str' → logprob: -16.62500762939453
    9. '_(' → logprob: -16.62500762939453
    10. '	str' → logprob: -16.87500762939453

Token 151: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -4.008129963040119e-06
    2. '_a' → logprob: -12.625003814697266
    3. ')' → logprob: -14.875003814697266
    4. 'b' → logprob: -15.625003814697266
    5. '_B' → logprob: -16.375003814697266
    6. ')_' → logprob: -17.250003814697266
    7. 'B' → logprob: -18.250003814697266
    8. '_)' → logprob: -19.125003814697266
    9. '```' → logprob: -19.375003814697266
    10. '_' → logprob: -19.500003814697266

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1689596148207784e-05
    2. ')
' → logprob: -9.875051498413086
    3. ')

' → logprob: -16.625051498413086
    4. ')return' → logprob: -17.625051498413086
    5. ' )' → logprob: -17.625051498413086
    6. ')
' → logprob: -18.000051498413086
    7. '))' → logprob: -18.625051498413086
    8. '),' → logprob: -18.625051498413086
    9. '   ' → logprob: -19.125051498413086
    10. '()' → logprob: -19.750051498413086

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13338738679885864
    2. ' return' → logprob: -2.633387327194214
    3. '
' → logprob: -3.508387327194214
    4. 'return' → logprob: -4.008387565612793
    5. '	return' → logprob: -6.008387565612793
    6. '<|end|>' → logprob: -6.883387565612793
    7. '    
' → logprob: -7.133387565612793
    8. ':return' → logprob: -8.758387565612793
    9. '  
' → logprob: -9.008387565612793
    10. ' ' → logprob: -9.508387565612793

Token 154: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4820346236228943
    2. ' return' → logprob: -0.9820346236228943
    3. 'result' → logprob: -5.107034683227539
    4. ' result' → logprob: -6.482034683227539
    5. '   ' → logprob: -8.232034683227539
    6. '
' → logprob: -10.482034683227539
    7. '	return' → logprob: -11.357034683227539
    8. '    
' → logprob: -12.107034683227539
    9. ' ' → logprob: -12.232034683227539
    10. ' if' → logprob: -12.232034683227539

Token 155: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4573187232017517
    2. 'int' → logprob: -1.0823187828063965
    3. '(int' → logprob: -3.9573187828063965
    4. ' (' → logprob: -4.7073187828063965
    5. ' ' → logprob: -10.457318305969238
    6. '[int' → logprob: -10.832318305969238
    7. '<int' → logprob: -12.582318305969238
    8. '	int' → logprob: -12.707318305969238
    9. ' ' → logprob: -12.707318305969238
    10. '   ' → logprob: -12.707318305969238

Token 156: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -6.623244553338736e-05
    2. '_b' → logprob: -9.625065803527832
    3. 'a' → logprob: -16.12506675720215
    4. '_' → logprob: -17.00006675720215
    5. ' _' → logprob: -18.25006675720215
    6. '```' → logprob: -18.62506675720215
    7. '}_' → logprob: -19.00006675720215
    8. '_i' → logprob: -19.25006675720215
    9. '_c' → logprob: -19.75006675720215
    10. ')_' → logprob: -20.12506675720215

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18007981777191162
    2. ' ,' → logprob: -1.8050798177719116
    3. ',int' → logprob: -8.555079460144043
    4. '_,' → logprob: -9.305079460144043
    5. ',b' → logprob: -10.805079460144043
    6. '<|end|>' → logprob: -11.305079460144043
    7. ',
' → logprob: -11.930079460144043
    8. ' ' → logprob: -12.680079460144043
    9. ' ,
' → logprob: -12.805079460144043
    10. '‌,' → logprob: -13.430079460144043

Token 158: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20141372084617615
    2. ' int' → logprob: -1.7014137506484985
    3. '<int' → logprob: -16.076414108276367
    4. '<|end|>' → logprob: -16.076414108276367
    5. ' ' → logprob: -16.826414108276367
    6. '[int' → logprob: -17.201414108276367
    7. '_int' → logprob: -17.451414108276367
    8. '(int' → logprob: -17.451414108276367
    9. ' ' → logprob: -17.701414108276367
    10. ',int' → logprob: -17.701414108276367

Token 159: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.796184723294573e-06
    2. 'b' → logprob: -12.125005722045898
    3. '_' → logprob: -15.750005722045898
    4. '_a' → logprob: -16.3750057220459
    5. '```' → logprob: -18.2500057220459
    6. 'a' → logprob: -19.1250057220459
    7. 'B' → logprob: -19.2500057220459
    8. '_B' → logprob: -19.2500057220459
    9. '<|end|>' → logprob: -19.5000057220459
    10. '_
' → logprob: -19.6250057220459

Token 160: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.221658855676651
    2. 'def' → logprob: -2.221658945083618
    3. '<|end|>' → logprob: -2.471658945083618
    4. '

' → logprob: -5.221658706665039
    5. '<|end|>' → logprob: -8.221658706665039
    6. '```' → logprob: -9.721658706665039
    7. '  
' → logprob: -9.971658706665039
    8. '#' → logprob: -9.971658706665039
    9. '
' → logprob: -10.596658706665039
    10. ' def' → logprob: -11.096658706665039

Token 161: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004713495261967182
    2. 'while' → logprob: -5.879713535308838
    3. 'for' → logprob: -6.754713535308838
    4. 'if' → logprob: -7.254713535308838
    5. '```' → logprob: -11.12971305847168
    6. 'int' → logprob: -12.00471305847168
    7. '#' → logprob: -12.62971305847168
    8. 'data' → logprob: -13.62971305847168
    9. 'result' → logprob: -13.75471305847168
    10. '
' → logprob: -13.75471305847168

Token 162: ' run' (ID: 2461)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00010556964843999594
    2. ' process' → logprob: -9.250105857849121
    3. ' compute' → logprob: -12.375105857849121
    4. 'main' → logprob: -13.000105857849121
    5. '_main' → logprob: -13.500105857849121
    6. ' calculate' → logprob: -14.750105857849121
    7. ' solve' → logprob: -14.750105857849121
    8. '_' → logprob: -15.125105857849121
    9. ' _' → logprob: -16.125104904174805
    10. '	main' → logprob: -16.625104904174805

Token 163: '_program' (ID: 58929)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.038116540759801865
    2. '_' → logprob: -3.663116455078125
    3. '():
' → logprob: -4.663116455078125
    4. '_program' → logprob: -7.038116455078125
    5. ' ():' → logprob: -8.038116455078125
    6. '()' → logprob: -8.663116455078125
    7. '_command' → logprob: -8.788116455078125
    8. '_compute' → logprob: -8.913116455078125
    9. '_code' → logprob: -9.663116455078125
    10. '_:' → logprob: -9.788116455078125

Token 164: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0025037210434675217
    2. ' ():' → logprob: -6.002503871917725
    3. '():
' → logprob: -10.502503395080566
    4. '()' → logprob: -14.627503395080566
    5. ' ()' → logprob: -16.127504348754883
    6. '():
' → logprob: -17.252504348754883
    7. '():

' → logprob: -18.752504348754883
    8. '(' → logprob: -19.377504348754883
    9. ':' → logprob: -20.002504348754883
    10. '_' → logprob: -21.502504348754883

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00582759128883481
    2. ' while' → logprob: -5.2558274269104
    3. 'while' → logprob: -8.380827903747559
    4. 'int' → logprob: -9.005827903747559
    5. '
' → logprob: -9.255827903747559
    6. '    
' → logprob: -9.755827903747559
    7. ' int' → logprob: -10.255827903747559
    8. '    ' → logprob: -11.755827903747559
    9. ' a' → logprob: -11.880827903747559
    10. 'a' → logprob: -11.880827903747559

Token 166: ' input' (ID: 3422)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4265962541103363
    2. ' while' → logprob: -1.3015962839126587
    3. 'int' → logprob: -3.551596164703369
    4. '   ' → logprob: -3.676596164703369
    5. ' int' → logprob: -5.176596164703369
    6. 'a' → logprob: -5.676596164703369
    7. ' a' → logprob: -6.301596164703369
    8. 'input' (adapté à ' input') → logprob: -6.551596164703369
    9. 'param' → logprob: -6.551596164703369
    10. 'n' → logprob: -6.926596164703369

Token 167: '_a' (ID: 10852)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.13850583136081696
    2. '_count' → logprob: -3.1385059356689453
    3. '_lines' → logprob: -3.8885059356689453
    4. '_data' → logprob: -3.8885059356689453
    5. '_a' → logprob: -4.013505935668945
    6. '_' → logprob: -4.013505935668945
    7. '()' → logprob: -5.888505935668945
    8. '_num' → logprob: -5.888505935668945
    9. '_number' → logprob: -7.013505935668945
    10. '_pair' → logprob: -7.888505935668945

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.60414821645827e-06
    2. ' ,' → logprob: -13.000004768371582
    3. ',input' → logprob: -13.625004768371582
    4. 'a' → logprob: -14.875004768371582
    5. ',int' → logprob: -15.750004768371582
    6. ',a' → logprob: -16.125003814697266
    7. ' =' → logprob: -16.250003814697266
    8. '=' → logprob: -16.500003814697266
    9. '_,' → logprob: -16.625003814697266
    10. '1' → logprob: -16.625003814697266

Token 169: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16022706031799316
    2. 'input' → logprob: -1.9102270603179932
    3. '_input' → logprob: -13.535226821899414
    4. '<|end|>' → logprob: -14.285226821899414
    5. ' ' → logprob: -14.660226821899414
    6. '	input' → logprob: -14.910226821899414
    7. '=input' → logprob: -16.035226821899414
    8. '(input' → logprob: -16.910226821899414
    9. '<|end|>' → logprob: -17.535226821899414
    10. '    ' → logprob: -18.160226821899414

Token 170: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00038658222183585167
    2. '_' → logprob: -7.875386714935303
    3. '_a' → logprob: -12.375386238098145
    4. 'b' → logprob: -13.125386238098145
    5. ' _' → logprob: -15.375386238098145
    6. '_B' → logprob: -17.12538719177246
    7. '_
' → logprob: -18.00038719177246
    8. '<|end|>' → logprob: -18.12538719177246
    9. '```' → logprob: -18.12538719177246
    10. '_c' → logprob: -18.50038719177246

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059289163909852505
    2. '=' → logprob: -5.130928993225098
    3. '=parse' → logprob: -16.00592803955078
    4. ',' → logprob: -16.13092803955078
    5. ' ' → logprob: -16.88092803955078
    6. '<|end|>' → logprob: -17.13092803955078
    7. '=input' → logprob: -18.38092803955078
    8. ' =
' → logprob: -18.75592803955078
    9. '<|end|>' → logprob: -18.75592803955078
    10. ' =)' → logprob: -19.00592803955078

Token 172: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.2519332468509674
    2. 'parse' → logprob: -1.501933217048645
    3. '=parse' → logprob: -13.626933097839355
    4. '	parse' → logprob: -13.751933097839355
    5. '(parse' → logprob: -14.001933097839355
    6. '_parse' → logprob: -14.626933097839355
    7. '.parse' → logprob: -15.251933097839355
    8. ' sys' → logprob: -16.001934051513672
    9. ' ' → logprob: -16.001934051513672
    10. 'sys' → logprob: -17.501934051513672

Token 173: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -12.75000286102295
    3. '_in' → logprob: -15.75000286102295
    4. '_output' → logprob: -17.750003814697266
    5. '_Input' → logprob: -18.375003814697266
    6. '_inputs' → logprob: -18.750003814697266
    7. ' _' → logprob: -19.125003814697266
    8. '_
' → logprob: -19.625003814697266
    9. '_INPUT' → logprob: -20.000003814697266
    10. '_line' → logprob: -20.000003814697266

Token 174: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -4.961759259458631e-06
    2. 'line' → logprob: -12.250004768371582
    3. '_' → logprob: -16.2500057220459
    4. '_LINE' → logprob: -17.1250057220459
    5. '_lines' → logprob: -18.1250057220459
    6. 'Line' → logprob: -18.5000057220459
    7. '_l' → logprob: -18.7500057220459
    8. '_list' → logprob: -19.3750057220459
    9. '_file' → logprob: -19.6250057220459
    10. ' line' → logprob: -19.6250057220459

Token 175: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15980318188667297
    2. '<|end|>' → logprob: -2.0348031520843506
    3. '<|end|>' → logprob: -4.65980339050293
    4. '()
' → logprob: -6.15980339050293
    5. '   ' → logprob: -6.28480339050293
    6. '()' → logprob: -6.65980339050293
    7. '  
' → logprob: -7.03480339050293
    8. '    
' → logprob: -7.53480339050293
    9. ' ' → logprob: -9.15980339050293
    10. ' 
' → logprob: -9.15980339050293

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030624888837337494
    2. 'result' → logprob: -4.155624866485596
    3. '
' → logprob: -4.530624866485596
    4. ' result' → logprob: -6.030624866485596
    5. '    
' → logprob: -6.780624866485596
    6. 'output' → logprob: -9.530625343322754
    7. 'print' → logprob: -10.155625343322754
    8. '  
' → logprob: -12.030625343322754
    9. '	result' → logprob: -12.030625343322754
    10. ' output' → logprob: -12.405625343322754

Token 177: ' output' (ID: 4733)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6354994177818298
    2. 'result' → logprob: -0.7604994177818298
    3. 'print' → logprob: -6.885499477386475
    4. ' output' → logprob: -7.385499477386475
    5. 'output' (adapté à ' output') → logprob: -7.510499477386475
    6. ' print' → logprob: -7.760499477386475
    7. '   ' → logprob: -8.635499000549316
    8. 'res' → logprob: -11.135499000549316
    9. '
' → logprob: -11.385499000549316
    10. ' res' → logprob: -11.510499000549316

Token 178: '_result' (ID: 11623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1544269621372223
    2. ' =' → logprob: -2.5294270515441895
    3. '_result' → logprob: -3.2794270515441895
    4. '_value' → logprob: -4.0294270515441895
    5. '=' → logprob: -4.9044270515441895
    6. '_val' → logprob: -7.9044270515441895
    7. '_=' → logprob: -9.404426574707031
    8. 'result' → logprob: -11.154426574707031
    9. ' ' → logprob: -11.279426574707031
    10. '=_' → logprob: -11.404426574707031

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061974965035915375
    2. '=' → logprob: -2.8119750022888184
    3. '(' → logprob: -12.43697452545166
    4. ')' → logprob: -13.81197452545166
    5. ' ' → logprob: -14.06197452545166
    6. '_' → logprob: -14.81197452545166
    7. '()' → logprob: -15.06197452545166
    8. '   ' → logprob: -15.06197452545166
    9. '  ' → logprob: -15.56197452545166
    10. 's' → logprob: -15.81197452545166

Token 180: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.06196824833750725
    2. 'compute' → logprob: -2.8119683265686035
    3. ' ' → logprob: -15.686967849731445
    4. '.compute' → logprob: -16.061967849731445
    5. '(com' → logprob: -16.436967849731445
    6. '_compute' → logprob: -16.686967849731445
    7. '   ' → logprob: -16.811967849731445
    8. ' ' → logprob: -17.186967849731445
    9. ' computer' → logprob: -17.561967849731445
    10. '
' → logprob: -17.686967849731445

Token 181: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. '_results' → logprob: -17.875
    4. 'result' → logprob: -18.375
    5. '_output' → logprob: -19.0
    6. '_RESULT' → logprob: -19.375
    7. '_res' → logprob: -19.375
    8. ' _' → logprob: -19.5
    9. '_Result' → logprob: -20.25
    10. '"_' → logprob: -20.875

Token 182: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0003600144700612873
    2. '(' → logprob: -8.000360488891602
    3. '(output' → logprob: -10.750360488891602
    4. ' (' → logprob: -13.000360488891602
    5. '(
' → logprob: -14.000360488891602
    6. ',input' → logprob: -17.7503604888916
    7. '(run' → logprob: -17.8753604888916
    8. '(in' → logprob: -18.2503604888916
    9. '(

' → logprob: -18.6253604888916
    10. '(import' → logprob: -18.8753604888916

Token 183: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0006134323193691671
    2. '_b' → logprob: -7.750613212585449
    3. '_' → logprob: -8.75061321258545
    4. 'a' → logprob: -11.00061321258545
    5. '_result' → logprob: -12.25061321258545
    6. ' _' → logprob: -13.62561321258545
    7. ')_' → logprob: -15.37561321258545
    8. '_,' → logprob: -15.50061321258545
    9. '_
' → logprob: -15.50061321258545
    10. '_)' → logprob: -15.62561321258545

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022809267102275044
    2. ',input' → logprob: -8.500227928161621
    3. ' ,' → logprob: -10.625227928161621
    4. ',
' → logprob: -16.000228881835938
    5. '(input' → logprob: -17.125228881835938
    6. ' ' → logprob: -17.125228881835938
    7. 'input' → logprob: -18.125228881835938
    8. '‌,' → logprob: -18.250228881835938
    9. '',' → logprob: -18.750228881835938
    10. '=input' → logprob: -18.875228881835938

Token 185: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25192928314208984
    2. 'input' → logprob: -1.5019292831420898
    3. ' ' → logprob: -17.126930236816406
    4. '(input' → logprob: -17.501930236816406
    5. '_input' → logprob: -17.626930236816406
    6. 'output' → logprob: -17.876930236816406
    7. '	input' → logprob: -17.876930236816406
    8. '=input' → logprob: -18.751930236816406
    9. '<input' → logprob: -18.876930236816406
    10. 'Input' → logprob: -19.001930236816406

Token 186: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.034592388459714e-06
    2. '_' → logprob: -12.375005722045898
    3. '_a' → logprob: -14.000005722045898
    4. 'b' → logprob: -14.875005722045898
    5. ')' → logprob: -16.5000057220459
    6. '_)' → logprob: -16.5000057220459
    7. ')_' → logprob: -16.6250057220459
    8. ',' → logprob: -16.7500057220459
    9. '_,' → logprob: -17.1250057220459
    10. ' _' → logprob: -17.3750057220459

Token 187: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0789036676287651
    2. ')
' → logprob: -2.5789036750793457
    3. ' )' → logprob: -11.953903198242188
    4. ')
' → logprob: -12.703903198242188
    5. ' )
' → logprob: -13.078903198242188
    6. '   ' → logprob: -13.328903198242188
    7. ')

' → logprob: -14.828903198242188
    8. ' ' → logprob: -16.453903198242188
    9. '())' → logprob: -17.453903198242188
    10. '()' → logprob: -17.578903198242188

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006904221139848232
    2. 'print' → logprob: -5.006904125213623
    3. ' print' → logprob: -9.256904602050781
    4. '
' → logprob: -9.381904602050781
    5. '    
' → logprob: -11.756904602050781
    6. '```' → logprob: -14.506904602050781
    7. '	print' → logprob: -14.756904602050781
    8. '
' → logprob: -16.63190460205078
    9. '  
' → logprob: -16.75690460205078
    10. ' 
' → logprob: -16.88190460205078

Token 189: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004152993205934763
    2. '   ' → logprob: -8.500414848327637
    3. ' print' → logprob: -8.500414848327637
    4. '
' → logprob: -11.750414848327637
    5. '```' → logprob: -14.750414848327637
    6. 'sys' → logprob: -16.750415802001953
    7. '	print' → logprob: -17.125415802001953
    8. '    
' → logprob: -18.250415802001953
    9. '.print' → logprob: -18.625415802001953
    10. 'return' → logprob: -18.625415802001953

Token 190: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.006721298210322857
    2. '(' → logprob: -5.006721496582031
    3. '(f' → logprob: -12.131721496582031
    4. '('' → logprob: -15.006721496582031
    5. '()' → logprob: -16.13172149658203
    6. ' (' → logprob: -16.25672149658203
    7. '("' → logprob: -17.13172149658203
    8. '(
' → logprob: -17.50672149658203
    9. 'output' → logprob: -17.63172149658203
    10. '(input' → logprob: -18.00672149658203

Token 191: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -13.500003814697266
    3. ')' → logprob: -14.125003814697266
    4. 'result' → logprob: -14.500003814697266
    5. ')_' → logprob: -15.250003814697266
    6. '_res' → logprob: -15.375003814697266
    7. ' _' → logprob: -15.375003814697266
    8. '_Result' → logprob: -15.750003814697266
    9. '_RESULT' → logprob: -16.000003814697266
    10. '_results' → logprob: -16.500003814697266

Token 192: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.250001907348633
    3. ' )' → logprob: -15.375001907348633
    4. '())' → logprob: -19.125001907348633
    5. '()' → logprob: -19.750001907348633
    6. '')' → logprob: -19.750001907348633
    7. ')`' → logprob: -19.750001907348633
    8. ')#' → logprob: -20.125001907348633
    9. '))' → logprob: -20.250001907348633
    10. ')

' → logprob: -20.750001907348633

Token 193: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.5776860184123507e-06
    2. ' if' → logprob: -13.37500286102295
    3. 'run' → logprob: -14.25000286102295
    4. '
' → logprob: -16.125001907348633
    5. '```' → logprob: -16.250001907348633
    6. '#' → logprob: -17.375001907348633
    7. '<|end|>' → logprob: -18.875001907348633
    8. 'def' → logprob: -18.875001907348633
    9. 'If' → logprob: -19.375001907348633
    10. '\n' → logprob: -20.500001907348633

Token 194: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004648591857403517
    2. '__' → logprob: -5.379648685455322
    3. ' ' → logprob: -10.754648208618164
    4. '_' → logprob: -12.754648208618164
    5. ' ' → logprob: -13.379648208618164
    6. '_name' → logprob: -13.754648208618164
    7. ' ' → logprob: -13.879648208618164
    8. 'name' → logprob: -15.254648208618164
    9. ' _' → logprob: -15.379648208618164
    10. '___' → logprob: -16.754648208618164

Token 195: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.23363827168941498
    2. ' __' → logprob: -1.6086382865905762
    3. ' ==' → logprob: -4.983638286590576
    4. '.__' → logprob: -7.483638286590576
    5. '==' → logprob: -7.608638286590576
    6. ' if' → logprob: -10.233637809753418
    7. ' ' → logprob: -10.483637809753418
    8. '_name' → logprob: -10.483637809753418
    9. '__.__' → logprob: -10.483637809753418
    10. '```' → logprob: -10.733637809753418

Token 196: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002728985855355859
    2. '==' → logprob: -8.250272750854492
    3. ' ==' → logprob: -11.750272750854492
    4. '=="' → logprob: -13.125272750854492
    5. '__.__' → logprob: -14.000272750854492
    6. '___' → logprob: -15.750272750854492
    7. '__
' → logprob: -16.125272750854492
    8. 'name' → logprob: -16.375272750854492
    9. '=='' → logprob: -16.375272750854492
    10. '_' → logprob: -16.375272750854492

Token 197: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7606205344200134
    2. ' ==' → logprob: -0.7606205344200134
    3. '==' → logprob: -2.760620594024658
    4. '=="' → logprob: -6.260620594024658
    5. '__.__' → logprob: -10.7606201171875
    6. '=='' → logprob: -11.3856201171875
    7. ' =="' → logprob: -11.5106201171875
    8. ' __' → logprob: -12.2606201171875
    9. '.__' → logprob: -12.2606201171875
    10. '"' → logprob: -12.2606201171875

Token 198: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00988169014453888
    2. ''' → logprob: -4.634881496429443
    3. ' "__' → logprob: -9.134881973266602
    4. '__' → logprob: -11.009881973266602
    5. ' '__' → logprob: -14.259881973266602
    6. ' "' → logprob: -14.384881973266602
    7. '"user' → logprob: -15.759881973266602
    8. '"name' → logprob: -17.5098819732666
    9. '`' → logprob: -18.0098819732666
    10. ' ' → logprob: -18.1348819732666

Token 199: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06408243626356125
    2. '__' → logprob: -2.814082384109497
    3. 'name' → logprob: -6.189082622528076
    4. '_main' → logprob: -10.189082145690918
    5. '__':
' → logprob: -11.189082145690918
    6. '__
' → logprob: -12.939082145690918
    7. 'm' → logprob: -13.439082145690918
    8. '```' → logprob: -13.814082145690918
    9. '__.' → logprob: -14.064082145690918
    10. '___' → logprob: -14.689082145690918

Token 200: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.029769930988550186
    2. '__' → logprob: -3.5297698974609375
    3. '':' → logprob: -11.154769897460938
    4. '__:' → logprob: -12.654769897460938
    5. '__":
' → logprob: -13.779769897460938
    6. '_' → logprob: -14.279769897460938
    7. '':
' → logprob: -15.279769897460938
    8. ''' → logprob: -18.279769897460938
    9. '___' → logprob: -18.279769897460938
    10. '__.' → logprob: -18.529769897460938

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009368919767439365
    2. ' run' → logprob: -4.884368896484375
    3. 'run' → logprob: -7.134368896484375
    4. '    
' → logprob: -7.384368896484375
    5. '	run' → logprob: -9.259368896484375
    6. '<|end|>' → logprob: -9.509368896484375
    7. ' 
' → logprob: -10.134368896484375
    8. '(run' → logprob: -10.634368896484375
    9. '
' → logprob: -10.634368896484375
    10. '_run' → logprob: -11.009368896484375

Token 202: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' (adapté à ' run') → logprob: -0.002008102834224701
    2. ' run' → logprob: -6.252007961273193
    3. '   ' → logprob: -9.627008438110352
    4. '	run' → logprob: -11.252008438110352
    5. '.run' → logprob: -15.252008438110352
    6. '(run' → logprob: -16.12700843811035
    7. '_run' → logprob: -16.25200843811035
    8. 'while' → logprob: -16.50200843811035
    9. '    
' → logprob: -17.12700843811035
    10. '  ' → logprob: -17.62700843811035

Token 203: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.0019381542224436998
    2. '_' → logprob: -6.251938343048096
    3. '()' → logprob: -11.751937866210938
    4. '_pro' → logprob: -15.001937866210938
    5. '_prog' → logprob: -15.001937866210938
    6. '_PROGRAM' → logprob: -15.126937866210938
    7. 'program' → logprob: -15.251937866210938
    8. '_p' → logprob: -16.626937866210938
    9. '(' → logprob: -16.626937866210938
    10. ' _' → logprob: -16.751937866210938

Token 204: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 202
Tokens correctement prédits (1ère position, stricte): 114
Tokens correctement prédits (1ère position, avec adaptation): 119
Tokens correctement prédits (top 10): 176
Précision stricte (1ère position): 56.44%
Précision adaptée (1ère position): 58.91%
Précision (top 10): 87.13%
================================================================================
