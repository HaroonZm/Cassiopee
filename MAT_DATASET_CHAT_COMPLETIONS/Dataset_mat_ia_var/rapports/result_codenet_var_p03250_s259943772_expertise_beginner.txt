================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
if __name__ == '__main__':
    nums = input().split()
    a = int(nums[0])
    b = int(nums[1])
    c = int(nums[2])

    # Met les nombres dans une liste
    liste = [a, b, c]
    # Trie la liste du plus grand au plus petit
    liste.sort()
    liste.reverse()

    # Calcule le résultat
    resultat = liste[0] * 10 + liste[1] + liste[2]

    print(str(resultat))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'if' (ID: 366)
  → Token d'amorce (pas de prédiction)

Token 1: ' __' (ID: 2516)
  → Token d'amorce (pas de prédiction)

Token 2: 'name' (ID: 897)
  → Token d'amorce (pas de prédiction)

Token 3: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.8550976164988242e-05
    2. '_' → logprob: -11.375018119812012
    3. '__
' → logprob: -13.000018119812012
    4. '==' → logprob: -13.625018119812012
    5. '___' → logprob: -13.750018119812012
    6. '__

' → logprob: -14.125018119812012
    7. '____' → logprob: -14.125018119812012
    8. ' __' → logprob: -15.375018119812012
    9. 'space' → logprob: -15.750018119812012
    10. '__
' → logprob: -16.000019073486328

Token 4: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05299510434269905
    2. '==' → logprob: -3.052995204925537
    3. '__' → logprob: -5.677995204925537
    4. '=' → logprob: -7.802995204925537
    5. ' ' → logprob: -8.552994728088379
    6. '"' → logprob: -9.302994728088379
    7. ' =' → logprob: -9.427994728088379
    8. ''' → logprob: -9.552994728088379
    9. '[' → logprob: -10.302994728088379
    10. '_' → logprob: -10.302994728088379

Token 5: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47415226697921753
    2. '"' → logprob: -0.9741522669792175
    3. ' "' → logprob: -10.849152565002441
    4. ' "__' → logprob: -11.099152565002441
    5. ' '' → logprob: -11.224152565002441
    6. '__' → logprob: -11.474152565002441
    7. ' '__' → logprob: -11.474152565002441
    8. '`' → logprob: -13.099152565002441
    9. ' ' → logprob: -13.099152565002441
    10. ' __' → logprob: -14.349152565002441

Token 6: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.676981345459353e-06
    2. 'm' → logprob: -13.250005722045898
    3. 'name' → logprob: -13.250005722045898
    4. '_main' → logprob: -13.625005722045898
    5. 'ma' → logprob: -14.875005722045898
    6. 'maine' → logprob: -15.250005722045898
    7. 'mai' → logprob: -16.2500057220459
    8. 'init' → logprob: -16.6250057220459
    9. ' main' → logprob: -17.0000057220459
    10. 'mp' → logprob: -18.0000057220459

Token 7: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0019374389667063951
    2. '__':
' → logprob: -6.251937389373779
    3. '__:' → logprob: -11.751937866210938
    4. '_' → logprob: -14.376937866210938
    5. '__('' → logprob: -15.626937866210938
    6. '__":
' → logprob: -16.751937866210938
    7. '___' → logprob: -17.126937866210938
    8. '__)' → logprob: -17.126937866210938
    9. '__.' → logprob: -18.001937866210938
    10. '____' → logprob: -18.126937866210938

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002649263245984912
    2. '   ' → logprob: -6.752649307250977
    3. ' :' → logprob: -7.002649307250977
    4. ':
' → logprob: -8.502649307250977
    5. '():' → logprob: -8.502649307250977
    6. '\' → logprob: -9.877649307250977
    7. '    ' → logprob: -11.377649307250977
    8. ' ' → logprob: -11.377649307250977
    9. ':\' → logprob: -11.502649307250977
    10. ' :
' → logprob: -11.627649307250977

Token 9: ' nums' (ID: 18117)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.3848491907119751
    2. '   ' → logprob: -2.0098490715026855
    3. ' ' → logprob: -2.1348490715026855
    4. '\' → logprob: -3.8848490715026855
    5. '\n' → logprob: -4.5098490715026855
    6. ':' → logprob: -4.8848490715026855
    7. '    
' → logprob: -5.1348490715026855
    8. ' 
' → logprob: -5.7598490715026855
    9. ' :' → logprob: -5.7598490715026855
    10. '     
' → logprob: -5.8848490715026855

Token 10: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04449133202433586
    2. '[' → logprob: -3.1694912910461426
    3. '[:]' → logprob: -7.169491291046143
    4. '=' → logprob: -7.919491291046143
    5. ')' → logprob: -9.1694917678833
    6. '.append' → logprob: -9.7944917678833
    7. '.setdefault' → logprob: -10.5444917678833
    8. ' =' → logprob: -10.5444917678833
    9. ' .' → logprob: -11.1694917678833
    10. '[:' → logprob: -11.2944917678833

Token 11: ' input' (ID: 3422)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35341915488243103
    2. ' [' → logprob: -1.2284191846847534
    3. ' []' → logprob: -5.728419303894043
    4. '[]' → logprob: -6.728419303894043
    5. ' ' → logprob: -7.728419303894043
    6. 'range' → logprob: -10.353419303894043
    7. '[int' → logprob: -11.353419303894043
    8. ' range' → logprob: -11.853419303894043
    9. '[:]' → logprob: -12.603419303894043
    10. '   ' → logprob: -12.978419303894043

Token 12: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005494022276252508
    2. '('' → logprob: -5.505494117736816
    3. ''' → logprob: -7.005494117736816
    4. ')' → logprob: -9.130494117736816
    5. '(
' → logprob: -9.130494117736816
    6. '()' → logprob: -9.130494117736816
    7. '   ' → logprob: -10.630494117736816
    8. '"' → logprob: -10.755494117736816
    9. '("("' → logprob: -10.755494117736816
    10. '```' → logprob: -10.755494117736816

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006722233723849058
    2. 'strip' → logprob: -5.006722450256348
    3. 'rstrip' → logprob: -12.256722450256348
    4. ' split' → logprob: -14.006722450256348
    5. 'spl' → logprob: -14.631722450256348
    6. 'replace' → logprob: -15.006722450256348
    7. 's' → logprob: -15.381722450256348
    8. 'startswith' → logprob: -16.50672149658203
    9. 'isdigit' → logprob: -16.63172149658203
    10. 'rs' → logprob: -18.00672149658203

Token 14: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03499305248260498
    2. '()' → logprob: -3.5349931716918945
    3. '('' → logprob: -5.4099931716918945
    4. '("("' → logprob: -7.7849931716918945
    5. '((' → logprob: -9.909993171691895
    6. ' (' → logprob: -9.909993171691895
    7. '(
' → logprob: -10.159993171691895
    8. '(`' → logprob: -10.159993171691895
    9. '(

' → logprob: -10.534993171691895
    10. '("' → logprob: -10.909993171691895

Token 15: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7511664628982544
    2. '[' → logprob: -1.0011664628982544
    3. '   ' → logprob: -2.751166343688965
    4. ' for' → logprob: -3.001166343688965
    5. '```' → logprob: -4.876166343688965
    6. 'print' → logprob: -5.001166343688965
    7. ':' → logprob: -5.376166343688965
    8. '\n' → logprob: -5.501166343688965
    9. 'if' → logprob: -5.626166343688965
    10. '\' → logprob: -5.626166343688965

Token 16: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6109952926635742
    2. '[' → logprob: -1.4859952926635742
    3. 'nums' → logprob: -2.985995292663574
    4. '.' → logprob: -3.110995292663574
    5. '=' → logprob: -3.360995292663574
    6. 'if' → logprob: -3.485995292663574
    7. '   ' → logprob: -4.235995292663574
    8. 'print' → logprob: -4.485995292663574
    9. ' for' → logprob: -4.860995292663574
    10. ':' → logprob: -5.110995292663574

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9556953310966492
    2. '[' → logprob: -1.080695390701294
    3. '.' → logprob: -1.955695390701294
    4. ',' → logprob: -2.330695390701294
    5. '=' → logprob: -4.455695152282715
    6. ' ' → logprob: -5.080695152282715
    7. '.append' → logprob: -5.580695152282715
    8. 'r' → logprob: -5.705695152282715
    9. 's' → logprob: -5.955695152282715
    10. 'p' → logprob: -6.705695152282715

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.25668251514434814
    2. 'int' → logprob: -1.5066825151443481
    3. ' nums' → logprob: -5.756682395935059
    4. 'nums' → logprob: -7.506682395935059
    5. ' list' → logprob: -8.381682395935059
    6. ' float' → logprob: -8.381682395935059
    7. ' ' → logprob: -8.631682395935059
    8. '[int' → logprob: -9.131682395935059
    9. 'float' → logprob: -10.006682395935059
    10. ' map' → logprob: -10.131682395935059

Token 19: '(nums' (ID: 40372)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06217259541153908
    2. '(nums' → logprob: -2.8121726512908936
    3. '('' → logprob: -8.937172889709473
    4. '(a' → logprob: -10.187172889709473
    5. ' (' → logprob: -11.687172889709473
    6. '(num' → logprob: -12.437172889709473
    7. '("("' → logprob: -12.562172889709473
    8. '(
' → logprob: -12.687172889709473
    9. '(

' → logprob: -12.937172889709473
    10. ' ' → logprob: -13.562172889709473

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.375000953674316
    3. '\[' → logprob: -15.875000953674316
    4. ')' → logprob: -16.125
    5. '0' → logprob: -16.5
    6. '[a' → logprob: -17.75
    7. '[-' → logprob: -18.0
    8. '[
' → logprob: -18.125
    9. '   ' → logprob: -18.625
    10. ' ' → logprob: -19.375

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.625017166137695
    3. '1' → logprob: -11.750017166137695
    4. '2' → logprob: -15.625017166137695
    5. '   ' → logprob: -15.750017166137695
    6. '[' → logprob: -17.187517166137695
    7. ''' → logprob: -17.187517166137695
    8. ')' → logprob: -17.812517166137695
    9. ']' → logprob: -18.000017166137695
    10. '```' → logprob: -18.062517166137695

Token 22: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.003001469885930419
    2. ']' → logprob: -6.003001689910889
    3. ')' → logprob: -7.753001689910889
    4. ' ])' → logprob: -9.50300121307373
    5. ''])' → logprob: -11.87800121307373
    6. '])
' → logprob: -12.25300121307373
    7. '+' → logprob: -13.50300121307373
    8. ')])' → logprob: -13.62800121307373
    9. ']))' → logprob: -13.75300121307373
    10. '],' → logprob: -13.87800121307373

Token 23: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' b' (ID: 287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01147877424955368
    2. '*' → logprob: -5.886478900909424
    3. ' ' → logprob: -5.886478900909424
    4. ' +' → logprob: -6.136478900909424
    5. '+
' → logprob: -7.136478900909424
    6. ')' → logprob: -7.261478900909424
    7. '<|end|>' → logprob: -7.511478900909424
    8. ',' → logprob: -7.636478900909424
    9. 'b' (adapté à ' b') → logprob: -9.011478424072266
    10. '=' → logprob: -9.136478424072266

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04099724441766739
    2. '=' → logprob: -3.540997266769409
    3. ' ' → logprob: -4.54099702835083
    4. ')' → logprob: -8.540997505187988
    5. '  ' → logprob: -9.040997505187988
    6. '<|end|>' → logprob: -9.540997505187988
    7. ' )' → logprob: -10.790997505187988
    8. ' ==' → logprob: -11.040997505187988
    9. ' +=' → logprob: -11.165997505187988
    10. '_' → logprob: -11.790997505187988

Token 26: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06197284162044525
    2. 'int' → logprob: -2.8119728565216064
    3. ' a' → logprob: -12.811972618103027
    4. 'a' → logprob: -14.186972618103027
    5. ' ' → logprob: -14.561972618103027
    6. '=int' → logprob: -14.686972618103027
    7. '(int' → logprob: -15.186972618103027
    8. '<int' → logprob: -15.936972618103027
    9. '[int' → logprob: -16.436973571777344
    10. ' ' → logprob: -16.436973571777344

Token 27: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.16031642258167267
    2. '(' → logprob: -1.9103164672851562
    3. ' (' → logprob: -10.160316467285156
    4. '(num' → logprob: -11.035316467285156
    5. '('' → logprob: -11.535316467285156
    6. ' ' → logprob: -11.660316467285156
    7. 'nums' → logprob: -12.785316467285156
    8. ')' → logprob: -12.785316467285156
    9. ''' → logprob: -13.160316467285156
    10. '"' → logprob: -13.410316467285156

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0325924449716695e-05
    2. '1' → logprob: -12.00001049041748
    3. ')' → logprob: -12.50001049041748
    4. '0' → logprob: -15.62501049041748
    5. '```' → logprob: -16.375009536743164
    6. '])' → logprob: -16.750009536743164
    7. ' ' → logprob: -17.000009536743164
    8. '   ' → logprob: -17.375009536743164
    9. ' [' → logprob: -17.750009536743164
    10. ']' → logprob: -17.750009536743164

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011058665812015533
    2. '0' → logprob: -4.511058807373047
    3. '])' → logprob: -11.511058807373047
    4. ' ' → logprob: -14.511058807373047
    5. '2' → logprob: -16.136058807373047
    6. '   ' → logprob: -16.636058807373047
    7. ')' → logprob: -17.011058807373047
    8. ']' → logprob: -17.511058807373047
    9. '-' → logprob: -17.886058807373047
    10. '```' → logprob: -18.136058807373047

Token 30: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. '])' → logprob: -13.500004768371582
    3. '))' → logprob: -13.625004768371582
    4. '')' → logprob: -14.625004768371582
    5. '）' → logprob: -14.875004768371582
    6. ' )' → logprob: -14.875004768371582
    7. ']' → logprob: -15.125004768371582
    8. '`)' → logprob: -15.750004768371582
    9. ')])' → logprob: -16.2500057220459
    10. '})' → logprob: -16.3750057220459

Token 31: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16118228435516357
    2. 'print' → logprob: -3.161182403564453
    3. '#' → logprob: -3.536182403564453
    4. ')' → logprob: -4.161182403564453
    5. '<|end|>' → logprob: -4.536182403564453
    6. '\n' → logprob: -4.661182403564453
    7. '
' → logprob: -4.911182403564453
    8. '+
' → logprob: -5.036182403564453
    9. ' ' → logprob: -5.661182403564453
    10. '*' → logprob: -5.661182403564453

Token 32: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.2844575345516205
    2. '+' → logprob: -2.1594574451446533
    3. 'if' → logprob: -2.7844574451446533
    4. 'print' → logprob: -3.5344574451446533
    5. ')' → logprob: -4.659457683563232
    6. '#' → logprob: -5.284457683563232
    7. 's' → logprob: -5.534457683563232
    8. '   ' → logprob: -5.659457683563232
    9. 'n' → logprob: -5.659457683563232
    10. 'i' → logprob: -6.034457683563232

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22889499366283417
    2. '=' → logprob: -1.6038949489593506
    3. ')' → logprob: -7.22889518737793
    4. '.' → logprob: -7.60389518737793
    5. '+' → logprob: -7.60389518737793
    6. '  ' → logprob: -7.85389518737793
    7. '_' → logprob: -7.97889518737793
    8. ' ==' → logprob: -8.10389518737793
    9. ' ' → logprob: -8.97889518737793
    10. ',' → logprob: -9.10389518737793

Token 34: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.693469762802124
    2. ' int' → logprob: -0.693469762802124
    3. 'a' → logprob: -8.318470001220703
    4. ' a' → logprob: -9.568470001220703
    5. '(int' → logprob: -12.943470001220703
    6. ' ' → logprob: -13.193470001220703
    7. ' b' → logprob: -13.943470001220703
    8. '=int' → logprob: -14.443470001220703
    9. '<int' → logprob: -14.568470001220703
    10. '	int' → logprob: -14.568470001220703

Token 35: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.023393740877509117
    2. '(' → logprob: -3.7733936309814453
    3. ' (' → logprob: -10.023393630981445
    4. '(num' → logprob: -10.398393630981445
    5. '(tokens' → logprob: -10.648393630981445
    6. '(int' → logprob: -11.273393630981445
    7. '(a' → logprob: -12.023393630981445
    8. '(s' → logprob: -12.273393630981445
    9. '(input' → logprob: -12.523393630981445
    10. '('' → logprob: -12.898393630981445

Token 36: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2577573359012604
    2. ')' → logprob: -1.507757306098938
    3. ']' → logprob: -5.507757186889648
    4. '])' → logprob: -6.632757186889648
    5. '3' → logprob: -8.882757186889648
    6. '')' → logprob: -9.507757186889648
    7. '1' → logprob: -10.882757186889648
    8. '+' → logprob: -11.007757186889648
    9. '[c' → logprob: -11.007757186889648
    10. ' ' → logprob: -11.007757186889648

Token 37: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002111694193445146
    2. '0' → logprob: -8.500210762023926
    3. '1' → logprob: -12.375210762023926
    4. '```' → logprob: -14.000210762023926
    5. '3' → logprob: -14.125210762023926
    6. 'a' → logprob: -14.375210762023926
    7. ' ' → logprob: -15.000210762023926
    8. ')' → logprob: -15.375210762023926
    9. '])' → logprob: -15.625210762023926
    10. 'c' → logprob: -16.000211715698242

Token 38: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. '')' → logprob: -14.000003814697266
    3. ']' → logprob: -14.125003814697266
    4. ' )' → logprob: -14.500003814697266
    5. ')
' → logprob: -15.125003814697266
    6. '}' → logprob: -15.250003814697266
    7. '),' → logprob: -15.875003814697266
    8. '))' → logprob: -16.000003814697266
    9. '):' → logprob: -16.000003814697266
    10. '`)' → logprob: -16.125003814697266

Token 39: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8191837668418884
    2. '
' → logprob: -0.9441837668418884
    3. '#' → logprob: -3.069183826446533
    4. ' 
' → logprob: -3.319183826446533
    5. '\' → logprob: -3.569183826446533
    6. '' → logprob: -5.194183826446533
    7. '+' → logprob: -5.194183826446533
    8. '\r' → logprob: -5.194183826446533
    9. ':' → logprob: -5.444183826446533
    10. 'd' → logprob: -5.444183826446533

Token 40: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4096895754337311
    2. 'if' → logprob: -1.7846895456314087
    3. 'd' → logprob: -2.1596896648406982
    4. '#' (adapté à ' #') → logprob: -4.159689426422119
    5. 'n' → logprob: -4.409689426422119
    6. 'x' → logprob: -4.909689426422119
    7. 's' → logprob: -5.284689426422119
    8. 'r' → logprob: -6.284689426422119
    9. 'result' → logprob: -6.534689426422119
    10. ')' → logprob: -6.784689426422119

Token 41: ' Met' (ID: 7227)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.415597677230835
    2. ' i' → logprob: -1.540597677230835
    3. 'if' → logprob: -2.040597677230835
    4. 'max' → logprob: -2.165597677230835
    5. ' max' → logprob: -2.290597677230835
    6. ' if' → logprob: -2.540597677230835
    7. ' ' → logprob: -3.415597677230835
    8. 'd' → logprob: -4.040597915649414
    9. 'a' → logprob: -4.290597915649414
    10. 's' → logprob: -4.665597915649414

Token 42: ' les' (ID: 1341)
  Prédit: 'hod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hod' → logprob: -0.04703955352306366
    2. 'h' → logprob: -3.17203950881958
    3. 'a' → logprob: -6.04703950881958
    4. '```' → logprob: -7.42203950881958
    5. ' hod' → logprob: -8.297039985656738
    6. '   ' → logprob: -8.547039985656738
    7. 'ha' → logprob: -9.047039985656738
    8. '#' → logprob: -9.047039985656738
    9. '``' → logprob: -9.922039985656738
    10. 'hoc' → logprob: -10.047039985656738

Token 43: ' nombres' (ID: 76205)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7762798070907593
    2. ' ' → logprob: -1.1512798070907593
    3. ' a' → logprob: -2.526279926300049
    4. ' l' → logprob: -3.151279926300049
    5. 'a' → logprob: -3.276279926300049
    6. 'l' → logprob: -4.401279926300049
    7. 'à' → logprob: -4.651279926300049
    8. ' la' → logprob: -4.776279926300049
    9. ' un' → logprob: -5.651279926300049
    10. ' le' → logprob: -5.776279926300049

Token 44: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08051266521215439
    2. 'a' → logprob: -3.580512762069702
    3. '  ' → logprob: -4.080512523651123
    4. ' a' → logprob: -4.830512523651123
    5. '   ' → logprob: -5.330512523651123
    6. ' à' → logprob: -5.580512523651123
    7. '_' → logprob: -5.705512523651123
    8. ' )' → logprob: -6.455512523651123
    9. ' dans' → logprob: -6.955512523651123
    10. 'u' → logprob: -6.955512523651123

Token 45: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.8983930349349976
    2. ' une' → logprob: -1.5233930349349976
    3. '[]' → logprob: -2.273393154144287
    4. ' un' → logprob: -2.648393154144287
    5. 'l' → logprob: -2.773393154144287
    6. 'un' → logprob: -3.523393154144287
    7. ' l' → logprob: -3.648393154144287
    8. '[' → logprob: -4.148393154144287
    9. ' ' → logprob: -4.648393154144287
    10. 'a' → logprob: -4.648393154144287

Token 46: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.12966355681419373
    2. ' liste' → logprob: -2.7546634674072266
    3. 'l' → logprob: -3.5046634674072266
    4. 'list' → logprob: -3.7546634674072266
    5. ' list' → logprob: -6.754663467407227
    6. '[]' → logprob: -7.629663467407227
    7. '[' → logprob: -7.754663467407227
    8. ' l' → logprob: -8.129663467407227
    9. 'lis' → logprob: -8.129663467407227
    10. 'li' → logprob: -8.129663467407227

Token 47: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.51800537109375
    2. 'l' → logprob: -1.76800537109375
    3. 's' → logprob: -3.14300537109375
    4. ' l' → logprob: -3.26800537109375
    5. 'nums' → logprob: -3.39300537109375
    6. 'numbers' → logprob: -3.39300537109375
    7. '[' → logprob: -3.76800537109375
    8. ' ' → logprob: -4.14300537109375
    9. '   ' → logprob: -4.39300537109375
    10. ' lst' → logprob: -4.89300537109375

Token 48: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0436465740203857
    2. 'l' → logprob: -1.2936465740203857
    3. 'numbers' → logprob: -2.2936465740203857
    4. ' l' → logprob: -2.6686465740203857
    5. 'nums' → logprob: -2.7936465740203857
    6. 's' → logprob: -2.9186465740203857
    7. '[' → logprob: -4.043646812438965
    8. ' nums' → logprob: -4.043646812438965
    9. ' lst' → logprob: -4.293646812438965
    10. 'lst' → logprob: -4.543646812438965

Token 49: ' liste' (ID: 31719)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -1.0767858028411865
    2. 'numbers' → logprob: -1.3267858028411865
    3. 'n' → logprob: -1.8267858028411865
    4. 'l' → logprob: -2.0767858028411865
    5. ' numbers' → logprob: -3.2017858028411865
    6. ' nums' → logprob: -3.7017858028411865
    7. 'lst' → logprob: -3.9517858028411865
    8. ' l' → logprob: -4.576786041259766
    9. ' lst' → logprob: -5.451786041259766
    10. 's' → logprob: -5.951786041259766

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4252467751502991
    2. '_' → logprob: -1.3002467155456543
    3. '=' → logprob: -2.6752467155456543
    4. 's' → logprob: -6.300246715545654
    5. 'a' → logprob: -7.425246715545654
    6. '[:]' → logprob: -7.925246715545654
    7. '=[]' → logprob: -8.050247192382812
    8. ' =[' → logprob: -8.300247192382812
    9. ' ' → logprob: -8.425247192382812
    10. '[' → logprob: -8.675247192382812

Token 51: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.18863658607006073
    2. '[a' → logprob: -1.8136365413665771
    3. '[' → logprob: -4.813636779785156
    4. '[int' → logprob: -8.313636779785156
    5. '[num' → logprob: -8.563636779785156
    6. '[s' → logprob: -9.313636779785156
    7. ' []' → logprob: -10.063636779785156
    8. '[]' → logprob: -10.563636779785156
    9. ' [
' → logprob: -10.688636779785156
    10. '[
' → logprob: -11.063636779785156

Token 52: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5048530030981055e-06
    2. ' a' → logprob: -13.500001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '	a' → logprob: -20.625001907348633
    5. ',a' → logprob: -21.875001907348633
    6. 'c' → logprob: -22.125001907348633
    7. 'b' → logprob: -23.000001907348633
    8. 'а' → logprob: -23.750001907348633
    9. ',' → logprob: -24.125001907348633
    10. ' ' → logprob: -24.250001907348633

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012809180771000683
    2. ' ,' → logprob: -9.000127792358398
    3. ',b' → logprob: -13.250127792358398
    4. ',
' → logprob: -13.500127792358398
    5. ')' → logprob: -14.625127792358398
    6. ',a' → logprob: -15.125127792358398
    7. ',

' → logprob: -15.750127792358398
    8. '<|end|>' → logprob: -15.875127792358398
    9. '‌,' → logprob: -16.2501277923584
    10. ' ' → logprob: -16.5001277923584

Token 54: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6949974894523621
    2. ' b' → logprob: -0.6949974894523621
    3. ' ' → logprob: -6.319997310638428
    4. ' ,' → logprob: -10.694997787475586
    5. ' ' → logprob: -11.569997787475586
    6. ' 
' → logprob: -12.319997787475586
    7. 'space' → logprob: -12.569997787475586
    8. ''' → logprob: -13.069997787475586
    9. '<|end|>' → logprob: -13.444997787475586
    10. ',' → logprob: -13.694997787475586

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.632542913896032e-05
    2. ' ,' → logprob: -10.375046730041504
    3. ',
' → logprob: -11.625046730041504
    4. '<|end|>' → logprob: -12.750046730041504
    5. ')' → logprob: -13.250046730041504
    6. ']' → logprob: -14.875046730041504
    7. ',

' → logprob: -15.000046730041504
    8. '‌,' → logprob: -15.250046730041504
    9. ',\
' → logprob: -15.625046730041504
    10. ',c' → logprob: -16.250045776367188

Token 56: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.25193437933921814
    2. 'c' → logprob: -1.5019344091415405
    3. ' ' → logprob: -12.751934051513672
    4. ' ' → logprob: -14.126934051513672
    5. ' ,' → logprob: -15.001934051513672
    6. 's' → logprob: -15.126934051513672
    7. ''' → logprob: -15.251934051513672
    8. '	c' → logprob: -15.876934051513672
    9. ')c' → logprob: -15.876934051513672
    10. ',' → logprob: -16.126934051513672

Token 57: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.098748053773306e-05
    2. ',' → logprob: -10.12506103515625
    3. ' ]' → logprob: -11.37506103515625
    4. ']
' → logprob: -12.00006103515625
    5. ')' → logprob: -13.00006103515625
    6. ',
' → logprob: -14.87506103515625
    7. '   ' → logprob: -16.00006103515625
    8. '],' → logprob: -16.25006103515625
    9. '}' → logprob: -16.50006103515625
    10. '])' → logprob: -16.75006103515625

Token 58: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3134961724281311
    2. '.sort' → logprob: -2.4384961128234863
    3. 'liste' → logprob: -2.5634961128234863
    4. '
' → logprob: -2.9384961128234863
    5. '.
' → logprob: -4.688496112823486
    6. '.l' → logprob: -4.813496112823486
    7. '   ' → logprob: -4.938496112823486
    8. ')' → logprob: -5.188496112823486
    9. '<|end|>' → logprob: -5.438496112823486
    10. 'l' → logprob: -5.688496112823486

Token 59: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.45867210626602173
    2. 'liste' → logprob: -1.333672046661377
    3. 'l' → logprob: -2.458672046661377
    4. '.sort' → logprob: -5.583672046661377
    5. '.
' → logprob: -5.958672046661377
    6. '.l' → logprob: -6.083672046661377
    7. '#' (adapté à ' #') → logprob: -6.583672046661377
    8. ')' → logprob: -7.083672046661377
    9. '
' → logprob: -7.208672046661377
    10. 's' → logprob: -7.333672046661377

Token 60: ' Trie' (ID: 131955)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.17896096408367157
    2. ' liste' → logprob: -2.0539610385894775
    3. 'l' → logprob: -4.678960800170898
    4. ' tri' → logprob: -5.303960800170898
    5. 'tri' → logprob: -6.116460800170898
    6. '#' → logprob: -6.303960800170898
    7. 'list' → logprob: -6.366460800170898
    8. '```' → logprob: -6.616460800170898
    9. ' l' → logprob: -6.741460800170898
    10. 'lst' → logprob: -6.866460800170898

Token 61: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6247246265411377
    2. '(' → logprob: -0.8747246265411377
    3. '(l' → logprob: -3.1247246265411377
    4. '(
' → logprob: -6.874724388122559
    5. 'liste' → logprob: -7.249724388122559
    6. '.' → logprob: -7.624724388122559
    7. 'l' → logprob: -8.124724388122559
    8. 's' → logprob: -8.249724388122559
    9. '().' → logprob: -8.749724388122559
    10. ')' → logprob: -8.999724388122559

Token 62: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.043097734451293945
    2. ' liste' → logprob: -3.168097734451294
    3. 'list' → logprob: -10.168097496032715
    4. ' ' → logprob: -11.043097496032715
    5. 'l' → logprob: -11.293097496032715
    6. 'lista' → logprob: -12.293097496032715
    7. 'lis' → logprob: -12.293097496032715
    8. 'Liste' → logprob: -12.543097496032715
    9. 'lst' → logprob: -13.043097496032715
    10. 's' → logprob: -13.043097496032715

Token 63: ' du' (ID: 1462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.48254626989364624
    2. '()' → logprob: -1.107546329498291
    3. '.sort' → logprob: -3.482546329498291
    4. '(' → logprob: -4.857546329498291
    5. 'liste' → logprob: -5.107546329498291
    6. '().' → logprob: -5.857546329498291
    7. '.l' → logprob: -7.107546329498291
    8. ')' → logprob: -7.107546329498291
    9. ',' → logprob: -7.357546329498291
    10. '()
' → logprob: -7.607546329498291

Token 64: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.016748063266277313
    2. 'plus' → logprob: -4.141747951507568
    3. ' petit' → logprob: -8.891748428344727
    4. ' au' → logprob: -9.391748428344727
    5. 'pet' → logprob: -9.766748428344727
    6. ' ' → logprob: -9.766748428344727
    7. '_plus' → logprob: -9.891748428344727
    8. '```' → logprob: -9.891748428344727
    9. 'au' → logprob: -10.141748428344727
    10. ' +' → logprob: -10.391748428344727

Token 65: ' grand' (ID: 6363)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.3082040250301361
    2. ' petit' → logprob: -1.5582040548324585
    3. 'grand' → logprob: -3.058203935623169
    4. ' grand' → logprob: -5.308204174041748
    5. '```' → logprob: -6.808204174041748
    6. ' ' → logprob: -7.558204174041748
    7. 'prem' → logprob: -8.43320369720459
    8. ' pet' → logprob: -8.55820369720459
    9. 'pe' → logprob: -8.80820369720459
    10. '   ' → logprob: -8.93320369720459

Token 66: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.1648508608341217
    2. 'au' → logprob: -1.9148508310317993
    3. '<|end|>' → logprob: -6.16485071182251
    4. ' ' → logprob: -6.41485071182251
    5. ''au' → logprob: -8.039851188659668
    6. '```' → logprob: -8.664851188659668
    7. ',' → logprob: -9.039851188659668
    8. '  ' → logprob: -10.289851188659668
    9. '’au' → logprob: -10.414851188659668
    10. ')' → logprob: -10.789851188659668

Token 67: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.3303844630718231
    2. ' plus' → logprob: -1.3303844928741455
    3. ' ' → logprob: -5.080384254455566
    4. '```' → logprob: -5.705384254455566
    5. 'au' → logprob: -6.330384254455566
    6. '<|end|>' → logprob: -7.455384254455566
    7. '+' → logprob: -7.580384254455566
    8. 'p' → logprob: -7.580384254455566
    9. 'moins' → logprob: -7.705384254455566
    10. ',' → logprob: -7.955384254455566

Token 68: ' petit' (ID: 20577)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.06591243296861649
    2. 'pet' → logprob: -2.9409124851226807
    3. ' grand' → logprob: -5.315912246704102
    4. '```' → logprob: -5.940912246704102
    5. ' ' → logprob: -6.940912246704102
    6. ' petit' → logprob: -7.190912246704102
    7. '<|end|>' → logprob: -7.565912246704102
    8. 'au' → logprob: -7.690912246704102
    9. 'large' → logprob: -9.315912246704102
    10. 'prem' → logprob: -9.440912246704102

Token 69: '
' (ID: 198)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.2769358456134796
    2. '
' → logprob: -2.5269358158111572
    3. 'l' → logprob: -3.2769358158111572
    4. ',' → logprob: -3.5269358158111572
    5. '```' → logprob: -3.9019358158111572
    6. ',
' → logprob: -4.151936054229736
    7. '\' → logprob: -4.151936054229736
    8. '.' → logprob: -4.526936054229736
    9. ',l' → logprob: -5.026936054229736
    10. '.
' → logprob: -5.901936054229736

Token 70: '   ' (ID: 271)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.22698679566383362
    2. 'l' → logprob: -2.101986885070801
    3. '
' → logprob: -3.351986885070801
    4. ',' → logprob: -4.851986885070801
    5. ' 
' → logprob: -4.976986885070801
    6. '```' → logprob: -5.101986885070801
    7. ' liste' → logprob: -5.351986885070801
    8. 's' → logprob: -5.601986885070801
    9. ' ' → logprob: -6.101986885070801
    10. '<|end|>' → logprob: -6.351986885070801

Token 71: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' (adapté à ' liste') → logprob: -0.5500304102897644
    2. ' liste' → logprob: -0.9250304102897644
    3. 'l' → logprob: -4.05003023147583
    4. ' l' → logprob: -5.17503023147583
    5. ' 
' → logprob: -7.55003023147583
    6. ' sorted' → logprob: -7.80003023147583
    7. 'list' → logprob: -7.92503023147583
    8. ' ' → logprob: -7.92503023147583
    9. 'sorted' → logprob: -8.175030708312988
    10. ' lst' → logprob: -8.800030708312988

Token 72: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0700034499168396
    2. '.sort' → logprob: -2.6950035095214844
    3. 'sort' → logprob: -10.820003509521484
    4. '.s' → logprob: -11.320003509521484
    5. '.
' → logprob: -12.320003509521484
    6. '.sorted' → logprob: -12.320003509521484
    7. '.reverse' → logprob: -12.445003509521484
    8. 'sorted' → logprob: -12.695003509521484
    9. ').' → logprob: -12.695003509521484
    10. '.)' → logprob: -13.195003509521484

Token 73: '()
' (ID: 1234)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.48355385661125183
    2. '(' → logprob: -0.9835538864135742
    3. '()' → logprob: -4.733553886413574
    4. '(key' → logprob: -7.733553886413574
    5. 'reverse' → logprob: -9.233553886413574
    6. '((' → logprob: -10.608553886413574
    7. '(
' → logprob: -11.108553886413574
    8. '(()' → logprob: -11.233553886413574
    9. '(

' → logprob: -11.483553886413574
    10. '()(' → logprob: -11.983553886413574

Token 74: '   ' (ID: 271)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0027851462364196777
    2. '(' → logprob: -6.1277852058410645
    3. 'reverse' → logprob: -8.127784729003906
    4. '()' → logprob: -8.252784729003906
    5. '(re' → logprob: -10.752784729003906
    6. '(
' → logprob: -11.502784729003906
    7. '.reverse' → logprob: -12.252784729003906
    8. ' reverse' → logprob: -13.252784729003906
    9. '(key' → logprob: -13.377784729003906
    10. ',' → logprob: -13.877784729003906

Token 75: ' liste' (ID: 31719)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05449334904551506
    2. '(reverse' → logprob: -3.0544934272766113
    3. '()' → logprob: -5.929493427276611
    4. ',' → logprob: -5.929493427276611
    5. '(
' → logprob: -8.429492950439453
    6. '(re' → logprob: -9.304492950439453
    7. 'reverse' → logprob: -9.429492950439453
    8. ')' → logprob: -9.929492950439453
    9. 'r' → logprob: -10.554492950439453
    10. '.reverse' → logprob: -10.929492950439453

Token 76: '.reverse' (ID: 65426)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3262692987918854
    2. '[::-' → logprob: -2.0762693881988525
    3. '(' → logprob: -2.7012693881988525
    4. '(reverse' → logprob: -3.4512693881988525
    5. '[' → logprob: -3.5762693881988525
    6. '.reverse' → logprob: -4.326269149780273
    7. '()[' → logprob: -5.451269149780273
    8. ')' → logprob: -5.826269149780273
    9. '.' → logprob: -6.576269149780273
    10. '[-' → logprob: -6.951269149780273

Token 77: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014293377287685871
    2. '(' → logprob: -4.264293193817139
    3. '()
' → logprob: -10.014293670654297
    4. '`()' → logprob: -11.014293670654297
    5. '()`' → logprob: -11.014293670654297
    6. '```' → logprob: -11.389293670654297
    7. '(
' → logprob: -11.889293670654297
    8. '()

' → logprob: -12.389293670654297
    9. '();' → logprob: -12.639293670654297
    10. ']()' → logprob: -12.639293670654297

Token 78: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8998348116874695
    2. '[' → logprob: -2.0248348712921143
    3. '   ' → logprob: -2.3998348712921143
    4. ' ' → logprob: -2.8998348712921143
    5. ',' → logprob: -3.0248348712921143
    6. '
' → logprob: -3.0248348712921143
    7. '#' → logprob: -3.0248348712921143
    8. 'print' → logprob: -3.7748348712921143
    9. '<|end|>' → logprob: -3.7748348712921143
    10. '    
' → logprob: -4.274834632873535

Token 79: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6243605613708496
    2. 'print' → logprob: -1.3743605613708496
    3. 'i' → logprob: -1.8743605613708496
    4. 'if' → logprob: -3.9993605613708496
    5. '#' (adapté à ' #') → logprob: -4.99936056137085
    6. 'd' → logprob: -5.37436056137085
    7. 'a' → logprob: -5.37436056137085
    8. 'for' → logprob: -5.49936056137085
    9. '   ' → logprob: -5.74936056137085
    10. 'r' → logprob: -6.12436056137085

Token 80: ' Cal' (ID: 4453)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8161373734474182
    2. 'print' → logprob: -1.0661373138427734
    3. ' print' → logprob: -2.3161373138427734
    4. '#' → logprob: -3.6911373138427734
    5. ' p' → logprob: -3.8161373138427734
    6. 'for' → logprob: -4.066137313842773
    7. ' for' → logprob: -4.816137313842773
    8. 'pr' → logprob: -5.066137313842773
    9. 's' → logprob: -5.316137313842773
    10. 'a' → logprob: -5.441137313842773

Token 81: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.043650999665260315
    2. 'cul' → logprob: -3.2936511039733887
    3. 'cule' → logprob: -5.793651103973389
    4. 'culate' → logprob: -6.543651103973389
    5. ' c' → logprob: -7.668651103973389
    6. 'cu' → logprob: -8.91865062713623
    7. '

' → logprob: -9.29365062713623
    8. 'cula' → logprob: -9.54365062713623
    9. '
' → logprob: -9.79365062713623
    10. '' → logprob: -10.04365062713623

Token 82: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7466764450073242
    2. ' ' → logprob: -0.9966764450073242
    3. '_' → logprob: -2.371676445007324
    4. '(' → logprob: -4.121676445007324
    5. '<|end|>' → logprob: -4.496676445007324
    6. ' =' → logprob: -4.746676445007324
    7. ')' → logprob: -5.871676445007324
    8. 'u' → logprob: -6.246676445007324
    9. ' )' → logprob: -6.371676445007324
    10. 'e' → logprob: -6.371676445007324

Token 83: ' résultat' (ID: 62556)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7223678827285767
    2. 's' → logprob: -1.7223678827285767
    3. ' produit' → logprob: -2.597367763519287
    4. ' maximum' → logprob: -2.972367763519287
    5. ' plus' → logprob: -3.347367763519287
    6. ' résultat' → logprob: -3.722367763519287
    7. 'max' → logprob: -3.847367763519287
    8. ' ' → logprob: -4.097367763519287
    9. ' maxi' → logprob: -4.097367763519287
    10. ' somme' → logprob: -4.472367763519287

Token 84: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2585605978965759
    2. ' =' → logprob: -2.5085606575012207
    3. 'r' → logprob: -2.7585606575012207
    4. 's' → logprob: -3.6335606575012207
    5. '=' → logprob: -3.7585606575012207
    6. 'res' → logprob: -4.508560657501221
    7. ' result' → logprob: -4.633560657501221
    8. ':' → logprob: -6.383560657501221
    9. 'd' → logprob: -6.508560657501221
    10. 'print' → logprob: -6.633560657501221

Token 85: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.42345061898231506
    2. 'r' → logprob: -1.1734505891799927
    3. 'res' → logprob: -4.673450469970703
    4. 's' → logprob: -4.798450469970703
    5. ' result' → logprob: -5.048450469970703
    6. 'print' → logprob: -5.923450469970703
    7. 'd' → logprob: -6.298450469970703
    8. ' =' → logprob: -6.423450469970703
    9. '=' → logprob: -6.423450469970703
    10. 'x' → logprob: -6.923450469970703

Token 86: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1950768381357193
    2. 'print' → logprob: -1.820076823234558
    3. 'res' → logprob: -4.320076942443848
    4. 'd' → logprob: -7.820076942443848
    5. 's' → logprob: -7.820076942443848
    6. 'rés' → logprob: -7.820076942443848
    7. 'r' → logprob: -7.945076942443848
    8. ' result' → logprob: -9.445076942443848
    9. ' resultat' → logprob: -9.820076942443848
    10. ' print' → logprob: -10.320076942443848

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05526158958673477
    2. '=' → logprob: -2.9302616119384766
    3. 's' → logprob: -8.805261611938477
    4. '_' → logprob: -9.305261611938477
    5. '[' → logprob: -9.930261611938477
    6. ' ' → logprob: -10.305261611938477
    7. '(' → logprob: -11.055261611938477
    8. ' +=' → logprob: -11.430261611938477
    9. ' =
' → logprob: -11.805261611938477
    10. ' =[' → logprob: -12.930261611938477

Token 88: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.3204895555973053
    2. 'liste' → logprob: -1.320489525794983
    3. ' somme' → logprob: -5.945489406585693
    4. ' sum' → logprob: -6.945489406585693
    5. ' a' → logprob: -7.445489406585693
    6. 'a' → logprob: -7.695489406585693
    7. 'sum' → logprob: -7.820489406585693
    8. ' max' → logprob: -7.945489406585693
    9. ' ' → logprob: -8.070489883422852
    10. ' (' → logprob: -8.445489883422852

Token 89: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4974866644479334e-05
    2. '[
' → logprob: -12.375015258789062
    3. '[-' → logprob: -12.750015258789062
    4. ' ' → logprob: -13.250015258789062
    5. 's' → logprob: -13.375015258789062
    6. ' [' → logprob: -14.000015258789062
    7. '```' → logprob: -14.125015258789062
    8. '0' → logprob: -14.375015258789062
    9. '\[' → logprob: -14.500015258789062
    10. '[:]' → logprob: -15.125015258789062

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035691517405211926
    2. '1' → logprob: -8.375356674194336
    3. ' ' → logprob: -9.125356674194336
    4. '2' → logprob: -11.125356674194336
    5. '-' → logprob: -14.312856674194336
    6. '3' → logprob: -15.437856674194336
    7. ']' → logprob: -15.437856674194336
    8. '+' → logprob: -15.562856674194336
    9. '۰' → logprob: -15.812856674194336
    10. '   ' → logprob: -15.937856674194336

Token 91: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2117217779159546
    2. '+' → logprob: -2.586721897125244
    3. ' +' → logprob: -2.711721897125244
    4. ' *' → logprob: -3.961721897125244
    5. ' ]' → logprob: -4.336721897125244
    6. '*' → logprob: -5.086721897125244
    7. ' -' → logprob: -5.336721897125244
    8. '-' → logprob: -6.211721897125244
    9. ')' → logprob: -6.461721897125244
    10. ']+' → logprob: -6.586721897125244

Token 92: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.44008609652519226
    2. ' +' → logprob: -1.0650861263275146
    3. '*' → logprob: -4.6900858879089355
    4. ' *' → logprob: -6.3150858879089355
    5. '-' → logprob: -8.815086364746094
    6. ' ' → logprob: -9.940086364746094
    7. ' -' → logprob: -9.940086364746094
    8. ' +
' → logprob: -10.940086364746094
    9. ' plus' → logprob: -11.315086364746094
    10. ' ' → logprob: -11.815086364746094

Token 93: ' ' (ID: 220)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.31885284185409546
    2. ' liste' → logprob: -1.9438529014587402
    3. 'l' → logprob: -3.0688529014587402
    4. '2' → logprob: -3.3188529014587402
    5. ' ' → logprob: -3.8188529014587402
    6. '10' → logprob: -5.31885290145874
    7. '3' → logprob: -5.56885290145874
    8. '4' → logprob: -5.69385290145874
    9. '1' → logprob: -5.94385290145874
    10. ' (' → logprob: -6.31885290145874

Token 94: '10' (ID: 702)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.07225734740495682
    2. '2' → logprob: -3.0722572803497314
    3. '10' → logprob: -4.8222575187683105
    4. '1' → logprob: -5.4472575187683105
    5. '100' → logprob: -5.6972575187683105
    6. '3' → logprob: -5.9472575187683105
    7. '5' → logprob: -6.6972575187683105
    8. '(' → logprob: -7.4472575187683105
    9. ' liste' → logprob: -7.5722575187683105
    10. '4' → logprob: -7.5722575187683105

Token 95: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3764585554599762
    2. ' +' → logprob: -1.3764585256576538
    3. '**' → logprob: -3.3764586448669434
    4. '0' → logprob: -4.126458644866943
    5. '2' → logprob: -5.001458644866943
    6. ' ' → logprob: -6.876458644866943
    7. ' **' → logprob: -7.001458644866943
    8. '*' → logprob: -7.501458644866943
    9. '<|end|>' → logprob: -8.001458168029785
    10. ')' → logprob: -8.126458168029785

Token 96: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.12705230712890625
    2. ' liste' → logprob: -2.1270523071289062
    3. ' ' → logprob: -10.252052307128906
    4. 'l' → logprob: -10.752052307128906
    5. '10' → logprob: -11.502052307128906
    6. '1' → logprob: -11.877052307128906
    7. '	l' → logprob: -12.127052307128906
    8. ' ' → logprob: -12.502052307128906
    9. 'lst' → logprob: -12.502052307128906
    10. 'lis' → logprob: -12.752052307128906

Token 97: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.881560041918419e-05
    2. '1' → logprob: -10.500039100646973
    3. ' [' → logprob: -12.750039100646973
    4. '\[' → logprob: -13.000039100646973
    5. '```' → logprob: -13.125039100646973
    6. ''[' → logprob: -13.250039100646973
    7. '[-' → logprob: -15.125039100646973
    8. '[
' → logprob: -15.125039100646973
    9. '"[' → logprob: -15.500039100646973
    10. '   ' → logprob: -16.000038146972656

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.625011444091797
    3. '<|end|>' → logprob: -13.500011444091797
    4. '2' → logprob: -15.250011444091797
    5. '```' → logprob: -16.125011444091797
    6. '0' → logprob: -16.250011444091797
    7. '[' → logprob: -16.562511444091797
    8. '`' → logprob: -17.062511444091797
    9. '!' → logprob: -17.375011444091797
    10. '<|end|>' → logprob: -17.375011444091797

Token 99: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29877325892448425
    2. ')' → logprob: -1.4237732887268066
    3. ' ]' → logprob: -4.298773288726807
    4. '0' → logprob: -7.048773288726807
    5. '}' → logprob: -7.173773288726807
    6. '<|end|>' → logprob: -7.173773288726807
    7. '*' → logprob: -7.548773288726807
    8. ' )' → logprob: -8.173772811889648
    9. '']' → logprob: -9.173772811889648
    10. '])' → logprob: -9.548772811889648

Token 100: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7790395021438599
    2. '*' → logprob: -0.9040395021438599
    3. '<|end|>' → logprob: -3.1540393829345703
    4. ' +' → logprob: -3.2790393829345703
    5. ' ' → logprob: -3.7790393829345703
    6. ' *' → logprob: -3.9040393829345703
    7. ')' → logprob: -4.65403938293457
    8. '10' → logprob: -7.15403938293457
    9. '0' → logprob: -7.52903938293457
    10. '**' → logprob: -8.52903938293457

Token 101: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.144108846783638
    2. 'liste' → logprob: -2.019108772277832
    3. ' ' → logprob: -6.769108772277832
    4. '0' → logprob: -9.269108772277832
    5. '   ' → logprob: -10.394108772277832
    6. '1' → logprob: -10.519108772277832
    7. ' listes' → logprob: -10.894108772277832
    8. '    ' → logprob: -11.019108772277832
    9. ' list' → logprob: -11.019108772277832
    10. '  ' → logprob: -11.394108772277832

Token 102: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00034654809860512614
    2. 's' → logprob: -9.000346183776855
    3. 'f' → logprob: -9.500346183776855
    4. 't' → logprob: -10.375346183776855
    5. '```' → logprob: -10.750346183776855
    6. '\[' → logprob: -11.125346183776855
    7. '`' → logprob: -12.000346183776855
    8. '2' → logprob: -12.125346183776855
    9. ' [' → logprob: -12.125346183776855
    10. ''[' → logprob: -12.125346183776855

Token 103: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.613945101387799e-05
    2. ' ' → logprob: -10.375085830688477
    3. '[' → logprob: -10.625085830688477
    4. '0' → logprob: -11.625085830688477
    5. '22' → logprob: -11.750085830688477
    6. ']' → logprob: -12.937585830688477
    7. '1' → logprob: -13.062585830688477
    8. '```' → logprob: -14.125085830688477
    9. '(' → logprob: -14.250085830688477
    10. '][' → logprob: -14.437585830688477

Token 104: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06574010103940964
    2. ')' → logprob: -2.8157401084899902
    3. ' ]' → logprob: -5.81574010848999
    4. '*' → logprob: -8.315739631652832
    5. '']' → logprob: -9.190739631652832
    6. ' )' → logprob: -9.440739631652832
    7. '<|end|>' → logprob: -9.440739631652832
    8. '[' → logprob: -9.815739631652832
    9. ']*' → logprob: -9.815739631652832
    10. '])' → logprob: -9.940739631652832

Token 105: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22169628739356995
    2. 'print' → logprob: -1.7216962575912476
    3. '   ' → logprob: -4.346696376800537
    4. ' print' → logprob: -6.471696376800537
    5. '
' → logprob: -6.721696376800537
    6. ' ' → logprob: -6.846696376800537
    7. '\n' → logprob: -7.471696376800537
    8. '*' → logprob: -7.596696376800537
    9. '#' → logprob: -7.846696376800537
    10. ')
' → logprob: -8.471695899963379

Token 106: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.049940481781959534
    2. ')' → logprob: -3.424940586090088
    3. ' print' → logprob: -4.424940586090088
    4. '   ' → logprob: -6.674940586090088
    5. '
' → logprob: -6.674940586090088
    6. ':' → logprob: -7.924940586090088
    7. '.print' → logprob: -8.17494010925293
    8. '<|end|>' → logprob: -8.54994010925293
    9. ' ' → logprob: -9.29994010925293
    10. '  
' → logprob: -9.42494010925293

Token 107: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10035407543182373
    2. '(result' → logprob: -2.3503541946411133
    3. '('' → logprob: -9.975354194641113
    4. '("("' → logprob: -10.225354194641113
    5. '(resultado' → logprob: -10.600354194641113
    6. '()' → logprob: -11.975354194641113
    7. '((' → logprob: -11.975354194641113
    8. '(results' → logprob: -12.350354194641113
    9. ' (' → logprob: -12.475354194641113
    10. '(res' → logprob: -12.600354194641113

Token 108: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.939851037808694e-05
    2. '(' → logprob: -10.500029563903809
    3. 'result' → logprob: -13.500029563903809
    4. '(resultado' → logprob: -15.750029563903809
    5. '(res' → logprob: -16.000028610229492
    6. '(results' → logprob: -16.750028610229492
    7. '=result' → logprob: -17.625028610229492
    8. ' (' → logprob: -17.750028610229492
    9. '(ret' → logprob: -18.375028610229492
    10. '(l' → logprob: -18.375028610229492

Token 109: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.5213274309644476e-05
    2. 'a' → logprob: -12.000015258789062
    3. 't' → logprob: -13.375015258789062
    4. 'result' → logprob: -13.375015258789062
    5. 'ат' → logprob: -13.375015258789062
    6. ' at' → logprob: -13.875015258789062
    7. '))' → logprob: -13.875015258789062
    8. ')' → logprob: -14.000015258789062
    9. 'ultat' → logprob: -14.250015258789062
    10. '	at' → logprob: -15.750015258789062

Token 110: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019336353288963437
    2. '))' → logprob: -6.251933574676514
    3. ')))' → logprob: -12.501934051513672
    4. ' )' → logprob: -14.126934051513672
    5. '])' → logprob: -15.626934051513672
    6. '())' → logprob: -15.751934051513672
    7. ')")' → logprob: -16.126934051513672
    8. '()' → logprob: -16.251934051513672
    9. '')' → logprob: -17.001934051513672
    10. '(' → logprob: -17.126934051513672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 108
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 79
Précision stricte (1ère position): 35.19%
Précision adaptée (1ère position): 37.96%
Précision (top 10): 73.15%
================================================================================
