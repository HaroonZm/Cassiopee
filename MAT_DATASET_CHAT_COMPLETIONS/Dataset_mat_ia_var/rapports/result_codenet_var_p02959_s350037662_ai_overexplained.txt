================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur d'entrer une valeur entière qui sera assignée à la variable N.
# input() lit un texte sur la ligne de commande, et int() convertit ce texte en entier.
N = int(input())

# Lit une ligne de texte, la découpe en morceaux à chaque espace,
# puis convertit chaque morceau en entier avec map(int, ...), avant de les placer dans une liste.
A = list(map(int, input().split()))

# Fait la même chose pour une autre liste, appelée B.
B = list(map(int, input().split()))

# Crée une variable appelée 'sum' pour stocker l'accumulateur de la somme totale, initialisée à 0.
sum = 0

# Lance une boucle qui va de 0 (inclus) à N (exclu), donc il y aura N itérations correspondant aux indices des listes A et B.
for i in range(N):
    # Calcule la différence entre l'élément A[i] et B[i] et assigne le résultat à la variable x.
    x = A[i] - B[i]
    # Vérifie si x est supérieur ou égal à 0, c'est-à-dire si A[i] est plus grand ou égal à B[i].
    if x >= 0:
        # Si la condition ci-dessus est vraie : ajoute à sum la valeur B[i] (on ajoute B[i] au résultat total).
        sum = sum + B[i]
    else:
        # Sinon, c'est que B[i] est plus grand que A[i] :
        # Ajouter d'abord toute la valeur de A[i] à sum (puisqu'on ne peut donner que tout ce qu'on a dans A[i]).
        sum = sum + A[i]
        # Soustraire A[i] à B[i] (B[i] devient le besoin restant après avoir utilisé tout A[i]).
        B[i] = B[i] - A[i]
        # On va maintenant regarder le prochain élément de la liste A : A[i+1],
        # En recalculant x comme la différence entre A[i+1] et la nouvelle valeur de B[i].
        x = A[i+1] - B[i]
        # De nouveau, on vérifie si la nouvelle valeur de x est supérieure ou égale à 0.
        if x >= 0:
            # Si oui, cela signifie que A[i+1] contient suffisamment pour couvrir B[i]
            # Donc on ajoute B[i] à sum (on utilise juste ce dont on a besoin dans A[i+1]).
            sum = sum + B[i]
            # On met alors à jour A[i+1] en retirant la valeur de B[i] (on diminue le stock correspondant).
            A[i+1] = A[i+1] - B[i]
        else:
            # Si x<0, cela veut dire qu'A[i+1] ne suffit pas pour combler B[i].
            # On ajoute donc tout ce qu'il reste dans A[i+1] à sum.
            sum = sum + A[i+1]
            # On met A[i+1] à zéro, car tout a été utilisé.
            A[i+1] = 0

# À la fin de la boucle, on affiche la valeur totale stockée dans sum à l'aide de print().
print(sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5254546403884888
    2. ' de' → logprob: -2.025454521179199
    3. ' ' → logprob: -2.400454521179199
    4. ':' → logprob: -2.525454521179199
    5. '_' → logprob: -3.150454521179199
    6. ' :' → logprob: -3.900454521179199
    7. '```' → logprob: -4.525454521179199
    8. ' =' → logprob: -4.900454521179199
    9. ' d' → logprob: -5.025454521179199
    10. ''' → logprob: -5.150454521179199

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014099803753197193
    2. ' l' → logprob: -4.389099597930908
    3. 'user' → logprob: -7.139099597930908
    4. 'util' → logprob: -8.639100074768066
    5. ''' → logprob: -9.389100074768066
    6. ' user' → logprob: -9.514100074768066
    7. '_' → logprob: -9.639100074768066
    8. '#' → logprob: -9.764100074768066
    9. 'la' → logprob: -9.889100074768066
    10. '`' → logprob: -10.264100074768066

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.036522276699543
    2. ''' → logprob: -4.161522388458252
    3. 'u' → logprob: -4.661522388458252
    4. 'util' → logprob: -5.661522388458252
    5. '’utilisateur' → logprob: -5.661522388458252
    6. 'a' → logprob: -6.161522388458252
    7. ' utilisateur' → logprob: -6.786522388458252
    8. ''util' → logprob: -8.661521911621094
    9. ''user' → logprob: -9.161521911621094
    10. ''us' → logprob: -9.411521911621094

Token 6: ' d' (ID: 272)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.41761481761932373
    2. 'name' → logprob: -1.9176148176193237
    3. 'user' → logprob: -2.4176149368286133
    4. 'input' → logprob: -3.0426149368286133
    5. 'age' → logprob: -4.292614936828613
    6. 'print' → logprob: -4.542614936828613
    7. 'username' → logprob: -5.167614936828613
    8. 's' → logprob: -5.167614936828613
    9. 'prenom' → logprob: -5.167614936828613
    10. 'n' → logprob: -5.292614936828613

Token 7: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14649178087711334
    2. 'entr' → logprob: -3.146491765975952
    3. ''' → logprob: -3.521491765975952
    4. 'é' → logprob: -3.896491765975952
    5. 'entrée' → logprob: -4.271492004394531
    6. ''entrée' → logprob: -4.771492004394531
    7. ''ent' → logprob: -5.146492004394531
    8. '```' → logprob: -6.271492004394531
    9. 'ent' → logprob: -6.521492004394531
    10. '`' → logprob: -6.896492004394531

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.281941682100296
    2. 'ent' → logprob: -2.1569416522979736
    3. 'entrée' → logprob: -2.1569416522979736
    4. 's' → logprob: -4.781941890716553
    5. 'entre' → logprob: -7.031941890716553
    6. 'input' → logprob: -7.156941890716553
    7. 'enter' → logprob: -7.156941890716553
    8. 'être' → logprob: -7.656941890716553
    9. 'e' → logprob: -7.781941890716553
    10. 'é' → logprob: -7.906941890716553

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00015002528380136937
    2. 'éer' → logprob: -9.250149726867676
    3. 'é' → logprob: -10.625149726867676
    4. 'e' → logprob: -11.500149726867676
    5. 'ér' → logprob: -13.000149726867676
    6. 'érer' → logprob: -13.000149726867676
    7. ''er' → logprob: -13.000149726867676
    8. 'ée' → logprob: -13.000149726867676
    9. '­er' → logprob: -13.000149726867676
    10. 'erer' → logprob: -13.375149726867676

Token 10: ' une' (ID: 2463)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -1.4835697412490845
    2. ''une' → logprob: -1.4835697412490845
    3. ' un' → logprob: -1.7335697412490845
    4. ' une' → logprob: -1.7335697412490845
    5. ''' → logprob: -2.358569622039795
    6. 'une' → logprob: -2.983569622039795
    7. 'un' → logprob: -4.233569622039795
    8. '```' → logprob: -5.108569622039795
    9. '`' → logprob: -5.358569622039795
    10. ' ' → logprob: -5.483569622039795

Token 11: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7323436737060547
    2. ' chaîne' → logprob: -0.9823436737060547
    3. ' phrase' → logprob: -2.3573436737060547
    4. 'chaine' → logprob: -4.107343673706055
    5. ' chaine' → logprob: -4.857343673706055
    6. ' ligne' → logprob: -4.982343673706055
    7. ' valeur' → logprob: -5.482343673706055
    8. 'phrase' → logprob: -5.482343673706055
    9. ' ' → logprob: -6.607343673706055
    10. ' espace' → logprob: -6.732343673706055

Token 12: ' entière' (ID: 61583)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.35411739349365234
    2. 'value' → logprob: -2.2291173934936523
    3. 'input' → logprob: -3.3541173934936523
    4. 'user' → logprob: -3.3541173934936523
    5. 'i' → logprob: -3.6041173934936523
    6. '`' → logprob: -3.9791173934936523
    7. '_' → logprob: -4.104117393493652
    8. 'x' → logprob: -4.229117393493652
    9. 'val' → logprob: -4.229117393493652
    10. 'n' → logprob: -4.729117393493652

Token 13: ' qui' (ID: 2780)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.064266562461853
    2. 'i' → logprob: -1.314266562461853
    3. 'x' → logprob: -1.439266562461853
    4. 'v' → logprob: -2.8142666816711426
    5. '```' → logprob: -3.5642666816711426
    6. '_' → logprob: -4.439266681671143
    7. '\n' → logprob: -4.564266681671143
    8. '`' → logprob: -4.814266681671143
    9. 'e' → logprob: -5.564266681671143
    10. 'user' → logprob: -5.564266681671143

Token 14: ' sera' (ID: 15511)
  Prédit: ' sera'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sera' → logprob: -0.49271053075790405
    2. 's' → logprob: -1.8677105903625488
    3. 'n' → logprob: -3.117710590362549
    4. '`' → logprob: -3.742710590362549
    5. 'sera' → logprob: -3.742710590362549
    6. ' correspond' → logprob: -4.367710590362549
    7. '```' → logprob: -4.367710590362549
    8. ''' → logprob: -4.492710590362549
    9. ' est' → logprob: -4.617710590362549
    10. ' s' → logprob: -4.742710590362549

Token 15: ' assign' (ID: 14975)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10184331983327866
    2. ' utilisée' → logprob: -2.6018433570861816
    3. '_' → logprob: -5.476843357086182
    4. ''' → logprob: -5.976843357086182
    5. 's' → logprob: -6.101843357086182
    6. ' convert' → logprob: -6.351843357086182
    7. 'convert' → logprob: -6.601843357086182
    8. 'r' → logprob: -6.851843357086182
    9. '  ' → logprob: -7.226843357086182
    10. ' ,' → logprob: -7.476843357086182

Token 16: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.10217734426259995
    2. 'e' → logprob: -2.352177381515503
    3. 'ée' → logprob: -6.352177143096924
    4. '#' → logprob: -9.352177619934082
    5. 'z' → logprob: -10.602177619934082
    6. '́' → logprob: -10.602177619934082
    7. '```' → logprob: -10.852177619934082
    8. 'u' → logprob: -10.977177619934082
    9. 'd' → logprob: -11.227177619934082
    10. ' ' → logprob: -11.352177619934082

Token 17: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.044187191873788834
    2. ' ' → logprob: -3.794187307357788
    3. ' à' → logprob: -4.544187068939209
    4. ' _' → logprob: -5.419187068939209
    5. '_a' → logprob: -6.044187068939209
    6. ' a' → logprob: -7.419187068939209
    7. 'a' → logprob: -7.669187068939209
    8. '```' → logprob: -7.794187068939209
    9. ',' → logprob: -8.044187545776367
    10. '\' → logprob: -8.544187545776367

Token 18: ' la' (ID: 557)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '`' → logprob: -1.132322907447815
    2. 'la' → logprob: -2.0073227882385254
    3. ' la' → logprob: -2.1323227882385254
    4. ' ' → logprob: -2.2573227882385254
    5. 'une' → logprob: -2.7573227882385254
    6. 'variable' → logprob: -2.7573227882385254
    7. ' variable' → logprob: -3.2573227882385254
    8. ' ' → logprob: -3.6323227882385254
    9. '```' → logprob: -3.6323227882385254
    10. ' une' → logprob: -3.7573227882385254

Token 19: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.6896815896034241
    2. 'variable' → logprob: -0.8146815896034241
    3. 'val' → logprob: -3.5646815299987793
    4. 'x' → logprob: -4.689681529998779
    5. 'var' → logprob: -5.564681529998779
    6. '`' → logprob: -6.189681529998779
    7. ' valeur' → logprob: -6.189681529998779
    8. ' ' → logprob: -6.439681529998779
    9. 'v' → logprob: -6.564681529998779
    10. '```' → logprob: -6.564681529998779

Token 20: ' N' (ID: 478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.643259584903717
    2. 'x' → logprob: -1.6432595252990723
    3. 'a' → logprob: -3.1432595252990723
    4. 'n' → logprob: -3.2682595252990723
    5. 'i' → logprob: -3.3932595252990723
    6. ' ' → logprob: -3.5182595252990723
    7. '`' → logprob: -3.6432595252990723
    8. 'v' → logprob: -3.6432595252990723
    9. ' _' → logprob: -4.768259525299072
    10. '```' → logprob: -4.768259525299072

Token 21: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004823837894946337
    2. 'n' → logprob: -5.379823684692383
    3. 'i' → logprob: -9.879823684692383
    4. '`' → logprob: -10.379823684692383
    5. 'x' → logprob: -10.504823684692383
    6. '_' → logprob: -10.629823684692383
    7. '#' → logprob: -11.004823684692383
    8. '```' → logprob: -11.379823684692383
    9. ' N' → logprob: -11.754823684692383
    10. 'input' → logprob: -11.879823684692383

Token 22: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00012106612848583609
    2. 'n' → logprob: -9.125121116638184
    3. '\n' → logprob: -12.125121116638184
    4. '```' → logprob: -12.500121116638184
    5. ' N' → logprob: -13.375121116638184
    6. '#' → logprob: -14.375121116638184
    7. 'print' → logprob: -15.625121116638184
    8. 'x' → logprob: -15.750121116638184
    9. '\' → logprob: -15.875121116638184
    10. '`' → logprob: -16.250120162963867

Token 23: ' input' (ID: 3422)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.776898251497187e-05
    2. ' N' → logprob: -10.5000581741333
    3. 'n' → logprob: -10.6250581741333
    4. '#' → logprob: -12.2500581741333
    5. '```' → logprob: -15.3750581741333
    6. ' ' → logprob: -15.5000581741333
    7. 'print' → logprob: -16.000057220458984
    8. 'I' → logprob: -16.875057220458984
    9. '"""' → logprob: -16.875057220458984
    10. 'import' → logprob: -17.125057220458984

Token 24: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11913565546274185
    2. 'N' → logprob: -2.369135618209839
    3. '=' → logprob: -5.244135856628418
    4. ' =' → logprob: -5.494135856628418
    5. '()' → logprob: -5.744135856628418
    6. '(
' → logprob: -5.994135856628418
    7. ' N' → logprob: -6.994135856628418
    8. '_' → logprob: -7.244135856628418
    9. '(N' → logprob: -7.619135856628418
    10. 'n' → logprob: -7.994135856628418

Token 25: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3168932795524597
    2. 'N' → logprob: -1.3168933391571045
    3. 'n' → logprob: -6.691893100738525
    4. ' ' → logprob: -7.691893100738525
    5. '#' → logprob: -7.816893100738525
    6. '()' → logprob: -8.066893577575684
    7. ')' → logprob: -8.441893577575684
    8. ' (' → logprob: -8.566893577575684
    9. ' N' → logprob: -8.816893577575684
    10. 'int' → logprob: -8.941893577575684

Token 26: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.43037739396095276
    2. '()' → logprob: -1.5553773641586304
    3. ' la' → logprob: -2.43037748336792
    4. ' l' → logprob: -3.43037748336792
    5. 'une' → logprob: -4.43037748336792
    6. '(' → logprob: -6.93037748336792
    7. ' ' → logprob: -6.93037748336792
    8. 'l' → logprob: -7.18037748336792
    9. ' ' → logprob: -7.18037748336792
    10. ' le' → logprob: -7.93037748336792

Token 27: ' texte' (ID: 53492)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.014173625037074089
    2. ' entier' → logprob: -4.88917350769043
    3. ''ent' → logprob: -5.76417350769043
    4. 'ent' → logprob: -6.38917350769043
    5. 'a' → logprob: -7.26417350769043
    6. ' e' → logprob: -8.13917350769043
    7. 'entrée' → logprob: -8.38917350769043
    8. ''entrée' → logprob: -9.01417350769043
    9. ''e' → logprob: -9.51417350769043
    10. 'es' → logprob: -10.26417350769043

Token 28: ' sur' (ID: 1512)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7780113816261292
    2. '.' → logprob: -2.2780113220214844
    3. ')' → logprob: -2.4030113220214844
    4. ' ' → logprob: -2.5280113220214844
    5. 'N' → logprob: -2.6530113220214844
    6. ',' → logprob: -2.9030113220214844
    7. '#' → logprob: -3.1530113220214844
    8. '(' → logprob: -3.2780113220214844
    9. ' )' → logprob: -4.653011322021484
    10. '```' → logprob: -4.778011322021484

Token 29: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11947030574083328
    2. ' l' → logprob: -3.1194703578948975
    3. ' la' → logprob: -3.4944703578948975
    4. 'la' → logprob: -4.494470119476318
    5. 'une' → logprob: -4.619470119476318
    6. ' une' → logprob: -4.994470119476318
    7. 'le' → logprob: -5.619470119476318
    8. ' ' → logprob: -6.744470119476318
    9. ' ' → logprob: -6.869470119476318
    10. ' clavier' → logprob: -7.244470119476318

Token 30: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.5690534710884094
    2. 'console' → logprob: -1.3190534114837646
    3. 'entrée' → logprob: -2.5690534114837646
    4. 'l' → logprob: -3.1940534114837646
    5. 'cl' → logprob: -4.319053649902344
    6. ' console' → logprob: -4.569053649902344
    7. ' ' → logprob: -5.069053649902344
    8. ' ligne' → logprob: -5.319053649902344
    9. '   ' → logprob: -5.819053649902344
    10. 's' → logprob: -6.194053649902344

Token 31: ' de' (ID: 334)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.27220067381858826
    2. 'n' → logprob: -2.022200584411621
    3. '\n' → logprob: -3.397200584411621
    4. 'e' → logprob: -4.272200584411621
    5. 's' → logprob: -4.272200584411621
    6. ' N' → logprob: -4.647200584411621
    7. '.' → logprob: -4.772200584411621
    8. ' ' → logprob: -5.522200584411621
    9. ',' → logprob: -5.522200584411621
    10. '\' → logprob: -6.147200584411621

Token 32: ' commande' (ID: 53567)
  Prédit: 'commande'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'commande' → logprob: -0.0052721803076565266
    2. ' commande' → logprob: -5.630272388458252
    3. 'command' → logprob: -7.005272388458252
    4. 'code' → logprob: -7.755272388458252
    5. 'la' → logprob: -9.505271911621094
    6. 'l' → logprob: -9.755271911621094
    7. 'comm' → logprob: -10.005271911621094
    8. ' l' → logprob: -10.755271911621094
    9. 'le' → logprob: -10.755271911621094
    10. 'Commande' → logprob: -11.005271911621094

Token 33: ',' (ID: 11)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.020704559981822968
    2. 'n' → logprob: -3.895704507827759
    3. '#' → logprob: -9.14570426940918
    4. '
' → logprob: -11.27070426940918
    5. '```' → logprob: -11.77070426940918
    6. ' 
' → logprob: -12.02070426940918
    7. ' N' → logprob: -12.14570426940918
    8. '`' → logprob: -12.27070426940918
    9. '\n' → logprob: -12.77070426940918
    10. '  
' → logprob: -12.89570426940918

Token 34: ' et' (ID: 859)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9858115911483765
    2. 'n' → logprob: -1.3608115911483765
    3. ' N' → logprob: -1.4858115911483765
    4. ' n' → logprob: -2.485811710357666
    5. ' ' → logprob: -2.985811710357666
    6. ' ' → logprob: -6.235811710357666
    7. ' puis' → logprob: -6.360811710357666
    8. ' )' → logprob: -6.610811710357666
    9. 'a' → logprob: -7.110811710357666
    10. ')' → logprob: -7.860811710357666

Token 35: ' int' (ID: 677)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9995213747024536
    2. 'int' → logprob: -1.8745213747024536
    3. ' convert' → logprob: -1.9995213747024536
    4. 'convert' → logprob: -2.124521255493164
    5. ' int' → logprob: -2.874521255493164
    6. 'le' → logprob: -4.249521255493164
    7. ' N' → logprob: -4.249521255493164
    8. ' on' → logprob: -4.374521255493164
    9. ' convertir' → logprob: -4.624521255493164
    10. ')' → logprob: -4.749521255493164

Token 36: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014268693514168262
    2. '()' → logprob: -4.26426887512207
    3. '(convert' → logprob: -10.51426887512207
    4. '(
' → logprob: -10.88926887512207
    5. 'convert' → logprob: -11.01426887512207
    6. '('' → logprob: -11.26426887512207
    7. '("' → logprob: -12.38926887512207
    8. '```' → logprob: -12.38926887512207
    9. '(

' → logprob: -12.88926887512207
    10. ')' → logprob: -13.13926887512207

Token 37: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1908348798751831
    2. ' transforme' → logprob: -2.6908349990844727
    3. 'convert' → logprob: -3.1908349990844727
    4. ' convert' → logprob: -3.1908349990844727
    5. ' converts' → logprob: -4.815834999084473
    6. '()' → logprob: -5.065834999084473
    7. '(convert' → logprob: -5.190834999084473
    8. ' convertir' → logprob: -6.690834999084473
    9. ' convierte' → logprob: -7.940834999084473
    10. ')' → logprob: -7.940834999084473

Token 38: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.004249231424182653
    2. 'i' → logprob: -5.504249095916748
    3. ' it' → logprob: -10.254249572753906
    4. '(' → logprob: -10.754249572753906
    5. 'iert' → logprob: -10.879249572753906
    6. '()' → logprob: -10.879249572753906
    7. 'e' → logprob: -11.004249572753906
    8. 'ie' → logprob: -11.504249572753906
    9. 'ira' → logprob: -11.629249572753906
    10. 'ir' → logprob: -11.754249572753906

Token 39: ' ce' (ID: 2357)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011148866266012192
    2. ' (' → logprob: -5.136148929595947
    3. ' ' → logprob: -7.136148929595947
    4. ' la' → logprob: -7.136148929595947
    5. '```' → logprob: -7.386148929595947
    6. 'l' → logprob: -7.511148929595947
    7. ' ' → logprob: -7.636148929595947
    8. '()' → logprob: -7.761148929595947
    9. 'la' → logprob: -8.136148452758789
    10. '(
' → logprob: -8.636148452758789

Token 40: ' texte' (ID: 53492)
  Prédit: ' texte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' texte' → logprob: -0.11968650668859482
    2. 'texte' → logprob: -2.9946866035461426
    3. ' ' → logprob: -3.9946866035461426
    4. ' que' → logprob: -4.119686603546143
    5. ' ' → logprob: -4.619686603546143
    6. '_' → logprob: -4.994686603546143
    7. ' Texte' → logprob: -6.369686603546143
    8. ' nombre' → logprob: -6.619686603546143
    9. '```' → logprob: -6.994686603546143
    10. ' dernier' → logprob: -7.119686603546143

Token 41: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.059392206370830536
    2. '(' → logprob: -3.684392213821411
    3. 'en' → logprob: -3.684392213821411
    4. '()' → logprob: -5.684391975402832
    5. ' ' → logprob: -6.934391975402832
    6. '(en' → logprob: -7.059391975402832
    7. ''en' → logprob: -7.309391975402832
    8. ' (' → logprob: -8.309391975402832
    9. '('' → logprob: -8.559391975402832
    10. ')' → logprob: -8.559391975402832

Token 42: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.10408928245306015
    2. ' entier' → logprob: -2.4790892601013184
    3. ' nombre' → logprob: -4.979089260101318
    4. 'un' → logprob: -5.979089260101318
    5. ' ' → logprob: -6.229089260101318
    6. 'ent' → logprob: -6.354089260101318
    7. ' une' → logprob: -7.104089260101318
    8. ' ' → logprob: -7.854089260101318
    9. 'nombre' → logprob: -8.104089736938477
    10. ' integer' → logprob: -8.604089736938477

Token 43: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0017356324242427945
    2. 'n' → logprob: -6.376735687255859
    3. '#' → logprob: -11.00173568725586
    4. '
' → logprob: -12.37673568725586
    5. '```' → logprob: -12.37673568725586
    6. '\n' → logprob: -12.87673568725586
    7. ' N' → logprob: -13.37673568725586
    8. 'x' → logprob: -14.12673568725586
    9. '\' → logprob: -14.37673568725586
    10. '

' → logprob: -14.62673568725586

Token 44: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.6550729419104755e-05
    2. 'n' → logprob: -10.375036239624023
    3. '```' → logprob: -12.750036239624023
    4. '#' → logprob: -13.500036239624023
    5. ' N' → logprob: -14.625036239624023
    6. '\n' → logprob: -15.250036239624023
    7. '
' → logprob: -16.250036239624023
    8. '`' → logprob: -16.750036239624023
    9. '\' → logprob: -17.125036239624023
    10. '

' → logprob: -17.375036239624023

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0040801819413900375
    2. '=' → logprob: -5.504080295562744
    3. '=int' → logprob: -14.129079818725586
    4. '=input' → logprob: -14.879079818725586
    5. ' ' → logprob: -15.379079818725586
    6. ' ' → logprob: -15.379079818725586
    7. 'space' → logprob: -16.754079818725586
    8. 's' → logprob: -17.004079818725586
    9. ',' → logprob: -17.129079818725586
    10. '.' → logprob: -17.254079818725586

Token 46: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01819196529686451
    2. 'int' → logprob: -4.018191814422607
    3. ' input' → logprob: -10.518192291259766
    4. ' ' → logprob: -11.768192291259766
    5. 'input' → logprob: -12.768192291259766
    6. ' ' → logprob: -12.893192291259766
    7. '=int' → logprob: -14.143192291259766
    8. '<int' → logprob: -15.518192291259766
    9. ' in' → logprob: -15.643192291259766
    10. '(int' → logprob: -15.768192291259766

Token 47: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12696410715579987
    2. '(' → logprob: -2.1269640922546387
    3. 'input' → logprob: -11.126964569091797
    4. '()' → logprob: -12.001964569091797
    5. ' (' → logprob: -12.251964569091797
    6. '(
' → logprob: -12.876964569091797
    7. '(user' → logprob: -12.876964569091797
    8. '('' → logprob: -13.251964569091797
    9. '(int' → logprob: -13.501964569091797
    10. '(

' → logprob: -14.626964569091797

Token 48: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00376885081641376
    2. '()' → logprob: -6.1287689208984375
    3. '('' → logprob: -6.7537689208984375
    4. '())' → logprob: -9.128768920898438
    5. '("("' → logprob: -9.628768920898438
    6. '(""))' → logprob: -9.878768920898438
    7. '("' → logprob: -10.003768920898438
    8. ')' → logprob: -10.128768920898438
    9. '("")' → logprob: -10.378768920898438
    10. '(`' → logprob: -10.628768920898438

Token 49: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' Lit' (ID: 45595)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39779508113861084
    2. 'for' → logprob: -1.6477950811386108
    3. ' if' → logprob: -2.1477952003479004
    4. 'if' → logprob: -4.8977952003479
    5. '#' → logprob: -5.6477952003479
    6. ' while' → logprob: -6.3977952003479
    7. ' #' → logprob: -6.6477952003479
    8. 's' → logprob: -7.2727952003479
    9. ' factorial' → logprob: -7.3977952003479
    10. 'factor' → logprob: -7.5227952003479

Token 51: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09464192390441895
    2. '(' → logprob: -2.469641923904419
    3. 'e' → logprob: -6.59464168548584
    4. 'une' → logprob: -7.21964168548584
    5. 'a' → logprob: -7.34464168548584
    6. '("")' → logprob: -7.34464168548584
    7. '#' → logprob: -7.59464168548584
    8. 's' → logprob: -8.09464168548584
    9. '('' → logprob: -8.84464168548584
    10. '("' → logprob: -9.09464168548584

Token 52: ' ligne' (ID: 19583)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -1.30465829372406
    2. ' ' → logprob: -1.42965829372406
    3. ' chaîne' → logprob: -2.0546584129333496
    4. 'entrée' → logprob: -2.0546584129333496
    5. ' ligne' → logprob: -2.4296584129333496
    6. 'ligne' → logprob: -3.8046584129333496
    7. ' boucle' → logprob: -4.17965841293335
    8. ' phrase' → logprob: -4.55465841293335
    9. 'chaine' → logprob: -4.67965841293335
    10. ' deuxième' → logprob: -4.80465841293335

Token 53: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007881415076553822
    2. ' =' → logprob: -5.8828816413879395
    3. '#' → logprob: -7.1328816413879395
    4. '_' → logprob: -7.5078816413879395
    5. ')' → logprob: -7.5078816413879395
    6. 'de' → logprob: -7.6328816413879395
    7. '<|end|>' → logprob: -7.6328816413879395
    8. ' de' → logprob: -8.132881164550781
    9. ' ()' → logprob: -8.132881164550781
    10. '("")' → logprob: -8.382881164550781

Token 54: ' texte' (ID: 53492)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.0470355749130249
    2. 'entrée' → logprob: -4.5470356941223145
    3. 'code' → logprob: -4.5470356941223145
    4. ' texte' → logprob: -5.1720356941223145
    5. '#' → logprob: -5.4220356941223145
    6. ' code' → logprob: -6.0470356941223145
    7. 'l' → logprob: -6.1720356941223145
    8. 'la' → logprob: -6.2970356941223145
    9. 't' → logprob: -6.4220356941223145
    10. 's' → logprob: -6.5470356941223145

Token 55: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014883324911352247
    2. ')' → logprob: -10.50014877319336
    3. '(' → logprob: -10.87514877319336
    4. '("")' → logprob: -10.87514877319336
    5. 'print' → logprob: -11.50014877319336
    6. 's' → logprob: -11.50014877319336
    7. '()
' → logprob: -11.62514877319336
    8. 'input' → logprob: -11.62514877319336
    9. ' ()' → logprob: -12.00014877319336
    10. '())' → logprob: -12.12514877319336

Token 56: ' la' (ID: 557)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'texte' → logprob: -1.3054273128509521
    2. 's' → logprob: -1.6804273128509521
    3. ' ' → logprob: -2.430427312850952
    4. ' a' → logprob: -2.555427312850952
    5. 'a' → logprob: -2.805427312850952
    6. ' s' → logprob: -3.055427312850952
    7. 'n' → logprob: -3.555427312850952
    8. ' une' → logprob: -3.930427312850952
    9. ' n' → logprob: -4.055427551269531
    10. 't' → logprob: -4.055427551269531

Token 57: ' décou' (ID: 68302)
  Prédit: 'ffect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ffect' → logprob: -1.7713176012039185
    2. ' stock' → logprob: -2.021317481994629
    3. 'split' → logprob: -2.396317481994629
    4. ' transforme' → logprob: -2.396317481994629
    5. ' split' → logprob: -2.521317481994629
    6. 'aff' → logprob: -3.021317481994629
    7. ' sé' → logprob: -3.396317481994629
    8. 'convert' → logprob: -3.521317481994629
    9. 'stock' → logprob: -3.896317481994629
    10. 'ff' → logprob: -3.896317481994629

Token 58: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.012568515725433826
    2. 'page' → logprob: -5.137568473815918
    3. 'p' → logprob: -6.012568473815918
    4. 'per' → logprob: -6.137568473815918
    5. 'pé' → logprob: -7.012568473815918
    6. 'pant' → logprob: -7.262568473815918
    7. '#' → logprob: -10.012568473815918
    8. 'pera' → logprob: -10.387568473815918
    9. '|' → logprob: -10.387568473815918
    10. 'pa' → logprob: -10.512568473815918

Token 59: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.9353065490722656
    2. '()' → logprob: -1.4353065490722656
    3. 'en' → logprob: -1.6853065490722656
    4. 's' → logprob: -1.8103065490722656
    5. ' ' → logprob: -5.435306549072266
    6. 'au' → logprob: -6.310306549072266
    7. 't' → logprob: -6.435306549072266
    8. '_' → logprob: -6.435306549072266
    9. '[]' → logprob: -6.435306549072266
    10. '(' → logprob: -6.810306549072266

Token 60: ' morceaux' (ID: 133321)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6185719966888428
    2. ' mots' → logprob: -1.3685719966888428
    3. 'tokens' → logprob: -2.7435719966888428
    4. ' morceaux' → logprob: -2.8685719966888428
    5. ' tokens' → logprob: -3.7435719966888428
    6. ' espaces' → logprob: -4.493572235107422
    7. ' éléments' → logprob: -4.493572235107422
    8. 'élé' → logprob: -5.118572235107422
    9. ' une' → logprob: -5.243572235107422
    10. 'liste' → logprob: -5.743572235107422

Token 61: ' à' (ID: 1221)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -1.0164798498153687
    2. 'avec' → logprob: -1.1414798498153687
    3. ' en' → logprob: -2.641479969024658
    4. 'en' → logprob: -2.766479969024658
    5. 's' → logprob: -2.766479969024658
    6. '()' → logprob: -4.016479969024658
    7. 'par' → logprob: -4.391479969024658
    8. 'str' → logprob: -4.641479969024658
    9. ' à' → logprob: -4.641479969024658
    10. 'sur' → logprob: -4.766479969024658

Token 62: ' chaque' (ID: 21194)
  Prédit: ' partir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.23376870155334473
    2. ' chaque' → logprob: -2.4837687015533447
    3. ' l' → logprob: -3.4837687015533447
    4. 'au' → logprob: -3.4837687015533447
    5. 'part' → logprob: -3.4837687015533447
    6. 'l' → logprob: -4.108768463134766
    7. '```' → logprob: -6.233768463134766
    8. 'p' → logprob: -6.358768463134766
    9. ' ' → logprob: -6.483768463134766
    10. 's' → logprob: -6.483768463134766

Token 63: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.18033476173877716
    2. ' espace' → logprob: -2.0553348064422607
    3. ''espace' → logprob: -4.055334568023682
    4. 'esp' → logprob: -4.305334568023682
    5. ' espaces' → logprob: -5.555334568023682
    6. ''esp' → logprob: -7.305334568023682
    7. '’espace' → logprob: -7.680334568023682
    8. 'space' → logprob: -8.05533504486084
    9. ' ' → logprob: -8.55533504486084
    10. ''' → logprob: -8.93033504486084

Token 64: ',
' (ID: 412)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2677568197250366
    2. 'words' → logprob: -2.267756938934326
    3. 'tokens' → logprob: -2.267756938934326
    4. 'text' → logprob: -5.517756938934326
    5. 'm' → logprob: -5.767756938934326
    6. 'input' → logprob: -5.767756938934326
    7. 'pieces' → logprob: -6.017756938934326
    8. 'texte' → logprob: -6.142756938934326
    9. ',' → logprob: -6.517756938934326
    10. 'spl' → logprob: -6.517756938934326

Token 65: '#' (ID: 2)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.252062052488327
    2. 'p' → logprob: -2.0020620822906494
    3. 'les' → logprob: -3.3770620822906494
    4. '#' → logprob: -3.6270620822906494
    5. ' et' → logprob: -4.87706184387207
    6. 'stock' → logprob: -5.37706184387207
    7. ' puis' → logprob: -5.50206184387207
    8. 's' → logprob: -6.75206184387207
    9. 'ces' → logprob: -7.00206184387207
    10. 'ens' → logprob: -7.25206184387207

Token 66: ' puis' (ID: 18766)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -1.6796594858169556
    2. 'tokens' → logprob: -1.6796594858169556
    3. 'stock' → logprob: -2.429659366607666
    4. '#' → logprob: -2.554659366607666
    5. ' les' → logprob: -3.054659366607666
    6. 'p' → logprob: -3.304659366607666
    7. ' puis' → logprob: -3.304659366607666
    8. ' tokens' → logprob: -3.554659366607666
    9. 'les' → logprob: -3.679659366607666
    10. ' mots' → logprob: -3.804659366607666

Token 67: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.8389151692390442
    2. 'les' → logprob: -1.4639151096343994
    3. 'stock' → logprob: -2.4639151096343994
    4. 'transform' → logprob: -3.3389151096343994
    5. ' transforme' → logprob: -3.3389151096343994
    6. ' les' → logprob: -3.5889151096343994
    7. 'cr' → logprob: -3.8389151096343994
    8. ' stock' → logprob: -3.9639151096343994
    9. ' convert' → logprob: -4.0889153480529785
    10. 'ass' → logprob: -4.4639153480529785

Token 68: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0008489366737194359
    2. 't' → logprob: -7.375848770141602
    3. 'i' → logprob: -9.000848770141602
    4. ' it' → logprob: -9.750848770141602
    5. 'each' → logprob: -11.875848770141602
    6. 'et' → logprob: -12.125848770141602
    7. '	it' → logprob: -12.625848770141602
    8. 'is' → logprob: -12.625848770141602
    9. 'e' → logprob: -13.000848770141602
    10. '```' → logprob: -13.250848770141602

Token 69: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.14353275299072266
    2. ' chacun' → logprob: -2.7685327529907227
    3. 'cha' → logprob: -3.1435327529907227
    4. ' each' → logprob: -4.518532752990723
    5. ' chacune' → logprob: -5.143532752990723
    6. 'ch' → logprob: -5.518532752990723
    7. 'each' → logprob: -6.143532752990723
    8. ' ces' → logprob: -6.768532752990723
    9. ' chac' → logprob: -7.018532752990723
    10. 'ces' → logprob: -7.018532752990723

Token 70: ' morceau' (ID: 160026)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7029402852058411
    2. 'élé' → logprob: -1.2029402256011963
    3. ' morceau' → logprob: -1.7029402256011963
    4. 'mot' → logprob: -3.9529402256011963
    5. ' élément' → logprob: -7.202940464019775
    6. '```' → logprob: -7.202940464019775
    7. ' morceaux' → logprob: -7.827940464019775
    8. ' ' → logprob: -8.452939987182617
    9. 'part' → logprob: -8.452939987182617
    10. ' mot' → logprob: -9.327939987182617

Token 71: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.4745902121067047
    2. 'en' → logprob: -0.9745901823043823
    3. ' ' → logprob: -8.849590301513672
    4. '```' → logprob: -9.349590301513672
    5. ''en' → logprob: -9.724590301513672
    6. 's' → logprob: -10.224590301513672
    7. '	en' → logprob: -10.599590301513672
    8. '(en' → logprob: -10.974590301513672
    9. '_en' → logprob: -11.474590301513672
    10. ' into' → logprob: -11.599590301513672

Token 72: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6106370687484741
    2. 'ent' → logprob: -1.7356370687484741
    3. ' int' → logprob: -1.8606370687484741
    4. ' entier' → logprob: -2.2356371879577637
    5. ' un' → logprob: -4.360637187957764
    6. ' ent' → logprob: -5.610637187957764
    7. 'un' → logprob: -7.735637187957764
    8. ' integer' → logprob: -8.110636711120605
    9. ' nombre' → logprob: -8.235636711120605
    10. ' ' → logprob: -8.735636711120605

Token 73: ' avec' (ID: 3937)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5227603316307068
    2. 'numbers' → logprob: -2.0227603912353516
    3. ' numbers' → logprob: -3.0227603912353516
    4. 'values' → logprob: -3.1477603912353516
    5. 'lst' → logprob: -3.2727603912353516
    6. 't' → logprob: -3.3977603912353516
    7. ' lst' → logprob: -3.8977603912353516
    8. 'l' → logprob: -4.147760391235352
    9. ' values' → logprob: -4.397760391235352
    10. 'L' → logprob: -4.897760391235352

Token 74: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1855781525373459
    2. ' map' → logprob: -2.4355781078338623
    3. 'list' → logprob: -2.6855781078338623
    4. 'int' → logprob: -5.435578346252441
    5. ' la' → logprob: -5.435578346252441
    6. ' list' → logprob: -6.060578346252441
    7. 'la' → logprob: -6.685578346252441
    8. ' int' → logprob: -7.935578346252441
    9. '[' → logprob: -8.310578346252441
    10. '```' → logprob: -8.435578346252441

Token 75: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.882445216178894
    2. '(' → logprob: -1.132445216178894
    3. 'int' → logprob: -2.2574453353881836
    4. '(numbers' → logprob: -3.0074453353881836
    5. 'ent' → logprob: -3.8824453353881836
    6. 'numbers' → logprob: -4.132445335388184
    7. '()' → logprob: -4.382445335388184
    8. '(ent' → logprob: -4.382445335388184
    9. '(map' → logprob: -5.007445335388184
    10. '(
' → logprob: -5.382445335388184

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18057581782341003
    2. ')' → logprob: -1.8055758476257324
    3. ',)' → logprob: -8.180575370788574
    4. '),' → logprob: -8.805575370788574
    5. ',map' → logprob: -9.180575370788574
    6. ',input' → logprob: -9.555575370788574
    7. ',
' → logprob: -10.180575370788574
    8. '(),' → logprob: -10.680575370788574
    9. '```' → logprob: -11.055575370788574
    10. ' ,' → logprob: -11.055575370788574

Token 77: ' ...' (ID: 2550)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7293741106987
    2. 'str' → logprob: -1.6043741703033447
    3. ')' → logprob: -1.8543741703033447
    4. ' input' → logprob: -2.6043741703033447
    5. 'split' → logprob: -3.2293741703033447
    6. ' str' → logprob: -3.6043741703033447
    7. ' )' → logprob: -4.979373931884766
    8. 'list' → logprob: -5.104373931884766
    9. '))' → logprob: -6.979373931884766
    10. 'strip' → logprob: -6.979373931884766

Token 78: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009373882785439491
    2. 'input' → logprob: -5.384373664855957
    3. '),' → logprob: -5.634373664855957
    4. '(input' → logprob: -8.134373664855957
    5. ').' → logprob: -8.509373664855957
    6. ' )' → logprob: -8.634373664855957
    7. '))' → logprob: -9.134373664855957
    8. '())' → logprob: -9.509373664855957
    9. '`)' → logprob: -10.134373664855957
    10. '```' → logprob: -10.509373664855957

Token 79: ' avant' (ID: 13339)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.7795431613922119
    2. 'list' → logprob: -1.654543161392212
    3. 'liste' → logprob: -2.154543161392212
    4. 'et' → logprob: -2.654543161392212
    5. 'l' → logprob: -3.404543161392212
    6. 'val' → logprob: -4.404542922973633
    7. ' lst' → logprob: -4.529542922973633
    8. ' puis' → logprob: -4.529542922973633
    9. ' et' → logprob: -4.904542922973633
    10. 'p' → logprob: -5.029542922973633

Token 80: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6317201852798462
    2. 'de' → logprob: -1.0067201852798462
    3. 'd' → logprob: -3.1317200660705566
    4. 'list' → logprob: -3.7567200660705566
    5. ' d' → logprob: -3.8817200660705566
    6. '#' → logprob: -5.006720066070557
    7. ')' → logprob: -6.006720066070557
    8. 'les' → logprob: -7.006720066070557
    9. 'liste' → logprob: -7.256720066070557
    10. ' list' → logprob: -7.256720066070557

Token 81: ' les' (ID: 1341)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0451342910528183
    2. ' list' → logprob: -3.1701343059539795
    3. 'liste' → logprob: -6.4201340675354
    4. 's' → logprob: -9.295134544372559
    5. ' liste' → logprob: -9.545134544372559
    6. ' convertir' → logprob: -9.670134544372559
    7. '#' → logprob: -9.795134544372559
    8. 'l' → logprob: -10.045134544372559
    9. 'assign' → logprob: -10.920134544372559
    10. ' les' → logprob: -11.045134544372559

Token 82: ' placer' (ID: 55591)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05971544608473778
    2. 'stock' → logprob: -4.059715270996094
    3. ' list' → logprob: -4.559715270996094
    4. ' stock' → logprob: -4.809715270996094
    5. 'mettre' → logprob: -5.434715270996094
    6. 'liste' → logprob: -5.559715270996094
    7. ' convertir' → logprob: -5.934715270996094
    8. 'transform' → logprob: -6.184715270996094
    9. 'assign' → logprob: -6.684715270996094
    10. 'print' → logprob: -6.684715270996094

Token 83: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.018617864698171616
    2. ' dans' → logprob: -4.018617630004883
    3. 'sur' → logprob: -8.893617630004883
    4. 'list' → logprob: -9.268617630004883
    5. 'in' → logprob: -9.393617630004883
    6. 'en' → logprob: -9.643617630004883
    7. ')' → logprob: -10.768617630004883
    8. 's' → logprob: -11.518617630004883
    9. ' in' → logprob: -11.643617630004883
    10. 'Dans' → logprob: -11.893617630004883

Token 84: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20548532903194427
    2. 'une' → logprob: -2.0804853439331055
    3. 'la' → logprob: -3.4554853439331055
    4. ' une' → logprob: -3.9554853439331055
    5. 'a' → logprob: -6.0804853439331055
    6. ' la' → logprob: -6.2054853439331055
    7. '[]' → logprob: -6.4554853439331055
    8. ' list' → logprob: -6.5804853439331055
    9. 'un' → logprob: -6.9554853439331055
    10. 'liste' → logprob: -6.9554853439331055

Token 85: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.17354999482631683
    2. 'liste' → logprob: -1.923550009727478
    3. ' list' → logprob: -4.673550128936768
    4. ' liste' → logprob: -6.173550128936768
    5. '[]' → logprob: -7.798550128936768
    6. 's' → logprob: -8.04854965209961
    7. 'l' → logprob: -8.42354965209961
    8. 'lst' → logprob: -8.54854965209961
    9. 'a' → logprob: -8.67354965209961
    10. '[' → logprob: -9.29854965209961

Token 86: '.
' (ID: 558)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.234143853187561
    2. 'l' → logprob: -1.609143853187561
    3. 'a' → logprob: -2.3591437339782715
    4. 'numbers' → logprob: -2.7341437339782715
    5. 'lst' → logprob: -2.9841437339782715
    6. 'A' → logprob: -3.1091437339782715
    7. 's' → logprob: -3.1091437339782715
    8. 'values' → logprob: -3.6091437339782715
    9. 'm' → logprob: -3.8591437339782715
    10. 'val' → logprob: -3.9841437339782715

Token 87: 'A' (ID: 32)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.2434208393096924
    2. 'values' → logprob: -1.2434208393096924
    3. 'numbers' → logprob: -2.1184208393096924
    4. 'val' → logprob: -2.2434208393096924
    5. 'lst' → logprob: -2.7434208393096924
    6. 'A' → logprob: -2.7434208393096924
    7. 'liste' → logprob: -4.368420600891113
    8. 'vals' → logprob: -4.743420600891113
    9. 'l' → logprob: -4.993420600891113
    10. 'a' → logprob: -4.993420600891113

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6376670598983765
    2. '=' → logprob: -0.7626670598983765
    3. 's' → logprob: -5.512667179107666
    4. '_' → logprob: -7.137667179107666
    5. ',' → logprob: -9.387666702270508
    6. ' ' → logprob: -10.262666702270508
    7. '[' → logprob: -10.512666702270508
    8. '.' → logprob: -11.012666702270508
    9. '=[]' → logprob: -11.137666702270508
    10. ')' → logprob: -11.512666702270508

Token 89: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2519521713256836
    2. ' list' → logprob: -1.5019521713256836
    3. '[list' → logprob: -11.251952171325684
    4. '[' → logprob: -13.126952171325684
    5. '=list' → logprob: -13.751952171325684
    6. ' [' → logprob: -14.001952171325684
    7. 'int' → logprob: -14.001952171325684
    8. 'map' → logprob: -14.251952171325684
    9. '(list' → logprob: -14.251952171325684
    10. '[]' → logprob: -14.251952171325684

Token 90: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3133045732975006
    2. '(' → logprob: -1.3133045434951782
    3. '(int' → logprob: -11.063304901123047
    4. '(m' → logprob: -11.563304901123047
    5. '(
' → logprob: -11.688304901123047
    6. ' (' → logprob: -12.813304901123047
    7. '(

' → logprob: -13.063304901123047
    8. '(ma' → logprob: -13.813304901123047
    9. '(range' → logprob: -14.063304901123047
    10. '(input' → logprob: -14.688304901123047

Token 91: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1602427214384079
    2. '(' → logprob: -1.9102426767349243
    3. '<int' → logprob: -12.160243034362793
    4. '(
' → logprob: -12.285243034362793
    5. ' (' → logprob: -12.535243034362793
    6. '(in' → logprob: -13.160243034362793
    7. '(str' → logprob: -14.410243034362793
    8. '=int' → logprob: -14.535243034362793
    9. '(lambda' → logprob: -14.660243034362793
    10. '[int' → logprob: -14.910243034362793

Token 92: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05000796169042587
    2. '(' → logprob: -3.0500080585479736
    3. ',input' → logprob: -6.6750078201293945
    4. 'input' → logprob: -9.550007820129395
    5. '(
' → logprob: -10.550007820129395
    6. ' (' → logprob: -10.550007820129395
    7. ',' → logprob: -11.175007820129395
    8. ')' → logprob: -11.925007820129395
    9. '(

' → logprob: -12.300007820129395
    10. '=input' → logprob: -12.550007820129395

Token 93: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0060003711842000484
    2. ' input' → logprob: -5.131000518798828
    3. '(input' → logprob: -9.631000518798828
    4. ',input' → logprob: -13.756000518798828
    5. ' ' → logprob: -14.006000518798828
    6. '	input' → logprob: -14.131000518798828
    7. ')' → logprob: -14.131000518798828
    8. '))' → logprob: -14.631000518798828
    9. '=input' → logprob: -15.256000518798828
    10. '(' → logprob: -15.256000518798828

Token 94: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0165744349360466
    2. '()' → logprob: -4.141574382781982
    3. '())' → logprob: -8.01657485961914
    4. '()))' → logprob: -8.89157485961914
    5. '())))' → logprob: -10.39157485961914
    6. ')' → logprob: -11.14157485961914
    7. '(' → logprob: -11.76657485961914
    8. '()));' → logprob: -11.89157485961914
    9. '()>' → logprob: -12.76657485961914
    10. '()
' → logprob: -13.51657485961914

Token 95: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002484573284164071
    2. 'strip' → logprob: -6.0024847984313965
    3. 'rstrip' → logprob: -12.252484321594238
    4. ' split' → logprob: -12.752484321594238
    5. '(split' → logprob: -14.502484321594238
    6. ')' → logprob: -15.002484321594238
    7. 'spl' → logprob: -15.127484321594238
    8. 's' → logprob: -17.002485275268555
    9. '.split' → logprob: -18.377485275268555
    10. ' strip' → logprob: -18.377485275268555

Token 96: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3229147493839264
    2. '()' → logprob: -1.572914719581604
    3. '())' → logprob: -2.6979148387908936
    4. '))' → logprob: -7.4479146003723145
    5. '(' → logprob: -7.8229146003723145
    6. ')' → logprob: -9.322915077209473
    7. '())))' → logprob: -9.822915077209473
    8. '()));' → logprob: -10.822915077209473
    9. '()))
' → logprob: -11.697915077209473
    10. '()>' → logprob: -12.197915077209473

Token 97: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3447411060333252
    2. '
' → logprob: -2.344741106033325
    3. '[' → logprob: -2.844741106033325
    4. '<|end|>' → logprob: -2.844741106033325
    5. ' 
' → logprob: -3.219741106033325
    6. ' ' → logprob: -4.719740867614746
    7. ')' → logprob: -5.594740867614746
    8. '\n' → logprob: -5.719740867614746
    9. '.' → logprob: -5.844740867614746
    10. '  
' → logprob: -5.844740867614746

Token 98: ' F' (ID: 454)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31152287125587463
    2. '#' → logprob: -1.8115228414535522
    3. 'if' → logprob: -2.686522960662842
    4. 's' → logprob: -4.061522960662842
    5. 'sum' → logprob: -4.936522960662842
    6. 'print' → logprob: -5.811522960662842
    7. 'i' → logprob: -5.936522960662842
    8. 'result' → logprob: -5.936522960662842
    9. 'total' → logprob: -7.186522960662842
    10. 'f' → logprob: -7.311522960662842

Token 99: 'ait' (ID: 1271)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.017993688583374
    2. '#' → logprob: -1.142993688583374
    3. 'o' → logprob: -1.142993688583374
    4. 'r' → logprob: -8.017993927001953
    5. 'for' → logprob: -9.267993927001953
    6. '#print' → logprob: -9.267993927001953
    7. ' or' → logprob: -9.642993927001953
    8. 'i' → logprob: -9.767993927001953
    9. '#
' → logprob: -9.892993927001953
    10. ' #' → logprob: -10.017993927001953

Token 100: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6057618260383606
    2. '(' → logprob: -0.9807618260383606
    3. '#' → logprob: -3.230761766433716
    4. ' ' → logprob: -4.230762004852295
    5. ' for' → logprob: -5.105762004852295
    6. '_' → logprob: -5.105762004852295
    7. '()' → logprob: -5.480762004852295
    8. 's' → logprob: -6.855762004852295
    9. ' #' → logprob: -7.355762004852295
    10. ')' → logprob: -7.480762004852295

Token 101: ' même' (ID: 9679)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07382287085056305
    2. ' somme' → logprob: -3.3238229751586914
    3. 'm' → logprob: -3.5738229751586914
    4. 'som' → logprob: -5.573822975158691
    5. 'for' → logprob: -7.073822975158691
    6. 'diff' → logprob: -8.073822975158691
    7. 'sum' → logprob: -8.323822975158691
    8. '#' → logprob: -8.448822975158691
    9. ' même' → logprob: -8.448822975158691
    10. 'suite' → logprob: -8.948822975158691

Token 102: ' chose' (ID: 15505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1325371265411377
    2. '(' → logprob: -3.3825371265411377
    3. '#' → logprob: -3.6325371265411377
    4. 'for' → logprob: -3.6325371265411377
    5. 's' → logprob: -4.257536888122559
    6. 'A' → logprob: -4.382536888122559
    7. '(A' → logprob: -5.632536888122559
    8. '_' → logprob: -6.507536888122559
    9. 'ligne' → logprob: -6.757536888122559
    10. 'pour' → logprob: -6.882536888122559

Token 103: ' pour' (ID: 1930)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.7463194727897644
    2. 'B' → logprob: -0.8713194727897644
    3. '(' → logprob: -2.496319532394409
    4. '()' → logprob: -4.24631929397583
    5. 'for' → logprob: -5.99631929397583
    6. '#' → logprob: -5.99631929397583
    7. 's' → logprob: -6.74631929397583
    8. ' B' → logprob: -6.99631929397583
    9. 'A' → logprob: -7.24631929397583
    10. '(A' → logprob: -7.37131929397583

Token 104: ' une' (ID: 2463)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1841491162776947
    2. ' B' → logprob: -1.934149146080017
    3. ' la' → logprob: -4.059149265289307
    4. 'la' → logprob: -5.309149265289307
    5. ' une' → logprob: -7.559149265289307
    6. 'l' → logprob: -8.059148788452148
    7. 'une' → logprob: -8.684148788452148
    8. 'a' → logprob: -9.309148788452148
    9. ' l' → logprob: -9.684148788452148
    10. 'the' → logprob: -9.684148788452148

Token 105: ' autre' (ID: 20278)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.6307971477508545
    2. ' autre' → logprob: -1.1307971477508545
    3. ' deuxième' → logprob: -2.5057971477508545
    4. 'de' → logprob: -4.130797386169434
    5. ' seconde' → logprob: -4.255797386169434
    6. ' ' → logprob: -4.255797386169434
    7. ''autre' → logprob: -5.755797386169434
    8. 'a' → logprob: -5.880797386169434
    9. '2' → logprob: -6.380797386169434
    10. 'se' → logprob: -6.755797386169434

Token 106: ' liste' (ID: 31719)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.6800807118415833
    2. ' ligne' → logprob: -0.9300807118415833
    3. ' liste' → logprob: -2.9300806522369385
    4. 'liste' → logprob: -3.5550806522369385
    5. 'A' → logprob: -4.930080890655518
    6. '#' → logprob: -5.805080890655518
    7. 'entrée' → logprob: -6.680080890655518
    8. 'l' → logprob: -6.805080890655518
    9. 's' → logprob: -6.930080890655518
    10. 'line' → logprob: -7.555080890655518

Token 107: ',' (ID: 11)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0022556488402187824
    2. ' B' → logprob: -6.127255439758301
    3. '<|end|>' → logprob: -9.7522554397583
    4. ' ' → logprob: -12.5022554397583
    5. ',' → logprob: -12.5022554397583
    6. ')' → logprob: -13.5022554397583
    7. 's' → logprob: -13.8772554397583
    8. '<|end|>' → logprob: -14.8772554397583
    9. '(B' → logprob: -15.2522554397583
    10. '```' → logprob: -15.3772554397583

Token 108: ' appelée' (ID: 179130)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.08894229680299759
    2. ' B' → logprob: -2.463942289352417
    3. ' ' → logprob: -13.838942527770996
    4. ' ' → logprob: -14.088942527770996
    5. ' but' → logprob: -15.338942527770996
    6. 'b' → logprob: -16.08894157409668
    7. 'M' → logprob: -16.08894157409668
    8. '```' → logprob: -16.33894157409668
    9. 'I' → logprob: -16.83894157409668
    10. '`' → logprob: -16.96394157409668

Token 109: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.016063343733549118
    2. ' B' → logprob: -4.141063213348389
    3. '`' → logprob: -11.141063690185547
    4. '"B' → logprob: -12.141063690185547
    5. 'Q' → logprob: -13.141063690185547
    6. '```' → logprob: -13.891063690185547
    7. 's' → logprob: -14.328563690185547
    8. ' ' → logprob: -14.453563690185547
    9. 'M' → logprob: -14.453563690185547
    10. '"' → logprob: -14.703563690185547

Token 110: '.
' (ID: 558)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00013488641707226634
    2. ' B' → logprob: -9.625134468078613
    3. '
' → logprob: -10.625134468078613
    4. '=' → logprob: -11.625134468078613
    5. ' =' → logprob: -11.750134468078613
    6. '  
' → logprob: -12.000134468078613
    7. ' 
' → logprob: -12.125134468078613
    8. '```' → logprob: -12.500134468078613
    9. '<|end|>' → logprob: -12.625134468078613
    10. ')' → logprob: -13.625134468078613

Token 111: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0007323168683797121
    2. ' B' → logprob: -7.250732421875
    3. 'b' → logprob: -11.375732421875
    4. ' =' → logprob: -12.125732421875
    5. '=' → logprob: -13.750732421875
    6. 's' → logprob: -13.875732421875
    7. 'C' → logprob: -14.000732421875
    8. '<|end|>' → logprob: -14.250732421875
    9. 'A' → logprob: -14.750732421875
    10. 'list' → logprob: -15.000732421875

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519310414791107
    2. '=' → logprob: -1.501931071281433
    3. '=list' → logprob: -14.751931190490723
    4. '.' → logprob: -15.126931190490723
    5. ' ' → logprob: -15.126931190490723
    6. ')' → logprob: -15.126931190490723
    7. '_' → logprob: -15.251931190490723
    8. ' ' → logprob: -16.376930236816406
    9. ' =
' → logprob: -16.501930236816406
    10. ',' → logprob: -16.751930236816406

Token 113: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2519296407699585
    2. ' list' → logprob: -1.5019296407699585
    3. '(list' → logprob: -15.12692928314209
    4. 'List' → logprob: -16.501930236816406
    5. '=list' → logprob: -16.501930236816406
    6. 'l' → logprob: -16.751930236816406
    7. '	list' → logprob: -17.251930236816406
    8. ' ' → logprob: -17.751930236816406
    9. 'li' → logprob: -17.876930236816406
    10. ' ' → logprob: -18.001930236816406

Token 114: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004423589911311865
    2. '(' → logprob: -5.50442361831665
    3. ' (' → logprob: -8.629423141479492
    4. '(list' → logprob: -8.754423141479492
    5. '(m' → logprob: -12.254423141479492
    6. '(ma' → logprob: -14.254423141479492
    7. '(mapping' → logprob: -14.254423141479492
    8. '(int' → logprob: -14.379423141479492
    9. '(.' → logprob: -15.129423141479492
    10. '(
' → logprob: -15.129423141479492

Token 115: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008782314253039658
    2. '(' → logprob: -7.12587833404541
    3. ' (' → logprob: -10.25087833404541
    4. '<int' → logprob: -10.62587833404541
    5. '(in' → logprob: -11.50087833404541
    6. 'int' → logprob: -13.50087833404541
    7. '=int' → logprob: -14.00087833404541
    8. '[int' → logprob: -14.62587833404541
    9. ',int' → logprob: -15.25087833404541
    10. '(
' → logprob: -15.37587833404541

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023561766371130943
    2. ',input' → logprob: -4.023561954498291
    3. '(input' → logprob: -5.398561954498291
    4. '(' → logprob: -7.773561954498291
    5. ' ,' → logprob: -8.523561477661133
    6. ',int' → logprob: -8.648561477661133
    7. '(int' → logprob: -9.523561477661133
    8. ' (' → logprob: -12.898561477661133
    9. '(),' → logprob: -14.398561477661133
    10. ',(' → logprob: -14.523561477661133

Token 117: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06275460124015808
    2. ' input' → logprob: -2.8127546310424805
    3. 'int' → logprob: -7.1877546310424805
    4. '(input' → logprob: -10.56275463104248
    5. ' int' → logprob: -12.31275463104248
    6. '=input' → logprob: -15.56275463104248
    7. '<input' → logprob: -16.187753677368164
    8. '[input' → logprob: -16.562753677368164
    9. '(int' → logprob: -17.062753677368164
    10. ' ' → logprob: -17.062753677368164

Token 118: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. '()' → logprob: -13.12500286102295
    3. '.' → logprob: -15.12500286102295
    4. ' ().' → logprob: -15.12500286102295
    5. '()
' → logprob: -18.375001907348633
    6. '(' → logprob: -19.000001907348633
    7. '()).' → logprob: -19.500001907348633
    8. ' .' → logprob: -19.750001907348633
    9. ').' → logprob: -20.500001907348633
    10. '().
' → logprob: -20.500001907348633

Token 119: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.392202976712724e-06
    2. ')' → logprob: -12.750006675720215
    3. ' split' → logprob: -12.750006675720215
    4. '(split' → logprob: -15.375006675720215
    5. 'spl' → logprob: -16.7500057220459
    6. 'plit' → logprob: -16.7500057220459
    7. '.split' → logprob: -16.8750057220459
    8. '))' → logprob: -16.8750057220459
    9. '```' → logprob: -17.5000057220459
    10. ' ' → logprob: -17.8750057220459

Token 120: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01168380118906498
    2. '()' → logprob: -4.636683940887451
    3. '))' → logprob: -6.511683940887451
    4. '())' → logprob: -8.011683464050293
    5. '()))
' → logprob: -9.511683464050293
    6. '(' → logprob: -11.511683464050293
    7. '()));' → logprob: -11.636683464050293
    8. '())).' → logprob: -12.011683464050293
    9. '()))

' → logprob: -12.511683464050293
    10. '())))' → logprob: -12.886683464050293

Token 121: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8111441135406494
    2. 's' → logprob: -2.1861441135406494
    3. 'for' → logprob: -2.3111441135406494
    4. 'S' → logprob: -2.4361441135406494
    5. 'C' → logprob: -2.6861441135406494
    6. 'result' → logprob: -3.3111441135406494
    7. 'max' → logprob: -3.3111441135406494
    8. 'count' → logprob: -3.9361441135406494
    9. 'sum' → logprob: -4.18614387512207
    10. 'c' → logprob: -4.31114387512207

Token 122: ' Cr' (ID: 5790)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0322321653366089
    2. 'result' → logprob: -1.0322321653366089
    3. 's' → logprob: -2.0322322845458984
    4. 'C' → logprob: -3.4072322845458984
    5. 'for' → logprob: -3.7822322845458984
    6. 'total' → logprob: -4.032232284545898
    7. 'diff' → logprob: -4.407232284545898
    8. 'max' → logprob: -4.407232284545898
    9. 'count' → logprob: -4.782232284545898
    10. 'sum' → logprob: -4.782232284545898

Token 123: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.3108636140823364
    2. 'éer' → logprob: -1.8108636140823364
    3. 'é' → logprob: -2.310863494873047
    4. 'éf' → logprob: -6.060863494873047
    5. '#' → logprob: -7.310863494873047
    6. 'e' → logprob: -7.685863494873047
    7. 'édit' → logprob: -7.935863494873047
    8. 'ép' → logprob: -8.185863494873047
    9. 'ées' → logprob: -9.810863494873047
    10. 'éd' → logprob: -10.060863494873047

Token 124: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.12405391782522202
    2. 'une' → logprob: -2.374053955078125
    3. ' un' → logprob: -5.124053955078125
    4. 'a' → logprob: -5.749053955078125
    5. ' ' → logprob: -5.874053955078125
    6. '_' → logprob: -5.874053955078125
    7. ' la' → logprob: -6.624053955078125
    8. '#' → logprob: -7.249053955078125
    9. ' deux' → logprob: -7.249053955078125
    10. ' a' → logprob: -7.249053955078125

Token 125: ' variable' (ID: 11076)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.7303683161735535
    2. 's' → logprob: -1.8553683757781982
    3. ' nouvelle' → logprob: -2.1053683757781982
    4. 'nou' → logprob: -2.9803683757781982
    5. ' liste' → logprob: -3.1053683757781982
    6. 'variable' → logprob: -3.4803683757781982
    7. 'd' → logprob: -3.6053683757781982
    8. '#' → logprob: -3.7303683757781982
    9. 'for' → logprob: -4.230368137359619
    10. ' boucle' → logprob: -5.230368137359619

Token 126: ' appelée' (ID: 179130)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.1371657848358154
    2. 's' → logprob: -1.2621657848358154
    3. 'result' → logprob: -1.8871657848358154
    4. ' result' → logprob: -2.1371657848358154
    5. ' C' → logprob: -3.5121657848358154
    6. 'S' → logprob: -3.8871657848358154
    7. 'sum' → logprob: -4.0121660232543945
    8. 'total' → logprob: -5.1371660232543945
    9. 'c' → logprob: -5.1371660232543945
    10. ' s' → logprob: -5.3871660232543945

Token 127: ' '' (ID: 461)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.439027190208435
    2. 'result' → logprob: -1.689027190208435
    3. ' result' → logprob: -1.689027190208435
    4. 's' → logprob: -1.814027190208435
    5. ' C' → logprob: -3.0640273094177246
    6. 'sum' → logprob: -3.1890273094177246
    7. 'S' → logprob: -3.1890273094177246
    8. ' sum' → logprob: -3.9390273094177246
    9. ' S' → logprob: -4.439027309417725
    10. ' somme' → logprob: -4.439027309417725

Token 128: 'sum' (ID: 12298)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8474716544151306
    2. 's' → logprob: -1.4724717140197754
    3. 'C' → logprob: -2.0974717140197754
    4. 'total' → logprob: -3.0974717140197754
    5. 'diff' → logprob: -3.2224717140197754
    6. 'count' → logprob: -3.7224717140197754
    7. 'sum' → logprob: -3.8474717140197754
    8. 'S' → logprob: -3.9724717140197754
    9. 'res' → logprob: -3.9724717140197754
    10. 'difference' → logprob: -4.722471714019775

Token 129: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23533760011196136
    2. '_s' → logprob: -2.735337495803833
    3. '_val' → logprob: -3.360337495803833
    4. '_total' → logprob: -3.860337495803833
    5. '_result' → logprob: -3.860337495803833
    6. 's' → logprob: -3.985337495803833
    7. '_value' → logprob: -4.485337734222412
    8. 'ma' → logprob: -4.610337734222412
    9. '_sum' → logprob: -4.610337734222412
    10. '_ab' → logprob: -5.110337734222412

Token 130: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4099826514720917
    2. '_sum' → logprob: -1.159982681274414
    3. '_s' → logprob: -4.409982681274414
    4. ' =' → logprob: -4.909982681274414
    5. '_total' → logprob: -6.784982681274414
    6. 's' → logprob: -7.534982681274414
    7. ' _' → logprob: -7.659982681274414
    8. 'sum' → logprob: -7.784982681274414
    9. '=' → logprob: -7.909982681274414
    10. '_=' → logprob: -9.034982681274414

Token 131: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.7750037908554077
    2. 'stock' → logprob: -0.7750037908554077
    3. 's' → logprob: -3.9000039100646973
    4. '0' → logprob: -4.775003910064697
    5. 'acc' → logprob: -4.775003910064697
    6. ' accum' → logprob: -5.150003910064697
    7. ' cum' → logprob: -5.275003910064697
    8. 'r' → logprob: -5.525003910064697
    9. 'calcul' → logprob: -5.525003910064697
    10. 'cum' → logprob: -6.025003910064697

Token 132: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.019232092425227165
    2. 'e' → logprob: -4.644232273101807
    3. '_' → logprob: -5.394232273101807
    4. ' ' → logprob: -6.519232273101807
    5. 'a' → logprob: -7.144232273101807
    6. '()' → logprob: -7.394232273101807
    7. '=' → logprob: -7.769232273101807
    8. ' =' → logprob: -8.144231796264648
    9. '(' → logprob: -8.394231796264648
    10. 'r' → logprob: -9.019231796264648

Token 133: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.42524054646492004
    2. ' the' → logprob: -2.1752405166625977
    3. '0' → logprob: -2.4252405166625977
    4. 's' → logprob: -3.3002405166625977
    5. 'the' → logprob: -3.4252405166625977
    6. ' ' → logprob: -3.6752405166625977
    7. 'total' → logprob: -4.800240516662598
    8. ' total' → logprob: -4.925240516662598
    9. ' s' → logprob: -5.300240516662598
    10. 'la' → logprob: -5.300240516662598

Token 134: ''acc' (ID: 46331)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06334669142961502
    2. 'e' → logprob: -2.8133466243743896
    3. 'es' → logprob: -7.688346862792969
    4. 's' → logprob: -7.813346862792969
    5. ' a' → logprob: -8.813346862792969
    6. ''a' → logprob: -9.188346862792969
    7. ''' → logprob: -9.438346862792969
    8. '0' → logprob: -10.813346862792969
    9. 'total' → logprob: -10.938346862792969
    10. '_' → logprob: -11.063346862792969

Token 135: 'umulate' (ID: 134636)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.42468157410621643
    2. 'umulate' → logprob: -1.924681544303894
    3. 'umul' → logprob: -2.0496816635131836
    4. 'u' → logprob: -3.1746816635131836
    5. 'umu' → logprob: -4.299681663513184
    6. 'ulum' → logprob: -5.174681663513184
    7. 'umulator' → logprob: -5.549681663513184
    8. 'uml' → logprob: -6.174681663513184
    9. 'ul' → logprob: -6.799681663513184
    10. '```' → logprob: -7.049681663513184

Token 136: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.1644231379032135
    2. '_' → logprob: -2.2894232273101807
    3. 'r' → logprob: -3.7894232273101807
    4. 'u' → logprob: -4.289422988891602
    5. 'd' → logprob: -4.664422988891602
    6. ' ' → logprob: -6.164422988891602
    7. 'e' → logprob: -7.164422988891602
    8. '_sum' → logprob: -8.789422988891602
    9. ' =' → logprob: -9.039422988891602
    10. '_r' → logprob: -9.039422988891602

Token 137: ' de' (ID: 334)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.60947185754776
    2. '_' → logprob: -1.7344717979431152
    3. 'sum' → logprob: -1.9844717979431152
    4. 's' → logprob: -2.1094717979431152
    5. '_s' → logprob: -4.484471797943115
    6. ' =' → logprob: -5.609471797943115
    7. '_total' → logprob: -6.734471797943115
    8. ' sum' → logprob: -6.734471797943115
    9. '=' → logprob: -6.859471797943115
    10. ' _' → logprob: -7.234471797943115

Token 138: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0202946662902832
    2. 'i' → logprob: -1.6452946662902832
    3. 's' → logprob: -1.8952946662902832
    4. ' i' → logprob: -2.270294666290283
    5. ' l' → logprob: -2.895294666290283
    6. 'l' → logprob: -3.145294666290283
    7. ' s' → logprob: -3.395294666290283
    8. ' ' → logprob: -4.270294666290283
    9. '0' → logprob: -5.020294666290283
    10. 'la' → logprob: -5.145294666290283

Token 139: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.3915920853614807
    2. 's' → logprob: -1.766592025756836
    3. ' total' → logprob: -2.266592025756836
    4. 'total' → logprob: -4.016592025756836
    5. ' result' → logprob: -5.016592025756836
    6. 'result' → logprob: -5.266592025756836
    7. 'rés' → logprob: -5.641592025756836
    8. 'som' → logprob: -6.016592025756836
    9. ' s' → logprob: -6.141592025756836
    10. ' som' → logprob: -6.266592025756836

Token 140: ' totale' (ID: 52898)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.612537682056427
    2. 's' → logprob: -0.987537682056427
    3. '_sum' → logprob: -2.7375376224517822
    4. '_s' → logprob: -4.862537860870361
    5. 'sum' → logprob: -5.487537860870361
    6. ' =' → logprob: -5.737537860870361
    7. ' ' → logprob: -6.362537860870361
    8. '_total' → logprob: -6.362537860870361
    9. '=' → logprob: -6.737537860870361
    10. 'total' → logprob: -7.612537860870361

Token 141: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9110127091407776
    2. '_' → logprob: -1.5360126495361328
    3. '_sum' → logprob: -1.6610126495361328
    4. 'sum' → logprob: -2.036012649536133
    5. 'total' → logprob: -3.411012649536133
    6. '_s' → logprob: -4.536012649536133
    7. '_total' → logprob: -4.661012649536133
    8. ' =' → logprob: -5.536012649536133
    9. '=' → logprob: -6.286012649536133
    10. ' total' → logprob: -7.036012649536133

Token 142: ' initial' (ID: 4871)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5270180106163025
    2. 'sum' → logprob: -1.1520180702209473
    3. ' sum' → logprob: -3.0270180702209473
    4. ' s' → logprob: -4.152018070220947
    5. 'total' → logprob: -4.652018070220947
    6. ' total' → logprob: -4.777018070220947
    7. ' ' → logprob: -5.152018070220947
    8. '0' → logprob: -6.152018070220947
    9. ' 
' → logprob: -7.277018070220947
    10. ' somme' → logprob: -7.277018070220947

Token 143: 'isée' (ID: 59331)
  Prédit: 'isé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -1.2956711053848267
    2. '_' → logprob: -1.4206711053848267
    3. 'isée' → logprob: -1.6706711053848267
    4. '=' → logprob: -1.7956711053848267
    5. 'is' → logprob: -3.045670986175537
    6. 'i' → logprob: -3.920670986175537
    7. ' =' → logprob: -4.045670986175537
    8. 'ized' → logprob: -4.295670986175537
    9. 'e' → logprob: -4.670670986175537
    10. 'ise' → logprob: -5.670670986175537

Token 144: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0414178371429443
    2. ' ' → logprob: -1.1664178371429443
    3. ' à' → logprob: -1.5414178371429443
    4. '0' → logprob: -2.5414178371429443
    5. '=' → logprob: -3.2914178371429443
    6. '_' → logprob: -5.791418075561523
    7. ' a' → logprob: -7.666418075561523
    8. 's' → logprob: -7.791418075561523
    9. 'sum' → logprob: -8.416418075561523
    10. ' au' → logprob: -8.541418075561523

Token 145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029752103611826897
    2. ' ' → logprob: -3.529752016067505
    3. ' ' → logprob: -14.154751777648926
    4. ' zéro' → logprob: -15.029751777648926
    5. ' zero' → logprob: -15.279751777648926
    6. 'z' → logprob: -15.779751777648926
    7. ' z' → logprob: -16.029752731323242
    8. 'zero' → logprob: -17.529752731323242
    9. 's' → logprob: -17.592252731323242
    10. '```' → logprob: -17.717252731323242

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. 'zero' → logprob: -18.875009536743164
    4. '1' → logprob: -19.875009536743164
    5. '```' → logprob: -19.875009536743164
    6. '000' → logprob: -20.375009536743164
    7. '=' → logprob: -20.562509536743164
    8. 's' → logprob: -20.562509536743164
    9. '۰' → logprob: -20.625009536743164
    10. 'z' → logprob: -20.687509536743164

Token 147: '.
' (ID: 558)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.11750063300132751
    2. 's' → logprob: -2.2425005435943604
    3. '
' → logprob: -6.4925007820129395
    4. ' sum' → logprob: -6.6175007820129395
    5. 'total' → logprob: -6.7425007820129395
    6. '_sum' → logprob: -8.242500305175781
    7. '_' → logprob: -9.492500305175781
    8. ' 
' → logprob: -9.867500305175781
    9. '' → logprob: -10.367500305175781
    10. 'su' → logprob: -10.492500305175781

Token 148: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07155013084411621
    2. 'total' → logprob: -3.071550130844116
    3. 's' → logprob: -3.821550130844116
    4. '_sum' → logprob: -7.946550369262695
    5. 'summ' → logprob: -8.821550369262695
    6. 'su' → logprob: -9.321550369262695
    7. ' sum' → logprob: -9.696550369262695
    8. 'result' → logprob: -10.321550369262695
    9. 'som' → logprob: -10.696550369262695
    10. ' total' → logprob: -11.071550369262695

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22774700820446014
    2. '=' → logprob: -1.6027469635009766
    3. '_' → logprob: -6.352746963500977
    4. ' ' → logprob: -7.477746963500977
    5. ')' → logprob: -11.852746963500977
    6. '_=' → logprob: -12.477746963500977
    7. '_sum' → logprob: -12.852746963500977
    8. 's' → logprob: -12.852746963500977
    9. ' ' → logprob: -13.727746963500977
    10. ',' → logprob: -13.852746963500977

Token 150: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0788901224732399
    2. ' ' → logprob: -2.578890085220337
    3. ' ' → logprob: -14.953889846801758
    4. '  ' → logprob: -19.516389846801758
    5. '۰' → logprob: -19.516389846801758
    6. '00' → logprob: -20.328889846801758
    7. '   ' → logprob: -20.328889846801758
    8. '_' → logprob: -20.391389846801758
    9. '1' → logprob: -20.641389846801758
    10. '​' → logprob: -20.766389846801758

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. ' ' → logprob: -18.812639236450195
    4. '   ' → logprob: -19.250139236450195
    5. '۰' → logprob: -19.562639236450195
    6. '00' → logprob: -19.625139236450195
    7. '```' → logprob: -20.187639236450195
    8. '  ' → logprob: -20.250139236450195
    9. 'int' → logprob: -20.375139236450195
    10. ')' → logprob: -20.500139236450195

Token 152: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008567295037209988
    2. 'for' → logprob: -5.1335673332214355
    3. '' → logprob: -7.2585673332214355
    4. ' for' → logprob: -7.3835673332214355
    5. '<|end|>' → logprob: -7.6335673332214355
    6. '
' → logprob: -8.133566856384277
    7. ' 
' → logprob: -8.508566856384277
    8. '\n' → logprob: -8.883566856384277
    9. '

' → logprob: -9.133566856384277
    10. ' ' → logprob: -10.508566856384277

Token 153: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000157293034135364
    2. '
' → logprob: -9.000157356262207
    3. ' for' → logprob: -10.625157356262207
    4. 'i' → logprob: -11.750157356262207
    5. '#' → logprob: -14.375157356262207
    6. 'f' → logprob: -14.875157356262207
    7. '' → logprob: -15.500157356262207
    8. 'n' → logprob: -16.12515640258789
    9. '

' → logprob: -16.12515640258789
    10. 'fo' → logprob: -16.62515640258789

Token 154: ' Lance' (ID: 99667)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.292907877039397e-06
    2. ' for' → logprob: -13.12500286102295
    3. '#' → logprob: -14.25000286102295
    4. 'fo' → logprob: -15.37500286102295
    5. 'i' → logprob: -15.50000286102295
    6. '
' → logprob: -16.375003814697266
    7. 'For' → logprob: -16.625003814697266
    8. 'f' → logprob: -17.250003814697266
    9. '	for' → logprob: -17.750003814697266
    10. 'range' → logprob: -18.000003814697266

Token 155: ' une' (ID: 2463)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18247462809085846
    2. 'for' → logprob: -1.8074746131896973
    3. ' i' → logprob: -6.807474613189697
    4. ' ' → logprob: -6.932474613189697
    5. ' a' → logprob: -8.182475090026855
    6. ' range' → logprob: -8.557475090026855
    7. ' N' → logprob: -9.807475090026855
    8. 'i' → logprob: -10.057475090026855
    9. 'range' → logprob: -11.057475090026855
    10. ' ' → logprob: -11.807475090026855

Token 156: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01860077865421772
    2. ' for' → logprob: -4.018600940704346
    3. 'range' → logprob: -7.893600940704346
    4. ' range' → logprob: -9.768600463867188
    5. ' boucle' → logprob: -11.143600463867188
    6. 'bou' → logprob: -12.893600463867188
    7. ' ' → logprob: -14.268600463867188
    8. '
' → logprob: -15.143600463867188
    9. ':' → logprob: -15.268600463867188
    10. ' ' → logprob: -15.393600463867188

Token 157: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6326176524162292
    2. ' for' → logprob: -0.7576176524162292
    3. 'pour' → logprob: -12.382617950439453
    4. ' pour' → logprob: -12.507617950439453
    5. '
' → logprob: -13.257617950439453
    6. 'range' → logprob: -13.632617950439453
    7. ' ' → logprob: -13.882617950439453
    8. ' i' → logprob: -14.007617950439453
    9. 'd' → logprob: -14.132617950439453
    10. ' range' → logprob: -14.132617950439453

Token 158: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5255530476570129
    2. ' for' → logprob: -0.9005530476570129
    3. ' range' → logprob: -6.525553226470947
    4. 'range' → logprob: -7.525553226470947
    5. ' i' → logprob: -8.275552749633789
    6. 'i' → logprob: -9.650552749633789
    7. 'pour' → logprob: -10.150552749633789
    8. ' va' → logprob: -11.400552749633789
    9. ' pour' → logprob: -11.400552749633789
    10. '_' → logprob: -12.150552749633789

Token 159: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.291247844696045
    2. ' i' → logprob: -1.291247844696045
    3. 'for' → logprob: -1.541247844696045
    4. 'i' → logprob: -1.666247844696045
    5. ' parcour' → logprob: -3.791247844696045
    6. ' range' → logprob: -4.291247844696045
    7. 'range' → logprob: -4.791247844696045
    8. ' iter' → logprob: -7.416247844696045
    9. 'pour' → logprob: -8.041248321533203
    10. ' ' → logprob: -8.291248321533203

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043757468461990356
    2. ' ' → logprob: -3.293757438659668
    3. ' i' → logprob: -5.543757438659668
    4. 'i' → logprob: -7.043757438659668
    5. ' range' → logprob: -7.543757438659668
    6. '1' → logprob: -8.543757438659668
    7. 'range' → logprob: -8.793757438659668
    8. '_' → logprob: -10.418757438659668
    9. ' ' → logprob: -12.918757438659668
    10. ' _' → logprob: -13.418757438659668

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.245724504580721e-05
    2. ' ' → logprob: -9.750092506408691
    3. 'i' → logprob: -10.875092506408691
    4. '1' → logprob: -11.750092506408691
    5. 'range' → logprob: -12.000092506408691
    6. ' range' → logprob: -14.250092506408691
    7. ' i' → logprob: -14.500092506408691
    8. '_' → logprob: -16.875091552734375
    9. 'index' → logprob: -19.000091552734375
    10. 'for' → logprob: -19.000091552734375

Token 162: ' (' (ID: 350)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3818465769290924
    2. ' to' → logprob: -1.75684654712677
    3. ' ' → logprob: -2.1318466663360596
    4. 'to' → logprob: -4.7568464279174805
    5. ' jusqu' → logprob: -4.7568464279174805
    6. 'à' → logprob: -5.1318464279174805
    7. ' in' → logprob: -7.2568464279174805
    8. ' up' → logprob: -7.8818464279174805
    9. ' au' → logprob: -7.8818464279174805
    10. ' jusque' → logprob: -8.00684642791748

Token 163: 'in' (ID: 258)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.2112553119659424
    2. ' à' → logprob: -1.7112553119659424
    3. ' ' → logprob: -1.8362553119659424
    4. ' N' → logprob: -1.9612553119659424
    5. '0' → logprob: -2.8362553119659424
    6. ' )' → logprob: -3.3362553119659424
    7. ')' → logprob: -3.4612553119659424
    8. ' i' → logprob: -3.7112553119659424
    9. 'N' → logprob: -3.7112553119659424
    10. ' jusqu' → logprob: -4.211255073547363

Token 164: 'clus' (ID: 4085)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04045908898115158
    2. 'range' → logprob: -3.290459156036377
    3. 't' → logprob: -7.040459156036377
    4. ')' → logprob: -8.290458679199219
    5. ' ' → logprob: -8.290458679199219
    6. ' to' → logprob: -8.290458679199219
    7. '_range' → logprob: -9.165458679199219
    8. '	range' → logprob: -9.665458679199219
    9. '```' → logprob: -9.915458679199219
    10. ' à' → logprob: -9.915458679199219

Token 165: ')' (ID: 8)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33792683482170105
    2. ')' → logprob: -1.8379268646240234
    3. ' à' → logprob: -2.7129268646240234
    4. ' )' → logprob: -2.9629268646240234
    5. ' a' → logprob: -6.087926864624023
    6. 'à' → logprob: -6.087926864624023
    7. '  ' → logprob: -6.462926864624023
    8. ' to' → logprob: -7.087926864624023
    9. ',' → logprob: -7.462926864624023
    10. ' jusqu' → logprob: -7.712926864624023

Token 166: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5944631099700928
    2. ' to' → logprob: -1.4694631099700928
    3. ' ' → logprob: -1.8444631099700928
    4. ' jusqu' → logprob: -3.7194631099700928
    5. 'to' → logprob: -4.219463348388672
    6. 'à' → logprob: -4.844463348388672
    7. ',' → logprob: -4.844463348388672
    8. ' a' → logprob: -6.219463348388672
    9. ' jusque' → logprob: -7.594463348388672
    10. ' up' → logprob: -7.594463348388672

Token 167: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5759775042533875
    2. 'N' → logprob: -0.8259775042533875
    3. ' ' → logprob: -10.325977325439453
    4. '	N' → logprob: -13.325977325439453
    5. ' ' → logprob: -13.325977325439453
    6. 'n' → logprob: -13.825977325439453
    7. ' n' → logprob: -15.200977325439453
    8. ' range' → logprob: -15.325977325439453
    9. ' len' → logprob: -16.450977325439453
    10. '  ' → logprob: -16.700977325439453

Token 168: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4825713038444519
    2. ' :' → logprob: -0.9825713038444519
    3. '):' → logprob: -5.732571125030518
    4. ' ' → logprob: -6.482571125030518
    5. 'range' → logprob: -7.107571125030518
    6. ')' → logprob: -7.232571125030518
    7. ' ):' → logprob: -7.482571125030518
    8. 'for' → logprob: -7.857571125030518
    9. ' for' → logprob: -8.482571601867676
    10. ' (' → logprob: -8.732571601867676

Token 169: 'ex' (ID: 490)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10101396590471268
    2. ' ):' → logprob: -2.8510138988494873
    3. ':' → logprob: -3.4760138988494873
    4. ' :' → logprob: -5.976014137268066
    5. ')' → logprob: -6.351014137268066
    6. 'not' → logprob: -7.101014137268066
    7. ' ' → logprob: -7.101014137268066
    8. ' not' → logprob: -7.726014137268066
    9. '```' → logprob: -8.726014137268066
    10. 'ex' → logprob: -9.476014137268066

Token 170: 'cl' (ID: 565)
  Prédit: 'clus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clus' → logprob: -0.04417681321501732
    2. 'lus' → logprob: -3.4191768169403076
    3. 'cl' → logprob: -5.0441765785217285
    4. 'clusive' → logprob: -6.0441765785217285
    5. 'clude' → logprob: -7.4191765785217285
    6. '-' → logprob: -8.044177055358887
    7. '```' → logprob: -8.419177055358887
    8. ')' → logprob: -8.919177055358887
    9. 'cluded' → logprob: -9.419177055358887
    10. 'lu' → logprob: -9.669177055358887

Token 171: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.004144407343119383
    2. ')' → logprob: -5.504144191741943
    3. ':' → logprob: -11.004144668579102
    4. 'us' → logprob: -11.004144668579102
    5. 'ut' → logprob: -12.004144668579102
    6. '=' → logprob: -12.004144668579102
    7. '):' → logprob: -12.504144668579102
    8. ' )' → logprob: -12.504144668579102
    9. 'ue' → logprob: -12.879144668579102
    10. 'ues' → logprob: -13.504144668579102

Token 172: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31712085008621216
    2. ')' → logprob: -1.3171207904815674
    3. ':' → logprob: -5.9421210289001465
    4. ' ):' → logprob: -6.9421210289001465
    5. ' )' → logprob: -9.692120552062988
    6. ',' → logprob: -9.692120552062988
    7. '):
' → logprob: -10.317120552062988
    8. '(' → logprob: -10.817120552062988
    9. ' :' → logprob: -11.192120552062988
    10. 'e' → logprob: -11.192120552062988

Token 173: ' donc' (ID: 14206)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.007867455482483
    2. ':' → logprob: -1.132867455482483
    3. 'for' → logprob: -1.257867455482483
    4. ' for' → logprob: -3.8828673362731934
    5. ' ' → logprob: -5.382867336273193
    6. ' :
' → logprob: -6.257867336273193
    7. ' i' → logprob: -7.632867336273193
    8. 'i' → logprob: -7.882867336273193
    9. 'range' → logprob: -8.757867813110352
    10. ':
' → logprob: -8.882867813110352

Token 174: ' il' (ID: 1793)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.0997446775436401
    2. ' N' → logprob: -1.3497446775436401
    3. ' i' → logprob: -1.8497446775436401
    4. ' ' → logprob: -2.2247447967529297
    5. 'range' → logprob: -2.8497447967529297
    6. ':' → logprob: -3.5997447967529297
    7. ' :' → logprob: -3.8497447967529297
    8. ' for' → logprob: -4.22474479675293
    9. ' in' → logprob: -4.59974479675293
    10. 'i' → logprob: -5.59974479675293

Token 175: ' y' (ID: 342)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4193895757198334
    2. ' for' → logprob: -1.9193896055221558
    3. 'for' → logprob: -2.294389486312866
    4. ' :' → logprob: -3.294389486312866
    5. ' va' → logprob: -4.419389724731445
    6. ' ' → logprob: -4.794389724731445
    7. 's' → logprob: -5.169389724731445
    8. ' faut' → logprob: -5.419389724731445
    9. ' in' → logprob: -5.669389724731445
    10. ' ' → logprob: -5.794389724731445

Token 176: ' aura' (ID: 33008)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10376894474029541
    2. 'a' → logprob: -2.353768825531006
    3. 's' → logprob: -7.103768825531006
    4. ' ' → logprob: -7.603768825531006
    5. 'space' → logprob: -7.853768825531006
    6. ''a' → logprob: -7.853768825531006
    7. '```' → logprob: -7.853768825531006
    8. 'n' → logprob: -9.478769302368164
    9. ' avait' → logprob: -9.478769302368164
    10. '.' → logprob: -9.603769302368164

Token 177: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.524945855140686
    2. 'N' → logprob: -0.899945855140686
    3. ' i' → logprob: -7.3999457359313965
    4. ' range' → logprob: -7.8999457359313965
    5. 'i' → logprob: -8.274946212768555
    6. ' for' → logprob: -8.524946212768555
    7. 'n' → logprob: -8.649946212768555
    8. 'range' → logprob: -9.774946212768555
    9. ' n' → logprob: -10.024946212768555
    10. ' ' → logprob: -10.274946212768555

Token 178: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.247782588005066
    2. '<|end|>' → logprob: -1.372782588005066
    3. ':' → logprob: -1.872782588005066
    4. ' for' → logprob: -2.3727827072143555
    5. ' :' → logprob: -2.9977827072143555
    6. 'for' → logprob: -3.3727827072143555
    7. ' range' → logprob: -3.3727827072143555
    8. ' ' → logprob: -4.4977827072143555
    9. ' espaces' → logprob: -4.6227827072143555
    10. ' i' → logprob: -4.7477827072143555

Token 179: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.14941291511058807
    2. 'ération' → logprob: -2.3994128704071045
    3. 'er' → logprob: -4.274413108825684
    4. 'é' → logprob: -4.899413108825684
    5. 'ér' → logprob: -5.024413108825684
    6. 'érés' → logprob: -5.399413108825684
    7. 'érer' → logprob: -5.774413108825684
    8. 'r' → logprob: -6.274413108825684
    9. 'éré' → logprob: -6.399413108825684
    10. 'érées' → logprob: -6.524413108825684

Token 180: ' correspondant' (ID: 146058)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4284243583679199
    2. 'for' → logprob: -1.30342435836792
    3. ':
' → logprob: -2.80342435836792
    4. ' for' → logprob: -4.30342435836792
    5. '
' → logprob: -7.17842435836792
    6. ',' → logprob: -7.55342435836792
    7. ' :
' → logprob: -7.67842435836792
    8. ' :' → logprob: -7.67842435836792
    9. '.' → logprob: -8.428424835205078
    10. 'i' → logprob: -9.928424835205078

Token 181: ' aux' (ID: 5850)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.025390807539224625
    2. ' ' → logprob: -4.400390625
    3. ' to' → logprob: -5.275390625
    4. ' au' → logprob: -5.900390625
    5. ' a' → logprob: -6.025390625
    6. 'à' → logprob: -7.150390625
    7. ' aux' → logprob: -7.900390625
    8. '   ' → logprob: -8.150390625
    9. ',' → logprob: -8.150390625
    10. ' i' → logprob: -8.775390625

Token 182: ' indices' (ID: 30378)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5756561160087585
    2. 'range' → logprob: -1.9506561756134033
    3. ' i' → logprob: -2.0756561756134033
    4. ' indices' → logprob: -2.2006561756134033
    5. 'i' → logprob: -3.3256561756134033
    6. 'indices' → logprob: -3.9506561756134033
    7. ' index' → logprob: -7.200655937194824
    8. ' N' → logprob: -7.325655937194824
    9. 'N' → logprob: -7.450655937194824
    10. ' ' → logprob: -7.700655937194824

Token 183: ' des' (ID: 731)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4124116897583008
    2. ' ' → logprob: -1.7874116897583008
    3. ' de' → logprob: -2.287411689758301
    4. 'i' → logprob: -3.912411689758301
    5. 'range' → logprob: -3.912411689758301
    6. ' range' → logprob: -4.162411689758301
    7. ' ,' → logprob: -6.037411689758301
    8. ' for' → logprob: -6.037411689758301
    9. ',' → logprob: -6.537411689758301
    10. 'for' → logprob: -6.787411689758301

Token 184: ' listes' (ID: 179198)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.4459281861782074
    2. 'A' → logprob: -1.1959282159805298
    3. ' range' → logprob: -3.4459280967712402
    4. 'range' → logprob: -3.9459280967712402
    5. ' i' → logprob: -6.19592809677124
    6. ' ' → logprob: -6.57092809677124
    7. 'i' → logprob: -7.32092809677124
    8. ' elements' → logprob: -7.69592809677124
    9. ' indices' → logprob: -8.445928573608398
    10. ' éléments' → logprob: -8.445928573608398

Token 185: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1157759353518486
    2. ':' → logprob: -2.8657758235931396
    3. ' for' → logprob: -3.2407758235931396
    4. 'i' → logprob: -5.240776062011719
    5. ' i' → logprob: -6.115776062011719
    6. ' :' → logprob: -6.115776062011719
    7. ':
' → logprob: -6.740776062011719
    8. 'range' → logprob: -7.240776062011719
    9. '
' → logprob: -7.865776062011719
    10. '.' → logprob: -8.240776062011719

Token 186: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07813101261854172
    2. ' for' → logprob: -3.0781309604644775
    3. ':' → logprob: -3.5781309604644775
    4. 'i' → logprob: -7.703131198883057
    5. ':
' → logprob: -8.203130722045898
    6. ',' → logprob: -8.828130722045898
    7. ' :' → logprob: -9.203130722045898
    8. '
' → logprob: -9.828130722045898
    9. ')' → logprob: -10.203130722045898
    10. '.' → logprob: -10.453130722045898

Token 187: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04858941584825516
    2. ' B' → logprob: -3.0485894680023193
    3. 'range' → logprob: -14.048589706420898
    4. ' range' → logprob: -14.423589706420898
    5. ' ' → logprob: -14.798589706420898
    6. ',' → logprob: -15.673589706420898
    7. ')' → logprob: -16.2985897064209
    8. 'b' → logprob: -16.7985897064209
    9. '`' → logprob: -17.4235897064209
    10. '#' → logprob: -17.4235897064209

Token 188: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22236526012420654
    2. ':' → logprob: -2.097365379333496
    3. ' for' → logprob: -2.972365379333496
    4. '
' → logprob: -4.472365379333496
    5. ':
' → logprob: -4.472365379333496
    6. 'i' → logprob: -7.597365379333496
    7. ',' → logprob: -7.597365379333496
    8. '  
' → logprob: -8.222365379333496
    9. ' 
' → logprob: -8.597365379333496
    10. ' :' → logprob: -8.722365379333496

Token 189: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00034380643046461046
    2. ' for' → logprob: -8.500344276428223
    3. '
' → logprob: -9.375344276428223
    4. 'f' → logprob: -10.000344276428223
    5. 'i' → logprob: -11.625344276428223
    6. 'fo' → logprob: -14.375344276428223
    7. ' 
' → logprob: -15.625344276428223
    8. 'n' → logprob: -16.125343322753906
    9. 'r' → logprob: -16.375343322753906
    10. '

' → logprob: -16.500343322753906

Token 190: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01642915979027748
    2. ' i' → logprob: -4.1414289474487305
    3. '  ' → logprob: -8.01642894744873
    4. 'i' → logprob: -10.26642894744873
    5. ' ' → logprob: -11.01642894744873
    6. ' _' → logprob: -11.64142894744873
    7. '_' → logprob: -12.89142894744873
    8. ' ‌' → logprob: -13.51642894744873
    9. ' ' → logprob: -15.51642894744873
    10. ' in' → logprob: -15.64142894744873

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030794179067015648
    2. 'in' → logprob: -3.530794143676758
    3. ' ' → logprob: -6.905794143676758
    4. ' i' → logprob: -11.155794143676758
    5. '  ' → logprob: -11.780794143676758
    6. ')' → logprob: -11.905794143676758
    7. ' :' → logprob: -13.655794143676758
    8. 'range' → logprob: -13.655794143676758
    9. '0' → logprob: -13.780794143676758
    10. '	in' → logprob: -13.905794143676758

Token 192: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0019480334594845772
    2. 'range' → logprob: -6.25194787979126
    3. ' ' → logprob: -10.876948356628418
    4. ' in' → logprob: -15.376948356628418
    5. ' xrange' → logprob: -16.0019474029541
    6. '	range' → logprob: -16.1269474029541
    7. '(range' → logprob: -17.2519474029541
    8. ' ' → logprob: -17.6269474029541
    9. ' rang' → logprob: -17.7519474029541
    10. ')' → logprob: -18.5019474029541

Token 193: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.12694837152957916
    2. '(' → logprob: -2.126948356628418
    3. ' (' → logprob: -11.376948356628418
    4. '(
' → logprob: -11.876948356628418
    5. '(i' → logprob: -14.376948356628418
    6. '(n' → logprob: -14.501948356628418
    7. '(

' → logprob: -15.626948356628418
    8. '(len' → logprob: -15.751948356628418
    9. '(int' → logprob: -15.876948356628418
    10. '(I' → logprob: -16.126949310302734

Token 194: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -3.464347173576243e-05
    2. ':' → logprob: -11.25003433227539
    3. ')' → logprob: -11.62503433227539
    4. '):
' → logprob: -11.87503433227539
    5. ' ):' → logprob: -12.62503433227539
    6. '+' → logprob: -13.12503433227539
    7. '():' → logprob: -15.75003433227539
    8. '}:' → logprob: -17.25003433227539
    9. '+:' → logprob: -17.37503433227539
    10. '):
' → logprob: -17.37503433227539

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3724398612976074
    2. ' ' → logprob: -1.4974398612976074
    3. ' sum' → logprob: -2.9974398612976074
    4. '    ' → logprob: -4.497439861297607
    5. 'sum' → logprob: -5.122439861297607
    6. '<|end|>' → logprob: -5.122439861297607
    7. '    
' → logprob: -5.622439861297607
    8. ' )' → logprob: -6.372439861297607
    9. ' if' → logprob: -6.497439861297607
    10. ' 
' → logprob: -6.622439861297607

Token 196: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5302119851112366
    2. ' sum' → logprob: -0.9052119851112366
    3. '   ' → logprob: -5.030211925506592
    4. '	sum' → logprob: -8.15521240234375
    5. ' if' → logprob: -9.03021240234375
    6. 'if' → logprob: -9.90521240234375
    7. '    ' → logprob: -10.90521240234375
    8. ' ' → logprob: -11.15521240234375
    9. ' ' → logprob: -11.40521240234375
    10. '   ' → logprob: -12.40521240234375

Token 197: ' Cal' (ID: 4453)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.10276857018470764
    2. ' sum' → logprob: -2.352768659591675
    3. 'if' → logprob: -6.477768421173096
    4. ' if' → logprob: -7.602768421173096
    5. '   ' → logprob: -7.852768421173096
    6. ' ' → logprob: -9.477768898010254
    7. '	sum' → logprob: -10.602768898010254
    8. '  ' → logprob: -10.977768898010254
    9. ' ' → logprob: -12.602768898010254
    10. '    ' → logprob: -12.852768898010254

Token 198: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.37318161129951477
    2. 'cul' → logprob: -1.2481815814971924
    3. 'c' → logprob: -4.6231818199157715
    4. 'culate' → logprob: -4.8731818199157715
    5. '   ' → logprob: -5.6231818199157715
    6. ' c' → logprob: -7.2481818199157715
    7. '  ' → logprob: -7.6231818199157715
    8. 'cules' → logprob: -7.9981818199157715
    9. 'cula' → logprob: -8.123181343078613
    10. ' ' → logprob: -8.373181343078613

Token 199: ' la' (ID: 557)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.38572394847869873
    2. 'sum' → logprob: -1.5107239484786987
    3. ' A' → logprob: -2.8857240676879883
    4. 'A' → logprob: -3.8857240676879883
    5. '    ' → logprob: -4.635724067687988
    6. '   ' → logprob: -4.760724067687988
    7. ' ' → logprob: -5.760724067687988
    8. '(sum' → logprob: -7.135724067687988
    9. '	sum' → logprob: -8.510724067687988
    10. ' s' → logprob: -9.760724067687988

Token 200: ' différence' (ID: 79196)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.05701905116438866
    2. ' sum' → logprob: -3.057018995285034
    3. 'A' → logprob: -5.807019233703613
    4. ' somme' → logprob: -6.307019233703613
    5. 'abs' → logprob: -6.682019233703613
    6. 's' → logprob: -6.807019233703613
    7. ' A' → logprob: -7.932019233703613
    8. 'product' → logprob: -8.432019233703613
    9. 'diff' → logprob: -8.807019233703613
    10. 'difference' → logprob: -9.057019233703613

Token 201: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9423403143882751
    2. '   ' → logprob: -1.06734037399292
    3. '    ' → logprob: -1.81734037399292
    4. ' between' → logprob: -3.31734037399292
    5. '=' → logprob: -3.44234037399292
    6. ' ' → logprob: -3.69234037399292
    7. ' entre' → logprob: -5.81734037399292
    8. ',' → logprob: -6.81734037399292
    9. '  ' → logprob: -6.94234037399292
    10. 'between' → logprob: -7.06734037399292

Token 202: ' l' (ID: 305)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5239505171775818
    2. ' A' → logprob: -0.8989505171775818
    3. 'B' → logprob: -7.523950576782227
    4. ' B' → logprob: -8.273950576782227
    5. ' ' → logprob: -11.148950576782227
    6. '	A' → logprob: -12.898950576782227
    7. '(A' → logprob: -13.023950576782227
    8. '   ' → logprob: -13.148950576782227
    9. 'a' → logprob: -13.148950576782227
    10. ')' → logprob: -13.523950576782227

Token 203: ''' (ID: 6)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18227975070476532
    2. ' A' → logprob: -1.8072797060012817
    3. 'a' → logprob: -6.182279586791992
    4. ''' → logprob: -9.432279586791992
    5. ''A' → logprob: -9.682279586791992
    6. 'space' → logprob: -10.182279586791992
    7. ' a' → logprob: -10.182279586791992
    8. ' ' → logprob: -10.307279586791992
    9. 'e' → logprob: -10.432279586791992
    10. '   ' → logprob: -10.557279586791992

Token 204: 'élé' (ID: 15228)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0120383994653821
    2. ' A' → logprob: -4.887038230895996
    3. 'élé' → logprob: -6.262038230895996
    4. 'i' → logprob: -6.637038230895996
    5. 'a' → logprob: -8.012038230895996
    6. ' i' → logprob: -8.762038230895996
    7. '#' → logprob: -9.137038230895996
    8. '[i' → logprob: -9.262038230895996
    9. '   ' → logprob: -9.262038230895996
    10. 'B' → logprob: -9.637038230895996

Token 205: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.5653539299964905
    2. 'ement' → logprob: -0.9403539299964905
    3. 'ément' → logprob: -4.190353870391846
    4. '#' → logprob: -4.565353870391846
    5. '   ' → logprob: -4.815353870391846
    6. 'em' → logprob: -5.440353870391846
    7. 'e' → logprob: -6.190353870391846
    8. 'vation' → logprob: -8.190354347229004
    9. '       ' → logprob: -8.565354347229004
    10. 'ements' → logprob: -9.315354347229004

Token 206: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2950863540172577
    2. ' A' → logprob: -1.54508638381958
    3. '   ' → logprob: -3.29508638381958
    4. 's' → logprob: -7.04508638381958
    5. '[i' → logprob: -7.29508638381958
    6. ' ' → logprob: -7.42008638381958
    7. 'a' → logprob: -7.42008638381958
    8. ' de' → logprob: -7.67008638381958
    9. '    ' → logprob: -7.67008638381958
    10. ' entre' → logprob: -8.170085906982422

Token 207: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006553700077347457
    2. '[' → logprob: -7.375655174255371
    3. '   ' → logprob: -11.250655174255371
    4. ' [' → logprob: -11.500655174255371
    5. '[A' → logprob: -13.375655174255371
    6. '[I' → logprob: -13.500655174255371
    7. 's' → logprob: -14.875655174255371
    8. '[N' → logprob: -14.875655174255371
    9. 'i' → logprob: -14.875655174255371
    10. 'a' → logprob: -15.625655174255371

Token 208: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00029041420202702284
    2. '-' → logprob: -9.125290870666504
    3. ' ]' → logprob: -9.500290870666504
    4. ' -' → logprob: -10.250290870666504
    5. ')' → logprob: -10.625290870666504
    6. '],' → logprob: -11.250290870666504
    7. '[i' → logprob: -11.375290870666504
    8. ']-' → logprob: -11.500290870666504
    9. '[' → logprob: -12.250290870666504
    10. '])' → logprob: -13.000290870666504

Token 209: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.8771405220031738
    2. '-' → logprob: -1.0021405220031738
    3. 'et' → logprob: -2.377140522003174
    4. ' -' → logprob: -2.627140522003174
    5. ' and' → logprob: -3.752140522003174
    6. '   ' → logprob: -4.002140522003174
    7. 'and' → logprob: -5.127140522003174
    8. ' ' → logprob: -6.127140522003174
    9. ',' → logprob: -7.627140522003174
    10. ')' → logprob: -7.627140522003174

Token 210: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.42876458168029785
    2. ' B' → logprob: -1.0537645816802979
    3. '   ' → logprob: -10.428764343261719
    4. ' ' → logprob: -11.553764343261719
    5. '	B' → logprob: -12.303764343261719
    6. '    ' → logprob: -12.803764343261719
    7. ' ' → logprob: -12.803764343261719
    8. 'l' → logprob: -12.803764343261719
    9. ' la' → logprob: -12.928764343261719
    10. ' l' → logprob: -12.928764343261719

Token 211: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010235115041723475
    2. '[' → logprob: -9.375102043151855
    3. ' [' → logprob: -11.250102043151855
    4. '[j' → logprob: -13.250102043151855
    5. '   ' → logprob: -14.250102043151855
    6. 'i' → logprob: -14.625102043151855
    7. '[
' → logprob: -14.750102043151855
    8. '[I' → logprob: -15.125102043151855
    9. ']' → logprob: -15.625102043151855
    10. ' ' → logprob: -16.125102996826172

Token 212: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030474122613668442
    2. '   ' → logprob: -4.4054741859436035
    3. ' )' → logprob: -4.5304741859436035
    4. '])' → logprob: -5.1554741859436035
    5. ']' → logprob: -8.280473709106445
    6. '))' → logprob: -8.530473709106445
    7. '[i' → logprob: -8.905473709106445
    8. '):' → logprob: -9.155473709106445
    9. '),' → logprob: -9.280473709106445
    10. ',' → logprob: -9.405473709106445

Token 213: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000473091087769717
    2. 'diff' → logprob: -8.875473022460938
    3. ',' → logprob: -9.000473022460938
    4. 'sum' → logprob: -9.500473022460938
    5. '    
' → logprob: -9.875473022460938
    6. ')' → logprob: -10.375473022460938
    7. '    ' → logprob: -11.625473022460938
    8. '
' → logprob: -12.000473022460938
    9. '  ' → logprob: -12.125473022460938
    10. ' =' → logprob: -12.625473022460938

Token 214: ' ass' (ID: 1680)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8808228373527527
    2. 'abs' → logprob: -1.6308228969573975
    3. 'sum' → logprob: -1.7558228969573975
    4. ' abs' → logprob: -2.1308228969573975
    5. ' sum' → logprob: -2.5058228969573975
    6. '    ' → logprob: -5.130822658538818
    7. ')' → logprob: -5.755822658538818
    8. 'if' → logprob: -6.630822658538818
    9. ' if' → logprob: -7.255822658538818
    10. ' )' → logprob: -7.505822658538818

Token 215: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.0975465402007103
    2. 'ign' → logprob: -2.4725465774536133
    3. 'e' → logprob: -5.722546577453613
    4. 'eg' → logprob: -6.222546577453613
    5. 'ert' → logprob: -7.222546577453613
    6. '   ' → logprob: -7.222546577453613
    7. '#' → logprob: -7.347546577453613
    8. 'ignez' → logprob: -8.847546577453613
    9. 'eur' → logprob: -9.222546577453613
    10. 'ig' → logprob: -9.222546577453613

Token 216: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17379800975322723
    2. ' à' → logprob: -3.298798084259033
    3. ')' → logprob: -3.923798084259033
    4. ' la' → logprob: -3.923798084259033
    5. ' ' → logprob: -4.548798084259033
    6. 'sum' → logprob: -4.798798084259033
    7. ' a' → logprob: -5.048798084259033
    8. '    ' → logprob: -5.048798084259033
    9. ' +=' → logprob: -5.048798084259033
    10. 'e' → logprob: -5.048798084259033

Token 217: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9732591509819031
    2. ' result' → logprob: -1.2232592105865479
    3. ' résultat' → logprob: -2.223259210586548
    4. '   ' → logprob: -3.098259210586548
    5. 'e' → logprob: -3.598259210586548
    6. ' resultat' → logprob: -3.973259210586548
    7. ' difference' → logprob: -4.473258972167969
    8. ' absolute' → logprob: -4.473258972167969
    9. 'difference' → logprob: -4.473258972167969
    10. 'diff' → logprob: -4.598258972167969

Token 218: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.002014398574829
    2. '   ' → logprob: -1.502014398574829
    3. '=' → logprob: -1.752014398574829
    4. ' to' → logprob: -2.377014398574829
    5. ' +=' → logprob: -2.752014398574829
    6. ' à' → logprob: -3.127014398574829
    7. 'to' → logprob: -4.37701416015625
    8. '+=' → logprob: -4.62701416015625
    9. ')' → logprob: -5.62701416015625
    10. '=sum' → logprob: -5.87701416015625

Token 219: ' la' (ID: 557)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.024801624938845634
    2. ' diff' → logprob: -4.024801731109619
    3. 'difference' → logprob: -5.399801731109619
    4. 'sum' → logprob: -6.524801731109619
    5. 'd' → logprob: -8.649801254272461
    6. 'temp' → logprob: -9.399801254272461
    7. ' difference' → logprob: -9.399801254272461
    8. ' sum' → logprob: -9.774801254272461
    9. 'tmp' → logprob: -10.149801254272461
    10. 'c' → logprob: -10.149801254272461

Token 220: ' variable' (ID: 11076)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.03306898474693298
    2. 'difference' → logprob: -4.158069133758545
    3. ' diff' → logprob: -4.658069133758545
    4. 'sum' → logprob: -5.158069133758545
    5. 'd' → logprob: -7.533069133758545
    6. 'temp' → logprob: -8.158068656921387
    7. 'tmp' → logprob: -8.283068656921387
    8. ' difference' → logprob: -8.783068656921387
    9. ' sum' → logprob: -9.033068656921387
    10. 'val' → logprob: -9.908068656921387

Token 221: ' x' (ID: 1215)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.10073365271091461
    2. ' diff' → logprob: -2.475733757019043
    3. 'difference' → logprob: -4.600733757019043
    4. ' difference' → logprob: -7.100733757019043
    5. 'd' → logprob: -7.975733757019043
    6. '	diff' → logprob: -8.600733757019043
    7. '```' → logprob: -9.725733757019043
    8. 'sum' → logprob: -9.975733757019043
    9. 'dif' → logprob: -10.100733757019043
    10. 'delta' → logprob: -10.100733757019043

Token 222: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1477031409740448
    2. ' =' → logprob: -2.022703170776367
    3. 'x' → logprob: -6.022703170776367
    4. '=' → logprob: -6.397703170776367
    5. ' x' → logprob: -7.272703170776367
    6. '    
' → logprob: -9.147703170776367
    7. ',' → logprob: -10.772703170776367
    8. '	x' → logprob: -10.897703170776367
    9. '    ' → logprob: -11.022703170776367
    10. '  ' → logprob: -11.147703170776367

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006334479432553053
    2. 'x' → logprob: -5.13133430480957
    3. ' x' → logprob: -7.88133430480957
    4. '	x' → logprob: -11.13133430480957
    5. '    
' → logprob: -12.38133430480957
    6. '
' → logprob: -12.88133430480957
    7. ' ' → logprob: -13.25633430480957
    8. '  ' → logprob: -13.38133430480957
    9. '    ' → logprob: -13.75633430480957
    10. ' 
' → logprob: -14.38133430480957

Token 224: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.18176758289337158
    2. ' x' → logprob: -2.181767463684082
    3. '   ' → logprob: -2.931767463684082
    4. '	x' → logprob: -10.181767463684082
    5. ' ' → logprob: -11.931767463684082
    6. '    
' → logprob: -11.931767463684082
    7. ' 
' → logprob: -12.806767463684082
    8. ' ' → logprob: -12.931767463684082
    9. '    ' → logprob: -13.306767463684082
    10. '   ' → logprob: -13.681767463684082

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759420990943909
    2. '=' → logprob: -0.8259420990943909
    3. '   ' → logprob: -13.950942039489746
    4. '=x' → logprob: -14.075942039489746
    5. '=int' → logprob: -14.700942039489746
    6. ' =
' → logprob: -15.700942039489746
    7. ' ' → logprob: -15.700942039489746
    8. 'x' → logprob: -16.700942993164062
    9. ' ' → logprob: -16.700942993164062
    10. ',' → logprob: -16.950942993164062

Token 226: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3144875764846802
    2. ' A' → logprob: -1.3144875764846802
    3. ' abs' → logprob: -7.439487457275391
    4. 'abs' → logprob: -7.439487457275391
    5. '   ' → logprob: -10.31448745727539
    6. '	A' → logprob: -11.93948745727539
    7. ' ' → logprob: -11.93948745727539
    8. '  ' → logprob: -13.81448745727539
    9. '(A' → logprob: -14.68948745727539
    10. '    ' → logprob: -14.81448745727539

Token 227: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0046464535407722
    2. '[' → logprob: -5.379646301269531
    3. ' [' → logprob: -10.629646301269531
    4. '[x' → logprob: -13.879646301269531
    5. '[I' → logprob: -14.254646301269531
    6. '[
' → logprob: -15.254646301269531
    7. '   ' → logprob: -17.37964630126953
    8. 'i' → logprob: -17.37964630126953
    9. '[...]' → logprob: -17.37964630126953
    10. '[s' → logprob: -17.50464630126953

Token 228: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03725254535675049
    2. ' -' → logprob: -3.912252426147461
    3. '-' → logprob: -4.287252426147461
    4. ')' → logprob: -6.037252426147461
    5. ' ]' → logprob: -7.912252426147461
    6. ']-' → logprob: -10.162252426147461
    7. ' ' → logprob: -11.162252426147461
    8. '[' → logprob: -12.162252426147461
    9. ' )' → logprob: -12.287252426147461
    10. '   ' → logprob: -13.287252426147461

Token 229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.42875367403030396
    2. '-' → logprob: -1.0537536144256592
    3. '+' → logprob: -10.803753852844238
    4. ' ' → logprob: -11.053753852844238
    5. ' ' → logprob: -11.553753852844238
    6. ' -
' → logprob: -13.053753852844238
    7. '-
' → logprob: -13.553753852844238
    8. ' +' → logprob: -14.303753852844238
    9. '-B' → logprob: -14.303753852844238
    10. '_' → logprob: -14.803753852844238

Token 230: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20141343772411346
    2. ' B' → logprob: -1.7014133930206299
    3. ' ' → logprob: -16.326414108276367
    4. '	B' → logprob: -17.076414108276367
    5. ' ' → logprob: -17.951414108276367
    6. '   ' → logprob: -19.826414108276367
    7. 'b' → logprob: -20.201414108276367
    8. '```' → logprob: -20.326414108276367
    9. '_B' → logprob: -20.576414108276367
    10. '>B' → logprob: -20.826414108276367

Token 231: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.274932143744081e-05
    2. '[' → logprob: -10.125042915344238
    3. ' [' → logprob: -13.625042915344238
    4. 'i' → logprob: -13.750042915344238
    5. '[
' → logprob: -15.875042915344238
    6. '[I' → logprob: -15.875042915344238
    7. '   ' → logprob: -16.500041961669922
    8. '[x' → logprob: -17.500041961669922
    9. '```' → logprob: -17.625041961669922
    10. '[j' → logprob: -18.000041961669922

Token 232: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.133198283147067e-05
    2. ')
' → logprob: -10.250051498413086
    3. ' )' → logprob: -11.625051498413086
    4. '   ' → logprob: -12.750051498413086
    5. ']' → logprob: -12.750051498413086
    6. '')' → logprob: -15.000051498413086
    7. ')

' → logprob: -15.750051498413086
    8. '}' → logprob: -16.250051498413086
    9. ')
' → logprob: -16.250051498413086
    10. '")' → logprob: -16.500051498413086

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020333753898739815
    2. '
' → logprob: -4.395333766937256
    3. 'if' → logprob: -6.020333766937256
    4. ' if' → logprob: -6.145333766937256
    5. '    
' → logprob: -6.270333766937256
    6. '<|end|>' → logprob: -7.270333766937256
    7. '   
' → logprob: -8.895333290100098
    8. '  ' → logprob: -9.145333290100098
    9. ' 
' → logprob: -9.395333290100098
    10. '  
' → logprob: -9.395333290100098

Token 234: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032003454864025116
    2. ' if' → logprob: -4.032003402709961
    3. 'if' → logprob: -4.657003402709961
    4. '
' → logprob: -6.407003402709961
    5. 'sum' → logprob: -6.407003402709961
    6. '    
' → logprob: -7.532003402709961
    7. '   
' → logprob: -9.157003402709961
    8. '  ' → logprob: -9.407003402709961
    9. ' sum' → logprob: -9.907003402709961
    10. ' 
' → logprob: -9.907003402709961

Token 235: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5132508873939514
    2. 'sum' → logprob: -1.2632508277893066
    3. ' if' → logprob: -2.5132508277893066
    4. ' sum' → logprob: -3.7632508277893066
    5. '   ' → logprob: -4.263250827789307
    6. ' ' → logprob: -8.888251304626465
    7. '#' → logprob: -9.263251304626465
    8. '
' → logprob: -9.763251304626465
    9. '    
' → logprob: -10.763251304626465
    10. '  ' → logprob: -10.888251304626465

Token 236: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.2532508671283722
    2. 'if' → logprob: -1.5032508373260498
    3. 'ife' → logprob: -7.628251075744629
    4. '#' → logprob: -8.003251075744629
    5. 'ifier' → logprob: -8.503251075744629
    6. 'ifiez' → logprob: -9.253251075744629
    7. 'f' → logprob: -9.753251075744629
    8. 'ifle' → logprob: -10.253251075744629
    9. 'ifi' → logprob: -10.378251075744629
    10. 'rif' → logprob: -10.878251075744629

Token 237: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33164623379707336
    2. ' si' → logprob: -1.581646203994751
    3. '   ' → logprob: -2.706646203994751
    4. 'if' → logprob: -4.95664644241333
    5. 'si' → logprob: -6.70664644241333
    6. ' ' → logprob: -7.08164644241333
    7. ' s' → logprob: -7.95664644241333
    8. '    ' → logprob: -9.081645965576172
    9. '	if' → logprob: -9.581645965576172
    10. '  ' → logprob: -9.831645965576172

Token 238: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1003073900938034
    2. 'x' → logprob: -2.3503074645996094
    3. ' ' → logprob: -9.47530746459961
    4. ' ' → logprob: -11.47530746459961
    5. ' abs' → logprob: -12.35030746459961
    6. 'abs' → logprob: -12.97530746459961
    7. '	x' → logprob: -12.97530746459961
    8. '   ' → logprob: -13.47530746459961
    9. '(x' → logprob: -14.03780746459961
    10. '  ' → logprob: -14.47530746459961

Token 239: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16460183262825012
    2. '>' → logprob: -1.9146018028259277
    3. ' <' → logprob: -5.789601802825928
    4. ' >=' → logprob: -7.289601802825928
    5. '<' → logprob: -7.789601802825928
    6. ' ' → logprob: -9.914602279663086
    7. '>=' → logprob: -9.914602279663086
    8. ' !=' → logprob: -10.164602279663086
    9. '   ' → logprob: -10.414602279663086
    10. ' >
' → logprob: -11.414602279663086

Token 240: ' supérieur' (ID: 98491)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.35068243741989136
    2. ' >' → logprob: -1.3506824970245361
    3. ' positif' → logprob: -3.850682497024536
    4. ' supérieur' → logprob: -5.100682258605957
    5. ' positive' → logprob: -5.600682258605957
    6. '<' → logprob: -5.850682258605957
    7. ' greater' → logprob: -7.725682258605957
    8. ' <' → logprob: -7.850682258605957
    9. 'positive' → logprob: -8.100682258605957
    10. ' nég' → logprob: -8.225682258605957

Token 241: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9961859583854675
    2. '   ' → logprob: -1.2461860179901123
    3. 'à' → logprob: -2.1211860179901123
    4. '0' → logprob: -2.3711860179901123
    5. '>' → logprob: -2.3711860179901123
    6. ' >' → logprob: -4.246185779571533
    7. '=' → logprob: -4.496185779571533
    8. ' ' → logprob: -5.746185779571533
    9. ' =' → logprob: -6.371185779571533
    10. '  ' → logprob: -6.996185779571533

Token 242: ' égal' (ID: 15059)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03667305409908295
    2. 'à' → logprob: -3.661673069000244
    3. 'égal' → logprob: -5.661673069000244
    4. ' à' → logprob: -5.786673069000244
    5. 'strict' → logprob: -6.536673069000244
    6. ' ' → logprob: -7.286673069000244
    7. '=' → logprob: -7.411673069000244
    8. ' égal' → logprob: -8.161672592163086
    9. '>' → logprob: -8.161672592163086
    10. 'a' → logprob: -8.661672592163086

Token 243: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5164957046508789
    2. 'à' → logprob: -1.266495704650879
    3. '   ' → logprob: -2.266495704650879
    4. '0' → logprob: -4.391495704650879
    5. 'a' → logprob: -5.641495704650879
    6. ' a' → logprob: -7.641495704650879
    7. ' ' → logprob: -7.641495704650879
    8. '```' → logprob: -7.766495704650879
    9. ''à' → logprob: -8.891495704650879
    10. 'À' → logprob: -9.891495704650879

Token 244: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04973248764872551
    2. ' ' → logprob: -3.0497324466705322
    3. '1' → logprob: -7.299732685089111
    4. '10' → logprob: -8.299732208251953
    5. '2' → logprob: -8.799732208251953
    6. '5' → logprob: -10.299732208251953
    7. '3' → logprob: -11.174732208251953
    8. '100' → logprob: -12.299732208251953
    9. '4' → logprob: -12.424732208251953
    10. '20' → logprob: -12.924732208251953

Token 245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00834269542247057
    2. ' ' → logprob: -6.008342742919922
    3. '1' → logprob: -6.258342742919922
    4. '10' → logprob: -6.383342742919922
    5. '2' → logprob: -6.633342742919922
    6. '5' → logprob: -7.508342742919922
    7. '3' → logprob: -8.508342742919922
    8. '100' → logprob: -10.133342742919922
    9. '4' → logprob: -10.383342742919922
    10. '20' → logprob: -10.758342742919922

Token 246: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12755948305130005
    2. ':' → logprob: -2.1275594234466553
    3. ':
' → logprob: -7.752559661865234
    4. ' :' → logprob: -9.252559661865234
    5. '       ' → logprob: -10.377559661865234
    6. ',' → logprob: -10.877559661865234
    7. '.' → logprob: -11.252559661865234
    8. ' if' → logprob: -11.377559661865234
    9. ' and' → logprob: -11.627559661865234
    10. ' or' → logprob: -12.127559661865234

Token 247: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007226797170005739
    2. '    ' → logprob: -8.125722885131836
    3. '       ' → logprob: -8.625722885131836
    4. '    
' → logprob: -8.875722885131836
    5. '   
' → logprob: -11.000722885131836
    6. ' if' → logprob: -11.000722885131836
    7. ':' → logprob: -11.125722885131836
    8. '  ' → logprob: -11.250722885131836
    9. ' 
' → logprob: -11.250722885131836
    10. '     
' → logprob: -12.125722885131836

Token 248: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06864294409751892
    2. 'ont' → logprob: -3.1936428546905518
    3. ':' → logprob: -5.068643093109131
    4. 'es' → logprob: -5.443643093109131
    5. '    ' → logprob: -5.943643093109131
    6. 'on' → logprob: -6.568643093109131
    7. 'e' → logprob: -6.693643093109131
    8. '  ' → logprob: -6.943643093109131
    9. '#' → logprob: -7.068643093109131
    10. 'ela' → logprob: -7.318643093109131

Token 249: '-à' (ID: 56297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027904774993658066
    2. ':' → logprob: -4.027904987335205
    3. ' :' → logprob: -6.152904987335205
    4. '       ' → logprob: -6.402904987335205
    5. '    ' → logprob: -6.527904987335205
    6. '.' → logprob: -7.402904987335205
    7. '  ' → logprob: -7.527904987335205
    8. '    
' → logprob: -7.777904987335205
    9. 'à' → logprob: -7.902904987335205
    10. 'x' → logprob: -8.027904510498047

Token 250: '-dire' (ID: 76064)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7980926036834717
    2. '0' → logprob: -1.4230926036834717
    3. 'if' → logprob: -1.5480926036834717
    4. '   ' → logprob: -3.1730926036834717
    5. 'True' → logprob: -3.6730926036834717
    6. '=' → logprob: -5.173092842102051
    7. ' ' → logprob: -5.298092842102051
    8. '>' → logprob: -5.548092842102051
    9. '#' → logprob: -6.048092842102051
    10. 'False' → logprob: -6.548092842102051

Token 251: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7404299974441528
    2. ' if' → logprob: -1.1154299974441528
    3. ' x' → logprob: -2.4904298782348633
    4. ' si' → logprob: -3.1154298782348633
    5. 'x' → logprob: -3.3654298782348633
    6. 'if' → logprob: -3.7404298782348633
    7. ' que' → logprob: -5.490429878234863
    8. ':' → logprob: -5.990429878234863
    9. 'si' → logprob: -7.490429878234863
    10. '(x' → logprob: -7.615429878234863

Token 252: ' A' (ID: 355)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31345680356025696
    2. 'x' → logprob: -1.3134567737579346
    3. ' A' → logprob: -9.438456535339355
    4. 'A' → logprob: -9.563456535339355
    5. '(x' → logprob: -10.563456535339355
    6. ' ' → logprob: -11.938456535339355
    7. ' (' → logprob: -12.813456535339355
    8. ' ' → logprob: -13.438456535339355
    9. '   ' → logprob: -13.563456535339355
    10. ' not' → logprob: -13.938456535339355

Token 253: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009320637909695506
    2. '[' → logprob: -7.000932216644287
    3. ' [' → logprob: -11.500931739807129
    4. 'i' → logprob: -12.625931739807129
    5. '   ' → logprob: -13.000931739807129
    6. '[I' → logprob: -13.500931739807129
    7. '>' → logprob: -14.625931739807129
    8. '[
' → logprob: -14.750931739807129
    9. ' ' → logprob: -14.750931739807129
    10. '(i' → logprob: -15.500931739807129

Token 254: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14261262118816376
    2. ']>=' → logprob: -2.2676126956939697
    3. ' ]' → logprob: -4.517612457275391
    4. '>=' → logprob: -4.642612457275391
    5. ' >=' → logprob: -5.017612457275391
    6. '   ' → logprob: -7.517612457275391
    7. ']>' → logprob: -7.517612457275391
    8. '>' → logprob: -7.892612457275391
    9. '[i' → logprob: -8.64261245727539
    10. ' ' → logprob: -9.01761245727539

Token 255: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.16440464556217194
    2. '>=' → logprob: -1.9144046306610107
    3. ' >' → logprob: -6.41440486907959
    4. '>' → logprob: -6.78940486907959
    5. ' -' → logprob: -7.53940486907959
    6. '   ' → logprob: -8.03940486907959
    7. ']>=' → logprob: -8.53940486907959
    8. ' ' → logprob: -9.41440486907959
    9. '-' → logprob: -9.41440486907959
    10. ' is' → logprob: -10.53940486907959

Token 256: ' plus' (ID: 2932)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7117898464202881
    2. '>=' → logprob: -1.211789846420288
    3. ' supérieur' → logprob: -1.961789846420288
    4. ' plus' → logprob: -3.836789846420288
    5. '   ' → logprob: -3.961789846420288
    6. ' greater' → logprob: -4.586790084838867
    7. 'greater' → logprob: -5.461790084838867
    8. ' au' → logprob: -5.586790084838867
    9. '>' → logprob: -5.836790084838867
    10. ' positif' → logprob: -5.961790084838867

Token 257: ' grand' (ID: 6363)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23137813806533813
    2. ' =' → logprob: -1.8563780784606934
    3. ' >=' → logprob: -4.106378078460693
    4. ' grande' → logprob: -4.981378078460693
    5. '>=' → logprob: -4.981378078460693
    6. ' grand' → logprob: -5.106378078460693
    7. '   ' → logprob: -5.356378078460693
    8. ' ' → logprob: -6.106378078460693
    9. ' grandes' → logprob: -6.606378078460693
    10. 'grand' → logprob: -6.606378078460693

Token 258: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.32108888030052185
    2. ' ou' → logprob: -1.3210889101028442
    3. '   ' → logprob: -5.071088790893555
    4. '  ' → logprob: -8.071088790893555
    5. 'or' → logprob: -8.196088790893555
    6. ' ' → logprob: -8.446088790893555
    7. ' or' → logprob: -8.446088790893555
    8. ' que' → logprob: -8.696088790893555
    9. 'que' → logprob: -9.196088790893555
    10. '    ' → logprob: -9.821088790893555

Token 259: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.006265420466661453
    2. 'ég' → logprob: -6.006265640258789
    3. '=' → logprob: -6.381265640258789
    4. 'ou' → logprob: -7.131265640258789
    5. 'egal' → logprob: -7.756265640258789
    6. 'eg' → logprob: -7.756265640258789
    7. ' égal' → logprob: -8.756265640258789
    8. 'é' → logprob: -9.256265640258789
    9. 'equal' → logprob: -10.381265640258789
    10. '```' → logprob: -10.381265640258789

Token 260: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.7106412649154663
    2. ' à' → logprob: -0.8356412649154663
    3. ' ou' → logprob: -3.585641384124756
    4. 'ou' → logprob: -3.835641384124756
    5. '   ' → logprob: -4.210641384124756
    6. ' ' → logprob: -5.460641384124756
    7. 'que' → logprob: -6.085641384124756
    8. ' or' → logprob: -7.085641384124756
    9. '  ' → logprob: -7.210641384124756
    10. ' que' → logprob: -7.585641384124756

Token 261: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.043169550597667694
    2. ' B' → logprob: -3.1681694984436035
    3. '0' → logprob: -8.793169975280762
    4. ' ' → logprob: -11.043169975280762
    5. 'x' → logprob: -13.918169975280762
    6. '   ' → logprob: -14.918169975280762
    7. '1' → logprob: -15.168169975280762
    8. '  ' → logprob: -15.543169975280762
    9. 'l' → logprob: -15.793169975280762
    10. ' ' → logprob: -16.168169021606445

Token 262: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00026097820955328643
    2. '   ' → logprob: -9.250261306762695
    3. ':' → logprob: -9.625261306762695
    4. '(i' → logprob: -10.000261306762695
    5. ':
' → logprob: -10.750261306762695
    6. '):' → logprob: -11.500261306762695
    7. 'i' → logprob: -11.750261306762695
    8. ')' → logprob: -12.375261306762695
    9. '):
' → logprob: -12.500261306762695
    10. '[' → logprob: -13.625261306762695

Token 263: '].
' (ID: 49887)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6812707185745239
    2. '):' → logprob: -0.8062707185745239
    3. '   ' → logprob: -3.8062705993652344
    4. ')' → logprob: -4.431270599365234
    5. ':' → logprob: -4.806270599365234
    6. ' ):
' → logprob: -5.806270599365234
    7. ' ):' → logprob: -7.181270599365234
    8. ':
' → logprob: -8.181270599365234
    9. ']:' → logprob: -8.556270599365234
    10. '):
' → logprob: -8.931270599365234

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8312570318812504e-05
    2. ' if' → logprob: -11.375018119812012
    3. 'if' → logprob: -12.125018119812012
    4. '   ' → logprob: -14.250018119812012
    5. '
' → logprob: -15.125018119812012
    6. '    
' → logprob: -15.750018119812012
    7. '	if' → logprob: -15.750018119812012
    8. '```' → logprob: -15.875018119812012
    9. '       ' → logprob: -16.750019073486328
    10. '  ' → logprob: -17.000019073486328

Token 265: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31818199157714844
    2. 'if' (adapté à ' if') → logprob: -1.3181819915771484
    3. ' if' → logprob: -5.318181991577148
    4. '	if' → logprob: -12.193181991577148
    5. '```' → logprob: -14.443181991577148
    6. '   ' → logprob: -14.818181991577148
    7. 'If' → logprob: -15.318181991577148
    8. ' ' → logprob: -15.693181991577148
    9. '  ' → logprob: -16.19318199157715
    10. '       ' → logprob: -16.69318199157715

Token 266: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.01104935072362423
    2. 'x' → logprob: -4.511049270629883
    3. ' ' → logprob: -14.261049270629883
    4. '	x' → logprob: -14.511049270629883
    5. ' ' → logprob: -15.136049270629883
    6. '   ' → logprob: -15.886049270629883
    7. '(x' → logprob: -16.011049270629883
    8. ' (' → logprob: -19.636049270629883
    9. '  ' → logprob: -20.261049270629883
    10. '    ' → logprob: -20.636049270629883

Token 267: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.06635775417089462
    2. '>=' → logprob: -2.8163578510284424
    3. ' >' → logprob: -5.691357612609863
    4. '>' → logprob: -6.941357612609863
    5. '   ' → logprob: -11.066357612609863
    6. ' ' → logprob: -11.816357612609863
    7. ')>=' → logprob: -12.316357612609863
    8. ' <' → logprob: -12.691357612609863
    9. ')' → logprob: -13.066357612609863
    10. ']>=' → logprob: -13.941357612609863

Token 268: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014133334159851
    2. ' ' → logprob: -1.7014133930206299
    3. '1' → logprob: -16.951414108276367
    4. ' ' → logprob: -17.076414108276367
    5. '   ' → logprob: -18.201414108276367
    6. '  ' → logprob: -19.076414108276367
    7. '```' → logprob: -19.201414108276367
    8. '
' → logprob: -19.451414108276367
    9. '۰' → logprob: -19.638914108276367
    10. ':' → logprob: -19.826414108276367

Token 269: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '1' → logprob: -15.751702308654785
    4. ' ' → logprob: -18.5017032623291
    5. '   ' → logprob: -18.6267032623291
    6. '  ' → logprob: -18.9392032623291
    7. '00' → logprob: -18.9392032623291
    8. '```' → logprob: -19.4392032623291
    9. '
' → logprob: -19.5017032623291
    10. '۰' → logprob: -19.6267032623291

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06547517329454422
    2. ':
' → logprob: -2.8154752254486084
    3. '   ' → logprob: -6.190474987030029
    4. '       ' → logprob: -6.565474987030029
    5. ' :' → logprob: -10.815475463867188
    6. ' :
' → logprob: -11.190475463867188
    7. '):
' → logprob: -12.815475463867188
    8. '):' → logprob: -13.065475463867188
    9. ':
' → logprob: -13.440475463867188
    10. ',' → logprob: -14.315475463867188

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11555930972099304
    2. '   ' → logprob: -2.2405593395233154
    3. ' sum' → logprob: -6.740559101104736
    4. 'sum' → logprob: -7.740559101104736
    5. '	sum' → logprob: -8.490559577941895
    6. '<|end|>' → logprob: -8.740559577941895
    7. '    ' → logprob: -8.740559577941895
    8. '        
' → logprob: -9.240559577941895
    9. ' ' → logprob: -9.615559577941895
    10. '    
' → logprob: -9.615559577941895

Token 272: ' #' (ID: 1069)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6654003262519836
    2. 'sum' → logprob: -1.1654002666473389
    3. '   ' → logprob: -2.040400266647339
    4. '       ' → logprob: -3.165400266647339
    5. '	sum' → logprob: -6.415400505065918
    6. '
' → logprob: -9.040400505065918
    7. '           ' → logprob: -9.790400505065918
    8. '  ' → logprob: -10.040400505065918
    9. ' ' → logprob: -10.290400505065918
    10. '```' → logprob: -11.915400505065918

Token 273: ' Si' (ID: 7832)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04370430111885071
    2. ' sum' → logprob: -3.1687042713165283
    3. '   ' → logprob: -7.293704509735107
    4. '       ' → logprob: -11.66870403289795
    5. '	sum' → logprob: -12.04370403289795
    6. ' ' → logprob: -12.29370403289795
    7. '
' → logprob: -12.91870403289795
    8. '  ' → logprob: -13.54370403289795
    9. 'continue' → logprob: -14.29370403289795
    10. '    ' → logprob: -15.29370403289795

Token 274: ' la' (ID: 557)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.23043353855609894
    2. 'sum' → logprob: -1.6054335832595825
    3. '           ' → logprob: -5.980433464050293
    4. '       ' → logprob: -6.230433464050293
    5. '   ' → logprob: -8.105433464050293
    6. '	sum' → logprob: -9.730433464050293
    7. ' x' → logprob: -10.230433464050293
    8. 'x' → logprob: -10.605433464050293
    9. ' ' → logprob: -11.230433464050293
    10. '        ' → logprob: -11.355433464050293

Token 275: ' condition' (ID: 7060)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0297706201672554
    2. ' sum' → logprob: -3.529770612716675
    3. ' somme' → logprob: -12.029770851135254
    4. 's' → logprob: -12.279770851135254
    5. '	sum' → logprob: -12.654770851135254
    6. '   ' → logprob: -13.529770851135254
    7. ' ' → logprob: -14.404770851135254
    8. 'x' → logprob: -14.404770851135254
    9. '
' → logprob: -14.529770851135254
    10. '#' → logprob: -14.654770851135254

Token 276: ' ci' (ID: 7405)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0943426787853241
    2. '           ' → logprob: -2.9693427085876465
    3. '       ' → logprob: -3.5943427085876465
    4. '   ' → logprob: -5.2193427085876465
    5. ' :' → logprob: -5.8443427085876465
    6. 'sum' → logprob: -6.9693427085876465
    7. ':
' → logprob: -7.2193427085876465
    8. ' sum' → logprob: -7.9693427085876465
    9. ' ==' → logprob: -8.594342231750488
    10. '==' → logprob: -8.969342231750488

Token 277: '-dessus' (ID: 74812)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7545574307441711
    2. 'est' → logprob: -1.5045573711395264
    3. 'n' → logprob: -2.5045573711395264
    4. '        ' → logprob: -3.1295573711395264
    5. '   ' → logprob: -3.3795573711395264
    6. '    ' → logprob: -3.5045573711395264
    7. '#' → logprob: -3.5045573711395264
    8. '     ' → logprob: -3.8795573711395264
    9. '      ' → logprob: -4.0045576095581055
    10. ' est' → logprob: -4.2545576095581055

Token 278: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.042128220200538635
    2. ':
' → logprob: -4.042128086090088
    3. '           ' → logprob: -4.667128086090088
    4. '       ' → logprob: -5.167128086090088
    5. 'sum' → logprob: -5.917128086090088
    6. ' sum' → logprob: -6.167128086090088
    7. '   ' → logprob: -6.417128086090088
    8. ' :' → logprob: -6.667128086090088
    9. ',' → logprob: -7.417128086090088
    10. ' :
' → logprob: -9.542128562927246

Token 279: ' vraie' (ID: 105841)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.462039589881897
    2. '       ' → logprob: -1.837039589881897
    3. 'true' → logprob: -3.2120394706726074
    4. ' True' → logprob: -3.3370394706726074
    5. 'True' → logprob: -3.4620394706726074
    6. ' respect' → logprob: -3.4620394706726074
    7. '   ' → logprob: -3.8370394706726074
    8. 's' → logprob: -4.337039470672607
    9. ' true' → logprob: -4.712039470672607
    10. 'respect' → logprob: -4.962039470672607

Token 280: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14819642901420593
    2. ':
' → logprob: -2.2731964588165283
    3. '       ' → logprob: -3.5231964588165283
    4. ',' → logprob: -6.148196220397949
    5. '           ' → logprob: -6.648196220397949
    6. ' :' → logprob: -7.148196220397949
    7. '   ' → logprob: -8.14819622039795
    8. 'sum' → logprob: -8.27319622039795
    9. ' :
' → logprob: -8.27319622039795
    10. ' sum' → logprob: -9.64819622039795

Token 281: ' ajoute' (ID: 91611)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.3566790521144867
    2. 'sum' → logprob: -1.731679081916809
    3. '       ' → logprob: -2.3566789627075195
    4. '   ' → logprob: -3.6066789627075195
    5. '
' → logprob: -7.6066789627075195
    6. '	sum' → logprob: -7.9816789627075195
    7. '           ' → logprob: -8.60667896270752
    8. '```' → logprob: -10.48167896270752
    9. ' continue' → logprob: -11.35667896270752
    10. ' ' → logprob: -11.73167896270752

Token 282: ' à' (ID: 1221)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3868793845176697
    2. 'x' → logprob: -1.1368794441223145
    3. ' ' → logprob: -13.386878967285156
    4. 'sum' → logprob: -13.511878967285156
    5. '(x' → logprob: -13.636878967285156
    6. ' ' → logprob: -14.136878967285156
    7. '   ' → logprob: -14.386878967285156
    8. '	x' → logprob: -14.386878967285156
    9. '       ' → logprob: -14.886878967285156
    10. ',' → logprob: -15.011878967285156

Token 283: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0036018555983901024
    2. ' sum' → logprob: -5.628602027893066
    3. 'la' → logprob: -14.753602027893066
    4. '	sum' → logprob: -14.878602027893066
    5. 'x' → logprob: -15.003602027893066
    6. ' la' → logprob: -15.503602027893066
    7. 's' → logprob: -16.00360107421875
    8. ' ' → logprob: -16.25360107421875
    9. '=sum' → logprob: -16.62860107421875
    10. '(sum' → logprob: -16.62860107421875

Token 284: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02495396137237549
    2. 'x' → logprob: -3.774953842163086
    3. ' +=' → logprob: -6.524953842163086
    4. '(x' → logprob: -9.399953842163086
    5. '+=' → logprob: -10.274953842163086
    6. '   ' → logprob: -10.524953842163086
    7. ' =' → logprob: -10.649953842163086
    8. ' +' → logprob: -10.649953842163086
    9. '+' → logprob: -11.274953842163086
    10. ',' → logprob: -11.774953842163086

Token 285: ' valeur' (ID: 41664)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.313437283039093
    2. 'x' → logprob: -1.3134372234344482
    3. ' ' → logprob: -9.813437461853027
    4. '   ' → logprob: -10.813437461853027
    5. ' sum' → logprob: -11.188437461853027
    6. 's' → logprob: -11.438437461853027
    7. ' valeur' → logprob: -11.563437461853027
    8. 'sum' → logprob: -11.938437461853027
    9. ' ' → logprob: -12.063437461853027
    10. '1' → logprob: -12.188437461853027

Token 286: ' B' (ID: 418)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2581384479999542
    2. ' x' → logprob: -1.5081384181976318
    3. ' de' → logprob: -5.133138656616211
    4. '   ' → logprob: -8.883138656616211
    5. 'de' → logprob: -9.508138656616211
    6. ' ' → logprob: -10.133138656616211
    7. '(x' → logprob: -11.758138656616211
    8. ' d' → logprob: -12.258138656616211
    9. ' of' → logprob: -12.383138656616211
    10. 'd' → logprob: -12.383138656616211

Token 287: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.491498531133402e-06
    2. ' [' → logprob: -12.250009536743164
    3. '[' → logprob: -12.375009536743164
    4. 'i' → logprob: -15.500009536743164
    5. '   ' → logprob: -16.625009536743164
    6. '```' → logprob: -16.750009536743164
    7. '[x' → logprob: -17.250009536743164
    8. '[
' → logprob: -17.625009536743164
    9. '[I' → logprob: -17.625009536743164
    10. '[j' → logprob: -18.125009536743164

Token 288: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3760563135147095
    2. ')' → logprob: -1.2510563135147095
    3. '   ' → logprob: -5.37605619430542
    4. ' ]' → logprob: -5.62605619430542
    5. ' )' → logprob: -5.62605619430542
    6. '<|end|>' → logprob: -5.75105619430542
    7. '+' → logprob: -5.87605619430542
    8. '])' → logprob: -5.87605619430542
    9. ' +' → logprob: -5.87605619430542
    10. ' *' → logprob: -6.87605619430542

Token 289: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17978405952453613
    2. 'sum' → logprob: -2.304784059524536
    3. ' +' → logprob: -3.554784059524536
    4. '   ' → logprob: -4.304783821105957
    5. '+' → logprob: -4.679783821105957
    6. ' sum' → logprob: -5.179783821105957
    7. ' *' → logprob: -6.554783821105957
    8. '
' → logprob: -6.679783821105957
    9. '*' → logprob: -6.804783821105957
    10. '           ' → logprob: -7.054783821105957

Token 290: 'on' (ID: 263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1116177961230278
    2. ' )' → logprob: -2.7366178035736084
    3. 'sum' → logprob: -3.7366178035736084
    4. '       ' → logprob: -4.986617565155029
    5. '   ' → logprob: -5.986617565155029
    6. '+' → logprob: -6.611617565155029
    7. ').' → logprob: -6.861617565155029
    8. ')
' → logprob: -7.361617565155029
    9. ' +' → logprob: -7.486617565155029
    10. '           ' → logprob: -7.611617565155029

Token 291: ' ajoute' (ID: 91611)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3692965507507324
    2. ' sum' → logprob: -1.2442965507507324
    3. '   ' → logprob: -4.744296550750732
    4. '       ' → logprob: -4.994296550750732
    5. ' continue' → logprob: -6.619296550750732
    6. '```' → logprob: -6.869296550750732
    7. 'continue' → logprob: -7.619296550750732
    8. ')' → logprob: -7.994296550750732
    9. ' suma' → logprob: -8.11929702758789
    10. ' somme' → logprob: -8.36929702758789

Token 292: ' B' (ID: 418)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1834811568260193
    2. 'x' → logprob: -2.683481216430664
    3. ' B' → logprob: -2.933481216430664
    4. ' )' → logprob: -3.433481216430664
    5. ')' → logprob: -5.058481216430664
    6. 'B' → logprob: -5.308481216430664
    7. ' ' → logprob: -7.183481216430664
    8. ' ' → logprob: -7.933481216430664
    9. ' +' → logprob: -8.308481216430664
    10. 'A' → logprob: -8.558481216430664

Token 293: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.869639476761222e-05
    2. '[' → logprob: -10.875039100646973
    3. ' [' → logprob: -11.625039100646973
    4. '   ' → logprob: -12.750039100646973
    5. '```' → logprob: -12.750039100646973
    6. '[I' → logprob: -13.625039100646973
    7. ')' → logprob: -13.750039100646973
    8. 'i' → logprob: -14.125039100646973
    9. '
' → logprob: -14.750039100646973
    10. ']' → logprob: -15.000039100646973

Token 294: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029446929693222046
    2. ' )' → logprob: -4.279447078704834
    3. ').' → logprob: -4.779447078704834
    4. '   ' → logprob: -5.654447078704834
    5. '*' → logprob: -7.029447078704834
    6. ' *' → logprob: -7.529447078704834
    7. '       ' → logprob: -8.404446601867676
    8. '),' → logprob: -8.404446601867676
    9. ')
' → logprob: -8.779446601867676
    10. ',' → logprob: -8.779446601867676

Token 295: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06434135138988495
    2. ' )' → logprob: -3.1893413066864014
    3. ' *' → logprob: -4.4393415451049805
    4. '*' → logprob: -5.4393415451049805
    5. '   ' → logprob: -5.5643415451049805
    6. ' +' → logprob: -8.68934154510498
    7. ').' → logprob: -8.81434154510498
    8. '+' → logprob: -9.06434154510498
    9. '    ' → logprob: -9.31434154510498
    10. '       ' → logprob: -9.31434154510498

Token 296: ' résultat' (ID: 62556)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.05714831501245499
    2. ' sum' → logprob: -2.9321482181549072
    3. 'x' → logprob: -6.182148456573486
    4. ')' → logprob: -9.307147979736328
    5. ' x' → logprob: -9.807147979736328
    6. 's' → logprob: -10.557147979736328
    7. ' )' → logprob: -12.057147979736328
    8. ' somme' → logprob: -12.432147979736328
    9. 'A' → logprob: -12.807147979736328
    10. 'summ' → logprob: -13.557147979736328

Token 297: ' total' (ID: 3609)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07529096305370331
    2. ' )' → logprob: -2.8252909183502197
    3. '   ' → logprob: -4.950291156768799
    4. ' +' → logprob: -5.825291156768799
    5. '+' → logprob: -6.575291156768799
    6. 'sum' → logprob: -7.950291156768799
    7. ')
' → logprob: -8.32529067993164
    8. ' +=' → logprob: -8.57529067993164
    9. ' )
' → logprob: -8.82529067993164
    10. '    ' → logprob: -9.07529067993164

Token 298: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010591682977974415
    2. '       ' → logprob: -5.010591506958008
    3. ' )' → logprob: -6.635591506958008
    4. ')
' → logprob: -6.760591506958008
    5. '   ' → logprob: -6.885591506958008
    6. ').' → logprob: -9.135591506958008
    7. ' +' → logprob: -9.385591506958008
    8. '+' → logprob: -9.510591506958008
    9. '
' → logprob: -10.635591506958008
    10. '           ' → logprob: -11.510591506958008

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002142408862709999
    2. ' sum' → logprob: -6.502142429351807
    3. 'sum' → logprob: -7.502142429351807
    4. '   ' → logprob: -10.127141952514648
    5. '           ' → logprob: -10.252141952514648
    6. '      ' → logprob: -13.127141952514648
    7. '	' → logprob: -13.127141952514648
    8. '	sum' → logprob: -13.127141952514648
    9. '```' → logprob: -13.502141952514648
    10. '
' → logprob: -13.627141952514648

Token 300: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.06407482922077179
    2. ' sum' → logprob: -2.814074754714966
    3. '   ' → logprob: -6.814074993133545
    4. '       ' → logprob: -6.939074993133545
    5. '	sum' → logprob: -10.439074516296387
    6. '
' → logprob: -12.189074516296387
    7. '  ' → logprob: -14.189074516296387
    8. ' ' → logprob: -14.689074516296387
    9. '```' → logprob: -14.689074516296387
    10. '    ' → logprob: -15.064074516296387

Token 301: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07054638862609863
    2. '+=' → logprob: -2.8205463886260986
    3. '+' → logprob: -4.8205461502075195
    4. ' +' → logprob: -8.19554615020752
    5. '=' → logprob: -8.82054615020752
    6. ' =' → logprob: -10.07054615020752
    7. '   ' → logprob: -11.69554615020752
    8. ' ' → logprob: -13.07054615020752
    9. ']+=' → logprob: -13.57054615020752
    10. '    ' → logprob: -14.57054615020752

Token 302: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2519381642341614
    2. 'sum' → logprob: -1.5019381046295166
    3. '0' → logprob: -13.001937866210938
    4. '	sum' → logprob: -13.126937866210938
    5. '+' → logprob: -13.626937866210938
    6. '(sum' → logprob: -13.876937866210938
    7. ' ' → logprob: -14.251937866210938
    8. ' suma' → logprob: -14.751937866210938
    9. '_sum' → logprob: -15.001937866210938
    10. 's' → logprob: -15.126937866210938

Token 303: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868728280067444
    2. '+' → logprob: -1.1368727684020996
    3. ' ' → logprob: -14.386873245239258
    4. ' plus' → logprob: -14.386873245239258
    5. '+B' → logprob: -15.386873245239258
    6. ' ' → logprob: -16.011873245239258
    7. ' +=' → logprob: -16.136873245239258
    8. '+=' → logprob: -17.011873245239258
    9. '+b' → logprob: -17.261873245239258
    10. ' +
' → logprob: -17.386873245239258

Token 304: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12692894041538239
    2. ' B' → logprob: -2.1269290447235107
    3. '	B' → logprob: -14.75192928314209
    4. ' ' → logprob: -15.62692928314209
    5. 'b' → logprob: -16.001928329467773
    6. 'A' → logprob: -16.626928329467773
    7. '   ' → logprob: -16.876928329467773
    8. ' ' → logprob: -17.376928329467773
    9. '_B' → logprob: -18.751928329467773
    10. '(B' → logprob: -18.876928329467773

Token 305: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -11.625009536743164
    3. ' [' → logprob: -16.125009536743164
    4. '[I' → logprob: -16.250009536743164
    5. 'i' → logprob: -16.625009536743164
    6. '[
' → logprob: -17.875009536743164
    7. '```' → logprob: -19.625009536743164
    8. '[int' → logprob: -19.750009536743164
    9. '(i' → logprob: -20.125009536743164
    10. '[j' → logprob: -20.250009536743164

Token 306: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040457461727783084
    2. '<|end|>' → logprob: -8.125404357910156
    3. ')
' → logprob: -10.125404357910156
    4. ']' → logprob: -10.500404357910156
    5. '   ' → logprob: -11.250404357910156
    6. ' )' → logprob: -11.375404357910156
    7. '}' → logprob: -11.500404357910156
    8. '<|end|>' → logprob: -13.125404357910156
    9. '')' → logprob: -14.375404357910156
    10. ' ' → logprob: -14.375404357910156

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7095339298248291
    2. 'else' → logprob: -0.9595339298248291
    3. ' else' → logprob: -2.084533929824829
    4. '<|end|>' → logprob: -8.08453369140625
    5. '	else' → logprob: -8.95953369140625
    6. '    ' → logprob: -9.58453369140625
    7. ')' → logprob: -10.45953369140625
    8. 'elif' → logprob: -10.45953369140625
    9. ' ' → logprob: -10.45953369140625
    10. '```' → logprob: -10.58453369140625

Token 308: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.12720631062984467
    2. '   ' → logprob: -2.377206325531006
    3. ' else' → logprob: -3.627206325531006
    4. '	else' → logprob: -10.127205848693848
    5. 'elif' → logprob: -12.002205848693848
    6. '```' → logprob: -13.877205848693848
    7. '_else' → logprob: -15.877205848693848
    8. '    ' → logprob: -15.877205848693848
    9. ' ' → logprob: -16.127206802368164
    10. ' elif' → logprob: -16.127206802368164

Token 309: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049671463668346405
    2. ':
' → logprob: -3.0496714115142822
    3. '   ' → logprob: -7.549671649932861
    4. '       ' → logprob: -7.799671649932861
    5. ' :' → logprob: -9.299671173095703
    6. ' :
' → logprob: -9.924671173095703
    7. '{' → logprob: -13.549671173095703
    8. '    ' → logprob: -13.799671173095703
    9. ':

' → logprob: -13.924671173095703
    10. ':
' → logprob: -14.424671173095703

Token 310: '       ' (ID: 309)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06840717792510986
    2. '   ' → logprob: -3.0684070587158203
    3. ' sum' → logprob: -3.9434070587158203
    4. '
' → logprob: -9.44340705871582
    5. '       ' → logprob: -9.56840705871582
    6. '	sum' → logprob: -10.06840705871582
    7. '```' → logprob: -10.94340705871582
    8. '    
' → logprob: -11.81840705871582
    9. '0' → logprob: -12.31840705871582
    10. 'abs' → logprob: -12.44340705871582

Token 311: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0007979541551321745
    2. ' sum' → logprob: -7.625797748565674
    3. '   ' → logprob: -8.125798225402832
    4. '	sum' → logprob: -12.000798225402832
    5. '
' → logprob: -12.250798225402832
    6. 'x' → logprob: -13.500798225402832
    7. '       ' → logprob: -14.250798225402832
    8. '#' (adapté à ' #') → logprob: -15.125798225402832
    9. '```' → logprob: -15.625798225402832
    10. 'else' → logprob: -16.125797271728516

Token 312: ' Sinon' (ID: 154924)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0010531729785725474
    2. ' sum' → logprob: -6.876053333282471
    3. '   ' → logprob: -11.126052856445312
    4. '#' → logprob: -13.001052856445312
    5. '
' → logprob: -13.876052856445312
    6. '	sum' → logprob: -14.126052856445312
    7. 'x' → logprob: -14.251052856445312
    8. '       ' → logprob: -15.126052856445312
    9. 'break' → logprob: -15.876052856445312
    10. 'pass' → logprob: -16.251052856445312

Token 313: ',' (ID: 11)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5012775659561157
    2. 'sum' → logprob: -1.3762775659561157
    3. '       ' → logprob: -2.126277446746826
    4. '   ' → logprob: -4.251277446746826
    5. ':' → logprob: -4.876277446746826
    6. ',' → logprob: -8.751277923583984
    7. '	sum' → logprob: -9.376277923583984
    8. ' :' → logprob: -9.626277923583984
    9. '    ' → logprob: -9.751277923583984
    10. ':
' → logprob: -10.501277923583984

Token 314: ' c' (ID: 274)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.42883065342903137
    2. ' sum' → logprob: -1.053830623626709
    3. '   ' → logprob: -9.553831100463867
    4. '       ' → logprob: -10.178831100463867
    5. '	sum' → logprob: -11.678831100463867
    6. '
' → logprob: -12.553831100463867
    7. '    ' → logprob: -13.303831100463867
    8. '#' → logprob: -13.303831100463867
    9. ' suma' → logprob: -14.303831100463867
    10. '_sum' → logprob: -14.303831100463867

Token 315: ''est' (ID: 6616)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7159799933433533
    2. '       ' → logprob: -0.9659799933433533
    3. '#' → logprob: -2.840980052947998
    4. '   ' → logprob: -3.840980052947998
    5. ' sum' → logprob: -4.715980052947998
    6. 'al' → logprob: -4.840980052947998
    7. 'on' → logprob: -4.840980052947998
    8. 'ont' → logprob: -4.965980052947998
    9. '    ' → logprob: -5.715980052947998
    10. 'alculate' → logprob: -5.840980052947998

Token 316: ' que' (ID: 661)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.9153479933738708
    2. 'x' → logprob: -1.6653480529785156
    3. ' sum' → logprob: -2.5403480529785156
    4. 'A' → logprob: -2.6653480529785156
    5. '       ' → logprob: -2.7903480529785156
    6. ' la' → logprob: -3.0403480529785156
    7. '#' → logprob: -3.2903480529785156
    8. ' x' → logprob: -3.5403480529785156
    9. 'la' → logprob: -3.9153480529785156
    10. '   ' → logprob: -4.165348052978516

Token 317: ' B' (ID: 418)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5828198194503784
    2. 'sum' → logprob: -1.0828198194503784
    3. '   ' → logprob: -3.582819938659668
    4. '       ' → logprob: -3.832819938659668
    5. '#' → logprob: -4.457819938659668
    6. 'x' → logprob: -5.082819938659668
    7. ' la' → logprob: -5.082819938659668
    8. '    ' → logprob: -5.207819938659668
    9. 'A' → logprob: -5.332819938659668
    10. ' x' → logprob: -5.457819938659668

Token 318: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001593195047462359
    2. '[' → logprob: -9.12515926361084
    3. ' [' → logprob: -10.75015926361084
    4. 'i' → logprob: -11.37515926361084
    5. '   ' → logprob: -11.50015926361084
    6. 'else' → logprob: -13.50015926361084
    7. 'elif' → logprob: -14.12515926361084
    8. ' ' → logprob: -14.25015926361084
    9. '

' → logprob: -14.50015926361084
    10. ' ' → logprob: -14.75015926361084

Token 319: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05941692367196083
    2. '[i' → logprob: -3.4344170093536377
    3. '>' → logprob: -4.184416770935059
    4. ' est' → logprob: -5.559416770935059
    5. ']>' → logprob: -5.809416770935059
    6. ' >' → logprob: -6.309416770935059
    7. ')' → logprob: -8.309416770935059
    8. ' ]' → logprob: -8.309416770935059
    9. 'est' → logprob: -8.309416770935059
    10. '   ' → logprob: -8.809416770935059

Token 320: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.906010091304779
    2. 'est' → logprob: -1.5310101509094238
    3. '>' → logprob: -1.6560101509094238
    4. ' >' → logprob: -2.531010150909424
    5. ' is' → logprob: -3.656010150909424
    6. ' =' → logprob: -4.656010150909424
    7. '=' → logprob: -4.781010150909424
    8. ' vaut' → logprob: -4.781010150909424
    9. ' ' → logprob: -5.031010150909424
    10. '#' → logprob: -5.281010150909424

Token 321: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.07088437676429749
    2. ' plus' → logprob: -2.6958844661712646
    3. 'greater' → logprob: -8.070884704589844
    4. 'larg' → logprob: -8.570884704589844
    5. 'sup' → logprob: -9.445884704589844
    6. 'sum' → logprob: -9.445884704589844
    7. 'strict' → logprob: -9.945884704589844
    8. ' supérieur' → logprob: -9.945884704589844
    9. ' greater' → logprob: -10.070884704589844
    10. ' larger' → logprob: -10.070884704589844

Token 322: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.009063351899385452
    2. ' grand' → logprob: -5.009063243865967
    3. 'gr' → logprob: -6.134063243865967
    4. 'g' → logprob: -9.509063720703125
    5. '#' → logprob: -10.384063720703125
    6. 'é' → logprob: -10.634063720703125
    7. ' grande' → logprob: -10.884063720703125
    8. '```' → logprob: -12.259063720703125
    9. 'large' → logprob: -12.759063720703125
    10. 'fort' → logprob: -12.884063720703125

Token 323: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.18973708152770996
    2. '       ' → logprob: -2.68973708152771
    3. 'ou' → logprob: -3.56473708152771
    4. ' ou' → logprob: -3.56473708152771
    5. 'que' → logprob: -4.189737319946289
    6. '=' → logprob: -4.689737319946289
    7. '   ' → logprob: -5.064737319946289
    8. ':' → logprob: -5.564737319946289
    9. ' =' → logprob: -6.189737319946289
    10. 'au' → logprob: -6.314737319946289

Token 324: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.026319457218050957
    2. ' A' → logprob: -3.6513195037841797
    3. '   ' → logprob: -12.15131950378418
    4. ' ' → logprob: -12.15131950378418
    5. '	A' → logprob: -12.52631950378418
    6. ' ' → logprob: -13.52631950378418
    7. '0' → logprob: -13.90131950378418
    8. ',' → logprob: -14.65131950378418
    9. 'l' → logprob: -14.77631950378418
    10. '  ' → logprob: -15.27631950378418

Token 325: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.191489642835222e-05
    2. '[' → logprob: -10.875041961669922
    3. '   ' → logprob: -11.500041961669922
    4. '       ' → logprob: -11.625041961669922
    5. '[j' → logprob: -13.625041961669922
    6. 'i' → logprob: -14.625041961669922
    7. '[n' → logprob: -14.875041961669922
    8. '(i' → logprob: -15.125041961669922
    9. '[I' → logprob: -15.250041961669922
    10. '[idx' → logprob: -15.750041961669922

Token 326: ']' (ID: 60)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1148863136768341
    2. ':' → logprob: -3.2398862838745117
    3. ',' → logprob: -4.114886283874512
    4. '   ' → logprob: -4.239886283874512
    5. ')' → logprob: -4.364886283874512
    6. '),' → logprob: -4.864886283874512
    7. '):' → logprob: -4.989886283874512
    8. '):
' → logprob: -5.739886283874512
    9. ':
' → logprob: -5.989886283874512
    10. ')
' → logprob: -6.489886283874512

Token 327: ' :
' (ID: 10039)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0576973631978035
    2. ':' → logprob: -3.807697296142578
    3. '   ' → logprob: -3.932697296142578
    4. 'sum' → logprob: -4.807697296142578
    5. ',' → logprob: -5.432697296142578
    6. ' sum' → logprob: -7.182697296142578
    7. '.' → logprob: -8.182697296142578
    8. ' :' → logprob: -8.682697296142578
    9. ':
' → logprob: -8.807697296142578
    10. '
' → logprob: -10.182697296142578

Token 328: '       ' (ID: 309)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.050055131316185
    2. ' sum' → logprob: -3.0500550270080566
    3. '       ' → logprob: -7.050055027008057
    4. '   ' → logprob: -7.550055027008057
    5. '
' → logprob: -10.175055503845215
    6. '	sum' → logprob: -10.550055503845215
    7. ' ' → logprob: -14.050055503845215
    8. '    ' → logprob: -14.175055503845215
    9. '```' → logprob: -14.300055503845215
    10. 'else' → logprob: -14.425055503845215

Token 329: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0047228685580194
    2. ' sum' → logprob: -5.379723072052002
    3. '   ' → logprob: -9.379722595214844
    4. '       ' → logprob: -11.879722595214844
    5. '	sum' → logprob: -12.504722595214844
    6. '
' → logprob: -13.129722595214844
    7. 's' → logprob: -14.254722595214844
    8. 'summ' → logprob: -14.629722595214844
    9. 'break' → logprob: -14.879722595214844
    10. '    ' → logprob: -14.879722595214844

Token 330: ' Ajouter' (ID: 165754)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.009773917496204376
    2. ' sum' → logprob: -4.6347737312316895
    3. '   ' → logprob: -11.759774208068848
    4. '
' → logprob: -13.134774208068848
    5. '	sum' → logprob: -13.384774208068848
    6. 'break' → logprob: -13.759774208068848
    7. '#' → logprob: -13.884774208068848
    8. 'else' → logprob: -14.134774208068848
    9. 's' → logprob: -14.384774208068848
    10. 'x' → logprob: -14.759774208068848

Token 331: ' d' (ID: 272)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5934515595436096
    2. 'A' → logprob: -0.9684515595436096
    3. 'sum' → logprob: -3.218451499938965
    4. ' sum' → logprob: -3.718451499938965
    5. ' à' → logprob: -6.718451499938965
    6. '0' → logprob: -7.593451499938965
    7. ' to' → logprob: -7.718451499938965
    8. '   ' → logprob: -8.718451499938965
    9. ' ' → logprob: -9.093451499938965
    10. 'x' → logprob: -9.218451499938965

Token 332: ''abord' (ID: 89989)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.522490918636322
    2. 'e' → logprob: -1.1474909782409668
    3. ' A' → logprob: -3.772490978240967
    4. 'u' → logprob: -4.272490978240967
    5. '   ' → logprob: -4.522490978240967
    6. 'sum' → logprob: -4.772490978240967
    7. 'B' → logprob: -4.897490978240967
    8. 'es' → logprob: -5.772490978240967
    9. '       ' → logprob: -5.772490978240967
    10. ' sum' → logprob: -5.897490978240967

Token 333: ' toute' (ID: 16825)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6100320219993591
    2. ' A' → logprob: -0.8600320219993591
    3. 'sum' → logprob: -4.610032081604004
    4. 'abs' → logprob: -5.485032081604004
    5. '1' → logprob: -5.985032081604004
    6. '0' → logprob: -5.985032081604004
    7. ' (' → logprob: -6.110032081604004
    8. ' abs' → logprob: -6.360032081604004
    9. ' sum' → logprob: -6.610032081604004
    10. '       ' → logprob: -6.860032081604004

Token 334: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.33632218837738037
    2. ' A' → logprob: -2.08632230758667
    3. ' la' → logprob: -2.71132230758667
    4. 'l' → logprob: -3.08632230758667
    5. ' l' → logprob: -3.21132230758667
    6. 'la' → logprob: -5.46132230758667
    7. '   ' → logprob: -6.83632230758667
    8. 'a' → logprob: -7.21132230758667
    9. 'e' → logprob: -7.58632230758667
    10. 'abs' → logprob: -7.83632230758667

Token 335: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.09604736417531967
    2. 'A' → logprob: -2.4710474014282227
    3. ' valeur' → logprob: -6.346047401428223
    4. 'diff' → logprob: -6.846047401428223
    5. 'abs' → logprob: -6.846047401428223
    6. '   ' → logprob: -6.971047401428223
    7. 'x' → logprob: -7.471047401428223
    8. 'value' → logprob: -8.221047401428223
    9. 'quant' → logprob: -8.471047401428223
    10. 's' → logprob: -8.596047401428223

Token 336: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20183165371418
    2. 'de' → logprob: -1.9518316984176636
    3. ' de' → logprob: -3.451831579208374
    4. ' A' → logprob: -5.076831817626953
    5. 'x' → logprob: -6.826831817626953
    6. 'd' → logprob: -7.201831817626953
    7. ' ' → logprob: -8.201831817626953
    8. '   ' → logprob: -8.451831817626953
    9. '(A' → logprob: -9.826831817626953
    10. '(' → logprob: -9.951831817626953

Token 337: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0008328551193699241
    2. ' A' → logprob: -7.125833034515381
    3. 'x' → logprob: -11.125832557678223
    4. ' ' → logprob: -12.250832557678223
    5. 'sum' → logprob: -12.375832557678223
    6. 'l' → logprob: -13.750832557678223
    7. '`' → logprob: -14.625832557678223
    8. 'a' → logprob: -15.125832557678223
    9. '	A' → logprob: -15.250832557678223
    10. '0' → logprob: -15.250832557678223

Token 338: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.465036105713807e-06
    2. '   ' → logprob: -12.125007629394531
    3. '[' → logprob: -14.250007629394531
    4. '       ' → logprob: -14.625007629394531
    5. 'i' → logprob: -15.125007629394531
    6. '(i' → logprob: -15.375007629394531
    7. ' [' → logprob: -15.625007629394531
    8. '[I' → logprob: -17.25000762939453
    9. '```' → logprob: -18.12500762939453
    10. '[A' → logprob: -18.62500762939453

Token 339: ']' (ID: 60)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.3860127925872803
    2. ')' → logprob: -1.5110127925872803
    3. 'à' → logprob: -2.0110127925872803
    4. ']' → logprob: -2.1360127925872803
    5. 'sum' → logprob: -2.3860127925872803
    6. '   ' → logprob: -3.0110127925872803
    7. ',' → logprob: -3.0110127925872803
    8. '       ' → logprob: -3.0110127925872803
    9. ' au' → logprob: -4.761013031005859
    10. '),' → logprob: -4.886013031005859

Token 340: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.858677864074707
    2. 'sum' → logprob: -0.983677864074707
    3. ' à' → logprob: -2.233677864074707
    4. 'à' → logprob: -2.483677864074707
    5. ' sum' → logprob: -5.733677864074707
    6. 'to' → logprob: -5.858677864074707
    7. ' to' → logprob: -6.358677864074707
    8. '   ' → logprob: -6.733677864074707
    9. '           ' → logprob: -6.983677864074707
    10. ',' → logprob: -7.483677864074707

Token 341: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.05495563521981239
    2. ' sum' → logprob: -2.9299557209014893
    3. 'la' → logprob: -10.30495548248291
    4. ' la' → logprob: -10.42995548248291
    5. '	sum' → logprob: -13.05495548248291
    6. ' ' → logprob: -13.17995548248291
    7. 's' → logprob: -13.67995548248291
    8. 'l' → logprob: -14.17995548248291
    9. '(sum' → logprob: -14.30495548248291
    10. ' ' → logprob: -14.30495548248291

Token 342: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008801998570561409
    2. 'sum' → logprob: -4.7588019371032715
    3. ',' → logprob: -9.38380241394043
    4. '   ' → logprob: -10.38380241394043
    5. ' sum' → logprob: -10.38380241394043
    6. '
' → logprob: -10.63380241394043
    7. '.' → logprob: -12.13380241394043
    8. '           ' → logprob: -12.88380241394043
    9. '      ' → logprob: -13.75880241394043
    10. '.sum' → logprob: -14.38380241394043

Token 343: 'p' (ID: 79)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.14372853934764862
    2. '       ' → logprob: -2.643728494644165
    3. ' sum' → logprob: -2.768728494644165
    4. ')' → logprob: -11.518728256225586
    5. '   ' → logprob: -11.518728256225586
    6. '	sum' → logprob: -12.268728256225586
    7. '
' → logprob: -12.643728256225586
    8. '           ' → logprob: -12.893728256225586
    9. '.sum' → logprob: -13.393728256225586
    10. ',' → logprob: -14.143728256225586

Token 344: 'uis' (ID: 4560)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.025414172559976578
    2. ' sum' → logprob: -4.150413990020752
    3. '   ' → logprob: -5.525413990020752
    4. '       ' → logprob: -5.650413990020752
    5. 'uis' → logprob: -7.400413990020752
    6. 'our' → logprob: -7.400413990020752
    7. '#' → logprob: -9.02541446685791
    8. '
' → logprob: -9.15041446685791
    9. 'u' → logprob: -9.90041446685791
    10. '           ' → logprob: -10.40041446685791

Token 345: 'qu' (ID: 351)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09142701327800751
    2. ' sum' → logprob: -2.4664270877838135
    3. '   ' → logprob: -6.841426849365234
    4. ')' → logprob: -7.216426849365234
    5. '       ' → logprob: -8.466426849365234
    6. '    ' → logprob: -9.841426849365234
    7. '
' → logprob: -9.841426849365234
    8. '#' → logprob: -10.216426849365234
    9. 'continue' → logprob: -10.466426849365234
    10. '	sum' → logprob: -10.466426849365234

Token 346: ''on' (ID: 25812)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.1463876962661743
    2. ' sum' → logprob: -1.3963876962661743
    3. 'A' → logprob: -1.5213876962661743
    4. 'x' → logprob: -2.1463875770568848
    5. ' A' → logprob: -2.8963875770568848
    6. ' x' → logprob: -4.521387577056885
    7. '   ' → logprob: -5.396387577056885
    8. 'c' → logprob: -5.396387577056885
    9. ' c' → logprob: -5.646387577056885
    10. 'on' → logprob: -6.146387577056885

Token 347: ' ne' (ID: 453)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.56159508228302
    2. 'n' → logprob: -1.81159508228302
    3. 'aj' → logprob: -1.93659508228302
    4. ' ne' → logprob: -2.9365949630737305
    5. 'pe' → logprob: -3.5615949630737305
    6. 've' → logprob: -5.1865949630737305
    7. ' n' → logprob: -5.1865949630737305
    8. '#' → logprob: -5.1865949630737305
    9. 'do' → logprob: -5.4365949630737305
    10. ' ajoute' → logprob: -5.5615949630737305

Token 348: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.06651448458433151
    2. 'aj' → logprob: -3.191514492034912
    3. ' peut' → logprob: -4.066514492034912
    4. 'a' → logprob: -6.066514492034912
    5. 'add' → logprob: -7.066514492034912
    6. 'ne' → logprob: -7.316514492034912
    7. 'pas' → logprob: -7.691514492034912
    8. 'do' → logprob: -8.191514015197754
    9. 'p' → logprob: -8.816514015197754
    10. ' ajoute' → logprob: -8.816514015197754

Token 349: ' donner' (ID: 32394)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.9008333086967468
    2. 'aj' → logprob: -1.1508333683013916
    3. ' pas' → logprob: -1.4008333683013916
    4. ' ajouter' → logprob: -4.0258331298828125
    5. 'plus' → logprob: -5.6508331298828125
    6. ' plus' → logprob: -5.6508331298828125
    7. 'r' → logprob: -6.6508331298828125
    8. ' rien' → logprob: -6.9008331298828125
    9. 'add' → logprob: -7.0258331298828125
    10. '#' → logprob: -7.6508331298828125

Token 350: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6826320886611938
    2. 'que' → logprob: -0.9326320886611938
    3. ' plus' → logprob: -2.9326319694519043
    4. 'plus' → logprob: -3.4326319694519043
    5. 'A' → logprob: -4.307631969451904
    6. 'tout' → logprob: -7.182631969451904
    7. ' tout' → logprob: -8.307632446289062
    8. '```' → logprob: -8.807632446289062
    9. ' ' → logprob: -9.182632446289062
    10. ' A' → logprob: -9.307632446289062

Token 351: ' tout' (ID: 5501)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.7895117998123169
    2. ' ce' → logprob: -0.7895117998123169
    3. 'A' → logprob: -2.6645116806030273
    4. 'que' → logprob: -4.164511680603027
    5. ' que' → logprob: -5.664511680603027
    6. 'la' → logprob: -6.664511680603027
    7. ' autant' → logprob: -7.289511680603027
    8. ' A' → logprob: -7.789511680603027
    9. ' la' → logprob: -8.414511680603027
    10. 'tout' → logprob: -8.664511680603027

Token 352: ' ce' (ID: 2357)
  Prédit: ' ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.3683415651321411
    2. 'A' → logprob: -1.6183415651321411
    3. ' A' → logprob: -2.2433414459228516
    4. 'ce' → logprob: -6.743341445922852
    5. 'l' → logprob: -6.868341445922852
    6. ' l' → logprob: -6.993341445922852
    7. ' ' → logprob: -7.618341445922852
    8. '	A' → logprob: -10.743341445922852
    9. ' la' → logprob: -10.993341445922852
    10. 'la' → logprob: -11.118341445922852

Token 353: ' qu' (ID: 474)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07278706878423691
    2. ' A' → logprob: -3.572787046432495
    3. ' ce' → logprob: -3.822787046432495
    4. ' que' → logprob: -4.322787284851074
    5. 'ce' → logprob: -6.322787284851074
    6. 'qui' → logprob: -6.822787284851074
    7. ' qui' → logprob: -6.947787284851074
    8. 'l' → logprob: -7.197787284851074
    9. 'que' → logprob: -7.572787284851074
    10. '#' → logprob: -7.697787284851074

Token 354: ''on' (ID: 25812)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5199622511863708
    2. ' ce' → logprob: -1.1449623107910156
    3. ' A' → logprob: -2.7699623107910156
    4. 'ce' → logprob: -4.019962310791016
    5. 'a' → logprob: -6.519962310791016
    6. ' ' → logprob: -6.769962310791016
    7. 'l' → logprob: -7.394962310791016
    8. '   ' → logprob: -7.394962310791016
    9. '  ' → logprob: -7.519962310791016
    10. 'qui' → logprob: -8.019962310791016

Token 355: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24364136159420013
    2. ' a' → logprob: -1.6186413764953613
    3. ' possède' → logprob: -5.118641376495361
    4. 'A' → logprob: -5.243641376495361
    5. 'poss' → logprob: -5.618641376495361
    6. ' A' → logprob: -6.368641376495361
    7. ' peut' → logprob: -7.368641376495361
    8. 'pe' → logprob: -8.618640899658203
    9. ' poss' → logprob: -8.743640899658203
    10. 'à' → logprob: -9.118640899658203

Token 356: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29148179292678833
    2. ').' → logprob: -2.7914817333221436
    3. ',' → logprob: -2.9164817333221436
    4. ' à' → logprob: -3.0414817333221436
    5. '),' → logprob: -3.0414817333221436
    6. '   ' → logprob: -3.9164817333221436
    7. ' )' → logprob: -4.291481971740723
    8. ')
' → logprob: -6.541481971740723
    9. ' ),' → logprob: -6.666481971740723
    10. 'A' → logprob: -7.166481971740723

Token 357: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.34913209080696106
    2. ' A' → logprob: -1.2241320610046387
    3. ' la' → logprob: -8.599132537841797
    4. 'l' → logprob: -8.849132537841797
    5. ' ' → logprob: -9.099132537841797
    6. 'la' → logprob: -9.349132537841797
    7. ')' → logprob: -9.974132537841797
    8. 'a' → logprob: -10.099132537841797
    9. ' l' → logprob: -10.349132537841797
    10. '  ' → logprob: -12.099132537841797

Token 358: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00040004486800171435
    2. ')' → logprob: -8.375399589538574
    3. '   ' → logprob: -9.250399589538574
    4. '[' → logprob: -10.250399589538574
    5. '),' → logprob: -10.875399589538574
    6. 'i' → logprob: -12.500399589538574
    7. '[I' → logprob: -12.875399589538574
    8. ' [' → logprob: -13.375399589538574
    9. ',' → logprob: -13.625399589538574
    10. ').' → logprob: -13.875399589538574

Token 359: ']).
' (ID: 135644)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032062917947769165
    2. ')
' → logprob: -4.907063007354736
    3. '   ' → logprob: -5.157063007354736
    4. '):' → logprob: -5.157063007354736
    5. ').' → logprob: -5.407063007354736
    6. '),' → logprob: -5.532063007354736
    7. '):
' → logprob: -5.907063007354736
    8. '):

' → logprob: -7.907063007354736
    9. ' )' → logprob: -8.282062530517578
    10. ',' → logprob: -8.282062530517578

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007553085451945662
    2. 'sum' → logprob: -7.250755310058594
    3. '   ' → logprob: -10.250755310058594
    4. ' sum' → logprob: -12.000755310058594
    5. '```' → logprob: -12.875755310058594
    6. '           ' → logprob: -14.125755310058594
    7. ',' → logprob: -16.125755310058594
    8. '      ' → logprob: -16.125755310058594
    9. '     ' → logprob: -16.875755310058594
    10. '	' → logprob: -16.875755310058594

Token 361: ' sum' (ID: 4215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6036552786827087
    2. 'sum' (adapté à ' sum') → logprob: -0.8536552786827087
    3. ' sum' → logprob: -3.6036553382873535
    4. '   ' → logprob: -9.228654861450195
    5. ' ' → logprob: -12.478654861450195
    6. '	sum' → logprob: -13.103654861450195
    7. '           ' → logprob: -13.228654861450195
    8. '      ' → logprob: -13.353654861450195
    9. '     ' → logprob: -13.978654861450195
    10. '        ' → logprob: -14.353654861450195

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18421940505504608
    2. '=' → logprob: -1.8092193603515625
    3. ' +=' → logprob: -5.5592193603515625
    4. '+=' → logprob: -7.6842193603515625
    5. '+' → logprob: -9.684219360351562
    6. ' +' → logprob: -9.809219360351562
    7. '   ' → logprob: -10.809219360351562
    8. ' ' → logprob: -11.184219360351562
    9. ')' → logprob: -14.684219360351562
    10. '=sum' → logprob: -15.184219360351562

Token 363: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6931501626968384
    2. 'sum' → logprob: -0.6931501626968384
    3. '	sum' → logprob: -13.318150520324707
    4. ' ' → logprob: -14.443150520324707
    5. 's' → logprob: -15.818150520324707
    6. ' suma' → logprob: -15.943150520324707
    7. '(sum' → logprob: -16.19314956665039
    8. '.sum' → logprob: -16.69314956665039
    9. '_sum' → logprob: -16.81814956665039
    10. ' ' → logprob: -16.81814956665039

Token 364: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602286994457245
    2. '+' → logprob: -1.9102287292480469
    3. ' ' → logprob: -12.910228729248047
    4. ' plus' → logprob: -13.535228729248047
    5. '   ' → logprob: -16.035228729248047
    6. ' ' → logprob: -16.160228729248047
    7. 'sum' → logprob: -16.285228729248047
    8. '＋' → logprob: -16.910228729248047
    9. '+s' → logprob: -17.160228729248047
    10. ' +=' → logprob: -17.160228729248047

Token 365: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.061969365924596786
    2. ' A' → logprob: -2.81196928024292
    3. ' ' → logprob: -13.936969757080078
    4. '   ' → logprob: -14.936969757080078
    5. '	A' → logprob: -14.936969757080078
    6. 'a' → logprob: -16.686969757080078
    7. '(A' → logprob: -17.561969757080078
    8. '  ' → logprob: -17.561969757080078
    9. ' ' → logprob: -17.686969757080078
    10. '0' → logprob: -18.311969757080078

Token 366: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.375004768371582
    3. '[I' → logprob: -16.500003814697266
    4. ' [' → logprob: -17.250003814697266
    5. 'i' → logprob: -17.250003814697266
    6. '[
' → logprob: -18.375003814697266
    7. '   ' → logprob: -18.750003814697266
    8. '[int' → logprob: -18.875003814697266
    9. '```' → logprob: -20.000003814697266
    10. '(i' → logprob: -20.250003814697266

Token 367: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055848658084869385
    2. '<|end|>' → logprob: -3.1808485984802246
    3. ']' → logprob: -4.680848598480225
    4. '   ' → logprob: -6.430848598480225
    5. '}' → logprob: -7.180848598480225
    6. '<|end|>' → logprob: -7.805848598480225
    7. '
' → logprob: -7.930848598480225
    8. '```' → logprob: -9.055849075317383
    9. ')
' → logprob: -9.180849075317383
    10. '+' → logprob: -10.430849075317383

Token 368: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.468770831823349
    2. '   ' → logprob: -1.9687708616256714
    3. '       ' → logprob: -1.9687708616256714
    4. '#' (adapté à ' #') → logprob: -3.593770742416382
    5. 'x' → logprob: -3.968770742416382
    6. '+' → logprob: -4.468770980834961
    7. 'break' → logprob: -5.343770980834961
    8. 'diff' → logprob: -5.718770980834961
    9. ' ' → logprob: -5.843770980834961
    10. '<|end|>' → logprob: -5.968770980834961

Token 370: ' Sou' (ID: 17228)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09084566682577133
    2. '#' → logprob: -2.7158455848693848
    3. 'break' → logprob: -4.840845584869385
    4. ' sum' → logprob: -5.340845584869385
    5. 'x' → logprob: -5.590845584869385
    6. '       ' → logprob: -6.340845584869385
    7. 'continue' → logprob: -7.215845584869385
    8. ' #' → logprob: -7.965845584869385
    9. '   ' → logprob: -8.090846061706543
    10. ' break' → logprob: -8.340846061706543

Token 371: 'stra' (ID: 14867)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02955213561654091
    2. 'mettre' → logprob: -5.279551982879639
    3. 'met' → logprob: -5.529551982879639
    4. 'stra' → logprob: -5.529551982879639
    5. 'r' → logprob: -6.029551982879639
    6. 'mm' → logprob: -6.029551982879639
    7. '#' → logprob: -6.029551982879639
    8. 'p' → logprob: -6.529551982879639
    9. 'mett' → logprob: -6.529551982879639
    10. 'stract' → logprob: -7.029551982879639

Token 372: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.4741026759147644
    2. 'ire' → logprob: -1.3491027355194092
    3. 'it' → logprob: -2.599102735519409
    4. 't' → logprob: -4.72410249710083
    5. 'is' → logprob: -5.09910249710083
    6. '   ' → logprob: -5.72410249710083
    7. 're' → logprob: -5.97410249710083
    8. 'ction' → logprob: -5.97410249710083
    9. 'cte' → logprob: -5.97410249710083
    10. '       ' → logprob: -6.22410249710083

Token 373: ' A' (ID: 355)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15495535731315613
    2. ' x' → logprob: -2.0299553871154785
    3. '1' → logprob: -5.2799553871154785
    4. 'B' → logprob: -5.4049553871154785
    5. 'A' → logprob: -7.2799553871154785
    6. ' (' → logprob: -7.4049553871154785
    7. ' B' → logprob: -7.9049553871154785
    8. ' ' → logprob: -8.15495491027832
    9. '(' → logprob: -8.27995491027832
    10. '(x' → logprob: -8.65495491027832

Token 374: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.37500286102295
    3. 'i' → logprob: -14.00000286102295
    4. '[I' → logprob: -14.62500286102295
    5. '(i' → logprob: -16.875003814697266
    6. '[j' → logprob: -17.375003814697266
    7. ' [' → logprob: -18.000003814697266
    8. '[u' → logprob: -18.500003814697266
    9. '```' → logprob: -18.500003814697266
    10. '[ii' → logprob: -18.500003814697266

Token 375: ']' (ID: 60)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.18091103434562683
    2. ']' → logprob: -2.430911064147949
    3. '<|end|>' → logprob: -3.555911064147949
    4. '       ' → logprob: -4.305911064147949
    5. ' from' → logprob: -4.305911064147949
    6. ')' → logprob: -4.680911064147949
    7. '[' → logprob: -6.180911064147949
    8. '[i' → logprob: -6.555911064147949
    9. ' ' → logprob: -6.930911064147949
    10. '   ' → logprob: -7.180911064147949

Token 376: ' à' (ID: 1221)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04281475767493248
    2. 'de' → logprob: -3.7928147315979004
    3. ' from' → logprob: -4.4178147315979
    4. '+' → logprob: -5.9178147315979
    5. ' de' → logprob: -6.4178147315979
    6. '       ' → logprob: -7.7928147315979
    7. ' +' → logprob: -8.292815208435059
    8. 'to' → logprob: -8.417815208435059
    9. 'des' → logprob: -8.417815208435059
    10. ' =' → logprob: -8.417815208435059

Token 377: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.013290578499436378
    2. ' B' → logprob: -4.3882904052734375
    3. 'x' → logprob: -7.2632904052734375
    4. ' x' → logprob: -10.888290405273438
    5. 'sum' → logprob: -10.888290405273438
    6. ' ' → logprob: -11.138290405273438
    7. '(B' → logprob: -11.513290405273438
    8. '(' → logprob: -12.888290405273438
    9. ' (' → logprob: -13.013290405273438
    10. '	B' → logprob: -13.388290405273438

Token 378: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.375004768371582
    3. ' [' → logprob: -16.000003814697266
    4. '[I' → logprob: -16.500003814697266
    5. '[j' → logprob: -17.000003814697266
    6. 'i' → logprob: -17.125003814697266
    7. '```' → logprob: -17.375003814697266
    8. '   ' → logprob: -17.500003814697266
    9. 's' → logprob: -18.000003814697266
    10. '       ' → logprob: -19.000003814697266

Token 379: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4229574203491211
    2. '       ' → logprob: -1.172957420349121
    3. '[i' → logprob: -3.672957420349121
    4. ')' → logprob: -5.547957420349121
    5. ' ]' → logprob: -6.672957420349121
    6. '   ' → logprob: -6.922957420349121
    7. '<|end|>' → logprob: -7.297957420349121
    8. '])' → logprob: -7.922957420349121
    9. '        ' → logprob: -8.172957420349121
    10. '],' → logprob: -8.297957420349121

Token 380: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14853908121585846
    2. ' =' → logprob: -3.0235390663146973
    3. 'B' → logprob: -3.5235390663146973
    4. '=' → logprob: -3.6485390663146973
    5. '[i' → logprob: -4.898539066314697
    6. ' -=' → logprob: -5.023539066314697
    7. ' -' → logprob: -5.273539066314697
    8. '-' → logprob: -5.648539066314697
    9. '   ' → logprob: -5.773539066314697
    10. ' B' → logprob: -6.148539066314697

Token 381: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2212291657924652
    2. ' B' → logprob: -1.7212291955947876
    3. '       ' → logprob: -4.096229076385498
    4. 'b' → logprob: -6.346229076385498
    5. '           ' → logprob: -7.846229076385498
    6. '   ' → logprob: -7.971229076385498
    7. ' ' → logprob: -9.346229553222656
    8. '	B' → logprob: -9.596229553222656
    9. '        ' → logprob: -9.846229553222656
    10. 'rest' → logprob: -10.346229553222656

Token 382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7835754988482222e-05
    2. '[' → logprob: -11.875018119812012
    3. 'i' → logprob: -12.125018119812012
    4. '=' → logprob: -13.000018119812012
    5. ']' → logprob: -13.625018119812012
    6. '[I' → logprob: -14.625018119812012
    7. ' =' → logprob: -15.000018119812012
    8. '   ' → logprob: -15.125018119812012
    9. '[j' → logprob: -16.125017166137695
    10. '       ' → logprob: -16.125017166137695

Token 383: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019001978216692805
    2. ']=' → logprob: -6.6269001960754395
    3. '[i' → logprob: -8.001900672912598
    4. ']-' → logprob: -9.376900672912598
    5. '])' → logprob: -9.626900672912598
    6. ')' → logprob: -10.251900672912598
    7. '-' → logprob: -11.001900672912598
    8. ' ]' → logprob: -11.501900672912598
    9. '   ' → logprob: -11.501900672912598
    10. '=' → logprob: -12.626900672912598

Token 384: ' devient' (ID: 63488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0716094896197319
    2. ' =' → logprob: -2.6966094970703125
    3. '-=' → logprob: -6.9466094970703125
    4. ' -=' → logprob: -7.4466094970703125
    5. '-' → logprob: -10.071609497070312
    6. '=B' → logprob: -10.821609497070312
    7. ' ' → logprob: -11.071609497070312
    8. '   ' → logprob: -11.071609497070312
    9. ')' → logprob: -11.446609497070312
    10. '[i' → logprob: -12.696609497070312

Token 385: ' le' (ID: 505)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.018156031146645546
    2. ' B' → logprob: -4.018156051635742
    3. 'b' → logprob: -13.143156051635742
    4. ' (' → logprob: -13.268156051635742
    5. '(B' → logprob: -14.143156051635742
    6. '   ' → logprob: -15.268156051635742
    7. '=B' → logprob: -15.393156051635742
    8. '(' → logprob: -15.518156051635742
    9. ')' → logprob: -15.893156051635742
    10. '	B' → logprob: -16.018156051635742

Token 386: ' besoin' (ID: 27703)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01710342988371849
    2. ' B' → logprob: -4.26710319519043
    3. 'b' → logprob: -6.14210319519043
    4. ' reste' → logprob: -8.64210319519043
    5. 'diff' → logprob: -8.89210319519043
    6. 'difference' → logprob: -9.26710319519043
    7. 'reste' → logprob: -9.89210319519043
    8. 's' → logprob: -10.14210319519043
    9. 'rest' → logprob: -10.26710319519043
    10. 'nombre' → logprob: -10.39210319519043

Token 387: ' restant' (ID: 172358)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13916613161563873
    2. '[i' → logprob: -2.2641661167144775
    3. '-' → logprob: -4.139166355133057
    4. 's' → logprob: -5.139166355133057
    5. '[' → logprob: -7.139166355133057
    6. 'B' → logprob: -7.389166355133057
    7. ' minus' → logprob: -7.514166355133057
    8. ' ' → logprob: -7.889166355133057
    9. ' restant' → logprob: -8.014165878295898
    10. 'moins' → logprob: -8.014165878295898

Token 388: ' après' (ID: 16460)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04237551614642143
    2. '-' → logprob: -3.4173755645751953
    3. ')' → logprob: -5.417375564575195
    4. '   ' → logprob: -6.792375564575195
    5. ' ' → logprob: -7.292375564575195
    6. '[i' → logprob: -7.542375564575195
    7. ' =' → logprob: -8.292375564575195
    8. 'B' → logprob: -8.417375564575195
    9. ' )' → logprob: -8.417375564575195
    10. ',' → logprob: -8.792375564575195

Token 389: ' avoir' (ID: 16595)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01281098835170269
    2. ' A' → logprob: -4.762811183929443
    3. 'l' → logprob: -6.762811183929443
    4. 'avoir' → logprob: -6.762811183929443
    5. 'la' → logprob: -7.137811183929443
    6. ' avoir' → logprob: -8.387810707092285
    7. '   ' → logprob: -8.887810707092285
    8. ' la' → logprob: -9.137810707092285
    9. 's' → logprob: -9.637810707092285
    10. '#' → logprob: -9.637810707092285

Token 390: ' utilisé' (ID: 53138)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7166303992271423
    2. 'com' → logprob: -1.341630458831787
    3. '#' → logprob: -3.591630458831787
    4. 'd' → logprob: -3.716630458831787
    5. 'rem' → logprob: -3.841630458831787
    6. 'util' → logprob: -3.966630458831787
    7. ' satisfait' → logprob: -4.091630458831787
    8. 'été' → logprob: -4.341630458831787
    9. 'f' → logprob: -4.466630458831787
    10. 'ful' → logprob: -4.466630458831787

Token 391: ' tout' (ID: 5501)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2022119164466858
    2. ' A' → logprob: -1.702211856842041
    3. 'l' → logprob: -8.0772123336792
    4. '	A' → logprob: -8.3272123336792
    5. ' ' → logprob: -9.7022123336792
    6. ' ' → logprob: -10.3272123336792
    7. ' l' → logprob: -10.3272123336792
    8. ' la' → logprob: -10.5772123336792
    9. 'tout' → logprob: -10.7022123336792
    10. 'la' → logprob: -11.0772123336792

Token 392: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.23171859979629517
    2. ' A' → logprob: -1.7317185401916504
    3. ' ' → logprob: -4.60671854019165
    4. '   ' → logprob: -4.98171854019165
    5. ' ce' → logprob: -5.48171854019165
    6. 'l' → logprob: -5.73171854019165
    7. '	A' → logprob: -5.73171854019165
    8. 'ce' → logprob: -7.60671854019165
    9. ' l' → logprob: -7.98171854019165
    10. '       ' → logprob: -8.356719017028809

Token 393: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3663626305060461e-05
    2. '[' → logprob: -11.75001335144043
    3. ']' → logprob: -13.00001335144043
    4. '   ' → logprob: -13.62501335144043
    5. '][' → logprob: -14.37501335144043
    6. 'i' → logprob: -14.50001335144043
    7. '[I' → logprob: -14.62501335144043
    8. '[j' → logprob: -15.25001335144043
    9. ' [' → logprob: -16.50001335144043
    10. '	' → logprob: -16.62501335144043

Token 394: ']).
' (ID: 135644)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15011243522167206
    2. '])' → logprob: -2.2751123905181885
    3. ']' → logprob: -3.7751123905181885
    4. '       ' → logprob: -5.400112628936768
    5. ')
' → logprob: -5.400112628936768
    6. '])
' → logprob: -6.525112628936768
    7. '   ' → logprob: -6.900112628936768
    8. ').' → logprob: -7.775112628936768
    9. '),' → logprob: -8.02511215209961
    10. ']),' → logprob: -8.02511215209961

Token 395: '       ' (ID: 309)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.6941510438919067
    2. 'B' → logprob: -0.8191510438919067
    3. '       ' → logprob: -3.819150924682617
    4. ' =' → logprob: -4.069150924682617
    5. '   ' → logprob: -4.194150924682617
    6. '        
' → logprob: -6.569150924682617
    7. '```' → logprob: -7.194150924682617
    8. '    
' → logprob: -7.319150924682617
    9. '	B' → logprob: -7.319150924682617
    10. ' 
' → logprob: -7.819150924682617

Token 396: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.3522913157939911
    2. ' B' → logprob: -1.2272913455963135
    3. '   ' → logprob: -6.227291107177734
    4. '       ' → logprob: -6.477291107177734
    5. '	B' → logprob: -8.227291107177734
    6. ' ' → logprob: -10.852291107177734
    7. 'b' → logprob: -11.602291107177734
    8. '           ' → logprob: -12.352291107177734
    9. '```' → logprob: -12.352291107177734
    10. '    ' → logprob: -12.352291107177734

Token 397: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.500003814697266
    3. '[I' → logprob: -16.875003814697266
    4. 'i' → logprob: -18.125003814697266
    5. '[j' → logprob: -18.625003814697266
    6. '```' → logprob: -19.250003814697266
    7. '[index' → logprob: -19.500003814697266
    8. '[idx' → logprob: -19.875003814697266
    9. '[int' → logprob: -19.875003814697266
    10. ' [' → logprob: -20.250003814697266

Token 398: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011253333650529385
    2. ']=' → logprob: -7.001125335693359
    3. '[i' → logprob: -8.50112533569336
    4. 'i' → logprob: -12.87612533569336
    5. '"]' → logprob: -13.37612533569336
    6. '']' → logprob: -13.37612533569336
    7. '=' → logprob: -13.75112533569336
    8. '[' → logprob: -14.00112533569336
    9. '(i' → logprob: -14.25112533569336
    10. ' ]' → logprob: -14.37612533569336

Token 399: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004897496663033962
    2. ' =' → logprob: -5.379897594451904
    3. '-=' → logprob: -8.754897117614746
    4. ' -=' → logprob: -9.754897117614746
    5. '=B' → logprob: -10.379897117614746
    6. '[' → logprob: -11.004897117614746
    7. '-' → logprob: -12.629897117614746
    8. ']=' → logprob: -13.129897117614746
    9. '[i' → logprob: -13.129897117614746
    10. '=i' → logprob: -13.879897117614746

Token 400: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0004882152716163546
    2. ' B' → logprob: -7.62548828125
    3. 'b' → logprob: -15.87548828125
    4. '(B' → logprob: -17.62548828125
    5. '	B' → logprob: -18.00048828125
    6. '   ' → logprob: -19.00048828125
    7. '_B' → logprob: -19.50048828125
    8. '#' → logprob: -20.00048828125
    9. '>B' → logprob: -20.25048828125
    10. ' (' → logprob: -20.62548828125

Token 401: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.630610641877865e-06
    2. 'i' → logprob: -12.250006675720215
    3. '[' → logprob: -14.250006675720215
    4. 'B' → logprob: -14.375006675720215
    5. '(i' → logprob: -15.250006675720215
    6. ' [' → logprob: -16.7500057220459
    7. '   ' → logprob: -16.7500057220459
    8. '[
' → logprob: -17.0000057220459
    9. '{i' → logprob: -17.7500057220459
    10. '
' → logprob: -18.0000057220459

Token 402: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007136831991374493
    2. '-' → logprob: -5.757136821746826
    3. '[i' → logprob: -6.257136821746826
    4. ']-' → logprob: -6.257136821746826
    5. ' -' → logprob: -9.257137298583984
    6. '[' → logprob: -11.132137298583984
    7. 'i' → logprob: -12.257137298583984
    8. '(i' → logprob: -14.382137298583984
    9. ')' → logprob: -14.507137298583984
    10. '']' → logprob: -14.882137298583984

Token 403: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006725437473505735
    2. ' -' → logprob: -5.006725311279297
    3. '[i' → logprob: -12.256725311279297
    4. '-i' → logprob: -12.506725311279297
    5. '-B' → logprob: -13.881725311279297
    6. '[' → logprob: -15.131725311279297
    7. ' ' → logprob: -16.131725311279297
    8. '-A' → logprob: -16.631725311279297
    9. '−' → logprob: -17.131725311279297
    10. '-
' → logprob: -17.631725311279297

Token 404: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003357006062287837
    2. ' A' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.875335693359375
    4. '	A' → logprob: -16.875335693359375
    5. ' ' → logprob: -20.875335693359375
    6. '  ' → logprob: -21.625335693359375
    7. '       ' → logprob: -22.875335693359375
    8. '    ' → logprob: -23.250335693359375
    9. '_A' → logprob: -23.375335693359375
    10. 'a' → logprob: -23.750335693359375

Token 405: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.625001907348633
    3. 'i' → logprob: -14.625001907348633
    4. '[I' → logprob: -18.000001907348633
    5. ' [' → logprob: -19.875001907348633
    6. ' i' → logprob: -20.125001907348633
    7. '```' → logprob: -20.125001907348633
    8. '(i' → logprob: -20.625001907348633
    9. '	i' → logprob: -20.625001907348633
    10. '_i' → logprob: -21.875001907348633

Token 406: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007442336063832045
    2. ']' → logprob: -7.875744342803955
    3. '<|end|>' → logprob: -8.625743865966797
    4. '   ' → logprob: -8.875743865966797
    5. ' )' → logprob: -11.375743865966797
    6. ')
' → logprob: -11.875743865966797
    7. '}' → logprob: -11.875743865966797
    8. '()' → logprob: -12.625743865966797
    9. '])' → logprob: -12.875743865966797
    10. '')' → logprob: -13.250743865966797

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11867427825927734
    2. '   ' → logprob: -3.1186742782592773
    3. 'for' → logprob: -3.3686742782592773
    4. ' for' → logprob: -3.7436742782592773
    5. 'sum' → logprob: -5.243674278259277
    6. '```' → logprob: -6.743674278259277
    7. '	' → logprob: -7.243674278259277
    8. '	for' → logprob: -8.118674278259277
    9. '#' → logprob: -8.368674278259277
    10. '	   ' → logprob: -8.618674278259277

Token 408: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3684987723827362
    2. ' for' → logprob: -2.6184988021850586
    3. 'for' → logprob: -2.6184988021850586
    4. 'j' → logprob: -2.8684988021850586
    5. '```' → logprob: -3.2434988021850586
    6. '       ' → logprob: -3.6184988021850586
    7. 'sum' → logprob: -4.868498802185059
    8. '#' (adapté à ' #') → logprob: -5.118498802185059
    9. ' j' → logprob: -5.618498802185059
    10. '``' → logprob: -5.618498802185059

Token 409: ' On' (ID: 2160)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6890896558761597
    2. 'for' → logprob: -1.8140896558761597
    3. 'sum' → logprob: -2.064089775085449
    4. '#' → logprob: -2.189089775085449
    5. 'if' → logprob: -3.189089775085449
    6. '   ' → logprob: -3.689089775085449
    7. '       ' → logprob: -3.939089775085449
    8. 'while' → logprob: -5.064089775085449
    9. 'next' → logprob: -6.314089775085449
    10. ' j' → logprob: -8.18908977508545

Token 410: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33933353424072266
    2. '#' → logprob: -2.3393335342407227
    3. ' for' → logprob: -2.3393335342407227
    4. 'sum' → logprob: -2.9643335342407227
    5. '=' → logprob: -3.9643335342407227
    6. ' =' → logprob: -5.339333534240723
    7. 'if' → logprob: -5.839333534240723
    8. ' #' → logprob: -5.839333534240723
    9. 'j' → logprob: -5.839333534240723
    10. ' sum' → logprob: -6.339333534240723

Token 411: ' maintenant' (ID: 35735)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6246926784515381
    2. 'j' → logprob: -1.749692678451538
    3. '#' → logprob: -2.499692678451538
    4. 'i' → logprob: -2.874692678451538
    5. ' for' → logprob: -3.124692678451538
    6. 'chercher' → logprob: -3.874692678451538
    7. ' j' → logprob: -4.374692916870117
    8. 'reg' → logprob: -4.499692916870117
    9. 'sum' → logprob: -4.499692916870117
    10. 'contin' → logprob: -4.749692916870117

Token 412: ' regarder' (ID: 73220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18290479481220245
    2. 'j' → logprob: -2.1829047203063965
    3. 'sum' → logprob: -3.4329047203063965
    4. ' for' → logprob: -4.5579047203063965
    5. '#' → logprob: -5.0579047203063965
    6. 'i' → logprob: -6.5579047203063965
    7. 'if' → logprob: -7.5579047203063965
    8. 'pass' → logprob: -7.6829047203063965
    9. ' j' → logprob: -7.6829047203063965
    10. '   ' → logprob: -7.9329047203063965

Token 413: ' le' (ID: 505)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06622711569070816
    2. 'i' → logprob: -3.5662271976470947
    3. '   ' → logprob: -4.566226959228516
    4. 'if' → logprob: -4.691226959228516
    5. 'for' → logprob: -4.816226959228516
    6. ' j' → logprob: -5.441226959228516
    7. '       ' → logprob: -6.316226959228516
    8. 'B' → logprob: -7.691226959228516
    9. ' if' → logprob: -8.066226959228516
    10. '#' → logprob: -8.316226959228516

Token 414: ' prochain' (ID: 52413)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.33627092838287354
    2. 'i' → logprob: -1.4612709283828735
    3. 'for' → logprob: -3.836270809173584
    4. ' j' → logprob: -4.336270809173584
    5. 'B' → logprob: -5.211270809173584
    6. ' i' → logprob: -5.336270809173584
    7. 'if' → logprob: -5.336270809173584
    8. '#' → logprob: -6.586270809173584
    9. ' for' → logprob: -6.961270809173584
    10. ' B' → logprob: -7.586270809173584

Token 415: ' élément' (ID: 99627)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11708898097276688
    2. ' j' → logprob: -2.242089033126831
    3. 'if' → logprob: -6.867088794708252
    4. 'i' → logprob: -6.867088794708252
    5. ' if' → logprob: -7.367088794708252
    6. 'for' → logprob: -7.492088794708252
    7. ' for' → logprob: -8.24208927154541
    8. ' i' → logprob: -8.74208927154541
    9. 's' → logprob: -8.99208927154541
    10. 'index' → logprob: -9.74208927154541

Token 416: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05451761558651924
    2. ' j' → logprob: -3.6795175075531006
    3. '   ' → logprob: -4.92951774597168
    4. ' for' → logprob: -5.42951774597168
    5. ' (' → logprob: -5.55451774597168
    6. ' in' → logprob: -5.67951774597168
    7. ' of' → logprob: -5.80451774597168
    8. 'j' → logprob: -6.67951774597168
    9. ' i' → logprob: -7.42951774597168
    10. 's' → logprob: -7.67951774597168

Token 417: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00031615851912647486
    2. ' B' → logprob: -8.250316619873047
    3. 'A' → logprob: -10.000316619873047
    4. 'la' → logprob: -12.250316619873047
    5. '#' → logprob: -13.375316619873047
    6. 'i' → logprob: -13.875316619873047
    7. 'range' → logprob: -14.125316619873047
    8. 'b' → logprob: -15.125316619873047
    9. 'l' → logprob: -15.375316619873047
    10. ' la' → logprob: -15.500316619873047

Token 418: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.4872048497200012
    2. 'B' → logprob: -1.1122047901153564
    3. 'for' → logprob: -3.7372047901153564
    4. 'A' → logprob: -4.1122050285339355
    5. ' liste' → logprob: -4.9872050285339355
    6. 'list' → logprob: -5.7372050285339355
    7. '#' → logprob: -5.7372050285339355
    8. 'range' → logprob: -6.6122050285339355
    9. 'b' → logprob: -7.7372050285339355
    10. ' B' → logprob: -7.9872050285339355

Token 419: ' A' (ID: 355)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05435290187597275
    2. 'A' → logprob: -3.5543529987335205
    3. ' B' → logprob: -3.8043529987335205
    4. ' A' → logprob: -7.179352760314941
    5. 's' → logprob: -7.679352760314941
    6. 'i' → logprob: -7.929352760314941
    7. 'j' → logprob: -9.179352760314941
    8. ' (' → logprob: -9.554352760314941
    9. '(' → logprob: -10.554352760314941
    10. ' i' → logprob: -10.679352760314941

Token 420: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15668217837810516
    2. '   ' → logprob: -2.281682252883911
    3. ',' → logprob: -4.156682014465332
    4. '[' → logprob: -5.656682014465332
    5. ' for' → logprob: -5.656682014465332
    6. '
' → logprob: -5.781682014465332
    7. '<|end|>' → logprob: -5.781682014465332
    8. '[i' → logprob: -6.281682014465332
    9. '        
' → logprob: -6.531682014465332
    10. ' if' → logprob: -6.531682014465332

Token 421: ' A' (ID: 355)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.255087286233902
    2. '   ' → logprob: -2.380087375640869
    3. 'for' → logprob: -3.005087375640869
    4. 'if' → logprob: -3.255087375640869
    5. 'j' → logprob: -3.630087375640869
    6. ' for' → logprob: -4.755087375640869
    7. ' if' → logprob: -5.630087375640869
    8. 'A' → logprob: -6.255087375640869
    9. 'i' → logprob: -6.505087375640869
    10. ' j' → logprob: -7.130087375640869

Token 422: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004894073354080319
    2. '[(' → logprob: -7.875489234924316
    3. 'i' → logprob: -9.875489234924316
    4. '[' → logprob: -10.625489234924316
    5. '(i' → logprob: -11.500489234924316
    6. '
' → logprob: -12.125489234924316
    7. '[I' → logprob: -13.000489234924316
    8. '[j' → logprob: -13.125489234924316
    9. '[min' → logprob: -13.375489234924316
    10. '   ' → logprob: -13.750489234924316

Token 423: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004636961035430431
    2. ' +' → logprob: -5.379636764526367
    3. '1' → logprob: -11.504636764526367
    4. '+
' → logprob: -13.379636764526367
    5. ']' → logprob: -13.504636764526367
    6. ' ' → logprob: -14.254636764526367
    7. '+]' → logprob: -14.254636764526367
    8. ']+' → logprob: -14.379636764526367
    9. '+i' → logprob: -14.504636764526367
    10. '
' → logprob: -15.129636764526367

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014230141416192055
    2. '+' → logprob: -4.264230251312256
    3. ' +' → logprob: -10.139229774475098
    4. ' ' → logprob: -11.264229774475098
    5. ']' → logprob: -11.889229774475098
    6. '   ' → logprob: -12.014229774475098
    7. ']+' → logprob: -14.139229774475098
    8. '+]' → logprob: -15.389229774475098
    9. '```' → logprob: -15.889229774475098
    10. '  ' → logprob: -16.889230728149414

Token 425: '],
' (ID: 2274)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003128044307231903
    2. '],' → logprob: -6.7531280517578125
    3. ']
' → logprob: -7.5031280517578125
    4. ']+=' → logprob: -7.7531280517578125
    5. ']-' → logprob: -8.128128051757812
    6. ']=' → logprob: -8.378128051757812
    7. ']+' → logprob: -8.753128051757812
    8. ' ]' → logprob: -9.878128051757812
    9. '#' → logprob: -10.003128051757812
    10. ']
' → logprob: -10.253128051757812

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006501020397990942
    2. '   ' → logprob: -5.506501197814941
    3. 'if' → logprob: -6.381501197814941
    4. ' if' → logprob: -8.881501197814941
    5. '	' → logprob: -9.381501197814941
    6. 'sum' → logprob: -9.506501197814941
    7. '	   ' → logprob: -9.631501197814941
    8. '#' → logprob: -9.756501197814941
    9. 'for' → logprob: -9.881501197814941
    10. '        
' → logprob: -10.006501197814941

Token 427: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.835848867893219
    2. 'if' → logprob: -1.2108488082885742
    3. 'A' → logprob: -1.8358488082885742
    4. '#' (adapté à ' #') → logprob: -2.710848808288574
    5. 'while' → logprob: -4.085848808288574
    6. 'i' → logprob: -4.085848808288574
    7. '       ' → logprob: -5.335848808288574
    8. 'j' → logprob: -6.960848808288574
    9. 'for' → logprob: -7.210848808288574
    10. ' if' → logprob: -7.710848808288574

Token 428: ' En' (ID: 2130)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.13692589104175568
    2. 'if' → logprob: -2.5119259357452393
    3. 'sum' → logprob: -3.7619259357452393
    4. '#' → logprob: -4.63692569732666
    5. 'i' → logprob: -4.76192569732666
    6. 'j' → logprob: -6.51192569732666
    7. 'B' → logprob: -7.13692569732666
    8. '       ' → logprob: -7.26192569732666
    9. 'while' → logprob: -7.38692569732666
    10. 'x' → logprob: -7.38692569732666

Token 429: ' recal' (ID: 147248)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.281805157661438
    2. 'aj' → logprob: -1.406805157661438
    3. 'lever' → logprob: -3.0318050384521484
    4. 'for' → logprob: -3.0318050384521484
    5. 'suite' → logprob: -3.0318050384521484
    6. 'augment' → logprob: -3.7818050384521484
    7. 'sum' → logprob: -3.9068050384521484
    8. 'i' → logprob: -3.9068050384521484
    9. 'util' → logprob: -3.9068050384521484
    10. 'continu' → logprob: -3.9068050384521484

Token 430: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.013159996829926968
    2. 'd' → logprob: -5.388160228729248
    3. 'du' → logprob: -5.638160228729248
    4. 'cu' → logprob: -6.763160228729248
    5. 'c' → logprob: -7.138160228729248
    6. 'cup' → logprob: -7.513160228729248
    7. 'dent' → logprob: -7.888160228729248
    8. 'cur' → logprob: -8.51315975189209
    9. 'dic' → logprob: -8.76315975189209
    10. 'cut' → logprob: -8.88815975189209

Token 431: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0010026819072663784
    2. '#' → logprob: -7.751002788543701
    3. 'ating' → logprob: -7.876002788543701
    4. 'er' → logprob: -9.751002311706543
    5. 't' → logprob: -10.376002311706543
    6. 'ation' → logprob: -10.876002311706543
    7. 'ent' → logprob: -11.251002311706543
    8. 'a' → logprob: -11.501002311706543
    9. 'tant' → logprob: -11.751002311706543
    10. 'x' → logprob: -12.126002311706543

Token 432: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3132358193397522
    2. 'B' → logprob: -1.6882357597351074
    3. 'A' → logprob: -3.5632357597351074
    4. 'if' → logprob: -3.6882357597351074
    5. 'sum' → logprob: -4.563235759735107
    6. 'diff' → logprob: -4.938235759735107
    7. 'while' → logprob: -6.313235759735107
    8. 'la' → logprob: -6.438235759735107
    9. '#' → logprob: -6.438235759735107
    10. 'y' → logprob: -6.563235759735107

Token 433: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016040468588471413
    2. '=' → logprob: -4.141040325164795
    3. ' ' → logprob: -13.266040802001953
    4. 'x' → logprob: -13.391040802001953
    5. '=A' → logprob: -14.391040802001953
    6. 's' → logprob: -14.766040802001953
    7. ' +=' → logprob: -15.266040802001953
    8. '	' → logprob: -15.516040802001953
    9. 'next' → logprob: -15.641040802001953
    10. 'A' → logprob: -15.641040802001953

Token 434: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006855320185422897
    2. 'B' → logprob: -5.756855487823486
    3. 'x' → logprob: -6.006855487823486
    4. '=A' → logprob: -7.506855487823486
    5. ' A' → logprob: -8.006855010986328
    6. '=' → logprob: -8.506855010986328
    7. '   ' → logprob: -10.506855010986328
    8. 'N' → logprob: -10.506855010986328
    9. ' =' → logprob: -10.631855010986328
    10. 'next' → logprob: -12.256855010986328

Token 435: ' différence' (ID: 79196)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.034559790045022964
    2. 'B' → logprob: -3.409559726715088
    3. ' A' → logprob: -7.284559726715088
    4. 'x' → logprob: -9.909560203552246
    5. 'sum' → logprob: -9.909560203552246
    6. ' B' → logprob: -10.409560203552246
    7. 'N' → logprob: -11.034560203552246
    8. 'min' → logprob: -11.409560203552246
    9. 'max' → logprob: -11.534560203552246
    10. 'i' → logprob: -11.534560203552246

Token 436: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38911721110343933
    2. '=' → logprob: -1.1391172409057617
    3. '=A' → logprob: -6.639117240905762
    4. 'A' → logprob: -7.639117240905762
    5. ' between' → logprob: -8.764117240905762
    6. ' A' → logprob: -9.139117240905762
    7. 'x' → logprob: -9.264117240905762
    8. '   ' → logprob: -10.764117240905762
    9. 'B' → logprob: -11.139117240905762
    10. 'between' → logprob: -11.389117240905762

Token 437: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03634962812066078
    2. 'B' → logprob: -4.036349773406982
    3. ' A' → logprob: -4.036349773406982
    4. ' B' → logprob: -8.036349296569824
    5. 'x' → logprob: -10.536349296569824
    6. ' ' → logprob: -12.536349296569824
    7. '(A' → logprob: -12.661349296569824
    8. '	A' → logprob: -13.161349296569824
    9. 'next' → logprob: -13.536349296569824
    10. '   ' → logprob: -13.661349296569824

Token 438: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000839642365463078
    2. '[' → logprob: -7.125839710235596
    3. 'i' → logprob: -11.750839233398438
    4. 's' → logprob: -12.250839233398438
    5. ' [' → logprob: -12.250839233398438
    6. '[j' → logprob: -12.875839233398438
    7. '   ' → logprob: -13.000839233398438
    8. '[next' → logprob: -13.125839233398438
    9. '[++' → logprob: -13.375839233398438
    10. '[(' → logprob: -13.875839233398438

Token 439: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015890118665993214
    2. ' +' → logprob: -7.126588821411133
    3. '[i' → logprob: -7.501588821411133
    4. ']' → logprob: -9.626588821411133
    5. '   ' → logprob: -9.751588821411133
    6. '[' → logprob: -10.376588821411133
    7. '+
' → logprob: -10.626588821411133
    8. '+i' → logprob: -10.751588821411133
    9. '+]' → logprob: -12.001588821411133
    10. '[
' → logprob: -12.126588821411133

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016110755677800626
    2. '+' → logprob: -8.875161170959473
    3. ' ' → logprob: -11.125161170959473
    4. ']' → logprob: -12.875161170959473
    5. '   ' → logprob: -14.062661170959473
    6. '
' → logprob: -14.125161170959473
    7. '```' → logprob: -14.500161170959473
    8. ' +' → logprob: -15.250161170959473
    9. ']+' → logprob: -15.562661170959473
    10. '۱' → logprob: -15.875161170959473

Token 441: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.699736475944519
    2. ']' → logprob: -0.699736475944519
    3. '+]' → logprob: -5.824736595153809
    4. '[i' → logprob: -6.199736595153809
    5. ' +' → logprob: -7.449736595153809
    6. ' ]' → logprob: -7.574736595153809
    7. '[' → logprob: -8.574736595153809
    8. '+i' → logprob: -8.824736595153809
    9. '   ' → logprob: -10.199736595153809
    10. '[j' → logprob: -10.699736595153809

Token 442: ' et' (ID: 859)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06989085674285889
    2. '-' → logprob: -3.0698909759521484
    3. ' and' → logprob: -4.069890975952148
    4. 'and' → logprob: -6.069890975952148
    5. ' ' → logprob: -7.194890975952148
    6. ' et' → logprob: -7.944890975952148
    7. '<|end|>' → logprob: -8.944890975952148
    8. '[' → logprob: -9.194890975952148
    9. '+' → logprob: -9.569890975952148
    10. ' и' → logprob: -9.819890975952148

Token 443: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5759592056274414
    2. ' B' → logprob: -0.8259592056274414
    3. ' la' → logprob: -11.325959205627441
    4. 'la' → logprob: -12.950959205627441
    5. 'l' → logprob: -13.075959205627441
    6. ' ' → logprob: -13.950959205627441
    7. ' ce' → logprob: -14.950959205627441
    8. 'le' → logprob: -14.950959205627441
    9. '   ' → logprob: -15.325959205627441
    10. ' cette' → logprob: -15.325959205627441

Token 444: ' nouvelle' (ID: 24562)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.012528604827821255
    2. ' B' → logprob: -4.387528419494629
    3. '   ' → logprob: -12.262528419494629
    4. ' ' → logprob: -13.262528419494629
    5. '  ' → logprob: -13.262528419494629
    6. 'next' → logprob: -13.637528419494629
    7. '[i' → logprob: -13.887528419494629
    8. 'new' → logprob: -14.012528419494629
    9. ' next' → logprob: -14.137528419494629
    10. ' new' → logprob: -14.137528419494629

Token 445: ' valeur' (ID: 41664)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0025156119372695684
    2. ' B' → logprob: -6.00251579284668
    3. 'b' → logprob: -10.75251579284668
    4. '   ' → logprob: -12.62751579284668
    5. ' ' → logprob: -13.12751579284668
    6. 'value' → logprob: -13.50251579284668
    7. 'val' → logprob: -13.50251579284668
    8. ' (' → logprob: -13.62751579284668
    9. '`' → logprob: -13.87751579284668
    10. '	B' → logprob: -13.87751579284668

Token 446: ' de' (ID: 334)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07949893921613693
    2. '(B' → logprob: -3.3294990062713623
    3. ' B' → logprob: -3.4544990062713623
    4. '(' → logprob: -5.829498767852783
    5. ' (' → logprob: -5.954498767852783
    6. ' =' → logprob: -6.579498767852783
    7. '   ' → logprob: -7.454498767852783
    8. ' de' → logprob: -7.954498767852783
    9. ' of' → logprob: -8.204499244689941
    10. '       ' → logprob: -8.204499244689941

Token 447: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.023247340694069862
    2. ' B' → logprob: -3.773247241973877
    3. '   ' → logprob: -13.898247718811035
    4. '	B' → logprob: -15.273247718811035
    5. ' ' → logprob: -15.398247718811035
    6. '```' → logprob: -16.02324676513672
    7. '`' → logprob: -16.27324676513672
    8. ' ' → logprob: -16.64824676513672
    9. 'b' → logprob: -17.14824676513672
    10. '(B' → logprob: -17.39824676513672

Token 448: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006305903079919517
    2. '[' → logprob: -7.3756303787231445
    3. ' [' → logprob: -13.500630378723145
    4. 'i' → logprob: -13.750630378723145
    5. '   ' → logprob: -14.375630378723145
    6. '[j' → logprob: -15.125630378723145
    7. '[++' → logprob: -15.375630378723145
    8. '[
' → logprob: -16.50063133239746
    9. '[I' → logprob: -16.62563133239746
    10. ' i' → logprob: -16.75063133239746

Token 449: '].
' (ID: 49887)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007680446375161409
    2. ']' → logprob: -4.882680416107178
    3. '[' → logprob: -10.507680892944336
    4. '   ' → logprob: -11.382680892944336
    5. '[j' → logprob: -11.882680892944336
    6. '(i' → logprob: -12.007680892944336
    7. 'i' → logprob: -12.007680892944336
    8. ']
' → logprob: -12.132680892944336
    9. '])' → logprob: -12.882680892944336
    10. '],' → logprob: -13.507680892944336

Token 450: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10370468348264694
    2. '       ' → logprob: -2.7287046909332275
    3. 'x' → logprob: -3.6037046909332275
    4. ' x' → logprob: -5.728704452514648
    5. '	x' → logprob: -6.228704452514648
    6. '
' → logprob: -8.728704452514648
    7. '    
' → logprob: -8.978704452514648
    8. ' ' → logprob: -9.353704452514648
    9. '        
' → logprob: -9.853704452514648
    10. '  ' → logprob: -9.978704452514648

Token 451: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.019619079306721687
    2. '   ' → logprob: -4.394618988037109
    3. 'i' → logprob: -5.644618988037109
    4. ' x' → logprob: -6.144618988037109
    5. 'if' → logprob: -6.769618988037109
    6. '       ' → logprob: -9.26961898803711
    7. ' i' → logprob: -10.14461898803711
    8. '	x' → logprob: -10.51961898803711
    9. 'next' → logprob: -11.01961898803711
    10. '
' → logprob: -11.01961898803711

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889022678136826
    2. '=' → logprob: -2.578890323638916
    3. '=A' → logprob: -15.453889846801758
    4. ' ' → logprob: -15.828889846801758
    5. 'x' → logprob: -17.078889846801758
    6. '＝' → logprob: -17.703889846801758
    7. ' =
' → logprob: -18.078889846801758
    8. '=B' → logprob: -18.203889846801758
    9. '   ' → logprob: -18.453889846801758
    10. 'A' → logprob: -18.703889846801758

Token 453: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.061969365924596786
    2. ' A' → logprob: -2.81196928024292
    3. '	A' → logprob: -14.311969757080078
    4. ' ' → logprob: -14.561969757080078
    5. '   ' → logprob: -15.561969757080078
    6. 'N' → logprob: -15.561969757080078
    7. '  ' → logprob: -16.811969757080078
    8. '>A' → logprob: -17.436969757080078
    9. '(A' → logprob: -17.561969757080078
    10. '<|end|>' → logprob: -17.561969757080078

Token 454: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2603901015827432e-05
    2. '[' → logprob: -10.750022888183594
    3. 'i' → logprob: -14.375022888183594
    4. '[I' → logprob: -16.000022888183594
    5. '[++' → logprob: -16.125022888183594
    6. ' [' → logprob: -16.250022888183594
    7. '[j' → logprob: -17.250022888183594
    8. '[int' → logprob: -17.375022888183594
    9. '[
' → logprob: -17.750022888183594
    10. '(i' → logprob: -17.875022888183594

Token 455: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015342625556513667
    2. ' +' → logprob: -6.876534461975098
    3. '[' → logprob: -7.751534461975098
    4. '[i' → logprob: -10.001534461975098
    5. ']' → logprob: -11.876534461975098
    6. '   ' → logprob: -12.001534461975098
    7. ']+' → logprob: -12.626534461975098
    8. '+
' → logprob: -12.751534461975098
    9. '[
' → logprob: -13.251534461975098
    10. '+i' → logprob: -13.251534461975098

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011629798245849088
    2. '+' → logprob: -9.375116348266602
    3. ' ' → logprob: -10.500116348266602
    4. 'i' → logprob: -13.500116348266602
    5. '```' → logprob: -14.250116348266602
    6. '   ' → logprob: -14.500116348266602
    7. ']' → logprob: -15.125116348266602
    8. ' +' → logprob: -15.437616348266602
    9. '
' → logprob: -15.562616348266602
    10. '`' → logprob: -16.3751163482666

Token 457: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00222721416503191
    2. ' -' → logprob: -6.627227306365967
    3. '-' → logprob: -7.752227306365967
    4. ']-' → logprob: -8.252226829528809
    5. ' ]' → logprob: -8.502226829528809
    6. '[' → logprob: -13.127226829528809
    7. ')' → logprob: -13.502226829528809
    8. '']' → logprob: -14.002226829528809
    9. '"]' → logprob: -14.127226829528809
    10. '#' → logprob: -15.002226829528809

Token 458: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16023021936416626
    2. ' -' → logprob: -1.9102301597595215
    3. '-B' → logprob: -12.41023063659668
    4. ' ' → logprob: -14.03523063659668
    5. ' ' → logprob: -15.28523063659668
    6. '–' → logprob: -15.66023063659668
    7. '-
' → logprob: -16.16023063659668
    8. '−' → logprob: -16.28523063659668
    9. '-b' → logprob: -16.53523063659668
    10. '<|end|>' → logprob: -16.66023063659668

Token 459: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0067154900170862675
    2. ' B' → logprob: -5.006715297698975
    3. 'b' → logprob: -15.631715774536133
    4. '   ' → logprob: -17.631715774536133
    5. '	B' → logprob: -18.756715774536133
    6. '       ' → logprob: -18.881715774536133
    7. ' ' → logprob: -19.256715774536133
    8. '>B' → logprob: -19.631715774536133
    9. '_B' → logprob: -20.131715774536133
    10. '           ' → logprob: -20.256715774536133

Token 460: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.25
    3. 'i' → logprob: -18.5
    4. '[I' → logprob: -18.5
    5. '[int' → logprob: -19.375
    6. ' [' → logprob: -19.5
    7. '[
' → logprob: -20.0
    8. '(i' → logprob: -21.25
    9. '[j' → logprob: -22.0
    10. '[index' → logprob: -22.125

Token 461: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06839003413915634
    2. '<|end|>' → logprob: -2.818390130996704
    3. ')' → logprob: -5.568389892578125
    4. '<|end|>' → logprob: -7.568389892578125
    5. '"]' → logprob: -7.693389892578125
    6. '}' → logprob: -8.068389892578125
    7. ']
' → logprob: -8.193389892578125
    8. '']' → logprob: -8.318389892578125
    9. '```' → logprob: -8.568389892578125
    10. ' ]' → logprob: -8.693389892578125

Token 462: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056617774069309235
    2. '<|end|>' → logprob: -3.1816177368164062
    3. ' if' → logprob: -4.931617736816406
    4. 'if' → logprob: -5.806617736816406
    5. '    
' → logprob: -6.806617736816406
    6. '	if' → logprob: -7.306617736816406
    7. '       ' → logprob: -7.931617736816406
    8. ' ' → logprob: -8.556617736816406
    9. '  ' → logprob: -8.681617736816406
    10. '
' → logprob: -8.681617736816406

Token 463: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8092279434204102
    2. '       ' → logprob: -0.9342279434204102
    3. 'if' → logprob: -2.05922794342041
    4. ' if' → logprob: -3.80922794342041
    5. '<|end|>' → logprob: -4.68422794342041
    6. ' ' → logprob: -7.05922794342041
    7. '    ' → logprob: -7.05922794342041
    8. '	if' → logprob: -7.68422794342041
    9. '  ' → logprob: -8.18422794342041
    10. '        ' → logprob: -9.05922794342041

Token 464: ' De' (ID: 1516)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006071255193091929
    2. '   ' → logprob: -8.00060749053955
    3. ' if' → logprob: -8.50060749053955
    4. '       ' → logprob: -9.75060749053955
    5. '	if' → logprob: -12.00060749053955
    6. '```' → logprob: -13.50060749053955
    7. '#' → logprob: -14.25060749053955
    8. ' ' → logprob: -14.37560749053955
    9. 'i' → logprob: -15.00060749053955
    10. 'for' → logprob: -15.75060749053955

Token 465: ' nouveau' (ID: 23184)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32923784852027893
    2. 'f' → logprob: -1.7042378187179565
    3. 'l' → logprob: -3.704237937927246
    4. 'fin' → logprob: -4.204237937927246
    5. 'p' → logprob: -4.579237937927246
    6. 'term' → logprob: -4.954237937927246
    7. ' if' → logprob: -4.954237937927246
    8. 'm' → logprob: -5.454237937927246
    9. 'mand' → logprob: -5.454237937927246
    10. 'ux' → logprob: -5.704237937927246

Token 466: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17977379262447357
    2. ' if' → logprob: -1.9297738075256348
    3. '       ' → logprob: -4.304773807525635
    4. '   ' → logprob: -5.179773807525635
    5. '	if' → logprob: -9.054773330688477
    6. '
' → logprob: -10.804773330688477
    7. '        
' → logprob: -10.929773330688477
    8. ' ' → logprob: -11.179773330688477
    9. '```' → logprob: -11.179773330688477
    10. '    ' → logprob: -11.804773330688477

Token 467: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0181879885494709
    2. ' if' → logprob: -4.018187999725342
    3. '       ' → logprob: -10.768187522888184
    4. '   ' → logprob: -11.643187522888184
    5. '
' → logprob: -12.643187522888184
    6. '	if' → logprob: -13.143187522888184
    7. ' ' → logprob: -13.643187522888184
    8. '```' → logprob: -13.768187522888184
    9. '        
' → logprob: -15.768187522888184
    10. '#' → logprob: -16.0181884765625

Token 468: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038270413875579834
    2. ' if' → logprob: -3.2882704734802246
    3. '   ' → logprob: -8.913269996643066
    4. ' ' → logprob: -10.663269996643066
    5. '       ' → logprob: -11.163269996643066
    6. 'f' → logprob: -12.038269996643066
    7. 'for' → logprob: -12.038269996643066
    8. '        
' → logprob: -12.288269996643066
    9. '	if' → logprob: -12.413269996643066
    10. '```' → logprob: -12.413269996643066

Token 469: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0011976092355325818
    2. 'if' → logprob: -6.751197814941406
    3. '#' → logprob: -11.876197814941406
    4. 'ifi' → logprob: -12.001197814941406
    5. 'ifiez' → logprob: -12.251197814941406
    6. 'ife' → logprob: -12.751197814941406
    7. 'ifié' → logprob: -13.001197814941406
    8. 'f' → logprob: -13.501197814941406
    9. 'ifier' → logprob: -13.876197814941406
    10. '```' → logprob: -14.001197814941406

Token 470: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.017407959327101707
    2. 'if' → logprob: -4.2674078941345215
    3. '<|end|>' → logprob: -6.2674078941345215
    4. '   ' → logprob: -7.7674078941345215
    5. ' ' → logprob: -8.01740837097168
    6. ' i' → logprob: -9.01740837097168
    7. ' x' → logprob: -9.76740837097168
    8. '    ' → logprob: -9.89240837097168
    9. ' )' → logprob: -9.89240837097168
    10. ' 
' → logprob: -9.89240837097168

Token 471: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04858850687742233
    2. ' x' → logprob: -3.048588514328003
    3. ' ' → logprob: -14.673588752746582
    4. '(x' → logprob: -15.423588752746582
    5. ' ' → logprob: -15.673588752746582
    6. '	x' → logprob: -16.423587799072266
    7. '   ' → logprob: -17.048587799072266
    8. '"x' → logprob: -17.673587799072266
    9. '#' → logprob: -17.986087799072266
    10. '_x' → logprob: -18.048587799072266

Token 472: ' nouvelle' (ID: 24562)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.033652037382125854
    2. ' x' → logprob: -3.4086520671844482
    3. 'i' → logprob: -12.908652305603027
    4. ' ' → logprob: -13.533652305603027
    5. ' i' → logprob: -14.658652305603027
    6. '#' → logprob: -14.783652305603027
    7. ' ' → logprob: -15.283652305603027
    8. 's' → logprob: -15.846152305603027
    9. '	x' → logprob: -15.846152305603027
    10. '(x' → logprob: -16.09615135192871

Token 473: ' valeur' (ID: 41664)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10050081461668015
    2. ' x' → logprob: -2.3505008220672607
    3. ' >=' → logprob: -8.85050106048584
    4. '>=' → logprob: -9.22550106048584
    5. ' ' → logprob: -10.97550106048584
    6. 'if' → logprob: -11.35050106048584
    7. '>' → logprob: -11.72550106048584
    8. ' if' → logprob: -13.10050106048584
    9. 'abs' → logprob: -13.22550106048584
    10. '(x' → logprob: -13.47550106048584

Token 474: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.87005215883255
    2. ' >=' → logprob: -0.87005215883255
    3. ' x' → logprob: -2.2450520992279053
    4. '>=' → logprob: -2.9950520992279053
    5. ' ' → logprob: -6.495052337646484
    6. ' de' → logprob: -6.745052337646484
    7. 'if' → logprob: -6.995052337646484
    8. '(x' → logprob: -7.745052337646484
    9. '>' → logprob: -7.870052337646484
    10. ' >' → logprob: -7.870052337646484

Token 475: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01815052703022957
    2. ' x' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.018150329589844
    4. '	x' → logprob: -16.018150329589844
    5. '   ' → logprob: -17.268150329589844
    6. '(x' → logprob: -17.893150329589844
    7. ' ' → logprob: -18.143150329589844
    8. '"x' → logprob: -18.268150329589844
    9. '  ' → logprob: -18.393150329589844
    10. '
' → logprob: -18.518150329589844

Token 476: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.003635945962741971
    2. '>=' → logprob: -5.628635883331299
    3. ' ' → logprob: -10.628636360168457
    4. ' <=' → logprob: -12.128636360168457
    5. ' >' → logprob: -13.128636360168457
    6. '   ' → logprob: -13.878636360168457
    7. ' ' → logprob: -14.003636360168457
    8. ' <' → logprob: -14.128636360168457
    9. ')>=' → logprob: -14.878636360168457
    10. '>' → logprob: -14.878636360168457

Token 477: ' supérieure' (ID: 106336)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.22996819019317627
    2. '>=' → logprob: -1.6049681901931763
    3. ' ' → logprob: -6.229968070983887
    4. '0' → logprob: -6.729968070983887
    5. '>' → logprob: -7.479968070983887
    6. 'greater' → logprob: -8.979968070983887
    7. ' ' → logprob: -9.229968070983887
    8. ' >' → logprob: -9.479968070983887
    9. '<' → logprob: -9.604968070983887
    10. '≥' → logprob: -9.854968070983887

Token 478: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4590076506137848
    2. ' ou' → logprob: -1.0840076208114624
    3. 'or' → logprob: -3.834007740020752
    4. 'ou' → logprob: -5.459007740020752
    5. ' ' → logprob: -6.959007740020752
    6. '  ' → logprob: -7.209007740020752
    7. '   ' → logprob: -7.584007740020752
    8. '=' → logprob: -7.834007740020752
    9. '>=' → logprob: -8.584007263183594
    10. '>' → logprob: -8.834007263183594

Token 479: ' ég' (ID: 33150)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.73798668384552
    2. '=' → logprob: -1.36298668384552
    3. ' ég' → logprob: -1.48798668384552
    4. 'ég' → logprob: -3.4879865646362305
    5. 'eg' → logprob: -4.9879865646362305
    6. ' égal' → logprob: -6.8629865646362305
    7. ' eg' → logprob: -7.1129865646362305
    8. 'egal' → logprob: -7.7379865646362305
    9. 'à' → logprob: -8.36298656463623
    10. 'égalité' → logprob: -8.73798656463623

Token 480: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0008510822663083673
    2. 'al' → logprob: -7.625851154327393
    3. 'gal' → logprob: -8.375850677490234
    4. 'rale' → logprob: -10.000850677490234
    5. '0' → logprob: -10.125850677490234
    6. 'aule' → logprob: -11.375850677490234
    7. 'alee' → logprob: -11.750850677490234
    8. 'nale' → logprob: -11.750850677490234
    9. 'g' → logprob: -12.500850677490234
    10. 'iale' → logprob: -13.000850677490234

Token 481: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.4121789336204529
    2. ' à' → logprob: -1.4121789932250977
    3. '0' → logprob: -2.9121789932250977
    4. ' ou' → logprob: -4.412178993225098
    5. '=' → logprob: -4.537178993225098
    6. 'ou' → logprob: -5.037178993225098
    7. ' or' → logprob: -5.537178993225098
    8. '```' → logprob: -6.162178993225098
    9. ' =' → logprob: -6.537178993225098
    10. 'to' → logprob: -6.787178993225098

Token 482: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861468818038702
    2. ' ' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.883615493774414
    4. '   ' → logprob: -17.258615493774414
    5. '```' → logprob: -17.758615493774414
    6. '۰' → logprob: -18.008615493774414
    7. '1' → logprob: -18.133615493774414
    8. '  ' → logprob: -18.321115493774414
    9. 'zero' → logprob: -19.196115493774414
    10. '=' → logprob: -19.633615493774414

Token 483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -20.000261306762695
    4. '۰' → logprob: -20.125261306762695
    5. ' ' → logprob: -20.500261306762695
    6. '1' → logprob: -20.750261306762695
    7. '   ' → logprob: -20.875261306762695
    8. '  ' → logprob: -21.375261306762695
    9. '０' → logprob: -22.000261306762695
    10. 'zero' → logprob: -22.187761306762695

Token 484: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20077893137931824
    2. '   ' → logprob: -2.0757789611816406
    3. '<|end|>' → logprob: -3.2007789611816406
    4. ':' → logprob: -4.450778961181641
    5. 'if' → logprob: -7.075778961181641
    6. ' if' → logprob: -7.325778961181641
    7. ':
' → logprob: -7.575778961181641
    8. '<|end|>' → logprob: -7.700778961181641
    9. '	' → logprob: -8.20077896118164
    10. '.' → logprob: -8.20077896118164

Token 485: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09768439084291458
    2. '       ' → logprob: -2.472684383392334
    3. '	if' → logprob: -5.597684383392334
    4. ' if' → logprob: -5.972684383392334
    5. 'if' → logprob: -6.347684383392334
    6. '	' → logprob: -8.347684860229492
    7. '```' → logprob: -8.722684860229492
    8. '\t' → logprob: -9.347684860229492
    9. '<|end|>' → logprob: -10.097684860229492
    10. '    
' → logprob: -10.597684860229492

Token 486: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7745916247367859
    2. 'if' (adapté à ' if') → logprob: -1.3995916843414307
    3. '       ' → logprob: -1.7745916843414307
    4. ' if' → logprob: -2.1495916843414307
    5. '	if' → logprob: -5.274591445922852
    6. '	' → logprob: -7.399591445922852
    7. '    ' → logprob: -8.024591445922852
    8. ' ' → logprob: -9.149591445922852
    9. '<|end|>' → logprob: -10.399591445922852
    10. '	   ' → logprob: -10.524591445922852

Token 487: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20141470432281494
    2. 'x' → logprob: -1.701414704322815
    3. ' ' → logprob: -14.201415061950684
    4. ' ' → logprob: -14.826415061950684
    5. '(x' → logprob: -15.826415061950684
    6. '	x' → logprob: -16.451414108276367
    7. '0' → logprob: -17.826414108276367
    8. ' (' → logprob: -17.951414108276367
    9. '   ' → logprob: -18.326414108276367
    10. '"x' → logprob: -18.326414108276367

Token 488: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.0013327404158189893
    2. '>=' → logprob: -6.626332759857178
    3. ' <=' → logprob: -13.12633228302002
    4. ' ' → logprob: -13.25133228302002
    5. ' <' → logprob: -13.62633228302002
    6. ' >' → logprob: -14.25133228302002
    7. '   ' → logprob: -14.87633228302002
    8. ')>=' → logprob: -15.62633228302002
    9. ' ≥' → logprob: -15.87633228302002
    10. ' ' → logprob: -16.751333236694336

Token 489: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023245712742209435
    2. ' ' → logprob: -3.7732458114624023
    3. '   ' → logprob: -15.898245811462402
    4. '<|end|>' → logprob: -15.898245811462402
    5. '  ' → logprob: -17.773244857788086
    6. '۰' → logprob: -18.023244857788086
    7. ' ' → logprob: -18.773244857788086
    8. '=' → logprob: -18.960744857788086
    9. ')' → logprob: -18.960744857788086
    10. '1' → logprob: -19.398244857788086

Token 490: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -17.375015258789062
    4. '۰' → logprob: -19.500015258789062
    5. '   ' → logprob: -20.250015258789062
    6. '=' → logprob: -20.562515258789062
    7. ')' → logprob: -20.812515258789062
    8. '  ' → logprob: -20.812515258789062
    9. '```' → logprob: -20.812515258789062
    10. ':' → logprob: -21.187515258789062

Token 491: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07983876019716263
    2. ':
' → logprob: -2.579838752746582
    3. '           ' → logprob: -7.204838752746582
    4. '       ' → logprob: -8.704838752746582
    5. ',' → logprob: -11.954838752746582
    6. '):
' → logprob: -11.954838752746582
    7. ' :' → logprob: -12.079838752746582
    8. ' :
' → logprob: -12.204838752746582
    9. '):' → logprob: -12.329838752746582
    10. '<|end|>' → logprob: -12.829838752746582

Token 492: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09022457152605057
    2. 'sum' → logprob: -2.465224504470825
    3. ' sum' → logprob: -7.340224742889404
    4. '
' → logprob: -8.465224266052246
    5. '```' → logprob: -8.840224266052246
    6. '#' → logprob: -8.965224266052246
    7. '       ' → logprob: -9.215224266052246
    8. '            
' → logprob: -11.090224266052246
    9. '               ' → logprob: -12.090224266052246
    10. ':' → logprob: -12.090224266052246

Token 493: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0015099779702723026
    2. '           ' → logprob: -7.001510143280029
    3. '               ' → logprob: -7.751510143280029
    4. ' sum' → logprob: -9.001509666442871
    5. '#' (adapté à ' #') → logprob: -10.126509666442871
    6. '	sum' → logprob: -14.001509666442871
    7. '
' → logprob: -14.126509666442871
    8. '            ' → logprob: -14.376509666442871
    9. '                   ' → logprob: -14.751509666442871
    10. 'B' → logprob: -14.876509666442871

Token 494: ' Si' (ID: 7832)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.003809453686699271
    2. ' sum' → logprob: -6.128809452056885
    3. '           ' → logprob: -6.503809452056885
    4. '#' → logprob: -9.128809928894043
    5. '       ' → logprob: -11.503809928894043
    6. '   ' → logprob: -12.253809928894043
    7. '               ' → logprob: -14.753809928894043
    8. '```' → logprob: -14.753809928894043
    9. '	sum' → logprob: -14.753809928894043
    10. '
' → logprob: -15.753809928894043

Token 495: ' oui' (ID: 50908)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5232260227203369
    2. 'sum' → logprob: -0.8982260227203369
    3. ' B' → logprob: -10.773225784301758
    4. '#' → logprob: -11.023225784301758
    5. 'B' → logprob: -11.148225784301758
    6. '           ' → logprob: -11.398225784301758
    7. ' x' → logprob: -11.648225784301758
    8. 'x' → logprob: -11.898225784301758
    9. '   ' → logprob: -11.898225784301758
    10. '	sum' → logprob: -12.398225784301758

Token 496: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8579740524291992
    2. ':' → logprob: -0.9829740524291992
    3. ':
' → logprob: -1.7329740524291992
    4. '               ' → logprob: -3.732974052429199
    5. ',' → logprob: -7.982974052429199
    6. 'sum' → logprob: -9.1079740524292
    7. '
' → logprob: -9.6079740524292
    8. '       ' → logprob: -9.7329740524292
    9. ' :
' → logprob: -9.8579740524292
    10. '#' → logprob: -9.8579740524292

Token 497: ' cela' (ID: 17542)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.022154122591018677
    2. '           ' → logprob: -4.022154331207275
    3. ' sum' → logprob: -5.647154331207275
    4. '               ' → logprob: -8.397153854370117
    5. '#' → logprob: -8.647153854370117
    6. '   ' → logprob: -10.647153854370117
    7. '       ' → logprob: -10.897153854370117
    8. '	sum' → logprob: -11.522153854370117
    9. '
' → logprob: -12.397153854370117
    10. ' ' → logprob: -12.897153854370117

Token 498: ' signifie' (ID: 81149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3490908145904541
    2. ':' → logprob: -2.099090814590454
    3. 'sum' → logprob: -2.224090814590454
    4. ' sum' → logprob: -3.349090814590454
    5. '       ' → logprob: -4.349090576171875
    6. '   ' → logprob: -4.974090576171875
    7. '#' → logprob: -5.724090576171875
    8. ':
' → logprob: -6.099090576171875
    9. '               ' → logprob: -6.349090576171875
    10. 'continue' → logprob: -8.099090576171875

Token 499: ' que' (ID: 661)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.10812478512525558
    2. '               ' → logprob: -2.9831247329711914
    3. ' sum' → logprob: -3.4831247329711914
    4. '           ' → logprob: -3.9831247329711914
    5. '#' → logprob: -6.483124732971191
    6. '   ' → logprob: -8.108124732971191
    7. '            ' → logprob: -8.733124732971191
    8. ' ' → logprob: -8.733124732971191
    9. ' que' → logprob: -9.483124732971191
    10. '             ' → logprob: -9.608124732971191

Token 500: ' A' (ID: 355)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04906816780567169
    2. ' sum' → logprob: -3.0490682125091553
    3. 'A' → logprob: -7.924067974090576
    4. '           ' → logprob: -9.674068450927734
    5. ' A' → logprob: -10.174068450927734
    6. 'B' → logprob: -11.924068450927734
    7. '	sum' → logprob: -13.049068450927734
    8. ' B' → logprob: -13.174068450927734
    9. 'x' → logprob: -13.299068450927734
    10. '               ' → logprob: -13.424068450927734

Token 501: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004788834135979414
    2. '[' → logprob: -5.379788875579834
    3. ' [' → logprob: -8.879788398742676
    4. 'i' → logprob: -10.879788398742676
    5. ' i' → logprob: -13.379788398742676
    6. '   ' → logprob: -13.629788398742676
    7. '[I' → logprob: -14.004788398742676
    8. 's' → logprob: -14.129788398742676
    9. '[next' → logprob: -14.129788398742676
    10. '[
' → logprob: -14.504788398742676

Token 502: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18818692862987518
    2. '[i' → logprob: -1.8131868839263916
    3. ']' → logprob: -5.813187122344971
    4. '[' → logprob: -6.313187122344971
    5. 'i' → logprob: -6.563187122344971
    6. '   ' → logprob: -6.688187122344971
    7. '[next' → logprob: -7.813187122344971
    8. '+i' → logprob: -8.938186645507812
    9. 'plus' → logprob: -9.438186645507812
    10. '
' → logprob: -9.938186645507812

Token 503: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008666796493344009
    2. '+' → logprob: -7.125866889953613
    3. 'i' → logprob: -10.125866889953613
    4. ' ' → logprob: -12.000866889953613
    5. '   ' → logprob: -12.750866889953613
    6. ']' → logprob: -12.750866889953613
    7. '```' → logprob: -12.875866889953613
    8. 'x' → logprob: -13.875866889953613
    9. 'plus' → logprob: -14.000866889953613
    10. 'next' → logprob: -14.500866889953613

Token 504: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0292588472366333
    2. ']' → logprob: -1.6542588472366333
    3. ' peut' → logprob: -1.6542588472366333
    4. '           ' → logprob: -2.5292587280273438
    5. '       ' → logprob: -2.5292587280273438
    6. ')' → logprob: -3.5292587280273438
    7. '#' → logprob: -4.279258728027344
    8. ' pourra' → logprob: -4.779258728027344
    9. '```' → logprob: -4.904258728027344
    10. ' can' → logprob: -5.029258728027344

Token 505: ' contient' (ID: 89067)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4087497591972351
    2. '=' → logprob: -1.1587498188018799
    3. '>=' → logprob: -4.908749580383301
    4. ' >=' → logprob: -5.658749580383301
    5. ' -=' → logprob: -6.283749580383301
    6. '#' → logprob: -6.283749580383301
    7. 'sum' → logprob: -6.533749580383301
    8. '>' → logprob: -7.283749580383301
    9. ')' → logprob: -7.408749580383301
    10. ' +=' → logprob: -7.783749580383301

Token 506: ' suffisamment' (ID: 124434)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.25194522738456726
    2. ' B' → logprob: -1.5019452571868896
    3. ' la' → logprob: -11.501945495605469
    4. 'b' → logprob: -12.876945495605469
    5. ' ' → logprob: -13.626945495605469
    6. ' the' → logprob: -14.751945495605469
    7. '#' → logprob: -15.251945495605469
    8. '	B' → logprob: -15.376945495605469
    9. ' ' → logprob: -15.376945495605469
    10. ' b' → logprob: -15.626945495605469

Token 507: ' pour' (ID: 1930)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7447803616523743
    2. 'de' → logprob: -0.9947803616523743
    3. 'A' → logprob: -2.3697803020477295
    4. 'B' → logprob: -3.3697803020477295
    5. ' B' → logprob: -4.244780540466309
    6. ' A' → logprob: -4.619780540466309
    7. 'd' → logprob: -7.244780540466309
    8. ' ' → logprob: -7.869780540466309
    9. 'pour' → logprob: -7.869780540466309
    10. ' d' → logprob: -8.119780540466309

Token 508: ' couvrir' (ID: 197187)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.003413562895730138
    2. 's' → logprob: -6.253413677215576
    3. ' sum' → logprob: -6.878413677215576
    4. 'rem' → logprob: -8.878413200378418
    5. ' couvrir' → logprob: -9.253413200378418
    6. 'cover' → logprob: -9.753413200378418
    7. 'aj' → logprob: -10.003413200378418
    8. '#' → logprob: -10.628413200378418
    9. 'com' → logprob: -11.003413200378418
    10. 'B' → logprob: -11.253413200378418

Token 509: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4287167489528656
    2. ' B' → logprob: -1.053716778755188
    3. ' ' → logprob: -12.053716659545898
    4. 'b' → logprob: -12.428716659545898
    5. ' la' → logprob: -12.553716659545898
    6. '	B' → logprob: -14.178716659545898
    7. ' ' → logprob: -14.553716659545898
    8. ' le' → logprob: -14.928716659545898
    9. 'le' → logprob: -15.553716659545898
    10. ' b' → logprob: -15.678716659545898

Token 510: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018685187387745827
    2. '[' → logprob: -8.750186920166016
    3. ' [' → logprob: -11.250186920166016
    4. 'i' → logprob: -12.000186920166016
    5. '```' → logprob: -13.000186920166016
    6. '(i' → logprob: -13.500186920166016
    7. '
' → logprob: -14.375186920166016
    8. '

' → logprob: -14.625186920166016
    9. ''s' → logprob: -14.750186920166016
    10. '[j' → logprob: -14.750186920166016

Token 511: ']
' (ID: 1592)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02161109447479248
    2. ']' → logprob: -4.021611213684082
    3. '])' → logprob: -6.771611213684082
    4. ')' → logprob: -7.396611213684082
    5. '[' → logprob: -8.396611213684082
    6. '```' → logprob: -8.396611213684082
    7. '):' → logprob: -8.771611213684082
    8. '):
' → logprob: -8.771611213684082
    9. '   ' → logprob: -8.896611213684082
    10. ']):
' → logprob: -9.146611213684082

Token 512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005171378143131733
    2. ':' → logprob: -5.505171298980713
    3. ':
' → logprob: -8.005171775817871
    4. ',' → logprob: -8.005171775817871
    5. '               ' → logprob: -8.630171775817871
    6. '):' → logprob: -10.255171775817871
    7. '.' → logprob: -10.255171775817871
    8. ' and' → logprob: -10.630171775817871
    9. '):
' → logprob: -10.630171775817871
    10. '```' → logprob: -10.630171775817871

Token 513: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5156346559524536
    2. 'sum' → logprob: -1.0156346559524536
    3. ' sum' → logprob: -3.515634536743164
    4. 'B' → logprob: -5.515634536743164
    5. '               ' → logprob: -5.640634536743164
    6. ' B' → logprob: -6.640634536743164
    7. 'A' → logprob: -6.890634536743164
    8. '#' (adapté à ' #') → logprob: -8.515634536743164
    9. ':' → logprob: -8.890634536743164
    10. ' A' → logprob: -9.015634536743164

Token 514: ' Donc' (ID: 88837)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.004899042658507824
    2. ' sum' → logprob: -5.879899024963379
    3. '           ' → logprob: -6.379899024963379
    4. 'A' → logprob: -8.379899024963379
    5. '#' → logprob: -8.879899024963379
    6. '       ' → logprob: -11.129899024963379
    7. '   ' → logprob: -12.004899024963379
    8. ' A' → logprob: -12.879899024963379
    9. 'B' → logprob: -13.504899024963379
    10. '               ' → logprob: -13.879899024963379

Token 515: ' on' (ID: 402)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0007990269223228097
    2. ' sum' → logprob: -7.250799179077148
    3. '           ' → logprob: -9.625799179077148
    4. '#' → logprob: -10.875799179077148
    5. '               ' → logprob: -13.125799179077148
    6. 'A' → logprob: -14.625799179077148
    7. '   ' → logprob: -14.750799179077148
    8. '	sum' → logprob: -14.750799179077148
    9. '
' → logprob: -15.000799179077148
    10. '       ' → logprob: -15.250799179077148

Token 516: ' ajoute' (ID: 91611)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4349729120731354
    2. ' sum' → logprob: -1.059972882270813
    3. 'aj' → logprob: -6.434972763061523
    4. ' ajoute' → logprob: -6.934972763061523
    5. '#' → logprob: -7.309972763061523
    6. ' add' → logprob: -7.684972763061523
    7. ' somme' → logprob: -7.809972763061523
    8. '   ' → logprob: -7.934972763061523
    9. 'add' → logprob: -7.934972763061523
    10. 's' → logprob: -7.934972763061523

Token 517: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.17976094782352448
    2. ' B' → logprob: -1.8047609329223633
    3. 'b' → logprob: -11.304760932922363
    4. ' ' → logprob: -13.554760932922363
    5. 'x' → logprob: -13.929760932922363
    6. '   ' → logprob: -14.429760932922363
    7. '	B' → logprob: -14.554760932922363
    8. ' b' → logprob: -15.929760932922363
    9. ' x' → logprob: -15.929760932922363
    10. ' ' → logprob: -16.17976188659668

Token 518: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00024727347772568464
    2. '[' → logprob: -8.37524700164795
    3. ' [' → logprob: -11.12524700164795
    4. '```' → logprob: -14.62524700164795
    5. 'i' → logprob: -14.87524700164795
    6. '   ' → logprob: -15.62524700164795
    7. '(i' → logprob: -15.62524700164795
    8. '[I' → logprob: -16.000247955322266
    9. ' ' → logprob: -16.500247955322266
    10. '
' → logprob: -16.625247955322266

Token 519: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009170551202259958
    2. ')' → logprob: -7.875916957855225
    3. '])' → logprob: -8.375917434692383
    4. ']' → logprob: -8.375917434692383
    5. '[' → logprob: -10.500917434692383
    6. '   ' → logprob: -10.625917434692383
    7. ' )' → logprob: -11.625917434692383
    8. ' ]' → logprob: -12.875917434692383
    9. ' ])' → logprob: -13.250917434692383
    10. '[j' → logprob: -13.500917434692383

Token 520: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7278102040290833
    2. '<|end|>' → logprob: -1.6028101444244385
    3. ')' → logprob: -1.8528101444244385
    4. 'to' → logprob: -2.8528101444244385
    5. '[i' → logprob: -3.2278101444244385
    6. '<|end|>' → logprob: -3.8528101444244385
    7. '   ' → logprob: -3.9778101444244385
    8. ' +' → logprob: -5.102810382843018
    9. '       ' → logprob: -6.352810382843018
    10. ' ' → logprob: -6.352810382843018

Token 521: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.023245712742209435
    2. ' sum' → logprob: -3.7732458114624023
    3. ' ' → logprob: -16.398244857788086
    4. '	sum' → logprob: -16.398244857788086
    5. 'summ' → logprob: -17.648244857788086
    6. 's' → logprob: -17.648244857788086
    7. 'su' → logprob: -17.773244857788086
    8. '(sum' → logprob: -18.273244857788086
    9. 'A' → logprob: -18.523244857788086
    10. ' ' → logprob: -18.773244857788086

Token 522: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021825607866048813
    2. '       ' → logprob: -4.521825790405273
    3. ' +' → logprob: -6.021825790405273
    4. '
' → logprob: -6.146825790405273
    5. '               ' → logprob: -6.521825790405273
    6. '+' → logprob: -6.771825790405273
    7. '          ' → logprob: -7.271825790405273
    8. '   ' → logprob: -7.521825790405273
    9. '            
' → logprob: -7.896825790405273
    10. ' =' → logprob: -8.021825790405273

Token 523: 'on' (ID: 263)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3226994574069977
    2. ' sum' → logprob: -1.3226994276046753
    3. 'B' → logprob: -5.072699546813965
    4. ' B' → logprob: -5.947699546813965
    5. ')' → logprob: -8.322699546813965
    6. '           ' → logprob: -9.072699546813965
    7. 'A' → logprob: -10.322699546813965
    8. '       ' → logprob: -11.572699546813965
    9. '        ' → logprob: -11.697699546813965
    10. '               ' → logprob: -11.697699546813965

Token 524: ' utilise' (ID: 70283)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.421793818473816
    2. '=' → logprob: -1.546793818473816
    3. ' =' → logprob: -1.671793818473816
    4. ' +=' → logprob: -1.796793818473816
    5. 'sum' → logprob: -2.1717939376831055
    6. '+=' → logprob: -3.6717939376831055
    7. ')' → logprob: -4.0467939376831055
    8. '+' → logprob: -4.6717939376831055
    9. '=sum' → logprob: -4.6717939376831055
    10. '       ' → logprob: -5.0467939376831055

Token 525: ' juste' (ID: 31553)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4742664098739624
    2. ' B' → logprob: -0.9742664098739624
    3. ' ' → logprob: -9.474266052246094
    4. 'A' → logprob: -9.724266052246094
    5. ' A' → logprob: -10.599266052246094
    6. 'b' → logprob: -11.224266052246094
    7. ' ' → logprob: -12.474266052246094
    8. ' la' → logprob: -13.224266052246094
    9. '	B' → logprob: -13.599266052246094
    10. 'x' → logprob: -13.599266052246094

Token 526: ' ce' (ID: 2357)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6936622858047485
    2. ' B' → logprob: -0.6936622858047485
    3. 'b' → logprob: -8.193662643432617
    4. ' ' → logprob: -8.943662643432617
    5. ' b' → logprob: -9.443662643432617
    6. ' la' → logprob: -11.068662643432617
    7. ' ' → logprob: -12.318662643432617
    8. 'la' → logprob: -13.318662643432617
    9. '	B' → logprob: -13.568662643432617
    10. ' x' → logprob: -14.568662643432617

Token 527: ' dont' (ID: 11562)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.7529544830322266
    2. '[i' → logprob: -1.0029544830322266
    3. 'B' → logprob: -2.2529544830322266
    4. '[' → logprob: -4.002954483032227
    5. ' ' → logprob: -4.752954483032227
    6. ' )' → logprob: -5.002954483032227
    7. ' [' → logprob: -5.627954483032227
    8. ' space' → logprob: -6.252954483032227
    9. ' espace' → logprob: -6.377954483032227
    10. ' ' → logprob: -6.627954483032227

Token 528: ' on' (ID: 402)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.3425101041793823
    2. 'a' → logprob: -1.3425101041793823
    3. ' on' → logprob: -1.8425101041793823
    4. 'on' → logprob: -1.9675101041793823
    5. '```' → logprob: -3.092510223388672
    6. ' besoin' → logprob: -3.592510223388672
    7. 'B' → logprob: -3.842510223388672
    8. ' ' → logprob: -3.967510223388672
    9. 'bes' → logprob: -4.592510223388672
    10. ' A' → logprob: -4.842510223388672

Token 529: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07167651504278183
    2. ' a' → logprob: -2.69667649269104
    3. 'bes' → logprob: -6.571676731109619
    4. ' besoin' → logprob: -9.071676254272461
    5. ' ' → logprob: -9.446676254272461
    6. 'b' → logprob: -9.946676254272461
    7. 'need' → logprob: -10.696676254272461
    8. ' ' → logprob: -10.821676254272461
    9. '```' → logprob: -11.321676254272461
    10. 'avait' → logprob: -11.571676254272461

Token 530: ' besoin' (ID: 27703)
  Prédit: 'bes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bes' → logprob: -0.16082537174224854
    2. ' besoin' → logprob: -1.9108253717422485
    3. '  ' → logprob: -7.910825252532959
    4. ' ' → logprob: -9.035825729370117
    5. 'need' → logprob: -9.785825729370117
    6. ' besoins' → logprob: -11.285825729370117
    7. ' bisogno' → logprob: -11.785825729370117
    8. '
' → logprob: -11.785825729370117
    9. 'Bes' → logprob: -11.910825729370117
    10. ' ' → logprob: -12.660825729370117

Token 531: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03140027076005936
    2. '           ' → logprob: -3.781400203704834
    3. ').' → logprob: -5.781400203704834
    4. ')
' → logprob: -6.281400203704834
    5. ' )' → logprob: -6.656400203704834
    6. '       ' → logprob: -7.031400203704834
    7. '),' → logprob: -7.906400203704834
    8. '               ' → logprob: -8.031400680541992
    9. '          ' → logprob: -9.531400680541992
    10. '   ' → logprob: -9.656400680541992

Token 532: ' A' (ID: 355)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.054374810308218
    2. ' B' → logprob: -3.0543746948242188
    3. 'sum' → logprob: -5.929374694824219
    4. 'A' → logprob: -6.304374694824219
    5. ' sum' → logprob: -6.804374694824219
    6. ' A' → logprob: -9.179374694824219
    7. ')' → logprob: -9.929374694824219
    8. ' ' → logprob: -12.304374694824219
    9. 'x' → logprob: -12.429374694824219
    10. '
' → logprob: -12.679374694824219

Token 533: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004424667276907712
    2. '[' → logprob: -7.8754425048828125
    3. ' [' → logprob: -10.125442504882812
    4. 'i' → logprob: -12.000442504882812
    5. '[next' → logprob: -12.000442504882812
    6. '   ' → logprob: -12.500442504882812
    7. ' ' → logprob: -13.000442504882812
    8. ' i' → logprob: -14.500442504882812
    9. '```' → logprob: -14.625442504882812
    10. '
' → logprob: -14.875442504882812

Token 534: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3652910590171814
    2. '[i' → logprob: -1.2402911186218262
    3. ']' → logprob: -4.865291118621826
    4. '])' → logprob: -5.365291118621826
    5. 'plus' → logprob: -6.115291118621826
    6. '1' → logprob: -7.490291118621826
    7. '   ' → logprob: -8.240290641784668
    8. 'i' → logprob: -8.365290641784668
    9. '+i' → logprob: -8.490290641784668
    10. '[j' → logprob: -9.115290641784668

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002629638649523258
    2. '+' → logprob: -6.00262975692749
    3. 'i' → logprob: -10.002629280090332
    4. '[i' → logprob: -10.252629280090332
    5. '
' → logprob: -10.752629280090332
    6. ' ' → logprob: -11.502629280090332
    7. ']' → logprob: -11.627629280090332
    8. '   ' → logprob: -11.752629280090332
    9. '```' → logprob: -12.127629280090332
    10. '(i' → logprob: -12.627629280090332

Token 536: ']).
' (ID: 135644)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00259408843703568
    2. ')
' → logprob: -6.377593994140625
    3. ' )' → logprob: -8.002593994140625
    4. ').' → logprob: -8.127593994140625
    5. '   ' → logprob: -9.502593994140625
    6. '           ' → logprob: -9.627593994140625
    7. '       ' → logprob: -10.002593994140625
    8. '),' → logprob: -10.377593994140625
    9. ')
' → logprob: -11.877593994140625
    10. ' ' → logprob: -12.252593994140625

Token 537: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2268993854522705
    2. 'sum' → logprob: -1.6018993854522705
    3. ' sum' → logprob: -6.726899147033691
    4. '               ' → logprob: -9.101899147033691
    5. '   ' → logprob: -9.851899147033691
    6. '       ' → logprob: -10.101899147033691
    7. '```' → logprob: -10.351899147033691
    8. '#' → logprob: -11.976899147033691
    9. '
' → logprob: -11.976899147033691
    10. '                   ' → logprob: -12.226899147033691

Token 538: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.00018732868193183094
    2. '           ' → logprob: -8.875186920166016
    3. ' sum' → logprob: -10.000186920166016
    4. '       ' → logprob: -13.875186920166016
    5. '   ' → logprob: -14.125186920166016
    6. '	sum' → logprob: -15.500186920166016
    7. ' ' → logprob: -17.125186920166016
    8. '               ' → logprob: -17.125186920166016
    9. '  ' → logprob: -17.375186920166016
    10. '          ' → logprob: -18.375186920166016

Token 539: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031145861372351646
    2. '=' → logprob: -3.5311458110809326
    3. ' +=' → logprob: -6.656146049499512
    4. '+=' → logprob: -9.156146049499512
    5. '+' → logprob: -14.156146049499512
    6. ' +' → logprob: -14.281146049499512
    7. '   ' → logprob: -14.781146049499512
    8. '=sum' → logprob: -15.031146049499512
    9. ' ' → logprob: -15.531146049499512
    10. ')' → logprob: -15.781146049499512

Token 540: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5759419202804565
    2. ' sum' → logprob: -0.8259419202804565
    3. '	sum' → logprob: -13.575942039489746
    4. ' ' → logprob: -14.825942039489746
    5. '(sum' → logprob: -15.075942039489746
    6. ' ' → logprob: -16.20094108581543
    7. ' suma' → logprob: -16.32594108581543
    8. '_sum' → logprob: -16.57594108581543
    9. '.sum' → logprob: -16.82594108581543
    10. '  ' → logprob: -17.20094108581543

Token 541: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.048588961362838745
    2. '+' → logprob: -3.048588991165161
    3. ' ' → logprob: -14.298588752746582
    4. ' plus' → logprob: -14.298588752746582
    5. ' +=' → logprob: -15.798588752746582
    6. ' ' → logprob: -16.2985897064209
    7. '＋' → logprob: -17.6735897064209
    8. ' +
' → logprob: -17.9235897064209
    9. '```' → logprob: -18.6735897064209
    10. ' =' → logprob: -18.9235897064209

Token 542: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03804263845086098
    2. ' B' → logprob: -3.2880425453186035
    3. 'b' → logprob: -14.413043022155762
    4. ' ' → logprob: -15.288043022155762
    5. '	B' → logprob: -15.913043022155762
    6. 'x' → logprob: -16.163042068481445
    7. '   ' → logprob: -16.788042068481445
    8. '(B' → logprob: -17.788042068481445
    9. 'int' → logprob: -18.288042068481445
    10. '  ' → logprob: -18.788042068481445

Token 543: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.839121826691553e-05
    2. '[' → logprob: -9.625078201293945
    3. ' [' → logprob: -11.375078201293945
    4. '[I' → logprob: -15.500078201293945
    5. ' ' → logprob: -15.625078201293945
    6. '   ' → logprob: -16.625078201293945
    7. '[int' → logprob: -16.625078201293945
    8. '[
' → logprob: -16.750078201293945
    9. '```' → logprob: -17.375078201293945
    10. '[j' → logprob: -17.500078201293945

Token 544: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33214157819747925
    2. '<|end|>' → logprob: -1.707141637802124
    3. '       ' → logprob: -3.082141637802124
    4. '   ' → logprob: -3.582141637802124
    5. ')
' → logprob: -4.957141399383545
    6. ']' → logprob: -4.957141399383545
    7. '<|end|>' → logprob: -5.207141399383545
    8. '
' → logprob: -5.332141399383545
    9. '           ' → logprob: -7.207141399383545
    10. '}' → logprob: -7.832141399383545

Token 545: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 546: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09998902678489685
    2. 'A' → logprob: -2.5999889373779297
    3. '       ' → logprob: -4.22498893737793
    4. '   ' → logprob: -5.34998893737793
    5. '#' (adapté à ' #') → logprob: -7.47498893737793
    6. ' A' → logprob: -8.22498893737793
    7. '		' → logprob: -8.97498893737793
    8. '	       ' → logprob: -9.34998893737793
    9. '	   ' → logprob: -9.47498893737793
    10. '	A' → logprob: -10.09998893737793

Token 547: ' On' (ID: 2160)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014492657966911793
    2. '       ' → logprob: -4.639492511749268
    3. '   ' → logprob: -5.764492511749268
    4. '#' → logprob: -7.264492511749268
    5. '           ' → logprob: -7.264492511749268
    6. 'N' → logprob: -9.639492988586426
    7. ' A' → logprob: -10.264492988586426
    8. 'else' → logprob: -10.764492988586426
    9. 'i' → logprob: -11.389492988586426
    10. '    ' → logprob: -11.889492988586426

Token 548: ' met' (ID: 1421)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3706200420856476
    2. '[i' → logprob: -1.8706200122833252
    3. '#' → logprob: -2.620620012283325
    4. 'i' → logprob: -3.870620012283325
    5. '       ' → logprob: -4.245620250701904
    6. ' A' → logprob: -4.620620250701904
    7. '           ' → logprob: -4.745620250701904
    8. 'B' → logprob: -5.120620250701904
    9. ' i' → logprob: -5.120620250701904
    10. ' #' → logprob: -5.370620250701904

Token 549: ' alors' (ID: 17971)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00023417205375153571
    2. ' A' → logprob: -9.250234603881836
    3. '#' → logprob: -9.625234603881836
    4. '   ' → logprob: -10.750234603881836
    5. 'x' → logprob: -11.250234603881836
    6. 'a' → logprob: -11.375234603881836
    7. 'B' → logprob: -12.500234603881836
    8. 'i' → logprob: -12.625234603881836
    9. '```' → logprob: -12.750234603881836
    10. '0' → logprob: -13.375234603881836

Token 550: ' à' (ID: 1221)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00047952806926332414
    2. ' A' → logprob: -8.625479698181152
    3. '#' → logprob: -9.375479698181152
    4. '   ' → logprob: -9.875479698181152
    5. '       ' → logprob: -10.000479698181152
    6. 'i' → logprob: -10.250479698181152
    7. '           ' → logprob: -10.625479698181152
    8. 'B' → logprob: -11.000479698181152
    9. 'a' → logprob: -11.875479698181152
    10. '         ' → logprob: -12.125479698181152

Token 551: ' jour' (ID: 8379)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3169359266757965
    2. 'A' → logprob: -1.3169358968734741
    3. 'i' → logprob: -5.816936016082764
    4. 'zero' → logprob: -8.566935539245605
    5. ' ' → logprob: -9.316935539245605
    6. '1' → logprob: -9.316935539245605
    7. 'l' → logprob: -9.691935539245605
    8. 'N' → logprob: -9.816935539245605
    9. ' A' → logprob: -10.066935539245605
    10. 'B' → logprob: -10.566935539245605

Token 552: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00015359772078227252
    2. 'B' → logprob: -9.875153541564941
    3. ' A' → logprob: -10.000153541564941
    4. 'N' → logprob: -10.500153541564941
    5. '#' → logprob: -11.250153541564941
    6. 'i' → logprob: -11.625153541564941
    7. '   ' → logprob: -12.250153541564941
    8. 'a' → logprob: -14.875153541564941
    9. '```' → logprob: -15.125153541564941
    10. ' ' → logprob: -15.375153541564941

Token 553: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.375005722045898
    3. 'i' → logprob: -14.875005722045898
    4. '   ' → logprob: -15.250005722045898
    5. ' [' → logprob: -16.0000057220459
    6. ' i' → logprob: -16.2500057220459
    7. '(i' → logprob: -16.6250057220459
    8. ' =' → logprob: -17.0000057220459
    9. 'A' → logprob: -17.0000057220459
    10. '[
' → logprob: -17.0000057220459

Token 554: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000294586323434487
    2. ']' → logprob: -8.50029468536377
    3. ' +' → logprob: -10.50029468536377
    4. '+i' → logprob: -10.75029468536377
    5. '[i' → logprob: -11.00029468536377
    6. '   ' → logprob: -11.75029468536377
    7. '+]' → logprob: -12.00029468536377
    8. 'i' → logprob: -12.75029468536377
    9. '[' → logprob: -13.00029468536377
    10. '+
' → logprob: -13.50029468536377

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.927930654550437e-05
    2. '+' → logprob: -11.125029563903809
    3. '2' → logprob: -11.625029563903809
    4. ']' → logprob: -12.875029563903809
    5. ' ' → logprob: -13.750029563903809
    6. '```' → logprob: -14.250029563903809
    7. '   ' → logprob: -14.375029563903809
    8. 'i' → logprob: -16.375028610229492
    9. ']+' → logprob: -16.562528610229492
    10. '
' → logprob: -16.625028610229492

Token 556: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.015134073793888092
    2. ' =' → logprob: -4.640133857727051
    3. '=' → logprob: -5.390133857727051
    4. '[' → logprob: -8.01513385772705
    5. ']' → logprob: -8.39013385772705
    6. '[j' → logprob: -9.01513385772705
    7. ' -=' → logprob: -10.01513385772705
    8. '-=' → logprob: -11.14013385772705
    9. '[x' → logprob: -11.26513385772705
    10. '[:]' → logprob: -11.39013385772705

Token 557: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8128877878189087
    2. ' =' → logprob: -0.9378877878189087
    3. '[i' → logprob: -1.8128877878189087
    4. '[' → logprob: -7.312887668609619
    5. ' -=' → logprob: -7.562887668609619
    6. '-=' → logprob: -7.812887668609619
    7. '   ' → logprob: -9.812888145446777
    8. '=i' → logprob: -10.437888145446777
    9. '           ' → logprob: -11.312888145446777
    10. '-' → logprob: -11.312888145446777

Token 558: ' retir' (ID: 35638)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1389552354812622
    2. ' A' → logprob: -2.2639551162719727
    3. '=A' → logprob: -4.138955116271973
    4. '=' → logprob: -4.763955116271973
    5. '-' → logprob: -8.013955116271973
    6. 'subtract' → logprob: -8.638955116271973
    7. 'x' → logprob: -8.763955116271973
    8. '-=' → logprob: -9.013955116271973
    9. ' subtract' → logprob: -9.138955116271973
    10. ' -' → logprob: -10.263955116271973

Token 559: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.004563276655972004
    2. 'çant' → logprob: -6.754563331604004
    3. 'quant' → logprob: -7.254563331604004
    4. 'a' → logprob: -7.379563331604004
    5. 'A' → logprob: -7.879563331604004
    6. 'à' → logprob: -8.004563331604004
    7. 'érant' → logprob: -8.004563331604004
    8. 'uant' → logprob: -8.129563331604004
    9. 'act' → logprob: -8.754563331604004
    10. 'an' → logprob: -9.504563331604004

Token 560: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.100211963057518
    2. ' B' → logprob: -2.3502118587493896
    3. ' ' → logprob: -12.975212097167969
    4. 'b' → logprob: -13.100212097167969
    5. '	B' → logprob: -15.225212097167969
    6. '           ' → logprob: -15.350212097167969
    7. '   ' → logprob: -16.22521209716797
    8. ' b' → logprob: -16.72521209716797
    9. ' ' → logprob: -17.10021209716797
    10. ' la' → logprob: -17.72521209716797

Token 561: ' valeur' (ID: 41664)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20049843192100525
    2. 'val' → logprob: -2.075498342514038
    3. ' B' → logprob: -3.200498342514038
    4. 'quant' → logprob: -5.325498580932617
    5. ' quantité' → logprob: -5.825498580932617
    6. 'b' → logprob: -6.075498580932617
    7. ' val' → logprob: -6.700498580932617
    8. 'sum' → logprob: -6.950498580932617
    9. ' valeur' → logprob: -7.325498580932617
    10. ' somme' → logprob: -7.450498580932617

Token 562: ' de' (ID: 334)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20198751986026764
    2. ' B' → logprob: -1.7019875049591064
    3. ' =' → logprob: -8.951987266540527
    4. '[' → logprob: -9.451987266540527
    5. '=' → logprob: -9.701987266540527
    6. ' de' → logprob: -9.826987266540527
    7. '```' → logprob: -10.076987266540527
    8. 'x' → logprob: -10.451987266540527
    9. '`' → logprob: -10.451987266540527
    10. '[i' → logprob: -10.826987266540527

Token 563: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.048601340502500534
    2. ' B' → logprob: -3.0486013889312744
    3. 'b' → logprob: -11.923601150512695
    4. ' ' → logprob: -12.173601150512695
    5. 'x' → logprob: -13.673601150512695
    6. '   ' → logprob: -15.173601150512695
    7. '	B' → logprob: -15.548601150512695
    8. 'A' → logprob: -15.673601150512695
    9. ' x' → logprob: -16.298601150512695
    10. 'y' → logprob: -16.986101150512695

Token 564: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -15.125000953674316
    3. 'i' → logprob: -15.375000953674316
    4. '[' → logprob: -15.750000953674316
    5. ' [' → logprob: -16.250001907348633
    6. '[j' → logprob: -16.875001907348633
    7. ' ' → logprob: -17.750001907348633
    8. '```' → logprob: -17.750001907348633
    9. '(i' → logprob: -17.875001907348633
    10. '           ' → logprob: -18.125001907348633

Token 565: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01255732774734497
    2. ']
' → logprob: -5.012557506561279
    3. '[i' → logprob: -5.262557506561279
    4. ']
' → logprob: -8.762557029724121
    5. ' ]' → logprob: -9.012557029724121
    6. 'from' → logprob: -9.762557029724121
    7. '           ' → logprob: -9.887557029724121
    8. '   ' → logprob: -10.137557029724121
    9. '.' → logprob: -10.262557029724121
    10. '']' → logprob: -10.637557029724121

Token 566: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9709283113479614
    2. ' =' → logprob: -1.2209283113479614
    3. '[i' → logprob: -1.5959283113479614
    4. ' -=' → logprob: -3.470928192138672
    5. ' -' → logprob: -3.595928192138672
    6. '-' → logprob: -3.595928192138672
    7. '[' → logprob: -3.720928192138672
    8. '           ' → logprob: -5.345928192138672
    9. '-=' → logprob: -5.720928192138672
    10. '   ' → logprob: -6.595928192138672

Token 567: 'on' (ID: 263)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08902442455291748
    2. ' A' → logprob: -2.464024543762207
    3. '           ' → logprob: -10.839024543762207
    4. '=' → logprob: -11.964024543762207
    5. ' ' → logprob: -11.964024543762207
    6. '   ' → logprob: -11.964024543762207
    7. '
' → logprob: -12.089024543762207
    8. '=A' → logprob: -12.089024543762207
    9. ' =' → logprob: -12.339024543762207
    10. ':' → logprob: -12.589024543762207

Token 568: ' dim' (ID: 6051)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012746386928483844
    2. '           ' → logprob: -8.501275062561035
    3. '[' → logprob: -8.626275062561035
    4. '       ' → logprob: -8.876275062561035
    5. 'i' → logprob: -9.001275062561035
    6. 'A' → logprob: -9.251275062561035
    7. '=' → logprob: -9.626275062561035
    8. '#' → logprob: -9.751275062561035
    9. '
' → logprob: -9.876275062561035
    10. ' [' → logprob: -10.126275062561035

Token 569: 'inue' (ID: 9329)
  Prédit: 'inue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.0017921553226187825
    2. 'inu' → logprob: -6.376791954040527
    3. 'in' → logprob: -9.751791954040527
    4. 'A' → logprob: -11.126791954040527
    5. 'INUE' → logprob: -12.251791954040527
    6. 'inut' → logprob: -12.501791954040527
    7. 'i' → logprob: -12.751791954040527
    8. 'pute' → logprob: -13.001791954040527
    9. 'inus' → logprob: -13.626791954040527
    10. 'ine' → logprob: -15.126791954040527

Token 570: ' le' (ID: 505)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.16475653648376465
    2. 'A' → logprob: -1.9147565364837646
    3. '1' → logprob: -6.789756774902344
    4. ' x' → logprob: -6.914756774902344
    5. 'x' → logprob: -7.164756774902344
    6. ' B' → logprob: -7.164756774902344
    7. ' ' → logprob: -7.539756774902344
    8. 'B' → logprob: -9.164756774902344
    9. ' )' → logprob: -9.414756774902344
    10. ')' → logprob: -9.789756774902344

Token 571: ' stock' (ID: 6546)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04968802258372307
    2. '[i' → logprob: -3.4246881008148193
    3. 'i' → logprob: -4.79968786239624
    4. ' A' → logprob: -5.17468786239624
    5. ' i' → logprob: -7.04968786239624
    6. 'value' → logprob: -8.799688339233398
    7. ')' → logprob: -8.799688339233398
    8. ' ' → logprob: -8.799688339233398
    9. '```' → logprob: -9.049688339233398
    10. '
' → logprob: -9.424688339233398

Token 572: ' correspondant' (ID: 146058)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010935462778434157
    2. ' de' → logprob: -7.37609338760376
    3. '[' → logprob: -8.626093864440918
    4. 'A' → logprob: -9.876093864440918
    5. '[j' → logprob: -10.126093864440918
    6. '   ' → logprob: -10.501093864440918
    7. '```' → logprob: -10.501093864440918
    8. 'de' → logprob: -10.626093864440918
    9. ' [' → logprob: -10.876093864440918
    10. ')' → logprob: -10.876093864440918

Token 573: ').
' (ID: 6294)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10163744539022446
    2. ')' → logprob: -3.351637363433838
    3. ' à' → logprob: -3.476637363433838
    4. ']' → logprob: -4.226637363433838
    5. '[' → logprob: -4.851637363433838
    6. 'A' → logprob: -5.976637363433838
    7. '   ' → logprob: -6.976637363433838
    8. '```' → logprob: -6.976637363433838
    9. ' de' → logprob: -7.351637363433838
    10. ')
' → logprob: -7.726637363433838

Token 574: '           ' (ID: 352)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11064023524522781
    2. ' A' → logprob: -2.985640287399292
    3. '=' → logprob: -3.985640287399292
    4. '=A' → logprob: -4.235640048980713
    5. '           ' → logprob: -4.860640048980713
    6. ' =' → logprob: -5.235640048980713
    7. '   ' → logprob: -6.110640048980713
    8. '[A' → logprob: -6.985640048980713
    9. '```' → logprob: -6.985640048980713
    10. '            
' → logprob: -7.235640048980713

Token 575: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.006759652402251959
    2. ' A' → logprob: -5.0067596435546875
    3. '	A' → logprob: -10.131759643554688
    4. '   ' → logprob: -12.506759643554688
    5. ' ' → logprob: -15.006759643554688
    6. '=A' → logprob: -16.131759643554688
    7. '    ' → logprob: -16.506759643554688
    8. '_A' → logprob: -16.506759643554688
    9. '  ' → logprob: -16.631759643554688
    10. '           ' → logprob: -16.756759643554688

Token 576: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.407366916188039e-05
    2. 'i' → logprob: -10.375054359436035
    3. '[' → logprob: -10.750054359436035
    4. ' i' → logprob: -14.000054359436035
    5. '	i' → logprob: -16.00005340576172
    6. ' [' → logprob: -16.00005340576172
    7. '(i' → logprob: -16.37505340576172
    8. ',i' → logprob: -17.12505340576172
    9. ' =' → logprob: -17.37505340576172
    10. '   ' → logprob: -17.50005340576172

Token 577: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.249780638725497e-05
    2. ' +' → logprob: -11.125032424926758
    3. '+i' → logprob: -11.875032424926758
    4. ']' → logprob: -12.750032424926758
    5. '[' → logprob: -13.125032424926758
    6. '+
' → logprob: -13.375032424926758
    7. '1' → logprob: -13.625032424926758
    8. '+]' → logprob: -13.625032424926758
    9. '   ' → logprob: -14.125032424926758
    10. 'i' → logprob: -14.875032424926758

Token 578: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '+' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.125001907348633
    4. '   ' → logprob: -17.000001907348633
    5. '```' → logprob: -18.000001907348633
    6. ']' → logprob: -18.125001907348633
    7. 'i' → logprob: -18.375001907348633
    8. '１' → logprob: -18.500001907348633
    9. '  ' → logprob: -19.375001907348633
    10. '    ' → logprob: -19.750001907348633

Token 579: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.4034345187828876e-05
    2. ' ]' → logprob: -10.75002384185791
    3. ']=' → logprob: -13.00002384185791
    4. ']-' → logprob: -15.87502384185791
    5. '=' → logprob: -16.125024795532227
    6. '']' → logprob: -17.375024795532227
    7. '-' → logprob: -17.750024795532227
    8. '[' → logprob: -18.375024795532227
    9. ']
' → logprob: -18.750024795532227
    10. '   ' → logprob: -19.000024795532227

Token 580: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030656682327389717
    2. ' =' → logprob: -3.530656576156616
    3. '-=' → logprob: -7.530656814575195
    4. ' -=' → logprob: -7.905656814575195
    5. '-' → logprob: -15.530656814575195
    6. '.=' → logprob: -15.655656814575195
    7. ' ' → logprob: -16.155656814575195
    8. '   ' → logprob: -16.405656814575195
    9. '＝' → logprob: -17.030656814575195
    10. '+=' → logprob: -17.155656814575195

Token 581: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0076065086759626865
    2. ' A' → logprob: -4.882606506347656
    3. ' ' → logprob: -16.257606506347656
    4. 'x' → logprob: -16.382606506347656
    5. '	A' → logprob: -16.507606506347656
    6. '   ' → logprob: -17.007606506347656
    7. '  ' → logprob: -18.882606506347656
    8. 'a' → logprob: -18.882606506347656
    9. '`' → logprob: -20.007606506347656
    10. 'А' → logprob: -20.257606506347656

Token 582: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.802049756515771e-05
    2. '+' → logprob: -10.250067710876465
    3. 'i' → logprob: -10.625067710876465
    4. '[' → logprob: -11.875067710876465
    5. '1' → logprob: -14.125067710876465
    6. '{i' → logprob: -15.250067710876465
    7. '[
' → logprob: -16.50006866455078
    8. '(i' → logprob: -16.62506866455078
    9. '[next' → logprob: -16.87506866455078
    10. '+i' → logprob: -17.12506866455078

Token 583: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.9153885558771435e-06
    2. '+]' → logprob: -13.000005722045898
    3. '[' → logprob: -13.250005722045898
    4. '1' → logprob: -14.500005722045898
    5. ']' → logprob: -14.625005722045898
    6. '[i' → logprob: -14.750005722045898
    7. '+
' → logprob: -15.750005722045898
    8. 'plus' → logprob: -16.2500057220459
    9. '+i' → logprob: -16.6250057220459
    10. '```' → logprob: -16.8750057220459

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038300611777231097
    2. '+' → logprob: -7.875382900238037
    3. ' ' → logprob: -13.500383377075195
    4. ']' → logprob: -15.312883377075195
    5. '１' → logprob: -15.562883377075195
    6. '   ' → logprob: -15.625383377075195
    7. '
' → logprob: -15.687883377075195
    8. '```' → logprob: -16.312883377075195
    9. ']+' → logprob: -16.375383377075195
    10. '१' → logprob: -16.750383377075195

Token 585: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12694017589092255
    2. '-' → logprob: -2.1269402503967285
    3. ' ' → logprob: -11.87693977355957
    4. ' ' → logprob: -12.75193977355957
    5. ')' → logprob: -13.87693977355957
    6. ']' → logprob: -14.62693977355957
    7. '...' → logprob: -15.00193977355957
    8. '-B' → logprob: -15.75193977355957
    9. '<|end|>' → logprob: -16.87693977355957
    10. '−' → logprob: -17.00193977355957

Token 586: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759532451629639
    2. ' -' → logprob: -0.8259532451629639
    3. ' ' → logprob: -11.825953483581543
    4. '-A' → logprob: -12.825953483581543
    5. ' ' → logprob: -13.325953483581543
    6. '   ' → logprob: -14.200953483581543
    7. '-B' → logprob: -15.325953483581543
    8. '  ' → logprob: -15.825953483581543
    9. '_' → logprob: -16.200952529907227
    10. '−' → logprob: -16.325952529907227

Token 587: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0380416102707386
    2. ' B' → logprob: -3.288041591644287
    3. '           ' → logprob: -15.788042068481445
    4. ' ' → logprob: -17.788042068481445
    5. '       ' → logprob: -18.163042068481445
    6. '	B' → logprob: -18.413042068481445
    7. '   ' → logprob: -18.538042068481445
    8. '               ' → logprob: -19.413042068481445
    9. '         ' → logprob: -19.538042068481445
    10. 'b' → logprob: -19.538042068481445

Token 588: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. 'i' → logprob: -13.125001907348633
    3. '[' → logprob: -15.625001907348633
    4. '{i' → logprob: -17.375001907348633
    5. '(i' → logprob: -17.750001907348633
    6. '	i' → logprob: -19.000001907348633
    7. ' [' → logprob: -19.250001907348633
    8. '[
' → logprob: -19.500001907348633
    9. ' i' → logprob: -19.500001907348633
    10. '_i' → logprob: -19.625001907348633

Token 589: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1491723507642746
    2. '<|end|>' → logprob: -2.024172306060791
    3. ']' → logprob: -5.524172306060791
    4. '}' → logprob: -7.149172306060791
    5. '<|end|>' → logprob: -7.524172306060791
    6. '```' → logprob: -7.649172306060791
    7. '   ' → logprob: -8.14917278289795
    8. '')' → logprob: -9.27417278289795
    9. ')
' → logprob: -9.77417278289795
    10. '
' → logprob: -9.77417278289795

Token 590: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 591: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6561247706413269
    2. 'else' (adapté à ' else') → logprob: -1.1561248302459717
    3. ' else' → logprob: -2.0311248302459717
    4. '	else' → logprob: -3.6561248302459717
    5. '       ' → logprob: -5.031124591827393
    6. '<|end|>' → logprob: -6.281124591827393
    7. '```' → logprob: -8.03112506866455
    8. 'elif' → logprob: -8.40612506866455
    9. '	elif' → logprob: -8.65612506866455
    10. '    ' → logprob: -9.65612506866455

Token 592: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047854550182819366
    2. '       ' → logprob: -3.4228546619415283
    3. '#' → logprob: -4.797854423522949
    4. ':' → logprob: -5.547854423522949
    5. '   ' → logprob: -7.172854423522949
    6. '```' → logprob: -7.422854423522949
    7. ':
' → logprob: -7.672854423522949
    8. '               ' → logprob: -10.54785442352295
    9. 'else' → logprob: -10.79785442352295
    10. '<|end|>' → logprob: -11.29785442352295

Token 593: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04080682620406151
    2. '       ' → logprob: -3.540806770324707
    3. '#' → logprob: -4.665806770324707
    4. 'sum' → logprob: -6.915806770324707
    5. '```' → logprob: -8.040806770324707
    6. '   ' → logprob: -8.665806770324707
    7. ' sum' → logprob: -10.665806770324707
    8. '        ' → logprob: -10.790806770324707
    9. '               ' → logprob: -11.040806770324707
    10. '          ' → logprob: -11.415806770324707

Token 594: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3544067442417145
    2. '#' (adapté à ' #') → logprob: -1.354406714439392
    3. '           ' → logprob: -3.2294068336486816
    4. '       ' → logprob: -7.979406833648682
    5. '   ' → logprob: -8.354406356811523
    6. ' sum' → logprob: -9.104406356811523
    7. '```' → logprob: -11.729406356811523
    8. 'A' → logprob: -12.104406356811523
    9. '               ' → logprob: -12.104406356811523
    10. ' #' → logprob: -12.104406356811523

Token 595: ' Si' (ID: 7832)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.026890341192483902
    2. '#' → logprob: -3.776890277862549
    3. '           ' → logprob: -5.651890277862549
    4. '   ' → logprob: -9.401890754699707
    5. '       ' → logprob: -10.526890754699707
    6. ' sum' → logprob: -11.401890754699707
    7. '```' → logprob: -12.776890754699707
    8. '
' → logprob: -13.776890754699707
    9. '               ' → logprob: -14.151890754699707
    10. '         ' → logprob: -14.651890754699707

Token 596: ' x' (ID: 1215)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.2118010520935059
    2. ' True' → logprob: -1.3368010520935059
    3. '   ' → logprob: -2.336801052093506
    4. ' not' → logprob: -2.461801052093506
    5. '           ' → logprob: -2.836801052093506
    6. 'not' → logprob: -3.086801052093506
    7. 'x' → logprob: -3.211801052093506
    8. ' x' → logprob: -3.461801052093506
    9. '#' → logprob: -3.711801052093506
    10. '    ' → logprob: -4.336801052093506

Token 597: '<' (ID: 27)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.0464357137680054
    2. ' =' → logprob: -1.2964357137680054
    3. ' <' → logprob: -1.5464357137680054
    4. '<' → logprob: -2.671435832977295
    5. '>=' → logprob: -2.671435832977295
    6. '=' → logprob: -4.671435832977295
    7. ' +=' → logprob: -5.171435832977295
    8. ' <=' → logprob: -6.171435832977295
    9. ':' → logprob: -6.421435832977295
    10. '>' → logprob: -6.921435832977295

Token 598: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859725013375282
    2. ' ' → logprob: -3.0485973358154297
    3. '=' → logprob: -11.67359733581543
    4. ' ' → logprob: -14.42359733581543
    5. 'x' → logprob: -16.17359733581543
    6. '   ' → logprob: -16.23609733581543
    7. ' =' → logprob: -16.42359733581543
    8. '  ' → logprob: -16.79859733581543
    9. '۰' → logprob: -17.23609733581543
    10. '1' → logprob: -17.42359733581543

Token 599: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04190133139491081
    2. ':
' → logprob: -3.9169013500213623
    3. '               ' → logprob: -4.666901111602783
    4. ':' → logprob: -5.041901111602783
    5. ',' → logprob: -6.541901111602783
    6. '       ' → logprob: -6.666901111602783
    7. '```' → logprob: -6.791901111602783
    8. '
' → logprob: -7.791901111602783
    9. '):
' → logprob: -8.541901588439941
    10. '   ' → logprob: -8.541901588439941

Token 600: ' cela' (ID: 17542)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.61007159948349
    2. '           ' → logprob: -1.1100716590881348
    3. 'sum' → logprob: -2.1100716590881348
    4. '       ' → logprob: -5.860071659088135
    5. '   ' → logprob: -6.235071659088135
    6. ' sum' → logprob: -7.360071659088135
    7. ' #' → logprob: -8.235071182250977
    8. ' ' → logprob: -9.985071182250977
    9. '         ' → logprob: -10.360071182250977
    10. '               ' → logprob: -10.610071182250977

Token 601: ' veut' (ID: 41653)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026977714151144028
    2. '           ' → logprob: -4.1519775390625
    3. '#' → logprob: -5.1519775390625
    4. ':
' → logprob: -5.6519775390625
    5. '       ' → logprob: -8.1519775390625
    6. 'sum' → logprob: -8.2769775390625
    7. '   ' → logprob: -8.4019775390625
    8. '=' → logprob: -8.5269775390625
    9. ':#' → logprob: -8.9019775390625
    10. ' =' → logprob: -9.0269775390625

Token 602: ' dire' (ID: 4071)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02128087729215622
    2. 'x' → logprob: -4.521280765533447
    3. 'dire' → logprob: -6.271280765533447
    4. 'que' → logprob: -6.521280765533447
    5. '   ' → logprob: -7.021280765533447
    6. ' #' → logprob: -7.271280765533447
    7. '           ' → logprob: -7.396280765533447
    8. '```' → logprob: -7.521280765533447
    9. '       ' → logprob: -7.771280765533447
    10. '=' → logprob: -7.896280765533447

Token 603: ' qu' (ID: 474)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7182042002677917
    2. '           ' → logprob: -0.9682042002677917
    3. ' que' → logprob: -2.9682042598724365
    4. 'A' → logprob: -3.5932042598724365
    5. ' #' → logprob: -3.7182042598724365
    6. '               ' → logprob: -4.343204021453857
    7. 'que' → logprob: -5.343204021453857
    8. ' that' → logprob: -5.968204021453857
    9. '            ' → logprob: -5.968204021453857
    10. ' A' → logprob: -6.343204021453857

Token 604: ''A' (ID: 40735)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5914211273193359
    2. ' A' → logprob: -0.9664211273193359
    3. '#' → logprob: -3.091421127319336
    4. '           ' → logprob: -4.716421127319336
    5. ' on' → logprob: -5.091421127319336
    6. 'on' → logprob: -6.841421127319336
    7. '   ' → logprob: -6.966421127319336
    8. ',' → logprob: -7.466421127319336
    9. ' #' → logprob: -7.466421127319336
    10. 'B' → logprob: -7.716421127319336

Token 605: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007382647134363651
    2. 'i' → logprob: -5.007382869720459
    3. 'A' → logprob: -8.3823823928833
    4. '[' → logprob: -9.1323823928833
    5. '#' → logprob: -9.1323823928833
    6. 'e' → logprob: -10.2573823928833
    7. '[next' → logprob: -10.5073823928833
    8. 'y' → logprob: -11.0073823928833
    9. 'l' → logprob: -11.1323823928833
    10. 'n' → logprob: -11.2573823928833

Token 606: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005885370774194598
    2. '[i' → logprob: -8.375588417053223
    3. ']' → logprob: -8.750588417053223
    4. 'plus' → logprob: -9.625588417053223
    5. '1' → logprob: -10.000588417053223
    6. '+]' → logprob: -10.000588417053223
    7. '[' → logprob: -11.875588417053223
    8. ']+' → logprob: -12.500588417053223
    9. '   ' → logprob: -12.750588417053223
    10. 'Plus' → logprob: -12.750588417053223

Token 607: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014180675148963928
    2. '+' → logprob: -4.264180660247803
    3. ']' → logprob: -12.139181137084961
    4. '
' → logprob: -12.389181137084961
    5. '   ' → logprob: -13.139181137084961
    6. '```' → logprob: -13.639181137084961
    7. ' ' → logprob: -14.014181137084961
    8. 'i' → logprob: -14.514181137084961
    9. ' +' → logprob: -14.639181137084961
    10. '2' → logprob: -14.764181137084961

Token 608: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21807917952537537
    2. 'n' → logprob: -2.593079090118408
    3. ' n' → logprob: -3.593079090118408
    4. '#' → logprob: -4.468079090118408
    5. 'est' → logprob: -4.718079090118408
    6. '           ' → logprob: -4.718079090118408
    7. 'sum' → logprob: -4.968079090118408
    8. ')' → logprob: -5.093079090118408
    9. ' est' → logprob: -5.218079090118408
    10. '>' → logprob: -5.218079090118408

Token 609: ' ne' (ID: 453)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0926862955093384
    2. 'n' → logprob: -1.3426862955093384
    3. ' =' → logprob: -2.217686176300049
    4. ' is' → logprob: -2.342686176300049
    5. '=' → logprob: -3.092686176300049
    6. ' est' → logprob: -3.092686176300049
    7. 'sum' → logprob: -3.717686176300049
    8. 'est' → logprob: -3.967686176300049
    9. ' ne' → logprob: -4.592686176300049
    10. '-' → logprob: -4.842686176300049

Token 610: ' suffit' (ID: 67383)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.03872339427471161
    2. ' pas' → logprob: -3.5387234687805176
    3. 'n' → logprob: -5.788723468780518
    4. 'a' → logprob: -6.538723468780518
    5. 'p' → logprob: -6.913723468780518
    6. 'est' → logprob: -7.538723468780518
    7. ' peut' → logprob: -7.663723468780518
    8. '#' → logprob: -7.788723468780518
    9. 'plus' → logprob: -7.913723468780518
    10. ' n' → logprob: -8.41372299194336

Token 611: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.022419584915041924
    2. '           ' → logprob: -4.522419452667236
    3. ' pas' → logprob: -4.647419452667236
    4. 'plus' → logprob: -6.772419452667236
    5. '       ' → logprob: -8.522419929504395
    6. '#' → logprob: -9.897419929504395
    7. '   ' → logprob: -9.897419929504395
    8. '_pas' → logprob: -10.022419929504395
    9. 'p' → logprob: -10.522419929504395
    10. '		' → logprob: -10.647419929504395

Token 612: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10598661005496979
    2. ':' → logprob: -3.4809865951538086
    3. ' à' → logprob: -3.6059865951538086
    4. '       ' → logprob: -4.105986595153809
    5. 'à' → logprob: -4.855986595153809
    6. ' to' → logprob: -5.105986595153809
    7. 'to' → logprob: -5.605986595153809
    8. ',' → logprob: -6.230986595153809
    9. '   ' → logprob: -6.480986595153809
    10. '               ' → logprob: -6.855986595153809

Token 613: ' comb' (ID: 4134)
  Prédit: ' couvrir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couvrir' → logprob: -0.12810152769088745
    2. 'cover' → logprob: -3.7531015872955322
    3. 's' → logprob: -3.8781015872955322
    4. 'c' → logprob: -4.003101348876953
    5. 'A' → logprob: -4.128101348876953
    6. ' satisfaire' → logprob: -4.378101348876953
    7. ' fournir' → logprob: -4.628101348876953
    8. 'f' → logprob: -5.503101348876953
    9. 'tout' → logprob: -6.253101348876953
    10. '#' → logprob: -6.628101348876953

Token 614: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.003018826013430953
    2. 'iner' → logprob: -5.878018856048584
    3. 'er' → logprob: -9.503018379211426
    4. 'le' → logprob: -10.253018379211426
    5. '#' → logprob: -10.378018379211426
    6. 'let' → logprob: -10.753018379211426
    7. 'les' → logprob: -12.128018379211426
    8. 'bler' → logprob: -12.378018379211426
    9. '```' → logprob: -12.753018379211426
    10. 'oir' → logprob: -12.878018379211426

Token 615: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.020302679389715195
    2. ' B' → logprob: -4.645302772521973
    3. 'A' → logprob: -5.145302772521973
    4. 'abs' → logprob: -6.520302772521973
    5. 'tout' → logprob: -6.520302772521973
    6. 'la' → logprob: -7.895302772521973
    7. '-B' → logprob: -8.270302772521973
    8. ' la' → logprob: -8.895302772521973
    9. 'all' → logprob: -9.020302772521973
    10. ' tout' → logprob: -9.020302772521973

Token 616: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.875007629394531
    3. 'i' → logprob: -13.125007629394531
    4. '[j' → logprob: -13.875007629394531
    5. '```' → logprob: -14.250007629394531
    6. '[next' → logprob: -14.750007629394531
    7. '(i' → logprob: -15.500007629394531
    8. '   ' → logprob: -16.50000762939453
    9. '[I' → logprob: -16.87500762939453
    10. '1' → logprob: -17.25000762939453

Token 617: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.671806275844574
    2. '[i' → logprob: -1.0468063354492188
    3. '           ' → logprob: -3.5468063354492188
    4. ')' → logprob: -4.046806335449219
    5. '```' → logprob: -4.671806335449219
    6. ':' → logprob: -4.796806335449219
    7. '.' → logprob: -4.796806335449219
    8. '   ' → logprob: -5.046806335449219
    9. '],' → logprob: -5.046806335449219
    10. ']
' → logprob: -5.171806335449219

Token 618: '           ' (ID: 352)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.010571977123618126
    2. '           ' → logprob: -4.6355719566345215
    3. '   ' → logprob: -7.6355719566345215
    4. '       ' → logprob: -9.01057243347168
    5. '```' → logprob: -9.01057243347168
    6. ' sum' → logprob: -9.51057243347168
    7. 'A' → logprob: -12.26057243347168
    8. '``' → logprob: -13.01057243347168
    9. '	sum' → logprob: -13.01057243347168
    10. '#' → logprob: -13.13557243347168

Token 619: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0025296485982835293
    2. '           ' → logprob: -6.002529621124268
    3. ' sum' → logprob: -10.377530097961426
    4. '#' (adapté à ' #') → logprob: -11.877530097961426
    5. '   ' → logprob: -11.877530097961426
    6. '       ' → logprob: -13.002530097961426
    7. 'A' → logprob: -13.002530097961426
    8. '```' → logprob: -13.252530097961426
    9. '               ' → logprob: -13.752530097961426
    10. '	sum' → logprob: -14.502530097961426

Token 620: ' On' (ID: 2160)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00010223194840364158
    2. '           ' → logprob: -9.250102043151855
    3. ' sum' → logprob: -12.625102043151855
    4. '#' → logprob: -14.000102043151855
    5. '
' → logprob: -14.500102043151855
    6. '       ' → logprob: -14.625102043151855
    7. '   ' → logprob: -14.875102043151855
    8. '```' → logprob: -15.000102043151855
    9. '         ' → logprob: -16.875102996826172
    10. '	sum' → logprob: -17.000102996826172

Token 621: ' ajoute' (ID: 91611)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.22934673726558685
    2. ' sum' → logprob: -1.979346752166748
    3. '           ' → logprob: -3.479346752166748
    4. '#' → logprob: -3.979346752166748
    5. '       ' → logprob: -4.729346752166748
    6. 'continue' → logprob: -5.729346752166748
    7. '   ' → logprob: -6.354346752166748
    8. ' #' → logprob: -6.729346752166748
    9. ' continue' → logprob: -7.104346752166748
    10. '    ' → logprob: -8.72934627532959

Token 622: ' donc' (ID: 14206)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04333062842488289
    2. ' A' → logprob: -3.168330669403076
    3. '           ' → logprob: -8.668330192565918
    4. '   ' → logprob: -9.668330192565918
    5. '	A' → logprob: -10.543330192565918
    6. '+A' → logprob: -11.293330192565918
    7. '               ' → logprob: -11.418330192565918
    8. ' ' → logprob: -11.668330192565918
    9. '                   ' → logprob: -12.293330192565918
    10. '  ' → logprob: -12.418330192565918

Token 623: ' tout' (ID: 5501)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0042447238229215145
    2. ' A' → logprob: -5.504244804382324
    3. '           ' → logprob: -10.254244804382324
    4. '   ' → logprob: -10.629244804382324
    5. '```' → logprob: -11.004244804382324
    6. 'ent' → logprob: -11.129244804382324
    7. '	A' → logprob: -11.629244804382324
    8. 'tout' → logprob: -11.629244804382324
    9. ' ' → logprob: -11.879244804382324
    10. '
' → logprob: -12.379244804382324

Token 624: ' ce' (ID: 2357)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0005234848940744996
    2. ' A' → logprob: -8.125523567199707
    3. '   ' → logprob: -8.750523567199707
    4. '           ' → logprob: -11.250523567199707
    5. '       ' → logprob: -11.375523567199707
    6. '(A' → logprob: -11.500523567199707
    7. '+A' → logprob: -12.000523567199707
    8. '```' → logprob: -12.250523567199707
    9. 'abs' → logprob: -12.875523567199707
    10. '+' → logprob: -12.875523567199707

Token 625: ' qu' (ID: 474)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6140431761741638
    2. '+' → logprob: -1.3640432357788086
    3. '           ' → logprob: -2.2390432357788086
    4. '[i' → logprob: -4.114043235778809
    5. 'à' → logprob: -4.114043235778809
    6. '[A' → logprob: -4.114043235778809
    7. '[' → logprob: -4.364043235778809
    8. '+A' → logprob: -4.739043235778809
    9. '```' → logprob: -5.239043235778809
    10. '   ' → logprob: -5.489043235778809

Token 626: ''il' (ID: 14683)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06596209853887558
    2. 'a' → logprob: -3.065962076187134
    3. '#' → logprob: -4.940962314605713
    4. 'on' → logprob: -5.065962314605713
    5. '```' → logprob: -6.690962314605713
    6. ''on' → logprob: -8.315961837768555
    7. 'poss' → logprob: -8.315961837768555
    8. 'de' → logprob: -8.815961837768555
    9. 'à' → logprob: -8.815961837768555
    10. 'avait' → logprob: -8.940961837768555

Token 627: ' reste' (ID: 26769)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31576716899871826
    2. 'y' → logprob: -1.3157671689987183
    3. 'A' → logprob: -7.065767288208008
    4. ' y' → logprob: -7.065767288208008
    5. 'reste' → logprob: -8.065767288208008
    6. ' a' → logprob: -8.190767288208008
    7. 'ya' → logprob: -10.315767288208008
    8. 'rest' → logprob: -10.690767288208008
    9. 'à' → logprob: -10.940767288208008
    10. ' reste' → logprob: -11.065767288208008

Token 628: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6416203379631042
    2. '+' → logprob: -1.766620397567749
    3. ' de' → logprob: -2.766620397567749
    4. ' +' → logprob: -3.016620397567749
    5. 'A' → logprob: -3.141620397567749
    6. 'de' → logprob: -3.391620397567749
    7. ' à' → logprob: -3.641620397567749
    8. 'à' → logprob: -3.766620397567749
    9. '   ' → logprob: -3.891620397567749
    10. '               ' → logprob: -4.14162015914917

Token 629: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00033558503491804004
    2. ' A' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.250335693359375
    4. 'a' → logprob: -17.750335693359375
    5. '```' → logprob: -17.750335693359375
    6. '	A' → logprob: -18.125335693359375
    7. ' ' → logprob: -18.375335693359375
    8. '
' → logprob: -18.625335693359375
    9. '`' → logprob: -18.750335693359375
    10. 'l' → logprob: -19.250335693359375

Token 630: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4498052223643754e-05
    2. '[' → logprob: -11.500014305114746
    3. 'i' → logprob: -12.625014305114746
    4. '```' → logprob: -14.750014305114746
    5. '   ' → logprob: -15.875014305114746
    6. ' [' → logprob: -16.250015258789062
    7. '
' → logprob: -16.875015258789062
    8. '[++' → logprob: -17.500015258789062
    9. '[j' → logprob: -17.500015258789062
    10. '(i' → logprob: -17.750015258789062

Token 631: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00042292833677493036
    2. '[' → logprob: -8.375422477722168
    3. '[i' → logprob: -8.625422477722168
    4. ']' → logprob: -12.750422477722168
    5. ' +' → logprob: -13.000422477722168
    6. '+i' → logprob: -13.125422477722168
    7. ']+' → logprob: -13.875422477722168
    8. '```' → logprob: -14.250422477722168
    9. '   ' → logprob: -14.500422477722168
    10. '[next' → logprob: -14.875422477722168

Token 632: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035360404290258884
    2. '+' → logprob: -5.878536224365234
    3. 'i' → logprob: -7.253536224365234
    4. '```' → logprob: -11.503536224365234
    5. '[i' → logprob: -12.253536224365234
    6. ' ' → logprob: -13.253536224365234
    7. '   ' → logprob: -13.378536224365234
    8. '(i' → logprob: -14.003536224365234
    9. ']' → logprob: -14.253536224365234
    10. '2' → logprob: -14.503536224365234

Token 633: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20835323631763458
    2. ')' → logprob: -2.083353281021118
    3. '           ' → logprob: -2.958353281021118
    4. ' à' → logprob: -4.958353042602539
    5. '               ' → logprob: -6.708353042602539
    6. 'à' → logprob: -7.458353042602539
    7. ' to' → logprob: -7.583353042602539
    8. ']+' → logprob: -8.083353042602539
    9. '   ' → logprob: -8.333353042602539
    10. '       ' → logprob: -8.458353042602539

Token 634: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007463227026164532
    2. '+' → logprob: -5.507463455200195
    3. ' +' → logprob: -6.382463455200195
    4. '       ' → logprob: -6.882463455200195
    5. '   ' → logprob: -8.757463455200195
    6. '```' → logprob: -9.007463455200195
    7. '               ' → logprob: -9.257463455200195
    8. ' to' → logprob: -9.507463455200195
    9. 'to' → logprob: -9.882463455200195
    10. 'A' → logprob: -10.507463455200195

Token 635: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0005165747134014964
    2. ' sum' → logprob: -7.625516414642334
    3. 'A' → logprob: -10.500516891479492
    4. 's' → logprob: -15.125516891479492
    5. ' A' → logprob: -15.750516891479492
    6. '	sum' → logprob: -16.000516891479492
    7. 'la' → logprob: -16.125516891479492
    8. 'summ' → logprob: -16.375516891479492
    9. '(sum' → logprob: -16.750516891479492
    10. '   ' → logprob: -16.875516891479492

Token 636: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00152009935118258
    2. 'sum' → logprob: -6.626520156860352
    3. '+' → logprob: -9.251520156860352
    4. '       ' → logprob: -10.126520156860352
    5. '               ' → logprob: -11.001520156860352
    6. ' +' → logprob: -11.251520156860352
    7. '   ' → logprob: -11.376520156860352
    8. ' sum' → logprob: -11.751520156860352
    9. '          ' → logprob: -12.876520156860352
    10. '=' → logprob: -13.501520156860352

Token 637: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20215056836605072
    2. 'sum' → logprob: -1.702150583267212
    3. '       ' → logprob: -7.577150344848633
    4. '```' → logprob: -9.202150344848633
    5. ' sum' → logprob: -9.327150344848633
    6. '   ' → logprob: -10.702150344848633
    7. '               ' → logprob: -11.577150344848633
    8. '          ' → logprob: -13.952150344848633
    9. '	sum' → logprob: -14.827150344848633
    10. '``' → logprob: -14.952150344848633

Token 638: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -4.127333340875339e-06
    2. '           ' → logprob: -12.875003814697266
    3. ' sum' → logprob: -13.500003814697266
    4. '	sum' → logprob: -17.875003814697266
    5. '       ' → logprob: -18.750003814697266
    6. '   ' → logprob: -19.125003814697266
    7. '+' → logprob: -22.000003814697266
    8. 'summ' → logprob: -22.000003814697266
    9. 's' → logprob: -22.125003814697266
    10. '_sum' → logprob: -22.375003814697266

Token 639: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520596385002136
    2. ' =' → logprob: -1.5020596981048584
    3. '+=' → logprob: -9.377059936523438
    4. ' +=' → logprob: -10.127059936523438
    5. '+' → logprob: -12.252059936523438
    6. '=sum' → logprob: -14.502059936523438
    7. '   ' → logprob: -15.252059936523438
    8. ' +' → logprob: -15.252059936523438
    9. ' ' → logprob: -15.877059936523438
    10. 'sum' → logprob: -17.252059936523438

Token 640: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04858805239200592
    2. ' sum' → logprob: -3.0485880374908447
    3. '	sum' → logprob: -14.548587799072266
    4. '(sum' → logprob: -16.798587799072266
    5. 's' → logprob: -17.173587799072266
    6. ' ' → logprob: -17.923587799072266
    7. ' suma' → logprob: -18.423587799072266
    8. '=sum' → logprob: -18.423587799072266
    9. '_sum' → logprob: -18.923587799072266
    10. ' ' → logprob: -18.923587799072266

Token 641: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47407910227775574
    2. ' +' → logprob: -0.9740791320800781
    3. ' ' → logprob: -13.849079132080078
    4. ' plus' → logprob: -14.599079132080078
    5. ' ' → logprob: -14.724079132080078
    6. '+A' → logprob: -16.474079132080078
    7. '	' → logprob: -17.099079132080078
    8. '   ' → logprob: -17.099079132080078
    9. '＋' → logprob: -17.099079132080078
    10. '```' → logprob: -17.974079132080078

Token 642: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0013266648165881634
    2. ' A' → logprob: -6.626326560974121
    3. ' ' → logprob: -15.126326560974121
    4. '(A' → logprob: -15.376326560974121
    5. '   ' → logprob: -16.376327514648438
    6. 'abs' → logprob: -17.251327514648438
    7. ' (' → logprob: -17.251327514648438
    8. '  ' → logprob: -17.376327514648438
    9. '	A' → logprob: -17.501327514648438
    10. 'max' → logprob: -17.626327514648438

Token 643: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.625004768371582
    3. 'i' → logprob: -13.500004768371582
    4. ' [' → logprob: -18.375003814697266
    5. '{i' → logprob: -19.000003814697266
    6. '(i' → logprob: -19.375003814697266
    7. '```' → logprob: -19.750003814697266
    8. '[I' → logprob: -19.875003814697266
    9. ' i' → logprob: -20.125003814697266
    10. '[++' → logprob: -20.375003814697266

Token 644: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.1928003813372925e-05
    2. '[' → logprob: -10.000051498413086
    3. '[i' → logprob: -12.750051498413086
    4. ' +' → logprob: -14.000051498413086
    5. '1' → logprob: -14.250051498413086
    6. ']' → logprob: -14.375051498413086
    7. ']+' → logprob: -14.625051498413086
    8. '   ' → logprob: -15.000051498413086
    9. '+i' → logprob: -15.500051498413086
    10. '+
' → logprob: -15.875051498413086

Token 645: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004886920796707273
    2. '+' → logprob: -7.625488758087158
    3. ' ' → logprob: -14.50048828125
    4. '
' → logprob: -16.87548828125
    5. '   ' → logprob: -16.87548828125
    6. '```' → logprob: -16.87548828125
    7. 'i' → logprob: -17.12548828125
    8. '[' → logprob: -17.87548828125
    9. ' +' → logprob: -18.75048828125
    10. '2' → logprob: -18.81298828125

Token 646: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2655879557132721
    2. ']' → logprob: -1.7655879259109497
    3. '<|end|>' → logprob: -2.8905880451202393
    4. ')
' → logprob: -5.51558780670166
    5. '
' → logprob: -7.39058780670166
    6. '<|end|>' → logprob: -7.51558780670166
    7. ']
' → logprob: -7.89058780670166
    8. '   ' → logprob: -8.26558780670166
    9. '+' → logprob: -8.51558780670166
    10. '])' → logprob: -8.76558780670166

Token 647: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6325861215591431
    2. 'A' → logprob: -1.132586121559143
    3. '<|end|>' → logprob: -2.1325860023498535
    4. ' A' → logprob: -4.7575860023498535
    5. '0' → logprob: -5.5075860023498535
    6. '    ' → logprob: -6.1325860023498535
    7. '	A' → logprob: -6.1325860023498535
    8. '           ' → logprob: -6.5075860023498535
    9. '```' → logprob: -6.5075860023498535
    10. '+' → logprob: -6.5075860023498535

Token 648: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.26193609833717346
    2. ' A' → logprob: -2.5119361877441406
    3. '   ' → logprob: -2.8869361877441406
    4. '<|end|>' → logprob: -2.8869361877441406
    5. 'i' → logprob: -4.136936187744141
    6. 'continue' → logprob: -5.011936187744141
    7. '```' → logprob: -5.511936187744141
    8. ' continue' → logprob: -6.511936187744141
    9. '    ' → logprob: -6.511936187744141
    10. '	A' → logprob: -6.636936187744141

Token 649: ' On' (ID: 2160)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0010108959395438433
    2. 'i' → logprob: -8.25101089477539
    3. '#' → logprob: -8.37601089477539
    4. 'continue' → logprob: -8.62601089477539
    5. 'print' → logprob: -8.62601089477539
    6. '           ' → logprob: -9.62601089477539
    7. '   ' → logprob: -10.25101089477539
    8. ' A' → logprob: -11.00101089477539
    9. '```' → logprob: -11.50101089477539
    10. 'B' → logprob: -11.62601089477539

Token 650: ' met' (ID: 1421)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.024996858090162277
    2. '#' → logprob: -4.899996757507324
    3. ' A' → logprob: -5.149996757507324
    4. '[i' → logprob: -5.899996757507324
    5. 'i' → logprob: -6.149996757507324
    6. ' =' → logprob: -6.649996757507324
    7. '[' → logprob: -6.899996757507324
    8. '=' → logprob: -7.024996757507324
    9. ' i' → logprob: -7.649996757507324
    10. 'continue' → logprob: -7.649996757507324

Token 651: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.008047692477703094
    2. 'à' → logprob: -5.883047580718994
    3. ' A' → logprob: -6.133047580718994
    4. ' à' → logprob: -6.258047580718994
    5. '#' → logprob: -7.633047580718994
    6. '           ' → logprob: -8.258048057556152
    7. '```' → logprob: -8.633048057556152
    8. ' alors' → logprob: -9.758048057556152
    9. 'À' → logprob: -9.758048057556152
    10. '   ' → logprob: -10.008048057556152

Token 652: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.167648876318708e-05
    2. '[' → logprob: -10.750041961669922
    3. 'i' → logprob: -11.750041961669922
    4. 'A' → logprob: -11.875041961669922
    5. '(i' → logprob: -13.875041961669922
    6. '```' → logprob: -14.000041961669922
    7. '[j' → logprob: -14.375041961669922
    8. '[++' → logprob: -14.750041961669922
    9. '   ' → logprob: -15.000041961669922
    10. '
' → logprob: -15.125041961669922

Token 653: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005272957496345043
    2. '[i' → logprob: -7.750527381896973
    3. '[' → logprob: -9.375527381896973
    4. '[next' → logprob: -12.375527381896973
    5. ']' → logprob: -13.000527381896973
    6. '[++' → logprob: -13.750527381896973
    7. '+
' → logprob: -14.125527381896973
    8. 'i' → logprob: -14.625527381896973
    9. '[
' → logprob: -14.750527381896973
    10. '][' → logprob: -15.000527381896973

Token 654: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1298106610774994
    2. '+' → logprob: -2.1298105716705322
    3. 'i' → logprob: -5.879810810089111
    4. '2' → logprob: -9.879810333251953
    5. '[i' → logprob: -11.004810333251953
    6. '[' → logprob: -12.254810333251953
    7. '   ' → logprob: -13.004810333251953
    8. '+i' → logprob: -13.254810333251953
    9. '```' → logprob: -13.379810333251953
    10. 'A' → logprob: -14.004810333251953

Token 655: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2835816442966461
    2. ' =' → logprob: -1.4085816144943237
    3. '[i' → logprob: -6.158581733703613
    4. '[' → logprob: -8.783581733703613
    5. ']' → logprob: -9.158581733703613
    6. ']=' → logprob: -10.783581733703613
    7. 'A' → logprob: -11.158581733703613
    8. '#' → logprob: -12.658581733703613
    9. ' ' → logprob: -13.283581733703613
    10. '[j' → logprob: -13.408581733703613

Token 656: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004576446022838354
    2. ' =' → logprob: -5.504576683044434
    3. '[' → logprob: -7.754576683044434
    4. '[i' → logprob: -9.629576683044434
    5. 'A' → logprob: -14.379576683044434
    6. '[:]' → logprob: -14.629576683044434
    7. '=[]' → logprob: -15.129576683044434
    8. '[]=' → logprob: -15.254576683044434
    9. '=A' → logprob: -15.254576683044434
    10. '[]' → logprob: -15.379576683044434

Token 657: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'zero' → logprob: -21.5
    4. '۰' → logprob: -21.75
    5. '０' → logprob: -23.375
    6. '```' → logprob: -23.75
    7. ' zéro' → logprob: -23.875
    8. '[' → logprob: -23.875
    9. 'A' → logprob: -24.0
    10. '000' → logprob: -24.375

Token 658: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6209328174591064
    2. '=' → logprob: -0.8709328174591064
    3. '           ' → logprob: -3.3709328174591064
    4. 'A' → logprob: -4.995932579040527
    5. '=A' → logprob: -6.370932579040527
    6. '   ' → logprob: -7.495932579040527
    7. '
' → logprob: -8.995932579040527
    8. ' A' → logprob: -8.995932579040527
    9. '               ' → logprob: -9.495932579040527
    10. '            
' → logprob: -9.870932579040527

Token 659: ' car' (ID: 1669)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4053793251514435
    2. '           ' → logprob: -1.155379295349121
    3. ' A' → logprob: -4.155379295349121
    4. '   ' → logprob: -7.280379295349121
    5. '\n' → logprob: -7.905379295349121
    6. '               ' → logprob: -8.030379295349121
    7. '
' → logprob: -8.155379295349121
    8. '            
' → logprob: -8.530379295349121
    9. '       ' → logprob: -8.655379295349121
    10. '0' → logprob: -8.655379295349121

Token 660: ' tout' (ID: 5501)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -7.93448489275761e-05
    2. 'A' → logprob: -9.875079154968262
    3. ' ' → logprob: -10.500079154968262
    4. ' A' → logprob: -15.375079154968262
    5. '   ' → logprob: -17.000080108642578
    6. '           ' → logprob: -18.875080108642578
    7. '
' → logprob: -19.875080108642578
    8. '  ' → logprob: -20.000080108642578
    9. '       ' → logprob: -20.125080108642578
    10. '[]' → logprob: -20.125080108642578

Token 661: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.012719656340777874
    2. ' A' → logprob: -4.512719631195068
    3. 'a' → logprob: -6.887719631195068
    4. ' a' → logprob: -7.762719631195068
    5. ' ' → logprob: -9.387720108032227
    6. 'l' → logprob: -10.137720108032227
    7. '#' → logprob: -10.887720108032227
    8. 'n' → logprob: -10.887720108032227
    9. ' ce' → logprob: -11.012720108032227
    10. '   ' → logprob: -12.137720108032227

Token 662: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.6421858072280884
    2. ' été' → logprob: -0.8921858072280884
    3. 'A' → logprob: -2.767185688018799
    4. ' ' → logprob: -7.892185688018799
    5. ' A' → logprob: -8.142186164855957
    6. 'a' → logprob: -8.267186164855957
    7. '#' → logprob: -9.142186164855957
    8. '  ' → logprob: -9.767186164855957
    9. 'ét' → logprob: -10.767186164855957
    10. ' ' → logprob: -10.892186164855957

Token 663: ' utilisé' (ID: 53138)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.3903658390045166
    2. 'cons' → logprob: -1.2653658390045166
    3. ' consomm' → logprob: -3.3903658390045166
    4. 'd' → logprob: -5.3903656005859375
    5. ' utilisé' → logprob: -6.1403656005859375
    6. 'pris' → logprob: -8.640365600585938
    7. 'used' → logprob: -9.015365600585938
    8. 'A' → logprob: -9.265365600585938
    9. 'ép' → logprob: -9.765365600585938
    10. '
' → logprob: -10.890365600585938

Token 664: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6222237944602966
    2. ' =' → logprob: -1.6222238540649414
    3. 'A' → logprob: -1.7472238540649414
    4. '           ' → logprob: -2.4972238540649414
    5. '=A' → logprob: -5.747223854064941
    6. '   ' → logprob: -6.247223854064941
    7. '[i' → logprob: -6.997223854064941
    8. '               ' → logprob: -6.997223854064941
    9. '.' → logprob: -7.997223854064941
    10. ' A' → logprob: -7.997223854064941

Token 665: '           ' (ID: 352)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2240464836359024
    2. '   ' → logprob: -2.974046468734741
    3. '```' → logprob: -2.974046468734741
    4. '           ' → logprob: -3.099046468734741
    5. '	A' → logprob: -3.599046468734741
    6. ' A' → logprob: -4.09904670715332
    7. '``' → logprob: -5.84904670715332
    8. '       ' → logprob: -6.09904670715332
    9. '
' → logprob: -6.72404670715332
    10. '=A' → logprob: -7.34904670715332

Token 666: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0015130772953853011
    2. ' A' → logprob: -6.5015130043029785
    3. '```' → logprob: -12.126513481140137
    4. '0' → logprob: -13.626513481140137
    5. '=' → logprob: -14.126513481140137
    6. '`' → logprob: -14.251513481140137
    7. '           ' → logprob: -14.376513481140137
    8. ' =' → logprob: -14.501513481140137
    9. '   ' → logprob: -14.626513481140137
    10. '=A' → logprob: -14.751513481140137

Token 667: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002120038407156244
    2. '[' → logprob: -8.500211715698242
    3. 'i' → logprob: -11.875211715698242
    4. ' [' → logprob: -14.375211715698242
    5. '[I' → logprob: -15.250211715698242
    6. '```' → logprob: -15.250211715698242
    7. '1' → logprob: -16.250211715698242
    8. '\[' → logprob: -16.750211715698242
    9. '[
' → logprob: -16.875211715698242
    10. ' i' → logprob: -16.875211715698242

Token 668: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4498052223643754e-05
    2. '+i' → logprob: -12.000014305114746
    3. 'i' → logprob: -12.750014305114746
    4. '[' → logprob: -13.000014305114746
    5. '[i' → logprob: -13.375014305114746
    6. '1' → logprob: -14.000014305114746
    7. ' +' → logprob: -15.125014305114746
    8. '+
' → logprob: -15.250014305114746
    9. '+[' → logprob: -17.000015258789062
    10. ']' → logprob: -17.375015258789062

Token 669: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. '2' → logprob: -11.375015258789062
    3. '+' → logprob: -13.000015258789062
    4. ' ' → logprob: -14.000015258789062
    5. '[' → logprob: -15.125015258789062
    6. '   ' → logprob: -16.250015258789062
    7. '<|end|>' → logprob: -16.250015258789062
    8. ']' → logprob: -16.500015258789062
    9. '```' → logprob: -16.812515258789062
    10. '  ' → logprob: -17.125015258789062

Token 670: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014692598779220134
    2. ']=' → logprob: -8.875146865844727
    3. '=' → logprob: -12.125146865844727
    4. ' ]' → logprob: -13.625146865844727
    5. '']' → logprob: -15.625146865844727
    6. ' =' → logprob: -15.875146865844727
    7. '[' → logprob: -16.625146865844727
    8. '"]' → logprob: -17.625146865844727
    9. ']
' → logprob: -17.750146865844727
    10. ')' → logprob: -18.125146865844727

Token 671: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017021986423060298
    2. ' =' → logprob: -6.376702308654785
    3. '[' → logprob: -18.12670135498047
    4. ' ' → logprob: -18.50170135498047
    5. '=
' → logprob: -18.87670135498047
    6. ')' → logprob: -18.87670135498047
    7. '=

' → logprob: -19.25170135498047
    8. '```' → logprob: -19.50170135498047
    9. '＝' → logprob: -19.62670135498047
    10. '   ' → logprob: -19.75170135498047

Token 672: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -20.625003814697266
    4. '۰' → logprob: -21.875003814697266
    5. '00' → logprob: -22.125003814697266
    6. '000' → logprob: -22.375003814697266
    7. ' ' → logprob: -22.750003814697266
    8. '```' → logprob: -22.875003814697266
    9. '  ' → logprob: -23.000003814697266
    10. ' ' → logprob: -23.500003814697266

Token 673: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '00' → logprob: -21.25
    4. '000' → logprob: -21.5
    5. '۰' → logprob: -21.875
    6. '   ' → logprob: -22.0
    7. '```' → logprob: -22.25
    8. '０' → logprob: -23.375
    9. '  ' → logprob: -24.25
    10. '[' → logprob: -24.625

Token 674: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 675: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13684594631195068
    2. '<|end|>' → logprob: -2.2618460655212402
    3. ')' → logprob: -4.76184606552124
    4. '
' → logprob: -5.26184606552124
    5. '#' → logprob: -5.38684606552124
    6. ' print' → logprob: -6.51184606552124
    7. '```' → logprob: -6.63684606552124
    8. ' ' → logprob: -6.88684606552124
    9. ']' → logprob: -8.011845588684082
    10. '   ' → logprob: -8.511845588684082

Token 676: ' À' (ID: 27643)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.0
    3. '#print' → logprob: -20.5
    4. '```' → logprob: -20.875
    5. 'pr' → logprob: -21.375
    6. '#' → logprob: -21.5
    7. 'prin' → logprob: -21.5
    8. '
' → logprob: -21.625
    9. 'prit' → logprob: -24.125
    10. 'Print' → logprob: -24.375

Token 677: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008721763268113136
    2. ' print' → logprob: -4.758721828460693
    3. 'r' → logprob: -9.633721351623535
    4. '#' → logprob: -10.883721351623535
    5. '(print' → logprob: -12.133721351623535
    6. ')' → logprob: -12.758721351623535
    7. '
' → logprob: -13.008721351623535
    8. '#print' → logprob: -13.258721351623535
    9. '.print' → logprob: -13.258721351623535
    10. 'p' → logprob: -13.383721351623535

Token 678: ' fin' (ID: 2131)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004441355704329908
    2. ' print' → logprob: -7.750443935394287
    3. ')' → logprob: -12.375444412231445
    4. '#' → logprob: -12.625444412231445
    5. '
' → logprob: -13.250444412231445
    6. 'Print' → logprob: -14.125444412231445
    7. 'for' → logprob: -14.625444412231445
    8. '```' → logprob: -14.625444412231445
    9. 'pr' → logprob: -15.000444412231445
    10. '.print' → logprob: -15.250444412231445

Token 679: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00021855637896806002
    2. '
' → logprob: -8.625218391418457
    3. ' print' → logprob: -10.375218391418457
    4. '#' → logprob: -12.625218391418457
    5. ')' → logprob: -12.750218391418457
    6. '#print' → logprob: -14.125218391418457
    7. '.print' → logprob: -14.875218391418457
    8. '(print' → logprob: -15.625218391418457
    9. '

' → logprob: -16.375219345092773
    10. ')
' → logprob: -16.625219345092773

Token 680: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0021707206033170223
    2. ' print' → logprob: -6.877170562744141
    3. 'range' → logprob: -7.252170562744141
    4. 'la' → logprob: -8.25217056274414
    5. '#' → logprob: -9.62717056274414
    6. 'l' → logprob: -10.50217056274414
    7. ' la' → logprob: -10.87717056274414
    8. 'code' → logprob: -11.25217056274414
    9. 'le' → logprob: -11.25217056274414
    10. 'for' → logprob: -11.62717056274414

Token 681: ' boucle' (ID: 174211)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04792477563023567
    2. 'for' → logprob: -3.172924757003784
    3. 'code' → logprob: -5.672924995422363
    4. 'program' → logprob: -7.297924995422363
    5. 'bou' → logprob: -8.547924995422363
    6. 'programme' → logprob: -8.672924995422363
    7. '#' → logprob: -9.047924995422363
    8. ' for' → logprob: -9.422924995422363
    9. ' boucle' → logprob: -9.672924995422363
    10. ' print' → logprob: -9.797924995422363

Token 682: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0013032146962359548
    2. '
' → logprob: -6.876303195953369
    3. ' print' → logprob: -8.251303672790527
    4. ')' → logprob: -12.376303672790527
    5. '.print' → logprob: -13.376303672790527
    6. ')
' → logprob: -13.876303672790527
    7. '(print' → logprob: -14.251303672790527
    8. '
' → logprob: -14.876303672790527
    9. '<|end|>' → logprob: -15.126303672790527
    10. '#' → logprob: -15.126303672790527

Token 683: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.8444881536415778e-05
    2. ' print' → logprob: -10.500028610229492
    3. '
' → logprob: -14.125028610229492
    4. '#' → logprob: -16.250028610229492
    5. '#print' → logprob: -17.125028610229492
    6. '```' → logprob: -18.500028610229492
    7. '    
' → logprob: -20.125028610229492
    8. '.print' → logprob: -20.125028610229492
    9. '	print' → logprob: -20.750028610229492
    10. '(print' → logprob: -20.750028610229492

Token 684: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016921341011766344
    2. ' print' → logprob: -8.875168800354004
    3. '#' → logprob: -10.500168800354004
    4. '#print' → logprob: -13.875168800354004
    5. '
' → logprob: -14.250168800354004
    6. '.print' → logprob: -16.50016975402832
    7. 'Print' → logprob: -17.87516975402832
    8. 'prints' → logprob: -18.12516975402832
    9. 'pr' → logprob: -18.37516975402832
    10. '_print' → logprob: -18.75016975402832

Token 685: ' la' (ID: 557)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.00892275758087635
    2. '(' → logprob: -5.008922576904297
    3. 'sum' → logprob: -6.258922576904297
    4. '(
' → logprob: -8.258922576904297
    5. '(print' → logprob: -10.758922576904297
    6. 'print' → logprob: -11.758922576904297
    7. '(

' → logprob: -13.508922576904297
    8. ' (' → logprob: -14.508922576904297
    9. '()' → logprob: -14.633922576904297
    10. ' sum' → logprob: -14.758922576904297

Token 686: ' valeur' (ID: 41664)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.08999362587928772
    2. 'print' → logprob: -2.964993715286255
    3. 'result' → logprob: -3.839993715286255
    4. '(sum' → logprob: -4.964993476867676
    5. 'value' → logprob: -6.339993476867676
    6. ' sum' → logprob: -6.964993476867676
    7. '(' → logprob: -6.964993476867676
    8. 'val' → logprob: -7.214993476867676
    9. 'total' → logprob: -7.714993476867676
    10. 's' → logprob: -7.964993476867676

Token 687: ' totale' (ID: 52898)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.03061494790017605
    2. '(' → logprob: -3.5306148529052734
    3. '(
' → logprob: -8.030614852905273
    4. 'sum' → logprob: -8.280614852905273
    5. '(print' → logprob: -8.280614852905273
    6. 'print' → logprob: -10.655614852905273
    7. ' (' → logprob: -12.405614852905273
    8. '(

' → logprob: -13.405614852905273
    9. '()' → logprob: -13.780614852905273
    10. '(`' → logprob: -15.155614852905273

Token 688: ' stock' (ID: 6546)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00034952821442857385
    2. '(' → logprob: -8.750349998474121
    3. '(print' → logprob: -8.750349998474121
    4. ' print' → logprob: -10.625349998474121
    5. '(sum' → logprob: -12.750349998474121
    6. '
' → logprob: -13.375349998474121
    7. '(
' → logprob: -13.625349998474121
    8. '()
' → logprob: -14.250349998474121
    9. ')' → logprob: -14.375349998474121
    10. '```' → logprob: -14.750349998474121

Token 689: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.001470345538109541
    2. 'é' → logprob: -6.626470565795898
    3. 'ee' → logprob: -8.876470565795898
    4. '=' → logprob: -13.501470565795898
    5. '#' → logprob: -13.876470565795898
    6. 'er' → logprob: -14.126470565795898
    7. 'ées' → logprob: -14.251470565795898
    8. 'rée' → logprob: -15.126470565795898
    9. 'è' → logprob: -15.251470565795898
    10. 'É' → logprob: -16.0014705657959

Token 690: ' dans' (ID: 2671)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.003107726341113448
    2. '(' → logprob: -5.87810754776001
    3. 'sum' → logprob: -8.753108024597168
    4. '(print' → logprob: -8.878108024597168
    5. 'print' → logprob: -12.753108024597168
    6. '(
' → logprob: -13.753108024597168
    7. '()' → logprob: -14.253108024597168
    8. ' (' → logprob: -14.878108024597168
    9. '=sum' → logprob: -16.37810707092285
    10. '("' → logprob: -16.62810707092285

Token 691: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0026732799597084522
    2. '(sum' → logprob: -6.377673149108887
    3. 'print' → logprob: -7.002673149108887
    4. ' sum' → logprob: -9.752673149108887
    5. '(' → logprob: -13.502673149108887
    6. '`' → logprob: -15.127673149108887
    7. '```' → logprob: -15.252673149108887
    8. '_sum' → logprob: -15.627673149108887
    9. '	sum' → logprob: -15.752673149108887
    10. 's' → logprob: -15.752673149108887

Token 692: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004125538282096386
    2. '
' → logprob: -5.504125595092773
    3. ')
' → logprob: -10.379125595092773
    4. ' print' → logprob: -11.879125595092773
    5. '```' → logprob: -12.004125595092773
    6. '
' → logprob: -13.629125595092773
    7. '(print' → logprob: -14.379125595092773
    8. '``' → logprob: -15.379125595092773
    9. ' 
' → logprob: -15.629125595092773
    10. '`
' → logprob: -15.629125595092773

Token 693: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.03501930087804794
    2. 'print' → logprob: -3.5350193977355957
    3. 'l' → logprob: -5.285019397735596
    4. ' la' → logprob: -9.660018920898438
    5. 'a' → logprob: -10.035018920898438
    6. '#' → logprob: -10.660018920898438
    7. 'aff' → logprob: -11.035018920898438
    8. 'laf' → logprob: -11.785018920898438
    9. 'lac' → logprob: -12.285018920898438
    10. 'lais' → logprob: -12.535018920898438

Token 694: ''aide' (ID: 75684)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.028280898928642273
    2. 'print' → logprob: -3.6532809734344482
    3. ''écran' → logprob: -6.528280735015869
    4. '#' → logprob: -8.778281211853027
    5. 'e' → logprob: -9.028281211853027
    6. '#print' → logprob: -9.278281211853027
    7. ''impression' → logprob: -10.278281211853027
    8. 'é' → logprob: -11.153281211853027
    9. ''utilisateur' → logprob: -11.528281211853027
    10. ''é' → logprob: -11.778281211853027

Token 695: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45709604024887085
    2. 'print' → logprob: -1.7070960998535156
    3. '(print' → logprob: -1.7070960998535156
    4. '()' → logprob: -5.957096099853516
    5. '(
' → logprob: -6.582096099853516
    6. '(

' → logprob: -9.957096099853516
    7. ')' → logprob: -11.082096099853516
    8. 'de' → logprob: -11.707096099853516
    9. '```' → logprob: -12.207096099853516
    10. '(
' → logprob: -12.332096099853516

Token 696: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.7697225252486533e-06
    2. ' print' → logprob: -12.500003814697266
    3. '(print' → logprob: -20.375003814697266
    4. '```' → logprob: -20.375003814697266
    5. 'pr' → logprob: -21.250003814697266
    6. 'prin' → logprob: -21.500003814697266
    7. '
' → logprob: -21.625003814697266
    8. 'p' → logprob: -23.750003814697266
    9. '#print' → logprob: -24.250003814697266
    10. '`' → logprob: -24.375003814697266

Token 697: '().
' (ID: 58434)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0071473680436611176
    2. '(print' → logprob: -5.257147312164307
    3. '()
' → logprob: -6.507147312164307
    4. '(' → logprob: -8.257147789001465
    5. '()' → logprob: -9.007147789001465
    6. '(
' → logprob: -10.507147789001465
    7. ' print' → logprob: -12.632147789001465
    8. '(sum' → logprob: -13.007147789001465
    9. '```' → logprob: -13.507147789001465
    10. '
' → logprob: -13.632147789001465

Token 698: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -16.75
    3. '```' → logprob: -16.75
    4. 'pr' → logprob: -21.625
    5. '
' → logprob: -22.0
    6. '(print' → logprob: -22.625
    7. '``' → logprob: -23.25
    8. 'prin' → logprob: -23.625
    9. 'Print' → logprob: -23.75
    10. '#print' → logprob: -24.375

Token 699: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.2520139813423157
    2. '(' → logprob: -1.502013921737671
    3. '()' → logprob: -9.75201416015625
    4. ' (' → logprob: -10.87701416015625
    5. 'sum' → logprob: -12.87701416015625
    6. '(print' → logprob: -13.37701416015625
    7. '(s' → logprob: -13.87701416015625
    8. '('' → logprob: -14.00201416015625
    9. '("' → logprob: -15.00201416015625
    10. '(
' → logprob: -15.12701416015625

Token 700: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. '())' → logprob: -12.625003814697266
    3. '()' → logprob: -14.500003814697266
    4. ' )' → logprob: -15.875003814697266
    5. ')`' → logprob: -16.375003814697266
    6. '(' → logprob: -16.875003814697266
    7. '))' → logprob: -17.375003814697266
    8. ')
' → logprob: -20.000003814697266
    9. ')#' → logprob: -20.125003814697266
    10. ')}' → logprob: -20.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 698
Tokens correctement prédits (1ère position, stricte): 196
Tokens correctement prédits (1ère position, avec adaptation): 205
Tokens correctement prédits (top 10): 431
Précision stricte (1ère position): 28.08%
Précision adaptée (1ère position): 29.37%
Précision (top 10): 61.75%
================================================================================
