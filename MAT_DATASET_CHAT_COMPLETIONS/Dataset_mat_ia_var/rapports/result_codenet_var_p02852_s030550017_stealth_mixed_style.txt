================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

class SegTree:
    '''区間演算 & 一点変更'''
    def __init__(s, N, O, E):
        s.sz = 1
        while s.sz < N: s.sz <<= 1
        s.el = E
        s._N = N
        s.opr = O
        s.dat = [E]*(s.sz<<1)
    def builder(this, arr):
        for i, val in enumerate(arr):
            this.dat[this.sz + i] = val
        for k in range(this.sz-1,0,-1):
            this.dat[k] = this.opr(this.dat[k<<1], this.dat[(k<<1)|1])
    def set(self, idx, value):
        p = idx + self.sz
        self.dat[p] = value
        while p>1:
            p//=2
            self.dat[p]=self.opr(self.dat[p*2],self.dat[p*2+1])
    def prod(me, left, right):
        l=left+me.sz; r=right+me.sz
        lres=me.el; rres=me.el
        while l<r:
            (lres:=me.opr(lres,me.dat[l])) if l&1 else None
            l += l&1
            r -= r&1; rres = me.opr(me.dat[r],rres) if r&1 else rres
            l>>=1;r>>=1
        return me.opr(lres, rres)

read = sys.stdin.readline
A,B = list(map(int,input().split()))
T = input()
LIMIT = 10**18
st=SegTree(A+1,min,LIMIT)
st.set(A,0)

for idx in reversed(range(A)):
    if T[idx]=='1': continue
    t = st.prod(idx+1, min(A+1, idx+B+1)) + 1
    st.set(idx, t)

if st.prod(0,1) >= LIMIT:
    print(-1)
    quit()

ret,ptr=[],0
for x in range(A+1):
    if st.prod(ptr,ptr+1)-1==st.prod(x,x+1):
        ret+=[x-ptr]
        ptr=x
print(*ret)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'class' (ID: 1444)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' Seg' (ID: 13616)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016120821237564087
    2. ' My' → logprob: -4.266120910644531
    3. ' System' → logprob: -7.766120910644531
    4. '  ' → logprob: -7.766120910644531
    5. ' Space' → logprob: -7.891120910644531
    6. ' A' → logprob: -8.891120910644531
    7. ' ' → logprob: -9.391120910644531
    8. ' User' → logprob: -9.516120910644531
    9. ' Basic' → logprob: -10.391120910644531
    10. 'My' → logprob: -10.516120910644531

Token 5: 'Tree' (ID: 8062)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.51004958152771
    2. 'mentation' → logprob: -1.01004958152771
    3. 'ments' → logprob: -4.385049819946289
    4. 'm' → logprob: -4.760049819946289
    5. 'mented' → logprob: -4.885049819946289
    6. '```' → logprob: -5.510049819946289
    7. 'fault' → logprob: -7.510049819946289
    8. 'mental' → logprob: -7.635049819946289
    9. 'men' → logprob: -7.760049819946289
    10. 'me' → logprob: -8.260049819946289

Token 6: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008816298097372055
    2. '(' → logprob: -4.758816242218018
    3. '():' → logprob: -9.758816719055176
    4. '[' → logprob: -9.883816719055176
    5. ' :' → logprob: -10.508816719055176
    6. '(:' → logprob: -11.508816719055176
    7. ':**' → logprob: -11.508816719055176
    8. '.' → logprob: -11.758816719055176
    9. '{' → logprob: -12.133816719055176
    10. ' (' → logprob: -12.383816719055176

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16983604431152344
    2. ':' → logprob: -1.9198360443115234
    3. '[' → logprob: -5.169836044311523
    4. ' (' → logprob: -6.794836044311523
    5. '   ' → logprob: -7.544836044311523
    6. '(object' → logprob: -7.919836044311523
    7. '```' → logprob: -8.044836044311523
    8. ' ' → logprob: -8.169836044311523
    9. ' :' → logprob: -8.419836044311523
    10. '(space' → logprob: -8.669836044311523

Token 8: ' '''' (ID: 22434)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07262567430734634
    2. ':' → logprob: -3.0726256370544434
    3. '   ' → logprob: -4.322625637054443
    4. 'def' → logprob: -5.322625637054443
    5. ' ' → logprob: -6.322625637054443
    6. ' (' → logprob: -6.447625637054443
    7. '(object' → logprob: -7.572625637054443
    8. ' def' → logprob: -7.947625637054443
    9. ' :' → logprob: -8.072626113891602
    10. '():' → logprob: -8.822626113891602

Token 9: '区' (ID: 5243)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.3213474750518799
    2. ' Segment' → logprob: -2.19634747505188
    3. ' '''' → logprob: -2.94634747505188
    4. 'Seg' → logprob: -3.44634747505188
    5. ' segment' → logprob: -3.57134747505188
    6. ' Seg' → logprob: -4.196347236633301
    7. 'segment' → logprob: -4.696347236633301
    8. 'A' → logprob: -4.696347236633301
    9. ' A' → logprob: -4.821347236633301
    10. ''''' → logprob: -5.571347236633301

Token 10: '間' (ID: 16987)
  Prédit: '间'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '间' → logprob: -0.2227625846862793
    2. '間' → logprob: -1.7227625846862793
    3. '分' → logprob: -4.597762584686279
    4. '域' → logprob: -4.722762584686279
    5. '块' → logprob: -6.847762584686279
    6. '段' → logprob: -7.097762584686279
    7. '   ' → logprob: -9.472763061523438
    8. ''''' → logprob: -9.972763061523438
    9. '\xe5\xa1' → logprob: -10.472763061523438
    10. '别' → logprob: -10.972763061523438

Token 11: '演' (ID: 24221)
  Prédit: '最大'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '最大' → logprob: -1.2628653049468994
    2. '最' → logprob: -1.3878653049468994
    3. 'tree' → logprob: -2.0128653049468994
    4. '更新' → logprob: -2.1378653049468994
    5. '木' → logprob: -2.1378653049468994
    6. '取得' → logprob: -3.7628653049468994
    7. '合' → logprob: -4.01286506652832
    8. '```' → logprob: -4.26286506652832
    9. '分' → logprob: -5.26286506652832
    10. '加' → logprob: -5.38786506652832

Token 12: '算' (ID: 16727)
  Prédit: '算'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '算' → logprob: -0.0004462812503334135
    2. '習' → logprob: -8.000446319580078
    3. '測' → logprob: -10.375446319580078
    4. '奏' → logprob: -10.375446319580078
    5. '算法' → logprob: -10.875446319580078
    6. '```' → logprob: -12.125446319580078
    7. '\' → logprob: -12.125446319580078
    8. '-' → logprob: -12.375446319580078
    9. '�' → logprob: -13.500446319580078
    10. '``' → logprob: -13.500446319580078

Token 13: ' &' (ID: 827)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8485717177391052
    2. ' ' → logprob: -1.59857177734375
    3. ')' → logprob: -2.72357177734375
    4. 'の' → logprob: -3.22357177734375
    5. '(' → logprob: -3.47357177734375
    6. ' (' → logprob: -3.72357177734375
    7. '*' → logprob: -3.84857177734375
    8. ':' → logprob: -3.97357177734375
    9. 'を' → logprob: -4.22357177734375
    10. ',' → logprob: -4.84857177734375

Token 14: ' 一' (ID: 16304)
  Prédit: '取得'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '取得' → logprob: -0.7559260129928589
    2. '更新' → logprob: -1.2559260129928589
    3. '構' → logprob: -3.2559261322021484
    4. 'query' → logprob: -3.8809261322021484
    5. '区' → logprob: -4.005926132202148
    6. '```' → logprob: -4.255926132202148
    7. '検索' → logprob: -4.380926132202148
    8. ' 更新' → logprob: -4.380926132202148
    9. 'ク' → logprob: -4.380926132202148
    10. ' \xe7\xaf' → logprob: -4.380926132202148

Token 15: '点' (ID: 8300)
  Prédit: '般'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '般' → logprob: -0.2830692529678345
    2. '点' → logprob: -2.283069133758545
    3. '様' → logprob: -2.658069133758545
    4. '分' → logprob: -3.033069133758545
    5. '\xe8\xb2' → logprob: -5.158069133758545
    6. '要' → logprob: -5.658069133758545
    7. '辺' → logprob: -6.158069133758545
    8. '義' → logprob: -6.658069133758545
    9. '区' → logprob: -6.783069133758545
    10. '続' → logprob: -6.908069133758545

Token 16: '変更' (ID: 178677)
  Prédit: '更新'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '更新' → logprob: -0.010528572835028172
    2. 'update' → logprob: -5.885528564453125
    3. ' 更新' → logprob: -6.260528564453125
    4. ' update' → logprob: -6.510528564453125
    5. '代' → logprob: -7.010528564453125
    6. '演' → logprob: -7.510528564453125
    7. '変更' → logprob: -7.510528564453125
    8. '   ' → logprob: -7.635528564453125
    9. '参' → logprob: -8.010528564453125
    10. ' ' → logprob: -8.510528564453125

Token 17: ''''
' (ID: 33518)
  Prédit: '''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''''' → logprob: -0.6726580858230591
    2. '   ' → logprob: -0.9226580858230591
    3. 'の' → logprob: -3.6726579666137695
    4. '```' → logprob: -3.7976579666137695
    5. ''''
' → logprob: -4.1726579666137695
    6. ''''
' → logprob: -5.2976579666137695
    7. ' ' → logprob: -5.5476579666137695
    8. 'を' → logprob: -6.1726579666137695
    9. ''''

' → logprob: -6.2976579666137695
    10. '\n' → logprob: -6.4226579666137695

Token 18: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08840416371822357
    2. '   ' → logprob: -2.5884041786193848
    3. '(' → logprob: -5.088404178619385
    4. ':
' → logprob: -7.213404178619385
    5. ' :' → logprob: -7.463404178619385
    6. ' ' → logprob: -7.713404178619385
    7. 'def' → logprob: -7.963404178619385
    8. ' def' → logprob: -8.213403701782227
    9. '    
' → logprob: -8.963403701782227
    10. '```' → logprob: -8.963403701782227

Token 19: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5012349486351013
    2. 'def' (adapté à ' def') → logprob: -1.501235008239746
    3. ' def' → logprob: -2.376235008239746
    4. '    
' → logprob: -3.501235008239746
    5. '
' → logprob: -4.501235008239746
    6. ':' → logprob: -4.876235008239746
    7. ' ' → logprob: -4.876235008239746
    8. ' 
' → logprob: -5.001235008239746
    9. '(' → logprob: -5.501235008239746
    10. '    ' → logprob: -5.751235008239746

Token 20: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03140003979206085
    2. ' init' → logprob: -3.656399965286255
    3. ' ' → logprob: -5.906400203704834
    4. ' ' → logprob: -6.906400203704834
    5. 'init' → logprob: -7.156400203704834
    6. '_init' → logprob: -8.156399726867676
    7. ' _' → logprob: -8.406399726867676
    8. '__' → logprob: -10.781399726867676
    9. '  ' → logprob: -11.406399726867676
    10. ' def' → logprob: -11.781399726867676

Token 21: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.7697225252486533e-06
    2. 'ini' → logprob: -12.750003814697266
    3. ' init' → logprob: -14.750003814697266
    4. 'i' → logprob: -14.875003814697266
    5. 'int' → logprob: -16.125003814697266
    6. 'in' → logprob: -17.250003814697266
    7. 'inti' → logprob: -17.875003814697266
    8. 'innit' → logprob: -19.875003814697266
    9. '	init' → logprob: -20.000003814697266
    10. 'inite' → logprob: -20.250003814697266

Token 22: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1945209503173828
    2. '__' → logprob: -1.8195209503173828
    3. '(' → logprob: -4.444520950317383
    4. '__(
' → logprob: -6.819520950317383
    5. '_' → logprob: -7.694520950317383
    6. '__(*' → logprob: -7.819520950317383
    7. '__((' → logprob: -8.319520950317383
    8. ' (' → logprob: -8.444520950317383
    9. '__('' → logprob: -9.319520950317383
    10. '(self' → logprob: -9.444520950317383

Token 23: 's' (ID: 82)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031869823578745127
    2. ' self' → logprob: -5.75318717956543
    3. '(self' → logprob: -13.00318717956543
    4. ' ' → logprob: -13.50318717956543
    5. '	self' → logprob: -13.62818717956543
    6. '0' → logprob: -13.62818717956543
    7. ',' → logprob: -13.87818717956543
    8. ',self' → logprob: -14.00318717956543
    9. '_self' → logprob: -14.62818717956543
    10. '   ' → logprob: -15.00318717956543

Token 24: ',' (ID: 11)
  Prédit: 'elf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elf' → logprob: -0.0008213033434003592
    2. ',' → logprob: -7.125821113586426
    3. 'self' → logprob: -11.500821113586426
    4. ',self' → logprob: -12.500821113586426
    5. ' ,' → logprob: -13.625821113586426
    6. 'e' → logprob: -14.625821113586426
    7. ' elf' → logprob: -15.250821113586426
    8. '   ' → logprob: -15.375821113586426
    9. 'el' → logprob: -15.625821113586426
    10. 'ef' → logprob: -15.750821113586426

Token 25: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4024568498134613
    2. ' n' → logprob: -1.1524568796157837
    3. 'self' → logprob: -5.527456760406494
    4. 'a' → logprob: -5.777456760406494
    5. ' self' → logprob: -6.152456760406494
    6. ' a' → logprob: -6.652456760406494
    7. 'arr' → logprob: -6.777456760406494
    8. ' arr' → logprob: -7.402456760406494
    9. '   ' → logprob: -7.777456760406494
    10. 'init' → logprob: -7.777456760406494

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09294581413269043
    2. '):' → logprob: -2.5929458141326904
    3. ' ,' → logprob: -4.5929460525512695
    4. ' ):' → logprob: -6.2179460525512695
    5. ')' → logprob: -6.4679460525512695
    6. ' )' → logprob: -9.09294605255127
    7. '   ' → logprob: -9.34294605255127
    8. '):
' → logprob: -10.34294605255127
    9. '，' → logprob: -11.59294605255127
    10. '    ' → logprob: -12.21794605255127

Token 27: ' O' (ID: 532)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.15984909236431122
    2. ' func' → logprob: -3.034849166870117
    3. ' e' → logprob: -3.409849166870117
    4. 'e' → logprob: -3.784849166870117
    5. 'op' → logprob: -4.659849166870117
    6. 'f' → logprob: -4.909849166870117
    7. 'func' → logprob: -4.909849166870117
    8. ' f' → logprob: -5.534849166870117
    9. ' init' → logprob: -6.159849166870117
    10. ' ' → logprob: -6.284849166870117

Token 28: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0034532451536506414
    2. 'P' → logprob: -6.628453254699707
    3. 'per' → logprob: -7.878453254699707
    4. ',' → logprob: -8.003453254699707
    5. 'pe' → logprob: -8.003453254699707
    6. '):
' → logprob: -8.128453254699707
    7. 'perator' → logprob: -8.378453254699707
    8. 'r' → logprob: -8.753453254699707
    9. '):' → logprob: -9.003453254699707
    10. 'pj' → logprob: -10.128453254699707

Token 29: ' E' (ID: 457)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.29578539729118347
    2. ' e' → logprob: -2.795785427093506
    3. 'ide' → logprob: -2.795785427093506
    4. ' op' → logprob: -2.795785427093506
    5. 'op' → logprob: -4.045785427093506
    6. 'id' → logprob: -4.170785427093506
    7. 'I' → logprob: -4.920785427093506
    8. 'E' → logprob: -5.420785427093506
    9. 'init' → logprob: -5.420785427093506
    10. 'unit' → logprob: -5.670785427093506

Token 30: '):
' (ID: 1883)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04054621607065201
    2. '):' → logprob: -3.790546178817749
    3. '):
' → logprob: -4.915546417236328
    4. ',' → logprob: -5.290546417236328
    5. 'r' → logprob: -6.165546417236328
    6. 'perator' → logprob: -6.915546417236328
    7. ' ):' → logprob: -7.915546417236328
    8. 'per' → logprob: -8.165546417236328
    9. '=' → logprob: -8.665546417236328
    10. ' ):
' → logprob: -9.040546417236328

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06637504696846008
    2. '):' → logprob: -3.3163750171661377
    3. ':' → logprob: -3.8163750171661377
    4. ')' → logprob: -5.941375255584717
    5. ',' → logprob: -6.441375255584717
    6. '      ' → logprob: -7.441375255584717
    7. '   ' → logprob: -7.816375255584717
    8. '     ' → logprob: -8.816374778747559
    9. ' :' → logprob: -9.566374778747559
    10. ',s' → logprob: -9.566374778747559

Token 32: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.01822228543460369
    2. 's' (adapté à ' s') → logprob: -4.143222332000732
    3. '       ' → logprob: -6.768222332000732
    4. 'n' → logprob: -7.893222332000732
    5. ' ' → logprob: -8.268221855163574
    6. '   ' → logprob: -9.643221855163574
    7. ' self' → logprob: -9.768221855163574
    8. '        ' → logprob: -9.893221855163574
    9. ' 
' → logprob: -10.393221855163574
    10. ' ' → logprob: -10.393221855163574

Token 33: '.sz' (ID: 172462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7142962217330933
    2. '.N' → logprob: -0.7142962217330933
    3. ' .' → logprob: -3.964296340942383
    4. '.n' → logprob: -6.589296340942383
    5. '._' → logprob: -8.589296340942383
    6. '.__' → logprob: -9.964296340942383
    7. '.S' → logprob: -10.089296340942383
    8. '   ' → logprob: -10.214296340942383
    9. ' N' → logprob: -10.714296340942383
    10. '.P' → logprob: -10.714296340942383

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12699604034423828
    2. '=' → logprob: -2.1269960403442383
    3. '   ' → logprob: -10.626996040344238
    4. ' ' → logprob: -10.876996040344238
    5. '  ' → logprob: -11.001996040344238
    6. '=int' → logprob: -13.126996040344238
    7. '＝' → logprob: -13.501996040344238
    8. '    ' → logprob: -13.751996040344238
    9. 'f' → logprob: -14.251996040344238
    10. ',' → logprob: -14.876996040344238

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004496189649216831
    2. ' ' → logprob: -8.125449180603027
    3. '   ' → logprob: -8.875449180603027
    4. 'N' → logprob: -11.375449180603027
    5. '  ' → logprob: -14.000449180603027
    6. '2' → logprob: -14.250449180603027
    7. '    ' → logprob: -16.250450134277344
    8. ' N' → logprob: -16.500450134277344
    9. '       ' → logprob: -16.625450134277344
    10. 's' → logprob: -16.625450134277344

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008193961111828685
    2. 'N' → logprob: -7.125819206237793
    3. ' ' → logprob: -11.250819206237793
    4. '2' → logprob: -13.750819206237793
    5. '32' → logprob: -15.625819206237793
    6. '4' → logprob: -16.37582015991211
    7. '16' → logprob: -16.50082015991211
    8. '(' → logprob: -16.87582015991211
    9. '64' → logprob: -16.87582015991211
    10. '   ' → logprob: -16.87582015991211

Token 37: '
' (ID: 198)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.5227556824684143
    2. '<<' → logprob: -1.0227556228637695
    3. '<|end|>' → logprob: -3.6477556228637695
    4. '<' → logprob: -5.0227556228637695
    5. ' <<' → logprob: -5.5227556228637695
    6. '*' → logprob: -5.5227556228637695
    7. '<<(' → logprob: -6.0227556228637695
    8. '<|end|>' → logprob: -7.1477556228637695
    9. ' ' → logprob: -7.5227556228637695
    10. '0' → logprob: -7.6477556228637695

Token 38: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' while' (ID: 2049)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.404959499835968
    2. ' <<=' → logprob: -1.9049594402313232
    3. 'while' (adapté à ' while') → logprob: -2.5299594402313232
    4. ' while' → logprob: -2.6549594402313232
    5. '<' → logprob: -3.6549594402313232
    6. ' <<' → logprob: -6.654959678649902
    7. '*' → logprob: -6.654959678649902
    8. '	while' → logprob: -6.779959678649902
    9. '<s' → logprob: -7.029959678649902
    10. ' ' → logprob: -7.029959678649902

Token 40: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.01815205067396164
    2. 's' → logprob: -4.018152236938477
    3. '(s' → logprob: -13.268152236938477
    4. '<s' → logprob: -15.268152236938477
    5. '	s' → logprob: -16.268152236938477
    6. '   ' → logprob: -17.143152236938477
    7. ' ' → logprob: -17.518152236938477
    8. ' ' → logprob: -17.893152236938477
    9. ' (' → logprob: -18.393152236938477
    10. '(' → logprob: -18.518152236938477

Token 41: '.sz' (ID: 172462)
  Prédit: '.sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sz' → logprob: -2.15310683415737e-05
    2. 'sz' → logprob: -11.000021934509277
    3. '.' → logprob: -12.500021934509277
    4. '.s' → logprob: -14.250021934509277
    5. ' sz' → logprob: -15.625021934509277
    6. '<' → logprob: -16.37502098083496
    7. '(sz' → logprob: -16.50002098083496
    8. ' .' → logprob: -16.75002098083496
    9. '_sz' → logprob: -16.87502098083496
    10. '.<' → logprob: -17.37502098083496

Token 42: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.055198535323143005
    2. ' <' → logprob: -2.9301984310150146
    3. '<N' → logprob: -9.055198669433594
    4. '<s' → logprob: -9.055198669433594
    5. '<n' → logprob: -9.555198669433594
    6. '<size' → logprob: -12.430198669433594
    7. '<num' → logprob: -13.305198669433594
    8. '<len' → logprob: -13.555198669433594
    9. ' ' → logprob: -14.305198669433594
    10. '<=' → logprob: -14.305198669433594

Token 43: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4740804135799408
    2. ' N' → logprob: -0.9740804433822632
    3. '	N' → logprob: -12.724080085754395
    4. ' ' → logprob: -14.974080085754395
    5. ' ' → logprob: -15.849080085754395
    6. 'Ｎ' → logprob: -17.59908103942871
    7. '>N' → logprob: -17.84908103942871
    8. '   ' → logprob: -18.84908103942871
    9. '=N' → logprob: -18.84908103942871
    10. '_N' → logprob: -18.97408103942871

Token 44: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01289854384958744
    2. ':
' → logprob: -4.8878984451293945
    3. ' :' → logprob: -5.5128984451293945
    4. ' <<=' → logprob: -6.8878984451293945
    5. ' :
' → logprob: -9.887898445129395
    6. ':s' → logprob: -10.012898445129395
    7. '<<' → logprob: -10.512898445129395
    8. ' ' → logprob: -10.637898445129395
    9. '*' → logprob: -10.762898445129395
    10. ' *' → logprob: -11.512898445129395

Token 45: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1529187560081482
    2. '           ' → logprob: -2.027918815612793
    3. 's' → logprob: -4.652918815612793
    4. ' ' → logprob: -7.527918815612793
    5. '            ' → logprob: -10.277918815612793
    6. ' 
' → logprob: -10.652918815612793
    7. '   ' → logprob: -11.277918815612793
    8. '               ' → logprob: -11.527918815612793
    9. '            
' → logprob: -11.777918815612793
    10. ' ' → logprob: -11.902918815612793

Token 46: '.sz' (ID: 172462)
  Prédit: '.sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sz' → logprob: -0.000718030845746398
    2. '.' → logprob: -7.250718116760254
    3. 'sz' → logprob: -13.000718116760254
    4. '.s' → logprob: -13.750718116760254
    5. '..' → logprob: -13.875718116760254
    6. ' .' → logprob: -14.125718116760254
    7. '   ' → logprob: -14.500718116760254
    8. ' sz' → logprob: -14.625718116760254
    9. '.z' → logprob: -14.875718116760254
    10. '​.' → logprob: -15.375718116760254

Token 47: ' <<=' (ID: 134025)
  Prédit: ' <<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.2591402232646942
    2. '<<' → logprob: -1.5091402530670166
    3. '*=' → logprob: -5.0091400146484375
    4. ' *=' → logprob: -7.6341400146484375
    5. '<' → logprob: -10.759140014648438
    6. '```' → logprob: -13.759140014648438
    7. ' ' → logprob: -14.634140014648438
    8. '*' → logprob: -14.634140014648438
    9. '<<<' → logprob: -15.009140014648438
    10. '&lt' → logprob: -15.259140014648438

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.250028610229492
    4. '１' → logprob: -17.750028610229492
    5. '```' → logprob: -17.875028610229492
    6. ' ' → logprob: -18.000028610229492
    7. '' → logprob: -19.187528610229492
    8. '       ' → logprob: -19.687528610229492
    9. '0' → logprob: -20.062528610229492
    10. '2' → logprob: -20.625028610229492

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '１' → logprob: -18.375003814697266
    4. '' → logprob: -20.375003814697266
    5. '   ' → logprob: -20.375003814697266
    6. '0' → logprob: -21.000003814697266
    7. '```' → logprob: -21.250003814697266
    8. ' ' → logprob: -21.625003814697266
    9. '۱' → logprob: -22.000003814697266
    10. '2' → logprob: -22.000003814697266

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6158220171928406
    2. '       ' → logprob: -1.3658220767974854
    3. ' 
' → logprob: -2.4908220767974854
    4. 's' → logprob: -2.9908220767974854
    5. ' s' → logprob: -3.1158220767974854
    6. ' ' → logprob: -4.615821838378906
    7. '        
' → logprob: -5.365821838378906
    8. '        ' → logprob: -5.490821838378906
    9. '1' → logprob: -6.115821838378906
    10. '
' → logprob: -6.490821838378906

Token 51: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019009770825505257
    2. '       ' → logprob: -4.519009590148926
    3. ' 
' → logprob: -5.519009590148926
    4. '        
' → logprob: -6.769009590148926
    5. '
' → logprob: -6.769009590148926
    6. 's' → logprob: -6.894009590148926
    7. '  
' → logprob: -9.144009590148926
    8. 'newline' → logprob: -9.144009590148926
    9. '\n' → logprob: -9.644009590148926
    10. ' s' → logprob: -9.769009590148926

Token 52: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.2935854196548462
    2. ' s' → logprob: -2.1685853004455566
    3. '
' → logprob: -2.5435853004455566
    4. '       ' → logprob: -2.9185853004455566
    5. ' ' → logprob: -5.918585300445557
    6. '   ' → logprob: -5.918585300445557
    7. '        
' → logprob: -7.168585300445557
    8. ' 
' → logprob: -7.293585300445557
    9. '  
' → logprob: -9.043585777282715
    10. '	s' → logprob: -9.168585777282715

Token 53: '.el' (ID: 28187)
  Prédit: '.op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.49158045649528503
    2. '.data' → logprob: -1.8665804862976074
    3. '.dat' → logprob: -2.3665804862976074
    4. '.OP' → logprob: -2.9915804862976074
    5. '.val' → logprob: -3.3665804862976074
    6. '.O' → logprob: -4.241580486297607
    7. '.' → logprob: -4.366580486297607
    8. '.tree' → logprob: -5.116580486297607
    9. '.ops' → logprob: -5.241580486297607
    10. '.seg' → logprob: -5.866580486297607

Token 54: ' =' (ID: 314)
  Prédit: 'em'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'em' → logprob: -0.016039647161960602
    2. 'e' → logprob: -4.766039848327637
    3. 'ement' → logprob: -5.766039848327637
    4. 'm' → logprob: -6.391039848327637
    5. 'ems' → logprob: -7.516039848327637
    6. 'E' → logprob: -7.516039848327637
    7. 's' → logprob: -9.266039848327637
    8. 'ements' → logprob: -9.266039848327637
    9. 't' → logprob: -9.516039848327637
    10. '```' → logprob: -9.641039848327637

Token 55: ' E' (ID: 457)
  Prédit: '[E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[E' → logprob: -0.4015747010707855
    2. '[' → logprob: -1.151574730873108
    3. 'E' → logprob: -4.401574611663818
    4. ' [' → logprob: -6.651574611663818
    5. 'O' → logprob: -7.526574611663818
    6. '[s' → logprob: -8.401575088500977
    7. '[e' → logprob: -9.151575088500977
    8. ' E' → logprob: -10.526575088500977
    9. '(E' → logprob: -10.651575088500977
    10. '<E' → logprob: -10.901575088500977

Token 56: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02971183881163597
    2. '<|end|>' → logprob: -3.9047117233276367
    3. 's' → logprob: -4.904711723327637
    4. ' s' → logprob: -6.779711723327637
    5. '<|end|>' → logprob: -7.779711723327637
    6. ' ' → logprob: -10.029711723327637
    7. '   ' → logprob: -10.279711723327637
    8. ',' → logprob: -10.779711723327637
    9. '
' → logprob: -11.029711723327637
    10. '      ' → logprob: -12.029711723327637

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004068071022629738
    2. 's' → logprob: -5.879067897796631
    3. ' s' → logprob: -6.754067897796631
    4. '   ' → logprob: -10.254068374633789
    5. ',' → logprob: -11.254068374633789
    6. ' ' → logprob: -11.379068374633789
    7. '<|end|>' → logprob: -11.504068374633789
    8. '     ' → logprob: -12.254068374633789
    9. '      ' → logprob: -12.379068374633789
    10. '	' → logprob: -12.379068374633789

Token 58: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.31534552574157715
    2. ' s' → logprob: -1.5653455257415771
    3. '       ' → logprob: -2.815345525741577
    4. '   ' → logprob: -6.815345764160156
    5. ' ' → logprob: -8.815345764160156
    6. 'import' → logprob: -9.815345764160156
    7. '           ' → logprob: -10.065345764160156
    8. 'o' → logprob: -10.315345764160156
    9. '  ' → logprob: -10.752845764160156
    10. '    ' → logprob: -10.815345764160156

Token 59: '._' (ID: 2697)
  Prédit: '.op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.020460132509469986
    2. '.OP' → logprob: -4.27046012878418
    3. '.o' → logprob: -6.14546012878418
    4. '.' → logprob: -6.27046012878418
    5. '.O' → logprob: -7.52046012878418
    6. '.oper' → logprob: -7.64546012878418
    7. '.val' → logprob: -8.14546012878418
    8. '.Op' → logprob: -8.77046012878418
    9. '.or' → logprob: -8.89546012878418
    10. '.ops' → logprob: -9.02046012878418

Token 60: 'N' (ID: 45)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.28119364380836487
    2. 'ope' → logprob: -1.9061936140060425
    3. 'opr' → logprob: -2.531193733215332
    4. 'oper' → logprob: -4.781193733215332
    5. 'ori' → logprob: -6.656193733215332
    6. 'O' → logprob: -7.031193733215332
    7. 'o' → logprob: -7.531193733215332
    8. 'operator' → logprob: -7.531193733215332
    9. 'opera' → logprob: -7.656193733215332
    10. 'opl' → logprob: -7.656193733215332

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1604086309671402
    2. ' =' → logprob: -1.910408616065979
    3. '=N' → logprob: -9.035408973693848
    4. ' ' → logprob: -10.160408973693848
    5. '   ' → logprob: -11.285408973693848
    6. '  ' → logprob: -11.910408973693848
    7. '    ' → logprob: -12.785408973693848
    8. 'ext' → logprob: -12.910408973693848
    9. '＝' → logprob: -14.785408973693848
    10. '=int' → logprob: -15.160408973693848

Token 62: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.060432069003582
    2. ' N' → logprob: -3.060431957244873
    3. 's' → logprob: -4.560431957244873
    4. ' s' → logprob: -6.685431957244873
    5. ' ' → logprob: -10.060432434082031
    6. '  ' → logprob: -11.185432434082031
    7. '   ' → logprob: -13.060432434082031
    8. '	N' → logprob: -13.060432434082031
    9. '    ' → logprob: -13.685432434082031
    10. '_N' → logprob: -13.935432434082031

Token 63: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01995673030614853
    2. 's' → logprob: -4.019956588745117
    3. '<|end|>' → logprob: -7.019956588745117
    4. ' s' → logprob: -7.519956588745117
    5. '   ' → logprob: -8.894956588745117
    6. '	s' → logprob: -9.644956588745117
    7. '
' → logprob: -9.769956588745117
    8. '<|end|>' → logprob: -10.519956588745117
    9. ' ' → logprob: -10.644956588745117
    10. '        
' → logprob: -11.144956588745117

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012887592427432537
    2. 's' → logprob: -4.387887477874756
    3. ' s' → logprob: -8.262887954711914
    4. '   ' → logprob: -9.762887954711914
    5. '<|end|>' → logprob: -10.137887954711914
    6. '	s' → logprob: -11.512887954711914
    7. '<|end|>' → logprob: -12.387887954711914
    8. ' ' → logprob: -13.137887954711914
    9. '      ' → logprob: -13.637887954711914
    10. ',' → logprob: -13.762887954711914

Token 65: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.06419558078050613
    2. ' s' → logprob: -3.0641956329345703
    3. '       ' → logprob: -4.18919563293457
    4. '   ' → logprob: -8.43919563293457
    5. ' ' → logprob: -10.43919563293457
    6. 'o' → logprob: -10.81419563293457
    7. '	s' → logprob: -11.43919563293457
    8. 'O' → logprob: -11.56419563293457
    9. '    ' → logprob: -12.18919563293457
    10. '      ' → logprob: -12.43919563293457

Token 66: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.3431319296360016
    2. '.OP' → logprob: -1.7181318998336792
    3. '.O' → logprob: -2.9681320190429688
    4. '.o' → logprob: -3.4681320190429688
    5. '.' → logprob: -4.718132019042969
    6. '._' → logprob: -4.843132019042969
    7. '.v' → logprob: -5.968132019042969
    8. '.Op' → logprob: -6.218132019042969
    9. '.val' → logprob: -6.718132019042969
    10. '.ot' → logprob: -6.843132019042969

Token 67: 'r' (ID: 81)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759569406509399
    2. ' =' → logprob: -0.8259569406509399
    3. 'er' → logprob: -12.075957298278809
    4. ' ' → logprob: -12.325957298278809
    5. '＝' → logprob: -13.575957298278809
    6. 'r' → logprob: -13.575957298278809
    7. 'p' → logprob: -14.075957298278809
    8. '=o' → logprob: -14.200957298278809
    9. 's' → logprob: -14.325957298278809
    10. ',' → logprob: -14.325957298278809

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9812644720077515
    2. 'er' → logprob: -1.1062644720077515
    3. ' =' → logprob: -1.2312644720077515
    4. 'ator' → logprob: -7.106264591217041
    5. 'ation' → logprob: -7.481264591217041
    6. 's' → logprob: -8.606264114379883
    7. ' ' → logprob: -8.856264114379883
    8. '   ' → logprob: -8.856264114379883
    9. '  ' → logprob: -9.356264114379883
    10. 't' → logprob: -9.731264114379883

Token 69: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.0005544631858356297
    2. ' O' → logprob: -7.50055456161499
    3. '	O' → logprob: -14.000554084777832
    4. ' ' → logprob: -14.750554084777832
    5. '  ' → logprob: -15.875554084777832
    6. '   ' → logprob: -17.25055503845215
    7. '<O' → logprob: -17.25055503845215
    8. ',O' → logprob: -18.37555503845215
    9. 'Ｏ' → logprob: -18.87555503845215
    10. '(O' → logprob: -20.75055503845215

Token 70: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007989077712409198
    2. 's' → logprob: -7.25079870223999
    3. '   ' → logprob: -10.375799179077148
    4. ' s' → logprob: -10.500799179077148
    5. '<|end|>' → logprob: -11.125799179077148
    6. '	' → logprob: -12.500799179077148
    7. '<|end|>' → logprob: -13.125799179077148
    8. '        
' → logprob: -13.250799179077148
    9. '      ' → logprob: -13.250799179077148
    10. '	s' → logprob: -13.750799179077148

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023465469479560852
    2. 's' → logprob: -3.773465394973755
    3. '   ' → logprob: -9.023465156555176
    4. ' s' → logprob: -9.523465156555176
    5. '	' → logprob: -12.273465156555176
    6. ' ' → logprob: -12.648465156555176
    7. '<|end|>' → logprob: -12.648465156555176
    8. '	s' → logprob: -12.773465156555176
    9. '	   ' → logprob: -13.023465156555176
    10. '      ' → logprob: -13.023465156555176

Token 72: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.3559163808822632
    2. '       ' → logprob: -1.7309163808822632
    3. ' s' → logprob: -2.1059165000915527
    4. '   ' → logprob: -7.605916500091553
    5. ' ' → logprob: -9.980916023254395
    6. '	s' → logprob: -11.105916023254395
    7. '    ' → logprob: -11.730916023254395
    8. '           ' → logprob: -11.855916023254395
    9. '      ' → logprob: -11.980916023254395
    10. '     ' → logprob: -12.230916023254395

Token 73: '.dat' (ID: 17439)
  Prédit: '.d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -1.2079097032546997
    2. '.dat' → logprob: -1.3329097032546997
    3. '.v' → logprob: -1.3329097032546997
    4. '.data' → logprob: -2.45790958404541
    5. '.a' → logprob: -3.83290958404541
    6. '.val' → logprob: -4.20790958404541
    7. '.arr' → logprob: -4.20790958404541
    8. '.s' → logprob: -4.83290958404541
    9. '.' → logprob: -5.33290958404541
    10. '.tree' → logprob: -5.70790958404541

Token 74: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25207531452178955
    2. ' =' → logprob: -1.5020753145217896
    3. '=[' → logprob: -9.3770751953125
    4. ' =[' → logprob: -9.8770751953125
    5. '[' → logprob: -12.6270751953125
    6. '=[]' → logprob: -13.1270751953125
    7. ' ' → logprob: -13.2520751953125
    8. '＝' → logprob: -13.6270751953125
    9. 'a' → logprob: -15.1270751953125
    10. '   ' → logprob: -15.3770751953125

Token 75: ' [' (ID: 723)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.027857011184096336
    2. '[' → logprob: -4.152856826782227
    3. ' [' → logprob: -4.652856826782227
    4. '[E' → logprob: -6.277856826782227
    5. '[e' → logprob: -8.277856826782227
    6. '   ' → logprob: -10.402856826782227
    7. ' ' → logprob: -11.277856826782227
    8. '[o' → logprob: -11.902856826782227
    9. '[i' → logprob: -12.027856826782227
    10. '[int' → logprob: -12.277856826782227

Token 76: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.3876168727874756
    2. 's' → logprob: -1.1376168727874756
    3. ' E' → logprob: -7.512617111206055
    4. ' s' → logprob: -8.637617111206055
    5. '   ' → logprob: -11.387617111206055
    6. 'e' → logprob: -12.637617111206055
    7. ' ' → logprob: -12.637617111206055
    8. '0' → logprob: -14.262617111206055
    9. '	E' → logprob: -14.262617111206055
    10. 'S' → logprob: -15.137617111206055

Token 77: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007265259046107531
    2. ']*(' → logprob: -5.007265090942383
    3. ']*' → logprob: -7.632265090942383
    4. ' ]' → logprob: -9.882265090942383
    5. ' for' → logprob: -11.632265090942383
    6. ' ' → logprob: -13.007265090942383
    7. ']<<' → logprob: -14.007265090942383
    8. ')' → logprob: -14.007265090942383
    9. ',' → logprob: -14.257265090942383
    10. ']+' → logprob: -15.507265090942383

Token 78: 's' (ID: 82)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47547751665115356
    2. 's' → logprob: -0.9754775166511536
    3. ' s' → logprob: -7.100477695465088
    4. ' ' → logprob: -7.975477695465088
    5. '(' → logprob: -8.72547721862793
    6. '   ' → logprob: -10.10047721862793
    7. '(s' → logprob: -11.85047721862793
    8. '1' → logprob: -12.10047721862793
    9. 'sz' → logprob: -13.16297721862793
    10. '    ' → logprob: -13.35047721862793

Token 79: '.sz' (ID: 172462)
  Prédit: '.sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sz' → logprob: -4.36574100604048e-06
    2. 'sz' → logprob: -12.375004768371582
    3. '_sz' → logprob: -17.250003814697266
    4. '.' → logprob: -17.625003814697266
    5. ' sz' → logprob: -17.750003814697266
    6. '.s' → logprob: -18.250003814697266
    7. ' .' → logprob: -18.750003814697266
    8. '(sz' → logprob: -18.875003814697266
    9. 'Sz' → logprob: -19.500003814697266
    10. '2' → logprob: -20.750003814697266

Token 80: '<<' (ID: 5354)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.004764745943248272
    2. '<<' → logprob: -5.379764556884766
    3. ' *' → logprob: -8.879764556884766
    4. ' <<' → logprob: -12.754764556884766
    5. ')<<' → logprob: -14.254764556884766
    6. '2' → logprob: -14.879764556884766
    7. '**' → logprob: -15.004764556884766
    8. ' <<=' → logprob: -15.504764556884766
    9. '()<<' → logprob: -15.504764556884766
    10. ' ' → logprob: -16.129764556884766

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. '2' → logprob: -16.25
    4. '１' → logprob: -16.375
    5. '' → logprob: -17.5
    6. '```' → logprob: -17.875
    7. '   ' → logprob: -18.6875
    8. ' ' → logprob: -18.875
    9. '01' → logprob: -19.0
    10. '6' → logprob: -19.125

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011272187111899257
    2. ' )' → logprob: -9.125112533569336
    3. ')
' → logprob: -13.125112533569336
    4. '<|end|>' → logprob: -14.000112533569336
    5. '))' → logprob: -15.875112533569336
    6. ')`' → logprob: -16.125112533569336
    7. '),' → logprob: -16.125112533569336
    8. '`)' → logprob: -16.375112533569336
    9. '）' → logprob: -16.625112533569336
    10. ')return' → logprob: -16.875112533569336

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5632297992706299
    2. ' ' → logprob: -1.6882297992706299
    3. '[' → logprob: -2.81322979927063
    4. '<|end|>' → logprob: -3.18822979927063
    5. ' 
' → logprob: -3.56322979927063
    6. 'def' → logprob: -3.56322979927063
    7. ')' → logprob: -3.68822979927063
    8. '    
' → logprob: -4.688229560852051
    9. ' def' → logprob: -4.688229560852051
    10. '.' → logprob: -4.938229560852051

Token 84: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11616583913564682
    2. '<|end|>' → logprob: -3.11616587638855
    3. ' 
' → logprob: -3.99116587638855
    4. '    
' → logprob: -4.366165637969971
    5. '   ' → logprob: -4.991165637969971
    6. 'def' (adapté à ' def') → logprob: -5.241165637969971
    7. '<|end|>' → logprob: -5.241165637969971
    8. '[' → logprob: -5.491165637969971
    9. '  
' → logprob: -5.866165637969971
    10. ' ' → logprob: -6.366165637969971

Token 85: ' builder' (ID: 11592)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' build' → logprob: -1.441213607788086
    2. ' update' → logprob: -1.566213607788086
    3. ' ' → logprob: -1.691213607788086
    4. ' get' → logprob: -2.066213607788086
    5. ' _' → logprob: -2.066213607788086
    6. '_' → logprob: -2.941213607788086
    7. ' set' → logprob: -3.441213607788086
    8. ' __' → logprob: -4.066213607788086
    9. ' upd' → logprob: -6.066213607788086
    10. '__' → logprob: -6.566213607788086

Token 86: '(this' (ID: 2429)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.010473248548805714
    2. '(' → logprob: -4.635473251342773
    3. '(self' → logprob: -7.260473251342773
    4. '(
' → logprob: -12.135473251342773
    5. ' (' → logprob: -12.385473251342773
    6. '(S' → logprob: -13.260473251342773
    7. '   ' → logprob: -14.010473251342773
    8. 's' → logprob: -14.260473251342773
    9. ' ' → logprob: -15.260473251342773
    10. '(a' → logprob: -15.760473251342773

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011461719404906034
    2. ' ,' → logprob: -6.87614631652832
    3. ',n' → logprob: -10.75114631652832
    4. ',a' → logprob: -10.87614631652832
    5. ',s' → logprob: -10.87614631652832
    6. '):' → logprob: -11.25114631652832
    7. ',data' → logprob: -12.00114631652832
    8. ',line' → logprob: -12.12614631652832
    9. ',p' → logprob: -12.37614631652832
    10. ',l' → logprob: -12.62614631652832

Token 88: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5098685026168823
    2. 'A' → logprob: -2.259868621826172
    3. ' arr' → logprob: -2.509868621826172
    4. 'lst' → logprob: -2.634868621826172
    5. 'a' → logprob: -3.384868621826172
    6. 'l' → logprob: -3.634868621826172
    7. ' A' → logprob: -3.759868621826172
    8. ' a' → logprob: -5.009868621826172
    9. 'L' → logprob: -5.259868621826172
    10. ' l' → logprob: -5.259868621826172

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003424850758165121
    2. ',' → logprob: -5.878424644470215
    3. '):
' → logprob: -8.003424644470215
    4. ' ):' → logprob: -8.628424644470215
    5. ':' → logprob: -10.503424644470215
    6. ')' → logprob: -10.628424644470215
    7. '):
' → logprob: -11.378424644470215
    8. '   ' → logprob: -11.503424644470215
    9. '=None' → logprob: -11.753424644470215
    10. '=' → logprob: -12.128424644470215

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008303331211209297
    2. '   ' → logprob: -6.008303165435791
    3. '    ' → logprob: -6.133303165435791
    4. ':' → logprob: -7.383303165435791
    5. ' for' → logprob: -7.383303165435791
    6. ',' → logprob: -8.00830364227295
    7. '[' → logprob: -8.38330364227295
    8. ' =' → logprob: -8.38330364227295
    9. '        ' → logprob: -8.63330364227295
    10. ' ' → logprob: -8.75830364227295

Token 91: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7435889840126038
    2. '       ' → logprob: -0.9935889840126038
    3. '   ' → logprob: -2.743588924407959
    4. ' n' → logprob: -3.493588924407959
    5. ' i' → logprob: -4.243588924407959
    6. ' ' → logprob: -4.618588924407959
    7. ' l' → logprob: -4.618588924407959
    8. 'n' → logprob: -4.743588924407959
    9. '    ' → logprob: -5.368588924407959
    10. 'for' (adapté à ' for') → logprob: -5.743588924407959

Token 92: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006789501290768385
    2. 'i' → logprob: -5.006789684295654
    3. ' ' → logprob: -9.756789207458496
    4. '	i' → logprob: -11.381789207458496
    5. '   ' → logprob: -13.506789207458496
    6. '  ' → logprob: -13.631789207458496
    7. ' idx' → logprob: -14.881789207458496
    8. '(i' → logprob: -15.506789207458496
    9. ' e' → logprob: -15.506789207458496
    10. 'e' → logprob: -16.006790161132812

Token 93: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027627551928162575
    2. ',' → logprob: -4.027627468109131
    3. 'in' → logprob: -4.902627468109131
    4. ' ' → logprob: -6.277627468109131
    5. ' ,' → logprob: -9.777627944946289
    6. '  ' → logprob: -10.527627944946289
    7. ',n' → logprob: -11.152627944946289
    8. ',in' → logprob: -11.527627944946289
    9. '	in' → logprob: -11.902627944946289
    10. 'n' → logprob: -12.777627944946289

Token 94: ' val' (ID: 1459)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.44150233268737793
    2. 'x' → logprob: -1.691502332687378
    3. ' v' → logprob: -2.191502332687378
    4. 'a' → logprob: -3.316502332687378
    5. ' x' → logprob: -3.941502332687378
    6. ' a' → logprob: -5.816502571105957
    7. 'e' → logprob: -7.066502571105957
    8. ' ' → logprob: -7.816502571105957
    9. 'val' → logprob: -7.941502571105957
    10. ' val' → logprob: -8.316502571105957

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020711682736873627
    2. 'in' → logprob: -3.895711660385132
    3. 'enumer' → logprob: -9.520711898803711
    4. ',' → logprob: -9.895711898803711
    5. ' ' → logprob: -10.770711898803711
    6. 's' → logprob: -11.645711898803711
    7. ' enumerate' → logprob: -11.895711898803711
    8. '  ' → logprob: -13.520711898803711
    9. '   ' → logprob: -14.145711898803711
    10. 'n' → logprob: -14.145711898803711

Token 96: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.31326326727867126
    2. ' enumerate' → logprob: -1.3132632970809937
    3. '```' → logprob: -14.438262939453125
    4. 'enum' → logprob: -14.938262939453125
    5. 'en' → logprob: -15.188262939453125
    6. '(en' → logprob: -16.063262939453125
    7. ' ' → logprob: -16.063262939453125
    8. '.enumer' → logprob: -16.313262939453125
    9. '
' → logprob: -16.438262939453125
    10. ' enumer' → logprob: -17.313262939453125

Token 97: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.016604211181402206
    2. ' arr' → logprob: -4.641604423522949
    3. 'arr' → logprob: -5.016604423522949
    4. '	arr' → logprob: -9.14160442352295
    5. '(' → logprob: -10.01660442352295
    6. ' (' → logprob: -10.64160442352295
    7. ' ' → logprob: -11.39160442352295
    8. '_arr' → logprob: -12.76660442352295
    9. '<arr' → logprob: -13.14160442352295
    10. ')' → logprob: -13.39160442352295

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0051522813737392426
    2. ' ):' → logprob: -5.880152225494385
    3. '):
' → logprob: -6.255152225494385
    4. ':' → logprob: -7.880152225494385
    5. ')' → logprob: -10.380152702331543
    6. ' ):
' → logprob: -12.255152702331543
    7. ' :' → logprob: -12.880152702331543
    8. '):
' → logprob: -13.130152702331543
    9. ')：' → logprob: -13.880152702331543
    10. ',' → logprob: -14.005152702331543

Token 99: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024865806102752686
    2. ':
' → logprob: -4.399865627288818
    3. '       ' → logprob: -5.274865627288818
    4. '):' → logprob: -5.399865627288818
    5. '           ' → logprob: -6.649865627288818
    6. '):
' → logprob: -7.149865627288818
    7. ' :' → logprob: -8.399866104125977
    8. ',' → logprob: -9.024866104125977
    9. ')' → logprob: -9.899866104125977
    10. ' :
' → logprob: -10.774866104125977

Token 100: ' this' (ID: 495)
  Prédit: ' this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.007135647349059582
    2. 'this' (adapté à ' this') → logprob: -5.00713586807251
    3. '               ' → logprob: -8.507135391235352
    4. '           ' → logprob: -8.757135391235352
    5. ' ' → logprob: -11.132135391235352
    6. ')this' → logprob: -11.382135391235352
    7. ' 
' → logprob: -11.757135391235352
    8. '	this' → logprob: -12.132135391235352
    9. 'This' → logprob: -13.007135391235352
    10. '(this' → logprob: -13.132135391235352

Token 101: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -0.0002441741817165166
    2. '.' → logprob: -8.375244140625
    3. ' .' → logprob: -11.625244140625
    4. '@dat' → logprob: -12.875244140625
    5. '.datab' → logprob: -13.500244140625
    6. '.datas' → logprob: -15.375244140625
    7. '.da' → logprob: -16.500244140625
    8. '.Dat' → logprob: -16.625244140625
    9. '.di' → logprob: -16.750244140625
    10. '.val' → logprob: -17.000244140625

Token 102: '[this' (ID: 37920)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0006267757853493094
    2. '[' → logprob: -7.500626564025879
    3. '[i' → logprob: -10.000626564025879
    4. ' [' → logprob: -11.250626564025879
    5. '[this' → logprob: -12.250626564025879
    6. '[len' → logprob: -12.500626564025879
    7. '[(' → logprob: -13.250626564025879
    8. ' s' → logprob: -13.875626564025879
    9. '[
' → logprob: -14.000626564025879
    10. '   ' → logprob: -14.375626564025879

Token 103: '.sz' (ID: 172462)
  Prédit: '.sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sz' → logprob: -6.749814019713085e-06
    2. '.s' → logprob: -12.250006675720215
    3. '.dat' → logprob: -14.250006675720215
    4. ' .' → logprob: -14.250006675720215
    5. '.' → logprob: -15.000006675720215
    6. '.si' → logprob: -15.500006675720215
    7. 'sz' → logprob: -17.00000762939453
    8. ' sz' → logprob: -17.62500762939453
    9. '.i' → logprob: -18.12500762939453
    10. '.idx' → logprob: -18.12500762939453

Token 104: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5811644792556763
    2. ' +' → logprob: -1.2061644792556763
    3. '+i' → logprob: -1.9561644792556763
    4. ' ' → logprob: -12.581164360046387
    5. '＋' → logprob: -12.831164360046387
    6. ' plus' → logprob: -13.581164360046387
    7. '+
' → logprob: -14.081164360046387
    8. '+j' → logprob: -15.081164360046387
    9. ' +
' → logprob: -15.206164360046387
    10. ' ' → logprob: -15.331164360046387

Token 105: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004080897197127342
    2. ' i' → logprob: -5.504080772399902
    3. ' ' → logprob: -13.004080772399902
    4. '  ' → logprob: -16.12908172607422
    5. '	i' → logprob: -16.62908172607422
    6. '   ' → logprob: -17.12908172607422
    7. '    ' → logprob: -20.75408172607422
    8. '(i' → logprob: -21.00408172607422
    9. '```' → logprob: -21.00408172607422
    10. '<|end|>' → logprob: -21.00408172607422

Token 106: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.048810482025146484
    2. ' ]' → logprob: -3.1738104820251465
    3. ']=' → logprob: -5.1738104820251465
    4. '=' → logprob: -9.548810958862305
    5. ' =' → logprob: -9.798810958862305
    6. ' ' → logprob: -12.673810958862305
    7. ')' → logprob: -14.673810958862305
    8. '`]' → logprob: -15.423810958862305
    9. ']+=' → logprob: -15.673810958862305
    10. ' :]' → logprob: -15.673810958862305

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038042064756155014
    2. '=' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.663042068481445
    4. '=value' → logprob: -16.663042068481445
    5. '＝' → logprob: -16.913042068481445
    6. '=f' → logprob: -17.163042068481445
    7. '=data' → logprob: -17.663042068481445
    8. '=s' → logprob: -17.788042068481445
    9. '.=' → logprob: -17.788042068481445
    10. '=cut' → logprob: -17.913042068481445

Token 108: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.5759397745132446
    2. 'val' → logprob: -0.8259397745132446
    3. '	val' → logprob: -14.950940132141113
    4. '(val' → logprob: -17.950939178466797
    5. ' ' → logprob: -19.075939178466797
    6. '[val' → logprob: -19.075939178466797
    7. ',val' → logprob: -19.575939178466797
    8. '.val' → logprob: -19.575939178466797
    9. 'v' → logprob: -19.825939178466797
    10. '_val' → logprob: -19.950939178466797

Token 109: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022426698356866837
    2. '       ' → logprob: -4.397426605224609
    3. '\n' → logprob: -4.897426605224609
    4. '<|end|>' → logprob: -6.772426605224609
    5. '' → logprob: -7.897426605224609
    6. ' 
' → logprob: -8.27242660522461
    7. '
' → logprob: -8.52242660522461
    8. '  
' → logprob: -8.89742660522461
    9. '        
' → logprob: -9.77242660522461
    10. 'newline' → logprob: -10.02242660522461

Token 110: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24368873238563538
    2. '       ' → logprob: -1.618688702583313
    3. '\n' → logprob: -4.243688583374023
    4. '<|end|>' → logprob: -6.868688583374023
    5. '' → logprob: -7.118688583374023
    6. ' 
' → logprob: -7.868688583374023
    7. '        
' → logprob: -7.993688583374023
    8. '   ' → logprob: -8.243688583374023
    9. '  
' → logprob: -8.743688583374023
    10. 'newline' → logprob: -8.868688583374023

Token 111: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5843410491943359
    2. 'for' (adapté à ' for') → logprob: -0.8343410491943359
    3. '
' → logprob: -5.084341049194336
    4. '   ' → logprob: -6.709341049194336
    5. '\n' → logprob: -8.209341049194336
    6. ' 
' → logprob: -8.584341049194336
    7. '	for' → logprob: -8.584341049194336
    8. '       ' → logprob: -8.834341049194336
    9. ' ' → logprob: -9.834341049194336
    10. '        
' → logprob: -10.584341049194336

Token 112: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0007788925431668758
    2. 'i' → logprob: -7.375778675079346
    3. ' ' → logprob: -8.875779151916504
    4. ' _' → logprob: -12.250779151916504
    5. ' range' → logprob: -12.625779151916504
    6. '	i' → logprob: -14.000779151916504
    7. ' j' → logprob: -14.375779151916504
    8. '  ' → logprob: -14.750779151916504
    9. ' x' → logprob: -14.750779151916504
    10. ' ' → logprob: -15.125779151916504

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014242835342884064
    2. 'in' → logprob: -4.264242649078369
    3. ' ' → logprob: -9.889243125915527
    4. '   ' → logprob: -11.139243125915527
    5. '  ' → logprob: -12.139243125915527
    6. 'range' → logprob: -12.514243125915527
    7. 'k' → logprob: -13.764243125915527
    8. '	in' → logprob: -14.139243125915527
    9. '    ' → logprob: -14.514243125915527
    10. ' i' → logprob: -14.764243125915527

Token 114: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07928939908742905
    2. ' range' → logprob: -2.579289436340332
    3. 're' → logprob: -8.329289436340332
    4. '   ' → logprob: -9.454289436340332
    5. ' ' → logprob: -10.329289436340332
    6. ' reversed' → logprob: -10.329289436340332
    7. '  ' → logprob: -11.704289436340332
    8. '(range' → logprob: -13.329289436340332
    9. '	range' → logprob: -13.454289436340332
    10. '    ' → logprob: -13.704289436340332

Token 115: '(this' (ID: 2429)
  Prédit: '(this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(this' → logprob: -0.008676853962242603
    2. '(s' → logprob: -4.758677005767822
    3. 'this' → logprob: -9.758676528930664
    4. '(' → logprob: -13.258676528930664
    5. '   ' → logprob: -13.883676528930664
    6. '((' → logprob: -14.133676528930664
    7. ' (' → logprob: -14.508676528930664
    8. ' this' → logprob: -15.758676528930664
    9. '	this' → logprob: -16.008676528930664
    10. '(t' → logprob: -16.008676528930664

Token 116: '.sz' (ID: 172462)
  Prédit: '.sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sz' → logprob: -1.3856492842023727e-06
    2. 'sz' → logprob: -13.875000953674316
    3. ' .' → logprob: -15.875000953674316
    4. '   ' → logprob: -15.875000953674316
    5. ' sz' → logprob: -16.500001907348633
    6. ' ' → logprob: -17.375001907348633
    7. '       ' → logprob: -18.250001907348633
    8. '.' → logprob: -18.500001907348633
    9. '  ' → logprob: -18.750001907348633
    10. '.s' → logprob: -18.750001907348633

Token 117: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31328821182250977
    2. '-' → logprob: -1.3132882118225098
    3. ' ' → logprob: -10.563287734985352
    4. '  ' → logprob: -15.438287734985352
    5. ' ' → logprob: -15.563287734985352
    6. ',' → logprob: -16.06328773498535
    7. '   ' → logprob: -16.81328773498535
    8. '1' → logprob: -17.56328773498535
    9. ' ,' → logprob: -17.56328773498535
    10. '2' → logprob: -18.18828773498535

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.555654105497524e-05
    2. ' ' → logprob: -9.37509536743164
    3. '2' → logprob: -11.62509536743164
    4. '   ' → logprob: -13.75009536743164
    5. '       ' → logprob: -15.50009536743164
    6. '    ' → logprob: -15.87509536743164
    7. '１' → logprob: -16.12509536743164
    8. '           ' → logprob: -16.50009536743164
    9. '  ' → logprob: -16.75009536743164
    10. '```' → logprob: -17.75009536743164

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018167035654187202
    2. ' ,' → logprob: -4.018167018890381
    3. ' -' → logprob: -12.518167495727539
    4. '-' → logprob: -12.768167495727539
    5. '0' → logprob: -12.768167495727539
    6. ',-' → logprob: -13.143167495727539
    7. ' ' → logprob: -13.143167495727539
    8. '   ' → logprob: -13.518167495727539
    9. ' ,-' → logprob: -14.143167495727539
    10. '1' → logprob: -14.393167495727539

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12696705758571625
    2. ' ' → logprob: -2.126966953277588
    3. ' -' → logprob: -11.251967430114746
    4. '   ' → logprob: -11.876967430114746
    5. '-' → logprob: -12.001967430114746
    6. '    ' → logprob: -12.126967430114746
    7. '  ' → logprob: -12.501967430114746
    8. '     ' → logprob: -13.001967430114746
    9. '           ' → logprob: -15.126967430114746
    10. '      ' → logprob: -15.251967430114746

Token 121: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1233886107802391
    2. ',-' → logprob: -2.2483885288238525
    3. ' ,' → logprob: -5.248388767242432
    4. ' ,-' → logprob: -5.623388767242432
    5. '-' → logprob: -6.623388767242432
    6. ' -' → logprob: -8.123388290405273
    7. ',
' → logprob: -12.248388290405273
    8. '   ' → logprob: -12.248388290405273
    9. ' ' → logprob: -13.373388290405273
    10. '	' → logprob: -13.498388290405273

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '１' → logprob: -17.875003814697266
    4. '   ' → logprob: -20.625003814697266
    5. '0' → logprob: -21.625003814697266
    6. ' -' → logprob: -21.750003814697266
    7. '  ' → logprob: -22.125003814697266
    8. ')' → logprob: -22.125003814697266
    9. '```' → logprob: -22.250003814697266
    10. '۱' → logprob: -22.500003814697266

Token 123: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5017898082733154
    2. ',' → logprob: -1.7517898082733154
    3. '):' → logprob: -1.7517898082733154
    4. ',-' → logprob: -3.3767898082733154
    5. ':' → logprob: -5.1267900466918945
    6. ' -' → logprob: -5.2517900466918945
    7. '):
' → logprob: -7.5017900466918945
    8. ' ):' → logprob: -7.5017900466918945
    9. ')' → logprob: -8.251790046691895
    10. '   ' → logprob: -8.251790046691895

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17379511892795563
    2. ' this' → logprob: -1.9237951040267944
    3. '               ' → logprob: -6.048795223236084
    4. '       ' → logprob: -6.173795223236084
    5. '	       ' → logprob: -6.173795223236084
    6. 'this' → logprob: -6.923795223236084
    7. '(this' → logprob: -7.423795223236084
    8. '#' → logprob: -7.548795223236084
    9. ':' → logprob: -7.548795223236084
    10. ',' → logprob: -7.673795223236084

Token 125: ' this' (ID: 495)
  Prédit: ' this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.38754385709762573
    2. 'this' (adapté à ' this') → logprob: -1.1375439167022705
    3. '           ' → logprob: -7.887543678283691
    4. '               ' → logprob: -8.262543678283691
    5. ')this' → logprob: -11.512543678283691
    6. '	this' → logprob: -11.887543678283691
    7. '.this' → logprob: -12.512543678283691
    8. '   ' → logprob: -12.887543678283691
    9. '(this' → logprob: -13.012543678283691
    10. 'This' → logprob: -13.137543678283691

Token 126: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -3.941161776310764e-05
    2. '.' → logprob: -10.250039100646973
    3. '@dat' → logprob: -12.875039100646973
    4. '.datab' → logprob: -14.625039100646973
    5. ' .' → logprob: -14.750039100646973
    6. '.datas' → logprob: -15.125039100646973
    7. '.da' → logprob: -16.50004005432129
    8. '.op' → logprob: -16.62504005432129
    9. 'dat' → logprob: -16.62504005432129
    10. '.Dat' → logprob: -17.37504005432129

Token 127: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.02314823307096958
    2. '[' → logprob: -3.89814829826355
    3. '[s' → logprob: -6.023148059844971
    4. ' [' → logprob: -9.898148536682129
    5. '[this' → logprob: -10.273148536682129
    6. ' =' → logprob: -10.648148536682129
    7. '=' → logprob: -10.773148536682129
    8. '[key' → logprob: -11.523148536682129
    9. '[data' → logprob: -12.773148536682129
    10. '[
' → logprob: -12.898148536682129

Token 128: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17116312682628632
    2. ' )' → logprob: -2.2961630821228027
    3. ')=' → logprob: -3.2961630821228027
    4. '=' → logprob: -4.671163082122803
    5. ' =' → logprob: -4.671163082122803
    6. ']' → logprob: -7.171163082122803
    7. ']=' → logprob: -9.046163558959961
    8. ' ]' → logprob: -10.671163558959961
    9. '）' → logprob: -12.421163558959961
    10. ' ）' → logprob: -12.546163558959961

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023250950500369072
    2. ' =' → logprob: -3.7732510566711426
    3. '=s' → logprob: -12.148250579833984
    4. '＝' → logprob: -17.523250579833984
    5. '=k' → logprob: -17.773250579833984
    6. ' ' → logprob: -18.023250579833984
    7. 's' → logprob: -18.148250579833984
    8. '.=' → logprob: -18.898250579833984
    9. ' s' → logprob: -19.023250579833984
    10. '=

' → logprob: -19.273250579833984

Token 130: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.36197903752326965
    2. ' this' → logprob: -1.2369790077209473
    3. 's' → logprob: -4.361979007720947
    4. ' s' → logprob: -7.361979007720947
    5. 'self' → logprob: -10.361979484558105
    6. 'This' → logprob: -12.486979484558105
    7. ' self' → logprob: -12.861979484558105
    8. '_this' → logprob: -12.861979484558105
    9. '(this' → logprob: -12.986979484558105
    10. '   ' → logprob: -13.111979484558105

Token 131: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.01417984813451767
    2. '.dat' → logprob: -4.264179706573486
    3. '.opend' → logprob: -12.389180183410645
    4. '.oper' → logprob: -12.889180183410645
    5. '.opt' → logprob: -13.389180183410645
    6. ' .' → logprob: -13.514180183410645
    7. '.' → logprob: -13.514180183410645
    8. '.el' → logprob: -13.639180183410645
    9. '	op' → logprob: -14.139180183410645
    10. '.datas' → logprob: -14.139180183410645

Token 132: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0280383548888494e-06
    2. 'р' → logprob: -14.625000953674316
    3. 'er' → logprob: -15.500000953674316
    4. 'ر' → logprob: -16.250001907348633
    5. 's' → logprob: -16.937501907348633
    6. '	r' → logprob: -17.125001907348633
    7. 'ר' → logprob: -17.312501907348633
    8. ' r' → logprob: -17.500001907348633
    9. 'ration' → logprob: -18.250001907348633
    10. 'rı' → logprob: -18.625001907348633

Token 133: '(this' (ID: 2429)
  Prédit: '(this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(this' → logprob: -0.31357723474502563
    2. '(' → logprob: -1.3135771751403809
    3. '(s' → logprob: -8.313577651977539
    4. '(
' → logprob: -10.063577651977539
    5. 'this' → logprob: -10.938577651977539
    6. '(This' → logprob: -12.063577651977539
    7. ' (' → logprob: -13.188577651977539
    8. '(

' → logprob: -14.063577651977539
    9. ' this' → logprob: -14.813577651977539
    10. '(t' → logprob: -15.188577651977539

Token 134: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -5.633853652398102e-05
    2. 'dat' → logprob: -9.875056266784668
    3. '.' → logprob: -13.000056266784668
    4. '@dat' → logprob: -13.000056266784668
    5. '_dat' → logprob: -15.875056266784668
    6. '.datab' → logprob: -16.750057220458984
    7. ' dat' → logprob: -17.125057220458984
    8. '(dat' → logprob: -17.125057220458984
    9. '/dat' → logprob: -17.375057220458984
    10. '.datas' → logprob: -17.750057220458984

Token 135: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0024835076183080673
    2. '[' → logprob: -6.002483367919922
    3. 'k' → logprob: -11.877483367919922
    4. '2' → logprob: -14.877483367919922
    5. '	k' → logprob: -14.877483367919922
    6. ',k' → logprob: -16.002483367919922
    7. '[
' → logprob: -17.502483367919922
    8. '(k' → logprob: -17.752483367919922
    9. ' ' → logprob: -18.252483367919922
    10. ' k' → logprob: -18.252483367919922

Token 136: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0004790512612089515
    2. ' <<' → logprob: -7.750479221343994
    3. '*' → logprob: -10.500478744506836
    4. '2' → logprob: -11.000478744506836
    5. '1' → logprob: -13.375478744506836
    6. 'k' → logprob: -13.625478744506836
    7. ' ' → logprob: -14.625478744506836
    8. '<' → logprob: -15.375478744506836
    9. ' <<=' → logprob: -15.625478744506836
    10. '()<<' → logprob: -16.000478744506836

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.500011444091797
    4. ' ' → logprob: -17.625011444091797
    5. 'k' → logprob: -18.000011444091797
    6. '0' → logprob: -18.500011444091797
    7. '１' → logprob: -18.500011444091797
    8. '' → logprob: -18.625011444091797
    9. '```' → logprob: -18.750011444091797
    10. '     ' → logprob: -18.750011444091797

Token 138: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08210447430610657
    2. ' ,' → logprob: -2.707104444503784
    3. ',k' → logprob: -4.707104682922363
    4. '],' → logprob: -6.082104682922363
    5. ' ],' → logprob: -7.332104682922363
    6. ' ' → logprob: -10.082104682922363
    7. '1' → logprob: -10.832104682922363
    8. 'k' → logprob: -11.082104682922363
    9. ',j' → logprob: -12.457104682922363
    10. '           ' → logprob: -12.582104682922363

Token 139: ' this' (ID: 495)
  Prédit: ' this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.3869444727897644
    2. 'this' → logprob: -1.1369445323944092
    3. 'self' → logprob: -10.011944770812988
    4. ' self' → logprob: -11.136944770812988
    5. 's' → logprob: -11.761944770812988
    6. ' s' → logprob: -12.761944770812988
    7. ' ' → logprob: -13.386944770812988
    8. 'This' → logprob: -14.386944770812988
    9. '    ' → logprob: -14.886944770812988
    10. '            ' → logprob: -15.636944770812988

Token 140: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -0.00020568605395965278
    2. 'dat' → logprob: -8.750205993652344
    3. '.k' → logprob: -10.500205993652344
    4. '@dat' → logprob: -11.875205993652344
    5. '.' → logprob: -12.500205993652344
    6. ' .' → logprob: -12.750205993652344
    7. '[k' → logprob: -13.250205993652344
    8. '(dat' → logprob: -13.625205993652344
    9. 'k' → logprob: -13.875205993652344
    10. '_dat' → logprob: -14.000205993652344

Token 141: '[(' (ID: 20542)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.6067448854446411
    2. '<<' → logprob: -1.2317448854446411
    3. '(k' → logprob: -2.7317447662353516
    4. '[' → logprob: -2.8567447662353516
    5. 'k' → logprob: -3.8567447662353516
    6. '1' → logprob: -4.481744766235352
    7. '(' → logprob: -5.106744766235352
    8. '|' → logprob: -6.856744766235352
    9. '{k' → logprob: -8.106744766235352
    10. ' <<' → logprob: -8.481744766235352

Token 142: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.248469718324486e-05
    2. ' k' → logprob: -10.750022888183594
    3. '(k' → logprob: -13.875022888183594
    4. ' (' → logprob: -16.750022888183594
    5. '{k' → logprob: -17.500022888183594
    6. '	k' → logprob: -18.500022888183594
    7. '(' → logprob: -18.875022888183594
    8. ' ' → logprob: -19.000022888183594
    9. '"k' → logprob: -20.625022888183594
    10. '   ' → logprob: -20.750022888183594

Token 143: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -9.968312951968983e-06
    2. '1' → logprob: -13.000009536743164
    3. ')<<' → logprob: -13.125009536743164
    4. ' <<' → logprob: -13.250009536743164
    5. '()<<' → logprob: -13.250009536743164
    6. ']<<' → logprob: -13.375009536743164
    7. '<' → logprob: -14.500009536743164
    8. '<<"' → logprob: -16.750009536743164
    9. '"<<' → logprob: -17.500009536743164
    10. '(' → logprob: -17.625009536743164

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. 'k' → logprob: -17.25
    4. '(' → logprob: -18.5
    5. '
' → logprob: -19.0
    6. '(k' → logprob: -19.375
    7. '   ' → logprob: -20.625
    8. '+' → logprob: -20.875
    9. '0' → logprob: -21.0
    10. '>' → logprob: -21.125

Token 145: ')|' (ID: 47976)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00021319588995538652
    2. ' |' → logprob: -8.625213623046875
    3. ']' → logprob: -10.875213623046875
    4. ')' → logprob: -12.750213623046875
    5. ']+' → logprob: -12.750213623046875
    6. ']|' → logprob: -12.750213623046875
    7. '1' → logprob: -13.125213623046875
    8. '|
' → logprob: -13.250213623046875
    9. ')|' → logprob: -14.000213623046875
    10. ')+' → logprob: -14.625213623046875

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. 'k' → logprob: -17.125709533691406
    4. '0' → logprob: -17.625709533691406
    5. '   ' → logprob: -17.875709533691406
    6. '2' → logprob: -18.500709533691406
    7. '```' → logprob: -19.000709533691406
    8. ' k' → logprob: -19.125709533691406
    9. ' ' → logprob: -19.500709533691406
    10. '１' → logprob: -19.688209533691406

Token 147: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5764090418815613
    2. ')' → logprob: -0.8264090418815613
    3. ')])' → logprob: -8.951409339904785
    4. ' )' → logprob: -9.076409339904785
    5. ' ])' → logprob: -9.076409339904785
    6. ']' → logprob: -10.201409339904785
    7. '))' → logprob: -10.326409339904785
    8. ')
' → logprob: -11.076409339904785
    9. ')]' → logprob: -11.826409339904785
    10. ''])' → logprob: -12.201409339904785

Token 148: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' set' (ID: 920)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.113458514213562
    2. 'update' → logprob: -1.238458514213562
    3. ' get' → logprob: -2.1134586334228516
    4. ' update' → logprob: -2.2384586334228516
    5. 'set' → logprob: -3.2384586334228516
    6. 'query' → logprob: -3.2384586334228516
    7. ' set' → logprob: -3.7384586334228516
    8. ' query' → logprob: -4.238458633422852
    9. 'upd' → logprob: -4.488458633422852
    10. ' prod' → logprob: -5.238458633422852

Token 151: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004934039432555437
    2. ' (' → logprob: -6.504933834075928
    3. '_' → logprob: -6.754933834075928
    4. '(s' → logprob: -7.004933834075928
    5. '(self' → logprob: -7.754933834075928
    6. 'item' → logprob: -7.879933834075928
    7. '_item' → logprob: -8.379934310913086
    8. '_value' → logprob: -9.629934310913086
    9. ' ' → logprob: -10.129934310913086
    10. '(this' → logprob: -10.254934310913086

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09857119619846344
    2. '(' → logprob: -3.223571300506592
    3. '):' → logprob: -3.598571300506592
    4. ')' → logprob: -4.848571300506592
    5. '   ' → logprob: -5.598571300506592
    6. ' ' → logprob: -5.973571300506592
    7. ' ):' → logprob: -5.973571300506592
    8. ' (' → logprob: -6.223571300506592
    9. ' ,' → logprob: -6.223571300506592
    10. '(i' → logprob: -6.973571300506592

Token 153: ' idx' (ID: 14016)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7708475589752197
    2. 'i' → logprob: -1.0208475589752197
    3. ' p' → logprob: -2.2708475589752197
    4. ' i' → logprob: -2.8958475589752197
    5. 'k' → logprob: -4.395847320556641
    6. 'idx' → logprob: -5.520847320556641
    7. ' k' → logprob: -7.020847320556641
    8. 'pos' → logprob: -7.145847320556641
    9. ' idx' → logprob: -7.770847320556641
    10. ' ' → logprob: -9.27084732055664

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005032312474213541
    2. ' ,' → logprob: -7.625503063201904
    3. ',value' → logprob: -11.250503540039062
    4. ',val' → logprob: -13.375503540039062
    5. ',new' → logprob: -15.625503540039062
    6. '   ' → logprob: -16.375503540039062
    7. '‌,' → logprob: -16.500503540039062
    8. '    ' → logprob: -16.625503540039062
    9. ',int' → logprob: -17.000503540039062
    10. ')' → logprob: -17.000503540039062

Token 155: ' value' (ID: 1432)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.18212266266345978
    2. ' val' → logprob: -1.9321227073669434
    3. 'x' → logprob: -4.057122707366943
    4. 'value' → logprob: -5.932122707366943
    5. ' x' → logprob: -6.807122707366943
    6. 'v' → logprob: -7.807122707366943
    7. ' value' → logprob: -9.182122230529785
    8. ' ' → logprob: -9.932122230529785
    9. ' v' → logprob: -10.307122230529785
    10. '   ' → logprob: -11.807122230529785

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004108915571123362
    2. '):
' → logprob: -5.504108905792236
    3. ')' → logprob: -10.629109382629395
    4. '):
' → logprob: -12.379109382629395
    5. ' ):' → logprob: -14.004109382629395
    6. ':' → logprob: -14.629109382629395
    7. '   ' → logprob: -14.629109382629395
    8. '):

' → logprob: -15.629109382629395
    9. ' ' → logprob: -16.129108428955078
    10. ')：' → logprob: -17.754108428955078

Token 157: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5960172414779663
    2. '       ' → logprob: -1.0960172414779663
    3. '
' → logprob: -3.096017360687256
    4. '   ' → logprob: -3.471017360687256
    5. '    
' → logprob: -4.221017360687256
    6. '        
' → logprob: -5.346017360687256
    7. '  
' → logprob: -5.721017360687256
    8. ' self' → logprob: -5.721017360687256
    9. '   
' → logprob: -6.221017360687256
    10. ')' → logprob: -6.346017360687256

Token 158: ' p' (ID: 275)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3431641459465027
    2. ' idx' → logprob: -1.8431642055511475
    3. 'p' (adapté à ' p') → logprob: -2.7181642055511475
    4. 'i' → logprob: -3.2181642055511475
    5. ' p' → logprob: -4.468163967132568
    6. 'k' → logprob: -5.218163967132568
    7. ' i' → logprob: -5.718163967132568
    8. 'pos' → logprob: -5.843163967132568
    9. 'self' → logprob: -7.343163967132568
    10. '       ' → logprob: -7.343163967132568

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14584578573703766
    2. '=' → logprob: -2.020845890045166
    3. ' ' → logprob: -6.145845890045166
    4. 'os' → logprob: -8.020845413208008
    5. '   ' → logprob: -8.770845413208008
    6. 'r' → logprob: -9.020845413208008
    7. '=p' → logprob: -9.395845413208008
    8. '_' → logprob: -9.520845413208008
    9. '[' → logprob: -10.145845413208008
    10. 'ar' → logprob: -10.270845413208008

Token 160: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.30885547399520874
    2. 'self' → logprob: -1.6838555335998535
    3. ' idx' → logprob: -2.8088555335998535
    4. ' self' → logprob: -3.9338555335998535
    5. '	idx' → logprob: -9.683855056762695
    6. '(idx' → logprob: -9.808855056762695
    7. '   ' → logprob: -10.308855056762695
    8. 's' → logprob: -10.433855056762695
    9. 'p' → logprob: -11.558855056762695
    10. '	self' → logprob: -12.308855056762695

Token 161: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04864402860403061
    2. ' +' → logprob: -3.0486440658569336
    3. '+s' → logprob: -10.298644065856934
    4. '+
' → logprob: -11.798644065856934
    5. '       ' → logprob: -12.423644065856934
    6. '+=' → logprob: -12.673644065856934
    7. '+p' → logprob: -12.673644065856934
    8. '+self' → logprob: -13.048644065856934
    9. '    ' → logprob: -13.798644065856934
    10. '        ' → logprob: -14.173644065856934

Token 162: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008617054671049118
    2. ' self' → logprob: -4.758616924285889
    3. '(self' → logprob: -13.383617401123047
    4. '[self' → logprob: -14.758617401123047
    5. '   ' → logprob: -15.383617401123047
    6. '       ' → logprob: -15.633617401123047
    7. '	self' → logprob: -16.133617401123047
    8. '_self' → logprob: -17.258617401123047
    9. 's' → logprob: -17.508617401123047
    10. '<|end|>' → logprob: -17.758617401123047

Token 163: '.sz' (ID: 172462)
  Prédit: '.sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sz' → logprob: -1.1472419600977446e-06
    2. 'sz' → logprob: -14.125000953674316
    3. ' .' → logprob: -15.000000953674316
    4. '.s' → logprob: -18.625001907348633
    5. '.' → logprob: -19.125001907348633
    6. ' sz' → logprob: -19.375001907348633
    7. '(sz' → logprob: -19.625001907348633
    8. '.cz' → logprob: -20.250001907348633
    9. '.seg' → logprob: -20.375001907348633
    10. '_sz' → logprob: -20.500001907348633

Token 164: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09117817133665085
    2. ' 
' → logprob: -3.3411781787872314
    3. '       ' → logprob: -4.091177940368652
    4. '\n' → logprob: -4.466177940368652
    5. '  
' → logprob: -5.466177940368652
    6. '[' → logprob: -5.466177940368652
    7. '
' → logprob: -5.841177940368652
    8. '        
' → logprob: -5.966177940368652
    9. '=' → logprob: -6.341177940368652
    10. '    
' → logprob: -6.341177940368652

Token 165: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027304543182253838
    2. '       ' → logprob: -4.152304649353027
    3. '
' → logprob: -5.277304649353027
    4. '\n' → logprob: -5.527304649353027
    5. '        
' → logprob: -7.152304649353027
    6. '  
' → logprob: -7.527304649353027
    7. ' 
' → logprob: -8.402304649353027
    8. ')
' → logprob: -9.027304649353027
    9. '    
' → logprob: -9.027304649353027
    10. '' → logprob: -9.402304649353027

Token 166: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1091555580496788
    2. ' self' → logprob: -2.3591556549072266
    3. '       ' → logprob: -4.734155654907227
    4. 's' → logprob: -9.734155654907227
    5. '	self' → logprob: -11.234155654907227
    6. '_self' → logprob: -11.359155654907227
    7. '   ' → logprob: -11.484155654907227
    8. 'p' → logprob: -11.859155654907227
    9. '        
' → logprob: -12.984155654907227
    10. ' p' → logprob: -12.984155654907227

Token 167: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -0.00016444525681436062
    2. '.' → logprob: -8.750164031982422
    3. ' .' → logprob: -12.750164031982422
    4. '.datas' → logprob: -13.875164031982422
    5. '@dat' → logprob: -13.875164031982422
    6. '.datab' → logprob: -14.625164031982422
    7. '.data' → logprob: -15.625164031982422
    8. '.val' → logprob: -15.875164031982422
    9. '.p' → logprob: -16.375164031982422
    10. '.da' → logprob: -16.500164031982422

Token 168: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0004319804720580578
    2. '[' → logprob: -7.750432014465332
    3. 'p' → logprob: -14.000432014465332
    4. '=' → logprob: -15.500432014465332
    5. ' [' → logprob: -15.625432014465332
    6. ' =' → logprob: -16.875431060791016
    7. '=p' → logprob: -18.125431060791016
    8. ' p' → logprob: -18.250431060791016
    9. '[
' → logprob: -19.375431060791016
    10. '[P' → logprob: -19.375431060791016

Token 169: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602400690317154
    2. '=' → logprob: -1.9102400541305542
    3. ')' → logprob: -11.535240173339844
    4. ']' → logprob: -12.285240173339844
    5. ')=' → logprob: -14.785240173339844
    6. ' =)' → logprob: -15.160240173339844
    7. ']=' → logprob: -15.535240173339844
    8. ' )' → logprob: -15.660240173339844
    9. ' ' → logprob: -15.660240173339844
    10. '=value' → logprob: -15.910240173339844

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022595763206482
    2. ' =' → logprob: -1.9102259874343872
    3. '=value' → logprob: -13.285225868225098
    4. '.=' → logprob: -17.535226821899414
    5. '＝' → logprob: -18.160226821899414
    6. '=}' → logprob: -18.410226821899414
    7. '=data' → logprob: -18.785226821899414
    8. ' ' → logprob: -19.160226821899414
    9. '=user' → logprob: -19.785226821899414
    10. '=

' → logprob: -19.910226821899414

Token 171: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.31326186656951904
    2. 'value' → logprob: -1.313261866569519
    3. '	value' → logprob: -16.688261032104492
    4. '(value' → logprob: -18.063261032104492
    5. '"value' → logprob: -18.063261032104492
    6. ''value' → logprob: -18.438261032104492
    7. 'Value' → logprob: -18.813261032104492
    8. ')value' → logprob: -18.938261032104492
    9. 'alue' → logprob: -19.438261032104492
    10. '$value' → logprob: -19.688261032104492

Token 172: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3783976435661316
    2. '
' → logprob: -1.8783977031707764
    3. '\n' → logprob: -2.2533977031707764
    4. 'p' → logprob: -3.5033977031707764
    5. ' p' → logprob: -5.378397464752197
    6. '<|end|>' → logprob: -5.378397464752197
    7. '	' → logprob: -5.503397464752197
    8. '   ' → logprob: -5.753397464752197
    9. '	p' → logprob: -6.503397464752197
    10. ',' → logprob: -6.503397464752197

Token 173: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9656535387039185
    2. '       ' → logprob: -0.9656535387039185
    3. '\n' → logprob: -1.5906535387039185
    4. 'p' → logprob: -4.340653419494629
    5. ' p' → logprob: -5.215653419494629
    6. '\' → logprob: -5.590653419494629
    7. '        
' → logprob: -5.715653419494629
    8. '  
' → logprob: -6.590653419494629
    9. '	p' → logprob: -6.965653419494629
    10. '<|end|>' → logprob: -7.090653419494629

Token 174: ' while' (ID: 2049)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014325451105833054
    2. ' p' → logprob: -4.2643256187438965
    3. '       ' → logprob: -8.889325141906738
    4. ' while' → logprob: -11.389325141906738
    5. 'while' (adapté à ' while') → logprob: -11.764325141906738
    6. '   ' → logprob: -12.514325141906738
    7. '
' → logprob: -14.139325141906738
    8. '        
' → logprob: -15.514325141906738
    9. ' 
' → logprob: -15.889325141906738
    10. '	p' → logprob: -16.264326095581055

Token 175: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.061983488500118256
    2. 'p' → logprob: -2.811983585357666
    3. '(p' → logprob: -11.811983108520508
    4. '(' → logprob: -12.811983108520508
    5. ' (' → logprob: -13.311983108520508
    6. ' ' → logprob: -13.811983108520508
    7. '1' → logprob: -13.936983108520508
    8. '	p' → logprob: -14.186983108520508
    9. 'True' → logprob: -14.811983108520508
    10. ' True' → logprob: -14.936983108520508

Token 176: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6932855248451233
    2. '>>' → logprob: -0.6932855248451233
    3. ' >>=' → logprob: -9.443285942077637
    4. ' >' → logprob: -10.943285942077637
    5. '>>>' → logprob: -11.443285942077637
    6. '   ' → logprob: -11.443285942077637
    7. '≫' → logprob: -12.568285942077637
    8. '=' → logprob: -12.693285942077637
    9. '">' → logprob: -12.818285942077637
    10. ' ' → logprob: -13.068285942077637

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006736453622579575
    2. ' ' → logprob: -5.0067362785339355
    3. 'p' → logprob: -11.006736755371094
    4. ' p' → logprob: -13.506736755371094
    5. '=' → logprob: -13.881736755371094
    6. '>' → logprob: -14.006736755371094
    7. '   ' → logprob: -14.381736755371094
    8. '0' → logprob: -15.131736755371094
    9. '>>' → logprob: -16.256736755371094
    10. '    ' → logprob: -16.381736755371094

Token 178: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.033874355256557465
    2. ':' → logprob: -3.533874273300171
    3. ' and' → logprob: -5.90887451171875
    4. ' :
' → logprob: -7.40887451171875
    5. '           ' → logprob: -7.78387451171875
    6. '       ' → logprob: -8.53387451171875
    7. ':
' → logprob: -9.78387451171875
    8. ' :' → logprob: -10.40887451171875
    9. '):
' → logprob: -10.90887451171875
    10. '   ' → logprob: -10.90887451171875

Token 179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10143228620290756
    2. ' p' → logprob: -2.3514323234558105
    3. 'p' → logprob: -8.226431846618652
    4. ' 
' → logprob: -8.476431846618652
    5. '
' → logprob: -8.601431846618652
    6. ',' → logprob: -8.851431846618652
    7. '<|end|>' → logprob: -9.351431846618652
    8. '            
' → logprob: -9.976431846618652
    9. ' ' → logprob: -10.351431846618652
    10. '(p' → logprob: -10.476431846618652

Token 180: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.4830721318721771
    2. ' p' → logprob: -0.9830721616744995
    3. '               ' → logprob: -4.733072280883789
    4. '           ' → logprob: -9.733072280883789
    5. '   ' → logprob: -10.233072280883789
    6. '/' → logprob: -11.108072280883789
    7. '	p' → logprob: -11.483072280883789
    8. ' ' → logprob: -11.858072280883789
    9. ' /' → logprob: -11.983072280883789
    10. '       ' → logprob: -12.733072280883789

Token 181: '//=' (ID: 171954)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.001822024118155241
    2. ' >>=' → logprob: -6.376821994781494
    3. '//=' → logprob: -9.126822471618652
    4. '=' → logprob: -11.501822471618652
    5. '>' → logprob: -14.876822471618652
    6. '≫' → logprob: -15.001822471618652
    7. '	' → logprob: -16.126821517944336
    8. '   ' → logprob: -16.251821517944336
    9. ')>>' → logprob: -16.751821517944336
    10. ' //' → logprob: -17.126821517944336

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.00000762939453
    4. '２' → logprob: -19.87500762939453
    5. '```' → logprob: -20.12500762939453
    6. '۲' → logprob: -21.25000762939453
    7. '
' → logprob: -21.50000762939453
    8. '=' → logprob: -22.00000762939453
    9. '>' → logprob: -22.12500762939453
    10. '  ' → logprob: -22.12500762939453

Token 183: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001955537445610389
    2. ' self' → logprob: -10.125195503234863
    3. '            
' → logprob: -10.250195503234863
    4. 'self' → logprob: -10.375195503234863
    5. '
' → logprob: -10.750195503234863
    6. '       ' → logprob: -11.125195503234863
    7. 's' → logprob: -11.625195503234863
    8. '   ' → logprob: -12.000195503234863
    9. ',' → logprob: -12.125195503234863
    10. '		' → logprob: -12.500195503234863

Token 184: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00045081099960952997
    2. ' self' → logprob: -8.37545108795166
    3. 'self' → logprob: -9.00045108795166
    4. '       ' → logprob: -10.12545108795166
    5. '   ' → logprob: -11.12545108795166
    6. ',' → logprob: -11.87545108795166
    7. '
' → logprob: -11.87545108795166
    8. 's' → logprob: -12.12545108795166
    9. '```' → logprob: -12.50045108795166
    10. ' ' → logprob: -12.75045108795166

Token 185: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00910800788551569
    2. ' self' → logprob: -4.759108066558838
    3. '           ' → logprob: -7.634108066558838
    4. ' ' → logprob: -12.50910758972168
    5. '   ' → logprob: -12.88410758972168
    6. '       ' → logprob: -13.63410758972168
    7. '	self' → logprob: -13.75910758972168
    8. 's' → logprob: -14.38410758972168
    9. '  ' → logprob: -15.63410758972168
    10. 'dat' → logprob: -16.25910758972168

Token 186: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -5.438573680294212e-06
    2. '@dat' → logprob: -12.500005722045898
    3. '.' → logprob: -13.875005722045898
    4. ' .' → logprob: -14.750005722045898
    5. 'dat' → logprob: -15.625005722045898
    6. '.datab' → logprob: -16.0000057220459
    7. '..' → logprob: -16.7500057220459
    8. '>.' → logprob: -18.1250057220459
    9. '   ' → logprob: -18.3750057220459
    10. '```' → logprob: -18.6250057220459

Token 187: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.081584716506768e-05
    2. '[' → logprob: -11.000020980834961
    3. 'p' → logprob: -12.500020980834961
    4. ' [' → logprob: -16.37502098083496
    5. '[parent' → logprob: -17.12502098083496
    6. '[
' → logprob: -17.75002098083496
    7. '```' → logprob: -18.00002098083496
    8. '[P' → logprob: -18.75002098083496
    9. '[self' → logprob: -18.87502098083496
    10. '   ' → logprob: -18.87502098083496

Token 188: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7193892598152161
    2. ']' → logprob: -0.9693892598152161
    3. ' =' → logprob: -2.0943892002105713
    4. ')' → logprob: -4.84438943862915
    5. ']=' → logprob: -6.21938943862915
    6. ' ]' → logprob: -7.96938943862915
    7. ')=' → logprob: -8.344388961791992
    8. ' )' → logprob: -10.219388961791992
    9. ')]' → logprob: -13.719388961791992
    10. 's' → logprob: -13.719388961791992

Token 189: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003178544342517853
    2. ' self' → logprob: -5.753178596496582
    3. 'this' → logprob: -15.128178596496582
    4. ' ' → logprob: -15.253178596496582
    5. '(self' → logprob: -15.503178596496582
    6. '   ' → logprob: -16.628177642822266
    7. 's' → logprob: -17.128177642822266
    8. ' ' → logprob: -17.378177642822266
    9. '	self' → logprob: -17.753177642822266
    10. '_self' → logprob: -17.753177642822266

Token 190: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.012686224654316902
    2. '.dat' → logprob: -4.387686252593994
    3. '.' → logprob: -9.012685775756836
    4. 'op' → logprob: -10.512685775756836
    5. ' .' → logprob: -11.887685775756836
    6. '	op' → logprob: -12.137685775756836
    7. '.oper' → logprob: -12.137685775756836
    8. 'dat' → logprob: -13.137685775756836
    9. '.ops' → logprob: -13.637685775756836
    10. '@dat' → logprob: -14.012685775756836

Token 191: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.069664333248511e-05
    2. '(self' → logprob: -11.750020980834961
    3. 'er' → logprob: -11.875020980834961
    4. 's' → logprob: -13.250020980834961
    5. '(' → logprob: -13.250020980834961
    6. 'self' → logprob: -14.500020980834961
    7. 'р' → logprob: -14.750020980834961
    8. '(s' → logprob: -15.375020980834961
    9. '(this' → logprob: -15.875020980834961
    10. 'rs' → logprob: -16.25002098083496

Token 192: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00021605310030281544
    2. '(' → logprob: -8.500216484069824
    3. 'self' → logprob: -11.375216484069824
    4. '(s' → logprob: -15.000216484069824
    5. '(
' → logprob: -15.000216484069824
    6. ' (' → logprob: -15.750216484069824
    7. '(Self' → logprob: -16.000215530395508
    8. ',self' → logprob: -16.125215530395508
    9. ' self' → logprob: -16.875215530395508
    10. 's' → logprob: -18.125215530395508

Token 193: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -0.0002671768015716225
    2. 'dat' → logprob: -8.250267028808594
    3. '@dat' → logprob: -12.625267028808594
    4. '.' → logprob: -13.875267028808594
    5. '_dat' → logprob: -15.250267028808594
    6. 'Dat' → logprob: -15.500267028808594
    7. '(dat' → logprob: -15.500267028808594
    8. ' dat' → logprob: -15.875267028808594
    9. '.datab' → logprob: -15.875267028808594
    10. 's' → logprob: -16.125267028808594

Token 194: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.021351363509893417
    2. '[' → logprob: -3.8963513374328613
    3. '[(' → logprob: -7.146351337432861
    4. 'p' → logprob: -11.27135181427002
    5. '(p' → logprob: -12.39635181427002
    6. '2' → logprob: -12.77135181427002
    7. '][' → logprob: -15.14635181427002
    8. '(' → logprob: -15.27135181427002
    9. ' ' → logprob: -15.39635181427002
    10. ',p' → logprob: -15.64635181427002

Token 195: '*' (ID: 9)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -5.6100132496794686e-05
    2. '*' → logprob: -10.250056266784668
    3. ' <<' → logprob: -11.375056266784668
    4. '[' → logprob: -11.750056266784668
    5. '1' → logprob: -15.125056266784668
    6. '2' → logprob: -15.500056266784668
    7. ']<<' → logprob: -15.500056266784668
    8. '<<(' → logprob: -15.625056266784668
    9. 'p' → logprob: -15.750056266784668
    10. '<<"' → logprob: -16.37505531311035

Token 196: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.492120155598968e-05
    2. '<<' → logprob: -10.000064849853516
    3. ' ' → logprob: -10.875064849853516
    4. '   ' → logprob: -15.375064849853516
    5. '*' → logprob: -16.250064849853516
    6. '	' → logprob: -16.750064849853516
    7. '```' → logprob: -16.750064849853516
    8. '  ' → logprob: -17.250064849853516
    9. ']<<' → logprob: -18.125064849853516
    10. '２' → logprob: -18.125064849853516

Token 197: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.08691050112247467
    2. ',' → logprob: -2.5869104862213135
    3. ' ],' → logprob: -5.211910724639893
    4. ' ,' → logprob: -6.211910724639893
    5. ',self' → logprob: -8.711910247802734
    6. ' ' → logprob: -9.336910247802734
    7. 'p' → logprob: -9.336910247802734
    8. ']' → logprob: -9.961910247802734
    9. ',p' → logprob: -10.461910247802734
    10. '   ' → logprob: -10.461910247802734

Token 198: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234121344983578
    2. ' self' → logprob: -5.255234241485596
    3. '   ' → logprob: -16.255233764648438
    4. ' ' → logprob: -16.755233764648438
    5. '           ' → logprob: -16.880233764648438
    6. '(self' → logprob: -16.880233764648438
    7. '	self' → logprob: -17.130233764648438
    8. 'this' → logprob: -17.630233764648438
    9. '  ' → logprob: -17.630233764648438
    10. ' ' → logprob: -18.505233764648438

Token 199: '.dat' (ID: 17439)
  Prédit: 'dat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dat' → logprob: -0.17161838710308075
    2. 'p' → logprob: -2.5466184616088867
    3. '.dat' → logprob: -2.5466184616088867
    4. '[p' → logprob: -7.921618461608887
    5. '(dat' → logprob: -9.171618461608887
    6. '_dat' → logprob: -9.171618461608887
    7. ' ' → logprob: -9.546618461608887
    8. '[' → logprob: -9.546618461608887
    9. ' dat' → logprob: -9.796618461608887
    10. ' p' → logprob: -9.796618461608887

Token 200: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.4295751452445984
    2. 'p' → logprob: -1.0545752048492432
    3. '[(' → logprob: -7.429574966430664
    4. '[' → logprob: -8.554574966430664
    5. '(p' → logprob: -9.929574966430664
    6. '2' → logprob: -11.054574966430664
    7. '*' → logprob: -12.179574966430664
    8. ' p' → logprob: -12.304574966430664
    9. '*p' → logprob: -12.804574966430664
    10. '1' → logprob: -13.429574966430664

Token 201: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005167700815945864
    2. '|' → logprob: -6.255167484283447
    3. '2' → logprob: -6.505167484283447
    4. 'p' → logprob: -7.755167484283447
    5. '[' → logprob: -8.005167961120605
    6. '>>' → logprob: -8.255167961120605
    7. ' *' → logprob: -8.505167961120605
    8. '<<' → logprob: -8.755167961120605
    9. '*p' → logprob: -9.130167961120605
    10. ']' → logprob: -9.755167961120605

Token 202: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6940116286277771
    2. '2' → logprob: -0.6940116286277771
    3. ' ' → logprob: -7.569011688232422
    4. 'i' → logprob: -9.569011688232422
    5. 'r' → logprob: -10.319011688232422
    6. '|' → logprob: -10.569011688232422
    7. '{' → logprob: -10.694011688232422
    8. 'p' → logprob: -10.694011688232422
    9. 'index' → logprob: -10.819011688232422
    10. 'l' → logprob: -11.069011688232422

Token 203: '+' (ID: 10)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0028080830816179514
    2. ' |' → logprob: -6.252808094024658
    3. '])' → logprob: -7.377808094024658
    4. '1' → logprob: -8.6278076171875
    5. ']|' → logprob: -10.2528076171875
    6. ']' → logprob: -10.6278076171875
    7. ' ' → logprob: -12.2528076171875
    8. '*' → logprob: -13.1278076171875
    9. ')|' → logprob: -13.6278076171875
    10. '[' → logprob: -13.6278076171875

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '0' → logprob: -17.5000057220459
    4. '   ' → logprob: -18.3750057220459
    5. '7' → logprob: -18.8125057220459
    6. '2' → logprob: -18.9375057220459
    7. '```' → logprob: -18.9375057220459
    8. '１' → logprob: -19.0000057220459
    9. '  ' → logprob: -19.0625057220459
    10. '3' → logprob: -19.3125057220459

Token 205: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -13.25000286102295
    3. ')
' → logprob: -13.87500286102295
    4. '))' → logprob: -16.000003814697266
    5. '）' → logprob: -16.250003814697266
    6. ']' → logprob: -16.750003814697266
    7. '])' → logprob: -16.875003814697266
    8. ')`' → logprob: -17.250003814697266
    9. '}' → logprob: -18.250003814697266
    10. ')}' → logprob: -18.375003814697266

Token 206: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5414772033691406
    2. ')' → logprob: -1.2914772033691406
    3. '<|end|>' → logprob: -2.5414772033691406
    4. ' ' → logprob: -3.4164772033691406
    5. '
' → logprob: -4.791477203369141
    6. '_' → logprob: -5.291477203369141
    7. ']' → logprob: -5.416477203369141
    8. '.' → logprob: -6.291477203369141
    9. '\' → logprob: -6.416477203369141
    10. '(' → logprob: -6.416477203369141

Token 207: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11352894455194473
    2. ':' → logprob: -2.6135289669036865
    3. '_' → logprob: -4.488528728485107
    4. ' ' → logprob: -4.738528728485107
    5. '[' → logprob: -5.613528728485107
    6. '
' → logprob: -5.863528728485107
    7. '<|end|>' → logprob: -6.113528728485107
    8. ']' → logprob: -7.113528728485107
    9. '(' → logprob: -7.363528728485107
    10. '   ' → logprob: -7.613528728485107

Token 208: ' prod' (ID: 10207)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.7144562602043152
    2. 'get' → logprob: -1.33945631980896
    3. ' query' → logprob: -2.58945631980896
    4. 'prod' → logprob: -2.58945631980896
    5. ' prod' → logprob: -2.96445631980896
    6. ' get' → logprob: -3.46445631980896
    7. 'fold' → logprob: -5.714456081390381
    8. '_query' → logprob: -5.839456081390381
    9. '_prod' → logprob: -5.839456081390381
    10. '_get' → logprob: -6.214456081390381

Token 209: '(me' (ID: 53856)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004174917936325073
    2. '(' → logprob: -5.504174709320068
    3. '(s' → logprob: -9.879175186157227
    4. ' (' → logprob: -10.379175186157227
    5. '(l' → logprob: -12.504175186157227
    6. '(a' → logprob: -13.254175186157227
    7. '(this' → logprob: -13.254175186157227
    8. 'self' → logprob: -13.379175186157227
    9. '   ' → logprob: -13.754175186157227
    10. '(left' → logprob: -13.754175186157227

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004284603521227837
    2. ' ,' → logprob: -5.754284381866455
    3. '(self' → logprob: -7.754284381866455
    4. ',self' → logprob: -7.754284381866455
    5. 'self' → logprob: -8.879284858703613
    6. ',l' → logprob: -10.879284858703613
    7. ',start' → logprob: -11.129284858703613
    8. ',left' → logprob: -11.129284858703613
    9. ')(' → logprob: -11.379284858703613
    10. ',s' → logprob: -12.004284858703613

Token 211: ' left' (ID: 3561)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.005311427637934685
    2. 'left' → logprob: -5.255311489105225
    3. ' l' → logprob: -10.005311012268066
    4. 'L' → logprob: -11.255311012268066
    5. 'lef' → logprob: -11.505311012268066
    6. ' left' → logprob: -12.880311012268066
    7. 'lf' → logprob: -13.005311012268066
    8. 'lx' → logprob: -13.630311012268066
    9. 'lr' → logprob: -13.880311012268066
    10. 'lhs' → logprob: -14.755311012268066

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0054139927960932255
    2. ',right' → logprob: -5.255414009094238
    3. ' ,' → logprob: -8.630414009094238
    4. ',int' → logprob: -14.255414009094238
    5. ',left' → logprob: -14.630414009094238
    6. ' right' → logprob: -15.880414009094238
    7. ',r' → logprob: -16.005413055419922
    8. 'right' → logprob: -16.005413055419922
    9. ',end' → logprob: -16.380413055419922
    10. ',to' → logprob: -16.505413055419922

Token 213: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.25194862484931946
    2. ' right' → logprob: -1.501948595046997
    3. '   ' → logprob: -11.751948356628418
    4. '	right' → logprob: -12.626948356628418
    5. ' ' → logprob: -12.751948356628418
    6. 'r' → logprob: -13.376948356628418
    7. 'rig' → logprob: -13.626948356628418
    8. '_right' → logprob: -14.501948356628418
    9. 'Right' → logprob: -15.126948356628418
    10. ',right' → logprob: -15.251948356628418

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016945181414484978
    2. '):
' → logprob: -8.75016975402832
    3. ')' → logprob: -12.25016975402832
    4. ' ):' → logprob: -12.50016975402832
    5. ':' → logprob: -13.87516975402832
    6. '):
' → logprob: -14.12516975402832
    7. ',' → logprob: -14.75016975402832
    8. '   ' → logprob: -15.75016975402832
    9. '       ' → logprob: -17.12516975402832
    10. '):

' → logprob: -17.62516975402832

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030430778861045837
    2. '    ' → logprob: -6.628043174743652
    3. ' ' → logprob: -7.003043174743652
    4. '   ' → logprob: -8.003043174743652
    5. '        ' → logprob: -9.753043174743652
    6. '	' → logprob: -9.753043174743652
    7. ',' → logprob: -9.878043174743652
    8. '      ' → logprob: -10.003043174743652
    9. ' to' → logprob: -10.503043174743652
    10. '     ' → logprob: -10.628043174743652

Token 216: ' l' (ID: 305)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6104305386543274
    2. 'res' → logprob: -0.9854305386543274
    3. 'l' (adapté à ' l') → logprob: -3.3604304790496826
    4. '       ' → logprob: -3.3604304790496826
    5. ' l' → logprob: -5.485430717468262
    6. 'result' → logprob: -5.735430717468262
    7. 'r' → logprob: -6.110430717468262
    8. 'left' → logprob: -6.735430717468262
    9. 'ret' → logprob: -7.360430717468262
    10. ' left' → logprob: -7.485430717468262

Token 217: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5075834393501282
    2. ',' → logprob: -1.1325833797454834
    3. ' =' → logprob: -3.2575833797454834
    4. 'eft' → logprob: -3.3825833797454834
    5. ' ,' → logprob: -5.8825836181640625
    6. 'f' → logprob: -8.757583618164062
    7. 'ef' → logprob: -9.132583618164062
    8. 'e' → logprob: -9.257583618164062
    9. ' eft' → logprob: -9.507583618164062
    10. '   ' → logprob: -9.882583618164062

Token 218: 'left' (ID: 4530)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.19210384786128998
    2. 'left' → logprob: -2.067103862762451
    3. 'me' → logprob: -3.067103862762451
    4. ' right' → logprob: -6.567103862762451
    5. ' left' → logprob: -8.567103385925293
    6. ' me' → logprob: -10.067103385925293
    7. '   ' → logprob: -11.317103385925293
    8. '	right' → logprob: -11.942103385925293
    9. 'lef' → logprob: -12.692103385925293
    10. ' ' → logprob: -13.192103385925293

Token 219: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016760606318712234
    2. ' +' → logprob: -4.14176082611084
    3. '+l' → logprob: -7.51676082611084
    4. '+r' → logprob: -9.26676082611084
    5. '+self' → logprob: -9.64176082611084
    6. '+n' → logprob: -11.64176082611084
    7. '+s' → logprob: -12.51676082611084
    8. '+=' → logprob: -13.01676082611084
    9. '+
' → logprob: -13.39176082611084
    10. '+p' → logprob: -13.76676082611084

Token 220: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -2.7252845029579476e-05
    2. ' me' → logprob: -10.625027656555176
    3. '(me' → logprob: -14.125027656555176
    4. '   ' → logprob: -14.625027656555176
    5. 'self' → logprob: -14.625027656555176
    6. '	me' → logprob: -14.625027656555176
    7. '0' → logprob: -15.125027656555176
    8. 'm' → logprob: -16.25002670288086
    9. 'mes' → logprob: -16.62502670288086
    10. 's' → logprob: -16.75002670288086

Token 221: '.sz' (ID: 172462)
  Prédit: '.sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sz' → logprob: -0.00247981958091259
    2. 'sz' → logprob: -6.0024800300598145
    3. '_sz' → logprob: -13.252479553222656
    4. ' sz' → logprob: -13.252479553222656
    5. '(sz' → logprob: -14.377479553222656
    6. 'Sz' → logprob: -16.502479553222656
    7. ' .' → logprob: -18.752479553222656
    8. 'SZ' → logprob: -18.752479553222656
    9. '```' → logprob: -19.377479553222656
    10. 's' → logprob: -19.752479553222656

Token 222: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.798247218132019
    2. 'r' → logprob: -1.048247218132019
    3. ';r' → logprob: -2.2982473373413086
    4. ' r' → logprob: -2.4232473373413086
    5. ';' → logprob: -5.298247337341309
    6. '<|end|>' → logprob: -6.048247337341309
    7. ',r' → logprob: -7.173247337341309
    8. '
' → logprob: -7.923247337341309
    9. '+r' → logprob: -8.048247337341309
    10. '	r' → logprob: -8.298247337341309

Token 223: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006728991866111755
    2. ' r' → logprob: -5.0067291259765625
    3. '       ' → logprob: -11.256729125976562
    4. '   ' → logprob: -14.381729125976562
    5. '	r' → logprob: -17.131729125976562
    6. '           ' → logprob: -17.256729125976562
    7. '_r' → logprob: -19.006729125976562
    8. '    ' → logprob: -19.131729125976562
    9. ' ' → logprob: -19.381729125976562
    10. '     ' → logprob: -19.381729125976562

Token 224: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00041172682540491223
    2. '=r' → logprob: -8.000411987304688
    3. ' =' → logprob: -9.500411987304688
    4. '=end' → logprob: -14.250411987304688
    5. '=int' → logprob: -15.125411987304688
    6. '=
' → logprob: -16.250411987304688
    7. ':right' → logprob: -16.625411987304688
    8. '=res' → logprob: -16.625411987304688
    9. '=root' → logprob: -17.000411987304688
    10. ',right' → logprob: -17.375411987304688

Token 225: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.688212614681106e-05
    2. ' right' → logprob: -11.000017166137695
    3. '	right' → logprob: -17.375017166137695
    4. '[right' → logprob: -17.750017166137695
    5. '(right' → logprob: -18.125017166137695
    6. 'r' → logprob: -18.375017166137695
    7. 'rightness' → logprob: -19.625017166137695
    8. '
' → logprob: -20.000017166137695
    9. '=' → logprob: -20.375017166137695
    10. 'rig' → logprob: -20.500017166137695

Token 226: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4855663721391466e-05
    2. ' +' → logprob: -11.125015258789062
    3. '+=' → logprob: -17.625015258789062
    4. '+m' → logprob: -17.625015258789062
    5. '+r' → logprob: -18.125015258789062
    6. '+n' → logprob: -18.375015258789062
    7. '+xml' → logprob: -18.625015258789062
    8. '+l' → logprob: -18.625015258789062
    9. '+self' → logprob: -19.125015258789062
    10. '＋' → logprob: -19.250015258789062

Token 227: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -4.286852345103398e-05
    2. ' me' → logprob: -10.125042915344238
    3. '+' → logprob: -13.500042915344238
    4. ' ' → logprob: -14.750042915344238
    5. '	me' → logprob: -15.375042915344238
    6. 'right' → logprob: -15.625042915344238
    7. 'm' → logprob: -15.750042915344238
    8. 'sz' → logprob: -16.250041961669922
    9. '(me' → logprob: -16.250041961669922
    10. ' +' → logprob: -17.000041961669922

Token 228: '.sz' (ID: 172462)
  Prédit: '.sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sz' → logprob: -6.2729995988775045e-06
    2. 'sz' → logprob: -12.125006675720215
    3. '.' → logprob: -15.500006675720215
    4. '.s' → logprob: -15.750006675720215
    5. '_sz' → logprob: -15.875006675720215
    6. '(sz' → logprob: -16.1250057220459
    7. ' .' → logprob: -16.6250057220459
    8. ' sz' → logprob: -16.7500057220459
    9. 's' → logprob: -17.7500057220459
    10. '.cz' → logprob: -18.1250057220459

Token 229: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003733687801286578
    2. ',' → logprob: -7.2537336349487305
    3. '        ' → logprob: -7.5037336349487305
    4. '<|end|>' → logprob: -7.6287336349487305
    5. '   ' → logprob: -8.12873363494873
    6. ' ' → logprob: -8.12873363494873
    7. ' 
' → logprob: -8.50373363494873
    8. '[' → logprob: -8.87873363494873
    9. ' ,' → logprob: -9.00373363494873
    10. '        
' → logprob: -9.25373363494873

Token 231: ' l' (ID: 305)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.009098909795284271
    2. ' res' → logprob: -5.384099006652832
    3. 's' → logprob: -5.509099006652832
    4. '       ' → logprob: -8.259099006652832
    5. 'ans' → logprob: -9.384099006652832
    6. 'result' → logprob: -10.384099006652832
    7. 'r' → logprob: -11.009099006652832
    8. ' s' → logprob: -11.384099006652832
    9. 'ret' → logprob: -11.634099006652832
    10. '	res' → logprob: -13.384099006652832

Token 232: 'res' (ID: 430)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25044170022010803
    2. ',' → logprob: -2.125441789627075
    3. '|' → logprob: -2.750441789627075
    4. ' +=' → logprob: -4.125441551208496
    5. ' ,' → logprob: -4.875441551208496
    6. '=' → logprob: -5.500441551208496
    7. '<' → logprob: -6.000441551208496
    8. '+' → logprob: -6.250441551208496
    9. '<=' → logprob: -6.250441551208496
    10. ' ' → logprob: -7.500441551208496

Token 233: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062200602144002914
    2. ' =' → logprob: -2.8122005462646484
    3. ',' → logprob: -8.437200546264648
    4. '=l' → logprob: -11.562200546264648
    5. ' ' → logprob: -12.562200546264648
    6. '=None' → logprob: -13.562200546264648
    7. '=r' → logprob: -14.562200546264648
    8. ',l' → logprob: -16.06220054626465
    9. '=m' → logprob: -16.18720054626465
    10. ' ,' → logprob: -16.18720054626465

Token 234: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.00016396844875998795
    2. ' me' → logprob: -8.750164031982422
    3. 'None' → logprob: -13.000164031982422
    4. '(me' → logprob: -13.625164031982422
    5. '	me' → logprob: -13.750164031982422
    6. 'e' → logprob: -15.625164031982422
    7. '.me' → logprob: -15.750164031982422
    8. 'mes' → logprob: -15.875164031982422
    9. ' ' → logprob: -16.375164031982422
    10. '   ' → logprob: -16.500164031982422

Token 235: '.el' (ID: 28187)
  Prédit: '.el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.el' → logprob: -1.8908587662735954e-05
    2. '.' → logprob: -11.375019073486328
    3. 'el' → logprob: -12.875019073486328
    4. '.dat' → logprob: -13.125019073486328
    5. ' .' → logprob: -13.750019073486328
    6. '.e' → logprob: -13.875019073486328
    7. '.op' → logprob: -15.750019073486328
    8. '.er' → logprob: -16.000019073486328
    9. '	el' → logprob: -16.625019073486328
    10. 'dat' → logprob: -16.750019073486328

Token 236: ';' (ID: 26)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7312390208244324
    2. ' r' → logprob: -0.8562390208244324
    3. '
' → logprob: -3.106239080429077
    4. ';r' → logprob: -3.231239080429077
    5. ';' → logprob: -5.731238842010498
    6. ' 
' → logprob: -6.106238842010498
    7. ',r' → logprob: -6.856238842010498
    8. ' ' → logprob: -7.356238842010498
    9. '	r' → logprob: -7.481238842010498
    10. '<|end|>' → logprob: -7.481238842010498

Token 237: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.9650025428272784e-05
    2. ' r' → logprob: -10.250040054321289
    3. '   ' → logprob: -13.125040054321289
    4. 'res' → logprob: -13.875040054321289
    5. '       ' → logprob: -14.875040054321289
    6. '	r' → logprob: -15.125040054321289
    7. '    
' → logprob: -15.500040054321289
    8. ' ' → logprob: -15.625040054321289
    9. 'rr' → logprob: -16.50004005432129
    10. '
' → logprob: -16.62504005432129

Token 238: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.000295420759357512
    2. '=' → logprob: -8.625295639038086
    3. '=res' → logprob: -9.250295639038086
    4. 'es' → logprob: -11.000295639038086
    5. '_res' → logprob: -13.750295639038086
    6. 'r' → logprob: -14.000295639038086
    7. ' res' → logprob: -15.125295639038086
    8. '```' → logprob: -15.250295639038086
    9. '	res' → logprob: -15.750295639038086
    10. '$res' → logprob: -16.250295639038086

Token 239: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.836499985889532e-05
    2. ' =' → logprob: -9.7500581741333
    3. '=None' → logprob: -17.750059127807617
    4. '=

' → logprob: -18.500059127807617
    5. '=my' → logprob: -19.000059127807617
    6. '=m' → logprob: -19.250059127807617
    7. '=f' → logprob: -19.375059127807617
    8. '＝' → logprob: -19.500059127807617
    9. '=
' → logprob: -19.500059127807617
    10. '=e' → logprob: -19.750059127807617

Token 240: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -4.246537173457909e-06
    2. ' me' → logprob: -12.500003814697266
    3. '	me' → logprob: -15.125003814697266
    4. '(me' → logprob: -16.875003814697266
    5. '   ' → logprob: -17.875003814697266
    6. '.me' → logprob: -18.250003814697266
    7. '       ' → logprob: -18.500003814697266
    8. '_me' → logprob: -19.375003814697266
    9. 'mo' → logprob: -19.625003814697266
    10. 'mea' → logprob: -19.750003814697266

Token 241: '.el' (ID: 28187)
  Prédit: '.el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.el' → logprob: -0.07892691344022751
    2. 'el' → logprob: -2.5789268016815186
    3. 'l' → logprob: -10.453927040100098
    4. '.l' → logprob: -12.828927040100098
    5. '.' → logprob: -13.328927040100098
    6. ';' → logprob: -13.828927040100098
    7. '	el' → logprob: -14.453927040100098
    8. '_el' → logprob: -14.828927040100098
    9. ''el' → logprob: -14.828927040100098
    10. 'elp' → logprob: -15.578927040100098

Token 242: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7915948033332825
    2. '<|end|>' → logprob: -0.9165948033332825
    3. '
' → logprob: -2.9165947437286377
    4. '        
' → logprob: -3.2915947437286377
    5. ' 
' → logprob: -3.6665947437286377
    6. '<|end|>' → logprob: -4.791594982147217
    7. '  
' → logprob: -5.291594982147217
    8. ' ' → logprob: -5.291594982147217
    9. '		
' → logprob: -5.791594982147217
    10. '        ' → logprob: -5.916594982147217

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5566411018371582
    2. ' 
' → logprob: -0.9316411018371582
    3. '
' → logprob: -4.681641101837158
    4. '  
' → logprob: -5.306641101837158
    5. '        
' → logprob: -5.431641101837158
    6. ' while' → logprob: -5.556641101837158
    7. ' ' → logprob: -5.681641101837158
    8. '<|end|>' → logprob: -5.931641101837158
    9. '    
' → logprob: -7.056641101837158
    10. '   ' → logprob: -7.181641101837158

Token 244: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6637974977493286
    2. '       ' → logprob: -1.0387974977493286
    3. 'while' (adapté à ' while') → logprob: -2.038797378540039
    4. '   ' → logprob: -7.538797378540039
    5. '	while' → logprob: -8.163797378540039
    6. 'While' → logprob: -9.538797378540039
    7. ' 
' → logprob: -10.538797378540039
    8. '```' → logprob: -10.538797378540039
    9. '        
' → logprob: -10.788797378540039
    10. '    ' → logprob: -11.038797378540039

Token 245: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01815006136894226
    2. ' l' → logprob: -4.0181498527526855
    3. ' ' → logprob: -15.893150329589844
    4. ' ' → logprob: -17.018150329589844
    5. '	l' → logprob: -17.268150329589844
    6. '(l' → logprob: -17.643150329589844
    7. '   ' → logprob: -18.018150329589844
    8. '```' → logprob: -18.768150329589844
    9. '
' → logprob: -19.518150329589844
    10. 'L' → logprob: -19.768150329589844

Token 246: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.009606033563613892
    2. ' <' → logprob: -5.134605884552002
    3. '<len' → logprob: -6.134605884552002
    4. '<=' → logprob: -7.384605884552002
    5. '<n' → logprob: -7.634605884552002
    6. '<ll' → logprob: -9.63460636138916
    7. '<size' → logprob: -9.88460636138916
    8. '<num' → logprob: -10.25960636138916
    9. '<p' → logprob: -10.38460636138916
    10. '&lt' → logprob: -10.50960636138916

Token 247: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000488811288960278
    2. ' r' → logprob: -7.625488758087158
    3. '=r' → logprob: -14.500489234924316
    4. '	r' → logprob: -16.12548828125
    5. ' ' → logprob: -16.25048828125
    6. '   ' → logprob: -17.50048828125
    7. '_r' → logprob: -17.50048828125
    8. '=' → logprob: -17.87548828125
    9. '>' → logprob: -18.00048828125
    10. ':r' → logprob: -18.25048828125

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47474876046180725
    2. ':
' → logprob: -0.9747487306594849
    3. ' :
' → logprob: -8.349748611450195
    4. ' :' → logprob: -8.474748611450195
    5. '           ' → logprob: -8.599748611450195
    6. ' and' → logprob: -10.974748611450195
    7. '):
' → logprob: -11.599748611450195
    8. ',' → logprob: -12.599748611450195
    9. ':
' → logprob: -12.599748611450195
    10. '       ' → logprob: -13.099748611450195

Token 249: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22949114441871643
    2. ' if' → logprob: -1.729491114616394
    3. ' ' → logprob: -4.479491233825684
    4. ' 
' → logprob: -4.729491233825684
    5. '            ' → logprob: -5.229491233825684
    6. '            
' → logprob: -6.979491233825684
    7. '        ' → logprob: -8.479491233825684
    8. 'if' → logprob: -8.479491233825684
    9. ' ' → logprob: -9.104491233825684
    10. ',' → logprob: -9.479491233825684

Token 250: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48414111137390137
    2. '           ' → logprob: -0.9841411113739014
    3. 'if' → logprob: -4.6091413497924805
    4. '            ' → logprob: -11.60914134979248
    5. '   ' → logprob: -11.73414134979248
    6. ' If' → logprob: -11.98414134979248
    7. '```' → logprob: -12.10914134979248
    8. 'If' → logprob: -12.48414134979248
    9. '          ' → logprob: -12.73414134979248
    10. '               ' → logprob: -12.85914134979248

Token 251: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.27185046672821045
    2. '1' → logprob: -2.5218505859375
    3. '
' → logprob: -2.7718505859375
    4. 'if' → logprob: -3.2718505859375
    5. 'r' → logprob: -3.5218505859375
    6. ' l' → logprob: -4.1468505859375
    7. ' ' → logprob: -5.2718505859375
    8. '   ' → logprob: -6.6468505859375
    9. ')' → logprob: -6.6468505859375
    10. '(l' → logprob: -6.7718505859375

Token 252: 'res' (ID: 430)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.05619683489203453
    2. ' &' → logprob: -2.931196928024292
    3. '&p' → logprob: -8.181197166442871
    4. '&r' → logprob: -8.431197166442871
    5. '&
' → logprob: -8.806197166442871
    6. ')&' → logprob: -8.931197166442871
    7. '+=' → logprob: -9.056197166442871
    8. '&t' → logprob: -9.556197166442871
    9. ')' → logprob: -9.806197166442871
    10. '>>' → logprob: -10.181197166442871

Token 253: ':=' (ID: 33860)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.624262273311615
    2. '=' → logprob: -0.999262273311615
    3. ':=' → logprob: -3.6242623329162598
    4. ' =' → logprob: -3.8742623329162598
    5. ' ,' → logprob: -3.9992623329162598
    6. ' if' → logprob: -4.62426233291626
    7. ',l' → logprob: -4.74926233291626
    8. ',s' → logprob: -5.62426233291626
    9. ' :=' → logprob: -6.37426233291626
    10. ',val' → logprob: -6.74926233291626

Token 254: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -9.102680633077398e-05
    2. ' me' → logprob: -10.375090599060059
    3. '(me' → logprob: -10.375090599060059
    4. 's' → logprob: -11.500090599060059
    5. 'self' → logprob: -12.125090599060059
    6. ')' → logprob: -12.375090599060059
    7. '
' → logprob: -13.125090599060059
    8. 'this' → logprob: -13.250090599060059
    9. '	me' → logprob: -13.500090599060059
    10. '   ' → logprob: -13.625090599060059

Token 255: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.0008840723894536495
    2. 'op' → logprob: -7.500884056091309
    3. '.dat' → logprob: -8.375884056091309
    4. 'self' → logprob: -10.625884056091309
    5. ').' → logprob: -10.875884056091309
    6. '	op' → logprob: -12.125884056091309
    7. '._' → logprob: -12.250884056091309
    8. '.' → logprob: -12.250884056091309
    9. '.el' → logprob: -12.375884056091309
    10. '.prod' → logprob: -12.500884056091309

Token 256: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.1928003813372925e-05
    2. 'l' → logprob: -10.875051498413086
    3. 'pr' → logprob: -11.875051498413086
    4. 'er' → logprob: -12.250051498413086
    5. '(me' → logprob: -12.375051498413086
    6. '(l' → logprob: -13.000051498413086
    7. '
' → logprob: -13.250051498413086
    8. '(' → logprob: -13.250051498413086
    9. '((' → logprob: -13.812551498413086
    10. '(r' → logprob: -14.000051498413086

Token 257: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.8550976164988242e-05
    2. '(' → logprob: -11.250018119812012
    3. ')(' → logprob: -12.625018119812012
    4. ')' → logprob: -14.250018119812012
    5. 'l' → logprob: -14.500018119812012
    6. ',l' → logprob: -14.750018119812012
    7. ' (' → logprob: -15.250018119812012
    8. ',' → logprob: -15.250018119812012
    9. '(me' → logprob: -16.625019073486328
    10. '(
' → logprob: -17.375019073486328

Token 258: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -5.080963092041202e-06
    2. 'es' → logprob: -12.375004768371582
    3. 'r' → logprob: -15.000004768371582
    4. '(l' → logprob: -15.250004768371582
    5. '(res' → logprob: -15.625004768371582
    6. 're' → logprob: -16.7500057220459
    7. 'ress' → logprob: -16.8750057220459
    8. ')' → logprob: -17.8750057220459
    9. '_res' → logprob: -18.2500057220459
    10. 'l' → logprob: -18.7500057220459

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004008793330285698
    2. ' ,' → logprob: -7.875401020050049
    3. 'me' → logprob: -10.87540054321289
    4. ',
' → logprob: -14.87540054321289
    5. '   ' → logprob: -15.00040054321289
    6. ',this' → logprob: -15.50040054321289
    7. ' me' → logprob: -15.50040054321289
    8. ',self' → logprob: -15.87540054321289
    9. '(me' → logprob: -16.00040054321289
    10. '),' → logprob: -16.50040054321289

Token 260: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -1.8624639324116288e-06
    2. ' me' → logprob: -13.375001907348633
    3. '	me' → logprob: -15.875001907348633
    4. '(me' → logprob: -16.000001907348633
    5. '   ' → logprob: -17.375001907348633
    6. 'self' → logprob: -18.125001907348633
    7. '_me' → logprob: -20.500001907348633
    8. '-me' → logprob: -21.000001907348633
    9. 'mes' → logprob: -21.000001907348633
    10. '
' → logprob: -21.500001907348633

Token 261: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -1.9361264946837764e-07
    2. 'dat' → logprob: -15.75
    3. '.' → logprob: -17.125
    4. '@dat' → logprob: -17.75
    5. ' .' → logprob: -19.625
    6. '.data' → logprob: -20.375
    7. '_dat' → logprob: -20.625
    8. '.datas' → logprob: -20.625
    9. '.datab' → logprob: -20.875
    10. '.d' → logprob: -20.875

Token 262: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00011617878044489771
    2. 'l' → logprob: -9.125116348266602
    3. '	l' → logprob: -12.250116348266602
    4. '[
' → logprob: -13.625116348266602
    5. '
' → logprob: -14.500116348266602
    6. '   ' → logprob: -15.500116348266602
    7. ',l' → logprob: -15.625116348266602
    8. ' [' → logprob: -16.3751163482666
    9. '[' → logprob: -16.5001163482666
    10. '(l' → logprob: -16.6251163482666

Token 263: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.20634819567203522
    2. '))' → logprob: -1.831348180770874
    3. '])' → logprob: -4.956348419189453
    4. ']' → logprob: -5.206348419189453
    5. '));' → logprob: -5.331348419189453
    6. ']),' → logprob: -6.081348419189453
    7. ']))
' → logprob: -6.456348419189453
    8. '))
' → logprob: -6.581348419189453
    9. ']);' → logprob: -6.581348419189453
    10. ')),' → logprob: -7.706348419189453

Token 264: ' if' (ID: 538)
  Prédit: ';'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.40333330631256104
    2. '
' → logprob: -1.653333306312561
    3. ' if' → logprob: -2.7783331871032715
    4. ';l' → logprob: -3.2783331871032715
    5. '           ' → logprob: -3.4033331871032715
    6. ';if' → logprob: -5.7783331871032715
    7. 'if' → logprob: -5.9033331871032715
    8. '            
' → logprob: -7.9033331871032715
    9. ' ;' → logprob: -7.9033331871032715
    10. ',' → logprob: -8.02833366394043

Token 265: ' l' (ID: 305)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.28069210052490234
    2. 'l' → logprob: -1.6556921005249023
    3. ' l' → logprob: -3.4056921005249023
    4. ' (' → logprob: -3.9056921005249023
    5. '(' → logprob: -7.905692100524902
    6. ' ' → logprob: -10.530692100524902
    7. '(not' → logprob: -10.780692100524902
    8. '((' → logprob: -11.405692100524902
    9. ' not' → logprob: -11.780692100524902
    10. 'not' → logprob: -12.155692100524902

Token 266: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.0009802898857742548
    2. ' &' → logprob: -7.000980377197266
    3. '%' → logprob: -9.625980377197266
    4. '&
' → logprob: -13.125980377197266
    5. '&amp' → logprob: -14.375980377197266
    6. ' %' → logprob: -17.000980377197266
    7. '&_' → logprob: -17.125980377197266
    8. '＆' → logprob: -17.375980377197266
    9. ' ' → logprob: -17.625980377197266
    10. '&p' → logprob: -18.375980377197266

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '{' → logprob: -17.500015258789062
    4. '１' → logprob: -18.000015258789062
    5. ' ' → logprob: -18.125015258789062
    6. '
' → logprob: -18.125015258789062
    7. '' → logprob: -18.500015258789062
    8. '   ' → logprob: -18.625015258789062
    9. 'l' → logprob: -18.750015258789062
    10. '  ' → logprob: -19.000015258789062

Token 268: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.22920994460582733
    2. ' else' → logprob: -1.6042098999023438
    3. ':' → logprob: -6.229209899902344
    4. '==' → logprob: -6.479209899902344
    5. ' ' → logprob: -9.604209899902344
    6. ' l' → logprob: -9.729209899902344
    7. '   ' → logprob: -10.229209899902344
    8. '!=' → logprob: -10.604209899902344
    9. 'l' → logprob: -10.979209899902344
    10. ':l' → logprob: -11.104209899902344

Token 269: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06606052815914154
    2. ' None' → logprob: -2.8160605430603027
    3. '0' → logprob: -5.566060543060303
    4. 'l' → logprob: -9.066060066223145
    5. '...' → logprob: -9.441060066223145
    6. ' ' → logprob: -10.316060066223145
    7. '   ' → logprob: -12.066060066223145
    8. '(None' → logprob: -12.316060066223145
    9. ' l' → logprob: -12.441060066223145
    10. 'False' → logprob: -12.816060066223145

Token 270: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8198204040527344
    2. ';' → logprob: -1.4448204040527344
    3. ';l' → logprob: -1.9448204040527344
    4. ' l' → logprob: -3.1948204040527344
    5. ',' → logprob: -3.1948204040527344
    6. 'l' → logprob: -3.3198204040527344
    7. ',l' → logprob: -3.4448204040527344
    8. ' ' → logprob: -5.194820404052734
    9. '
' → logprob: -5.194820404052734
    10. '               ' → logprob: -5.569820404052734

Token 271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011968977050855756
    2. ' l' → logprob: -7.12619686126709
    3. ' if' → logprob: -8.25119686126709
    4. '            ' → logprob: -10.50119686126709
    5. ' ' → logprob: -10.75119686126709
    6. 'l' → logprob: -10.75119686126709
    7. ',' → logprob: -10.87619686126709
    8. '          ' → logprob: -11.12619686126709
    9. ';' → logprob: -12.25119686126709
    10. '```' → logprob: -12.50119686126709

Token 272: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.006761318072676659
    2. ' l' → logprob: -5.00676155090332
    3. '           ' → logprob: -10.00676155090332
    4. '   ' → logprob: -15.50676155090332
    5. ' ' → logprob: -15.63176155090332
    6. '       ' → logprob: -16.38176155090332
    7. '	l' → logprob: -16.63176155090332
    8. '(l' → logprob: -16.88176155090332
    9. '
' → logprob: -17.13176155090332
    10. '0' → logprob: -17.38176155090332

Token 273: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0019526603864505887
    2. ' +=' → logprob: -6.251952648162842
    3. ']+=' → logprob: -11.876953125
    4. ',' → logprob: -12.126953125
    5. '   ' → logprob: -12.626953125
    6. '|' → logprob: -13.126953125
    7. ' ' → logprob: -13.126953125
    8. '+=(' → logprob: -13.501953125
    9. '  ' → logprob: -13.626953125
    10. '=' → logprob: -14.376953125

Token 274: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0043299454264342785
    2. 'l' → logprob: -6.254330158233643
    3. ' ' → logprob: -6.629330158233643
    4. ' (' → logprob: -7.629330158233643
    5. '(l' → logprob: -7.629330158233643
    6. ' l' → logprob: -9.379329681396484
    7. '(' → logprob: -10.879329681396484
    8. '   ' → logprob: -14.004329681396484
    9. '((' → logprob: -14.754329681396484
    10. '  ' → logprob: -15.379329681396484

Token 275: '&' (ID: 5)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -11.875008583068848
    3. '(' → logprob: -13.500008583068848
    4. ' (' → logprob: -16.125009536743164
    5. 'if' → logprob: -16.500009536743164
    6. '   ' → logprob: -16.750009536743164
    7. '+' → logprob: -16.750009536743164
    8. '
' → logprob: -17.625009536743164
    9. '0' → logprob: -18.000009536743164
    10. '       ' → logprob: -18.375009536743164

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023281820118427277
    2. '-' → logprob: -3.7732818126678467
    3. '-l' → logprob: -11.148282051086426
    4. ' -' → logprob: -11.273282051086426
    5. 'l' → logprob: -12.273282051086426
    6. ' ' → logprob: -12.398282051086426
    7. '~' → logprob: -15.773282051086426
    8. 'r' → logprob: -16.77328109741211
    9. '  ' → logprob: -17.14828109741211
    10. '−' → logprob: -17.39828109741211

Token 277: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008868054486811161
    2. ' r' → logprob: -6.008868217468262
    3. '       ' → logprob: -6.133868217468262
    4. '
' → logprob: -6.633868217468262
    5. 'r' → logprob: -6.758868217468262
    6. ' 
' → logprob: -7.758868217468262
    7. ' ' → logprob: -8.258868217468262
    8. ',' → logprob: -8.258868217468262
    9. '            
' → logprob: -9.133868217468262
    10. '<|end|>' → logprob: -9.133868217468262

Token 278: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008272562408819795
    2. ' r' → logprob: -8.000826835632324
    3. ' ' → logprob: -8.500826835632324
    4. 'r' → logprob: -9.000826835632324
    5. '       ' → logprob: -10.125826835632324
    6. ' if' → logprob: -10.250826835632324
    7. '   ' → logprob: -10.500826835632324
    8. '```' → logprob: -11.125826835632324
    9. '          ' → logprob: -11.750826835632324
    10. '[' → logprob: -12.000826835632324

Token 279: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.030424855649471283
    2. ' r' → logprob: -3.5304248332977295
    3. '           ' → logprob: -7.405425071716309
    4. ' (' → logprob: -10.280425071716309
    5. '(' → logprob: -11.030425071716309
    6. '(r' → logprob: -11.405425071716309
    7. '       ' → logprob: -13.280425071716309
    8. ' ' → logprob: -13.780425071716309
    9. '   ' → logprob: -14.655425071716309
    10. '(
' → logprob: -14.780425071716309

Token 280: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.31341350078582764
    2. ' -=' → logprob: -1.3134135007858276
    3. '-' → logprob: -8.938413619995117
    4. ' ' → logprob: -12.188413619995117
    5. '=' → logprob: -12.563413619995117
    6. '   ' → logprob: -12.688413619995117
    7. ' -' → logprob: -12.813413619995117
    8. '           ' → logprob: -13.063413619995117
    9. '+=' → logprob: -13.188413619995117
    10. ' ' → logprob: -14.563413619995117

Token 281: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04464217275381088
    2. '1' → logprob: -3.294642210006714
    3. ' r' → logprob: -5.044641971588135
    4. ' ' → logprob: -9.669642448425293
    5. '(r' → logprob: -9.919642448425293
    6. ' (' → logprob: -11.669642448425293
    7. '   ' → logprob: -11.669642448425293
    8. '(' → logprob: -12.544642448425293
    9. '  ' → logprob: -14.544642448425293
    10. '((' → logprob: -15.419642448425293

Token 282: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.0923357829451561
    2. '1' → logprob: -2.5923357009887695
    3. ' &' → logprob: -4.3423357009887695
    4. ' ' → logprob: -8.84233570098877
    5. '&r' → logprob: -8.84233570098877
    6. ' and' → logprob: -10.46733570098877
    7. 'and' → logprob: -11.09233570098877
    8. '&amp' → logprob: -12.34233570098877
    9. '&_' → logprob: -13.09233570098877
    10. '&
' → logprob: -13.21733570098877

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -18.0
    3. ' ' → logprob: -18.25
    4. 'r' → logprob: -19.375
    5. '```' → logprob: -19.5
    6. '-' → logprob: -20.25
    7. '' → logprob: -20.4375
    8. '01' → logprob: -20.5
    9. '11' → logprob: -20.625
    10. '۱' → logprob: -20.8125

Token 284: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002531664213165641
    2. ' if' → logprob: -6.6275315284729
    3. '       ' → logprob: -6.8775315284729
    4. 'if' → logprob: -10.127532005310059
    5. ')' → logprob: -10.877532005310059
    6. ' else' → logprob: -11.127532005310059
    7. '   ' → logprob: -11.127532005310059
    8. '[' → logprob: -11.252532005310059
    9. '          ' → logprob: -11.252532005310059
    10. 'else' → logprob: -11.627532005310059

Token 285: ' r' (ID: 428)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6086989641189575
    2. '(r' → logprob: -1.1086989641189575
    3. 'if' → logprob: -2.108698844909668
    4. ' (' → logprob: -6.108698844909668
    5. '(if' → logprob: -6.983698844909668
    6. '(' → logprob: -7.358698844909668
    7. ' if' → logprob: -7.733698844909668
    8. '       ' → logprob: -8.733698844909668
    9. 'r' → logprob: -10.483698844909668
    10. '(s' → logprob: -10.858698844909668

Token 286: 'res' (ID: 430)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6652922034263611
    2. '=' → logprob: -0.9152922034263611
    3. ' +=' → logprob: -3.540292263031006
    4. '|' → logprob: -4.040292263031006
    5. '<|end|>' → logprob: -4.290292263031006
    6. 'res' → logprob: -5.290292263031006
    7. ' =' → logprob: -5.415292263031006
    8. ' >>=' → logprob: -6.040292263031006
    9. ' |=' → logprob: -6.165292263031006
    10. '>>' → logprob: -6.290292263031006

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006717743817716837
    2. ' =' → logprob: -5.006717681884766
    3. ':=' → logprob: -13.131717681884766
    4. ' ' → logprob: -16.131717681884766
    5. ',' → logprob: -16.381717681884766
    6. '.=' → logprob: -17.131717681884766
    7. '＝' → logprob: -17.506717681884766
    8. '=
' → logprob: -17.506717681884766
    9. '=

' → logprob: -17.756717681884766
    10. ' ' → logprob: -18.006717681884766

Token 288: ' me' (ID: 668)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.00012880703434348106
    2. ' me' → logprob: -9.000128746032715
    3. '(me' → logprob: -12.625128746032715
    4. '	me' → logprob: -13.375128746032715
    5. '_me' → logprob: -15.875128746032715
    6. '.me' → logprob: -16.50012969970703
    7. '   ' → logprob: -16.75012969970703
    8. '  ' → logprob: -17.25012969970703
    9. ' ' → logprob: -17.62512969970703
    10. ' ' → logprob: -17.75012969970703

Token 289: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -9.372294698550832e-06
    2. 'op' → logprob: -12.125009536743164
    3. '.el' → logprob: -12.625009536743164
    4. '	op' → logprob: -15.375009536743164
    5. '.' → logprob: -15.750009536743164
    6. '(op' → logprob: -16.625009536743164
    7. '.prod' → logprob: -17.000009536743164
    8. '.dat' → logprob: -17.375009536743164
    9. '_op' → logprob: -18.000009536743164
    10. '.oper' → logprob: -18.500009536743164

Token 290: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00011915886716451496
    2. '(me' → logprob: -9.25011920928955
    3. 'er' → logprob: -11.87511920928955
    4. 'pr' → logprob: -12.75011920928955
    5. 'me' → logprob: -13.12511920928955
    6. 'ro' → logprob: -13.12511920928955
    7. 'or' → logprob: -13.37511920928955
    8. '(r' → logprob: -13.62511920928955
    9. 'rr' → logprob: -13.75011920928955
    10. 'ar' → logprob: -14.25011920928955

Token 291: '(me' (ID: 53856)
  Prédit: '(me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(me' → logprob: -5.7530574849806726e-05
    2. 'me' → logprob: -10.625057220458984
    3. 'r' → logprob: -11.125057220458984
    4. '(' → logprob: -11.625057220458984
    5. '(r' → logprob: -11.750057220458984
    6. '(m' → logprob: -14.750057220458984
    7. '	me' → logprob: -15.125057220458984
    8. '```' → logprob: -15.125057220458984
    9. ' (' → logprob: -16.500057220458984
    10. '(ma' → logprob: -16.625057220458984

Token 292: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -0.004009661264717579
    2. 'dat' → logprob: -5.87900972366333
    3. 'r' → logprob: -6.75400972366333
    4. '@dat' → logprob: -10.379009246826172
    5. '.r' → logprob: -12.754009246826172
    6. '(dat' → logprob: -14.004009246826172
    7. 'el' → logprob: -14.379009246826172
    8. '_dat' → logprob: -14.754009246826172
    9. '.res' → logprob: -14.754009246826172
    10. '.prod' → logprob: -15.004009246826172

Token 293: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00861669983714819
    2. 'r' → logprob: -4.758616924285889
    3. '[' → logprob: -13.88361644744873
    4. '	r' → logprob: -14.38361644744873
    5. '   ' → logprob: -15.50861644744873
    6. ',r' → logprob: -16.008617401123047
    7. ' r' → logprob: -16.008617401123047
    8. '[right' → logprob: -16.258617401123047
    9. '```' → logprob: -17.258617401123047
    10. '[
' → logprob: -17.258617401123047

Token 294: '],' (ID: 2155)
  Prédit: ',r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.3482111990451813
    2. ',' → logprob: -1.8482111692428589
    3. '),' → logprob: -2.2232112884521484
    4. '],' → logprob: -3.8482112884521484
    5. ' ,' → logprob: -5.723211288452148
    6. 'r' → logprob: -5.723211288452148
    7. ' r' → logprob: -9.223211288452148
    8. '[r' → logprob: -9.473211288452148
    9. ' ),' → logprob: -9.598211288452148
    10. '   ' → logprob: -9.973211288452148

Token 295: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001093841710826382
    2. ' r' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.375109672546387
    4. ' ' → logprob: -16.50010871887207
    5. '  ' → logprob: -17.25010871887207
    6. ')' → logprob: -17.75010871887207
    7. '    ' → logprob: -17.87510871887207
    8. '     ' → logprob: -18.12510871887207
    9. '	r' → logprob: -18.75010871887207
    10. ' ' → logprob: -18.87510871887207

Token 296: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0019441033946350217
    2. 'r' → logprob: -6.251944065093994
    3. 'es' → logprob: -11.376944541931152
    4. 'ress' → logprob: -13.126944541931152
    5. ')' → logprob: -13.501944541931152
    6. ' res' → logprob: -14.751944541931152
    7. '_res' → logprob: -16.251943588256836
    8. '	res' → logprob: -17.126943588256836
    9. '   ' → logprob: -17.626943588256836
    10. '$res' → logprob: -17.626943588256836

Token 297: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005931878462433815
    2. ' )' → logprob: -5.755931854248047
    3. '<|end|>' → logprob: -6.130931854248047
    4. ')
' → logprob: -8.005931854248047
    5. ' ' → logprob: -9.630931854248047
    6. ' ' → logprob: -10.505931854248047
    7. ')return' → logprob: -10.505931854248047
    8. '           ' → logprob: -10.880931854248047
    9. '
' → logprob: -11.005931854248047
    10. ' if' → logprob: -11.130931854248047

Token 298: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.041763920336961746
    2. ' r' → logprob: -3.2917640209198
    3. 'not' → logprob: -6.041763782501221
    4. ' not' → logprob: -6.791763782501221
    5. '(r' → logprob: -9.916764259338379
    6. 'True' → logprob: -10.291764259338379
    7. '   ' → logprob: -10.416764259338379
    8. '1' → logprob: -10.916764259338379
    9. '(not' → logprob: -10.916764259338379
    10. ' ' → logprob: -11.041764259338379

Token 300: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.009091111831367016
    2. '>' → logprob: -4.884090900421143
    3. '&gt' → logprob: -7.509090900421143
    4. ' &' → logprob: -7.634090900421143
    5. ' >' → logprob: -9.0090913772583
    6. '<|end|>' → logprob: -9.3840913772583
    7. ')' → logprob: -9.5090913772583
    8. '&amp' → logprob: -9.6340913772583
    9. '&r' → logprob: -10.3840913772583
    10. '>&' → logprob: -10.5090913772583

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '0' → logprob: -12.500004768371582
    3. ' ' → logprob: -13.750004768371582
    4. '```' → logprob: -16.1250057220459
    5. '&' → logprob: -17.1250057220459
    6. 'r' → logprob: -17.6250057220459
    7. '8' → logprob: -19.0000057220459
    8. '>' → logprob: -19.1250057220459
    9. '``' → logprob: -19.1250057220459
    10. '   ' → logprob: -19.5000057220459

Token 302: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0765281394124031
    2. '<|end|>' → logprob: -3.0765280723571777
    3. 'else' → logprob: -4.326528072357178
    4. '+' → logprob: -4.576528072357178
    5. ' +' → logprob: -5.951528072357178
    6. '```' → logprob: -7.701528072357178
    7. ')' → logprob: -8.076528549194336
    8. ' ' → logprob: -8.576528549194336
    9. ':' → logprob: -9.076528549194336
    10. '<|end|>' → logprob: -9.701528549194336

Token 303: ' r' (ID: 428)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0750247985124588
    2. ' None' → logprob: -2.9500248432159424
    3. 'r' → logprob: -3.9500248432159424
    4. ' r' → logprob: -7.325024604797363
    5. ' ' → logprob: -11.700024604797363
    6. '0' → logprob: -11.825024604797363
    7. 'pass' → logprob: -12.950024604797363
    8. '(None' → logprob: -12.950024604797363
    9. '_None' → logprob: -13.575024604797363
    10. '   ' → logprob: -13.575024604797363

Token 304: 'res' (ID: 430)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5003150105476379
    2. 'r' → logprob: -1.5003149509429932
    3. ' None' → logprob: -2.000314950942993
    4. '<|end|>' → logprob: -4.625315189361572
    5. '+' → logprob: -4.750315189361572
    6. ')' → logprob: -5.000315189361572
    7. ' r' → logprob: -5.375315189361572
    8. 'res' → logprob: -6.750315189361572
    9. '(None' → logprob: -6.875315189361572
    10. '0' → logprob: -6.875315189361572

Token 305: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48973822593688965
    2. '       ' → logprob: -1.1147382259368896
    3. ' l' → logprob: -3.6147382259368896
    4. '   ' → logprob: -3.8647382259368896
    5. 'l' → logprob: -5.364738464355469
    6. 'return' → logprob: -5.364738464355469
    7. '        ' → logprob: -7.614738464355469
    8. ' return' → logprob: -7.989738464355469
    9. ' ' → logprob: -8.239738464355469
    10. 'r' → logprob: -8.239738464355469

Token 307: ' l' (ID: 305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.936955451965332
    2. 'return' → logprob: -1.686955451965332
    3. ' l' → logprob: -2.186955451965332
    4. '        ' → logprob: -2.686955451965332
    5. '           ' → logprob: -2.936955451965332
    6. 'continue' → logprob: -3.311955451965332
    7. ' return' → logprob: -3.686955451965332
    8. '<|end|>' → logprob: -3.811955451965332
    9. 'l' (adapté à ' l') → logprob: -3.936955451965332
    10. ')' → logprob: -4.061955451965332

Token 308: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.017284469678997993
    2. '//=' → logprob: -4.392284393310547
    3. ' >>=' → logprob: -5.392284393310547
    4. '+=' → logprob: -9.767284393310547
    5. ',r' → logprob: -10.142284393310547
    6. ',' → logprob: -10.142284393310547
    7. '//' → logprob: -10.642284393310547
    8. '<<' → logprob: -10.642284393310547
    9. '>>>' → logprob: -11.642284393310547
    10. ' //' → logprob: -11.642284393310547

Token 309: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.750000953674316
    3. '>=' → logprob: -15.500000953674316
    4. '=
' → logprob: -17.75
    5. '=

' → logprob: -19.625
    6. '>' → logprob: -20.125
    7. ' =' → logprob: -20.375
    8. '=.' → logprob: -21.25
    9. '=}' → logprob: -21.375
    10. '=_' → logprob: -21.75

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '0' → logprob: -17.875
    4. '   ' → logprob: -18.625
    5. '１' → logprob: -19.125
    6. '```' → logprob: -19.625
    7. '=' → logprob: -20.0
    8. ' ' → logprob: -20.0
    9. '
' → logprob: -20.375
    10. '' → logprob: -21.0

Token 311: ';r' (ID: 129981)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01141265593469143
    2. 'r' → logprob: -5.136412620544434
    3. ' r' → logprob: -6.011412620544434
    4. '       ' → logprob: -6.511412620544434
    5. '
' → logprob: -6.761412620544434
    6. '   ' → logprob: -9.261412620544434
    7. '        ' → logprob: -9.886412620544434
    8. ' ' → logprob: -10.261412620544434
    9. '		' → logprob: -10.261412620544434
    10. '            ' → logprob: -10.886412620544434

Token 312: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -7.040457421680912e-05
    2. ' >>=' → logprob: -10.000070571899414
    3. 'ight' → logprob: -11.500070571899414
    4. '=' → logprob: -12.375070571899414
    5. 'r' → logprob: -12.500070571899414
    6. '>' → logprob: -13.375070571899414
    7. '>>&' → logprob: -13.625070571899414
    8. '>>
' → logprob: -14.250070571899414
    9. '>>>' → logprob: -14.375070571899414
    10. '=r' → logprob: -14.625070571899414

Token 313: '=' (ID: 28)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006459566066041589
    2. '=' → logprob: -7.375646114349365
    3. '<|end|>' → logprob: -11.000645637512207
    4. '2' → logprob: -14.375645637512207
    5. ' ' → logprob: -14.500645637512207
    6. '/' → logprob: -14.750645637512207
    7. '0' → logprob: -15.125645637512207
    8. '```' → logprob: -15.250645637512207
    9. '<|end|>' → logprob: -15.375645637512207
    10. '>' → logprob: -15.500645637512207

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.125001907348633
    4. '2' → logprob: -19.250001907348633
    5. '<|end|>' → logprob: -19.625001907348633
    6. '0' → logprob: -19.875001907348633
    7. '```' → logprob: -20.625001907348633
    8. '  ' → logprob: -21.250001907348633
    9. '۱' → logprob: -21.750001907348633
    10. '１' → logprob: -22.062501907348633

Token 315: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.56756591796875
    2. '<|end|>' → logprob: -0.94256591796875
    3. '
' → logprob: -3.44256591796875
    4. '<|end|>' → logprob: -5.69256591796875
    5. '	' → logprob: -6.19256591796875
    6. ' ' → logprob: -7.06756591796875
    7. '\n' → logprob: -7.06756591796875
    8. '   ' → logprob: -7.31756591796875
    9. ' 
' → logprob: -7.56756591796875
    10. ':return' → logprob: -8.06756591796875

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000990891712717712
    2. '	' → logprob: -8.000990867614746
    3. 'return' → logprob: -8.375990867614746
    4. '<|end|>' → logprob: -8.500990867614746
    5. ' return' → logprob: -9.500990867614746
    6. '   ' → logprob: -9.500990867614746
    7. '	return' → logprob: -10.875990867614746
    8. '           ' → logprob: -11.125990867614746
    9. '	   ' → logprob: -12.000990867614746
    10. ')' → logprob: -12.625990867614746

Token 317: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47615373134613037
    2. 'return' (adapté à ' return') → logprob: -0.9761537313461304
    3. ' return' → logprob: -6.47615385055542
    4. '   ' → logprob: -8.101153373718262
    5. '	return' → logprob: -8.726153373718262
    6. '	' → logprob: -9.851153373718262
    7. '           ' → logprob: -12.476153373718262
    8. ':return' → logprob: -12.976153373718262
    9. '```' → logprob: -13.351153373718262
    10. '	   ' → logprob: -13.351153373718262

Token 318: ' me' (ID: 668)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.19288748502731323
    2. 'l' → logprob: -1.942887544631958
    3. '(me' → logprob: -4.567887306213379
    4. '(l' → logprob: -4.692887306213379
    5. ' me' → logprob: -4.817887306213379
    6. ' l' → logprob: -6.192887306213379
    7. '(' → logprob: -6.692887306213379
    8. 'r' → logprob: -7.817887306213379
    9. ' (' → logprob: -8.942887306213379
    10. 'op' → logprob: -9.067887306213379

Token 319: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.550213098526001
    2. '.l' → logprob: -1.425213098526001
    3. 'op' → logprob: -2.050213098526001
    4. 'l' → logprob: -3.675213098526001
    5. '.prod' → logprob: -4.550212860107422
    6. 'prod' → logprob: -4.800212860107422
    7. '.el' → logprob: -5.050212860107422
    8. 'el' → logprob: -6.175212860107422
    9. '_op' → logprob: -7.800212860107422
    10. '.' → logprob: -8.800212860107422

Token 320: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08427827805280685
    2. 'res' → logprob: -2.8342783451080322
    3. 'rod' → logprob: -3.8342783451080322
    4. 'rd' → logprob: -8.834278106689453
    5. 'ro' → logprob: -9.084278106689453
    6. 'me' → logprob: -10.209278106689453
    7. 'l' → logprob: -10.459278106689453
    8. 'd' → logprob: -10.459278106689453
    9. 'od' → logprob: -11.084278106689453
    10. 'er' → logprob: -11.209278106689453

Token 321: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.3902033970225602e-05
    2. '(' → logprob: -11.250014305114746
    3. 'l' → logprob: -14.250014305114746
    4. ' l' → logprob: -16.50001335144043
    5. ' (' → logprob: -17.00001335144043
    6. '(left' → logprob: -17.37501335144043
    7. '(
' → logprob: -17.50001335144043
    8. '((' → logprob: -19.12501335144043
    9. '(ls' → logprob: -19.62501335144043
    10. '	l' → logprob: -20.25001335144043

Token 322: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: 0.0
    2. 'r' → logprob: -17.25
    3. '(res' → logprob: -18.375
    4. 'ress' → logprob: -20.75
    5. 're' → logprob: -20.875
    6. '```' → logprob: -21.25
    7. ' res' → logprob: -21.375
    8. '_res' → logprob: -21.375
    9. 'resi' → logprob: -21.875
    10. 's' → logprob: -21.875

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6932023167610168
    2. ',r' → logprob: -0.6932023167610168
    3. ' ,' → logprob: -10.443202018737793
    4. 'r' → logprob: -10.568202018737793
    5. ' r' → logprob: -15.568202018737793
    6. ',l' → logprob: -17.56820297241211
    7. ' ' → logprob: -17.69320297241211
    8. '(r' → logprob: -18.06820297241211
    9. ',
' → logprob: -18.31820297241211
    10. '   ' → logprob: -18.31820297241211

Token 324: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.493430894101039e-05
    2. ' r' → logprob: -9.500075340270996
    3. ' ' → logprob: -19.12507438659668
    4. '	r' → logprob: -19.25007438659668
    5. '   ' → logprob: -20.00007438659668
    6. '  ' → logprob: -21.37507438659668
    7. '_r' → logprob: -21.75007438659668
    8. '(r' → logprob: -21.75007438659668
    9. '[r' → logprob: -21.75007438659668
    10. '­r' → logprob: -22.50007438659668

Token 325: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00020425561524461955
    2. 'r' → logprob: -8.500204086303711
    3. 'es' → logprob: -14.250204086303711
    4. ' res' → logprob: -16.50020408630371
    5. ')' → logprob: -16.62520408630371
    6. 's' → logprob: -17.12520408630371
    7. '(res' → logprob: -17.50020408630371
    8. '	res' → logprob: -17.75020408630371
    9. 'ress' → logprob: -19.50020408630371
    10. ' ' → logprob: -20.50020408630371

Token 326: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.375004768371582
    3. ' )' → logprob: -14.750004768371582
    4. '<|end|>' → logprob: -16.1250057220459
    5. '}' → logprob: -16.3750057220459
    6. ')return' → logprob: -17.7500057220459
    7. '),' → logprob: -18.1250057220459
    8. ')

' → logprob: -18.3750057220459
    9. ')#' → logprob: -18.3750057220459
    10. ')}' → logprob: -18.3750057220459

Token 327: 'read' (ID: 1293)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: ' =' (ID: 314)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8035721182823181
    2. '=' → logprob: -0.9285721182823181
    3. ' =' → logprob: -2.928572177886963
    4. '_line' → logprob: -3.053572177886963
    5. '()' → logprob: -3.053572177886963
    6. '_' → logprob: -5.678572177886963
    7. 'lines' → logprob: -6.428572177886963
    8. '(' → logprob: -6.678572177886963
    9. 'Line' → logprob: -7.678572177886963
    10. '=sys' → logprob: -8.178571701049805

Token 329: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0035617039538919926
    2. ' sys' → logprob: -6.253561496734619
    3. 'lambda' → logprob: -7.003561496734619
    4. 'int' → logprob: -7.253561496734619
    5. '=sys' → logprob: -11.753561973571777
    6. 'input' → logprob: -12.378561973571777
    7. '	sys' → logprob: -13.503561973571777
    8. '(sys' → logprob: -13.753561973571777
    9. ' lambda' → logprob: -14.128561973571777
    10. 'stdin' → logprob: -16.25356101989746

Token 330: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.232493564719334e-05
    2. '.stdout' → logprob: -10.000082015991211
    3. '.' → logprob: -11.250082015991211
    4. '.readline' → logprob: -11.375082015991211
    5. '.std' → logprob: -12.250082015991211
    6. '.argv' → logprob: -12.500082015991211
    7. ' .' → logprob: -13.000082015991211
    8. '.input' → logprob: -14.250082015991211
    9. 'stdin' → logprob: -14.875082015991211
    10. '.st' → logprob: -15.250082015991211

Token 331: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.024966975674033165
    2. 'buffer' → logprob: -4.149967193603516
    3. 'read' → logprob: -4.899967193603516
    4. '.read' → logprob: -7.274967193603516
    5. '.buffer' → logprob: -7.399967193603516
    6. '.readlines' → logprob: -9.399967193603516
    7. 'reader' → logprob: -10.399967193603516
    8. '_buffer' → logprob: -11.649967193603516
    9. '-buffer' → logprob: -12.149967193603516
    10. 'buffers' → logprob: -12.524967193603516

Token 332: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.746408224105835
    2. '<|end|>' → logprob: -0.996408224105835
    3. 'print' → logprob: -2.246408224105835
    4. 'n' → logprob: -4.371408462524414
    5. 'data' → logprob: -4.871408462524414
    6. '#' → logprob: -5.121408462524414
    7. 'arr' → logprob: -5.371408462524414
    8. 'def' → logprob: -5.871408462524414
    9. 'a' → logprob: -5.996408462524414
    10. '[' → logprob: -5.996408462524414

Token 334: ',B' (ID: 19853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17649292945861816
    2. '=' → logprob: -2.051492929458618
    3. ',' → logprob: -3.551492929458618
    4. '=int' → logprob: -6.426492691040039
    5. '=[' → logprob: -7.301492691040039
    6. ',B' → logprob: -7.426492691040039
    7. '=[]' → logprob: -7.676492691040039
    8. 'B' → logprob: -8.676492691040039
    9. 'rray' → logprob: -8.801492691040039
    10. ' ' → logprob: -9.051492691040039

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1104431003332138
    2. ' =' → logprob: -2.360443115234375
    3. ',' → logprob: -4.735443115234375
    4. '=input' → logprob: -7.860443115234375
    5. ',N' → logprob: -7.985443115234375
    6. ',Q' → logprob: -8.735443115234375
    7. ',C' → logprob: -9.235443115234375
    8. '=int' → logprob: -9.235443115234375
    9. '=sys' → logprob: -9.860443115234375
    10. ' ' → logprob: -10.110443115234375

Token 336: ' list' (ID: 1562)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.2520257234573364
    2. ' map' → logprob: -1.5020257234573364
    3. 'read' → logprob: -9.502025604248047
    4. ' read' → logprob: -11.502025604248047
    5. '[' → logprob: -12.377025604248047
    6. '(map' → logprob: -12.627025604248047
    7. 'list' → logprob: -13.002025604248047
    8. ' ' → logprob: -14.127025604248047
    9. '	map' → logprob: -15.002025604248047
    10. ' list' → logprob: -15.252025604248047

Token 337: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.263011578586884e-05
    2. 'map' → logprob: -10.375042915344238
    3. '(' → logprob: -11.750042915344238
    4. '(read' → logprob: -13.375042915344238
    5. ' map' → logprob: -14.000042915344238
    6. '()' → logprob: -14.625042915344238
    7. '(m' → logprob: -15.625042915344238
    8. ',map' → logprob: -16.125041961669922
    9. '(input' → logprob: -16.500041961669922
    10. '(range' → logprob: -16.625041961669922

Token 338: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009030391462147236
    2. 'int' → logprob: -4.759030342102051
    3. ',int' → logprob: -8.13403034210205
    4. '(str' → logprob: -9.75903034210205
    5. ' int' → logprob: -10.25903034210205
    6. 'str' → logprob: -11.25903034210205
    7. ')' → logprob: -12.38403034210205
    8. '=int' → logprob: -12.38403034210205
    9. '<int' → logprob: -13.13403034210205
    10. '(' → logprob: -13.25903034210205

Token 339: ',input' (ID: 123014)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.2545253336429596
    2. ',' → logprob: -1.5045253038406372
    3. 'read' → logprob: -6.004525184631348
    4. ' (' → logprob: -10.129525184631348
    5. ' read' → logprob: -10.254525184631348
    6. ',input' → logprob: -10.629525184631348
    7. ' ,' → logprob: -11.629525184631348
    8. '(' → logprob: -12.254525184631348
    9. '.read' → logprob: -12.754525184631348
    10. '(sys' → logprob: -12.879525184631348

Token 340: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.750000953674316
    3. '.split' → logprob: -16.625001907348633
    4. '(' → logprob: -17.250001907348633
    5. '.readline' → logprob: -18.375001907348633
    6. '()))' → logprob: -18.750001907348633
    7. ' ().' → logprob: -18.750001907348633
    8. 'split' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.625001907348633
    10. 'input' → logprob: -19.750001907348633

Token 341: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016349162615370005
    2. 'strip' → logprob: -8.750163078308105
    3. 'rstrip' → logprob: -12.500163078308105
    4. ' split' → logprob: -14.000163078308105
    5. '(split' → logprob: -15.625163078308105
    6. 'spl' → logprob: -16.000164031982422
    7. 'read' → logprob: -16.375164031982422
    8. ')' → logprob: -16.625164031982422
    9. '().' → logprob: -17.375164031982422
    10. '.split' → logprob: -18.750164031982422

Token 342: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03391699865460396
    2. '()' → logprob: -3.78391695022583
    3. '))' → logprob: -4.65891695022583
    4. '(' → logprob: -6.90891695022583
    5. '('' → logprob: -9.908917427062988
    6. '())' → logprob: -10.533917427062988
    7. '(','' → logprob: -10.908917427062988
    8. '(),' → logprob: -11.158917427062988
    9. '()));' → logprob: -11.408917427062988
    10. '()))
' → logprob: -11.533917427062988

Token 343: 'T' (ID: 51)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7579241394996643
    2. 'C' → logprob: -2.0079240798950195
    3. 'a' → logprob: -2.3829240798950195
    4. 'data' → logprob: -3.2579240798950195
    5. 's' → logprob: -3.6329240798950195
    6. 'x' → logprob: -3.6329240798950195
    7. 'if' → logprob: -3.6329240798950195
    8. 'S' → logprob: -3.8829240798950195
    9. 'l' → logprob: -4.0079240798950195
    10. 'arr' → logprob: -4.1329240798950195

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10809911042451859
    2. '=' → logprob: -2.3580992221832275
    3. '=[' → logprob: -5.733098983764648
    4. '=[]' → logprob: -6.108098983764648
    5. 'imes' → logprob: -7.358098983764648
    6. ' =[' → logprob: -8.108098983764648
    7. 'ime' → logprob: -8.233098983764648
    8. '=int' → logprob: -8.483098983764648
    9. '=[]
' → logprob: -8.483098983764648
    10. '=input' → logprob: -8.733098983764648

Token 345: ' input' (ID: 3422)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.4101600646972656
    2. '[' → logprob: -1.5351600646972656
    3. '[int' → logprob: -1.7851600646972656
    4. '[A' → logprob: -1.7851600646972656
    5. 'int' → logprob: -2.4101600646972656
    6. 'A' → logprob: -2.6601600646972656
    7. '10' → logprob: -4.660160064697266
    8. '[B' → logprob: -4.785160064697266
    9. 'B' → logprob: -4.910160064697266
    10. 'Seg' → logprob: -5.035160064697266

Token 346: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00413206871598959
    2. '().' → logprob: -5.504132270812988
    3. '()
' → logprob: -10.379132270812988
    4. '()[' → logprob: -11.754132270812988
    5. ' ()' → logprob: -12.504132270812988
    6. '(' → logprob: -12.504132270812988
    7. '())' → logprob: -13.254132270812988
    8. '()\' → logprob: -13.629132270812988
    9. '()`' → logprob: -14.254132270812988
    10. '()"' → logprob: -14.754132270812988

Token 347: 'LIMIT' (ID: 121694)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8493971824645996
    2. 's' → logprob: -2.7243971824645996
    3. 'if' → logprob: -2.7243971824645996
    4. 'S' → logprob: -2.8493971824645996
    5. 'ans' → logprob: -2.9743971824645996
    6. 'pos' → logprob: -3.4743971824645996
    7. 'D' → logprob: -3.5993971824645996
    8. 'C' → logprob: -3.5993971824645996
    9. 'seg' → logprob: -3.5993971824645996
    10. 'cnt' → logprob: -3.7243971824645996

Token 348: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.079301618039608
    2. '=' → logprob: -2.579301595687866
    3. '=int' → logprob: -8.454301834106445
    4. '=len' → logprob: -9.079301834106445
    5. 'S' → logprob: -9.829301834106445
    6. ' ' → logprob: -11.954301834106445
    7. '=A' → logprob: -12.204301834106445
    8. '=S' → logprob: -13.204301834106445
    9. ',' → logprob: -13.329301834106445
    10. '26' → logprob: -13.454301834106445

Token 349: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.039143264293670654
    2. '1' → logprob: -4.289143085479736
    3. '100' → logprob: -4.539143085479736
    4. '2' → logprob: -5.289143085479736
    5. '200' → logprob: -6.039143085479736
    6. '20' → logprob: -6.414143085479736
    7. '26' → logprob: -6.664143085479736
    8. '300' → logprob: -7.789143085479736
    9. '50' → logprob: -7.914143085479736
    10. 'len' → logprob: -8.039143562316895

Token 350: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.132613867521286
    2. '100' → logprob: -3.5076138973236084
    3. '1' → logprob: -3.7576138973236084
    4. '2' → logprob: -4.132613658905029
    5. '200' → logprob: -4.632613658905029
    6. 'len' → logprob: -4.632613658905029
    7. 'max' → logprob: -4.882613658905029
    8. 'A' → logprob: -5.007613658905029
    9. 'B' → logprob: -5.507613658905029
    10. '20' → logprob: -5.632613658905029

Token 351: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3730173408985138
    2. '0' → logprob: -1.2480173110961914
    3. ' **' → logprob: -4.248017311096191
    4. '*' → logprob: -5.873017311096191
    5. '#' → logprob: -5.998017311096191
    6. ' ' → logprob: -6.998017311096191
    7. '9' → logprob: -6.998017311096191
    8. ' *' → logprob: -7.873017311096191
    9. '+' → logprob: -8.373017311096191
    10. '^' → logprob: -8.498017311096191

Token 352: '18' (ID: 1157)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6518262028694153
    2. '9' → logprob: -1.1518261432647705
    3. '6' → logprob: -2.4018261432647705
    4. '18' → logprob: -3.4018261432647705
    5. '7' → logprob: -3.6518261432647705
    6. '12' → logprob: -5.27682638168335
    7. '15' → logprob: -5.65182638168335
    8. '10' → logprob: -6.40182638168335
    9. '8' → logprob: -6.90182638168335
    10. '4' → logprob: -7.15182638168335

Token 353: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3032977283000946
    2. 'count' → logprob: -3.053297758102417
    3. '#' → logprob: -3.428297758102417
    4. 'for' → logprob: -3.678297758102417
    5. 'ans' → logprob: -4.053297519683838
    6. 'if' → logprob: -4.053297519683838
    7. 'def' → logprob: -4.303297519683838
    8. 'res' → logprob: -4.303297519683838
    9. 'pos' → logprob: -4.678297519683838
    10. 'result' → logprob: -4.803297519683838

Token 354: 'st' (ID: 302)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.49187374114990234
    2. 'ans' → logprob: -2.4918737411499023
    3. 'if' → logprob: -2.8668737411499023
    4. 'res' → logprob: -3.1168737411499023
    5. 'result' → logprob: -3.4918737411499023
    6. 'answer' → logprob: -3.6168737411499023
    7. 'count' → logprob: -3.8668737411499023
    8. 'pos' → logprob: -3.8668737411499023
    9. 'idx' → logprob: -4.116873741149902
    10. 'seg' → logprob: -4.116873741149902

Token 355: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2256137579679489
    2. ' =' → logprob: -1.6006137132644653
    3. 'r' → logprob: -9.225613594055176
    4. ' ' → logprob: -9.600613594055176
    5. 'ree' → logprob: -11.100613594055176
    6. '=A' → logprob: -12.600613594055176
    7. '_' → logprob: -13.225613594055176
    8. '1' → logprob: -13.225613594055176
    9. 'A' → logprob: -13.350613594055176
    10. '＝' → logprob: -13.475613594055176

Token 356: 'Seg' (ID: 11496)
  Prédit: 'Seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -2.2723104848410003e-05
    2. ' Seg' → logprob: -10.750022888183594
    3. '[' → logprob: -14.375022888183594
    4. 'Segment' → logprob: -14.625022888183594
    5. 'seg' → logprob: -16.125022888183594
    6. 'St' → logprob: -17.250022888183594
    7. 'S' → logprob: -17.875022888183594
    8. 'Segments' → logprob: -18.125022888183594
    9. 'Se' → logprob: -18.375022888183594
    10. 'Sent' → logprob: -18.500022888183594

Token 357: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.9361264946837764e-07
    2. 'Tre' → logprob: -16.625
    3. 'tree' → logprob: -18.25
    4. 'T' → logprob: -19.125
    5. 'ree' → logprob: -19.25
    6. '	Tree' → logprob: -20.125
    7. '<Tree' → logprob: -21.5
    8. ' Tree' → logprob: -21.625
    9. '(Tree' → logprob: -21.875
    10. 'TREE' → logprob: -22.125

Token 358: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020945074036717415
    2. '(A' → logprob: -4.520945072174072
    3. '(B' → logprob: -5.145945072174072
    4. '(len' → logprob: -6.020945072174072
    5. '(L' → logprob: -6.520945072174072
    6. '((' → logprob: -9.64594554901123
    7. '(T' → logprob: -11.39594554901123
    8. '(max' → logprob: -11.39594554901123
    9. ' (' → logprob: -12.02094554901123
    10. 'A' → logprob: -12.02094554901123

Token 359: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008511384949088097
    2. ',B' → logprob: -5.383511543273926
    3. ',A' → logprob: -5.883511543273926
    4. ' ,' → logprob: -8.008511543273926
    5. ',T' → logprob: -8.133511543273926
    6. ',L' → logprob: -8.883511543273926
    7. '+' → logprob: -9.008511543273926
    8. ',max' → logprob: -10.508511543273926
    9. 'A' → logprob: -10.633511543273926
    10. '*' → logprob: -10.883511543273926

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3943718671798706
    2. 'B' → logprob: -1.1443718671798706
    3. '2' → logprob: -5.51937198638916
    4. '0' → logprob: -6.64437198638916
    5. '10' → logprob: -6.64437198638916
    6. ' ' → logprob: -8.51937198638916
    7. '5' → logprob: -8.64437198638916
    8. 'len' → logprob: -9.64437198638916
    9. '3' → logprob: -9.76937198638916
    10. '7' → logprob: -9.76937198638916

Token 361: ',min' (ID: 129117)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18276114761829376
    2. ',min' → logprob: -2.3077611923217773
    3. ',max' → logprob: -2.9327611923217773
    4. ',int' → logprob: -4.682761192321777
    5. ',sum' → logprob: -6.432761192321777
    6. ' ,' → logprob: -6.557761192321777
    7. ',str' → logprob: -7.932761192321777
    8. ',(' → logprob: -8.182761192321777
    9. ',None' → logprob: -8.682761192321777
    10. ',bool' → logprob: -8.807761192321777

Token 362: ',L' (ID: 68006)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27316224575042725
    2. ')' → logprob: -1.7731622457504272
    3. ',int' → logprob: -3.023162364959717
    4. 'lambda' → logprob: -5.273162364959717
    5. ',min' → logprob: -5.773162364959717
    6. '(lambda' → logprob: -6.148162364959717
    7. ',None' → logprob: -6.398162364959717
    8. ',max' → logprob: -6.648162364959717
    9. ',A' → logprob: -6.648162364959717
    10. ',len' → logprob: -7.398162364959717

Token 363: 'IMIT' (ID: 16186)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022677783854305744
    2. ',' → logprob: -7.002267837524414
    3. ',)' → logprob: -7.627267837524414
    4. '<|end|>' → logprob: -8.502267837524414
    5. 'ambda' → logprob: -8.627267837524414
    6. ')
' → logprob: -9.377267837524414
    7. 'A' → logprob: -9.377267837524414
    8. 'int' → logprob: -9.502267837524414
    9. ',int' → logprob: -10.002267837524414
    10. ',A' → logprob: -10.377267837524414

Token 364: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030985695775598288
    2. '+' → logprob: -6.378098487854004
    3. ',' → logprob: -7.378098487854004
    4. ',)' → logprob: -7.753098487854004
    5. ' )' → logprob: -8.628098487854004
    6. '+)' → logprob: -9.253098487854004
    7. '())' → logprob: -11.128098487854004
    8. ')
' → logprob: -11.378098487854004
    9. '))' → logprob: -12.128098487854004
    10. '<|end|>' → logprob: -12.128098487854004

Token 365: 'st' (ID: 302)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -1.3765807151794434
    2. 'Trace' → logprob: -1.3765807151794434
    3. ')' → logprob: -2.0015807151794434
    4. '<|end|>' → logprob: -2.7515807151794434
    5. 'Syntax' → logprob: -3.0015807151794434
    6. 'Type' → logprob: -3.0015807151794434
    7. ' ' → logprob: -3.5015807151794434
    8. '[' → logprob: -3.7515807151794434
    9. 'st' → logprob: -3.8765807151794434
    10. '...' → logprob: -4.001580715179443

Token 366: '.set' (ID: 1230)
  Prédit: '.builder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.builder' → logprob: -0.021401189267635345
    2. '.' → logprob: -4.146401405334473
    3. '.set' → logprob: -5.646401405334473
    4. '.b' → logprob: -7.021401405334473
    5. '.build' → logprob: -7.271401405334473
    6. '.setter' → logprob: -10.021401405334473
    7. ' .' → logprob: -10.271401405334473
    8. '.Builder' → logprob: -10.396401405334473
    9. 'builder' → logprob: -11.146401405334473
    10. '```' → logprob: -11.271401405334473

Token 367: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10325517505407333
    2. '(A' → logprob: -2.353255271911621
    3. '(B' → logprob: -6.103255271911621
    4. '0' → logprob: -7.603255271911621
    5. 'A' → logprob: -8.603255271911621
    6. ' ' → logprob: -9.603255271911621
    7. 'B' → logprob: -11.103255271911621
    8. ')' → logprob: -11.353255271911621
    9. '<|end|>' → logprob: -11.853255271911621
    10. ',A' → logprob: -12.603255271911621

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004257427528500557
    2. ' ,' → logprob: -6.5042572021484375
    3. '+' → logprob: -6.6292572021484375
    4. ',A' → logprob: -7.2542572021484375
    5. ' ' → logprob: -8.254257202148438
    6. '0' → logprob: -9.254257202148438
    7. '-' → logprob: -9.504257202148438
    8. 'A' → logprob: -9.754257202148438
    9. ',value' → logprob: -10.129257202148438
    10. ',B' → logprob: -10.129257202148438

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45452195405960083
    2. '1' → logprob: -1.829521894454956
    3. 'LIMIT' → logprob: -1.829521894454956
    4. 'A' → logprob: -3.204521894454956
    5. '10' → logprob: -6.204522132873535
    6. 'L' → logprob: -7.579522132873535
    7. 'B' → logprob: -7.704522132873535
    8. 'T' → logprob: -9.079522132873535
    9. '(' → logprob: -9.204522132873535
    10. ' LIMIT' → logprob: -9.454522132873535

Token 370: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009767891839146614
    2. ')
' → logprob: -4.634768009185791
    3. ' )' → logprob: -11.759767532348633
    4. ')

' → logprob: -13.384767532348633
    5. ')
' → logprob: -13.634767532348633
    6. ' )
' → logprob: -15.384767532348633
    7. '))' → logprob: -15.634767532348633
    8. ')#' → logprob: -15.634767532348633
    9. '
' → logprob: -16.134767532348633
    10. '())' → logprob: -16.259767532348633

Token 371: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3647986948490143
    2. 'i' → logprob: -1.239798665046692
    3. ' _' → logprob: -5.239798545837402
    4. '_i' → logprob: -5.489798545837402
    5. '_' → logprob: -5.739798545837402
    6. 'a' → logprob: -7.364798545837402
    7. 'x' → logprob: -7.739798545837402
    8. ' a' → logprob: -7.864798545837402
    9. ' x' → logprob: -7.989798545837402
    10. ' t' → logprob: -8.739798545837402

Token 373: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5360219478607178
    2. 'in' → logprob: -1.4110219478607178
    3. ',' → logprob: -1.7860219478607178
    4. ' ,' → logprob: -6.411022186279297
    5. ',in' → logprob: -7.411022186279297
    6. ',t' → logprob: -7.661022186279297
    7. ',T' → logprob: -8.661022186279297
    8. ',value' → logprob: -9.161022186279297
    9. ',s' → logprob: -10.161022186279297
    10. ',input' → logprob: -10.161022186279297

Token 374: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00046618093620054424
    2. ' range' → logprob: -7.750466346740723
    3. 'T' → logprob: -10.750466346740723
    4. 'enumer' → logprob: -11.500466346740723
    5. 're' → logprob: -12.750466346740723
    6. '(range' → logprob: -14.500466346740723
    7. 'list' → logprob: -16.125465393066406
    8. 'A' → logprob: -16.750465393066406
    9. 'st' → logprob: -17.000465393066406
    10. 'rang' → logprob: -17.250465393066406

Token 375: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.008623912930488586
    2. 'range' → logprob: -4.758624076843262
    3. ' range' → logprob: -11.633624076843262
    4. '(' → logprob: -14.758624076843262
    5. '(T' → logprob: -18.258623123168945
    6. '	range' → logprob: -18.383623123168945
    7. '(list' → logprob: -18.508623123168945
    8. ' (' → logprob: -18.883623123168945
    9. 'in' → logprob: -19.133623123168945
    10. 'T' → logprob: -19.258623123168945

Token 376: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00023166877508629113
    2. '(len' → logprob: -8.750231742858887
    3. '(B' → logprob: -9.750231742858887
    4. '(' → logprob: -11.500231742858887
    5. 'A' → logprob: -12.875231742858887
    6. '(T' → logprob: -13.875231742858887
    7. '(L' → logprob: -14.625231742858887
    8. 'len' → logprob: -15.125231742858887
    9. '(
' → logprob: -16.00023078918457
    10. '(a' → logprob: -16.00023078918457

Token 377: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.6986389756202698
    2. ')):
' → logprob: -0.9486389756202698
    3. '+' → logprob: -2.198638916015625
    4. '))' → logprob: -6.448638916015625
    5. ' +' → logprob: -6.698638916015625
    6. '-' → logprob: -7.323638916015625
    7. '):' → logprob: -8.323638916015625
    8. '):
' → logprob: -8.448638916015625
    9. ')):
' → logprob: -8.448638916015625
    10. ',' → logprob: -9.073638916015625

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004259800538420677
    2. ' if' → logprob: -5.7542595863342285
    3. 'if' → logprob: -8.379260063171387
    4. 'st' → logprob: -8.379260063171387
    5. ' s' → logprob: -9.504260063171387
    6. ' st' → logprob: -9.504260063171387
    7. ' c' → logprob: -9.754260063171387
    8. 'v' → logprob: -9.879260063171387
    9. 't' → logprob: -10.254260063171387
    10. ' ' → logprob: -10.379260063171387

Token 379: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8784225583076477
    2. 'st' → logprob: -1.753422498703003
    3. 'v' → logprob: -2.628422498703003
    4. 'x' → logprob: -2.753422498703003
    5. 'c' → logprob: -3.003422498703003
    6. 'cost' → logprob: -3.003422498703003
    7. 'val' → logprob: -3.503422498703003
    8. 'res' → logprob: -4.128422737121582
    9. 'd' → logprob: -4.128422737121582
    10. 'cur' → logprob: -4.253422737121582

Token 380: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.004456824157387018
    2. ' T' → logprob: -5.629456996917725
    3. 'idx' → logprob: -8.129456520080566
    4. 'st' → logprob: -8.504456520080566
    5. 'int' → logprob: -9.004456520080566
    6. 'B' → logprob: -9.629456520080566
    7. '   ' → logprob: -10.254456520080566
    8. '0' → logprob: -10.629456520080566
    9. ' st' → logprob: -10.879456520080566
    10. ' ' → logprob: -10.879456520080566

Token 381: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.003669675439596176
    2. '[' → logprob: -5.628669738769531
    3. '==' → logprob: -10.378669738769531
    4. 'idx' → logprob: -11.378669738769531
    5. '```' → logprob: -12.128669738769531
    6. ' [' → logprob: -12.503669738769531
    7. '[
' → logprob: -12.628669738769531
    8. ' ==' → logprob: -12.878669738769531
    9. '[int' → logprob: -13.128669738769531
    10. '[id' → logprob: -13.503669738769531

Token 382: ']=='' (ID: 71177)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.814047634601593
    2. '=='' → logprob: -1.1890475749969482
    3. ']==' → logprob: -2.1890475749969482
    4. ']' → logprob: -2.8140475749969482
    5. ']=='' → logprob: -2.8140475749969482
    6. ' ==' → logprob: -4.689047813415527
    7. '=="' → logprob: -5.314047813415527
    8. ']=="' → logprob: -6.439047813415527
    9. ':' → logprob: -6.939047813415527
    10. ' =='' → logprob: -7.564047813415527

Token 383: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35709089040756226
    2. '1' → logprob: -1.357090950012207
    3. ''' → logprob: -4.607090950012207
    4. '?' → logprob: -5.357090950012207
    5. '<' → logprob: -5.482090950012207
    6. '#' → logprob: -5.607090950012207
    7. '.' → logprob: -5.732090950012207
    8. '-' → logprob: -5.982090950012207
    9. 'A' → logprob: -6.357090950012207
    10. 'B' → logprob: -6.607090950012207

Token 384: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18780791759490967
    2. ':
' → logprob: -1.8128079175949097
    3. '):' → logprob: -6.062808036804199
    4. '):
' → logprob: -6.187808036804199
    5. ' :' → logprob: -6.562808036804199
    6. '':' → logprob: -6.812808036804199
    7. ' and' → logprob: -7.312808036804199
    8. ' :
' → logprob: -8.5628080368042
    9. '':
' → logprob: -9.6878080368042
    10. ')' → logprob: -9.6878080368042

Token 385: ' continue' (ID: 4901)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.058121681213379
    2. 'v' → logprob: -1.683121681213379
    3. '       ' → logprob: -2.433121681213379
    4. ' st' → logprob: -2.433121681213379
    5. '   ' → logprob: -2.558121681213379
    6. 'val' → logprob: -3.308121681213379
    7. ' v' → logprob: -3.308121681213379
    8. 'x' → logprob: -3.808121681213379
    9. 'res' → logprob: -3.933121681213379
    10. 'continue' → logprob: -4.433121681213379

Token 386: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4962223470211029
    2. 'st' → logprob: -1.4962223768234253
    3. 'v' → logprob: -2.8712222576141357
    4. 'cost' → logprob: -3.9962222576141357
    5. 'res' → logprob: -4.246222496032715
    6. 'cur' → logprob: -4.496222496032715
    7. 'else' → logprob: -4.746222496032715
    8. 'val' → logprob: -4.871222496032715
    9. 'dp' → logprob: -4.996222496032715
    10. 'dist' → logprob: -5.246222496032715

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0387532114982605
    2. 'v' → logprob: -4.788753032684326
    3. 'st' → logprob: -5.288753032684326
    4. 'd' → logprob: -5.913753032684326
    5. 'val' → logprob: -6.413753032684326
    6. 'cur' → logprob: -6.663753032684326
    7. 'res' → logprob: -6.788753032684326
    8. 'l' → logprob: -6.913753032684326
    9. ' val' → logprob: -6.913753032684326
    10. ' st' → logprob: -7.038753032684326

Token 388: ' t' (ID: 260)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -2.1966593265533447
    2. 'res' → logprob: -2.3216593265533447
    3. 'v' → logprob: -2.4466593265533447
    4. 'cur' → logprob: -2.8216593265533447
    5. 'st' → logprob: -2.9466593265533447
    6. 'x' → logprob: -3.0716593265533447
    7. 'min' → logprob: -3.0716593265533447
    8. 'm' → logprob: -3.0716593265533447
    9. 'd' → logprob: -3.0716593265533447
    10. 'dp' → logprob: -3.1966593265533447

Token 389: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5031505227088928
    2. '=' → logprob: -1.628150463104248
    3. 'mp' → logprob: -2.753150463104248
    4. 'val' → logprob: -3.378150463104248
    5. 'ime' → logprob: -3.878150463104248
    6. 'r' → logprob: -4.503150463104248
    7. 'v' → logprob: -4.753150463104248
    8. 'p' → logprob: -4.878150463104248
    9. 'me' → logprob: -5.003150463104248
    10. 'st' → logprob: -5.128150463104248

Token 390: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.08373146504163742
    2. 'LIMIT' → logprob: -2.9587314128875732
    3. 'min' → logprob: -3.7087314128875732
    4. '[]' → logprob: -7.208731651306152
    5. '[]
' → logprob: -7.458731651306152
    6. '[' → logprob: -7.458731651306152
    7. 'max' → logprob: -7.958731651306152
    8. '[L' → logprob: -8.208731651306152
    9. '0' → logprob: -8.583731651306152
    10. 'float' → logprob: -8.708731651306152

Token 391: '.prod' (ID: 108433)
  Prédit: '.prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prod' → logprob: -0.00015705463010817766
    2. '.pro' → logprob: -8.875157356262207
    3. 'prod' → logprob: -11.750157356262207
    4. '
' → logprob: -12.625157356262207
    5. ' .' → logprob: -13.250157356262207
    6. '```' → logprob: -13.875157356262207
    7. '.' → logprob: -14.000157356262207
    8. '.dat' → logprob: -14.500157356262207
    9. '`.' → logprob: -15.125157356262207
    10. ').' → logprob: -15.375157356262207

Token 392: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0005247961380518973
    2. 'idx' → logprob: -8.000524520874023
    3. '(' → logprob: -8.625524520874023
    4. '0' → logprob: -11.750524520874023
    5. '1' → logprob: -14.000524520874023
    6. '[idx' → logprob: -15.000524520874023
    7. ' idx' → logprob: -15.875524520874023
    8. '(
' → logprob: -16.000524520874023
    9. '2' → logprob: -16.125524520874023
    10. '((' → logprob: -16.125524520874023

Token 393: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006041454034857452
    2. '+' → logprob: -7.875604152679443
    3. ' ,' → logprob: -9.125603675842285
    4. 'idx' → logprob: -9.250603675842285
    5. '   ' → logprob: -12.625603675842285
    6. ' +' → logprob: -12.625603675842285
    7. ' idx' → logprob: -12.875603675842285
    8. '	idx' → logprob: -13.375603675842285
    9. ',index' → logprob: -13.625603675842285
    10. '(idx' → logprob: -13.750603675842285

Token 394: '1' (ID: 16)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.034035224467515945
    2. '1' → logprob: -3.4090352058410645
    3. ' idx' → logprob: -9.159035682678223
    4. 'A' → logprob: -9.159035682678223
    5. '(idx' → logprob: -9.659035682678223
    6. '0' → logprob: -10.659035682678223
    7. '   ' → logprob: -11.034035682678223
    8. 'B' → logprob: -11.284035682678223
    9. '2' → logprob: -11.284035682678223
    10. '+' → logprob: -11.534035682678223

Token 395: ',' (ID: 11)
  Prédit: ',min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',min' → logprob: -0.6112499237060547
    2. ',' → logprob: -0.9862499237060547
    3. ',A' → logprob: -2.4862499237060547
    4. ',B' → logprob: -7.236249923706055
    5. ',max' → logprob: -9.611249923706055
    6. 'min' → logprob: -9.736249923706055
    7. ' ,' → logprob: -9.986249923706055
    8. 'idx' → logprob: -10.236249923706055
    9. 'A' → logprob: -10.611249923706055
    10. ',m' → logprob: -10.611249923706055

Token 396: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3213708996772766
    2. 'idx' → logprob: -1.9463708400726318
    3. 'A' → logprob: -2.071370840072632
    4. 'st' → logprob: -6.071371078491211
    5. 'LIMIT' → logprob: -6.446371078491211
    6. 'B' → logprob: -6.571371078491211
    7. 'limit' → logprob: -8.071371078491211
    8. ' min' → logprob: -8.821371078491211
    9. 'MIN' → logprob: -9.821371078491211
    10. 'len' → logprob: -10.071371078491211

Token 397: '(A' (ID: 10706)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.12998569011688232
    2. '(A' → logprob: -2.129985809326172
    3. '(B' → logprob: -6.629985809326172
    4. 'idx' → logprob: -7.129985809326172
    5. '(L' → logprob: -7.379985809326172
    6. 'A' → logprob: -9.254985809326172
    7. '(' → logprob: -9.504985809326172
    8. '(len' → logprob: -10.004985809326172
    9. '(st' → logprob: -10.629985809326172
    10. '((' → logprob: -10.754985809326172

Token 398: '+' (ID: 10)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3576428294181824
    2. '(idx' → logprob: -1.7326428890228271
    3. ',' → logprob: -2.357642889022827
    4. '+' → logprob: -4.982642650604248
    5. ' idx' → logprob: -5.232642650604248
    6. 'A' → logprob: -5.232642650604248
    7. 'B' → logprob: -5.857642650604248
    8. 'LIMIT' → logprob: -6.232642650604248
    9. '[idx' → logprob: -6.857642650604248
    10. '(A' → logprob: -7.107642650604248

Token 399: '1' (ID: 16)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1890418380498886
    2. 'B' → logprob: -2.43904185295105
    3. '(idx' → logprob: -2.81404185295105
    4. 'A' → logprob: -4.314041614532471
    5. 'LIMIT' → logprob: -5.689041614532471
    6. ' idx' → logprob: -5.939041614532471
    7. ',' → logprob: -6.939041614532471
    8. '(B' → logprob: -6.939041614532471
    9. 'T' → logprob: -7.064041614532471
    10. '(' → logprob: -7.439041614532471

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024697773158550262
    2. 'idx' → logprob: -4.274697780609131
    3. ',min' → logprob: -5.399697780609131
    4. '(idx' → logprob: -6.024697780609131
    5. ',A' → logprob: -6.399697780609131
    6. ',T' → logprob: -7.399697780609131
    7. ' ,' → logprob: -7.899697780609131
    8. ' idx' → logprob: -8.024697303771973
    9. ',t' → logprob: -9.274697303771973
    10. ',B' → logprob: -9.399697303771973

Token 401: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0007207724265754223
    2. ' idx' → logprob: -7.250720977783203
    3. 'A' → logprob: -12.625720977783203
    4. '(idx' → logprob: -12.750720977783203
    5. '   ' → logprob: -13.625720977783203
    6. ' ' → logprob: -13.750720977783203
    7. '	idx' → logprob: -14.250720977783203
    8. 'B' → logprob: -14.625720977783203
    9. '  ' → logprob: -14.875720977783203
    10. '
' → logprob: -16.250720977783203

Token 402: '+B' (ID: 185895)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21716433763504028
    2. '+B' → logprob: -1.7171642780303955
    3. ' +' → logprob: -4.467164516448975
    4. '+A' → logprob: -6.092164516448975
    5. '+(' → logprob: -6.842164516448975
    6. '+C' → logprob: -7.842164516448975
    7. '+t' → logprob: -9.217164039611816
    8. '+D' → logprob: -9.842164039611816
    9. '+i' → logprob: -10.092164039611816
    10. '+
' → logprob: -10.467164039611816

Token 403: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0453423447906971
    2. '(idx' → logprob: -3.170342445373535
    3. 'idx' → logprob: -6.295342445373535
    4. ' +' → logprob: -8.795342445373535
    5. '(' → logprob: -9.295342445373535
    6. ')' → logprob: -9.420342445373535
    7. '),' → logprob: -9.920342445373535
    8. '+B' → logprob: -10.545342445373535
    9. ')+' → logprob: -10.670342445373535
    10. ' idx' → logprob: -10.920342445373535

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.440506407059729e-05
    2. '+' → logprob: -11.12503433227539
    3. ' ' → logprob: -11.25003433227539
    4. '2' → logprob: -12.50003433227539
    5. ')' → logprob: -13.37503433227539
    6. 'B' → logprob: -14.62503433227539
    7. '   ' → logprob: -15.75003433227539
    8. '```' → logprob: -16.25003433227539
    9. 'A' → logprob: -16.50003433227539
    10. '),' → logprob: -16.87503433227539

Token 405: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5819075107574463
    2. '))' → logprob: -0.8319075107574463
    3. ')
' → logprob: -5.831907272338867
    4. '))
' → logprob: -6.706907272338867
    5. ' )' → logprob: -7.081907272338867
    6. ' ))' → logprob: -7.581907272338867
    7. ')+' → logprob: -8.581907272338867
    8. ')))' → logprob: -8.706907272338867
    9. '   ' → logprob: -10.831907272338867
    10. '),' → logprob: -11.081907272338867

Token 406: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010435149073600769
    2. '
' → logprob: -5.010435104370117
    3. ' +' → logprob: -6.885435104370117
    4. 'if' → logprob: -7.010435104370117
    5. 't' → logprob: -7.510435104370117
    6. '+
' → logprob: -8.385435104370117
    7. 'print' → logprob: -8.510435104370117
    8. '   ' → logprob: -8.510435104370117
    9. ')' → logprob: -9.135435104370117
    10. '+t' → logprob: -9.385435104370117

Token 407: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017076305812224746
    2. ' ' → logprob: -9.250170707702637
    3. 'idx' → logprob: -10.625170707702637
    4. 'B' → logprob: -10.875170707702637
    5. '2' → logprob: -11.875170707702637
    6. 'A' → logprob: -12.125170707702637
    7. '10' → logprob: -12.375170707702637
    8. '(' → logprob: -12.500170707702637
    9. '   ' → logprob: -13.125170707702637
    10. '100' → logprob: -13.250170707702637

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -10.750021934509277
    3. 'idx' → logprob: -15.500021934509277
    4. 'A' → logprob: -16.125022888183594
    5. 'B' → logprob: -16.125022888183594
    6. '   ' → logprob: -16.250022888183594
    7. '(' → logprob: -16.750022888183594
    8. '-' → logprob: -17.375022888183594
    9. '10' → logprob: -17.375022888183594
    10. '100' → logprob: -17.500022888183594

Token 409: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05146244913339615
    2. ' if' → logprob: -3.551462411880493
    3. 'st' → logprob: -4.801462650299072
    4. 'if' → logprob: -5.301462650299072
    5. ')' → logprob: -5.801462650299072
    6. '<|end|>' → logprob: -5.801462650299072
    7. '
' → logprob: -7.551462650299072
    8. '(st' → logprob: -7.801462650299072
    9. ' st' → logprob: -7.926462650299072
    10. '	st' → logprob: -8.176462173461914

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010544264689087868
    2. ' if' → logprob: -5.135544300079346
    3. 'st' → logprob: -5.885544300079346
    4. ')' → logprob: -7.385544300079346
    5. 'if' → logprob: -7.635544300079346
    6. ' st' → logprob: -8.385543823242188
    7. '<|end|>' → logprob: -8.510543823242188
    8. ',' → logprob: -9.135543823242188
    9. '...' → logprob: -9.760543823242188
    10. '       ' → logprob: -11.010543823242188

Token 411: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' (adapté à ' st') → logprob: -0.1602563112974167
    2. 'if' → logprob: -1.910256266593933
    3. 't' → logprob: -11.285256385803223
    4. ' if' → logprob: -11.535256385803223
    5. ' st' → logprob: -12.535256385803223
    6. 'import' → logprob: -12.660256385803223
    7. '
' → logprob: -13.785256385803223
    8. '   ' → logprob: -13.910256385803223
    9. 'min' → logprob: -15.660256385803223
    10. '```' → logprob: -15.660256385803223

Token 412: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -7.3458322731312364e-06
    2. '.' → logprob: -11.875007629394531
    3. ' .' → logprob: -16.25000762939453
    4. '.s' → logprob: -16.62500762939453
    5. 'set' → logprob: -16.62500762939453
    6. '.Set' → logprob: -16.87500762939453
    7. '>.' → logprob: -16.87500762939453
    8. '=set' → logprob: -17.62500762939453
    9. '.setdefault' → logprob: -17.87500762939453
    10. '​.' → logprob: -18.12500762939453

Token 413: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.00020711649267468601
    2. 'idx' → logprob: -8.50020694732666
    3. '(' → logprob: -12.75020694732666
    4. '(index' → logprob: -14.62520694732666
    5. '	idx' → logprob: -16.000207901000977
    6. '(
' → logprob: -16.125207901000977
    7. ' idx' → logprob: -16.625207901000977
    8. '[idx' → logprob: -17.250207901000977
    9. '(i' → logprob: -19.875207901000977
    10. '(id' → logprob: -20.125207901000977

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009899402037262917
    2. ',t' → logprob: -4.634899616241455
    3. ' ,' → logprob: -9.259899139404297
    4. 't' → logprob: -10.259899139404297
    5. '(' → logprob: -12.009899139404297
    6. ' t' → logprob: -12.384899139404297
    7. '(t' → logprob: -13.509899139404297
    8. ',
' → logprob: -14.509899139404297
    9. '   ' → logprob: -14.634899139404297
    10. ')' → logprob: -16.384899139404297

Token 415: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001419995678588748
    2. ' t' → logprob: -6.626420021057129
    3. 'min' → logprob: -9.376420021057129
    4. ' min' → logprob: -12.001420021057129
    5. ' ' → logprob: -14.376420021057129
    6. 'int' → logprob: -14.501420021057129
    7. '	t' → logprob: -14.501420021057129
    8. '   ' → logprob: -14.626420021057129
    9. '`t' → logprob: -15.126420021057129
    10. ' ' → logprob: -16.001419067382812

Token 416: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5941604690160602e-05
    2. ')
' → logprob: -11.625025749206543
    3. '<|end|>' → logprob: -12.000025749206543
    4. ' )' → logprob: -12.250025749206543
    5. '   ' → logprob: -12.500025749206543
    6. ')return' → logprob: -14.750025749206543
    7. '```' → logprob: -14.750025749206543
    8. '
' → logprob: -15.125025749206543
    9. '<|end|>' → logprob: -15.375025749206543
    10. '))' → logprob: -15.750025749206543

Token 417: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027271367609500885
    2. '<|end|>' → logprob: -3.652271270751953
    3. ' ' → logprob: -9.027271270751953
    4. ']' → logprob: -9.027271270751953
    5. 'Index' → logprob: -9.527271270751953
    6. '[' → logprob: -9.527271270751953
    7. '```' → logprob: -9.527271270751953
    8. 'A' → logprob: -9.902271270751953
    9. '0' → logprob: -9.902271270751953
    10. '   ' → logprob: -10.027271270751953

Token 418: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.005285461433231831
    2. ' st' → logprob: -5.255285263061523
    3. '(st' → logprob: -9.880285263061523
    4. '	st' → logprob: -16.380285263061523
    5. ' (' → logprob: -16.505285263061523
    6. '0' → logprob: -16.630285263061523
    7. ' ' → logprob: -16.755285263061523
    8. '   ' → logprob: -16.880285263061523
    9. '(' → logprob: -17.130285263061523
    10. '  ' → logprob: -17.505285263061523

Token 419: '.prod' (ID: 108433)
  Prédit: '.dat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -0.02976194955408573
    2. '.prod' → logprob: -3.529762029647827
    3. '.pro' → logprob: -12.029762268066406
    4. 'prod' → logprob: -12.529762268066406
    5. ' .' → logprob: -14.029762268066406
    6. 'dat' → logprob: -14.904762268066406
    7. '@dat' → logprob: -15.279762268066406
    8. '.' → logprob: -16.029762268066406
    9. '
' → logprob: -16.654762268066406
    10. '.datas' → logprob: -17.029762268066406

Token 420: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.583550642360933e-05
    2. '0' → logprob: -10.250036239624023
    3. ' (' → logprob: -14.875036239624023
    4. '(
' → logprob: -19.125036239624023
    5. '```' → logprob: -19.375036239624023
    6. ' ' → logprob: -20.875036239624023
    7. '1' → logprob: -21.000036239624023
    8. '((' → logprob: -21.125036239624023
    9. '   ' → logprob: -21.125036239624023
    10. 'a' → logprob: -21.375036239624023

Token 421: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -18.75
    4. '０' → logprob: -20.125
    5. '۰' → logprob: -21.0
    6. '(' → logprob: -21.875
    7. ')' → logprob: -22.75
    8. '00' → logprob: -23.0
    9. '  ' → logprob: -23.375
    10. ',' → logprob: -24.375

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040517066372558475
    2. '0' → logprob: -8.000405311584473
    3. ' ,' → logprob: -9.750405311584473
    4. 'A' → logprob: -12.250405311584473
    5. '1' → logprob: -12.625405311584473
    6. ' ' → logprob: -13.375405311584473
    7. ',A' → logprob: -14.250405311584473
    8. '(' → logprob: -15.125405311584473
    9. ')' → logprob: -15.500405311584473
    10. ',
' → logprob: -15.875405311584473

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. 'A' → logprob: -12.000007629394531
    3. ' ' → logprob: -14.000007629394531
    4. '0' → logprob: -15.000007629394531
    5. ')' → logprob: -17.87500762939453
    6. '(' → logprob: -18.00000762939453
    7. '   ' → logprob: -18.50000762939453
    8. ' A' → logprob: -19.25000762939453
    9. '```' → logprob: -19.62500762939453
    10. 'st' → logprob: -20.25000762939453

Token 424: ')' (ID: 8)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.24268312752246857
    2. '>' → logprob: -1.8676831722259521
    3. ' >=' → logprob: -3.992683172225952
    4. '==' → logprob: -4.117682933807373
    5. ')>=' → logprob: -4.992682933807373
    6. ']>=' → logprob: -4.992682933807373
    7. '[' → logprob: -5.492682933807373
    8. ' >' → logprob: -6.117682933807373
    9. '()>' → logprob: -6.742682933807373
    10. '()' → logprob: -6.742682933807373

Token 425: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.046945951879024506
    2. '>' → logprob: -3.2969460487365723
    3. '==' → logprob: -5.296946048736572
    4. ' >=' → logprob: -5.796946048736572
    5. '<=' → logprob: -8.296945571899414
    6. ' >' → logprob: -8.421945571899414
    7. '>L' → logprob: -8.546945571899414
    8. '<' → logprob: -9.421945571899414
    9. ' ==' → logprob: -10.296945571899414
    10. '<L' → logprob: -11.421945571899414

Token 426: ' LIMIT' (ID: 21457)
  Prédit: 'LIMIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIMIT' → logprob: -0.00041732576210051775
    2. '10' → logprob: -7.875417232513428
    3. ' LIMIT' → logprob: -11.000417709350586
    4. 'L' → logprob: -11.125417709350586
    5. '1' → logprob: -12.750417709350586
    6. 'int' → logprob: -13.250417709350586
    7. 'limit' → logprob: -15.250417709350586
    8. '(L' → logprob: -15.875417709350586
    9. '100' → logprob: -16.000417709350586
    10. '999' → logprob: -16.125417709350586

Token 427: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004372325260192156
    2. ':
' → logprob: -5.5043721199035645
    3. ':return' → logprob: -8.879372596740723
    4. ':System' → logprob: -9.629372596740723
    5. 'print' → logprob: -9.754372596740723
    6. ' :' → logprob: -12.004372596740723
    7. '==' → logprob: -12.754372596740723
    8. ':e' → logprob: -12.879372596740723
    9. 'or' → logprob: -13.004372596740723
    10. ':def' → logprob: -13.004372596740723

Token 428: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006390500930137932
    2. '   ' → logprob: -7.750638961791992
    3. ' print' → logprob: -8.500638961791992
    4. '	print' → logprob: -12.500638961791992
    5. '_print' → logprob: -14.875638961791992
    6. '-print' → logprob: -15.000638961791992
    7. '-' → logprob: -15.500638961791992
    8. '```' → logprob: -16.375638961791992
    9. '#print' → logprob: -16.750638961791992
    10. '.print' → logprob: -17.000638961791992

Token 429: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.704273118884885e-07
    2. '
' → logprob: -14.500000953674316
    3. 'pr' → logprob: -16.125
    4. '   ' → logprob: -17.625
    5. ' print' → logprob: -18.5
    6. 'ans' → logprob: -18.75
    7. '    
' → logprob: -19.0
    8. '-' → logprob: -19.25
    9. '
' → logprob: -19.375
    10. '```' → logprob: -19.375

Token 430: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.5776860184123507e-06
    2. ' -' → logprob: -13.75000286102295
    3. '"-' → logprob: -13.75000286102295
    4. '-print' → logprob: -15.87500286102295
    5. '-im' → logprob: -16.375001907348633
    6. ''-' → logprob: -16.750001907348633
    7. '-A' → logprob: -17.375001907348633
    8. '(-' → logprob: -17.875001907348633
    9. '\-' → logprob: -18.875001907348633
    10. '-B' → logprob: -18.875001907348633

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '2' → logprob: -18.75
    4. '１' → logprob: -18.75
    5. '11' → logprob: -20.125
    6. '10' → logprob: -20.6875
    7. '```' → logprob: -21.125
    8. '
' → logprob: -21.1875
    9. '9' → logprob: -21.375
    10. '0' → logprob: -21.625

Token 432: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006723302416503429
    2. ')
' → logprob: -5.006723403930664
    3. 'else' → logprob: -11.881723403930664
    4. '   ' → logprob: -15.131723403930664
    5. ' )' → logprob: -15.381723403930664
    6. '))' → logprob: -16.756723403930664
    7. '）' → logprob: -16.881723403930664
    8. '())' → logprob: -17.006723403930664
    9. '),' → logprob: -17.131723403930664
    10. ')
' → logprob: -17.131723403930664

Token 433: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.0280383548888494e-06
    2. 'exit' → logprob: -14.500000953674316
    3. ' else' → logprob: -15.000000953674316
    4. 'elif' → logprob: -15.375000953674316
    5. '
' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '```' → logprob: -19.875001907348633
    8. '}else' → logprob: -20.500001907348633
    9. '#else' → logprob: -21.000001907348633
    10. '_else' → logprob: -21.125001907348633

Token 434: ' quit' (ID: 27737)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -5.512236498361744e-07
    2. 'exit' → logprob: -15.375000953674316
    3. ' else' → logprob: -15.500000953674316
    4. '   ' → logprob: -18.0
    5. 'elif' → logprob: -18.0
    6. '```' → logprob: -19.875
    7. 'return' → logprob: -20.125
    8. '
' → logprob: -20.75
    9. '    
' → logprob: -21.5
    10. '_else' → logprob: -21.625

Token 435: '()

' (ID: 5874)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010771531378850341
    2. 'else' → logprob: -9.500107765197754
    3. '
' → logprob: -10.375107765197754
    4. '```' → logprob: -14.625107765197754
    5. ')
' → logprob: -15.000107765197754
    6. ' print' → logprob: -15.125107765197754
    7. ')' → logprob: -15.625107765197754
    8. '    
' → logprob: -16.000106811523438
    9. '  
' → logprob: -16.375106811523438
    10. '0' → logprob: -16.500106811523438

Token 436: 'ret' (ID: 3431)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.849109119386412e-06
    2. '```' → logprob: -12.000009536743164
    3. 'i' → logprob: -13.875009536743164
    4. 'pos' → logprob: -14.125009536743164
    5. 'for' → logprob: -14.125009536743164
    6. 'else' → logprob: -15.000009536743164
    7. 'p' → logprob: -15.375009536743164
    8. ' print' → logprob: -15.750009536743164
    9. 'idx' → logprob: -16.125009536743164
    10. '
' → logprob: -16.750009536743164

Token 437: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695172429084778
    2. '=' → logprob: -2.1269516944885254
    3. ' ' → logprob: -10.751952171325684
    4. '=int' → logprob: -13.876952171325684
    5. '＝' → logprob: -14.876952171325684
    6. ':' → logprob: -15.001952171325684
    7. '   ' → logprob: -15.876952171325684
    8. '  ' → logprob: -16.251951217651367
    9. 'print' → logprob: -16.376951217651367
    10. 'u' → logprob: -16.376951217651367

Token 438: 'ptr' (ID: 7433)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.19073952734470367
    2. 'cur' → logprob: -2.440739631652832
    3. 'p' → logprob: -3.065739631652832
    4. 'i' → logprob: -4.440739631652832
    5. 'now' → logprob: -4.440739631652832
    6. 'idx' → logprob: -4.440739631652832
    7. 'ret' → logprob: -7.065739631652832
    8. 'x' → logprob: -7.315739631652832
    9. ' cur' → logprob: -7.440739631652832
    10. 'curr' → logprob: -7.440739631652832

Token 439: '=[],' (ID: 171004)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038044363260269165
    2. ' =' → logprob: -3.2880444526672363
    3. '=int' → logprob: -13.663043975830078
    4. '＝' → logprob: -14.663043975830078
    5. '=A' → logprob: -15.413043975830078
    6. '=len' → logprob: -15.538043975830078
    7. ',' → logprob: -15.913043975830078
    8. '=sys' → logprob: -16.163043975830078
    9. '=num' → logprob: -16.538043975830078
    10. '=i' → logprob: -16.538043975830078

Token 440: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. 'A' → logprob: -13.25000286102295
    3. ' ' → logprob: -13.50000286102295
    4. '[]' → logprob: -17.500003814697266
    5. 'ptr' → logprob: -18.375003814697266
    6. '1' → logprob: -18.875003814697266
    7. '-' → logprob: -19.125003814697266
    8. '[' → logprob: -19.250003814697266
    9. 'str' → logprob: -19.625003814697266
    10. ' A' → logprob: -20.000003814697266

Token 441: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.007659397087991238
    2. ' while' → logprob: -5.007659435272217
    3. '
' → logprob: -7.757659435272217
    4. '<|end|>' → logprob: -8.132658958435059
    5. '```' → logprob: -8.507658958435059
    6. ',' → logprob: -12.507658958435059
    7. 'While' → logprob: -12.507658958435059
    8. '``' → logprob: -13.007658958435059
    9. '' → logprob: -13.007658958435059
    10. '	while' → logprob: -13.132658958435059

Token 442: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004910192918032408
    2. ' while' → logprob: -5.379909992218018
    3. '```' → logprob: -8.504910469055176
    4. '<|end|>' → logprob: -10.129910469055176
    5. '
' → logprob: -10.379910469055176
    6. '``' → logprob: -11.504910469055176
    7. 'While' → logprob: -12.379910469055176
    8. '	while' → logprob: -14.004910469055176
    9. '>' → logprob: -15.004910469055176
    10. '\
' → logprob: -15.754910469055176

Token 443: ' x' (ID: 1215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00485041132196784
    2. 'ptr' → logprob: -5.504850387573242
    3. 'A' → logprob: -7.754850387573242
    4. '_A' → logprob: -8.504850387573242
    5. ' _' → logprob: -10.379850387573242
    6. 'ret' → logprob: -10.379850387573242
    7. '_ptr' → logprob: -11.129850387573242
    8. ' ptr' → logprob: -11.504850387573242
    9. 'range' → logprob: -11.629850387573242
    10. '_;' → logprob: -11.754850387573242

Token 444: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2255842536687851
    2. ' in' → logprob: -1.6005842685699463
    3. 'n' → logprob: -9.475584030151367
    4. ',' → logprob: -10.600584030151367
    5. 'range' → logprob: -11.100584030151367
    6. ' ' → logprob: -11.475584030151367
    7. 'x' → logprob: -12.225584030151367
    8. '_in' → logprob: -12.350584030151367
    9. ',in' → logprob: -12.475584030151367
    10. '0' → logprob: -12.600584030151367

Token 445: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009242036612704396
    2. ' range' → logprob: -7.000924110412598
    3. '_' → logprob: -12.375924110412598
    4. '(range' → logprob: -12.375924110412598
    5. 're' → logprob: -13.875924110412598
    6. 'A' → logprob: -13.875924110412598
    7. '[' → logprob: -14.625924110412598
    8. 'list' → logprob: -15.125924110412598
    9. '[]' → logprob: -15.250924110412598
    10. 'r' → logprob: -15.375924110412598

Token 446: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.2132137268781662
    2. '(' → logprob: -1.8382136821746826
    3. '(B' → logprob: -3.4632136821746826
    4. 'A' → logprob: -6.963213920593262
    5. '1' → logprob: -7.588213920593262
    6. '(st' → logprob: -9.838213920593262
    7. 'B' → logprob: -10.338213920593262
    8. '(L' → logprob: -10.463213920593262
    9. '(ptr' → logprob: -11.838213920593262
    10. '0' → logprob: -13.463213920593262

Token 447: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06652596592903137
    2. '+B' → logprob: -3.566525936126709
    3. '):' → logprob: -3.691525936126709
    4. '):
' → logprob: -5.566525936126709
    5. ',' → logprob: -5.816525936126709
    6. ' +' → logprob: -6.316525936126709
    7. ',B' → logprob: -6.441525936126709
    8. 'B' → logprob: -8.066526412963867
    9. '   ' → logprob: -8.191526412963867
    10. '1' → logprob: -9.191526412963867

Token 448: '1' (ID: 16)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2023049145936966
    2. '1' → logprob: -1.7023049592971802
    3. ' B' → logprob: -8.32730484008789
    4. '(B' → logprob: -8.57730484008789
    5. '(' → logprob: -8.95230484008789
    6. 'A' → logprob: -9.57730484008789
    7. '+' → logprob: -9.70230484008789
    8. ' ' → logprob: -9.70230484008789
    9. '0' → logprob: -9.95230484008789
    10. ')' → logprob: -10.82730484008789

Token 449: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42857176065444946
    2. '):' → logprob: -1.1785717010498047
    3. '+' → logprob: -3.8035717010498047
    4. ',B' → logprob: -4.803571701049805
    5. '):
' → logprob: -5.053571701049805
    6. '   ' → logprob: -6.428571701049805
    7. ',A' → logprob: -7.928571701049805
    8. '+B' → logprob: -7.928571701049805
    9. ',len' → logprob: -8.053571701049805
    10. ',
' → logprob: -8.178571701049805

Token 450: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018893957138061523
    2. 'if' → logprob: -4.393894195556641
    3. ' if' → logprob: -5.518894195556641
    4. 'while' → logprob: -6.768894195556641
    5. 'v' → logprob: -7.518894195556641
    6. ' while' → logprob: -8.51889419555664
    7. 'p' → logprob: -9.01889419555664
    8. ' ' → logprob: -9.64389419555664
    9. 't' → logprob: -10.01889419555664
    10. 'val' → logprob: -10.14389419555664

Token 451: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1620635986328125
    2. 'nx' → logprob: -3.0370635986328125
    3. '   ' → logprob: -3.1620635986328125
    4. 'if' (adapté à ' if') → logprob: -4.0370635986328125
    5. 'next' → logprob: -4.6620635986328125
    6. 'v' → logprob: -4.9120635986328125
    7. 't' → logprob: -5.1620635986328125
    8. 'ret' → logprob: -5.2870635986328125
    9. ' nxt' → logprob: -5.9120635986328125
    10. 'p' → logprob: -6.4120635986328125

Token 452: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.8049159049987793
    2. 'x' → logprob: -1.1799159049987793
    3. 'T' → logprob: -1.4299159049987793
    4. 'ptr' → logprob: -5.929915904998779
    5. 'ret' → logprob: -6.054915904998779
    6. ' st' → logprob: -8.054916381835938
    7. ' x' → logprob: -8.429916381835938
    8. ' T' → logprob: -8.429916381835938
    9. '(T' → logprob: -9.429916381835938
    10. 'not' → logprob: -9.554916381835938

Token 453: '.prod' (ID: 108433)
  Prédit: '.prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prod' → logprob: -0.002237089676782489
    2. '.dat' → logprob: -6.127237319946289
    3. '.pro' → logprob: -10.752237319946289
    4. 'prod' → logprob: -11.377237319946289
    5. '.set' → logprob: -11.752237319946289
    6. ' .' → logprob: -12.252237319946289
    7. '.' → logprob: -13.377237319946289
    8. '.get' → logprob: -14.002237319946289
    9. '
' → logprob: -14.627237319946289
    10. ' ' → logprob: -14.877237319946289

Token 454: '(ptr' (ID: 57718)
  Prédit: '(ptr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ptr' → logprob: -0.00011975488450843841
    2. 'ptr' → logprob: -9.125120162963867
    3. '(' → logprob: -12.125120162963867
    4. '	ptr' → logprob: -13.250120162963867
    5. '(pointer' → logprob: -13.625120162963867
    6. ' (' → logprob: -14.125120162963867
    7. '(pt' → logprob: -14.375120162963867
    8. '0' → logprob: -15.250120162963867
    9. '(
' → logprob: -15.375120162963867
    10. '_ptr' → logprob: -15.625120162963867

Token 455: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1778995543718338
    2. ',' → logprob: -2.0528995990753174
    3. ',x' → logprob: -3.8028995990753174
    4. ' +' → logprob: -5.552899360656738
    5. 'x' → logprob: -5.677899360656738
    6. '+x' → logprob: -7.177899360656738
    7. 'ptr' → logprob: -7.427899360656738
    8. '==' → logprob: -7.552899360656738
    9. ')+' → logprob: -7.677899360656738
    10. '1' → logprob: -7.927899360656738

Token 456: 'ptr' (ID: 7433)
  Prédit: 'ptr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ptr' → logprob: -0.16042031347751617
    2. 'x' → logprob: -1.910420298576355
    3. ' ptr' → logprob: -8.910420417785645
    4. '	ptr' → logprob: -10.785420417785645
    5. '   ' → logprob: -10.910420417785645
    6. ' x' → logprob: -11.160420417785645
    7. 'pointer' → logprob: -12.660420417785645
    8. '(ptr' → logprob: -13.160420417785645
    9. '_ptr' → logprob: -13.410420417785645
    10. 'Ptr' → logprob: -15.160420417785645

Token 457: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01305775810033083
    2. ' +' → logprob: -4.638057708740234
    3. '+x' → logprob: -6.388057708740234
    4. ')+' → logprob: -7.138057708740234
    5. ')' → logprob: -7.763057708740234
    6. '1' → logprob: -9.388057708740234
    7. ',' → logprob: -9.513057708740234
    8. ',x' → logprob: -10.388057708740234
    9. 'x' → logprob: -10.513057708740234
    10. '<x' → logprob: -10.638057708740234

Token 458: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002809275174513459
    2. 'x' → logprob: -5.877809047698975
    3. ' ' → logprob: -13.002809524536133
    4. '   ' → logprob: -13.752809524536133
    5. ' x' → logprob: -14.252809524536133
    6. '2' → logprob: -14.752809524536133
    7. '+' → logprob: -17.002809524536133
    8. '(x' → logprob: -17.377809524536133
    9. '{x' → logprob: -18.252809524536133
    10. ')x' → logprob: -18.627809524536133

Token 459: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2726973295211792
    2. ')>' → logprob: -1.7726973295211792
    3. ')<=' → logprob: -3.3976974487304688
    4. ')==' → logprob: -3.8976974487304688
    5. '>' → logprob: -5.522697448730469
    6. ' )' → logprob: -5.897697448730469
    7. ' >' → logprob: -6.147697448730469
    8. ')>=' → logprob: -6.397697448730469
    9. ')<' → logprob: -6.522697448730469
    10. '==' → logprob: -7.022697448730469

Token 460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.250017166137695
    3. 'st' → logprob: -12.750017166137695
    4. 't' → logprob: -15.000017166137695
    5. '   ' → logprob: -15.625017166137695
    6. 'x' → logprob: -15.750017166137695
    7. 'ret' → logprob: -17.125017166137695
    8. '
' → logprob: -17.250017166137695
    9. '0' → logprob: -17.375017166137695
    10. 'print' → logprob: -17.500017166137695

Token 461: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07910238206386566
    2. ' ==' → logprob: -2.8291022777557373
    3. '>' → logprob: -5.079102516174316
    4. '<=' → logprob: -5.204102516174316
    5. '!=' → logprob: -6.079102516174316
    6. '>=' → logprob: -6.954102516174316
    7. ' >' → logprob: -7.079102516174316
    8. ' <=' → logprob: -7.704102516174316
    9. '<' → logprob: -8.204102516174316
    10. ' !=' → logprob: -8.454102516174316

Token 462: 'st' (ID: 302)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00026991849881596863
    2. 'st' → logprob: -8.875269889831543
    3. ' x' → logprob: -9.625269889831543
    4. '0' → logprob: -10.375269889831543
    5. 'LIMIT' → logprob: -11.000269889831543
    6. 'T' → logprob: -12.125269889831543
    7. 'ret' → logprob: -12.750269889831543
    8. 'A' → logprob: -13.250269889831543
    9. '   ' → logprob: -13.750269889831543
    10. 'ptr' → logprob: -14.000269889831543

Token 463: '.prod' (ID: 108433)
  Prédit: '.prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prod' → logprob: -2.2603901015827432e-05
    2. 'prod' → logprob: -11.750022888183594
    3. '.dat' → logprob: -12.500022888183594
    4. '.set' → logprob: -12.750022888183594
    5. ' .' → logprob: -13.750022888183594
    6. 'x' → logprob: -13.875022888183594
    7. '.proc' → logprob: -14.000022888183594
    8. '.ret' → logprob: -14.000022888183594
    9. '```' → logprob: -14.000022888183594
    10. 't' → logprob: -14.375022888183594

Token 464: '(x' (ID: 4061)
  Prédit: '(ptr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ptr' → logprob: -0.3146813213825226
    2. 'ptr' → logprob: -1.3146812915802002
    3. 'x' → logprob: -6.939681529998779
    4. ' ptr' → logprob: -8.064681053161621
    5. '0' → logprob: -10.064681053161621
    6. '(x' → logprob: -10.189681053161621
    7. '(' → logprob: -10.689681053161621
    8. '	ptr' → logprob: -11.064681053161621
    9. '(pointer' → logprob: -12.564681053161621
    10. 'pointer' → logprob: -12.564681053161621

Token 465: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003280751989223063
    2. ' ,' → logprob: -9.125328063964844
    3. ',x' → logprob: -10.125328063964844
    4. '(ptr' → logprob: -10.250328063964844
    5. 'ptr' → logprob: -10.375328063964844
    6. ',p' → logprob: -11.125328063964844
    7. ',
' → logprob: -11.625328063964844
    8. ')' → logprob: -11.750328063964844
    9. ',+' → logprob: -11.875328063964844
    10. ')+' → logprob: -12.000328063964844

Token 466: '+' (ID: 10)
  Prédit: ')-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.6806953549385071
    2. ')' → logprob: -2.1806952953338623
    3. '):' → logprob: -2.3056952953338623
    4. '+' → logprob: -2.3056952953338623
    5. ',' → logprob: -2.8056952953338623
    6. '-' → logprob: -2.8056952953338623
    7. '):
' → logprob: -3.4306952953338623
    8. ')==' → logprob: -4.930695533752441
    9. ')+' → logprob: -5.180695533752441
    10. ')>' → logprob: -5.930695533752441

Token 467: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '+' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.000001907348633
    4. '```' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.312501907348633
    6. '11' → logprob: -18.437501907348633
    7. 'x' → logprob: -18.625001907348633
    8. '{' → logprob: -18.625001907348633
    9. '１' → logprob: -18.937501907348633
    10. '0' → logprob: -19.125001907348633

Token 468: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06724312156438828
    2. ':' → logprob: -3.3172430992126465
    3. '):' → logprob: -3.9422430992126465
    4. ' :' → logprob: -5.8172430992126465
    5. ' or' → logprob: -6.1922430992126465
    6. 'and' → logprob: -6.4422430992126465
    7. ' ):' → logprob: -6.4422430992126465
    8. ')' → logprob: -7.4422430992126465
    9. '):
' → logprob: -8.692243576049805
    10. ':
' → logprob: -8.942243576049805

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00539122661575675
    2. '   ' → logprob: -5.7553911209106445
    3. ' ret' → logprob: -7.1303911209106445
    4. '    ' → logprob: -7.7553911209106445
    5. ',' → logprob: -8.380391120910645
    6. ' print' → logprob: -8.880391120910645
    7. ':' → logprob: -9.255391120910645
    8. '	' → logprob: -9.505391120910645
    9. ' if' → logprob: -9.630391120910645
    10. ' and' → logprob: -9.880391120910645

Token 470: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.020381761714816093
    2. '   ' → logprob: -4.270381927490234
    3. 'ptr' → logprob: -5.270381927490234
    4. ' ret' → logprob: -6.895381927490234
    5. 'print' → logprob: -11.145381927490234
    6. '	ret' → logprob: -11.270381927490234
    7. ' ptr' → logprob: -12.145381927490234
    8. ' ' → logprob: -12.520381927490234
    9. 'prt' → logprob: -12.770381927490234
    10. '	ptr' → logprob: -13.145381927490234

Token 471: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005840110243298113
    2. '.' → logprob: -7.500584125518799
    3. ' .' → logprob: -10.50058364868164
    4. '.app' → logprob: -13.00058364868164
    5. '.extend' → logprob: -14.37558364868164
    6. '.push' → logprob: -16.00058364868164
    7. '.ap' → logprob: -16.25058364868164
    8. 'append' → logprob: -16.25058364868164
    9. '.Append' → logprob: -16.37558364868164
    10. '   ' → logprob: -17.00058364868164

Token 472: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02334272861480713
    2. '=[' → logprob: -3.7733426094055176
    3. '[' → logprob: -9.398343086242676
    4. '=['' → logprob: -11.898343086242676
    5. '.append' → logprob: -12.523343086242676
    6. '=["' → logprob: -13.898343086242676
    7. ' =' → logprob: -14.023343086242676
    8. ' [' → logprob: -14.773343086242676
    9. ' =[' → logprob: -14.773343086242676
    10. '=[
' → logprob: -15.148343086242676

Token 473: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5001850724220276
    2. 'str' → logprob: -1.0001850128173828
    3. 'chr' → logprob: -3.875185012817383
    4. 'ptr' → logprob: -6.250185012817383
    5. 'T' → logprob: -6.500185012817383
    6. ' str' → logprob: -7.625185012817383
    7. ' x' → logprob: -7.750185012817383
    8. 'A' → logprob: -8.125185012817383
    9. '(x' → logprob: -9.375185012817383
    10. ''x' → logprob: -9.625185012817383

Token 474: '-p' (ID: 3161)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.08629295229911804
    2. '       ' → logprob: -3.0862929821014404
    3. ']' → logprob: -3.5862929821014404
    4. ',' → logprob: -5.336292743682861
    5. ')
' → logprob: -6.336292743682861
    6. ';' → logprob: -6.836292743682861
    7. ']
' → logprob: -7.961292743682861
    8. '   ' → logprob: -8.08629322052002
    9. '
' → logprob: -8.58629322052002
    10. ' ]
' → logprob: -8.71129322052002

Token 475: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -2.2007883671903983e-05
    2. 'r' → logprob: -11.000021934509277
    3. 't' → logprob: -13.000021934509277
    4. '1' → logprob: -13.000021934509277
    5. '<tr' → logprob: -15.500021934509277
    6. '```' → logprob: -16.375022888183594
    7. 'rt' → logprob: -16.500022888183594
    8. '[' → logprob: -16.625022888183594
    9. 'тр' → logprob: -16.875022888183594
    10. ' ' → logprob: -17.375022888183594

Token 476: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05818278342485428
    2. ']
' → logprob: -3.433182716369629
    3. ' ]' → logprob: -3.933182716369629
    4. ' ]
' → logprob: -6.183182716369629
    5. '+' → logprob: -6.558182716369629
    6. '];' → logprob: -8.433182716369629
    7. ')' → logprob: -8.558182716369629
    8. ']+' → logprob: -9.058182716369629
    9. '   ' → logprob: -9.308182716369629
    10. ';' → logprob: -9.308182716369629

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10283353924751282
    2. 'ptr' → logprob: -2.3528335094451904
    3. '   ' → logprob: -6.4778337478637695
    4. ' ptr' → logprob: -7.4778337478637695
    5. '	ptr' → logprob: -8.10283374786377
    6. '           ' → logprob: -9.47783374786377
    7. '
' → logprob: -10.10283374786377
    8. 'print' → logprob: -10.10283374786377
    9. 'pointer' → logprob: -11.60283374786377
    10. '_ptr' → logprob: -11.72783374786377

Token 478: ' ptr' (ID: 23266)
  Prédit: 'ptr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ptr' (adapté à ' ptr') → logprob: -6.825890159234405e-05
    2. '   ' → logprob: -10.250068664550781
    3. ' ptr' → logprob: -10.500068664550781
    4. '	ptr' → logprob: -12.500068664550781
    5. '       ' → logprob: -14.250068664550781
    6. '(ptr' → logprob: -14.625068664550781
    7. 'break' → logprob: -16.00006866455078
    8. '
' → logprob: -16.62506866455078
    9. 'prt' → logprob: -16.62506866455078
    10. '_ptr' → logprob: -16.75006866455078

Token 479: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01120485458523035
    2. '=x' → logprob: -4.511204719543457
    3. ' =' → logprob: -8.761204719543457
    4. '+=' → logprob: -16.011205673217773
    5. '=
' → logprob: -16.136205673217773
    6. '=`' → logprob: -17.386205673217773
    7. '＝' → logprob: -17.511205673217773
    8. '=}' → logprob: -18.386205673217773
    9. '=s' → logprob: -18.636205673217773
    10. '=n' → logprob: -18.761205673217773

Token 480: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01254084799438715
    2. '   ' → logprob: -4.512540817260742
    3. '       ' → logprob: -7.512540817260742
    4. ' print' → logprob: -7.887540817260742
    5. 'for' → logprob: -8.262540817260742
    6. '    ' → logprob: -9.262540817260742
    7. '```' → logprob: -9.762540817260742
    8. 'if' → logprob: -10.012540817260742
    9. ' for' → logprob: -10.637540817260742
    10. 'ptr' → logprob: -10.637540817260742

Token 481: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2335316389799118
    2. 'for' → logprob: -1.6085315942764282
    3. ' for' → logprob: -5.858531475067139
    4. '<|end|>' → logprob: -5.858531475067139
    5. '   ' → logprob: -6.483531475067139
    6. '[' → logprob: -8.108531951904297
    7. 'if' → logprob: -8.858531951904297
    8. '```' → logprob: -9.358531951904297
    9. ')' → logprob: -9.483531951904297
    10. ' print' → logprob: -9.483531951904297

Token 482: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.01762770488858223
    2. '('' → logprob: -4.267627716064453
    3. '(sum' → logprob: -6.142627716064453
    4. '("' → logprob: -6.892627716064453
    5. '(ret' → logprob: -8.892627716064453
    6. '(' → logprob: -9.767627716064453
    7. '(*(' → logprob: -9.892627716064453
    8. '(len' → logprob: -10.142627716064453
    9. 'sum' → logprob: -13.142627716064453
    10. '((*' → logprob: -13.392627716064453

Token 483: 'ret' (ID: 3431)
  Prédit: 'ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -2.935296834039036e-06
    2. ' ret' → logprob: -12.75000286102295
    3. '(ret' → logprob: -19.000003814697266
    4. 'rets' → logprob: -22.875003814697266
    5. '$ret' → logprob: -23.125003814697266
    6. 're' → logprob: -23.750003814697266
    7. '	ret' → logprob: -24.000003814697266
    8. '-ret' → logprob: -26.000003814697266
    9. 'retro' → logprob: -26.250003814697266
    10. 'retval' → logprob: -26.375003814697266

Token 484: ')' (ID: 8)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 482
Tokens correctement prédits (1ère position, stricte): 217
Tokens correctement prédits (1ère position, avec adaptation): 231
Tokens correctement prédits (top 10): 403
Précision stricte (1ère position): 45.02%
Précision adaptée (1ère position): 47.93%
Précision (top 10): 83.61%
================================================================================
