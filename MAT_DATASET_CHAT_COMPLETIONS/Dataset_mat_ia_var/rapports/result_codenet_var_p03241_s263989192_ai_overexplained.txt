================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Cette fonction correspond à la résolution du problème D de l'ABC112 sur AtCoder.
# Le but est, étant donnés deux entiers N et M, de trouver le plus grand entier d 
# tel que d soit un diviseur de M et que M // d >= N.

def abc112_d():
    # On commence par lire l'entrée standard.
    # La fonction input() lit une ligne entière tapée par l'utilisateur au clavier,
    # qui est ensuite découpée en une liste de chaînes de caractères par split(),
    # puis chaque élément de cette liste est converti en entier par map(int, ...)
    # Le résultat final est stocké par décomposition dans N et M.
    N, M = map(int, input().split())

    # On procède à la définition d'une fonction imbriquée appelée divisor qui prend en argument un entier n.
    # Cette fonction renverra la liste de tous les diviseurs positifs de n.
    def divisor(n):
        # Début de la fonction divisor
        # Initialisation d'une liste vide qui va contenir les diviseurs trouvés.
        arr = []
        # On va parcourir tous les entiers i de 1 jusqu'à racine carrée de n (borne supérieure incluse)
        # Le but est d'optimiser le nombre d'itérations. Pour chaque i, si i divise n,
        # alors (n // i) est aussi un diviseur de n.
        for i in range(1, int(n**0.5) + 1):
            # On vérifie si i est un diviseur de n, c'est-à-dire si le reste de la division de n par i est nul.
            if n % i == 0:
                # Si oui, on ajoute i à la liste des diviseurs.
                arr.append(i)
                # On ajoute aussi le "diviseur miroir", à savoir n // i
                arr.append(n // i)
        # On retourne la liste arr contenant potentiellement des doublons si n est un carré parfait
        # et pas forcément triée.
        return arr

    # On commence par définir la variable de résultat ans, initialisée à 1.
    ans = 1
    # Pour chaque diviseur d de M (la fonction divisor renvoie tous les diviseurs de M)
    for d in divisor(M):
        # On s'assure que si on divise M par d, le résultat (qui est forcément un entier, car d divise M),
        # est supérieur ou égal à N.
        if M // d >= N:
            # On met à jour la valeur de ans pour retenir le maximum entre la valeur actuelle de ans et d.
            ans = max(d, ans)
    # Après avoir passé tous les diviseurs en revue, on affiche la valeur finale de ans.
    print(ans)

# Appel de la fonction principale pour lancer le programme.
abc112_d()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Cette' (ID: 27383)
  → Token d'amorce (pas de prédiction)

Token 2: ' fonction' (ID: 17610)
  → Token d'amorce (pas de prédiction)

Token 3: ' correspond' (ID: 11095)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4451720118522644
    2. '(' → logprob: -1.5701720714569092
    3. ' ' → logprob: -2.195172071456909
    4. 'def' → logprob: -4.19517183303833
    5. 's' → logprob: -4.69517183303833
    6. ' _' → logprob: -6.07017183303833
    7. ' ' → logprob: -6.19517183303833
    8. ' est' → logprob: -6.19517183303833
    9. ' (' → logprob: -6.32017183303833
    10. ' def' → logprob: -6.44517183303833

Token 4: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.02223072573542595
    2. ' ' → logprob: -4.647230625152588
    3. ' a' → logprob: -5.897230625152588
    4. '_' → logprob: -5.897230625152588
    5. 'à' → logprob: -6.022230625152588
    6. ' au' → logprob: -6.147230625152588
    7. 's' → logprob: -7.272230625152588
    8. '_a' → logprob: -7.647230625152588
    9. 'a' → logprob: -8.397231101989746
    10. '  ' → logprob: -8.647231101989746

Token 5: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.3569249212741852
    2. 'la' → logprob: -1.3569248914718628
    3. ' une' → logprob: -3.8569250106811523
    4. ' la' → logprob: -4.981925010681152
    5. 'l' → logprob: -5.106925010681152
    6. 'def' → logprob: -6.106925010681152
    7. 'à' → logprob: -6.606925010681152
    8. 'un' → logprob: -6.856925010681152
    9. '```' → logprob: -7.231925010681152
    10. '"""' → logprob: -7.356925010681152

Token 6: ' résolution' (ID: 147402)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -1.2911344766616821
    2. 'fonction' → logprob: -1.2911344766616821
    3. 'dé' → logprob: -1.7911344766616821
    4. 'def' → logprob: -1.9161344766616821
    5. 's' → logprob: -3.2911343574523926
    6. ' ' → logprob: -3.4161343574523926
    7. '#' → logprob: -3.4161343574523926
    8. 'su' → logprob: -5.541134357452393
    9. 'validation' → logprob: -5.791134357452393
    10. 'function' → logprob: -5.791134357452393

Token 7: ' du' (ID: 1462)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015104713849723339
    2. ' ' → logprob: -5.1401047706604
    3. ' d' → logprob: -5.7651047706604
    4. '_de' → logprob: -6.1401047706604
    5. ' de' → logprob: -6.5151047706604
    6. '_d' → logprob: -7.2651047706604
    7. ' _' → logprob: -7.6401047706604
    8. '_des' → logprob: -8.640104293823242
    9. 'd' → logprob: -8.890104293823242
    10. 'def' → logprob: -9.265104293823242

Token 8: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.6526275873184204
    2. 'pro' → logprob: -1.0276275873184204
    3. '#' → logprob: -2.652627468109131
    4. 's' → logprob: -4.652627468109131
    5. 'con' → logprob: -4.652627468109131
    6. ' #' → logprob: -5.027627468109131
    7. ' probl' → logprob: -5.527627468109131
    8. ' ' → logprob: -6.027627468109131
    9. ' conflit' → logprob: -6.152627468109131
    10. '_pro' → logprob: -6.652627468109131

Token 9: ' D' (ID: 415)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6784736514091492
    2. ' def' → logprob: -0.9284736514091492
    3. ' de' → logprob: -3.053473711013794
    4. ' d' → logprob: -4.178473472595215
    5. ':' → logprob: -4.928473472595215
    6. ' ' → logprob: -5.553473472595215
    7. '_' → logprob: -5.678473472595215
    8. '\' → logprob: -5.678473472595215
    9. '```' → logprob: -5.678473472595215
    10. ',' → logprob: -6.178473472595215

Token 10: ' de' (ID: 334)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.05566421523690224
    2. 'def' → logprob: -3.805664300918579
    3. 'e' → logprob: -4.3056640625
    4. 'éf' → logprob: -4.6806640625
    5. 'é' → logprob: -5.1806640625
    6. '\' → logprob: -6.8056640625
    7. '_' → logprob: -7.0556640625
    8. '```' → logprob: -7.5556640625
    9. 'efi' → logprob: -8.5556640625
    10. ' e' → logprob: -8.9306640625

Token 11: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8159787058830261
    2. ' programmation' → logprob: -1.815978765487671
    3. 'la' → logprob: -1.815978765487671
    4. 'code' → logprob: -2.690978765487671
    5. 'Code' → logprob: -2.940978765487671
    6. ' Code' → logprob: -3.690978765487671
    7. '#' → logprob: -4.190978527069092
    8. ' la' → logprob: -4.315978527069092
    9. ' code' → logprob: -4.690978527069092
    10. 'programm' → logprob: -4.690978527069092

Token 12: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.6885963678359985
    2. 'a' → logprob: -1.6885963678359985
    3. 'e' → logprob: -1.6885963678359985
    4. ''é' → logprob: -2.313596248626709
    5. ''année' → logprob: -3.063596248626709
    6. ''É' → logprob: -3.563596248626709
    7. 'é' → logprob: -3.688596248626709
    8. ''article' → logprob: -3.813596248626709
    9. ''école' → logprob: -3.938596248626709
    10. ''ex' → logprob: -4.063596248626709

Token 13: 'ABC' (ID: 44197)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.4338316917419434
    2. 'Olymp' → logprob: -1.6838316917419434
    3. 'ol' → logprob: -1.8088316917419434
    4. 'UV' → logprob: -2.6838316917419434
    5. 'é' → logprob: -2.8088316917419434
    6. 'a' → logprob: -3.0588316917419434
    7. 'année' → logprob: -3.1838316917419434
    8. 'algorithm' → logprob: -3.6838316917419434
    9. 'enseignement' → logprob: -3.8088316917419434
    10. 'én' → logprob: -4.433831691741943

Token 14: '112' (ID: 12307)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.051388517022132874
    2. '_' → logprob: -4.301388740539551
    3. ':' → logprob: -4.426388740539551
    4. ' def' → logprob: -4.676388740539551
    5. ' :' → logprob: -5.926388740539551
    6. '```' → logprob: -5.926388740539551
    7. '\' → logprob: -6.301388740539551
    8. ' de' → logprob: -6.426388740539551
    9. ':def' → logprob: -6.801388740539551
    10. ' ' → logprob: -6.801388740539551

Token 15: ' sur' (ID: 1512)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002627500332891941
    2. 'd' → logprob: -6.752627372741699
    3. '```' → logprob: -7.252627372741699
    4. ' def' → logprob: -8.0026273727417
    5. '_' → logprob: -9.5026273727417
    6. ':' → logprob: -9.5026273727417
    7. ':def' → logprob: -9.7526273727417
    8. 'de' → logprob: -10.0026273727417
    9. '``' → logprob: -10.1276273727417
    10. '\' → logprob: -10.7526273727417

Token 16: ' At' (ID: 3604)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.6900766491889954
    2. ' At' → logprob: -0.9400766491889954
    3. ' at' → logprob: -3.0650765895843506
    4. ' https' → logprob: -3.9400765895843506
    5. ' a' → logprob: -4.81507682800293
    6. 'a' → logprob: -4.81507682800293
    7. ' code' → logprob: -4.94007682800293
    8. ' abc' → logprob: -5.31507682800293
    9. 'abc' → logprob: -5.56507682800293
    10. 'At' → logprob: -5.69007682800293

Token 17: 'Coder' (ID: 72183)
  Prédit: 'coder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coder' → logprob: -0.10343974828720093
    2. 'Coder' → logprob: -2.3534398078918457
    3. 'c' → logprob: -6.478439807891846
    4. 'C' → logprob: -6.978439807891846
    5. '_c' → logprob: -8.103439331054688
    6. 'corder' → logprob: -8.853439331054688
    7. 'cod' → logprob: -9.228439331054688
    8. 'code' → logprob: -9.728439331054688
    9. 'COD' → logprob: -9.853439331054688
    10. '```' → logprob: -10.978439331054688

Token 18: '.
' (ID: 558)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31936728954315186
    2. 'def' → logprob: -1.3193672895431519
    3. 'de' → logprob: -5.444367408752441
    4. ' de' → logprob: -7.444367408752441
    5. ':' → logprob: -7.569367408752441
    6. '```' → logprob: -8.069367408752441
    7. ' d' → logprob: -9.194367408752441
    8. ':def' → logprob: -9.444367408752441
    9. ' def' → logprob: -9.569367408752441
    10. '`' → logprob: -10.819367408752441

Token 19: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14076820015907288
    2. 'd' → logprob: -2.14076828956604
    3. '```' → logprob: -5.140768051147461
    4. 'de' → logprob: -5.265768051147461
    5. ' de' → logprob: -6.515768051147461
    6. ' def' → logprob: -8.015768051147461
    7. '\' → logprob: -8.265768051147461
    8. '``' → logprob: -9.015768051147461
    9. 'dé' → logprob: -9.140768051147461
    10. ' 
' → logprob: -9.515768051147461

Token 20: ' Le' (ID: 2018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24265123903751373
    2. ' def' → logprob: -2.3676512241363525
    3. ' d' → logprob: -2.7426512241363525
    4. 'd' → logprob: -2.9926512241363525
    5. ' de' → logprob: -5.117651462554932
    6. 'de' → logprob: -6.992651462554932
    7. ' ' → logprob: -8.992650985717773
    8. 'import' → logprob: -9.867650985717773
    9. ' 
' → logprob: -10.867650985717773
    10. ' ```' → logprob: -10.867650985717773

Token 21: ' but' (ID: 889)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15440335869789124
    2. ' def' → logprob: -3.5294034481048584
    3. 'a' → logprob: -4.029403209686279
    4. 's' → logprob: -4.154403209686279
    5. 'd' → logprob: -4.654403209686279
    6. ' input' → logprob: -4.654403209686279
    7. 'n' → logprob: -5.029403209686279
    8. '_' → logprob: -5.154403209686279
    9. ' d' → logprob: -5.279403209686279
    10. ' ' → logprob: -5.279403209686279

Token 22: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8153162002563477
    2. ' est' → logprob: -1.0653162002563477
    3. '=' → logprob: -2.0653162002563477
    4. ' de' → logprob: -3.0653162002563477
    5. 'est' → logprob: -3.8153162002563477
    6. 'de' → logprob: -5.315316200256348
    7. ' ' → logprob: -5.315316200256348
    8. ' is' → logprob: -5.940316200256348
    9. ' :' → logprob: -6.690316200256348
    10. ':' → logprob: -6.940316200256348

Token 23: ',' (ID: 11)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1560617983341217
    2. ' d' → logprob: -2.031061887741089
    3. 'd' → logprob: -5.03106164932251
    4. 'de' → logprob: -5.15606164932251
    5. ' ' → logprob: -7.78106164932251
    6. 'def' → logprob: -9.406062126159668
    7. '   ' → logprob: -9.406062126159668
    8. '#' → logprob: -9.531062126159668
    9. ' #' → logprob: -9.656062126159668
    10. ',' → logprob: -10.281062126159668

Token 24: ' étant' (ID: 47869)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.031089935451745987
    2. ' d' → logprob: -4.031089782714844
    3. ' de' → logprob: -4.406089782714844
    4. ' ' → logprob: -8.406089782714844
    5. ' #' → logprob: -9.031089782714844
    6. '  ' → logprob: -9.656089782714844
    7. '#' → logprob: -9.781089782714844
    8. 'def' → logprob: -10.531089782714844
    9. ' à' → logprob: -10.531089782714844
    10. 'd' → logprob: -10.531089782714844

Token 25: ' donn' (ID: 20414)
  Prédit: ' donné'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' donné' → logprob: -0.0034121328499168158
    2. ' donnée' → logprob: -6.378412246704102
    3. 'd' → logprob: -7.753412246704102
    4. ' ' → logprob: -7.753412246704102
    5. 'don' → logprob: -8.128412246704102
    6. ' de' → logprob: -9.253412246704102
    7. ' données' → logprob: -9.378412246704102
    8. 'de' → logprob: -9.628412246704102
    9. '  ' → logprob: -9.628412246704102
    10. ' given' → logprob: -9.878412246704102

Token 26: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -2.963691804325208e-05
    2. 'ée' → logprob: -11.250029563903809
    3. 'e' → logprob: -11.375029563903809
    4. '#' → logprob: -13.125029563903809
    5. 'és' → logprob: -13.250029563903809
    6. ' é' → logprob: -15.000029563903809
    7. ''' → logprob: -15.250029563903809
    8. ''é' → logprob: -15.375029563903809
    9. 'è' → logprob: -16.000030517578125
    10. '&eacute' → logprob: -16.500030517578125

Token 27: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8266244530677795
    2. ' des' → logprob: -1.7016243934631348
    3. ' les' → logprob: -1.8266243934631348
    4. 'les' → logprob: -1.9516243934631348
    5. ' l' → logprob: -4.076624393463135
    6. ' deux' → logprob: -4.076624393463135
    7. 'des' → logprob: -4.826624393463135
    8. ' la' → logprob: -5.201624393463135
    9. '  ' → logprob: -5.451624393463135
    10. ' une' → logprob: -5.576624393463135

Token 28: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -1.2210540771484375
    2. ' ent' → logprob: -1.4710540771484375
    3. ' tableaux' → logprob: -1.8460540771484375
    4. ' strings' → logprob: -2.0960540771484375
    5. 'ent' → logprob: -2.5960540771484375
    6. ' chaînes' → logprob: -3.2210540771484375
    7. ' listes' → logprob: -3.9710540771484375
    8. ' points' → logprob: -4.8460540771484375
    9. ' ' → logprob: -4.9710540771484375
    10. ' espaces' → logprob: -4.9710540771484375

Token 29: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.39826563000679016
    2. 'r' → logprob: -1.2732656002044678
    3. 'ières' → logprob: -4.023265838623047
    4. 'i' → logprob: -4.148265838623047
    5. 'ités' → logprob: -5.773265838623047
    6. 'ié' → logprob: -6.148265838623047
    7. 'é' → logprob: -6.273265838623047
    8. 'ier' → logprob: -6.648265838623047
    9. 'rée' → logprob: -6.773265838623047
    10. 'ré' → logprob: -6.898265838623047

Token 30: ' N' (ID: 478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5852646231651306
    2. ' a' → logprob: -1.2102646827697754
    3. ' ' → logprob: -2.0852646827697754
    4. ',' → logprob: -4.460264682769775
    5. ' ,' → logprob: -6.085264682769775
    6. ' n' → logprob: -6.210264682769775
    7. 'n' → logprob: -6.710264682769775
    8. ' x' → logprob: -6.835264682769775
    9. 'x' → logprob: -7.585264682769775
    10. ' s' → logprob: -8.210264205932617

Token 31: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31928619742393494
    2. ' et' → logprob: -1.5692862272262573
    3. ' ' → logprob: -3.4442861080169678
    4. 'et' → logprob: -3.6942861080169678
    5. ' ,' → logprob: -5.069286346435547
    6. ' M' → logprob: -7.194286346435547
    7. 's' → logprob: -8.694286346435547
    8. ',M' → logprob: -8.819286346435547
    9. 'a' → logprob: -8.944286346435547
    10. ' K' → logprob: -9.069286346435547

Token 32: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -1.0357611179351807
    2. 'K' → logprob: -1.5357611179351807
    3. ' M' → logprob: -1.5357611179351807
    4. 'M' → logprob: -1.6607611179351807
    5. 'X' → logprob: -4.785760879516602
    6. ' ' → logprob: -5.410760879516602
    7. 'x' → logprob: -5.660760879516602
    8. ' X' → logprob: -6.035760879516602
    9. 'A' → logprob: -6.660760879516602
    10. 'a' → logprob: -7.410760879516602

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0062481192871928215
    2. ' ,' → logprob: -5.5062479972839355
    3. 'def' → logprob: -7.3812479972839355
    4. ' ' → logprob: -7.7562479972839355
    5. ' de' → logprob: -8.131248474121094
    6. '#' → logprob: -8.631248474121094
    7. 's' → logprob: -9.006248474121094
    8. 'de' → logprob: -9.756248474121094
    9. ')' → logprob: -9.756248474121094
    10. ' d' → logprob: -9.881248474121094

Token 34: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2763884961605072
    2. ' de' → logprob: -2.40138840675354
    3. ' d' → logprob: -2.40138840675354
    4. ',' → logprob: -3.02638840675354
    5. 'def' → logprob: -5.526388645172119
    6. ' ,' → logprob: -6.026388645172119
    7. 'de' → logprob: -6.276388645172119
    8. ' def' → logprob: -7.526388645172119
    9. '#' → logprob: -7.776388645172119
    10. '  ' → logprob: -7.776388645172119

Token 35: ' trouver' (ID: 23195)
  Prédit: ' trouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.9021582007408142
    2. ' déterminer' → logprob: -1.277158260345459
    3. ' calcul' → logprob: -1.527158260345459
    4. ' compter' → logprob: -4.027158260345459
    5. ' lire' → logprob: -5.027158260345459
    6. 'calcul' → logprob: -5.152158260345459
    7. 's' → logprob: -5.277158260345459
    8. ' résoudre' → logprob: -5.402158260345459
    9. ' ' → logprob: -5.527158260345459
    10. ' créer' → logprob: -5.652158260345459

Token 36: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2776532471179962
    2. ' l' → logprob: -2.902653217315674
    3. ' la' → logprob: -2.902653217315674
    4. ' ' → logprob: -3.152653217315674
    5. 'l' → logprob: -3.277653217315674
    6. ' un' → logprob: -4.777653217315674
    7. '  ' → logprob: -4.902653217315674
    8. ' le' → logprob: -4.902653217315674
    9. ' les' → logprob: -5.277653217315674
    10. ' une' → logprob: -5.277653217315674

Token 37: ' plus' (ID: 2932)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.050052523612976074
    2. 'nombre' → logprob: -3.9250526428222656
    3. ' ' → logprob: -4.675052642822266
    4. ' plus' → logprob: -4.925052642822266
    5. '_' → logprob: -5.550052642822266
    6. ' nombres' → logprob: -6.550052642822266
    7. '```' → logprob: -7.175052642822266
    8. ' maximum' → logprob: -7.487552642822266
    9. 'plus' → logprob: -7.612552642822266
    10. ' code' → logprob: -7.862552642822266

Token 38: ' grand' (ID: 6363)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8788042068481445
    2. '_' → logprob: -1.2538042068481445
    3. 'grand' → logprob: -1.8788042068481445
    4. ' grand' → logprob: -2.3788042068481445
    5. ' _' → logprob: -4.1288042068481445
    6. ' long' → logprob: -4.5038042068481445
    7. '```' → logprob: -5.0038042068481445
    8. 's' → logprob: -5.3788042068481445
    9. 'long' → logprob: -5.8788042068481445
    10. 'court' → logprob: -6.3788042068481445

Token 39: ' entier' (ID: 80473)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19691073894500732
    2. ' ' → logprob: -1.9469107389450073
    3. 'div' → logprob: -4.571910858154297
    4. ' espace' → logprob: -5.071910858154297
    5. ' _' → logprob: -5.571910858154297
    6. 'es' → logprob: -5.696910858154297
    7. '```' → logprob: -6.321910858154297
    8. 'nombre' → logprob: -6.321910858154297
    9. 'esp' → logprob: -7.071910858154297
    10. 'ent' → logprob: -7.196910858154297

Token 40: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4150950908660889
    2. ' X' → logprob: -1.5400950908660889
    3. ' K' → logprob: -1.6650950908660889
    4. 'X' → logprob: -1.9150950908660889
    5. 'K' → logprob: -3.165095090866089
    6. 'div' → logprob: -3.290095090866089
    7. ' P' → logprob: -3.415095090866089
    8. 'x' → logprob: -4.040095329284668
    9. 'P' → logprob: -4.040095329284668
    10. ' x' → logprob: -5.040095329284668

Token 41: ' 
' (ID: 793)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5082250237464905
    2. 'e' → logprob: -1.1332249641418457
    3. 'u' → logprob: -2.8832249641418457
    4. 'i' → logprob: -5.008224964141846
    5. 'iv' → logprob: -5.633224964141846
    6. ''i' → logprob: -5.758224964141846
    7. ' ' → logprob: -6.383224964141846
    8. ''e' → logprob: -7.133224964141846
    9. ''espace' → logprob: -7.258224964141846
    10. '   ' → logprob: -7.758224964141846

Token 42: '#' (ID: 2)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10347995907068253
    2. 'iv' → logprob: -3.8534798622131348
    3. ' tel' → logprob: -3.9784798622131348
    4. 'u' → logprob: -3.9784798622131348
    5. 'e' → logprob: -5.228479862213135
    6. ''espace' → logprob: -5.478479862213135
    7. ' qui' → logprob: -5.603479862213135
    8. ''é' → logprob: -6.353479862213135
    9. ' ' → logprob: -6.353479862213135
    10. ''un' → logprob: -6.478479862213135

Token 43: ' tel' (ID: 10716)
  Prédit: ' tel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tel' → logprob: -1.132824182510376
    2. ' ' → logprob: -1.507824182510376
    3. ' qui' → logprob: -1.632824182510376
    4. ''' → logprob: -1.757824182510376
    5. 'qui' → logprob: -3.757824182510376
    6. ' t' → logprob: -4.632823944091797
    7. '```' → logprob: -5.132823944091797
    8. '   ' → logprob: -5.507823944091797
    9. ''espace' → logprob: -5.507823944091797
    10. ' such' → logprob: -5.507823944091797

Token 44: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.0733189508318901
    2. ' ' → logprob: -3.4483189582824707
    3. ''' → logprob: -4.323318958282471
    4. 'que' → logprob: -4.573318958282471
    5. ' that' → logprob: -5.698318958282471
    6. '```' → logprob: -5.948318958282471
    7. ' qu' → logprob: -6.448318958282471
    8. '   ' → logprob: -6.573318958282471
    9. 'u' → logprob: -6.698318958282471
    10. ' ' → logprob: -7.323318958282471

Token 45: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3898356854915619
    2. ' ' → logprob: -1.2648357152938843
    3. 'd' → logprob: -3.7648355960845947
    4. ' \' → logprob: -5.139835834503174
    5. ' N' → logprob: -6.014835834503174
    6. ' ```' → logprob: -6.639835834503174
    7. ''' → logprob: -6.764835834503174
    8. '```' → logprob: -7.014835834503174
    9. 'div' → logprob: -7.139835834503174
    10. ' i' → logprob: -7.264835834503174

Token 46: ' soit' (ID: 17293)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.351664423942566
    2. ' ' → logprob: -1.726664423942566
    3. '|' → logprob: -2.3516645431518555
    4. 'iv' → logprob: -2.4766645431518555
    5. 'ivid' → logprob: -2.8516645431518555
    6. '%' → logprob: -2.8516645431518555
    7. ' divides' → logprob: -3.2266645431518555
    8. 'div' → logprob: -3.6016645431518555
    9. ' <=' → logprob: -3.6016645431518555
    10. ' =' → logprob: -3.9766645431518555

Token 47: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.43667876720428467
    2. ' un' → logprob: -1.1866787672042847
    3. 'div' → logprob: -3.061678886413574
    4. 'le' → logprob: -7.311678886413574
    5. '|' → logprob: -8.686678886413574
    6. ''un' → logprob: -9.061678886413574
    7. '```' → logprob: -9.061678886413574
    8. '\' → logprob: -9.561678886413574
    9. '	un' → logprob: -9.561678886413574
    10. '1' → logprob: -9.561678886413574

Token 48: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.041345369070768356
    2. ' div' → logprob: -3.2913453578948975
    3. '	div' → logprob: -6.916345596313477
    4. '_div' → logprob: -7.166345596313477
    5. ' divisor' → logprob: -7.916345596313477
    6. ' ' → logprob: -8.291345596313477
    7. '<div' → logprob: -9.291345596313477
    8. ' divis' → logprob: -9.291345596313477
    9. '```' → logprob: -9.291345596313477
    10. 'ent' → logprob: -9.416345596313477

Token 49: 'iseur' (ID: 108637)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4442470073699951
    2. 'iseur' → logprob: -1.0692470073699951
    3. 'isible' → logprob: -6.194247245788574
    4. '   ' → logprob: -6.319247245788574
    5. ' i' → logprob: -6.319247245788574
    6. 'ise' → logprob: -6.444247245788574
    7. ' is' → logprob: -6.444247245788574
    8. '```' → logprob: -6.944247245788574
    9. 'is' → logprob: -7.194247245788574
    10. 'isor' → logprob: -7.444247245788574

Token 50: ' de' (ID: 334)
  Prédit: ' commun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' commun' → logprob: -0.5293302536010742
    2. ' de' → logprob: -1.1543302536010742
    3. ' common' → logprob: -2.904330253601074
    4. ' ' → logprob: -3.904330253601074
    5. 'commun' → logprob: -4.529330253601074
    6. 'de' → logprob: -5.529330253601074
    7. 'common' → logprob: -5.654330253601074
    8. ' comun' → logprob: -7.654330253601074
    9. ' d' → logprob: -8.154330253601074
    10. ' des' → logprob: -8.404330253601074

Token 51: ' M' (ID: 391)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5470563173294067
    2. ' N' → logprob: -0.9220563173294067
    3. ' ' → logprob: -4.297056198120117
    4. ' M' → logprob: -5.297056198120117
    5. 'M' → logprob: -6.297056198120117
    6. 'l' → logprob: -6.922056198120117
    7. ' both' → logprob: -7.422056198120117
    8. ' ' → logprob: -7.672056198120117
    9. 'n' → logprob: -7.797056198120117
    10. 'both' → logprob: -9.047056198120117

Token 52: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7213959097862244
    2. '.' → logprob: -1.8463959693908691
    3. ''' → logprob: -1.9713959693908691
    4. '\' → logprob: -2.346395969390869
    5. '```' → logprob: -2.971395969390869
    6. ' ' → logprob: -3.846395969390869
    7. 'def' → logprob: -4.721395969390869
    8. '#' → logprob: -4.846395969390869
    9. 'et' → logprob: -5.096395969390869
    10. 'e' → logprob: -5.596395969390869

Token 53: ' que' (ID: 661)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8507508635520935
    2. ' d' → logprob: -1.1007509231567383
    3. ' N' → logprob: -1.9757509231567383
    4. 'N' → logprob: -2.3507509231567383
    5. ' ' → logprob: -6.725750923156738
    6. ' un' → logprob: -6.850750923156738
    7. 'div' → logprob: -7.100750923156738
    8. 'n' → logprob: -7.600750923156738
    9. ' que' → logprob: -8.350750923156738
    10. ' \' → logprob: -8.475750923156738

Token 54: ' M' (ID: 391)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6640501022338867
    2. ' d' → logprob: -0.7890501022338867
    3. ' N' → logprob: -3.9140501022338867
    4. 'N' → logprob: -4.664050102233887
    5. ' ' → logprob: -7.914050102233887
    6. ' M' → logprob: -8.539050102233887
    7. 'le' → logprob: -9.289050102233887
    8. '```' → logprob: -9.414050102233887
    9. 'div' → logprob: -9.476550102233887
    10. ' ' → logprob: -9.539050102233887

Token 55: ' //' (ID: 602)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.353678822517395
    2. '%' → logprob: -1.228678822517395
    3. ' soit' → logprob: -5.8536787033081055
    4. ' divisible' → logprob: -8.103678703308105
    5. ' mod' → logprob: -8.228678703308105
    6. ' ' → logprob: -8.228678703308105
    7. ')' → logprob: -8.478678703308105
    8. '%s' → logprob: -8.478678703308105
    9. '%d' → logprob: -8.978678703308105
    10. ' puisse' → logprob: -9.103678703308105

Token 56: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.049771275371313095
    2. ' d' → logprob: -3.174771308898926
    3. 'N' → logprob: -5.174771308898926
    4. ' N' → logprob: -6.924771308898926
    5. ' ' → logprob: -9.549771308898926
    6. '	d' → logprob: -12.487271308898926
    7. 'div' → logprob: -12.799771308898926
    8. '_d' → logprob: -12.862271308898926
    9. '#' → logprob: -12.924771308898926
    10. ')' → logprob: -13.049771308898926

Token 57: ' >=' (ID: 5064)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6070272326469421
    2. ' %' → logprob: -1.482027292251587
    3. ' soit' → logprob: -2.357027292251587
    4. ' >=' → logprob: -2.857027292251587
    5. ' ' → logprob: -4.107027053833008
    6. ' puisse' → logprob: -4.732027053833008
    7. ' divisible' → logprob: -4.857027053833008
    8. ' ==' → logprob: -5.107027053833008
    9. '<|end|>' → logprob: -5.107027053833008
    10. ')' → logprob: -5.232027053833008

Token 58: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01109497994184494
    2. ' N' → logprob: -4.51109504699707
    3. ' ' → logprob: -10.38609504699707
    4. '	N' → logprob: -11.88609504699707
    5. 'n' → logprob: -12.38609504699707
    6. 'd' → logprob: -13.38609504699707
    7. ' ' → logprob: -15.01109504699707
    8. '```' → logprob: -15.01109504699707
    9. '<N' → logprob: -15.13609504699707
    10. '  ' → logprob: -15.26109504699707

Token 59: '.

' (ID: 364)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1636984497308731
    2. 'def' → logprob: -1.913698434829712
    3. ':' → logprob: -6.788698673248291
    4. '```' → logprob: -7.788698673248291
    5. '_' → logprob: -7.913698673248291
    6. '\' → logprob: -8.038698196411133
    7. '#' → logprob: -8.288698196411133
    8. 'de' → logprob: -8.538698196411133
    9. '.' → logprob: -8.913698196411133
    10. ' 
' → logprob: -8.913698196411133

Token 60: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5936996936798096
    2. 'def' → logprob: -0.8436996936798096
    3. ':' → logprob: -4.2186994552612305
    4. 'de' → logprob: -7.2186994552612305
    5. '```' → logprob: -7.7186994552612305
    6. ' def' → logprob: -7.8436994552612305
    7. '\' → logprob: -8.09369945526123
    8. ' de' → logprob: -8.46869945526123
    9. '_' → logprob: -8.46869945526123
    10. ',' → logprob: -8.59369945526123

Token 61: ' abc' (ID: 75094)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8706648349761963
    2. ' find' → logprob: -1.2456648349761963
    3. ' ' → logprob: -2.3706648349761963
    4. ' solve' → logprob: -2.4956648349761963
    5. ' largest' → logprob: -2.9956648349761963
    6. ' solution' → logprob: -4.245664596557617
    7. ' greatest' → logprob: -4.745664596557617
    8. ' best' → logprob: -5.120664596557617
    9. ' maximum' → logprob: -5.245664596557617
    10. ' div' → logprob: -5.495664596557617

Token 62: '112' (ID: 12307)
  Prédit: '112'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '112' → logprob: -0.00687000248581171
    2. '_' → logprob: -5.256869792938232
    3. '1' → logprob: -6.631869792938232
    4. 'def' → logprob: -8.75687026977539
    5. ' ' → logprob: -9.88187026977539
    6. '111' → logprob: -11.00687026977539
    7. '114' → logprob: -11.38187026977539
    8. '_s' → logprob: -11.38187026977539
    9. '_d' → logprob: -11.50687026977539
    10. '```' → logprob: -12.13187026977539

Token 63: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.004008710850030184
    2. '_D' → logprob: -6.254008769989014
    3. '_' → logprob: -6.754008769989014
    4. '_s' → logprob: -7.879008769989014
    5. 'd' → logprob: -8.754008293151855
    6. 'D' → logprob: -8.879008293151855
    7. '_div' → logprob: -9.379008293151855
    8. '_c' → logprob: -9.629008293151855
    9. '_b' → logprob: -11.129008293151855
    10. '_problem' → logprob: -11.379008293151855

Token 64: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.24840956926345825
    2. '(' → logprob: -1.6234095096588135
    3. '()' → logprob: -4.373409748077393
    4. '_' → logprob: -5.498409748077393
    5. ' ():' → logprob: -5.873409748077393
    6. ' (' → logprob: -6.248409748077393
    7. ' ()' → logprob: -7.498409748077393
    8. '(N' → logprob: -8.748409271240234
    9. '(_' → logprob: -8.998409271240234
    10. '():
' → logprob: -9.123409271240234

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07410793006420135
    2. ':' → logprob: -2.6991078853607178
    3. '    
' → logprob: -7.199108123779297
    4. '
' → logprob: -7.449108123779297
    5. ' ' → logprob: -7.574108123779297
    6. 'n' → logprob: -7.574108123779297
    7. '	n' → logprob: -8.199108123779297
    8. ' :' → logprob: -8.324108123779297
    9. '    ' → logprob: -8.574108123779297
    10. ':
' → logprob: -9.074108123779297

Token 66: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6310233473777771
    2. ' N' → logprob: -1.5060234069824219
    3. '   ' → logprob: -1.6310234069824219
    4. 'import' → logprob: -3.631023406982422
    5. ' import' → logprob: -4.506023406982422
    6. 'n' → logprob: -4.756023406982422
    7. ' n' → logprob: -6.256023406982422
    8. ' ' → logprob: -6.631023406982422
    9. 'from' → logprob: -7.756023406982422
    10. ' ' → logprob: -8.881023406982422

Token 67: ' On' (ID: 2160)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9166405200958252
    2. '   ' → logprob: -1.6666405200958252
    3. ' N' → logprob: -1.6666405200958252
    4. 'n' → logprob: -1.9166405200958252
    5. 'N' → logprob: -3.166640520095825
    6. ' input' → logprob: -4.666640281677246
    7. ' import' → logprob: -5.041640281677246
    8. 'input' → logprob: -5.666640281677246
    9. ' ' → logprob: -5.916640281677246
    10. ' M' → logprob: -5.916640281677246

Token 68: ' commence' (ID: 44755)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11626772582530975
    2. 'import' → logprob: -3.616267681121826
    3. 'n' → logprob: -3.866267681121826
    4. 'def' → logprob: -3.991267681121826
    5. ' =' → logprob: -4.366267681121826
    6. ' input' → logprob: -5.741267681121826
    7. ' N' → logprob: -5.741267681121826
    8. ' n' → logprob: -5.741267681121826
    9. 'int' → logprob: -5.991267681121826
    10. '=int' → logprob: -6.241267681121826

Token 69: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.4824311137199402
    2. 'par' → logprob: -1.357431173324585
    3. '   ' → logprob: -2.732431173324585
    4. '    ' → logprob: -4.107430934906006
    5. ' by' → logprob: -4.482430934906006
    6. ' ' → logprob: -4.607430934906006
    7. '_par' → logprob: -4.732430934906006
    8. '  ' → logprob: -5.232430934906006
    9. ' ' → logprob: -5.857430934906006
    10. '	par' → logprob: -6.857430934906006

Token 70: ' lire' (ID: 46082)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1377946138381958
    2. ' lire' → logprob: -1.6377946138381958
    3. 'import' → logprob: -2.1377944946289062
    4. ' import' → logprob: -2.2627944946289062
    5. 'l' → logprob: -2.6377944946289062
    6. ' ' → logprob: -3.5127944946289062
    7. ' n' → logprob: -3.8877944946289062
    8. ' ' → logprob: -4.012794494628906
    9. ' N' → logprob: -4.137794494628906
    10. 'prendre' → logprob: -4.387794494628906

Token 71: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.947529137134552
    2. ' l' → logprob: -1.3225290775299072
    3. '   ' → logprob: -1.5725290775299072
    4. ' la' → logprob: -2.5725290775299072
    5. '    ' → logprob: -3.1975290775299072
    6. 'l' → logprob: -4.947529315948486
    7. ' les' → logprob: -5.572529315948486
    8. ' ' → logprob: -5.572529315948486
    9. '  ' → logprob: -6.072529315948486
    10. ' une' → logprob: -7.822529315948486

Token 72: ''entrée' (ID: 115820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8908159732818604
    2. 'a' → logprob: -1.5158159732818604
    3. ''entrée' → logprob: -2.0158159732818604
    4. 'input' → logprob: -2.2658159732818604
    5. 'e' → logprob: -2.8908159732818604
    6. ' input' → logprob: -3.5158159732818604
    7. 'es' → logprob: -4.390815734863281
    8. ' ' → logprob: -5.265815734863281
    9. ''ent' → logprob: -5.390815734863281
    10. 'entrée' → logprob: -5.390815734863281

Token 73: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1481592208147049
    2. '()' → logprob: -2.6481592655181885
    3. '    
' → logprob: -3.3981592655181885
    4. '\n' → logprob: -4.773159027099609
    5. '
' → logprob: -5.023159027099609
    6. '(' → logprob: -5.523159027099609
    7. ':' → logprob: -6.273159027099609
    8. ' ' → logprob: -6.523159027099609
    9. '  
' → logprob: -6.523159027099609
    10. '  ' → logprob: -6.773159027099609

Token 74: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029089784249663353
    2. 'n' → logprob: -4.40408992767334
    3. '    
' → logprob: -4.52908992767334
    4. '
' → logprob: -5.77908992767334
    5. '\n' → logprob: -6.77908992767334
    6. '    ' → logprob: -7.77908992767334
    7. '       ' → logprob: -8.52908992767334
    8. ':' → logprob: -9.15408992767334
    9. '  ' → logprob: -9.15408992767334
    10. '   
' → logprob: -9.40408992767334

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055907052010297775
    2. 'n' → logprob: -3.4309070110321045
    3. '    
' → logprob: -4.805907249450684
    4. '
' → logprob: -4.805907249450684
    5. '    ' → logprob: -5.555907249450684
    6. '\n' → logprob: -8.430907249450684
    7. '```' → logprob: -8.555907249450684
    8. '       ' → logprob: -8.805907249450684
    9. ' 
' → logprob: -8.930907249450684
    10. 'N' → logprob: -8.930907249450684

Token 76: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0694825649261475
    2. '   ' → logprob: -1.0694825649261475
    3. 'N' → logprob: -1.5694825649261475
    4. ' N' → logprob: -2.8194825649261475
    5. ' n' → logprob: -3.1944825649261475
    6. '    ' → logprob: -6.444482803344727
    7. '    
' → logprob: -6.694482803344727
    8. '	n' → logprob: -7.819482803344727
    9. ' ' → logprob: -7.944482803344727
    10. ' ' → logprob: -7.944482803344727

Token 77: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9170376658439636
    2. ' N' → logprob: -1.2920377254486084
    3. ' n' → logprob: -1.5420377254486084
    4. 'N' → logprob: -2.2920377254486084
    5. '   ' → logprob: -4.792037487030029
    6. '    ' → logprob: -6.792037487030029
    7. ' ' → logprob: -7.417037487030029
    8. ' ' → logprob: -9.167037963867188
    9. ' 
' → logprob: -9.792037963867188
    10. ' line' → logprob: -9.792037963867188

Token 78: ' fonction' (ID: 17610)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2554312944412231
    2. ' ' → logprob: -1.3804312944412231
    3. 'n' → logprob: -1.5054312944412231
    4. ' N' → logprob: -1.8804312944412231
    5. 's' → logprob: -3.6304311752319336
    6. ' line' → logprob: -4.130431175231934
    7. ' ligne' → logprob: -4.505431175231934
    8. ' input' → logprob: -5.005431175231934
    9. '   ' → logprob: -5.380431175231934
    10. ' #' → logprob: -5.505431175231934

Token 79: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.13842444121837616
    2. 'input' → logprob: -2.5134243965148926
    3. ' =' → logprob: -4.013424396514893
    4. '=input' → logprob: -4.138424396514893
    5. ' ' → logprob: -5.013424396514893
    6. ' n' → logprob: -5.388424396514893
    7. ' readline' → logprob: -7.763424396514893
    8. ' int' → logprob: -8.13842487335205
    9. '_input' → logprob: -8.26342487335205
    10. '=' → logprob: -8.38842487335205

Token 80: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025926579255610704
    2. '(' → logprob: -6.12759256362915
    3. '().' → logprob: -8.252593040466309
    4. ')' → logprob: -10.002593040466309
    5. ' ()' → logprob: -10.877593040466309
    6. '()

' → logprob: -11.127593040466309
    7. 's' → logprob: -11.502593040466309
    8. '())' → logprob: -11.752593040466309
    9. '.' → logprob: -12.252593040466309
    10. '("")' → logprob: -12.252593040466309

Token 81: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0030082501471042633
    2. ')' → logprob: -7.7530083656311035
    3. ' ()' → logprob: -7.7530083656311035
    4. '().' → logprob: -7.7530083656311035
    5. '.' → logprob: -8.128007888793945
    6. '(' → logprob: -8.128007888793945
    7. ' ' → logprob: -8.128007888793945
    8. 's' → logprob: -8.628007888793945
    9. '()
' → logprob: -9.503007888793945
    10. ',' → logprob: -9.503007888793945

Token 82: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.12292888015508652
    2. '()' → logprob: -2.4979288578033447
    3. ' la' → logprob: -4.247929096221924
    4. ' ' → logprob: -4.622929096221924
    5. 'une' → logprob: -5.372929096221924
    6. ' un' → logprob: -6.622929096221924
    7. ' l' → logprob: -6.747929096221924
    8. ' ()' → logprob: -8.122928619384766
    9. 'l' → logprob: -8.372928619384766
    10. '  ' → logprob: -8.622928619384766

Token 83: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.13714012503623962
    2. 'ligne' → logprob: -3.1371400356292725
    3. ' chaîne' → logprob: -4.262140274047852
    4. 'e' → logprob: -4.262140274047852
    5. 'ine' → logprob: -4.762140274047852
    6. ' ' → logprob: -4.887140274047852
    7. 'igne' → logprob: -5.262140274047852
    8. '   ' → logprob: -5.387140274047852
    9. ' line' → logprob: -5.762140274047852
    10. 'l' → logprob: -5.762140274047852

Token 84: ' entière' (ID: 61583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0027308131102472544
    2. '(' → logprob: -6.752730846405029
    3. '   ' → logprob: -7.252730846405029
    4. 's' → logprob: -8.752730369567871
    5. '().' → logprob: -9.252730369567871
    6. '()\' → logprob: -9.377730369567871
    7. '.' → logprob: -9.502730369567871
    8. ' ()' → logprob: -9.502730369567871
    9. '    ' → logprob: -9.752730369567871
    10. ')' → logprob: -9.877730369567871

Token 85: ' tap' (ID: 12909)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8322370648384094
    2. '()' → logprob: -0.9572370648384094
    3. '   ' → logprob: -2.4572370052337646
    4. ' ' → logprob: -3.2072370052337646
    5. ')' → logprob: -4.332237243652344
    6. ',' → logprob: -4.707237243652344
    7. '.' → logprob: -4.832237243652344
    8. '(
' → logprob: -5.332237243652344
    9. '\' → logprob: -5.582237243652344
    10. '    ' → logprob: -5.707237243652344

Token 86: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00045021495316177607
    2. 'é' → logprob: -8.375450134277344
    3. 'e' → logprob: -8.625450134277344
    4. 'ee' → logprob: -11.000450134277344
    5. 'ant' → logprob: -12.125450134277344
    6. ' é' → logprob: -12.250450134277344
    7. 'ées' → logprob: -12.375450134277344
    8. 'i' → logprob: -13.125450134277344
    9. '```' → logprob: -13.125450134277344
    10. 'p' → logprob: -13.750450134277344

Token 87: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9220626354217529
    2. ' par' → logprob: -1.172062635421753
    3. '   ' → logprob: -2.297062635421753
    4. ' au' → logprob: -3.047062635421753
    5. 'par' → logprob: -3.172062635421753
    6. ' en' → logprob: -3.672062635421753
    7. ' à' → logprob: -4.047062873840332
    8. 'au' → logprob: -4.547062873840332
    9. ' dans' → logprob: -5.297062873840332
    10. 'e' → logprob: -5.422062873840332

Token 88: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3887856900691986
    2. 'l' → logprob: -1.138785719871521
    3. '	l' → logprob: -6.3887858390808105
    4. ' ' → logprob: -9.263785362243652
    5. '   ' → logprob: -10.263785362243652
    6. ' ' → logprob: -11.138785362243652
    7. '```' → logprob: -11.263785362243652
    8. 'la' → logprob: -11.763785362243652
    9. 'lap' → logprob: -11.763785362243652
    10. '()' → logprob: -12.263785362243652

Token 89: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.021706048399209976
    2. ''u' → logprob: -5.0217061042785645
    3. ''us' → logprob: -5.0217061042785645
    4. ''' → logprob: -5.6467061042785645
    5. 'u' → logprob: -6.0217061042785645
    6. ''util' → logprob: -7.0217061042785645
    7. ''user' → logprob: -7.7717061042785645
    8. '’utilisateur' → logprob: -7.7717061042785645
    9. ''a' → logprob: -8.396705627441406
    10. 'a' → logprob: -8.646705627441406

Token 90: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06646841764450073
    2. '    
' → logprob: -4.316468238830566
    3. ',' → logprob: -4.566468238830566
    4. '()' → logprob: -4.691468238830566
    5. '(' → logprob: -4.941468238830566
    6. ')' → logprob: -5.066468238830566
    7. ' ' → logprob: -5.066468238830566
    8. '.' → logprob: -5.441468238830566
    9. '    ' → logprob: -6.066468238830566
    10. '  ' → logprob: -6.816468238830566

Token 91: ' clavier' (ID: 187878)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6656956076622009
    2. ' clavier' → logprob: -2.0406956672668457
    3. 'format' → logprob: -3.5406956672668457
    4. 'r' → logprob: -3.5406956672668457
    5. 'pt' → logprob: -3.6656956672668457
    6. 'python' → logprob: -3.7906956672668457
    7. 't' → logprob: -3.7906956672668457
    8. 'pas' → logprob: -3.7906956672668457
    9. 'près' → logprob: -3.9156956672668457
    10. 'stdin' → logprob: -3.9156956672668457

Token 92: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34287118911743164
    2. '    
' → logprob: -1.8428711891174316
    3. '\n' → logprob: -3.4678711891174316
    4. '\' → logprob: -3.8428711891174316
    5. ' ' → logprob: -3.9678711891174316
    6. '.' → logprob: -4.467871189117432
    7. ')' → logprob: -4.717871189117432
    8. '    ' → logprob: -4.967871189117432
    9. ',' → logprob: -5.092871189117432
    10. '   
' → logprob: -5.342871189117432

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015062556602060795
    2. '    ' → logprob: -4.76506233215332
    3. ' puis' → logprob: -5.64006233215332
    4. ' et' → logprob: -6.51506233215332
    5. 'et' → logprob: -7.64006233215332
    6. ' ' → logprob: -8.26506233215332
    7. '  ' → logprob: -8.51506233215332
    8. ',' → logprob: -9.51506233215332
    9. '.' → logprob: -9.64006233215332
    10. '    
' → logprob: -10.01506233215332

Token 94: ' #' (ID: 1069)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.223870187997818
    2. '   ' → logprob: -2.348870277404785
    3. '    ' → logprob: -3.223870277404785
    4. 'p' → logprob: -3.723870277404785
    5. ' et' → logprob: -3.848870277404785
    6. 'et' → logprob: -4.973870277404785
    7. ' ' → logprob: -6.098870277404785
    8. '"' → logprob: -6.723870277404785
    9. ')' → logprob: -6.973870277404785
    10. 'n' → logprob: -7.348870277404785

Token 95: ' qui' (ID: 2780)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1290552169084549
    2. ' n' → logprob: -3.1290552616119385
    3. '   ' → logprob: -3.3790552616119385
    4. 'N' → logprob: -4.254055023193359
    5. ' N' → logprob: -4.254055023193359
    6. ' puis' → logprob: -5.504055023193359
    7. '    ' → logprob: -5.504055023193359
    8. 'l' → logprob: -6.504055023193359
    9. 'ent' → logprob: -6.879055023193359
    10. '    
' → logprob: -7.504055023193359

Token 96: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07714026421308517
    2. '=' → logprob: -2.7021403312683105
    3. 's' → logprob: -5.4521403312683105
    4. ' ' → logprob: -6.4521403312683105
    5. ' contient' → logprob: -8.202139854431152
    6. '.' → logprob: -8.952139854431152
    7. ')' → logprob: -9.327139854431152
    8. 'split' → logprob: -9.577139854431152
    9. 'est' → logprob: -9.702139854431152
    10. 'n' → logprob: -10.077139854431152

Token 97: ' ensuite' (ID: 39713)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.7664268016815186
    2. ' split' → logprob: -1.5164268016815186
    3. ' ensuite' → logprob: -1.6414268016815186
    4. 'spl' → logprob: -3.7664268016815186
    5. 'strip' → logprob: -4.266427040100098
    6. 'convert' → logprob: -4.516427040100098
    7. ' une' → logprob: -4.641427040100098
    8. ' ' → logprob: -4.766427040100098
    9. ' convert' → logprob: -4.891427040100098
    10. ' divis' → logprob: -5.016427040100098

Token 98: ' déc' (ID: 8498)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.8519692420959473
    2. ' split' → logprob: -1.3519692420959473
    3. 'split' → logprob: -1.6019692420959473
    4. ' convert' → logprob: -3.1019692420959473
    5. ' spl' → logprob: -3.9769692420959473
    6. 'convert' → logprob: -3.9769692420959473
    7. ' divis' → logprob: -4.851969242095947
    8. 'transform' → logprob: -5.351969242095947
    9. ' transform' → logprob: -5.476969242095947
    10. 's' → logprob: -6.351969242095947

Token 99: 'oup' (ID: 9999)
  Prédit: 'oup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oup' → logprob: -0.6487872004508972
    2. 'od' → logprob: -0.7737872004508972
    3. 'omp' → logprob: -5.273787021636963
    4. 'oded' → logprob: -5.523787021636963
    5. 'ou' → logprob: -6.273787021636963
    6. 'oupe' → logprob: -6.523787021636963
    7. 'om' → logprob: -6.898787021636963
    8. 'ode' → logprob: -7.148787021636963
    9. 'up' → logprob: -7.773787021636963
    10. '```' → logprob: -7.898787021636963

Token 100: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.029873134568333626
    2. 'é' → logprob: -3.5298731327056885
    3. ' é' → logprob: -10.02987289428711
    4. 'ee' → logprob: -10.02987289428711
    5. 'e' → logprob: -10.52987289428711
    6. 'er' → logprob: -12.15487289428711
    7. 'è' → logprob: -13.90487289428711
    8. 'ê' → logprob: -14.77987289428711
    9. 'rée' → logprob: -14.90487289428711
    10. 'ées' → logprob: -15.90487289428711

Token 101: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.04116634279489517
    2. 'en' → logprob: -3.416166305541992
    3. '()' → logprob: -6.041166305541992
    4. ' ' → logprob: -6.791166305541992
    5. '   ' → logprob: -7.291166305541992
    6. '<|end|>' → logprob: -7.541166305541992
    7. '    ' → logprob: -7.666166305541992
    8. ' )' → logprob: -7.791166305541992
    9. ')' → logprob: -8.041166305541992
    10. ' into' → logprob: -8.416166305541992

Token 102: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.0421792268753052
    2. ' tokens' → logprob: -1.4171792268753052
    3. ' des' → logprob: -1.6671792268753052
    4. 'tokens' → logprob: -2.4171791076660156
    5. ' un' → logprob: -3.5421791076660156
    6. 'une' → logprob: -3.9171791076660156
    7. ' morceaux' → logprob: -4.417179107666016
    8. ' liste' → logprob: -4.542179107666016
    9. ' parts' → logprob: -4.792179107666016
    10. ' deux' → logprob: -4.917179107666016

Token 103: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.05768115445971489
    2. 'liste' → logprob: -3.307681083679199
    3. 's' → logprob: -5.182681083679199
    4. ' listes' → logprob: -5.307681083679199
    5. ' chaîne' → logprob: -6.182681083679199
    6. ' list' → logprob: -6.307681083679199
    7. ' chaînes' → logprob: -6.557681083679199
    8. ' chain' → logprob: -7.307681083679199
    9. 'list' → logprob: -7.557681083679199
    10. ' tokens' → logprob: -7.682681083679199

Token 104: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8751319646835327
    2. ' de' → logprob: -2.1251320838928223
    3. '=input' → logprob: -2.1251320838928223
    4. '   ' → logprob: -2.7501320838928223
    5. 'tokens' → logprob: -2.7501320838928223
    6. 'input' → logprob: -3.2501320838928223
    7. '()' → logprob: -3.7501320838928223
    8. ' input' → logprob: -3.8751320838928223
    9. 's' → logprob: -4.125132083892822
    10. '[' → logprob: -4.500132083892822

Token 105: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.0925467312335968
    2. ' chain' → logprob: -3.4675467014312744
    3. ' strings' → logprob: -4.2175469398498535
    4. 'str' → logprob: -4.3425469398498535
    5. 'strings' → logprob: -4.8425469398498535
    6. 'chain' → logprob: -5.0925469398498535
    7. ' tokens' → logprob: -5.3425469398498535
    8. 'ent' → logprob: -6.2175469398498535
    9. 'tokens' → logprob: -6.2175469398498535
    10. ' ent' → logprob: -6.3425469398498535

Token 106: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.45041027665138245
    2. ' de' → logprob: -1.32541024684906
    3. '[]' → logprob: -2.9504103660583496
    4. 's' → logprob: -4.70041036605835
    5. '   ' → logprob: -4.70041036605835
    6. '    ' → logprob: -5.32541036605835
    7. 'car' → logprob: -5.70041036605835
    8. '[' → logprob: -5.70041036605835
    9. ' =' → logprob: -5.82541036605835
    10. ' ' → logprob: -6.82541036605835

Token 107: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.055182065814733505
    2. ' caractères' → logprob: -2.9301819801330566
    3. ' caracteres' → logprob: -9.555182456970215
    4. ' caract' → logprob: -9.555182456970215
    5. ' car' → logprob: -9.805182456970215
    6. ' caractère' → logprob: -10.180182456970215
    7. ' ' → logprob: -11.180182456970215
    8. 'c' → logprob: -11.305182456970215
    9. 'char' → logprob: -11.430182456970215
    10. 'texte' → logprob: -12.055182456970215

Token 108: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026681653689593077
    2. ',' → logprob: -6.752668380737305
    3. '.' → logprob: -8.002668380737305
    4. 'input' → logprob: -8.002668380737305
    5. '    
' → logprob: -8.252668380737305
    6. '()' → logprob: -9.252668380737305
    7. 's' → logprob: -9.377668380737305
    8. '[' → logprob: -9.377668380737305
    9. ' ' → logprob: -9.752668380737305
    10. '[]' → logprob: -10.627668380737305

Token 109: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1451077461242676
    2. ' l' → logprob: -1.8951077461242676
    3. ' ' → logprob: -2.1451077461242676
    4. '.split' → logprob: -2.3951077461242676
    5. ' input' → logprob: -2.7701077461242676
    6. ' split' → logprob: -2.8951077461242676
    7. 'l' → logprob: -3.0201077461242676
    8. 'input' → logprob: -3.2701077461242676
    9. ' la' → logprob: -3.6451077461242676
    10. 'la' → logprob: -3.8951077461242676

Token 110: '(),
' (ID: 5757)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003805064770858735
    2. '(' → logprob: -8.750380516052246
    3. '   ' → logprob: -9.250380516052246
    4. '(),' → logprob: -10.500380516052246
    5. ' ()' → logprob: -10.875380516052246
    6. '().' → logprob: -11.000380516052246
    7. '()
' → logprob: -11.875380516052246
    8. '('' → logprob: -12.000380516052246
    9. '()]' → logprob: -12.000380516052246
    10. '("")' → logprob: -12.125380516052246

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5974618792533875
    2. ' puis' → logprob: -0.8474618792533875
    3. ' et' → logprob: -4.472461700439453
    4. 'p' → logprob: -5.597461700439453
    5. '    ' → logprob: -5.722461700439453
    6. 'et' → logprob: -6.972461700439453
    7. '    
' → logprob: -7.222461700439453
    8. ' and' → logprob: -7.972461700439453
    9. ' p' → logprob: -8.597461700439453
    10. ' ' → logprob: -9.097461700439453

Token 112: ' #' (ID: 1069)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.11939488351345062
    2. 'p' → logprob: -2.7443947792053223
    3. ' et' → logprob: -3.4943947792053223
    4. '   ' → logprob: -4.619394779205322
    5. 'et' → logprob: -5.119394779205322
    6. ' que' → logprob: -7.869394779205322
    7. '    ' → logprob: -8.24439525604248
    8. '#' (adapté à ' #') → logprob: -8.74439525604248
    9. ' suiv' → logprob: -8.99439525604248
    10. ' ' → logprob: -9.24439525604248

Token 113: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.7706231474876404
    2. 'p' → logprob: -1.0206232070922852
    3. '   ' → logprob: -1.8956232070922852
    4. '#' → logprob: -4.770623207092285
    5. ' et' → logprob: -5.395623207092285
    6. 'et' → logprob: -5.520623207092285
    7. '    ' → logprob: -5.895623207092285
    8. ' p' → logprob: -6.395623207092285
    9. 'ens' → logprob: -7.020623207092285
    10. ' #' → logprob: -7.145623207092285

Token 114: ' chaque' (ID: 21194)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -1.5581684112548828
    2. ' convert' → logprob: -1.8081684112548828
    3. 'map' → logprob: -1.8081684112548828
    4. 'convert' → logprob: -2.183168411254883
    5. ' transform' → logprob: -2.683168411254883
    6. ' on' → logprob: -2.808168411254883
    7. ' les' → logprob: -2.808168411254883
    8. 'transform' → logprob: -3.058168411254883
    9. 'les' → logprob: -3.433168411254883
    10. ' chaque' → logprob: -3.808168411254883

Token 115: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5712852478027344
    2. ' élément' → logprob: -0.9462852478027344
    3. ' element' → logprob: -3.8212852478027344
    4. ' chaîne' → logprob: -4.571285247802734
    5. 'element' → logprob: -5.696285247802734
    6. ' valeur' → logprob: -6.071285247802734
    7. 'chaine' → logprob: -6.696285247802734
    8. ' token' → logprob: -7.071285247802734
    9. ' chaine' → logprob: -7.071285247802734
    10. ' chain' → logprob: -7.196285247802734

Token 116: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04997609555721283
    2. ' =' → logprob: -3.174976110458374
    3. ' est' → logprob: -5.549975872039795
    4. 's' → logprob: -6.924975872039795
    5. '=int' → logprob: -7.674975872039795
    6. '[:]' → logprob: -8.049976348876953
    7. '[' → logprob: -8.174976348876953
    8. '   ' → logprob: -8.299976348876953
    9. '()' → logprob: -8.549976348876953
    10. ')' → logprob: -9.049976348876953

Token 117: ' cette' (ID: 7696)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2343348264694214
    2. 'la' → logprob: -1.4843348264694214
    3. 'input' → logprob: -1.6093348264694214
    4. ' input' → logprob: -1.6093348264694214
    5. 'l' → logprob: -3.609334945678711
    6. ' cette' → logprob: -3.734334945678711
    7. 'chaine' → logprob: -4.609334945678711
    8. 'map' → logprob: -5.609334945678711
    9. ' type' → logprob: -5.734334945678711
    10. ' l' → logprob: -5.734334945678711

Token 118: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.8055291175842285
    2. 'chaine' → logprob: -2.1805291175842285
    3. ' liste' → logprob: -2.3055291175842285
    4. 'l' → logprob: -2.4305291175842285
    5. 'ligne' → logprob: -2.5555291175842285
    6. ' map' → logprob: -3.9305291175842285
    7. '```' → logprob: -3.9305291175842285
    8. 'split' → logprob: -4.0555291175842285
    9. 'map' → logprob: -4.0555291175842285
    10. 'list' → logprob: -4.3055291175842285

Token 119: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.02386702224612236
    2. ' is' → logprob: -4.023867130279541
    3. 's' → logprob: -6.398867130279541
    4. ')' → logprob: -6.898867130279541
    5. '=' → logprob: -7.023867130279541
    6. 'est' → logprob: -7.273867130279541
    7. ' s' → logprob: -8.273866653442383
    8. ' =' → logprob: -8.773866653442383
    9. ' map' → logprob: -9.023866653442383
    10. ',' → logprob: -9.148866653442383

Token 120: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.16016805171966553
    2. 'convert' → logprob: -2.035168170928955
    3. ' transform' → logprob: -4.410168170928955
    4. 'transform' → logprob: -5.660168170928955
    5. ' map' → logprob: -6.910168170928955
    6. 'map' → logprob: -7.910168170928955
    7. 'con' → logprob: -9.410167694091797
    8. ' converted' → logprob: -9.660167694091797
    9. ' ' → logprob: -10.285167694091797
    10. 'm' → logprob: -10.285167694091797

Token 121: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9617601037025452
    2. 'int' → logprob: -1.7117600440979004
    3. 'en' → logprob: -1.8367600440979004
    4. ' en' → logprob: -2.5867600440979004
    5. 'ie' → logprob: -3.2117600440979004
    6. '   ' → logprob: -3.8367600440979004
    7. 'u' → logprob: -3.9617600440979004
    8. '(' → logprob: -3.9617600440979004
    9. ')' → logprob: -4.3367600440979
    10. '_en' → logprob: -4.3367600440979

Token 122: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.23714026808738708
    2. 'en' → logprob: -1.6121402978897095
    3. '()' → logprob: -5.48714017868042
    4. 'int' → logprob: -5.98714017868042
    5. '(' → logprob: -6.11214017868042
    6. '   ' → logprob: -6.86214017868042
    7. ' ' → logprob: -7.48714017868042
    8. ' par' → logprob: -8.612140655517578
    9. '```' → logprob: -8.737140655517578
    10. 's' → logprob: -8.862140655517578

Token 123: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.501473605632782
    2. ' int' → logprob: -1.1264736652374268
    3. 'ent' → logprob: -3.0014736652374268
    4. ' des' → logprob: -4.876473426818848
    5. ' entier' → logprob: -5.501473426818848
    6. ' ent' → logprob: -5.626473426818848
    7. ' un' → logprob: -5.751473426818848
    8. ' integers' → logprob: -6.876473426818848
    9. '(int' → logprob: -8.751473426818848
    10. 'inte' → logprob: -9.126473426818848

Token 124: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10157974064350128
    2. 's' → logprob: -3.6015796661376953
    3. '()' → logprob: -3.9765796661376953
    4. ',' → logprob: -3.9765796661376953
    5. '(' → logprob: -4.351579666137695
    6. '.' → logprob: -4.476579666137695
    7. ' (' → logprob: -6.726579666137695
    8. '(s' → logprob: -6.851579666137695
    9. '(
' → logprob: -7.226579666137695
    10. 'def' → logprob: -7.351579666137695

Token 125: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20585975050926208
    2. 'map' → logprob: -2.205859661102295
    3. ' list' → logprob: -3.455859661102295
    4. ' la' → logprob: -3.705859661102295
    5. 'list' → logprob: -4.330859661102295
    6. ' int' → logprob: -5.705859661102295
    7. 'int' → logprob: -7.205859661102295
    8. ' l' → logprob: -7.705859661102295
    9. ' une' → logprob: -7.705859661102295
    10. ' ' → logprob: -8.080860137939453

Token 126: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5375099182128906
    2. '(int' → logprob: -0.9125099182128906
    3. '(lambda' → logprob: -4.537509918212891
    4. '   ' → logprob: -6.662509918212891
    5. '(str' → logprob: -7.162509918212891
    6. 'int' → logprob: -7.662509918212891
    7. '(
' → logprob: -7.662509918212891
    8. 'def' → logprob: -7.912509918212891
    9. '=int' → logprob: -9.91250991821289
    10. '<int' → logprob: -10.41250991821289

Token 127: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04241916537284851
    2. ',' → logprob: -3.292419195175171
    3. '   ' → logprob: -6.792418956756592
    4. ',input' → logprob: -7.042418956756592
    5. ').' → logprob: -7.167418956756592
    6. '))' → logprob: -7.667418956756592
    7. ' )' → logprob: -7.917418956756592
    8. '),' → logprob: -8.04241943359375
    9. '(input' → logprob: -9.29241943359375
    10. ',)' → logprob: -9.41741943359375

Token 128: ' ...)
' (ID: 132905)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5786648988723755
    2. 'input' → logprob: -0.9536648988723755
    3. ')' → logprob: -2.953664779663086
    4. '   ' → logprob: -6.953664779663086
    5. ' )' → logprob: -7.703664779663086
    6. ' ' → logprob: -9.203664779663086
    7. ' lambda' → logprob: -9.578664779663086
    8. 'int' → logprob: -9.828664779663086
    9. 'lambda' → logprob: -9.828664779663086
    10. ' str' → logprob: -10.328664779663086

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010214977664873004
    2. ',' → logprob: -8.251021385192871
    3. '(' → logprob: -8.501021385192871
    4. ':' → logprob: -8.626021385192871
    5. '    
' → logprob: -9.126021385192871
    6. ')' → logprob: -9.376021385192871
    7. '):' → logprob: -10.126021385192871
    8. '  ' → logprob: -10.751021385192871
    9. '    ' → logprob: -10.876021385192871
    10. '(n' → logprob: -11.251021385192871

Token 130: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028889672830700874
    2. '    
' → logprob: -4.4038896560668945
    3. 'N' → logprob: -4.6538896560668945
    4. 'n' → logprob: -5.2788896560668945
    5. '
' → logprob: -6.9038896560668945
    6. ' N' → logprob: -8.153889656066895
    7. '  ' → logprob: -10.153889656066895
    8. ' ' → logprob: -10.278889656066895
    9. 'line' → logprob: -10.278889656066895
    10. '   
' → logprob: -10.778889656066895

Token 131: ' Le' (ID: 2018)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12548227608203888
    2. '   ' → logprob: -2.7504823207855225
    3. ' N' → logprob: -3.2504823207855225
    4. 'n' → logprob: -4.250482082366943
    5. ' n' → logprob: -8.250482559204102
    6. '    
' → logprob: -8.625482559204102
    7. '
' → logprob: -8.750482559204102
    8. ' ' → logprob: -9.125482559204102
    9. '	N' → logprob: -9.875482559204102
    10. 'import' → logprob: -10.500482559204102

Token 132: ' résultat' (ID: 62556)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.676689624786377
    2. 'N' → logprob: -1.176689624786377
    3. 'n' → logprob: -2.051689624786377
    4. ' n' → logprob: -3.551689624786377
    5. ' line' → logprob: -4.176689624786377
    6. ' ' → logprob: -6.301689624786377
    7. 's' → logprob: -6.426689624786377
    8. 'line' → logprob: -6.676689624786377
    9. 'input' → logprob: -6.801689624786377
    10. ' input' → logprob: -6.801689624786377

Token 133: ' final' (ID: 1721)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0018929373472929
    2. '=' → logprob: -6.501893043518066
    3. ' N' → logprob: -8.251893043518066
    4. ' n' → logprob: -10.251893043518066
    5. '=N' → logprob: -11.001893043518066
    6. '   ' → logprob: -11.126893043518066
    7. 'n' → logprob: -11.501893043518066
    8. 'N' → logprob: -11.501893043518066
    9. '=input' → logprob: -12.001893043518066
    10. ' est' → logprob: -12.126893043518066

Token 134: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00832248106598854
    2. '=' → logprob: -4.883322715759277
    3. ' N' → logprob: -7.633322715759277
    4. '=N' → logprob: -9.008322715759277
    5. ' n' → logprob: -9.758322715759277
    6. '   ' → logprob: -10.883322715759277
    7. '=n' → logprob: -12.008322715759277
    8. ' =
' → logprob: -12.133322715759277
    9. 'n' → logprob: -12.508322715759277
    10. '=input' → logprob: -12.633322715759277

Token 135: ' stock' (ID: 6546)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.031728412955999374
    2. ' tuple' → logprob: -3.906728506088257
    3. 'list' → logprob: -4.906728267669678
    4. ' N' → logprob: -6.031728267669678
    5. '   ' → logprob: -7.281728267669678
    6. ' map' → logprob: -8.781728744506836
    7. ' n' → logprob: -8.781728744506836
    8. ' ' → logprob: -9.281728744506836
    9. 'tuple' → logprob: -9.531728744506836
    10. ' input' → logprob: -10.406728744506836

Token 136: 'é' (ID: 377)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6397749781608582
    2. '_' → logprob: -1.264775037765503
    3. '=' → logprob: -1.889775037765503
    4. 'e' → logprob: -4.014774799346924
    5. 'er' → logprob: -5.014774799346924
    6. ' ' → logprob: -5.264774799346924
    7. 'é' → logprob: -6.014774799346924
    8. '   ' → logprob: -6.014774799346924
    9. ' _' → logprob: -7.264774799346924
    10. 'u' → logprob: -7.264774799346924

Token 137: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7345598340034485
    2. 'N' → logprob: -1.7345597743988037
    3. ' dans' → logprob: -1.7345597743988037
    4. 'dans' → logprob: -2.1095597743988037
    5. ' en' → logprob: -3.8595597743988037
    6. 'n' → logprob: -4.234560012817383
    7. ' N' → logprob: -5.359560012817383
    8. 'en' → logprob: -6.109560012817383
    9. '(N' → logprob: -6.859560012817383
    10. ' n' → logprob: -7.609560012817383

Token 138: ' dé' (ID: 2393)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0455621480941772
    2. 'a' → logprob: -1.5455621480941772
    3. ' N' → logprob: -1.9205621480941772
    4. ' une' → logprob: -2.670562267303467
    5. ' n' → logprob: -2.920562267303467
    6. ' la' → logprob: -3.295562267303467
    7. ' variables' → logprob: -3.795562267303467
    8. 'n' → logprob: -3.920562267303467
    9. ' a' → logprob: -3.920562267303467
    10. 'la' → logprob: -4.920562267303467

Token 139: 'composition' (ID: 119135)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.011204972863197327
    2. 'claration' → logprob: -5.011205196380615
    3. 'fin' → logprob: -6.136205196380615
    4. 'clarations' → logprob: -7.386205196380615
    5. 'fi' → logprob: -8.136204719543457
    6. 'r' → logprob: -9.011204719543457
    7. 'clar' → logprob: -9.136204719543457
    8. 'fl' → logprob: -9.261204719543457
    9. 'but' → logprob: -9.261204719543457
    10. 'tail' → logprob: -9.261204719543457

Token 140: ' dans' (ID: 2671)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3686702251434326
    2. ' N' → logprob: -1.2436702251434326
    3. 'n' → logprob: -4.493670463562012
    4. '   ' → logprob: -4.993670463562012
    5. ' n' → logprob: -7.243670463562012
    6. 'x' → logprob: -8.118670463562012
    7. 'a' → logprob: -8.243670463562012
    8. ',' → logprob: -8.868670463562012
    9. '[N' → logprob: -8.993670463562012
    10. '(N' → logprob: -9.243670463562012

Token 141: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.030188364908099174
    2. ' N' → logprob: -3.5301883220672607
    3. 'n' → logprob: -7.78018856048584
    4. ' n' → logprob: -11.15518856048584
    5. ' ' → logprob: -12.78018856048584
    6. '   ' → logprob: -13.90518856048584
    7. 'a' → logprob: -15.15518856048584
    8. '`' → logprob: -15.15518856048584
    9. '[N' → logprob: -15.28018856048584
    10. ' ' → logprob: -15.40518856048584

Token 142: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011636728886514902
    2. ' ,' → logprob: -7.001163482666016
    3. ',N' → logprob: -8.876163482666016
    4. ',n' → logprob: -9.751163482666016
    5. '   ' → logprob: -10.501163482666016
    6. ',M' → logprob: -11.751163482666016
    7. ',m' → logprob: -12.626163482666016
    8. ',
' → logprob: -12.626163482666016
    9. ' et' → logprob: -13.126163482666016
    10. ',d' → logprob: -13.626163482666016

Token 143: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.25197634100914
    2. ' M' → logprob: -1.5019763708114624
    3. ' ' → logprob: -10.751976013183594
    4. ',' → logprob: -11.501976013183594
    5. 'm' → logprob: -12.376976013183594
    6. ' ' → logprob: -12.501976013183594
    7. '```' → logprob: -13.251976013183594
    8. ',M' → logprob: -13.876976013183594
    9. 's' → logprob: -14.126976013183594
    10. '  ' → logprob: -14.251976013183594

Token 144: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014573780354112387
    2. ':' → logprob: -7.251457214355469
    3. '    
' → logprob: -7.876457214355469
    4. ',' → logprob: -9.001457214355469
    5. '(N' → logprob: -10.126457214355469
    6. ' =' → logprob: -10.251457214355469
    7. '  ' → logprob: -10.376457214355469
    8. ' :' → logprob: -10.376457214355469
    9. '
' → logprob: -10.751457214355469
    10. ' ' → logprob: -10.876457214355469

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003915018867701292
    2. '    
' → logprob: -5.753914833068848
    3. '
' → logprob: -7.253914833068848
    4. 'N' → logprob: -11.503914833068848
    5. 'n' → logprob: -12.378914833068848
    6. '\n' → logprob: -12.753914833068848
    7. '  
' → logprob: -13.253914833068848
    8. '   
' → logprob: -13.378914833068848
    9. '```' → logprob: -13.378914833068848
    10. ' 
' → logprob: -13.503914833068848

Token 146: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.31969448924064636
    2. '   ' → logprob: -1.3196945190429688
    3. ' N' → logprob: -5.069694519042969
    4. '    
' → logprob: -9.694694519042969
    5. 'n' → logprob: -10.819694519042969
    6. ' ' → logprob: -11.069694519042969
    7. '
' → logprob: -11.194694519042969
    8. '	N' → logprob: -11.819694519042969
    9. '  ' → logprob: -12.694694519042969
    10. '```' → logprob: -13.569694519042969

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9875325708417222e-05
    2. ',M' → logprob: -10.500029563903809
    3. ' ,' → logprob: -13.250029563903809
    4. ',
' → logprob: -14.625029563903809
    5. ',m' → logprob: -16.750030517578125
    6. ',N' → logprob: -17.125030517578125
    7. ',

' → logprob: -17.500030517578125
    8. 'M' → logprob: -18.000030517578125
    9. ',int' → logprob: -18.750030517578125
    10. ',\
' → logprob: -19.125030517578125

Token 148: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.005781019106507301
    2. 'M' → logprob: -5.505781173706055
    3. ' ' → logprob: -6.380781173706055
    4. '  ' → logprob: -12.630781173706055
    5. ' ' → logprob: -12.880781173706055
    6. '    ' → logprob: -14.380781173706055
    7. '   ' → logprob: -15.005781173706055
    8. 'space' → logprob: -16.005781173706055
    9. ' =' → logprob: -16.630781173706055
    10. ' 
' → logprob: -16.755781173706055

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03364858031272888
    2. '=' → logprob: -3.4086484909057617
    3. '=input' → logprob: -13.158648490905762
    4. '=int' → logprob: -15.158648490905762
    5. ',' → logprob: -15.283648490905762
    6. ' ' → logprob: -15.783648490905762
    7. ' =
' → logprob: -16.158649444580078
    8. ')' → logprob: -17.158649444580078
    9. '＝' → logprob: -17.283649444580078
    10. '=list' → logprob: -17.533649444580078

Token 150: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0052628107368946075
    2. 'map' → logprob: -5.255262851715088
    3. ' list' → logprob: -10.63026237487793
    4. ' ' → logprob: -12.88026237487793
    5. '	map' → logprob: -13.63026237487793
    6. 'list' → logprob: -15.00526237487793
    7. ' ' → logprob: -15.50526237487793
    8. '   ' → logprob: -15.88026237487793
    9. ' tuple' → logprob: -15.88026237487793
    10. ' m' → logprob: -16.25526237487793

Token 151: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0031989887356758118
    2. '(' → logprob: -5.753199100494385
    3. ' (' → logprob: -11.003198623657227
    4. '(input' → logprob: -12.753198623657227
    5. '(
' → logprob: -14.003198623657227
    6. '<int' → logprob: -15.003198623657227
    7. '=int' → logprob: -15.503198623657227
    8. '[int' → logprob: -15.878198623657227
    9. 'int' → logprob: -16.628198623657227
    10. '(

' → logprob: -16.628198623657227

Token 152: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -1.0532037019729614
    2. '(input' → logprob: -1.3032037019729614
    3. ',' → logprob: -1.5532037019729614
    4. 'input' → logprob: -1.8032037019729614
    5. ' input' → logprob: -6.678203582763672
    6. ')' → logprob: -7.178203582763672
    7. '=input' → logprob: -7.678203582763672
    8. '(),' → logprob: -7.928203582763672
    9. '(' → logprob: -8.678203582763672
    10. '().' → logprob: -9.803203582763672

Token 153: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022706031799316
    2. ' input' → logprob: -1.9102270603179932
    3. ' ' → logprob: -14.160226821899414
    4. ')' → logprob: -14.160226821899414
    5. '(input' → logprob: -14.660226821899414
    6. '	input' → logprob: -15.035226821899414
    7. '=input' → logprob: -15.285226821899414
    8. '   ' → logprob: -16.160226821899414
    9. ',input' → logprob: -16.160226821899414
    10. '_input' → logprob: -16.660226821899414

Token 154: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7120533811976202e-05
    2. '()' → logprob: -11.000017166137695
    3. '())' → logprob: -15.625017166137695
    4. ' ().' → logprob: -15.625017166137695
    5. ')' → logprob: -17.375017166137695
    6. '(' → logprob: -17.500017166137695
    7. '()
' → logprob: -19.625017166137695
    8. '.split' → logprob: -20.375017166137695
    9. '   ' → logprob: -21.000017166137695
    10. 'split' → logprob: -21.250017166137695

Token 155: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0031781906727701426
    2. 'strip' → logprob: -5.753178119659424
    3. ' split' → logprob: -14.878178596496582
    4. 'rstrip' → logprob: -16.128177642822266
    5. 'spl' → logprob: -17.878177642822266
    6. '(split' → logprob: -18.128177642822266
    7. ')' → logprob: -19.003177642822266
    8. '.split' → logprob: -19.253177642822266
    9. ' strip' → logprob: -20.128177642822266
    10. 'plit' → logprob: -21.003177642822266

Token 156: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004943885374814272
    2. ')' → logprob: -5.62994384765625
    3. '()' → logprob: -7.25494384765625
    4. '()))' → logprob: -7.50494384765625
    5. '))' → logprob: -9.50494384765625
    6. ' ())' → logprob: -12.25494384765625
    7. '(' → logprob: -12.87994384765625
    8. '())
' → logprob: -13.00494384765625
    9. '());' → logprob: -15.00494384765625
    10. '())

' → logprob: -15.62994384765625

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4591568112373352
    2. '
' → logprob: -1.0841567516326904
    3. '    
' → logprob: -4.0841569900512695
    4. 'd' → logprob: -5.0841569900512695
    5. '  
' → logprob: -6.3341569900512695
    6. ' 
' → logprob: -6.4591569900512695
    7. ' for' → logprob: -7.2091569900512695
    8. '   
' → logprob: -7.3341569900512695
    9. ',' → logprob: -7.9591569900512695
    10. ' ' → logprob: -7.9591569900512695

Token 158: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.25360003113746643
    2. 'd' → logprob: -2.7536001205444336
    3. 'answer' → logprob: -2.8786001205444336
    4. 'res' → logprob: -3.3786001205444336
    5. 'import' → logprob: -3.6286001205444336
    6. 'div' → logprob: -4.003600120544434
    7. 'result' → logprob: -5.128600120544434
    8. 'for' → logprob: -5.503600120544434
    9. '   ' → logprob: -5.503600120544434
    10. 'best' → logprob: -5.753600120544434

Token 159: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4290703535079956
    2. 'answer' → logprob: -2.054070472717285
    3. 'res' → logprob: -2.679070472717285
    4. 'result' → logprob: -3.054070472717285
    5. 'import' → logprob: -4.054070472717285
    6. 'max' → logprob: -4.179070472717285
    7. 'best' → logprob: -4.179070472717285
    8. ' ans' → logprob: -4.304070472717285
    9. ' answer' → logprob: -4.554070472717285
    10. 'div' → logprob: -4.929070472717285

Token 160: ' proc' (ID: 14550)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1554150581359863
    2. ' best' → logprob: -2.5304150581359863
    3. ' answer' → logprob: -2.6554150581359863
    4. 'result' → logprob: -2.7804150581359863
    5. ' import' → logprob: -2.7804150581359863
    6. ' result' → logprob: -3.0304150581359863
    7. ' =' → logprob: -3.1554150581359863
    8. ' div' → logprob: -3.2804150581359863
    9. 'import' → logprob: -3.5304150581359863
    10. ' max' → logprob: -3.6554150581359863

Token 161: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -7.44574936106801e-05
    2. 'ede' → logprob: -11.25007438659668
    3. '\' → logprob: -11.37507438659668
    4. 'è' → logprob: -11.37507438659668
    5. 'éder' → logprob: -11.37507438659668
    6. 'é' → logprob: -12.00007438659668
    7. 'c' → logprob: -12.37507438659668
    8. '_' → logprob: -12.87507438659668
    9. 'e' → logprob: -13.00007438659668
    10. 'de' → logprob: -13.37507438659668

Token 162: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.14765962958335876
    2. ' par' → logprob: -2.3976595401763916
    3. '   ' → logprob: -4.397659778594971
    4. ' au' → logprob: -4.647659778594971
    5. ' ' → logprob: -5.272659778594971
    6. ' =' → logprob: -5.397659778594971
    7. 'par' → logprob: -5.647659778594971
    8. ',' → logprob: -5.897659778594971
    9. ' a' → logprob: -6.272659778594971
    10. 'à' → logprob: -6.397659778594971

Token 163: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1369903087615967
    2. ' ' → logprob: -1.6369903087615967
    3. 'int' → logprob: -1.7619903087615967
    4. 'range' → logprob: -2.3869903087615967
    5. ' range' → logprob: -3.6369903087615967
    6. ' int' → logprob: -3.6369903087615967
    7. 'for' → logprob: -3.7619903087615967
    8. ' for' → logprob: -3.8869903087615967
    9. 'la' → logprob: -4.011990547180176
    10. '1' → logprob: -4.136990547180176

Token 164: ' définition' (ID: 116583)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5687879920005798
    2. 'for' → logprob: -1.0687880516052246
    3. 're' → logprob: -3.9437880516052246
    4. ' recherche' → logprob: -4.318788051605225
    5. 'from' → logprob: -4.443788051605225
    6. 'div' → logprob: -4.568788051605225
    7. 'division' → logprob: -4.818788051605225
    8. ' boucle' → logprob: -5.818788051605225
    9. ' for' → logprob: -5.943788051605225
    10. 'cherche' → logprob: -6.068788051605225

Token 165: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.09111614525318146
    2. ' des' → logprob: -3.091116189956665
    3. ' ' → logprob: -4.216115951538086
    4. ' de' → logprob: -4.591115951538086
    5. '   ' → logprob: -5.216115951538086
    6. ' à' → logprob: -5.591115951538086
    7. '  ' → logprob: -6.091115951538086
    8. ' du' → logprob: -6.591115951538086
    9. ' au' → logprob: -6.841115951538086
    10. ',' → logprob: -7.591115951538086

Token 166: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.39640888571739197
    2. 'e' → logprob: -1.3964089155197144
    3. 'u' → logprob: -4.021409034729004
    4. ' une' → logprob: -4.146409034729004
    5. ''un' → logprob: -4.271409034729004
    6. 'une' → logprob: -4.521409034729004
    7. 'a' → logprob: -4.521409034729004
    8. 'es' → logprob: -6.146409034729004
    9. ' la' → logprob: -6.396409034729004
    10. '`' → logprob: -6.646409034729004

Token 167: ' fonction' (ID: 17610)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -1.2754124402999878
    2. 'def' → logprob: -1.7754124402999878
    3. ' variable' → logprob: -1.9004124402999878
    4. 'liste' → logprob: -1.9004124402999878
    5. 'import' → logprob: -2.6504125595092773
    6. 'variable' → logprob: -3.2754125595092773
    7. 'div' → logprob: -4.150412559509277
    8. '   ' → logprob: -4.275412559509277
    9. 'fonction' → logprob: -4.525412559509277
    10. ' def' → logprob: -4.525412559509277

Token 168: ' imb' (ID: 63592)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45266643166542053
    2. '   ' → logprob: -1.2026664018630981
    3. ' def' → logprob: -3.3276665210723877
    4. ' auxilia' → logprob: -4.702666282653809
    5. ' ' → logprob: -5.452666282653809
    6. 'import' → logprob: -5.952666282653809
    7. ' interne' → logprob: -6.577666282653809
    8. '  ' → logprob: -6.577666282653809
    9. ' pour' → logprob: -6.702666282653809
    10. ' de' → logprob: -6.952666282653809

Token 169: 'ri' (ID: 872)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007367022335529327
    2. 'edded' → logprob: -5.632367134094238
    3. 'ed' → logprob: -6.632367134094238
    4. 'éd' → logprob: -7.632367134094238
    5. 'edding' → logprob: -8.007367134094238
    6. ' def' → logprob: -8.257367134094238
    7. '```' → logprob: -8.507367134094238
    8. 'ent' → logprob: -8.632367134094238
    9. 'ort' → logprob: -8.632367134094238
    10. 'd' → logprob: -9.257367134094238

Token 170: 'quée' (ID: 63772)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.0405858755111694
    2. 'def' → logprob: -1.1655858755111694
    3. 'éd' → logprob: -2.415585994720459
    4. 'quée' → logprob: -2.415585994720459
    5. 'edd' → logprob: -2.915585994720459
    6. 'ri' → logprob: -3.665585994720459
    7. 'ée' → logprob: -3.790585994720459
    8. 'd' → logprob: -4.415585994720459
    9. 'arqu' → logprob: -4.790585994720459
    10. 'edding' → logprob: -5.540585994720459

Token 171: ' appelée' (ID: 179130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5581011772155762
    2. 'def' → logprob: -0.9331011772155762
    3. ' def' → logprob: -3.433101177215576
    4. '(' → logprob: -7.183101177215576
    5. ',' → logprob: -7.558101177215576
    6. '    ' → logprob: -9.183101654052734
    7. '	def' → logprob: -9.433101654052734
    8. '    
' → logprob: -9.558101654052734
    9. 'import' → logprob: -9.683101654052734
    10. '(
' → logprob: -9.683101654052734

Token 172: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.2262338101863861
    2. 'def' → logprob: -1.7262338399887085
    3. ' divis' → logprob: -4.101233959197998
    4. 'get' → logprob: -5.476233959197998
    5. ' def' → logprob: -6.476233959197998
    6. '`' → logprob: -7.851233959197998
    7. 'f' → logprob: -8.10123348236084
    8. ' div' → logprob: -8.10123348236084
    9. '```' → logprob: -8.60123348236084
    10. 'find' → logprob: -8.72623348236084

Token 173: ' qui' (ID: 2780)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00016897499153856188
    2. '(' → logprob: -9.000168800354004
    3. '(s' → logprob: -10.750168800354004
    4. '_s' → logprob: -12.000168800354004
    5. 'def' → logprob: -12.000168800354004
    6. '(n' → logprob: -12.375168800354004
    7. '_list' → logprob: -12.375168800354004
    8. '()' → logprob: -14.750168800354004
    9. '```' → logprob: -14.875168800354004
    10. ' s' → logprob: -14.875168800354004

Token 174: ' prend' (ID: 37463)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6651890277862549
    2. '(n' → logprob: -1.5401890277862549
    3. 'def' → logprob: -2.915189027786255
    4. 'n' → logprob: -3.290189027786255
    5. '():' → logprob: -3.290189027786255
    6. ' def' → logprob: -4.040188789367676
    7. '):' → logprob: -4.165188789367676
    8. ' :' → logprob: -4.415188789367676
    9. 'div' → logprob: -4.415188789367676
    10. ' n' → logprob: -4.665188789367676

Token 175: ' en' (ID: 469)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014935493469238281
    2. 'x' → logprob: -4.639935493469238
    3. ' n' → logprob: -5.764935493469238
    4. '(n' → logprob: -6.764935493469238
    5. 'num' → logprob: -8.014935493469238
    6. 'un' → logprob: -8.389935493469238
    7. ' un' → logprob: -9.389935493469238
    8. ' x' → logprob: -9.389935493469238
    9. '   ' → logprob: -10.139935493469238
    10. ' ' → logprob: -10.764935493469238

Token 176: ' argument' (ID: 10383)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.7459078431129456
    2. 'n' → logprob: -1.6209077835083008
    3. 'un' → logprob: -1.7459077835083008
    4. ' un' → logprob: -2.745907783508301
    5. 'param' → logprob: -3.370907783508301
    6. 'teger' → logprob: -4.495907783508301
    7. 'x' → logprob: -4.745907783508301
    8. 'argument' → logprob: -4.870907783508301
    9. 'number' → logprob: -5.495907783508301
    10. '```' → logprob: -5.620907783508301

Token 177: ' un' (ID: 537)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009241718798875809
    2. ' n' → logprob: -4.884241580963135
    3. 'x' → logprob: -6.884241580963135
    4. '(n' → logprob: -8.134242057800293
    5. 'num' → logprob: -8.384242057800293
    6. ' un' → logprob: -10.009242057800293
    7. ' x' → logprob: -11.259242057800293
    8. 'un' → logprob: -11.509242057800293
    9. 'a' → logprob: -12.259242057800293
    10. ' ' → logprob: -12.884242057800293

Token 178: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013494418933987617
    2. ' n' → logprob: -5.388494491577148
    3. 'number' → logprob: -5.638494491577148
    4. 'num' → logprob: -5.888494491577148
    5. 'nombre' → logprob: -6.638494491577148
    6. ' number' → logprob: -7.638494491577148
    7. 'x' → logprob: -7.763494491577148
    8. ' nombre' → logprob: -9.638494491577148
    9. 'ent' → logprob: -9.888494491577148
    10. 'integer' → logprob: -10.388494491577148

Token 179: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18648631870746613
    2. ' n' → logprob: -2.06148624420166
    3. '(n' → logprob: -3.81148624420166
    4. 'x' → logprob: -4.56148624420166
    5. ' x' → logprob: -5.81148624420166
    6. 'num' → logprob: -6.18648624420166
    7. 'def' → logprob: -6.31148624420166
    8. '(x' → logprob: -6.81148624420166
    9. ',' → logprob: -7.06148624420166
    10. '   ' → logprob: -7.31148624420166

Token 180: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03787185251712799
    2. '):' → logprob: -4.287871837615967
    3. '   ' → logprob: -4.912871837615967
    4. ':
' → logprob: -5.287871837615967
    5. 'def' → logprob: -5.287871837615967
    6. '):
' → logprob: -5.412871837615967
    7. ')' → logprob: -7.162871837615967
    8. ' :' → logprob: -7.662871837615967
    9. '.' → logprob: -9.287872314453125
    10. ' ' → logprob: -10.287872314453125

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5983470678329468
    2. 'def' → logprob: -1.2233470678329468
    3. ':' → logprob: -2.2233471870422363
    4. ' def' → logprob: -3.7233471870422363
    5. '
' → logprob: -4.348347187042236
    6. '    
' → logprob: -6.098347187042236
    7. ' 
' → logprob: -6.348347187042236
    8. '  
' → logprob: -6.598347187042236
    9. ':
' → logprob: -6.723347187042236
    10. ')' → logprob: -6.723347187042236

Token 182: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38588035106658936
    2. '   ' → logprob: -1.5108803510665894
    3. ':' → logprob: -2.510880470275879
    4. ' def' → logprob: -4.635880470275879
    5. '
' → logprob: -5.635880470275879
    6. ':def' → logprob: -6.385880470275879
    7. ' :' → logprob: -7.135880470275879
    8. ':
' → logprob: -7.260880470275879
    9. '    
' → logprob: -8.010880470275879
    10. ' déf' → logprob: -8.135880470275879

Token 183: ' Cette' (ID: 27383)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.056967251002788544
    2. ' def' → logprob: -3.181967258453369
    3. '   ' → logprob: -4.306967258453369
    4. 'import' → logprob: -8.681966781616211
    5. 'from' → logprob: -9.681966781616211
    6. '  ' → logprob: -10.181966781616211
    7. '
' → logprob: -10.431966781616211
    8. ' ' → logprob: -10.556966781616211
    9. ' import' → logprob: -10.806966781616211
    10. ' from' → logprob: -10.931966781616211

Token 184: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.048937514424324036
    2. ' def' → logprob: -3.0489375591278076
    3. '
' → logprob: -9.673937797546387
    4. 'import' → logprob: -9.673937797546387
    5. 'n' → logprob: -9.798937797546387
    6. ' déf' → logprob: -9.923937797546387
    7. '   ' → logprob: -10.798937797546387
    8. 's' → logprob: -11.673937797546387
    9. '```' → logprob: -11.798937797546387
    10. 'dé' → logprob: -11.798937797546387

Token 185: ' ren' (ID: 5427)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0969703197479248
    2. ':' → logprob: -1.4719703197479248
    3. ' retourne' → logprob: -1.5969703197479248
    4. ' :' → logprob: -2.721970319747925
    5. ' def' → logprob: -2.721970319747925
    6. ' return' → logprob: -3.596970319747925
    7. ' ' → logprob: -4.221970558166504
    8. ' yield' → logprob: -4.471970558166504
    9. ' déf' → logprob: -4.846970558166504
    10. 'yield' → logprob: -5.221970558166504

Token 186: 'ver' (ID: 445)
  Prédit: 'voie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.007153995800763369
    2. 't' → logprob: -6.2571539878845215
    3. 'def' → logprob: -6.5071539878845215
    4. 'et' → logprob: -6.5071539878845215
    5. 'e' → logprob: -7.0071539878845215
    6. 'voit' → logprob: -7.2571539878845215
    7. 'v' → logprob: -9.13215446472168
    8. 'return' → logprob: -9.25715446472168
    9. 'tour' → logprob: -9.38215446472168
    10. 'voy' → logprob: -9.88215446472168

Token 187: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.07019640505313873
    2. 'rait' → logprob: -3.5701963901519775
    3. 'er' → logprob: -3.8201963901519775
    4. 're' → logprob: -5.445196628570557
    5. 'e' → logprob: -5.695196628570557
    6. 'r' → logprob: -5.820196628570557
    7. 'range' → logprob: -6.445196628570557
    8. 'return' → logprob: -6.695196628570557
    9. 'era' → logprob: -6.945196628570557
    10. 'et' → logprob: -7.445196628570557

Token 188: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4575670063495636
    2. ' une' → logprob: -1.5825669765472412
    3. '[]' → logprob: -2.832566976547241
    4. ' []' → logprob: -3.082566976547241
    5. ' un' → logprob: -3.957566976547241
    6. ' l' → logprob: -4.08256721496582
    7. ' ' → logprob: -4.95756721496582
    8. ' ' → logprob: -5.95756721496582
    9. 's' → logprob: -6.08256721496582
    10. '[' → logprob: -6.33256721496582

Token 189: ' liste' (ID: 31719)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2501684427261353
    2. ' liste' → logprob: -1.5001684427261353
    3. 'liste' → logprob: -1.6251684427261353
    4. ' set' → logprob: -2.1251683235168457
    5. 'list' → logprob: -3.0001683235168457
    6. 'set' → logprob: -3.1251683235168457
    7. ' list' → logprob: -3.1251683235168457
    8. 'def' → logprob: -4.500168323516846
    9. 'n' → logprob: -5.250168323516846
    10. 'lis' → logprob: -5.875168323516846

Token 190: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.03452685847878456
    2. '[]' → logprob: -4.034526824951172
    3. 'des' → logprob: -4.659526824951172
    4. ' de' → logprob: -5.909526824951172
    5. ' []' → logprob: -6.534526824951172
    6. 'def' → logprob: -7.534526824951172
    7. '[' → logprob: -7.659526824951172
    8. '   ' → logprob: -8.034526824951172
    9. '_des' → logprob: -8.034526824951172
    10. '<|end|>' → logprob: -8.409526824951172

Token 191: ' tous' (ID: 10688)
  Prédit: ' tous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tous' → logprob: -0.180034801363945
    2. ' all' → logprob: -2.805034875869751
    3. 't' → logprob: -3.430034875869751
    4. 'all' → logprob: -3.680034875869751
    5. ' ses' → logprob: -3.805034875869751
    6. ' toutes' → logprob: -4.930034637451172
    7. 's' → logprob: -4.930034637451172
    8. 'div' → logprob: -5.430034637451172
    9. ' ' → logprob: -7.055034637451172
    10. ' divis' → logprob: -7.055034637451172

Token 192: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.24120859801769257
    2. ' ' → logprob: -1.866208553314209
    3. '<|end|>' → logprob: -3.741208553314209
    4. ' des' → logprob: -4.616208553314209
    5. ' ses' → logprob: -4.741208553314209
    6. 'les' → logprob: -5.366208553314209
    7. '  ' → logprob: -5.866208553314209
    8. '_' → logprob: -5.991208553314209
    9. 'es' → logprob: -6.366208553314209
    10. 's' → logprob: -6.616208553314209

Token 193: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.060560885816812515
    2. ' div' → logprob: -2.935560941696167
    3. ' divis' → logprob: -5.310560703277588
    4. ' facteurs' → logprob: -8.185561180114746
    5. '	div' → logprob: -8.560561180114746
    6. '_div' → logprob: -9.685561180114746
    7. ' ' → logprob: -9.935561180114746
    8. ' divid' → logprob: -10.310561180114746
    9. 'd' → logprob: -10.560561180114746
    10. ' divisor' → logprob: -11.310561180114746

Token 194: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.006501497235149145
    2. '   ' → logprob: -6.1315016746521
    3. 'iseur' → logprob: -6.7565016746521
    4. 'is' → logprob: -6.8815016746521
    5. 'i' → logprob: -7.0065016746521
    6. '```' → logprob: -7.5065016746521
    7. 'isateurs' → logprob: -9.881501197814941
    8. '    ' → logprob: -9.881501197814941
    9. '       ' → logprob: -10.006501197814941
    10. 's' → logprob: -10.006501197814941

Token 195: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -3.6550729419104755e-05
    2. 'eurs' → logprob: -11.000036239624023
    3. '```' → logprob: -12.375036239624023
    4. 'u' → logprob: -12.625036239624023
    5. 'rs' → logprob: -12.750036239624023
    6. 'teurs' → logprob: -13.000036239624023
    7. 's' → logprob: -13.375036239624023
    8. '#' → logprob: -14.000036239624023
    9. 'urse' → logprob: -14.250036239624023
    10. '   ' → logprob: -14.625036239624023

Token 196: ' posit' (ID: 13047)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17220431566238403
    2. 'def' → logprob: -1.9222042560577393
    3. ' de' → logprob: -5.297204494476318
    4. 'de' → logprob: -6.172204494476318
    5. ' def' → logprob: -6.547204494476318
    6. ' ' → logprob: -6.797204494476318
    7. '  ' → logprob: -7.547204494476318
    8. 's' → logprob: -7.672204494476318
    9. 'n' → logprob: -8.17220401763916
    10. '(n' → logprob: -8.29720401763916

Token 197: 'ifs' (ID: 14119)
  Prédit: 'urs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urs' → logprob: -6.511406809295295e-06
    2. 'eurs' → logprob: -12.500006675720215
    3. '```' → logprob: -14.000006675720215
    4. 'ur' → logprob: -14.500006675720215
    5. 'ors' → logprob: -14.750006675720215
    6. 'u' → logprob: -14.875006675720215
    7. '#' → logprob: -15.500006675720215
    8. 'rs' → logprob: -15.500006675720215
    9. '   ' → logprob: -15.625006675720215
    10. ' urs' → logprob: -17.1250057220459

Token 198: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1092592254281044
    2. 'de' → logprob: -2.4842591285705566
    3. ' ' → logprob: -4.609259128570557
    4. 'def' → logprob: -5.609259128570557
    5. '   ' → logprob: -6.234259128570557
    6. '(n' → logprob: -6.984259128570557
    7. ' n' → logprob: -7.109259128570557
    8. 's' → logprob: -7.359259128570557
    9. 'n' → logprob: -7.859259128570557
    10. ' def' → logprob: -7.984259128570557

Token 199: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759482979774475
    2. ' n' → logprob: -0.8259482979774475
    3. ' M' → logprob: -12.700948715209961
    4. 'M' → logprob: -12.825948715209961
    5. '   ' → logprob: -13.450948715209961
    6. '	n' → logprob: -14.075948715209961
    7. '
' → logprob: -15.200948715209961
    8. ' ' → logprob: -15.450948715209961
    9. '```' → logprob: -15.575948715209961
    10. ' ' → logprob: -16.70094871520996

Token 200: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1129734069108963
    2. ':' → logprob: -2.73797345161438
    3. 'def' → logprob: -3.48797345161438
    4. '.' → logprob: -5.612973213195801
    5. '(n' → logprob: -5.737973213195801
    6. ',' → logprob: -6.237973213195801
    7. ':
' → logprob: -6.362973213195801
    8. '(' → logprob: -8.4879732131958
    9. ' def' → logprob: -8.7379732131958
    10. ' :' → logprob: -9.2379732131958

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37713608145713806
    2. 'def' → logprob: -1.3771361112594604
    3. '
' → logprob: -3.502135992050171
    4. ':' → logprob: -3.752135992050171
    5. ' def' → logprob: -5.00213623046875
    6. ':def' → logprob: -7.50213623046875
    7. '    
' → logprob: -8.00213623046875
    8. '	def' → logprob: -8.25213623046875
    9. ':
' → logprob: -8.62713623046875
    10. '  
' → logprob: -10.25213623046875

Token 202: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2831656336784363
    2. 'def' (adapté à ' def') → logprob: -1.533165693283081
    3. '
' → logprob: -3.658165693283081
    4. ' def' → logprob: -5.908165454864502
    5. '    
' → logprob: -6.158165454864502
    6. '	def' → logprob: -10.28316593170166
    7. '   
' → logprob: -10.53316593170166
    8. ' 
' → logprob: -10.78316593170166
    9. '  ' → logprob: -10.78316593170166
    10. '  
' → logprob: -11.40816593170166

Token 203: ' divisor' (ID: 100482)
  Prédit: ' divisor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisor' → logprob: -0.03201362118124962
    2. 'div' → logprob: -4.157013416290283
    3. ' divis' → logprob: -4.157013416290283
    4. '	div' → logprob: -9.157013893127441
    5. '_div' → logprob: -10.032013893127441
    6. ' ' → logprob: -10.032013893127441
    7. ' div' → logprob: -13.532013893127441
    8. '(div' → logprob: -13.657013893127441
    9. '  ' → logprob: -14.157013893127441
    10. ' ' → logprob: -15.032013893127441

Token 204: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00021962920436635613
    2. ' (' → logprob: -9.000219345092773
    3. '(' → logprob: -9.250219345092773
    4. 's' → logprob: -16.375219345092773
    5. '(N' → logprob: -17.250219345092773
    6. '(x' → logprob: -18.750219345092773
    7. '(
' → logprob: -19.000219345092773
    8. '(s' → logprob: -19.000219345092773
    9. ' ' → logprob: -19.125219345092773
    10. '(num' → logprob: -19.125219345092773

Token 205: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005537479883059859
    2. '):
' → logprob: -7.750553607940674
    3. ')' → logprob: -9.125554084777832
    4. ' ):' → logprob: -11.875554084777832
    5. ':' → logprob: -12.500554084777832
    6. '):
' → logprob: -13.500554084777832
    7. '   ' → logprob: -13.625554084777832
    8. '():' → logprob: -15.375554084777832
    9. ')：' → logprob: -15.625554084777832
    10. '）：' → logprob: -16.375553131103516

Token 206: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33981791138648987
    2. '   ' → logprob: -1.3398178815841675
    3. '       ' → logprob: -3.714818000793457
    4. ' :' → logprob: -7.589818000793457
    5. ':
' → logprob: -7.714818000793457
    6. ':list' → logprob: -7.964818000793457
    7. ' list' → logprob: -8.464818000793457
    8. ',' → logprob: -9.839818000793457
    9. '):' → logprob: -9.964818000793457
    10. '  ' → logprob: -10.089818000793457

Token 207: ' #' (ID: 1069)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0320175401866436
    2. ' div' → logprob: -3.782017469406128
    3. 'res' → logprob: -5.657017707824707
    4. '   ' → logprob: -5.907017707824707
    5. ' divis' → logprob: -6.532017707824707
    6. 'import' → logprob: -8.032017707824707
    7. ' res' → logprob: -8.157017707824707
    8. '	div' → logprob: -8.657017707824707
    9. 'd' → logprob: -8.782017707824707
    10. ' ' → logprob: -9.532017707824707

Token 208: ' Dé' (ID: 27247)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0793294757604599
    2. 'res' → logprob: -3.079329490661621
    3. 'import' → logprob: -3.954329490661621
    4. ' div' → logprob: -5.204329490661621
    5. ' res' → logprob: -5.704329490661621
    6. ' divis' → logprob: -7.204329490661621
    7. 'from' → logprob: -7.579329490661621
    8. 'result' → logprob: -8.079329490661621
    9. 'lst' → logprob: -8.579329490661621
    10. '   ' → logprob: -8.829329490661621

Token 209: 'but' (ID: 8293)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49314647912979126
    2. 'f' → logprob: -1.2431464195251465
    3. 'div' → logprob: -2.4931464195251465
    4. '    ' → logprob: -5.7431464195251465
    5. '       ' → logprob: -6.1181464195251465
    6. 'liste' → logprob: -6.1181464195251465
    7. '  ' → logprob: -6.2431464195251465
    8. 'import' → logprob: -7.1181464195251465
    9. 'lis' → logprob: -7.3681464195251465
    10. '      ' → logprob: -7.3681464195251465

Token 210: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3620145916938782
    2. '       ' → logprob: -2.3620145320892334
    3. ' div' → logprob: -2.4870145320892334
    4. 'div' → logprob: -2.8620145320892334
    5. ' divis' → logprob: -3.7370145320892334
    6. ' d' → logprob: -3.9870145320892334
    7. '	div' → logprob: -5.2370147705078125
    8. ' res' → logprob: -5.6120147705078125
    9. 'd' → logprob: -5.8620147705078125
    10. ' lst' → logprob: -5.8620147705078125

Token 211: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0838741064071655
    2. '   ' → logprob: -1.7088741064071655
    3. '[]' → logprob: -2.083874225616455
    4. ' []' → logprob: -2.333874225616455
    5. 'lst' → logprob: -3.333874225616455
    6. 'div' → logprob: -3.458874225616455
    7. 'range' → logprob: -3.458874225616455
    8. ' lst' → logprob: -3.458874225616455
    9. ' ' → logprob: -3.958874225616455
    10. ' range' → logprob: -4.208874225616455

Token 212: ' fonction' (ID: 17610)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.3546278476715088
    2. ' res' → logprob: -1.4796278476715088
    3. 'import' → logprob: -1.4796278476715088
    4. 'result' → logprob: -2.354627847671509
    5. 'liste' → logprob: -2.354627847671509
    6. 'r' → logprob: -2.979627847671509
    7. 'lst' → logprob: -4.35462760925293
    8. 'div' → logprob: -4.35462760925293
    9. ' liste' → logprob: -5.72962760925293
    10. ' result' → logprob: -5.72962760925293

Token 213: ' divisor' (ID: 100482)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28224459290504456
    2. 'div' → logprob: -2.1572446823120117
    3. 'res' → logprob: -3.0322446823120117
    4. '       ' → logprob: -3.1572446823120117
    5. ' div' → logprob: -3.7822446823120117
    6. 'result' → logprob: -5.407244682312012
    7. ' res' → logprob: -5.532244682312012
    8. ' divis' → logprob: -6.032244682312012
    9. 'd' → logprob: -6.532244682312012
    10. ' result' → logprob: -7.282244682312012

Token 214: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5395812392234802
    2. '       ' → logprob: -1.414581298828125
    3. ':' → logprob: -1.914581298828125
    4. 'div' → logprob: -3.914581298828125
    5. ':
' → logprob: -6.789581298828125
    6. 'list' → logprob: -7.039581298828125
    7. ' div' → logprob: -7.039581298828125
    8. '	div' → logprob: -7.539581298828125
    9. ' ' → logprob: -7.664581298828125
    10. 'result' → logprob: -8.164581298828125

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003954324871301651
    2. ' div' → logprob: -6.7539544105529785
    3. '   ' → logprob: -6.8789544105529785
    4. 'div' → logprob: -7.1289544105529785
    5. ' divis' → logprob: -8.00395393371582
    6. '      ' → logprob: -9.62895393371582
    7. '	div' → logprob: -9.75395393371582
    8. 'd' → logprob: -9.87895393371582
    9. '    ' → logprob: -9.87895393371582
    10. ' list' → logprob: -9.87895393371582

Token 216: ' #' (ID: 1069)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.05645003542304039
    2. '   ' → logprob: -3.431450128555298
    3. 'res' → logprob: -4.556449890136719
    4. ' div' → logprob: -4.931449890136719
    5. 'import' → logprob: -5.681449890136719
    6. ' divis' → logprob: -7.806449890136719
    7. 'd' → logprob: -7.931449890136719
    8. '	div' → logprob: -8.556449890136719
    9. '       ' → logprob: -8.681449890136719
    10. ' res' → logprob: -9.056449890136719

Token 217: ' Initial' (ID: 9209)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.05916111171245575
    2. 'res' → logprob: -3.6841611862182617
    3. ' div' → logprob: -3.6841611862182617
    4. ' res' → logprob: -5.559161186218262
    5. ' divis' → logprob: -6.559161186218262
    6. '   ' → logprob: -6.934161186218262
    7. 'import' → logprob: -7.184161186218262
    8. 'result' → logprob: -10.059161186218262
    9. '	div' → logprob: -10.309161186218262
    10. 'd' → logprob: -10.684161186218262

Token 218: 'isation' (ID: 6993)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34665945172309875
    2. 'is' → logprob: -2.7216594219207764
    3. 'ize' → logprob: -2.7216594219207764
    4. 'izers' → logprob: -3.0966594219207764
    5. 'er' → logprob: -4.0966596603393555
    6. 'i' → logprob: -4.4716596603393555
    7. 'isateurs' → logprob: -4.5966596603393555
    8. 'iser' → logprob: -4.7216596603393555
    9. 'isation' → logprob: -4.8466596603393555
    10. '       ' → logprob: -4.8466596603393555

Token 219: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8302960991859436
    2. 'div' → logprob: -1.3302960395812988
    3. ' des' → logprob: -2.330296039581299
    4. ' result' → logprob: -3.455296039581299
    5. ' divis' → logprob: -3.580296039581299
    6. ' div' → logprob: -3.705296039581299
    7. 'result' → logprob: -3.705296039581299
    8. 'res' → logprob: -3.705296039581299
    9. ' res' → logprob: -3.830296039581299
    10. ' d' → logprob: -3.830296039581299

Token 220: ''une' (ID: 13337)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6605234742164612
    2. ' une' → logprob: -1.7855234146118164
    3. ' un' → logprob: -2.2855234146118164
    4. ' ' → logprob: -2.9105234146118164
    5. '[]' → logprob: -3.1605234146118164
    6. ' result' → logprob: -3.6605234146118164
    7. ' []' → logprob: -3.7855234146118164
    8. ' a' → logprob: -4.160523414611816
    9. ' res' → logprob: -4.410523414611816
    10. 'une' → logprob: -4.535523414611816

Token 221: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.3322479724884033
    2. ' liste' → logprob: -1.7072479724884033
    3. 'list' → logprob: -3.4572479724884033
    4. ' list' → logprob: -3.9572479724884033
    5. 'lst' → logprob: -4.332247734069824
    6. '[]' → logprob: -4.832247734069824
    7. ' ' → logprob: -5.082247734069824
    8. 'result' → logprob: -5.082247734069824
    9. ' []' → logprob: -5.207247734069824
    10. ' lst' → logprob: -5.957247734069824

Token 222: ' vide' (ID: 21835)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.4408670663833618
    2. 'div' → logprob: -1.5658670663833618
    3. ' divis' → logprob: -2.1908669471740723
    4. ' =' → logprob: -2.5658669471740723
    5. ' div' → logprob: -2.5658669471740723
    6. ' res' → logprob: -2.6908669471740723
    7. ' result' → logprob: -2.8158669471740723
    8. '   ' → logprob: -2.9408669471740723
    9. ' des' → logprob: -3.1908669471740723
    10. 'res' → logprob: -3.8158669471740723

Token 223: ' qui' (ID: 2780)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.024044979363679886
    2. '   ' → logprob: -4.899044990539551
    3. ' div' → logprob: -5.399044990539551
    4. ' divis' → logprob: -5.649044990539551
    5. 'd' → logprob: -5.899044990539551
    6. '	div' → logprob: -6.274044990539551
    7. 'res' → logprob: -6.899044990539551
    8. '[]' → logprob: -7.024044990539551
    9. ':' → logprob: -7.524044990539551
    10. 'result' → logprob: -7.774044990539551

Token 224: ' va' (ID: 3423)
  Prédit: ' cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cont' → logprob: -0.3593023419380188
    2. ' va' → logprob: -1.609302282333374
    3. ' =' → logprob: -3.484302282333374
    4. 'cont' → logprob: -4.234302520751953
    5. ' stock' → logprob: -4.359302520751953
    6. ' ' → logprob: -4.859302520751953
    7. '=' → logprob: -4.984302520751953
    8. '=[]' → logprob: -5.609302520751953
    9. ' contient' → logprob: -5.734302520751953
    10. ' serv' → logprob: -5.984302520751953

Token 225: ' conten' (ID: 23523)
  Prédit: 'conten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conten' → logprob: -1.0747095346450806
    2. 'acc' → logprob: -1.4497095346450806
    3. 'rec' → logprob: -2.074709415435791
    4. '[]' → logprob: -2.449709415435791
    5. 'con' → logprob: -3.074709415435791
    6. ' conten' → logprob: -3.324709415435791
    7. 'stock' → logprob: -3.449709415435791
    8. 'collect' → logprob: -3.699709415435791
    9. ' accueillir' → logprob: -3.949709415435791
    10. ' recue' → logprob: -4.574709415435791

Token 226: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0182228721678257
    2. 'r' → logprob: -4.018222808837891
    3. 'er' → logprob: -10.51822280883789
    4. 'ur' → logprob: -11.14322280883789
    5. '```' → logprob: -11.26822280883789
    6. '   ' → logprob: -11.39322280883789
    7. 't' → logprob: -13.26822280883789
    8. 'cer' → logprob: -13.76822280883789
    9. '#' → logprob: -13.89322280883789
    10. '``' → logprob: -14.89322280883789

Token 227: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9384406208992004
    2. '[]' → logprob: -0.9384406208992004
    3. 'les' → logprob: -1.6884405612945557
    4. ' []' → logprob: -4.438440799713135
    5. 's' → logprob: -5.063440799713135
    6. 'des' → logprob: -5.813440799713135
    7. ' des' → logprob: -6.063440799713135
    8. 'div' → logprob: -6.438440799713135
    9. ' la' → logprob: -6.563440799713135
    10. ' ' → logprob: -6.563440799713135

Token 228: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.7075895071029663
    2. ' divis' → logprob: -1.2075895071029663
    3. ' div' → logprob: -1.7075895071029663
    4. ' d' → logprob: -4.207589626312256
    5. ' res' → logprob: -5.332589626312256
    6. 'd' → logprob: -5.707589626312256
    7. ' ' → logprob: -6.582589626312256
    8. 'res' → logprob: -7.332589626312256
    9. ' divisor' → logprob: -7.582589626312256
    10. '	div' → logprob: -7.707589626312256

Token 229: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.16119730472564697
    2. '   ' → logprob: -2.0361971855163574
    3. 'is' → logprob: -5.786197185516357
    4. 'i' → logprob: -5.786197185516357
    5. 's' → logprob: -5.911197185516357
    6. '```' → logprob: -5.911197185516357
    7. '    ' → logprob: -6.286197185516357
    8. '       ' → logprob: -6.661197185516357
    9. ']' → logprob: -7.661197185516357
    10. '      ' → logprob: -8.161197662353516

Token 230: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.0006118826568126678
    2. 'rs' → logprob: -8.250612258911133
    3. 'urse' → logprob: -8.500612258911133
    4. 's' → logprob: -9.375612258911133
    5. 'se' → logprob: -10.625612258911133
    6. 'teurs' → logprob: -12.125612258911133
    7. 'ur' → logprob: -12.500612258911133
    8. 'urses' → logprob: -13.000612258911133
    9. '```' → logprob: -13.000612258911133
    10. '   ' → logprob: -13.000612258911133

Token 231: ' trouv' (ID: 40254)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.07688166201114655
    2. '   ' → logprob: -2.9518816471099854
    3. '       ' → logprob: -4.8268818855285645
    4. '	div' → logprob: -5.7018818855285645
    5. 'res' → logprob: -5.8268818855285645
    6. 's' → logprob: -6.2018818855285645
    7. ' div' → logprob: -6.5768818855285645
    8. 'd' → logprob: -6.7018818855285645
    9. ' divis' → logprob: -6.7018818855285645
    10. 'result' → logprob: -7.0768818855285645

Token 232: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.003789388807490468
    2. '=' → logprob: -6.50378942489624
    3. 'es' → logprob: -6.50378942489624
    4. 'é' → logprob: -8.503788948059082
    5. 'er' → logprob: -9.128788948059082
    6. ' =' → logprob: -9.253788948059082
    7. 'ées' → logprob: -9.378788948059082
    8. '   ' → logprob: -9.878788948059082
    9. 'us' → logprob: -10.128788948059082
    10. 's' → logprob: -10.253788948059082

Token 233: '.
' (ID: 558)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.02046573907136917
    2. '   ' → logprob: -4.145465850830078
    3. ' divis' → logprob: -6.770465850830078
    4. '       ' → logprob: -7.020465850830078
    5. '	div' → logprob: -7.145465850830078
    6. ' div' → logprob: -7.145465850830078
    7. 'd' → logprob: -7.395465850830078
    8. 's' → logprob: -9.395465850830078
    9. 'res' → logprob: -10.020465850830078
    10. ' ' → logprob: -11.145465850830078

Token 234: '       ' (ID: 309)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.6100981831550598
    2. '       ' → logprob: -1.360098123550415
    3. ' div' → logprob: -2.235098123550415
    4. ' divis' → logprob: -2.485098123550415
    5. '   ' → logprob: -5.110098361968994
    6. 'd' → logprob: -6.360098361968994
    7. '	div' → logprob: -6.860098361968994
    8. 's' → logprob: -8.360097885131836
    9. ' ' → logprob: -8.610097885131836
    10. ' d' → logprob: -8.735097885131836

Token 235: ' arr' (ID: 1724)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0206514373421669
    2. 'res' → logprob: -4.395651340484619
    3. ' div' → logprob: -5.520651340484619
    4. ' divis' → logprob: -5.895651340484619
    5. ' res' → logprob: -6.895651340484619
    6. '   ' → logprob: -8.395651817321777
    7. 'ans' → logprob: -10.395651817321777
    8. 'd' → logprob: -10.645651817321777
    9. '	div' → logprob: -10.645651817321777
    10. 'result' → logprob: -11.145651817321777

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16988451778888702
    2. '=' → logprob: -1.9198845624923706
    3. '=[]' → logprob: -4.66988468170166
    4. ' ' → logprob: -9.16988468170166
    5. '=[]
' → logprob: -10.04488468170166
    6. 'ay' → logprob: -11.16988468170166
    7. '   ' → logprob: -11.16988468170166
    8. '[]' → logprob: -11.29488468170166
    9. '[:]' → logprob: -11.41988468170166
    10. '=[]
' → logprob: -11.54488468170166

Token 237: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000556012790184468
    2. ' []' → logprob: -7.500555992126465
    3. '[' → logprob: -13.375555992126465
    4. '[]
' → logprob: -13.875555992126465
    5. '[]}' → logprob: -14.875555992126465
    6. '[]

' → logprob: -16.87555694580078
    7. '[],' → logprob: -17.12555694580078
    8. ' ' → logprob: -18.25055694580078
    9. '[]"' → logprob: -18.62555694580078
    10. '[]>' → logprob: -18.75055694580078

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005203640088438988
    2. ' for' → logprob: -6.130203723907471
    3. ',' → logprob: -7.005203723907471
    4. 'for' → logprob: -7.380203723907471
    5. 'import' → logprob: -7.505203723907471
    6. '   ' → logprob: -8.005203247070312
    7. '        
' → logprob: -8.255203247070312
    8. '<|end|>' → logprob: -8.755203247070312
    9. '	' → logprob: -10.005203247070312
    10. ' ' → logprob: -10.630203247070312

Token 239: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4127264618873596
    2. 'for' → logprob: -1.2877264022827148
    3. 'i' → logprob: -3.662726402282715
    4. 'import' → logprob: -3.912726402282715
    5. ' for' → logprob: -4.537726402282715
    6. '   ' → logprob: -5.287726402282715
    7. ' i' → logprob: -7.412726402282715
    8. 'from' → logprob: -8.912726402282715
    9. 'r' → logprob: -10.287726402282715
    10. ' import' → logprob: -10.537726402282715

Token 240: ' On' (ID: 2160)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02338418737053871
    2. 'for' → logprob: -4.398384094238281
    3. 'import' → logprob: -4.648384094238281
    4. ' i' → logprob: -7.273384094238281
    5. '   ' → logprob: -8.023384094238281
    6. ' ' → logprob: -9.148384094238281
    7. 'from' → logprob: -9.773384094238281
    8. ' for' → logprob: -10.648384094238281
    9. ' import' → logprob: -12.273384094238281
    10. 'k' → logprob: -12.398384094238281

Token 241: ' va' (ID: 3423)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4863406717777252
    2. 'import' → logprob: -1.8613406419754028
    3. ' import' → logprob: -2.3613407611846924
    4. 'for' → logprob: -2.7363407611846924
    5. ' i' → logprob: -3.1113407611846924
    6. ' ' → logprob: -4.236340522766113
    7. ' from' → logprob: -4.986340522766113
    8. 'i' → logprob: -5.986340522766113
    9. 'from' → logprob: -6.361340522766113
    10. ' a' → logprob: -9.361340522766113

Token 242: ' parcour' (ID: 130642)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2182026207447052
    2. ' for' → logprob: -2.343202590942383
    3. 'i' → logprob: -2.718202590942383
    4. 'for' → logprob: -4.093202590942383
    5. 'import' → logprob: -5.093202590942383
    6. ' ' → logprob: -5.093202590942383
    7. ' range' → logprob: -6.093202590942383
    8. ' import' → logprob: -6.468202590942383
    9. 'range' → logprob: -7.093202590942383
    10. 'from' → logprob: -8.718202590942383

Token 243: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -7.004696090007201e-05
    2. 'r' → logprob: -9.750069618225098
    3. 'i' → logprob: -11.875069618225098
    4. 'rir' → logprob: -12.750069618225098
    5. '_ir' → logprob: -14.375069618225098
    6. '   ' → logprob: -15.375069618225098
    7. 'ur' → logprob: -15.625069618225098
    8. '_' → logprob: -15.875069618225098
    9. '```' → logprob: -16.125070571899414
    10. '       ' → logprob: -16.375070571899414

Token 244: ' tous' (ID: 10688)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20143146812915802
    2. 'i' → logprob: -1.7014315128326416
    3. ' ' → logprob: -11.076431274414062
    4. '	i' → logprob: -13.326431274414062
    5. ' range' → logprob: -14.576431274414062
    6. 'range' → logprob: -15.076431274414062
    7. 'import' → logprob: -16.076431274414062
    8. ' for' → logprob: -16.451431274414062
    9. 'j' → logprob: -17.451431274414062
    10. 'for' → logprob: -17.451431274414062

Token 245: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02342599257826805
    2. 'i' → logprob: -3.773426055908203
    3. ' ' → logprob: -9.148426055908203
    4. '	i' → logprob: -9.648426055908203
    5. '   ' → logprob: -12.523426055908203
    6. '(i' → logprob: -12.648426055908203
    7. '  ' → logprob: -13.273426055908203
    8. '    ' → logprob: -14.898426055908203
    9. ' d' → logprob: -16.273426055908203
    10. ' range' → logprob: -16.398426055908203

Token 246: ' ent' (ID: 1121)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16029469668865204
    2. ' i' → logprob: -1.9102946519851685
    3. ' ' → logprob: -9.660294532775879
    4. '   ' → logprob: -13.035294532775879
    5. '	i' → logprob: -13.035294532775879
    6. '  ' → logprob: -13.410294532775879
    7. 'k' → logprob: -15.660294532775879
    8. '    ' → logprob: -15.660294532775879
    9. 'x' → logprob: -15.785294532775879
    10. 'd' → logprob: -16.160295486450195

Token 247: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0014341588830575347
    2. 'ier' → logprob: -7.001434326171875
    3. 'i' → logprob: -7.626434326171875
    4. '   ' → logprob: -10.751434326171875
    5. ' i' → logprob: -12.376434326171875
    6. '       ' → logprob: -12.751434326171875
    7. 'range' → logprob: -12.751434326171875
    8. 'ières' → logprob: -14.126434326171875
    9. 'iert' → logprob: -14.876434326171875
    10. ' ' → logprob: -14.876434326171875

Token 248: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1803235113620758
    2. 'i' → logprob: -1.8053234815597534
    3. 'from' → logprob: -8.680323600769043
    4. '(i' → logprob: -9.055323600769043
    5. ' from' → logprob: -9.555323600769043
    6. 'import' → logprob: -9.555323600769043
    7. '	i' → logprob: -9.680323600769043
    8. ' ' → logprob: -9.680323600769043
    9. '   ' → logprob: -11.430323600769043
    10. '(' → logprob: -12.055323600769043

Token 249: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10138478130102158
    2. ' ' → logprob: -3.2263848781585693
    3. 'import' → logprob: -3.9763848781585693
    4. ' from' → logprob: -4.60138463973999
    5. 'in' → logprob: -5.10138463973999
    6. ' en' → logprob: -5.35138463973999
    7. ' range' → logprob: -5.47638463973999
    8. 'from' → logprob: -5.85138463973999
    9. 'range' → logprob: -5.97638463973999
    10. ' i' → logprob: -6.47638463973999

Token 250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030916929244995117
    2. ' ' → logprob: -3.530916929244995
    3. 'range' → logprob: -7.405917167663574
    4. ' range' → logprob: -7.530917167663574
    5. '2' → logprob: -11.405917167663574
    6. '   ' → logprob: -12.155917167663574
    7. '```' → logprob: -13.780917167663574
    8. '  ' → logprob: -13.780917167663574
    9. '    ' → logprob: -14.280917167663574
    10. 'l' → logprob: -14.405917167663574

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015963915502652526
    2. ' ' → logprob: -6.626596450805664
    3. 'range' → logprob: -8.501596450805664
    4. ' range' → logprob: -9.876596450805664
    5. '2' → logprob: -11.251596450805664
    6. '   ' → logprob: -13.626596450805664
    7. '```' → logprob: -14.501596450805664
    8. '(' → logprob: -14.626596450805664
    9. '  ' → logprob: -15.501596450805664
    10. 'import' → logprob: -16.126596450805664

Token 252: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4473142921924591
    2. ' à' → logprob: -1.4473142623901367
    3. ' ' → logprob: -2.6973142623901367
    4. ' ,' → logprob: -3.8223142623901367
    5. ' jusqu' → logprob: -3.8223142623901367
    6. 'à' → logprob: -5.447314262390137
    7. 'import' → logprob: -5.572314262390137
    8. '   ' → logprob: -6.697314262390137
    9. ' import' → logprob: -7.072314262390137
    10. ' i' → logprob: -7.322314262390137

Token 253: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9084023833274841
    2. ''à' → logprob: -1.533402442932129
    3. 'à' → logprob: -1.658402442932129
    4. '’à' → logprob: -2.658402442932129
    5. 'int' → logprob: -3.658402442932129
    6. 'i' → logprob: -3.783402442932129
    7. '(int' → logprob: -4.408402442932129
    8. ' a' → logprob: -4.658402442932129
    9. 'a' → logprob: -4.658402442932129
    10. '=int' → logprob: -5.408402442932129

Token 254: ' rac' (ID: 12334)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6165350675582886
    2. 'int' → logprob: -0.8665350675582886
    3. ' n' → logprob: -3.616535186767578
    4. 'n' → logprob: -4.366535186767578
    5. '(int' → logprob: -9.616535186767578
    6. ' ' → logprob: -9.866535186767578
    7. ' (' → logprob: -10.491535186767578
    8. '   ' → logprob: -10.491535186767578
    9. '	int' → logprob: -11.116535186767578
    10. ' i' → logprob: -12.366535186767578

Token 255: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.0019486293895170093
    2. '```' → logprob: -7.001948833465576
    3. 'i' → logprob: -7.501948833465576
    4. '   ' → logprob: -8.876948356628418
    5. 'e' → logprob: -9.126948356628418
    6. '``' → logprob: -10.001948356628418
    7. '**' → logprob: -10.501948356628418
    8. '1' → logprob: -10.751948356628418
    9. '  ' → logprob: -10.876948356628418
    10. ' ' → logprob: -11.126948356628418

Token 256: ' carr' (ID: 18321)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05046370252966881
    2. '(int' → logprob: -3.8004636764526367
    3. ' int' → logprob: -4.675463676452637
    4. '(' → logprob: -5.175463676452637
    5. '       ' → logprob: -5.800463676452637
    6. 'n' → logprob: -6.050463676452637
    7. '   ' → logprob: -6.550463676452637
    8. 's' → logprob: -7.175463676452637
    9. '(n' → logprob: -7.550463676452637
    10. ' (' → logprob: -7.675463676452637

Token 257: 'ée' (ID: 2894)
  Prédit: 'ière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.6408758163452148
    2. 'ine' → logprob: -1.7658758163452148
    3. 'i' → logprob: -2.265875816345215
    4. 'ère' → logprob: -2.640875816345215
    5. 'in' → logprob: -3.265875816345215
    6. '```' → logprob: -3.265875816345215
    7. 'iné' → logprob: -3.390875816345215
    8. 'ic' → logprob: -5.515875816345215
    9. '   ' → logprob: -6.015875816345215
    10. 'e' → logprob: -6.640875816345215

Token 258: ' de' (ID: 334)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23718738555908203
    2. '(' → logprob: -2.362187385559082
    3. '(int' → logprob: -3.112187385559082
    4. ' int' → logprob: -3.112187385559082
    5. ' (' → logprob: -4.362187385559082
    6. '(n' → logprob: -4.862187385559082
    7. 'import' → logprob: -6.487187385559082
    8. 'n' → logprob: -6.612187385559082
    9. ' ' → logprob: -6.737187385559082
    10. '   ' → logprob: -7.237187385559082

Token 259: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20349183678627014
    2. 'n' → logprob: -1.7034918069839478
    3. ' int' → logprob: -6.703491687774658
    4. 'int' → logprob: -7.453491687774658
    5. '(n' → logprob: -8.828492164611816
    6. ' ' → logprob: -9.703492164611816
    7. '(int' → logprob: -11.078492164611816
    8. ' (' → logprob: -11.078492164611816
    9. '	n' → logprob: -11.203492164611816
    10. '   ' → logprob: -11.703492164611816

Token 260: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.49874988198280334
    2. ' (' → logprob: -1.748749852180481
    3. ',' → logprob: -2.4987499713897705
    4. '(' → logprob: -2.7487499713897705
    5. ' +' → logprob: -3.8737499713897705
    6. ' import' → logprob: -3.8737499713897705
    7. '+' → logprob: -4.748749732971191
    8. '   ' → logprob: -4.998749732971191
    9. '       ' → logprob: -5.123749732971191
    10. ' for' → logprob: -5.373749732971191

Token 261: 'borne' (ID: 52545)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7431846261024475
    2. '(int' → logprob: -2.1181845664978027
    3. ' int' → logprob: -2.4931845664978027
    4. ' +' → logprob: -2.7431845664978027
    5. ' (' → logprob: -2.8681845664978027
    6. '(' → logprob: -3.1181845664978027
    7. ',' → logprob: -3.2431845664978027
    8. 'import' → logprob: -3.2431845664978027
    9. '+' → logprob: -3.3681845664978027
    10. '(n' → logprob: -4.868184566497803

Token 262: ' supérieure' (ID: 106336)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.036449629813432693
    2. 'int' → logprob: -3.536449670791626
    3. ' import' → logprob: -6.286449432373047
    4. '   ' → logprob: -6.536449432373047
    5. '=int' → logprob: -6.536449432373047
    6. ' int' → logprob: -6.786449432373047
    7. '(int' → logprob: -7.911449432373047
    8. '```' → logprob: -8.911449432373047
    9. ')' → logprob: -9.286449432373047
    10. ':int' → logprob: -10.661449432373047

Token 263: ' incl' (ID: 11368)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3589271306991577
    2. 'import' → logprob: -1.7339271306991577
    3. ',' → logprob: -2.3589272499084473
    4. '   ' → logprob: -2.3589272499084473
    5. ')' → logprob: -2.6089272499084473
    6. ' int' → logprob: -2.6089272499084473
    7. '+' → logprob: -2.8589272499084473
    8. '(int' → logprob: -3.1089272499084473
    9. ' +' → logprob: -3.1089272499084473
    10. '=int' → logprob: -3.7339272499084473

Token 264: 'use' (ID: 1821)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.1031387448310852
    2. 'use' → logprob: -2.3531386852264404
    3. 'u' → logprob: -5.8531389236450195
    4. 'usive' → logprob: -10.72813892364502
    5. 'e' → logprob: -11.22813892364502
    6. 'us' → logprob: -11.60313892364502
    7. 'uée' → logprob: -12.72813892364502
    8. 'ude' → logprob: -13.10313892364502
    9. 'urée' → logprob: -13.22813892364502
    10. 'ueuse' → logprob: -13.85313892364502

Token 265: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9120442867279053
    2. ' +' → logprob: -1.7870442867279053
    3. '(n' → logprob: -2.0370442867279053
    4. ',' → logprob: -2.6620442867279053
    5. '(' → logprob: -2.9120442867279053
    6. ')' → logprob: -3.1620442867279053
    7. 'import' → logprob: -3.2870442867279053
    8. '):' → logprob: -3.4120442867279053
    9. ')+' → logprob: -3.7870442867279053
    10. ' (' → logprob: -4.162044525146484

Token 266: '       ' (ID: 309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3298279643058777
    2. '   ' → logprob: -2.0798280239105225
    3. ' import' → logprob: -2.9548280239105225
    4. ',' → logprob: -3.5798280239105225
    5. ':' → logprob: -3.9548280239105225
    6. ' (' → logprob: -4.204827785491943
    7. '       ' → logprob: -4.329827785491943
    8. '(' → logprob: -4.829827785491943
    9. ' ' → logprob: -4.829827785491943
    10. ' for' → logprob: -5.204827785491943

Token 267: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.46862927079200745
    2. ' for' → logprob: -1.343629240989685
    3. ' i' → logprob: -3.5936293601989746
    4. ' import' → logprob: -3.9686293601989746
    5. '       ' → logprob: -4.218629360198975
    6. 'for' → logprob: -4.218629360198975
    7. '   ' → logprob: -4.343629360198975
    8. ' (' → logprob: -4.968629360198975
    9. 'int' → logprob: -5.218629360198975
    10. ' range' → logprob: -6.093629360198975

Token 268: ' Le' (ID: 2018)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3272324502468109
    2. ' for' → logprob: -1.9522324800491333
    3. ' i' → logprob: -2.3272323608398438
    4. ' import' → logprob: -3.7022323608398438
    5. 'for' → logprob: -4.827232360839844
    6. ' from' → logprob: -5.827232360839844
    7. 'from' → logprob: -6.327232360839844
    8. ' range' → logprob: -7.202232360839844
    9. 'i' → logprob: -7.327232360839844
    10. '   ' → logprob: -8.702232360839844

Token 269: ' but' (ID: 889)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9379127621650696
    2. ' for' → logprob: -1.0629127025604248
    3. ' ' → logprob: -2.437912702560425
    4. 'i' → logprob: -2.812912702560425
    5. ' int' → logprob: -3.562912702560425
    6. 'import' → logprob: -3.687912702560425
    7. ' import' → logprob: -4.062912940979004
    8. ' range' → logprob: -4.437912940979004
    9. 'for' → logprob: -4.687912940979004
    10. 'int' → logprob: -5.062912940979004

Token 270: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.96663498878479
    2. ' =' → logprob: -1.21663498878479
    3. ' is' → logprob: -2.21663498878479
    4. ' i' → logprob: -2.46663498878479
    5. '=' → logprob: -3.09163498878479
    6. ' n' → logprob: -3.59163498878479
    7. ' for' → logprob: -3.59163498878479
    8. ' ' → logprob: -4.966634750366211
    9. ' in' → logprob: -5.341634750366211
    10. 'est' → logprob: -5.841634750366211

Token 271: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.943266749382019
    2. ' de' → logprob: -0.943266749382019
    3. ' for' → logprob: -2.5682668685913086
    4. '    ' → logprob: -2.6932668685913086
    5. ' i' → logprob: -3.0682668685913086
    6. ' ' → logprob: -4.443266868591309
    7. '   ' → logprob: -4.693266868591309
    8. ' range' → logprob: -5.818266868591309
    9. 'for' → logprob: -6.568266868591309
    10. ' in' → logprob: -6.943266868591309

Token 272: ''' (ID: 6)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37977340817451477
    2. 'range' → logprob: -1.8797733783721924
    3. ' for' → logprob: -2.8797733783721924
    4. 'i' → logprob: -3.1297733783721924
    5. 'e' → logprob: -3.6297733783721924
    6. ' range' → logprob: -4.6297736167907715
    7. 'or' → logprob: -4.7547736167907715
    8. '   ' → logprob: -5.7547736167907715
    9. 'ef' → logprob: -6.5047736167907715
    10. ' i' → logprob: -6.6297736167907715

Token 273: 'optim' (ID: 29513)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0045826435089111
    2. 'i' → logprob: -1.3795826435089111
    3. 'for' → logprob: -1.3795826435089111
    4. ' for' → logprob: -3.129582643508911
    5. 'import' → logprob: -4.254582405090332
    6. '
' → logprob: -4.379582405090332
    7. 'enumer' → logprob: -4.379582405090332
    8. 'aller' → logprob: -5.129582405090332
    9. ' i' → logprob: -5.129582405090332
    10. ' range' → logprob: -5.254582405090332

Token 274: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.008298715576529503
    2. 'isé' → logprob: -5.383298873901367
    3. 'is' → logprob: -6.383298873901367
    4. 'izer' → logprob: -7.383298873901367
    5. 'al' → logprob: -7.633298873901367
    6. '```' → logprob: -8.633298873901367
    7. 'isée' → logprob: -9.008298873901367
    8. '   ' → logprob: -9.258298873901367
    9. 'ise' → logprob: -9.508298873901367
    10. '#' → logprob: -10.008298873901367

Token 275: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3699292242527008
    2. ' range' → logprob: -1.9949291944503784
    3. ' for' → logprob: -2.869929313659668
    4. 'range' → logprob: -3.119929313659668
    5. ' ' → logprob: -3.494929313659668
    6. ' import' → logprob: -4.369929313659668
    7. 'import' → logprob: -4.494929313659668
    8. ' int' → logprob: -5.119929313659668
    9. 'i' → logprob: -5.244929313659668
    10. 'int' → logprob: -5.994929313659668

Token 276: ' nombre' (ID: 9733)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1436512470245361
    2. 'i' → logprob: -1.5186512470245361
    3. ' range' → logprob: -2.268651247024536
    4. 'int' → logprob: -2.393651247024536
    5. 'range' → logprob: -2.518651247024536
    6. 'import' → logprob: -2.768651247024536
    7. ' for' → logprob: -2.768651247024536
    8. ' int' → logprob: -3.893651247024536
    9. 'for' → logprob: -4.393651008605957
    10. ' import' → logprob: -4.518651008605957

Token 277: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2131062746047974
    2. ' for' → logprob: -1.4631062746047974
    3. 'import' → logprob: -1.7131062746047974
    4. 'for' → logprob: -2.213106155395508
    5. ' de' → logprob: -2.713106155395508
    6. ' i' → logprob: -2.963106155395508
    7. ' des' → logprob: -4.213106155395508
    8. 'range' → logprob: -4.213106155395508
    9. ' range' → logprob: -4.713106155395508
    10. ' import' → logprob: -4.713106155395508

Token 278: ''' (ID: 6)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05194515362381935
    2. 'i' → logprob: -3.301945209503174
    3. ' range' → logprob: -4.926945209503174
    4. ' ' → logprob: -5.426945209503174
    5. 'range' → logprob: -6.551945209503174
    6. ' for' → logprob: -8.426944732666016
    7. '_' → logprob: -8.676944732666016
    8. '   ' → logprob: -9.426944732666016
    9. '  ' → logprob: -9.551944732666016
    10. 's' → logprob: -10.676944732666016

Token 279: 'it' (ID: 278)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23884902894496918
    2. 'i' → logprob: -1.6138490438461304
    3. ' ' → logprob: -5.23884916305542
    4. 'iterations' → logprob: -5.23884916305542
    5. ' iterations' → logprob: -6.98884916305542
    6. ' for' → logprob: -7.86384916305542
    7. 'range' → logprob: -7.86384916305542
    8. ' range' → logprob: -8.988848686218262
    9. ' it' → logprob: -9.113848686218262
    10. ' iter' → logprob: -9.238848686218262

Token 280: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.022190969437360764
    2. 'er' → logprob: -4.772191047668457
    3. 'ération' → logprob: -5.272191047668457
    4. 'érés' → logprob: -5.522191047668457
    5. 'ér' → logprob: -5.897191047668457
    6. 'éra' → logprob: -8.147191047668457
    7. '   ' → logprob: -8.272191047668457
    8. 'érées' → logprob: -8.272191047668457
    9. 'for' → logprob: -8.647191047668457
    10. 'é' → logprob: -8.897191047668457

Token 281: '.' (ID: 13)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12537437677383423
    2. '       ' → logprob: -3.3753743171691895
    3. ' for' → logprob: -3.3753743171691895
    4. '   ' → logprob: -4.1253743171691895
    5. 'for' → logprob: -4.1253743171691895
    6. ' import' → logprob: -4.5003743171691895
    7. 'from' → logprob: -6.3753743171691895
    8. ',' → logprob: -6.7503743171691895
    9. 'range' → logprob: -7.3753743171691895
    10. ' i' → logprob: -7.7503743171691895

Token 282: ' Pour' (ID: 13931)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8251379728317261
    2. '   ' → logprob: -1.325137972831726
    3. ' for' → logprob: -1.450137972831726
    4. 'for' → logprob: -3.4501380920410156
    5. '       ' → logprob: -3.8251380920410156
    6. ' import' → logprob: -5.325138092041016
    7. 'from' → logprob: -6.325138092041016
    8. ' from' → logprob: -6.950138092041016
    9. ' ' → logprob: -9.200138092041016
    10. ' i' → logprob: -9.450138092041016

Token 283: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16022686660289764
    2. 'i' → logprob: -1.910226821899414
    3. '	i' → logprob: -13.660226821899414
    4. ' ' → logprob: -13.785226821899414
    5. ' ' → logprob: -15.160226821899414
    6. '```' → logprob: -16.910226821899414
    7. '  ' → logprob: -17.660226821899414
    8. '1' → logprob: -17.660226821899414
    9. '   ' → logprob: -17.660226821899414
    10. '(i' → logprob: -17.910226821899414

Token 284: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07924368977546692
    2. 'i' → logprob: -2.5792436599731445
    3. ' ' → logprob: -8.329243659973145
    4. '   ' → logprob: -10.204243659973145
    5. ' for' → logprob: -10.329243659973145
    6. ' in' → logprob: -11.329243659973145
    7. '	i' → logprob: -11.579243659973145
    8. '    ' → logprob: -12.204243659973145
    9. '  ' → logprob: -12.329243659973145
    10. 'for' → logprob: -12.954243659973145

Token 285: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006920207757502794
    2. 'in' → logprob: -5.006920337677002
    3. 'dans' → logprob: -9.881919860839844
    4. ' dans' → logprob: -10.256919860839844
    5. ' ' → logprob: -10.756919860839844
    6. ',' → logprob: -11.131919860839844
    7. ' i' → logprob: -11.381919860839844
    8. ' ' → logprob: -11.506919860839844
    9. 'import' → logprob: -11.881919860839844
    10. 'en' → logprob: -11.881919860839844

Token 286: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23983627557754517
    2. ' for' → logprob: -2.4898362159729004
    3. 'if' → logprob: -2.6148362159729004
    4. ' i' → logprob: -3.2398362159729004
    5. 'for' → logprob: -4.1148362159729
    6. 'i' → logprob: -7.4898362159729
    7. 'import' → logprob: -8.114836692810059
    8. '   ' → logprob: -8.364836692810059
    9. ' ' → logprob: -9.114836692810059
    10. '       ' → logprob: -9.114836692810059

Token 287: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.053642597049474716
    2. ' n' → logprob: -3.428642511367798
    3. 'i' → logprob: -4.053642749786377
    4. 'n' → logprob: -6.053642749786377
    5. ' ' → logprob: -9.678642272949219
    6. '(i' → logprob: -11.803642272949219
    7. '   ' → logprob: -12.553642272949219
    8. ' (' → logprob: -12.678642272949219
    9. '	i' → logprob: -13.053642272949219
    10. ' int' → logprob: -13.178642272949219

Token 288: ' div' (ID: 4223)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.26046785712242126
    2. '*' → logprob: -1.8854678869247437
    3. ' <=' → logprob: -2.885467767715454
    4. '*i' → logprob: -4.885468006134033
    5. '<=' → logprob: -5.635468006134033
    6. ' ' → logprob: -5.635468006134033
    7. '**' → logprob: -5.760468006134033
    8. ' in' → logprob: -6.260468006134033
    9. ' if' → logprob: -7.760468006134033
    10. '   ' → logprob: -8.385467529296875

Token 289: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.22805242240428925
    2. 'ide' → logprob: -1.7280523777008057
    3. 'ides' → logprob: -3.7280523777008057
    4. 'isible' → logprob: -7.603052616119385
    5. 'i' → logprob: -7.728052616119385
    6. '   ' → logprob: -8.103052139282227
    7. 'ises' → logprob: -8.478052139282227
    8. 'erse' → logprob: -8.853052139282227
    9. 'isé' → logprob: -9.228052139282227
    10. 'e' → logprob: -9.478052139282227

Token 290: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07002823799848557
    2. 'n' → logprob: -2.695028305053711
    3. '(n' → logprob: -9.695028305053711
    4. ' ' → logprob: -11.570028305053711
    5. '	n' → logprob: -11.695028305053711
    6. ' ' → logprob: -13.195028305053711
    7. ' ,' → logprob: -13.570028305053711
    8. '[n' → logprob: -14.070028305053711
    9. ')n' → logprob: -14.070028305053711
    10. 'i' → logprob: -14.195028305053711

Token 291: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5467608571052551
    2. ' ,' → logprob: -1.1717607975006104
    3. ' ' → logprob: -3.7967607975006104
    4. ':' → logprob: -3.7967607975006104
    5. ' :' → logprob: -3.9217607975006104
    6. ' and' → logprob: -4.4217610359191895
    7. '   ' → logprob: -4.9217610359191895
    8. ' n' → logprob: -5.2967610359191895
    9. 'and' → logprob: -5.2967610359191895
    10. ' %' → logprob: -5.2967610359191895

Token 292: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0066825151443481
    2. '       ' → logprob: -1.5066825151443481
    3. ' for' → logprob: -2.2566823959350586
    4. ' i' → logprob: -2.3816823959350586
    5. ':' → logprob: -2.5066823959350586
    6. 'for' → logprob: -2.7566823959350586
    7. ' :' → logprob: -4.381682395935059
    8. '    ' → logprob: -4.756682395935059
    9. 'i' → logprob: -4.756682395935059
    10. ',' → logprob: -5.006682395935059

Token 293: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6417837142944336
    2. '   ' → logprob: -1.8917837142944336
    3. ' for' → logprob: -2.0167837142944336
    4. ' i' → logprob: -2.1417837142944336
    5. ' if' → logprob: -2.1417837142944336
    6. '    ' → logprob: -2.6417837142944336
    7. 'for' → logprob: -2.7667837142944336
    8. 'if' → logprob: -3.0167837142944336
    9. ' ' → logprob: -3.5167837142944336
    10. 'import' → logprob: -4.266783714294434

Token 294: ' alors' (ID: 17971)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.042584821581840515
    2. ' if' → logprob: -4.0425848960876465
    3. 'i' → logprob: -4.1675848960876465
    4. ' n' → logprob: -5.1675848960876465
    5. ' ' → logprob: -6.7925848960876465
    6. 'n' → logprob: -7.5425848960876465
    7. '    ' → logprob: -7.5425848960876465
    8. 'if' → logprob: -7.6675848960876465
    9. ' for' → logprob: -8.667584419250488
    10. '   ' → logprob: -10.042584419250488

Token 295: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.473151296377182
    2. ' arr' → logprob: -1.5981513261795044
    3. 'arr' → logprob: -2.348151206970215
    4. 'if' → logprob: -3.098151206970215
    5. '       ' → logprob: -4.473151206970215
    6. ' j' → logprob: -4.723151206970215
    7. 'j' → logprob: -5.348151206970215
    8. ' n' → logprob: -5.473151206970215
    9. ' for' → logprob: -6.598151206970215
    10. '   ' → logprob: -7.223151206970215

Token 296: 'n' (ID: 77)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38157403469085693
    2. 'i' → logprob: -1.506574034690857
    3. ' n' → logprob: -2.8815741539001465
    4. 'n' → logprob: -3.5065741539001465
    5. ' j' → logprob: -6.1315741539001465
    6. ')' → logprob: -6.3815741539001465
    7. '   ' → logprob: -6.3815741539001465
    8. 'j' → logprob: -6.7565741539001465
    9. '    ' → logprob: -7.1315741539001465
    10. ' )' → logprob: -8.256573677062988

Token 297: ' //' (ID: 602)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.40349051356315613
    2. '%i' → logprob: -1.7784905433654785
    3. '%' → logprob: -1.9034905433654785
    4. '   ' → logprob: -5.5284905433654785
    5. ' //' → logprob: -5.9034905433654785
    6. ')' → logprob: -5.9034905433654785
    7. ' ' → logprob: -6.4034905433654785
    8. ' ' → logprob: -7.1534905433654785
    9. '//' → logprob: -7.4034905433654785
    10. '%d' → logprob: -7.7784905433654785

Token 298: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02325817570090294
    2. ' i' → logprob: -3.7732582092285156
    3. '	i' → logprob: -12.023258209228516
    4. ')i' → logprob: -12.898258209228516
    5. ')' → logprob: -13.273258209228516
    6. '   ' → logprob: -13.773258209228516
    7. ' ' → logprob: -13.898258209228516
    8. '  ' → logprob: -15.398258209228516
    9. '```' → logprob: -15.898258209228516
    10. '    ' → logprob: -17.648258209228516

Token 299: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012533433735370636
    2. ')%' → logprob: -4.762533664703369
    3. ' )' → logprob: -6.262533664703369
    4. '%' → logprob: -6.512533664703369
    5. ' %' → logprob: -7.887533664703369
    6. ',' → logprob: -10.512533187866211
    7. '%i' → logprob: -10.887533187866211
    8. '),' → logprob: -11.137533187866211
    9. ')i' → logprob: -11.262533187866211
    10. '%e' → logprob: -11.637533187866211

Token 300: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4337187111377716
    2. ',' → logprob: -1.8087186813354492
    3. '%' → logprob: -2.433718681335449
    4. ' est' → logprob: -3.433718681335449
    5. ' ,' → logprob: -4.558718681335449
    6. '   ' → logprob: -4.683718681335449
    7. ' is' → logprob: -4.933718681335449
    8. ' =' → logprob: -5.058718681335449
    9. ' ' → logprob: -5.058718681335449
    10. ' %' → logprob: -5.683718681335449

Token 301: ' aussi' (ID: 9894)
  Prédit: ' aussi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aussi' → logprob: -0.5568510293960571
    2. ' un' → logprob: -1.8068510293960571
    3. 'a' → logprob: -2.1818509101867676
    4. 'égal' → logprob: -2.5568509101867676
    5. 'un' → logprob: -3.5568509101867676
    6. ' also' → logprob: -3.9318509101867676
    7. ' également' → logprob: -4.306850910186768
    8. ' a' → logprob: -5.306850910186768
    9. 'also' → logprob: -5.806850910186768
    10. ' égal' → logprob: -6.556850910186768

Token 302: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2858249247074127
    2. 'un' → logprob: -1.4108248949050903
    3. 'a' → logprob: -5.660824775695801
    4. ' a' → logprob: -7.285824775695801
    5. 'div' → logprob: -7.910824775695801
    6. ' div' → logprob: -10.2858247756958
    7. ''un' → logprob: -10.6608247756958
    8. 'égal' → logprob: -11.0358247756958
    9. '_un' → logprob: -11.2858247756958
    10. ' aussi' → logprob: -11.4108247756958

Token 303: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.026635700836777687
    2. ' div' → logprob: -3.6516356468200684
    3. ' divisor' → logprob: -8.651636123657227
    4. 'arr' → logprob: -9.901636123657227
    5. ' divis' → logprob: -10.151636123657227
    6. '	div' → logprob: -10.276636123657227
    7. '
' → logprob: -11.776636123657227
    8. ' divid' → logprob: -12.026636123657227
    9. ' ' → logprob: -12.401636123657227
    10. '```' → logprob: -12.651636123657227

Token 304: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.0006784808938391507
    2. 'isor' → logprob: -7.875678539276123
    3. 'isible' → logprob: -9.250678062438965
    4. 'isateur' → logprob: -9.250678062438965
    5. 'ise' → logprob: -10.625678062438965
    6. '```' → logprob: -10.750678062438965
    7. 'is' → logprob: -11.000678062438965
    8. '   ' → logprob: -11.125678062438965
    9. 'isseur' → logprob: -11.375678062438965
    10. 'isé' → logprob: -12.375678062438965

Token 305: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03593295440077782
    2. '   ' → logprob: -4.035933017730713
    3. ',' → logprob: -4.285933017730713
    4. '.' → logprob: -6.535933017730713
    5. ',
' → logprob: -6.660933017730713
    6. '.
' → logprob: -8.535932540893555
    7. 'for' → logprob: -8.660932540893555
    8. '           ' → logprob: -9.285932540893555
    9. ' ,' → logprob: -9.660932540893555
    10. ' ' → logprob: -9.785932540893555

Token 306: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12697282433509827
    2. ' n' → logprob: -2.1269729137420654
    3. ' ' → logprob: -11.001973152160645
    4. 'i' → logprob: -12.126973152160645
    5. '	n' → logprob: -12.376973152160645
    6. ',' → logprob: -12.376973152160645
    7. '```' → logprob: -12.376973152160645
    8. ' i' → logprob: -12.501973152160645
    9. '   ' → logprob: -13.126973152160645
    10. ' ' → logprob: -13.751973152160645

Token 307: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022226527333259583
    2. ',' → logprob: -4.147226333618164
    3. '.' → logprob: -5.522226333618164
    4. '   ' → logprob: -6.647226333618164
    5. ':' → logprob: -8.397226333618164
    6. ',
' → logprob: -8.772226333618164
    7. ' for' → logprob: -8.897226333618164
    8. '	' → logprob: -9.022226333618164
    9. 'for' → logprob: -9.772226333618164
    10. ')' → logprob: -10.022226333618164

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17239435017108917
    2. '   ' → logprob: -2.297394275665283
    3. ' for' → logprob: -3.047394275665283
    4. 'for' → logprob: -4.922394275665283
    5. 'import' → logprob: -6.297394275665283
    6. '	for' → logprob: -8.047394752502441
    7. ' ' → logprob: -8.547394752502441
    8. ':' → logprob: -9.047394752502441
    9. ' i' → logprob: -9.172394752502441
    10. '	' → logprob: -9.172394752502441

Token 309: ' for' (ID: 395)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7951390147209167
    2. ' for' → logprob: -1.4201390743255615
    3. 'for' (adapté à ' for') → logprob: -1.5451390743255615
    4. '   ' → logprob: -3.0451390743255615
    5. '       ' → logprob: -3.6701390743255615
    6. 'from' → logprob: -4.420138835906982
    7. ' import' → logprob: -5.295138835906982
    8. ' from' → logprob: -6.170138835906982
    9. ' i' → logprob: -7.295138835906982
    10. 'i' → logprob: -7.795138835906982

Token 310: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007607697509229183
    2. 'i' → logprob: -4.882607460021973
    3. '	i' → logprob: -13.882607460021973
    4. ' ' → logprob: -14.632607460021973
    5. '(i' → logprob: -16.63260841369629
    6. '```' → logprob: -16.88260841369629
    7. ' ' → logprob: -17.00760841369629
    8. '  ' → logprob: -18.50760841369629
    9. 'I' → logprob: -18.75760841369629
    10. '_i' → logprob: -18.88260841369629

Token 311: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005984966643154621
    2. 'in' → logprob: -5.130984783172607
    3. ' ' → logprob: -10.005985260009766
    4. '1' → logprob: -12.255985260009766
    5. 's' → logprob: -13.880985260009766
    6. '	in' → logprob: -14.380985260009766
    7. 'range' → logprob: -14.380985260009766
    8. 'import' → logprob: -14.505985260009766
    9. '  ' → logprob: -14.630985260009766
    10. ' i' → logprob: -14.755985260009766

Token 312: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00462771812453866
    2. 'range' → logprob: -5.379627704620361
    3. ' ' → logprob: -12.37962818145752
    4. '	range' → logprob: -13.50462818145752
    5. '(range' → logprob: -13.87962818145752
    6. '   ' → logprob: -14.75462818145752
    7. '  ' → logprob: -15.00462818145752
    8. '1' → logprob: -16.004627227783203
    9. '[' → logprob: -16.754627227783203
    10. '    ' → logprob: -17.129627227783203

Token 313: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.173704271830502e-06
    2. ' (' → logprob: -12.75000286102295
    3. '1' → logprob: -15.50000286102295
    4. ' ' → logprob: -18.625003814697266
    5. '(int' → logprob: -18.625003814697266
    6. '(
' → logprob: -18.750003814697266
    7. 'int' → logprob: -21.375003814697266
    8. ',' → logprob: -22.000003814697266
    9. '[' → logprob: -22.375003814697266
    10. '((' → logprob: -22.625003814697266

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011796683247666806
    2. ' ' → logprob: -9.250118255615234
    3. 'int' → logprob: -11.375118255615234
    4. '(' → logprob: -11.500118255615234
    5. '   ' → logprob: -16.250118255615234
    6. ' int' → logprob: -16.500118255615234
    7. '(int' → logprob: -16.875118255615234
    8. '	' → logprob: -18.000118255615234
    9. ',' → logprob: -18.125118255615234
    10. '  ' → logprob: -18.500118255615234

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003974035382270813
    2. ' ,' → logprob: -5.628973960876465
    3. ',int' → logprob: -8.003973960876465
    4. '(int' → logprob: -11.253973960876465
    5. 'int' → logprob: -11.253973960876465
    6. '(' → logprob: -12.128973960876465
    7. ',n' → logprob: -12.253973960876465
    8. ',(' → logprob: -13.378973960876465
    9. '(n' → logprob: -14.378973960876465
    10. ',
' → logprob: -14.503973960876465

Token 316: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0040799472481012344
    2. ' int' → logprob: -5.504079818725586
    3. '(int' → logprob: -13.504079818725586
    4. '	int' → logprob: -16.504079818725586
    5. '   ' → logprob: -17.004079818725586
    6. ' ' → logprob: -17.379079818725586
    7. 'n' → logprob: -18.504079818725586
    8. ':int' → logprob: -19.379079818725586
    9. '[int' → logprob: -19.879079818725586
    10. '  ' → logprob: -20.004079818725586

Token 317: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00010568885772954673
    2. '(' → logprob: -9.500105857849121
    3. 'n' → logprob: -10.500105857849121
    4. ' (' → logprob: -13.500105857849121
    5. ' n' → logprob: -13.625105857849121
    6. '(s' → logprob: -15.625105857849121
    7. ')n' → logprob: -15.625105857849121
    8. '(pow' → logprob: -15.625105857849121
    9. '((' → logprob: -16.500104904174805
    10. '(
' → logprob: -16.750104904174805

Token 318: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00318163656629622
    2. ' **' → logprob: -6.253181457519531
    3. '(n' → logprob: -6.878181457519531
    4. 'n' → logprob: -9.753181457519531
    5. '(i' → logprob: -9.753181457519531
    6. '(' → logprob: -10.253181457519531
    7. 'import' → logprob: -10.753181457519531
    8. ' (' → logprob: -11.628181457519531
    9. ' ' → logprob: -11.878181457519531
    10. ' n' → logprob: -12.253181457519531

Token 319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.2994620242971e-06
    2. '.' → logprob: -12.500008583068848
    3. ' ' → logprob: -12.625008583068848
    4. '(' → logprob: -13.625008583068848
    5. '   ' → logprob: -18.37500762939453
    6. '2' → logprob: -18.75000762939453
    7. '{' → logprob: -19.75000762939453
    8. '```' → logprob: -19.75000762939453
    9. '    ' → logprob: -19.87500762939453
    10. '  ' → logprob: -20.75000762939453

Token 320: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.013994814362377e-05
    2. '0' → logprob: -10.25005054473877
    3. '5' → logprob: -11.37505054473877
    4. ' .' → logprob: -13.37505054473877
    5. '```' → logprob: -14.87505054473877
    6. '2' → logprob: -15.12505054473877
    7. '   ' → logprob: -15.87505054473877
    8. '50' → logprob: -16.000049591064453
    9. '54' → logprob: -16.375049591064453
    10. '(' → logprob: -16.375049591064453

Token 321: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.292907877039397e-06
    2. '```' → logprob: -13.87500286102295
    3. '   ' → logprob: -14.25000286102295
    4. '.' → logprob: -15.25000286102295
    5. '...' → logprob: -15.81250286102295
    6. '4' → logprob: -15.93750286102295
    7. '``' → logprob: -15.93750286102295
    8. ')' → logprob: -16.062503814697266
    9. '0' → logprob: -16.437503814697266
    10. '"' → logprob: -16.562503814697266

Token 322: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3871530592441559
    2. ')+' → logprob: -1.1371530294418335
    3. ' )' → logprob: -8.387152671813965
    4. '+' → logprob: -10.262152671813965
    5. ' +' → logprob: -12.512152671813965
    6. '()' → logprob: -12.762152671813965
    7. '   ' → logprob: -13.387152671813965
    8. ' ' → logprob: -13.637152671813965
    9. '}+' → logprob: -13.637152671813965
    10. '())' → logprob: -13.762152671813965

Token 323: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06235763430595398
    2. ' +' → logprob: -2.8123576641082764
    3. ')+' → logprob: -8.062357902526855
    4. ')' → logprob: -10.187357902526855
    5. '()+' → logprob: -10.312357902526855
    6. '   ' → logprob: -13.812357902526855
    7. '()' → logprob: -14.312357902526855
    8. '+
' → logprob: -14.937357902526855
    9. '＋' → logprob: -15.062357902526855
    10. '1' → logprob: -15.187357902526855

Token 324: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.62510871887207
    4. '```' → logprob: -18.25010871887207
    5. '(' → logprob: -18.37510871887207
    6. '  ' → logprob: -18.62510871887207
    7. '2' → logprob: -18.62510871887207
    8. ')' → logprob: -19.50010871887207
    9. '
' → logprob: -20.25010871887207
    10. '

' → logprob: -20.50010871887207

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.500009536743164
    4. '2' → logprob: -19.750009536743164
    5. '  ' → logprob: -20.125009536743164
    6. '```' → logprob: -20.125009536743164
    7. '(' → logprob: -20.500009536743164
    8. '１' → logprob: -21.000009536743164
    9. ')' → logprob: -21.250009536743164
    10. '{' → logprob: -22.000009536743164

Token 326: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008832958526909351
    2. '):
' → logprob: -4.758832931518555
    3. ':' → logprob: -8.633832931518555
    4. ' ):' → logprob: -10.758832931518555
    5. ')' → logprob: -12.008832931518555
    6. '   ' → logprob: -12.508832931518555
    7. '       ' → logprob: -12.508832931518555
    8. '):
' → logprob: -12.508832931518555
    9. '():' → logprob: -15.008832931518555
    10. '}:' → logprob: -15.258832931518555

Token 327: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16331113874912262
    2. '       ' → logprob: -1.9133111238479614
    3. ':
' → logprob: -6.788311004638672
    4. '):' → logprob: -7.163311004638672
    5. ' :' → logprob: -7.288311004638672
    6. '<|end|>' → logprob: -8.413311004638672
    7. '   ' → logprob: -9.663311004638672
    8. ',' → logprob: -10.038311004638672
    9. ' if' → logprob: -10.413311004638672
    10. '):
' → logprob: -10.413311004638672

Token 328: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0185089111328125
    2. ' if' → logprob: -4.6435089111328125
    3. 'if' → logprob: -4.8935089111328125
    4. '           ' → logprob: -7.6435089111328125
    5. '               ' → logprob: -8.768508911132812
    6. '   ' → logprob: -8.893508911132812
    7. ' ' → logprob: -9.393508911132812
    8. ':' → logprob: -9.393508911132812
    9. '        ' → logprob: -10.018508911132812
    10. '        
' → logprob: -10.143508911132812

Token 329: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011083188466727734
    2. ' if' → logprob: -4.511083126068115
    3. '       ' → logprob: -10.511083602905273
    4. '           ' → logprob: -12.011083602905273
    5. '   ' → logprob: -13.386083602905273
    6. '	if' → logprob: -14.761083602905273
    7. '    ' → logprob: -16.761083602905273
    8. ' ' → logprob: -17.386083602905273
    9. '               ' → logprob: -17.386083602905273
    10. 'If' → logprob: -17.761083602905273

Token 330: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31331589818000793
    2. ' if' → logprob: -1.3133158683776855
    3. 's' → logprob: -11.438316345214844
    4. '    ' → logprob: -11.563316345214844
    5. ' ' → logprob: -11.563316345214844
    6. '   ' → logprob: -11.938316345214844
    7. ' continue' → logprob: -12.063316345214844
    8. 'continue' → logprob: -12.563316345214844
    9. 'for' → logprob: -14.063316345214844
    10. '	if' → logprob: -14.313316345214844

Token 331: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.005450516473501921
    2. 'if' → logprob: -5.25545072555542
    3. 'ifi' → logprob: -8.755450248718262
    4. 'ife' → logprob: -10.630450248718262
    5. 'ifiez' → logprob: -11.630450248718262
    6. ' if' → logprob: -11.755450248718262
    7. 'ifies' → logprob: -12.005450248718262
    8. 'f' → logprob: -12.505450248718262
    9. 'ifié' → logprob: -12.880450248718262
    10. 'ify' → logprob: -13.005450248718262

Token 332: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33105963468551636
    2. 'if' → logprob: -1.3310596942901611
    3. ' si' → logprob: -4.081059455871582
    4. 'si' → logprob: -7.331059455871582
    5. '   ' → logprob: -9.956059455871582
    6. ' n' → logprob: -10.581059455871582
    7. 'n' → logprob: -11.706059455871582
    8. '	if' → logprob: -12.206059455871582
    9. ' ' → logprob: -12.331059455871582
    10. '    ' → logprob: -13.331059455871582

Token 333: ' i' (ID: 575)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20142298936843872
    2. 'n' → logprob: -1.701422929763794
    3. '	n' → logprob: -12.576422691345215
    4. '(n' → logprob: -12.701422691345215
    5. ' ' → logprob: -13.701422691345215
    6. '   ' → logprob: -14.201422691345215
    7. ' M' → logprob: -14.576422691345215
    8. 'M' → logprob: -14.951422691345215
    9. ' ' → logprob: -15.451422691345215
    10. ' (' → logprob: -15.451422691345215

Token 334: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3566487729549408
    2. ' %' → logprob: -1.2316488027572632
    3. ' ' → logprob: -5.356648921966553
    4. '%n' → logprob: -6.606648921966553
    5. ' ' → logprob: -7.606648921966553
    6. '%i' → logprob: -8.231648445129395
    7. ' n' → logprob: -8.606648445129395
    8. 'div' → logprob: -8.856648445129395
    9. ' *' → logprob: -9.106648445129395
    10. ' est' → logprob: -9.356648445129395

Token 335: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.08523954451084137
    2. ' n' → logprob: -2.8352396488189697
    3. 'n' → logprob: -4.335239410400391
    4. 'un' → logprob: -5.460239410400391
    5. ' une' → logprob: -6.585239410400391
    6. 'div' → logprob: -6.710239410400391
    7. ' divisible' → logprob: -6.710239410400391
    8. ' ' → logprob: -7.210239410400391
    9. '(n' → logprob: -7.460239410400391
    10. '   ' → logprob: -8.71023941040039

Token 336: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.04636889696121216
    2. ' ' → logprob: -3.2963688373565674
    3. ' div' → logprob: -6.0463690757751465
    4. ' multiple' → logprob: -6.4213690757751465
    5. ' divisor' → logprob: -6.5463690757751465
    6. 'n' → logprob: -6.5463690757751465
    7. 'multiple' → logprob: -7.9213690757751465
    8. ' divisible' → logprob: -7.9213690757751465
    9. ' divis' → logprob: -8.421368598937988
    10. '  ' → logprob: -9.296368598937988

Token 337: 'iseur' (ID: 108637)
  Prédit: 'isible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -0.01751467026770115
    2. 'iseur' → logprob: -4.142514705657959
    3. '   ' → logprob: -7.517514705657959
    4. 'isor' → logprob: -8.5175142288208
    5. 'ise' → logprob: -8.7675142288208
    6. 's' → logprob: -8.8925142288208
    7. 'is' → logprob: -9.2675142288208
    8. 'ISIBLE' → logprob: -9.5175142288208
    9. '```' → logprob: -10.1425142288208
    10. 'iz' → logprob: -10.3925142288208

Token 338: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08190514147281647
    2. 'de' → logprob: -3.4569051265716553
    3. '(n' → logprob: -3.8319051265716553
    4. '   ' → logprob: -4.956905364990234
    5. ' n' → logprob: -5.331905364990234
    6. '(' → logprob: -5.706905364990234
    7. 'n' → logprob: -5.831905364990234
    8. ' ' → logprob: -6.081905364990234
    9. ' (' → logprob: -6.956905364990234
    10. ' of' → logprob: -7.331905364990234

Token 339: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141343772411346
    2. ' n' → logprob: -1.7014133930206299
    3. '	n' → logprob: -15.95141315460205
    4. ' ' → logprob: -16.951414108276367
    5. '```' → logprob: -17.576414108276367
    6. ' ' → logprob: -18.076414108276367
    7. ' M' → logprob: -19.701414108276367
    8. '   ' → logprob: -20.076414108276367
    9. '(n' → logprob: -20.451414108276367
    10. 'M' → logprob: -20.451414108276367

Token 340: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02433064766228199
    2. ':
' → logprob: -4.7743306159973145
    3. 'if' → logprob: -5.5243306159973145
    4. ' :' → logprob: -5.6493306159973145
    5. ' if' → logprob: -6.0243306159973145
    6. ',' → logprob: -6.3993306159973145
    7. '       ' → logprob: -6.5243306159973145
    8. '   ' → logprob: -6.6493306159973145
    9. '           ' → logprob: -6.8993306159973145
    10. ' :
' → logprob: -9.524331092834473

Token 341: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6965315937995911
    2. ' if' → logprob: -0.6965315937995911
    3. '           ' → logprob: -6.196531772613525
    4. '       ' → logprob: -7.696531772613525
    5. ':' → logprob: -8.321531295776367
    6. '   ' → logprob: -8.321531295776367
    7. ' :' → logprob: -9.071531295776367
    8. '               ' → logprob: -9.696531295776367
    9. '    ' → logprob: -9.946531295776367
    10. ':
' → logprob: -10.196531295776367

Token 342: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5193700194358826
    2. 'u' → logprob: -2.5193700790405273
    3. '       ' → logprob: -2.5193700790405273
    4. 'i' → logprob: -2.8943700790405273
    5. 'e' → logprob: -3.0193700790405273
    6. 'es' → logprob: -3.2693700790405273
    7. '=' → logprob: -4.144370079040527
    8. 'if' → logprob: -4.144370079040527
    9. '           ' → logprob: -4.394370079040527
    10. ''est' → logprob: -4.644370079040527

Token 343: '-à' (ID: 56297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15159188210964203
    2. ' n' → logprob: -2.5265917778015137
    3. '   ' → logprob: -3.7765917778015137
    4. '-à' → logprob: -4.401591777801514
    5. '(n' → logprob: -4.526591777801514
    6. ' à' → logprob: -5.276591777801514
    7. 'à' → logprob: -5.526591777801514
    8. '           ' → logprob: -6.151591777801514
    9. '       ' → logprob: -6.901591777801514
    10. '    ' → logprob: -7.651591777801514

Token 344: '-dire' (ID: 76064)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20087403059005737
    2. 'n' → logprob: -3.075874090194702
    3. 'à' → logprob: -3.575874090194702
    4. '(i' → logprob: -3.575874090194702
    5. 'part' → logprob: -3.700874090194702
    6. 'div' → logprob: -4.575873851776123
    7. 'int' → logprob: -4.825873851776123
    8. '   ' → logprob: -5.200873851776123
    9. '       ' → logprob: -5.700873851776123
    10. 'f' → logprob: -5.700873851776123

Token 345: ' si' (ID: 1784)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06202191114425659
    2. 'n' → logprob: -2.8120219707489014
    3. '(n' → logprob: -10.68702220916748
    4. ' (' → logprob: -11.06202220916748
    5. ' if' → logprob: -12.06202220916748
    6. '	n' → logprob: -12.31202220916748
    7. '   ' → logprob: -12.93702220916748
    8. 'if' → logprob: -13.81202220916748
    9. ' ' → logprob: -13.93702220916748
    10. '    ' → logprob: -14.56202220916748

Token 346: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07889066636562347
    2. 'n' → logprob: -2.578890562057495
    3. '	n' → logprob: -14.703890800476074
    4. '(n' → logprob: -15.078890800476074
    5. ' ' → logprob: -16.578889846801758
    6. ' M' → logprob: -16.703889846801758
    7. ' (' → logprob: -17.578889846801758
    8. 'M' → logprob: -18.578889846801758
    9. ' ' → logprob: -18.578889846801758
    10. '   ' → logprob: -19.328889846801758

Token 347: ' reste' (ID: 26769)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07889970391988754
    2. ' n' → logprob: -2.578899621963501
    3. '    ' → logprob: -12.828899383544922
    4. '%n' → logprob: -12.953899383544922
    5. ' ' → logprob: -13.203899383544922
    6. '	n' → logprob: -14.203899383544922
    7. '```' → logprob: -14.203899383544922
    8. '   ' → logprob: -15.078899383544922
    9. '(n' → logprob: -15.578899383544922
    10. 'i' → logprob: -15.578899383544922

Token 348: ' de' (ID: 334)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3374687731266022
    2. ' de' → logprob: -1.4624687433242798
    3. '==' → logprob: -3.9624688625335693
    4. ' ' → logprob: -4.21246862411499
    5. ' des' → logprob: -4.83746862411499
    6. '   ' → logprob: -5.21246862411499
    7. ' du' → logprob: -6.33746862411499
    8. ' =' → logprob: -6.83746862411499
    9. ' n' → logprob: -7.33746862411499
    10. '=' → logprob: -7.46246862411499

Token 349: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4741763174533844
    2. 'n' → logprob: -0.974176287651062
    3. ' la' → logprob: -9.349176406860352
    4. ' ' → logprob: -12.599176406860352
    5. 'l' → logprob: -13.224176406860352
    6. ' l' → logprob: -13.724176406860352
    7. ' i' → logprob: -13.724176406860352
    8. 'division' → logprob: -13.724176406860352
    9. ' division' → logprob: -13.849176406860352
    10. 'div' → logprob: -13.849176406860352

Token 350: ' division' (ID: 21629)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07915349304676056
    2. ' n' → logprob: -2.579153537750244
    3. 'div' → logprob: -9.329153060913086
    4. ' ' → logprob: -9.704153060913086
    5. ' division' → logprob: -9.954153060913086
    6. 'division' → logprob: -10.704153060913086
    7. ' i' → logprob: -11.079153060913086
    8. 'i' → logprob: -11.329153060913086
    9. '%n' → logprob: -12.204153060913086
    10. '   ' → logprob: -12.454153060913086

Token 351: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4692378640174866
    2. ' n' → logprob: -1.9692378044128418
    3. 'n' → logprob: -2.344237804412842
    4. ' de' → logprob: -2.469237804412842
    5. 'i' → logprob: -3.094237804412842
    6. ' ' → logprob: -6.094237804412842
    7. '%' → logprob: -6.594237804412842
    8. '%i' → logprob: -6.969237804412842
    9. '%n' → logprob: -7.094237804412842
    10. 'de' → logprob: -7.219237804412842

Token 352: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16022706031799316
    2. ' n' → logprob: -1.9102270603179932
    3. 'i' → logprob: -13.535226821899414
    4. '	n' → logprob: -14.160226821899414
    5. ' i' → logprob: -14.410226821899414
    6. ' ' → logprob: -14.910226821899414
    7. ' ' → logprob: -18.160226821899414
    8. '```' → logprob: -18.160226821899414
    9. '   ' → logprob: -18.285226821899414
    10. '(n' → logprob: -19.160226821899414

Token 353: ' par' (ID: 686)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8744195699691772
    2. '%i' → logprob: -0.9994195699691772
    3. ' %' → logprob: -1.6244195699691772
    4. '%n' → logprob: -4.124419689178467
    5. ' i' → logprob: -7.374419689178467
    6. ' par' → logprob: -8.374419212341309
    7. ' ' → logprob: -8.374419212341309
    8. '%b' → logprob: -8.999419212341309
    9. '%d' → logprob: -9.124419212341309
    10. '%e' → logprob: -9.624419212341309

Token 354: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1602257490158081
    2. ' i' → logprob: -1.910225749015808
    3. ' ' → logprob: -13.785225868225098
    4. '	i' → logprob: -14.660225868225098
    5. ' ' → logprob: -16.28522491455078
    6. '   ' → logprob: -17.78522491455078
    7. '```' → logprob: -18.28522491455078
    8. ''i' → logprob: -19.03522491455078
    9. '  ' → logprob: -19.16022491455078
    10. ' ' → logprob: -19.28522491455078

Token 355: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.031385138630867004
    2. 'est' → logprob: -4.4063849449157715
    3. ' ==' → logprob: -5.1563849449157715
    4. '==' → logprob: -5.2813849449157715
    5. ' ' → logprob: -5.4063849449157715
    6. 's' → logprob: -7.4063849449157715
    7. ' s' → logprob: -7.5313849449157715
    8. ' is' → logprob: -8.03138542175293
    9. '=' → logprob: -8.53138542175293
    10. ' i' → logprob: -8.65638542175293

Token 356: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012755783274769783
    2. ' ' → logprob: -4.387755870819092
    3. ' zéro' → logprob: -8.887755393981934
    4. ' zero' → logprob: -9.512755393981934
    5. 'zero' → logprob: -11.012755393981934
    6. 'nul' → logprob: -12.137755393981934
    7. '```' → logprob: -12.637755393981934
    8. '   ' → logprob: -13.387755393981934
    9. ' صفر' → logprob: -13.762755393981934
    10. ' nul' → logprob: -13.887755393981934

Token 357: '.
' (ID: 558)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0975981205701828
    2. '==' → logprob: -2.472598075866699
    3. ':' → logprob: -5.097598075866699
    4. '   ' → logprob: -6.722598075866699
    5. ',' → logprob: -7.347598075866699
    6. '=' → logprob: -8.4725980758667
    7. '       ' → logprob: -9.2225980758667
    8. 'if' → logprob: -9.4725980758667
    9. ' =' → logprob: -10.3475980758667
    10. ' :' → logprob: -10.3475980758667

Token 358: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05282188206911087
    2. '           ' → logprob: -3.0528218746185303
    3. ':' → logprob: -5.927822113037109
    4. ' if' → logprob: -7.052822113037109
    5. 'if' → logprob: -7.927822113037109
    6. '   ' → logprob: -8.30282211303711
    7. '```' → logprob: -10.55282211303711
    8. ':
' → logprob: -10.92782211303711
    9. ' :' → logprob: -11.92782211303711
    10. ',' → logprob: -12.30282211303711

Token 359: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47957560420036316
    2. 'if' (adapté à ' if') → logprob: -0.9795756340026855
    3. '           ' → logprob: -5.2295756340026855
    4. '       ' → logprob: -9.104575157165527
    5. '   ' → logprob: -11.479575157165527
    6. '               ' → logprob: -13.104575157165527
    7. '	if' → logprob: -13.854575157165527
    8. '    ' → logprob: -14.229575157165527
    9. ' ' → logprob: -14.354575157165527
    10. '            
' → logprob: -14.354575157165527

Token 360: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3132690191268921
    2. 'n' → logprob: -1.313269019126892
    3. '	n' → logprob: -12.063268661499023
    4. '(n' → logprob: -13.938268661499023
    5. ' (' → logprob: -15.688268661499023
    6. ' M' → logprob: -15.688268661499023
    7. 'M' → logprob: -15.813268661499023
    8. ' ' → logprob: -16.438268661499023
    9. '   ' → logprob: -16.563268661499023
    10. '_n' → logprob: -17.563268661499023

Token 361: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31382712721824646
    2. '%' → logprob: -1.3138271570205688
    3. '%i' → logprob: -7.563827037811279
    4. ' ' → logprob: -10.438827514648438
    5. ' ' → logprob: -11.313827514648438
    6. '%e' → logprob: -13.188827514648438
    7. '%s' → logprob: -14.188827514648438
    8. '%d' → logprob: -14.438827514648438
    9. '%x' → logprob: -15.063827514648438
    10. '%n' → logprob: -15.188827514648438

Token 362: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1517960956552997e-05
    2. ' i' → logprob: -11.375011444091797
    3. '	i' → logprob: -18.625011444091797
    4. '   ' → logprob: -18.875011444091797
    5. ' ' → logprob: -20.000011444091797
    6. '<|end|>' → logprob: -20.500011444091797
    7. '```' → logprob: -20.625011444091797
    8. '  ' → logprob: -21.375011444091797
    9. '[i' → logprob: -22.375011444091797
    10. '`' → logprob: -22.875011444091797

Token 363: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4740851819515228
    2. '==' → logprob: -0.9740852117538452
    3. ')==' → logprob: -12.474084854125977
    4. '=' → logprob: -12.724084854125977
    5. '===' → logprob: -14.724084854125977
    6. ']==' → logprob: -15.224084854125977
    7. '()==' → logprob: -15.224084854125977
    8. ' ' → logprob: -15.599084854125977
    9. ' =' → logprob: -16.224084854125977
    10. '==
' → logprob: -16.724084854125977

Token 364: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '۰' → logprob: -20.750024795532227
    4. '   ' → logprob: -20.875024795532227
    5. '  ' → logprob: -22.000024795532227
    6. '
' → logprob: -22.250024795532227
    7. '０' → logprob: -22.375024795532227
    8. ' ' → logprob: -23.250024795532227
    9. '٠' → logprob: -23.250024795532227
    10. '```' → logprob: -23.250024795532227

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -22.125001907348633
    4. '   ' → logprob: -23.250001907348633
    5. '  ' → logprob: -23.875001907348633
    6. '０' → logprob: -23.875001907348633
    7. '
' → logprob: -24.375001907348633
    8. '00' → logprob: -24.500001907348633
    9. '```' → logprob: -24.500001907348633
    10. ' ' → logprob: -25.000001907348633

Token 366: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029866192489862442
    2. ':
' → logprob: -3.5298662185668945
    3. '):' → logprob: -9.904866218566895
    4. '):
' → logprob: -10.154866218566895
    5. '           ' → logprob: -11.279866218566895
    6. ':
' → logprob: -12.654866218566895
    7. ' :' → logprob: -12.779866218566895
    8. ',' → logprob: -13.029866218566895
    9. '       ' → logprob: -13.029866218566895
    10. '               ' → logprob: -13.154866218566895

Token 367: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004105354193598032
    2. '           ' → logprob: -5.879105567932129
    3. 'arr' → logprob: -7.379105567932129
    4. '       ' → logprob: -7.504105567932129
    5. '                
' → logprob: -11.129105567932129
    6. ' ' → logprob: -11.379105567932129
    7. '            
' → logprob: -11.504105567932129
    8. '```' → logprob: -11.504105567932129
    9. '            ' → logprob: -11.629105567932129
    10. '   ' → logprob: -11.879105567932129

Token 368: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.002630353905260563
    2. ' arr' → logprob: -6.127630233764648
    3. '                   ' → logprob: -8.252630233764648
    4. '               ' → logprob: -8.877630233764648
    5. '           ' → logprob: -10.252630233764648
    6. '   ' → logprob: -12.377630233764648
    7. '
' → logprob: -12.877630233764648
    8. '	arr' → logprob: -13.627630233764648
    9. '[arr' → logprob: -14.752630233764648
    10. ' ' → logprob: -15.252630233764648

Token 369: ' Si' (ID: 7832)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -8.77627644513268e-06
    2. ' arr' → logprob: -11.875008583068848
    3. '   ' → logprob: -13.375008583068848
    4. '	arr' → logprob: -16.750009536743164
    5. '           ' → logprob: -16.875009536743164
    6. '               ' → logprob: -18.250009536743164
    7. '                   ' → logprob: -18.750009536743164
    8. '       ' → logprob: -19.125009536743164
    9. ' ' → logprob: -19.375009536743164
    10. '  ' → logprob: -20.125009536743164

Token 370: ' oui' (ID: 50908)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.048091351985931396
    2. 'i' → logprob: -3.923091411590576
    3. ' arr' → logprob: -4.048091411590576
    4. ' i' → logprob: -4.798091411590576
    5. 'len' → logprob: -7.423091411590576
    6. 'n' → logprob: -8.423090934753418
    7. '   ' → logprob: -8.923090934753418
    8. ' n' → logprob: -9.048090934753418
    9. ' ' → logprob: -9.173090934753418
    10. ' len' → logprob: -9.173090934753418

Token 371: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.404962420463562
    2. ',' → logprob: -1.654962420463562
    3. '                   ' → logprob: -2.6549625396728516
    4. ':
' → logprob: -2.7799625396728516
    5. '               ' → logprob: -4.904962539672852
    6. 'arr' → logprob: -7.154962539672852
    7. '   ' → logprob: -7.779962539672852
    8. '           ' → logprob: -8.029962539672852
    9. ',
' → logprob: -8.404962539672852
    10. ' :' → logprob: -8.779962539672852

Token 372: ' on' (ID: 402)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.007620945107191801
    2. ' arr' → logprob: -4.882620811462402
    3. '   ' → logprob: -12.257620811462402
    4. '	arr' → logprob: -12.507620811462402
    5. '                   ' → logprob: -12.507620811462402
    6. '               ' → logprob: -13.257620811462402
    7. ' ' → logprob: -15.632620811462402
    8. ' ' → logprob: -15.757620811462402
    9. '           ' → logprob: -15.882620811462402
    10. '[arr' → logprob: -16.13262176513672

Token 373: ' ajoute' (ID: 91611)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.16741161048412323
    2. '.append' → logprob: -2.4174115657806396
    3. 'append' → logprob: -2.7924115657806396
    4. ' arr' → logprob: -6.542411804199219
    5. ' append' → logprob: -6.667411804199219
    6. 'app' → logprob: -7.042411804199219
    7. ' app' → logprob: -10.167411804199219
    8. '   ' → logprob: -10.167411804199219
    9. 'aj' → logprob: -10.417411804199219
    10. '	arr' → logprob: -11.792411804199219

Token 374: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15916694700717926
    2. ' i' → logprob: -2.0341670513153076
    3. 'arr' → logprob: -4.1591668128967285
    4. ' arr' → logprob: -7.4091668128967285
    5. '   ' → logprob: -9.159167289733887
    6. '                   ' → logprob: -12.034167289733887
    7. '	i' → logprob: -12.409167289733887
    8. ' ' → logprob: -12.909167289733887
    9. '```' → logprob: -12.909167289733887
    10. '	arr' → logprob: -13.034167289733887

Token 375: ' à' (ID: 1221)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.6586258411407471
    2. ')' → logprob: -1.533625841140747
    3. '               ' → logprob: -2.033625841140747
    4. ',' → logprob: -2.408625841140747
    5. '                   ' → logprob: -3.658625841140747
    6. ')
' → logprob: -4.908625602722168
    7. ',
' → logprob: -5.033625602722168
    8. 'to' → logprob: -6.783625602722168
    9. '           ' → logprob: -7.033625602722168
    10. '),' → logprob: -7.533625602722168

Token 376: ' la' (ID: 557)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00033546582562848926
    2. ' arr' → logprob: -8.000335693359375
    3. '	arr' → logprob: -18.125335693359375
    4. '(arr' → logprob: -21.250335693359375
    5. 'l' → logprob: -21.875335693359375
    6. '_arr' → logprob: -22.125335693359375
    7. ' ' → logprob: -22.125335693359375
    8. '[arr' → logprob: -22.625335693359375
    9. '$arr' → logprob: -22.750335693359375
    10. '   ' → logprob: -22.750335693359375

Token 377: ' liste' (ID: 31719)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.004636011086404324
    2. 'liste' → logprob: -5.504635810852051
    3. 'list' → logprob: -7.504635810852051
    4. 'lista' → logprob: -12.62963581085205
    5. 'array' → logprob: -13.37963581085205
    6. 'lst' → logprob: -14.00463581085205
    7. ' liste' → logprob: -14.87963581085205
    8. ' arr' → logprob: -15.00463581085205
    9. 'arra' → logprob: -16.129636764526367
    10. 'acc' → logprob: -16.754636764526367

Token 378: ' des' (ID: 731)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06489842385053635
    2. '               ' → logprob: -3.3148984909057617
    3. '                   ' → logprob: -4.064898490905762
    4. 'arr' → logprob: -4.814898490905762
    5. '.' → logprob: -7.064898490905762
    6. 'append' → logprob: -9.314898490905762
    7. '           ' → logprob: -9.314898490905762
    8. '[arr' → logprob: -9.439898490905762
    9. ' .' → logprob: -10.689898490905762
    10. ',' → logprob: -10.814898490905762

Token 379: ' div' (ID: 4223)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.10024020820856094
    2. ' arr' → logprob: -2.3502402305603027
    3. 'div' → logprob: -10.975239753723145
    4. '	arr' → logprob: -11.475239753723145
    5. '(arr' → logprob: -13.850239753723145
    6. '_arr' → logprob: -13.850239753723145
    7. ' ' → logprob: -13.850239753723145
    8. '[arr' → logprob: -14.100239753723145
    9. '   ' → logprob: -14.225239753723145
    10. ' div' → logprob: -15.350239753723145

Token 380: 'ise' (ID: 1096)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.25138363242149353
    2. ' arr' → logprob: -1.751383662223816
    3. '   ' → logprob: -3.5013835430145264
    4. '       ' → logprob: -5.1263837814331055
    5. 'iv' → logprob: -5.7513837814331055
    6. '_arr' → logprob: -7.0013837814331055
    7. '           ' → logprob: -7.1263837814331055
    8. ' ' → logprob: -7.1263837814331055
    9. 'ivers' → logprob: -7.2513837814331055
    10. '.append' → logprob: -7.2513837814331055

Token 381: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -9.472211968386546e-05
    2. 'rs' → logprob: -9.750094413757324
    3. 's' → logprob: -10.875094413757324
    4. 'teurs' → logprob: -11.875094413757324
    5. 'eurs' → logprob: -12.500094413757324
    6. 'se' → logprob: -13.625094413757324
    7. '   ' → logprob: -13.875094413757324
    8. 'ur' → logprob: -14.500094413757324
    9. 'us' → logprob: -14.625094413757324
    10. '```' → logprob: -14.625094413757324

Token 382: '.
' (ID: 558)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.338257372379303
    2. '               ' → logprob: -1.5882573127746582
    3. '.' → logprob: -2.713257312774658
    4. '                   ' → logprob: -4.588257312774658
    5. '           ' → logprob: -5.713257312774658
    6. ',' → logprob: -6.088257312774658
    7. '       ' → logprob: -8.713257789611816
    8. ')' → logprob: -9.463257789611816
    9. 'arr' → logprob: -9.838257789611816
    10. '   ' → logprob: -9.963257789611816

Token 383: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007786900736391544
    2. 'arr' → logprob: -4.882786750793457
    3. ' arr' → logprob: -8.882786750793457
    4. '                   ' → logprob: -11.132786750793457
    5. '           ' → logprob: -11.632786750793457
    6. '                
' → logprob: -12.007786750793457
    7. '
' → logprob: -12.007786750793457
    8. '[arr' → logprob: -13.007786750793457
    9. '(arr' → logprob: -13.882786750793457
    10. ',' → logprob: -14.382786750793457

Token 384: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.0042032902128994465
    2. ' arr' → logprob: -5.5042033195495605
    3. '               ' → logprob: -9.379202842712402
    4. '                   ' → logprob: -10.254202842712402
    5. '           ' → logprob: -12.504202842712402
    6. '   ' → logprob: -14.004202842712402
    7. '	arr' → logprob: -14.879202842712402
    8. '[arr' → logprob: -16.12920379638672
    9. '$arr' → logprob: -17.00420379638672
    10. '(arr' → logprob: -17.12920379638672

Token 385: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1002185270190239
    2. '.' → logprob: -2.3502185344696045
    3. '.app' → logprob: -12.100218772888184
    4. '.ap' → logprob: -12.600218772888184
    5. ' .' → logprob: -13.100218772888184
    6. '.extend' → logprob: -14.225218772888184
    7. '.Append' → logprob: -16.100217819213867
    8. 'append' → logprob: -17.100217819213867
    9. '.insert' → logprob: -17.225217819213867
    10. '.add' → logprob: -17.725217819213867

Token 386: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.500027656555176
    3. '(
' → logprob: -18.25002670288086
    4. 'i' → logprob: -19.25002670288086
    5. '(I' → logprob: -21.25002670288086
    6. ' (' → logprob: -21.25002670288086
    7. '(ii' → logprob: -21.75002670288086
    8. ' i' → logprob: -23.12502670288086
    9. '(

' → logprob: -23.12502670288086
    10. '[i' → logprob: -23.50002670288086

Token 387: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6942697167396545
    2. ')
' → logprob: -0.6942697167396545
    3. '               ' → logprob: -7.44426965713501
    4. ')
' → logprob: -7.56926965713501
    5. '           ' → logprob: -11.319270133972168
    6. ')

' → logprob: -11.944270133972168
    7. '                   ' → logprob: -14.819270133972168
    8. '       ' → logprob: -15.069270133972168
    9. 'if' → logprob: -15.194270133972168
    10. '
' → logprob: -15.444270133972168

Token 388: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005872736684978008
    2. '                
' → logprob: -5.25587272644043
    3. '           ' → logprob: -9.13087272644043
    4. '
' → logprob: -9.25587272644043
    5. '            
' → logprob: -9.25587272644043
    6. '                ' → logprob: -9.50587272644043
    7. ' 
' → logprob: -9.63087272644043
    8. '               
' → logprob: -9.88087272644043
    9. '              ' → logprob: -10.63087272644043
    10. '<|end|>' → logprob: -11.13087272644043

Token 389: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.039068639278411865
    2. 'if' → logprob: -3.2890686988830566
    3. ' if' → logprob: -6.914068698883057
    4. '           ' → logprob: -11.289068222045898
    5. '              ' → logprob: -11.289068222045898
    6. '                
' → logprob: -12.539068222045898
    7. '       ' → logprob: -13.664068222045898
    8. '                ' → logprob: -14.164068222045898
    9. '             ' → logprob: -14.664068222045898
    10. '                   ' → logprob: -14.914068222045898

Token 390: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0021545456256717443
    2. '               ' → logprob: -6.252154350280762
    3. ' if' → logprob: -9.002154350280762
    4. '#' → logprob: -9.252154350280762
    5. '                   ' → logprob: -12.252154350280762
    6. '                
' → logprob: -14.252154350280762
    7. '
' → logprob: -14.252154350280762
    8. 'd' → logprob: -15.377154350280762
    9. '           ' → logprob: -15.627154350280762
    10. 'j' → logprob: -15.877154350280762

Token 391: ' ajoute' (ID: 91611)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10360075533390045
    2. ' if' → logprob: -2.3536007404327393
    3. '#' → logprob: -5.978600978851318
    4. '               ' → logprob: -8.60360050201416
    5. ' #' → logprob: -8.85360050201416
    6. 'elif' → logprob: -8.85360050201416
    7. 's' → logprob: -9.22860050201416
    8. 'n' → logprob: -10.35360050201416
    9. '           ' → logprob: -10.60360050201416
    10. ' ' → logprob: -10.85360050201416

Token 392: ' aussi' (ID: 9894)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.337782621383667
    2. ' i' → logprob: -2.087782621383667
    3. 'n' → logprob: -2.462782621383667
    4. ' ' → logprob: -4.087782859802246
    5. ' if' → logprob: -4.587782859802246
    6. ' M' → logprob: -4.837782859802246
    7. ' arr' → logprob: -4.962782859802246
    8. '(n' → logprob: -4.962782859802246
    9. ' (' → logprob: -5.087782859802246
    10. 'if' → logprob: -5.087782859802246

Token 393: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5988941788673401
    2. 'n' → logprob: -1.2238941192626953
    3. '(n' → logprob: -2.3488941192626953
    4. ' M' → logprob: -2.9738941192626953
    5. 'M' → logprob: -5.723894119262695
    6. ' (' → logprob: -5.848894119262695
    7. '   ' → logprob: -6.348894119262695
    8. ' ' → logprob: -7.598894119262695
    9. '(M' → logprob: -8.348894119262695
    10. '       ' → logprob: -8.723894119262695

Token 394: ' "' (ID: 392)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5767857432365417
    2. 'n' → logprob: -0.8267857432365417
    3. '(n' → logprob: -8.451786041259766
    4. ' /' → logprob: -9.326786041259766
    5. '    ' → logprob: -9.451786041259766
    6. ' ' → logprob: -9.451786041259766
    7. 'int' → logprob: -9.701786041259766
    8. ' M' → logprob: -9.826786041259766
    9. '	n' → logprob: -10.076786041259766
    10. 'M' → logprob: -10.701786041259766

Token 395: 'div' (ID: 862)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02065003104507923
    2. ' n' → logprob: -3.8956501483917236
    3. '(n' → logprob: -9.520649909973145
    4. ' ' → logprob: -11.770649909973145
    5. ' /' → logprob: -12.645649909973145
    6. 'M' → logprob: -12.895649909973145
    7. '	n' → logprob: -12.895649909973145
    8. '```' → logprob: -13.020649909973145
    9. '\n' → logprob: -13.270649909973145
    10. ' (' → logprob: -13.395649909973145

Token 396: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.0032348709646612406
    2. 'ise' → logprob: -6.87823486328125
    3. '```' → logprob: -6.87823486328125
    4. '   ' → logprob: -8.37823486328125
    5. '_' → logprob: -9.37823486328125
    6. 'isor' → logprob: -9.37823486328125
    7. '_arr' → logprob: -9.50323486328125
    8. 'isateur' → logprob: -9.62823486328125
    9. '    ' → logprob: -10.00323486328125
    10. '(' → logprob: -10.37823486328125

Token 397: ' miroir' (ID: 187121)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.245875358581543
    2. ' correspondant' → logprob: -1.245875358581543
    3. 'n' → logprob: -1.870875358581543
    4. ' complément' → logprob: -2.120875358581543
    5. '   ' → logprob: -3.370875358581543
    6. ' j' → logprob: -3.620875358581543
    7. ' sym' → logprob: -3.995875358581543
    8. ' oppos' → logprob: -4.120875358581543
    9. ' ' → logprob: -4.870875358581543
    10. 'sym' → logprob: -4.995875358581543

Token 398: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.30182936787605286
    2. '",' → logprob: -1.4268293380737305
    3. '(n' → logprob: -4.0518293380737305
    4. ' n' → logprob: -7.1768293380737305
    5. 'n' → logprob: -7.4268293380737305
    6. ',"' → logprob: -7.5518293380737305
    7. ',' → logprob: -7.6768293380737305
    8. ' "' → logprob: -8.80182933807373
    9. 'e' → logprob: -9.17682933807373
    10. '"
' → logprob: -9.55182933807373

Token 399: ' à' (ID: 1221)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4982782006263733
    2. 'n' → logprob: -0.9982782006263733
    3. '               ' → logprob: -4.2482781410217285
    4. '                   ' → logprob: -5.1232781410217285
    5. '(n' → logprob: -6.6232781410217285
    6. '                ' → logprob: -7.1232781410217285
    7. 'if' → logprob: -7.4982781410217285
    8. ' if' → logprob: -8.373278617858887
    9. 'arr' → logprob: -8.373278617858887
    10. '                    ' → logprob: -9.123278617858887

Token 400: ' savoir' (ID: 22835)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6571909189224243
    2. 'condition' → logprob: -1.6571909189224243
    3. ' condition' → logprob: -2.0321907997131348
    4. 'la' → logprob: -3.0321907997131348
    5. 'l' → logprob: -3.2821907997131348
    6. 'n' → logprob: -4.032190799713135
    7. 'if' → logprob: -4.032190799713135
    8. 'M' → logprob: -4.782190799713135
    9. '```' → logprob: -5.782190799713135
    10. ' la' → logprob: -6.032190799713135

Token 401: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.34998029470443726
    2. 'n' → logprob: -1.224980354309082
    3. '(n' → logprob: -6.724980354309082
    4. '   ' → logprob: -9.099980354309082
    5. '    ' → logprob: -9.099980354309082
    6. '	n' → logprob: -9.849980354309082
    7. ' (' → logprob: -10.224980354309082
    8. '(' → logprob: -12.849980354309082
    9. ' ' → logprob: -12.849980354309082
    10. ' ' → logprob: -12.974980354309082

Token 402: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4742072820663452
    2. ' //' → logprob: -0.9742072820663452
    3. '#' → logprob: -9.724206924438477
    4. ' ' → logprob: -10.224206924438477
    5. '   ' → logprob: -10.724206924438477
    6. ' #' → logprob: -12.724206924438477
    7. '	' → logprob: -12.724206924438477
    8. ' ' → logprob: -12.849206924438477
    9. '  ' → logprob: -13.349206924438477
    10. '```' → logprob: -14.224206924438477

Token 403: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009149204124696553
    2. ' i' → logprob: -7.000915050506592
    3. '	i' → logprob: -13.375914573669434
    4. '   ' → logprob: -13.625914573669434
    5. ' ' → logprob: -14.875914573669434
    6. '  ' → logprob: -16.12591552734375
    7. '    ' → logprob: -17.12591552734375
    8. '                   ' → logprob: -17.75091552734375
    9. ' ' → logprob: -18.50091552734375
    10. '       ' → logprob: -18.50091552734375

Token 404: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024970922619104385
    2. ')' → logprob: -3.7749710083007812
    3. ' if' → logprob: -7.649971008300781
    4. 'if' → logprob: -7.899971008300781
    5. ')
' → logprob: -8.024971008300781
    6. '           ' → logprob: -8.149971008300781
    7. '                   ' → logprob: -9.149971008300781
    8. '			' → logprob: -10.274971008300781
    9. '                ' → logprob: -10.649971008300781
    10. ',' → logprob: -11.024971008300781

Token 405: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009760206448845565
    2. '			' → logprob: -7.500976085662842
    3. ' if' → logprob: -8.500975608825684
    4. '                   ' → logprob: -9.250975608825684
    5. '	           ' → logprob: -10.500975608825684
    6. 'if' → logprob: -11.375975608825684
    7. '                ' → logprob: -11.500975608825684
    8. ',' → logprob: -11.500975608825684
    9. '<|end|>' → logprob: -11.750975608825684
    10. '		       ' → logprob: -11.875975608825684

Token 406: ' arr' (ID: 1724)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37159284949302673
    2. ' if' → logprob: -1.3715928792953491
    3. '               ' → logprob: -2.8715927600860596
    4. '                   ' → logprob: -10.37159252166748
    5. '                ' → logprob: -11.74659252166748
    6. '           ' → logprob: -12.49659252166748
    7. '                
' → logprob: -12.62159252166748
    8. ',' → logprob: -13.49659252166748
    9. '	if' → logprob: -13.62159252166748
    10. '
' → logprob: -13.99659252166748

Token 407: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001345115713775158
    2. '.' → logprob: -6.626345157623291
    3. ' .' → logprob: -11.251344680786133
    4. '           ' → logprob: -13.126344680786133
    5. '.setdefault' → logprob: -13.501344680786133
    6. '.extend' → logprob: -13.626344680786133
    7. '               ' → logprob: -14.751344680786133
    8. '.app' → logprob: -15.376344680786133
    9. '.add' → logprob: -15.626344680786133
    10. '.Append' → logprob: -15.876344680786133

Token 408: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.894790981779806e-05
    2. '(' → logprob: -10.000048637390137
    3. 'n' → logprob: -12.625048637390137
    4. '((' → logprob: -15.750048637390137
    5. '(
' → logprob: -17.000049591064453
    6. ' (' → logprob: -17.625049591064453
    7. '(N' → logprob: -18.375049591064453
    8. '(int' → logprob: -18.500049591064453
    9. ' n' → logprob: -19.375049591064453
    10. '(i' → logprob: -19.625049591064453

Token 409: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.10022694617509842
    2. ' //' → logprob: -2.350226879119873
    3. '/i' → logprob: -11.725227355957031
    4. '#' → logprob: -11.850227355957031
    5. ' ' → logprob: -13.725227355957031
    6. ' ' → logprob: -13.850227355957031
    7. '   ' → logprob: -14.225227355957031
    8. '	' → logprob: -14.475227355957031
    9. '/' → logprob: -14.725227355957031
    10. ')' → logprob: -14.975227355957031

Token 410: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.15441757265944e-05
    2. ' i' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.875031471252441
    4. '	i' → logprob: -16.375032424926758
    5. ' ' → logprob: -17.625032424926758
    6. '(i' → logprob: -19.250032424926758
    7. '  ' → logprob: -19.750032424926758
    8. ')' → logprob: -19.875032424926758
    9. '```' → logprob: -20.000032424926758
    10. ')i' → logprob: -20.250032424926758

Token 411: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.857719275401905e-05
    2. ')
' → logprob: -10.500038146972656
    3. ' )' → logprob: -12.375038146972656
    4. '       ' → logprob: -13.125038146972656
    5. '               ' → logprob: -13.125038146972656
    6. '           ' → logprob: -13.625038146972656
    7. '())' → logprob: -15.125038146972656
    8. '))' → logprob: -15.250038146972656
    9. '   ' → logprob: -15.875038146972656
    10. ')}' → logprob: -16.125038146972656

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22362525761127472
    2. '<|end|>' → logprob: -2.0986251831054688
    3. '
' → logprob: -2.9736251831054688
    4. '   ' → logprob: -4.598625183105469
    5. '        
' → logprob: -4.848625183105469
    6. '  
' → logprob: -5.848625183105469
    7. '    
' → logprob: -5.848625183105469
    8. ' 
' → logprob: -7.473625183105469
    9. '<|end|>' → logprob: -7.723625183105469
    10. ' ' → logprob: -7.848625183105469

Token 413: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 414: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13447163999080658
    2. '       ' → logprob: -2.3844716548919678
    3. '   ' → logprob: -3.8844716548919678
    4. ' return' → logprob: -4.884471416473389
    5. '#' → logprob: -5.384471416473389
    6. 'arr' → logprob: -7.259471416473389
    7. '        
' → logprob: -8.884471893310547
    8. '
' → logprob: -10.009471893310547
    9. '    
' → logprob: -10.259471893310547
    10. ' #' → logprob: -11.134471893310547

Token 415: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18440628051757812
    2. ' return' → logprob: -1.8094062805175781
    3. '   ' → logprob: -5.684406280517578
    4. 'arr' → logprob: -7.309406280517578
    5. 'ret' → logprob: -8.559406280517578
    6. '#' → logprob: -8.684406280517578
    7. '    ' → logprob: -9.934406280517578
    8. ' #' → logprob: -10.309406280517578
    9. 'eturn' → logprob: -10.934406280517578
    10. '       ' → logprob: -11.059406280517578

Token 416: ' la' (ID: 557)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.0011422634124756
    2. 'sorted' → logprob: -1.6261422634124756
    3. ' sorted' → logprob: -1.7511422634124756
    4. ' list' → logprob: -2.1261422634124756
    5. 'list' → logprob: -2.5011422634124756
    6. ' arr' → logprob: -2.8761422634124756
    7. ' ' → logprob: -5.876142501831055
    8. '   ' → logprob: -6.376142501831055
    9. '  ' → logprob: -10.126142501831055
    10. ' la' → logprob: -10.626142501831055

Token 417: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.23253361880779266
    2. 'liste' → logprob: -2.3575336933135986
    3. 'arr' → logprob: -2.6075336933135986
    4. 'sorted' → logprob: -3.6075336933135986
    5. ' list' → logprob: -4.9825334548950195
    6. ' liste' → logprob: -5.8575334548950195
    7. 'set' → logprob: -6.7325334548950195
    8. '   ' → logprob: -7.8575334548950195
    9. ' sorted' → logprob: -8.10753345489502
    10. 's' → logprob: -9.73253345489502

Token 418: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6754023432731628
    2. '   ' → logprob: -1.1754024028778076
    3. 'sorted' → logprob: -2.1754024028778076
    4. ' sorted' → logprob: -3.0504024028778076
    5. ' arr' → logprob: -4.4254021644592285
    6. 'return' → logprob: -5.8004021644592285
    7. ' ' → logprob: -6.0504021644592285
    8. ' return' → logprob: -6.8004021644592285
    9. '(sorted' → logprob: -7.4254021644592285
    10. ' des' → logprob: -7.5504021644592285

Token 419: ' contenant' (ID: 131049)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.113263487815857
    2. '   ' → logprob: -1.363263487815857
    3. '<|end|>' → logprob: -1.363263487815857
    4. '.sort' → logprob: -2.4882636070251465
    5. ' ' → logprob: -3.9882636070251465
    6. '       ' → logprob: -4.9882636070251465
    7. '
' → logprob: -4.9882636070251465
    8. ':return' → logprob: -5.1132636070251465
    9. '  ' → logprob: -5.2382636070251465
    10. ' return' → logprob: -5.3632636070251465

Token 420: ' potent' (ID: 35668)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.23941394686698914
    2. 'les' → logprob: -2.3644139766693115
    3. ' la' → logprob: -2.8644139766693115
    4. ' list' → logprob: -4.239413738250732
    5. '   ' → logprob: -4.364413738250732
    6. 'list' → logprob: -4.364413738250732
    7. ' tous' → logprob: -4.989413738250732
    8. 'la' → logprob: -4.989413738250732
    9. 'arr' → logprob: -5.114413738250732
    10. ' ' → logprob: -6.739413738250732

Token 421: 'iellement' (ID: 70958)
  Prédit: 'iellement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iellement' → logprob: -0.00029470553272403777
    2. 'ent' → logprob: -8.87529468536377
    3. 't' → logprob: -10.37529468536377
    4. 'ment' → logprob: -10.75029468536377
    5. 'lement' → logprob: -11.00029468536377
    6. 'i' → logprob: -11.00029468536377
    7. 'ement' → logprob: -11.50029468536377
    8. 'iels' → logprob: -11.50029468536377
    9. 'ielle' → logprob: -11.62529468536377
    10. 'el' → logprob: -12.00029468536377

Token 422: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.01139769610017538
    2. 'les' → logprob: -5.136397838592529
    3. ' des' → logprob: -5.261397838592529
    4. 'd' → logprob: -9.136397361755371
    5. ' les' → logprob: -9.386397361755371
    6. '   ' → logprob: -10.636397361755371
    7. 'de' → logprob: -11.261397361755371
    8. 't' → logprob: -12.136397361755371
    9. '_des' → logprob: -12.511397361755371
    10. ' tous' → logprob: -12.761397361755371

Token 423: ' doubl' (ID: 127992)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.5555793642997742
    2. ' doubl' → logprob: -1.680579423904419
    3. 'div' → logprob: -2.430579423904419
    4. 'élé' → logprob: -2.805579423904419
    5. 'duplicates' → logprob: -2.930579423904419
    6. 'dup' → logprob: -4.43057918548584
    7. 'd' → logprob: -4.68057918548584
    8. 'duplic' → logprob: -5.55557918548584
    9. 'val' → logprob: -5.68057918548584
    10. 'double' → logprob: -5.68057918548584

Token 424: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.1431930512189865
    2. 'és' → logprob: -2.018193006515503
    3. 'é' → logprob: -8.143193244934082
    4. 'es' → logprob: -8.893193244934082
    5. 'ées' → logprob: -10.268193244934082
    6. 'e' → logprob: -11.018193244934082
    7. 'on' → logprob: -11.768193244934082
    8. 'ic' → logprob: -12.518193244934082
    9. '   ' → logprob: -12.768193244934082
    10. '[' → logprob: -13.018193244934082

Token 425: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012503541074693203
    2. '       ' → logprob: -7.126250267028809
    3. '    
' → logprob: -9.001250267028809
    4. '.' → logprob: -9.126250267028809
    5. 'return' → logprob: -9.376250267028809
    6. ',' → logprob: -10.626250267028809
    7. '  ' → logprob: -10.751250267028809
    8. '    ' → logprob: -11.001250267028809
    9. ' ' → logprob: -11.251250267028809
    10. '
' → logprob: -11.376250267028809

Token 426: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4066063463687897
    2. ' n' → logprob: -1.1566063165664673
    3. ' i' → logprob: -4.656606197357178
    4. 'i' → logprob: -4.781606197357178
    5. 'int' → logprob: -7.031606197357178
    6. ' ' → logprob: -8.031606674194336
    7. ' int' → logprob: -8.281606674194336
    8. ' (' → logprob: -9.906606674194336
    9. '(n' → logprob: -10.531606674194336
    10. ' le' → logprob: -10.906606674194336

Token 427: ' est' (ID: 893)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5242875218391418
    2. '==' → logprob: -1.899287462234497
    3. 'est' → logprob: -2.274287462234497
    4. ' est' → logprob: -2.524287462234497
    5. 'is' → logprob: -2.899287462234497
    6. ' ==' → logprob: -5.024287700653076
    7. ' ' → logprob: -5.274287700653076
    8. ' is' → logprob: -5.399287700653076
    9. ''est' → logprob: -7.399287700653076
    10. 'a' → logprob: -7.774287700653076

Token 428: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.008219270966947079
    2. ' un' → logprob: -5.008219242095947
    3. 'a' → logprob: -6.633219242095947
    4. 'une' → logprob: -9.383219718933105
    5. '   ' → logprob: -10.383219718933105
    6. 'par' → logprob: -11.008219718933105
    7. ''un' → logprob: -11.258219718933105
    8. '(un' → logprob: -11.383219718933105
    9. '```' → logprob: -12.633219718933105
    10. 'exact' → logprob: -12.883219718933105

Token 429: ' carré' (ID: 191546)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.112500861287117
    2. 'car' → logprob: -2.9875009059906006
    3. 'perfect' → logprob: -3.8625009059906006
    4. ' carré' → logprob: -4.6125006675720215
    5. '```' → logprob: -5.2375006675720215
    6. 'int' → logprob: -5.6125006675720215
    7. 's' → logprob: -5.7375006675720215
    8. 'square' → logprob: -5.8625006675720215
    9. 'nombre' → logprob: -6.3625006675720215
    10. 'cube' → logprob: -6.7375006675720215

Token 430: ' parfait' (ID: 39268)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.2889038324356079
    2. '   ' → logprob: -1.788903832435608
    3. '_root' → logprob: -4.538903713226318
    4. 'if' → logprob: -4.538903713226318
    5. 'rac' → logprob: -4.788903713226318
    6. 'unique' → logprob: -5.163903713226318
    7. '}' → logprob: -5.163903713226318
    8. 'de' → logprob: -5.163903713226318
    9. 'n' → logprob: -5.288903713226318
    10. 'def' → logprob: -5.538903713226318

Token 431: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030253641307353973
    2. '    
' → logprob: -6.378025531768799
    3. '
' → logprob: -7.378025531768799
    4. '.' → logprob: -8.50302505493164
    5. 'return' → logprob: -8.75302505493164
    6. ',' → logprob: -9.25302505493164
    7. '  
' → logprob: -9.75302505493164
    8. 'arr' → logprob: -9.87802505493164
    9. '       ' → logprob: -10.12802505493164
    10. '   
' → logprob: -10.87802505493164

Token 432: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015311705647036433
    2. '       ' → logprob: -6.50153112411499
    3. '    
' → logprob: -10.751531600952148
    4. 'return' → logprob: -12.751531600952148
    5. '
' → logprob: -13.376531600952148
    6. ' return' → logprob: -13.376531600952148
    7. '        
' → logprob: -14.251531600952148
    8. '    ' → logprob: -15.251531600952148
    9. '   ' → logprob: -16.37653160095215
    10. '  ' → logprob: -16.50153160095215

Token 433: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004998805467039347
    2. '    
' → logprob: -6.004998683929443
    3. 'return' → logprob: -6.629998683929443
    4. ' return' → logprob: -7.379998683929443
    5. '       ' → logprob: -8.254999160766602
    6. '
' → logprob: -9.629999160766602
    7. 'arr' → logprob: -9.754999160766602
    8. '    ' → logprob: -10.129999160766602
    9. '  ' → logprob: -10.254999160766602
    10. '        
' → logprob: -10.254999160766602

Token 434: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024744702968746424
    2. ' return' → logprob: -6.627474308013916
    3. 'return' → logprob: -7.252474308013916
    4. '       ' → logprob: -8.752474784851074
    5. '    
' → logprob: -8.752474784851074
    6. '
' → logprob: -9.252474784851074
    7. '        
' → logprob: -11.752474784851074
    8. 'arr' → logprob: -12.627474784851074
    9. '  ' → logprob: -12.877474784851074
    10. '    ' → logprob: -13.252474784851074

Token 435: ' pas' (ID: 2173)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10319894552230835
    2. 'return' → logprob: -3.228199005126953
    3. ' return' → logprob: -3.228199005126953
    4. ' on' → logprob: -4.978199005126953
    5. 'arr' → logprob: -5.853199005126953
    6. '
' → logprob: -6.728199005126953
    7. 'on' → logprob: -6.978199005126953
    8. ' sorted' → logprob: -6.978199005126953
    9. '    
' → logprob: -6.978199005126953
    10. 'sorted' → logprob: -7.228199005126953

Token 436: ' forcément' (ID: 96692)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5053266882896423
    2. ' encore' → logprob: -2.130326747894287
    3. ' de' → logprob: -2.255326747894287
    4. 'arr' → logprob: -2.630326747894287
    5. '#' → logprob: -3.255326747894287
    6. 'de' → logprob: -4.505326747894287
    7. '    ' → logprob: -5.005326747894287
    8. '[]' → logprob: -5.255326747894287
    9. '       ' → logprob: -5.380326747894287
    10. ' arr' → logprob: -5.505326747894287

Token 437: ' tri' (ID: 12665)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.017042851075530052
    2. 'tr' → logprob: -4.517042636871338
    3. ' tri' → logprob: -5.892042636871338
    4. 'ord' → logprob: -6.392042636871338
    5. 'tris' → logprob: -6.892042636871338
    6. 'ordon' → logprob: -8.642043113708496
    7. 'dans' → logprob: -8.767043113708496
    8. 'sorted' → logprob: -9.517043113708496
    9. '   ' → logprob: -10.767043113708496
    10. 'rang' → logprob: -11.017043113708496

Token 438: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.007876090705394745
    2. 'é' → logprob: -4.882875919342041
    3. 'née' → logprob: -9.8828763961792
    4. 'e' → logprob: -10.7578763961792
    5. '[' → logprob: -10.8828763961792
    6. 'ées' → logprob: -11.0078763961792
    7. 'uée' → logprob: -11.2578763961792
    8. 'quée' → logprob: -11.3828763961792
    9. '#' → logprob: -11.3828763961792
    10. '   ' → logprob: -11.6328763961792

Token 439: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000433291686931625
    2. 'return' → logprob: -8.000432968139648
    3. '    
' → logprob: -10.125432968139648
    4. '       ' → logprob: -10.250432968139648
    5. ' return' → logprob: -11.250432968139648
    6. '
' → logprob: -11.750432968139648
    7. '        
' → logprob: -14.250432968139648
    8. '	return' → logprob: -15.750432968139648
    9. '    ' → logprob: -16.00043296813965
    10. ',' → logprob: -16.00043296813965

Token 440: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013602360850200057
    2. '    
' → logprob: -7.3763604164123535
    3. '       ' → logprob: -8.376359939575195
    4. 'return' → logprob: -8.501359939575195
    5. '
' → logprob: -8.626359939575195
    6. ' return' → logprob: -9.376359939575195
    7. '        
' → logprob: -10.626359939575195
    8. '  
' → logprob: -12.376359939575195
    9. '   
' → logprob: -12.751359939575195
    10. ' 
' → logprob: -14.001359939575195

Token 441: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6116260886192322
    2. 'return' (adapté à ' return') → logprob: -0.8616260886192322
    3. ' return' → logprob: -3.736626148223877
    4. 'arr' → logprob: -4.611626148223877
    5. '       ' → logprob: -6.861626148223877
    6. '    
' → logprob: -8.736625671386719
    7. '  ' → logprob: -10.861625671386719
    8. '
' → logprob: -11.111625671386719
    9. '        
' → logprob: -11.236625671386719
    10. ' ' → logprob: -11.361625671386719

Token 442: ' arr' (ID: 1724)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1671859174966812
    2. 'sorted' → logprob: -2.1671860218048096
    3. 'arr' → logprob: -3.7921860218048096
    4. ' list' → logprob: -4.1671857833862305
    5. ' sorted' → logprob: -6.6671857833862305
    6. ' arr' → logprob: -9.41718578338623
    7. 'set' → logprob: -9.91718578338623
    8. ' ' → logprob: -12.16718578338623
    9. '   ' → logprob: -12.41718578338623
    10. ' set' → logprob: -13.91718578338623

Token 443: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6394705772399902
    2. '<|end|>' → logprob: -0.7644705772399902
    3. '\n' → logprob: -5.63947057723999
    4. '  
' → logprob: -6.76447057723999
    5. '<|end|>' → logprob: -6.76447057723999
    6. '

' → logprob: -7.51447057723999
    7. '    
' → logprob: -8.389471054077148
    8. '   ' → logprob: -10.014471054077148
    9. '```' → logprob: -10.639471054077148
    10. ' 
' → logprob: -10.764471054077148

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1927655041217804
    2. '    
' → logprob: -2.817765474319458
    3. '
' → logprob: -3.067765474319458
    4. '<|end|>' → logprob: -3.192765474319458
    5. 'def' → logprob: -4.442765712738037
    6. '  
' → logprob: -5.067765712738037
    7. '#' → logprob: -5.192765712738037
    8. ' ' → logprob: -7.192765712738037
    9. '   
' → logprob: -7.692765712738037
    10. ' 
' → logprob: -7.692765712738037

Token 445: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4713154137134552
    2. 'div' → logprob: -1.3463153839111328
    3. '#' (adapté à ' #') → logprob: -2.596315383911133
    4. '    
' → logprob: -3.846315383911133
    5. '
' → logprob: -4.721315383911133
    6. 'arr' → logprob: -5.096315383911133
    7. 'def' → logprob: -6.971315383911133
    8. 'result' → logprob: -7.471315383911133
    9. 'd' → logprob: -7.971315383911133
    10. 'res' → logprob: -8.096315383911133

Token 446: ' On' (ID: 2160)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.03307659924030304
    2. 'd' → logprob: -4.408076763153076
    3. 'for' → logprob: -5.283076763153076
    4. '#' → logprob: -5.408076763153076
    5. 'c' → logprob: -5.533076763153076
    6. 'arr' → logprob: -6.408076763153076
    7. 'lst' → logprob: -6.408076763153076
    8. 'ans' → logprob: -6.908076763153076
    9. 'res' → logprob: -7.033076763153076
    10. 'D' → logprob: -7.533076763153076

Token 447: ' commence' (ID: 44755)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3195648491382599
    2. '=' → logprob: -1.6945648193359375
    3. 'div' → logprob: -3.4445648193359375
    4. 'def' → logprob: -4.3195648193359375
    5. '#' → logprob: -4.5695648193359375
    6. ' divis' → logprob: -5.3195648193359375
    7. 'arr' → logprob: -5.4445648193359375
    8. '.sort' → logprob: -5.4445648193359375
    9. ':' → logprob: -5.6945648193359375
    10. 's' → logprob: -5.8195648193359375

Token 448: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.11274701356887817
    2. ' par' → logprob: -2.6127469539642334
    3. '_par' → logprob: -3.9877469539642334
    4. '   ' → logprob: -5.1127471923828125
    5. ' by' → logprob: -5.9877471923828125
    6. 'à' → logprob: -6.2377471923828125
    7. 'by' → logprob: -6.4877471923828125
    8. ' à' → logprob: -7.1127471923828125
    9. '#' → logprob: -7.9877471923828125
    10. ':' → logprob: -8.112747192382812

Token 449: ' définir' (ID: 131502)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.027006492018699646
    2. 'for' → logprob: -5.02700662612915
    3. 'arr' → logprob: -5.27700662612915
    4. 'res' → logprob: -5.40200662612915
    5. ' div' → logprob: -5.52700662612915
    6. 'd' → logprob: -5.65200662612915
    7. 'sorted' → logprob: -6.77700662612915
    8. ' divis' → logprob: -7.52700662612915
    9. 'c' → logprob: -8.027006149291992
    10. 'lst' → logprob: -8.777006149291992

Token 450: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7170275449752808
    2. 'div' → logprob: -1.9670275449752808
    3. ' la' → logprob: -1.9670275449752808
    4. 'les' → logprob: -2.3420276641845703
    5. 'res' → logprob: -3.2170276641845703
    6. 'la' → logprob: -3.8420276641845703
    7. 'd' → logprob: -4.34202766418457
    8. ' les' → logprob: -4.46702766418457
    9. 'def' → logprob: -4.96702766418457
    10. '()' → logprob: -5.21702766418457

Token 451: ' variable' (ID: 11076)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.04862767457962036
    2. 'liste' → logprob: -3.9236276149749756
    3. 'def' → logprob: -4.298627853393555
    4. 'me' → logprob: -5.423627853393555
    5. '#' → logprob: -5.923627853393555
    6. 'd' → logprob: -6.048627853393555
    7. ' div' → logprob: -6.923627853393555
    8. 'poss' → logprob: -7.048627853393555
    9. 'c' → logprob: -7.673627853393555
    10. ' liste' → logprob: -8.048627853393555

Token 452: ' de' (ID: 334)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.09452012181282043
    2. 'ans' → logprob: -3.344520092010498
    3. 'res' → logprob: -3.594520092010498
    4. 'd' → logprob: -3.969520092010498
    5. '   ' → logprob: -5.594520092010498
    6. 'c' → logprob: -6.594520092010498
    7. ' divis' → logprob: -7.344520092010498
    8. 'answer' → logprob: -7.469520092010498
    9. ' div' → logprob: -7.594520092010498
    10. 'result' → logprob: -7.719520092010498

Token 453: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6912492513656616
    2. 'f' → logprob: -2.316249370574951
    3. 'solution' → logprob: -2.441249370574951
    4. 'part' → logprob: -2.691249370574951
    5. 'div' → logprob: -2.691249370574951
    6. 'plus' → logprob: -3.066249370574951
    7. 'la' → logprob: -4.441249370574951
    8. ' result' → logprob: -4.566249370574951
    9. 'max' → logprob: -4.566249370574951
    10. 'res' → logprob: -4.566249370574951

Token 454: ' ans' (ID: 3345)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3343433439731598
    2. 'ans' → logprob: -2.084343433380127
    3. 'result' → logprob: -2.084343433380127
    4. 'answer' → logprob: -3.459343433380127
    5. '   ' → logprob: -6.209343433380127
    6. 'max' → logprob: -6.709343433380127
    7. ' ans' → logprob: -8.709342956542969
    8. 'rés' → logprob: -8.834342956542969
    9. 'best' → logprob: -8.834342956542969
    10. 'r' → logprob: -9.334342956542969

Token 455: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06339758634567261
    2. '=' → logprob: -2.8133976459503174
    3. '   ' → logprob: -6.563397407531738
    4. ',' → logprob: -11.188397407531738
    5. 's' → logprob: -13.563397407531738
    6. 'ans' → logprob: -14.438397407531738
    7. ' =
' → logprob: -14.813397407531738
    8. ' ' → logprob: -15.063397407531738
    9. '    ' → logprob: -15.188397407531738
    10. '.' → logprob: -15.313397407531738

Token 456: ' initial' (ID: 4871)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.23668314516544342
    2. 'ans' → logprob: -1.6116831302642822
    3. ' None' → logprob: -5.736683368682861
    4. ' =' → logprob: -5.861683368682861
    5. '0' → logprob: -5.986683368682861
    6. 'None' → logprob: -6.736683368682861
    7. '=' → logprob: -7.736683368682861
    8. 'max' → logprob: -8.111682891845703
    9. ' ' → logprob: -8.361682891845703
    10. '   ' → logprob: -8.736682891845703

Token 457: 'isée' (ID: 59331)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6843130588531494
    2. 'isée' → logprob: -0.8093130588531494
    3. 'isé' → logprob: -3.4343130588531494
    4. 'e' → logprob: -5.18431282043457
    5. '   ' → logprob: -5.80931282043457
    6. ' =' → logprob: -5.80931282043457
    7. 'ans' → logprob: -6.05931282043457
    8. 'ized' → logprob: -6.93431282043457
    9. 'is' → logprob: -7.30931282043457
    10. 'iser' → logprob: -7.55931282043457

Token 458: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18102622032165527
    2. '=' → logprob: -1.9310262203216553
    3. ' à' → logprob: -3.9310262203216553
    4. '   ' → logprob: -7.931026458740234
    5. ' ' → logprob: -8.056026458740234
    6. '=None' → logprob: -9.306026458740234
    7. 'à' → logprob: -9.806026458740234
    8. ',' → logprob: -10.681026458740234
    9. ' a' → logprob: -10.806026458740234
    10. '0' → logprob: -10.931026458740234

Token 459: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007643067743629217
    2. '-' → logprob: -4.882643222808838
    3. 'None' → logprob: -11.13264274597168
    4. ' ' → logprob: -11.38264274597168
    5. '1' → logprob: -12.00764274597168
    6. ' -' → logprob: -13.25764274597168
    7. '   ' → logprob: -13.88264274597168
    8. 'M' → logprob: -14.00764274597168
    9. '-M' → logprob: -14.00764274597168
    10. '-s' → logprob: -16.25764274597168

Token 460: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07911262661218643
    2. '-' → logprob: -2.5791125297546387
    3. '1' → logprob: -8.829113006591797
    4. ' ' → logprob: -9.954113006591797
    5. ' -' → logprob: -10.954113006591797
    6. 'None' → logprob: -11.579113006591797
    7. '   ' → logprob: -14.329113006591797
    8. '-M' → logprob: -15.204113006591797
    9. '-s' → logprob: -15.329113006591797
    10. '０' → logprob: -15.579113006591797

Token 461: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.33934229612350464
    2. '   ' → logprob: -1.9643423557281494
    3. '
' → logprob: -2.0893423557281494
    4. ' ans' → logprob: -3.9643423557281494
    5. '(ans' → logprob: -6.58934211730957
    6. '	ans' → logprob: -6.58934211730957
    7. ' =' → logprob: -6.96434211730957
    8. '    
' → logprob: -7.83934211730957
    9. '.' → logprob: -8.33934211730957
    10. '=' → logprob: -8.83934211730957

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2389295995235443
    2. 'ans' → logprob: -1.7389296293258667
    3. '
' → logprob: -3.488929510116577
    4. ' ans' → logprob: -5.238929748535156
    5. '	ans' → logprob: -7.488929748535156
    6. '    
' → logprob: -8.113929748535156
    7. '(ans' → logprob: -9.238929748535156
    8. '_ans' → logprob: -11.863929748535156
    9. '  
' → logprob: -12.363929748535156
    10. '
' → logprob: -12.738929748535156

Token 463: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0037549480330199003
    2. '   ' → logprob: -5.75375509262085
    3. ' ans' → logprob: -7.62875509262085
    4. '
' → logprob: -9.503754615783691
    5. '	ans' → logprob: -11.378754615783691
    6. '    
' → logprob: -13.003754615783691
    7. '(ans' → logprob: -13.503754615783691
    8. '```' → logprob: -15.003754615783691
    9. '_ans' → logprob: -15.253754615783691
    10. 'answer' → logprob: -15.503754615783691

Token 464: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269291490316391
    2. '=' → logprob: -2.1269290447235107
    3. '   ' → logprob: -14.00192928314209
    4. ',' → logprob: -16.001928329467773
    5. ' ' → logprob: -16.251928329467773
    6. ' =
' → logprob: -17.751928329467773
    7. '＝' → logprob: -18.126928329467773
    8. '  ' → logprob: -18.751928329467773
    9. '    ' → logprob: -18.876928329467773
    10. '.' → logprob: -18.876928329467773

Token 465: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01603495515882969
    2. ' ' → logprob: -4.141035079956055
    3. '0' → logprob: -14.391035079956055
    4. '   ' → logprob: -15.641035079956055
    5. ' ' → logprob: -18.266035079956055
    6. '  ' → logprob: -18.516035079956055
    7. ' -' → logprob: -19.016035079956055
    8. '-' → logprob: -19.516035079956055
    9. '１' → logprob: -20.016035079956055
    10. '=' → logprob: -20.391035079956055

Token 466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '0' → logprob: -17.625
    4. '-' → logprob: -20.25
    5. 'M' → logprob: -20.625
    6. '１' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. '   ' → logprob: -21.0
    9. '=' → logprob: -22.75
    10. '१' → logprob: -22.9375

Token 467: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007338622584939003
    2. '   ' → logprob: -5.507338523864746
    3. '    
' → logprob: -6.382338523864746
    4. '  
' → logprob: -7.757338523864746
    5. ' for' → logprob: -8.132338523864746
    6. ' 
' → logprob: -8.132338523864746
    7. 'for' → logprob: -8.257338523864746
    8. '
' → logprob: -8.882338523864746
    9. '\n' → logprob: -10.257338523864746
    10. '   
' → logprob: -10.257338523864746

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011509887874126434
    2. 'for' → logprob: -5.261509895324707
    3. ' for' → logprob: -5.511509895324707
    4. '    
' → logprob: -6.636509895324707
    5. '
' → logprob: -7.511509895324707
    6. 'div' → logprob: -8.136509895324707
    7. ' divis' → logprob: -11.261509895324707
    8. '  
' → logprob: -11.511509895324707
    9. '	div' → logprob: -11.761509895324707
    10. '	for' → logprob: -12.386509895324707

Token 469: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23273944854736328
    2. '   ' → logprob: -1.7327394485473633
    3. ' for' → logprob: -4.107739448547363
    4. 'div' → logprob: -4.357739448547363
    5. '#' (adapté à ' #') → logprob: -6.732739448547363
    6. 'd' → logprob: -8.607739448547363
    7. 'arr' → logprob: -9.232739448547363
    8. '    
' → logprob: -10.232739448547363
    9. ' div' → logprob: -10.607739448547363
    10. ',' → logprob: -11.357739448547363

Token 470: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04723901301622391
    2. 'div' → logprob: -3.172239065170288
    3. '#' → logprob: -5.672238826751709
    4. 'd' → logprob: -7.797238826751709
    5. '   ' → logprob: -8.422239303588867
    6. 'c' → logprob: -9.797239303588867
    7. ' for' → logprob: -10.672239303588867
    8. 'arr' → logprob: -10.672239303588867
    9. 'D' → logprob: -11.172239303588867
    10. 'ds' → logprob: -12.047239303588867

Token 471: ' chaque' (ID: 21194)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.028312066569924355
    2. ' d' → logprob: -3.6533119678497314
    3. 'div' → logprob: -6.5283122062683105
    4. 'x' → logprob: -8.278311729431152
    5. 'i' → logprob: -9.278311729431152
    6. ' div' → logprob: -9.403311729431152
    7. 'k' → logprob: -10.528311729431152
    8. 'v' → logprob: -10.778311729431152
    9. ' x' → logprob: -11.528311729431152
    10. 'a' → logprob: -11.778311729431152

Token 472: ' div' (ID: 4223)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5254485011100769
    2. ' d' → logprob: -0.9004485011100769
    3. 'div' → logprob: -6.400448322296143
    4. ' div' → logprob: -8.2754487991333
    5. 'v' → logprob: -8.6504487991333
    6. 'x' → logprob: -9.6504487991333
    7. ' divisor' → logprob: -9.7754487991333
    8. ' v' → logprob: -10.0254487991333
    9. ' x' → logprob: -11.1504487991333
    10. 'k' → logprob: -11.6504487991333

Token 473: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.0017367053078487515
    2. 'ise' → logprob: -6.376736640930176
    3. 'isseur' → logprob: -11.251736640930176
    4. 'isateur' → logprob: -11.626736640930176
    5. 'is' → logprob: -12.501736640930176
    6. 'i' → logprob: -13.251736640930176
    7. '```' → logprob: -13.626736640930176
    8. '_' → logprob: -13.626736640930176
    9. 'isor' → logprob: -14.126736640930176
    10. 'iser' → logprob: -14.251736640930176

Token 474: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4687095284461975
    2. 'd' → logprob: -1.3437094688415527
    3. ' in' → logprob: -2.2187094688415527
    4. 'in' → logprob: -6.468709468841553
    5. ' v' → logprob: -6.593709468841553
    6. 'v' → logprob: -6.843709468841553
    7. ' of' → logprob: -8.218709945678711
    8. 'of' → logprob: -8.968709945678711
    9. 'x' → logprob: -10.093709945678711
    10. ' ' → logprob: -10.093709945678711

Token 475: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6103602051734924
    2. 'e' → logprob: -0.9853602051734924
    3. 'in' → logprob: -2.9853601455688477
    4. ' de' → logprob: -4.110360145568848
    5. ' e' → logprob: -4.735360145568848
    6. ' ' → logprob: -5.985360145568848
    7. ' of' → logprob: -6.860360145568848
    8. ',' → logprob: -7.235360145568848
    9. ' en' → logprob: -7.610360145568848
    10. 'u' → logprob: -7.860360145568848

Token 476: ' M' (ID: 391)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0053522284142673016
    2. ' divisor' → logprob: -5.255352020263672
    3. '(div' → logprob: -9.630352020263672
    4. 'sorted' → logprob: -10.005352020263672
    5. 'set' → logprob: -13.005352020263672
    6. ' divis' → logprob: -13.130352020263672
    7. '	div' → logprob: -14.255352020263672
    8. 'divider' → logprob: -14.630352020263672
    9. ' sorted' → logprob: -14.880352020263672
    10. ' div' → logprob: -15.130352020263672

Token 477: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6472510695457458
    2. ':' → logprob: -0.8972510695457458
    3. '   ' → logprob: -3.6472511291503906
    4. 'in' → logprob: -3.6472511291503906
    5. ',' → logprob: -4.272251129150391
    6. ':
' → logprob: -6.397251129150391
    7. ' :' → logprob: -7.522251129150391
    8. ' ,' → logprob: -9.39725112915039
    9. ' for' → logprob: -9.64725112915039
    10. '       ' → logprob: -9.89725112915039

Token 478: 'la' (ID: 1675)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.03160287067294121
    2. ' in' → logprob: -4.53160285949707
    3. 'in' → logprob: -5.03160285949707
    4. 'd' → logprob: -5.15660285949707
    5. ' divisor' → logprob: -5.40660285949707
    6. ')' → logprob: -6.40660285949707
    7. 'for' → logprob: -6.65660285949707
    8. ' for' → logprob: -8.03160285949707
    9. ' d' → logprob: -8.90660285949707
    10. 'sorted' → logprob: -9.65660285949707

Token 479: ' fonction' (ID: 17610)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.07489673048257828
    2. ' divisor' → logprob: -2.949896812438965
    3. ')' → logprob: -5.199896812438965
    4. ' div' → logprob: -5.699896812438965
    5. 'iv' → logprob: -5.824896812438965
    6. 'arr' → logprob: -6.449896812438965
    7. 'for' → logprob: -6.699896812438965
    8. ' in' → logprob: -7.199896812438965
    9. '(div' → logprob: -7.199896812438965
    10. 'in' → logprob: -7.324896812438965

Token 480: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.09480966627597809
    2. ' divisor' → logprob: -2.5948097705841064
    3. ' for' → logprob: -5.719809532165527
    4. 'M' → logprob: -5.844809532165527
    5. '(div' → logprob: -5.969809532165527
    6. 'for' → logprob: -5.969809532165527
    7. 'd' → logprob: -6.844809532165527
    8. 'def' → logprob: -6.969809532165527
    9. ' M' → logprob: -7.344809532165527
    10. ' div' → logprob: -7.594809532165527

Token 481: ' ren' (ID: 5427)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.002697759075090289
    2. '(' → logprob: -6.002697944641113
    3. ' (' → logprob: -9.002697944641113
    4. ')' → logprob: -9.502697944641113
    5. ',' → logprob: -11.877697944641113
    6. '   ' → logprob: -12.002697944641113
    7. '(m' → logprob: -12.877697944641113
    8. 'M' → logprob: -13.377697944641113
    9. '(
' → logprob: -13.627697944641113
    10. '),' → logprob: -14.127697944641113

Token 482: 'voie' (ID: 70072)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.08479106426239014
    2. 'eturn' → logprob: -3.2097911834716797
    3. 'return' → logprob: -4.20979118347168
    4. '   ' → logprob: -4.83479118347168
    5. 'turn' → logprob: -5.20979118347168
    6. 'der' → logprob: -5.33479118347168
    7. ')' → logprob: -6.08479118347168
    8. 'def' → logprob: -6.58479118347168
    9. 'er' → logprob: -6.83479118347168
    10. '       ' → logprob: -7.45979118347168

Token 483: ' tous' (ID: 10688)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.5914111733436584
    2. 'div' → logprob: -1.2164111137390137
    3. 'M' → logprob: -1.9664111137390137
    4. '(div' → logprob: -5.341411113739014
    5. ')' → logprob: -5.466411113739014
    6. ' M' → logprob: -7.841411113739014
    7. '   ' → logprob: -8.591411590576172
    8. 'set' → logprob: -8.841411590576172
    9. ' divisor' → logprob: -9.216411590576172
    10. 'sorted' → logprob: -9.341411590576172

Token 484: ' les' (ID: 1341)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.15530946850776672
    2. 'M' → logprob: -2.2803094387054443
    3. '(div' → logprob: -4.030309677124023
    4. 'div' → logprob: -4.405309677124023
    5. 'd' → logprob: -5.655309677124023
    6. ')' → logprob: -5.655309677124023
    7. '(d' → logprob: -6.280309677124023
    8. ' M' → logprob: -7.530309677124023
    9. '   ' → logprob: -7.780309677124023
    10. '(' → logprob: -7.780309677124023

Token 485: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.15702232718467712
    2. 'M' → logprob: -2.53202223777771
    3. 'd' → logprob: -3.03202223777771
    4. ' M' → logprob: -4.407022476196289
    5. ' d' → logprob: -6.032022476196289
    6. ' div' → logprob: -6.657022476196289
    7. ' divis' → logprob: -7.282022476196289
    8. ')' → logprob: -7.532022476196289
    9. ' divisor' → logprob: -8.282022476196289
    10. ' ' → logprob: -9.657022476196289

Token 486: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.013105516321957111
    2. 'iseur' → logprob: -4.513105392456055
    3. '```' → logprob: -7.263105392456055
    4. '   ' → logprob: -7.763105392456055
    5. '=' → logprob: -9.388105392456055
    6. 'is' → logprob: -9.763105392456055
    7. 's' → logprob: -9.763105392456055
    8. ')' → logprob: -9.763105392456055
    9. 'isseurs' → logprob: -10.013105392456055
    10. '**' → logprob: -10.013105392456055

Token 487: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.01716495491564274
    2. 'ur' → logprob: -4.767165184020996
    3. 's' → logprob: -5.642165184020996
    4. 'rs' → logprob: -6.142165184020996
    5. 'se' → logprob: -6.767165184020996
    6. 'urse' → logprob: -8.267165184020996
    7. 'eurs' → logprob: -8.392165184020996
    8. 'teurs' → logprob: -8.767165184020996
    9. 'ise' → logprob: -8.892165184020996
    10. 't' → logprob: -9.142165184020996

Token 488: ' de' (ID: 334)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.04724128916859627
    2. 'de' → logprob: -3.2972412109375
    3. ' de' → logprob: -6.0472412109375
    4. '(' → logprob: -6.5472412109375
    5. '(d' → logprob: -6.7972412109375
    6. '(de' → logprob: -6.7972412109375
    7. 's' → logprob: -7.0472412109375
    8. '   ' → logprob: -7.1722412109375
    9. 'd' → logprob: -7.6722412109375
    10. ')' → logprob: -7.6722412109375

Token 489: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.04860769584774971
    2. ' M' → logprob: -3.048607587814331
    3. '(M' → logprob: -11.79860782623291
    4. '   ' → logprob: -11.79860782623291
    5. ' ' → logprob: -12.92360782623291
    6. ')' → logprob: -13.54860782623291
    7. '	M' → logprob: -15.04860782623291
    8. '```' → logprob: -15.29860782623291
    9. 'm' → logprob: -15.54860782623291
    10. '  ' → logprob: -15.92360782623291

Token 490: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4730764329433441
    2. '   ' → logprob: -1.5980764627456665
    3. '(M' → logprob: -2.598076343536377
    4. '()' → logprob: -3.223076343536377
    5. ')' → logprob: -3.598076343536377
    6. '):
' → logprob: -4.848076343536377
    7. '),' → logprob: -5.098076343536377
    8. '()):
' → logprob: -5.348076343536377
    9. 'M' → logprob: -6.223076343536377
    10. '       ' → logprob: -6.348076343536377

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26078495383262634
    2. ',' → logprob: -1.7607849836349487
    3. ' for' → logprob: -3.760784864425659
    4. 'for' → logprob: -4.010785102844238
    5. ':' → logprob: -4.135785102844238
    6. ' ,' → logprob: -9.635785102844238
    7. 'in' → logprob: -9.760785102844238
    8. ' in' → logprob: -10.260785102844238
    9. ':
' → logprob: -10.385785102844238
    10. '.' → logprob: -10.885785102844238

Token 492: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1130465418100357
    2. ' for' → logprob: -2.363046646118164
    3. '   ' → logprob: -4.363046646118164
    4. ',' → logprob: -11.613046646118164
    5. ':' → logprob: -11.988046646118164
    6. '	for' → logprob: -12.988046646118164
    7. ':
' → logprob: -15.113046646118164
    8. 'd' → logprob: -16.113046646118164
    9. '_for' → logprob: -16.363046646118164
    10. '  ' → logprob: -16.863046646118164

Token 493: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3868732452392578
    2. ' d' → logprob: -1.1368732452392578
    3. '	d' → logprob: -13.636873245239258
    4. 'div' → logprob: -14.761873245239258
    5. '   ' → logprob: -15.011873245239258
    6. ' ' → logprob: -15.636873245239258
    7. '_d' → logprob: -16.261873245239258
    8. '(d' → logprob: -17.886873245239258
    9. ')d' → logprob: -17.886873245239258
    10. '```' → logprob: -18.011873245239258

Token 494: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028228238224983215
    2. 'in' → logprob: -5.8778228759765625
    3. ' ' → logprob: -11.002822875976562
    4. '	in' → logprob: -14.502822875976562
    5. 's' → logprob: -15.127822875976562
    6. 'd' → logprob: -15.627822875976562
    7. ' ' → logprob: -15.627822875976562
    8. '  ' → logprob: -16.127822875976562
    9. ',' → logprob: -16.752822875976562
    10. '   ' → logprob: -17.002822875976562

Token 495: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.00016182278341148049
    2. ' divisor' → logprob: -8.875162124633789
    3. 'sorted' → logprob: -11.250162124633789
    4. '(div' → logprob: -11.875162124633789
    5. '   ' → logprob: -14.000162124633789
    6. ' ' → logprob: -14.750162124633789
    7. '	div' → logprob: -15.500162124633789
    8. 'divider' → logprob: -16.12516212463379
    9. '_div' → logprob: -16.62516212463379
    10. 'set' → logprob: -16.75016212463379

Token 496: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00023572170175611973
    2. '(' → logprob: -8.375235557556152
    3. ' (' → logprob: -12.500235557556152
    4. 'M' → logprob: -13.875235557556152
    5. '(m' → logprob: -15.750235557556152
    6. '(
' → logprob: -15.875235557556152
    7. ')' → logprob: -16.75023651123047
    8. '((' → logprob: -17.75023651123047
    9. ' ' → logprob: -17.87523651123047
    10. ' M' → logprob: -18.37523651123047

Token 497: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013624972198158503
    2. '):
' → logprob: -6.626362323760986
    3. '):
' → logprob: -10.876362800598145
    4. ':' → logprob: -11.251362800598145
    5. ' ):' → logprob: -13.501362800598145
    6. ')' → logprob: -13.501362800598145
    7. '   ' → logprob: -13.876362800598145
    8. '}:' → logprob: -15.001362800598145
    9. '       ' → logprob: -15.251362800598145
    10. '():' → logprob: -16.001361846923828

Token 498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2326623648405075
    2. ':' → logprob: -1.607662320137024
    3. '   ' → logprob: -5.107662200927734
    4. '<|end|>' → logprob: -7.482662200927734
    5. ':
' → logprob: -8.107662200927734
    6. ' if' → logprob: -8.982662200927734
    7. '):' → logprob: -10.482662200927734
    8. '    ' → logprob: -10.482662200927734
    9. '        
' → logprob: -10.607662200927734
    10. '    
' → logprob: -11.232662200927734

Token 499: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01854097843170166
    2. '   ' → logprob: -4.643540859222412
    3. ' if' → logprob: -5.268540859222412
    4. '    ' → logprob: -7.018540859222412
    5. 'if' → logprob: -7.018540859222412
    6. ' ' → logprob: -7.268540859222412
    7. '        ' → logprob: -8.51854133605957
    8. '<|end|>' → logprob: -8.51854133605957
    9. '        
' → logprob: -8.64354133605957
    10. ':' → logprob: -8.64354133605957

Token 500: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3813086748123169
    2. ' if' → logprob: -1.381308674812317
    3. '       ' → logprob: -2.7563085556030273
    4. '   ' → logprob: -6.131308555603027
    5. '    ' → logprob: -10.381308555603027
    6. '#' → logprob: -11.256308555603027
    7. '           ' → logprob: -11.381308555603027
    8. '	if' → logprob: -11.506308555603027
    9. ' ' → logprob: -12.256308555603027
    10. ' #' → logprob: -12.256308555603027

Token 501: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22069405019283295
    2. ' if' → logprob: -1.7206940650939941
    3. '   ' → logprob: -4.345694065093994
    4. '       ' → logprob: -5.345694065093994
    5. '    ' → logprob: -7.595694065093994
    6. 'f' → logprob: -7.720694065093994
    7. '#' → logprob: -9.345693588256836
    8. ' ' → logprob: -9.595693588256836
    9. ' #' → logprob: -9.595693588256836
    10. '	if' → logprob: -9.845693588256836

Token 502: ''ass' (ID: 43919)
  Prédit: 'pace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pace' → logprob: -0.8955369591712952
    2. 'e' → logprob: -1.6455368995666504
    3. '   ' → logprob: -2.1455368995666504
    4. 'i' → logprob: -2.3955368995666504
    5. '       ' → logprob: -2.8955368995666504
    6. '    ' → logprob: -3.3955368995666504
    7. 'if' → logprob: -4.02053689956665
    8. 'paces' → logprob: -4.02053689956665
    9. ' if' → logprob: -4.14553689956665
    10. ''il' → logprob: -4.27053689956665

Token 503: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.027703966945409775
    2. 'sure' → logprob: -4.402703762054443
    3. 'e' → logprob: -4.527703762054443
    4. '#' → logprob: -6.402703762054443
    5. 's' → logprob: -6.527703762054443
    6. 'uret' → logprob: -8.027704238891602
    7. 'ert' → logprob: -8.652704238891602
    8. 'Sure' → logprob: -9.027704238891602
    9. 'ur' → logprob: -9.402704238891602
    10. 'üre' → logprob: -9.402704238891602

Token 504: ' que' (ID: 661)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5946846604347229
    2. '       ' → logprob: -1.9696846008300781
    3. '   ' → logprob: -2.094684600830078
    4. ' que' → logprob: -3.094684600830078
    5. '    ' → logprob: -3.469684600830078
    6. ' ' → logprob: -3.469684600830078
    7. ' ' → logprob: -3.844684600830078
    8. '  ' → logprob: -4.344684600830078
    9. '        ' → logprob: -4.344684600830078
    10. '          ' → logprob: -5.219684600830078

Token 505: ' si' (ID: 1784)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.2672129273414612
    2. 'M' → logprob: -1.5172128677368164
    3. ' d' → logprob: -4.892212867736816
    4. 'd' → logprob: -5.142212867736816
    5. ' (' → logprob: -6.767212867736816
    6. ' ' → logprob: -8.267212867736816
    7. '(M' → logprob: -8.642212867736816
    8. '   ' → logprob: -9.517212867736816
    9. '  ' → logprob: -9.517212867736816
    10. '(' → logprob: -10.517212867736816

Token 506: ' on' (ID: 402)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.3368690609931946
    2. 'M' → logprob: -1.5868690013885498
    3. 'd' → logprob: -2.96186900138855
    4. ' d' → logprob: -3.71186900138855
    5. ' (' → logprob: -5.711869239807129
    6. ' ' → logprob: -7.336869239807129
    7. '(M' → logprob: -7.961869239807129
    8. '   ' → logprob: -8.086869239807129
    9. '  ' → logprob: -8.461869239807129
    10. '(' → logprob: -8.586869239807129

Token 507: ' div' (ID: 4223)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6625974774360657
    2. 'd' → logprob: -1.537597417831421
    3. ' M' → logprob: -1.537597417831421
    4. 'if' → logprob: -4.03759765625
    5. 'M' → logprob: -4.28759765625
    6. 'div' → logprob: -5.91259765625
    7. ' div' → logprob: -6.03759765625
    8. '       ' → logprob: -6.16259765625
    9. ' trouve' → logprob: -6.53759765625
    10. ' (' → logprob: -6.53759765625

Token 508: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0006064103217795491
    2. 'd' → logprob: -7.625606536865234
    3. 'ide' → logprob: -9.500606536865234
    4. '   ' → logprob: -11.500606536865234
    5. 'iseur' → logprob: -12.125606536865234
    6. 'iser' → logprob: -12.875606536865234
    7. 't' → logprob: -12.875606536865234
    8. 'isé' → logprob: -12.875606536865234
    9. 'ize' → logprob: -13.000606536865234
    10. 'is' → logprob: -13.000606536865234

Token 509: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.018208123743534088
    2. ' M' → logprob: -4.018208026885986
    3. '   ' → logprob: -10.393208503723145
    4. 'd' → logprob: -11.143208503723145
    5. ' ' → logprob: -12.768208503723145
    6. '(M' → logprob: -13.268208503723145
    7. '  ' → logprob: -13.643208503723145
    8. '    ' → logprob: -13.643208503723145
    9. '       ' → logprob: -14.143208503723145
    10. ' d' → logprob: -14.393208503723145

Token 510: ' par' (ID: 686)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2730960845947266
    2. '//' → logprob: -1.5230960845947266
    3. ' par' → logprob: -1.7730960845947266
    4. '   ' → logprob: -2.2730960845947266
    5. ' d' → logprob: -2.8980960845947266
    6. 'par' → logprob: -3.3980960845947266
    7. '#' → logprob: -3.6480960845947266
    8. ' //' → logprob: -3.7730960845947266
    9. ' ' → logprob: -3.8980960845947266
    10. '%d' → logprob: -3.8980960845947266

Token 511: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0003357006062287837
    2. ' d' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.500335693359375
    4. '	d' → logprob: -17.125335693359375
    5. '```' → logprob: -17.875335693359375
    6. ' ' → logprob: -18.500335693359375
    7. '_d' → logprob: -18.625335693359375
    8. 'le' → logprob: -18.875335693359375
    9. ' ' → logprob: -18.875335693359375
    10. '  ' → logprob: -19.500335693359375

Token 512: ',' (ID: 11)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6235706210136414
    2. ',' → logprob: -0.9985706210136414
    3. '>=' → logprob: -2.748570680618286
    4. ' ,' → logprob: -3.873570680618286
    5. '   ' → logprob: -5.998570442199707
    6. ')' → logprob: -6.373570442199707
    7. ' ==' → logprob: -6.373570442199707
    8. '       ' → logprob: -6.498570442199707
    9. '),' → logprob: -7.248570442199707
    10. ')>=' → logprob: -7.498570442199707

Token 513: ' le' (ID: 505)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.47798192501068115
    2. 'M' → logprob: -0.9779819250106812
    3. 'd' → logprob: -6.102982044219971
    4. ' d' → logprob: -7.102982044219971
    5. '       ' → logprob: -7.852982044219971
    6. '(M' → logprob: -8.352981567382812
    7. '           ' → logprob: -9.477981567382812
    8. '   ' → logprob: -10.102981567382812
    9. ' (' → logprob: -10.227981567382812
    10. '               ' → logprob: -11.602981567382812

Token 514: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1759724617004395
    2. 'quot' → logprob: -1.3009724617004395
    3. 'd' → logprob: -2.3009724617004395
    4. ' résultat' → logprob: -2.3009724617004395
    5. 'rés' → logprob: -2.5509724617004395
    6. ' quotient' → logprob: -2.6759724617004395
    7. '   ' → logprob: -4.3009724617004395
    8. 'res' → logprob: -4.4259724617004395
    9. 'div' → logprob: -4.4259724617004395
    10. ' result' → logprob: -4.9259724617004395

Token 515: ' (' (ID: 350)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5834267735481262
    2. ' >=' → logprob: -0.8334267735481262
    3. '   ' → logprob: -5.5834269523620605
    4. ' est' → logprob: -6.2084269523620605
    5. 'est' → logprob: -7.3334269523620605
    6. ')>=' → logprob: -8.458426475524902
    7. ' ' → logprob: -8.833426475524902
    8. '       ' → logprob: -8.958426475524902
    9. ' ' → logprob: -9.083426475524902
    10. ']>=' → logprob: -9.708426475524902

Token 516: 'qui' (ID: 22771)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3902502655982971
    2. 'M' → logprob: -1.3902502059936523
    3. ' M' → logprob: -2.7652502059936523
    4. '>=' → logprob: -5.390250205993652
    5. ' )' → logprob: -6.390250205993652
    6. 'est' → logprob: -6.765250205993652
    7. '   ' → logprob: -7.015250205993652
    8. ')>=' → logprob: -7.015250205993652
    9. ' est' → logprob: -7.640250205993652
    10. ' >=' → logprob: -8.140250205993652

Token 517: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5136083364486694
    2. '>=' → logprob: -1.7636083364486694
    3. ')' → logprob: -2.013608455657959
    4. 'est' → logprob: -2.638608455657959
    5. ' >=' → logprob: -4.013608455657959
    6. '   ' → logprob: -6.263608455657959
    7. ''est' → logprob: -6.888608455657959
    8. ' ' → logprob: -6.888608455657959
    9. ')>=' → logprob: -7.388608455657959
    10. ' doit' → logprob: -7.888608455657959

Token 518: ' forcément' (ID: 96692)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.08466225862503052
    2. ')' → logprob: -2.8346621990203857
    3. ' >=' → logprob: -4.334662437438965
    4. '   ' → logprob: -6.334662437438965
    5. ')>=' → logprob: -6.334662437438965
    6. 'au' → logprob: -6.459662437438965
    7. '>' → logprob: -6.584662437438965
    8. ' M' → logprob: -6.834662437438965
    9. 'M' → logprob: -7.584662437438965
    10. '≥' → logprob: -8.834662437438965

Token 519: ' un' (ID: 537)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.09455516189336777
    2. 'ent' → logprob: -3.344555139541626
    3. ' >=' → logprob: -4.219555377960205
    4. 'au' → logprob: -4.469555377960205
    5. 'un' → logprob: -4.594555377960205
    6. 'sup' → logprob: -5.094555377960205
    7. ' entier' → logprob: -5.719555377960205
    8. ')' → logprob: -6.094555377960205
    9. ' un' → logprob: -6.344555377960205
    10. '≥' → logprob: -6.844555377960205

Token 520: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.116991326212883
    2. 'int' → logprob: -2.2419912815093994
    3. ' entier' → logprob: -5.7419915199279785
    4. 'nombre' → logprob: -7.7419915199279785
    5. 'quot' → logprob: -9.11699104309082
    6. '>=' → logprob: -9.11699104309082
    7. 'div' → logprob: -9.11699104309082
    8. 'integer' → logprob: -10.49199104309082
    9. 'enti' → logprob: -10.74199104309082
    10. '```' → logprob: -10.99199104309082

Token 521: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010207895189523697
    2. ' )' → logprob: -4.7602081298828125
    3. '>=' → logprob: -7.5102081298828125
    4. '   ' → logprob: -7.7602081298828125
    5. ')>=' → logprob: -8.010208129882812
    6. ' >=' → logprob: -8.385208129882812
    7. 'd' → logprob: -11.385208129882812
    8. 'div' → logprob: -12.135208129882812
    9. '    ' → logprob: -12.385208129882812
    10. ' ' → logprob: -12.510208129882812

Token 522: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044159941375255585
    2. ' )' → logprob: -4.169159889221191
    3. ' car' → logprob: -5.294159889221191
    4. ' d' → logprob: -5.669159889221191
    5. '       ' → logprob: -5.919159889221191
    6. '")' → logprob: -6.044159889221191
    7. '   ' → logprob: -6.544159889221191
    8. 'd' → logprob: -6.794159889221191
    9. '           ' → logprob: -6.919159889221191
    10. ' M' → logprob: -6.919159889221191

Token 523: ' d' (ID: 272)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5143153071403503
    2. ' M' → logprob: -1.3893153667449951
    3. 'd' → logprob: -2.014315366744995
    4. ' d' → logprob: -4.014315128326416
    5. ')' → logprob: -7.639315128326416
    6. 'n' → logprob: -8.139315605163574
    7. '   ' → logprob: -8.889315605163574
    8. ' n' → logprob: -9.139315605163574
    9. 'div' → logprob: -9.264315605163574
    10. '    ' → logprob: -10.264315605163574

Token 524: ' div' (ID: 4223)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4088608920574188
    2. ' divides' → logprob: -1.6588609218597412
    3. ' !=' → logprob: -2.908860921859741
    4. '%' → logprob: -3.658860921859741
    5. 'div' → logprob: -3.908860921859741
    6. ' )' → logprob: -4.408860683441162
    7. ' %' → logprob: -4.783860683441162
    8. '!=' → logprob: -5.033860683441162
    9. ' <=' → logprob: -5.283860683441162
    10. '|' → logprob: -6.408860683441162

Token 525: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.00015288250870071352
    2. 'iseur' → logprob: -9.375152587890625
    3. 'ide' → logprob: -10.000152587890625
    4. 'isé' → logprob: -12.000152587890625
    5. 'isible' → logprob: -12.250152587890625
    6. 'iser' → logprob: -12.375152587890625
    7. 'ize' → logprob: -12.500152587890625
    8. '```' → logprob: -13.625152587890625
    9. '   ' → logprob: -14.250152587890625
    10. 'isez' → logprob: -14.500152587890625

Token 526: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.484708309173584
    2. ' M' → logprob: -0.984708309173584
    3. 'd' → logprob: -4.734708309173584
    4. ' d' → logprob: -6.484708309173584
    5. '   ' → logprob: -8.609708786010742
    6. ' ' → logprob: -10.234708786010742
    7. '    ' → logprob: -11.234708786010742
    8. '	M' → logprob: -11.859708786010742
    9. ' ' → logprob: -12.359708786010742
    10. '  ' → logprob: -12.359708786010742

Token 527: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004135153256356716
    2. ' )' → logprob: -5.5041351318359375
    3. '   ' → logprob: -10.254135131835938
    4. '`)' → logprob: -12.129135131835938
    5. ')>=' → logprob: -12.754135131835938
    6. '       ' → logprob: -13.004135131835938
    7. '')' → logprob: -13.004135131835938
    8. '>=' → logprob: -14.004135131835938
    9. '),' → logprob: -14.004135131835938
    10. ' ' → logprob: -14.504135131835938

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.384741187095642
    2. ' <=' → logprob: -1.509741187095642
    3. ')' → logprob: -1.759741187095642
    4. ' >=' → logprob: -1.884741187095642
    5. '>=' → logprob: -3.2597413063049316
    6. ' d' → logprob: -3.5097413063049316
    7. '<=' → logprob: -3.7597413063049316
    8. ' if' → logprob: -3.8847413063049316
    9. '           ' → logprob: -4.509741306304932
    10. '   ' → logprob: -4.634741306304932

Token 529: ' #' (ID: 1069)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3485194742679596
    2. ')' → logprob: -1.8485194444656372
    3. ' >=' → logprob: -2.2235195636749268
    4. ')>=' → logprob: -4.723519325256348
    5. '>' → logprob: -5.723519325256348
    6. '   ' → logprob: -6.098519325256348
    7. ' )' → logprob: -6.098519325256348
    8. '#' (adapté à ' #') → logprob: -6.223519325256348
    9. '">' → logprob: -6.348519325256348
    10. '       ' → logprob: -6.598519325256348

Token 530: ' est' (ID: 893)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.49194228649139404
    2. ' >=' → logprob: -0.991942286491394
    3. '#' → logprob: -5.741942405700684
    4. '<=' → logprob: -5.991942405700684
    5. ')>=' → logprob: -5.991942405700684
    6. ' <=' → logprob: -6.116942405700684
    7. ']>=' → logprob: -6.366942405700684
    8. ')' → logprob: -6.491942405700684
    9. ' #' → logprob: -6.616942405700684
    10. ' ' → logprob: -7.866942405700684

Token 531: ' supérieur' (ID: 98491)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.14758743345737457
    2. ' >=' → logprob: -2.772587537765503
    3. 'au' → logprob: -2.897587537765503
    4. '   ' → logprob: -5.022587299346924
    5. ' supérieur' → logprob: -5.397587299346924
    6. 'sup' → logprob: -5.647587299346924
    7. '>' → logprob: -6.272587299346924
    8. 'greater' → logprob: -6.522587299346924
    9. ' au' → logprob: -7.147587299346924
    10. '    ' → logprob: -8.647587776184082

Token 532: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01799306832253933
    2. 'ou' → logprob: -4.517992973327637
    3. ' ou' → logprob: -5.017992973327637
    4. 'à' → logprob: -9.267992973327637
    5. ' =' → logprob: -9.517992973327637
    6. '       ' → logprob: -10.017992973327637
    7. 'au' → logprob: -10.517992973327637
    8. '   ' → logprob: -10.642992973327637
    9. 'or' → logprob: -12.392992973327637
    10. '        ' → logprob: -12.392992973327637

Token 533: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025699487887322903
    2. 'ou' → logprob: -6.377570152282715
    3. 'égal' → logprob: -7.252570152282715
    4. '=N' → logprob: -10.002570152282715
    5. '=None' → logprob: -10.627570152282715
    6. ' ou' → logprob: -11.127570152282715
    7. ' ég' → logprob: -11.252570152282715
    8. ' égal' → logprob: -11.377570152282715
    9. 'equal' → logprob: -12.127570152282715
    10. ' =' → logprob: -12.252570152282715

Token 534: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6417657732963562
    2. 'à' → logprob: -0.7667657732963562
    3. '   ' → logprob: -5.016765594482422
    4. '    ' → logprob: -6.891765594482422
    5. '       ' → logprob: -7.516765594482422
    6. 'a' → logprob: -8.391765594482422
    7. '```' → logprob: -9.141765594482422
    8. ' a' → logprob: -9.391765594482422
    9. 'au' → logprob: -9.516765594482422
    10. ''à' → logprob: -9.641765594482422

Token 535: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.160263329744339
    2. ' N' → logprob: -1.9102632999420166
    3. '   ' → logprob: -10.285263061523438
    4. '	N' → logprob: -12.410263061523438
    5. ' ' → logprob: -15.035263061523438
    6. ' ' → logprob: -15.285263061523438
    7. '    ' → logprob: -15.535263061523438
    8. 'n' → logprob: -15.910263061523438
    9. '  ' → logprob: -16.285263061523438
    10. '```' → logprob: -17.285263061523438

Token 536: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09660568833351135
    2. ' and' → logprob: -2.5966057777404785
    3. ':' → logprob: -4.3466057777404785
    4. 'and' → logprob: -5.8466057777404785
    5. '           ' → logprob: -6.7216057777404785
    6. '   ' → logprob: -8.97160530090332
    7. ',' → logprob: -8.97160530090332
    8. ' if' → logprob: -9.22160530090332
    9. ':
' → logprob: -10.59660530090332
    10. ' :' → logprob: -10.59660530090332

Token 537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002533332910388708
    2. ':' → logprob: -6.252533435821533
    3. '   ' → logprob: -7.627533435821533
    4. ' if' → logprob: -10.502532958984375
    5. '           ' → logprob: -10.877532958984375
    6. ' :' → logprob: -11.377532958984375
    7. ' and' → logprob: -11.377532958984375
    8. ':
' → logprob: -11.752532958984375
    9. ',' → logprob: -11.877532958984375
    10. ' ' → logprob: -12.002532958984375

Token 538: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001149867384810932
    2. ' if' → logprob: -9.750115394592285
    3. 'if' (adapté à ' if') → logprob: -10.750115394592285
    4. '   ' → logprob: -11.000115394592285
    5. '           ' → logprob: -12.375115394592285
    6. ' ' → logprob: -12.375115394592285
    7. '	' → logprob: -12.375115394592285
    8. ' ' → logprob: -13.875115394592285
    9. '	   ' → logprob: -14.125115394592285
    10. '    ' → logprob: -14.250115394592285

Token 539: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.34881600737571716
    2. 'M' → logprob: -1.2238160371780396
    3. ' (' → logprob: -8.47381591796875
    4. '(M' → logprob: -9.34881591796875
    5. ' ' → logprob: -10.22381591796875
    6. '   ' → logprob: -10.47381591796875
    7. '    ' → logprob: -12.34881591796875
    8. ' ' → logprob: -12.97381591796875
    9. '(' → logprob: -13.09881591796875
    10. '  ' → logprob: -13.84881591796875

Token 540: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6383511424064636
    2. '//' → logprob: -0.7633511424064636
    3. '#' → logprob: -6.638350963592529
    4. '/' → logprob: -6.763350963592529
    5. ' ' → logprob: -7.138350963592529
    6. '   ' → logprob: -7.263350963592529
    7. ' /' → logprob: -7.388350963592529
    8. ' ' → logprob: -7.888350963592529
    9. '%' → logprob: -8.263351440429688
    10. ' #' → logprob: -8.763351440429688

Token 541: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0007101670489646494
    2. ' d' → logprob: -7.2507100105285645
    3. '	d' → logprob: -16.125709533691406
    4. '   ' → logprob: -17.375709533691406
    5. ' ' → logprob: -18.250709533691406
    6. ')d' → logprob: -18.625709533691406
    7. '>d' → logprob: -19.000709533691406
    8. '<|end|>' → logprob: -19.000709533691406
    9. '
' → logprob: -19.750709533691406
    10. '_d' → logprob: -19.875709533691406

Token 542: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.04862063005566597
    2. ' >=' → logprob: -3.0486207008361816
    3. '   ' → logprob: -11.173620223999023
    4. '>' → logprob: -11.423620223999023
    5. ')>=' → logprob: -12.298620223999023
    6. ']>=' → logprob: -13.423620223999023
    7. ' ' → logprob: -14.673620223999023
    8. '≥' → logprob: -14.798620223999023
    9. '    ' → logprob: -14.923620223999023
    10. ')' → logprob: -15.048620223999023

Token 543: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00015920029545668513
    2. ' N' → logprob: -8.75015926361084
    3. '	N' → logprob: -15.00015926361084
    4. '   ' → logprob: -15.12515926361084
    5. ' ' → logprob: -17.750158309936523
    6. ' ' → logprob: -19.250158309936523
    7. '[N' → logprob: -19.375158309936523
    8. '```' → logprob: -19.875158309936523
    9. '  ' → logprob: -20.125158309936523
    10. '<N' → logprob: -20.375158309936523

Token 544: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10961964726448059
    2. ':
' → logprob: -2.484619617462158
    3. ' and' → logprob: -3.984619617462158
    4. '       ' → logprob: -6.984619617462158
    5. 'and' → logprob: -7.234619617462158
    6. '           ' → logprob: -8.609620094299316
    7. ' :' → logprob: -11.609620094299316
    8. '):
' → logprob: -11.859620094299316
    9. '   ' → logprob: -12.109620094299316
    10. ',' → logprob: -12.234620094299316

Token 545: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3894307017326355
    2. '           ' → logprob: -1.1394307613372803
    3. ' and' → logprob: -6.764430522918701
    4. ':' → logprob: -7.014430522918701
    5. '   ' → logprob: -8.63943099975586
    6. '               ' → logprob: -9.76443099975586
    7. 'and' → logprob: -9.76443099975586
    8. ':
' → logprob: -10.38943099975586
    9. ' if' → logprob: -10.38943099975586
    10. '	       ' → logprob: -10.38943099975586

Token 546: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8260133862495422
    2. 'ans' → logprob: -1.2010133266448975
    3. 'if' → logprob: -1.5760133266448975
    4. ' if' → logprob: -3.2010133266448975
    5. ' ans' → logprob: -4.826013565063477
    6. '               ' → logprob: -6.076013565063477
    7. '   ' → logprob: -6.201013565063477
    8. '       ' → logprob: -7.076013565063477
    9. '	ans' → logprob: -7.451013565063477
    10. '	if' → logprob: -11.826013565063477

Token 547: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0982740968465805
    2. 'if' → logprob: -2.848273992538452
    3. '           ' → logprob: -3.348273992538452
    4. '   ' → logprob: -8.223274230957031
    5. ' ans' → logprob: -9.348274230957031
    6. '       ' → logprob: -9.598274230957031
    7. ' if' → logprob: -10.348274230957031
    8. '	ans' → logprob: -10.723274230957031
    9. '#' → logprob: -10.973274230957031
    10. '               ' → logprob: -11.973274230957031

Token 548: ' met' (ID: 1421)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.14984135329723358
    2. '           ' → logprob: -2.64984130859375
    3. ' ans' → logprob: -2.89984130859375
    4. 'if' → logprob: -4.52484130859375
    5. '               ' → logprob: -6.64984130859375
    6. ' if' → logprob: -7.52484130859375
    7. '   ' → logprob: -8.27484130859375
    8. '       ' → logprob: -8.39984130859375
    9. '	ans' → logprob: -8.39984130859375
    10. '_ans' → logprob: -11.02484130859375

Token 549: ' à' (ID: 1221)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2925306558609009
    2. 'à' → logprob: -2.1675305366516113
    3. '   ' → logprob: -2.6675305366516113
    4. '           ' → logprob: -3.2925305366516113
    5. ' à' → logprob: -4.042530536651611
    6. ' ans' → logprob: -5.917530536651611
    7. '	ans' → logprob: -5.917530536651611
    8. '       ' → logprob: -6.042530536651611
    9. 'aj' → logprob: -6.292530536651611
    10. '  ' → logprob: -6.667530536651611

Token 550: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.033848199993371964
    2. 'ans' → logprob: -3.658848285675049
    3. ' jour' → logprob: -5.158848285675049
    4. 'day' → logprob: -7.533848285675049
    5. '```' → logprob: -7.658848285675049
    6. 'jours' → logprob: -7.908848285675049
    7. 'Jour' → logprob: -8.65884780883789
    8. ' jours' → logprob: -9.53384780883789
    9. 'max' → logprob: -10.15884780883789
    10. '   ' → logprob: -10.53384780883789

Token 551: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011062674224376678
    2. ' ans' → logprob: -4.5110626220703125
    3. '	ans' → logprob: -11.886062622070312
    4. '           ' → logprob: -12.261062622070312
    5. '(ans' → logprob: -12.886062622070312
    6. '   ' → logprob: -14.386062622070312
    7. '_ans' → logprob: -16.011062622070312
    8. '       ' → logprob: -18.511062622070312
    9. '               ' → logprob: -18.636062622070312
    10. 'answer' → logprob: -19.261062622070312

Token 552: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006729814689606428
    2. ' ans' → logprob: -5.006729602813721
    3. '	ans' → logprob: -12.381730079650879
    4. '   ' → logprob: -12.506730079650879
    5. '(ans' → logprob: -13.256730079650879
    6. '           ' → logprob: -13.631730079650879
    7. '_ans' → logprob: -13.756730079650879
    8. '       ' → logprob: -14.131730079650879
    9. 'answer' → logprob: -14.131730079650879
    10. 'if' → logprob: -14.256730079650879

Token 553: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4997219741344452
    2. 'ans' → logprob: -0.9997220039367676
    3. '   ' → logprob: -3.9997220039367676
    4. ' ans' → logprob: -6.124722003936768
    5. 'de' → logprob: -6.374722003936768
    6. '               ' → logprob: -7.124722003936768
    7. '	ans' → logprob: -7.374722003936768
    8. '       ' → logprob: -7.499722003936768
    9. '(ans' → logprob: -7.749722003936768
    10. 'd' → logprob: -8.24972152709961

Token 554: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -5.9153885558771435e-06
    2. ' ans' → logprob: -12.125005722045898
    3. '	ans' → logprob: -15.250005722045898
    4. '(ans' → logprob: -16.0000057220459
    5. '   ' → logprob: -17.5000057220459
    6. 'd' → logprob: -18.0000057220459
    7. '`' → logprob: -19.0000057220459
    8. 'a' → logprob: -19.1250057220459
    9. '_ans' → logprob: -19.5000057220459
    10. '```' → logprob: -19.8750057220459

Token 555: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14306670427322388
    2. ' =' → logprob: -2.018066644668579
    3. '           ' → logprob: -8.26806640625
    4. '               ' → logprob: -9.51806640625
    5. '            ' → logprob: -10.39306640625
    6. '=max' → logprob: -11.01806640625
    7. '   ' → logprob: -12.39306640625
    8. '＝' → logprob: -13.26806640625
    9. ' if' → logprob: -13.51806640625
    10. ',' → logprob: -13.64306640625

Token 556: ' retenir' (ID: 185142)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.020070424303412437
    2. ' max' → logprob: -4.270070552825928
    3. 'd' → logprob: -5.145070552825928
    4. '   ' → logprob: -11.02007007598877
    5. ' d' → logprob: -11.02007007598877
    6. '	max' → logprob: -11.39507007598877
    7. '           ' → logprob: -12.02007007598877
    8. '=max' → logprob: -12.14507007598877
    9. '       ' → logprob: -12.52007007598877
    10. 'ans' → logprob: -13.89507007598877

Token 557: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03305802494287491
    2. 'max' → logprob: -3.783057928085327
    3. ' d' → logprob: -5.033058166503906
    4. ' max' → logprob: -6.283058166503906
    5. 'le' → logprob: -7.408058166503906
    6. ' le' → logprob: -7.658058166503906
    7. '           ' → logprob: -8.408058166503906
    8. '	d' → logprob: -10.908058166503906
    9. '=max' → logprob: -11.533058166503906
    10. '   ' → logprob: -11.658058166503906

Token 558: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3760823607444763
    2. 'd' → logprob: -1.376082420349121
    3. 'maximum' → logprob: -3.501082420349121
    4. 'plus' → logprob: -4.001082420349121
    5. ' max' → logprob: -5.126082420349121
    6. ' maximum' → logprob: -5.501082420349121
    7. ' plus' → logprob: -6.251082420349121
    8. 'div' → logprob: -7.876082420349121
    9. '最大' → logprob: -10.501082420349121
    10. ' d' → logprob: -11.251082420349121

Token 559: ' entre' (ID: 3853)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.045237421989441
    2. '(ans' → logprob: -1.045237421989441
    3. '           ' → logprob: -1.920237421989441
    4. ' ans' → logprob: -1.920237421989441
    5. '            ' → logprob: -7.2952375411987305
    6. '               ' → logprob: -7.4202375411987305
    7. '	ans' → logprob: -7.4202375411987305
    8. ' d' → logprob: -8.04523754119873
    9. '   ' → logprob: -8.17023754119873
    10. 'd' → logprob: -8.54523754119873

Token 560: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0024918261915445328
    2. ' ans' → logprob: -6.2524919509887695
    3. '(ans' → logprob: -7.5024919509887695
    4. '   ' → logprob: -12.12749195098877
    5. '	ans' → logprob: -12.75249195098877
    6. '           ' → logprob: -12.75249195098877
    7. '       ' → logprob: -16.377490997314453
    8. '_ans' → logprob: -17.127490997314453
    9. 'ann' → logprob: -18.502490997314453
    10. '               ' → logprob: -18.627490997314453

Token 561: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.048604074865579605
    2. ' ans' → logprob: -3.0486040115356445
    3. '(ans' → logprob: -11.548604011535645
    4. '	ans' → logprob: -12.173604011535645
    5. '   ' → logprob: -13.923604011535645
    6. '_ans' → logprob: -15.298604011535645
    7. 'answer' → logprob: -15.548604011535645
    8. 'val' → logprob: -16.42360496520996
    9. '       ' → logprob: -16.54860496520996
    10. '           ' → logprob: -17.04860496520996

Token 562: ' actuelle' (ID: 104951)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47646892070770264
    2. 'ans' → logprob: -1.8514689207077026
    3. 'act' → logprob: -2.476469039916992
    4. 'de' → logprob: -2.601469039916992
    5. '(ans' → logprob: -3.351469039916992
    6. ' actuelle' → logprob: -4.476469039916992
    7. '           ' → logprob: -4.976469039916992
    8. 'd' → logprob: -5.351469039916992
    9. '       ' → logprob: -6.476469039916992
    10. '  ' → logprob: -7.101469039916992

Token 563: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.6679698824882507
    2. 'ans' → logprob: -0.9179698824882507
    3. '   ' → logprob: -2.7929699420928955
    4. '           ' → logprob: -3.7929699420928955
    5. '(' → logprob: -7.167969703674316
    6. ' ans' → logprob: -7.292969703674316
    7. '       ' → logprob: -7.417969703674316
    8. ',' → logprob: -7.542969703674316
    9. 'de' → logprob: -7.667969703674316
    10. '               ' → logprob: -7.792969703674316

Token 564: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.0629870858974755e-05
    2. ' ans' → logprob: -9.75006103515625
    3. '(ans' → logprob: -13.75006103515625
    4. '   ' → logprob: -13.87506103515625
    5. '	ans' → logprob: -15.25006103515625
    6. '```' → logprob: -17.75006103515625
    7. 'd' → logprob: -17.87506103515625
    8. '`' → logprob: -18.50006103515625
    9. 'answer' → logprob: -18.50006103515625
    10. '           ' → logprob: -18.62506103515625

Token 565: ' et' (ID: 859)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6298616528511047
    2. '           ' → logprob: -1.00486159324646
    3. ' and' → logprob: -2.75486159324646
    4. ' et' → logprob: -3.75486159324646
    5. ',' → logprob: -4.379861831665039
    6. 'ans' → logprob: -7.004861831665039
    7. '(ans' → logprob: -8.129861831665039
    8. '            ' → logprob: -9.004861831665039
    9. ' ,' → logprob: -9.379861831665039
    10. '               ' → logprob: -9.754861831665039

Token 566: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10023763030767441
    2. ' d' → logprob: -2.3502376079559326
    3. '	d' → logprob: -10.975237846374512
    4. '   ' → logprob: -11.600237846374512
    5. '           ' → logprob: -12.850237846374512
    6. '       ' → logprob: -14.600237846374512
    7. ' ' → logprob: -14.600237846374512
    8. ' le' → logprob: -15.225237846374512
    9. '    ' → logprob: -15.475237846374512
    10. '  ' → logprob: -15.725237846374512

Token 567: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04123876243829727
    2. '               ' → logprob: -3.791238784790039
    3. ',' → logprob: -4.916238784790039
    4. ' ans' → logprob: -5.166238784790039
    5. ')' → logprob: -6.291238784790039
    6. '(ans' → logprob: -7.541238784790039
    7. ' and' → logprob: -7.666238784790039
    8. '=' → logprob: -8.166238784790039
    9. 'ans' → logprob: -8.291238784790039
    10. '       ' → logprob: -8.291238784790039

Token 568: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04591744393110275
    2. ' ans' → logprob: -3.545917510986328
    3. 'ans' → logprob: -4.170917510986328
    4. '               ' → logprob: -7.545917510986328
    5. '       ' → logprob: -10.795917510986328
    6. '	ans' → logprob: -10.795917510986328
    7. '(ans' → logprob: -10.795917510986328
    8. '   ' → logprob: -12.045917510986328
    9. '_ans' → logprob: -14.170917510986328
    10. '```' → logprob: -14.420917510986328

Token 569: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.21692781150341034
    2. ' ans' → logprob: -2.2169277667999268
    3. '           ' → logprob: -2.4669277667999268
    4. '   ' → logprob: -7.966928005218506
    5. '	ans' → logprob: -8.091927528381348
    6. '       ' → logprob: -8.716927528381348
    7. '               ' → logprob: -8.841927528381348
    8. 'if' → logprob: -8.966927528381348
    9. ' if' → logprob: -9.091927528381348
    10. '(ans' → logprob: -11.216927528381348

Token 570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407740354537964
    2. ' =' → logprob: -0.9740774035453796
    3. '=max' → logprob: -15.224077224731445
    4. '   ' → logprob: -15.974077224731445
    5. '＝' → logprob: -17.099077224731445
    6. '    ' → logprob: -18.224077224731445
    7. ' ' → logprob: -19.099077224731445
    8. 'max' → logprob: -19.724077224731445
    9. '	' → logprob: -19.974077224731445
    10. ',' → logprob: -20.099077224731445

Token 571: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.011146738193929195
    2. 'max' → logprob: -4.511146545410156
    3. ' d' → logprob: -9.386146545410156
    4. 'd' → logprob: -11.136146545410156
    5. '	max' → logprob: -14.761146545410156
    6. '(max' → logprob: -16.761146545410156
    7. '=max' → logprob: -17.511146545410156
    8. '_max' → logprob: -18.386146545410156
    9. ' ' → logprob: -18.511146545410156
    10. '   ' → logprob: -18.511146545410156

Token 572: '(d' (ID: 2572)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -10.500027656555176
    3. 'ans' → logprob: -16.125028610229492
    4. ' (' → logprob: -16.250028610229492
    5. '	ans' → logprob: -19.250028610229492
    6. '(
' → logprob: -19.375028610229492
    7. ' ans' → logprob: -19.750028610229492
    8. '   ' → logprob: -20.000028610229492
    9. '(answer' → logprob: -21.125028610229492
    10. '(an' → logprob: -22.125028610229492

Token 573: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001191298826597631
    2. ' ,' → logprob: -6.751191139221191
    3. ' ans' → logprob: -11.751191139221191
    4. '           ' → logprob: -12.126191139221191
    5. ')' → logprob: -12.751191139221191
    6. 'ans' → logprob: -13.001191139221191
    7. '   ' → logprob: -14.126191139221191
    8. '(ans' → logprob: -14.126191139221191
    9. ',
' → logprob: -14.626191139221191
    10. ' )' → logprob: -15.001191139221191

Token 574: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00861528143286705
    2. ' ans' → logprob: -4.758615493774414
    3. '	ans' → logprob: -14.383615493774414
    4. '(ans' → logprob: -15.883615493774414
    5. '_ans' → logprob: -19.008615493774414
    6. '   ' → logprob: -19.133615493774414
    7. ' ' → logprob: -21.008615493774414
    8. '           ' → logprob: -21.383615493774414
    9. 'answer' → logprob: -21.383615493774414
    10. 'Ans' → logprob: -21.633615493774414

Token 575: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011558089405298233
    2. ')
' → logprob: -4.5115580558776855
    3. '   ' → logprob: -7.6365580558776855
    4. ')
' → logprob: -11.511558532714844
    5. ')

' → logprob: -11.636558532714844
    6. '       ' → logprob: -12.011558532714844
    7. ' )' → logprob: -13.011558532714844
    8. '           ' → logprob: -15.261558532714844
    9. ' )
' → logprob: -16.761558532714844
    10. ' ' → logprob: -17.136558532714844

Token 576: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17621861398220062
    2. '
' → logprob: -1.9262186288833618
    3. '    
' → logprob: -4.301218509674072
    4. 'return' → logprob: -6.426218509674072
    5. '  
' → logprob: -7.676218509674072
    6. '```' → logprob: -9.80121898651123
    7. 'print' → logprob: -10.17621898651123
    8. '	return' → logprob: -10.42621898651123
    9. ' return' → logprob: -10.42621898651123
    10. '   
' → logprob: -10.55121898651123

Token 577: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005824514199048281
    2. 'print' → logprob: -5.755824565887451
    3. 'return' → logprob: -6.130824565887451
    4. '    
' → logprob: -8.380824089050293
    5. '
' → logprob: -8.630824089050293
    6. '```' → logprob: -10.130824089050293
    7. ' return' → logprob: -11.005824089050293
    8. '	return' → logprob: -13.380824089050293
    9. ' print' → logprob: -14.130824089050293
    10. '  
' → logprob: -14.130824089050293

Token 578: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0032048076391220093
    2. '   ' → logprob: -5.753204822540283
    3. ' print' → logprob: -11.003204345703125
    4. 'return' → logprob: -11.503204345703125
    5. '#' → logprob: -15.253204345703125
    6. '	print' → logprob: -17.253204345703125
    7. '#print' → logprob: -17.253204345703125
    8. '```' → logprob: -17.628204345703125
    9. ' return' → logprob: -19.628204345703125
    10. '  ' → logprob: -19.878204345703125

Token 579: ' avoir' (ID: 16595)
  Prédit: ' avoir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoir' → logprob: -0.450058251619339
    2. 'la' → logprob: -1.4500582218170166
    3. 'avoir' → logprob: -2.8250582218170166
    4. ' la' → logprob: -3.0750582218170166
    5. '   ' → logprob: -4.825058460235596
    6. 'print' → logprob: -5.200058460235596
    7. 'l' → logprob: -6.075058460235596
    8. '#' → logprob: -6.075058460235596
    9. 'le' → logprob: -6.200058460235596
    10. ' le' → logprob: -7.075058460235596

Token 580: ' passé' (ID: 40520)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006744279526174068
    2. ' print' → logprob: -7.500674247741699
    3. '   ' → logprob: -10.0006742477417
    4. '#' → logprob: -10.0006742477417
    5. 'aff' → logprob: -10.5006742477417
    6. ' imprim' → logprob: -14.3756742477417
    7. 'im' → logprob: -14.8756742477417
    8. '#print' → logprob: -14.8756742477417
    9. 'prin' → logprob: -15.1256742477417
    10. 'pr' → logprob: -15.5006742477417

Token 581: ' tous' (ID: 10688)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.07222352176904678
    2. ' la' → logprob: -3.822223424911499
    3. 'en' → logprob: -3.947223424911499
    4. '#' → logprob: -4.447223663330078
    5. 'par' → logprob: -4.947223663330078
    6. 'le' → logprob: -6.072223663330078
    7. 'l' → logprob: -6.197223663330078
    8. 'tout' → logprob: -6.947223663330078
    9. 'through' → logprob: -7.322223663330078
    10. 'à' → logprob: -7.447223663330078

Token 582: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.2108622789382935
    2. 'la' → logprob: -1.3358622789382935
    3. '()' → logprob: -1.5858622789382935
    4. ' la' → logprob: -2.585862159729004
    5. ' les' → logprob: -2.960862159729004
    6. 'le' → logprob: -3.335862159729004
    7. '(' → logprob: -3.835862159729004
    8. '(ans' → logprob: -3.960862159729004
    9. 'l' → logprob: -4.710862159729004
    10. 'ans' → logprob: -5.335862159729004

Token 583: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0040032463148236275
    2. 'for' → logprob: -5.629003047943115
    3. ' div' → logprob: -8.129003524780273
    4. 'd' → logprob: -10.004003524780273
    5. ' for' → logprob: -10.004003524780273
    6. 'tests' → logprob: -11.879003524780273
    7. ' divis' → logprob: -12.129003524780273
    8. '#' → logprob: -13.254003524780273
    9. 'print' → logprob: -14.004003524780273
    10. '	div' → logprob: -14.504003524780273

Token 584: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0027738476637750864
    2. 'iseur' → logprob: -6.627773761749268
    3. 'eurs' → logprob: -7.252773761749268
    4. 'is' → logprob: -8.127774238586426
    5. '```' → logprob: -8.627774238586426
    6. 'esseurs' → logprob: -9.877774238586426
    7. 'ieurs' → logprob: -10.127774238586426
    8. 'e' → logprob: -10.127774238586426
    9. 's' → logprob: -11.002774238586426
    10. '>' → logprob: -11.377774238586426

Token 585: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.0004630816401913762
    2. 'rs' → logprob: -7.875463008880615
    3. 'reurs' → logprob: -10.125463485717773
    4. 'ur' → logprob: -11.375463485717773
    5. 'eurs' → logprob: -11.375463485717773
    6. 'ments' → logprob: -12.125463485717773
    7. 'r' → logprob: -12.625463485717773
    8. 'd' → logprob: -12.875463485717773
    9. 'res' → logprob: -13.750463485717773
    10. '#' → logprob: -13.750463485717773

Token 586: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4351944327354431
    2. ',' → logprob: -1.060194492340088
    3. 'print' → logprob: -5.185194492340088
    4. 'de' → logprob: -7.935194492340088
    5. ' de' → logprob: -8.18519401550293
    6. ' print' → logprob: -9.06019401550293
    7. '.' → logprob: -10.31019401550293
    8. ' ,' → logprob: -11.06019401550293
    9. 'du' → logprob: -11.43519401550293
    10. '#' → logprob: -11.56019401550293

Token 587: ' revue' (ID: 121081)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.010682274587452412
    2. 'bou' → logprob: -6.010682106018066
    3. ' revue' → logprob: -6.510682106018066
    4. 'return' → logprob: -6.635682106018066
    5. 'ligne' → logprob: -7.260682106018066
    6. 're' → logprob: -7.260682106018066
    7. '```' → logprob: -7.510682106018066
    8. 'liste' → logprob: -8.010682106018066
    9. 'ret' → logprob: -8.260682106018066
    10. 'ent' → logprob: -8.385682106018066

Token 588: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006766410544514656
    2. 'print' → logprob: -5.006766319274902
    3. 'return' → logprob: -10.506766319274902
    4. ',' → logprob: -11.256766319274902
    5. '    
' → logprob: -12.256766319274902
    6. ' print' → logprob: -12.256766319274902
    7. '	print' → logprob: -14.881766319274902
    8. '
' → logprob: -15.506766319274902
    9. '       ' → logprob: -15.756766319274902
    10. ' return' → logprob: -15.881766319274902

Token 589: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3869372606277466
    2. '   ' → logprob: -1.1369372606277466
    3. ' print' → logprob: -9.636937141418457
    4. '	print' → logprob: -14.511937141418457
    5. '#' → logprob: -15.636937141418457
    6. '#print' → logprob: -15.886937141418457
    7. '```' → logprob: -16.511938095092773
    8. 'return' → logprob: -17.261938095092773
    9. '       ' → logprob: -18.886938095092773
    10. '  ' → logprob: -19.761938095092773

Token 590: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003692835569381714
    2. '   ' → logprob: -6.128692626953125
    3. ' print' → logprob: -6.503692626953125
    4. 'return' → logprob: -11.753692626953125
    5. '	print' → logprob: -14.878692626953125
    6. ' return' → logprob: -15.628692626953125
    7. '#' → logprob: -16.628692626953125
    8. '_print' → logprob: -17.003692626953125
    9. '#print' → logprob: -17.003692626953125
    10. '    
' → logprob: -17.253692626953125

Token 591: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00033546582562848926
    2. 'ans' → logprob: -8.000335693359375
    3. '	ans' → logprob: -17.000335693359375
    4. ' ans' → logprob: -19.000335693359375
    5. '(' → logprob: -19.375335693359375
    6. '   ' → logprob: -20.000335693359375
    7. '(answer' → logprob: -20.125335693359375
    8. 'la' → logprob: -21.000335693359375
    9. 'ANS' → logprob: -21.000335693359375
    10. '_ans' → logprob: -21.625335693359375

Token 592: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.025870924815535545
    2. '(ans' → logprob: -3.7758710384368896
    3. 'print' → logprob: -6.0258708000183105
    4. 'result' → logprob: -8.650871276855469
    5. 'answer' → logprob: -10.400871276855469
    6. ' ans' → logprob: -15.025871276855469
    7. 'rés' → logprob: -15.150871276855469
    8. '   ' → logprob: -16.02587127685547
    9. 'res' → logprob: -16.27587127685547
    10. '	ans' → logprob: -16.40087127685547

Token 593: ' finale' (ID: 37759)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0037452138494700193
    2. 'ans' → logprob: -5.628745079040527
    3. '   ' → logprob: -9.753745079040527
    4. 'de' → logprob: -10.003745079040527
    5. '(' → logprob: -11.003745079040527
    6. 'd' → logprob: -11.253745079040527
    7. 'final' → logprob: -12.253745079040527
    8. 'du' → logprob: -13.003745079040527
    9. '	ans' → logprob: -13.753745079040527
    10. '```' → logprob: -14.003745079040527

Token 594: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.03169307857751846
    2. 'ans' → logprob: -3.7816929817199707
    3. 'print' → logprob: -5.031692981719971
    4. '   ' → logprob: -6.281692981719971
    5. '(' → logprob: -11.531693458557129
    6. '(print' → logprob: -13.656693458557129
    7. '	ans' → logprob: -14.156693458557129
    8. ' ans' → logprob: -14.156693458557129
    9. '```' → logprob: -14.156693458557129
    10. '(answer' → logprob: -15.531693458557129

Token 595: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005279057659208775
    2. '(ans' → logprob: -5.255279064178467
    3. ' ans' → logprob: -10.005278587341309
    4. '	ans' → logprob: -16.880279541015625
    5. '_ans' → logprob: -18.880279541015625
    6. 'ANS' → logprob: -19.130279541015625
    7. 'print' → logprob: -19.130279541015625
    8. 'answer' → logprob: -20.255279541015625
    9. '   ' → logprob: -21.005279541015625
    10. 'Ans' → logprob: -21.255279541015625

Token 596: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019737191032618284
    2. 'print' → logprob: -6.251973628997803
    3. ' print' → logprob: -10.626974105834961
    4. '    
' → logprob: -11.626974105834961
    5. '
' → logprob: -12.001974105834961
    6. '```' → logprob: -12.626974105834961
    7. '	print' → logprob: -13.251974105834961
    8. '       ' → logprob: -15.001974105834961
    9. '   ' → logprob: -15.626974105834961
    10. '  
' → logprob: -16.25197410583496

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023276345804333687
    2. 'print' → logprob: -3.7732763290405273
    3. ' print' → logprob: -10.648276329040527
    4. '```' → logprob: -12.023276329040527
    5. '	print' → logprob: -13.898276329040527
    6. '    
' → logprob: -15.523276329040527
    7. '
' → logprob: -17.273277282714844
    8. '       ' → logprob: -17.523277282714844
    9. '   ' → logprob: -18.273277282714844
    10. '``' → logprob: -18.648277282714844

Token 598: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00410012761130929
    2. '   ' → logprob: -5.504100322723389
    3. ' print' → logprob: -10.75409984588623
    4. '```' → logprob: -15.00409984588623
    5. '	print' → logprob: -17.254100799560547
    6. '`' → logprob: -22.504100799560547
    7. '``' → logprob: -23.254100799560547
    8. '       ' → logprob: -23.504100799560547
    9. 'println' → logprob: -24.004100799560547
    10. '  ' → logprob: -24.254100799560547

Token 599: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.596781946020201e-05
    2. '(' → logprob: -10.000045776367188
    3. ' (' → logprob: -15.500045776367188
    4. '()' → logprob: -15.750045776367188
    5. 'ans' → logprob: -15.750045776367188
    6. '(abs' → logprob: -17.500045776367188
    7. '(
' → logprob: -17.750045776367188
    8. '(answer' → logprob: -17.750045776367188
    9. '(an' → logprob: -18.750045776367188
    10. '(args' → logprob: -19.375045776367188

Token 600: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -16.125
    4. ')`' → logprob: -16.5
    5. '())' → logprob: -17.25
    6. '()' → logprob: -18.0
    7. '')' → logprob: -18.125
    8. '))' → logprob: -18.25
    9. '）' → logprob: -19.125
    10. '`)' → logprob: -19.5

Token 601: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 602: ' App' (ID: 2583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 603: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.0035330820828676224
    2. 'eler' → logprob: -6.503532886505127
    3. 'l' → logprob: -6.753532886505127
    4. 'e' → logprob: -8.003533363342285
    5. 'le' → logprob: -8.003533363342285
    6. '#' → logprob: -9.753533363342285
    7. 'elé' → logprob: -10.503533363342285
    8. 'ar' → logprob: -10.753533363342285
    9. '_' → logprob: -10.878533363342285
    10. 'elle' → logprob: -11.378533363342285

Token 604: ' de' (ID: 334)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.006038646679371595
    2. '(' → logprob: -5.631038665771484
    3. '_' → logprob: -7.131038665771484
    4. ' abc' → logprob: -7.631038665771484
    5. '()' → logprob: -7.756038665771484
    6. 'er' → logprob: -7.881038665771484
    7. 'def' → logprob: -8.506038665771484
    8. 'é' → logprob: -10.131038665771484
    9. 'de' → logprob: -10.506038665771484
    10. '   ' → logprob: -11.381038665771484

Token 605: ' la' (ID: 557)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abc' → logprob: -1.9361264946837764e-07
    2. ' abc' → logprob: -15.875
    3. '```' → logprob: -18.625
    4. '__' → logprob: -18.75
    5. '_' → logprob: -20.25
    6. 'xyz' → logprob: -20.625
    7. 'abs' → logprob: -20.75
    8. 'abcdef' → logprob: -20.75
    9. 'def' → logprob: -22.125
    10. '()' → logprob: -22.25

Token 606: ' fonction' (ID: 17610)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abc' → logprob: -1.8789383830153383e-05
    2. ' abc' → logprob: -11.125019073486328
    3. 'if' → logprob: -13.250019073486328
    4. 'def' → logprob: -14.000019073486328
    5. 'abcdef' → logprob: -14.250019073486328
    6. '__' → logprob: -15.125019073486328
    7. 'fonction' → logprob: -15.750019073486328
    8. 'main' → logprob: -16.125019073486328
    9. 'function' → logprob: -16.625019073486328
    10. '_' → logprob: -17.000019073486328

Token 607: ' principale' (ID: 68926)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abc' → logprob: -2.339278580620885e-06
    2. '
' → logprob: -13.250001907348633
    3. '```' → logprob: -15.750001907348633
    4. '()
' → logprob: -16.250001907348633
    5. ' abc' → logprob: -16.250001907348633
    6. '\
' → logprob: -16.500001907348633
    7. '\' → logprob: -18.000001907348633
    8. '``' → logprob: -18.375001907348633
    9. 'abcdef' → logprob: -18.500001907348633
    10. '  
' → logprob: -18.875001907348633

Token 608: ' pour' (ID: 1930)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abc' → logprob: -2.8206473871250637e-05
    2. '
' → logprob: -10.500028610229492
    3. '```' → logprob: -14.875028610229492
    4. '\
' → logprob: -16.250028610229492
    5. ' abc' → logprob: -16.750028610229492
    6. '  
' → logprob: -17.750028610229492
    7. '``' → logprob: -18.250028610229492
    8. '    
' → logprob: -18.625028610229492
    9. 'if' → logprob: -18.750028610229492
    10. '\' → logprob: -19.000028610229492

Token 609: ' lancer' (ID: 82697)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.0005663761985488236
    2. ' abc' → logprob: -7.500566482543945
    3. '#' → logprob: -13.125566482543945
    4. 'abcd' → logprob: -13.250566482543945
    5. '__' → logprob: -13.375566482543945
    6. 'if' → logprob: -13.750566482543945
    7. 'abcdef' → logprob: -13.875566482543945
    8. 'test' → logprob: -14.250566482543945
    9. 'tester' → logprob: -14.375566482543945
    10. 'ab' → logprob: -14.375566482543945

Token 610: ' le' (ID: 505)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abc' → logprob: -6.2729995988775045e-06
    2. ' abc' → logprob: -12.000006675720215
    3. '```' → logprob: -19.8750057220459
    4. 'xyz' → logprob: -20.1250057220459
    5. 'abcdef' → logprob: -20.5000057220459
    6. '()' → logprob: -21.7500057220459
    7. 'def' → logprob: -21.8750057220459
    8. '   ' → logprob: -22.0000057220459
    9. 'abs' → logprob: -22.5000057220459
    10. '_' → logprob: -22.8750057220459

Token 611: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.05608075112104416
    2. 'code' → logprob: -3.3060808181762695
    3. 'abc' → logprob: -4.3060808181762695
    4. 'script' → logprob: -6.5560808181762695
    5. 'calcul' → logprob: -6.6810808181762695
    6. ' programme' → logprob: -6.9310808181762695
    7. 'program' → logprob: -8.43108081817627
    8. 'test' → logprob: -8.93108081817627
    9. ' abc' → logprob: -9.30608081817627
    10. 'programm' → logprob: -9.68108081817627

Token 612: '.
' (ID: 558)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.20163464546203613
    2. '
' → logprob: -1.7016346454620361
    3. '\
' → logprob: -9.951634407043457
    4. '()
' → logprob: -10.076634407043457
    5. '```' → logprob: -10.201634407043457
    6. '\' → logprob: -10.326634407043457
    7. '\n' → logprob: -10.951634407043457
    8. '
' → logprob: -11.076634407043457
    9. '  
' → logprob: -12.201634407043457
    10. '(
' → logprob: -12.451634407043457

Token 613: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: 0.0
    2. '```' → logprob: -17.875
    3. ' abc' → logprob: -19.375
    4. 'if' → logprob: -22.125
    5. 'abcdef' → logprob: -22.25
    6. '``' → logprob: -23.125
    7. '
' → logprob: -23.5
    8. 'xyz' → logprob: -23.625
    9. '__' → logprob: -25.0
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -25.5

Token 614: '112' (ID: 12307)
  Prédit: '112'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '112' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.250001907348633
    3. '1' → logprob: -14.500001907348633
    4. '12' → logprob: -19.250001907348633
    5. '111' → logprob: -20.125001907348633
    6. '__' → logprob: -20.375001907348633
    7. '```' → logprob: -20.875001907348633
    8. '113' → logprob: -21.125001907348633
    9. '11' → logprob: -21.500001907348633
    10. '114' → logprob: -21.875001907348633

Token 615: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.2961512513575144e-05
    2. '_' → logprob: -10.875022888183594
    3. '```' → logprob: -13.625022888183594
    4. '_s' → logprob: -13.875022888183594
    5. ' _' → logprob: -13.875022888183594
    6. ''_' → logprob: -15.375022888183594
    7. '_a' → logprob: -15.875022888183594
    8. '_D' → logprob: -16.750022888183594
    9. '_f' → logprob: -16.875022888183594
    10. '\' → logprob: -17.375022888183594

Token 616: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.8325677703833207e-05
    2. '(' → logprob: -10.750028610229492
    3. '()
' → logprob: -12.750028610229492
    4. '()`' → logprob: -13.625028610229492
    5. ' ()' → logprob: -13.750028610229492
    6. '();' → logprob: -15.000028610229492
    7. '()"' → logprob: -15.250028610229492
    8. '()

' → logprob: -15.625028610229492
    9. '()]' → logprob: -16.000028610229492
    10. '())' → logprob: -16.125028610229492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 614
Tokens correctement prédits (1ère position, stricte): 163
Tokens correctement prédits (1ère position, avec adaptation): 169
Tokens correctement prédits (top 10): 364
Précision stricte (1ère position): 26.55%
Précision adaptée (1ère position): 27.52%
Précision (top 10): 59.28%
================================================================================
