================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b, m = map(int, input().split())
A = list(map(int, input().split()))
B = list(map(int, input().split()))
qupons = [list(map(int, input().split())) for _ in range(m)]
cand1 = min(A) + min(B)
prices_with_qpons = [A[q[0]-1] + B[q[1]-1] - q[2] for q in qupons]
cand2 = min(prices_with_qpons) if prices_with_qpons else float('inf')
print(min(cand1, cand2))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03240988776087761
    2. '+' → logprob: -4.03240966796875
    3. ' =' → logprob: -4.40740966796875
    4. ',' → logprob: -6.65740966796875
    5. ' ' → logprob: -8.78240966796875
    6. '+=' → logprob: -9.03240966796875
    7. '```' → logprob: -9.53240966796875
    8. ' +' → logprob: -9.65740966796875
    9. '.' → logprob: -9.90740966796875
    10. '_' → logprob: -10.28240966796875

Token 4: ' m' (ID: 284)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.032590705901384354
    2. ' =' → logprob: -3.907590627670288
    3. ',' → logprob: -4.907590866088867
    4. 'c' → logprob: -5.782590866088867
    5. ' ' → logprob: -7.157590866088867
    6. '_' → logprob: -8.907590866088867
    7. ',c' → logprob: -8.907590866088867
    8. '.' → logprob: -9.032590866088867
    9. ')' → logprob: -9.157590866088867
    10. '<|end|>' → logprob: -9.907590866088867

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014859511516988277
    2. '+' → logprob: -5.139859676361084
    3. '*' → logprob: -5.389859676361084
    4. ' =' → logprob: -5.889859676361084
    5. '**' → logprob: -7.639859676361084
    6. ',' → logprob: -8.139859199523926
    7. '```' → logprob: -8.264859199523926
    8. ')' → logprob: -9.139859199523926
    9. '.' → logprob: -9.639859199523926
    10. '_' → logprob: -9.639859199523926

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6666733622550964
    2. '0' → logprob: -1.0416734218597412
    3. '1' → logprob: -2.041673421859741
    4. '10' → logprob: -6.041673183441162
    5. '5' → logprob: -7.291673183441162
    6. ' [' → logprob: -8.79167366027832
    7. '[' → logprob: -9.04167366027832
    8. '2' → logprob: -9.29167366027832
    9. '```' → logprob: -9.29167366027832
    10. 'a' → logprob: -9.41667366027832

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0047437530010938644
    2. '(lambda' → logprob: -5.629743576049805
    3. '```' → logprob: -7.504743576049805
    4. '<|end|>' → logprob: -8.254743576049805
    5. '(int' → logprob: -10.254743576049805
    6. ')' → logprob: -10.254743576049805
    7. '(user' → logprob: -10.504743576049805
    8. '(a' → logprob: -10.504743576049805
    9. '(
' → logprob: -10.754743576049805
    10. '(token' → logprob: -11.004743576049805

Token 8: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16864082217216492
    2. '(input' → logprob: -1.9186408519744873
    3. '<|end|>' → logprob: -6.418640613555908
    4. '(' → logprob: -6.668640613555908
    5. '`)' → logprob: -7.043640613555908
    6. 'input' → logprob: -7.043640613555908
    7. '(user' → logprob: -7.668640613555908
    8. ')(' → logprob: -7.793640613555908
    9. '(int' → logprob: -7.918640613555908
    10. ',' → logprob: -8.043641090393066

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001933397026732564
    2. ' input' → logprob: -6.251933574676514
    3. '(input' → logprob: -12.376933097839355
    4. ')' → logprob: -14.751933097839355
    5. 'range' → logprob: -17.126934051513672
    6. '```' → logprob: -17.126934051513672
    7. ',input' → logprob: -17.126934051513672
    8. ' ' → logprob: -17.501934051513672
    9. '=input' → logprob: -17.751934051513672
    10. '[input' → logprob: -17.751934051513672

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.757074773311615
    2. ')' → logprob: -1.1320748329162598
    3. '())' → logprob: -2.1320748329162598
    4. '()' → logprob: -3.3820748329162598
    5. '('' → logprob: -4.25707483291626
    6. '<|end|>' → logprob: -4.50707483291626
    7. '(token' → logprob: -5.13207483291626
    8. '(""))' → logprob: -5.50707483291626
    9. '```' → logprob: -5.63207483291626
    10. '(()' → logprob: -5.88207483291626

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004049322451464832
    2. 'strip' → logprob: -8.000405311584473
    3. 'rstrip' → logprob: -10.500405311584473
    4. ')' → logprob: -10.750405311584473
    5. ' split' → logprob: -11.625405311584473
    6. 'read' → logprob: -11.875405311584473
    7. '(split' → logprob: -12.625405311584473
    8. '```' → logprob: -14.125405311584473
    9. 'spl' → logprob: -15.625405311584473
    10. '_split' → logprob: -16.125404357910156

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027033530175685883
    2. '))' → logprob: -4.02703332901001
    3. '())' → logprob: -4.77703332901001
    4. '`)' → logprob: -8.777033805847168
    5. '()' → logprob: -9.027033805847168
    6. ')`' → logprob: -10.402033805847168
    7. '()))' → logprob: -10.527033805847168
    8. ')))' → logprob: -10.527033805847168
    9. '(' → logprob: -10.652033805847168
    10. '```' → logprob: -11.027033805847168

Token 13: 'A' (ID: 32)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19948063790798187
    2. '*' → logprob: -2.8244805335998535
    3. '#' → logprob: -2.9494805335998535
    4. '+
' → logprob: -4.3244805335998535
    5. '```' → logprob: -4.5744805335998535
    6. '\n' → logprob: -4.8244805335998535
    7. '**' → logprob: -5.0744805335998535
    8. '=' → logprob: -5.4494805335998535
    9. '\' → logprob: -5.5744805335998535
    10. ',' → logprob: -5.5744805335998535

Token 14: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18996472656726837
    2. '**' → logprob: -2.689964771270752
    3. '%' → logprob: -3.314964771270752
    4. '+' → logprob: -3.439964771270752
    5. '*' → logprob: -4.439964771270752
    6. '.' → logprob: -5.689964771270752
    7. ')' → logprob: -6.064964771270752
    8. '[i' → logprob: -6.064964771270752
    9. 'm' → logprob: -6.314964771270752
    10. 'a' → logprob: -6.314964771270752

Token 15: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29958242177963257
    2. 'pow' → logprob: -2.0495824813842773
    3. ' a' → logprob: -3.0495824813842773
    4. '[a' → logprob: -3.5495824813842773
    5. '(a' → logprob: -4.174582481384277
    6. ' (' → logprob: -4.299582481384277
    7. '[]' → logprob: -5.174582481384277
    8. ' [' → logprob: -5.299582481384277
    9. '[' → logprob: -5.299582481384277
    10. '(pow' → logprob: -5.799582481384277

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00017886889690998942
    2. '(range' → logprob: -9.375179290771484
    3. '(A' → logprob: -11.250179290771484
    4. '(
' → logprob: -11.375179290771484
    5. '(

' → logprob: -11.750179290771484
    6. '(a' → logprob: -11.875179290771484
    7. '('' → logprob: -12.000179290771484
    8. '()' → logprob: -12.250179290771484
    9. '("("' → logprob: -12.250179290771484
    10. '([' → logprob: -12.625179290771484

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01110936515033245
    2. '(' → logprob: -4.511109352111816
    3. 'int' → logprob: -10.511109352111816
    4. '[int' → logprob: -11.761109352111816
    5. '<int' → logprob: -11.886109352111816
    6. '(str' → logprob: -12.011109352111816
    7. '(input' → logprob: -12.386109352111816
    8. '=int' → logprob: -13.386109352111816
    9. '(lambda' → logprob: -13.511109352111816
    10. ',int' → logprob: -13.886109352111816

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4800381362438202
    2. ',input' → logprob: -0.9800381660461426
    3. '(input' → logprob: -5.230038166046143
    4. '(' → logprob: -7.605038166046143
    5. ' ,' → logprob: -10.230037689208984
    6. 'input' → logprob: -10.855037689208984
    7. ',int' → logprob: -11.230037689208984
    8. '(),' → logprob: -12.105037689208984
    9. '```' → logprob: -12.105037689208984
    10. '<input' → logprob: -12.855037689208984

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759521722793579
    2. ' input' → logprob: -0.8259521722793579
    3. ',input' → logprob: -12.200952529907227
    4. 'list' → logprob: -13.450952529907227
    5. ' ' → logprob: -13.575952529907227
    6. '(input' → logprob: -13.825952529907227
    7. ')' → logprob: -13.950952529907227
    8. 'range' → logprob: -14.450952529907227
    9. 'a' → logprob: -14.575952529907227
    10. ' list' → logprob: -14.950952529907227

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009895805269479752
    2. '()' → logprob: -7.0009894371032715
    3. '())' → logprob: -10.50098991394043
    4. '()))' → logprob: -10.50098991394043
    5. ')' → logprob: -11.75098991394043
    6. '(' → logprob: -12.12598991394043
    7. '(),' → logprob: -13.00098991394043
    8. '().__' → logprob: -13.87598991394043
    9. '()>' → logprob: -13.87598991394043
    10. '))' → logprob: -14.12598991394043

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1888679839321412e-05
    2. 'strip' → logprob: -10.750021934509277
    3. 'rstrip' → logprob: -15.500021934509277
    4. ' split' → logprob: -16.00002098083496
    5. 'plit' → logprob: -16.75002098083496
    6. '(split' → logprob: -18.12502098083496
    7. 'read' → logprob: -18.50002098083496
    8. 'spl' → logprob: -18.50002098083496
    9. 'list' → logprob: -19.37502098083496
    10. 'str' → logprob: -20.62502098083496

Token 22: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3338514566421509
    2. ')' → logprob: -1.8338514566421509
    3. '()))' → logprob: -2.2088513374328613
    4. '())' → logprob: -4.458851337432861
    5. '(' → logprob: -6.458851337432861
    6. '()' → logprob: -6.958851337432861
    7. ')))' → logprob: -10.20885181427002
    8. ''))' → logprob: -11.08385181427002
    9. ' ))' → logprob: -11.33385181427002
    10. '()))
' → logprob: -11.70885181427002

Token 23: 'B' (ID: 33)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10119162499904633
    2. 'for' → logprob: -3.976191520690918
    3. 's' → logprob: -4.101191520690918
    4. 'result' → logprob: -4.476191520690918
    5. 'x' → logprob: -4.601191520690918
    6. 'if' → logprob: -4.726191520690918
    7. 'C' → logprob: -5.226191520690918
    8. 'p' → logprob: -5.976191520690918
    9. 'res' → logprob: -6.101191520690918
    10. 'a' → logprob: -6.101191520690918

Token 24: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1752513349056244
    2. ' =' → logprob: -1.9252513647079468
    3. '=' → logprob: -4.425251483917236
    4. ')' → logprob: -6.550251483917236
    5. '.append' → logprob: -7.050251483917236
    6. ' .' → logprob: -8.175251007080078
    7. '[' → logprob: -9.050251007080078
    8. '.extend' → logprob: -9.300251007080078
    9. '.=' → logprob: -9.800251007080078
    10. '_' → logprob: -11.175251007080078

Token 25: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25193390250205994
    2. ' list' → logprob: -1.5019339323043823
    3. '[' → logprob: -13.751934051513672
    4. 'map' → logprob: -14.001934051513672
    5. '[]' → logprob: -14.126934051513672
    6. '[list' → logprob: -14.751934051513672
    7. ' [' → logprob: -15.126934051513672
    8. 'List' → logprob: -15.126934051513672
    9. ' []' → logprob: -15.376934051513672
    10. ' map' → logprob: -15.751934051513672

Token 26: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47445833683013916
    2. '(map' → logprob: -0.9744583368301392
    3. '(

' → logprob: -9.099458694458008
    4. '(.' → logprob: -9.349458694458008
    5. '((' → logprob: -9.474458694458008
    6. '(int' → logprob: -10.849458694458008
    7. '(
' → logprob: -10.849458694458008
    8. ' (' → logprob: -11.349458694458008
    9. '(range' → logprob: -11.349458694458008
    10. '(m' → logprob: -12.099458694458008

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.9266199160483666e-05
    2. '(' → logprob: -11.500019073486328
    3. 'int' → logprob: -12.125019073486328
    4. '[int' → logprob: -13.500019073486328
    5. '=int' → logprob: -13.625019073486328
    6. '<int' → logprob: -14.375019073486328
    7. ' (' → logprob: -15.125019073486328
    8. ',int' → logprob: -16.250019073486328
    9. ' int' → logprob: -17.000019073486328
    10. '```' → logprob: -17.750019073486328

Token 28: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4638584852218628
    2. ',' → logprob: -1.0888584852218628
    3. ',int' → logprob: -3.4638586044311523
    4. '(input' → logprob: -6.713858604431152
    5. '```' → logprob: -7.463858604431152
    6. '(' → logprob: -7.588858604431152
    7. ',input' → logprob: -7.713858604431152
    8. 'int' → logprob: -8.588858604431152
    9. '=int' → logprob: -9.588858604431152
    10. ')' → logprob: -9.963858604431152

Token 29: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6972915530204773
    2. 'input' → logprob: -0.6972915530204773
    3. ' input' → logprob: -5.572291374206543
    4. ' int' → logprob: -8.447291374206543
    5. '(int' → logprob: -9.697291374206543
    6. '(input' → logprob: -9.947291374206543
    7. '[int' → logprob: -13.197291374206543
    8. '<int' → logprob: -13.697291374206543
    9. 'stdin' → logprob: -13.697291374206543
    10. '<input' → logprob: -13.822291374206543

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -13.00000286102295
    3. '()' → logprob: -14.25000286102295
    4. '(' → logprob: -16.375003814697266
    5. ' ().' → logprob: -17.000003814697266
    6. '(.' → logprob: -17.875003814697266
    7. ').' → logprob: -18.375003814697266
    8. ' .' → logprob: -20.375003814697266
    9. ')' → logprob: -20.875003814697266
    10. '().
' → logprob: -21.000003814697266

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.3438327843905427e-05
    2. ')' → logprob: -10.75002384185791
    3. '))' → logprob: -15.00002384185791
    4. 'strip' → logprob: -15.25002384185791
    5. 'spl' → logprob: -15.50002384185791
    6. '()' → logprob: -15.62502384185791
    7. '```' → logprob: -15.62502384185791
    8. '.split' → logprob: -15.62502384185791
    9. ' split' → logprob: -15.75002384185791
    10. '().' → logprob: -16.125022888183594

Token 32: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4204685688018799
    2. '))' → logprob: -1.4204685688018799
    3. '())' → logprob: -2.92046856880188
    4. ')' → logprob: -3.29546856880188
    5. '()' → logprob: -4.545468330383301
    6. '()))
' → logprob: -10.9204683303833
    7. '(' → logprob: -11.0454683303833
    8. ' ))' → logprob: -11.4204683303833
    9. ')))' → logprob: -11.5454683303833
    10. '()));' → logprob: -11.6704683303833

Token 33: 'qu' (ID: 351)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7662751078605652
    2. 'for' → logprob: -1.39127516746521
    3. 'C' → logprob: -1.89127516746521
    4. 'result' → logprob: -3.39127516746521
    5. 'i' → logprob: -3.89127516746521
    6. 'a' → logprob: -4.016274929046631
    7. 'A' → logprob: -4.516274929046631
    8. 's' → logprob: -4.641274929046631
    9. 'count' → logprob: -4.766274929046631
    10. 'res' → logprob: -5.141274929046631

Token 34: 'pons' (ID: 2987)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.35877665877342224
    2. 'eries' → logprob: -1.8587766885757446
    3. 'ery' → logprob: -2.358776569366455
    4. 'er' → logprob: -3.483776569366455
    5. 'a' → logprob: -5.358776569366455
    6. 'erie' → logprob: -5.608776569366455
    7. 'est' → logprob: -5.733776569366455
    8. 'estions' → logprob: -6.608776569366455
    9. 'erries' → logprob: -6.608776569366455
    10. 'al' → logprob: -6.858776569366455

Token 35: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11601682007312775
    2. '[t' → logprob: -2.9910168647766113
    3. ' =' → logprob: -4.116016864776611
    4. 'ts' → logprob: -4.366016864776611
    5. 's' → logprob: -4.491016864776611
    6. '[' → logprob: -4.491016864776611
    7. '=' → logprob: -5.741016864776611
    8. '_t' → logprob: -6.991016864776611
    9. 'a' → logprob: -7.116016864776611
    10. ' t' → logprob: -7.491016864776611

Token 36: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03839648887515068
    2. ' []' → logprob: -3.6633965969085693
    3. '[' → logprob: -5.28839635848999
    4. 'list' → logprob: -6.03839635848999
    5. 'a' → logprob: -6.78839635848999
    6. '[a' → logprob: -7.16339635848999
    7. '[m' → logprob: -7.53839635848999
    8. '0' → logprob: -7.91339635848999
    9. ' [' → logprob: -7.91339635848999
    10. '{}' → logprob: -8.038396835327148

Token 37: 'list' (ID: 2641)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7142020463943481
    2. ']' → logprob: -1.0892020463943481
    3. '[' → logprob: -2.5892019271850586
    4. '0' → logprob: -3.2142019271850586
    5. '[]' → logprob: -3.3392019271850586
    6. ')' → logprob: -4.964201927185059
    7. 'a' → logprob: -5.464201927185059
    8. ')]' → logprob: -5.714201927185059
    9. '[a' → logprob: -6.214201927185059
    10. '[int' → logprob: -6.589201927185059

Token 38: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0006734743365086615
    2. '(' → logprob: -7.375673294067383
    3. '(range' → logprob: -10.500673294067383
    4. '(int' → logprob: -12.250673294067383
    5. '(input' → logprob: -12.250673294067383
    6. 'map' → logprob: -12.500673294067383
    7. '()' → logprob: -13.000673294067383
    8. ',map' → logprob: -13.500673294067383
    9. '(
' → logprob: -14.375673294067383
    10. '	map' → logprob: -14.750673294067383

Token 39: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003024537581950426
    2. '(' → logprob: -9.0003023147583
    3. 'int' → logprob: -9.6253023147583
    4. '(lambda' → logprob: -10.1253023147583
    5. ',int' → logprob: -10.7503023147583
    6. ']int' → logprob: -11.1253023147583
    7. ')' → logprob: -11.2503023147583
    8. '[int' → logprob: -11.2503023147583
    9. '<int' → logprob: -12.3753023147583
    10. '(input' → logprob: -12.8753023147583

Token 40: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20531216263771057
    2. ',input' → logprob: -2.3303122520446777
    3. ',' → logprob: -3.2053122520446777
    4. '(' → logprob: -3.3303122520446777
    5. '(int' → logprob: -4.955312252044678
    6. ')' → logprob: -6.705312252044678
    7. ',int' → logprob: -6.705312252044678
    8. '(),' → logprob: -7.705312252044678
    9. 'input' → logprob: -7.830312252044678
    10. '```' → logprob: -7.955312252044678

Token 41: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04858975484967232
    2. ' input' → logprob: -3.0485897064208984
    3. ',input' → logprob: -14.048589706420898
    4. '(input' → logprob: -14.173589706420898
    5. '<input' → logprob: -15.423589706420898
    6. 'lambda' → logprob: -15.548589706420898
    7. ')' → logprob: -15.798589706420898
    8. '=input' → logprob: -16.2985897064209
    9. 'int' → logprob: -16.4235897064209
    10. '_input' → logprob: -16.6735897064209

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.125210297293961e-05
    2. '()' → logprob: -9.500081062316895
    3. ' ().' → logprob: -12.625081062316895
    4. '()))' → logprob: -14.125081062316895
    5. '()[' → logprob: -14.500081062316895
    6. '())' → logprob: -14.500081062316895
    7. ')' → logprob: -14.500081062316895
    8. '(' → logprob: -15.000081062316895
    9. '().__' → logprob: -16.87508201599121
    10. '()(' → logprob: -17.12508201599121

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.054500666621607e-06
    2. ' split' → logprob: -12.87500286102295
    3. 'strip' → logprob: -15.37500286102295
    4. '(split' → logprob: -16.750003814697266
    5. '```' → logprob: -17.500003814697266
    6. 'spl' → logprob: -17.625003814697266
    7. ')' → logprob: -18.250003814697266
    8. 'rstrip' → logprob: -19.125003814697266
    9. ' ' → logprob: -19.375003814697266
    10. '.split' → logprob: -19.875003814697266

Token 44: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.47981923818588257
    2. '))' → logprob: -0.9798192381858826
    3. '())' → logprob: -5.729819297790527
    4. '()' → logprob: -6.229819297790527
    5. ')' → logprob: -7.729819297790527
    6. '(' → logprob: -10.229819297790527
    7. '()))
' → logprob: -11.854819297790527
    8. '()));' → logprob: -11.854819297790527
    9. ')))' → logprob: -12.229819297790527
    10. ' ))' → logprob: -12.604819297790527

Token 45: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28167325258255005
    2. '()' → logprob: -2.1566731929779053
    3. ')]' → logprob: -3.1566731929779053
    4. '())' → logprob: -3.4066731929779053
    5. '()]' → logprob: -3.5316731929779053
    6. 'for' → logprob: -4.531673431396484
    7. '(' → logprob: -4.906673431396484
    8. ']' → logprob: -5.281673431396484
    9. '(qu' → logprob: -7.656673431396484
    10. ' for' → logprob: -8.156673431396484

Token 46: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5307547450065613
    2. '(' → logprob: -1.155754804611206
    3. '_' → logprob: -2.655754804611206
    4. ' _' → logprob: -4.405754566192627
    5. '(range' → logprob: -5.280754566192627
    6. 'range' → logprob: -5.530754566192627
    7. '(int' → logprob: -6.405754566192627
    8. ' (' → logprob: -6.655754566192627
    9. ' i' → logprob: -7.155754566192627
    10. ' ' → logprob: -7.155754566192627

Token 47: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7333442568778992
    2. ' in' → logprob: -1.608344316482544
    3. 'range' → logprob: -1.858344316482544
    4. ' range' → logprob: -2.858344316482544
    5. '(' → logprob: -3.233344316482544
    6. '(range' → logprob: -3.483344316482544
    7. '_' → logprob: -3.733344316482544
    8. '_range' → logprob: -4.858344078063965
    9. '(n' → logprob: -6.358344078063965
    10. 'i' → logprob: -7.733344078063965

Token 48: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.1424973713001236e-05
    2. ' range' → logprob: -10.375031471252441
    3. '(range' → logprob: -17.125030517578125
    4. '	range' → logprob: -17.125030517578125
    5. 'rang' → logprob: -18.000030517578125
    6. 'r' → logprob: -18.125030517578125
    7. 'a' → logprob: -18.750030517578125
    8. ' ' → logprob: -18.875030517578125
    9. '   ' → logprob: -19.000030517578125
    10. 'ran' → logprob: -19.250030517578125

Token 49: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.05126620829105377
    2. '(b' → logprob: -3.0512661933898926
    3. '(' → logprob: -6.301266193389893
    4. '(a' → logprob: -7.301266193389893
    5. '(q' → logprob: -9.42626667022705
    6. '(qu' → logprob: -10.67626667022705
    7. '(M' → logprob: -10.92626667022705
    8. '(n' → logprob: -11.30126667022705
    9. '(k' → logprob: -11.30126667022705
    10. '(c' → logprob: -12.55126667022705

Token 50: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001446611131541431
    2. ')' → logprob: -8.875144958496094
    3. ']' → logprob: -12.500144958496094
    4. ')])' → logprob: -14.750144958496094
    5. ' )' → logprob: -15.250144958496094
    6. '))' → logprob: -16.000144958496094
    7. ')]
' → logprob: -16.750144958496094
    8. ')],' → logprob: -16.875144958496094
    9. '])]' → logprob: -17.125144958496094
    10. ')}' → logprob: -17.125144958496094

Token 51: 'cand' (ID: 199358)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1180436611175537
    2. '
' → logprob: -1.1180436611175537
    3. '<|end|>' → logprob: -2.2430436611175537
    4. 'a' → logprob: -3.2430436611175537
    5. '[' → logprob: -3.3680436611175537
    6. 'A' → logprob: -3.4930436611175537
    7. 'qu' → logprob: -4.118043899536133
    8. ' 
' → logprob: -4.243043899536133
    9. 'result' → logprob: -4.368043899536133
    10. '\n' → logprob: -4.618043899536133

Token 52: '1' (ID: 16)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.021849753335118294
    2. '=[]' → logprob: -4.271849632263184
    3. '=' → logprob: -6.021849632263184
    4. '_id' → logprob: -6.771849632263184
    5. 'i' → logprob: -6.896849632263184
    6. '[' → logprob: -7.021849632263184
    7. 'icates' → logprob: -7.896849632263184
    8. '```' → logprob: -8.021849632263184
    9. 'iate' → logprob: -8.271849632263184
    10. '[:]' → logprob: -8.646849632263184

Token 53: ' =' (ID: 314)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.22152188420295715
    2. '=' → logprob: -2.4715218544006348
    3. ' =' → logprob: -2.5965218544006348
    4. '=[]' → logprob: -3.4715218544006348
    5. '[' → logprob: -5.971521854400635
    6. 'i' → logprob: -6.596521854400635
    7. '1' → logprob: -7.471521854400635
    8. 's' → logprob: -7.471521854400635
    9. 'icates' → logprob: -7.596521854400635
    10. 'icate' → logprob: -7.721521854400635

Token 54: ' min' (ID: 1349)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7480800747871399
    2. 'max' → logprob: -1.8730800151824951
    3. '[A' → logprob: -2.873080015182495
    4. 'min' → logprob: -2.873080015182495
    5. '[min' → logprob: -3.123080015182495
    6. 'a' → logprob: -3.248080015182495
    7. '[max' → logprob: -3.248080015182495
    8. '[a' → logprob: -3.248080015182495
    9. '[' → logprob: -3.373080015182495
    10. '0' → logprob: -4.373080253601074

Token 55: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.05109948292374611
    2. '(a' → logprob: -3.0510995388031006
    3. '(' → logprob: -6.3010993003845215
    4. '(B' → logprob: -7.5510993003845215
    5. '((' → logprob: -9.17609977722168
    6. '(b' → logprob: -10.55109977722168
    7. '([' → logprob: -12.80109977722168
    8. 'A' → logprob: -12.92609977722168
    9. '(
' → logprob: -13.42609977722168
    10. '()' → logprob: -13.42609977722168

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006751431501470506
    2. ' )' → logprob: -7.375675201416016
    3. '[' → logprob: -11.625675201416016
    4. ')+' → logprob: -11.750675201416016
    5. ')a' → logprob: -12.000675201416016
    6. ')-' → logprob: -12.375675201416016
    7. '))' → logprob: -12.875675201416016
    8. '),' → logprob: -13.000675201416016
    9. '())' → logprob: -13.125675201416016
    10. '(' → logprob: -13.375675201416016

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.972931444644928
    2. '<|end|>' → logprob: -1.2229313850402832
    3. '*' → logprob: -1.5979313850402832
    4. ' *' → logprob: -2.722931385040283
    5. ' +' → logprob: -3.097931385040283
    6. '+c' → logprob: -5.847931385040283
    7. '-' → logprob: -6.222931385040283
    8. '[' → logprob: -6.222931385040283
    9. ',' → logprob: -6.597931385040283
    10. ' ' → logprob: -7.222931385040283

Token 58: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06998134404420853
    2. ' min' → logprob: -2.694981336593628
    3. '(min' → logprob: -11.569981575012207
    4. '	min' → logprob: -11.694981575012207
    5. 'b' → logprob: -11.819981575012207
    6. '[min' → logprob: -11.944981575012207
    7. '  ' → logprob: -12.444981575012207
    8. ' ' → logprob: -13.194981575012207
    9. '=min' → logprob: -13.569981575012207
    10. 'max' → logprob: -13.819981575012207

Token 59: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.02975558675825596
    2. '(' → logprob: -3.5297555923461914
    3. '(b' → logprob: -13.154755592346191
    4. '(A' → logprob: -13.779755592346191
    5. '('' → logprob: -14.404755592346191
    6. '(
' → logprob: -14.529755592346191
    7. '((' → logprob: -15.404755592346191
    8. ' (' → logprob: -16.279754638671875
    9. '(S' → logprob: -16.404754638671875
    10. '"' → logprob: -16.404754638671875

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011367550177965313
    2. ' )' → logprob: -9.500113487243652
    3. '))' → logprob: -11.875113487243652
    4. ',' → logprob: -12.250113487243652
    5. '}' → logprob: -12.250113487243652
    6. '})' → logprob: -12.875113487243652
    7. ')}' → logprob: -13.125113487243652
    8. '[' → logprob: -13.250113487243652
    9. ')
' → logprob: -13.500113487243652
    10. '-' → logprob: -13.625113487243652

Token 61: 'prices' (ID: 126923)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027772970497608185
    2. ' for' → logprob: -6.002777099609375
    3. '+' → logprob: -9.127777099609375
    4. '*' → logprob: -9.377777099609375
    5. '
' → logprob: -10.252777099609375
    6. '\n' → logprob: -10.627777099609375
    7. '=' → logprob: -10.877777099609375
    8. '#' → logprob: -12.127777099609375
    9. '-' → logprob: -12.127777099609375
    10. '```' → logprob: -12.502777099609375

Token 62: '_with' (ID: 14161)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020627610385417938
    2. '=' → logprob: -3.895627498626709
    3. '=[]' → logprob: -10.270627975463867
    4. ' =[' → logprob: -11.145627975463867
    5. '[' → logprob: -11.770627975463867
    6. ',' → logprob: -11.770627975463867
    7. 's' → logprob: -12.270627975463867
    8. '=[' → logprob: -12.645627975463867
    9. ' ' → logprob: -12.770627975463867
    10. '[:]' → logprob: -12.895627975463867

Token 63: '_q' (ID: 19384)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4667234420776367
    2. ' =' → logprob: -1.4667234420776367
    3. '_c' → logprob: -3.3417234420776367
    4. '_qu' → logprob: -3.3417234420776367
    5. '=' → logprob: -3.7167234420776367
    6. '_discount' → logprob: -4.091723442077637
    7. '_coupon' → logprob: -4.591723442077637
    8. '=[]' → logprob: -5.591723442077637
    9. 'out' → logprob: -6.091723442077637
    10. '_=' → logprob: -6.216723442077637

Token 64: 'pons' (ID: 2987)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.16511255502700806
    2. 'pon' → logprob: -2.0401124954223633
    3. 'uon' → logprob: -5.165112495422363
    4. 'pons' → logprob: -5.540112495422363
    5. '=' → logprob: -5.790112495422363
    6. '[]' → logprob: -6.415112495422363
    7. '[' → logprob: -6.790112495422363
    8. ' =' → logprob: -6.915112495422363
    9. 'cu' → logprob: -7.290112495422363
    10. '[u' → logprob: -7.290112495422363

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16028465330600739
    2. '=' → logprob: -1.9102846384048462
    3. '=[]' → logprob: -10.160284996032715
    4. ',' → logprob: -11.535284996032715
    5. ' ' → logprob: -12.285284996032715
    6. ' =[' → logprob: -13.160284996032715
    7. 's' → logprob: -13.535284996032715
    8. '[' → logprob: -14.285284996032715
    9. '_' → logprob: -14.285284996032715
    10. '=[' → logprob: -15.035284996032715

Token 66: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7131868600845337
    2. '[c' → logprob: -1.2131868600845337
    3. '[]' → logprob: -1.8381868600845337
    4. '[a' → logprob: -3.713186740875244
    5. '[min' → logprob: -3.963186740875244
    6. 'cand' → logprob: -6.338186740875244
    7. ' [' → logprob: -6.463186740875244
    8. '[(' → logprob: -6.713186740875244
    9. '[q' → logprob: -6.838186740875244
    10. '[C' → logprob: -7.338186740875244

Token 67: 'A' (ID: 32)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8037346601486206
    2. 'cand' → logprob: -0.9287346601486206
    3. 'a' → logprob: -2.30373477935791
    4. 'A' → logprob: -4.17873477935791
    5. 'max' → logprob: -4.80373477935791
    6. 'c' → logprob: -4.80373477935791
    7. ' min' → logprob: -4.92873477935791
    8. '(min' → logprob: -5.42873477935791
    9. 'qu' → logprob: -6.17873477935791
    10. '(a' → logprob: -6.30373477935791

Token 68: '[q' (ID: 99278)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9487993121147156
    2. '[q' → logprob: -1.1987993717193604
    3. '[a' → logprob: -2.3237993717193604
    4. '[c' → logprob: -2.5737993717193604
    5. '[b' → logprob: -3.0737993717193604
    6. '[' → logprob: -3.1987993717193604
    7. ']' → logprob: -4.448799133300781
    8. '[min' → logprob: -4.448799133300781
    9. '[j' → logprob: -5.573799133300781
    10. '[x' → logprob: -5.573799133300781

Token 69: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005662598647177219
    2. '1' → logprob: -6.380662441253662
    3. 'i' → logprob: -6.755662441253662
    4. 'u' → logprob: -7.380662441253662
    5. '[i' → logprob: -7.630662441253662
    6. '][' → logprob: -7.880662441253662
    7. '[u' → logprob: -8.25566291809082
    8. ']' → logprob: -8.38066291809082
    9. '0' → logprob: -8.38066291809082
    10. 'p' → logprob: -8.88066291809082

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006461220793426037
    2. '2' → logprob: -6.006461143493652
    3. '[' → logprob: -6.006461143493652
    4. '1' → logprob: -6.631461143493652
    5. '][' → logprob: -9.881461143493652
    6. ']' → logprob: -10.131461143493652
    7. '-' → logprob: -10.381461143493652
    8. '3' → logprob: -11.131461143493652
    9. 'q' → logprob: -11.443961143493652
    10. '])' → logprob: -11.881461143493652

Token 71: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.545930027961731
    2. ']-' → logprob: -1.670930027961731
    3. '[' → logprob: -2.1709299087524414
    4. '-' → logprob: -2.2959299087524414
    5. ' -' → logprob: -4.545929908752441
    6. '1' → logprob: -6.170929908752441
    7. '0' → logprob: -6.420929908752441
    8. '[q' → logprob: -6.670929908752441
    9. ']]' → logprob: -6.795929908752441
    10. '][' → logprob: -8.045929908752441

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44018736481666565
    2. ']' → logprob: -1.0651873350143433
    3. ']-' → logprob: -4.565187454223633
    4. ' ' → logprob: -8.190187454223633
    5. ' ]' → logprob: -8.440187454223633
    6. '[' → logprob: -9.065187454223633
    7. '-' → logprob: -9.065187454223633
    8. ' -' → logprob: -9.690187454223633
    9. '[q' → logprob: -10.565187454223633
    10. ')' → logprob: -10.815187454223633

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036702712532132864
    2. ']+' → logprob: -5.8786702156066895
    3. ' ]' → logprob: -7.6286702156066895
    4. ']-' → logprob: -8.128670692443848
    5. ']]' → logprob: -10.128670692443848
    6. ']*' → logprob: -10.878670692443848
    7. '-' → logprob: -12.503670692443848
    8. '']' → logprob: -12.628670692443848
    9. '],' → logprob: -13.003670692443848
    10. '][' → logprob: -13.253670692443848

Token 74: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4360451102256775
    2. ' -' → logprob: -1.0610451698303223
    3. '+' → logprob: -6.311045169830322
    4. '-q' → logprob: -6.311045169830322
    5. '*' → logprob: -6.686045169830322
    6. '*q' → logprob: -6.811045169830322
    7. ']' → logprob: -8.061044692993164
    8. ' *' → logprob: -8.061044692993164
    9. '-B' → logprob: -8.686044692993164
    10. ' +' → logprob: -8.811044692993164

Token 75: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3147888779640198
    2. ' B' → logprob: -1.314788818359375
    3. 'b' → logprob: -7.439788818359375
    4. ' ' → logprob: -7.814788818359375
    5. ' b' → logprob: -8.689788818359375
    6. ' (' → logprob: -8.814788818359375
    7. '(' → logprob: -9.689788818359375
    8. '(B' → logprob: -9.939788818359375
    9. 'q' → logprob: -10.439788818359375
    10. ' q' → logprob: -10.689788818359375

Token 76: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.0008086714660748839
    2. '[' → logprob: -7.1258087158203125
    3. '(q' → logprob: -13.125808715820312
    4. '[
' → logprob: -13.875808715820312
    5. ' [' → logprob: -14.625808715820312
    6. 'q' → logprob: -15.000808715820312
    7. '[(' → logprob: -15.250808715820312
    8. '[b' → logprob: -15.875808715820312
    9. '[c' → logprob: -17.625808715820312
    10. '	q' → logprob: -18.000808715820312

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '1' → logprob: -13.250001907348633
    3. '[
' → logprob: -16.625001907348633
    4. '```' → logprob: -16.750001907348633
    5. '0' → logprob: -16.875001907348633
    6. '[q' → logprob: -17.000001907348633
    7. '][' → logprob: -17.250001907348633
    8. 's' → logprob: -17.375001907348633
    9. ' [' → logprob: -17.750001907348633
    10. '-' → logprob: -17.875001907348633

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059433747082948685
    2. '[' → logprob: -5.130943298339844
    3. '2' → logprob: -12.130943298339844
    4. ']' → logprob: -12.880943298339844
    5. '0' → logprob: -13.130943298339844
    6. ' ' → logprob: -13.630943298339844
    7. '][' → logprob: -14.380943298339844
    8. '```' → logprob: -14.380943298339844
    9. '-' → logprob: -15.005943298339844
    10. '
' → logprob: -15.130943298339844

Token 79: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6038310527801514
    2. '[' → logprob: -0.8538310527801514
    3. ']-' → logprob: -3.9788310527801514
    4. '1' → logprob: -5.1038312911987305
    5. ' -' → logprob: -6.7288312911987305
    6. ']' → logprob: -7.3538312911987305
    7. '0' → logprob: -7.8538312911987305
    8. '2' → logprob: -8.10383129119873
    9. '[-' → logprob: -10.10383129119873
    10. ' ' → logprob: -10.47883129119873

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.250006675720215
    3. ']' → logprob: -13.750006675720215
    4. '-' → logprob: -15.687506675720215
    5. '<|end|>' → logprob: -16.4375057220459
    6. '2' → logprob: -16.9375057220459
    7. '```' → logprob: -17.2500057220459
    8. '۱' → logprob: -17.2500057220459
    9. '１' → logprob: -17.6875057220459
    10. '   ' → logprob: -17.7500057220459

Token 81: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9089750647544861
    2. ']' → logprob: -0.9089750647544861
    3. ' -' → logprob: -1.6589751243591309
    4. ']-' → logprob: -6.033975124359131
    5. ' ' → logprob: -7.408975124359131
    6. ' ]' → logprob: -8.033974647521973
    7. ')' → logprob: -8.158974647521973
    8. '-q' → logprob: -10.533974647521973
    9. '']' → logprob: -10.658974647521973
    10. '<|end|>' → logprob: -11.533974647521973

Token 82: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4741794168949127
    2. ' -' → logprob: -0.9741793870925903
    3. ' ' → logprob: -9.7241792678833
    4. '-q' → logprob: -10.4741792678833
    5. '+' → logprob: -12.7241792678833
    6. '<|end|>' → logprob: -13.0991792678833
    7. ')' → logprob: -13.2241792678833
    8. '−' → logprob: -13.8491792678833
    9. '-end' → logprob: -13.9741792678833
    10. '...' → logprob: -14.4741792678833

Token 83: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10027341544628143
    2. ' q' → logprob: -2.350273370742798
    3. ' max' → logprob: -10.725273132324219
    4. 'max' → logprob: -10.850273132324219
    5. '	q' → logprob: -11.350273132324219
    6. ' ' → logprob: -11.725273132324219
    7. 'c' → logprob: -13.725273132324219
    8. '   ' → logprob: -13.975273132324219
    9. '  ' → logprob: -14.600273132324219
    10. '(q' → logprob: -14.600273132324219

Token 84: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011224505578866228
    2. '2' → logprob: -9.125112533569336
    3. 's' → logprob: -13.750112533569336
    4. '][' → logprob: -15.125112533569336
    5. '```' → logprob: -15.125112533569336
    6. ' [' → logprob: -15.250112533569336
    7. '(' → logprob: -15.625112533569336
    8. ' ' → logprob: -15.812612533569336
    9. '[
' → logprob: -15.937612533569336
    10. 't' → logprob: -16.437612533569336

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005336097441613674
    2. '[' → logprob: -5.255336284637451
    3. '0' → logprob: -10.130335807800293
    4. ' ' → logprob: -10.505335807800293
    5. ']' → logprob: -11.255335807800293
    6. '1' → logprob: -11.880335807800293
    7. '```' → logprob: -12.567835807800293
    8. '][' → logprob: -13.255335807800293
    9. '	' → logprob: -14.192835807800293
    10. '-' → logprob: -14.317835807800293

Token 86: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.601046085357666
    2. ']' → logprob: -0.976046085357666
    3. ' ' → logprob: -3.101046085357666
    4. ')' → logprob: -3.851046085357666
    5. ' ]' → logprob: -5.226046085357666
    6. 'for' → logprob: -5.851046085357666
    7. ')]' → logprob: -8.601045608520508
    8. ',' → logprob: -8.976045608520508
    9. '	for' → logprob: -9.851045608520508
    10. '}' → logprob: -10.851045608520508

Token 87: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.043260421603918076
    2. 'for' → logprob: -3.168260335922241
    3. ' ' → logprob: -8.79326057434082
    4. ')' → logprob: -9.41826057434082
    5. '	for' → logprob: -11.04326057434082
    6. ']' → logprob: -11.54326057434082
    7. '   ' → logprob: -14.54326057434082
    8. ' ]' → logprob: -14.66826057434082
    9. ' ' → logprob: -14.91826057434082
    10. '
' → logprob: -15.16826057434082

Token 88: ' q' (ID: 2335)
  Prédit: ' qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qu' → logprob: -0.005744506139308214
    2. 'qu' → logprob: -5.755744457244873
    3. ' q' → logprob: -6.005744457244873
    4. 'q' → logprob: -9.630744934082031
    5. ' ' → logprob: -10.880744934082031
    6. '  ' → logprob: -13.005744934082031
    7. '(qu' → logprob: -13.130744934082031
    8. '	q' → logprob: -13.380744934082031
    9. ' ' → logprob: -13.380744934082031
    10. '.qu' → logprob: -14.005744934082031

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023268306627869606
    2. 'in' → logprob: -3.773268222808838
    3. 's' → logprob: -12.273268699645996
    4. ' ' → logprob: -12.398268699645996
    5. '<|end|>' → logprob: -12.398268699645996
    6. ']' → logprob: -12.648268699645996
    7. '	in' → logprob: -13.648268699645996
    8. ' ' → logprob: -13.898268699645996
    9. 'inqu' → logprob: -14.023268699645996
    10. ' ]' → logprob: -14.523268699645996

Token 90: ' qu' (ID: 474)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.3869860768318176
    2. ' qu' → logprob: -1.1369860172271729
    3. '(qu' → logprob: -10.136985778808594
    4. ' ' → logprob: -10.761985778808594
    5. 'quin' → logprob: -11.886985778808594
    6. 'quip' → logprob: -12.011985778808594
    7. 'q' → logprob: -12.699485778808594
    8. '.qu' → logprob: -12.699485778808594
    9. 'quil' → logprob: -12.761985778808594
    10. 'quent' → logprob: -12.886985778808594

Token 91: 'pons' (ID: 2987)
  Prédit: 'pons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pons' → logprob: -0.00014656837447546422
    2. 'pon' → logprob: -9.625146865844727
    3. 'apons' → logprob: -10.375146865844727
    4. 'ons' → logprob: -10.500146865844727
    5. 'p' → logprob: -12.125146865844727
    6. 'poons' → logprob: -12.250146865844727
    7. 'psons' → logprob: -12.375146865844727
    8. 'pona' → logprob: -13.000146865844727
    9. 'bons' → logprob: -13.500146865844727
    10. 'ponse' → logprob: -13.625146865844727

Token 92: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00019626895664259791
    2. ')' → logprob: -8.75019645690918
    3. ')]' → logprob: -10.87519645690918
    4. '])' → logprob: -11.62519645690918
    5. ' ]' → logprob: -12.00019645690918
    6. ']
' → logprob: -12.75019645690918
    7. ']

' → logprob: -14.75019645690918
    8. ']
' → logprob: -16.12519645690918
    9. ',' → logprob: -16.37519645690918
    10. '']' → logprob: -16.75019645690918

Token 93: 'cand' (ID: 199358)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006192696164362133
    2. 'min' → logprob: -8.125618934631348
    3. 'result' → logprob: -8.625618934631348
    4. 'ans' → logprob: -9.500618934631348
    5. 'answer' → logprob: -10.625618934631348
    6. 'cand' → logprob: -11.125618934631348
    7. 'prices' → logprob: -12.125618934631348
    8. '```' → logprob: -12.375618934631348
    9. 'price' → logprob: -12.750618934631348
    10. 'res' → logprob: -13.125618934631348

Token 94: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31688791513442993
    2. '2' → logprob: -1.8168878555297852
    3. ' =' → logprob: -2.316887855529785
    4. '=' → logprob: -4.566887855529785
    5. 's' → logprob: -11.566887855529785
    6. '=[]' → logprob: -12.191887855529785
    7. '```' → logprob: -12.191887855529785
    8. '_' → logprob: -12.316887855529785
    9. 'icate' → logprob: -12.316887855529785
    10. '[' → logprob: -12.316887855529785

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009756204672157764
    2. '=' → logprob: -4.634756088256836
    3. '=min' → logprob: -16.509756088256836
    4. ' ' → logprob: -16.759756088256836
    5. ' =)' → logprob: -17.259756088256836
    6. ' =
' → logprob: -17.884756088256836
    7. '  ' → logprob: -17.884756088256836
    8. '＝' → logprob: -18.509756088256836
    9. ',' → logprob: -18.509756088256836
    10. '.' → logprob: -19.009756088256836

Token 96: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029751067981123924
    2. ' min' → logprob: -3.5297510623931885
    3. '(min' → logprob: -15.02975082397461
    4. 'max' → logprob: -15.27975082397461
    5. '	min' → logprob: -16.52975082397461
    6. '[min' → logprob: -17.02975082397461
    7. 'minimum' → logprob: -17.52975082397461
    8. '=min' → logprob: -18.27975082397461
    9. '0' → logprob: -18.40475082397461
    10. ' ' → logprob: -18.65475082397461

Token 97: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.0001249925117008388
    2. '(' → logprob: -9.00012493133545
    3. 'prices' → logprob: -13.75012493133545
    4. ' (' → logprob: -15.12512493133545
    5. '(price' → logprob: -16.125125885009766
    6. '(p' → logprob: -18.000125885009766
    7. '	pr' → logprob: -18.125125885009766
    8. ' prices' → logprob: -18.250125885009766
    9. '(pre' → logprob: -18.500125885009766
    10. '(products' → logprob: -18.750125885009766

Token 98: 'ices' (ID: 1386)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ces' → logprob: -0.033667370676994324
    2. 'ices' → logprob: -3.4086673259735107
    3. '```' → logprob: -11.78366756439209
    4. 'es' → logprob: -12.78366756439209
    5. 'cies' → logprob: -12.78366756439209
    6. 'ce' → logprob: -13.03366756439209
    7. '[' → logprob: -14.03366756439209
    8. '``' → logprob: -14.15866756439209
    9. 'oces' → logprob: -14.28366756439209
    10. 'zes' → logprob: -14.65866756439209

Token 99: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -1.0445127372804563e-05
    2. 'with' → logprob: -11.62501049041748
    3. ')' → logprob: -14.37501049041748
    4. '_prices' → logprob: -15.00001049041748
    5. 's' → logprob: -15.25001049041748
    6. '_' → logprob: -16.500009536743164
    7. ')_' → logprob: -16.750009536743164
    8. '_)' → logprob: -17.125009536743164
    9. 'prices' → logprob: -17.375009536743164
    10. 'es' → logprob: -17.375009536743164

Token 100: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.001711709308438003
    2. 'q' → logprob: -6.501711845397949
    3. '_' → logprob: -9.12671184539795
    4. ')' → logprob: -10.12671184539795
    5. '1' → logprob: -11.37671184539795
    6. 'with' → logprob: -12.25171184539795
    7. '```' → logprob: -12.37671184539795
    8. '_qu' → logprob: -12.75171184539795
    9. '_c' → logprob: -13.00171184539795
    10. '[q' → logprob: -13.00171184539795

Token 101: 'pons' (ID: 2987)
  Prédit: 'ons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.3639051020145416
    2. 'pons' → logprob: -1.3639050722122192
    3. 'pon' → logprob: -3.238905191421509
    4. 'on' → logprob: -4.61390495300293
    5. 'apons' → logprob: -9.11390495300293
    6. 'ponses' → logprob: -10.61390495300293
    7. 'op' → logprob: -10.61390495300293
    8. 'u' → logprob: -11.36390495300293
    9. 'onds' → logprob: -11.36390495300293
    10. 'ponents' → logprob: -11.61390495300293

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.214019307051785e-05
    2. ')
' → logprob: -10.375032424926758
    3. ' )' → logprob: -14.125032424926758
    4. ')`' → logprob: -17.250032424926758
    5. '))' → logprob: -17.500032424926758
    6. ')
' → logprob: -17.500032424926758
    7. 'if' → logprob: -17.625032424926758
    8. ')

' → logprob: -17.750032424926758
    9. ' if' → logprob: -18.375032424926758
    10. ',' → logprob: -18.375032424926758

Token 103: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027741409838199615
    2. '
' → logprob: -3.6527414321899414
    3. '\n' → logprob: -7.902741432189941
    4. '<|end|>' → logprob: -8.277741432189941
    5. '\' → logprob: -8.527741432189941
    6. '#' → logprob: -8.902741432189941
    7. '' → logprob: -9.402741432189941
    8. '
' → logprob: -9.652741432189941
    9. ' print' → logprob: -9.777741432189941
    10. ')' → logprob: -10.027741432189941

Token 104: ' prices' (ID: 8451)
  Prédit: 'prices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prices' → logprob: -0.08561714738607407
    2. ' prices' → logprob: -2.5856170654296875
    3. 'qu' → logprob: -5.0856170654296875
    4. 'len' → logprob: -8.710617065429688
    5. ' qu' → logprob: -8.835617065429688
    6. 'pr' → logprob: -8.960617065429688
    7. 'price' → logprob: -10.335617065429688
    8. ' len' → logprob: -11.210617065429688
    9. 'm' → logprob: -12.210617065429688
    10. 'quotes' → logprob: -12.335617065429688

Token 105: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.00014036978245712817
    2. 'with' → logprob: -9.250140190124512
    3. 'With' → logprob: -11.375140190124512
    4. 'e' → logprob: -12.250140190124512
    5. 'prices' → logprob: -12.875140190124512
    6. '_WITH' → logprob: -13.000140190124512
    7. 'en' → logprob: -13.125140190124512
    8. '2' → logprob: -13.125140190124512
    9. '_prices' → logprob: -13.125140190124512
    10. 's' → logprob: -13.250140190124512

Token 106: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.00015229015843942761
    2. 'q' → logprob: -9.000152587890625
    3. '_' → logprob: -12.000152587890625
    4. 'prices' → logprob: -12.625152587890625
    5. 'else' → logprob: -12.750152587890625
    6. 'any' → logprob: -12.750152587890625
    7. 'and' → logprob: -13.250152587890625
    8. '_c' → logprob: -14.125152587890625
    9. '_qu' → logprob: -14.500152587890625
    10. '>' → logprob: -14.500152587890625

Token 107: 'pons' (ID: 2987)
  Prédit: 'pons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pons' → logprob: -0.4250791668891907
    2. 'ons' → logprob: -1.300079107284546
    3. 'pon' → logprob: -2.925079107284546
    4. 'on' → logprob: -4.050079345703125
    5. 'u' → logprob: -6.050079345703125
    6. 'apons' → logprob: -8.925079345703125
    7. 'op' → logprob: -9.300079345703125
    8. 'onds' → logprob: -10.925079345703125
    9. 'psons' → logprob: -11.175079345703125
    10. 'онс' → logprob: -11.425079345703125

Token 108: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.11285925656557083
    2. 'else' → logprob: -2.2378592491149902
    3. '>' → logprob: -11.237859725952148
    4. '!=' → logprob: -12.237859725952148
    5. '	else' → logprob: -12.237859725952148
    6. '<|end|>' → logprob: -12.737859725952148
    7. ':' → logprob: -13.112859725952148
    8. '_else' → logprob: -13.112859725952148
    9. ' !=' → logprob: -13.487859725952148
    10. ' >' → logprob: -13.987859725952148

Token 109: ' float' (ID: 4428)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cand' → logprob: -9.162282367469743e-05
    2. ' cand' → logprob: -9.500091552734375
    3. 'float' → logprob: -11.750091552734375
    4. 'c' → logprob: -13.000091552734375
    5. 'cant' → logprob: -13.125091552734375
    6. 'min' → logprob: -13.250091552734375
    7. '   ' → logprob: -13.500091552734375
    8. 'a' → logprob: -14.625091552734375
    9. '  ' → logprob: -15.375091552734375
    10. ' ' → logprob: -15.500091552734375

Token 110: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -8.816591434879228e-05
    2. ''' → logprob: -10.25008773803711
    3. '("' → logprob: -10.87508773803711
    4. '(' → logprob: -11.25008773803711
    5. ''in' → logprob: -11.50008773803711
    6. ''s' → logprob: -12.37508773803711
    7. '('+' → logprob: -13.12508773803711
    8. 'inf' → logprob: -13.50008773803711
    9. '(in' → logprob: -13.62508773803711
    10. '>('' → logprob: -15.00008773803711

Token 111: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.3856492842023727e-06
    2. ''in' → logprob: -14.250000953674316
    3. 'in' → logprob: -15.000000953674316
    4. '-inf' → logprob: -15.500000953674316
    5. ''' → logprob: -16.000001907348633
    6. ' inf' → logprob: -16.750001907348633
    7. '0' → logprob: -17.125001907348633
    8. '.inf' → logprob: -17.500001907348633
    9. 'i' → logprob: -18.125001907348633
    10. 'Inf' → logprob: -18.375001907348633

Token 112: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007238718098960817
    2. ')
' → logprob: -7.250723838806152
    3. 'print' → logprob: -12.000723838806152
    4. '')' → logprob: -12.500723838806152
    5. ')c' → logprob: -13.750723838806152
    6. ' )' → logprob: -14.250723838806152
    7. ')
' → logprob: -14.250723838806152
    8. ')

' → logprob: -14.875723838806152
    9. '))' → logprob: -15.625723838806152
    10. '),' → logprob: -15.625723838806152

Token 113: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00046296243090182543
    2. '
' → logprob: -8.125462532043457
    3. 'min' → logprob: -8.750462532043457
    4. '```' → logprob: -12.750462532043457
    5. ' print' → logprob: -13.000462532043457
    6. '
' → logprob: -13.375462532043457
    7. 'ans' → logprob: -14.500462532043457
    8. 'result' → logprob: -14.500462532043457
    9. 'max' → logprob: -15.625462532043457
    10. '``' → logprob: -15.875462532043457

Token 114: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.13630062341690063
    2. '(c' → logprob: -2.636300563812256
    3. '(' → logprob: -2.886300563812256
    4. '(max' → logprob: -12.011301040649414
    5. 'min' → logprob: -12.886301040649414
    6. '(m' → logprob: -13.511301040649414
    7. '()' → logprob: -13.886301040649414
    8. ' min' → logprob: -15.511301040649414
    9. '(
' → logprob: -15.636301040649414
    10. '(a' → logprob: -16.011301040649414

Token 115: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00861669983714819
    2. '(' → logprob: -4.758616924285889
    3. '(a' → logprob: -14.50861644744873
    4. '(`' → logprob: -14.63361644744873
    5. ')c' → logprob: -15.00861644744873
    6. ')' → logprob: -15.00861644744873
    7. '(
' → logprob: -15.88361644744873
    8. ')(' → logprob: -16.133617401123047
    9. ' (' → logprob: -16.258617401123047
    10. '(

' → logprob: -16.508617401123047

Token 116: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -5.512236498361744e-07
    2. 'a' → logprob: -15.500000953674316
    3. 'andidate' → logprob: -15.500000953674316
    4. 'andidates' → logprob: -17.25
    5. 'nd' → logprob: -17.75
    6. ')' → logprob: -18.0
    7. 'ap' → logprob: -18.0
    8. 'AND' → logprob: -18.375
    9. '   ' → logprob: -18.375
    10. 'cand' → logprob: -18.5

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ')' → logprob: -17.0
    3. '(' → logprob: -17.75
    4. '2' → logprob: -18.5
    5. ' ' → logprob: -18.5
    6. '１' → logprob: -19.0
    7. '(c' → logprob: -19.625
    8. '))' → logprob: -20.4375
    9. 'ent' → logprob: -20.625
    10. '১' → logprob: -20.75

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003356659086421132
    2. ',c' → logprob: -5.753356456756592
    3. ' ,' → logprob: -8.62835693359375
    4. 'c' → logprob: -18.00335693359375
    5. ' ' → logprob: -18.87835693359375
    6. ',
' → logprob: -18.87835693359375
    7. '，' → logprob: -19.00335693359375
    8. '   ' → logprob: -19.50335693359375
    9. ',b' → logprob: -19.50335693359375
    10. ')' → logprob: -20.62835693359375

Token 119: ' cand' (ID: 31771)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.001172129064798355
    2. ' cand' → logprob: -6.751172065734863
    3. 'c' → logprob: -13.876172065734863
    4. 'cant' → logprob: -14.751172065734863
    5. 'cad' → logprob: -15.126172065734863
    6. ' ' → logprob: -16.25117301940918
    7. '	c' → logprob: -17.00117301940918
    8. ' ' → logprob: -17.37617301940918
    9. '   ' → logprob: -17.62617301940918
    10. 'Cand' → logprob: -17.87617301940918

Token 120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. 'and' → logprob: -14.375000953674316
    3. 'd' → logprob: -19.625
    4. '２' → logprob: -19.875
    5. ')' → logprob: -21.0
    6. '۲' → logprob: -21.25
    7. '₂' → logprob: -21.625
    8. 'cand' → logprob: -21.875
    9. 't' → logprob: -22.625
    10. 'a' → logprob: -22.75

Token 121: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31326285004615784
    2. '))' → logprob: -1.3132628202438354
    3. ')))' → logprob: -14.063262939453125
    4. ')`' → logprob: -15.438262939453125
    5. ')}' → logprob: -16.563262939453125
    6. '())' → logprob: -17.438262939453125
    7. ' )' → logprob: -17.563262939453125
    8. '})' → logprob: -18.188262939453125
    9. ')
' → logprob: -18.688262939453125
    10. ')**' → logprob: -18.813262939453125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 98
Précision stricte (1ère position): 41.18%
Précision adaptée (1ère position): 41.18%
Précision (top 10): 82.35%
================================================================================
