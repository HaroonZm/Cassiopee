================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    n, m = map(int, input().split())
    left = 1
    right = n
    for _ in range(m):
        left_i, right_i = map(int, input().split())
        left = max(left, left_i)
        right = min(right, right_i)
    print(max(0, right - left + 1))
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2550383508205414
    2. '   ' → logprob: -2.505038261413574
    3. '\n' → logprob: -2.630038261413574
    4. '(' → logprob: -3.630038261413574
    5. ''' → logprob: -4.630038261413574
    6. '```' → logprob: -4.880038261413574
    7. '    
' → logprob: -5.130038261413574
    8. ':' → logprob: -5.505038261413574
    9. ' ' → logprob: -5.755038261413574
    10. '    ' → logprob: -5.880038261413574

Token 4: ' n' (ID: 297)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20469899475574493
    2. 'pass' → logprob: -2.3296990394592285
    3. '   ' → logprob: -2.8296990394592285
    4. 'return' → logprob: -4.0796990394592285
    5. 'p' → logprob: -5.3296990394592285
    6. '#' → logprob: -6.3296990394592285
    7. 'r' → logprob: -6.4546990394592285
    8. 'a' → logprob: -7.3296990394592285
    9. '```' → logprob: -7.3296990394592285
    10. 'n' (adapté à ' n') → logprob: -8.07969856262207

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8296284675598145
    2. '_' → logprob: -1.8296284675598145
    3. ' =' → logprob: -1.9546284675598145
    4. ' ' → logprob: -2.4546284675598145
    5. 'u' → logprob: -2.5796284675598145
    6. '   ' → logprob: -3.4546284675598145
    7. '  ' → logprob: -3.9546284675598145
    8. 'e' → logprob: -4.3296284675598145
    9. 'a' → logprob: -4.9546284675598145
    10. 'ext' → logprob: -5.3296284675598145

Token 6: ' m' (ID: 284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14821206033229828
    2. ' m' → logprob: -2.39821195602417
    3. 'm' → logprob: -4.02321195602417
    4. ' k' → logprob: -4.77321195602417
    5. '"' → logprob: -5.27321195602417
    6. ' =' → logprob: -5.52321195602417
    7. '  ' → logprob: -6.27321195602417
    8. ' t' → logprob: -6.39821195602417
    9. 'space' → logprob: -6.77321195602417
    10. '=' → logprob: -7.02321195602417

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5390149354934692
    2. '=' → logprob: -0.9140149354934692
    3. ',' → logprob: -4.16401481628418
    4. ')' → logprob: -9.03901481628418
    5. ' ,' → logprob: -10.16401481628418
    6. '<|end|>' → logprob: -11.03901481628418
    7. '_' → logprob: -11.16401481628418
    8. ' ' → logprob: -12.28901481628418
    9. '.' → logprob: -12.53901481628418
    10. '[' → logprob: -12.66401481628418

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.023253049701452255
    2. ' input' → logprob: -4.523252964019775
    3. 'map' → logprob: -4.898252964019775
    4. ' ' → logprob: -5.523252964019775
    5. 'input' → logprob: -7.648252964019775
    6. ' int' → logprob: -9.398253440856934
    7. '0' → logprob: -9.648253440856934
    8. ' list' → logprob: -10.273253440856934
    9. 'int' → logprob: -12.273253440856934
    10. '5' → logprob: -12.773253440856934

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03001774661242962
    2. '(int' → logprob: -4.530017852783203
    3. '(str' → logprob: -4.530017852783203
    4. '(lambda' → logprob: -4.905017852783203
    5. '<|end|>' → logprob: -8.780017852783203
    6. '()' → logprob: -9.280017852783203
    7. '(
' → logprob: -9.655017852783203
    8. '('' → logprob: -10.530017852783203
    9. ' (' → logprob: -10.905017852783203
    10. '(user' → logprob: -10.905017852783203

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3706165552139282
    2. ')' → logprob: -1.4956165552139282
    3. '(' → logprob: -3.1206164360046387
    4. 'input' → logprob: -3.9956164360046387
    5. '(str' → logprob: -4.495616436004639
    6. ',' → logprob: -4.870616436004639
    7. '(int' → logprob: -7.120616436004639
    8. ',input' → logprob: -7.120616436004639
    9. ' input' → logprob: -7.495616436004639
    10. '```' → logprob: -7.870616436004639

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889848947525024
    2. ' input' → logprob: -2.5788984298706055
    3. '(input' → logprob: -12.078898429870605
    4. ')' → logprob: -13.078898429870605
    5. ' ' → logprob: -15.078898429870605
    6. ',input' → logprob: -15.453898429870605
    7. '=input' → logprob: -15.953898429870605
    8. '	input' → logprob: -16.078899383544922
    9. '```' → logprob: -16.328899383544922
    10. ' )' → logprob: -16.953899383544922

Token 12: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0710705518722534
    2. '())' → logprob: -1.0710705518722534
    3. '()' → logprob: -1.6960705518722534
    4. ')' → logprob: -2.446070671081543
    5. '(' → logprob: -3.696070671081543
    6. '('' → logprob: -4.321070671081543
    7. '()))' → logprob: -5.696070671081543
    8. '))' → logprob: -7.821070671081543
    9. '(""))' → logprob: -7.821070671081543
    10. '());' → logprob: -7.821070671081543

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00033784625702537596
    2. 'strip' → logprob: -8.000337600708008
    3. 'rstrip' → logprob: -13.500337600708008
    4. ' split' → logprob: -14.375337600708008
    5. ')' → logprob: -15.000337600708008
    6. '(split' → logprob: -16.625337600708008
    7. 'read' → logprob: -17.625337600708008
    8. 'spl' → logprob: -17.875337600708008
    9. 'replace' → logprob: -19.375337600708008
    10. 's' → logprob: -19.500337600708008

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.68439781665802
    2. '())' → logprob: -1.43439781665802
    3. '))' → logprob: -1.80939781665802
    4. '()))' → logprob: -2.4343976974487305
    5. '()' → logprob: -5.4343976974487305
    6. '('' → logprob: -6.8093976974487305
    7. '(' → logprob: -7.9343976974487305
    8. ''))' → logprob: -10.80939769744873
    9. '())
' → logprob: -10.93439769744873
    10. '()))
' → logprob: -11.55939769744873

Token 15: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0279775857925415
    2. ')' → logprob: -1.7779775857925415
    3. '\' → logprob: -2.277977466583252
    4. '   ' → logprob: -2.402977466583252
    5. '
' → logprob: -2.527977466583252
    6. '```' → logprob: -2.777977466583252
    7. ':' → logprob: -3.152977466583252
    8. ',' → logprob: -4.027977466583252
    9. ':
' → logprob: -4.527977466583252
    10. 'for' → logprob: -4.652977466583252

Token 16: ' left' (ID: 3561)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6866884231567383
    2. 'for' → logprob: -1.0616884231567383
    3. ' for' → logprob: -3.0616884231567383
    4. '\n' → logprob: -3.6866884231567383
    5. ' ' → logprob: -4.311688423156738
    6. 'i' → logprob: -4.686688423156738
    7. 'r' → logprob: -4.686688423156738
    8. '\' → logprob: -5.061688423156738
    9. '    
' → logprob: -5.186688423156738
    10. ')' → logprob: -5.811688423156738

Token 17: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.027784550562500954
    2. '=' → logprob: -4.90278434753418
    3. ',' → logprob: -5.02778434753418
    4. 'over' → logprob: -5.15278434753418
    5. ' =' → logprob: -6.02778434753418
    6. ')' → logprob: -6.15278434753418
    7. '_space' → logprob: -6.77778434753418
    8. 'space' → logprob: -8.90278434753418
    9. '_over' → logprob: -8.90278434753418
    10. '_bound' → logprob: -8.90278434753418

Token 18: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06079815700650215
    2. ' ' → logprob: -2.935798168182373
    3. ' [' → logprob: -6.435798168182373
    4. '[' → logprob: -6.685798168182373
    5. '[]' → logprob: -7.185798168182373
    6. ' n' → logprob: -7.435798168182373
    7. '1' → logprob: -7.685798168182373
    8. ' []' → logprob: -8.060797691345215
    9. 'n' → logprob: -8.185797691345215
    10. 'm' → logprob: -8.685797691345215

Token 19: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025990229099988937
    2. '[' → logprob: -4.900990009307861
    3. '1' → logprob: -5.150990009307861
    4. 'n' → logprob: -5.525990009307861
    5. 'm' → logprob: -5.525990009307861
    6. '[]' → logprob: -6.025990009307861
    7. '-' → logprob: -7.775990009307861
    8. '[m' → logprob: -7.900990009307861
    9. '[n' → logprob: -8.15099048614502
    10. 'max' → logprob: -8.40099048614502

Token 20: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4565567076206207
    2. '0' → logprob: -1.8315566778182983
    3. ' ' → logprob: -2.456556797027588
    4. '<|end|>' → logprob: -3.456556797027588
    5. ' ,' → logprob: -3.831556797027588
    6. ',
' → logprob: -4.831556797027588
    7. '  ' → logprob: -4.956556797027588
    8. ' 
' → logprob: -5.081556797027588
    9. 'while' → logprob: -5.081556797027588
    10. '.' → logprob: -5.581556797027588

Token 21: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3421904146671295
    2. ' ,' → logprob: -2.4671905040740967
    3. ' ' → logprob: -2.9671905040740967
    4. 'while' → logprob: -3.3421905040740967
    5. ' while' → logprob: -3.4671905040740967
    6. '0' → logprob: -3.5921905040740967
    7. '<|end|>' → logprob: -4.592190265655518
    8. '```' → logprob: -4.842190265655518
    9. ' ,
' → logprob: -5.342190265655518
    10. ' 
' → logprob: -5.342190265655518

Token 22: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.016069913282990456
    2. ' right' → logprob: -4.1410698890686035
    3. 'r' → logprob: -11.016070365905762
    4. '   ' → logprob: -12.266070365905762
    5. ',' → logprob: -12.766070365905762
    6. ',right' → logprob: -13.141070365905762
    7. '=' → logprob: -13.391070365905762
    8. '	right' → logprob: -13.641070365905762
    9. 'left' → logprob: -14.266070365905762
    10. '0' → logprob: -14.266070365905762

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014252123422920704
    2. '=' → logprob: -4.264252185821533
    3. ',' → logprob: -10.139251708984375
    4. ' ' → logprob: -11.014251708984375
    5. ' +=' → logprob: -11.389251708984375
    6. ' =
' → logprob: -12.139251708984375
    7. ' +' → logprob: -12.514251708984375
    8. '+' → logprob: -13.139251708984375
    9. '<|end|>' → logprob: -13.389251708984375
    10. '   ' → logprob: -13.514251708984375

Token 24: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.27852803468704224
    2. ' m' → logprob: -1.9035279750823975
    3. 'n' → logprob: -2.9035279750823975
    4. 'm' → logprob: -3.2785279750823975
    5. ' ' → logprob: -7.403528213500977
    6. '10' → logprob: -7.403528213500977
    7. '100' → logprob: -8.278528213500977
    8. '   ' → logprob: -11.153528213500977
    9. ' max' → logprob: -11.153528213500977
    10. 'max' → logprob: -11.778528213500977

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4993043839931488
    2. '   ' → logprob: -1.8743044137954712
    3. '<|end|>' → logprob: -2.1243042945861816
    4. '```' → logprob: -3.3743042945861816
    5. '\n' → logprob: -3.4993042945861816
    6. '\' → logprob: -4.124304294586182
    7. '    
' → logprob: -4.874304294586182
    8. ' 
' → logprob: -5.249304294586182
    9. '<|end|>' → logprob: -5.249304294586182
    10. ')' → logprob: -5.374304294586182

Token 26: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7358015775680542
    2. '   ' → logprob: -0.7358015775680542
    3. ' ' → logprob: -4.485801696777344
    4. '<|end|>' → logprob: -4.985801696777344
    5. ' 
' → logprob: -5.360801696777344
    6. '    
' → logprob: -5.360801696777344
    7. '```' → logprob: -5.360801696777344
    8. '\n' → logprob: -5.985801696777344
    9. '  
' → logprob: -6.735801696777344
    10. ')' → logprob: -7.110801696777344

Token 27: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13787144422531128
    2. 'while' → logprob: -3.262871503829956
    3. '
' → logprob: -3.387871503829956
    4. ':' → logprob: -4.012871265411377
    5. '```' → logprob: -4.262871265411377
    6. ' while' → logprob: -4.387871265411377
    7. ' ' → logprob: -5.387871265411377
    8. '\n' → logprob: -5.762871265411377
    9. ':
' → logprob: -7.512871265411377
    10. '    
' → logprob: -7.512871265411377

Token 28: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2981032431125641
    2. ' i' → logprob: -1.7981032133102417
    3. ' _' → logprob: -2.4231033325195312
    4. '_' → logprob: -5.798103332519531
    5. '  ' → logprob: -8.423103332519531
    6. 'i' → logprob: -8.548103332519531
    7. ' range' → logprob: -10.798103332519531
    8. ' ‌' → logprob: -11.423103332519531
    9. ' n' → logprob: -11.548103332519531
    10. ' ▁' → logprob: -11.673103332519531

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006659718346782029
    2. 'in' → logprob: -7.50066614151001
    3. ' ' → logprob: -10.000665664672852
    4. ' i' → logprob: -10.500665664672852
    5. '  ' → logprob: -11.250665664672852
    6. ' _' → logprob: -11.375665664672852
    7. '<|end|>' → logprob: -12.875665664672852
    8. '   ' → logprob: -13.125665664672852
    9. '	in' → logprob: -13.500665664672852
    10. ' ```' → logprob: -13.500665664672852

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10023362934589386
    2. ' range' → logprob: -2.350233554840088
    3. '(range' → logprob: -10.850234031677246
    4. '	range' → logprob: -12.225234031677246
    5. ' ' → logprob: -14.225234031677246
    6. '_range' → logprob: -14.600234031677246
    7. ' xrange' → logprob: -14.600234031677246
    8. '.range' → logprob: -15.725234031677246
    9. 'm' → logprob: -16.35023307800293
    10. '```' → logprob: -16.35023307800293

Token 31: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4784516394138336
    2. '(m' → logprob: -0.9784516096115112
    3. '(n' → logprob: -5.478451728820801
    4. ' (' → logprob: -8.8534517288208
    5. '(range' → logprob: -10.2284517288208
    6. '(s' → logprob: -12.1034517288208
    7. '(int' → logprob: -13.8534517288208
    8. '(
' → logprob: -14.3534517288208
    9. '(len' → logprob: -14.9784517288208
    10. '((' → logprob: -14.9784517288208

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009616006282158196
    2. ':' → logprob: -7.750961780548096
    3. ')' → logprob: -8.000961303710938
    4. ' ):' → logprob: -8.750961303710938
    5. '):
' → logprob: -10.750961303710938
    6. '+' → logprob: -12.125961303710938
    7. '():' → logprob: -13.000961303710938
    8. '   ' → logprob: -13.125961303710938
    9. ',' → logprob: -13.250961303710938
    10. '**' → logprob: -14.875961303710938

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19283360242843628
    2. '    ' → logprob: -2.317833662033081
    3. '   ' → logprob: -2.942833662033081
    4. '    
' → logprob: -5.067833423614502
    5. '        
' → logprob: -5.567833423614502
    6. '     
' → logprob: -5.692833423614502
    7. ' 
' → logprob: -6.317833423614502
    8. ' ' → logprob: -6.442833423614502
    9. '<|end|>' → logprob: -6.567833423614502
    10. '
' → logprob: -7.067833423614502

Token 34: ' left' (ID: 3561)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5780010223388672
    2. ' ' → logprob: -1.2030010223388672
    3. '   ' → logprob: -2.578001022338867
    4. '       ' → logprob: -3.203001022338867
    5. '  ' → logprob: -5.328001022338867
    6. '        ' → logprob: -5.578001022338867
    7. '     ' → logprob: -5.703001022338867
    8. 'input' → logprob: -6.328001022338867
    9. ' input' → logprob: -6.953001022338867
    10. ' 
' → logprob: -7.203001022338867

Token 35: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013086820021271706
    2. ' ,' → logprob: -4.763086795806885
    3. ' =' → logprob: -5.888086795806885
    4. '=' → logprob: -7.388086795806885
    5. ' +=' → logprob: -7.763086795806885
    6. '_,' → logprob: -7.763086795806885
    7. '2' → logprob: -9.513087272644043
    8. '+=' → logprob: -10.513087272644043
    9. '_' → logprob: -10.888087272644043
    10. '_input' → logprob: -11.638087272644043

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00369532429613173
    2. ' ,' → logprob: -5.628695487976074
    3. '_,' → logprob: -10.003695487976074
    4. ' ' → logprob: -11.128695487976074
    5. ',_' → logprob: -12.378695487976074
    6. ',right' → logprob: -12.753695487976074
    7. ',j' → logprob: -12.878695487976074
    8. 's' → logprob: -13.003695487976074
    9. ',left' → logprob: -13.128695487976074
    10. ',n' → logprob: -13.128695487976074

Token 37: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.07890631258487701
    2. 'right' → logprob: -2.578906297683716
    3. '	right' → logprob: -11.953906059265137
    4. '<|end|>' → logprob: -13.328906059265137
    5. ' =' → logprob: -13.453906059265137
    6. ' ' → logprob: -13.453906059265137
    7. '_right' → logprob: -13.703906059265137
    8. ' middle' → logprob: -14.328906059265137
    9. '[right' → logprob: -14.328906059265137
    10. 'r' → logprob: -14.453906059265137

Token 38: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.04311063885688782
    2. '_' → logprob: -3.1681106090545654
    3. ' _' → logprob: -10.418110847473145
    4. ' =' → logprob: -10.918110847473145
    5. '_j' → logprob: -10.918110847473145
    6. 'i' → logprob: -11.668110847473145
    7. '=' → logprob: -11.793110847473145
    8. '<|end|>' → logprob: -12.543110847473145
    9. '_=' → logprob: -12.668110847473145
    10. '_s' → logprob: -12.793110847473145

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489683896303177
    2. '=' → logprob: -2.929896831512451
    3. ',' → logprob: -11.67989730834961
    4. ' ' → logprob: -12.17989730834961
    5. ')' → logprob: -15.17989730834961
    6. '   ' → logprob: -15.42989730834961
    7. ' =
' → logprob: -16.17989730834961
    8. ' ,' → logprob: -16.30489730834961
    9. '  ' → logprob: -16.42989730834961
    10. '    ' → logprob: -16.92989730834961

Token 40: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.009792448952794075
    2. 'map' → logprob: -4.634792327880859
    3. ' list' → logprob: -10.88479232788086
    4. ' input' → logprob: -11.88479232788086
    5. ' ' → logprob: -12.25979232788086
    6. '	map' → logprob: -13.13479232788086
    7. 'input' → logprob: -14.00979232788086
    8. ' ' → logprob: -14.25979232788086
    9. 'list' → logprob: -14.38479232788086
    10. '   ' → logprob: -14.88479232788086

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004439966753125191
    2. '(' → logprob: -5.504439830780029
    3. '<int' → logprob: -9.129440307617188
    4. '<|end|>' → logprob: -9.379440307617188
    5. '(input' → logprob: -9.504440307617188
    6. '[int' → logprob: -10.379440307617188
    7. ' (' → logprob: -11.379440307617188
    8. '=int' → logprob: -11.504440307617188
    9. 'int' → logprob: -11.629440307617188
    10. '(
' → logprob: -11.754440307617188

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022810997907072306
    2. ',input' → logprob: -6.127281188964844
    3. '(' → logprob: -10.252281188964844
    4. ' ,' → logprob: -10.502281188964844
    5. '(input' → logprob: -11.002281188964844
    6. '(),' → logprob: -11.752281188964844
    7. '`,' → logprob: -12.502281188964844
    8. '```' → logprob: -13.377281188964844
    9. 'input' → logprob: -13.877281188964844
    10. ')' → logprob: -14.127281188964844

Token 43: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10021109133958817
    2. 'input' → logprob: -2.3502111434936523
    3. ')' → logprob: -13.350211143493652
    4. '<|end|>' → logprob: -13.350211143493652
    5. '	input' → logprob: -14.850211143493652
    6. ',input' → logprob: -15.475211143493652
    7. '=input' → logprob: -15.600211143493652
    8. '_input' → logprob: -15.975211143493652
    9. '(input' → logprob: -16.100210189819336
    10. ' ' → logprob: -16.225210189819336

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.248469718324486e-05
    2. '()' → logprob: -10.750022888183594
    3. '.' → logprob: -14.625022888183594
    4. ' ().' → logprob: -15.250022888183594
    5. '(' → logprob: -16.000022888183594
    6. '.split' → logprob: -17.125022888183594
    7. ')' → logprob: -17.125022888183594
    8. '().__' → logprob: -17.250022888183594
    9. '.readline' → logprob: -17.250022888183594
    10. ' .' → logprob: -17.750022888183594

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.935296834039036e-06
    2. 'strip' → logprob: -12.87500286102295
    3. ' split' → logprob: -15.62500286102295
    4. '(split' → logprob: -16.375003814697266
    5. 'spl' → logprob: -16.500003814697266
    6. 'rstrip' → logprob: -16.750003814697266
    7. 'plit' → logprob: -17.125003814697266
    8. 's' → logprob: -18.500003814697266
    9. ')' → logprob: -19.125003814697266
    10. '_split' → logprob: -19.625003814697266

Token 46: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018999353051185608
    2. '())' → logprob: -4.3939995765686035
    3. '()' → logprob: -5.3939995765686035
    4. '))' → logprob: -6.2689995765686035
    5. ')
' → logprob: -12.018999099731445
    6. '`)' → logprob: -12.018999099731445
    7. '()))' → logprob: -12.143999099731445
    8. ')))' → logprob: -12.768999099731445
    9. ')`' → logprob: -13.018999099731445
    10. '(' → logprob: -13.268999099731445

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47787728905677795
    2. '
' → logprob: -1.2278772592544556
    3. '        
' → logprob: -3.602877378463745
    4. '\n' → logprob: -3.852877378463745
    5. '  
' → logprob: -4.727877140045166
    6. '' → logprob: -4.727877140045166
    7. '    
' → logprob: -5.352877140045166
    8. '   ' → logprob: -5.727877140045166
    9. '<|end|>' → logprob: -6.352877140045166
    10. '\' → logprob: -6.477877140045166

Token 48: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5104852318763733
    2. '
' → logprob: -1.5104851722717285
    3. 'left' (adapté à ' left') → logprob: -2.7604851722717285
    4. '   ' → logprob: -3.3854851722717285
    5. 'if' → logprob: -3.5104851722717285
    6. ' if' → logprob: -4.5104851722717285
    7. ' left' → logprob: -4.5104851722717285
    8. '        
' → logprob: -4.6354851722717285
    9. '' → logprob: -5.3854851722717285
    10. '\n' → logprob: -5.5104851722717285

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016040703281760216
    2. '=' → logprob: -4.141040802001953
    3. '=max' → logprob: -12.766040802001953
    4. ',' → logprob: -13.641040802001953
    5. ' ' → logprob: -14.516040802001953
    6. ' ' → logprob: -14.766040802001953
    7. '	' → logprob: -14.766040802001953
    8. '>' → logprob: -15.016040802001953
    9. 'max' → logprob: -15.641040802001953
    10. '   ' → logprob: -16.766040802001953

Token 50: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.014164221473038197
    2. 'max' → logprob: -4.264164447784424
    3. '	max' → logprob: -15.014163970947266
    4. '(max' → logprob: -15.764163970947266
    5. ' min' → logprob: -16.014163970947266
    6. ' left' → logprob: -16.889163970947266
    7. '[max' → logprob: -17.514163970947266
    8. ' ' → logprob: -17.764163970947266
    9. '=max' → logprob: -18.014163970947266
    10. ',max' → logprob: -18.264163970947266

Token 51: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.008615399710834026
    2. '(' → logprob: -4.758615493774414
    3. '(le' → logprob: -15.258615493774414
    4. '(right' → logprob: -15.883615493774414
    5. '(lhs' → logprob: -16.008615493774414
    6. '(
' → logprob: -16.258615493774414
    7. 'left' → logprob: -16.883615493774414
    8. ',left' → logprob: -17.008615493774414
    9. ' (' → logprob: -17.133615493774414
    10. '(line' → logprob: -17.258615493774414

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015009368071332574
    2. ' ,' → logprob: -6.876501083374023
    3. ',left' → logprob: -7.751501083374023
    4. '(left' → logprob: -11.126501083374023
    5. '(' → logprob: -11.376501083374023
    6. 'left' → logprob: -11.876501083374023
    7. ',right' → logprob: -13.251501083374023
    8. ')' → logprob: -14.251501083374023
    9. '`,' → logprob: -15.126501083374023
    10. ' left' → logprob: -15.251501083374023

Token 53: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.11285179853439331
    2. 'left' → logprob: -2.237851858139038
    3. ' lef' → logprob: -11.237852096557617
    4. '	left' → logprob: -12.237852096557617
    5. ' ' → logprob: -12.487852096557617
    6. ')' → logprob: -13.112852096557617
    7. '    ' → logprob: -13.362852096557617
    8. '_left' → logprob: -13.987852096557617
    9. ' ' → logprob: -14.362852096557617
    10. '   ' → logprob: -14.612852096557617

Token 54: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -14.875
    3. '_)' → logprob: -17.625
    4. '_' → logprob: -17.875
    5. '_j' → logprob: -18.0
    6. 'i' → logprob: -18.875
    7. ')_' → logprob: -19.0
    8. ' _' → logprob: -19.25
    9. '```' → logprob: -19.625
    10. ' )' → logprob: -19.625

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6937772035598755
    2. ')
' → logprob: -0.6937772035598755
    3. ')
' → logprob: -8.193777084350586
    4. ' )
' → logprob: -8.318777084350586
    5. ' )' → logprob: -9.943777084350586
    6. ')

' → logprob: -10.318777084350586
    7. '       ' → logprob: -10.693777084350586
    8. '   ' → logprob: -13.193777084350586
    9. ')\' → logprob: -14.068777084350586
    10. '),' → logprob: -14.193777084350586

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8972370624542236
    2. '\n' → logprob: -1.8972370624542236
    3. '<|end|>' → logprob: -1.8972370624542236
    4. ' 
' → logprob: -2.0222370624542236
    5. '  
' → logprob: -3.5222370624542236
    6. '\' → logprob: -3.8972370624542236
    7. ')' → logprob: -3.8972370624542236
    8. '
' → logprob: -4.0222368240356445
    9. '        
' → logprob: -4.2722368240356445
    10. ' ' → logprob: -4.5222368240356445

Token 57: ' right' (ID: 1849)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5389641523361206
    2. ' min' → logprob: -0.9139641523361206
    3. 'right' (adapté à ' right') → logprob: -4.78896427154541
    4. ' right' → logprob: -6.28896427154541
    5. '       ' → logprob: -6.91396427154541
    6. '    ' → logprob: -7.16396427154541
    7. '\n' → logprob: -7.41396427154541
    8. '   ' → logprob: -7.53896427154541
    9. '
' → logprob: -7.78896427154541
    10. ' ' → logprob: -8.03896427154541

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602407842874527
    2. '=' → logprob: -1.9102407693862915
    3. '=min' → logprob: -11.03524112701416
    4. ')' → logprob: -16.160240173339844
    5. 'min' → logprob: -16.410240173339844
    6. ' ' → logprob: -16.910240173339844
    7. '＝' → logprob: -17.160240173339844
    8. '=

' → logprob: -17.410240173339844
    9. '	' → logprob: -17.660240173339844
    10. '   ' → logprob: -17.785240173339844

Token 59: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.03804263845086098
    2. 'min' → logprob: -3.2880425453186035
    3. '	min' → logprob: -13.913043022155762
    4. ' ' → logprob: -16.538042068481445
    5. '[min' → logprob: -16.538042068481445
    6. '(min' → logprob: -16.663042068481445
    7. '=min' → logprob: -17.038042068481445
    8. ' ' → logprob: -17.413042068481445
    9. '  ' → logprob: -18.038042068481445
    10. '_min' → logprob: -18.413042068481445

Token 60: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.008618239313364029
    2. '(' → logprob: -4.758618354797363
    3. '(rhs' → logprob: -13.758618354797363
    4. '(
' → logprob: -13.883618354797363
    5. ' (' → logprob: -14.508618354797363
    6. 'right' → logprob: -15.008618354797363
    7. '(r' → logprob: -15.008618354797363
    8. '[right' → logprob: -16.258617401123047
    9. ',right' → logprob: -16.633617401123047
    10. '(end' → logprob: -16.758617401123047

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001532401074655354
    2. ',right' → logprob: -9.375153541564941
    3. ' ,' → logprob: -9.625153541564941
    4. 'right' → logprob: -13.750153541564941
    5. ',
' → logprob: -14.625153541564941
    6. ')' → logprob: -15.375153541564941
    7. '[right' → logprob: -16.125152587890625
    8. ' right' → logprob: -16.375152587890625
    9. '(right' → logprob: -16.625152587890625
    10. '`,' → logprob: -16.875152587890625

Token 62: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.16022655367851257
    2. ' right' → logprob: -1.910226583480835
    3. '(right' → logprob: -13.910226821899414
    4. '	right' → logprob: -14.535226821899414
    5. '   ' → logprob: -15.160226821899414
    6. ' ' → logprob: -15.160226821899414
    7. '[right' → logprob: -15.660226821899414
    8. ')' → logprob: -15.910226821899414
    9. 'r' → logprob: -16.535226821899414
    10. '       ' → logprob: -17.785226821899414

Token 63: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.006740238983184099
    2. ')' → logprob: -5.006740093231201
    3. '_)' → logprob: -11.50674057006836
    4. ')_' → logprob: -11.88174057006836
    5. 'i' → logprob: -12.13174057006836
    6. ')
' → logprob: -14.38174057006836
    7. '[i' → logprob: -15.00674057006836
    8. '_' → logprob: -15.00674057006836
    9. ' )' → logprob: -15.00674057006836
    10. ')`' → logprob: -15.13174057006836

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34857988357543945
    2. ')
' → logprob: -1.2235798835754395
    3. ')

' → logprob: -10.348579406738281
    4. '
' → logprob: -10.473579406738281
    5. '   ' → logprob: -10.848579406738281
    6. ')
' → logprob: -11.098579406738281
    7. ' )' → logprob: -11.598579406738281
    8. '       ' → logprob: -11.723579406738281
    9. '<|end|>' → logprob: -11.973579406738281
    10. ' )
' → logprob: -12.098579406738281

Token 65: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05353853106498718
    2. '   ' → logprob: -3.3035385608673096
    3. '    
' → logprob: -5.1785383224487305
    4. '  
' → logprob: -5.4285383224487305
    5. ' 
' → logprob: -5.9285383224487305
    6. '<|end|>' → logprob: -6.6785383224487305
    7. '\n' → logprob: -7.5535383224487305
    8. '   
' → logprob: -8.55353832244873
    9. '       ' → logprob: -8.80353832244873
    10. '```' → logprob: -9.55353832244873

Token 66: ' print' (ID: 2123)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6325685977935791
    2. '   ' → logprob: -1.382568597793579
    3. ' 
' → logprob: -2.132568597793579
    4. '    
' → logprob: -3.132568597793579
    5. '  
' → logprob: -3.257568597793579
    6. ' ' → logprob: -5.632568359375
    7. '   
' → logprob: -5.632568359375
    8. 'if' → logprob: -5.757568359375
    9. ' if' → logprob: -6.132568359375
    10. '\n' → logprob: -6.257568359375

Token 67: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.499985933303833
    2. '(max' → logprob: -1.249985933303833
    3. '(left' → logprob: -2.874985933303833
    4. '(right' → logprob: -2.999985933303833
    5. '('' → logprob: -8.499985694885254
    6. '()' → logprob: -8.499985694885254
    7. '("' → logprob: -9.249985694885254
    8. '(end' → logprob: -9.624985694885254
    9. 'max' → logprob: -9.874985694885254
    10. '((' → logprob: -9.999985694885254

Token 68: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001455236109904945
    2. '(right' → logprob: -6.751455307006836
    3. '(left' → logprob: -8.626455307006836
    4. ')' → logprob: -9.251455307006836
    5. '0' → logprob: -12.126455307006836
    6. ')(' → logprob: -13.251455307006836
    7. ' (' → logprob: -13.501455307006836
    8. ' ' → logprob: -15.001455307006836
    9. '((' → logprob: -15.501455307006836
    10. 'right' → logprob: -15.876455307006836

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0074177938513457775
    2. 'right' → logprob: -5.757417678833008
    3. '(' → logprob: -5.882417678833008
    4. '(right' → logprob: -7.132417678833008
    5. ' ' → logprob: -7.632417678833008
    6. ' right' → logprob: -9.257417678833008
    7. ')' → logprob: -10.257417678833008
    8. '	right' → logprob: -11.382417678833008
    9. '[right' → logprob: -12.007417678833008
    10. '```' → logprob: -13.257417678833008

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13337017595767975
    2. '(right' → logprob: -2.8833701610565186
    3. ')' → logprob: -3.2583701610565186
    4. ',right' → logprob: -4.008370399475098
    5. 'right' → logprob: -4.508370399475098
    6. '(' → logprob: -7.383370399475098
    7. ' ,' → logprob: -8.133370399475098
    8. ' right' → logprob: -9.133370399475098
    9. '),' → logprob: -9.508370399475098
    10. '	right' → logprob: -9.633370399475098

Token 71: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.16023093461990356
    2. 'right' → logprob: -1.9102308750152588
    3. '(right' → logprob: -12.16023063659668
    4. '	right' → logprob: -14.28523063659668
    5. ' ' → logprob: -14.91023063659668
    6. '   ' → logprob: -15.53523063659668
    7. '[right' → logprob: -16.16023063659668
    8. ')' → logprob: -17.03523063659668
    9. '  ' → logprob: -17.53523063659668
    10. ' rights' → logprob: -17.91023063659668

Token 72: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05552777647972107
    2. '-' → logprob: -3.305527687072754
    3. '-left' → logprob: -4.055527687072754
    4. ' ' → logprob: -12.805527687072754
    5. ')' → logprob: -13.430527687072754
    6. '-l' → logprob: -13.805527687072754
    7. '-le' → logprob: -14.680527687072754
    8. ' -
' → logprob: -15.055527687072754
    9. '-right' → logprob: -15.555527687072754
    10. '-length' → logprob: -15.930527687072754

Token 73: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.575991690158844
    2. ' left' → logprob: -0.825991690158844
    3. ' lef' → logprob: -10.3259916305542
    4. '	left' → logprob: -11.0759916305542
    5. ' ' → logprob: -13.2009916305542
    6. '[left' → logprob: -14.5759916305542
    7. '(left' → logprob: -14.7009916305542
    8. '   ' → logprob: -14.7009916305542
    9. '    ' → logprob: -14.9509916305542
    10. '_left' → logprob: -15.4509916305542

Token 74: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519453763961792
    2. ' +' → logprob: -1.5019453763961792
    3. ')' → logprob: -11.751945495605469
    4. '+)' → logprob: -12.626945495605469
    5. ')+' → logprob: -12.751945495605469
    6. ' +
' → logprob: -14.626945495605469
    7. ' )' → logprob: -15.001945495605469
    8. ' plus' → logprob: -15.126945495605469
    9. '＋' → logprob: -15.126945495605469
    10. '))' → logprob: -15.126945495605469

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04858839511871338
    2. ' ' → logprob: -3.048588275909424
    3. ')' → logprob: -14.173588752746582
    4. '0' → logprob: -15.923588752746582
    5. '```' → logprob: -15.923588752746582
    6. '   ' → logprob: -16.298587799072266
    7. '  ' → logprob: -18.423587799072266
    8. '`' → logprob: -18.548587799072266
    9. ' ' → logprob: -19.298587799072266
    10. '2' → logprob: -19.423587799072266

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. ')' → logprob: -15.500004768371582
    4. '```' → logprob: -17.1250057220459
    5. '   ' → logprob: -18.3750057220459
    6. '))' → logprob: -20.0000057220459
    7. '}' → logprob: -20.1250057220459
    8. '`' → logprob: -20.1250057220459
    9. '0' → logprob: -20.7500057220459
    10. '  ' → logprob: -20.8750057220459

Token 77: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014060820103622973
    2. '))' → logprob: -8.875140190124512
    3. ' )' → logprob: -14.625140190124512
    4. ')
' → logprob: -15.625140190124512
    5. ')`' → logprob: -17.000141143798828
    6. ')))' → logprob: -17.250141143798828
    7. '`)' → logprob: -17.625141143798828
    8. ')}' → logprob: -18.000141143798828
    9. '')' → logprob: -18.625141143798828
    10. ')")' → logprob: -19.500141143798828

Token 78: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02056349441409111
    2. '(' → logprob: -3.8955636024475098
    3. '()`' → logprob: -12.395563125610352
    4. '()
' → logprob: -12.895563125610352
    5. '().' → logprob: -12.895563125610352
    6. '();' → logprob: -13.270563125610352
    7. '```' → logprob: -13.270563125610352
    8. '(
' → logprob: -13.395563125610352
    9. ' ()' → logprob: -13.645563125610352
    10. '()<' → logprob: -13.895563125610352


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 50.65%
Précision adaptée (1ère position): 51.95%
Précision (top 10): 85.71%
================================================================================
