================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    from sys import stdin
    l = stdin.readline
    values = l().split()
    x = int(values[0])
    y = int(values[1])
    res = 0
    for a, v in zip([x,y], range(2)):
        if a >= 1 and a <= 3:
            res += (4 - a) * pow(10,5)
    if x == 1 and y == 1:
        res = res + (4 * 10**5)
    print(res)
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.33774250745773315
    2. '\n' → logprob: -1.837742567062378
    3. ' 
' → logprob: -2.712742567062378
    4. '    
' → logprob: -3.712742567062378
    5. ' ' → logprob: -4.837742328643799
    6. '   ' → logprob: -5.462742328643799
    7. '  
' → logprob: -5.712742328643799
    8. '(' → logprob: -5.837742328643799
    9. '    ' → logprob: -5.962742328643799
    10. ''' → logprob: -6.087742328643799

Token 4: ' from' (ID: 591)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20469899475574493
    2. 'pass' → logprob: -2.3296990394592285
    3. '   ' → logprob: -2.8296990394592285
    4. 'return' → logprob: -4.0796990394592285
    5. 'p' → logprob: -5.3296990394592285
    6. '#' → logprob: -6.3296990394592285
    7. 'r' → logprob: -6.4546990394592285
    8. 'a' → logprob: -7.3296990394592285
    9. '```' → logprob: -7.3296990394592285
    10. 'n' → logprob: -8.07969856262207

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.44563624262809753
    2. ' sys' → logprob: -1.19563627243042
    3. ' math' → logprob: -3.07063627243042
    4. ' ' → logprob: -6.44563627243042
    5. ' numpy' → logprob: -6.82063627243042
    6. ' flask' → logprob: -6.82063627243042
    7. ' random' → logprob: -6.94563627243042
    8. ' json' → logprob: -7.19563627243042
    9. ' pandas' → logprob: -7.44563627243042
    10. ' collections' → logprob: -7.69563627243042

Token 6: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011837316676974297
    2. 'import' → logprob: -4.761837482452393
    3. '.' → logprob: -5.886837482452393
    4. ' ' → logprob: -8.261837005615234
    5. '.import' → logprob: -9.511837005615234
    6. ' .' → logprob: -10.511837005615234
    7. '	import' → logprob: -10.511837005615234
    8. '```' → logprob: -11.636837005615234
    9. '.stdin' → logprob: -11.886837005615234
    10. '.argv' → logprob: -12.261837005615234

Token 7: ' stdin' (ID: 75143)
  Prédit: ' argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' argv' → logprob: -0.5942075252532959
    2. 'argv' → logprob: -1.094207525253296
    3. ' exit' → logprob: -2.219207525253296
    4. 'exit' → logprob: -5.594207763671875
    5. ' import' → logprob: -8.344207763671875
    6. ' stdin' → logprob: -8.344207763671875
    7. 'stdin' → logprob: -8.594207763671875
    8. '.argv' → logprob: -10.094207763671875
    9. 'import' → logprob: -10.219207763671875
    10. 'stdout' → logprob: -10.719207763671875

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4412138760089874
    2. '.readline' → logprob: -1.191213846206665
    3. '```' → logprob: -4.441214084625244
    4. '.read' → logprob: -4.816214084625244
    5. ',' → logprob: -5.066214084625244
    6. '   ' → logprob: -5.191214084625244
    7. '
' → logprob: -5.816214084625244
    8. '\' → logprob: -5.816214084625244
    9. '\n' → logprob: -5.941214084625244
    10. '    ' → logprob: -6.066214084625244

Token 9: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.37669116258621216
    2. '   ' → logprob: -1.7516911029815674
    3. '.readline' → logprob: -2.3766911029815674
    4. '    ' → logprob: -4.1266913414001465
    5. '.read' → logprob: -4.7516913414001465
    6. '    
' → logprob: -4.8766913414001465
    7. '```' → logprob: -6.1266913414001465
    8. ',' → logprob: -6.5016913414001465
    9. '`' → logprob: -6.7516913414001465
    10. '     
' → logprob: -6.8766913414001465

Token 10: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4694359004497528
    2. '.' → logprob: -2.094435930252075
    3. '    ' → logprob: -2.344435930252075
    4. '.readline' → logprob: -2.469435930252075
    5. 'input' → logprob: -4.219435691833496
    6. 'for' → logprob: -4.594435691833496
    7. ' readline' → logprob: -4.719435691833496
    8. ' ' → logprob: -5.094435691833496
    9. '       ' → logprob: -5.219435691833496
    10. ' for' → logprob: -5.469435691833496

Token 11: ' =' (ID: 314)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.20294612646102905
    2. 'ines' → logprob: -2.202946186065674
    3. 'ist' → logprob: -3.202946186065674
    4. 'i' → logprob: -4.327946186065674
    5. ' =' → logprob: -4.702946186065674
    6. '=' → logprob: -4.827946186065674
    7. 'in' → logprob: -7.577946186065674
    8. 'ength' → logprob: -8.327945709228516
    9. '.' → logprob: -8.452945709228516
    10. '.readline' → logprob: -8.577945709228516

Token 12: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.6790717840194702
    2. ' stdin' → logprob: -0.9290717840194702
    3. ' []' → logprob: -2.5540719032287598
    4. ' list' → logprob: -4.67907190322876
    5. '[]' → logprob: -5.17907190322876
    6. 'list' → logprob: -6.80407190322876
    7. ' [' → logprob: -7.05407190322876
    8. 'ist' → logprob: -7.42907190322876
    9. '.stdin' → logprob: -7.42907190322876
    10. '(stdin' → logprob: -7.67907190322876

Token 13: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.1632918119430542
    2. '.' → logprob: -2.2882919311523438
    3. '.read' → logprob: -3.6632919311523438
    4. '.readlines' → logprob: -3.7882919311523438
    5. 'read' → logprob: -7.038291931152344
    6. ' readline' → logprob: -10.913291931152344
    7. '.Read' → logprob: -11.163291931152344
    8. '.write' → logprob: -12.288291931152344
    9. '_read' → logprob: -12.413291931152344
    10. ' .' → logprob: -12.538291931152344

Token 14: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2019452601671219
    2. '(' → logprob: -1.7019453048706055
    3. ')' → logprob: -9.076945304870605
    4. '(
' → logprob: -9.451945304870605
    5. '"' → logprob: -9.826945304870605
    6. ''s' → logprob: -10.326945304870605
    7. ' ' → logprob: -10.326945304870605
    8. '(

' → logprob: -10.451945304870605
    9. ' (' → logprob: -10.576945304870605
    10. ' ()' → logprob: -10.701945304870605

Token 15: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011488203890621662
    2. '(' → logprob: -4.511488437652588
    3. '()
' → logprob: -8.26148796081543
    4. '(
' → logprob: -9.26148796081543
    5. '()

' → logprob: -10.13648796081543
    6. ')' → logprob: -10.51148796081543
    7. '().' → logprob: -12.13648796081543
    8. '(

' → logprob: -12.76148796081543
    9. ' ()' → logprob: -13.01148796081543
    10. ',' → logprob: -13.13648796081543

Token 16: ' values' (ID: 4824)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3545597791671753
    2. '()' → logprob: -1.8545597791671753
    3. 'data' → logprob: -3.104559898376465
    4. '   ' → logprob: -3.854559898376465
    5. 'x' → logprob: -4.354559898376465
    6. ')' → logprob: -4.354559898376465
    7. 's' → logprob: -4.479559898376465
    8. '_' → logprob: -4.854559898376465
    9. ' ' → logprob: -5.354559898376465
    10. 'n' → logprob: -5.479559898376465

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22346433997154236
    2. '(' → logprob: -2.098464250564575
    3. '()' → logprob: -3.473464250564575
    4. ' =' → logprob: -3.973464250564575
    5. '=' → logprob: -4.598464488983154
    6. '.' → logprob: -4.973464488983154
    7. '[:]' → logprob: -5.348464488983154
    8. '[]' → logprob: -5.973464488983154
    9. ')' → logprob: -6.723464488983154
    10. ',' → logprob: -7.723464488983154

Token 18: ' l' (ID: 305)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.12783236801624298
    2. '[]' → logprob: -2.3778324127197266
    3. ' [' → logprob: -4.502832412719727
    4. ' ' → logprob: -5.002832412719727
    5. ' list' → logprob: -5.502832412719727
    6. '[' → logprob: -6.002832412719727
    7. 'list' → logprob: -6.252832412719727
    8. '()' → logprob: -8.127832412719727
    9. ' ()' → logprob: -9.377832412719727
    10. '   ' → logprob: -9.627832412719727

Token 19: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02710302732884884
    2. '().' → logprob: -3.6521029472351074
    3. '(' → logprob: -7.152102947235107
    4. ' ()' → logprob: -12.277103424072266
    5. '()
' → logprob: -12.402103424072266
    6. '())' → logprob: -12.902103424072266
    7. '()

' → logprob: -13.277103424072266
    8. '.strip' → logprob: -13.527103424072266
    9. '.' → logprob: -14.027103424072266
    10. '()[' → logprob: -14.402103424072266

Token 20: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.20215943455696106
    2. 'split' → logprob: -1.7021594047546387
    3. 'rstrip' → logprob: -7.202159404754639
    4. ' split' → logprob: -14.827159881591797
    5. ' strip' → logprob: -15.827159881591797
    6. 'rs' → logprob: -15.827159881591797
    7. '(split' → logprob: -16.952159881591797
    8. 'spl' → logprob: -17.702159881591797
    9. 'str' → logprob: -17.702159881591797
    10. '```' → logprob: -17.827159881591797

Token 21: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12224878370761871
    2. '()' → logprob: -2.372248888015747
    3. '('' → logprob: -3.872248888015747
    4. '("("' → logprob: -7.247248649597168
    5. '(`' → logprob: -9.247248649597168
    6. '(
' → logprob: -9.497248649597168
    7. '```' → logprob: -10.872248649597168
    8. '(

' → logprob: -11.622248649597168
    9. '("' → logprob: -11.997248649597168
    10. '((' → logprob: -11.997248649597168

Token 22: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9294654130935669
    2. '   ' → logprob: -0.9294654130935669
    3. '<|end|>' → logprob: -2.6794652938842773
    4. ' ' → logprob: -2.9294652938842773
    5. ')' → logprob: -3.8044652938842773
    6. '\n' → logprob: -4.304465293884277
    7. '    
' → logprob: -4.429465293884277
    8. '\' → logprob: -4.679465293884277
    9. '
' → logprob: -5.179465293884277
    10. '```' → logprob: -5.679465293884277

Token 23: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8464176058769226
    2. '   ' → logprob: -2.2214176654815674
    3. 'n' → logprob: -2.3464176654815674
    4. 'a' → logprob: -2.8464176654815674
    5. 'x' (adapté à ' x') → logprob: -3.2214176654815674
    6. 'for' → logprob: -3.4714176654815674
    7. ')' → logprob: -3.5964176654815674
    8. 'v' → logprob: -3.7214176654815674
    9. 'count' → logprob: -3.7214176654815674
    10. 'if' → logprob: -3.8464176654815674

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08615832775831223
    2. ',' → logprob: -3.336158275604248
    3. '=' → logprob: -3.961158275604248
    4. '[' → logprob: -4.086158275604248
    5. '_' → logprob: -5.836158275604248
    6. ')' → logprob: -6.461158275604248
    7. '_values' → logprob: -6.586158275604248
    8. 's' → logprob: -6.836158275604248
    9. '.' → logprob: -6.961158275604248
    10. ' ' → logprob: -7.211158275604248

Token 25: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6963157057762146
    2. ' int' → logprob: -0.6963157057762146
    3. ' values' → logprob: -6.571315765380859
    4. ' float' → logprob: -7.446315765380859
    5. 'values' → logprob: -7.571315765380859
    6. ' ' → logprob: -8.07131576538086
    7. 'float' → logprob: -8.82131576538086
    8. '1' → logprob: -10.19631576538086
    9. ' len' → logprob: -10.32131576538086
    10. '0' → logprob: -10.57131576538086

Token 26: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.31345227360725403
    2. '(' → logprob: -1.3134522438049316
    3. '(x' → logprob: -8.93845272064209
    4. 'values' → logprob: -10.06345272064209
    5. ' (' → logprob: -12.31345272064209
    6. '(vals' → logprob: -12.56345272064209
    7. ' values' → logprob: -13.06345272064209
    8. '(
' → logprob: -13.18845272064209
    9. '(

' → logprob: -13.56345272064209
    10. '(value' → logprob: -14.06345272064209

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. ')' → logprob: -14.125000953674316
    3. '0' → logprob: -14.750000953674316
    4. ' [' → logprob: -16.500001907348633
    5. '(' → logprob: -17.375001907348633
    6. '[
' → logprob: -17.750001907348633
    7. '[-' → logprob: -17.875001907348633
    8. ' ' → logprob: -18.375001907348633
    9. '1' → logprob: -18.500001907348633
    10. '   ' → logprob: -19.375001907348633

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010735770774772391
    2. '1' → logprob: -9.875107765197754
    3. ' ' → logprob: -9.875107765197754
    4. '2' → logprob: -13.375107765197754
    5. '   ' → logprob: -14.125107765197754
    6. '-' → logprob: -14.250107765197754
    7. ')' → logprob: -14.625107765197754
    8. ']' → logprob: -15.000107765197754
    9. '3' → logprob: -15.375107765197754
    10. '  ' → logprob: -16.000106811523438

Token 29: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8312570318812504e-05
    2. ' )' → logprob: -11.500018119812012
    3. '))' → logprob: -13.125018119812012
    4. '])' → logprob: -13.625018119812012
    5. ')
' → logprob: -13.875018119812012
    6. ']' → logprob: -14.375018119812012
    7. '),' → logprob: -14.375018119812012
    8. ' ' → logprob: -14.500018119812012
    9. '+' → logprob: -15.125018119812012
    10. ',' → logprob: -15.250018119812012

Token 30: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' y' (ID: 342)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3290541470050812
    2. ')' → logprob: -2.704054117202759
    3. '   ' → logprob: -2.829054117202759
    4. ' ' → logprob: -3.704054117202759
    5. '<|end|>' → logprob: -3.704054117202759
    6. ',' → logprob: -3.829054117202759
    7. '
' → logprob: -4.204054355621338
    8. '+
' → logprob: -4.454054355621338
    9. 'x' → logprob: -4.829054355621338
    10. '*' → logprob: -4.829054355621338

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0004711874935310334
    2. '=' → logprob: -7.750471115112305
    3. ' ' → logprob: -10.250471115112305
    4. '<|end|>' → logprob: -13.250471115112305
    5. ',' → logprob: -13.750471115112305
    6. ')' → logprob: -14.000471115112305
    7. '<|end|>' → logprob: -14.375471115112305
    8. '  ' → logprob: -15.375471115112305
    9. ' =)' → logprob: -15.750471115112305
    10. ' ,' → logprob: -16.250471115112305

Token 33: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3868809938430786
    2. ' int' → logprob: -1.1368809938430786
    3. ' x' → logprob: -13.136880874633789
    4. 'x' → logprob: -13.136880874633789
    5. '(int' → logprob: -13.386880874633789
    6. '=int' → logprob: -13.511880874633789
    7. '   ' → logprob: -14.511880874633789
    8. '<int' → logprob: -14.636880874633789
    9. '[int' → logprob: -14.761880874633789
    10. ' y' → logprob: -14.761880874633789

Token 34: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.00012642296496778727
    2. '(' → logprob: -9.000126838684082
    3. 'values' → logprob: -13.250126838684082
    4. ' (' → logprob: -14.250126838684082
    5. '(vals' → logprob: -15.875126838684082
    6. ' values' → logprob: -16.125125885009766
    7. '(x' → logprob: -16.750125885009766
    8. '(value' → logprob: -16.875125885009766
    9. '	values' → logprob: -17.375125885009766
    10. ' ' → logprob: -18.500125885009766

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.496052371105179e-05
    2. ')' → logprob: -9.37509536743164
    3. '1' → logprob: -11.75009536743164
    4. '0' → logprob: -15.25009536743164
    5. 'y' → logprob: -15.25009536743164
    6. ']' → logprob: -15.37509536743164
    7. '2' → logprob: -15.62509536743164
    8. '[
' → logprob: -15.62509536743164
    9. '[y' → logprob: -16.12509536743164
    10. '(' → logprob: -16.25009536743164

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010393599513918161
    2. '0' → logprob: -6.876039505004883
    3. ' ' → logprob: -12.251039505004883
    4. '])' → logprob: -13.751039505004883
    5. '   ' → logprob: -15.751039505004883
    6. '```' → logprob: -16.001039505004883
    7. ')' → logprob: -16.126039505004883
    8. ']' → logprob: -16.251039505004883
    9. '-' → logprob: -16.251039505004883
    10. '2' → logprob: -16.376039505004883

Token 37: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.375000953674316
    3. ']' → logprob: -16.25
    4. '}' → logprob: -16.5
    5. '))' → logprob: -16.5
    6. ' )' → logprob: -16.625
    7. '')' → logprob: -17.5
    8. '`)' → logprob: -18.125
    9. '）' → logprob: -18.125
    10. '),' → logprob: -18.625

Token 38: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3364508152008057
    2. ')' → logprob: -1.8364508152008057
    3. '\n' → logprob: -2.0864508152008057
    4. '<|end|>' → logprob: -2.3364508152008057
    5. '   ' → logprob: -2.4614508152008057
    6. '#' → logprob: -2.4614508152008057
    7. ' ' → logprob: -2.5864508152008057
    8. ' 
' → logprob: -3.5864508152008057
    9. ',' → logprob: -4.211450576782227
    10. '+' → logprob: -4.336450576782227

Token 39: ' res' (ID: 694)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.07719886302948
    2. 'i' → logprob: -2.2021989822387695
    3. '   ' → logprob: -2.2021989822387695
    4. '+' → logprob: -2.7021989822387695
    5. ')' → logprob: -2.8271989822387695
    6. '#' → logprob: -2.9521989822387695
    7. ',' → logprob: -3.0771989822387695
    8. '
' → logprob: -3.4521989822387695
    9. 'if' → logprob: -3.5771989822387695
    10. ' 
' → logprob: -3.7021989822387695

Token 40: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.666973888874054
    2. ' =' → logprob: -1.4169738292694092
    3. 'ult' → logprob: -1.9169738292694092
    4. 'u' → logprob: -2.541973829269409
    5. 'ults' → logprob: -4.541974067687988
    6. 'ul' → logprob: -5.916974067687988
    7. 'ultat' → logprob: -6.166974067687988
    8. '_' → logprob: -6.666974067687988
    9. 'ULT' → logprob: -7.166974067687988
    10. 'ulta' → logprob: -8.291974067687988

Token 41: ' ' (ID: 220)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.43274590373039246
    2. 'x' → logprob: -1.5577459335327148
    3. ' ' → logprob: -2.682745933532715
    4. '0' → logprob: -2.682745933532715
    5. ' []' → logprob: -6.932745933532715
    6. ' "' → logprob: -7.432745933532715
    7. '"' → logprob: -7.432745933532715
    8. '(x' → logprob: -8.057745933532715
    9. ' '' → logprob: -8.182745933532715
    10. ''' → logprob: -8.432745933532715

Token 42: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.21053649485111237
    2. '0' → logprob: -1.7105364799499512
    3. ' x' → logprob: -5.210536479949951
    4. ' ' → logprob: -6.835536479949951
    5. '[]' → logprob: -7.460536479949951
    6. 'max' → logprob: -8.21053695678711
    7. ''' → logprob: -8.21053695678711
    8. '"' → logprob: -8.21053695678711
    9. '(x' → logprob: -8.33553695678711
    10. 'abs' → logprob: -8.58553695678711

Token 43: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4224365949630737
    2. '   ' → logprob: -1.7974365949630737
    3. '<|end|>' → logprob: -1.7974365949630737
    4. '\n' → logprob: -2.0474367141723633
    5. ' ' → logprob: -2.6724367141723633
    6. ' for' → logprob: -3.0474367141723633
    7. '' → logprob: -3.4224367141723633
    8. ' 
' → logprob: -3.4224367141723633
    9. '\' → logprob: -3.4224367141723633
    10. 'for' → logprob: -3.7974367141723633

Token 44: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.49578234553337097
    2. '
' → logprob: -2.3707823753356934
    3. '<|end|>' → logprob: -2.6207823753356934
    4. 'i' → logprob: -2.7457823753356934
    5. '\n' → logprob: -3.1207823753356934
    6. ' ' → logprob: -3.4957823753356934
    7. ' for' → logprob: -3.6207823753356934
    8. '\' → logprob: -4.745782375335693
    9. '#' → logprob: -4.870782375335693
    10. '' → logprob: -4.870782375335693

Token 46: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5909357070922852
    2. ' i' → logprob: -0.8409357070922852
    3. ' _' → logprob: -4.465935707092285
    4. ' x' → logprob: -6.215935707092285
    5. ' y' → logprob: -7.215935707092285
    6. '_' → logprob: -7.590935707092285
    7. 'i' → logprob: -9.840935707092285
    8. ' range' → logprob: -10.465935707092285
    9. ' ‌' → logprob: -10.840935707092285
    10. '  ' → logprob: -11.090935707092285

Token 47: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.057746876031160355
    2. ' ' → logprob: -3.4327468872070312
    3. 'in' → logprob: -3.8077468872070312
    4. ',' → logprob: -7.307746887207031
    5. '_' → logprob: -8.432746887207031
    6. 'n' → logprob: -8.682746887207031
    7. '  ' → logprob: -9.057746887207031
    8. ' ,' → logprob: -9.182746887207031
    9. 'range' → logprob: -9.557746887207031
    10. ' i' → logprob: -9.682746887207031

Token 48: ' v' (ID: 323)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11476632207632065
    2. ' b' → logprob: -2.2397663593292236
    3. '<|end|>' → logprob: -6.4897661209106445
    4. ' ' → logprob: -7.8647661209106445
    5. '_b' → logprob: -10.989766120910645
    6. '_' → logprob: -11.364766120910645
    7. '<|end|>' → logprob: -12.114766120910645
    8. '>b' → logprob: -13.739766120910645
    9. '	b' → logprob: -14.114766120910645
    10. '```' → logprob: -14.739766120910645

Token 49: ' in' (ID: 306)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.2625296413898468
    2. ' in' → logprob: -1.6375296115875244
    3. 'alue' → logprob: -3.8875296115875244
    4. 'a' → logprob: -5.1375298500061035
    5. 'in' → logprob: -6.1375298500061035
    6. 'ales' → logprob: -6.5125298500061035
    7. ',' → logprob: -6.6375298500061035
    8. 'alu' → logprob: -6.6375298500061035
    9. 'als' → logprob: -6.7625298500061035
    10. 's' → logprob: -7.5125298500061035

Token 50: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.1266692578792572
    2. ' enumerate' → logprob: -2.75166916847229
    3. ' values' → logprob: -3.25166916847229
    4. ' [(' → logprob: -4.626669406890869
    5. ' map' → logprob: -6.001669406890869
    6. ' [' → logprob: -6.126669406890869
    7. 'values' → logprob: -8.376668930053711
    8. ' ' → logprob: -8.626668930053711
    9. ' []' → logprob: -8.626668930053711
    10. ' (' → logprob: -8.876668930053711

Token 51: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45204028487205505
    2. '(x' → logprob: -1.7020403146743774
    3. '(values' → logprob: -1.9520403146743774
    4. '(range' → logprob: -3.952040195465088
    5. '(y' → logprob: -4.202040195465088
    6. '(s' → logprob: -6.077040195465088
    7. '<|end|>' → logprob: -7.202040195465088
    8. '(a' → logprob: -7.577040195465088
    9. ' (' → logprob: -7.577040195465088
    10. '(xs' → logprob: -8.327040672302246

Token 52: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.41129398345947266
    2. '[x' → logprob: -1.2862939834594727
    3. 'range' → logprob: -3.4112939834594727
    4. '(x' → logprob: -3.7862939834594727
    5. '[' → logprob: -6.411293983459473
    6. '(range' → logprob: -6.536293983459473
    7. ' [' → logprob: -7.411293983459473
    8. ' range' → logprob: -8.036293983459473
    9. '   ' → logprob: -8.161293983459473
    10. ' x' → logprob: -8.411293983459473

Token 53: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1026839166879654
    2. ',y' → logprob: -2.4776840209960938
    3. ' ,' → logprob: -4.352684020996094
    4. ',x' → logprob: -7.477684020996094
    5. 'y' → logprob: -9.977684020996094
    6. ',v' → logprob: -10.352684020996094
    7. ' y' → logprob: -10.477684020996094
    8. ',
' → logprob: -10.602684020996094
    9. ' ' → logprob: -10.727684020996094
    10. ',

' → logprob: -11.602684020996094

Token 54: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.001642334507778287
    2. ',' → logprob: -7.126642227172852
    3. ' ],' → logprob: -7.501642227172852
    4. '],[' → logprob: -8.751642227172852
    5. ']' → logprob: -9.251642227172852
    6. '),' → logprob: -11.626642227172852
    7. ' ' → logprob: -12.501642227172852
    8. '   ' → logprob: -12.501642227172852
    9. ':],' → logprob: -12.501642227172852
    10. '-' → logprob: -13.126642227172852

Token 55: ' range' (ID: 3352)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.27568039298057556
    2. ' values' → logprob: -2.7756803035736084
    3. ' range' → logprob: -3.0256803035736084
    4. '[' → logprob: -3.1506803035736084
    5. 'values' → logprob: -3.6506803035736084
    6. '[v' → logprob: -4.0256805419921875
    7. '[l' → logprob: -4.4006805419921875
    8. 'range' → logprob: -4.9006805419921875
    9. '[x' → logprob: -5.2756805419921875
    10. ' l' → logprob: -5.9006805419921875

Token 56: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6286106983898208e-05
    2. '(len' → logprob: -11.500016212463379
    3. '(-' → logprob: -13.000016212463379
    4. '(
' → logprob: -13.125016212463379
    5. '(a' → logprob: -14.875016212463379
    6. '(s' → logprob: -15.250016212463379
    7. ' (' → logprob: -15.250016212463379
    8. '(

' → logprob: -15.500016212463379
    9. '(n' → logprob: -15.625016212463379
    10. '2' → logprob: -16.000017166137695

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.033062297850847244
    2. '1' → logprob: -3.783062219619751
    3. '10' → logprob: -5.15806245803833
    4. '100' → logprob: -7.15806245803833
    5. '3' → logprob: -7.28306245803833
    6. '5' → logprob: -7.65806245803833
    7. ' ' → logprob: -7.90806245803833
    8. '0' → logprob: -8.033061981201172
    9. 'len' → logprob: -8.283061981201172
    10. '4' → logprob: -8.658061981201172

Token 58: ')):
' (ID: 22530)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16281844675540924
    2. ')):' → logprob: -2.787818431854248
    3. '):' → logprob: -3.037818431854248
    4. ')' → logprob: -4.287818431854248
    5. '0' → logprob: -4.537818431854248
    6. ' ,' → logprob: -5.162818431854248
    7. ']):' → logprob: -6.412818431854248
    8. '))' → logprob: -6.412818431854248
    9. ' ' → logprob: -6.787818431854248
    10. '5' → logprob: -7.037818431854248

Token 59: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015419462695717812
    2. '):' → logprob: -4.6404194831848145
    3. ':
' → logprob: -5.8904194831848145
    4. ' :' → logprob: -6.8904194831848145
    5. ')' → logprob: -7.0154194831848145
    6. '   ' → logprob: -7.8904194831848145
    7. '):
' → logprob: -9.265419006347656
    8. '    ' → logprob: -9.390419006347656
    9. ',' → logprob: -9.640419006347656
    10. ' ' → logprob: -10.015419006347656

Token 60: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3914009928703308
    2. '<|end|>' → logprob: -2.8914010524749756
    3. '    ' → logprob: -3.0164010524749756
    4. ' if' → logprob: -3.1414010524749756
    5. '   ' → logprob: -3.3914010524749756
    6. ':' → logprob: -3.3914010524749756
    7. 'if' (adapté à ' if') → logprob: -3.5164010524749756
    8. '  ' → logprob: -4.3914008140563965
    9. ' :' → logprob: -4.3914008140563965
    10. ' (' → logprob: -5.0164008140563965

Token 61: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03393993526697159
    2. 'a' → logprob: -3.408939838409424
    3. ' ' → logprob: -8.533940315246582
    4. ' not' → logprob: -11.033940315246582
    5. ' ' → logprob: -11.158940315246582
    6. ' v' → logprob: -11.158940315246582
    7. '	a' → logprob: -11.658940315246582
    8. '(a' → logprob: -12.033940315246582
    9. ' x' → logprob: -12.283940315246582
    10. ' (' → logprob: -12.408940315246582

Token 62: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4724191129207611
    2. ' ==' → logprob: -1.7224191427230835
    3. ' %' → logprob: -2.347419023513794
    4. ' >=' → logprob: -3.597419023513794
    5. ' ' → logprob: -4.097419261932373
    6. ' <=' → logprob: -4.097419261932373
    7. '%' → logprob: -4.472419261932373
    8. '==' → logprob: -4.722419261932373
    9. ' <' → logprob: -4.972419261932373
    10. '>' → logprob: -4.972419261932373

Token 63: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3260960578918457
    2. ' ' → logprob: -1.4510960578918457
    3. '10' → logprob: -1.8260960578918457
    4. '1' → logprob: -2.4510960578918457
    5. 'v' → logprob: -2.8260960578918457
    6. '0' → logprob: -2.9510960578918457
    7. '3' → logprob: -3.4510960578918457
    8. '5' → logprob: -3.5760960578918457
    9. '100' → logprob: -3.7010960578918457
    10. ' v' → logprob: -3.9510960578918457

Token 64: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0269545316696167
    2. '2' → logprob: -1.6519545316696167
    3. '0' → logprob: -2.0269546508789062
    4. '1' → logprob: -2.6519546508789062
    5. 'v' → logprob: -2.6519546508789062
    6. '100' → logprob: -2.7769546508789062
    7. '3' → logprob: -3.4019546508789062
    8. '5' → logprob: -3.7769546508789062
    9. '20' → logprob: -4.526954650878906
    10. '50' → logprob: -4.901954650878906

Token 65: ' and' (ID: 326)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8627927303314209
    2. ':' → logprob: -1.112792730331421
    3. ' and' → logprob: -1.487792730331421
    4. 'and' → logprob: -4.73779296875
    5. ':
' → logprob: -4.73779296875
    6. '2' → logprob: -6.73779296875
    7. ' ' → logprob: -6.98779296875
    8. '1' → logprob: -7.23779296875
    9. '   ' → logprob: -7.23779296875
    10. '6' → logprob: -7.73779296875

Token 66: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6640039682388306
    2. ' a' → logprob: -1.2890039682388306
    3. 'a' → logprob: -2.914003849029541
    4. '10' → logprob: -2.914003849029541
    5. '2' → logprob: -3.164003849029541
    6. '3' → logprob: -4.164003849029541
    7. '1' → logprob: -4.539003849029541
    8. '100' → logprob: -5.039003849029541
    9. '5' → logprob: -5.164003849029541
    10. '4' → logprob: -5.664003849029541

Token 67: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.21123290061950684
    2. '<=' → logprob: -2.336232900619507
    3. '0' → logprob: -2.711232900619507
    4. ' ' → logprob: -4.461233139038086
    5. ' <' → logprob: -5.336233139038086
    6. '1' → logprob: -5.711233139038086
    7. '2' → logprob: -6.711233139038086
    8. '<' → logprob: -6.961233139038086
    9. ' ==' → logprob: -7.211233139038086
    10. '%' → logprob: -7.461233139038086

Token 68: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46376463770866394
    2. '10' → logprob: -1.9637646675109863
    3. '9' → logprob: -1.9637646675109863
    4. '3' → logprob: -3.2137646675109863
    5. '100' → logprob: -3.7137646675109863
    6. '5' → logprob: -4.963764667510986
    7. '2' → logprob: -5.463764667510986
    8. '6' → logprob: -5.963764667510986
    9. '99' → logprob: -5.963764667510986
    10. '4' → logprob: -6.338764667510986

Token 69: '3' (ID: 18)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.137539267539978
    2. '10' → logprob: -1.387539267539978
    3. '3' → logprob: -1.762539267539978
    4. '100' → logprob: -2.6375393867492676
    5. '5' → logprob: -2.8875393867492676
    6. '2' → logprob: -3.1375393867492676
    7. ' ' → logprob: -4.012539386749268
    8. '4' → logprob: -4.387539386749268
    9. '6' → logprob: -4.387539386749268
    10. '99' → logprob: -4.762539386749268

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005595633294433355
    2. ' and' → logprob: -5.630595684051514
    3. ' :' → logprob: -7.130595684051514
    4. '):' → logprob: -7.255595684051514
    5. ':
' → logprob: -8.255595207214355
    6. '<|end|>' → logprob: -9.380595207214355
    7. 'and' → logprob: -10.130595207214355
    8. '       ' → logprob: -10.255595207214355
    9. ')' → logprob: -11.005595207214355
    10. ',' → logprob: -11.505595207214355

Token 71: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2771108150482178
    2. '       ' → logprob: -1.9021108150482178
    3. '\n' → logprob: -3.2771108150482178
    4. '<|end|>' → logprob: -4.027111053466797
    5. ' ' → logprob: -4.402111053466797
    6. '\' → logprob: -5.277111053466797
    7. '               ' → logprob: -5.527111053466797
    8. 'res' → logprob: -6.277111053466797
    9. ' 
' → logprob: -6.527111053466797
    10. '   ' → logprob: -6.652111053466797

Token 72: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5822087526321411
    2. 'res' (adapté à ' res') → logprob: -0.8322087526321411
    3. ' ' → logprob: -6.582208633422852
    4. '               ' → logprob: -6.582208633422852
    5. '           ' → logprob: -6.957208633422852
    6. '       ' → logprob: -7.332208633422852
    7. '            ' → logprob: -7.457208633422852
    8. '    ' → logprob: -8.332208633422852
    9. '   ' → logprob: -8.457208633422852
    10. ' ' → logprob: -8.582208633422852

Token 73: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0551605150103569
    2. '+=' → logprob: -2.9301605224609375
    3. '+' → logprob: -9.555160522460938
    4. ' |=' → logprob: -9.555160522460938
    5. ' =' → logprob: -10.180160522460938
    6. ' ' → logprob: -11.180160522460938
    7. ' <<=' → logprob: -11.305160522460938
    8. '=' → logprob: -11.805160522460938
    9. ' +' → logprob: -11.930160522460938
    10. '    ' → logprob: -11.930160522460938

Token 74: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7537014484405518
    2. ' a' → logprob: -1.8787014484405518
    3. '1' → logprob: -2.3787014484405518
    4. '10' → logprob: -2.8787014484405518
    5. ' ' → logprob: -3.2537014484405518
    6. 'v' → logprob: -3.5037014484405518
    7. '2' → logprob: -3.6287014484405518
    8. '100' → logprob: -4.003701210021973
    9. '3' → logprob: -4.128701210021973
    10. ' v' → logprob: -4.253701210021973

Token 75: '4' (ID: 19)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38840290904045105
    2. '10' → logprob: -2.5134029388427734
    3. '1' → logprob: -3.2634029388427734
    4. '2' → logprob: -3.3884029388427734
    5. ' a' → logprob: -3.5134029388427734
    6. '3' → logprob: -3.6384029388427734
    7. '4' → logprob: -3.8884029388427734
    8. 'v' → logprob: -3.8884029388427734
    9. ' ' → logprob: -4.513402938842773
    10. '100' → logprob: -4.763402938842773

Token 76: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2122364640235901
    2. '-' → logprob: -1.9622364044189453
    3. '**' → logprob: -3.3372364044189453
    4. ' **' → logprob: -4.587236404418945
    5. '-v' → logprob: -5.712236404418945
    6. '-a' → logprob: -7.087236404418945
    7. '*' → logprob: -8.087236404418945
    8. ' ' → logprob: -8.212236404418945
    9. ')' → logprob: -10.087236404418945
    10. ' +' → logprob: -10.337236404418945

Token 77: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0022825265768915415
    2. ' a' → logprob: -6.127282619476318
    3. ')' → logprob: -10.12728214263916
    4. ')a' → logprob: -10.12728214263916
    5. 'v' → logprob: -12.75228214263916
    6. '[a' → logprob: -13.12728214263916
    7. '>a' → logprob: -13.25228214263916
    8. '	a' → logprob: -13.50228214263916
    9. '<|end|>' → logprob: -13.62728214263916
    10. ' ' → logprob: -13.62728214263916

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006776946131139994
    2. ' )' → logprob: -5.506776809692383
    3. ')**' → logprob: -6.506776809692383
    4. ')*' → logprob: -7.381776809692383
    5. '[' → logprob: -8.256776809692383
    6. '**' → logprob: -9.631776809692383
    7. '*' → logprob: -9.881776809692383
    8. ' +' → logprob: -10.506776809692383
    9. '))' → logprob: -10.881776809692383
    10. '')' → logprob: -11.506776809692383

Token 79: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.055100493133068085
    2. '   ' → logprob: -4.305100440979004
    3. '<|end|>' → logprob: -4.680100440979004
    4. '+' → logprob: -5.055100440979004
    5. ' ' → logprob: -5.305100440979004
    6. '*' → logprob: -6.055100440979004
    7. '```' → logprob: -6.055100440979004
    8. ' 
' → logprob: -6.180100440979004
    9. ' +' → logprob: -6.305100440979004
    10. '
' → logprob: -6.305100440979004

Token 80: ' pow' (ID: 9779)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.249796062707901
    2. '10' → logprob: -2.999796152114868
    3. ' (' → logprob: -3.374796152114868
    4. '[' → logprob: -3.374796152114868
    5. '2' → logprob: -3.624796152114868
    6. 'pow' → logprob: -4.249795913696289
    7. '3' → logprob: -4.874795913696289
    8. '100' → logprob: -4.874795913696289
    9. '5' → logprob: -5.249795913696289
    10. '4' → logprob: -5.249795913696289

Token 81: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019409235566854477
    2. '(a' → logprob: -4.0194091796875
    3. '((' → logprob: -7.3944091796875
    4. '(
' → logprob: -8.0194091796875
    5. '2' → logprob: -9.5194091796875
    6. 'a' → logprob: -9.6444091796875
    7. '(x' → logprob: -9.8944091796875
    8. ' (' → logprob: -10.7694091796875
    9. '(v' → logprob: -11.0194091796875
    10. '10' → logprob: -11.1444091796875

Token 82: '10' (ID: 702)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.5450365543365479
    2. '2' → logprob: -1.6700365543365479
    3. '(' → logprob: -1.7950365543365479
    4. '10' → logprob: -1.9200365543365479
    5. '3' → logprob: -2.170036554336548
    6. '6' → logprob: -2.545036554336548
    7. '4' → logprob: -3.795036554336548
    8. '5' → logprob: -4.045036315917969
    9. 'a' → logprob: -4.295036315917969
    10. '9' → logprob: -4.795036315917969

Token 83: ',' (ID: 11)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.23656271398067474
    2. ',' → logprob: -1.611562728881836
    3. 'v' → logprob: -4.986562728881836
    4. '**' → logprob: -5.986562728881836
    5. ',
' → logprob: -6.986562728881836
    6. ' ,' → logprob: -8.111562728881836
    7. ')' → logprob: -8.736562728881836
    8. ' v' → logprob: -8.861562728881836
    9. '7' → logprob: -10.611562728881836
    10. ')v' → logprob: -10.736562728881836

Token 84: '5' (ID: 20)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03925217315554619
    2. '1' → logprob: -3.914252281188965
    3. '2' → logprob: -4.914252281188965
    4. '4' → logprob: -5.289252281188965
    5. '3' → logprob: -5.664252281188965
    6. '5' → logprob: -6.414252281188965
    7. ' v' → logprob: -7.414252281188965
    8. '(' → logprob: -9.164252281188965
    9. '6' → logprob: -9.414252281188965
    10. ' ' → logprob: -9.664252281188965

Token 85: ')
' (ID: 446)
  Prédit: '-v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-v' → logprob: -0.6547940373420715
    2. 'v' → logprob: -2.4047939777374268
    3. '*v' → logprob: -2.5297939777374268
    4. ')' → logprob: -2.7797939777374268
    5. '-' → logprob: -2.7797939777374268
    6. '+' → logprob: -3.0297939777374268
    7. ' -' → logprob: -3.9047939777374268
    8. '6' → logprob: -3.9047939777374268
    9. '*' → logprob: -3.9047939777374268
    10. '2' → logprob: -4.029794216156006

Token 86: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' x' (ID: 1215)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.48315656185150146
    2. ' x' → logprob: -1.1081565618515015
    3. 'x' → logprob: -3.983156681060791
    4. 'res' → logprob: -4.108156681060791
    5. ' y' → logprob: -4.608156681060791
    6. ' ' → logprob: -5.608156681060791
    7. ' (' → logprob: -7.108156681060791
    8. ' len' → logprob: -7.358156681060791
    9. 'y' → logprob: -7.483156681060791
    10. '(' → logprob: -7.608156681060791

Token 89: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5017221570014954
    2. ' ==' → logprob: -1.6267220973968506
    3. ' <' → logprob: -2.7517220973968506
    4. '>' → logprob: -2.8767220973968506
    5. '==' → logprob: -3.2517220973968506
    6. '+' → logprob: -4.12672233581543
    7. ' !=' → logprob: -5.25172233581543
    8. '<' → logprob: -5.62672233581543
    9. ' ' → logprob: -5.75172233581543
    10. ' +' → logprob: -5.87672233581543

Token 90: ' ' (ID: 220)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5993905663490295
    2. ' y' → logprob: -0.9743905663490295
    3. ' ' → logprob: -2.9743905067443848
    4. '1' → logprob: -4.724390506744385
    5. '0' → logprob: -5.099390506744385
    6. '2' → logprob: -5.974390506744385
    7. '3' → logprob: -5.974390506744385
    8. '4' → logprob: -7.599390506744385
    9. '6' → logprob: -7.974390506744385
    10. '5' → logprob: -8.224390983581543

Token 91: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04260515049099922
    2. '1' → logprob: -4.042604923248291
    3. ' y' → logprob: -4.667604923248291
    4. '0' → logprob: -5.167604923248291
    5. '3' → logprob: -5.792604923248291
    6. '2' → logprob: -5.917604923248291
    7. ' ' → logprob: -6.792604923248291
    8. '5' → logprob: -7.417604923248291
    9. '4' → logprob: -7.667604923248291
    10. '10' → logprob: -8.41760540008545

Token 92: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4985733926296234
    2. ' and' → logprob: -0.9985734224319458
    3. 'and' → logprob: -4.248573303222656
    4. ' or' → logprob: -4.998573303222656
    5. ':
' → logprob: -6.248573303222656
    6. '0' → logprob: -7.498573303222656
    7. ' :' → logprob: -8.123573303222656
    8. '   ' → logprob: -9.748573303222656
    9. ',' → logprob: -10.123573303222656
    10. '    ' → logprob: -10.123573303222656

Token 93: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0007013569120317698
    2. 'y' → logprob: -7.750701427459717
    3. ' ' → logprob: -8.375700950622559
    4. ' (' → logprob: -11.375700950622559
    5. ' x' → logprob: -11.875700950622559
    6. ' ' → logprob: -12.125700950622559
    7. '(' → logprob: -12.750700950622559
    8. '  ' → logprob: -12.875700950622559
    9. '	y' → logprob: -12.875700950622559
    10. ' not' → logprob: -13.000700950622559

Token 94: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016990570351481438
    2. '==' → logprob: -4.141990661621094
    3. '<|end|>' → logprob: -7.641990661621094
    4. '_' → logprob: -9.016990661621094
    5. ' !=' → logprob: -9.016990661621094
    6. ' ' → logprob: -9.266990661621094
    7. ' >' → logprob: -9.641990661621094
    8. ' ' → logprob: -10.891990661621094
    9. '<|end|>' → logprob: -11.641990661621094
    10. '=' → logprob: -11.766990661621094

Token 95: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10423236340284348
    2. '1' → logprob: -2.3542323112487793
    3. '2' → logprob: -5.979232311248779
    4. '3' → logprob: -6.979232311248779
    5. '4' → logprob: -8.229232788085938
    6. '5' → logprob: -8.854232788085938
    7. '0' → logprob: -9.854232788085938
    8. '  ' → logprob: -10.479232788085938
    9. '<|end|>' → logprob: -10.854232788085938
    10. '6' → logprob: -11.041732788085938

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10757008194923401
    2. '3' → logprob: -2.732570171356201
    3. '2' → logprob: -3.607570171356201
    4. '4' → logprob: -5.607570171356201
    5. ' ' → logprob: -5.982570171356201
    6. '5' → logprob: -6.107570171356201
    7. '0' → logprob: -7.232570171356201
    8. '6' → logprob: -7.857570171356201
    9. '   ' → logprob: -9.670069694519043
    10. '7' → logprob: -10.170069694519043

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06199267506599426
    2. ':
' → logprob: -2.811992645263672
    3. ':

' → logprob: -11.936992645263672
    4. ':return' → logprob: -12.061992645263672
    5. '       ' → logprob: -12.811992645263672
    6. ' and' → logprob: -13.186992645263672
    7. ' :' → logprob: -13.436992645263672
    8. '<|end|>' → logprob: -13.811992645263672
    9. ' :
' → logprob: -13.936992645263672
    10. '):' → logprob: -13.936992645263672

Token 98: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2624346613883972
    2. '       ' → logprob: -2.012434720993042
    3. ':
' → logprob: -2.387434720993042
    4. '
' → logprob: -5.762434482574463
    5. '<|end|>' → logprob: -7.262434482574463
    6. ',' → logprob: -7.512434482574463
    7. ':return' → logprob: -8.387434959411621
    8. '   ' → logprob: -8.762434959411621
    9. '<|end|>' → logprob: -9.262434959411621
    10. '.' → logprob: -9.387434959411621

Token 99: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.13956208527088165
    2. ' res' → logprob: -3.0145621299743652
    3. '
' → logprob: -3.3895621299743652
    4. '   ' → logprob: -4.014562129974365
    5. '       ' → logprob: -4.264562129974365
    6. '           ' → logprob: -4.764562129974365
    7. 'return' → logprob: -5.764562129974365
    8. 'print' → logprob: -6.639562129974365
    9. '    
' → logprob: -8.139561653137207
    10. ' return' → logprob: -8.139561653137207

Token 100: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03977780044078827
    2. '+=' → logprob: -3.2897777557373047
    3. '+' → logprob: -7.664777755737305
    4. ' -=' → logprob: -7.664777755737305
    5. ' =' → logprob: -8.039777755737305
    6. ' ' → logprob: -8.414777755737305
    7. '=' → logprob: -8.914777755737305
    8. ' +' → logprob: -9.414777755737305
    9. '<|end|>' → logprob: -11.164777755737305
    10. ' *=' → logprob: -12.414777755737305

Token 101: ' res' (ID: 694)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8818911910057068
    2. ' ' → logprob: -1.5068912506103516
    3. '100' → logprob: -2.0068912506103516
    4. '999' → logprob: -3.2568912506103516
    5. 'pow' → logprob: -3.2568912506103516
    6. '10' → logprob: -3.8818912506103516
    7. '-' → logprob: -4.381891250610352
    8. '400' → logprob: -4.381891250610352
    9. '200' → logprob: -4.381891250610352
    10. '1' → logprob: -4.631891250610352

Token 102: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.585570752620697
    2. '+' → logprob: -1.0855708122253418
    3. ' -' → logprob: -3.335570812225342
    4. ' ' → logprob: -3.710570812225342
    5. '<|end|>' → logprob: -4.085570812225342
    6. ' *' → logprob: -4.335570812225342
    7. '-' → logprob: -5.210570812225342
    8. '*' → logprob: -5.335570812225342
    9. '0' → logprob: -5.960570812225342
    10. ' or' → logprob: -6.710570812225342

Token 103: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1413507461547852
    2. '100' → logprob: -1.6413507461547852
    3. 'pow' → logprob: -1.7663507461547852
    4. '500' → logprob: -3.141350746154785
    5. '999' → logprob: -3.391350746154785
    6. '400' → logprob: -3.641350746154785
    7. ' ' → logprob: -3.891350746154785
    8. 'int' → logprob: -3.891350746154785
    9. '10' → logprob: -3.891350746154785
    10. '200' → logprob: -4.141350746154785

Token 104: '4' (ID: 19)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8705279231071472
    2. '5' → logprob: -2.495527982711792
    3. '10' → logprob: -2.495527982711792
    4. '100' → logprob: -2.620527982711792
    5. '2' → logprob: -2.745527982711792
    6. '1' → logprob: -2.745527982711792
    7. '4' → logprob: -3.120527982711792
    8. '3' → logprob: -3.245527982711792
    9. '9' → logprob: -3.870527982711792
    10. ' ' → logprob: -4.120527744293213

Token 105: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1538010835647583
    2. '-' → logprob: -2.5288009643554688
    3. ' *' → logprob: -3.1538009643554688
    4. '*' → logprob: -4.528800964355469
    5. '0' → logprob: -5.653800964355469
    6. '000' → logprob: -6.278800964355469
    7. ')' → logprob: -7.028800964355469
    8. '00' → logprob: -7.028800964355469
    9. '5' → logprob: -7.403800964355469
    10. ' ' → logprob: -7.903800964355469

Token 106: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.36458903551101685
    2. ' pow' → logprob: -1.614588975906372
    3. '10' → logprob: -2.614588975906372
    4. ' ' → logprob: -3.489588975906372
    5. '(pow' → logprob: -6.739589214324951
    6. '100' → logprob: -7.489589214324951
    7. '5' → logprob: -8.864588737487793
    8. 'int' → logprob: -8.864588737487793
    9. '9' → logprob: -9.114588737487793
    10. ' -' → logprob: -9.489588737487793

Token 107: '10' (ID: 702)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.04653969779610634
    2. '10' → logprob: -3.171539783477783
    3. ' pow' → logprob: -6.171539783477783
    4. '100' → logprob: -7.671539783477783
    5. 'int' → logprob: -7.671539783477783
    6. ' ' → logprob: -8.171539306640625
    7. '(pow' → logprob: -9.421539306640625
    8. '5' → logprob: -10.171539306640625
    9. '9' → logprob: -10.796539306640625
    10. '999' → logprob: -10.921539306640625

Token 108: '**' (ID: 410)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.001941130612976849
    2. '4' → logprob: -6.876941204071045
    3. '**' → logprob: -7.376941204071045
    4. ' ' → logprob: -8.751940727233887
    5. '6' → logprob: -9.876940727233887
    6. ',' → logprob: -10.126940727233887
    7. '+' → logprob: -12.126940727233887
    8. '```' → logprob: -12.126940727233887
    9. '05' → logprob: -12.626940727233887
    10. '   ' → logprob: -12.626940727233887

Token 109: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00928683951497078
    2. '6' → logprob: -5.009286880493164
    3. '4' → logprob: -6.009286880493164
    4. '7' → logprob: -10.009286880493164
    5. '3' → logprob: -10.134286880493164
    6. '2' → logprob: -12.009286880493164
    7. '1' → logprob: -12.509286880493164
    8. '0' → logprob: -12.634286880493164
    9. ' ' → logprob: -12.884286880493164
    10. '8' → logprob: -12.884286880493164

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006497674621641636
    2. ' )' → logprob: -8.250649452209473
    3. '+' → logprob: -9.250649452209473
    4. '-' → logprob: -9.250649452209473
    5. '0' → logprob: -9.500649452209473
    6. '*' → logprob: -11.000649452209473
    7. ' -' → logprob: -11.000649452209473
    8. ' +' → logprob: -11.500649452209473
    9. ')+' → logprob: -11.500649452209473
    10. ')
' → logprob: -11.625649452209473

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01145566999912262
    2. '<|end|>' → logprob: -5.386455535888672
    3. '    
' → logprob: -6.011455535888672
    4. ' ' → logprob: -6.511455535888672
    5. '
' → logprob: -7.011455535888672
    6. ')' → logprob: -7.261455535888672
    7. ' 
' → logprob: -8.261455535888672
    8. '\n' → logprob: -8.386455535888672
    9. '\' → logprob: -8.886455535888672
    10. '    ' → logprob: -9.511455535888672

Token 112: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010739225894212723
    2. '<|end|>' → logprob: -4.885739326477051
    3. '
' → logprob: -6.010739326477051
    4. '    
' → logprob: -8.26073932647705
    5. ')' → logprob: -9.38573932647705
    6. ' ' → logprob: -9.76073932647705
    7. 'return' → logprob: -9.88573932647705
    8. '```' → logprob: -10.13573932647705
    9. '<|end|>' → logprob: -10.26073932647705
    10. ' return' → logprob: -10.51073932647705

Token 113: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.25195586681365967
    2. '(' → logprob: -1.5019558668136597
    3. '('' → logprob: -10.87695598602295
    4. ' (' → logprob: -12.37695598602295
    5. '()' → logprob: -13.87695598602295
    6. '("("' → logprob: -14.12695598602295
    7. '(
' → logprob: -14.50195598602295
    8. '((' → logprob: -15.50195598602295
    9. '(f' → logprob: -15.62695598602295
    10. 'res' → logprob: -15.75195598602295

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.000004768371582
    4. '))' → logprob: -16.3750057220459
    5. '`)' → logprob: -16.3750057220459
    6. ')`' → logprob: -16.8750057220459
    7. '   ' → logprob: -17.1250057220459
    8. ')#' → logprob: -17.6250057220459
    9. '')' → logprob: -17.8750057220459
    10. '**' → logprob: -18.1250057220459

Token 115: 'main' (ID: 7731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7377610206604004
    2. '
' → logprob: -1.2377610206604004
    3. '<|end|>' → logprob: -1.7377610206604004
    4. '\n' → logprob: -4.4877610206604
    5. '#' → logprob: -4.7377610206604
    6. ':' → logprob: -4.8627610206604
    7. ' ' → logprob: -4.8627610206604
    8. '```' → logprob: -5.1127610206604
    9. '[' → logprob: -5.7377610206604
    10. 'x' → logprob: -6.2377610206604

Token 116: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004655591677874327
    2. '(' → logprob: -5.379655361175537
    3. '()
' → logprob: -12.004655838012695
    4. '().' → logprob: -12.129655838012695
    5. '```' → logprob: -12.129655838012695
    6. '.' → logprob: -12.504655838012695
    7. '()`' → logprob: -13.129655838012695
    8. ')' → logprob: -13.129655838012695
    9. '`()' → logprob: -13.254655838012695
    10. '()

' → logprob: -13.504655838012695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 114
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 86
Précision stricte (1ère position): 29.82%
Précision adaptée (1ère position): 31.58%
Précision (top 10): 75.44%
================================================================================
