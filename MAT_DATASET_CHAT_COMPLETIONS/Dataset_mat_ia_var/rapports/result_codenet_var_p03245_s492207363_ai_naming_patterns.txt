================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_point_count = int(input())
input_point_list = [[int(coord) for coord in input().split()] for _ in range(input_point_count)]

coordinate_mod2_reference = (input_point_list[0][0] + input_point_list[0][1]) % 2
for current_x, current_y in input_point_list:
    if (current_x + current_y) % 2 != coordinate_mod2_reference:
        print(-1)
        exit()

if coordinate_mod2_reference == 1:
    move_count = 31
    move_lengths = [2 ** i for i in range(move_count)]
    print(move_count)
    print(" ".join(str(move_length) for move_length in move_lengths))
else:
    move_count = 32
    move_lengths = [1] + [2 ** i for i in range(31)]
    print(move_count)
    print(" ".join(str(move_length) for move_length in move_lengths))

for target_x, target_y in input_point_list:
    x_value = target_x
    y_value = target_y
    if coordinate_mod2_reference == 0:
        x_value -= 1
        print("R", end="")
    coordinate_sum = x_value + y_value
    coordinate_diff = x_value - y_value
    bit_matrix = [[0] * 31 for _ in range(2)]
    if coordinate_sum < 0:
        bit_matrix[0] = [1] * 31
        bit_matrix[0][30] = 0
    else:
        bit_matrix[0][30] = 1
    if coordinate_diff < 0:
        bit_matrix[1] = [1] * 31
        bit_matrix[1][30] = 0
    else:
        bit_matrix[1][30] = 1
    for bit_index in range(30):
        if coordinate_sum >= 0 and abs(coordinate_sum) // 2 >> bit_index & 1:
            bit_matrix[0][bit_index] = 1
        if coordinate_sum < 0 and abs(coordinate_sum) // 2 >> bit_index & 1:
            bit_matrix[0][bit_index] = 0
        if coordinate_diff >= 0 and abs(coordinate_diff) // 2 >> bit_index & 1:
            bit_matrix[1][bit_index] = 1
        if coordinate_diff < 0 and abs(coordinate_diff) // 2 >> bit_index & 1:
            bit_matrix[1][bit_index] = 0
    for horizontal_bit, vertical_bit in zip(bit_matrix[0], bit_matrix[1]):
        if horizontal_bit == 1 and vertical_bit == 1:
            print("R", end="")
        elif horizontal_bit == 0 and vertical_bit == 0:
            print("L", end="")
        elif horizontal_bit == 1 and vertical_bit == 0:
            print("U", end="")
        elif horizontal_bit == 0 and vertical_bit == 1:
            print("D", end="")
    print("")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_point' (ID: 15466)
  → Token d'amorce (pas de prédiction)

Token 2: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06441020220518112
    2. '=' → logprob: -3.5644102096557617
    3. ')' → logprob: -4.314410209655762
    4. '[' → logprob: -4.689410209655762
    5. '```' → logprob: -5.064410209655762
    6. '.' → logprob: -7.064410209655762
    7. ' =' → logprob: -7.189410209655762
    8. '(' → logprob: -7.439410209655762
    9. '+' → logprob: -8.189410209655762
    10. 's' → logprob: -8.314410209655762

Token 4: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008986563421785831
    2. '10' → logprob: -5.508986473083496
    3. '0' → logprob: -5.633986473083496
    4. '32' → logprob: -7.383986473083496
    5. '20' → logprob: -8.883986473083496
    6. ' len' → logprob: -9.133986473083496
    7. '4' → logprob: -9.258986473083496
    8. '100' → logprob: -9.258986473083496
    9. '1' → logprob: -9.633986473083496
    10. '5' → logprob: -9.883986473083496

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006982576451264322
    2. '('' → logprob: -8.87569808959961
    3. ''' → logprob: -9.25069808959961
    4. '()' → logprob: -9.37569808959961
    5. '(input' → logprob: -9.50069808959961
    6. ' ' → logprob: -9.75069808959961
    7. '```' → logprob: -9.87569808959961
    8. ' (' → logprob: -10.25069808959961
    9. '("("' → logprob: -10.75069808959961
    10. '32' → logprob: -10.87569808959961

Token 6: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10499422997236252
    2. '(' → logprob: -2.479994297027588
    3. '()' → logprob: -4.604994297027588
    4. '())' → logprob: -5.229994297027588
    5. '))' → logprob: -8.10499382019043
    6. '')' → logprob: -9.47999382019043
    7. '(
' → logprob: -10.47999382019043
    8. '('' → logprob: -10.60499382019043
    9. '")' → logprob: -10.60499382019043
    10. '`)' → logprob: -10.97999382019043

Token 7: 'input' (ID: 2586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4115688800811768
    2. 'for' → logprob: -1.6615688800811768
    3. 'if' → logprob: -2.1615688800811768
    4. '#' → logprob: -2.6615688800811768
    5. '.' → logprob: -2.9115688800811768
    6. 'print' → logprob: -2.9115688800811768
    7. 'points' → logprob: -3.0365688800811768
    8. '\n' → logprob: -3.4115688800811768
    9. '*' → logprob: -3.5365688800811768
    10. '>' → logprob: -4.036568641662598

Token 8: '_point' (ID: 15466)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42114779353141785
    2. '_point' → logprob: -1.4211478233337402
    3. '_points' → logprob: -2.7961478233337402
    4. '(' → logprob: -3.6711478233337402
    5. '_line' → logprob: -5.17114782333374
    6. '('_' → logprob: -6.29614782333374
    7. '("_' → logprob: -6.42114782333374
    8. '_data' → logprob: -7.54614782333374
    9. '_space' → logprob: -7.54614782333374
    10. '()' → logprob: -7.67114782333374

Token 9: '_list' (ID: 4162)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.4654006063938141
    2. '_s' → logprob: -1.7154005765914917
    3. 's' → logprob: -1.8404005765914917
    4. '_' → logprob: -3.4654006958007812
    5. '_counts' → logprob: -6.465400695800781
    6. '_counter' → logprob: -9.840400695800781
    7. '<|end|>' → logprob: -9.965400695800781
    8. ' _' → logprob: -10.215400695800781
    9. '_c' → logprob: -10.465400695800781
    10. '_points' → logprob: -10.590400695800781

Token 10: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5074323415756226
    2. '[' → logprob: -1.0074323415756226
    3. '.append' → logprob: -4.257432460784912
    4. '_' → logprob: -5.132432460784912
    5. ' =' → logprob: -6.132432460784912
    6. '[:]' → logprob: -6.382432460784912
    7. '.setdefault' → logprob: -6.632432460784912
    8. ')' → logprob: -6.632432460784912
    9. '[]' → logprob: -6.882432460784912
    10. '```' → logprob: -7.007432460784912

Token 11: ' [[' (ID: 9237)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.016585227102041245
    2. '[]' → logprob: -4.266585350036621
    3. ' [' → logprob: -6.516585350036621
    4. 'list' → logprob: -7.891585350036621
    5. ' list' → logprob: -8.266585350036621
    6. '[' → logprob: -8.516585350036621
    7. '[input' → logprob: -9.891585350036621
    8. ' ' → logprob: -10.266585350036621
    9. '[list' → logprob: -12.141585350036621
    10. '[int' → logprob: -12.141585350036621

Token 12: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.15886588394641876
    2. '0' → logprob: -2.4088659286499023
    3. 'float' → logprob: -2.9088659286499023
    4. 'input' → logprob: -7.283865928649902
    5. ']' → logprob: -7.658865928649902
    6. ']int' → logprob: -8.408865928649902
    7. 'list' → logprob: -8.533865928649902
    8. ' float' → logprob: -8.908865928649902
    9. ' int' → logprob: -8.908865928649902
    10. 'map' → logprob: -9.283865928649902

Token 13: '(coord' (ID: 151575)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2779802978038788
    2. '(' → logprob: -1.7779803276062012
    3. '(x' → logprob: -2.652980327606201
    4. '()' → logprob: -7.152980327606201
    5. ']' → logprob: -7.777980327606201
    6. '()]' → logprob: -7.777980327606201
    7. '(i' → logprob: -8.277979850769043
    8. '(user' → logprob: -8.527979850769043
    9. '(token' → logprob: -8.527979850769043
    10. 'input' → logprob: -8.527979850769043

Token 14: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014316666638478637
    2. '),' → logprob: -7.876431465148926
    3. ')]' → logprob: -8.001431465148926
    4. '(x' → logprob: -8.376431465148926
    5. '())' → logprob: -8.876431465148926
    6. '(input' → logprob: -9.126431465148926
    7. '[' → logprob: -10.251431465148926
    8. '(' → logprob: -10.501431465148926
    9. '(token' → logprob: -10.626431465148926
    10. '(i' → logprob: -10.876431465148926

Token 15: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4704117178916931
    2. 'for' → logprob: -1.095411777496338
    3. ' for' → logprob: -3.595411777496338
    4. '(x' → logprob: -5.345411777496338
    5. ']' → logprob: -5.720411777496338
    6. '()' → logprob: -6.095411777496338
    7. ')]' → logprob: -6.845411777496338
    8. '),' → logprob: -7.595411777496338
    9. ',' → logprob: -7.595411777496338
    10. '(' → logprob: -8.34541130065918

Token 16: ' coord' (ID: 25819)
  Prédit: ' coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coord' → logprob: -0.05517777428030968
    2. 'coord' → logprob: -3.180177688598633
    3. ' input' → logprob: -4.555177688598633
    4. ' coordinate' → logprob: -7.305177688598633
    5. 'input' → logprob: -7.555177688598633
    6. '_' → logprob: -8.805177688598633
    7. 'coordinate' → logprob: -9.555177688598633
    8. ' _' → logprob: -9.930177688598633
    9. ' coorden' → logprob: -9.930177688598633
    10. ' range' → logprob: -10.805177688598633

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016044458374381065
    2. 'in' → logprob: -4.141044616699219
    3. '<|end|>' → logprob: -12.141044616699219
    4. ')' → logprob: -14.141044616699219
    5. '	in' → logprob: -14.141044616699219
    6. ' ' → logprob: -14.516044616699219
    7. 'In' → logprob: -14.641044616699219
    8. '<|end|>' → logprob: -14.641044616699219
    9. 'input' → logprob: -15.266044616699219
    10. 'to' → logprob: -15.391044616699219

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022716462612152
    2. ' input' → logprob: -1.9102271795272827
    3. '(input' → logprob: -13.535226821899414
    4. '=input' → logprob: -14.285226821899414
    5. '<input' → logprob: -15.410226821899414
    6. ' ' → logprob: -15.410226821899414
    7. 'range' → logprob: -16.035226821899414
    8. '	input' → logprob: -16.410226821899414
    9. '[input' → logprob: -16.535226821899414
    10. ',input' → logprob: -16.660226821899414

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1124681606888771
    2. '()' → logprob: -2.3624682426452637
    3. '_point' → logprob: -5.237468242645264
    4. '(' → logprob: -5.612468242645264
    5. '()]' → logprob: -6.362468242645264
    6. '(_' → logprob: -7.737468242645264
    7. '()[' → logprob: -7.862468242645264
    8. '("_' → logprob: -8.737467765808105
    9. '('_' → logprob: -8.737467765808105
    10. '_points' → logprob: -9.862467765808105

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015833048382773995
    2. 'strip' → logprob: -6.501583099365234
    3. 'rstrip' → logprob: -9.626583099365234
    4. ' split' → logprob: -11.126583099365234
    5. 'spl' → logprob: -16.001583099365234
    6. '(split' → logprob: -16.376583099365234
    7. 'replace' → logprob: -16.876583099365234
    8. 's' → logprob: -17.126583099365234
    9. ' strip' → logprob: -17.251583099365234
    10. '.split' → logprob: -19.001583099365234

Token 21: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.048914238810539246
    2. '()' → logprob: -3.0489141941070557
    3. '('' → logprob: -8.798913955688477
    4. '())' → logprob: -9.173913955688477
    5. '(' → logprob: -9.798913955688477
    6. '()],' → logprob: -11.673913955688477
    7. '()))' → logprob: -13.173913955688477
    8. '("' → logprob: -13.173913955688477
    9. '()]
' → logprob: -13.798913955688477
    10. '()}' → logprob: -14.673913955688477

Token 22: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018862803699448705
    2. '()]' → logprob: -7.626886367797852
    3. ' for' → logprob: -7.876886367797852
    4. ']]' → logprob: -8.376886367797852
    5. 'for' → logprob: -8.501886367797852
    6. ' ]' → logprob: -8.876886367797852
    7. '   ' → logprob: -9.001886367797852
    8. '])' → logprob: -9.876886367797852
    9. '],' → logprob: -9.876886367797852
    10. ')]' → logprob: -10.001886367797852

Token 23: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018511371687054634
    2. '_' → logprob: -4.7685112953186035
    3. ' _' → logprob: -4.7685112953186035
    4. '_range' → logprob: -6.8935112953186035
    5. 'range' → logprob: -8.143511772155762
    6. ' ' → logprob: -10.268511772155762
    7. '	range' → logprob: -12.268511772155762
    8. ' xrange' → logprob: -12.518511772155762
    9. ' in' → logprob: -13.018511772155762
    10. ' i' → logprob: -13.393511772155762

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017741884803399444
    2. 'in' → logprob: -6.376774311065674
    3. ' ' → logprob: -9.751773834228516
    4. 'range' → logprob: -11.626773834228516
    5. ' range' → logprob: -12.626773834228516
    6. '  ' → logprob: -14.001773834228516
    7. '_' → logprob: -16.001773834228516
    8. '<|end|>' → logprob: -16.126773834228516
    9. 'import' → logprob: -16.251773834228516
    10. '	in' → logprob: -16.251773834228516

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132626414299011
    2. 'range' → logprob: -1.313262701034546
    3. '	range' → logprob: -14.813262939453125
    4. '(range' → logprob: -15.438262939453125
    5. '_range' → logprob: -16.313262939453125
    6. 'rang' → logprob: -16.438262939453125
    7. ' ' → logprob: -16.813262939453125
    8. '.range' → logprob: -17.313262939453125
    9. 'input' → logprob: -17.313262939453125
    10. ' ran' → logprob: -17.438262939453125

Token 26: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0181878749281168
    2. '(' → logprob: -4.018187999725342
    3. 'input' → logprob: -10.393187522888184
    4. ' (' → logprob: -12.393187522888184
    5. ' input' → logprob: -12.893187522888184
    6. '(in' → logprob: -15.393187522888184
    7. '(
' → logprob: -15.768187522888184
    8. '(int' → logprob: -15.893187522888184
    9. '(len' → logprob: -16.5181884765625
    10. '(

' → logprob: -16.8931884765625

Token 27: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.9146995327901095e-05
    2. '_points' → logprob: -11.500019073486328
    3. '_count' → logprob: -12.750019073486328
    4. '(' → logprob: -13.375019073486328
    5. '_' → logprob: -13.625019073486328
    6. '_POINT' → logprob: -13.875019073486328
    7. '_Point' → logprob: -14.250019073486328
    8. ')' → logprob: -14.750019073486328
    9. '()' → logprob: -14.875019073486328
    10. '(_' → logprob: -15.750019073486328

Token 28: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.7120533811976202e-05
    2. ')]' → logprob: -12.250017166137695
    3. ')' → logprob: -12.625017166137695
    4. 'count' → logprob: -13.000017166137695
    5. '_' → logprob: -13.125017166137695
    6. ')_' → logprob: -13.375017166137695
    7. ')])' → logprob: -13.625017166137695
    8. '_)' → logprob: -14.500017166137695
    9. '_cnt' → logprob: -14.875017166137695
    10. '_list' → logprob: -15.500017166137695

Token 29: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.047134305234067e-05
    2. ')' → logprob: -11.125030517578125
    3. ']' → logprob: -11.500030517578125
    4. ')])' → logprob: -12.875030517578125
    5. '])]' → logprob: -13.500030517578125
    6. '])' → logprob: -15.000030517578125
    7. ')],' → logprob: -15.000030517578125
    8. '')]' → logprob: -15.500030517578125
    9. ' )' → logprob: -15.500030517578125
    10. '))' → logprob: -15.625030517578125

Token 30: 'coordinate' (ID: 140563)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4077407121658325
    2. '.' → logprob: -1.6577407121658325
    3. 'max' → logprob: -1.7827407121658325
    4. 'n' → logprob: -2.782740592956543
    5. '#' → logprob: -2.907740592956543
    6. 's' → logprob: -3.032740592956543
    7. 'result' → logprob: -3.157740592956543
    8. 'm' → logprob: -3.282740592956543
    9. 'p' → logprob: -3.407740592956543
    10. 'conv' → logprob: -4.032740592956543

Token 31: '_mod' (ID: 15325)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5477357506752014
    2. '_s' → logprob: -0.9227357506752014
    3. '_' → logprob: -4.172735691070557
    4. '_sum' → logprob: -6.297735691070557
    5. '_count' → logprob: -6.422735691070557
    6. '_list' → logprob: -6.422735691070557
    7. '_x' → logprob: -7.672735691070557
    8. '_range' → logprob: -7.922735691070557
    9. '_counts' → logprob: -7.922735691070557
    10. '_system' → logprob: -8.672736167907715

Token 32: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3697110414505005
    2. '_' → logprob: -2.369710922241211
    3. ' =' → logprob: -2.369710922241211
    4. 'ulus' → logprob: -2.869710922241211
    5. '_sum' → logprob: -4.619710922241211
    6. '_map' → logprob: -4.744710922241211
    7. '[' → logprob: -4.869710922241211
    8. '_value' → logprob: -5.119710922241211
    9. 'ification' → logprob: -5.619710922241211
    10. '_s' → logprob: -5.619710922241211

Token 33: '_reference' (ID: 61118)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06356238573789597
    2. '=' → logprob: -2.9385623931884766
    3. 's' → logprob: -5.188562393188477
    4. '[' → logprob: -6.438562393188477
    5. '_' → logprob: -7.063562393188477
    6. '[]' → logprob: -9.313562393188477
    7. ' ' → logprob: -9.438562393188477
    8. '_counts' → logprob: -9.563562393188477
    9. '=[]' → logprob: -9.813562393188477
    10. '_s' → logprob: -10.063562393188477

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013303052634000778
    2. '=' → logprob: -4.388303279876709
    3. '[' → logprob: -8.01330280303955
    4. ' ' → logprob: -8.38830280303955
    5. '[:]' → logprob: -9.38830280303955
    6. 's' → logprob: -9.88830280303955
    7. '_' → logprob: -10.38830280303955
    8. ' =[' → logprob: -11.26330280303955
    9. ',' → logprob: -11.63830280303955
    10. '[]' → logprob: -12.01330280303955

Token 35: ' (' (ID: 350)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3743271827697754
    2. '[input' → logprob: -1.7493271827697754
    3. '[' → logprob: -2.1243271827697754
    4. ' []' → logprob: -5.249327182769775
    5. ' [[' → logprob: -5.374327182769775
    6. '[]' → logprob: -5.749327182769775
    7. '[[' → logprob: -6.124327182769775
    8. ' [[]' → logprob: -7.374327182769775
    9. 'input' → logprob: -7.499327182769775
    10. ' input' → logprob: -7.874327182769775

Token 36: 'input' (ID: 2586)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8101447224617004
    2. 'input' → logprob: -0.9351447224617004
    3. ' input' → logprob: -2.9351446628570557
    4. ' ' → logprob: -3.4351446628570557
    5. '1' → logprob: -3.5601446628570557
    6. ')' → logprob: -3.6851446628570557
    7. 'x' → logprob: -5.685144901275635
    8. '(input' → logprob: -6.060144901275635
    9. ' (' → logprob: -6.185144901275635
    10. ' x' → logprob: -6.310144901275635

Token 37: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.8362910151481628
    2. '().' → logprob: -1.3362910747528076
    3. '()' → logprob: -1.4612910747528076
    4. '()[' → logprob: -3.7112910747528076
    5. '())' → logprob: -4.0862908363342285
    6. ')' → logprob: -4.0862908363342285
    7. '_points' → logprob: -5.0862908363342285
    8. ')_' → logprob: -6.3362908363342285
    9. '[' → logprob: -6.7112908363342285
    10. '_' → logprob: -7.3362908363342285

Token 38: '_list' (ID: 4162)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.08046987652778625
    2. '_list' → logprob: -2.955469846725464
    3. '[' → logprob: -3.830469846725464
    4. ')' → logprob: -6.580470085144043
    5. '[count' → logprob: -7.455470085144043
    6. '[i' → logprob: -7.955470085144043
    7. '%' → logprob: -8.330470085144043
    8. '_mod' → logprob: -8.705470085144043
    9. 'count' → logprob: -8.830470085144043
    10. ')[' → logprob: -8.955470085144043

Token 39: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00834742747247219
    2. '[-' → logprob: -4.883347511291504
    3. ')' → logprob: -8.258347511291504
    4. '[i' → logprob: -8.633347511291504
    5. ')[' → logprob: -9.133347511291504
    6. ' [' → logprob: -9.508347511291504
    7. '%' → logprob: -11.133347511291504
    8. '-' → logprob: -11.508347511291504
    9. '][' → logprob: -11.758347511291504
    10. '[len' → logprob: -12.008347511291504

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004012745805084705
    2. '-' → logprob: -5.629012584686279
    3. ' ' → logprob: -8.004013061523438
    4. ' -' → logprob: -9.754013061523438
    5. '1' → logprob: -11.879013061523438
    6. '][' → logprob: -13.004013061523438
    7. '])' → logprob: -13.316513061523438
    8. '   ' → logprob: -13.441513061523438
    9. '[' → logprob: -13.566513061523438
    10. ')' → logprob: -14.129013061523438

Token 41: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3198029696941376
    2. '[' → logprob: -1.56980299949646
    3. ']' → logprob: -2.81980299949646
    4. '])' → logprob: -5.944802761077881
    5. ']%' → logprob: -6.819802761077881
    6. ')' → logprob: -7.069802761077881
    7. ')[' → logprob: -7.194802761077881
    8. ' ][' → logprob: -8.819803237915039
    9. ')][' → logprob: -9.444803237915039
    10. '%' → logprob: -9.569803237915039

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007774694240652025
    2. ']' → logprob: -7.500777244567871
    3. ' ' → logprob: -9.500777244567871
    4. '])' → logprob: -9.875777244567871
    5. '1' → logprob: -10.375777244567871
    6. ')' → logprob: -10.500777244567871
    7. ':' → logprob: -11.375777244567871
    8. ':]' → logprob: -11.875777244567871
    9. '   ' → logprob: -12.750777244567871
    10. ' :' → logprob: -13.125777244567871

Token 43: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009186798706650734
    2. ']%' → logprob: -5.259186744689941
    3. ' ]' → logprob: -6.009186744689941
    4. '+' → logprob: -7.759186744689941
    5. '])' → logprob: -8.259186744689941
    6. ')' → logprob: -8.634186744689941
    7. '%' → logprob: -8.634186744689941
    8. ']+' → logprob: -8.759186744689941
    9. ' +' → logprob: -8.884186744689941
    10. ' %' → logprob: -10.134186744689941

Token 44: ' +' (ID: 659)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4605344831943512
    2. '%' → logprob: -1.0855344533920288
    3. ' +' → logprob: -4.085534572601318
    4. '+' → logprob: -4.835534572601318
    5. ')' → logprob: -5.335534572601318
    6. ' ' → logprob: -7.210534572601318
    7. ')%' → logprob: -7.960534572601318
    8. ' )' → logprob: -8.21053409576416
    9. '-' → logprob: -8.83553409576416
    10. ' -' → logprob: -9.33553409576416

Token 45: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10022833943367004
    2. 'input' → logprob: -2.3502283096313477
    3. ' ' → logprob: -11.475228309631348
    4. '  ' → logprob: -12.975228309631348
    5. '=input' → logprob: -13.600228309631348
    6. '(input' → logprob: -13.725228309631348
    7. '1' → logprob: -14.100228309631348
    8. '	input' → logprob: -14.100228309631348
    9. ',input' → logprob: -14.225228309631348
    10. '   ' → logprob: -14.475228309631348

Token 46: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.0683535037969705e-05
    2. '_' → logprob: -13.37501049041748
    3. '_points' → logprob: -13.37501049041748
    4. ']_' → logprob: -13.75001049041748
    5. '_POINT' → logprob: -14.50001049041748
    6. '_question' → logprob: -14.50001049041748
    7. '_token' → logprob: -14.50001049041748
    8. 'point' → logprob: -14.62501049041748
    9. '_Point' → logprob: -14.62501049041748
    10. ')_' → logprob: -14.75001049041748

Token 47: '_list' (ID: 4162)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -5.383526149671525e-05
    2. '_list' → logprob: -9.875053405761719
    3. 'point' → logprob: -13.375053405761719
    4. '_count' → logprob: -14.625053405761719
    5. '_points' → logprob: -15.625053405761719
    6. '[' → logprob: -16.75005340576172
    7. 'Point' → logprob: -16.87505340576172
    8. '_' → logprob: -17.37505340576172
    9. '1' → logprob: -17.75005340576172
    10. '_POINT' → logprob: -18.25005340576172

Token 48: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010607946896925569
    2. '][' → logprob: -6.876060962677002
    3. '```' → logprob: -11.251060485839844
    4. '0' → logprob: -12.126060485839844
    5. ' [' → logprob: -12.501060485839844
    6. ')[' → logprob: -13.376060485839844
    7. 's' → logprob: -14.126060485839844
    8. ' ][' → logprob: -14.626060485839844
    9. '[][' → logprob: -15.126060485839844
    10. '()[' → logprob: -15.751060485839844

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.875004768371582
    3. '1' → logprob: -13.375004768371582
    4. '-' → logprob: -15.687504768371582
    5. '```' → logprob: -15.687504768371582
    6. '   ' → logprob: -16.0000057220459
    7. '[' → logprob: -16.5625057220459
    8. '][' → logprob: -16.6875057220459
    9. '  ' → logprob: -17.7500057220459
    10. '#' → logprob: -18.1875057220459

Token 50: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00044401636114344
    2. '[' → logprob: -7.875443935394287
    3. ' ][' → logprob: -10.125444412231445
    4. ']' → logprob: -10.750444412231445
    5. '"][' → logprob: -14.000444412231445
    6. '1' → logprob: -14.500444412231445
    7. ''][' → logprob: -15.000444412231445
    8. '   ' → logprob: -15.625444412231445
    9. '```' → logprob: -15.875444412231445
    10. '}[' → logprob: -16.000444412231445

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. '0' → logprob: -10.125040054321289
    3. '```' → logprob: -16.25004005432129
    4. ' ' → logprob: -17.12504005432129
    5. '-' → logprob: -18.00004005432129
    6. '   ' → logprob: -18.50004005432129
    7. '``' → logprob: -18.50004005432129
    8. '
' → logprob: -18.50004005432129
    9. ']' → logprob: -18.93754005432129
    10. '[' → logprob: -19.12504005432129

Token 52: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005793657619506121
    2. ' )' → logprob: -7.875579357147217
    3. ')%' → logprob: -9.125579833984375
    4. '])' → logprob: -9.875579833984375
    5. ']' → logprob: -11.500579833984375
    6. '）' → logprob: -11.625579833984375
    7. '`)' → logprob: -11.625579833984375
    8. '%' → logprob: -13.125579833984375
    9. '})' → logprob: -13.250579833984375
    10. ')])' → logprob: -13.375579833984375

Token 53: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6957120895385742
    2. ' %' → logprob: -0.6957120895385742
    3. ')' → logprob: -6.070712089538574
    4. ')%' → logprob: -8.945712089538574
    5. ' ' → logprob: -9.945712089538574
    6. '<|end|>' → logprob: -10.820712089538574
    7. ' ' → logprob: -11.070712089538574
    8. ' )' → logprob: -11.195712089538574
    9. '2' → logprob: -11.570712089538574
    10. '```' → logprob: -12.945712089538574

Token 54: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '```' → logprob: -16.128177642822266
    4. '`' → logprob: -19.128177642822266
    5. '1' → logprob: -19.128177642822266
    6. ' ' → logprob: -19.253177642822266
    7. '   ' → logprob: -19.503177642822266
    8. '3' → logprob: -20.503177642822266
    9. '２' → logprob: -20.753177642822266
    10. '0' → logprob: -20.753177642822266

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -16.875001907348633
    4. '２' → logprob: -19.250001907348633
    5. '`' → logprob: -20.250001907348633
    6. '۲' → logprob: -20.375001907348633
    7. '   ' → logprob: -20.812501907348633
    8. 'mod' → logprob: -20.937501907348633
    9. '٢' → logprob: -21.125001907348633
    10. '3' → logprob: -21.625001907348633

Token 56: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0497236251831055
    2. '+' → logprob: -1.9247236251831055
    3. ')' → logprob: -2.0497236251831055
    4. '<|end|>' → logprob: -2.0497236251831055
    5. '
' → logprob: -2.4247236251831055
    6. '#' → logprob: -3.5497236251831055
    7. '```' → logprob: -3.6747236251831055
    8. '=' → logprob: -3.6747236251831055
    9. '%' → logprob: -4.1747236251831055
    10. '==' → logprob: -4.2997236251831055

Token 57: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005790731403976679
    2. 'valid' → logprob: -5.755790710449219
    3. ' for' → logprob: -6.505790710449219
    4. 'if' → logprob: -7.380790710449219
    5. '```' → logprob: -8.880790710449219
    6. 'all' → logprob: -9.505790710449219
    7. 'correct' → logprob: -9.505790710449219
    8. '
' → logprob: -10.005790710449219
    9. 'result' → logprob: -10.130790710449219
    10. 'possible' → logprob: -10.880790710449219

Token 58: ' current' (ID: 2208)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7733364105224609
    2. ' point' → logprob: -1.273336410522461
    3. ' i' → logprob: -1.523336410522461
    4. ' ' → logprob: -3.898336410522461
    5. ' input' → logprob: -4.273336410522461
    6. '_' → logprob: -5.648336410522461
    7. '_point' → logprob: -7.523336410522461
    8. ' pt' → logprob: -7.523336410522461
    9. ' p' → logprob: -7.648336410522461
    10. 'point' → logprob: -8.273336410522461

Token 59: '_x' (ID: 7054)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.026240501552820206
    2. ' _' → logprob: -4.401240348815918
    3. '_' → logprob: -4.901240348815918
    4. ' in' → logprob: -6.026240348815918
    5. '_coordinate' → logprob: -6.151240348815918
    6. ' point' → logprob: -7.151240348815918
    7. '_coord' → logprob: -8.526240348815918
    8. ' input' → logprob: -8.901240348815918
    9. '_input' → logprob: -8.901240348815918
    10. 'point' → logprob: -9.151240348815918

Token 60: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4116232693195343
    2. ',' → logprob: -1.286623239517212
    3. 'in' → logprob: -2.911623239517212
    4. ' ,' → logprob: -5.036623477935791
    5. ',current' → logprob: -9.536623001098633
    6. ',in' → logprob: -9.661623001098633
    7. ' ' → logprob: -9.786623001098633
    8. ',input' → logprob: -10.161623001098633
    9. '_in' → logprob: -10.661623001098633
    10. '_' → logprob: -11.411623001098633

Token 61: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.25193315744400024
    2. ' current' → logprob: -1.5019330978393555
    3. '_current' → logprob: -13.251933097839355
    4. '(current' → logprob: -13.876933097839355
    5. 'urrent' → logprob: -14.751933097839355
    6. ',current' → logprob: -14.751933097839355
    7. '	current' → logprob: -15.251933097839355
    8. '$current' → logprob: -15.501933097839355
    9. '[current' → logprob: -16.626934051513672
    10. ' ' → logprob: -17.251934051513672

Token 62: '_y' (ID: 9410)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.6918753981590271
    2. '_' → logprob: -1.3168754577636719
    3. '_x' → logprob: -2.191875457763672
    4. ',' → logprob: -2.316875457763672
    5. ',_' → logprob: -3.941875457763672
    6. '_y' → logprob: -6.691875457763672
    7. '_point' → logprob: -8.816875457763672
    8. '_coordinates' → logprob: -9.441875457763672
    9. ' ,' → logprob: -10.441875457763672
    10. '_points' → logprob: -10.691875457763672

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03828589990735054
    2. 'in' → logprob: -3.288285970687866
    3. ',' → logprob: -8.663286209106445
    4. ' ,' → logprob: -10.413286209106445
    5. ' ' → logprob: -10.538286209106445
    6. '<|end|>' → logprob: -11.788286209106445
    7. '	in' → logprob: -13.413286209106445
    8. 's' → logprob: -13.538286209106445
    9. '```' → logprob: -14.288286209106445
    10. ',in' → logprob: -14.538286209106445

Token 64: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931514739990234
    2. ' input' → logprob: -0.6931514739990234
    3. '[input' → logprob: -13.068151473999023
    4. '(input' → logprob: -13.443151473999023
    5. '_input' → logprob: -15.068151473999023
    6. '	input' → logprob: -15.568151473999023
    7. '=input' → logprob: -15.818151473999023
    8. '<input' → logprob: -16.443151473999023
    9. ',input' → logprob: -16.693151473999023
    10. 'Input' → logprob: -18.068151473999023

Token 65: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -6.630610641877865e-06
    2. '_points' → logprob: -12.125006675720215
    3. '_' → logprob: -15.125006675720215
    4. '_Point' → logprob: -15.875006675720215
    5. 'point' → logprob: -16.0000057220459
    6. 'Point' → logprob: -16.6250057220459
    7. '_POINT' → logprob: -16.6250057220459
    8. '_p' → logprob: -16.7500057220459
    9. '_coordinate' → logprob: -17.1250057220459
    10. '```' → logprob: -17.1250057220459

Token 66: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.137130498653278e-05
    2. '_count' → logprob: -9.500081062316895
    3. '_point' → logprob: -13.125081062316895
    4. '_points' → logprob: -13.375081062316895
    5. 'list' → logprob: -13.750081062316895
    6. '_' → logprob: -14.625081062316895
    7. 'List' → logprob: -14.750081062316895
    8. 's' → logprob: -15.125081062316895
    9. '_lst' → logprob: -16.12508201599121
    10. '_coordinates' → logprob: -16.37508201599121

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1279553291387856e-05
    2. ':**' → logprob: -12.375011444091797
    3. ':
' → logprob: -13.375011444091797
    4. '<|end|>' → logprob: -13.375011444091797
    5. '```' → logprob: -14.125011444091797
    6. ' :' → logprob: -14.125011444091797
    7. '):' → logprob: -14.750011444091797
    8. ':list' → logprob: -15.625011444091797
    9. '():' → logprob: -15.750011444091797
    10. ':return' → logprob: -15.750011444091797

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02051432617008686
    2. ' ' → logprob: -4.520514488220215
    3. ' if' → logprob: -5.145514488220215
    4. '<|end|>' → logprob: -5.895514488220215
    5. '  ' → logprob: -8.270514488220215
    6. '    ' → logprob: -8.520514488220215
    7. '    
' → logprob: -8.895514488220215
    8. ':' → logprob: -9.895514488220215
    9. ' 
' → logprob: -10.520514488220215
    10. 'if' → logprob: -10.520514488220215

Token 69: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6686693429946899
    2. '   ' → logprob: -0.7936693429946899
    3. 'if' (adapté à ' if') → logprob: -3.4186692237854004
    4. '       ' → logprob: -6.5436692237854
    5. ' continue' → logprob: -7.6686692237854
    6. ' ' → logprob: -7.9186692237854
    7. '    ' → logprob: -8.418669700622559
    8. '  ' → logprob: -10.168669700622559
    9. '    
' → logprob: -10.418669700622559
    10. '```' → logprob: -10.418669700622559

Token 70: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04826856777071953
    2. ' ((' → logprob: -3.2982685565948486
    3. '(co' → logprob: -4.798268795013428
    4. '(' → logprob: -6.923268795013428
    5. '((' → logprob: -7.798268795013428
    6. '(current' → logprob: -8.29826831817627
    7. '(c' → logprob: -9.42326831817627
    8. ' ' → logprob: -9.92326831817627
    9. ' coordinate' → logprob: -9.92326831817627
    10. '(abs' → logprob: -10.17326831817627

Token 71: 'current' (ID: 5804)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.3443044126033783
    2. 'current' → logprob: -1.3443044424057007
    3. ' current' → logprob: -3.969304323196411
    4. ' (' → logprob: -4.59430456161499
    5. '((' → logprob: -6.84430456161499
    6. '   ' → logprob: -8.594304084777832
    7. '(abs' → logprob: -9.094304084777832
    8. 'abs' → logprob: -9.594304084777832
    9. ' ((' → logprob: -10.219304084777832
    10. '(co' → logprob: -10.719304084777832

Token 72: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -6.988221684878226e-06
    2. '_' → logprob: -12.000006675720215
    3. '_y' → logprob: -14.625006675720215
    4. 'x' → logprob: -15.250006675720215
    5. ')' → logprob: -17.25000762939453
    6. '_

' → logprob: -17.37500762939453
    7. '_
' → logprob: -17.37500762939453
    8. '_)' → logprob: -17.50000762939453
    9. ')_' → logprob: -19.50000762939453
    10. '

' → logprob: -19.62500762939453

Token 73: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1797560751438141
    2. '+' → logprob: -1.8047560453414917
    3. ' ' → logprob: -11.554756164550781
    4. '+y' → logprob: -15.179756164550781
    5. ' plus' → logprob: -15.304756164550781
    6. '%' → logprob: -15.429756164550781
    7. '   ' → logprob: -15.429756164550781
    8. ' ' → logprob: -15.554756164550781
    9. '+x' → logprob: -15.804756164550781
    10. ')' → logprob: -16.05475616455078

Token 74: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.12693241238594055
    2. ' current' → logprob: -2.126932382583618
    3. '_current' → logprob: -13.876932144165039
    4. '<|end|>' → logprob: -14.126932144165039
    5. '(current' → logprob: -14.251932144165039
    6. '	current' → logprob: -14.251932144165039
    7. '[current' → logprob: -14.501932144165039
    8. '$current' → logprob: -15.501932144165039
    9. ' ' → logprob: -15.626932144165039
    10. 'urrent' → logprob: -16.00193214416504

Token 75: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.0087516784551553e-05
    2. '_' → logprob: -11.87501049041748
    3. 'y' → logprob: -13.37501049041748
    4. ')' → logprob: -14.87501049041748
    5. '_x' → logprob: -15.25001049041748
    6. '_current' → logprob: -15.62501049041748
    7. ')_' → logprob: -15.87501049041748
    8. ' _' → logprob: -15.87501049041748
    9. '<|end|>' → logprob: -16.000009536743164
    10. '```' → logprob: -16.625009536743164

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042388198198750615
    2. ' )' → logprob: -8.125423431396484
    3. ')%' → logprob: -9.000423431396484
    4. '```' → logprob: -13.125423431396484
    5. '   ' → logprob: -14.000423431396484
    6. '<|end|>' → logprob: -14.875423431396484
    7. '%' → logprob: -15.000423431396484
    8. '）' → logprob: -15.625423431396484
    9. '`)' → logprob: -15.875423431396484
    10. '``' → logprob: -16.250423431396484

Token 77: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.17990057170391083
    2. '%' → logprob: -1.8049005270004272
    3. ')' → logprob: -8.929900169372559
    4. ')%' → logprob: -11.179900169372559
    5. ' ' → logprob: -11.929900169372559
    6. '```' → logprob: -13.554900169372559
    7. '()%' → logprob: -14.429900169372559
    8. '<|end|>' → logprob: -15.304900169372559
    9. '   ' → logprob: -15.554900169372559
    10. '%E' → logprob: -16.429901123046875

Token 78: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04858873412013054
    2. ' ' → logprob: -3.048588752746582
    3. '```' → logprob: -13.673588752746582
    4. '   ' → logprob: -16.673587799072266
    5. '<|end|>' → logprob: -16.798587799072266
    6. '  ' → logprob: -17.298587799072266
    7. ' ' → logprob: -17.423587799072266
    8. ')' → logprob: -18.048587799072266
    9. '.' → logprob: -18.173587799072266
    10. '۲' → logprob: -18.423587799072266

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -14.500004768371582
    4. '   ' → logprob: -17.5000057220459
    5. '۲' → logprob: -19.0000057220459
    6. '  ' → logprob: -19.5000057220459
    7. 'mod' → logprob: -19.5625057220459
    8. '>' → logprob: -19.6875057220459
    9. '<|end|>' → logprob: -19.6875057220459
    10. '२' → logprob: -19.8750057220459

Token 80: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.38720813393592834
    2. ' !=' → logprob: -1.137208104133606
    3. ')!=' → logprob: -9.137207984924316
    4. '()!=' → logprob: -9.137207984924316
    5. '==' → logprob: -10.012207984924316
    6. ']!=' → logprob: -10.637207984924316
    7. '!==' → logprob: -10.762207984924316
    8. '!=(' → logprob: -11.387207984924316
    9. ' ==' → logprob: -11.637207984924316
    10. '<|end|>' → logprob: -12.887207984924316

Token 81: ' coordinate' (ID: 30380)
  Prédit: 'coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinate' → logprob: -0.4740857183933258
    2. ' coordinate' → logprob: -0.9740856885910034
    3. ' ' → logprob: -12.349085807800293
    4. '_coordinate' → logprob: -13.099085807800293
    5. '  ' → logprob: -14.349085807800293
    6. '.coordinate' → logprob: -14.474085807800293
    7. 'coordinates' → logprob: -14.974085807800293
    8. '-coordinate' → logprob: -15.099085807800293
    9. ' ' → logprob: -15.849085807800293
    10. 'coord' → logprob: -16.349084854125977

Token 82: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.5
    3. 'mod' → logprob: -16.75
    4. '_MOD' → logprob: -18.125
    5. ' _' → logprob: -18.625
    6. '_mode' → logprob: -19.125
    7. '_ref' → logprob: -19.375
    8. '_m' → logprob: -19.5
    9. '```' → logprob: -19.5
    10. '_Mod' → logprob: -19.625

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1875571544806007e-05
    2. 'reference' → logprob: -11.875011444091797
    3. '_reference' → logprob: -12.375011444091797
    4. '```' → logprob: -15.375011444091797
    5. ' ' → logprob: -16.125011444091797
    6. '_mod' → logprob: -16.500011444091797
    7. 'mod' → logprob: -17.875011444091797
    8. '_' → logprob: -18.000011444091797
    9. 'Reference' → logprob: -18.625011444091797
    10. '   ' → logprob: -18.750011444091797

Token 84: '_reference' (ID: 61118)
  Prédit: '_reference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reference' → logprob: -0.00022415895364247262
    2. 'reference' → logprob: -8.750224113464355
    3. ':' → logprob: -9.875224113464355
    4. '_ref' → logprob: -12.250224113464355
    5. ' reference' → logprob: -12.875224113464355
    6. '_REFERENCE' → logprob: -13.500224113464355
    7. '_re' → logprob: -13.625224113464355
    8. '```' → logprob: -13.750224113464355
    9. 'Reference' → logprob: -14.125224113464355
    10. '):' → logprob: -14.125224113464355

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002860073291230947
    2. '       ' → logprob: -9.000286102294922
    3. ':
' → logprob: -9.000286102294922
    4. '   ' → logprob: -10.375286102294922
    5. ' :' → logprob: -12.250286102294922
    6. '):' → logprob: -13.750286102294922
    7. ':return' → logprob: -14.375286102294922
    8. '    ' → logprob: -14.875286102294922
    9. ' continue' → logprob: -15.875286102294922
    10. '=' → logprob: -15.875286102294922

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030857324600219727
    2. '   ' → logprob: -5.878085613250732
    3. '\n' → logprob: -8.87808609008789
    4. '    ' → logprob: -10.50308609008789
    5. '        
' → logprob: -10.75308609008789
    6. ' continue' → logprob: -10.87808609008789
    7. '```' → logprob: -10.87808609008789
    8. '    
' → logprob: -11.25308609008789
    9. ' break' → logprob: -12.25308609008789
    10. '
' → logprob: -12.37808609008789

Token 87: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.42542606592178345
    2. 'print' (adapté à ' print') → logprob: -1.1754260063171387
    3. '   ' → logprob: -4.300426006317139
    4. '           ' → logprob: -4.425426006317139
    5. ' break' → logprob: -4.800426006317139
    6. '       ' → logprob: -5.925426006317139
    7. 'break' → logprob: -6.925426006317139
    8. '```' → logprob: -8.300426483154297
    9. ' ' → logprob: -10.300426483154297
    10. ' continue' → logprob: -10.675426483154297

Token 88: '(-' (ID: 8087)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10527591407299042
    2. '(' → logprob: -2.480275869369507
    3. '('' → logprob: -4.855276107788086
    4. '(-' → logprob: -4.855276107788086
    5. '(False' → logprob: -7.480276107788086
    6. '(No' → logprob: -10.980276107788086
    7. '(True' → logprob: -11.355276107788086
    8. '(None' → logprob: -11.980276107788086
    9. '("-' → logprob: -12.105276107788086
    10. '(NO' → logprob: -12.605276107788086

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '2' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '11' → logprob: -16.750001907348633
    5. '0' → logprob: -17.375001907348633
    6. '4' → logprob: -17.812501907348633
    7. '-' → logprob: -17.937501907348633
    8. '```' → logprob: -18.062501907348633
    9. '１' → logprob: -18.125001907348633
    10. '3' → logprob: -18.250001907348633

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041670043021440506
    2. ')
' → logprob: -3.291670083999634
    3. '       ' → logprob: -5.666669845581055
    4. ')return' → logprob: -9.166669845581055
    5. '   ' → logprob: -10.416669845581055
    6. '```' → logprob: -11.791669845581055
    7. '           ' → logprob: -12.291669845581055
    8. ' )' → logprob: -12.541669845581055
    9. ')
' → logprob: -13.166669845581055
    10. '),' → logprob: -13.416669845581055

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017922651022672653
    2. '
' → logprob: -9.125179290771484
    3. '<|end|>' → logprob: -10.250179290771484
    4. '```' → logprob: -11.375179290771484
    5. '        
' → logprob: -11.625179290771484
    6. '   ' → logprob: -12.000179290771484
    7. '<|end|>' → logprob: -13.250179290771484
    8. '    
' → logprob: -14.125179290771484
    9. 'import' → logprob: -14.250179290771484
    10. '  
' → logprob: -14.250179290771484

Token 92: ' exit' (ID: 10654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019188835285604
    2. 'exit' (adapté à ' exit') → logprob: -6.626918792724609
    3. ' exit' → logprob: -8.37691879272461
    4. 'break' → logprob: -8.87691879272461
    5. '
' → logprob: -9.62691879272461
    6. '        
' → logprob: -9.75191879272461
    7. ' break' → logprob: -10.12691879272461
    8. '	exit' → logprob: -10.37691879272461
    9. '```' → logprob: -11.75191879272461
    10. 'import' → logprob: -12.00191879272461

Token 93: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006277294596657157
    2. '(' → logprob: -7.500627517700195
    3. '()
' → logprob: -9.750627517700195
    4. '()\' → logprob: -12.000627517700195
    5. '()

' → logprob: -12.375627517700195
    6. '()`' → logprob: -12.500627517700195
    7. '()]' → logprob: -15.000627517700195
    8. '()(' → logprob: -15.125627517700195
    9. '`()' → logprob: -15.125627517700195
    10. ' ()' → logprob: -15.375627517700195

Token 94: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20004919171333313
    2. 'for' → logprob: -3.2000491619110107
    3. '#' → logprob: -3.4500491619110107
    4. 'answer' → logprob: -3.8250491619110107
    5. 'else' → logprob: -3.9500491619110107
    6. 'result' → logprob: -4.07504940032959
    7. 'max' → logprob: -4.20004940032959
    8. 'distance' → logprob: -4.45004940032959
    9. 'continue' → logprob: -5.45004940032959
    10. 'count' → logprob: -5.57504940032959

Token 95: ' coordinate' (ID: 30380)
  Prédit: ' coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordinate' → logprob: -0.5794115662574768
    2. ' input' → logprob: -1.329411506652832
    3. 'coordinate' → logprob: -1.954411506652832
    4. 'input' → logprob: -3.954411506652832
    5. ' (' → logprob: -5.204411506652832
    6. ' len' → logprob: -5.579411506652832
    7. ' all' → logprob: -5.829411506652832
    8. 'len' → logprob: -7.579411506652832
    9. ' ' → logprob: -7.829411506652832
    10. 'all' → logprob: -8.329411506652832

Token 96: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.318681188422488e-05
    2. 'mod' → logprob: -11.37501335144043
    3. '_point' → logprob: -14.00001335144043
    4. '_mode' → logprob: -15.75001335144043
    5. '_' → logprob: -15.87501335144043
    6. ' mod' → logprob: -16.50001335144043
    7. 'Mod' → logprob: -16.75001335144043
    8. 's' → logprob: -17.00001335144043
    9. '_points' → logprob: -17.25001335144043
    10. '_MOD' → logprob: -17.37501335144043

Token 97: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.841743303695694e-05
    2. 'reference' → logprob: -9.87509822845459
    3. '_reference' → logprob: -10.12509822845459
    4. 'od' → logprob: -13.25009822845459
    5. 'Reference' → logprob: -14.12509822845459
    6. '   ' → logprob: -14.25009822845459
    7. 'ode' → logprob: -15.00009822845459
    8. 'odel' → logprob: -15.00009822845459
    9. '_' → logprob: -15.12509822845459
    10. ' ' → logprob: -15.37509822845459

Token 98: '_reference' (ID: 61118)
  Prédit: '_reference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reference' → logprob: -0.0004892880679108202
    2. 'reference' → logprob: -7.625489234924316
    3. 'Reference' → logprob: -14.875489234924316
    4. '_re' → logprob: -15.125489234924316
    5. '==' → logprob: -15.250489234924316
    6. '(reference' → logprob: -15.750489234924316
    7. '_REFERENCE' → logprob: -16.000490188598633
    8. 'refer' → logprob: -17.000490188598633
    9. ' reference' → logprob: -17.625490188598633
    10. 'REFERENCE' → logprob: -17.625490188598633

Token 99: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1607266068458557
    2. ' ==' → logprob: -1.910726547241211
    3. ':' → logprob: -7.785726547241211
    4. '=' → logprob: -10.285726547241211
    5. '0' → logprob: -10.410726547241211
    6. '!=' → logprob: -12.535726547241211
    7. ')' → logprob: -12.910726547241211
    8. ' ' → logprob: -13.035726547241211
    9. ')==' → logprob: -13.160726547241211
    10. '%' → logprob: -13.285726547241211

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02268976904451847
    2. '1' → logprob: -4.0226898193359375
    3. ' ' → logprob: -5.3976898193359375
    4. '   ' → logprob: -14.835189819335938
    5. '...' → logprob: -15.585189819335938
    6. '-' → logprob: -15.897689819335938
    7. '01' → logprob: -16.022689819335938
    8. '(' → logprob: -16.147689819335938
    9. '۰' → logprob: -16.147689819335938
    10. '`' → logprob: -16.272689819335938

Token 101: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021896373946219683
    2. '1' → logprob: -6.127189636230469
    3. ' ' → logprob: -12.377189636230469
    4. '۰' → logprob: -16.37718963623047
    5. '```' → logprob: -18.00218963623047
    6. '=' → logprob: -18.00218963623047
    7. '０' → logprob: -18.18968963623047
    8. '०' → logprob: -18.25218963623047
    9. '٠' → logprob: -18.25218963623047
    10. '০' → logprob: -18.31468963623047

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001495484757469967
    2. ':
' → logprob: -9.000149726867676
    3. ' :' → logprob: -10.625149726867676
    4. '   ' → logprob: -14.750149726867676
    5. ':return' → logprob: -14.750149726867676
    6. ':

' → logprob: -15.500149726867676
    7. ',' → logprob: -15.500149726867676
    8. ':
' → logprob: -15.500149726867676
    9. ':def' → logprob: -15.875149726867676
    10. '.' → logprob: -16.37514877319336

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005130457691848278
    2. 'input' → logprob: -5.630130290985107
    3. 'for' → logprob: -7.505130290985107
    4. ' input' → logprob: -7.630130290985107
    5. 'print' → logprob: -8.130130767822266
    6. ' for' → logprob: -8.630130767822266
    7. ' print' → logprob: -11.380130767822266
    8. '```' → logprob: -13.255130767822266
    9. '	input' → logprob: -13.630130767822266
    10. '[input' → logprob: -14.130130767822266

Token 104: ' move' (ID: 5275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20591622591018677
    2. 'input' → logprob: -1.830916166305542
    3. '   ' → logprob: -3.705916166305542
    4. 'print' → logprob: -7.205916404724121
    5. ' for' → logprob: -7.830916404724121
    6. ' input' → logprob: -9.705916404724121
    7. 'coordinate' → logprob: -10.705916404724121
    8. '#' → logprob: -11.330916404724121
    9. '[input' → logprob: -12.080916404724121
    10. '    
' → logprob: -13.580916404724121

Token 105: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00034654809860512614
    2. 'ments' → logprob: -8.875346183776855
    3. '_s' → logprob: -9.125346183776855
    4. '_lengths' → logprob: -10.625346183776855
    5. '_dist' → logprob: -11.250346183776855
    6. ' =' → logprob: -11.250346183776855
    7. 'dist' → logprob: -11.875346183776855
    8. 'ment' → logprob: -12.250346183776855
    9. '_list' → logprob: -12.750346183776855
    10. 'm' → logprob: -13.000346183776855

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008055970072746277
    2. '=' → logprob: -4.883056163787842
    3. ' +=' → logprob: -7.883056163787842
    4. 's' → logprob: -10.258055686950684
    5. ' ' → logprob: -11.008055686950684
    6. '+=' → logprob: -11.258055686950684
    7. '   ' → logprob: -12.508055686950684
    8. '1' → logprob: -13.758055686950684
    9. '  ' → logprob: -13.883055686950684
    10. '.append' → logprob: -14.383055686950684

Token 107: ' ' (ID: 220)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.23150761425495148
    2. '1' → logprob: -2.1065075397491455
    3. '32' → logprob: -2.8565075397491455
    4. '2' → logprob: -4.606507778167725
    5. '41' → logprob: -4.856507778167725
    6. '40' → logprob: -5.606507778167725
    7. '3' → logprob: -5.981507778167725
    8. ' ' → logprob: -6.981507778167725
    9. 'max' → logprob: -7.356507778167725
    10. '39' → logprob: -8.106507301330566

Token 108: '31' (ID: 2911)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.08354353159666061
    2. '31' → logprob: -2.958543539047241
    3. '40' → logprob: -3.833543539047241
    4. '1' → logprob: -5.708543300628662
    5. '41' → logprob: -6.333543300628662
    6. '33' → logprob: -6.708543300628662
    7. 'max' → logprob: -9.58354377746582
    8. 'input' → logprob: -10.08354377746582
    9. '39' → logprob: -10.20854377746582
    10. '35' → logprob: -10.70854377746582

Token 109: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5546815991401672
    2. '   ' → logprob: -1.1796815395355225
    3. ' else' → logprob: -3.1796815395355225
    4. '+' → logprob: -3.4296815395355225
    5. ' +' → logprob: -3.8046815395355225
    6. '
' → logprob: -4.679681777954102
    7. '    
' → logprob: -6.054681777954102
    8. '<|end|>' → logprob: -6.179681777954102
    9. '-' → logprob: -6.929681777954102
    10. ')' → logprob: -7.179681777954102

Token 110: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.004357129335403442
    2. ' else' → logprob: -5.87935733795166
    3. '   ' → logprob: -6.50435733795166
    4. 'elif' → logprob: -10.50435733795166
    5. '    
' → logprob: -11.50435733795166
    6. 'print' → logprob: -12.50435733795166
    7. '
' → logprob: -12.87935733795166
    8. '```' → logprob: -13.25435733795166
    9. '#else' → logprob: -13.62935733795166
    10. ')' → logprob: -13.75435733795166

Token 111: ' move' (ID: 5275)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6716747879981995
    2. '   ' → logprob: -0.7966747879981995
    3. 'moves' → logprob: -4.421674728393555
    4. 'print' → logprob: -4.546674728393555
    5. 'move' (adapté à ' move') → logprob: -4.546674728393555
    6. ' else' → logprob: -6.921674728393555
    7. 'steps' → logprob: -7.171674728393555
    8. 'distance' → logprob: -7.421674728393555
    9. 'm' → logprob: -8.046674728393555
    10. '    
' → logprob: -8.421674728393555

Token 112: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.8006119132041931
    2. '_length' → logprob: -1.425611972808838
    3. '_list' → logprob: -2.175611972808838
    4. '_dist' → logprob: -2.425611972808838
    5. 's' → logprob: -2.675611972808838
    6. '_distance' → logprob: -4.175611972808838
    7. '_sizes' → logprob: -4.925611972808838
    8. '_count' → logprob: -5.425611972808838
    9. '_d' → logprob: -5.675611972808838
    10. '_size' → logprob: -6.050611972808838

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054421976208687
    2. '=' → logprob: -3.8955442905426025
    3. ' ' → logprob: -13.895544052124023
    4. ' =[' → logprob: -14.270544052124023
    5. '=[]' → logprob: -15.020544052124023
    6. 's' → logprob: -15.645544052124023
    7. ',' → logprob: -16.395544052124023
    8. '=[' → logprob: -16.520544052124023
    9. '＝' → logprob: -17.145544052124023
    10. '[' → logprob: -17.270544052124023

Token 114: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05014312267303467
    2. ' [' → logprob: -3.050143241882324
    3. '[(' → logprob: -6.925143241882324
    4. '[list' → logprob: -7.925143241882324
    5. ' [(' → logprob: -9.675143241882324
    6. '[m' → logprob: -10.425143241882324
    7. '[List' → logprob: -11.550143241882324
    8. '[i' → logprob: -11.550143241882324
    9. '[n' → logprob: -11.675143241882324
    10. '[max' → logprob: -11.675143241882324

Token 115: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07116062939167023
    2. '1' → logprob: -2.6961605548858643
    3. '(' → logprob: -7.446160793304443
    4. '[' → logprob: -7.571160793304443
    5. 'pow' → logprob: -10.071160316467285
    6. '0' → logprob: -10.196160316467285
    7. ']' → logprob: -11.696160316467285
    8. '536' → logprob: -11.696160316467285
    9. '31' → logprob: -12.196160316467285
    10. ' ' → logprob: -12.446160316467285

Token 116: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00024144348572008312
    2. ' **' → logprob: -8.50024127960205
    3. '*i' → logprob: -10.62524127960205
    4. '0' → logprob: -12.12524127960205
    5. 'i' → logprob: -12.37524127960205
    6. '[i' → logprob: -13.00024127960205
    7. '6' → logprob: -14.87524127960205
    8. '```' → logprob: -15.50024127960205
    9. '[' → logprob: -15.62524127960205
    10. '5' → logprob: -15.87524127960205

Token 117: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.035171110183000565
    2. '30' → logprob: -3.4101710319519043
    3. 'x' → logprob: -7.035171031951904
    4. '(i' → logprob: -8.035171508789062
    5. 'j' → logprob: -9.660171508789062
    6. '(' → logprob: -9.660171508789062
    7. '29' → logprob: -10.160171508789062
    8. 'move' → logprob: -10.285171508789062
    9. 'k' → logprob: -10.535171508789062
    10. '31' → logprob: -10.785171508789062

Token 118: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760060548782349
    2. 'for' → logprob: -0.8260060548782349
    3. '+' → logprob: -10.701005935668945
    4. '31' → logprob: -10.826005935668945
    5. '	for' → logprob: -12.076005935668945
    6. ' ' → logprob: -12.201005935668945
    7. '30' → logprob: -12.576005935668945
    8. '   ' → logprob: -13.201005935668945
    9. 'i' → logprob: -13.201005935668945
    10. '-' → logprob: -13.951005935668945

Token 119: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018529394641518593
    2. ' range' → logprob: -4.018529415130615
    3. 're' → logprob: -7.893529415130615
    4. 'i' → logprob: -12.643528938293457
    5. ' reversed' → logprob: -13.518528938293457
    6. ' ' → logprob: -14.768528938293457
    7. 'reverse' → logprob: -14.893528938293457
    8. '	range' → logprob: -15.018528938293457
    9. '   ' → logprob: -15.143528938293457
    10. '  ' → logprob: -15.893528938293457

Token 120: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06210627406835556
    2. ' in' → logprob: -2.8121063709259033
    3. 'range' → logprob: -8.937106132507324
    4. ' range' → logprob: -13.062106132507324
    5. 'for' → logprob: -13.812106132507324
    6. '31' → logprob: -13.937106132507324
    7. '[::-' → logprob: -14.437106132507324
    8. '
' → logprob: -14.562106132507324
    9. '30' → logprob: -14.687106132507324
    10. 'i' → logprob: -15.312106132507324

Token 121: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003428528143558651
    2. 're' → logprob: -8.125343322753906
    3. ' range' → logprob: -10.000343322753906
    4. 'reverse' → logprob: -14.125343322753906
    5. '   ' → logprob: -15.125343322753906
    6. ' reversed' → logprob: -16.000343322753906
    7. '(range' → logprob: -16.125343322753906
    8. '	range' → logprob: -16.750343322753906
    9. '
' → logprob: -17.250343322753906
    10. ' ' → logprob: -17.625343322753906

Token 122: '(move' (ID: 69621)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.4750913381576538
    2. '30' → logprob: -0.9750913381576538
    3. 'move' → logprob: -7.350091457366943
    4. '(' → logprob: -8.600090980529785
    5. '32' → logprob: -9.100090980529785
    6. '29' → logprob: -10.350090980529785
    7. '(move' → logprob: -10.350090980529785
    8. '0' → logprob: -12.475090980529785
    9. '28' → logprob: -13.100090980529785
    10. ' ' → logprob: -13.850090980529785

Token 123: '_count' (ID: 7536)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '30' → logprob: -0.5330067276954651
    2. '31' → logprob: -0.9080067276954651
    3. 'move' → logprob: -4.65800666809082
    4. '29' → logprob: -8.53300666809082
    5. '32' → logprob: -9.65800666809082
    6. '(' → logprob: -11.03300666809082
    7. '(move' → logprob: -11.15800666809082
    8. '28' → logprob: -11.53300666809082
    9. '0' → logprob: -11.65800666809082
    10. '5' → logprob: -11.78300666809082

Token 124: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17136642336845398
    2. '])' → logprob: -2.0463664531707764
    3. ',' → logprob: -3.6713664531707764
    4. ' ]' → logprob: -6.796366214752197
    5. ')]' → logprob: -8.046366691589355
    6. '[::-' → logprob: -8.296366691589355
    7. '][' → logprob: -8.671366691589355
    8. ']
' → logprob: -8.921366691589355
    9. ' ,' → logprob: -9.046366691589355
    10. '1' → logprob: -9.046366691589355

Token 125: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.014765319414436817
    2. '   ' → logprob: -4.63976526260376
    3. ' else' → logprob: -5.38976526260376
    4. '    
' → logprob: -8.639765739440918
    5. '<|end|>' → logprob: -9.264765739440918
    6. 'elif' → logprob: -9.389765739440918
    7. '+' → logprob: -11.389765739440918
    8. '}else' → logprob: -12.014765739440918
    9. 'print' → logprob: -12.264765739440918
    10. '#else' → logprob: -12.264765739440918

Token 126: ' print' (ID: 2123)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.1206476166844368
    2. 'else' → logprob: -2.620647668838501
    3. 'print' (adapté à ' print') → logprob: -4.245647430419922
    4. ' move' → logprob: -4.620647430419922
    5. 'moves' → logprob: -4.995647430419922
    6. '   ' → logprob: -5.245647430419922
    7. 'for' → logprob: -6.245647430419922
    8. ' else' → logprob: -7.745647430419922
    9. '    
' → logprob: -8.495647430419922
    10. 'steps' → logprob: -8.745647430419922

Token 127: '(move' (ID: 69621)
  Prédit: '(move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.03038785606622696
    2. '(' → logprob: -3.5303878784179688
    3. '('' → logprob: -7.780387878417969
    4. '("' → logprob: -8.780387878417969
    5. '("("' → logprob: -11.530387878417969
    6. 'move' → logprob: -11.780387878417969
    7. '((' → logprob: -11.780387878417969
    8. '(len' → logprob: -12.030387878417969
    9. '(
' → logprob: -12.155387878417969
    10. ' (' → logprob: -12.280387878417969

Token 128: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.9040898880339228e-05
    2. '_counts' → logprob: -11.375028610229492
    3. '_lengths' → logprob: -11.500028610229492
    4. '_' → logprob: -13.250028610229492
    5. '_length' → logprob: -13.500028610229492
    6. ' _' → logprob: -13.625028610229492
    7. '_c' → logprob: -14.000028610229492
    8. 'count' → logprob: -14.375028610229492
    9. '_co' → logprob: -14.500028610229492
    10. ')' → logprob: -15.625028610229492

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009633887093514204
    2. ',' → logprob: -7.37596321105957
    3. ' )' → logprob: -8.50096321105957
    4. ')
' → logprob: -9.00096321105957
    5. ',)' → logprob: -12.62596321105957
    6. ');' → logprob: -13.87596321105957
    7. '   ' → logprob: -14.00096321105957
    8. ' ,' → logprob: -14.00096321105957
    9. '+' → logprob: -14.12596321105957
    10. '<|end|>' → logprob: -14.75096321105957

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12081656605005264
    2. 'else' → logprob: -2.620816469192505
    3. '    
' → logprob: -4.245816707611084
    4. ' else' → logprob: -4.745816707611084
    5. ' for' → logprob: -4.870816707611084
    6. 'for' → logprob: -5.870816707611084
    7. '<|end|>' → logprob: -5.870816707611084
    8. 'elif' → logprob: -6.370816707611084
    9. ' 
' → logprob: -6.995816707611084
    10. '    ' → logprob: -7.120816707611084

Token 131: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: '("' (ID: 568)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.5227562785148621
    2. '('' → logprob: -1.0227563381195068
    3. '("' → logprob: -3.522756338119507
    4. '(' → logprob: -4.022756099700928
    5. '(*(' → logprob: -10.022756576538086
    6. '()' → logprob: -10.647756576538086
    7. ''' → logprob: -12.147756576538086
    8. '(
' → logprob: -12.272756576538086
    9. '(move' → logprob: -12.272756576538086
    10. '"' → logprob: -12.522756576538086

Token 133: ' ".' (ID: 11730)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9689788818359375
    2. ' ".' → logprob: -1.0939788818359375
    3. '"' → logprob: -1.7189788818359375
    4. '".' → logprob: -2.3439788818359375
    5. '2' → logprob: -4.9689788818359375
    6. ''' → logprob: -6.8439788818359375
    7. '")' → logprob: -7.7189788818359375
    8. ' "' → logprob: -7.8439788818359375
    9. '{}' → logprob: -7.8439788818359375
    10. '0' → logprob: -8.093978881835938

Token 134: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.5048530030981055e-06
    2. 'print' → logprob: -14.375001907348633
    3. ' join' → logprob: -15.250001907348633
    4. '.' → logprob: -15.375001907348633
    5. '.join' → logprob: -16.375001907348633
    6. '*' → logprob: -16.625001907348633
    7. 'j' → logprob: -17.875001907348633
    8. '```' → logprob: -18.125001907348633
    9. '".' → logprob: -18.250001907348633
    10. 'expand' → logprob: -18.500001907348633

Token 135: '(str' (ID: 7946)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2019287645816803
    2. '(str' → logprob: -1.701928734779358
    3. '([' → logprob: -8.326929092407227
    4. 'map' → logprob: -8.576929092407227
    5. '(list' → logprob: -10.326929092407227
    6. 'str' → logprob: -10.576929092407227
    7. '[str' → logprob: -10.826929092407227
    8. '(' → logprob: -12.201929092407227
    9. '(["' → logprob: -13.951929092407227
    10. '(['' → logprob: -15.326929092407227

Token 136: '(move' (ID: 69621)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.14728273451328278
    2. '(x' → logprob: -2.647282838821411
    3. '(move' → logprob: -2.897282838821411
    4. '(' → logprob: -5.272282600402832
    5. '(l' → logprob: -5.647282600402832
    6. '(m' → logprob: -6.397282600402832
    7. '(i' → logprob: -7.522282600402832
    8. 'length' → logprob: -11.022282600402832
    9. '(distance' → logprob: -11.772282600402832
    10. '(d' → logprob: -11.897282600402832

Token 137: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.6444939374923706
    2. 'ength' → logprob: -1.2694939374923706
    3. '_lengths' → logprob: -1.8944939374923706
    4. ')' → logprob: -4.26949405670166
    5. 'length' → logprob: -4.26949405670166
    6. '_len' → logprob: -4.26949405670166
    7. '_l' → logprob: -7.39449405670166
    8. ' length' → logprob: -7.76949405670166
    9. '(length' → logprob: -8.64449405670166
    10. 'leng' → logprob: -9.76949405670166

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034616757184267044
    2. 'for' → logprob: -6.003461837768555
    3. ' for' → logprob: -7.253461837768555
    4. '(move' → logprob: -8.878461837768555
    5. 'move' → logprob: -9.253461837768555
    6. '   ' → logprob: -11.628461837768555
    7. ' )' → logprob: -11.753461837768555
    8. '+' → logprob: -12.503461837768555
    9. 'length' → logprob: -12.878461837768555
    10. '(' → logprob: -13.003461837768555

Token 139: ' for' (ID: 395)
  Prédit: '(move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.0530836246907711
    2. 'for' → logprob: -3.678083658218384
    3. ')' → logprob: -3.928083658218384
    4. 'move' → logprob: -5.553083419799805
    5. ' for' → logprob: -6.053083419799805
    6. ' move' → logprob: -9.178083419799805
    7. ',' → logprob: -9.303083419799805
    8. '   ' → logprob: -9.678083419799805
    9. '(' → logprob: -9.928083419799805
    10. '(map' → logprob: -10.178083419799805

Token 140: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.5759484171867371
    2. ' move' → logprob: -0.8259484171867371
    3. '(move' → logprob: -12.575948715209961
    4. '	move' → logprob: -12.950948715209961
    5. '_move' → logprob: -13.450948715209961
    6. ' in' → logprob: -14.450948715209961
    7. ' ' → logprob: -14.950948715209961
    8. '_' → logprob: -15.075948715209961
    9. '.move' → logprob: -15.950948715209961
    10. 'in' → logprob: -16.20094871520996

Token 141: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0003724006237462163
    2. '_lengths' → logprob: -8.500371932983398
    3. '_l' → logprob: -8.750371932983398
    4. '_' → logprob: -11.625371932983398
    5. '_len' → logprob: -13.625371932983398
    6. ' _' → logprob: -15.750371932983398
    7. 'length' → logprob: -16.3753719329834
    8. '_le' → logprob: -16.8753719329834
    9. '_Length' → logprob: -17.1253719329834
    10. '_in' → logprob: -17.5003719329834

Token 142: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5234239101409912
    2. ' in' → logprob: -0.8984239101409912
    3. ')' → logprob: -8.27342414855957
    4. ' )' → logprob: -11.27342414855957
    5. 's' → logprob: -11.39842414855957
    6. ' ' → logprob: -11.77342414855957
    7. '_in' → logprob: -12.89842414855957
    8. '  ' → logprob: -13.27342414855957
    9. '_' → logprob: -13.52342414855957
    10. '<|end|>' → logprob: -13.52342414855957

Token 143: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.06197037547826767
    2. ' move' → logprob: -2.8119704723358154
    3. '	move' → logprob: -14.186970710754395
    4. ' ' → logprob: -14.436970710754395
    5. '(move' → logprob: -14.436970710754395
    6. '   ' → logprob: -14.686970710754395
    7. 'range' → logprob: -15.686970710754395
    8. '  ' → logprob: -15.686970710754395
    9. 'reverse' → logprob: -16.436969757080078
    10. '[' → logprob: -16.811969757080078

Token 144: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -3.7146746763028204e-05
    2. 'length' → logprob: -10.75003719329834
    3. 'ength' → logprob: -12.25003719329834
    4. '_length' → logprob: -12.37503719329834
    5. 's' → logprob: -12.87503719329834
    6. '_l' → logprob: -13.50003719329834
    7. '_' → logprob: -13.87503719329834
    8. '_counts' → logprob: -13.87503719329834
    9. 'Lengths' → logprob: -14.50003719329834
    10. '_count' → logprob: -16.000036239624023

Token 145: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029951108619570732
    2. ')' → logprob: -3.5299510955810547
    3. ')))' → logprob: -9.279951095581055
    4. ' ))' → logprob: -9.279951095581055
    5. ' )' → logprob: -11.904951095581055
    6. '))
' → logprob: -12.154951095581055
    7. '"))' → logprob: -14.029951095581055
    8. '   ' → logprob: -15.404951095581055
    9. '),' → logprob: -15.904951095581055
    10. ')")' → logprob: -16.154951095581055

Token 146: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.006958446465432644
    2. 'elif' → logprob: -5.131958484649658
    3. ' else' → logprob: -7.006958484649658
    4. ')' → logprob: -9.8819580078125
    5. '   ' → logprob: -10.7569580078125
    6. '    
' → logprob: -11.3819580078125
    7. '<|end|>' → logprob: -11.3819580078125
    8. '```' → logprob: -11.8819580078125
    9. '\n' → logprob: -12.2569580078125
    10. ' elif' → logprob: -13.1319580078125

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04486878216266632
    2. ':
' → logprob: -3.1698687076568604
    3. '   ' → logprob: -6.2948689460754395
    4. ' :' → logprob: -11.044868469238281
    5. ' :
' → logprob: -12.419868469238281
    6. ':
' → logprob: -13.794868469238281
    7. ':

' → logprob: -14.669868469238281
    8. '    ' → logprob: -15.544868469238281
    9. '    
' → logprob: -15.919868469238281
    10. '  ' → logprob: -16.41986846923828

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028786994516849518
    2. 'move' → logprob: -6.502878665924072
    3. '31' → logprob: -7.502878665924072
    4. ' move' → logprob: -7.627878665924072
    5. '32' → logprob: -8.25287914276123
    6. '33' → logprob: -10.62787914276123
    7. '34' → logprob: -11.37787914276123
    8. '30' → logprob: -11.62787914276123
    9. '1' → logprob: -11.75287914276123
    10. 'print' → logprob: -12.12787914276123

Token 149: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' (adapté à ' move') → logprob: -0.0002602629829198122
    2. 'print' → logprob: -8.500260353088379
    3. '   ' → logprob: -10.375260353088379
    4. ' move' → logprob: -11.250260353088379
    5. 'for' → logprob: -13.125260353088379
    6. '#' → logprob: -13.250260353088379
    7. '31' → logprob: -13.500260353088379
    8. '
' → logprob: -13.750260353088379
    9. 'import' → logprob: -14.000260353088379
    10. '32' → logprob: -14.250260353088379

Token 150: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00018625585653353482
    2. '_lengths' → logprob: -8.7501859664917
    3. '_length' → logprob: -10.6251859664917
    4. '_counts' → logprob: -12.7501859664917
    5. '_' → logprob: -15.6251859664917
    6. '_co' → logprob: -16.500186920166016
    7. '_len' → logprob: -16.500186920166016
    8. 's' → logprob: -16.625186920166016
    9. '_c' → logprob: -16.750186920166016
    10. 'count' → logprob: -17.250186920166016

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132616877555847
    2. ' =' → logprob: -1.3132617473602295
    3. '=

' → logprob: -18.563261032104492
    4. '＝' → logprob: -18.688261032104492
    5. ' ' → logprob: -19.438261032104492
    6. '=}' → logprob: -19.813261032104492
    7. ' =)' → logprob: -20.188261032104492
    8. '=int' → logprob: -20.313261032104492
    9. ':' → logprob: -20.563261032104492
    10. '   ' → logprob: -20.813261032104492

Token 152: ' ' (ID: 220)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.4821423292160034
    2. '32' → logprob: -0.9821423292160034
    3. '30' → logprob: -4.857142448425293
    4. '40' → logprob: -8.732142448425293
    5. '33' → logprob: -9.607142448425293
    6. '34' → logprob: -12.232142448425293
    7. '0' → logprob: -12.607142448425293
    8. ' ' → logprob: -12.732142448425293
    9. '
' → logprob: -13.107142448425293
    10. '62' → logprob: -13.232142448425293

Token 153: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.056567076593637466
    2. '31' → logprob: -2.9315671920776367
    3. '30' → logprob: -6.681567192077637
    4. '33' → logprob: -8.431567192077637
    5. '40' → logprob: -8.681567192077637
    6. '34' → logprob: -10.931567192077637
    7. '0' → logprob: -12.806567192077637
    8. '36' → logprob: -13.056567192077637
    9. '35' → logprob: -13.306567192077637
    10. '1' → logprob: -13.431567192077637

Token 154: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5961542129516602
    2. '   ' → logprob: -1.0961542129516602
    3. 'move' → logprob: -2.22115421295166
    4. 'print' → logprob: -6.34615421295166
    5. ' move' → logprob: -6.34615421295166
    6. '<|end|>' → logprob: -6.84615421295166
    7. '	move' → logprob: -7.47115421295166
    8. '(move' → logprob: -8.09615421295166
    9. 'moves' → logprob: -8.09615421295166
    10. '    
' → logprob: -8.09615421295166

Token 155: '   ' (ID: 271)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.12699803709983826
    2. '   ' → logprob: -2.126997947692871
    3. ' move' → logprob: -10.001997947692871
    4. '	move' → logprob: -11.126997947692871
    5. 'moves' → logprob: -12.251997947692871
    6. '(move' → logprob: -13.376997947692871
    7. '_move' → logprob: -14.001997947692871
    8. '    
' → logprob: -14.626997947692871
    9. '.move' → logprob: -14.751997947692871
    10. 'print' → logprob: -14.751997947692871

Token 156: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' (adapté à ' move') → logprob: -9.448370838072151e-05
    2. 'print' → logprob: -9.375094413757324
    3. '   ' → logprob: -12.250094413757324
    4. ' move' → logprob: -12.750094413757324
    5. '	move' → logprob: -14.125094413757324
    6. 'import' → logprob: -14.375094413757324
    7. '(move' → logprob: -15.750094413757324
    8. '
' → logprob: -16.75009536743164
    9. '    
' → logprob: -16.75009536743164
    10. 'for' → logprob: -16.87509536743164

Token 157: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -6.623244553338736e-05
    2. '_count' → logprob: -9.875065803527832
    3. '_length' → logprob: -11.875065803527832
    4. '_counts' → logprob: -12.375065803527832
    5. '_' → logprob: -12.875065803527832
    6. '_l' → logprob: -15.500065803527832
    7. 'length' → logprob: -15.500065803527832
    8. '_len' → logprob: -16.00006675720215
    9. 'Lengths' → logprob: -16.25006675720215
    10. ' lengths' → logprob: -16.50006675720215

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022463142871857
    2. '=' → logprob: -1.9102246761322021
    3. ' =[' → logprob: -14.785224914550781
    4. '=[' → logprob: -16.78522491455078
    5. '[' → logprob: -17.28522491455078
    6. '＝' → logprob: -17.78522491455078
    7. ' ' → logprob: -18.53522491455078
    8. 's' → logprob: -18.53522491455078
    9. '=[]' → logprob: -19.41022491455078
    10. ')' → logprob: -20.16022491455078

Token 159: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003601617179811001
    2. ' [' → logprob: -5.628601551055908
    3. ' ' → logprob: -14.503602027893066
    4. '[(' → logprob: -14.503602027893066
    5. '[-' → logprob: -15.628602027893066
    6. '   ' → logprob: -16.25360107421875
    7. '([' → logprob: -16.50360107421875
    8. '2' → logprob: -17.00360107421875
    9. '[i' → logprob: -17.50360107421875
    10. '[]' → logprob: -17.62860107421875

Token 160: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019506559474393725
    2. '1' → logprob: -6.876950740814209
    3. '(' → logprob: -7.126950740814209
    4. 'str' → logprob: -9.62695026397705
    5. ' ' → logprob: -10.62695026397705
    6. '[' → logprob: -12.12695026397705
    7. '0' → logprob: -12.62695026397705
    8. ']' → logprob: -12.87695026397705
    9. '32' → logprob: -13.62695026397705
    10. '```' → logprob: -13.62695026397705

Token 161: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04023788124322891
    2. '<<' → logprob: -3.7902379035949707
    3. ']+' → logprob: -4.290237903594971
    4. '+' → logprob: -6.790237903594971
    5. '2' → logprob: -7.665237903594971
    6. ' <<' → logprob: -7.790237903594971
    7. '*' → logprob: -7.915237903594971
    8. '<' → logprob: -8.415237426757812
    9. ',' → logprob: -8.915237426757812
    10. ' +' → logprob: -9.040237426757812

Token 162: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11500926315784454
    2. ' +' → logprob: -2.240009307861328
    3. '+[' → logprob: -6.990009307861328
    4. '*' → logprob: -7.365009307861328
    5. 'for' → logprob: -8.490009307861328
    6. ']' → logprob: -9.365009307861328
    7. '   ' → logprob: -9.490009307861328
    8. ' for' → logprob: -9.490009307861328
    9. '+
' → logprob: -9.990009307861328
    10. ',' → logprob: -10.240009307861328

Token 163: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.15310683415737e-05
    2. ' [' → logprob: -10.750021934509277
    3. '[(' → logprob: -18.12502098083496
    4. '[m' → logprob: -18.50002098083496
    5. '[str' → logprob: -18.62502098083496
    6. '2' → logprob: -18.75002098083496
    7. '[int' → logprob: -19.62502098083496
    8. '   ' → logprob: -19.87502098083496
    9. '[len' → logprob: -19.87502098083496
    10. '[data' → logprob: -19.87502098083496

Token 164: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.375015258789062
    3. 'str' → logprob: -12.750015258789062
    4. '(' → logprob: -14.750015258789062
    5. '
' → logprob: -17.500015258789062
    6. '   ' → logprob: -18.250015258789062
    7. '[' → logprob: -18.375015258789062
    8. '1' → logprob: -18.500015258789062
    9. '```' → logprob: -18.625015258789062
    10. '  
' → logprob: -19.375015258789062

Token 165: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3132629096508026
    2. ' **' → logprob: -1.313262939453125
    3. '*' → logprob: -13.938262939453125
    4. ' ' → logprob: -15.438262939453125
    5. ' ' → logprob: -17.313262939453125
    6. ' *' → logprob: -17.438262939453125
    7. '^' → logprob: -17.938262939453125
    8. '```' → logprob: -18.438262939453125
    9. ' **
' → logprob: -18.688262939453125
    10. ']' → logprob: -19.063262939453125

Token 166: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4498052223643754e-05
    2. ' i' → logprob: -11.625014305114746
    3. '(i' → logprob: -12.625014305114746
    4. '_i' → logprob: -13.250014305114746
    5. '(' → logprob: -15.125014305114746
    6. '31' → logprob: -17.250015258789062
    7. '   ' → logprob: -17.375015258789062
    8. '```' → logprob: -17.500015258789062
    9. '1' → logprob: -17.625015258789062
    10. '_' → logprob: -18.000015258789062

Token 167: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31328314542770386
    2. ' for' → logprob: -1.3132832050323486
    3. '	for' → logprob: -10.93828296661377
    4. '   ' → logprob: -12.81328296661377
    5. 'i' → logprob: -15.18828296661377
    6. ' i' → logprob: -15.93828296661377
    7. '    ' → logprob: -16.063283920288086
    8. ' ' → logprob: -16.188283920288086
    9. '[' → logprob: -16.438283920288086
    10. '1' → logprob: -16.563283920288086

Token 168: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02351950667798519
    2. 'range' → logprob: -3.773519515991211
    3. ' i' → logprob: -8.523519515991211
    4. ' range' → logprob: -9.523519515991211
    5. 'in' → logprob: -13.523519515991211
    6. '(i' → logprob: -14.898519515991211
    7. ' in' → logprob: -15.773519515991211
    8. ' ' → logprob: -16.14851951599121
    9. '[i' → logprob: -16.27351951599121
    10. '   ' → logprob: -18.02351951599121

Token 169: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31560683250427246
    2. 'in' → logprob: -1.3156068325042725
    3. 'range' → logprob: -6.065607070922852
    4. ' range' → logprob: -11.565607070922852
    5. '(range' → logprob: -12.440607070922852
    6. 'i' → logprob: -12.940607070922852
    7. ' ' → logprob: -13.940607070922852
    8. 'for' → logprob: -13.940607070922852
    9. '   ' → logprob: -14.315607070922852
    10. '(i' → logprob: -14.940607070922852

Token 170: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.56102097814437e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -16.625045776367188
    4. '   ' → logprob: -20.375045776367188
    5. 're' → logprob: -20.500045776367188
    6. ' ' → logprob: -20.625045776367188
    7. '	range' → logprob: -21.125045776367188
    8. '  ' → logprob: -21.750045776367188
    9. '
' → logprob: -22.250045776367188
    10. 'reverse' → logprob: -22.625045776367188

Token 171: '(' (ID: 7)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.00018339496455155313
    2. '(' → logprob: -9.62518310546875
    3. '30' → logprob: -10.00018310546875
    4. '32' → logprob: -10.25018310546875
    5. '0' → logprob: -10.62518310546875
    6. '(move' → logprob: -11.87518310546875
    7. 'move' → logprob: -12.25018310546875
    8. '1' → logprob: -15.62518310546875
    9. '5' → logprob: -15.75018310546875
    10. ' ' → logprob: -17.75018310546875

Token 172: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.003029998391866684
    2. 'move' → logprob: -5.878029823303223
    3. '0' → logprob: -8.878029823303223
    4. '32' → logprob: -9.753029823303223
    5. '30' → logprob: -10.753029823303223
    6. '(move' → logprob: -12.503029823303223
    7. '1' → logprob: -13.128029823303223
    8. '```' → logprob: -15.378029823303223
    9. '(' → logprob: -15.753029823303223
    10. '5' → logprob: -17.12803077697754

Token 173: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7110029458999634
    2. '])' → logprob: -0.7110029458999634
    3. ')]' → logprob: -4.086002826690674
    4. ',' → logprob: -8.086003303527832
    5. '])]' → logprob: -8.336003303527832
    6. ']}' → logprob: -8.586003303527832
    7. ')])' → logprob: -9.961003303527832
    8. ']]' → logprob: -10.336003303527832
    9. '}]' → logprob: -10.586003303527832
    10. '],' → logprob: -11.461003303527832

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5759695768356323
    2. 'print' → logprob: -0.8259695768356323
    3. ' print' → logprob: -11.450969696044922
    4. '```' → logprob: -11.950969696044922
    5. '
' → logprob: -12.075969696044922
    6. '    
' → logprob: -12.950969696044922
    7. '<|end|>' → logprob: -13.200969696044922
    8. '	print' → logprob: -13.325969696044922
    9. '[' → logprob: -15.200969696044922
    10. '``' → logprob: -15.450969696044922

Token 175: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.2723104848410003e-05
    2. '   ' → logprob: -10.750022888183594
    3. ' print' → logprob: -13.625022888183594
    4. '
' → logprob: -17.375022888183594
    5. '```' → logprob: -17.750022888183594
    6. 'move' → logprob: -18.125022888183594
    7. '    
' → logprob: -18.125022888183594
    8. '	print' → logprob: -18.625022888183594
    9. ' ' → logprob: -18.750022888183594
    10. '  ' → logprob: -19.625022888183594

Token 176: '(move' (ID: 69621)
  Prédit: '(move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -13.000003814697266
    3. 'move' → logprob: -13.375003814697266
    4. '(m' → logprob: -16.000003814697266
    5. '(len' → logprob: -17.000003814697266
    6. '(
' → logprob: -18.375003814697266
    7. '	move' → logprob: -19.000003814697266
    8. '(f' → logprob: -19.125003814697266
    9. '(match' → logprob: -20.250003814697266
    10. '()' → logprob: -20.250003814697266

Token 177: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.04872839152812958
    2. '(move' → logprob: -3.0487284660339355
    3. 'count' → logprob: -9.798727989196777
    4. 'move' → logprob: -10.298727989196777
    5. '_move' → logprob: -10.423727989196777
    6. '(' → logprob: -11.673727989196777
    7. '(count' → logprob: -12.048727989196777
    8. '_counts' → logprob: -12.173727989196777
    9. 'Count' → logprob: -13.673727989196777
    10. '_cnt' → logprob: -15.548727989196777

Token 178: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03804459050297737
    2. ')' → logprob: -3.2880446910858154
    3. ' )
' → logprob: -13.788044929504395
    4. ')
' → logprob: -14.038044929504395
    5. '   ' → logprob: -14.913044929504395
    6. '")
' → logprob: -15.038044929504395
    7. ')

' → logprob: -15.163044929504395
    8. '")' → logprob: -15.788044929504395
    9. '())
' → logprob: -16.913043975830078
    10. ' )' → logprob: -17.038043975830078

Token 179: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016027313540689647
    2. '   ' → logprob: -8.875160217285156
    3. ' print' → logprob: -11.125160217285156
    4. '<|end|>' → logprob: -12.625160217285156
    5. '    
' → logprob: -14.375160217285156
    6. '```' → logprob: -14.625160217285156
    7. '	print' → logprob: -14.875160217285156
    8. '
' → logprob: -15.000160217285156
    9. '  
' → logprob: -15.375160217285156
    10. '  ' → logprob: -16.000160217285156

Token 180: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.5213274309644476e-05
    2. ' print' → logprob: -11.125015258789062
    3. '
' → logprob: -15.250015258789062
    4. '    
' → logprob: -17.000015258789062
    5. '  
' → logprob: -17.500015258789062
    6. ' 
' → logprob: -17.750015258789062
    7. '.print' → logprob: -19.000015258789062
    8. '(print' → logprob: -19.125015258789062
    9. '```' → logprob: -19.500015258789062
    10. '   ' → logprob: -19.500015258789062

Token 181: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00011152983643114567
    2. '"' → logprob: -9.12511157989502
    3. '(' → logprob: -12.87511157989502
    4. '('' → logprob: -16.875110626220703
    5. '()' → logprob: -17.750110626220703
    6. '(("' → logprob: -18.750110626220703
    7. '(*' → logprob: -18.875110626220703
    8. ' ("' → logprob: -19.250110626220703
    9. '(
' → logprob: -19.500110626220703
    10. '("("' → logprob: -19.875110626220703

Token 182: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -3.128163257315464e-07
    2. ' "' → logprob: -15.25
    3. '("' → logprob: -17.125
    4. ''' → logprob: -18.5
    5. 'str' → logprob: -18.75
    6. ' ' → logprob: -19.125
    7. '(' → logprob: -19.625
    8. '"os' → logprob: -20.5
    9. '  
' → logprob: -20.5
    10. '"x' → logprob: -20.75

Token 183: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.200166469876422e-06
    2. '"' → logprob: -12.250004768371582
    3. '.join' → logprob: -15.875004768371582
    4. '(join' → logprob: -15.875004768371582
    5. '".' → logprob: -16.5000057220459
    6. 'str' → logprob: -16.7500057220459
    7. ' join' → logprob: -17.2500057220459
    8. '_join' → logprob: -19.0000057220459
    9. 'print' → logprob: -20.2500057220459
    10. 'joins' → logprob: -21.0000057220459

Token 184: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -2.7848862373502925e-05
    2. 'str' → logprob: -10.500027656555176
    3. '(' → logprob: -15.625027656555176
    4. '[str' → logprob: -16.000028610229492
    5. '=str' → logprob: -18.250028610229492
    6. ' str' → logprob: -19.250028610229492
    7. '	str' → logprob: -19.500028610229492
    8. '   ' → logprob: -19.875028610229492
    9. '(map' → logprob: -19.875028610229492
    10. ' (' → logprob: -20.000028610229492

Token 185: '(move' (ID: 69621)
  Prédit: '(move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -4.56102097814437e-05
    2. 'move' → logprob: -10.000045776367188
    3. '(m' → logprob: -16.250045776367188
    4. '(' → logprob: -16.875045776367188
    5. '	move' → logprob: -17.750045776367188
    6. ' move' → logprob: -18.250045776367188
    7. '(i' → logprob: -20.500045776367188
    8. '(x' → logprob: -20.500045776367188
    9. ' (' → logprob: -20.500045776367188
    10. '.move' → logprob: -21.500045776367188

Token 186: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.19578924775123596
    2. 'move' → logprob: -2.320789337158203
    3. 'ength' → logprob: -3.445789337158203
    4. '(move' → logprob: -3.695789337158203
    5. 'length' → logprob: -3.820789337158203
    6. '_lengths' → logprob: -7.695789337158203
    7. 'th' → logprob: -8.570789337158203
    8. '_move' → logprob: -8.820789337158203
    9. '(length' → logprob: -9.570789337158203
    10. 'e' → logprob: -10.070789337158203

Token 187: ')' (ID: 8)
  Prédit: '(move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.001247612526640296
    2. ')' → logprob: -7.376247406005859
    3. 'move' → logprob: -7.501247406005859
    4. 'for' → logprob: -10.00124740600586
    5. '(' → logprob: -11.75124740600586
    6. '   ' → logprob: -11.87624740600586
    7. ' move' → logprob: -12.75124740600586
    8. ' for' → logprob: -13.50124740600586
    9. '(length' → logprob: -13.50124740600586
    10. '	move' → logprob: -14.12624740600586

Token 188: ' for' (ID: 395)
  Prédit: '(move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.008813935332000256
    2. 'for' → logprob: -4.758813858032227
    3. ' for' → logprob: -9.258813858032227
    4. 'move' → logprob: -9.508813858032227
    5. ')' → logprob: -10.883813858032227
    6. '(' → logprob: -12.758813858032227
    7. '   ' → logprob: -12.883813858032227
    8. '(for' → logprob: -13.133813858032227
    9. ' move' → logprob: -13.633813858032227
    10. ' (' → logprob: -13.883813858032227

Token 189: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.00046796895912848413
    2. ' move' → logprob: -7.750467777252197
    3. '(move' → logprob: -10.375468254089355
    4. '_move' → logprob: -12.125468254089355
    5. '	move' → logprob: -14.625468254089355
    6. '   ' → logprob: -17.25046730041504
    7. '  ' → logprob: -17.75046730041504
    8. '_' → logprob: -17.87546730041504
    9. '.move' → logprob: -18.00046730041504
    10. ' ' → logprob: -18.12546730041504

Token 190: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.008036458864808083
    2. '_lengths' → logprob: -5.0080366134643555
    3. 'length' → logprob: -6.6330366134643555
    4. 'Length' → logprob: -13.133036613464355
    5. 'Lengths' → logprob: -14.758036613464355
    6. 'ength' → logprob: -14.883036613464355
    7. '_l' → logprob: -14.883036613464355
    8. '_len' → logprob: -14.883036613464355
    9. 'leng' → logprob: -15.883036613464355
    10. '-length' → logprob: -16.13303565979004

Token 191: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6492668390274048
    2. '_lengths' → logprob: -1.2742668390274048
    3. ' in' → logprob: -1.7742668390274048
    4. ')' → logprob: -4.024266719818115
    5. 'move' → logprob: -5.274266719818115
    6. 'for' → logprob: -6.399266719818115
    7. 's' → logprob: -6.899266719818115
    8. '))' → logprob: -7.649266719818115
    9. '_moves' → logprob: -7.774266719818115
    10. 'Lengths' → logprob: -7.774266719818115

Token 192: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.003183420980349183
    2. ' move' → logprob: -5.753183364868164
    3. '(move' → logprob: -12.253183364868164
    4. ' ' → logprob: -15.628183364868164
    5. '  ' → logprob: -16.003183364868164
    6. 'str' → logprob: -16.128183364868164
    7. ')' → logprob: -16.253183364868164
    8. 'moves' → logprob: -16.378183364868164
    9. 'mov' → logprob: -16.503183364868164
    10. '[' → logprob: -16.503183364868164

Token 193: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -3.7146746763028204e-05
    2. 'ength' → logprob: -10.75003719329834
    3. 'length' → logprob: -11.50003719329834
    4. '_length' → logprob: -12.87503719329834
    5. 'Lengths' → logprob: -13.37503719329834
    6. '_counts' → logprob: -13.62503719329834
    7. 's' → logprob: -16.125036239624023
    8. 'leng' → logprob: -17.125036239624023
    9. ' lengths' → logprob: -17.625036239624023
    10. '-length' → logprob: -18.125036239624023

Token 194: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010575797641649842
    2. ')' → logprob: -6.8760576248168945
    3. '))
' → logprob: -11.376057624816895
    4. ')))' → logprob: -11.876057624816895
    5. '"))' → logprob: -12.126057624816895
    6. ' ))' → logprob: -14.501057624816895
    7. '()))' → logprob: -16.126056671142578
    8. ''))' → logprob: -16.251056671142578
    9. '   ' → logprob: -16.626056671142578
    10. ')")' → logprob: -17.001056671142578

Token 195: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01167697086930275
    2. '<|end|>' → logprob: -5.761676788330078
    3. 'direction' → logprob: -5.886676788330078
    4. ' for' → logprob: -6.136676788330078
    5. '#' → logprob: -7.386676788330078
    6. 'dire' → logprob: -7.886676788330078
    7. 'print' → logprob: -7.886676788330078
    8. 'move' → logprob: -7.886676788330078
    9. '0' → logprob: -8.011676788330078
    10. '   ' → logprob: -8.636676788330078

Token 196: ' target' (ID: 3783)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3930600583553314
    2. ' current' → logprob: -1.2680600881576538
    3. 'x' → logprob: -3.7680599689483643
    4. ' x' → logprob: -5.143060207366943
    5. 'point' → logprob: -5.143060207366943
    6. 'input' → logprob: -6.018060207366943
    7. ' point' → logprob: -6.643060207366943
    8. '_' → logprob: -6.643060207366943
    9. ' input' → logprob: -7.018060207366943
    10. '_x' → logprob: -7.143060207366943

Token 197: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0013190467143431306
    2. '_current' → logprob: -7.37631893157959
    3. 'current' → logprob: -7.87631893157959
    4. '_' → logprob: -9.00131893157959
    5. ' current' → logprob: -9.50131893157959
    6. 'x' → logprob: -9.50131893157959
    7. ' _' → logprob: -11.12631893157959
    8. '_target' → logprob: -11.50131893157959
    9. ' ' → logprob: -13.37631893157959
    10. ' in' → logprob: -13.62631893157959

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019698418327607214
    2. ',target' → logprob: -8.625197410583496
    3. ' in' → logprob: -11.500197410583496
    4. ' ,' → logprob: -12.625197410583496
    5. ',current' → logprob: -13.125197410583496
    6. ',_' → logprob: -14.375197410583496
    7. 'in' → logprob: -14.375197410583496
    8. ',input' → logprob: -15.000197410583496
    9. '_,' → logprob: -15.625197410583496
    10. ',in' → logprob: -16.87519645690918

Token 199: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.07889628410339355
    2. ' target' → logprob: -2.5788962841033936
    3. '(target' → logprob: -12.203896522521973
    4. '	target' → logprob: -14.453896522521973
    5. '_target' → logprob: -15.078896522521973
    6. ',target' → logprob: -15.453896522521973
    7. '   ' → logprob: -15.703896522521973
    8. '[target' → logprob: -15.828896522521973
    9. ' ' → logprob: -16.328895568847656
    10. 'current' → logprob: -17.828895568847656

Token 200: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.25728628039360046
    2. ',' → logprob: -2.132286310195923
    3. '_x' → logprob: -2.507286310195923
    4. ',_' → logprob: -4.382286071777344
    5. ' in' → logprob: -5.507286071777344
    6. '_' → logprob: -5.757286071777344
    7. 'in' → logprob: -5.882286071777344
    8. '_,' → logprob: -6.007286071777344
    9. ',y' → logprob: -7.132286071777344
    10. '_in' → logprob: -8.132286071777344

Token 201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132680654525757
    2. 'in' → logprob: -1.3132680654525757
    3. '	in' → logprob: -13.063267707824707
    4. ',' → logprob: -13.563267707824707
    5. 'input' → logprob: -14.813267707824707
    6. ' ' → logprob: -14.938267707824707
    7. '_in' → logprob: -15.313267707824707
    8. '  ' → logprob: -15.313267707824707
    9. 'inthe' → logprob: -15.438267707824707
    10. 'inp' → logprob: -15.688267707824707

Token 202: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023265164345502853
    2. ' input' → logprob: -3.7732651233673096
    3. '[input' → logprob: -11.14826488494873
    4. '(input' → logprob: -12.64826488494873
    5. 'coordinate' → logprob: -15.02326488494873
    6. '[' → logprob: -15.39826488494873
    7. '[]' → logprob: -15.52326488494873
    8. '[(' → logprob: -15.77326488494873
    9. '_input' → logprob: -15.77326488494873
    10. ' ' → logprob: -15.89826488494873

Token 203: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -3.128163257315464e-07
    2. '_points' → logprob: -15.5
    3. 'point' → logprob: -16.875
    4. '_' → logprob: -17.125
    5. '_list' → logprob: -18.25
    6. '_p' → logprob: -18.625
    7. '_Point' → logprob: -19.0
    8. '_POINT' → logprob: -19.125
    9. 'Point' → logprob: -19.375
    10. '_line' → logprob: -19.875

Token 204: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.7968066206085496e-05
    2. 'list' → logprob: -11.125027656555176
    3. ':' → logprob: -11.500027656555176
    4. '_point' → logprob: -13.250027656555176
    5. '_points' → logprob: -14.875027656555176
    6. '_count' → logprob: -15.125027656555176
    7. 'point' → logprob: -15.375027656555176
    8. 'List' → logprob: -15.750027656555176
    9. 's' → logprob: -16.875028610229492
    10. '_:' → logprob: -16.875028610229492

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002875569916795939
    2. ':
' → logprob: -8.375288009643555
    3. ',' → logprob: -10.500288009643555
    4. ' :' → logprob: -11.000288009643555
    5. '<|end|>' → logprob: -12.500288009643555
    6. '):' → logprob: -12.625288009643555
    7. ':**' → logprob: -13.750288009643555
    8. '   ' → logprob: -14.125288009643555
    9. ':

' → logprob: -14.250288009643555
    10. '<|end|>' → logprob: -14.375288009643555

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07816122472286224
    2. '<|end|>' → logprob: -2.7031612396240234
    3. '    
' → logprob: -5.453161239624023
    4. '    ' → logprob: -6.328161239624023
    5. '<|end|>' → logprob: -7.203161239624023
    6. ',' → logprob: -7.328161239624023
    7. ' ' → logprob: -8.703161239624023
    8. ' ,' → logprob: -9.828161239624023
    9. '  ' → logprob: -10.015661239624023
    10. ' for' → logprob: -10.078161239624023

Token 207: ' x' (ID: 1215)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.7677234411239624
    2. ' moves' → logprob: -2.392723560333252
    3. 'dx' → logprob: -2.392723560333252
    4. '   ' → logprob: -3.017723560333252
    5. 'move' → logprob: -3.142723560333252
    6. '    ' → logprob: -3.267723560333252
    7. 'current' → logprob: -3.392723560333252
    8. ' directions' → logprob: -3.642723560333252
    9. 'dire' → logprob: -3.767723560333252
    10. ' move' → logprob: -3.892723560333252

Token 208: '_value' (ID: 6734)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.5182435512542725
    2. '_current' → logprob: -1.7682435512542725
    3. '_diff' → logprob: -2.0182435512542725
    4. '_moves' → logprob: -2.0182435512542725
    5. '_remaining' → logprob: -2.1432435512542725
    6. '_move' → logprob: -2.6432435512542725
    7. ',' → logprob: -3.0182435512542725
    8. '_' → logprob: -3.5182435512542725
    9. '_,' → logprob: -4.143243789672852
    10. '_curr' → logprob: -4.643243789672852

Token 209: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20410467684268951
    2. '=' → logprob: -2.3291046619415283
    3. ' =' → logprob: -2.4541046619415283
    4. ' ,' → logprob: -6.954104900360107
    5. ',x' → logprob: -9.45410442352295
    6. '=x' → logprob: -10.07910442352295
    7. 's' → logprob: -10.45410442352295
    8. '_' → logprob: -10.82910442352295
    9. '_,' → logprob: -10.82910442352295
    10. '_current' → logprob: -10.82910442352295

Token 210: ' target' (ID: 3783)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14078249037265778
    2. 'target' → logprob: -2.140782594680786
    3. 'abs' → logprob: -4.515782356262207
    4. 'y' → logprob: -7.640782356262207
    5. 'sum' → logprob: -7.890782356262207
    6. '(target' → logprob: -8.265782356262207
    7. ' ' → logprob: -8.515782356262207
    8. 'move' → logprob: -8.515782356262207
    9. 'x' → logprob: -8.640782356262207
    10. '-' → logprob: -8.640782356262207

Token 211: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -8.518582762917504e-05
    2. 'x' → logprob: -9.50008487701416
    3. '_y' → logprob: -12.50008487701416
    4. '_value' → logprob: -12.75008487701416
    5. '[' → logprob: -13.75008487701416
    6. '0' → logprob: -14.00008487701416
    7. '=' → logprob: -14.25008487701416
    8. '_' → logprob: -14.87508487701416
    9. 's' → logprob: -16.000085830688477
    10. 'value' → logprob: -16.625085830688477

Token 212: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3193038702011108
    2. '=' → logprob: -1.6943038702011108
    3. '_abs' → logprob: -1.9443038702011108
    4. ',' → logprob: -2.5693039894104004
    5. 'abs' → logprob: -2.8193039894104004
    6. '+' → logprob: -3.0693039894104004
    7. '
' → logprob: -3.1943039894104004
    8. ' +' → logprob: -3.3193039894104004
    9. '_value' → logprob: -3.5693039894104004
    10. '_bits' → logprob: -4.6943039894104

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6169357895851135
    2. '
' → logprob: -0.8669357895851135
    3. '    
' → logprob: -4.366935729980469
    4. ' y' → logprob: -4.866935729980469
    5. ',' → logprob: -5.241935729980469
    6. '<|end|>' → logprob: -5.741935729980469
    7. 'y' → logprob: -5.991935729980469
    8. ' ' → logprob: -6.491935729980469
    9. ',y' → logprob: -6.866935729980469
    10. '  ' → logprob: -6.866935729980469

Token 214: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.004805330187082291
    2. ' y' → logprob: -5.379805564880371
    3. '   ' → logprob: -8.754805564880371
    4. '
' → logprob: -11.254805564880371
    5. '    
' → logprob: -12.379805564880371
    6. '    ' → logprob: -12.754805564880371
    7. ' ' → logprob: -13.129805564880371
    8. 'x' → logprob: -13.504805564880371
    9. '  ' → logprob: -14.254805564880371
    10. '	y' → logprob: -14.504805564880371

Token 215: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.407366916188039e-05
    2. '_' → logprob: -10.500054359436035
    3. ' =' → logprob: -11.625054359436035
    4. 'value' → logprob: -12.000054359436035
    5. '=' → logprob: -12.250054359436035
    6. '_val' → logprob: -13.125054359436035
    7. '<|end|>' → logprob: -14.000054359436035
    8. '_=' → logprob: -14.500054359436035
    9. '_VALUE' → logprob: -14.625054359436035
    10. '_values' → logprob: -14.750054359436035

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20165394246578217
    2. '=' → logprob: -1.7016539573669434
    3. ',' → logprob: -8.826653480529785
    4. '<|end|>' → logprob: -9.826653480529785
    5. ' ' → logprob: -11.951653480529785
    6. '   ' → logprob: -12.076653480529785
    7. '<|end|>' → logprob: -12.326653480529785
    8. ')' → logprob: -12.326653480529785
    9. '_' → logprob: -12.826653480529785
    10. ' =
' → logprob: -13.201653480529785

Token 217: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.0021867838222533464
    2. ' target' → logprob: -6.1271867752075195
    3. '0' → logprob: -14.00218677520752
    4. '[target' → logprob: -15.37718677520752
    5. '(target' → logprob: -15.50218677520752
    6. '	target' → logprob: -16.002187728881836
    7. ' ' → logprob: -16.252187728881836
    8. 't' → logprob: -16.627187728881836
    9. '-target' → logprob: -17.252187728881836
    10. 'taget' → logprob: -17.377187728881836

Token 218: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.004280804190784693
    2. '_' → logprob: -5.5042805671691895
    3. 'y' → logprob: -9.129281044006348
    4. '_value' → logprob: -9.379281044006348
    5. '_
' → logprob: -12.504281044006348
    6. '_x' → logprob: -12.629281044006348
    7. 'Y' → logprob: -14.379281044006348
    8. '_

' → logprob: -15.129281044006348
    9. '_
' → logprob: -15.504281044006348
    10. '=' → logprob: -15.754281044006348

Token 219: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05285298079252243
    2. ' for' → logprob: -4.177853107452393
    3. '<|end|>' → logprob: -4.177853107452393
    4. 'for' → logprob: -4.552853107452393
    5. '
' → logprob: -4.927853107452393
    6. '    
' → logprob: -6.302853107452393
    7. 'moves' → logprob: -8.302852630615234
    8. '<|end|>' → logprob: -8.552852630615234
    9. ' moves' → logprob: -8.802852630615234
    10. ' while' → logprob: -9.302852630615234

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8679404258728027
    2. 'for' → logprob: -1.6179404258728027
    3. '<|end|>' → logprob: -1.6179404258728027
    4. ' for' → logprob: -1.8679404258728027
    5. '[' → logprob: -5.242940425872803
    6. '
' → logprob: -5.367940425872803
    7. 'moves' → logprob: -5.867940425872803
    8. '    ' → logprob: -5.992940425872803
    9. ' ' → logprob: -6.117940425872803
    10. ' moves' → logprob: -6.367940425872803

Token 221: ' if' (ID: 538)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.4769253134727478
    2. 'move' → logprob: -2.2269253730773926
    3. '   ' → logprob: -2.6019253730773926
    4. 'dire' → logprob: -2.7269253730773926
    5. 'direction' → logprob: -2.9769253730773926
    6. 'for' → logprob: -3.8519253730773926
    7. 'result' → logprob: -4.101925373077393
    8. 'mov' → logprob: -4.101925373077393
    9. 'movement' → logprob: -5.101925373077393
    10. 'steps' → logprob: -5.101925373077393

Token 222: ' coordinate' (ID: 30380)
  Prédit: ' coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordinate' → logprob: -0.3146688640117645
    2. 'coordinate' → logprob: -1.314668893814087
    3. ' move' → logprob: -7.189668655395508
    4. 'move' → logprob: -8.314668655395508
    5. ' not' → logprob: -8.939668655395508
    6. ' input' → logprob: -9.314668655395508
    7. ' ' → logprob: -10.064668655395508
    8. 'not' → logprob: -10.314668655395508
    9. 'input' → logprob: -10.689668655395508
    10. ' len' → logprob: -10.689668655395508

Token 223: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -6.704273118884885e-07
    2. 'mod' → logprob: -14.500000953674316
    3. '_' → logprob: -16.875
    4. '_value' → logprob: -18.875
    5. '_MOD' → logprob: -19.375
    6. '_ref' → logprob: -20.0
    7. 'Mod' → logprob: -20.125
    8. '%' → logprob: -20.25
    9. '_reference' → logprob: -20.25
    10. '_mode' → logprob: -20.375

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003723826725035906
    2. '_mod' → logprob: -5.878723621368408
    3. 'mod' → logprob: -7.003723621368408
    4. 'reference' → logprob: -12.503724098205566
    5. '_reference' → logprob: -12.628724098205566
    6. 'Mod' → logprob: -14.753724098205566
    7. '   ' → logprob: -14.753724098205566
    8. '_value' → logprob: -14.878724098205566
    9. '_re' → logprob: -15.378724098205566
    10. '_ref' → logprob: -15.628724098205566

Token 225: '_reference' (ID: 61118)
  Prédit: '_reference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reference' → logprob: -7.910643762443215e-05
    2. 'reference' → logprob: -9.500079154968262
    3. '==' → logprob: -12.875079154968262
    4. 'Reference' → logprob: -13.750079154968262
    5. '_REFERENCE' → logprob: -15.500079154968262
    6. ' ==' → logprob: -15.625079154968262
    7. '_mod' → logprob: -17.500078201293945
    8. '(reference' → logprob: -17.500078201293945
    9. 'REFERENCE' → logprob: -17.625078201293945
    10. '_' → logprob: -17.875078201293945

Token 226: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08906334638595581
    2. ' ==' → logprob: -2.4640634059906006
    3. ':' → logprob: -9.08906364440918
    4. '=' → logprob: -12.46406364440918
    5. '==
' → logprob: -13.71406364440918
    6. '0' → logprob: -13.83906364440918
    7. 'else' → logprob: -14.08906364440918
    8. '   ' → logprob: -14.08906364440918
    9. ']==' → logprob: -14.71406364440918
    10. ')==' → logprob: -14.71406364440918

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2271611988544464
    2. '0' → logprob: -1.602161169052124
    3. ' ' → logprob: -6.352161407470703
    4. '   ' → logprob: -13.914661407470703
    5. '(' → logprob: -15.477161407470703
    6. '[' → logprob: -15.539661407470703
    7. '۱' → logprob: -15.664661407470703
    8. '  ' → logprob: -15.914661407470703
    9. '１' → logprob: -16.102161407470703
    10. '```' → logprob: -16.414661407470703

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231720805168152
    2. '1' → logprob: -0.8981720805168152
    3. ' ' → logprob: -10.023172378540039
    4. '   ' → logprob: -13.460672378540039
    5. '```' → logprob: -14.273172378540039
    6. '	' → logprob: -15.835672378540039
    7. '

' → logprob: -15.960672378540039
    8. '１' → logprob: -15.960672378540039
    9. '۰' → logprob: -16.02317237854004
    10. '  ' → logprob: -16.02317237854004

Token 229: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028702542185783386
    2. ':
' → logprob: -5.877870082855225
    3. '   ' → logprob: -10.502870559692383
    4. ' :' → logprob: -11.377870559692383
    5. ' ==' → logprob: -11.502870559692383
    6. '       ' → logprob: -11.627870559692383
    7. '):' → logprob: -12.877870559692383
    8. '==' → logprob: -13.252870559692383
    9. ' and' → logprob: -14.502870559692383
    10. ':

' → logprob: -14.752870559692383

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03153461217880249
    2. '        
' → logprob: -3.7815346717834473
    3. '   ' → logprob: -5.531534671783447
    4. '    ' → logprob: -6.531534671783447
    5. ' for' → logprob: -6.906534671783447
    6. '    
' → logprob: -7.281534671783447
    7. 'for' → logprob: -8.031534194946289
    8. '
' → logprob: -8.281534194946289
    9. '        ' → logprob: -9.031534194946289
    10. '      ' → logprob: -9.281534194946289

Token 231: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4440048635005951
    2. 'x' (adapté à ' x') → logprob: -1.0690048933029175
    3. 'move' → logprob: -4.694005012512207
    4. ' x' → logprob: -5.944005012512207
    5. 'print' → logprob: -7.069005012512207
    6. 'if' → logprob: -7.069005012512207
    7. ' move' → logprob: -7.444005012512207
    8. 'for' → logprob: -7.944005012512207
    9. '#' → logprob: -8.569005012512207
    10. 'current' → logprob: -8.944005012512207

Token 232: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.7385154428193346e-05
    2. '_' → logprob: -10.87503719329834
    3. '_val' → logprob: -12.62503719329834
    4. '=' → logprob: -13.00003719329834
    5. '_values' → logprob: -13.12503719329834
    6. ' -=' → logprob: -13.25003719329834
    7. ' =' → logprob: -13.25003719329834
    8. 'value' → logprob: -13.37503719329834
    9. ',' → logprob: -13.62503719329834
    10. '-=' → logprob: -13.87503719329834

Token 233: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.3430549204349518
    2. ' -=' → logprob: -2.218055009841919
    3. '//=' → logprob: -2.218055009841919
    4. '=' → logprob: -3.593055009841919
    5. '+=' → logprob: -3.718055009841919
    6. ',' → logprob: -5.21805477142334
    7. ' >>=' → logprob: -5.34305477142334
    8. '>>' → logprob: -5.71805477142334
    9. '-' → logprob: -5.84305477142334
    10. ' //' → logprob: -6.96805477142334

Token 234: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. 'move' → logprob: -12.000020980834961
    3. '0' → logprob: -12.250020980834961
    4. '-' → logprob: -12.250020980834961
    5. ' ' → logprob: -12.250020980834961
    6. '(' → logprob: -16.00002098083496
    7. ' -' → logprob: -16.75002098083496
    8. '(move' → logprob: -17.25002098083496
    9. ' move' → logprob: -17.50002098083496
    10. '   ' → logprob: -17.87502098083496

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.875006675720215
    3. '-' → logprob: -13.000006675720215
    4. 'move' → logprob: -13.375006675720215
    5. '0' → logprob: -14.625006675720215
    6. ' -' → logprob: -17.00000762939453
    7. '(' → logprob: -17.00000762939453
    8. '   ' → logprob: -17.37500762939453
    9. ' move' → logprob: -18.31250762939453
    10. '[' → logprob: -18.68750762939453

Token 236: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19750618934631348
    2. '<|end|>' → logprob: -1.8225061893463135
    3. '    
' → logprob: -4.697505950927734
    4. '<|end|>' → logprob: -5.322505950927734
    5. '
' → logprob: -6.697505950927734
    6. ' y' → logprob: -7.197505950927734
    7. '    ' → logprob: -7.572505950927734
    8. '       ' → logprob: -8.447505950927734
    9. '  ' → logprob: -9.072505950927734
    10. ',' → logprob: -9.322505950927734

Token 237: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01097896695137024
    2. '<|end|>' → logprob: -5.135979175567627
    3. '    
' → logprob: -5.760979175567627
    4. '
' → logprob: -7.010979175567627
    5. 'for' → logprob: -7.885979175567627
    6. ' for' → logprob: -8.635978698730469
    7. '<|end|>' → logprob: -9.260978698730469
    8. '    ' → logprob: -10.010978698730469
    9. 'x' → logprob: -10.135978698730469
    10. 'move' → logprob: -10.510978698730469

Token 238: ' print' (ID: 2123)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003398726985324174
    2. ' y' → logprob: -8.00033950805664
    3. '0' → logprob: -13.25033950805664
    4. 'x' → logprob: -13.75033950805664
    5. '1' → logprob: -13.87533950805664
    6. ' ' → logprob: -15.37533950805664
    7. '   ' → logprob: -15.87533950805664
    8. '  ' → logprob: -16.87533950805664
    9. '
' → logprob: -17.37533950805664
    10. 'if' → logprob: -17.62533950805664

Token 239: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6713854670524597
    2. '("' → logprob: -1.7963855266571045
    3. '('' → logprob: -1.9213855266571045
    4. '(x' → logprob: -2.4213855266571045
    5. '()' → logprob: -2.7963855266571045
    6. '(f' → logprob: -4.921385288238525
    7. '(abs' → logprob: -5.046385288238525
    8. '(move' → logprob: -5.921385288238525
    9. '("")' → logprob: -6.046385288238525
    10. '("("' → logprob: -6.046385288238525

Token 240: 'R' (ID: 49)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8173736333847046
    2. '")' → logprob: -0.9423736333847046
    3. '1' → logprob: -3.317373752593994
    4. 'x' → logprob: -3.442373752593994
    5. '"' → logprob: -3.567373752593994
    6. ')' → logprob: -3.692373752593994
    7. 'end' → logprob: -4.317373752593994
    8. ' ")' → logprob: -4.817373752593994
    9. '",' → logprob: -5.567373752593994
    10. '31' → logprob: -5.817373752593994

Token 241: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3752503991127014
    2. '",' → logprob: -1.8752503395080566
    3. '"' → logprob: -2.3752503395080566
    4. ' ")' → logprob: -3.3752503395080566
    5. ' ",' → logprob: -4.375250339508057
    6. ' "' → logprob: -4.875250339508057
    7. '","' → logprob: -6.625250339508057
    8. '"D' → logprob: -6.875250339508057
    9. 'D' → logprob: -7.000250339508057
    10. '"L' → logprob: -7.250250339508057

Token 242: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.009760929271578789
    2. ')' → logprob: -5.384760856628418
    3. ' end' → logprob: -5.884760856628418
    4. 'move' → logprob: -7.009760856628418
    5. 'x' → logprob: -7.634760856628418
    6. ',end' → logprob: -7.759760856628418
    7. ',' → logprob: -8.759760856628418
    8. '(end' → logprob: -9.884760856628418
    9. ' )' → logprob: -9.884760856628418
    10. ' ' → logprob: -10.009760856628418

Token 243: '="")
' (ID: 154840)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '='' → logprob: -0.6447089910507202
    2. ')' → logprob: -1.1447089910507202
    3. '"' → logprob: -2.7697091102600098
    4. '="' → logprob: -3.0197091102600098
    5. ''' → logprob: -3.8947091102600098
    6. '=' → logprob: -4.76970911026001
    7. '""' → logprob: -5.39470911026001
    8. '=''' → logprob: -5.39470911026001
    9. ' "")' → logprob: -6.64470911026001
    10. ' '')' → logprob: -6.64470911026001

Token 244: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' coordinate' (ID: 30380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.20122230052948
    2. 'for' → logprob: -1.20122230052948
    3. ' for' → logprob: -1.45122230052948
    4. '<|end|>' → logprob: -1.95122230052948
    5. ' ' → logprob: -4.8262224197387695
    6. '    ' → logprob: -5.4512224197387695
    7. '  ' → logprob: -5.9512224197387695
    8. 'else' → logprob: -6.2012224197387695
    9. '<|end|>' → logprob: -7.2012224197387695
    10. '    
' → logprob: -7.5762224197387695

Token 246: '_sum' (ID: 29859)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.006850820034742355
    2. '_value' → logprob: -5.006850719451904
    3. 'mod' → logprob: -9.756851196289062
    4. 'x' → logprob: -10.631851196289062
    5. 'value' → logprob: -10.631851196289062
    6. '_x' → logprob: -11.381851196289062
    7. '_values' → logprob: -11.506851196289062
    8. '_val' → logprob: -12.881851196289062
    9. 'Mod' → logprob: -13.006851196289062
    10. '_' → logprob: -13.131851196289062

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2255212664604187
    2. '=' → logprob: -1.6005213260650635
    3. '   ' → logprob: -10.475521087646484
    4. '_mod' → logprob: -10.850521087646484
    5. '_value' → logprob: -10.850521087646484
    6. '_' → logprob: -11.600521087646484
    7. '  ' → logprob: -11.850521087646484
    8. ' ' → logprob: -12.100521087646484
    9. '=sum' → logprob: -12.350521087646484
    10. 'mod' → logprob: -13.100521087646484

Token 248: ' x' (ID: 1215)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.31621918082237244
    2. 'x' → logprob: -1.9412192106246948
    3. ' abs' → logprob: -2.4412190914154053
    4. ' x' → logprob: -3.4412190914154053
    5. '0' → logprob: -4.941219329833984
    6. '(abs' → logprob: -7.191219329833984
    7. ' ' → logprob: -8.441219329833984
    8. '   ' → logprob: -8.566219329833984
    9. '(x' → logprob: -10.066219329833984
    10. ' (' → logprob: -10.191219329833984

Token 249: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.009589159861207008
    2. '=' → logprob: -5.509589195251465
    3. '+' → logprob: -5.884589195251465
    4. 'value' → logprob: -6.259589195251465
    5. '_' → logprob: -8.009589195251465
    6. ' =' → logprob: -8.259589195251465
    7. '_sum' → logprob: -9.259589195251465
    8. ' +' → logprob: -10.634589195251465
    9. '_val' → logprob: -10.884589195251465
    10. ',' → logprob: -11.134589195251465

Token 250: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0068990131840109825
    2. ' +' → logprob: -6.381898880004883
    3. '+=' → logprob: -6.506898880004883
    4. '=' → logprob: -6.506898880004883
    5. '_plus' → logprob: -6.756898880004883
    6. 'plus' → logprob: -7.506898880004883
    7. '+y' → logprob: -7.881898880004883
    8. '_abs' → logprob: -10.506898880004883
    9. '_' → logprob: -11.256898880004883
    10. '_bit' → logprob: -11.631898880004883

Token 251: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.033663567155599594
    2. ' y' → logprob: -3.408663511276245
    3. 'abs' → logprob: -11.283663749694824
    4. ' abs' → logprob: -13.283663749694824
    5. '   ' → logprob: -13.533663749694824
    6. ' ' → logprob: -13.658663749694824
    7. '    ' → logprob: -15.158663749694824
    8. '  ' → logprob: -15.533663749694824
    9. '	y' → logprob: -15.908663749694824
    10. '<|end|>' → logprob: -16.408662796020508

Token 252: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.2007883671903983e-05
    2. 'alue' → logprob: -11.375021934509277
    3. 'value' → logprob: -11.500021934509277
    4. '_' → logprob: -15.000021934509277
    5. 'Value' → logprob: -17.625022888183594
    6. '_y' → logprob: -17.875022888183594
    7. '_VALUE' → logprob: -18.000022888183594
    8. '_val' → logprob: -18.875022888183594
    9. ' _' → logprob: -19.125022888183594
    10. '_values' → logprob: -19.375022888183594

Token 253: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2102423757314682
    2. ' for' → logprob: -2.83524227142334
    3. '<|end|>' → logprob: -2.83524227142334
    4. 'for' → logprob: -3.08524227142334
    5. 'direction' → logprob: -4.96024227142334
    6. 'moves' → logprob: -5.83524227142334
    7. ' directions' → logprob: -6.21024227142334
    8. 'steps' → logprob: -6.33524227142334
    9. 'dire' → logprob: -6.33524227142334
    10. 'distance' → logprob: -6.71024227142334

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13561312854290009
    2. 'for' → logprob: -3.010613203048706
    3. '<|end|>' → logprob: -3.135613203048706
    4. 'direction' → logprob: -4.135612964630127
    5. 'move' → logprob: -5.885612964630127
    6. ' for' → logprob: -6.010612964630127
    7. 'while' → logprob: -6.010612964630127
    8. 'current' → logprob: -6.135612964630127
    9. 'step' → logprob: -6.260612964630127
    10. 'moves' → logprob: -6.760612964630127

Token 255: ' coordinate' (ID: 30380)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5389947295188904
    2. ' direction' → logprob: -2.163994789123535
    3. ' move' → logprob: -2.663994789123535
    4. 'for' → logprob: -2.913994789123535
    5. ' directions' → logprob: -3.038994789123535
    6. '   ' → logprob: -3.163994789123535
    7. ' current' → logprob: -3.913994789123535
    8. ' moves' → logprob: -4.038994789123535
    9. 'direction' → logprob: -4.788994789123535
    10. ' bit' → logprob: -5.038994789123535

Token 256: '_diff' (ID: 41047)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.9639768004417419
    2. '_diff' → logprob: -1.2139768600463867
    3. '_x' → logprob: -1.8389768600463867
    4. '_par' → logprob: -2.5889768600463867
    5. '_sum' → logprob: -2.7139768600463867
    6. '_difference' → logprob: -5.338976860046387
    7. '_bit' → logprob: -5.588976860046387
    8. '_bits' → logprob: -6.213976860046387
    9. '_d' → logprob: -6.588976860046387
    10. '_value' → logprob: -6.963976860046387

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033656876534223557
    2. '=' → logprob: -3.4086568355560303
    3. '   ' → logprob: -11.65865707397461
    4. ' ' → logprob: -13.53365707397461
    5. '  ' → logprob: -14.90865707397461
    6. 's' → logprob: -15.53365707397461
    7. '    ' → logprob: -15.90865707397461
    8. ',' → logprob: -16.15865707397461
    9. '<|end|>' → logprob: -16.78365707397461
    10. 'x' → logprob: -16.90865707397461

Token 258: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47677430510520935
    2. ' x' → logprob: -0.9767743349075317
    3. ' y' → logprob: -6.226774215698242
    4. 'y' → logprob: -7.351774215698242
    5. ' (' → logprob: -10.226774215698242
    6. '(x' → logprob: -11.226774215698242
    7. 'abs' → logprob: -11.351774215698242
    8. '(' → logprob: -12.351774215698242
    9. '   ' → logprob: -12.601774215698242
    10. '	x' → logprob: -13.351774215698242

Token 259: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0008108171750791371
    2. 'value' → logprob: -7.250810623168945
    3. 'x' → logprob: -10.250810623168945
    4. '_' → logprob: -10.750810623168945
    5. '_VALUE' → logprob: -11.750810623168945
    6. 'Value' → logprob: -12.000810623168945
    7. '_x' → logprob: -12.375810623168945
    8. ' =' → logprob: -12.500810623168945
    9. '<|end|>' → logprob: -12.500810623168945
    10. '=' → logprob: -12.625810623168945

Token 260: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2014143168926239
    2. ' -' → logprob: -1.7014143466949463
    3. ' ' → logprob: -14.701414108276367
    4. ' ' → logprob: -15.201414108276367
    5. '   ' → logprob: -16.451414108276367
    6. '–' → logprob: -16.576414108276367
    7. ',' → logprob: -16.576414108276367
    8. '_' → logprob: -16.951414108276367
    9. '—' → logprob: -16.951414108276367
    10. '<|end|>' → logprob: -17.076414108276367

Token 261: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014164687134325504
    2. ' y' → logprob: -4.264164924621582
    3. '   ' → logprob: -14.014164924621582
    4. '(y' → logprob: -15.889164924621582
    5. ' ' → logprob: -16.639163970947266
    6. '	y' → logprob: -17.264163970947266
    7. '  ' → logprob: -18.139163970947266
    8. '    ' → logprob: -18.889163970947266
    9. ' (' → logprob: -19.139163970947266
    10. ',y' → logprob: -19.514163970947266

Token 262: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.001974669052287936
    2. '_' → logprob: -6.251974582672119
    3. '_val' → logprob: -10.626975059509277
    4. 'alue' → logprob: -11.001975059509277
    5. 'value' → logprob: -13.001975059509277
    6. ' _' → logprob: -14.751975059509277
    7. ')_' → logprob: -14.876975059509277
    8. '_coordinate' → logprob: -15.001975059509277
    9. '_
' → logprob: -15.376975059509277
    10. '[' → logprob: -15.501975059509277

Token 263: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010213084518909454
    2. '    
' → logprob: -5.2602128982543945
    3. 'for' → logprob: -6.3852128982543945
    4. '
' → logprob: -6.3852128982543945
    5. ' for' → logprob: -6.7602128982543945
    6. '<|end|>' → logprob: -8.135212898254395
    7. ',' → logprob: -10.260212898254395
    8. '<|end|>' → logprob: -10.635212898254395
    9. '   
' → logprob: -10.760212898254395
    10. '```' → logprob: -11.885212898254395

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009707815013825893
    2. 'for' → logprob: -5.009707927703857
    3. ' for' → logprob: -5.884707927703857
    4. '<|end|>' → logprob: -9.0097074508667
    5. '    
' → logprob: -10.8847074508667
    6. '    ' → logprob: -11.3847074508667
    7. 'while' → logprob: -11.5097074508667
    8. 'indices' → logprob: -12.0097074508667
    9. '	for' → logprob: -12.1347074508667
    10. '  ' → logprob: -12.1347074508667

Token 265: ' bit' (ID: 3546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1472366452217102
    2. '   ' → logprob: -2.0222365856170654
    3. ' for' → logprob: -6.3972368240356445
    4. 'direction' → logprob: -6.7722368240356445
    5. 'moves' → logprob: -7.7722368240356445
    6. 'while' → logprob: -8.022236824035645
    7. 'dire' → logprob: -8.147236824035645
    8. 'move' → logprob: -8.522236824035645
    9. 'steps' → logprob: -8.897236824035645
    10. 'current' → logprob: -9.647236824035645

Token 266: '_matrix' (ID: 23431)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.9068545699119568
    2. 's' → logprob: -1.6568546295166016
    3. '_index' → logprob: -1.7818546295166016
    4. '_pos' → logprob: -2.2818546295166016
    5. '_position' → logprob: -3.4068546295166016
    6. '_positions' → logprob: -3.4068546295166016
    7. '_s' → logprob: -4.031854629516602
    8. '_idx' → logprob: -4.406854629516602
    9. 'mask' → logprob: -4.781854629516602
    10. '_length' → logprob: -5.031854629516602

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023350531235337257
    2. '=' → logprob: -3.773350477218628
    3. '[' → logprob: -9.898350715637207
    4. '=[[' → logprob: -11.398350715637207
    5. 's' → logprob: -11.773350715637207
    6. '=[]' → logprob: -11.898350715637207
    7. ' =[' → logprob: -12.023350715637207
    8. ' ' → logprob: -12.148350715637207
    9. '=[' → logprob: -12.648350715637207
    10. ',' → logprob: -12.773350715637207

Token 268: ' [[' (ID: 9237)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4878627061843872
    2. '[[' → logprob: -1.2378627061843872
    3. '[' → logprob: -3.2378625869750977
    4. ' []' → logprob: -3.6128625869750977
    5. ' [[' → logprob: -3.6128625869750977
    6. ' [' → logprob: -6.612862586975098
    7. '[][]' → logprob: -7.737862586975098
    8. ' [[]' → logprob: -8.237862586975098
    9. '[]
' → logprob: -8.362862586975098
    10. '[
' → logprob: -8.737862586975098

Token 269: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20520615577697754
    2. '(' → logprob: -2.2052061557769775
    3. 'False' → logprob: -3.3302061557769775
    4. '(co' → logprob: -3.9552061557769775
    5. '((' → logprob: -5.205205917358398
    6. 'coordinate' → logprob: -5.705205917358398
    7. '(int' → logprob: -6.330205917358398
    8. 'int' → logprob: -6.330205917358398
    9. '(False' → logprob: -6.705205917358398
    10. '(abs' → logprob: -6.705205917358398

Token 270: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03112875670194626
    2. ']*' → logprob: -4.406128883361816
    3. 'for' → logprob: -4.531128883361816
    4. ']' → logprob: -5.156128883361816
    5. ',' → logprob: -6.531128883361816
    6. '0' → logprob: -8.281128883361816
    7. ' ' → logprob: -10.031128883361816
    8. '   ' → logprob: -10.031128883361816
    9. ']*(' → logprob: -10.031128883361816
    10. '	for' → logprob: -10.156128883361816

Token 271: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.025027090683579445
    2. 'for' → logprob: -3.77502703666687
    3. ',' → logprob: -6.525027275085449
    4. ']*' → logprob: -8.65002727508545
    5. ']' → logprob: -9.90002727508545
    6. '0' → logprob: -10.40002727508545
    7. '   ' → logprob: -10.40002727508545
    8. '	for' → logprob: -11.15002727508545
    9. ' ' → logprob: -12.27502727508545
    10. '  ' → logprob: -13.52502727508545

Token 272: ' ' (ID: 220)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.026385290548205376
    2. '32' → logprob: -4.401385307312012
    3. '(move' → logprob: -4.526385307312012
    4. '(' → logprob: -6.526385307312012
    5. ' move' → logprob: -7.401385307312012
    6. '31' → logprob: -7.526385307312012
    7. '2' → logprob: -8.401385307312012
    8. '30' → logprob: -10.776385307312012
    9. '(m' → logprob: -10.901385307312012
    10. ' (' → logprob: -11.401385307312012

Token 273: '31' (ID: 2911)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.017592914402484894
    2. '32' → logprob: -4.892592906951904
    3. '(move' → logprob: -5.267592906951904
    4. '31' → logprob: -5.642592906951904
    5. '(' → logprob: -6.892592906951904
    6. ' move' → logprob: -8.892593383789062
    7. '30' → logprob: -10.142593383789062
    8. '33' → logprob: -11.267593383789062
    9. 'mov' → logprob: -12.142593383789062
    10. '(m' → logprob: -12.267593383789062

Token 274: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.038100581616163254
    2. 'for' → logprob: -3.288100481033325
    3. '   ' → logprob: -10.663100242614746
    4. ']' → logprob: -11.413100242614746
    5. ',' → logprob: -11.538100242614746
    6. '	for' → logprob: -11.663100242614746
    7. '[' → logprob: -12.663100242614746
    8. ' ' → logprob: -13.663100242614746
    9. '    ' → logprob: -15.288100242614746
    10. ' [' → logprob: -15.538100242614746

Token 275: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.31477606296539307
    2. '_' → logprob: -1.314776062965393
    3. ' range' → logprob: -6.6897759437561035
    4. '_range' → logprob: -8.939776420593262
    5. ' i' → logprob: -9.064776420593262
    6. '_i' → logprob: -11.564776420593262
    7. 'range' → logprob: -11.689776420593262
    8. 'i' → logprob: -12.939776420593262
    9. ' ' → logprob: -13.689776420593262
    10. ' in' → logprob: -14.689776420593262

Token 276: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009119403548538685
    2. ' range' → logprob: -7.000911712646484
    3. '_range' → logprob: -15.750911712646484
    4. '_' → logprob: -15.875911712646484
    5. 'in' → logprob: -17.000911712646484
    6. ' ' → logprob: -17.250911712646484
    7. '0' → logprob: -17.500911712646484
    8. '	range' → logprob: -17.875911712646484
    9. '(range' → logprob: -18.000911712646484
    10. '  ' → logprob: -18.500911712646484

Token 277: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233882926404476
    2. ' range' → logprob: -5.2552337646484375
    3. 'rang' → logprob: -17.380233764648438
    4. '[' → logprob: -17.630233764648438
    5. ' ' → logprob: -17.630233764648438
    6. '   ' → logprob: -17.630233764648438
    7. '(range' → logprob: -17.630233764648438
    8. '	range' → logprob: -18.380233764648438
    9. 'ran' → logprob: -18.755233764648438
    10. '  ' → logprob: -19.255233764648438

Token 278: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013982143718749285
    2. 'range' → logprob: -7.251398086547852
    3. '(range' → logprob: -7.501398086547852
    4. '(move' → logprob: -9.501398086547852
    5. ' range' → logprob: -10.251398086547852
    6. '2' → logprob: -11.751398086547852
    7. ' (' → logprob: -11.751398086547852
    8. 'move' → logprob: -12.501398086547852
    9. '(bit' → logprob: -12.751398086547852
    10. '[' → logprob: -13.751398086547852

Token 279: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43575796484947205
    2. '31' → logprob: -1.0607579946517944
    3. '32' → logprob: -5.185758113861084
    4. 'move' → logprob: -7.060758113861084
    5. '3' → logprob: -8.685757637023926
    6. ' ' → logprob: -8.935757637023926
    7. '30' → logprob: -8.935757637023926
    8. '1' → logprob: -9.685757637023926
    9. 'bit' → logprob: -11.060757637023926
    10. '4' → logprob: -11.435757637023926

Token 280: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16039827466011047
    2. ')]' → logprob: -1.910398244857788
    3. ' ]' → logprob: -9.160398483276367
    4. '>]' → logprob: -10.160398483276367
    5. ']]' → logprob: -11.535398483276367
    6. '}]' → logprob: -11.910398483276367
    7. '()]' → logprob: -12.035398483276367
    8. ')' → logprob: -13.660398483276367
    9. '+]' → logprob: -13.660398483276367
    10. '`]' → logprob: -13.910398483276367

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049513671547174454
    2. 'for' → logprob: -3.424513578414917
    3. ' for' → logprob: -4.799513816833496
    4. '<|end|>' → logprob: -4.924513816833496
    5. '    
' → logprob: -9.549513816833496
    6. '
' → logprob: -10.299513816833496
    7. ',' → logprob: -10.424513816833496
    8. '<|end|>' → logprob: -10.924513816833496
    9. '[' → logprob: -11.424513816833496
    10. 'indices' → logprob: -11.549513816833496

Token 282: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14180582761764526
    2. '   ' → logprob: -2.64180588722229
    3. ' for' → logprob: -3.01680588722229
    4. '<|end|>' → logprob: -4.516805648803711
    5. 'i' → logprob: -8.641805648803711
    6. ')' → logprob: -8.641805648803711
    7. '    ' → logprob: -9.141805648803711
    8. '	for' → logprob: -9.141805648803711
    9. ' ' → logprob: -9.766805648803711
    10. '       ' → logprob: -9.891805648803711

Token 283: ' coordinate' (ID: 30380)
  Prédit: ' coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordinate' → logprob: -0.1115037053823471
    2. 'coordinate' → logprob: -2.4865036010742188
    3. ' (' → logprob: -4.861503601074219
    4. ' x' → logprob: -5.486503601074219
    5. ' abs' → logprob: -5.861503601074219
    6. ' target' → logprob: -5.986503601074219
    7. 'x' → logprob: -6.736503601074219
    8. 'abs' → logprob: -7.361503601074219
    9. ' ' → logprob: -7.611503601074219
    10. ' bit' → logprob: -7.861503601074219

Token 284: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.004387983120977879
    2. '_mod' → logprob: -5.504387855529785
    3. '_diff' → logprob: -8.254387855529785
    4. '_' → logprob: -10.504387855529785
    5. 'sum' → logprob: -11.254387855529785
    6. '_difference' → logprob: -13.254387855529785
    7. '_split' → logprob: -13.629387855529785
    8. '_s' → logprob: -14.129387855529785
    9. '_x' → logprob: -14.254387855529785
    10. 'mod' → logprob: -14.504387855529785

Token 285: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9357101321220398
    2. ' >=' → logprob: -0.9357101321220398
    3. ' &' → logprob: -2.0607101917266846
    4. ' !=' → logprob: -3.5607101917266846
    5. ' ==' → logprob: -3.6857101917266846
    6. ' %' → logprob: -3.9357101917266846
    7. ' <=' → logprob: -5.8107099533081055
    8. ' <' → logprob: -5.8107099533081055
    9. ' >>' → logprob: -6.3107099533081055
    10. '>' → logprob: -6.5607099533081055

Token 286: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045663982629776
    2. ' ' → logprob: -3.170664072036743
    3. '=' → logprob: -6.670663833618164
    4. '1' → logprob: -7.170663833618164
    5. 'coordinate' → logprob: -8.920663833618164
    6. '(' → logprob: -9.295663833618164
    7. '2' → logprob: -9.420663833618164
    8. ' (' → logprob: -9.795663833618164
    9. '>' → logprob: -9.920663833618164
    10. ' coordinate' → logprob: -10.670663833618164

Token 287: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015755676431581378
    2. '(' → logprob: -7.376575469970703
    3. ' ' → logprob: -8.126575469970703
    4. '1' → logprob: -8.626575469970703
    5. '2' → logprob: -9.251575469970703
    6. '-' → logprob: -9.376575469970703
    7. '=' → logprob: -9.626575469970703
    8. '100' → logprob: -10.626575469970703
    9. '10' → logprob: -10.751575469970703
    10. '31' → logprob: -10.876575469970703

Token 288: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012845826335251331
    2. ':
' → logprob: -5.012845993041992
    3. ' or' → logprob: -5.512845993041992
    4. '       ' → logprob: -7.387845993041992
    5. ' and' → logprob: -7.387845993041992
    6. '   ' → logprob: -7.512845993041992
    7. '<|end|>' → logprob: -8.512845993041992
    8. ',' → logprob: -10.637845993041992
    9. ' :' → logprob: -10.637845993041992
    10. '<|end|>' → logprob: -11.137845993041992

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020341575145721436
    2. ' for' → logprob: -4.520341396331787
    3. '   ' → logprob: -5.145341396331787
    4. '<|end|>' → logprob: -6.395341396331787
    5. ' coordinate' → logprob: -8.020341873168945
    6. '    ' → logprob: -8.020341873168945
    7. 'for' → logprob: -8.395341873168945
    8. ' bit' → logprob: -9.020341873168945
    9. ' x' → logprob: -9.270341873168945
    10. '[' → logprob: -9.520341873168945

Token 290: ' bit' (ID: 3546)
  Prédit: 'coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinate' → logprob: -0.2325776368379593
    2. 'for' → logprob: -2.3575775623321533
    3. 'bit' (adapté à ' bit') → logprob: -3.1075775623321533
    4. '   ' → logprob: -3.2325775623321533
    5. ' coordinate' → logprob: -4.482577800750732
    6. '       ' → logprob: -4.482577800750732
    7. ' for' → logprob: -5.732577800750732
    8. ' bit' → logprob: -6.732577800750732
    9. 'print' → logprob: -7.357577800750732
    10. 'x' → logprob: -8.357577323913574

Token 291: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.005468893796205521
    2. '_sum' → logprob: -5.505468845367432
    3. 'matrix' → logprob: -7.755468845367432
    4. '=' → logprob: -8.25546932220459
    5. 'sum' → logprob: -8.63046932220459
    6. '_value' → logprob: -9.00546932220459
    7. 's' → logprob: -9.25546932220459
    8. ' =' → logprob: -9.50546932220459
    9. '_index' → logprob: -10.25546932220459
    10. '_' → logprob: -11.13046932220459

Token 292: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012833021173719317
    2. ' [' → logprob: -9.875128746032715
    3. '=' → logprob: -10.000128746032715
    4. ' =' → logprob: -11.125128746032715
    5. '0' → logprob: -12.375128746032715
    6. '][' → logprob: -12.875128746032715
    7. 'def' → logprob: -13.625128746032715
    8. 'for' → logprob: -14.125128746032715
    9. '[-' → logprob: -14.125128746032715
    10. '   ' → logprob: -14.250128746032715

Token 293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008542861323803663
    2. '1' → logprob: -7.5008544921875
    3. ' ' → logprob: -8.1258544921875
    4. '[' → logprob: -12.5008544921875
    5. '   ' → logprob: -14.1258544921875
    6. ' [' → logprob: -15.1258544921875
    7. '  ' → logprob: -15.8133544921875
    8. '
' → logprob: -16.3133544921875
    9. '    ' → logprob: -16.7508544921875
    10. '(' → logprob: -17.1883544921875

Token 294: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005538951605558395
    2. ']' → logprob: -5.7555389404296875
    3. '][-' → logprob: -6.7555389404296875
    4. ']=' → logprob: -7.3805389404296875
    5. '[' → logprob: -8.255538940429688
    6. '].' → logprob: -9.255538940429688
    7. '0' → logprob: -9.630538940429688
    8. '=' → logprob: -10.630538940429688
    9. ']+=' → logprob: -10.630538940429688
    10. ' ][' → logprob: -10.630538940429688

Token 295: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5400028228759766
    2. '=' → logprob: -0.9150028228759766
    3. ' =' → logprob: -4.665002822875977
    4. '=[' → logprob: -6.415002822875977
    5. '[:]' → logprob: -6.415002822875977
    6. '][' → logprob: -6.665002822875977
    7. '[-' → logprob: -6.790002822875977
    8. '[::-' → logprob: -8.290002822875977
    9. ']' → logprob: -8.415002822875977
    10. '.reverse' → logprob: -9.040002822875977

Token 296: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0042660851031541824
    2. ' [' → logprob: -5.629266262054443
    3. '[-' → logprob: -7.379266262054443
    4. '[(' → logprob: -10.379265785217285
    5. ' [-' → logprob: -12.629265785217285
    6. '   ' → logprob: -13.004265785217285
    7. '([' → logprob: -14.629265785217285
    8. '[int' → logprob: -14.879265785217285
    9. '[x' → logprob: -15.129265785217285
    10. '[((' → logprob: -15.254265785217285

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0038881960790604353
    2. '0' → logprob: -6.378888130187988
    3. 'int' → logprob: -6.378888130187988
    4. '-' → logprob: -7.878888130187988
    5. '(' → logprob: -10.003888130187988
    6. '(int' → logprob: -11.503888130187988
    7. '   ' → logprob: -11.503888130187988
    8. ' ' → logprob: -12.003888130187988
    9. '-int' → logprob: -12.253888130187988
    10. '((' → logprob: -12.503888130187988

Token 298: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23559421300888062
    2. ' for' → logprob: -1.7355942726135254
    3. ']*' → logprob: -3.6105942726135254
    4. ' if' → logprob: -5.985594272613525
    5. ']*(' → logprob: -6.360594272613525
    6. 'for' → logprob: -7.360594272613525
    7. '   ' → logprob: -7.735594272613525
    8. ']+' → logprob: -8.235593795776367
    9. ' ]' → logprob: -8.610593795776367
    10. ' *' → logprob: -8.610593795776367

Token 299: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0843967199325562
    2. '+' → logprob: -1.2093967199325562
    3. ']' → logprob: -2.0843968391418457
    4. ' *' → logprob: -2.4593968391418457
    5. ' for' → logprob: -2.5843968391418457
    6. '*' → logprob: -3.7093968391418457
    7. ']+' → logprob: -4.084396839141846
    8. '[' → logprob: -4.709396839141846
    9. '0' → logprob: -5.084396839141846
    10. '<|end|>' → logprob: -5.209396839141846

Token 300: ' ' (ID: 220)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -1.9623810658231378e-05
    2. ' ' → logprob: -11.000020027160645
    3. '30' → logprob: -13.000020027160645
    4. '32' → logprob: -15.250020027160645
    5. '(' → logprob: -15.625020027160645
    6. '29' → logprob: -16.750019073486328
    7. 'len' → logprob: -17.562519073486328
    8. '   ' → logprob: -17.687519073486328
    9. '3' → logprob: -18.125019073486328
    10. '28' → logprob: -18.312519073486328

Token 301: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.125006675720215
    3. '30' → logprob: -14.000006675720215
    4. 'len' → logprob: -15.125006675720215
    5. '32' → logprob: -16.00000762939453
    6. '(' → logprob: -16.50000762939453
    7. '   ' → logprob: -18.00000762939453
    8. '29' → logprob: -18.06250762939453
    9. '3' → logprob: -18.18750762939453
    10. '1' → logprob: -18.18750762939453

Token 302: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13010480999946594
    2. '<|end|>' → logprob: -2.2551047801971436
    3. '
' → logprob: -4.755105018615723
    4. '    
' → logprob: -5.755105018615723
    5. '<|end|>' → logprob: -6.380105018615723
    6. '[' → logprob: -7.130105018615723
    7. ' ' → logprob: -7.505105018615723
    8. ' else' → logprob: -7.755105018615723
    9. '  
' → logprob: -8.380105018615723
    10. ' for' → logprob: -8.380105018615723

Token 303: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2388375848531723
    2. '<|end|>' → logprob: -1.6138375997543335
    3. '       ' → logprob: -4.613837718963623
    4. ')' → logprob: -6.238837718963623
    5. '[' → logprob: -7.488837718963623
    6. '<|end|>' → logprob: -7.738837718963623
    7. ' ' → logprob: -9.738837242126465
    8. ' for' → logprob: -9.863837242126465
    9. ',' → logprob: -9.863837242126465
    10. 'for' → logprob: -10.363837242126465

Token 304: ' bit' (ID: 3546)
  Prédit: 'coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinate' → logprob: -0.06580439954996109
    2. '       ' → logprob: -3.0658044815063477
    3. '   ' → logprob: -4.315804481506348
    4. ' coordinate' → logprob: -5.690804481506348
    5. 'bit' (adapté à ' bit') → logprob: -8.690804481506348
    6. 'x' → logprob: -9.565804481506348
    7. '           ' → logprob: -9.690804481506348
    8. 'coord' → logprob: -12.190804481506348
    9. '-coordinate' → logprob: -12.315804481506348
    10. 'co' → logprob: -12.565804481506348

Token 305: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.00020461321400944144
    2. '_sum' → logprob: -8.625205039978027
    3. 'matrix' → logprob: -11.125205039978027
    4. '_' → logprob: -12.875205039978027
    5. '_mat' → logprob: -13.375205039978027
    6. '_diff' → logprob: -13.875205039978027
    7. 'Matrix' → logprob: -14.000205039978027
    8. '[' → logprob: -14.125205039978027
    9. '_difference' → logprob: -14.375205039978027
    10. '_m' → logprob: -14.625205039978027

Token 306: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.988221684878226e-06
    2. '<|end|>' → logprob: -12.000006675720215
    3. '[
' → logprob: -15.625006675720215
    4. '<|end|>' → logprob: -15.625006675720215
    5. ' [' → logprob: -16.12500762939453
    6. '=' → logprob: -17.12500762939453
    7. '][' → logprob: -17.50000762939453
    8. '0' → logprob: -17.87500762939453
    9. 's' → logprob: -18.00000762939453
    10. 'for' → logprob: -18.00000762939453

Token 307: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023357603640761226
    2. '0' → logprob: -8.37523365020752
    3. '[' → logprob: -14.00023365020752
    4. 'bit' → logprob: -15.00023365020752
    5. ' ' → logprob: -15.12523365020752
    6. '
' → logprob: -15.37523365020752
    7. '```' → logprob: -15.50023365020752
    8. ']' → logprob: -15.75023365020752
    9. '-' → logprob: -16.125232696533203
    10. '!' → logprob: -16.437732696533203

Token 308: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47694292664527893
    2. '][' → logprob: -1.3519428968429565
    3. ']=' → logprob: -2.726943016052246
    4. '=' → logprob: -3.476943016052246
    5. '[' → logprob: -4.351943016052246
    6. '][-' → logprob: -4.726943016052246
    7. '[-' → logprob: -7.476943016052246
    8. '   ' → logprob: -7.726943016052246
    9. ' =' → logprob: -7.976943016052246
    10. '[::-' → logprob: -8.226943016052246

Token 309: '30' (ID: 1130)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3209235370159149
    2. '30' → logprob: -1.6959235668182373
    3. '-' → logprob: -2.4459235668182373
    4. ':' → logprob: -5.695923328399658
    5. ' -' → logprob: -7.820923328399658
    6. '::-' → logprob: -8.570923805236816
    7. ' ' → logprob: -8.820923805236816
    8. '1' → logprob: -9.445923805236816
    9. ':]' → logprob: -9.570923805236816
    10. '26' → logprob: -9.945923805236816

Token 310: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026772029232233763
    2. ' ]' → logprob: -6.5026774406433105
    3. ']+=' → logprob: -7.7526774406433105
    4. '-' → logprob: -8.002676963806152
    5. ']=' → logprob: -8.252676963806152
    6. ']-' → logprob: -9.502676963806152
    7. ' -' → logprob: -10.127676963806152
    8. '<|end|>' → logprob: -12.377676963806152
    9. ']=-' → logprob: -12.502676963806152
    10. ' -=' → logprob: -12.752676963806152

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2734340727329254
    2. '+=' → logprob: -1.523434042930603
    3. '-=' → logprob: -5.023434162139893
    4. ' =' → logprob: -5.148434162139893
    5. ' +=' → logprob: -5.273434162139893
    6. ' -=' → logprob: -6.148434162139893
    7. ' ^=' → logprob: -6.773434162139893
    8. '^' → logprob: -8.773433685302734
    9. ']+=' → logprob: -9.148433685302734
    10. '-' → logprob: -9.773433685302734

Token 312: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02901717834174633
    2. '1' → logprob: -3.654017210006714
    3. 'bit' → logprob: -6.779016971588135
    4. ' ' → logprob: -7.154016971588135
    5. '(bit' → logprob: -8.029017448425293
    6. ' bit' → logprob: -8.654017448425293
    7. '(' → logprob: -9.279017448425293
    8. 'coordinate' → logprob: -9.654017448425293
    9. ' (' → logprob: -10.154017448425293
    10. '-' → logprob: -10.529017448425293

Token 313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004481885116547346
    2. '1' → logprob: -7.750448226928711
    3. 'bit' → logprob: -11.625448226928711
    4. '-' → logprob: -13.062948226928711
    5. '2' → logprob: -13.375448226928711
    6. ' ' → logprob: -13.625448226928711
    7. '(bit' → logprob: -13.750448226928711
    8. ' bit' → logprob: -14.562948226928711
    9. '(' → logprob: -14.937948226928711
    10. '...' → logprob: -15.250448226928711

Token 314: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13568629324436188
    2. '<|end|>' → logprob: -2.2606863975524902
    3. '       ' → logprob: -4.76068639755249
    4. ' bit' → logprob: -4.76068639755249
    5. ')' → logprob: -6.26068639755249
    6. 'bit' → logprob: -6.63568639755249
    7. '[' → logprob: -7.26068639755249
    8. '<|end|>' → logprob: -7.38568639755249
    9. ',' → logprob: -8.010685920715332
    10. '...' → logprob: -9.010685920715332

Token 316: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3354165852069855
    2. '<|end|>' → logprob: -1.335416555404663
    3. ' for' → logprob: -4.835416793823242
    4. '[' → logprob: -5.710416793823242
    5. ')' → logprob: -6.210416793823242
    6. ' if' → logprob: -6.335416793823242
    7. ' bit' → logprob: -6.335416793823242
    8. ' ' → logprob: -6.835416793823242
    9. '<|end|>' → logprob: -6.960416793823242
    10. '       ' → logprob: -7.210416793823242

Token 317: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10213052481412888
    2. ':' → logprob: -2.35213041305542
    3. '   ' → logprob: -6.60213041305542
    4. ':
' → logprob: -7.97713041305542
    5. '[' → logprob: -9.477130889892578
    6. ',' → logprob: -10.477130889892578
    7. '           ' → logprob: -10.977130889892578
    8. '     ' → logprob: -10.977130889892578
    9. '<|end|>' → logprob: -11.102130889892578
    10. '      ' → logprob: -11.477130889892578

Token 318: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9726024270057678
    2. '       ' → logprob: -1.722602367401123
    3. ' for' → logprob: -1.847602367401123
    4. ' bit' → logprob: -1.847602367401123
    5. 'bit' → logprob: -2.472602367401123
    6. 'for' → logprob: -3.472602367401123
    7. ' pass' → logprob: -4.722602367401123
    8. ' if' → logprob: -6.597602367401123
    9. 'if' → logprob: -7.347602367401123
    10. '           ' → logprob: -7.722602367401123

Token 319: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.2291659563779831
    2. 'pass' → logprob: -1.7291659116744995
    3. 'for' → logprob: -4.104166030883789
    4. ' pass' → logprob: -5.354166030883789
    5. ' bit' → logprob: -5.729166030883789
    6. '   ' → logprob: -6.229166030883789
    7. ' for' → logprob: -7.479166030883789
    8. '0' → logprob: -8.854166030883789
    9. 'bits' → logprob: -9.854166030883789
    10. 'if' → logprob: -10.854166030883789

Token 320: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -1.0280383548888494e-06
    2. 'matrix' → logprob: -14.000000953674316
    3. '_' → logprob: -17.250001907348633
    4. '_MATRIX' → logprob: -17.625001907348633
    5. '[' → logprob: -18.125001907348633
    6. '_mat' → logprob: -18.750001907348633
    7. '_m' → logprob: -19.000001907348633
    8. '	matrix' → logprob: -19.125001907348633
    9. 'Matrix' → logprob: -19.250001907348633
    10. '	Matrix' → logprob: -19.500001907348633

Token 321: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004338877333793789
    2. '=' → logprob: -7.875433921813965
    3. ' =' → logprob: -10.000433921813965
    4. '0' → logprob: -12.750433921813965
    5. ' [' → logprob: -13.375433921813965
    6. '[
' → logprob: -13.625433921813965
    7. '<|end|>' → logprob: -13.875433921813965
    8. '=[' → logprob: -14.875433921813965
    9. '(' → logprob: -15.625433921813965
    10. 'def' → logprob: -15.875433921813965

Token 322: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012776737101376057
    2. '[' → logprob: -4.387776851654053
    3. '1' → logprob: -8.887776374816895
    4. ' ' → logprob: -9.637776374816895
    5. ' [' → logprob: -9.762776374816895
    6. '(' → logprob: -13.700276374816895
    7. '   ' → logprob: -13.950276374816895
    8. ']' → logprob: -14.012776374816895
    9. ':' → logprob: -15.137776374816895
    10. '-' → logprob: -15.325276374816895

Token 323: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06293516606092453
    2. '[' → logprob: -3.8129351139068604
    3. '=' → logprob: -4.0629353523254395
    4. ']=' → logprob: -4.5629353523254395
    5. ' =' → logprob: -4.9379353523254395
    6. '][' → logprob: -5.9379353523254395
    7. ')' → logprob: -6.9379353523254395
    8. '[:]' → logprob: -8.562934875488281
    9. ' ]' → logprob: -9.687934875488281
    10. '<|end|>' → logprob: -10.187934875488281

Token 324: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.08660762757062912
    2. '0' → logprob: -2.8366076946258545
    3. '29' → logprob: -3.8366076946258545
    4. ':' → logprob: -6.211607456207275
    5. '-' → logprob: -8.086607933044434
    6. '31' → logprob: -9.211607933044434
    7. ' ' → logprob: -9.711607933044434
    8. '1' → logprob: -9.961607933044434
    9. '
' → logprob: -10.211607933044434
    10. ' :' → logprob: -10.586607933044434

Token 325: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03647986054420471
    2. '=' → logprob: -4.036479949951172
    3. ']=' → logprob: -4.036479949951172
    4. ' ]' → logprob: -8.411479949951172
    5. ']+=' → logprob: -8.911479949951172
    6. ' =' → logprob: -9.411479949951172
    7. '0' → logprob: -10.286479949951172
    8. ')' → logprob: -11.286479949951172
    9. '<|end|>' → logprob: -12.411479949951172
    10. '-' → logprob: -12.661479949951172

Token 326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196846812963486
    2. ' =' → logprob: -2.8119685649871826
    3. ' +=' → logprob: -15.311968803405762
    4. '+=' → logprob: -15.811968803405762
    5. ']' → logprob: -15.936968803405762
    6. ' ' → logprob: -16.311967849731445
    7. '[' → logprob: -16.686967849731445
    8. ')' → logprob: -16.811967849731445
    9. ']=' → logprob: -17.061967849731445
    10. '0' → logprob: -17.561967849731445

Token 327: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026491764932870865
    2. '0' → logprob: -3.65149188041687
    3. 'coordinate' → logprob: -9.40149211883545
    4. ' ' → logprob: -9.52649211883545
    5. '(' → logprob: -11.15149211883545
    6. ' coordinate' → logprob: -12.02649211883545
    7. 'abs' → logprob: -12.40149211883545
    8. 'int' → logprob: -12.90149211883545
    9. '((' → logprob: -13.40149211883545
    10. 'coord' → logprob: -13.46399211883545

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11301067471504211
    2. '0' → logprob: -2.2380106449127197
    3. 'coordinate' → logprob: -9.48801040649414
    4. '(' → logprob: -9.86301040649414
    5. ' ' → logprob: -11.11301040649414
    6. 'abs' → logprob: -11.73801040649414
    7. 'bit' → logprob: -12.30051040649414
    8. 'x' → logprob: -12.36301040649414
    9. '((' → logprob: -12.55051040649414
    10. 'int' → logprob: -12.61301040649414

Token 329: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: ' coordinate' (ID: 30380)
  Prédit: ' coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordinate' → logprob: -0.42881765961647034
    2. 'coordinate' → logprob: -1.053817629814148
    3. 'abs' → logprob: -9.303817749023438
    4. ' abs' → logprob: -11.178817749023438
    5. '-coordinate' → logprob: -12.428817749023438
    6. ' ' → logprob: -13.303817749023438
    7. 'coord' → logprob: -13.303817749023438
    8. '   ' → logprob: -13.678817749023438
    9. 'co' → logprob: -14.178817749023438
    10. ' -' → logprob: -14.678817749023438

Token 333: '_diff' (ID: 41047)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.1130075752735138
    2. '_diff' → logprob: -2.2380075454711914
    3. 'sum' → logprob: -9.113007545471191
    4. 'diff' → logprob: -9.988007545471191
    5. '_mod' → logprob: -11.363007545471191
    6. '_difference' → logprob: -12.488007545471191
    7. '_' → logprob: -12.988007545471191
    8. '[' → logprob: -13.238007545471191
    9. '_s' → logprob: -13.488007545471191
    10. '_d' → logprob: -13.988007545471191

Token 334: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.013003282248973846
    2. '[' → logprob: -4.513003349304199
    3. '<' → logprob: -6.263003349304199
    4. ' [' → logprob: -11.1380033493042
    5. ' ==' → logprob: -11.3880033493042
    6. '<|end|>' → logprob: -12.0130033493042
    7. ' =' → logprob: -12.7630033493042
    8. ' is' → logprob: -12.7630033493042
    9. '   ' → logprob: -13.0130033493042
    10. ' ' → logprob: -13.2630033493042

Token 335: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17983196675777435
    2. ' ' → logprob: -1.8048319816589355
    3. '=' → logprob: -9.429831504821777
    4. '  ' → logprob: -13.179831504821777
    5. '<|end|>' → logprob: -13.554831504821777
    6. ' =' → logprob: -14.054831504821777
    7. '   ' → logprob: -14.054831504821777
    8. '1' → logprob: -14.304831504821777
    9. ',' → logprob: -15.429831504821777
    10. '2' → logprob: -15.554831504821777

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000432695698691532
    2. ' ' → logprob: -7.75043249130249
    3. '=' → logprob: -14.000432968139648
    4. '   ' → logprob: -14.500432968139648
    5. '  ' → logprob: -15.250432968139648
    6. ',' → logprob: -16.25043296813965
    7. '<|end|>' → logprob: -17.06293296813965
    8. '1' → logprob: -17.18793296813965
    9. '>' → logprob: -17.25043296813965
    10. '  
' → logprob: -17.31293296813965

Token 337: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03932838514447212
    2. '       ' → logprob: -3.7893283367156982
    3. ':
' → logprob: -4.164328575134277
    4. '   ' → logprob: -8.414328575134277
    5. ',' → logprob: -9.664328575134277
    6. '<|end|>' → logprob: -10.289328575134277
    7. '):' → logprob: -10.789328575134277
    8. '[' → logprob: -10.789328575134277
    9. '):
' → logprob: -11.289328575134277
    10. ' :' → logprob: -11.789328575134277

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041994822095148265
    2. ' bit' → logprob: -8.250419616699219
    3. 'bit' → logprob: -9.500419616699219
    4. '   ' → logprob: -9.625419616699219
    5. '           ' → logprob: -11.875419616699219
    6. '```' → logprob: -12.250419616699219
    7. ' for' → logprob: -13.875419616699219
    8. '[' → logprob: -13.875419616699219
    9. '
' → logprob: -14.000419616699219
    10. '        
' → logprob: -14.250419616699219

Token 339: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.5256219506263733
    2. 'bit' (adapté à ' bit') → logprob: -1.0256218910217285
    3. '       ' → logprob: -3.0256218910217285
    4. '   ' → logprob: -6.4006218910217285
    5. '           ' → logprob: -10.400622367858887
    6. '    ' → logprob: -12.400622367858887
    7. '     ' → logprob: -12.400622367858887
    8. '```' → logprob: -13.025622367858887
    9. '      ' → logprob: -13.275622367858887
    10. '        ' → logprob: -13.400622367858887

Token 340: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -3.128163257315464e-07
    2. 'matrix' → logprob: -15.5
    3. '[' → logprob: -18.375
    4. '_MATRIX' → logprob: -18.5
    5. 'Matrix' → logprob: -19.875
    6. ' matrix' → logprob: -20.0
    7. '_' → logprob: -21.0
    8. '	matrix' → logprob: -21.75
    9. '	Matrix' → logprob: -22.0
    10. '矩' → logprob: -22.25

Token 341: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.68153518543113e-05
    2. ' [' → logprob: -10.000057220458984
    3. '0' → logprob: -12.750057220458984
    4. '=' → logprob: -13.000057220458984
    5. ' =' → logprob: -13.250057220458984
    6. '[
' → logprob: -14.125057220458984
    7. 's' → logprob: -14.250057220458984
    8. '   ' → logprob: -14.500057220458984
    9. '
' → logprob: -14.625057220458984
    10. ' ' → logprob: -15.000057220458984

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006925394991412759
    2. '[' → logprob: -7.375692367553711
    3. '0' → logprob: -9.875692367553711
    4. ' ' → logprob: -11.375692367553711
    5. ' [' → logprob: -13.500692367553711
    6. '   ' → logprob: -14.125692367553711
    7. '
' → logprob: -15.563192367553711
    8. '  ' → logprob: -16.06319236755371
    9. '(' → logprob: -16.31319236755371
    10. '    ' → logprob: -16.50069236755371

Token 343: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0054479013197124004
    2. '=' → logprob: -5.630447864532471
    3. ' =' → logprob: -6.755447864532471
    4. ']=' → logprob: -7.380447864532471
    5. '[' → logprob: -10.255448341369629
    6. ')' → logprob: -11.255448341369629
    7. ' ]' → logprob: -12.005448341369629
    8. '<|end|>' → logprob: -13.255448341369629
    9. '][' → logprob: -14.880448341369629
    10. '}' → logprob: -15.005448341369629

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759672522544861
    2. '=' → logprob: -0.8259672522544861
    3. '[' → logprob: -11.200966835021973
    4. ']' → logprob: -12.075966835021973
    5. '=[' → logprob: -12.200966835021973
    6. ')' → logprob: -13.950966835021973
    7. ']=' → logprob: -14.075966835021973
    8. ' =[' → logprob: -14.325966835021973
    9. ' ' → logprob: -14.450966835021973
    10. '<|end|>' → logprob: -14.950966835021973

Token 345: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04859202727675438
    2. ' [' → logprob: -3.0485920906066895
    3. ' ' → logprob: -13.048591613769531
    4. '   ' → logprob: -13.298591613769531
    5. '([' → logprob: -15.673591613769531
    6. ' ' → logprob: -15.923591613769531
    7. '  ' → logprob: -15.923591613769531
    8. '1' → logprob: -16.79859161376953
    9. '[-' → logprob: -16.79859161376953
    10. '    ' → logprob: -16.92359161376953

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.62501049041748
    3. '0' → logprob: -13.87501049041748
    4. '[' → logprob: -16.500009536743164
    5. '   ' → logprob: -17.625009536743164
    6. '(' → logprob: -18.000009536743164
    7. '...' → logprob: -18.062509536743164
    8. '
' → logprob: -18.250009536743164
    9. 'int' → logprob: -18.562509536743164
    10. ']' → logprob: -18.750009536743164

Token 347: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012821101699955761
    2. ']*' → logprob: -9.000127792358398
    3. ' ]' → logprob: -12.375127792358398
    4. '*' → logprob: -15.000127792358398
    5. ' for' → logprob: -16.3751277923584
    6. ' *' → logprob: -16.7501277923584
    7. '1' → logprob: -16.8751277923584
    8. '   ' → logprob: -17.0001277923584
    9. '}' → logprob: -17.2501277923584
    10. '[' → logprob: -17.5001277923584

Token 348: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.09317032992839813
    2. '*' → logprob: -2.468170404434204
    3. '[' → logprob: -5.718170166015625
    4. ']' → logprob: -7.718170166015625
    5. ' [' → logprob: -8.843170166015625
    6. ']*' → logprob: -9.218170166015625
    7. ')' → logprob: -9.468170166015625
    8. ' ' → logprob: -10.218170166015625
    9. ' for' → logprob: -10.343170166015625
    10. '*[' → logprob: -10.718170166015625

Token 349: ' ' (ID: 220)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.0008213033434003592
    2. ' ' → logprob: -7.125821113586426
    3. '30' → logprob: -11.000821113586426
    4. '32' → logprob: -16.875822067260742
    5. '29' → logprob: -17.625822067260742
    6. '   ' → logprob: -18.125822067260742
    7. '(' → logprob: -18.250822067260742
    8. '  ' → logprob: -18.750822067260742
    9. '[' → logprob: -19.438322067260742
    10. '```' → logprob: -19.750822067260742

Token 350: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -2.963691804325208e-05
    2. '30' → logprob: -10.500029563903809
    3. ' ' → logprob: -13.125029563903809
    4. '32' → logprob: -17.750030517578125
    5. '29' → logprob: -18.375030517578125
    6. '(' → logprob: -19.625030517578125
    7. '   ' → logprob: -20.625030517578125
    8. '  ' → logprob: -21.187530517578125
    9. '3' → logprob: -21.625030517578125
    10. '           ' → logprob: -21.875030517578125

Token 351: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 353: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.005234356038272381
    2. ' bit' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.255234718322754
    4. '       ' → logprob: -16.005233764648438
    5. '
' → logprob: -16.630233764648438
    6. '(bit' → logprob: -16.755233764648438
    7. '.bit' → logprob: -17.130233764648438
    8. '           ' → logprob: -17.505233764648438
    9. ' ' → logprob: -17.630233764648438
    10. '[' → logprob: -17.880233764648438

Token 354: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -4.320199877838604e-07
    2. 'matrix' → logprob: -15.0
    3. '[' → logprob: -17.125
    4. '_MATRIX' → logprob: -17.75
    5. 'Matrix' → logprob: -19.0
    6. ' matrix' → logprob: -20.375
    7. 'bit' → logprob: -20.75
    8. '矩' → logprob: -20.875
    9. '	Matrix' → logprob: -21.0
    10. '	matrix' → logprob: -22.0

Token 355: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '1' → logprob: -12.750003814697266
    3. ' [' → logprob: -15.500003814697266
    4. '
' → logprob: -16.500003814697266
    5. ' ' → logprob: -17.250003814697266
    6. '0' → logprob: -17.250003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '```' → logprob: -17.250003814697266
    9. '[
' → logprob: -17.875003814697266
    10. '=' → logprob: -18.750003814697266

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6286106983898208e-05
    2. '0' → logprob: -11.375016212463379
    3. '[' → logprob: -12.500016212463379
    4. ' ' → logprob: -14.875016212463379
    5. '(' → logprob: -15.000016212463379
    6. '```' → logprob: -15.875016212463379
    7. '
' → logprob: -16.125017166137695
    8. '   ' → logprob: -16.312517166137695
    9. '30' → logprob: -17.250017166137695
    10. '  ' → logprob: -17.562517166137695

Token 357: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003612781874835491
    2. '][' → logprob: -5.628612995147705
    3. ']' → logprob: -12.753612518310547
    4. '<|end|>' → logprob: -12.878612518310547
    5. ')[' → logprob: -13.003612518310547
    6. ' [' → logprob: -13.378612518310547
    7. '}[' → logprob: -14.378612518310547
    8. '
' → logprob: -14.753612518310547
    9. '>[' → logprob: -15.003612518310547
    10. '"][' → logprob: -15.128612518310547

Token 358: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -8.208653162000701e-05
    2. ' ' → logprob: -10.125082015991211
    3. '0' → logprob: -10.750082015991211
    4. '29' → logprob: -11.000082015991211
    5. '1' → logprob: -14.000082015991211
    6. '20' → logprob: -14.500082015991211
    7. '
' → logprob: -14.500082015991211
    8. '   ' → logprob: -14.812582015991211
    9. '28' → logprob: -15.312582015991211
    10. '2' → logprob: -15.375082015991211

Token 359: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00019614976190496236
    2. ' ]' → logprob: -9.00019645690918
    3. ']=' → logprob: -9.75019645690918
    4. '=' → logprob: -11.62519645690918
    5. '       ' → logprob: -13.00019645690918
    6. '   ' → logprob: -13.62519645690918
    7. ' ' → logprob: -14.87519645690918
    8. ' =' → logprob: -15.12519645690918
    9. '<|end|>' → logprob: -15.37519645690918
    10. '    ' → logprob: -15.50019645690918

Token 360: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014168446883559227
    2. ' =' → logprob: -4.2641682624816895
    3. '<|end|>' → logprob: -12.639168739318848
    4. ']' → logprob: -14.389168739318848
    5. ' ' → logprob: -14.639168739318848
    6. ']=' → logprob: -14.889168739318848
    7. ')' → logprob: -16.76416778564453
    8. '[' → logprob: -17.13916778564453
    9. '.=' → logprob: -17.76416778564453
    10. '        ' → logprob: -17.76416778564453

Token 361: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '=' → logprob: -17.250019073486328
    4. '1' → logprob: -17.375019073486328
    5. '۰' → logprob: -18.000019073486328
    6. 'False' → logprob: -18.562519073486328
    7. '   ' → logprob: -18.812519073486328
    8. '
' → logprob: -19.312519073486328
    9. '00' → logprob: -19.562519073486328
    10. '<|end|>' → logprob: -20.187519073486328

Token 362: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.584239938296378e-06
    2. '1' → logprob: -11.875007629394531
    3. ' ' → logprob: -14.875007629394531
    4. '۰' → logprob: -17.00000762939453
    5. '```' → logprob: -17.37500762939453
    6. '
' → logprob: -17.81250762939453
    7. '...' → logprob: -18.18750762939453
    8. '00' → logprob: -18.18750762939453
    9. '<|end|>' → logprob: -18.18750762939453
    10. '2' → logprob: -18.25000762939453

Token 363: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0533206462860107
    2. ')' → logprob: -1.1783206462860107
    3. '<|end|>' → logprob: -1.1783206462860107
    4. ']' → logprob: -4.67832088470459
    5. ' else' → logprob: -5.17832088470459
    6. 'else' → logprob: -5.17832088470459
    7. ',' → logprob: -5.42832088470459
    8. '[' → logprob: -6.05332088470459
    9. 'elif' → logprob: -6.55332088470459
    10. '#' → logprob: -6.80332088470459

Token 364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46363604068756104
    2. '<|end|>' → logprob: -1.213636040687561
    3. ')' → logprob: -3.2136359214782715
    4. '[' → logprob: -4.5886359214782715
    5. '```' → logprob: -4.7136359214782715
    6. '       ' → logprob: -5.5886359214782715
    7. ' for' → logprob: -6.0886359214782715
    8. ']' → logprob: -6.2136359214782715
    9. ',' → logprob: -6.3386359214782715
    10. '<|end|>' → logprob: -6.9636359214782715

Token 365: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17867037653923035
    2. '<|end|>' → logprob: -2.6786704063415527
    3. 'else' (adapté à ' else') → logprob: -3.4286704063415527
    4. '[' → logprob: -4.053670406341553
    5. ' for' → logprob: -4.303670406341553
    6. ' else' → logprob: -4.553670406341553
    7. 'for' → logprob: -4.803670406341553
    8. ')' → logprob: -5.178670406341553
    9. '       ' → logprob: -6.178670406341553
    10. ' ' → logprob: -6.553670406341553

Token 366: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032815716695040464
    2. ':' → logprob: -6.378281593322754
    3. '   ' → logprob: -6.753281593322754
    4. ':
' → logprob: -7.878281593322754
    5. '[' → logprob: -11.378281593322754
    6. '           ' → logprob: -11.378281593322754
    7. '     ' → logprob: -13.003281593322754
    8. '               ' → logprob: -13.503281593322754
    9. '      ' → logprob: -13.753281593322754
    10. '        
' → logprob: -14.003281593322754

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3544423381972592e-05
    2. '   ' → logprob: -11.75001335144043
    3. 'bit' → logprob: -12.75001335144043
    4. '           ' → logprob: -13.37501335144043
    5. '	' → logprob: -14.50001335144043
    6. '               ' → logprob: -15.25001335144043
    7. '```' → logprob: -15.50001335144043
    8. ' bit' → logprob: -16.25001335144043
    9. '     ' → logprob: -17.12501335144043
    10. '      ' → logprob: -17.50001335144043

Token 368: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.0009124171338044107
    2. ' bit' → logprob: -7.000912189483643
    3. '   ' → logprob: -14.7509126663208
    4. '       ' → logprob: -14.7509126663208
    5. '           ' → logprob: -15.6259126663208
    6. ' ' → logprob: -18.875911712646484
    7. '               ' → logprob: -19.375911712646484
    8. '         ' → logprob: -19.750911712646484
    9. '    ' → logprob: -20.000911712646484
    10. '        ' → logprob: -20.125911712646484

Token 369: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -6.704273118884885e-07
    2. 'matrix' → logprob: -14.375000953674316
    3. '_MATRIX' → logprob: -16.375
    4. '[' → logprob: -17.875
    5. 'Matrix' → logprob: -18.5
    6. '矩' → logprob: -20.25
    7. ' matrix' → logprob: -20.375
    8. '	Matrix' → logprob: -20.875
    9. '	matrix' → logprob: -21.0
    10. 'atrix' → logprob: -21.125

Token 370: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -17.0
    3. '   ' → logprob: -18.0
    4. '```' → logprob: -18.5
    5. 's' → logprob: -19.125
    6. 'def' → logprob: -19.375
    7. ')[' → logprob: -19.375
    8. 'import' → logprob: -19.375
    9. '][' → logprob: -19.5
    10. '
' → logprob: -20.375

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007111206650733948
    2. '[' → logprob: -7.250710964202881
    3. '0' → logprob: -14.250711441040039
    4. ' ' → logprob: -14.750711441040039
    5. '   ' → logprob: -16.37571144104004
    6. '(' → logprob: -18.00071144104004
    7. '```' → logprob: -18.00071144104004
    8. ' [' → logprob: -18.62571144104004
    9. '
' → logprob: -18.62571144104004
    10. '' → logprob: -19.12571144104004

Token 372: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3871347904205322
    2. '][' → logprob: -1.1371347904205322
    3. '>[' → logprob: -9.012134552001953
    4. ')[' → logprob: -9.637134552001953
    5. '}[' → logprob: -10.512134552001953
    6. ']' → logprob: -10.512134552001953
    7. '<|end|>' → logprob: -11.387134552001953
    8. ''][' → logprob: -12.512134552001953
    9. '"][' → logprob: -12.762134552001953
    10. '```' → logprob: -13.762134552001953

Token 373: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -7.896309739408025e-07
    2. '29' → logprob: -14.125000953674316
    3. '[' → logprob: -18.5
    4. ' ' → logprob: -18.5
    5. '
' → logprob: -18.75
    6. '31' → logprob: -20.125
    7. '３０' → logprob: -20.875
    8. '   ' → logprob: -21.375
    9. '0' → logprob: -21.5
    10. '20' → logprob: -21.5

Token 374: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024552617222070694
    2. '=' → logprob: -3.899552583694458
    3. ']=' → logprob: -5.524552822113037
    4. ' =' → logprob: -11.649552345275879
    5. '[' → logprob: -13.024552345275879
    6. ')' → logprob: -13.274552345275879
    7. ' ]' → logprob: -13.399552345275879
    8. '   ' → logprob: -16.024553298950195
    9. '][' → logprob: -16.024553298950195
    10. '       ' → logprob: -16.149553298950195

Token 375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. '[' → logprob: -17.501928329467773
    4. '=
' → logprob: -17.876928329467773
    5. '<|end|>' → logprob: -18.251928329467773
    6. ']=' → logprob: -18.501928329467773
    7. '.=' → logprob: -18.626928329467773
    8. ')' → logprob: -18.876928329467773
    9. ']' → logprob: -19.001928329467773
    10. '+=' → logprob: -19.501928329467773

Token 376: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '0' → logprob: -16.0000057220459
    4. '   ' → logprob: -16.5000057220459
    5. '  ' → logprob: -20.0000057220459
    6. '```' → logprob: -20.0000057220459
    7. '2' → logprob: -20.3750057220459
    8. '=' → logprob: -20.5000057220459
    9. '１' → logprob: -20.7500057220459
    10. '`' → logprob: -21.0625057220459

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '0' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.37500286102295
    4. '```' → logprob: -17.875001907348633
    5. '=' → logprob: -18.687501907348633
    6. 'print' → logprob: -18.812501907348633
    7. '   ' → logprob: -18.875001907348633
    8. '[' → logprob: -19.000001907348633
    9. '`' → logprob: -19.312501907348633
    10. '-' → logprob: -19.375001907348633

Token 378: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47301676869392395
    2. '   ' → logprob: -1.4730167388916016
    3. ' for' → logprob: -2.2230167388916016
    4. '<|end|>' → logprob: -3.8480167388916016
    5. 'token' → logprob: -5.348016738891602
    6. 'i' → logprob: -5.848016738891602
    7. 'current' → logprob: -5.973016738891602
    8. 'bit' → logprob: -7.348016738891602
    9. 'index' → logprob: -7.473016738891602
    10. '    
' → logprob: -7.473016738891602

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0551525354385376
    2. ' for' → logprob: -1.1801525354385376
    3. 'for' → logprob: -1.9301525354385376
    4. '<|end|>' → logprob: -2.930152416229248
    5. ' ' → logprob: -3.430152416229248
    6. '[' → logprob: -4.055152416229248
    7. 'i' → logprob: -4.055152416229248
    8. 'x' → logprob: -4.680152416229248
    9. ' i' → logprob: -4.805152416229248
    10. ')' → logprob: -4.805152416229248

Token 380: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11642159521579742
    2. ' for' → logprob: -2.366421699523926
    3. '   ' → logprob: -4.866421699523926
    4. 'bit' → logprob: -5.491421699523926
    5. 'i' → logprob: -6.241421699523926
    6. ' bit' → logprob: -7.866421699523926
    7. 'current' → logprob: -8.116421699523926
    8. 'step' → logprob: -8.116421699523926
    9. 'index' → logprob: -8.491421699523926
    10. ' i' → logprob: -8.741421699523926

Token 381: ' bit' (ID: 3546)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7973691821098328
    2. 'i' → logprob: -1.2973692417144775
    3. ' bit' → logprob: -1.6723692417144775
    4. 'bit' → logprob: -2.7973692417144775
    5. ' step' → logprob: -4.672369003295898
    6. ' move' → logprob: -5.297369003295898
    7. ' d' → logprob: -5.797369003295898
    8. 'd' → logprob: -6.547369003295898
    9. 'step' → logprob: -6.922369003295898
    10. ' current' → logprob: -7.172369003295898

Token 382: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5475263595581055
    2. '_' → logprob: -1.4225263595581055
    3. ' _' → logprob: -2.0475263595581055
    4. ' i' → logprob: -3.6725263595581055
    5. 'in' → logprob: -4.4225263595581055
    6. '_i' → logprob: -4.9225263595581055
    7. ' ' → logprob: -5.7975263595581055
    8. '_index' → logprob: -6.9225263595581055
    9. '_in' → logprob: -7.0475263595581055
    10. 'i' → logprob: -7.9225263595581055

Token 383: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003629169659689069
    2. 'in' → logprob: -5.628629207611084
    3. '	in' → logprob: -11.378628730773926
    4. ' ' → logprob: -11.753628730773926
    5. ',' → logprob: -12.503628730773926
    6. '_in' → logprob: -13.628628730773926
    7. '<|end|>' → logprob: -14.378628730773926
    8. ' ,' → logprob: -14.503628730773926
    9. 'range' → logprob: -14.503628730773926
    10. '   ' → logprob: -14.628628730773926

Token 384: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5242725610733032
    2. 'range' → logprob: -0.8992725610733032
    3. ' reversed' → logprob: -6.899272441864014
    4. 're' → logprob: -8.899272918701172
    5. '	range' → logprob: -13.774272918701172
    6. 'reverse' → logprob: -13.774272918701172
    7. ' ' → logprob: -14.399272918701172
    8. '(range' → logprob: -14.899272918701172
    9. '   ' → logprob: -15.899272918701172
    10. ' reverse' → logprob: -16.399272918701172

Token 385: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029236339032649994
    2. '30' → logprob: -6.127923488616943
    3. '29' → logprob: -7.252923488616943
    4. ' ' → logprob: -10.877923965454102
    5. '   ' → logprob: -12.252923965454102
    6. '28' → logprob: -12.502923965454102
    7. ' (' → logprob: -14.002923965454102
    8. '27' → logprob: -14.502923965454102
    9. '31' → logprob: -14.877923965454102
    10. '26' → logprob: -15.002923965454102

Token 386: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.026386335492134094
    2. '29' → logprob: -3.776386260986328
    3. '31' → logprob: -5.776386260986328
    4. '0' → logprob: -10.776386260986328
    5. '28' → logprob: -11.776386260986328
    6. '25' → logprob: -13.401386260986328
    7. '26' → logprob: -13.651386260986328
    8. '27' → logprob: -13.776386260986328
    9. '1' → logprob: -13.901386260986328
    10. '-' → logprob: -14.151386260986328

Token 387: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2199922800064087
    2. '-' → logprob: -2.344992160797119
    3. ',-' → logprob: -3.344992160797119
    4. '):
' → logprob: -3.719992160797119
    5. ' -' → logprob: -3.969992160797119
    6. '):' → logprob: -4.719992160797119
    7. ' ,' → logprob: -4.719992160797119
    8. '0' → logprob: -6.094992160797119
    9. '   ' → logprob: -7.219992160797119
    10. ' ,-' → logprob: -8.469992637634277

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021294450853019953
    2. '   ' → logprob: -6.752129554748535
    3. ' if' → logprob: -7.627129554748535
    4. ' bit' → logprob: -8.627129554748535
    5. ',' → logprob: -9.502129554748535
    6. '```' → logprob: -10.252129554748535
    7. '[' → logprob: -10.502129554748535
    8. 'if' → logprob: -10.627129554748535
    9. '<|end|>' → logprob: -10.877129554748535
    10. '    ' → logprob: -11.127129554748535

Token 389: ' if' (ID: 538)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.0968892574310303
    2. ' bit' → logprob: -1.4718892574310303
    3. 'if' (adapté à ' if') → logprob: -2.0968892574310303
    4. ' coordinate' → logprob: -2.5968892574310303
    5. 'coordinate' → logprob: -2.7218892574310303
    6. ' if' → logprob: -2.8468892574310303
    7. '       ' → logprob: -3.4718892574310303
    8. 'mask' → logprob: -4.221889495849609
    9. '   ' → logprob: -4.346889495849609
    10. '           ' → logprob: -4.721889495849609

Token 390: ' coordinate' (ID: 30380)
  Prédit: 'coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinate' → logprob: -1.3898142576217651
    2. '(co' → logprob: -1.5148142576217651
    3. ' (' → logprob: -1.6398142576217651
    4. '(abs' → logprob: -1.8898142576217651
    5. '((' → logprob: -2.1398143768310547
    6. ' coordinate' → logprob: -3.8898143768310547
    7. '(x' → logprob: -4.264814376831055
    8. 'abs' → logprob: -4.514814376831055
    9. '(' → logprob: -5.264814376831055
    10. '(bit' → logprob: -5.389814376831055

Token 391: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.0339031834737398e-05
    2. '_mod' → logprob: -11.250020027160645
    3. '_' → logprob: -12.375020027160645
    4. '_s' → logprob: -13.625020027160645
    5. 'sum' → logprob: -13.750020027160645
    6. ' _' → logprob: -15.375020027160645
    7. '_bit' → logprob: -16.87502098083496
    8. ' sum' → logprob: -16.87502098083496
    9. '_diff' → logprob: -16.87502098083496
    10. '_SUM' → logprob: -16.87502098083496

Token 392: ' >=' (ID: 5064)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.13072076439857483
    2. ' >>=' → logprob: -2.630720853805542
    3. '&' → logprob: -3.130720853805542
    4. ' &=' → logprob: -5.755720615386963
    5. ' <<=' → logprob: -6.880720615386963
    6. '<|end|>' → logprob: -7.630720615386963
    7. '>>' → logprob: -8.130721092224121
    8. ' >>' → logprob: -8.255721092224121
    9. ' >' → logprob: -8.255721092224121
    10. ' !=' → logprob: -8.505721092224121

Token 393: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2339482456445694
    2. '(' → logprob: -2.608948230743408
    3. ' (' → logprob: -2.608948230743408
    4. '1' → logprob: -3.358948230743408
    5. ' ' → logprob: -3.983948230743408
    6. '2' → logprob: -4.858948230743408
    7. '   ' → logprob: -9.108948707580566
    8. '       ' → logprob: -10.358948707580566
    9. '>' → logprob: -10.608948707580566
    10. ' abs' → logprob: -11.108948707580566

Token 394: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17630386352539062
    2. '0' → logprob: -2.0513038635253906
    3. '1' → logprob: -3.9263038635253906
    4. '2' → logprob: -4.426303863525391
    5. ' (' → logprob: -6.676303863525391
    6. ' ' → logprob: -9.67630386352539
    7. 'abs' → logprob: -9.80130386352539
    8. '(abs' → logprob: -12.80130386352539
    9. '>' → logprob: -13.05130386352539
    10. '>(' → logprob: -13.42630386352539

Token 395: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03740321472287178
    2. ':' → logprob: -4.412403106689453
    3. '       ' → logprob: -4.412403106689453
    4. 'and' → logprob: -4.787403106689453
    5. '           ' → logprob: -6.037403106689453
    6. ':
' → logprob: -7.162403106689453
    7. ' :' → logprob: -8.412403106689453
    8. '   ' → logprob: -8.787403106689453
    9. '        ' → logprob: -8.787403106689453
    10. ' or' → logprob: -9.287403106689453

Token 396: ' abs' (ID: 8443)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20920026302337646
    2. '((' → logprob: -2.459200382232666
    3. '(co' → logprob: -3.209200382232666
    4. ' ((' → logprob: -3.209200382232666
    5. ' coordinate' → logprob: -4.709200382232666
    6. '       ' → logprob: -5.709200382232666
    7. 'coordinate' → logprob: -5.709200382232666
    8. '(bit' → logprob: -6.209200382232666
    9. '   ' → logprob: -6.459200382232666
    10. '(abs' → logprob: -6.959200382232666

Token 397: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.002555926563218236
    2. 'coordinate' → logprob: -6.252555847167969
    3. '((' → logprob: -7.502555847167969
    4. '(' → logprob: -9.877555847167969
    5. 'co' → logprob: -11.877555847167969
    6. '   ' → logprob: -12.752555847167969
    7. '(bit' → logprob: -13.252555847167969
    8. ' coordinate' → logprob: -13.252555847167969
    9. '_coordinate' → logprob: -13.377555847167969
    10. ' (' → logprob: -13.502555847167969

Token 398: 'ordinate' (ID: 14586)
  Prédit: 'ordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinate' → logprob: -5.228561349213123e-05
    2. 'ord' → logprob: -10.125052452087402
    3. 'rd' → logprob: -11.750052452087402
    4. 'o' → logprob: -13.750052452087402
    5. 'ordin' → logprob: -13.750052452087402
    6. 'or' → logprob: -14.250052452087402
    7. '[' → logprob: -15.000052452087402
    8. 'ordan' → logprob: -15.125052452087402
    9. 'od' → logprob: -15.750052452087402
    10. 'ordi' → logprob: -16.000051498413086

Token 399: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.1994775377388578e-05
    2. '_' → logprob: -11.750012397766113
    3. '_s' → logprob: -13.125012397766113
    4. ' _' → logprob: -14.125012397766113
    5. 'sum' → logprob: -14.500012397766113
    6. '_diff' → logprob: -15.000012397766113
    7. '_x' → logprob: -16.125011444091797
    8. ')_' → logprob: -16.375011444091797
    9. ')' → logprob: -16.500011444091797
    10. '_bit' → logprob: -17.250011444091797

Token 400: ')' (ID: 8)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.2680705487728119
    2. '&' → logprob: -1.6430705785751343
    3. ')' → logprob: -4.518070697784424
    4. '>' → logprob: -4.643070697784424
    5. ' >' → logprob: -5.018070697784424
    6. '>>' → logprob: -5.018070697784424
    7. '&gt' → logprob: -5.643070697784424
    8. '>>&' → logprob: -7.393070697784424
    9. '>=' → logprob: -7.518070697784424
    10. ' >>' → logprob: -7.518070697784424

Token 401: ' //' (ID: 602)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.2137307971715927
    2. ' &' → logprob: -1.963730812072754
    3. '>' → logprob: -3.838730812072754
    4. '>=' → logprob: -4.338730812072754
    5. '>>' → logprob: -4.463730812072754
    6. '&gt' → logprob: -5.588730812072754
    7. '%' → logprob: -6.963730812072754
    8. '>&' → logprob: -8.088730812072754
    9. ' >' → logprob: -8.338730812072754
    10. ' >=' → logprob: -8.963730812072754

Token 402: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11914549767971039
    2. '2' → logprob: -2.244145393371582
    3. ' (' → logprob: -5.119145393371582
    4. ' ' → logprob: -8.994145393371582
    5. '=' → logprob: -9.119145393371582
    6. '1' → logprob: -9.494145393371582
    7. '[' → logprob: -12.244145393371582
    8. '>' → logprob: -12.744145393371582
    9. '=(' → logprob: -14.244145393371582
    10. '10' → logprob: -14.369145393371582

Token 403: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03395029902458191
    2. '2' → logprob: -3.4089503288269043
    3. ' (' → logprob: -8.533949851989746
    4. '1' → logprob: -9.158949851989746
    5. ' ' → logprob: -13.783949851989746
    6. '(
' → logprob: -14.908949851989746
    7. '[' → logprob: -15.033949851989746
    8. '
' → logprob: -15.533949851989746
    9. '((' → logprob: -16.283950805664062
    10. '0' → logprob: -16.658950805664062

Token 404: ' >>' (ID: 6832)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 405: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.00012166214582975954
    2. ' bit' → logprob: -9.6251220703125
    3. '(bit' → logprob: -10.2501220703125
    4. '(' → logprob: -10.8751220703125
    5. 'bitr' → logprob: -15.1251220703125
    6. 'bits' → logprob: -15.2501220703125
    7. '31' → logprob: -15.2501220703125
    8. '30' → logprob: -15.7501220703125
    9. '```' → logprob: -16.1251220703125
    10. ' (' → logprob: -16.6251220703125

Token 406: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.003175932914018631
    2. 'bit' → logprob: -6.253175735473633
    3. '_bit' → logprob: -8.003175735473633
    4. '_' → logprob: -8.128175735473633
    5. ' bit' → logprob: -8.128175735473633
    6. '```' → logprob: -8.503175735473633
    7. ' _' → logprob: -10.003175735473633
    8. '   ' → logprob: -10.253175735473633
    9. '[' → logprob: -11.628175735473633
    10. '(bit' → logprob: -12.378175735473633

Token 407: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.06650924682617188
    2. '&' → logprob: -2.816509246826172
    3. '<|end|>' → logprob: -6.316509246826172
    4. ')' → logprob: -6.816509246826172
    5. ' >' → logprob: -7.691509246826172
    6. '>' → logprob: -7.941509246826172
    7. ' ' → logprob: -8.191509246826172
    8. ' &=' → logprob: -8.941509246826172
    9. ' ==' → logprob: -9.566509246826172
    10. '<|end|>' → logprob: -10.191509246826172

Token 408: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815052703022957
    2. ' ' → logprob: -4.018150329589844
    3. '0' → logprob: -15.268150329589844
    4. '   ' → logprob: -15.518150329589844
    5. ' ' → logprob: -16.143150329589844
    6. '  ' → logprob: -16.768150329589844
    7. '(' → logprob: -18.018150329589844
    8. '```' → logprob: -18.393150329589844
    9. ' (' → logprob: -18.705650329589844
    10. '=' → logprob: -19.518150329589844

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. '0' → logprob: -14.750021934509277
    4. '```' → logprob: -17.812522888183594
    5. '   ' → logprob: -18.125022888183594
    6. '(' → logprob: -18.250022888183594
    7. '2' → logprob: -18.562522888183594
    8. '3' → logprob: -19.125022888183594
    9. ' ' → logprob: -19.312522888183594
    10. '`' → logprob: -19.312522888183594

Token 410: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7178279161453247
    2. '==' → logprob: -1.2178279161453247
    3. ' ==' → logprob: -1.5928279161453247
    4. '=' → logprob: -4.842827796936035
    5. '<|end|>' → logprob: -6.592827796936035
    6. ' :' → logprob: -6.717827796936035
    7. '):' → logprob: -7.342827796936035
    8. ')' → logprob: -7.592827796936035
    9. ' =' → logprob: -7.967827796936035
    10. ':
' → logprob: -8.092827796936035

Token 411: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7073521018028259
    2. '<|end|>' → logprob: -0.8323521018028259
    3. ')' → logprob: -3.8323521614074707
    4. '[' → logprob: -4.582352161407471
    5. ' (' → logprob: -4.707352161407471
    6. ' :' → logprob: -4.832352161407471
    7. ' ' → logprob: -4.957352161407471
    8. '):' → logprob: -5.082352161407471
    9. '   ' → logprob: -6.082352161407471
    10. ',' → logprob: -7.082352161407471

Token 412: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.318273663520813
    2. ' bit' → logprob: -1.318273663520813
    3. '           ' → logprob: -5.568273544311523
    4. '       ' → logprob: -7.443273544311523
    5. '[' → logprob: -8.318273544311523
    6. '(bit' → logprob: -8.818273544311523
    7. '   ' → logprob: -10.193273544311523
    8. '1' → logprob: -10.193273544311523
    9. '-bit' → logprob: -10.568273544311523
    10. '               ' → logprob: -10.943273544311523

Token 413: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -6.44443862256594e-05
    2. 'matrix' → logprob: -10.000064849853516
    3. '_index' → logprob: -11.750064849853516
    4. 's' → logprob: -13.000064849853516
    5. 'Matrix' → logprob: -13.625064849853516
    6. ' matrix' → logprob: -13.750064849853516
    7. 'atrix' → logprob: -13.875064849853516
    8. '_MATRIX' → logprob: -13.875064849853516
    9. ')' → logprob: -14.000064849853516
    10. '_token' → logprob: -14.625064849853516

Token 414: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '0' → logprob: -14.00000286102295
    3. 's' → logprob: -14.62500286102295
    4. '[
' → logprob: -15.12500286102295
    5. '<|end|>' → logprob: -15.87500286102295
    6. '][' → logprob: -15.87500286102295
    7. '=' → logprob: -16.000001907348633
    8. '```' → logprob: -16.000001907348633
    9. ' [' → logprob: -16.625001907348633
    10. '
' → logprob: -16.625001907348633

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.000001907348633
    3. '1' → logprob: -14.625001907348633
    4. ' ' → logprob: -15.500001907348633
    5. '(' → logprob: -17.250001907348633
    6. '   ' → logprob: -18.937501907348633
    7. '۰' → logprob: -19.187501907348633
    8. '
' → logprob: -19.500001907348633
    9. '０' → logprob: -19.937501907348633
    10. '```' → logprob: -20.187501907348633

Token 416: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6338493824005127
    2. '][' → logprob: -0.7588493824005127
    3. ']' → logprob: -7.758849143981934
    4. ')[' → logprob: -7.883849143981934
    5. ' [' → logprob: -8.508849143981934
    6. ' ][' → logprob: -9.133849143981934
    7. '```' → logprob: -9.758849143981934
    8. '>[' → logprob: -10.758849143981934
    9. '   ' → logprob: -11.633849143981934
    10. '=' → logprob: -12.133849143981934

Token 417: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0012324919225648046
    2. '29' → logprob: -6.751232624053955
    3. ' bit' → logprob: -10.501232147216797
    4. '
' → logprob: -11.501232147216797
    5. '(' → logprob: -11.626232147216797
    6. '30' → logprob: -12.126232147216797
    7. '(bit' → logprob: -12.126232147216797
    8. '   ' → logprob: -13.876232147216797
    9. 'bitr' → logprob: -14.501232147216797
    10. 'bits' → logprob: -14.626232147216797

Token 418: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.9875325708417222e-05
    2. 'index' → logprob: -10.500029563903809
    3. '+' → logprob: -13.875029563903809
    4. 'Index' → logprob: -14.625029563903809
    5. ' index' → logprob: -16.000030517578125
    6. '	index' → logprob: -16.125030517578125
    7. '_ind' → logprob: -16.375030517578125
    8. ']' → logprob: -16.375030517578125
    9. '_INDEX' → logprob: -16.500030517578125
    10. '1' → logprob: -16.500030517578125

Token 419: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05872967839241028
    2. ']=' → logprob: -3.808729648590088
    3. ']' → logprob: -3.933729648590088
    4. ' =' → logprob: -4.183729648590088
    5. ']+=' → logprob: -10.433730125427246
    6. ' ]' → logprob: -11.808730125427246
    7. ')=' → logprob: -12.058730125427246
    8. ')' → logprob: -13.058730125427246
    9. '<|end|>' → logprob: -13.433730125427246
    10. '']=' → logprob: -13.933730125427246

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006717147771269083
    2. ' =' → logprob: -5.006717205047607
    3. ' ^=' → logprob: -13.50671672821045
    4. '+=' → logprob: -15.13171672821045
    5. '^' → logprob: -16.006717681884766
    6. ' +=' → logprob: -17.881717681884766
    7. '.=' → logprob: -18.006717681884766
    8. '=True' → logprob: -18.131717681884766
    9. ' |=' → logprob: -19.006717681884766
    10. ')=' → logprob: -19.006717681884766

Token 421: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.875001907348633
    3. '   ' → logprob: -14.000001907348633
    4. '0' → logprob: -15.500001907348633
    5. '           ' → logprob: -16.250001907348633
    6. '```' → logprob: -19.312501907348633
    7. '       ' → logprob: -19.500001907348633
    8. '               ' → logprob: -19.937501907348633
    9. '=' → logprob: -20.125001907348633
    10. '                   ' → logprob: -20.375001907348633

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '0' → logprob: -13.750000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.750001907348633
    5. '`' → logprob: -19.125001907348633
    6. '```' → logprob: -19.125001907348633
    7. '
' → logprob: -20.812501907348633
    8. '１' → logprob: -20.937501907348633
    9. '(' → logprob: -21.000001907348633
    10. '-' → logprob: -21.125001907348633

Token 423: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 424: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: ' coordinate' (ID: 30380)
  Prédit: ' coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordinate' → logprob: -0.20579542219638824
    2. 'coordinate' → logprob: -1.705795407295227
    3. 'abs' → logprob: -6.2057952880859375
    4. ' abs' → logprob: -6.7057952880859375
    5. ' (' → logprob: -7.8307952880859375
    6. '(co' → logprob: -8.330795288085938
    7. '(abs' → logprob: -8.455795288085938
    8. ' bit' → logprob: -9.330795288085938
    9. 'bit' → logprob: -9.455795288085938
    10. '(' → logprob: -9.830795288085938

Token 427: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.12698574364185333
    2. '_diff' → logprob: -2.126985788345337
    3. 'diff' → logprob: -10.501985549926758
    4. 'sum' → logprob: -11.501985549926758
    5. '_abs' → logprob: -12.751985549926758
    6. '_difference' → logprob: -12.751985549926758
    7. '```' → logprob: -13.376985549926758
    8. '_' → logprob: -13.501985549926758
    9. ' sum' → logprob: -13.626985549926758
    10. 's' → logprob: -13.626985549926758

Token 428: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.052894823253154755
    2. ' <' → logprob: -3.9278948307037354
    3. '[' → logprob: -4.177894592285156
    4. '>=' → logprob: -4.177894592285156
    5. '<' → logprob: -7.427894592285156
    6. ' ' → logprob: -9.177894592285156
    7. '   ' → logprob: -9.302894592285156
    8. ' &' → logprob: -9.677894592285156
    9. ' >>=' → logprob: -9.802894592285156
    10. ' <=' → logprob: -9.927894592285156

Token 429: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5253390073776245
    2. '0' → logprob: -0.9003390073776245
    3. '=' → logprob: -6.150339126586914
    4. '1' → logprob: -9.775339126586914
    5. ' =' → logprob: -12.275339126586914
    6. '>' → logprob: -13.025339126586914
    7. '2' → logprob: -13.275339126586914
    8. '30' → logprob: -13.400339126586914
    9. '|' → logprob: -13.525339126586914
    10. '/' → logprob: -13.962839126586914

Token 430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007121934904716909
    2. ' ' → logprob: -7.2507123947143555
    3. '   ' → logprob: -14.000712394714355
    4. '1' → logprob: -15.438212394714355
    5. '=' → logprob: -15.688212394714355
    6. '  ' → logprob: -15.813212394714355
    7. '-' → logprob: -16.06321144104004
    8. '
' → logprob: -16.31321144104004
    9. ' ' → logprob: -16.31321144104004
    10. '

' → logprob: -16.50071144104004

Token 431: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0037404601462185383
    2. 'and' → logprob: -5.628740310668945
    3. '           ' → logprob: -9.878740310668945
    4. ' &' → logprob: -10.628740310668945
    5. '       ' → logprob: -10.753740310668945
    6. '[' → logprob: -10.878740310668945
    7. ' ' → logprob: -12.003740310668945
    8. '        ' → logprob: -12.128740310668945
    9. ':' → logprob: -13.128740310668945
    10. '          ' → logprob: -13.503740310668945

Token 432: ' abs' (ID: 8443)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.9892075657844543
    2. ' (' → logprob: -1.3642075061798096
    3. ' abs' → logprob: -1.8642075061798096
    4. '((' → logprob: -2.4892075061798096
    5. ' ((' → logprob: -2.7392075061798096
    6. 'abs' → logprob: -3.3642075061798096
    7. ' not' → logprob: -4.114207744598389
    8. '(' → logprob: -4.614207744598389
    9. '(not' → logprob: -6.114207744598389
    10. '(bit' → logprob: -6.364207744598389

Token 433: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.00010187433508690447
    2. '(abs' → logprob: -9.375102043151855
    3. '(' → logprob: -11.750102043151855
    4. 'coordinate' → logprob: -11.750102043151855
    5. '(coord' → logprob: -15.125102043151855
    6. '(bit' → logprob: -15.375102043151855
    7. '(
' → logprob: -15.750102043151855
    8. '((' → logprob: -16.25010108947754
    9. '(-' → logprob: -16.62510108947754
    10. 'abs' → logprob: -17.12510108947754

Token 434: 'ordinate' (ID: 14586)
  Prédit: 'ordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinate' → logprob: -0.08900085836648941
    2. 'coordinate' → logprob: -2.464000940322876
    3. '_coordinate' → logprob: -10.839000701904297
    4. 'ordinates' → logprob: -11.214000701904297
    5. 'o' → logprob: -12.339000701904297
    6. 'ordon' → logprob: -12.714000701904297
    7. 'od' → logprob: -12.714000701904297
    8. 'co' → logprob: -12.714000701904297
    9. 'or' → logprob: -12.839000701904297
    10. 'bit' → logprob: -13.089000701904297

Token 435: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00025430647656321526
    2. '_diff' → logprob: -8.37525463104248
    3. 'sum' → logprob: -10.87525463104248
    4. '[' → logprob: -12.62525463104248
    5. 'diff' → logprob: -14.87525463104248
    6. '_bit' → logprob: -15.25025463104248
    7. '_s' → logprob: -15.50025463104248
    8. '_difference' → logprob: -15.75025463104248
    9. '_' → logprob: -16.000253677368164
    10. ' sum' → logprob: -16.375253677368164

Token 436: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013635702198371291
    2. ')//' → logprob: -7.001363754272461
    3. ' )' → logprob: -8.126363754272461
    4. '[' → logprob: -9.501363754272461
    5. ')>>' → logprob: -10.501363754272461
    6. '//' → logprob: -11.376363754272461
    7. ' //' → logprob: -11.501363754272461
    8. '```' → logprob: -11.876363754272461
    9. ']' → logprob: -12.501363754272461
    10. '   ' → logprob: -12.876363754272461

Token 437: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.11092036217451096
    2. '//' → logprob: -2.6109204292297363
    3. ' ' → logprob: -4.485920429229736
    4. ' >>' → logprob: -4.985920429229736
    5. ')' → logprob: -5.110920429229736
    6. '>>' → logprob: -5.735920429229736
    7. '```' → logprob: -6.735920429229736
    8. '>' → logprob: -7.360920429229736
    9. ' ' → logprob: -7.735920429229736
    10. ')//' → logprob: -7.985920429229736

Token 438: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03827718272805214
    2. ' ' → logprob: -3.2882771492004395
    3. '-' → logprob: -8.788277626037598
    4. '(' → logprob: -10.163277626037598
    5. ' -' → logprob: -11.413277626037598
    6. '   ' → logprob: -11.913277626037598
    7. ' (' → logprob: -12.288277626037598
    8. '  ' → logprob: -12.413277626037598
    9. '1' → logprob: -12.538277626037598
    10. '4' → logprob: -12.975777626037598

Token 439: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014072739577386528
    2. ' ' → logprob: -9.125141143798828
    3. '(' → logprob: -10.500141143798828
    4. '1' → logprob: -13.875141143798828
    5. '-' → logprob: -13.875141143798828
    6. '```' → logprob: -13.875141143798828
    7. '   ' → logprob: -14.750141143798828
    8. ' (' → logprob: -15.375141143798828
    9. '4' → logprob: -16.125141143798828
    10. '0' → logprob: -16.687641143798828

Token 440: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.4744471311569214
    2. '>>' → logprob: -0.9744471311569214
    3. ' &' → logprob: -8.974447250366211
    4. '>' → logprob: -9.349447250366211
    5. ' >' → logprob: -9.724447250366211
    6. '&' → logprob: -10.349447250366211
    7. ' ' → logprob: -10.849447250366211
    8. ' >>=' → logprob: -10.974447250366211
    9. '```' → logprob: -11.724447250366211
    10. '[' → logprob: -12.224447250366211

Token 441: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.014164221473038197
    2. ' bit' → logprob: -4.264164447784424
    3. '(bit' → logprob: -14.764163970947266
    4. '31' → logprob: -16.264163970947266
    5. '30' → logprob: -17.139163970947266
    6. 'bitr' → logprob: -17.639163970947266
    7. 'bits' → logprob: -17.889163970947266
    8. '_bit' → logprob: -18.014163970947266
    9. ' ' → logprob: -18.264163970947266
    10. '```' → logprob: -18.389163970947266

Token 442: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.03222821652889252
    2. 'bit' → logprob: -3.5322282314300537
    3. 'index' → logprob: -6.032227993011475
    4. ' bit' → logprob: -10.657228469848633
    5. '(bit' → logprob: -11.157228469848633
    6. '_bit' → logprob: -11.407228469848633
    7. '[' → logprob: -11.657228469848633
    8. 'Index' → logprob: -11.907228469848633
    9. '```' → logprob: -12.282228469848633
    10. '1' → logprob: -13.282228469848633

Token 443: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.2519989609718323
    2. '&' → logprob: -1.5019989013671875
    3. ' &
' → logprob: -10.126998901367188
    4. '[' → logprob: -11.251998901367188
    5. '&amp' → logprob: -11.876998901367188
    6. '&
' → logprob: -11.876998901367188
    7. ')&' → logprob: -13.751998901367188
    8. '＆' → logprob: -14.751998901367188
    9. ' &=' → logprob: -14.876998901367188
    10. ' &)' → logprob: -15.626998901367188

Token 444: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015047440538182855
    2. ' ' → logprob: -6.501504898071289
    3. '0' → logprob: -13.251504898071289
    4. '   ' → logprob: -15.189004898071289
    5. '```' → logprob: -16.06400489807129
    6. '
' → logprob: -16.56400489807129
    7. 'bit' → logprob: -16.87650489807129
    8. ' ' → logprob: -17.06400489807129
    9. '  ' → logprob: -17.68900489807129
    10. '(' → logprob: -17.81400489807129

Token 445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.250008583068848
    3. 'bit' → logprob: -13.250008583068848
    4. '0' → logprob: -14.687508583068848
    5. '```' → logprob: -14.812508583068848
    6. '   ' → logprob: -15.750008583068848
    7. '
' → logprob: -16.18750762939453
    8. ' bit' → logprob: -16.87500762939453
    9. '`' → logprob: -17.00000762939453
    10. '31' → logprob: -17.12500762939453

Token 446: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2896277904510498
    2. '=' → logprob: -2.41462779045105
    3. '           ' → logprob: -2.53962779045105
    4. ':
' → logprob: -3.16462779045105
    5. ' =' → logprob: -3.66462779045105
    6. '       ' → logprob: -5.164628028869629
    7. ' ==' → logprob: -5.789628028869629
    8. '==' → logprob: -5.789628028869629
    9. '[' → logprob: -6.164628028869629
    10. '               ' → logprob: -7.789628028869629

Token 447: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6622956395149231
    2. '           ' → logprob: -0.7872956395149231
    3. '[' → logprob: -4.037295818328857
    4. ' bit' → logprob: -5.537295818328857
    5. '   ' → logprob: -6.412295818328857
    6. '```' → logprob: -6.537295818328857
    7. '{' → logprob: -6.662295818328857
    8. ':
' → logprob: -7.162295818328857
    9. '<|end|>' → logprob: -8.0372953414917
    10. '=' → logprob: -8.1622953414917

Token 448: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.1752859354019165
    2. ' bit' → logprob: -2.550285816192627
    3. '0' → logprob: -3.175285816192627
    4. '           ' → logprob: -3.300285816192627
    5. '       ' → logprob: -6.175285816192627
    6. '               ' → logprob: -7.300285816192627
    7. '   ' → logprob: -7.550285816192627
    8. '1' → logprob: -8.175286293029785
    9. '            ' → logprob: -8.925286293029785
    10. ' ' → logprob: -9.425286293029785

Token 449: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -1.652451464906335e-05
    2. 'matrix' → logprob: -11.125016212463379
    3. 'Matrix' → logprob: -13.625016212463379
    4. '_MATRIX' → logprob: -15.125016212463379
    5. ' matrix' → logprob: -16.875017166137695
    6. 'atrix' → logprob: -17.875017166137695
    7. '           ' → logprob: -17.875017166137695
    8. '_index' → logprob: -18.000017166137695
    9. '矩' → logprob: -18.000017166137695
    10. '   ' → logprob: -18.125017166137695

Token 450: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8550976164988242e-05
    2. '0' → logprob: -12.000018119812012
    3. ' [' → logprob: -12.000018119812012
    4. '=' → logprob: -13.375018119812012
    5. '][' → logprob: -13.625018119812012
    6. '[
' → logprob: -14.000018119812012
    7. '   ' → logprob: -15.125018119812012
    8. '```' → logprob: -15.250018119812012
    9. '﻿' → logprob: -15.500018119812012
    10. '
' → logprob: -15.500018119812012

Token 451: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029782656580209732
    2. '1' → logprob: -3.529782772064209
    3. '[' → logprob: -10.77978229522705
    4. ' ' → logprob: -11.65478229522705
    5. '(' → logprob: -13.90478229522705
    6. '   ' → logprob: -14.02978229522705
    7. '```' → logprob: -14.71728229522705
    8. '  ' → logprob: -16.467283248901367
    9. 'bit' → logprob: -17.279783248901367
    10. '    ' → logprob: -17.279783248901367

Token 452: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08901548385620117
    2. '][' → logprob: -2.464015483856201
    3. ']' → logprob: -10.08901596069336
    4. ' [' → logprob: -11.58901596069336
    5. ')[' → logprob: -11.58901596069336
    6. ' ][' → logprob: -12.33901596069336
    7. '>[' → logprob: -12.46401596069336
    8. '```' → logprob: -13.46401596069336
    9. '   ' → logprob: -13.83901596069336
    10. '           ' → logprob: -14.08901596069336

Token 453: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.00013369438238441944
    2. '30' → logprob: -9.375133514404297
    3. '(' → logprob: -10.375133514404297
    4. '(bit' → logprob: -11.500133514404297
    5. ' bit' → logprob: -12.500133514404297
    6. '29' → logprob: -13.000133514404297
    7. '31' → logprob: -14.000133514404297
    8. 'bits' → logprob: -14.875133514404297
    9. '
' → logprob: -16.000133514404297
    10. 'bitr' → logprob: -16.750133514404297

Token 454: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.006125972140580416
    2. 'index' → logprob: -5.1311259269714355
    3. 'bit' → logprob: -9.131126403808594
    4. '[' → logprob: -9.881126403808594
    5. 'Index' → logprob: -11.131126403808594
    6. '][' → logprob: -12.006126403808594
    7. '```' → logprob: -12.256126403808594
    8. '   ' → logprob: -13.256126403808594
    9. '_INDEX' → logprob: -13.381126403808594
    10. ']' → logprob: -13.381126403808594

Token 455: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03896660357713699
    2. ' =' → logprob: -3.288966655731201
    3. ']' → logprob: -7.288966655731201
    4. ']=' → logprob: -8.413966178894043
    5. '[' → logprob: -11.538966178894043
    6. ')' → logprob: -12.663966178894043
    7. '<|end|>' → logprob: -12.913966178894043
    8. ')=' → logprob: -13.288966178894043
    9. '=True' → logprob: -14.663966178894043
    10. ' |=' → logprob: -14.788966178894043

Token 456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011050531640648842
    2. ' =' → logprob: -4.511050701141357
    3. '[' → logprob: -13.0110502243042
    4. ' ^=' → logprob: -15.3860502243042
    5. ']=' → logprob: -16.761051177978516
    6. '+=' → logprob: -16.761051177978516
    7. '^' → logprob: -16.761051177978516
    8. ']' → logprob: -16.886051177978516
    9. ' ' → logprob: -18.011051177978516
    10. ')' → logprob: -18.136051177978516

Token 457: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5849869847297668
    2. '0' → logprob: -0.8349869847297668
    3. ' ' → logprob: -4.709987163543701
    4. '   ' → logprob: -13.959986686706543
    5. '```' → logprob: -14.772486686706543
    6. ' ' → logprob: -16.14748764038086
    7. '	' → logprob: -16.64748764038086
    8. '=' → logprob: -16.83498764038086
    9. '
' → logprob: -16.89748764038086
    10. '  ' → logprob: -17.02248764038086

Token 458: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2254195511341095
    2. '1' → logprob: -1.600419521331787
    3. '-' → logprob: -12.475419998168945
    4. '```' → logprob: -14.475419998168945
    5. ' ' → logprob: -14.600419998168945
    6. '2' → logprob: -14.975419998168945
    7. '[' → logprob: -15.600419998168945
    8. '(' → logprob: -16.662919998168945
    9. '#' → logprob: -16.850419998168945
    10. '=' → logprob: -16.850419998168945

Token 459: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 460: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5929632186889648
    2. '       ' → logprob: -1.0929632186889648
    3. '<|end|>' → logprob: -2.217963218688965
    4. '```' → logprob: -6.842963218688965
    5. '[' → logprob: -7.592963218688965
    6. '<|end|>' → logprob: -7.592963218688965
    7. ' ' → logprob: -8.717963218688965
    8. ' if' → logprob: -8.717963218688965
    9. '	' → logprob: -8.842963218688965
    10. '    
' → logprob: -9.092963218688965

Token 461: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045752014964818954
    2. '   ' → logprob: -3.6707520484924316
    3. '<|end|>' → logprob: -4.795752048492432
    4. 'if' (adapté à ' if') → logprob: -5.670752048492432
    5. ' ' → logprob: -5.920752048492432
    6. ' if' → logprob: -6.545752048492432
    7. '[' → logprob: -7.045752048492432
    8. '    ' → logprob: -7.795752048492432
    9. '        ' → logprob: -7.795752048492432
    10. '```' → logprob: -8.295751571655273

Token 462: ' coordinate' (ID: 30380)
  Prédit: ' coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordinate' → logprob: -0.5773460268974304
    2. 'coordinate' → logprob: -0.8273460268974304
    3. 'abs' → logprob: -6.827345848083496
    4. ' abs' → logprob: -8.202345848083496
    5. 'bit' → logprob: -11.327345848083496
    6. '(co' → logprob: -11.702345848083496
    7. 'coord' → logprob: -12.077345848083496
    8. ' bit' → logprob: -12.327345848083496
    9. '(abs' → logprob: -12.577345848083496
    10. 'co' → logprob: -12.702345848083496

Token 463: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.22711484134197235
    2. '_sum' → logprob: -1.6021147966384888
    3. 'diff' → logprob: -6.477114677429199
    4. 'sum' → logprob: -8.8521146774292
    5. '_mod' → logprob: -12.9771146774292
    6. '[' → logprob: -13.2271146774292
    7. '
' → logprob: -13.3521146774292
    8. '_d' → logprob: -13.4771146774292
    9. '```' → logprob: -13.4771146774292
    10. '_difference' → logprob: -13.6021146774292

Token 464: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.24546536803245544
    2. ' <' → logprob: -1.7454653978347778
    3. '[' → logprob: -3.2454652786254883
    4. '>=' → logprob: -5.995465278625488
    5. ' &' → logprob: -7.995465278625488
    6. ' [' → logprob: -7.995465278625488
    7. ' >>' → logprob: -8.120465278625488
    8. '<' → logprob: -8.495465278625488
    9. ' >' → logprob: -8.745465278625488
    10. ' ' → logprob: -9.245465278625488

Token 465: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519608736038208
    2. ' ' → logprob: -1.5019608736038208
    3. ' bit' → logprob: -11.001960754394531
    4. '1' → logprob: -11.876960754394531
    5. 'bit' → logprob: -12.251960754394531
    6. '30' → logprob: -13.501960754394531
    7. '2' → logprob: -13.751960754394531
    8. '(bit' → logprob: -14.751960754394531
    9. '  ' → logprob: -15.876960754394531
    10. '   ' → logprob: -15.876960754394531

Token 466: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '1' → logprob: -19.125139236450195
    4. '<|end|>' → logprob: -20.000139236450195
    5. '00' → logprob: -20.625139236450195
    6. '   ' → logprob: -21.000139236450195
    7. '(' → logprob: -21.000139236450195
    8. '۰' → logprob: -21.000139236450195
    9. '  ' → logprob: -21.125139236450195
    10. '2' → logprob: -21.125139236450195

Token 467: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004939850885421038
    2. 'and' → logprob: -5.504940032958984
    3. '[' → logprob: -7.129940032958984
    4. '       ' → logprob: -10.379940032958984
    5. ' &' → logprob: -11.629940032958984
    6. '           ' → logprob: -12.004940032958984
    7. '<|end|>' → logprob: -13.004940032958984
    8. '        ' → logprob: -13.129940032958984
    9. ' [' → logprob: -13.254940032958984
    10. ' ' → logprob: -13.879940032958984

Token 468: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6411373615264893
    2. ' abs' → logprob: -0.8911373615264893
    3. '(abs' → logprob: -2.7661373615264893
    4. ' (' → logprob: -8.76613712310791
    5. '(' → logprob: -10.01613712310791
    6. '((' → logprob: -11.51613712310791
    7. '(bit' → logprob: -14.51613712310791
    8. 'bit' → logprob: -14.76613712310791
    9. '_abs' → logprob: -14.89113712310791
    10. '.abs' → logprob: -15.26613712310791

Token 469: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -9.949026571121067e-05
    2. 'coordinate' → logprob: -9.250099182128906
    3. ' (' → logprob: -13.625099182128906
    4. '(
' → logprob: -14.500099182128906
    5. '(' → logprob: -14.750099182128906
    6. '(coord' → logprob: -14.750099182128906
    7. ' coordinate' → logprob: -15.250099182128906
    8. 'co' → logprob: -15.500099182128906
    9. '(bit' → logprob: -15.875099182128906
    10. '```' → logprob: -16.375099182128906

Token 470: 'ordinate' (ID: 14586)
  Prédit: 'ordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinate' → logprob: -4.0722858102526516e-05
    2. 'coordinate' → logprob: -11.000041007995605
    3. 'o' → logprob: -11.750041007995605
    4. 'ordinates' → logprob: -12.500041007995605
    5. 'ordinator' → logprob: -13.000041007995605
    6. 'rd' → logprob: -13.125041007995605
    7. 'ordan' → logprob: -13.250041007995605
    8. 'ord' → logprob: -13.250041007995605
    9. 'ordon' → logprob: -13.750041007995605
    10. 'od' → logprob: -14.125041007995605

Token 471: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.005317362025380135
    2. '_sum' → logprob: -5.630317211151123
    3. 'diff' → logprob: -6.380317211151123
    4. '(diff' → logprob: -11.380317687988281
    5. '	diff' → logprob: -12.630317687988281
    6. 'sum' → logprob: -13.130317687988281
    7. '_DIFF' → logprob: -13.380317687988281
    8. 'Diff' → logprob: -14.380317687988281
    9. '[' → logprob: -14.755317687988281
    10. '_difference' → logprob: -14.880317687988281

Token 472: ')' (ID: 8)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.23922477662563324
    2. ')' → logprob: -1.7392247915267944
    3. '//' → logprob: -4.239224910736084
    4. ' >>' → logprob: -4.239224910736084
    5. ')//' → logprob: -5.489224910736084
    6. '()' → logprob: -6.489224910736084
    7. '>>' → logprob: -7.114224910736084
    8. ' ' → logprob: -7.364224910736084
    9. '```' → logprob: -7.614224910736084
    10. ' )' → logprob: -8.364224433898926

Token 473: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.049140799790620804
    2. '//' → logprob: -3.799140691757202
    3. ' >>' → logprob: -3.799140691757202
    4. '>>' → logprob: -6.299140930175781
    5. ' ' → logprob: -7.549140930175781
    6. '```' → logprob: -8.174140930175781
    7. '()' → logprob: -8.799140930175781
    8. ')' → logprob: -8.799140930175781
    9. ' ' → logprob: -9.424140930175781
    10. '   ' → logprob: -9.924140930175781

Token 474: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028076060116291046
    2. ' ' → logprob: -5.8778076171875
    3. '(' → logprob: -13.0028076171875
    4. '   ' → logprob: -15.6278076171875
    5. ' (' → logprob: -16.1278076171875
    6. '1' → logprob: -16.1278076171875
    7. '     ' → logprob: -17.2528076171875
    8. '    ' → logprob: -17.3778076171875
    9. '  ' → logprob: -17.3778076171875
    10. '       ' → logprob: -18.3778076171875

Token 475: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023154958034865558
    2. ' ' → logprob: -8.375231742858887
    3. '(' → logprob: -14.250231742858887
    4. '   ' → logprob: -15.750231742858887
    5. '4' → logprob: -17.25023078918457
    6. ' (' → logprob: -18.12523078918457
    7. '  ' → logprob: -18.25023078918457
    8. '```' → logprob: -18.75023078918457
    9. '    ' → logprob: -19.25023078918457
    10. '２' → logprob: -19.37523078918457

Token 476: ' >>' (ID: 6832)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.9525144100189209
    2. '&' → logprob: -1.327514410018921
    3. ' >>' → logprob: -1.577514410018921
    4. '>>' → logprob: -1.952514410018921
    5. '[' → logprob: -7.9525146484375
    6. '&gt' → logprob: -9.3275146484375
    7. '>>&' → logprob: -9.4525146484375
    8. '>' → logprob: -10.2025146484375
    9. '```' → logprob: -10.5775146484375
    10. ' &
' → logprob: -10.8275146484375

Token 477: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.00861468818038702
    2. ' bit' → logprob: -4.758614540100098
    3. '(bit' → logprob: -16.508615493774414
    4. 'bits' → logprob: -19.008615493774414
    5. 'bitr' → logprob: -20.008615493774414
    6. '```' → logprob: -20.508615493774414
    7. '_bit' → logprob: -20.633615493774414
    8. '-bit' → logprob: -21.258615493774414
    9. 'Bit' → logprob: -21.883615493774414
    10. '.bit' → logprob: -22.258615493774414

Token 478: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.593580424785614
    2. 'bit' → logprob: -0.843580424785614
    3. 'index' → logprob: -4.09358024597168
    4. ' bit' → logprob: -7.21858024597168
    5. '_bit' → logprob: -9.96858024597168
    6. '(bit' → logprob: -11.71858024597168
    7. '   ' → logprob: -12.84358024597168
    8. 'Index' → logprob: -12.84358024597168
    9. ' ' → logprob: -13.21858024597168
    10. ' index' → logprob: -13.34358024597168

Token 479: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.38688260316848755
    2. ' &' → logprob: -1.1368825435638428
    3. '&amp' → logprob: -11.761882781982422
    4. '&
' → logprob: -13.261882781982422
    5. ' &
' → logprob: -13.761882781982422
    6. ' ' → logprob: -15.136882781982422
    7. '&nbsp' → logprob: -15.261882781982422
    8. '＆' → logprob: -16.011882781982422
    9. '<|end|>' → logprob: -16.386882781982422
    10. ')&' → logprob: -16.886882781982422

Token 480: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0889447033405304
    2. ' ' → logprob: -2.463944673538208
    3. '0' → logprob: -12.963944435119629
    4. ' bit' → logprob: -13.338944435119629
    5. 'bit' → logprob: -14.338944435119629
    6. ' ' → logprob: -15.213944435119629
    7. '```' → logprob: -15.838944435119629
    8. '   ' → logprob: -16.588945388793945
    9. '(bit' → logprob: -16.963945388793945
    10. '           ' → logprob: -17.088945388793945

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004886920796707273
    2. 'bit' → logprob: -7.625488758087158
    3. '(bit' → logprob: -15.50048828125
    4. ' bit' → logprob: -15.75048828125
    5. ' ' → logprob: -16.12548828125
    6. '0' → logprob: -16.37548828125
    7. '```' → logprob: -17.12548828125
    8. 'bits' → logprob: -18.37548828125
    9. '&' → logprob: -19.62548828125
    10. '31' → logprob: -19.62548828125

Token 482: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001838560332544148
    2. ':
' → logprob: -6.751838684082031
    3. '       ' → logprob: -7.501838684082031
    4. '           ' → logprob: -10.001838684082031
    5. '<|end|>' → logprob: -10.626838684082031
    6. '=' → logprob: -11.501838684082031
    7. '==' → logprob: -11.876838684082031
    8. ' :' → logprob: -12.001838684082031
    9. '):' → logprob: -12.251838684082031
    10. '[' → logprob: -12.251838684082031

Token 483: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5017970204353333
    2. '           ' → logprob: -1.2517969608306885
    3. ' ' → logprob: -3.3767969608306885
    4. '```' → logprob: -4.126797199249268
    5. '   ' → logprob: -4.501797199249268
    6. '<|end|>' → logprob: -4.876797199249268
    7. '               ' → logprob: -5.376797199249268
    8. '[' → logprob: -5.501797199249268
    9. ')' → logprob: -5.751797199249268
    10. '1' → logprob: -5.751797199249268

Token 484: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.005235767923295498
    2. ' bit' → logprob: -5.25523567199707
    3. '           ' → logprob: -13.25523567199707
    4. '   ' → logprob: -15.88023567199707
    5. '       ' → logprob: -16.13023567199707
    6. '               ' → logprob: -17.75523567199707
    7. '(bit' → logprob: -19.13023567199707
    8. '            ' → logprob: -19.63023567199707
    9. '          ' → logprob: -19.88023567199707
    10. '-bit' → logprob: -19.88023567199707

Token 485: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -1.0325924449716695e-05
    2. 'matrix' → logprob: -11.50001049041748
    3. '[' → logprob: -16.625009536743164
    4. '_MATRIX' → logprob: -16.750009536743164
    5. 'Matrix' → logprob: -17.250009536743164
    6. ' matrix' → logprob: -17.625009536743164
    7. '矩' → logprob: -19.750009536743164
    8. '_' → logprob: -20.875009536743164
    9. '	matrix' → logprob: -20.875009536743164
    10. 'atrix' → logprob: -21.375009536743164

Token 486: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.75
    3. ' [' → logprob: -17.375
    4. '```' → logprob: -17.625
    5. '[
' → logprob: -18.125
    6. '
' → logprob: -18.875
    7. '=' → logprob: -19.5
    8. '<|end|>' → logprob: -20.375
    9. '[][' → logprob: -20.75
    10. '1' → logprob: -20.875

Token 487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03892647475004196
    2. '[' → logprob: -3.788926362991333
    3. '0' → logprob: -4.163926601409912
    4. '(' → logprob: -12.163926124572754
    5. '```' → logprob: -13.163926124572754
    6. ' ' → logprob: -13.288926124572754
    7. ' [' → logprob: -13.788926124572754
    8. '
' → logprob: -14.038926124572754
    9. '   ' → logprob: -14.413926124572754
    10. '[
' → logprob: -15.601426124572754

Token 488: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.9153885558771435e-06
    2. ' [' → logprob: -12.750005722045898
    3. '```' → logprob: -13.875005722045898
    4. '][' → logprob: -14.000005722045898
    5. '   ' → logprob: -15.125005722045898
    6. '	' → logprob: -15.125005722045898
    7. ' ' → logprob: -15.250005722045898
    8. '       ' → logprob: -16.3750057220459
    9. '           ' → logprob: -17.2500057220459
    10. ')[' → logprob: -17.3750057220459

Token 489: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0005580356228165329
    2. '[' → logprob: -7.875557899475098
    3. ' bit' → logprob: -9.000557899475098
    4. '0' → logprob: -10.000557899475098
    5. '(bit' → logprob: -11.750557899475098
    6. '
' → logprob: -14.625557899475098
    7. '30' → logprob: -14.750557899475098
    8. '31' → logprob: -16.000558853149414
    9. '<|end|>' → logprob: -16.375558853149414
    10. 'bitr' → logprob: -16.875558853149414

Token 490: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -8.53050296427682e-05
    2. 'index' → logprob: -9.37508487701416
    3. 'Index' → logprob: -16.125085830688477
    4. '_INDEX' → logprob: -16.250085830688477
    5. 'dex' → logprob: -16.375085830688477
    6. '```' → logprob: -16.750085830688477
    7. 'nd' → logprob: -17.000085830688477
    8. '_' → logprob: -17.500085830688477
    9. 'ind' → logprob: -17.500085830688477
    10. 'n' → logprob: -17.750085830688477

Token 491: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005941479001194239
    2. ' =' → logprob: -5.130941390991211
    3. ']' → logprob: -11.880941390991211
    4. ']=' → logprob: -12.755941390991211
    5. ')' → logprob: -13.005941390991211
    6. '<|end|>' → logprob: -14.755941390991211
    7. ')=' → logprob: -15.255941390991211
    8. '[' → logprob: -15.880941390991211
    9. '```' → logprob: -16.63094139099121
    10. '=True' → logprob: -16.88094139099121

Token 492: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000488110730657354
    2. ' =' → logprob: -7.62548828125
    3. ')' → logprob: -16.75048828125
    4. '<|end|>' → logprob: -16.87548828125
    5. '=
' → logprob: -17.00048828125
    6. '[' → logprob: -17.12548828125
    7. '=

' → logprob: -17.25048828125
    8. '+=' → logprob: -18.00048828125
    9. '=True' → logprob: -19.12548828125
    10. '```' → logprob: -19.50048828125

Token 493: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. '0' → logprob: -11.625011444091797
    3. ' ' → logprob: -12.750011444091797
    4. '   ' → logprob: -19.000011444091797
    5. '<|end|>' → logprob: -19.062511444091797
    6. '```' → logprob: -19.937511444091797
    7. '[' → logprob: -20.437511444091797
    8. '2' → logprob: -20.500011444091797
    9. '=' → logprob: -20.875011444091797
    10. '`' → logprob: -21.062511444091797

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017970333283301443
    2. '0' → logprob: -8.625179290771484
    3. ' ' → logprob: -16.187679290771484
    4. '```' → logprob: -18.000179290771484
    5. '-' → logprob: -18.875179290771484
    6. '[' → logprob: -19.125179290771484
    7. '2' → logprob: -19.250179290771484
    8. 'true' → logprob: -19.437679290771484
    9. 'True' → logprob: -19.500179290771484
    10. '`' → logprob: -19.500179290771484

Token 495: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35661473870277405
    2. '<|end|>' → logprob: -1.2316147089004517
    3. '   ' → logprob: -5.231614589691162
    4. ')' → logprob: -6.981614589691162
    5. ' ' → logprob: -7.231614589691162
    6. '<|end|>' → logprob: -8.48161506652832
    7. '```' → logprob: -8.98161506652832
    8. '    ' → logprob: -9.23161506652832
    9. ',' → logprob: -9.48161506652832
    10. '      ' → logprob: -9.73161506652832

Token 496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009459148161113262
    2. '<|end|>' → logprob: -5.134459018707275
    3. ' ' → logprob: -6.259459018707275
    4. '   ' → logprob: -7.009459018707275
    5. 'n' → logprob: -9.009459495544434
    6. '    ' → logprob: -9.134459495544434
    7. '      ' → logprob: -9.134459495544434
    8. 'b' → logprob: -9.884459495544434
    9. '  ' → logprob: -10.009459495544434
    10. ')' → logprob: -10.134459495544434

Token 497: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09210402518510818
    2. '<|end|>' → logprob: -2.592103958129883
    3. '```' → logprob: -5.092103958129883
    4. '        ' → logprob: -6.092103958129883
    5. ')' → logprob: -6.592103958129883
    6. '      ' → logprob: -6.717103958129883
    7. '#' → logprob: -7.967103958129883
    8. '   ' → logprob: -8.092103958129883
    9. ' ' → logprob: -8.467103958129883
    10. '    ' → logprob: -8.592103958129883

Token 498: ' coordinate' (ID: 30380)
  Prédit: ' coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordinate' → logprob: -0.17975258827209473
    2. 'coordinate' → logprob: -1.8047525882720947
    3. 'coord' → logprob: -13.554752349853516
    4. '   ' → logprob: -13.929752349853516
    5. '(co' → logprob: -14.054752349853516
    6. ' coord' → logprob: -14.054752349853516
    7. 'co' → logprob: -14.304752349853516
    8. ' ' → logprob: -14.304752349853516
    9. 'not' → logprob: -14.429752349853516
    10. 'abs' → logprob: -14.679752349853516

Token 499: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.002217818982899189
    2. '_sum' → logprob: -6.502217769622803
    3. 'diff' → logprob: -7.252217769622803
    4. '_d' → logprob: -13.377218246459961
    5. '	diff' → logprob: -13.377218246459961
    6. '_mod' → logprob: -13.752218246459961
    7. 'sum' → logprob: -14.252218246459961
    8. ' diff' → logprob: -14.752218246459961
    9. '```' → logprob: -14.877218246459961
    10. '_difference' → logprob: -15.502218246459961

Token 500: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06994788348674774
    2. '<' → logprob: -2.6949479579925537
    3. '<|end|>' → logprob: -11.569948196411133
    4. '[' → logprob: -14.944948196411133
    5. '<int' → logprob: -15.194948196411133
    6. ' >=' → logprob: -15.319948196411133
    7. ' ' → logprob: -15.569948196411133
    8. '<div' → logprob: -16.194948196411133
    9. '<const' → logprob: -16.444948196411133
    10. 's' → logprob: -16.569948196411133

Token 501: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06200074777007103
    2. '0' → logprob: -2.8120007514953613
    3. '1' → logprob: -10.687000274658203
    4. '2' → logprob: -12.687000274658203
    5. '```' → logprob: -13.187000274658203
    6. '=' → logprob: -13.437000274658203
    7. 'coordinate' → logprob: -13.812000274658203
    8. '<|end|>' → logprob: -13.812000274658203
    9. '  
' → logprob: -14.937000274658203
    10. '  ' → logprob: -15.062000274658203

Token 502: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '1' → logprob: -15.250051498413086
    4. '=' → logprob: -16.500051498413086
    5. '```' → logprob: -17.625051498413086
    6. '
' → logprob: -18.000051498413086
    7. '   ' → logprob: -18.125051498413086
    8. '[' → logprob: -18.500051498413086
    9. '(' → logprob: -18.625051498413086
    10. '

' → logprob: -19.312551498413086

Token 503: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0021950986701995134
    2. 'and' → logprob: -6.127194881439209
    3. '       ' → logprob: -12.502195358276367
    4. '```' → logprob: -13.127195358276367
    5. '           ' → logprob: -13.877195358276367
    6. '        ' → logprob: -14.252195358276367
    7. '   ' → logprob: -14.502195358276367
    8. ' ' → logprob: -14.627195358276367
    9. ' ' → logprob: -15.377195358276367
    10. ' &' → logprob: -15.502195358276367

Token 504: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2995341718196869
    2. ' abs' → logprob: -1.6745342016220093
    3. '(abs' → logprob: -2.6745340824127197
    4. ' not' → logprob: -6.549534320831299
    5. 'not' → logprob: -7.049534320831299
    6. ' (' → logprob: -8.92453384399414
    7. '(not' → logprob: -9.67453384399414
    8. '((' → logprob: -12.92453384399414
    9. '(' → logprob: -13.54953384399414
    10. ' ' → logprob: -14.04953384399414

Token 505: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -2.057743949990254e-05
    2. 'coordinate' → logprob: -11.250020980834961
    3. '(coord' → logprob: -12.625020980834961
    4. '(abs' → logprob: -13.125020980834961
    5. '(bit' → logprob: -14.250020980834961
    6. '(' → logprob: -14.625020980834961
    7. '```' → logprob: -15.000020980834961
    8. '(distance' → logprob: -15.500020980834961
    9. '(code' → logprob: -16.12502098083496
    10. '((' → logprob: -16.50002098083496

Token 506: 'ordinate' (ID: 14586)
  Prédit: 'ordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinate' → logprob: -0.002075194614008069
    2. 'coordinate' → logprob: -6.2520751953125
    3. 'rd' → logprob: -9.6270751953125
    4. '_coordinate' → logprob: -10.3770751953125
    5. 'ordon' → logprob: -11.5020751953125
    6. '(co' → logprob: -11.8770751953125
    7. 'ordinates' → logprob: -12.0020751953125
    8. 'ordan' → logprob: -12.2520751953125
    9. '[' → logprob: -12.3770751953125
    10. 'ordinator' → logprob: -12.7520751953125

Token 507: '_diff' (ID: 41047)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.12497414648532867
    2. '_diff' → logprob: -2.624974250793457
    3. '(diff' → logprob: -3.249974250793457
    4. 'coordinate' → logprob: -5.374974250793457
    5. 'bit' → logprob: -7.499974250793457
    6. '(bit' → logprob: -7.874974250793457
    7. '[' → logprob: -8.499974250793457
    8. '	diff' → logprob: -8.999974250793457
    9. '(co' → logprob: -9.124974250793457
    10. 'difference' → logprob: -9.624974250793457

Token 508: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3795650601387024
    2. ' //' → logprob: -1.3795650005340576
    3. '//' → logprob: -2.8795650005340576
    4. ')' → logprob: -4.879565238952637
    5. ' ()' → logprob: -9.004565238952637
    6. ' ' → logprob: -9.129565238952637
    7. '```' → logprob: -9.754565238952637
    8. ']' → logprob: -10.004565238952637
    9. ')//' → logprob: -10.629565238952637
    10. '>' → logprob: -12.004565238952637

Token 509: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.08968590945005417
    2. '//' → logprob: -2.4646859169006348
    3. ' >>' → logprob: -8.089685440063477
    4. ' ' → logprob: -8.714685440063477
    5. '```' → logprob: -8.964685440063477
    6. '>>' → logprob: -9.339685440063477
    7. '()' → logprob: -9.964685440063477
    8. '   ' → logprob: -12.839685440063477
    9. '       ' → logprob: -13.089685440063477
    10. '[' → logprob: -13.839685440063477

Token 510: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06998234242200851
    2. ' ' → logprob: -2.6949822902679443
    3. '1' → logprob: -10.944982528686523
    4. '(' → logprob: -10.944982528686523
    5. '   ' → logprob: -12.319982528686523
    6. ' (' → logprob: -13.069982528686523
    7. '  ' → logprob: -13.819982528686523
    8. '0' → logprob: -14.444982528686523
    9. '    ' → logprob: -14.507482528686523
    10. '     ' → logprob: -15.007482528686523

Token 511: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -11.125019073486328
    3. '1' → logprob: -12.375019073486328
    4. '0' → logprob: -16.375019073486328
    5. '(' → logprob: -16.812519073486328
    6. '```' → logprob: -17.187519073486328
    7. '   ' → logprob: -17.312519073486328
    8. '
' → logprob: -17.375019073486328
    9. '２' → logprob: -17.687519073486328
    10. 'bit' → logprob: -18.312519073486328

Token 512: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.5759571194648743
    2. ' >>' → logprob: -0.8259571194648743
    3. ' ' → logprob: -12.200957298278809
    4. '>>(' → logprob: -13.325957298278809
    5. ' >>=' → logprob: -13.325957298278809
    6. ' ' → logprob: -13.575957298278809
    7. '>>&' → logprob: -13.575957298278809
    8. ' >' → logprob: -13.950957298278809
    9. '>' → logprob: -13.950957298278809
    10. '&' → logprob: -13.950957298278809

Token 513: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0015024791937321424
    2. ' bit' → logprob: -6.501502513885498
    3. '(bit' → logprob: -16.376502990722656
    4. '_bit' → logprob: -18.376502990722656
    5. 'bitr' → logprob: -18.501502990722656
    6. ' ' → logprob: -18.626502990722656
    7. '-bit' → logprob: -19.626502990722656
    8. 'b' → logprob: -19.876502990722656
    9. 'bits' → logprob: -20.626502990722656
    10. '.bit' → logprob: -20.626502990722656

Token 514: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.975612187583465e-05
    2. 'index' → logprob: -10.625029563903809
    3. 'bit' → logprob: -12.250029563903809
    4. '1' → logprob: -15.625029563903809
    5. 'Index' → logprob: -16.250030517578125
    6. '_bit' → logprob: -16.375030517578125
    7. '_' → logprob: -16.750030517578125
    8. '_INDEX' → logprob: -17.875030517578125
    9. 'ind' → logprob: -18.250030517578125
    10. '```' → logprob: -18.375030517578125

Token 515: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.12693651020526886
    2. ' &' → logprob: -2.126936435699463
    3. '&amp' → logprob: -12.501936912536621
    4. '&
' → logprob: -13.251936912536621
    5. '[' → logprob: -13.376936912536621
    6. ' &
' → logprob: -14.876936912536621
    7. '＆' → logprob: -15.126936912536621
    8. '&nbsp' → logprob: -15.126936912536621
    9. ' ' → logprob: -16.001935958862305
    10. ' bit' → logprob: -16.126935958862305

Token 516: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6045626401901245
    2. 'bit' → logprob: -0.8545626401901245
    3. ' bit' → logprob: -3.729562759399414
    4. ' ' → logprob: -5.479562759399414
    5. '(bit' → logprob: -10.354562759399414
    6. '0' → logprob: -12.479562759399414
    7. '```' → logprob: -12.979562759399414
    8. '_bit' → logprob: -13.604562759399414
    9. '   ' → logprob: -14.229562759399414
    10. '-bit' → logprob: -14.354562759399414

Token 517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.460291767027229e-05
    2. 'bit' → logprob: -9.375094413757324
    3. '0' → logprob: -11.625094413757324
    4. ' ' → logprob: -15.125094413757324
    5. '31' → logprob: -15.250094413757324
    6. ' bit' → logprob: -16.25009536743164
    7. '&' → logprob: -17.37509536743164
    8. '(bit' → logprob: -17.62509536743164
    9. '```' → logprob: -18.00009536743164
    10. '
' → logprob: -18.25009536743164

Token 518: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5646621584892273
    2. '           ' → logprob: -1.314662218093872
    3. ':' → logprob: -2.439662218093872
    4. '       ' → logprob: -3.189662218093872
    5. ' =' → logprob: -3.939662218093872
    6. '[' → logprob: -5.689661979675293
    7. '          ' → logprob: -6.064661979675293
    8. '        ' → logprob: -6.189661979675293
    9. '==' → logprob: -6.564661979675293
    10. '               ' → logprob: -6.939661979675293

Token 519: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007217261008918285
    2. '       ' → logprob: -8.12572193145752
    3. 'bit' → logprob: -8.75072193145752
    4. ' bit' → logprob: -9.37572193145752
    5. '               ' → logprob: -9.62572193145752
    6. '          ' → logprob: -9.62572193145752
    7. '   ' → logprob: -11.37572193145752
    8. '0' → logprob: -11.50072193145752
    9. '         ' → logprob: -11.87572193145752
    10. '=' → logprob: -12.00072193145752

Token 520: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.012969395145773888
    2. ' bit' → logprob: -4.512969493865967
    3. '0' → logprob: -6.262969493865967
    4. '           ' → logprob: -12.012969017028809
    5. ' ' → logprob: -12.637969017028809
    6. '   ' → logprob: -12.637969017028809
    7. '               ' → logprob: -14.637969017028809
    8. '       ' → logprob: -15.137969017028809
    9. 'b' → logprob: -15.637969017028809
    10. '
' → logprob: -15.637969017028809

Token 521: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.00010926496179308742
    2. 'matrix' → logprob: -9.125109672546387
    3. '_MATRIX' → logprob: -15.500109672546387
    4. 'Matrix' → logprob: -16.62510871887207
    5. '_mat' → logprob: -17.12510871887207
    6. 'atrix' → logprob: -17.12510871887207
    7. 'mat' → logprob: -18.50010871887207
    8. '_m' → logprob: -18.50010871887207
    9. ' matrix' → logprob: -18.62510871887207
    10. '_' → logprob: -19.25010871887207

Token 522: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. ' [' → logprob: -14.625000953674316
    3. '[
' → logprob: -15.125000953674316
    4. '<|end|>' → logprob: -15.375000953674316
    5. 's' → logprob: -16.875001907348633
    6. ' ' → logprob: -16.875001907348633
    7. '```' → logprob: -17.125001907348633
    8. '][' → logprob: -17.375001907348633
    9. '0' → logprob: -17.625001907348633
    10. 'Answer' → logprob: -17.750001907348633

Token 523: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006419174838811159
    2. '0' → logprob: -5.1314191818237305
    3. '[' → logprob: -7.6314191818237305
    4. ' ' → logprob: -12.38141918182373
    5. '
' → logprob: -15.31891918182373
    6. '   ' → logprob: -15.50641918182373
    7. '```' → logprob: -15.75641918182373
    8. ' [' → logprob: -15.88141918182373
    9. '

' → logprob: -16.256418228149414
    10. '
' → logprob: -16.443918228149414

Token 524: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38690778613090515
    2. '][' → logprob: -1.1369078159332275
    3. ']' → logprob: -10.761907577514648
    4. ' [' → logprob: -12.886907577514648
    5. ' ][' → logprob: -12.886907577514648
    6. '           ' → logprob: -13.136907577514648
    7. '	       ' → logprob: -13.386907577514648
    8. ')[' → logprob: -13.761907577514648
    9. '"][' → logprob: -13.886907577514648
    10. '```' → logprob: -14.011907577514648

Token 525: 'bit' (ID: 6516)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '1' → logprob: -15.125003814697266
    4. 'bit' → logprob: -16.687503814697266
    5. '[' → logprob: -17.312503814697266
    6. '
' → logprob: -17.750003814697266
    7. '   ' → logprob: -18.062503814697266
    8. '

' → logprob: -18.562503814697266
    9. '00' → logprob: -18.812503814697266
    10. '  ' → logprob: -18.937503814697266

Token 526: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.011100640520453453
    2. 'index' → logprob: -4.511100769042969
    3. '_matrix' → logprob: -10.386100769042969
    4. 'Index' → logprob: -12.136100769042969
    5. '[' → logprob: -12.511100769042969
    6. 'matrix' → logprob: -12.511100769042969
    7. '0' → logprob: -12.886100769042969
    8. '[index' → logprob: -13.011100769042969
    9. '_INDEX' → logprob: -13.761100769042969
    10. '][' → logprob: -14.136100769042969

Token 527: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2617529630661011
    2. ']' → logprob: -1.886752963066101
    3. ']=' → logprob: -2.7617530822753906
    4. '[' → logprob: -4.261753082275391
    5. ' =' → logprob: -7.136753082275391
    6. '][' → logprob: -7.511753082275391
    7. 'bit' → logprob: -10.38675308227539
    8. '<|end|>' → logprob: -11.26175308227539
    9. '0' → logprob: -11.51175308227539
    10. '[
' → logprob: -11.63675308227539

Token 528: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025062207132577896
    2. ' =' → logprob: -6.002506256103516
    3. '[' → logprob: -10.502506256103516
    4. '0' → logprob: -12.752506256103516
    5. ' ' → logprob: -16.377506256103516
    6. '=

' → logprob: -17.002506256103516
    7. '=
' → logprob: -17.127506256103516
    8. '   ' → logprob: -17.752506256103516
    9. ']=' → logprob: -17.752506256103516
    10. '           ' → logprob: -18.252506256103516

Token 529: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.717296517104842e-05
    2. ' ' → logprob: -10.000057220458984
    3. '1' → logprob: -11.375057220458984
    4. ' ' → logprob: -17.062557220458984
    5. '=' → logprob: -17.687557220458984
    6. '...' → logprob: -17.750057220458984
    7. '۰' → logprob: -17.812557220458984
    8. 'not' → logprob: -18.000057220458984
    9. '2' → logprob: -18.000057220458984
    10. '   ' → logprob: -18.062557220458984

Token 530: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '۰' → logprob: -18.125001907348633
    5. '2' → logprob: -18.750001907348633
    6. '...' → logprob: -18.937501907348633
    7. '00' → logprob: -19.375001907348633
    8. '```' → logprob: -19.500001907348633
    9. ' ' → logprob: -19.750001907348633
    10. '   ' → logprob: -19.812501907348633

Token 531: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.236116424202919
    2. 'for' → logprob: -2.361116409301758
    3. ' for' → logprob: -2.361116409301758
    4. '    
' → logprob: -5.486116409301758
    5. '[' → logprob: -5.861116409301758
    6. '\n' → logprob: -5.986116409301758
    7. '```' → logprob: -6.236116409301758
    8. '       ' → logprob: -6.486116409301758
    9. ')' → logprob: -6.861116409301758
    10. ' 
' → logprob: -6.986116409301758

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037005577236413956
    2. 'for' → logprob: -3.787005662918091
    3. ' for' → logprob: -4.537005424499512
    4. '    
' → logprob: -6.787005424499512
    5. '       ' → logprob: -6.912005424499512
    6. '        
' → logprob: -9.287005424499512
    7. '    ' → logprob: -9.287005424499512
    8. 'moves' → logprob: -9.787005424499512
    9. 'print' → logprob: -10.037005424499512
    10. ')' → logprob: -10.037005424499512

Token 533: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12552233040332794
    2. ' for' → logprob: -2.7505223751068115
    3. '   ' → logprob: -3.0005223751068115
    4. 'moves' → logprob: -6.000522136688232
    5. 'move' → logprob: -7.750522136688232
    6. 'dire' → logprob: -8.25052261352539
    7. 'direction' → logprob: -8.37552261352539
    8. 'result' → logprob: -8.50052261352539
    9. ' moves' → logprob: -8.87552261352539
    10. '    
' → logprob: -9.25052261352539

Token 534: ' horizontal' (ID: 25511)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.7666338682174683
    2. 'bit' → logprob: -1.5166338682174683
    3. ' move' → logprob: -1.6416338682174683
    4. ' step' → logprob: -3.016633987426758
    5. 'move' → logprob: -3.641633987426758
    6. ' i' → logprob: -3.766633987426758
    7. 'i' → logprob: -4.516633987426758
    8. 'step' → logprob: -4.641633987426758
    9. ' direction' → logprob: -6.891633987426758
    10. ' movement' → logprob: -7.891633987426758

Token 535: '_bit' (ID: 39574)
  Prédit: '_move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.4771777391433716
    2. '_bit' → logprob: -1.9771777391433716
    3. '_' → logprob: -2.602177619934082
    4. '_direction' → logprob: -2.602177619934082
    5. '_index' → logprob: -2.852177619934082
    6. '_step' → logprob: -4.602177619934082
    7. '_distance' → logprob: -5.227177619934082
    8. '_m' → logprob: -5.227177619934082
    9. 'bit' → logprob: -5.352177619934082
    10. ' in' → logprob: -5.727177619934082

Token 536: ',' (ID: 11)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0040450370870530605
    2. ' in' → logprob: -5.629045009613037
    3. 's' → logprob: -8.629045486450195
    4. 'index' → logprob: -8.754045486450195
    5. '_' → logprob: -10.129045486450195
    6. '```' → logprob: -10.629045486450195
    7. '_idx' → logprob: -10.879045486450195
    8. '_in' → logprob: -12.379045486450195
    9. '_ind' → logprob: -12.504045486450195
    10. 'in' → logprob: -12.754045486450195

Token 537: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.026341751217842102
    2. ' vertical' → logprob: -3.651341676712036
    3. 'vert' → logprob: -11.651341438293457
    4. 'di' → logprob: -11.776341438293457
    5. ' diagonal' → logprob: -11.776341438293457
    6. 'direction' → logprob: -12.276341438293457
    7. 'ver' → logprob: -13.401341438293457
    8. 'horizontal' → logprob: -13.401341438293457
    9. '(vertical' → logprob: -13.526341438293457
    10. 'depth' → logprob: -13.526341438293457

Token 538: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -0.0016843474004417658
    2. 'bit' → logprob: -6.751684188842773
    3. ' in' → logprob: -8.626684188842773
    4. '_bits' → logprob: -9.376684188842773
    5. '_' → logprob: -9.626684188842773
    6. 'in' → logprob: -9.626684188842773
    7. '_move' → logprob: -10.501684188842773
    8. '_in' → logprob: -10.626684188842773
    9. '_direction' → logprob: -10.876684188842773
    10. '_index' → logprob: -11.001684188842773

Token 539: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10202999413013458
    2. 'in' → logprob: -2.352030038833618
    3. ',' → logprob: -6.352029800415039
    4. '	in' → logprob: -10.727029800415039
    5. ' ' → logprob: -10.852029800415039
    6. '<|end|>' → logprob: -11.727029800415039
    7. ',in' → logprob: -12.352029800415039
    8. ')' → logprob: -12.477029800415039
    9. ' ,' → logprob: -12.852029800415039
    10. '   ' → logprob: -12.977029800415039

Token 540: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.7007933855056763
    2. ' zip' → logprob: -0.7007933855056763
    3. 'bit' → logprob: -5.075793266296387
    4. '(zip' → logprob: -7.200793266296387
    5. ' bit' → logprob: -8.450793266296387
    6. '[(' → logprob: -8.700793266296387
    7. 'enumer' → logprob: -9.200793266296387
    8. 'range' → logprob: -9.700793266296387
    9. ' enumerate' → logprob: -9.950793266296387
    10. ' range' → logprob: -11.325793266296387

Token 541: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.0004353181866463274
    2. 'bit' → logprob: -7.7504353523254395
    3. '(range' → logprob: -13.500434875488281
    4. '(zip' → logprob: -13.500434875488281
    5. ' bit' → logprob: -13.750434875488281
    6. '(*' → logprob: -14.250434875488281
    7. '(bits' → logprob: -16.00043487548828
    8. '(Bit' → logprob: -16.50043487548828
    9. '(b' → logprob: -17.62543487548828
    10. '(' → logprob: -17.62543487548828

Token 542: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -2.1008713702030946e-06
    2. 'matrix' → logprob: -13.625001907348633
    3. '(matrix' → logprob: -14.000001907348633
    4. 'Matrix' → logprob: -17.750001907348633
    5. '_MATRIX' → logprob: -18.500001907348633
    6. ' matrix' → logprob: -18.625001907348633
    7. '(' → logprob: -19.750001907348633
    8. 'atrix' → logprob: -20.000001907348633
    9. '	matrix' → logprob: -20.750001907348633
    10. '_mat' → logprob: -21.000001907348633

Token 543: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.153795766294934e-06
    2. '0' → logprob: -12.375005722045898
    3. '):' → logprob: -14.750005722045898
    4. ')' → logprob: -14.875005722045898
    5. '(' → logprob: -14.875005722045898
    6. '):
' → logprob: -15.250005722045898
    7. 's' → logprob: -16.0000057220459
    8. '()[' → logprob: -16.5000057220459
    9. ')[' → logprob: -16.7500057220459
    10. '```' → logprob: -16.8750057220459

Token 544: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -12.750004768371582
    3. '1' → logprob: -13.750004768371582
    4. ' ' → logprob: -15.125004768371582
    5. '(' → logprob: -17.312503814697266
    6. '۰' → logprob: -17.750003814697266
    7. ']' → logprob: -17.812503814697266
    8. ')' → logprob: -17.875003814697266
    9. '
' → logprob: -17.937503814697266
    10. '01' → logprob: -18.500003814697266

Token 545: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.306760805164231e-05
    2. ' ,' → logprob: -11.62501335144043
    3. ',b' → logprob: -12.62501335144043
    4. ',
' → logprob: -15.37501335144043
    5. ',re' → logprob: -16.25001335144043
    6. ',

' → logprob: -16.37501335144043
    7. ',line' → logprob: -17.00001335144043
    8. '<|end|>' → logprob: -17.37501335144043
    9. ',p' → logprob: -17.87501335144043
    10. ',row' → logprob: -18.00001335144043

Token 546: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.061969365924596786
    2. ' bit' → logprob: -2.81196928024292
    3. '   ' → logprob: -13.686969757080078
    4. '    ' → logprob: -15.811969757080078
    5. ' ' → logprob: -16.561969757080078
    6. '           ' → logprob: -16.936969757080078
    7. '(bit' → logprob: -16.936969757080078
    8. '    
' → logprob: -17.436969757080078
    9. '-bit' → logprob: -17.436969757080078
    10. '       ' → logprob: -17.561969757080078

Token 547: '_matrix' (ID: 23431)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39402490854263306
    2. '_matrix' → logprob: -1.1440248489379883
    3. 'atrix' → logprob: -5.644024848937988
    4. '(' → logprob: -6.394024848937988
    5. 'matrix' → logprob: -7.144024848937988
    6. ')' → logprob: -8.269024848937988
    7. 'Matrix' → logprob: -8.394024848937988
    8. '   ' → logprob: -9.144024848937988
    9. '```' → logprob: -9.394024848937988
    10. '_MATRIX' → logprob: -9.894024848937988

Token 548: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003647826088126749
    2. '0' → logprob: -8.625365257263184
    3. '(' → logprob: -9.000365257263184
    4. '):' → logprob: -10.500365257263184
    5. '1' → logprob: -11.250365257263184
    6. ',' → logprob: -11.625365257263184
    7. '):
' → logprob: -11.625365257263184
    8. ')' → logprob: -14.125365257263184
    9. '<|end|>' → logprob: -14.250365257263184
    10. '[]):' → logprob: -15.125365257263184

Token 549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.12500286102295
    3. '0' → logprob: -14.62500286102295
    4. ' ' → logprob: -15.25000286102295
    5. '   ' → logprob: -16.875003814697266
    6. '```' → logprob: -17.250003814697266
    7. ']' → logprob: -18.187503814697266
    8. '
' → logprob: -18.437503814697266
    9. '(' → logprob: -19.562503814697266
    10. '])' → logprob: -19.687503814697266

Token 550: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02060612104833126
    2. '):
' → logprob: -3.89560604095459
    3. ':' → logprob: -10.27060604095459
    4. '):
' → logprob: -12.14560604095459
    5. ']:' → logprob: -12.27060604095459
    6. ']):' → logprob: -12.52060604095459
    7. ')' → logprob: -13.02060604095459
    8. '）：' → logprob: -13.14560604095459
    9. '"):' → logprob: -13.14560604095459
    10. ' ):' → logprob: -13.27060604095459

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004167297447565943
    2. '<|end|>' → logprob: -8.12541675567627
    3. '        
' → logprob: -10.00041675567627
    4. '        ' → logprob: -10.87541675567627
    5. '      ' → logprob: -11.25041675567627
    6. ' ' → logprob: -12.00041675567627
    7. '    ' → logprob: -12.12541675567627
    8. '<|end|>' → logprob: -12.50041675567627
    9. '#' → logprob: -12.62541675567627
    10. ' if' → logprob: -12.62541675567627

Token 552: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7383182048797607
    2. '       ' → logprob: -1.3633182048797607
    3. '   ' → logprob: -1.7383182048797607
    4. 'if' (adapté à ' if') → logprob: -2.4883182048797607
    5. '    ' → logprob: -5.36331844329834
    6. '           ' → logprob: -6.36331844329834
    7. '        ' → logprob: -8.36331844329834
    8. 'print' → logprob: -8.86331844329834
    9. ' ' → logprob: -9.11331844329834
    10. '	if' → logprob: -9.36331844329834

Token 553: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.3872508406639099
    2. 'horizontal' → logprob: -1.1372509002685547
    3. '(horizontal' → logprob: -9.512250900268555
    4. 'vertical' → logprob: -9.512250900268555
    5. '   ' → logprob: -9.637250900268555
    6. ' vertical' → logprob: -9.887250900268555
    7. ' ' → logprob: -10.012250900268555
    8. '  ' → logprob: -10.512250900268555
    9. '    ' → logprob: -10.762250900268555
    10. '(' → logprob: -12.637250900268555

Token 554: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -4.263011578586884e-05
    2. 'bit' → logprob: -10.250042915344238
    3. '==' → logprob: -12.125042915344238
    4. 'Bit' → logprob: -14.875042915344238
    5. '_BIT' → logprob: -14.875042915344238
    6. ' bit' → logprob: -15.125042915344238
    7. ' ==' → logprob: -15.625042915344238
    8. '_bits' → logprob: -15.875042915344238
    9. '_token' → logprob: -16.000041961669922
    10. '=' → logprob: -16.250041961669922

Token 555: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05260825529694557
    2. ' ==' → logprob: -3.3026082515716553
    3. 'and' → logprob: -4.552608489990234
    4. ' and' → logprob: -5.552608489990234
    5. '0' → logprob: -11.052608489990234
    6. '=' → logprob: -11.802608489990234
    7. '[' → logprob: -12.302608489990234
    8. '==
' → logprob: -12.802608489990234
    9. '&' → logprob: -12.927608489990234
    10. '1' → logprob: -13.302608489990234

Token 556: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.576124906539917
    2. '0' → logprob: -0.826124906539917
    3. ' ' → logprob: -8.826125144958496
    4. 'horizontal' → logprob: -10.701125144958496
    5. 'vertical' → logprob: -11.576125144958496
    6. '   ' → logprob: -13.076125144958496
    7. '```' → logprob: -14.326125144958496
    8. ' horizontal' → logprob: -14.576125144958496
    9. 'bit' → logprob: -15.201125144958496
    10. ' vertical' → logprob: -15.451125144958496

Token 557: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6933711767196655
    2. '1' → logprob: -0.6933711767196655
    3. 'horizontal' → logprob: -8.943370819091797
    4. 'vertical' → logprob: -9.443370819091797
    5. ' ' → logprob: -11.568370819091797
    6. 'bit' → logprob: -14.318370819091797
    7. ' horizontal' → logprob: -14.818370819091797
    8. '```' → logprob: -14.880870819091797
    9. '-' → logprob: -15.255870819091797
    10. '
' → logprob: -15.318370819091797

Token 558: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0806075781583786
    2. 'and' → logprob: -2.5806076526641846
    3. ':' → logprob: -7.3306074142456055
    4. '<|end|>' → logprob: -7.3306074142456055
    5. '       ' → logprob: -8.330607414245605
    6. '   ' → logprob: -9.705607414245605
    7. ':
' → logprob: -9.830607414245605
    8. '           ' → logprob: -11.205607414245605
    9. '	and' → logprob: -11.330607414245605
    10. '<|end|>' → logprob: -12.455607414245605

Token 559: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.1007196456193924
    2. ' vertical' → logprob: -2.350719690322876
    3. 'horizontal' → logprob: -7.725719451904297
    4. '0' → logprob: -10.475719451904297
    5. ' horizontal' → logprob: -10.600719451904297
    6. '1' → logprob: -11.350719451904297
    7. '(vertical' → logprob: -13.100719451904297
    8. ' ' → logprob: -13.225719451904297
    9. 'not' → logprob: -13.975719451904297
    10. '   ' → logprob: -14.725719451904297

Token 560: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -9.253090865968261e-06
    2. 'bit' → logprob: -12.250009536743164
    3. 'Bit' → logprob: -12.625009536743164
    4. ' bit' → logprob: -14.625009536743164
    5. '_BIT' → logprob: -15.250009536743164
    6. '-bit' → logprob: -15.875009536743164
    7. ' Bit' → logprob: -16.250009536743164
    8. '-' → logprob: -16.500009536743164
    9. '1' → logprob: -16.875009536743164
    10. '_' → logprob: -17.750009536743164

Token 561: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931522488594055
    2. ' ==' → logprob: -0.6931522488594055
    3. '=' → logprob: -12.94315242767334
    4. '<|end|>' → logprob: -14.19315242767334
    5. ')==' → logprob: -15.06815242767334
    6. ']==' → logprob: -15.19315242767334
    7. ' ' → logprob: -15.44315242767334
    8. ' ' → logprob: -15.44315242767334
    9. ' =' → logprob: -15.69315242767334
    10. '0' → logprob: -15.69315242767334

Token 562: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20846840739250183
    2. '0' → logprob: -1.7084684371948242
    3. ' ' → logprob: -4.958468437194824
    4. '   ' → logprob: -13.708468437194824
    5. '  ' → logprob: -14.333468437194824
    6. 's' → logprob: -14.395968437194824
    7. '```' → logprob: -14.708468437194824
    8. '=' → logprob: -14.770968437194824
    9. '<|end|>' → logprob: -15.083468437194824
    10. '-' → logprob: -15.333468437194824

Token 563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20142708718776703
    2. '0' → logprob: -1.7014271020889282
    3. ' ' → logprob: -11.451427459716797
    4. '-' → logprob: -13.138927459716797
    5. '2' → logprob: -15.138927459716797
    6. '```' → logprob: -16.013927459716797
    7. 's' → logprob: -16.888927459716797
    8. '3' → logprob: -17.076427459716797
    9. '00' → logprob: -17.138927459716797
    10. '   ' → logprob: -17.263927459716797

Token 564: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.237181305885315
    2. 'R' → logprob: -1.487181305885315
    3. '           ' → logprob: -1.862181305885315
    4. 'U' → logprob: -2.1121811866760254
    5. '       ' → logprob: -2.1121811866760254
    6. 'A' → logprob: -4.112181186676025
    7. ':' → logprob: -4.362181186676025
    8. ':
' → logprob: -4.862181186676025
    9. 'print' → logprob: -4.987181186676025
    10. ' R' → logprob: -4.987181186676025

Token 565: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6761650443077087
    2. 'print' → logprob: -0.8011650443077087
    3. 'R' → logprob: -4.3011651039123535
    4. '       ' → logprob: -4.6761651039123535
    5. 'U' → logprob: -4.6761651039123535
    6. '           ' → logprob: -5.0511651039123535
    7. ' print' → logprob: -6.5511651039123535
    8. 'N' → logprob: -7.5511651039123535
    9. ' ' → logprob: -8.051164627075195
    10. 'A' → logprob: -8.301164627075195

Token 566: ' print' (ID: 2123)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.49654653668403625
    2. 'R' → logprob: -1.1215465068817139
    3. 'print' (adapté à ' print') → logprob: -3.496546506881714
    4. '"' → logprob: -3.621546506881714
    5. ''U' → logprob: -5.496546745300293
    6. 'N' → logprob: -6.371546745300293
    7. 'L' → logprob: -7.371546745300293
    8. 'D' → logprob: -7.621546745300293
    9. ''' → logprob: -7.996546745300293
    10. 'E' → logprob: -8.371546745300293

Token 567: '("' (ID: 568)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.34416577219963074
    2. 'R' → logprob: -1.9691658020019531
    3. '"' → logprob: -2.344165802001953
    4. ''U' → logprob: -2.969165802001953
    5. ''' → logprob: -5.844165802001953
    6. 'L' → logprob: -7.969165802001953
    7. 'D' → logprob: -8.094165802001953
    8. '"D' → logprob: -8.594165802001953
    9. 'RU' → logprob: -9.344165802001953
    10. 'UR' → logprob: -9.469165802001953

Token 568: 'R' (ID: 49)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.10198284685611725
    2. 'R' → logprob: -2.351982831954956
    3. ''U' → logprob: -6.976983070373535
    4. 'D' → logprob: -7.351983070373535
    5. 'RU' → logprob: -9.101983070373535
    6. '"' → logprob: -10.226983070373535
    7. 'A' → logprob: -11.476983070373535
    8. 'L' → logprob: -11.726983070373535
    9. ''' → logprob: -11.851983070373535
    10. 'UR' → logprob: -12.101983070373535

Token 569: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.03842483088374138
    2. 'U' → logprob: -3.7884247303009033
    3. 'R' → logprob: -5.288424968719482
    4. 'D' → logprob: -5.913424968719482
    5. ' ")' → logprob: -6.288424968719482
    6. ')' → logprob: -6.413424968719482
    7. '"' → logprob: -6.538424968719482
    8. 'N' → logprob: -7.413424968719482
    9. '<|end|>' → logprob: -8.163424491882324
    10. 'M' → logprob: -8.788424491882324

Token 570: ' end' (ID: 1268)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.4040428400039673
    2. '"' → logprob: -1.7790428400039673
    3. ')' → logprob: -2.6540427207946777
    4. '""' → logprob: -3.0290427207946777
    5. '")' → logprob: -4.279042720794678
    6. '\n' → logprob: -5.154042720794678
    7. '
' → logprob: -5.154042720794678
    8. '"""' → logprob: -5.279042720794678
    9. '"N' → logprob: -5.654042720794678
    10. '"\' → logprob: -6.154042720794678

Token 571: '="")
' (ID: 154840)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6673790812492371
    2. '")' → logprob: -0.9173790812492371
    3. '"' → logprob: -2.917379140853882
    4. '""' → logprob: -3.542379140853882
    5. '<|end|>' → logprob: -5.917378902435303
    6. ' "")' → logprob: -7.417378902435303
    7. '">' → logprob: -7.917378902435303
    8. '+' → logprob: -8.917379379272461
    9. '"""' → logprob: -9.042379379272461
    10. '``' → logprob: -9.667379379272461

Token 572: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 573: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 574: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.5762904286384583
    2. ' horizontal' → logprob: -0.8262904286384583
    3. 'vertical' → logprob: -8.451290130615234
    4. '(horizontal' → logprob: -9.201290130615234
    5. ' vertical' → logprob: -10.576290130615234
    6. 'not' → logprob: -12.701290130615234
    7. ' not' → logprob: -13.076290130615234
    8. '.horizontal' → logprob: -14.076290130615234
    9. '1' → logprob: -14.576290130615234
    10. 'Horizontal' → logprob: -14.701290130615234

Token 575: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -0.00016277639952022582
    2. '_' → logprob: -9.250163078308105
    3. 'bit' → logprob: -10.625163078308105
    4. 'if' → logprob: -11.000163078308105
    5. '_bits' → logprob: -11.500163078308105
    6. 'Bit' → logprob: -11.875163078308105
    7. '_BIT' → logprob: -12.375163078308105
    8. ' bit' → logprob: -14.250163078308105
    9. ' Bit' → logprob: -14.750163078308105
    10. '==' → logprob: -14.750163078308105

Token 576: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31327179074287415
    2. '==' → logprob: -1.3132717609405518
    3. '<|end|>' → logprob: -12.938271522521973
    4. ')' → logprob: -13.063271522521973
    5. '=' → logprob: -13.688271522521973
    6. '==
' → logprob: -13.938271522521973
    7. '==-' → logprob: -13.938271522521973
    8. ')==' → logprob: -14.063271522521973
    9. ']==' → logprob: -14.938271522521973
    10. ' ' → logprob: -15.063271522521973

Token 577: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.050177816301584244
    2. '0' → logprob: -3.050177812576294
    3. ' ' → logprob: -6.800178050994873
    4. '-' → logprob: -7.675178050994873
    5. ' -' → logprob: -12.050177574157715
    6. '<|end|>' → logprob: -13.300177574157715
    7. '```' → logprob: -14.112677574157715
    8. '   ' → logprob: -14.925177574157715
    9. '>' → logprob: -15.112677574157715
    10. '[' → logprob: -15.425177574157715

Token 578: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23322492837905884
    2. '0' → logprob: -1.608224868774414
    3. '-' → logprob: -4.858224868774414
    4. ' ' → logprob: -11.858224868774414
    5. '```' → logprob: -13.295724868774414
    6. '<|end|>' → logprob: -13.295724868774414
    7. ' -' → logprob: -13.545724868774414
    8. '#' → logprob: -14.733224868774414
    9. '[' → logprob: -14.920724868774414
    10. '!' → logprob: -15.545724868774414

Token 579: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519362270832062
    2. 'and' → logprob: -1.5019361972808838
    3. '<|end|>' → logprob: -12.626935958862305
    4. '	and' → logprob: -13.001935958862305
    5. ' ' → logprob: -14.501935958862305
    6. '   ' → logprob: -15.126935958862305
    7. '       ' → logprob: -15.376935958862305
    8. ',' → logprob: -16.126935958862305
    9. '           ' → logprob: -16.501935958862305
    10. '&&' → logprob: -16.876935958862305

Token 580: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.4912828505039215
    2. ' vertical' → logprob: -0.9912828207015991
    3. 'horizontal' → logprob: -4.491282939910889
    4. ' horizontal' → logprob: -5.366282939910889
    5. '"' → logprob: -7.241282939910889
    6. '1' → logprob: -8.36628246307373
    7. '(vertical' → logprob: -9.11628246307373
    8. ' ' → logprob: -10.11628246307373
    9. ' "' → logprob: -10.61628246307373
    10. '0' → logprob: -11.36628246307373

Token 581: '_bit' (ID: 39574)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2818834185600281
    2. '_bit' → logprob: -1.5318834781646729
    3. '0' → logprob: -3.906883478164673
    4. 'bit' → logprob: -5.156883239746094
    5. 'Bit' → logprob: -5.781883239746094
    6. '_bits' → logprob: -8.156883239746094
    7. 'print' → logprob: -9.281883239746094
    8. 'ert' → logprob: -10.406883239746094
    9. '_BIT' → logprob: -10.781883239746094
    10. 'vertical' → logprob: -10.781883239746094

Token 582: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16023772954940796
    2. ' ==' → logprob: -1.9102377891540527
    3. '<|end|>' → logprob: -11.535237312316895
    4. '==
' → logprob: -13.285237312316895
    5. '===' → logprob: -14.410237312316895
    6. '=' → logprob: -14.660237312316895
    7. '==-' → logprob: -14.910237312316895
    8. '=="' → logprob: -15.535237312316895
    9. ')==' → logprob: -15.535237312316895
    10. ']==' → logprob: -15.660237312316895

Token 583: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.179863840341568
    2. '0' → logprob: -1.8048638105392456
    3. ' ' → logprob: -9.054863929748535
    4. '-' → logprob: -13.554863929748535
    5. '<|end|>' → logprob: -15.242363929748535
    6. '   ' → logprob: -15.929863929748535
    7. '"' → logprob: -15.929863929748535
    8. '  ' → logprob: -16.67986297607422
    9. '```' → logprob: -16.67986297607422
    10. '`' → logprob: -16.74236297607422

Token 584: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014164566993713379
    2. '0' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.139164924621582
    4. '-' → logprob: -15.264164924621582
    5. '<|end|>' → logprob: -16.576663970947266
    6. '```' → logprob: -17.889163970947266
    7. '   ' → logprob: -18.639163970947266
    8. '[' → logprob: -19.076663970947266
    9. '>' → logprob: -19.076663970947266
    10. '`' → logprob: -19.201663970947266

Token 585: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014032336883246899
    2. ':
' → logprob: -4.514032363891602
    3. '       ' → logprob: -6.639032363891602
    4. ':' → logprob: -7.014032363891602
    5. '<|end|>' → logprob: -8.639032363891602
    6. '          ' → logprob: -9.014032363891602
    7. '   ' → logprob: -9.264032363891602
    8. '	       ' → logprob: -9.389032363891602
    9. ',' → logprob: -9.514032363891602
    10. '):
' → logprob: -10.139032363891602

Token 586: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.047657039016485214
    2. '           ' → logprob: -3.297657012939453
    3. '       ' → logprob: -5.672657012939453
    4. 'U' → logprob: -6.172657012939453
    5. ' print' → logprob: -6.172657012939453
    6. 'L' → logprob: -7.547657012939453
    7. 'R' → logprob: -7.672657012939453
    8. 'D' → logprob: -8.172657012939453
    9. '   ' → logprob: -8.672657012939453
    10. 'A' → logprob: -9.172657012939453

Token 587: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010370950913056731
    2. ' print' → logprob: -6.876037120819092
    3. '           ' → logprob: -13.126036643981934
    4. '	print' → logprob: -13.376036643981934
    5. '   ' → logprob: -14.876036643981934
    6. '       ' → logprob: -15.251036643981934
    7. '.print' → logprob: -15.876036643981934
    8. 'pr' → logprob: -16.87603759765625
    9. 'r' → logprob: -18.25103759765625
    10. 'p' → logprob: -18.62603759765625

Token 588: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10065841674804688
    2. '"L' → logprob: -2.350658416748047
    3. '"D' → logprob: -8.350658416748047
    4. '"' → logprob: -8.600658416748047
    5. '(' → logprob: -10.600658416748047
    6. '('' → logprob: -13.475658416748047
    7. '"B' → logprob: -13.850658416748047
    8. '"N' → logprob: -14.100658416748047
    9. '"O' → logprob: -14.100658416748047
    10. '("")' → logprob: -14.600658416748047

Token 589: 'L' (ID: 43)
  Prédit: '"L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"L' → logprob: -0.0524328239262104
    2. '"' → logprob: -3.1774327754974365
    3. 'L' → logprob: -4.927433013916016
    4. '"D' → logprob: -6.427433013916016
    5. ''L' → logprob: -7.677433013916016
    6. 'U' → logprob: -10.802433013916016
    7. ''U' → logprob: -10.927433013916016
    8. ''' → logprob: -11.802433013916016
    9. '"N' → logprob: -13.427433013916016
    10. '""' → logprob: -13.427433013916016

Token 590: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0231732577085495
    2. 'end' → logprob: -4.7731733322143555
    3. '<|end|>' → logprob: -4.7731733322143555
    4. ',end' → logprob: -5.7731733322143555
    5. '',' → logprob: -6.7731733322143555
    6. ',' → logprob: -7.0231733322143555
    7. '[end' → logprob: -8.273173332214355
    8. '")' → logprob: -8.273173332214355
    9. '=end' → logprob: -9.273173332214355
    10. '(end' → logprob: -9.398173332214355

Token 591: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.018150296062231064
    2. ' end' → logprob: -4.018150329589844
    3. ',end' → logprob: -16.143150329589844
    4. '[end' → logprob: -16.268150329589844
    5. '=end' → logprob: -16.268150329589844
    6. '(end' → logprob: -16.768150329589844
    7. '	end' → logprob: -18.268150329589844
    8. '_end' → logprob: -19.143150329589844
    9. '.end' → logprob: -19.268150329589844
    10. '<|end|>' → logprob: -19.393150329589844

Token 592: '="")
' (ID: 154840)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08115687966346741
    2. '""' → logprob: -3.0811569690704346
    3. '("")' → logprob: -3.9561569690704346
    4. '(""))' → logprob: -4.9561567306518555
    5. '")' → logprob: -5.5811567306518555
    6. '()' → logprob: -6.9561567306518555
    7. ')' → logprob: -7.2061567306518555
    8. ' "")' → logprob: -8.081156730651855
    9. '("' → logprob: -10.956156730651855
    10. '=""' → logprob: -11.081156730651855

Token 593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6948091983795166
    2. '<|end|>' → logprob: -1.1948091983795166
    3. 'elif' → logprob: -1.6948091983795166
    4. ' elif' → logprob: -4.5698089599609375
    5. ')' → logprob: -6.9448089599609375
    6. '	elif' → logprob: -7.3198089599609375
    7. ' ' → logprob: -7.3198089599609375
    8. '   ' → logprob: -7.5698089599609375
    9. '  ' → logprob: -8.194808959960938
    10. '.' → logprob: -8.944808959960938

Token 594: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.013458558358252048
    2. ' elif' → logprob: -5.263458728790283
    3. '<|end|>' → logprob: -5.763458728790283
    4. '       ' → logprob: -6.138458728790283
    5. 'if' → logprob: -7.388458728790283
    6. '   ' → logprob: -7.513458728790283
    7. ')' → logprob: -7.638458728790283
    8. '```' → logprob: -7.763458728790283
    9. 'else' → logprob: -8.513458251953125
    10. '.' → logprob: -8.888458251953125

Token 595: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.7683782577514648
    2. 'horizontal' → logprob: -1.2683782577514648
    3. ' vertical' → logprob: -1.7683782577514648
    4. 'vertical' → logprob: -2.518378257751465
    5. '"' → logprob: -6.268378257751465
    6. '1' → logprob: -7.393378257751465
    7. '0' → logprob: -7.643378257751465
    8. '(vertical' → logprob: -8.143378257751465
    9. '(horizontal' → logprob: -8.643378257751465
    10. ' ' → logprob: -8.768378257751465

Token 596: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -5.490809417096898e-05
    2. '_' → logprob: -10.125055313110352
    3. 'Bit' → logprob: -11.750055313110352
    4. '_BIT' → logprob: -12.750055313110352
    5. '_bits' → logprob: -14.000055313110352
    6. 'if' → logprob: -14.375055313110352
    7. '_code' → logprob: -14.750055313110352
    8. '__' → logprob: -15.250055313110352
    9. 'bit' → logprob: -15.250055313110352
    10. '_block' → logprob: -15.375055313110352

Token 597: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759498476982117
    2. '==' → logprob: -0.8259498476982117
    3. '=' → logprob: -12.200949668884277
    4. '==
' → logprob: -13.450949668884277
    5. ')' → logprob: -13.700949668884277
    6. '===' → logprob: -14.450949668884277
    7. ' ' → logprob: -14.700949668884277
    8. '```' → logprob: -14.950949668884277
    9. ')==' → logprob: -15.075949668884277
    10. ' =' → logprob: -15.075949668884277

Token 598: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2528403699398041
    2. '0' → logprob: -1.5028403997421265
    3. ' ' → logprob: -7.002840518951416
    4. '<|end|>' → logprob: -15.127840042114258
    5. '```' → logprob: -15.252840042114258
    6. '   ' → logprob: -15.440340042114258
    7. '(' → logprob: -16.127840042114258
    8. '[' → logprob: -16.315340042114258
    9. '`' → logprob: -16.440340042114258
    10. ',' → logprob: -16.940340042114258

Token 599: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029754191637039185
    2. '0' → logprob: -3.529754161834717
    3. ' ' → logprob: -13.654754638671875
    4. '```' → logprob: -14.154754638671875
    5. '-' → logprob: -14.654754638671875
    6. '[' → logprob: -15.342254638671875
    7. '`' → logprob: -15.654754638671875
    8. '(' → logprob: -15.967254638671875
    9. '}' → logprob: -16.842254638671875
    10. '   ' → logprob: -17.092254638671875

Token 600: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.05547228083014488
    2. ' and' → logprob: -2.9304723739624023
    3. '<|end|>' → logprob: -7.555472373962402
    4. '"' → logprob: -10.430472373962402
    5. ',' → logprob: -11.430472373962402
    6. '   ' → logprob: -11.680472373962402
    7. '	and' → logprob: -12.430472373962402
    8. '&&' → logprob: -12.805472373962402
    9. '```' → logprob: -13.180472373962402
    10. '&' → logprob: -13.680472373962402

Token 601: ' vertical' (ID: 17679)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002964935847558081
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.125296592712402
    4. '<|end|>' → logprob: -17.125295639038086
    5. '  ' → logprob: -18.250295639038086
    6. '[' → logprob: -18.250295639038086
    7. 's' → logprob: -18.500295639038086
    8. '```' → logprob: -19.250295639038086
    9. '
' → logprob: -19.375295639038086
    10. '۰' → logprob: -19.500295639038086

Token 602: '_bit' (ID: 39574)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011209335178136826
    2. ' ==' → logprob: -4.761209487915039
    3. '0' → logprob: -6.011209487915039
    4. '=' → logprob: -9.761209487915039
    5. '_bit' → logprob: -10.261209487915039
    6. '_' → logprob: -11.136209487915039
    7. '==
' → logprob: -11.761209487915039
    8. '1' → logprob: -11.886209487915039
    9. '[' → logprob: -12.011209487915039
    10. 'bit' → logprob: -12.261209487915039

Token 603: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.016055602580308914
    2. ' ==' → logprob: -4.141055583953857
    3. '=="' → logprob: -10.891056060791016
    4. '==
' → logprob: -14.016056060791016
    5. '==-' → logprob: -14.016056060791016
    6. '0' → logprob: -14.891056060791016
    7. '=' → logprob: -15.016056060791016
    8. '```' → logprob: -15.766056060791016
    9. '<|end|>' → logprob: -15.891056060791016
    10. '=='' → logprob: -16.766056060791016

Token 604: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '-' → logprob: -18.625001907348633
    6. '```' → logprob: -19.375001907348633
    7. '[' → logprob: -20.687501907348633
    8. '
' → logprob: -21.125001907348633
    9. '۰' → logprob: -21.500001907348633
    10. '"' → logprob: -22.125001907348633

Token 605: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '-' → logprob: -19.875
    4. '1' → logprob: -20.5
    5. '```' → logprob: -21.25
    6. '   ' → logprob: -21.875
    7. '۰' → logprob: -21.875
    8. '<|end|>' → logprob: -22.8125
    9. '[' → logprob: -22.875
    10. ' ' → logprob: -23.6875

Token 606: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30758586525917053
    2. ':
' → logprob: -1.6825858354568481
    3. 'print' → logprob: -3.1825859546661377
    4. ':' → logprob: -4.307585716247559
    5. '           ' → logprob: -4.557585716247559
    6. '   ' → logprob: -4.682585716247559
    7. '<|end|>' → logprob: -6.182585716247559
    8. ' print' → logprob: -7.432585716247559
    9. '"' → logprob: -7.682585716247559
    10. ',' → logprob: -8.682585716247559

Token 607: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027393974363803864
    2. 'print' → logprob: -3.6523940563201904
    3. '           ' → logprob: -7.777393817901611
    4. '   ' → logprob: -8.40239429473877
    5. ' print' → logprob: -8.40239429473877
    6. ':' → logprob: -9.90239429473877
    7. '<|end|>' → logprob: -9.90239429473877
    8. '[' → logprob: -10.90239429473877
    9. '        ' → logprob: -11.27739429473877
    10. '#' → logprob: -11.65239429473877

Token 608: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.013474303297698498
    2. 'U' → logprob: -5.013474464416504
    3. '"' → logprob: -5.138474464416504
    4. ''U' → logprob: -8.388474464416504
    5. '   ' → logprob: -8.888474464416504
    6. ' print' → logprob: -9.013474464416504
    7. '```' → logprob: -9.638474464416504
    8. '"D' → logprob: -10.013474464416504
    9. '"A' → logprob: -10.263474464416504
    10. '       ' → logprob: -10.263474464416504

Token 609: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.01129455491900444
    2. '"' → logprob: -5.386294364929199
    3. '"D' → logprob: -5.386294364929199
    4. '"B' → logprob: -6.761294364929199
    5. '(' → logprob: -7.761294364929199
    6. '"N' → logprob: -9.0112943649292
    7. '"A' → logprob: -9.1362943649292
    8. '"I' → logprob: -9.2612943649292
    9. '"S' → logprob: -10.0112943649292
    10. '"M' → logprob: -10.6362943649292

Token 610: 'U' (ID: 52)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011662832461297512
    2. ''U' → logprob: -4.76166296005249
    3. 'U' → logprob: -6.38666296005249
    4. '"D' → logprob: -6.63666296005249
    5. '	U' → logprob: -11.636662483215332
    6. '"S' → logprob: -11.886662483215332
    7. '"A' → logprob: -12.136662483215332
    8. '"B' → logprob: -12.386662483215332
    9. '"I' → logprob: -13.011662483215332
    10. '")' → logprob: -13.011662483215332

Token 611: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0022651629988104105
    2. '")' → logprob: -6.252264976501465
    3. '"' → logprob: -8.877264976501465
    4. 'end' → logprob: -9.002264976501465
    5. '<|end|>' → logprob: -10.377264976501465
    6. ',end' → logprob: -11.377264976501465
    7. '"",' → logprob: -11.627264976501465
    8. '[end' → logprob: -12.377264976501465
    9. '(end' → logprob: -12.377264976501465
    10. '","' → logprob: -12.627264976501465

Token 612: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -9.686778503237292e-05
    2. ' end' → logprob: -9.250097274780273
    3. '(end' → logprob: -14.750097274780273
    4. '=end' → logprob: -15.750097274780273
    5. '[end' → logprob: -16.750097274780273
    6. ',end' → logprob: -16.875097274780273
    7. '	end' → logprob: -17.375097274780273
    8. ''end' → logprob: -17.875097274780273
    9. '<|end|>' → logprob: -19.250097274780273
    10. '@end' → logprob: -19.250097274780273

Token 613: '="")
' (ID: 154840)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4507945775985718
    2. '""' → logprob: -1.4507945775985718
    3. '")' → logprob: -2.8257946968078613
    4. ')' → logprob: -2.8257946968078613
    5. ' "")' → logprob: -5.450794696807861
    6. '<|end|>' → logprob: -6.075794696807861
    7. '(""))' → logprob: -6.325794696807861
    8. '("")' → logprob: -7.200794696807861
    9. '"""' → logprob: -7.325794696807861
    10. '=""' → logprob: -9.700794219970703

Token 614: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 615: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6973225474357605
    2. 'elif' (adapté à ' elif') → logprob: -0.6973225474357605
    3. '<|end|>' → logprob: -5.697322368621826
    4. '```' → logprob: -7.447322368621826
    5. ' else' → logprob: -8.947322845458984
    6. ' elif' → logprob: -10.197322845458984
    7. 'el' → logprob: -11.322322845458984
    8. 'e' → logprob: -11.822322845458984
    9. '       ' → logprob: -11.822322845458984
    10. 'elseif' → logprob: -11.947322845458984

Token 616: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.029758011922240257
    2. 'horizontal' → logprob: -3.5297579765319824
    3. '(horizontal' → logprob: -12.40475845336914
    4. ' vertical' → logprob: -13.15475845336914
    5. 'vertical' → logprob: -14.65475845336914
    6. 'Horizontal' → logprob: -15.27975845336914
    7. '_horizontal' → logprob: -15.27975845336914
    8. '0' → logprob: -16.40475845336914
    9. '   ' → logprob: -16.40475845336914
    10. '.horizontal' → logprob: -16.65475845336914

Token 617: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -0.26536062359809875
    2. 'horizontal' → logprob: -1.8903605937957764
    3. '_horizontal' → logprob: -2.8903605937957764
    4. ' horizontal' → logprob: -3.7653605937957764
    5. 'bit' → logprob: -6.1403608322143555
    6. '_' → logprob: -8.265360832214355
    7. ' bit' → logprob: -8.390360832214355
    8. ' ' → logprob: -9.265360832214355
    9. '   ' → logprob: -9.265360832214355
    10. '0' → logprob: -9.265360832214355

Token 618: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759415030479431
    2. '==' → logprob: -0.8259415030479431
    3. '=' → logprob: -14.20094108581543
    4. '==
' → logprob: -14.32594108581543
    5. ' ' → logprob: -15.95094108581543
    6. '=="' → logprob: -16.07594108581543
    7. '```' → logprob: -16.20094108581543
    8. '===' → logprob: -16.45094108581543
    9. '[' → logprob: -16.45094108581543
    10. '0' → logprob: -16.82594108581543

Token 619: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -14.62501335144043
    4. '```' → logprob: -16.25001335144043
    5. '-' → logprob: -17.50001335144043
    6. '۰' → logprob: -17.56251335144043
    7. '   ' → logprob: -17.62501335144043
    8. '[' → logprob: -18.31251335144043
    9. '<|end|>' → logprob: -18.50001335144043
    10. '00' → logprob: -18.68751335144043

Token 620: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021855919621884823
    2. '1' → logprob: -6.127185821533203
    3. '-' → logprob: -15.627185821533203
    4. '[' → logprob: -16.002185821533203
    5. '```' → logprob: -16.502185821533203
    6. ' ' → logprob: -17.377185821533203
    7. '``' → logprob: -17.814685821533203
    8. '`' → logprob: -17.939685821533203
    9. '
' → logprob: -18.189685821533203
    10. '"' → logprob: -19.439685821533203

Token 621: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17976751923561096
    2. 'and' → logprob: -1.8047674894332886
    3. '==' → logprob: -11.554767608642578
    4. '<|end|>' → logprob: -11.804767608642578
    5. ' ==' → logprob: -13.179767608642578
    6. '&&' → logprob: -13.929767608642578
    7. ',' → logprob: -14.054767608642578
    8. '=="' → logprob: -14.929767608642578
    9. ' ' → logprob: -15.179767608642578
    10. '	and' → logprob: -15.179767608642578

Token 622: ' vertical' (ID: 17679)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2166851907968521
    2. ' "' → logprob: -2.0916852951049805
    3. ' ' → logprob: -3.3416852951049805
    4. 'V' → logprob: -4.4666852951049805
    5. '           ' → logprob: -4.5916852951049805
    6. '0' → logprob: -5.0916852951049805
    7. '1' → logprob: -6.4666852951049805
    8. ' V' → logprob: -6.7166852951049805
    9. '   ' → logprob: -6.8416852951049805
    10. '       ' → logprob: -7.3416852951049805

Token 623: '_bit' (ID: 39574)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3436327874660492
    2. '1' → logprob: -1.9686328172683716
    3. '_bit' → logprob: -2.093632698059082
    4. 'Bit' → logprob: -4.468632698059082
    5. '==' → logprob: -4.968632698059082
    6. '=="' → logprob: -5.843632698059082
    7. 'bit' → logprob: -6.218632698059082
    8. '=' → logprob: -6.593632698059082
    9. '"B' → logprob: -6.968632698059082
    10. ' ==' → logprob: -7.468632698059082

Token 624: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.012553567998111248
    2. ' ==' → logprob: -4.387553691864014
    3. '=="' → logprob: -10.262553215026855
    4. '=' → logprob: -11.887553215026855
    5. '==
' → logprob: -13.387553215026855
    6. '===' → logprob: -15.387553215026855
    7. '```' → logprob: -16.512554168701172
    8. '=='' → logprob: -16.887554168701172
    9. '==-' → logprob: -17.137554168701172
    10. ' =="' → logprob: -17.262554168701172

Token 625: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '"' → logprob: -17.625
    4. '0' → logprob: -19.0
    5. '```' → logprob: -20.5
    6. '`' → logprob: -21.125
    7. '   ' → logprob: -21.875
    8. '１' → logprob: -22.0
    9. 'R' → logprob: -22.375
    10. 'print' → logprob: -22.5625

Token 626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -19.0
    3. '"' → logprob: -19.25
    4. ' ' → logprob: -19.375
    5. '```' → logprob: -19.75
    6. 'print' → logprob: -20.125
    7. '`' → logprob: -20.5
    8. 'R' → logprob: -20.75
    9. 'U' → logprob: -20.875
    10. '１' → logprob: -21.5625

Token 627: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07379163801670074
    2. ':
' → logprob: -2.948791742324829
    3. ':' → logprob: -4.69879150390625
    4. 'print' → logprob: -5.32379150390625
    5. '"' → logprob: -5.57379150390625
    6. '=' → logprob: -8.69879150390625
    7. '   ' → logprob: -9.19879150390625
    8. '       ' → logprob: -9.57379150390625
    9. '          ' → logprob: -9.57379150390625
    10. '```' → logprob: -9.57379150390625

Token 628: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14825913310050964
    2. 'print' → logprob: -2.023259162902832
    3. ' print' → logprob: -5.898259162902832
    4. '       ' → logprob: -6.398259162902832
    5. '	       ' → logprob: -7.773259162902832
    6. '```' → logprob: -8.273259162902832
    7. '               ' → logprob: -9.273259162902832
    8. '   ' → logprob: -9.273259162902832
    9. '[' → logprob: -9.898259162902832
    10. '#' → logprob: -10.023259162902832

Token 629: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.576050341129303
    2. 'D' → logprob: -0.826050341129303
    3. '"D' → logprob: -9.576050758361816
    4. ' print' → logprob: -10.951050758361816
    5. ' D' → logprob: -11.826050758361816
    6. '_D' → logprob: -12.076050758361816
    7. ''D' → logprob: -12.951050758361816
    8. '>D' → logprob: -12.951050758361816
    9. '```' → logprob: -13.576050758361816
    10. '	D' → logprob: -14.326050758361816

Token 630: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07900060713291168
    2. '"D' → logprob: -2.57900071144104
    3. '(' → logprob: -10.329000473022461
    4. '"B' → logprob: -10.329000473022461
    5. '"S' → logprob: -10.579000473022461
    6. '"' → logprob: -11.829000473022461
    7. '"O' → logprob: -12.079000473022461
    8. 'D' → logprob: -12.954000473022461
    9. '(D' → logprob: -13.204000473022461
    10. '('' → logprob: -14.329000473022461

Token 631: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00495907012373209
    2. '"D' → logprob: -5.3799591064453125
    3. ''D' → logprob: -8.004959106445312
    4. '"' → logprob: -13.129959106445312
    5. ' D' → logprob: -13.879959106445312
    6. ''' → logprob: -14.629959106445312
    7. '```' → logprob: -14.879959106445312
    8. '	D' → logprob: -15.379959106445312
    9. '`' → logprob: -15.629959106445312
    10. '_D' → logprob: -15.754959106445312

Token 632: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -3.5716304410016164e-05
    2. '")' → logprob: -10.500035285949707
    3. '"' → logprob: -11.750035285949707
    4. '"",' → logprob: -16.625036239624023
    5. ' ",' → logprob: -16.750036239624023
    6. '")
' → logprob: -16.750036239624023
    7. ')",' → logprob: -17.000036239624023
    8. 'end' → logprob: -17.250036239624023
    9. '",
' → logprob: -18.000036239624023
    10. '","' → logprob: -19.500036239624023

Token 633: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00026181264547631145
    2. ' end' → logprob: -8.250262260437012
    3. '(end' → logprob: -15.250262260437012
    4. '[end' → logprob: -15.500262260437012
    5. '=end' → logprob: -17.125261306762695
    6. ''end' → logprob: -17.500261306762695
    7. ')' → logprob: -18.000261306762695
    8. ',end' → logprob: -18.125261306762695
    9. '	end' → logprob: -18.875261306762695
    10. '")' → logprob: -20.250261306762695

Token 634: '="")
' (ID: 154840)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.21936507523059845
    2. '""' → logprob: -1.719365119934082
    3. '("")' → logprob: -4.094365119934082
    4. '(""))' → logprob: -7.844365119934082
    5. '")' → logprob: -8.094365119934082
    6. ')' → logprob: -8.219365119934082
    7. '()' → logprob: -9.344365119934082
    8. '"""' → logprob: -10.844365119934082
    9. ' "")' → logprob: -10.844365119934082
    10. '=""' → logprob: -10.969365119934082

Token 635: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 636: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06304844468832016
    2. '\n' → logprob: -2.8130483627319336
    3. '
' → logprob: -7.563048362731934
    4. ' print' → logprob: -8.563048362731934
    5. '<|end|>' → logprob: -8.688048362731934
    6. '```' → logprob: -9.438048362731934
    7. '\' → logprob: -9.813048362731934
    8. '    
' → logprob: -10.938048362731934
    9. '  
' → logprob: -11.313048362731934
    10. '   ' → logprob: -11.313048362731934

Token 637: '("")' (ID: 53912)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.750005722045898
    3. '("")' → logprob: -12.750005722045898
    4. '()
' → logprob: -16.0000057220459
    5. ' ()' → logprob: -17.3750057220459
    6. '();' → logprob: -18.6250057220459
    7. '('' → logprob: -19.1250057220459
    8. '()\' → logprob: -19.2500057220459
    9. '()}' → logprob: -19.3750057220459
    10. '().' → logprob: -19.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 635
Tokens correctement prédits (1ère position, stricte): 289
Tokens correctement prédits (1ère position, avec adaptation): 308
Tokens correctement prédits (top 10): 550
Précision stricte (1ère position): 45.51%
Précision adaptée (1ère position): 48.50%
Précision (top 10): 86.61%
================================================================================
