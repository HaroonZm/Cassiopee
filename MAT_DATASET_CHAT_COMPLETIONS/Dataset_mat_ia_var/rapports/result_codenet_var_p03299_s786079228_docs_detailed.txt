================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
mod = 10 ** 9 + 7  # Définition du modulo pour éviter les débordements dans les calculs

n = int(input())
H = list(map(int, input().split()))

def solve(h):
    """
    Calcule la valeur requise selon une logique dynamique basée sur la liste de hauteurs `h`.
    Les différentes parties du calcul dépendent de la configuration locale des hauteurs.

    Args:
        h (List[int]): Liste des hauteurs (sous-liste de la liste globale H, sans les '1').

    Returns:
        int: Le nombre total de façons possibles selon les règles données, modulo `mod`.
    """
    if not h:
        # Cas de base: Une séquence vide a une seule façon triviale
        return 1
    elif len(h) == 1:
        # Si une seule hauteur, le résultat est 2^hauteur (tous les sous-ensembles des étages)
        return pow(2, h[0], mod)
    
    N = len(h)  # Nombre d'éléments dans la sous-liste

    # Compression des valeurs de hauteur pour permettre une indexation efficace dans le dp
    a = [h[i] for i in range(N)]
    a = list(set(a))  # Éliminer les doublons
    a.sort()
    comp = {i: e+1 for e, i in enumerate(a)}  # Dictionnaire: hauteur -> index compressé (>0)
    data = {comp[e]: e for e in comp.keys()}  # Inverse: index compressé -> hauteur
    data[0] = 1  # Correction d'initialisation, utilisé comme valeur de base
    
    # Initialisation de la table de programmation dynamique
    # dp[i][j]: nombre de façons jusqu'à ième position avec hauteur index j
    dp = [[0 for _ in range(len(a)+1)] for _ in range(N)]
    
    # Initialisation de la première transition selon les relations de la séquence
    i = 0
    if h[i+1] >= h[i]:
        # Cas où la prochaine hauteur est plus grande ou égale
        id = comp[h[i]]
        id2 = comp[h[i+1]]
        for j in range(id, id2+1):
            dp[i][j] = 2  # Deux façons de construire cette configuration
        for j in range(0, id):
            dp[i][j] = 1  # Une seule façon pour les indices plus bas
    else:
        # Cas où la prochaine hauteur est plus petite
        id = comp[h[i+1]]
        for j in range(0, id):
            dp[i][j] = pow(2, h[i]-h[i+1], mod)
        dp[i][id] = 2 * (pow(2, h[i]-h[i+1], mod) - 1)
        dp[i][id] %= mod
        id2 = comp[h[i]]
        dp[i][id] += 2  # Ajoute 2 façons supplémentaires pour la configuration maximale
        dp[i][id] %= mod

    # Remplissage progressif de la DP pour chaque position dans la séquence
    for i in range(1, N-1):
        if h[i+1] >= h[i]:
            id = comp[h[i]]
            id2 = comp[h[i+1]]
            # Si la hauteur suivante est supérieure ou égale, multiplier par 2 pour les nouvelles options
            for j in range(id, id2+1):
                dp[i][j] = (2 * dp[i-1][id]) % mod
            # Les autres indices conservent leurs valeurs précédentes
            for j in range(0, id):
                dp[i][j] = dp[i-1][j]
        else:
            id = comp[h[i+1]]
            id2 = comp[h[i]]
            # Cas où la hauteur diminue
            for j in range(0, id):
                dp[i][j] = (pow(2, h[i]-h[i+1], mod) * dp[i-1][j]) % mod
            for j in range(id, id2):
                low = data[j]
                up = data[j+1] - 1
                dp[i][id] += dp[i-1][j] * pow(2, h[i]-up, mod) * (pow(2, up-low+1, mod)-1)
            dp[i][id] %= mod
            dp[i][id] += 2 * dp[i-1][id2]
            dp[i][id] %= mod

    # Calcul final de la réponse pour cette portion
    ans = 0
    id = comp[h[-1]]
    for i in range(0, id):
        low = data[i]
        up = data[i+1] - 1
        ans += dp[N-2][i] * pow(2, h[-1]-up, mod) * (pow(2, up-low+1, mod) - 1)
        ans %= mod
    ans += 2 * dp[N-2][id]
    ans %= mod
    return ans

# Prise en compte des portions séparées par les '1' dans H
ans = pow(2, H.count(1), mod)  # Chaque '1' offre 2 possibilités indépendantes

# Index de toutes les positions où la valeur est '1'
check = [i for i in range(n) if H[i] == 1]
# Créer des bornes de découpage de la liste principale H
check = [-1] + check + [n]

# Pour chaque sous-séquence comprise entre les '1', appliquer la fonction solve
for i in range(len(check)-1):
    l, r = check[i], check[i+1]
    ans *= solve(H[l+1:r])
    ans %= mod

print(ans)  # Affichage du résultat final
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'mod' (ID: 4847)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7614023685455322
    2. 'math' → logprob: -1.8864023685455322
    3. ' ' → logprob: -2.7614023685455322
    4. '__' → logprob: -3.0114023685455322
    5. '1' → logprob: -3.0114023685455322
    6. '100' → logprob: -3.3864023685455322
    7. '42' → logprob: -3.5114023685455322
    8. '123' → logprob: -3.7614023685455322
    9. 'pow' → logprob: -4.511402130126953
    10. 'torch' → logprob: -4.511402130126953

Token 4: ' **' (ID: 6240)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08254548907279968
    2. '%' → logprob: -3.332545518875122
    3. '**' → logprob: -3.832545518875122
    4. '+' → logprob: -4.832545280456543
    5. '\' → logprob: -5.207545280456543
    6. '```' → logprob: -5.707545280456543
    7. '\n' → logprob: -6.207545280456543
    8. '#' → logprob: -7.082545280456543
    9. '=' → logprob: -7.207545280456543
    10. '`' → logprob: -7.707545280456543

Token 5: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00893480982631445
    2. ' ' → logprob: -5.00893497467041
    3. '6' → logprob: -6.13393497467041
    4. '```' → logprob: -10.50893497467041
    5. '7' → logprob: -11.88393497467041
    6. '8' → logprob: -12.13393497467041
    7. '-' → logprob: -12.50893497467041
    8. '5' → logprob: -13.00893497467041
    9. '``' → logprob: -13.38393497467041
    10. '`' → logprob: -14.88393497467041

Token 6: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.3464544432936236e-05
    2. '6' → logprob: -10.125043869018555
    3. ' ' → logprob: -12.875043869018555
    4. '```' → logprob: -14.375043869018555
    5. '8' → logprob: -16.500043869018555
    6. '``' → logprob: -17.625043869018555
    7. '5' → logprob: -18.625043869018555
    8. '7' → logprob: -18.750043869018555
    9. '09' → logprob: -19.000043869018555
    10. '-' → logprob: -19.250043869018555

Token 7: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013290488859638572
    2. ' +' → logprob: -6.626328945159912
    3. '```' → logprob: -12.87632942199707
    4. '+
' → logprob: -15.25132942199707
    5. '6' → logprob: -16.62632942199707
    6. '`' → logprob: -16.62632942199707
    7. '＋' → logprob: -16.87632942199707
    8. '``' → logprob: -17.00132942199707
    9. '7' → logprob: -17.12632942199707
    10. '\' → logprob: -17.25132942199707

Token 8: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -16.000009536743164
    4. '1' → logprob: -17.250009536743164
    5. '9' → logprob: -18.750009536743164
    6. '``' → logprob: -19.125009536743164
    7. '37' → logprob: -19.500009536743164
    8. '27' → logprob: -19.500009536743164
    9. '3' → logprob: -19.625009536743164
    10. '+' → logprob: -19.750009536743164

Token 9: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '```' → logprob: -19.125
    4. '+' → logprob: -20.25
    5. '``' → logprob: -21.0
    6. '   ' → logprob: -21.0
    7. '9' → logprob: -21.875
    8. '  ' → logprob: -22.625
    9. '07' → logprob: -23.125
    10. '1' → logprob: -23.25

Token 10: ' ' (ID: 220)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.727286696434021
    2. '#' → logprob: -1.227286696434021
    3. ')' → logprob: -2.7272868156433105
    4. '\n' → logprob: -3.3522868156433105
    5. '\' → logprob: -3.4772868156433105
    6. '
' → logprob: -3.8522868156433105
    7. ',' → logprob: -4.4772868156433105
    8. ' ' → logprob: -4.7272868156433105
    9. '_' → logprob: -4.7272868156433105
    10. '(' → logprob: -4.8522868156433105

Token 11: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1816742420196533
    2. '\' → logprob: -1.4316742420196533
    3. '\n' → logprob: -1.6816742420196533
    4. '#' → logprob: -1.9316742420196533
    5. ')' → logprob: -3.5566742420196533
    6. ',' → logprob: -3.8066742420196533
    7. '_' → logprob: -4.681674003601074
    8. ' ' → logprob: -4.681674003601074
    9. '(' → logprob: -4.931674003601074
    10. '
' → logprob: -5.056674003601074

Token 12: ' Dé' (ID: 27247)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008536089211702347
    2. ' a' → logprob: -5.633535861968994
    3. ' prime' → logprob: -6.008535861968994
    4. ' standard' → logprob: -8.258536338806152
    5. ' Python' → logprob: -8.383536338806152
    6. ' common' → logprob: -8.883536338806152
    7. ' the' → logprob: -9.133536338806152
    8. ' A' → logprob: -9.133536338806152
    9. ' number' → logprob: -9.133536338806152
    10. ' )' → logprob: -9.383536338806152

Token 13: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003056142246350646
    2. 'fi' → logprob: -5.878056049346924
    3. 'fin' → logprob: -8.628056526184082
    4. 'fia' → logprob: -10.628056526184082
    5. 'fen' → logprob: -11.128056526184082
    6. 'r' → logprob: -13.003056526184082
    7. 'ﬁ' → logprob: -13.003056526184082
    8. 'éf' → logprob: -13.128056526184082
    9. '```' → logprob: -13.128056526184082
    10. 'finite' → logprob: -13.378056526184082

Token 14: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.13903948664665222
    2. 'i' → logprob: -2.7640395164489746
    3. 'inition' → logprob: -2.7640395164489746
    4. 'e' → logprob: -6.514039516448975
    5. 'tion' → logprob: -7.639039516448975
    6. 'ission' → logprob: -7.889039516448975
    7. 'n' → logprob: -8.264039039611816
    8. '=' → logprob: -9.139039039611816
    9. 'it' → logprob: -9.264039039611816
    10. 't' → logprob: -9.389039039611816

Token 15: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' modulo' (ID: 112372)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.08682765811681747
    2. 'mod' → logprob: -2.8368277549743652
    3. ' modulus' → logprob: -4.336827754974365
    4. ' modulo' → logprob: -5.086827754974365
    5. ' module' → logprob: -5.961827754974365
    6. ' MOD' → logprob: -7.211827754974365
    7. ' modu' → logprob: -7.836827754974365
    8. ' facteur' → logprob: -8.211827278137207
    9. ' modul' → logprob: -8.836827278137207
    10. ' résultat' → logprob: -9.086827278137207

Token 17: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1158795356750488
    2. '*' → logprob: -1.9908795356750488
    3. '
' → logprob: -2.115879535675049
    4. ',' → logprob: -2.365879535675049
    5. ' ' → logprob: -2.490879535675049
    6. '\' → logprob: -2.615879535675049
    7. '\n' → logprob: -3.115879535675049
    8. '#' → logprob: -3.615879535675049
    9. '_' → logprob: -3.865879535675049
    10. 'mod' → logprob: -4.240879535675049

Token 18: ' éviter' (ID: 64013)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3390243649482727
    2. ' l' → logprob: -2.339024305343628
    3. ' la' → logprob: -2.589024305343628
    4. 'l' → logprob: -3.339024305343628
    5. 'les' → logprob: -3.839024305343628
    6. ' le' → logprob: -3.964024305343628
    7. ' garantir' → logprob: -4.839024543762207
    8. ' assurer' → logprob: -4.964024543762207
    9. ' éviter' → logprob: -5.339024543762207
    10. ' des' → logprob: -6.089024543762207

Token 19: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.05827038735151291
    2. ' l' → logprob: -3.9332704544067383
    3. 'les' → logprob: -4.683270454406738
    4. ' la' → logprob: -4.933270454406738
    5. ' ' → logprob: -5.058270454406738
    6. 's' → logprob: -5.808270454406738
    7. ' overflow' → logprob: -5.933270454406738
    8. ' ' → logprob: -6.058270454406738
    9. ' le' → logprob: -6.183270454406738
    10. 'l' → logprob: -6.183270454406738

Token 20: ' déb' (ID: 37874)
  Prédit: ' déb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déb' → logprob: -0.05227002874016762
    2. ' dépasse' → logprob: -3.80226993560791
    3. ' overflow' → logprob: -4.30226993560791
    4. 'd' → logprob: -4.67726993560791
    5. 'overflow' → logprob: -5.92726993560791
    6. 'dé' → logprob: -6.05226993560791
    7. 's' → logprob: -8.67726993560791
    8. ' deb' → logprob: -9.17726993560791
    9. ' erreurs' → logprob: -9.17726993560791
    10. ' problèmes' → logprob: -9.55226993560791

Token 21: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.0010815176647156477
    2. 'or' → logprob: -7.251081466674805
    3. 'ords' → logprob: -8.876081466674805
    4. 't' → logprob: -10.126081466674805
    5. 'it' → logprob: -10.376081466674805
    6. 'ор' → logprob: -10.751081466674805
    7. '%' → logprob: -11.126081466674805
    8. 'orde' → logprob: -11.376081466674805
    9. '_ord' → logprob: -11.376081466674805
    10. '\' → logprob: -11.501081466674805

Token 22: 'ements' (ID: 4507)
  Prédit: 'ements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.7245784997940063
    2. 'ement' → logprob: -0.9745784997940063
    3. 'i' → logprob: -2.599578380584717
    4. '```' → logprob: -3.599578380584717
    5. 'issements' → logprob: -3.974578380584717
    6. 'it' → logprob: -5.724578380584717
    7. 'issement' → logprob: -5.849578380584717
    8. 'e' → logprob: -6.224578380584717
    9. ' it' → logprob: -6.599578380584717
    10. 'éments' → logprob: -6.599578380584717

Token 23: ' dans' (ID: 2671)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6778690814971924
    2. '
' → logprob: -0.9278690814971924
    3. '\' → logprob: -2.9278690814971924
    4. ',' → logprob: -4.552868843078613
    5. '*' → logprob: -5.052868843078613
    6. ')' → logprob: -5.052868843078613
    7. '#' → logprob: -5.802868843078613
    8. '
' → logprob: -6.177868843078613
    9. ' 
' → logprob: -6.552868843078613
    10. 'n' → logprob: -6.552868843078613

Token 24: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.07150651514530182
    2. 'les' → logprob: -2.6965065002441406
    3. 'l' → logprob: -7.571506500244141
    4. ' l' → logprob: -7.946506500244141
    5. ' le' → logprob: -8.44650650024414
    6. ' la' → logprob: -9.07150650024414
    7. 'le' → logprob: -9.57150650024414
    8. 's' → logprob: -10.19650650024414
    9. 'calcul' → logprob: -10.19650650024414
    10. ' ' → logprob: -10.44650650024414

Token 25: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.030906297266483307
    2. 'calcul' → logprob: -3.6559062004089355
    3. 'ent' → logprob: -6.5309062004089355
    4. ' calculations' → logprob: -6.9059062004089355
    5. ' opérations' → logprob: -7.6559062004089355
    6. ' ent' → logprob: -8.155906677246094
    7. ' nombres' → logprob: -8.280906677246094
    8. 'cal' → logprob: -8.530906677246094
    9. ' résultats' → logprob: -9.155906677246094
    10. ' sommes' → logprob: -9.655906677246094

Token 26: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06083562225103378
    2. 'ations' → logprob: -3.060835599899292
    3. 'es' → logprob: -5.185835838317871
    4. 'us' → logprob: -5.560835838317871
    5. 'atrice' → logprob: -7.435835838317871
    6. 'ulations' → logprob: -7.560835838317871
    7. 'atrices' → logprob: -7.685835838317871
    8. 'ateur' → logprob: -7.935835838317871
    9. ')' → logprob: -8.685835838317871
    10. '```' → logprob: -8.810835838317871

Token 27: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7286319732666016
    2. '\n' → logprob: -1.3536319732666016
    3. '\' → logprob: -1.4786319732666016
    4. ',' → logprob: -5.353631973266602
    5. '' → logprob: -5.478631973266602
    6. '

' → logprob: -5.478631973266602
    7. '
' → logprob: -5.603631973266602
    8. '#' → logprob: -5.853631973266602
    9. ' 
' → logprob: -6.228631973266602
    10. 'n' → logprob: -6.478631973266602

Token 28: 'n' (ID: 77)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9763371348381042
    2. '\' → logprob: -1.101337194442749
    3. '\n' → logprob: -1.601337194442749
    4. ',' → logprob: -3.101337194442749
    5. ',
' → logprob: -4.22633695602417
    6. '
' → logprob: -4.60133695602417
    7. '

' → logprob: -4.97633695602417
    8. '' → logprob: -5.47633695602417
    9. ' 
' → logprob: -6.35133695602417
    10. 'n' → logprob: -6.72633695602417

Token 29: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.638173520565033
    2. ' =' → logprob: -1.0131735801696777
    3. '=' → logprob: -2.6381735801696777
    4. '_' → logprob: -4.638173580169678
    5. ')' → logprob: -5.013173580169678
    6. '[' → logprob: -5.138173580169678
    7. ' **' → logprob: -5.388173580169678
    8. ',' → logprob: -6.513173580169678
    9. ' *' → logprob: -6.513173580169678
    10. '.' → logprob: -6.888173580169678

Token 30: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5228855609893799
    2. ' ' → logprob: -1.0228855609893799
    3. '10' → logprob: -3.77288556098938
    4. 'int' → logprob: -3.77288556098938
    5. '5' → logprob: -7.647885322570801
    6. '0' → logprob: -7.897885322570801
    7. '1' → logprob: -8.1478853225708
    8. '100' → logprob: -8.8978853225708
    9. ' input' → logprob: -9.0228853225708
    10. '20' → logprob: -9.2728853225708

Token 31: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11293943971395493
    2. '(input' → logprob: -2.2379393577575684
    3. '()' → logprob: -9.862939834594727
    4. 'input' → logprob: -10.237939834594727
    5. ' (' → logprob: -12.112939834594727
    6. '(
' → logprob: -12.112939834594727
    7. '('' → logprob: -12.237939834594727
    8. '("' → logprob: -12.737939834594727
    9. '(

' → logprob: -13.112939834594727
    10. '<|end|>' → logprob: -13.237939834594727

Token 32: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7826411128044128
    2. '())' → logprob: -1.2826411724090576
    3. '(' → logprob: -1.4076411724090576
    4. ')' → logprob: -3.9076411724090576
    5. '(()' → logprob: -8.532641410827637
    6. '('' → logprob: -8.782641410827637
    7. '(

' → logprob: -9.282641410827637
    8. '(
' → logprob: -9.407641410827637
    9. '(`' → logprob: -10.532641410827637
    10. '(""))' → logprob: -10.657641410827637

Token 33: 'H' (ID: 39)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.018702745437622
    2. 's' → logprob: -1.018702745437622
    3. ')' → logprob: -1.768702745437622
    4. 'result' → logprob: -4.143702507019043
    5. ' ' → logprob: -4.518702507019043
    6. 'r' → logprob: -4.518702507019043
    7. 'fact' → logprob: -4.643702507019043
    8. 'arr' → logprob: -5.143702507019043
    9. 'f' → logprob: -5.143702507019043
    10. 'factor' → logprob: -5.143702507019043

Token 34: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4629717767238617
    2. ' =' → logprob: -1.462971806526184
    3. '[i' → logprob: -3.0879716873168945
    4. 'e' → logprob: -3.4629716873168945
    5. '=' → logprob: -3.5879716873168945
    6. 's' → logprob: -5.0879716873168945
    7. '_' → logprob: -5.2129716873168945
    8. ' heights' → logprob: -5.7129716873168945
    9. 't' → logprob: -5.9629716873168945
    10. ' =[' → logprob: -6.2129716873168945

Token 35: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3925587832927704
    2. ' [' → logprob: -1.3925588130950928
    3. ' []' → logprob: -3.0175588130950928
    4. 'list' → logprob: -4.017558574676514
    5. '[' → logprob: -5.017558574676514
    6. '[input' → logprob: -7.017558574676514
    7. '[int' → logprob: -7.392558574676514
    8. '[]' → logprob: -7.392558574676514
    9. '[list' → logprob: -8.142559051513672
    10. ' input' → logprob: -8.642559051513672

Token 36: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013215499930083752
    2. '(input' → logprob: -7.626321315765381
    3. '(range' → logprob: -8.001321792602539
    4. '()' → logprob: -8.251321792602539
    5. '(int' → logprob: -9.126321792602539
    6. '([' → logprob: -10.501321792602539
    7. '(map' → logprob: -10.751321792602539
    8. '([]' → logprob: -11.376321792602539
    9. '(H' → logprob: -11.751321792602539
    10. '[' → logprob: -12.001321792602539

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01704331301152706
    2. '(' → logprob: -4.142043113708496
    3. '(str' → logprob: -8.017043113708496
    4. '(input' → logprob: -8.392043113708496
    5. '(lambda' → logprob: -8.642043113708496
    6. '<int' → logprob: -9.142043113708496
    7. 'int' → logprob: -9.642043113708496
    8. '=int' → logprob: -10.642043113708496
    9. ')' → logprob: -11.017043113708496
    10. '(eval' → logprob: -11.142043113708496

Token 38: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0026304731145501137
    2. ',input' → logprob: -6.252630710601807
    3. '(' → logprob: -7.377630710601807
    4. 'input' → logprob: -9.877630233764648
    5. ',' → logprob: -11.252630233764648
    6. ' (' → logprob: -12.752630233764648
    7. '=input' → logprob: -13.002630233764648
    8. ' input' → logprob: -13.502630233764648
    9. '<input' → logprob: -13.752630233764648
    10. ')' → logprob: -13.877630233764648

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008617766201496124
    2. ' input' → logprob: -4.758617877960205
    3. '(input' → logprob: -13.133617401123047
    4. ',input' → logprob: -14.008617401123047
    5. ' ' → logprob: -16.383617401123047
    6. 'range' → logprob: -16.383617401123047
    7. ')' → logprob: -16.383617401123047
    8. '=input' → logprob: -16.758617401123047
    9. 'int' → logprob: -17.008617401123047
    10. '<input' → logprob: -17.758617401123047

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.057743949990254e-05
    2. '()' → logprob: -11.375020980834961
    3. '(' → logprob: -12.000020980834961
    4. ')' → logprob: -13.625020980834961
    5. '())' → logprob: -14.500020980834961
    6. '()))' → logprob: -14.875020980834961
    7. ' ().' → logprob: -15.500020980834961
    8. '.split' → logprob: -15.625020980834961
    9. '(input' → logprob: -15.875020980834961
    10. '.' → logprob: -16.50002098083496

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.590104698669165e-05
    2. 'strip' → logprob: -9.500085830688477
    3. ' split' → logprob: -12.000085830688477
    4. '(split' → logprob: -12.500085830688477
    5. 'rstrip' → logprob: -14.250085830688477
    6. 'spl' → logprob: -15.250085830688477
    7. ')' → logprob: -16.375085830688477
    8. 's' → logprob: -17.500085830688477
    9. 'plit' → logprob: -19.375085830688477
    10. '_split' → logprob: -19.750085830688477

Token 42: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47030743956565857
    2. ')' → logprob: -1.720307469367981
    3. '()))' → logprob: -1.970307469367981
    4. '(' → logprob: -3.5953073501586914
    5. '())' → logprob: -3.5953073501586914
    6. '()' → logprob: -6.595307350158691
    7. ')))' → logprob: -8.720307350158691
    8. ' ))' → logprob: -9.970307350158691
    9. '('' → logprob: -10.095307350158691
    10. '(
' → logprob: -10.470307350158691

Token 43: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005039133131504059
    2. 'max' → logprob: -7.005039215087891
    3. 'count' → logprob: -7.380039215087891
    4. 'prefix' → logprob: -7.505039215087891
    5. 's' → logprob: -7.755039215087891
    6. 'c' → logprob: -7.755039215087891
    7. 'd' → logprob: -8.25503921508789
    8. 'res' → logprob: -8.25503921508789
    9. 'ways' → logprob: -8.50503921508789
    10. 'result' → logprob: -8.50503921508789

Token 44: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36736804246902466
    2. ' count' → logprob: -2.36736798286438
    3. ' max' → logprob: -2.86736798286438
    4. ' dp' → logprob: -2.86736798286438
    5. ' factorial' → logprob: -3.61736798286438
    6. ' longest' → logprob: -3.99236798286438
    7. ' f' → logprob: -4.492368221282959
    8. ' dfs' → logprob: -4.742368221282959
    9. ' ' → logprob: -5.117368221282959
    10. ' calculate' → logprob: -5.367368221282959

Token 45: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.059039875864982605
    2. '_' → logprob: -2.934039831161499
    3. '(_' → logprob: -5.934040069580078
    4. '(H' → logprob: -7.809040069580078
    5. '(n' → logprob: -8.309040069580078
    6. '_(' → logprob: -8.684040069580078
    7. '():' → logprob: -8.934040069580078
    8. '(_)' → logprob: -9.309040069580078
    9. '_:' → logprob: -10.309040069580078
    10. '_mod' → logprob: -10.309040069580078

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007727291435003281
    2. ')' → logprob: -5.132727146148682
    3. ')):' → logprob: -6.632727146148682
    4. ',' → logprob: -8.63272762298584
    5. '):
' → logprob: -8.75772762298584
    6. ' ):' → logprob: -10.25772762298584
    7. '[' → logprob: -10.63272762298584
    8. 's' → logprob: -10.88272762298584
    9. '))' → logprob: -11.38272762298584
    10. '[]):' → logprob: -11.50772762298584

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2676197290420532
    2. ' dp' → logprob: -2.2676196098327637
    3. 'dp' → logprob: -3.0176196098327637
    4. 'n' → logprob: -3.5176196098327637
    5. ' n' → logprob: -3.8926196098327637
    6. '    ' → logprob: -4.017619609832764
    7. ' ' → logprob: -5.767619609832764
    8. '    
' → logprob: -6.017619609832764
    9. ' 
' → logprob: -6.267619609832764
    10. ':' → logprob: -7.142619609832764

Token 48: ' """
' (ID: 7037)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.44971510767936707
    2. ' n' → logprob: -1.6997151374816895
    3. 'dp' → logprob: -2.1997151374816895
    4. 'n' → logprob: -3.5747151374816895
    5. ' stack' → logprob: -3.5747151374816895
    6. '   ' → logprob: -5.1997151374816895
    7. 'stack' → logprob: -5.9497151374816895
    8. ' max' → logprob: -6.4497151374816895
    9. ' prev' → logprob: -7.5747151374816895
    10. ' res' → logprob: -7.9497151374816895

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7792412638664246
    2. 'dp' → logprob: -1.6542413234710693
    3. 'n' → logprob: -1.9042413234710693
    4. ' dp' → logprob: -2.5292413234710693
    5. 'max' → logprob: -3.7792413234710693
    6. ' max' → logprob: -4.02924108505249
    7. 'f' → logprob: -4.40424108505249
    8. ' n' → logprob: -4.90424108505249
    9. 'stack' → logprob: -5.65424108505249
    10. 'c' → logprob: -5.65424108505249

Token 50: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3661396503448486
    2. 'n' → logprob: -1.4911396503448486
    3. '"""' → logprob: -1.7411396503448486
    4. ' """' → logprob: -2.4911396503448486
    5. '#' → logprob: -2.6161396503448486
    6. ' if' → logprob: -3.9911396503448486
    7. '    ' → logprob: -3.9911396503448486
    8. ')' → logprob: -4.1161394119262695
    9. 'dp' → logprob: -4.1161394119262695
    10. ' n' → logprob: -4.3661394119262695

Token 51: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5117682218551636
    2. 'cul' → logprob: -1.0117682218551636
    3. 'cule' → logprob: -3.386768341064453
    4. 'cules' → logprob: -6.511768341064453
    5. 'culate' → logprob: -7.136768341064453
    6. '   ' → logprob: -8.761768341064453
    7. '
' → logprob: -9.011768341064453
    8. '```' → logprob: -9.261768341064453
    9. 'cu' → logprob: -9.636768341064453
    10. 'cula' → logprob: -9.761768341064453

Token 52: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2957821190357208
    2. ' la' → logprob: -1.4207820892333984
    3. 'le' → logprob: -5.420782089233398
    4. 's' → logprob: -5.920782089233398
    5. ' l' → logprob: -6.295782089233398
    6. '(' → logprob: -6.920782089233398
    7. ' les' → logprob: -7.170782089233398
    8. '_' → logprob: -7.295782089233398
    9. '_le' → logprob: -7.545782089233398
    10. ' ' → logprob: -7.920782089233398

Token 53: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.41051557660102844
    2. 'nombre' → logprob: -1.910515546798706
    3. 'plus' → logprob: -2.660515546798706
    4. 'man' → logprob: -3.535515546798706
    5. 'fa' → logprob: -4.035515785217285
    6. 'long' → logprob: -4.285515785217285
    7. ' somme' → logprob: -4.410515785217285
    8. ' plus' → logprob: -5.035515785217285
    9. ' longueur' → logprob: -5.160515785217285
    10. 'f' → logprob: -5.535515785217285

Token 54: ' requ' (ID: 7028)
  Prédit: ' maximale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.1844843029975891
    2. 'max' → logprob: -3.0594842433929443
    3. ' optimale' → logprob: -3.8094842433929443
    4. ' max' → logprob: -3.9344842433929443
    5. '   ' → logprob: -4.184484481811523
    6. ' finale' → logprob: -4.309484481811523
    7. ' suivante' → logprob: -4.684484481811523
    8. ' de' → logprob: -4.934484481811523
    9. '(' → logprob: -5.184484481811523
    10. ' du' → logprob: -5.559484481811523

Token 55: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.04378029331564903
    2. 'ête' → logprob: -3.1687803268432617
    3. 'ir' → logprob: -8.168780326843262
    4. 'êt' → logprob: -8.918780326843262
    5. 'te' → logprob: -9.793780326843262
    6. 'ue' → logprob: -10.418780326843262
    7. 'ière' → logprob: -10.543780326843262
    8. 'ète' → logprob: -10.543780326843262
    9. 'i' → logprob: -10.668780326843262
    10. 'ê' → logprob: -11.043780326843262

Token 56: ' selon' (ID: 27571)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36833012104034424
    2. '   ' → logprob: -1.8683301210403442
    3. '(h' → logprob: -2.6183300018310547
    4. '(
' → logprob: -3.7433300018310547
    5. ':' → logprob: -4.743330001831055
    6. 'def' → logprob: -4.993330001831055
    7. '```' → logprob: -5.243330001831055
    8. ' ' → logprob: -5.493330001831055
    9. 's' → logprob: -5.493330001831055
    10. 'return' → logprob: -5.868330001831055

Token 57: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.49897852540016174
    2. ' h' → logprob: -1.7489784955978394
    3. 'la' → logprob: -1.9989784955978394
    4. 'h' → logprob: -2.998978614807129
    5. 'le' → logprob: -4.748978614807129
    6. ' le' → logprob: -5.248978614807129
    7. 'l' → logprob: -5.498978614807129
    8. 'les' → logprob: -5.748978614807129
    9. ' les' → logprob: -5.998978614807129
    10. 'len' → logprob: -5.998978614807129

Token 58: ' logique' (ID: 115350)
  Prédit: ' dynamique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamique' → logprob: -1.1624680757522583
    2. ' logique' → logprob: -2.1624679565429688
    3. ' certaine' → logprob: -2.7874679565429688
    4. '   ' → logprob: -3.1624679565429688
    5. 'form' → logprob: -3.1624679565429688
    6. 'fonction' → logprob: -3.1624679565429688
    7. 'r' → logprob: -3.4124679565429688
    8. ' approche' → logprob: -3.4124679565429688
    9. ' formule' → logprob: -3.9124679565429688
    10. 's' → logprob: -3.9124679565429688

Token 59: ' dynamique' (ID: 98708)
  Prédit: ' donnée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' donnée' → logprob: -0.8587337136268616
    2. '   ' → logprob: -1.4837336540222168
    3. ' spécifique' → logprob: -2.733733654022217
    4. ' particulière' → logprob: -2.858733654022217
    5. ' des' → logprob: -3.108733654022217
    6. ' de' → logprob: -3.733733654022217
    7. '```' → logprob: -3.983733654022217
    8. 'def' → logprob: -4.233733654022217
    9. ' du' → logprob: -4.233733654022217
    10. ' précise' → logprob: -4.608733654022217

Token 60: ' basée' (ID: 153941)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20846772193908691
    2. ' de' → logprob: -2.708467721939087
    3. '"""
' → logprob: -3.458467721939087
    4. ' ' → logprob: -3.833467721939087
    5. '.' → logprob: -4.583467483520508
    6. 'de' → logprob: -4.583467483520508
    7. '    ' → logprob: -4.708467483520508
    8. '```' → logprob: -4.958467483520508
    9. '       ' → logprob: -5.458467483520508
    10. '  ' → logprob: -5.583467483520508

Token 61: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.16861161589622498
    2. 'sur' → logprob: -1.9186116456985474
    3. '_sur' → logprob: -5.293611526489258
    4. '   ' → logprob: -6.043611526489258
    5. 'def' → logprob: -7.918611526489258
    6. 's' → logprob: -8.293611526489258
    7. '  ' → logprob: -9.418611526489258
    8. ')' → logprob: -10.293611526489258
    9. 'import' → logprob: -10.668611526489258
    10. '_' → logprob: -10.668611526489258

Token 62: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6437928080558777
    2. ' h' → logprob: -0.8937928080558777
    3. ' la' → logprob: -3.0187928676605225
    4. ' les' → logprob: -5.643792629241943
    5. 'la' → logprob: -5.768792629241943
    6. 'len' → logprob: -5.893792629241943
    7. ' len' → logprob: -6.143792629241943
    8. 'les' → logprob: -6.143792629241943
    9. 'l' → logprob: -7.143792629241943
    10. ' le' → logprob: -7.143792629241943

Token 63: ' liste' (ID: 31719)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.004417061805725
    2. ' h' → logprob: -1.254417061805725
    3. ' hauteur' → logprob: -2.2544169425964355
    4. ' longueur' → logprob: -2.6294169425964355
    5. 'r' → logprob: -3.5044169425964355
    6. ' taille' → logprob: -3.7544169425964355
    7. ' dp' → logprob: -4.3794169425964355
    8. 'dp' → logprob: -4.5044169425964355
    9. 's' → logprob: -4.7544169425964355
    10. ' somme' → logprob: -4.7544169425964355

Token 64: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1167932078242302
    2. ' de' → logprob: -2.616793155670166
    3. '(h' → logprob: -4.491793155670166
    4. ' h' → logprob: -4.991793155670166
    5. ' d' → logprob: -5.866793155670166
    6. 'def' → logprob: -5.991793155670166
    7. '```' → logprob: -6.241793155670166
    8. 'h' → logprob: -6.616793155670166
    9. '[h' → logprob: -6.616793155670166
    10. '   ' → logprob: -6.741793155670166

Token 65: ' haute' (ID: 49646)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2568452060222626
    2. ' h' → logprob: -1.756845235824585
    3. 'ha' → logprob: -3.131845235824585
    4. ' heights' → logprob: -4.756844997406006
    5. ' haute' → logprob: -7.881844997406006
    6. ' ha' → logprob: -8.006845474243164
    7. 'H' → logprob: -8.006845474243164
    8. 'he' → logprob: -8.881845474243164
    9. ' hauteur' → logprob: -9.256845474243164
    10. ' H' → logprob: -9.756845474243164

Token 66: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.029253952205181122
    2. 'ur' → logprob: -3.9042539596557617
    3. 'teurs' → logprob: -6.029253959655762
    4. 't' → logprob: -6.779253959655762
    5. 'uteurs' → logprob: -7.029253959655762
    6. '```' → logprob: -7.029253959655762
    7. 'eurs' → logprob: -7.154253959655762
    8. 'r' → logprob: -7.404253959655762
    9. 's' → logprob: -7.779253959655762
    10. 'urt' → logprob: -8.029253959655762

Token 67: ' `' (ID: 2700)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43493473529815674
    2. '):' → logprob: -1.1849347352981567
    3. ')' → logprob: -3.809934616088867
    4. ':' → logprob: -4.809934616088867
    5. ' :' → logprob: -5.559934616088867
    6. ',' → logprob: -5.684934616088867
    7. '):
' → logprob: -6.434934616088867
    8. ' ):' → logprob: -6.434934616088867
    9. '(h' → logprob: -6.434934616088867
    10. '.' → logprob: -7.184934616088867

Token 68: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06247343495488167
    2. ' h' → logprob: -2.8124735355377197
    3. '`' → logprob: -7.687473297119141
    4. '   ' → logprob: -11.31247329711914
    5. ')' → logprob: -11.31247329711914
    6. ' `' → logprob: -11.93747329711914
    7. '`)' → logprob: -12.06247329711914
    8. ')`' → logprob: -12.93747329711914
    9. '```' → logprob: -13.18747329711914
    10. ' heights' → logprob: -13.81247329711914

Token 69: '`.
' (ID: 36060)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -0.19655334949493408
    2. ')`' → logprob: -2.0715532302856445
    3. '`)' → logprob: -3.8215532302856445
    4. ')' → logprob: -4.1965532302856445
    5. '`:' → logprob: -5.1965532302856445
    6. '):' → logprob: -5.3215532302856445
    7. '   ' → logprob: -5.9465532302856445
    8. '):
' → logprob: -7.5715532302856445
    9. '`.' → logprob: -7.6965532302856445
    10. '`
' → logprob: -7.6965532302856445

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012433484196662903
    2. '```' → logprob: -4.8874335289001465
    3. '"""' → logprob: -6.6374335289001465
    4. 'n' → logprob: -7.0124335289001465
    5. '    
' → logprob: -7.1374335289001465
    6. '"""
' → logprob: -7.5124335289001465
    7. ')' → logprob: -7.6374335289001465
    8. '    ' → logprob: -8.762433052062988
    9. '
' → logprob: -8.887433052062988
    10. '``' → logprob: -8.887433052062988

Token 71: ' Les' (ID: 7029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19677318632602692
    2. 'dp' → logprob: -1.9467731714248657
    3. ' dp' → logprob: -4.196773052215576
    4. 'n' → logprob: -4.321773052215576
    5. '    
' → logprob: -6.071773052215576
    6. '```' → logprob: -6.446773052215576
    7. ' n' → logprob: -6.696773052215576
    8. '
' → logprob: -6.946773052215576
    9. '   
' → logprob: -8.571773529052734
    10. '    ' → logprob: -8.571773529052734

Token 72: ' différentes' (ID: 41398)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4432954788208008
    2. 'dp' → logprob: -1.1932954788208008
    3. ' n' → logprob: -3.693295478820801
    4. ' res' → logprob: -4.818295478820801
    5. 'n' → logprob: -5.068295478820801
    6. ' max' → logprob: -6.068295478820801
    7. ' val' → logprob: -6.568295478820801
    8. ' result' → logprob: -6.693295478820801
    9. 'res' → logprob: -6.943295478820801
    10. 'max' → logprob: -6.943295478820801

Token 73: ' parties' (ID: 13531)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.5343979597091675
    2. 's' → logprob: -2.034398078918457
    3. 'dp' → logprob: -2.159398078918457
    4. 'long' → logprob: -2.284398078918457
    5. 'ét' → logprob: -2.659398078918457
    6. ' étapes' → logprob: -2.659398078918457
    7. '#' → logprob: -2.909398078918457
    8. '   ' → logprob: -3.034398078918457
    9. 'n' → logprob: -3.659398078918457
    10. ' longue' → logprob: -4.034398078918457

Token 74: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9577359557151794
    2. ' de' → logprob: -1.0827360153198242
    3. ' du' → logprob: -1.7077360153198242
    4. 'de' → logprob: -3.707736015319824
    5. '  ' → logprob: -4.082736015319824
    6. 'du' → logprob: -4.332736015319824
    7. '"""' → logprob: -4.457736015319824
    8. 's' → logprob: -5.207736015319824
    9. '    ' → logprob: -5.332736015319824
    10. ')' → logprob: -5.332736015319824

Token 75: ' calcul' (ID: 7559)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.6522879004478455
    2. 'fonction' → logprob: -0.9022879004478455
    3. ' code' → logprob: -3.6522879600524902
    4. 'doc' → logprob: -3.9022879600524902
    5. 'comment' → logprob: -4.02728796005249
    6. 'calcul' → logprob: -6.40228796005249
    7. '```' → logprob: -6.65228796005249
    8. 'function' → logprob: -6.65228796005249
    9. ' fonction' → logprob: -7.02728796005249
    10. ' doc' → logprob: -7.52728796005249

Token 76: ' dé' (ID: 2393)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.55338054895401
    2. ' sont' → logprob: -1.8033804893493652
    3. '   ' → logprob: -2.9283804893493652
    4. ' s' → logprob: -3.0533804893493652
    5. ')' → logprob: -3.5533804893493652
    6. ':' → logprob: -4.178380489349365
    7. ' continu' → logprob: -4.178380489349365
    8. '```' → logprob: -4.553380489349365
    9. ' de' → logprob: -4.803380489349365
    10. ' =' → logprob: -5.053380489349365

Token 77: 'pendent' (ID: 61683)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0692111998796463
    2. 'fin' → logprob: -2.94421124458313
    3. 'pendent' → logprob: -4.444211006164551
    4. 'cr' → logprob: -7.694211006164551
    5. '```' → logprob: -7.694211006164551
    6. '``' → logprob: -8.44421100616455
    7. 'for' → logprob: -8.69421100616455
    8. 'velop' → logprob: -8.69421100616455
    9. 'termin' → logprob: -8.81921100616455
    10. 'pend' → logprob: -9.19421100616455

Token 78: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9705572724342346
    2. ' des' → logprob: -0.9705572724342346
    3. ' du' → logprob: -1.4705572128295898
    4. 'des' → logprob: -6.09555721282959
    5. 'du' → logprob: -6.09555721282959
    6. '   ' → logprob: -6.34555721282959
    7. 'de' → logprob: -6.59555721282959
    8. '```' → logprob: -6.59555721282959
    9. '    ' → logprob: -7.34555721282959
    10. 's' → logprob: -7.47055721282959

Token 79: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2428303062915802
    2. 'la' → logprob: -2.492830276489258
    3. 'len' → logprob: -3.242830276489258
    4. ' h' → logprob: -3.367830276489258
    5. ' len' → logprob: -3.867830276489258
    6. 'h' → logprob: -4.242830276489258
    7. 'l' → logprob: -4.242830276489258
    8. ' l' → logprob: -4.867830276489258
    9. ' ' → logprob: -7.867830276489258
    10. ' H' → logprob: -8.117830276489258

Token 80: ' configuration' (ID: 12282)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -1.167189359664917
    2. 'len' → logprob: -1.417189359664917
    3. 'tail' → logprob: -1.792189359664917
    4. ' h' → logprob: -2.667189359664917
    5. ' longueur' → logprob: -2.667189359664917
    6. 'h' → logprob: -2.792189359664917
    7. ' len' → logprob: -4.542189598083496
    8. 'mod' → logprob: -4.792189598083496
    9. ' taille' → logprob: -5.042189598083496
    10. ' long' → logprob: -5.042189598083496

Token 81: ' locale' (ID: 28442)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.09092023968696594
    2. ' de' → logprob: -2.7159202098846436
    3. 'des' → logprob: -4.965920448303223
    4. ')' → logprob: -5.715920448303223
    5. ' du' → logprob: -5.965920448303223
    6. 'de' → logprob: -6.340920448303223
    7. '<|end|>' → logprob: -6.590920448303223
    8. 's' → logprob: -6.715920448303223
    9. ' )' → logprob: -6.840920448303223
    10. '   ' → logprob: -7.715920448303223

Token 82: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4342576563358307
    2. ' de' → logprob: -1.3092576265335083
    3. 'de' → logprob: -3.809257745742798
    4. ')' → logprob: -4.184257507324219
    5. ' du' → logprob: -4.434257507324219
    6. 'des' → logprob: -4.934257507324219
    7. ',' → logprob: -5.184257507324219
    8. '   ' → logprob: -5.309257507324219
    9. ' et' → logprob: -5.559257507324219
    10. ' ' → logprob: -5.934257507324219

Token 83: ' haute' (ID: 49646)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.15176264941692352
    2. 'élé' → logprob: -2.9017627239227295
    3. ' haute' → logprob: -3.6517627239227295
    4. ' éléments' → logprob: -4.02676248550415
    5. 'h' → logprob: -4.27676248550415
    6. ' h' → logprob: -4.65176248550415
    7. ' valeurs' → logprob: -5.27676248550415
    8. 'val' → logprob: -5.77676248550415
    9. ' bar' → logprob: -6.77676248550415
    10. ' ha' → logprob: -6.90176248550415

Token 84: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.009187625721096992
    2. '```' → logprob: -5.134187698364258
    3. '#' → logprob: -7.259187698364258
    4. 'uts' → logprob: -7.509187698364258
    5. 'teurs' → logprob: -8.009187698364258
    6. '>' → logprob: -8.384187698364258
    7. 'ur' → logprob: -8.634187698364258
    8. 'ts' → logprob: -9.009187698364258
    9. 't' → logprob: -9.134187698364258
    10. '}' → logprob: -9.634187698364258

Token 85: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8851709961891174
    2. '):' → logprob: -1.0101709365844727
    3. ')' → logprob: -3.0101709365844727
    4. '):
' → logprob: -3.0101709365844727
    5. ' ):' → logprob: -3.2601709365844727
    6. ',' → logprob: -3.6351709365844727
    7. ' ,' → logprob: -4.135170936584473
    8. '.' → logprob: -4.760170936584473
    9. ' )' → logprob: -4.760170936584473
    10. ' ):
' → logprob: -4.885170936584473

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026256293058395386
    2. ')' → logprob: -3.9012563228607178
    3. 'n' → logprob: -5.901256084442139
    4. '
' → logprob: -6.776256084442139
    5. '```' → logprob: -7.026256084442139
    6. '    
' → logprob: -8.276256561279297
    7. ' ' → logprob: -8.901256561279297
    8. ' n' → logprob: -9.026256561279297
    9. '    ' → logprob: -9.401256561279297
    10. '  ' → logprob: -9.651256561279297

Token 87: ' Args' (ID: 39185)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19295383989810944
    2. ' dp' → logprob: -2.4429538249969482
    3. ' res' → logprob: -3.0679538249969482
    4. '   ' → logprob: -3.9429538249969482
    5. 'n' → logprob: -4.567954063415527
    6. 'res' → logprob: -5.067954063415527
    7. 'result' → logprob: -6.067954063415527
    8. ' result' → logprob: -6.442954063415527
    9. ' n' → logprob: -6.692954063415527
    10. 'f' → logprob: -8.817954063415527

Token 88: ':
' (ID: 734)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2553996443748474
    2. ':' → logprob: -2.755399703979492
    3. '(h' → logprob: -3.005399703979492
    4. '):
' → logprob: -3.130399703979492
    5. ')' → logprob: -3.380399703979492
    6. ' (' → logprob: -4.255399703979492
    7. '   ' → logprob: -4.505399703979492
    8. '(n' → logprob: -6.005399703979492
    9. ',' → logprob: -6.005399703979492
    10. ' :' → logprob: -6.130399703979492

Token 89: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22946159541606903
    2. ' h' → logprob: -1.7294615507125854
    3. 'h' → logprob: -4.229461669921875
    4. '    ' → logprob: -4.979461669921875
    5. ' self' → logprob: -6.229461669921875
    6. 'n' → logprob: -6.979461669921875
    7. '```' → logprob: -7.229461669921875
    8. ')' → logprob: -7.479461669921875
    9. ' n' → logprob: -7.479461669921875
    10. 'self' → logprob: -7.604461669921875

Token 90: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.0383429117500782
    2. ' h' → logprob: -3.2883429527282715
    3. '   ' → logprob: -8.413342475891113
    4. 'self' → logprob: -10.788342475891113
    5. 'list' → logprob: -11.038342475891113
    6. '```' → logprob: -11.038342475891113
    7. ' list' → logprob: -11.913342475891113
    8. ' self' → logprob: -12.413342475891113
    9. 'List' → logprob: -12.538342475891113
    10. '`' → logprob: -13.163342475891113

Token 91: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011828724294900894
    2. ':' → logprob: -4.636828899383545
    3. ' ):' → logprob: -6.761828899383545
    4. '):
' → logprob: -7.636828899383545
    5. ')' → logprob: -8.386828422546387
    6. ' :' → logprob: -8.761828422546387
    7. '   ' → logprob: -11.136828422546387
    8. ':list' → logprob: -11.636828422546387
    9. '[]):' → logprob: -12.511828422546387
    10. '[' → logprob: -12.886828422546387

Token 92: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.31467312574386597
    2. 'list' → logprob: -1.3146731853485107
    3. '   ' → logprob: -7.314672946929932
    4. ' list' → logprob: -8.06467342376709
    5. ' List' → logprob: -8.31467342376709
    6. '[List' → logprob: -9.18967342376709
    7. ')' → logprob: -10.43967342376709
    8. ':list' → logprob: -11.06467342376709
    9. '_list' → logprob: -11.31467342376709
    10. '```' → logprob: -11.81467342376709

Token 93: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.006006828509271e-05
    2. '<int' → logprob: -10.500080108642578
    3. '[' → logprob: -10.875080108642578
    4. '[List' → logprob: -11.250080108642578
    5. 'int' → logprob: -12.125080108642578
    6. '):' → logprob: -12.250080108642578
    7. '(int' → logprob: -12.375080108642578
    8. ')' → logprob: -13.125080108642578
    9. '```' → logprob: -13.625080108642578
    10. '[Int' → logprob: -14.125080108642578

Token 94: ']):' (ID: 60705)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6976184248924255
    2. ']):' → logprob: -0.6976184248924255
    3. ')' → logprob: -5.94761848449707
    4. ']' → logprob: -7.44761848449707
    5. ']):
' → logprob: -8.07261848449707
    6. '[int' → logprob: -8.32261848449707
    7. '):' → logprob: -8.82261848449707
    8. '   ' → logprob: -9.32261848449707
    9. ')]' → logprob: -9.44761848449707
    10. '```' → logprob: -9.69761848449707

Token 95: ' Liste' (ID: 61030)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9090411067008972
    2. '   ' → logprob: -1.034041166305542
    3. 'List' → logprob: -2.159041166305542
    4. '       ' → logprob: -2.284041166305542
    5. ' List' → logprob: -4.659040927886963
    6. '):' → logprob: -5.784040927886963
    7. ' list' → logprob: -6.159040927886963
    8. 'int' → logprob: -6.284040927886963
    9. ' )' → logprob: -6.659040927886963
    10. '):
' → logprob: -7.034040927886963

Token 96: ' des' (ID: 731)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0018846115563064814
    2. ' des' → logprob: -6.876884460449219
    3. '<int' → logprob: -7.876884460449219
    4. ')' → logprob: -8.251884460449219
    5. '   ' → logprob: -9.501884460449219
    6. '[' → logprob: -10.376884460449219
    7. '```' → logprob: -10.626884460449219
    8. ' d' → logprob: -11.251884460449219
    9. '<|end|>' → logprob: -11.376884460449219
    10. '       ' → logprob: -11.376884460449219

Token 97: ' haute' (ID: 49646)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.08204472810029984
    2. 'ent' → logprob: -3.332044839859009
    3. 'int' → logprob: -3.582044839859009
    4. ' haute' → logprob: -4.45704460144043
    5. ' ent' → logprob: -7.20704460144043
    6. 'h' → logprob: -7.33204460144043
    7. 'inte' → logprob: -8.08204460144043
    8. 'n' → logprob: -8.20704460144043
    9. 'he' → logprob: -8.45704460144043
    10. '   ' → logprob: -8.58204460144043

Token 98: 'urs' (ID: 1628)
  Prédit: 'ights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.15726163983345032
    2. 'ints' → logprob: -2.657261610031128
    3. 'urs' → logprob: -3.532261610031128
    4. 'uteurs' → logprob: -4.157261848449707
    5. 'uts' → logprob: -5.407261848449707
    6. 'igts' → logprob: -5.657261848449707
    7. '```' → logprob: -5.907261848449707
    8. 'ures' → logprob: -6.157261848449707
    9. 'urts' → logprob: -6.157261848449707
    10. 'ur' → logprob: -6.282261848449707

Token 99: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8233264684677124
    2. '):
' → logprob: -1.4483264684677124
    3. '   ' → logprob: -1.6983264684677124
    4. '):' → logprob: -1.9483264684677124
    5. '):
' → logprob: -8.698326110839844
    6. ' )' → logprob: -9.073326110839844
    7. '```' → logprob: -9.448326110839844
    8. '
' → logprob: -10.073326110839844
    9. ' ):
' → logprob: -10.323326110839844
    10. ' ):' → logprob: -10.573326110839844

Token 100: 's' (ID: 82)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.26591548323631287
    2. ')' → logprob: -1.6409155130386353
    3. ']):' → logprob: -4.015915393829346
    4. '   ' → logprob: -4.515915393829346
    5. 'int' → logprob: -5.765915393829346
    6. '[int' → logprob: -6.265915393829346
    7. ' ])' → logprob: -6.890915393829346
    8. ']' → logprob: -7.015915393829346
    9. ')])' → logprob: -7.140915393829346
    10. ']):
' → logprob: -7.640915393829346

Token 101: 'ous' (ID: 784)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.44974443316459656
    2. '])' → logprob: -2.199744462966919
    3. 'ize' → logprob: -2.699744462966919
    4. 'izes' → logprob: -3.324744462966919
    5. '   ' → logprob: -3.449744462966919
    6. 'i' → logprob: -4.19974422454834
    7. 'ans' → logprob: -4.57474422454834
    8. 'paces' → logprob: -4.82474422454834
    9. '```' → logprob: -4.94974422454834
    10. '[' → logprob: -5.44974422454834

Token 102: '-l' (ID: 2887)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.828384518623352
    2. '   ' → logprob: -1.328384518623352
    3. '-list' → logprob: -2.5783843994140625
    4. '```' → logprob: -3.2033843994140625
    5. ')' → logprob: -3.3283843994140625
    6. ' forme' → logprob: -3.8283843994140625
    7. '-' → logprob: -4.0783843994140625
    8. '-l' → logprob: -4.3283843994140625
    9. '_list' → logprob: -4.3283843994140625
    10. 'la' → logprob: -4.8283843994140625

Token 103: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.9900045990943909
    2. 't' → logprob: -1.740004539489746
    3. 'ist' → logprob: -1.740004539489746
    4. 'a' → logprob: -3.115004539489746
    5. 'h' → logprob: -3.365004539489746
    6. 'igne' → logprob: -3.865004539489746
    7. 'ignes' → logprob: -3.990004539489746
    8. '```' → logprob: -4.115004539489746
    9. 'te' → logprob: -4.365004539489746
    10. 'q' → logprob: -4.365004539489746

Token 104: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48455458879470825
    2. '):
' → logprob: -1.6095545291900635
    3. '   ' → logprob: -2.4845545291900635
    4. '):' → logprob: -2.8595545291900635
    5. '[' → logprob: -4.109554767608643
    6. '```' → logprob: -4.984554767608643
    7. ')
' → logprob: -5.234554767608643
    8. '])' → logprob: -6.359554767608643
    9. '[n' → logprob: -6.609554767608643
    10. '       ' → logprob: -6.609554767608643

Token 105: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.40418100357055664
    2. ' h' → logprob: -1.9041810035705566
    3. 'int' → logprob: -2.6541810035705566
    4. ' la' → logprob: -3.0291810035705566
    5. ' int' → logprob: -3.9041810035705566
    6. 'H' → logprob: -3.9041810035705566
    7. 'la' → logprob: -4.654181003570557
    8. 'l' → logprob: -5.029181003570557
    9. ' H' → logprob: -6.404181003570557
    10. 'n' → logprob: -6.779181003570557

Token 106: ' liste' (ID: 31719)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1178698018193245
    2. ' h' → logprob: -3.3678698539733887
    3. ')' → logprob: -3.7428698539733887
    4. 'liste' → logprob: -4.867869853973389
    5. 'fonction' → logprob: -5.117869853973389
    6. 'mod' → logprob: -5.367869853973389
    7. 'ha' → logprob: -5.867869853973389
    8. '```' → logprob: -6.117869853973389
    9. 'n' → logprob: -6.242869853973389
    10. 'input' → logprob: -6.367869853973389

Token 107: ' globale' (ID: 87991)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6900334358215332
    2. ' h' → logprob: -0.8150334358215332
    3. ')' → logprob: -4.190033435821533
    4. ' `' → logprob: -4.315033435821533
    5. ' des' → logprob: -4.690033435821533
    6. '[int' → logprob: -5.690033435821533
    7. '   ' → logprob: -5.940033435821533
    8. ' de' → logprob: -6.315033435821533
    9. 'n' → logprob: -6.815033435821533
    10. ' n' → logprob: -6.940033435821533

Token 108: ' H' (ID: 487)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6545945405960083
    2. '])' → logprob: -1.1545945405960083
    3. 'h' → logprob: -2.2795944213867188
    4. ' h' → logprob: -4.279594421386719
    5. ' )' → logprob: -4.654594421386719
    6. '[int' → logprob: -4.779594421386719
    7. ' ])' → logprob: -5.279594421386719
    8. '   ' → logprob: -5.904594421386719
    9. '])
' → logprob: -6.154594421386719
    10. ')]' → logprob: -6.404594421386719

Token 109: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1269562542438507
    2. '))' → logprob: -2.6269562244415283
    3. '   ' → logprob: -4.126956462860107
    4. ')):
' → logprob: -4.251956462860107
    5. '):
' → logprob: -5.501956462860107
    6. ')):' → logprob: -6.251956462860107
    7. '):' → logprob: -6.501956462860107
    8. ')))' → logprob: -6.626956462860107
    9. '])' → logprob: -6.626956462860107
    10. ')])' → logprob: -6.751956462860107

Token 110: ' sans' (ID: 9828)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -1.0866724252700806
    2. '   ' → logprob: -1.5866724252700806
    3. '       ' → logprob: -2.961672306060791
    4. ')' → logprob: -2.961672306060791
    5. ' n' → logprob: -2.961672306060791
    6. '          ' → logprob: -3.086672306060791
    7. 'start' → logprob: -3.211672306060791
    8. '         ' → logprob: -3.586672306060791
    9. '           ' → logprob: -3.836672306060791
    10. '        ' → logprob: -3.836672306060791

Token 111: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.5307090282440186
    2. 'l' → logprob: -1.7807090282440186
    3. ' la' → logprob: -1.9057090282440186
    4. 'le' → logprob: -2.2807090282440186
    5. ' le' → logprob: -2.9057090282440186
    6. 'la' → logprob: -3.0307090282440186
    7. ' les' → logprob: -3.0307090282440186
    8. ' h' → logprob: -3.1557090282440186
    9. '[' → logprob: -3.4057090282440186
    10. 'les' → logprob: -3.5307090282440186

Token 112: ' '' (ID: 461)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -1.6266804933547974
    2. 'b' → logprob: -1.8766804933547974
    3. ' b' → logprob: -2.126680374145508
    4. ' ' → logprob: -2.626680374145508
    5. '0' → logprob: -2.626680374145508
    6. ' extr' → logprob: -3.126680374145508
    7. '1' → logprob: -3.251680374145508
    8. ')' → logprob: -3.626680374145508
    9. ' premiers' → logprob: -3.876680374145508
    10. ' indices' → logprob: -4.001680374145508

Token 113: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23450639843940735
    2. ' ' → logprob: -2.109506368637085
    3. '1' → logprob: -3.609506368637085
    4. '-' → logprob: -4.109506607055664
    5. '[' → logprob: -4.859506607055664
    6. 'h' → logprob: -5.109506607055664
    7. 'b' → logprob: -5.109506607055664
    8. 'ext' → logprob: -5.484506607055664
    9. 'mod' → logprob: -5.609506607055664
    10. 'prem' → logprob: -5.859506607055664

Token 114: '')' (ID: 1542)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -1.3164435625076294
    2. ''s' → logprob: -1.4414435625076294
    3. ''])' → logprob: -1.8164435625076294
    4. 's' → logprob: -1.9414435625076294
    5. '')' → logprob: -2.69144344329834
    6. ']' → logprob: -3.81644344329834
    7. ''' → logprob: -3.94144344329834
    8. '']' → logprob: -4.69144344329834
    9. ' ])' → logprob: -4.69144344329834
    10. ',' → logprob: -4.69144344329834

Token 115: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8839116096496582
    2. '   ' → logprob: -1.1339116096496582
    3. '):
' → logprob: -1.5089116096496582
    4. ')' → logprob: -3.133911609649658
    5. '```' → logprob: -9.2589111328125
    6. ')
' → logprob: -10.0089111328125
    7. '):
' → logprob: -10.5089111328125
    8. '
' → logprob: -10.7589111328125
    9. '    
' → logprob: -10.8839111328125
    10. ' ):' → logprob: -11.0089111328125

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005510380957275629
    2. ')' → logprob: -5.255510330200195
    3. 'n' → logprob: -8.880510330200195
    4. '    
' → logprob: -10.380510330200195
    5. '    ' → logprob: -10.630510330200195
    6. '
' → logprob: -11.005510330200195
    7. '```' → logprob: -11.130510330200195
    8. '"""' → logprob: -11.255510330200195
    9. ' 
' → logprob: -11.880510330200195
    10. ')
' → logprob: -12.255510330200195

Token 117: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2676188349723816
    2. 'dp' → logprob: -1.8926188945770264
    3. 'if' → logprob: -3.5176188945770264
    4. ' res' → logprob: -4.142618656158447
    5. 'res' → logprob: -4.392618656158447
    6. ' if' → logprob: -5.017618656158447
    7. ' dp' → logprob: -5.392618656158447
    8. 'n' → logprob: -5.392618656158447
    9. 'result' → logprob: -5.767618656158447
    10. 'ret' → logprob: -6.642618656158447

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03567507863044739
    2. ' :' → logprob: -3.535675048828125
    3. '   ' → logprob: -5.410675048828125
    4. '):' → logprob: -6.910675048828125
    5. ':
' → logprob: -8.785675048828125
    6. ')' → logprob: -9.160675048828125
    7. '    ' → logprob: -9.910675048828125
    8. ' :
' → logprob: -10.410675048828125
    9. ' ):' → logprob: -11.160675048828125
    10. ':int' → logprob: -11.285675048828125

Token 119: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036525383591651917
    2. '0' → logprob: -3.5365254878997803
    3. '"' → logprob: -6.286525249481201
    4. ')' → logprob: -6.536525249481201
    5. ' n' → logprob: -7.036525249481201
    6. ' len' → logprob: -7.661525249481201
    7. ' None' → logprob: -7.786525249481201
    8. 'n' → logprob: -7.911525249481201
    9. '       ' → logprob: -8.03652572631836
    10. ' ' → logprob: -8.53652572631836

Token 120: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.0003478593716863543
    2. ' int' → logprob: -8.000348091125488
    3. '   ' → logprob: -11.875348091125488
    4. 'List' → logprob: -12.875348091125488
    5. '(int' → logprob: -14.000348091125488
    6. '[int' → logprob: -14.250348091125488
    7. 'None' → logprob: -14.500348091125488
    8. '
' → logprob: -16.125347137451172
    9. 'float' → logprob: -16.125347137451172
    10. 'Int' → logprob: -16.250347137451172

Token 121: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11043007671833038
    2. '<|end|>' → logprob: -2.7354300022125244
    3. '):' → logprob: -3.6104300022125244
    4. ':
' → logprob: -5.3604302406311035
    5. ')' → logprob: -5.9854302406311035
    6. '   ' → logprob: -6.4854302406311035
    7. '
' → logprob: -7.1104302406311035
    8. '```' → logprob: -7.3604302406311035
    9. '):
' → logprob: -7.4854302406311035
    10. '<|end|>' → logprob: -7.6104302406311035

Token 122: ' Le' (ID: 2018)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.7713615298271179
    2. '0' → logprob: -1.1463615894317627
    3. ' max' → logprob: -2.8963615894317627
    4. '   ' → logprob: -3.1463615894317627
    5. ' result' → logprob: -3.5213615894317627
    6. ' ' → logprob: -4.146361351013184
    7. ' int' → logprob: -4.271361351013184
    8. ' n' → logprob: -4.396361351013184
    9. ' la' → logprob: -4.896361351013184
    10. ' La' → logprob: -4.896361351013184

Token 123: ' nombre' (ID: 9733)
  Prédit: ' résultat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.46768397092819214
    2. ' nombre' → logprob: -1.217684030532837
    3. '   ' → logprob: -3.592684030532837
    4. ' result' → logprob: -4.217683792114258
    5. 'rés' → logprob: -4.967683792114258
    6. ' resultat' → logprob: -4.967683792114258
    7. ' maximum' → logprob: -5.092683792114258
    8. 'e' → logprob: -5.467683792114258
    9. 'nombre' → logprob: -5.717683792114258
    10. ' max' → logprob: -5.967683792114258

Token 124: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0229445695877075
    2. ')' → logprob: -1.6479445695877075
    3. '(' → logprob: -2.022944450378418
    4. 'def' → logprob: -2.522944450378418
    5. ' =' → logprob: -3.147944450378418
    6. '   ' → logprob: -3.147944450378418
    7. '_s' → logprob: -4.022944450378418
    8. ']' → logprob: -4.397944450378418
    9. ' de' → logprob: -4.397944450378418
    10. '_total' → logprob: -4.397944450378418

Token 125: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.250813752412796
    2. ')' → logprob: -2.2508137226104736
    3. ' ' → logprob: -3.3758137226104736
    4. '(' → logprob: -4.500813961029053
    5. '   ' → logprob: -4.500813961029053
    6. ' )' → logprob: -4.500813961029053
    7. 'def' → logprob: -4.750813961029053
    8. 's' → logprob: -4.875813961029053
    9. '  ' → logprob: -5.375813961029053
    10. ' _' → logprob: -5.625813961029053

Token 126: ' façons' (ID: 165958)
  Prédit: ' façons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.03418464958667755
    2. ' ways' → logprob: -4.034184455871582
    3. ' man' → logprob: -4.784184455871582
    4. 'man' → logprob: -5.659184455871582
    5. 'ways' → logprob: -6.784184455871582
    6. ' configurations' → logprob: -7.159184455871582
    7. ' ' → logprob: -7.409184455871582
    8. '   ' → logprob: -8.409184455871582
    9. '```' → logprob: -8.534184455871582
    10. ' sequences' → logprob: -8.784184455871582

Token 127: ' possibles' (ID: 97753)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5346883535385132
    2. '   ' → logprob: -2.1596884727478027
    3. ' d' → logprob: -2.2846884727478027
    4. ')' → logprob: -2.4096884727478027
    5. ' ' → logprob: -2.4096884727478027
    6. 'de' → logprob: -5.409688472747803
    7. '  ' → logprob: -5.784688472747803
    8. '    ' → logprob: -6.034688472747803
    9. ' )' → logprob: -6.659688472747803
    10. ' to' → logprob: -6.784688472747803

Token 128: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062492698431015015
    2. ' de' → logprob: -3.312492609024048
    3. ' ' → logprob: -4.437492847442627
    4. ')' → logprob: -5.562492847442627
    5. '    ' → logprob: -6.437492847442627
    6. 'def' → logprob: -6.562492847442627
    7. ' d' → logprob: -6.687492847442627
    8. ':' → logprob: -7.062492847442627
    9. '  ' → logprob: -7.187492847442627
    10. '):' → logprob: -7.687492847442627

Token 129: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.025111135095357895
    2. ' h' → logprob: -4.775111198425293
    3. ' laquelle' → logprob: -5.650111198425293
    4. ' le' → logprob: -6.025111198425293
    5. ' mod' → logprob: -6.150111198425293
    6. 'mod' → logprob: -6.275111198425293
    7. '   ' → logprob: -6.900111198425293
    8. ' les' → logprob: -6.900111198425293
    9. ' len' → logprob: -7.025111198425293
    10. ' ' → logprob: -7.525111198425293

Token 130: ' règles' (ID: 67042)
  Prédit: ' conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.9526206851005554
    2. ' règles' → logprob: -1.0776207447052002
    3. 'conditions' → logprob: -2.9526207447052
    4. 'mod' → logprob: -3.2026207447052
    5. ' configurations' → logprob: -3.2026207447052
    6. ' critères' → logprob: -3.4526207447052
    7. '   ' → logprob: -3.7026207447052
    8. ' différentes' → logprob: -4.202620506286621
    9. ' comb' → logprob: -4.702620506286621
    10. ' contraintes' → logprob: -4.702620506286621

Token 131: ' données' (ID: 30580)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6348291039466858
    2. '   ' → logprob: -0.8848291039466858
    3. ' de' → logprob: -3.509829044342041
    4. '.' → logprob: -4.509829044342041
    5. ' )' → logprob: -6.009829044342041
    6. ' d' → logprob: -6.384829044342041
    7. '    ' → logprob: -6.384829044342041
    8. '  ' → logprob: -6.634829044342041
    9. 'def' → logprob: -6.634829044342041
    10. '):' → logprob: -6.759829044342041

Token 132: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6262117624282837
    2. '   ' → logprob: -1.2512117624282837
    3. '):' → logprob: -1.7512117624282837
    4. '):
' → logprob: -5.251211643218994
    5. ')
' → logprob: -8.751212120056152
    6. ' )' → logprob: -9.501212120056152
    7. '```' → logprob: -10.251212120056152
    8. 'def' → logprob: -10.376212120056152
    9. '
' → logprob: -10.376212120056152
    10. '    ' → logprob: -11.376212120056152

Token 133: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02180321328341961
    2. ')' → logprob: -4.771803379058838
    3. ' 
' → logprob: -5.646803379058838
    4. '    ' → logprob: -6.146803379058838
    5. ' mod' → logprob: -6.396803379058838
    6. ' )' → logprob: -7.396803379058838
    7. '    
' → logprob: -7.396803379058838
    8. '       ' → logprob: -7.521803379058838
    9. '
' → logprob: -7.521803379058838
    10. '```' → logprob: -7.521803379058838

Token 134: ' `' (ID: 2700)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.018257873132824898
    2. 'mod' → logprob: -4.018258094787598
    3. '(mod' → logprob: -9.143258094787598
    4. '10' → logprob: -14.893258094787598
    5. '	mod' → logprob: -15.643258094787598
    6. ' ' → logprob: -16.39325714111328
    7. ' modulo' → logprob: -16.51825714111328
    8. '```' → logprob: -16.51825714111328
    9. ' modu' → logprob: -17.01825714111328
    10. ' (' → logprob: -17.01825714111328

Token 135: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07889165729284286
    2. ' mod' → logprob: -2.5788917541503906
    3. '10' → logprob: -13.57889175415039
    4. '(mod' → logprob: -14.45389175415039
    5. '	mod' → logprob: -17.82889175415039
    6. ' ' → logprob: -19.32889175415039
    7. '_mod' → logprob: -19.70389175415039
    8. ' мод' → logprob: -19.82889175415039
    9. '100' → logprob: -20.32889175415039
    10. 'MOD' → logprob: -20.82889175415039

Token 136: '`.
' (ID: 36060)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31702572107315063
    2. ')`' → logprob: -1.3170256614685059
    3. '):' → logprob: -6.192025661468506
    4. '))' → logprob: -7.192025661468506
    5. '):
' → logprob: -7.942025661468506
    6. ')
' → logprob: -8.192026138305664
    7. '`)' → logprob: -8.942026138305664
    8. ')`
' → logprob: -9.567026138305664
    9. ' )' → logprob: -9.817026138305664
    10. ')**' → logprob: -10.817026138305664

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02070082537829876
    2. ')' → logprob: -4.020700931549072
    3. '):' → logprob: -6.395700931549072
    4. '"""' → logprob: -7.520700931549072
    5. '```' → logprob: -9.270700454711914
    6. '    
' → logprob: -9.270700454711914
    7. '
' → logprob: -10.020700454711914
    8. '):
' → logprob: -10.395700454711914
    9. ':' → logprob: -10.645700454711914
    10. '  
' → logprob: -11.520700454711914

Token 138: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15151965618133545
    2. '
' → logprob: -2.526519775390625
    3. ')' → logprob: -4.151519775390625
    4. '```' → logprob: -4.401519775390625
    5. '"""' → logprob: -4.651519775390625
    6. '):' → logprob: -4.651519775390625
    7. '    
' → logprob: -5.276519775390625
    8. '):
' → logprob: -5.776519775390625
    9. '  
' → logprob: -6.401519775390625
    10. '"""
' (adapté à ' """
') → logprob: -6.901519775390625

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32772132754325867
    2. 'dp' → logprob: -1.452721357345581
    3. 'if' → logprob: -3.327721357345581
    4. ' if' → logprob: -5.077721118927002
    5. ' dp' → logprob: -5.952721118927002
    6. 'n' → logprob: -8.20272159576416
    7. 'm' → logprob: -8.82772159576416
    8. 'from' → logprob: -9.07772159576416
    9. 'f' → logprob: -9.45272159576416
    10. 'length' → logprob: -10.20272159576416

Token 140: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08891395479440689
    2. 'if' (adapté à ' if') → logprob: -2.838913917541504
    3. 'm' → logprob: -4.338913917541504
    4. 'from' → logprob: -5.213913917541504
    5. 'f' → logprob: -5.463913917541504
    6. 'length' → logprob: -7.463913917541504
    7. 'res' → logprob: -7.713913917541504
    8. '   ' → logprob: -8.088913917541504
    9. 'd' → logprob: -8.463913917541504
    10. 'memo' → logprob: -8.463913917541504

Token 141: ' not' (ID: 625)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.14086098968982697
    2. ' not' → logprob: -2.2658610343933105
    3. 'len' → logprob: -3.6408610343933105
    4. 'not' → logprob: -7.1408610343933105
    5. ' n' → logprob: -8.265860557556152
    6. ' h' → logprob: -8.890860557556152
    7. ' ' → logprob: -9.140860557556152
    8. 'n' → logprob: -9.890860557556152
    9. '(len' → logprob: -10.765860557556152
    10. 'h' → logprob: -11.015860557556152

Token 142: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.28115755319595337
    2. 'h' → logprob: -1.4061574935913086
    3. '   ' → logprob: -13.156157493591309
    4. '(h' → logprob: -14.031157493591309
    5. '	h' → logprob: -14.156157493591309
    6. 'len' → logprob: -14.406157493591309
    7. ' ' → logprob: -14.531157493591309
    8. ' ' → logprob: -14.593657493591309
    9. '
' → logprob: -15.031157493591309
    10. '[h' → logprob: -15.031157493591309

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00606187479570508
    2. ':
' → logprob: -5.131062030792236
    3. ':return' → logprob: -9.131061553955078
    4. '[' → logprob: -11.631061553955078
    5. ' or' → logprob: -12.006061553955078
    6. ' :' → logprob: -12.256061553955078
    7. '   ' → logprob: -12.631061553955078
    8. '):' → logprob: -14.381061553955078
    9. 'return' → logprob: -15.756061553955078
    10. '=' → logprob: -15.881061553955078

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016316171968355775
    2. ':' → logprob: -6.626631736755371
    3. '   ' → logprob: -8.501631736755371
    4. 'return' → logprob: -10.126631736755371
    5. ':
' → logprob: -10.501631736755371
    6. ' return' → logprob: -11.126631736755371
    7. ':return' → logprob: -11.751631736755371
    8. '0' → logprob: -12.376631736755371
    9. '      ' → logprob: -13.376631736755371
    10. ' :' → logprob: -14.001631736755371

Token 145: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009641814976930618
    2. ' return' → logprob: -5.259641647338867
    3. '   ' → logprob: -5.509641647338867
    4. '       ' → logprob: -8.009641647338867
    5. '
' → logprob: -11.259641647338867
    6. '0' → logprob: -13.134641647338867
    7. '1' → logprob: -14.009641647338867
    8. '	return' → logprob: -14.134641647338867
    9. '    ' → logprob: -15.009641647338867
    10. 'eturn' → logprob: -15.134641647338867

Token 146: ' Cas' (ID: 8066)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0017307489179074764
    2. ' return' → logprob: -6.376730918884277
    3. '   ' → logprob: -10.501730918884277
    4. '	return' → logprob: -15.126730918884277
    5. 'ret' → logprob: -15.376730918884277
    6. ' ' → logprob: -16.00172996520996
    7. 'eturn' → logprob: -16.25172996520996
    8. '       ' → logprob: -16.37672996520996
    9. '#' → logprob: -16.62672996520996
    10. 'Return' → logprob: -16.87672996520996

Token 147: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8614444136619568
    2. '0' → logprob: -1.1114444732666016
    3. '1' → logprob: -2.4864444732666016
    4. 'return' → logprob: -2.6114444732666016
    5. '       ' → logprob: -3.1114444732666016
    6. ' return' → logprob: -3.6114444732666016
    7. ' ' → logprob: -3.9864444732666016
    8. ':' → logprob: -7.861444473266602
    9. ':return' → logprob: -8.111444473266602
    10. '    ' → logprob: -8.361444473266602

Token 148: ' base' (ID: 3611)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03723347187042236
    2. '1' → logprob: -3.912233352661133
    3. ' ' → logprob: -4.662233352661133
    4. 'return' → logprob: -5.037233352661133
    5. ' return' → logprob: -7.537233352661133
    6. '```' → logprob: -11.037233352661133
    7. 'n' → logprob: -11.162233352661133
    8. '[]' → logprob: -11.412233352661133
    9. ' retour' → logprob: -11.662233352661133
    10. 'base' → logprob: -12.287233352661133

Token 149: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0864180475473404
    2. '   ' → logprob: -2.9614181518554688
    3. 'return' → logprob: -3.8364181518554688
    4. ' return' → logprob: -4.836418151855469
    5. ':' → logprob: -7.461418151855469
    6. '
' → logprob: -8.211418151855469
    7. '0' → logprob: -8.461418151855469
    8. ':return' → logprob: -8.586418151855469
    9. ':
' → logprob: -9.961418151855469
    10. '        
' → logprob: -10.086418151855469

Token 150: ' Une' (ID: 19758)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4151107668876648
    2. ' return' → logprob: -1.4151108264923096
    3. '   ' → logprob: -2.4151108264923096
    4. '       ' → logprob: -4.9151105880737305
    5. '    ' → logprob: -9.54011058807373
    6. '	return' → logprob: -10.66511058807373
    7. '
' → logprob: -11.91511058807373
    8. '0' → logprob: -12.04011058807373
    9. '```' → logprob: -12.29011058807373
    10. ' ' → logprob: -12.54011058807373

Token 151: ' sé' (ID: 7462)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.887678861618042
    2. 'return' → logprob: -0.887678861618042
    3. '1' → logprob: -2.637678861618042
    4. '   ' → logprob: -3.262678861618042
    5. '0' → logprob: -4.137679100036621
    6. ' seule' → logprob: -4.512679100036621
    7. ' valeur' → logprob: -4.637679100036621
    8. 'ret' → logprob: -5.262679100036621
    9. 'fois' → logprob: -5.887679100036621
    10. ' ' → logprob: -6.012679100036621

Token 152: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.28116801381111145
    2. 'return' → logprob: -2.531167984008789
    3. 'r' → logprob: -2.781167984008789
    4. 'rie' → logprob: -3.281167984008789
    5. '   ' → logprob: -3.906167984008789
    6. 'lection' → logprob: -3.906167984008789
    7. 'd' → logprob: -5.531167984008789
    8. 'ance' → logprob: -5.906167984008789
    9. 'paration' → logprob: -6.406167984008789
    10. 'u' → logprob: -6.781167984008789

Token 153: ' vide' (ID: 21835)
  Prédit: ' vide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vide' → logprob: -0.3676106333732605
    2. 'vide' → logprob: -1.4926106929779053
    3. ' de' → logprob: -2.9926106929779053
    4. '   ' → logprob: -4.617610454559326
    5. 'de' → logprob: -4.617610454559326
    6. '=' → logprob: -5.367610454559326
    7. ' =' → logprob: -5.492610454559326
    8. '[]' → logprob: -7.242610454559326
    9. '       ' → logprob: -7.242610454559326
    10. '[' → logprob: -7.992610454559326

Token 154: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6259961724281311
    2. '   ' → logprob: -1.2509961128234863
    3. '       ' → logprob: -2.2509961128234863
    4. ' return' → logprob: -2.6259961128234863
    5. ':return' → logprob: -7.750996112823486
    6. '
' → logprob: -8.125996589660645
    7. ':' → logprob: -8.125996589660645
    8. '    
' → logprob: -9.375996589660645
    9. '	return' → logprob: -9.750996589660645
    10. ':
' → logprob: -10.125996589660645

Token 155: ' une' (ID: 2463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2722029387950897
    2. ' ' → logprob: -1.522202968597412
    3. 'return' → logprob: -4.772202968597412
    4. ' return' → logprob: -5.272202968597412
    5. ' une' → logprob: -6.022202968597412
    6. '   ' → logprob: -6.522202968597412
    7. 'f' → logprob: -7.772202968597412
    8. 's' → logprob: -7.897202968597412
    9. ' exactement' → logprob: -7.897202968597412
    10. '0' → logprob: -8.397202491760254

Token 156: ' seule' (ID: 41983)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.7148513197898865
    2. 'val' → logprob: -1.4648513793945312
    3. 'man' → logprob: -1.9648513793945312
    4. 'fa' → logprob: -2.5898513793945312
    5. ' seule' → logprob: -3.8398513793945312
    6. ' valeur' → logprob: -3.9648513793945312
    7. ' façon' → logprob: -4.964851379394531
    8. '1' → logprob: -5.339851379394531
    9. 'value' → logprob: -5.464851379394531
    10. ' manière' → logprob: -6.089851379394531

Token 157: ' façon' (ID: 33381)
  Prédit: ' façon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façon' → logprob: -0.3106689453125
    2. ' manière' → logprob: -2.0606689453125
    3. '1' → logprob: -2.5606689453125
    4. 'fa' → logprob: -3.6856689453125
    5. '0' → logprob: -4.6856689453125
    6. ' possibilité' → logprob: -4.9356689453125
    7. 'man' → logprob: -5.3106689453125
    8. ' ' → logprob: -5.5606689453125
    9. '   ' → logprob: -6.0606689453125
    10. ' façons' → logprob: -6.0606689453125

Token 158: ' triv' (ID: 190102)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15442052483558655
    2. 'return' → logprob: -2.2794206142425537
    3. '       ' → logprob: -3.6544206142425537
    4. ' de' → logprob: -5.029420375823975
    5. ' return' → logprob: -5.654420375823975
    6. 'de' → logprob: -5.654420375823975
    7. ' ' → logprob: -8.029420852661133
    8. '0' → logprob: -8.779420852661133
    9. '_return' → logprob: -8.779420852661133
    10. '    ' → logprob: -9.029420852661133

Token 159: 'iale' (ID: 16193)
  Prédit: 'iale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iale' → logprob: -0.030484527349472046
    2. 'iv' → logprob: -3.905484437942505
    3. 'ale' → logprob: -4.655484676361084
    4. 'v' → logprob: -8.780484199523926
    5. 'ite' → logprob: -10.280484199523926
    6. 'iole' → logprob: -10.280484199523926
    7. 'ial' → logprob: -10.530484199523926
    8. 'ielle' → logprob: -11.030484199523926
    9. 'al' → logprob: -11.655484199523926
    10. 'r' → logprob: -11.780484199523926

Token 160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35571613907814026
    2. '   ' → logprob: -1.6057161092758179
    3. 'return' → logprob: -2.4807162284851074
    4. ' return' → logprob: -4.230716228485107
    5. '
' → logprob: -8.98071575164795
    6. '           ' → logprob: -9.85571575164795
    7. ':' → logprob: -10.48071575164795
    8. ':return' → logprob: -10.60571575164795
    9. '	return' → logprob: -10.85571575164795
    10. ' ' → logprob: -11.10571575164795

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5790954232215881
    2. '   ' → logprob: -0.8290954232215881
    3. ':' → logprob: -6.204095363616943
    4. 'return' → logprob: -7.204095363616943
    5. ' return' → logprob: -9.079095840454102
    6. ':
' → logprob: -9.454095840454102
    7. '        
' → logprob: -9.954095840454102
    8. '
' → logprob: -10.204095840454102
    9. ':return' → logprob: -10.454095840454102
    10. '    
' → logprob: -10.829095840454102

Token 162: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0003278368094470352
    2. ' return' → logprob: -8.500328063964844
    3. '   ' → logprob: -9.000328063964844
    4. '       ' → logprob: -15.000328063964844
    5. 'ret' → logprob: -15.250328063964844
    6. 'eturn' → logprob: -16.125328063964844
    7. '
' → logprob: -16.125328063964844
    8. ':return' → logprob: -17.125328063964844
    9. '```' → logprob: -17.375328063964844
    10. '    
' → logprob: -17.875328063964844

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.500028610229492
    4. '0' → logprob: -18.500028610229492
    5. '  ' → logprob: -20.250028610229492
    6. '```' → logprob: -20.250028610229492
    7. '
' → logprob: -20.500028610229492
    8. ' ' → logprob: -20.625028610229492
    9. '۱' → logprob: -21.000028610229492
    10. '    ' → logprob: -21.937528610229492

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '0' → logprob: -18.625
    4. '۱' → logprob: -20.75
    5. '```' → logprob: -21.375
    6. '１' → logprob: -22.0625
    7. '১' → logprob: -22.375
    8. '' → logprob: -22.5625
    9. '१' → logprob: -22.8125
    10. '(' → logprob: -23.1875

Token 165: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26111745834350586
    2. '    
' → logprob: -1.7611174583435059
    3. '
' → logprob: -3.261117458343506
    4. '  
' → logprob: -4.886117458343506
    5. '   
' → logprob: -5.511117458343506
    6. '\n' → logprob: -5.761117458343506
    7. ' 
' → logprob: -6.636117458343506
    8. '  ' → logprob: -7.136117458343506
    9. 'n' → logprob: -7.636117458343506
    10. '<|end|>' → logprob: -8.386117935180664

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08686710894107819
    2. '    
' → logprob: -2.711867094039917
    3. '\n' → logprob: -5.211867332458496
    4. '
' → logprob: -5.461867332458496
    5. '  
' → logprob: -5.711867332458496
    6. '   
' → logprob: -6.586867332458496
    7. ')' → logprob: -7.211867332458496
    8. ' 
' → logprob: -7.336867332458496
    9. '  ' → logprob: -8.586867332458496
    10. '```' → logprob: -8.961867332458496

Token 167: ' elif' (ID: 9497)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3625459671020508
    2. 'if' → logprob: -1.9875459671020508
    3. 'res' → logprob: -1.9875459671020508
    4. 'ways' → logprob: -5.237545967102051
    5. '   ' → logprob: -5.487545967102051
    6. 'ans' → logprob: -5.612545967102051
    7. 'result' → logprob: -6.112545967102051
    8. 'total' → logprob: -6.362545967102051
    9. 'cur' → logprob: -6.362545967102051
    10. 'elif' (adapté à ' elif') → logprob: -6.487545967102051

Token 168: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.31820395588874817
    2. ' h' → logprob: -1.6932039260864258
    3. 'len' → logprob: -2.568203926086426
    4. 'h' → logprob: -4.443203926086426
    5. ' all' → logprob: -9.193203926086426
    6. ' ' → logprob: -10.568203926086426
    7. '(len' → logprob: -11.818203926086426
    8. ' H' → logprob: -11.880703926086426
    9. 'all' → logprob: -11.880703926086426
    10. 'H' → logprob: -12.255703926086426

Token 169: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0004595055361278355
    2. '(' → logprob: -7.750459671020508
    3. ' (' → logprob: -10.500459671020508
    4. '(s' → logprob: -14.375459671020508
    5. '(H' → logprob: -15.875459671020508
    6. '(
' → logprob: -15.875459671020508
    7. ')' → logprob: -16.250459671020508
    8. 'h' → logprob: -16.500459671020508
    9. '(len' → logprob: -16.625459671020508
    10. '(n' → logprob: -17.125459671020508

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5886090397834778
    2. ' ==' → logprob: -1.463608980178833
    3. '==' → logprob: -1.588608980178833
    4. ')==' → logprob: -4.713609218597412
    5. '()==' → logprob: -9.213608741760254
    6. '()' → logprob: -9.338608741760254
    7. '[' → logprob: -10.088608741760254
    8. ' )' → logprob: -10.713608741760254
    9. '>' → logprob: -10.963608741760254
    10. ']==' → logprob: -11.213608741760254

Token 171: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.632683515548706
    2. ' ==' → logprob: -0.757683515548706
    3. '<=' → logprob: -10.132683753967285
    4. ' <=' → logprob: -11.007683753967285
    5. '<' → logprob: -12.132683753967285
    6. ' <' → logprob: -12.132683753967285
    7. '>=' → logprob: -12.257683753967285
    8. '=' → logprob: -13.382683753967285
    9. '()==' → logprob: -13.507683753967285
    10. '>' → logprob: -13.632683753967285

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014199352823197842
    2. ' ' → logprob: -4.389199256896973
    3. '2' → logprob: -6.389199256896973
    4. '3' → logprob: -12.264199256896973
    5. '0' → logprob: -12.764199256896973
    6. '   ' → logprob: -14.514199256896973
    7. '  ' → logprob: -14.514199256896973
    8. '(' → logprob: -17.01420021057129
    9. ' ' → logprob: -17.20170021057129
    10. '    ' → logprob: -17.82670021057129

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013357169227674603
    2. '2' → logprob: -6.626335620880127
    3. ' ' → logprob: -12.001336097717285
    4. '3' → logprob: -13.126336097717285
    5. '0' → logprob: -13.626336097717285
    6. '   ' → logprob: -15.751336097717285
    7. '
' → logprob: -16.50133514404297
    8. '```' → logprob: -16.68883514404297
    9. '(' → logprob: -17.06383514404297
    10. '=' → logprob: -17.62633514404297

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0105833038687706
    2. ':
' → logprob: -4.760583400726318
    3. '   ' → logprob: -6.760583400726318
    4. ' *' → logprob: -7.885583400726318
    5. ':return' → logprob: -8.76058292388916
    6. '*' → logprob: -9.26058292388916
    7. '[' → logprob: -9.51058292388916
    8. '       ' → logprob: -9.88558292388916
    9. ' :' → logprob: -11.26058292388916
    10. 'return' → logprob: -11.51058292388916

Token 175: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4844796061515808
    2. ':
' → logprob: -1.7344796657562256
    3. '       ' → logprob: -1.8594796657562256
    4. '   ' → logprob: -3.1094796657562256
    5. ' *' → logprob: -5.7344794273376465
    6. ' and' → logprob: -6.7344794273376465
    7. ':return' → logprob: -7.3594794273376465
    8. '*' → logprob: -7.7344794273376465
    9. ' :' → logprob: -8.359479904174805
    10. '):
' → logprob: -8.484479904174805

Token 176: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.506780743598938
    2. '   ' → logprob: -2.0067806243896484
    3. ' return' → logprob: -2.1317806243896484
    4. '
' → logprob: -2.5067806243896484
    5. '       ' → logprob: -3.6317806243896484
    6. ' if' → logprob: -4.756780624389648
    7. 'if' → logprob: -4.756780624389648
    8. '    
' → logprob: -5.006780624389648
    9. '1' → logprob: -5.256780624389648
    10. ' 
' → logprob: -5.756780624389648

Token 177: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2124161571264267
    2. ' return' → logprob: -2.337416172027588
    3. 'if' → logprob: -2.837416172027588
    4. ' if' → logprob: -3.337416172027588
    5. '1' → logprob: -7.837416172027588
    6. 'mod' → logprob: -9.58741569519043
    7. ' mod' → logprob: -9.96241569519043
    8. '   ' → logprob: -10.33741569519043
    9. 'h' → logprob: -10.33741569519043
    10. '0' → logprob: -10.46241569519043

Token 178: ' une' (ID: 2463)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.31334179639816284
    2. 'h' → logprob: -1.3133418560028076
    3. 'H' → logprob: -10.188342094421387
    4. ' ' → logprob: -11.688342094421387
    5. '(h' → logprob: -11.688342094421387
    6. ' mod' → logprob: -12.188342094421387
    7. ' H' → logprob: -12.438342094421387
    8. 'mod' → logprob: -12.563342094421387
    9. '1' → logprob: -13.063342094421387
    10. 'len' → logprob: -13.688342094421387

Token 179: ' seule' (ID: 41983)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.40709537267684937
    2. ' h' → logprob: -1.5320954322814941
    3. 'élé' → logprob: -2.907095432281494
    4. ' ' → logprob: -3.907095432281494
    5. ' valeur' → logprob: -4.532095432281494
    6. 'ha' → logprob: -5.407095432281494
    7. '[' → logprob: -5.907095432281494
    8. 'val' → logprob: -6.157095432281494
    9. 'se' → logprob: -6.282095432281494
    10. '0' → logprob: -6.657095432281494

Token 180: ' hauteur' (ID: 72987)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.17357054352760315
    2. ' valeur' → logprob: -3.0485706329345703
    3. 'ha' → logprob: -3.1735706329345703
    4. 'h' → logprob: -3.6735706329345703
    5. 'val' → logprob: -3.7985706329345703
    6. ' hauteur' → logprob: -4.79857063293457
    7. ' h' → logprob: -5.04857063293457
    8. 'element' → logprob: -6.54857063293457
    9. 'case' → logprob: -6.79857063293457
    10. ' élément' → logprob: -6.92357063293457

Token 181: ',' (ID: 11)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5248883962631226
    2. '==' → logprob: -0.8998883962631226
    3. '[' → logprob: -6.899888515472412
    4. '   ' → logprob: -8.024888038635254
    5. ':' → logprob: -9.399888038635254
    6. ' <=' → logprob: -9.774888038635254
    7. '>' → logprob: -10.024888038635254
    8. ' h' → logprob: -10.024888038635254
    9. 'h' → logprob: -10.274888038635254
    10. '<=' → logprob: -10.649888038635254

Token 182: ' le' (ID: 505)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2059928923845291
    2. ' return' → logprob: -1.7059929370880127
    3. '   ' → logprob: -5.455992698669434
    4. 'if' → logprob: -8.955992698669434
    5. ' if' → logprob: -8.955992698669434
    6. '#' → logprob: -10.955992698669434
    7. '       ' → logprob: -12.080992698669434
    8. '	return' → logprob: -12.830992698669434
    9. ' ' → logprob: -12.955992698669434
    10. 'mod' → logprob: -12.955992698669434

Token 183: ' résultat' (ID: 62556)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4519346058368683
    2. ' return' → logprob: -1.076934576034546
    3. 'h' → logprob: -4.701934814453125
    4. 'mod' → logprob: -5.701934814453125
    5. 'res' → logprob: -6.451934814453125
    6. ' h' → logprob: -6.701934814453125
    7. ' retour' → logprob: -6.826934814453125
    8. '1' → logprob: -6.951934814453125
    9. ' if' → logprob: -7.076934814453125
    10. 'ret' → logprob: -7.201934814453125

Token 184: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05267034098505974
    2. '=' → logprob: -3.0526702404022217
    3. ' est' → logprob: -5.677670478820801
    4. '   ' → logprob: -8.8026704788208
    5. ' return' → logprob: -8.9276704788208
    6. ' mod' → logprob: -9.1776704788208
    7. 'return' → logprob: -9.1776704788208
    8. 'mod' → logprob: -10.3026704788208
    9. ' +=' → logprob: -11.0526704788208
    10. 'est' → logprob: -11.1776704788208

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6617326140403748
    2. 'h' → logprob: -1.0367326736450195
    3. '2' → logprob: -2.9117326736450195
    4. '0' → logprob: -3.4117326736450195
    5. ' h' → logprob: -3.6617326736450195
    6. ' ' → logprob: -4.6617326736450195
    7. '(h' → logprob: -5.7867326736450195
    8. 'mod' → logprob: -7.0367326736450195
    9. '3' → logprob: -7.1617326736450195
    10. '(' → logprob: -7.5367326736450195

Token 186: '2' (ID: 17)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.46105122566223145
    2. '1' → logprob: -1.2110512256622314
    3. '0' → logprob: -3.7110512256622314
    4. '2' → logprob: -4.211050987243652
    5. ' h' → logprob: -4.211050987243652
    6. '(h' → logprob: -4.836050987243652
    7. ' ' → logprob: -5.586050987243652
    8. 'mod' → logprob: -6.086050987243652
    9. '(' → logprob: -6.461050987243652
    10. '3' → logprob: -7.836050987243652

Token 187: '^' (ID: 61)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9778282642364502
    2. ' **' → logprob: -1.2278282642364502
    3. '<|end|>' → logprob: -1.8528282642364502
    4. '**' → logprob: -2.35282826423645
    5. '*' → logprob: -3.60282826423645
    6. '
' → logprob: -4.227828025817871
    7. ' ' → logprob: -4.977828025817871
    8. ' +' → logprob: -4.977828025817871
    9. 'return' → logprob: -5.602828025817871
    10. ':' → logprob: -5.727828025817871

Token 188: 'ha' (ID: 1716)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04196271672844887
    2. ' h' → logprob: -3.4169626235961914
    3. '(h' → logprob: -5.791962623596191
    4. '1' → logprob: -6.041962623596191
    5. '0' → logprob: -7.041962623596191
    6. ' (' → logprob: -7.291962623596191
    7. ' ' → logprob: -8.041962623596191
    8. 'n' → logprob: -8.166962623596191
    9. '(' → logprob: -8.791962623596191
    10. 'mod' → logprob: -8.916962623596191

Token 189: 'uteur' (ID: 25666)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.18435393273830414
    2. 't' → logprob: -2.184353828430176
    3. 'sh' → logprob: -3.059353828430176
    4. 'uteur' → logprob: -5.809353828430176
    5. 'b' → logprob: -6.684353828430176
    6. 'te' → logprob: -7.059353828430176
    7. '[h' → logprob: -7.559353828430176
    8. '(h' → logprob: -7.684353828430176
    9. ' h' → logprob: -7.809353828430176
    10. 'r' → logprob: -7.934353828430176

Token 190: ' (' (ID: 350)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.7782094478607178
    2. '(h' → logprob: -1.2782094478607178
    3. '**' → logprob: -1.7782094478607178
    4. ' **' → logprob: -2.5282094478607178
    5. 'h' → logprob: -5.153209686279297
    6. ' (' → logprob: -6.028209686279297
    7. ' h' → logprob: -6.528209686279297
    8. '(' → logprob: -6.903209686279297
    9. '```' → logprob: -7.028209686279297
    10. '[' → logprob: -7.153209686279297

Token 191: 't' (ID: 83)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8074479699134827
    2. ')' → logprob: -1.557447910308838
    3. '(h' → logprob: -2.057447910308838
    4. ' (' → logprob: -2.807447910308838
    5. 'mod' → logprob: -3.182447910308838
    6. 'return' → logprob: -3.557447910308838
    7. '(' → logprob: -3.807447910308838
    8. '(pow' → logprob: -3.932447910308838
    9. 'h' → logprob: -4.307447910308838
    10. ' pow' → logprob: -4.932447910308838

Token 192: 'ous' (ID: 784)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7210069298744202
    2. 'h' → logprob: -1.3460068702697754
    3. ' **' → logprob: -2.3460068702697754
    4. ')' → logprob: -2.3460068702697754
    5. 'oken' → logprob: -3.8460068702697754
    6. 'o' → logprob: -4.346006870269775
    7. '*' → logprob: -5.596006870269775
    8. '(h' → logprob: -5.846006870269775
    9. 'erm' → logprob: -6.096006870269775
    10. ' )' → logprob: -6.221006870269775

Token 193: ' les' (ID: 1341)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.32054829597473145
    2. '(' → logprob: -1.8205482959747314
    3. ' (' → logprob: -2.6955482959747314
    4. 'h' → logprob: -3.3205482959747314
    5. ')' → logprob: -5.320548057556152
    6. '(
' → logprob: -6.945548057556152
    7. '**' → logprob: -7.570548057556152
    8. ' ' → logprob: -8.070548057556152
    9. ' **' → logprob: -8.195548057556152
    10. '```' → logprob: -8.195548057556152

Token 194: ' sous' (ID: 14487)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.619813084602356
    2. ' h' → logprob: -0.869813084602356
    3. ' (' → logprob: -3.9948129653930664
    4. ' ' → logprob: -4.369812965393066
    5. ' )' → logprob: -5.744812965393066
    6. '(h' → logprob: -5.869812965393066
    7. ')' → logprob: -5.994812965393066
    8. '(' → logprob: -7.494812965393066
    9. ' **' → logprob: -7.619812965393066
    10. ' +' → logprob: -7.619812965393066

Token 195: '-' (ID: 12)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7035514116287231
    2. '_' → logprob: -1.8285514116287231
    3. ' **' → logprob: -2.5785512924194336
    4. '   ' → logprob: -3.0785512924194336
    5. ' _' → logprob: -3.2035512924194336
    6. ')' → logprob: -3.3285512924194336
    7. ' *' → logprob: -3.4535512924194336
    8. 's' → logprob: -3.5785512924194336
    9. '[' → logprob: -3.8285512924194336
    10. 'h' → logprob: -4.078551292419434

Token 196: 'ense' (ID: 1603)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2357824593782425
    2. 'sets' → logprob: -2.6107823848724365
    3. ' h' → logprob: -2.9857823848724365
    4. '2' → logprob: -4.235782623291016
    5. 'pro' → logprob: -4.735782623291016
    6. 'exp' → logprob: -4.985782623291016
    7. 'ense' → logprob: -5.360782623291016
    8. '```' → logprob: -5.360782623291016
    9. ' sequences' → logprob: -5.360782623291016
    10. ')' → logprob: -5.610782623291016

Token 197: 'mbles' (ID: 60383)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.2670449912548065
    2. 't' → logprob: -1.642045021057129
    3. 'mbles' → logprob: -3.392045021057129
    4. 'mb' → logprob: -5.517045021057129
    5. 'mble' → logprob: -6.142045021057129
    6. 'quences' → logprob: -7.267045021057129
    7. 'm' → logprob: -9.517045021057129
    8. 'gments' → logprob: -10.142045021057129
    9. 'tb' → logprob: -10.392045021057129
    10. 'tle' → logprob: -11.142045021057129

Token 198: ' des' (ID: 731)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.7023624181747437
    2. '[' → logprob: -1.3273624181747437
    3. ')' → logprob: -2.202362537384033
    4. 'h' → logprob: -3.327362537384033
    5. '**' → logprob: -3.577362537384033
    6. ' **' → logprob: -4.327362537384033
    7. '(h' → logprob: -4.827362537384033
    8. 'mod' → logprob: -4.827362537384033
    9. ' h' → logprob: -5.077362537384033
    10. '```' → logprob: -5.077362537384033

Token 199: ' ét' (ID: 4976)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5641566514968872
    2. 'h' → logprob: -1.0641566514968872
    3. ')' → logprob: -2.6891565322875977
    4. ' ' → logprob: -4.814156532287598
    5. ' )' → logprob: -5.689156532287598
    6. ' heights' → logprob: -6.439156532287598
    7. ' **' → logprob: -7.689156532287598
    8. ' (' → logprob: -7.939156532287598
    9. '*' → logprob: -7.939156532287598
    10. ' *' → logprob: -8.064156532287598

Token 200: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.0020970876794308424
    2. 'ag' → logprob: -7.127097129821777
    3. 'ats' → logprob: -7.877097129821777
    4. 'apes' → logprob: -8.502097129821777
    5. 'age' → logprob: -9.002097129821777
    6. 'a' → logprob: -9.127097129821777
    7. 'ags' → logprob: -9.252097129821777
    8. 'agés' → logprob: -9.252097129821777
    9. 'agement' → logprob: -10.502097129821777
    10. '   ' → logprob: -10.752097129821777

Token 201: ')
' (ID: 446)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.1752772331237793
    2. ')' → logprob: -2.8002772331237793
    3. '[' → logprob: -2.9252772331237793
    4. ' **' → logprob: -4.425277233123779
    5. ' *' → logprob: -4.925277233123779
    6. '**' → logprob: -5.050277233123779
    7. '   ' → logprob: -5.300277233123779
    8. 'h' → logprob: -5.925277233123779
    9. ' )' → logprob: -6.300277233123779
    10. ' +' → logprob: -6.300277233123779

Token 202: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.266223669052124
    2. '       ' → logprob: -1.641223669052124
    3. ':' → logprob: -3.766223669052124
    4. '**' → logprob: -5.141223907470703
    5. 'return' → logprob: -5.766223907470703
    6. ' return' → logprob: -5.891223907470703
    7. ' **' → logprob: -6.766223907470703
    8. '(' → logprob: -6.891223907470703
    9. ' *' → logprob: -7.891223907470703
    10. '    ' → logprob: -7.891223907470703

Token 203: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0016456685261800885
    2. '   ' → logprob: -6.501645565032959
    3. ' return' → logprob: -9.251646041870117
    4. '       ' → logprob: -10.251646041870117
    5. 'mod' → logprob: -11.626646041870117
    6. '```' → logprob: -14.001646041870117
    7. 'ret' → logprob: -14.251646041870117
    8. '
' → logprob: -14.501646041870117
    9. 'result' → logprob: -15.001646041870117
    10. '	return' → logprob: -15.251646041870117

Token 204: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.024397192522883415
    2. ' pow' → logprob: -3.774397134780884
    3. '(' → logprob: -7.149397373199463
    4. '(pow' → logprob: -8.524396896362305
    5. '2' → logprob: -9.149396896362305
    6. '   ' → logprob: -10.399396896362305
    7. ' (' → logprob: -10.774396896362305
    8. ' ' → logprob: -11.649396896362305
    9. '_pow' → logprob: -15.524396896362305
    10. '1' → logprob: -15.899396896362305

Token 205: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006003448273986578
    2. '(h' → logprob: -5.131003379821777
    3. '2' → logprob: -10.006003379821777
    4. 'h' → logprob: -12.006003379821777
    5. ' (' → logprob: -12.006003379821777
    6. '(pow' → logprob: -12.131003379821777
    7. ')' → logprob: -12.381003379821777
    8. '(
' → logprob: -12.631003379821777
    9. '(base' → logprob: -13.631003379821777
    10. ' ' → logprob: -13.881003379821777

Token 206: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0030156185384839773
    2. 'h' → logprob: -6.003015518188477
    3. '(' → logprob: -8.378015518188477
    4. 'mod' → logprob: -8.503015518188477
    5. ')' → logprob: -10.128015518188477
    6. '10' → logprob: -10.753015518188477
    7. ' ' → logprob: -10.878015518188477
    8. '(h' → logprob: -11.378015518188477
    9. '   ' → logprob: -12.253015518188477
    10. '
' → logprob: -13.378015518188477

Token 207: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0077067045494914055
    2. 'h' → logprob: -6.007706642150879
    3. ',h' → logprob: -6.382706642150879
    4. ',' → logprob: -6.382706642150879
    5. '(' → logprob: -6.757706642150879
    6. ')' → logprob: -8.007706642150879
    7. ' (' → logprob: -8.257706642150879
    8. ' h' → logprob: -10.257706642150879
    9. ' ,' → logprob: -10.882706642150879
    10. '(
' → logprob: -11.007706642150879

Token 208: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.56102097814437e-05
    2. ' h' → logprob: -10.000045776367188
    3. '(h' → logprob: -16.000045776367188
    4. '   ' → logprob: -17.625045776367188
    5. '	h' → logprob: -18.625045776367188
    6. '[h' → logprob: -19.500045776367188
    7. 'mod' → logprob: -20.500045776367188
    8. ' ' → logprob: -20.500045776367188
    9. '       ' → logprob: -20.625045776367188
    10. '
' → logprob: -20.875045776367188

Token 209: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005809116992168128
    2. '[len' → logprob: -7.750580787658691
    3. '[-' → logprob: -9.875580787658691
    4. '0' → logprob: -10.375580787658691
    5. '   ' → logprob: -10.750580787658691
    6. 'len' → logprob: -10.750580787658691
    7. ' [' → logprob: -11.875580787658691
    8. '[h' → logprob: -12.250580787658691
    9. ' ' → logprob: -12.750580787658691
    10. ')' → logprob: -12.750580787658691

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.250005722045898
    3. ' ' → logprob: -15.250005722045898
    4. '-' → logprob: -16.0000057220459
    5. '   ' → logprob: -17.0000057220459
    6. '
' → logprob: -17.8750057220459
    7. '```' → logprob: -18.6250057220459
    8. '(' → logprob: -18.6875057220459
    9. '۰' → logprob: -19.5000057220459
    10. '1' → logprob: -19.8125057220459

Token 211: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0014868854777887464
    2. ' ],' → logprob: -7.626486778259277
    3. ']' → logprob: -8.126486778259277
    4. '),' → logprob: -8.376486778259277
    5. '[' → logprob: -8.626486778259277
    6. ',' → logprob: -8.751486778259277
    7. '])' → logprob: -9.376486778259277
    8. '   ' → logprob: -11.501486778259277
    9. ' ,' → logprob: -11.876486778259277
    10. '},' → logprob: -12.126486778259277

Token 212: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0002613358374219388
    2. ' mod' → logprob: -8.250261306762695
    3. '	mod' → logprob: -18.375261306762695
    4. '(mod' → logprob: -18.875261306762695
    5. 'mods' → logprob: -20.625261306762695
    6. '   ' → logprob: -21.250261306762695
    7. '_mod' → logprob: -21.250261306762695
    8. '
' → logprob: -21.375261306762695
    9. ' мод' → logprob: -21.500261306762695
    10. ' ' → logprob: -21.625261306762695

Token 213: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -13.87500286102295
    3. ')
' → logprob: -14.25000286102295
    4. ')}' → logprob: -14.50000286102295
    5. ')return' → logprob: -15.50000286102295
    6. '))' → logprob: -15.75000286102295
    7. '<|end|>' → logprob: -17.000001907348633
    8. '),' → logprob: -17.250001907348633
    9. '}' → logprob: -17.250001907348633
    10. ')**' → logprob: -17.625001907348633

Token 214: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13160474598407745
    2. '    
' → logprob: -3.1316046714782715
    3. '
' → logprob: -3.2566046714782715
    4. ')' → logprob: -3.5066046714782715
    5. '<|end|>' → logprob: -5.5066046714782715
    6. '  
' → logprob: -5.7566046714782715
    7. '\n' → logprob: -6.2566046714782715
    8. '   
' → logprob: -7.5066046714782715
    9. ' 
' → logprob: -8.88160514831543
    10. ')
' → logprob: -8.88160514831543

Token 215: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.47293388843536377
    2. 'dp' → logprob: -2.097933769226074
    3. 'else' → logprob: -2.097933769226074
    4. 'total' → logprob: -2.847933769226074
    5. 'result' → logprob: -2.972933769226074
    6. '   ' → logprob: -4.597933769226074
    7. 'elif' → logprob: -5.347933769226074
    8. '#' → logprob: -5.722933769226074
    9. 'ans' → logprob: -6.597933769226074
    10. 'ways' → logprob: -6.847933769226074

Token 216: ' N' (ID: 478)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7367761135101318
    2. 'dp' → logprob: -1.1117761135101318
    3. 'm' → logprob: -2.486776113510132
    4. 'mid' → logprob: -3.361776113510132
    5. 'total' → logprob: -3.736776113510132
    6. 'if' → logprob: -3.861776113510132
    7. 'ans' → logprob: -4.861776351928711
    8. 'result' → logprob: -5.236776351928711
    9. '#' → logprob: -5.736776351928711
    10. 'left' → logprob: -5.986776351928711

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1400611847639084
    2. '=' → logprob: -2.140061140060425
    3. '=len' → logprob: -5.015061378479004
    4. '   ' → logprob: -5.140061378479004
    5. '_len' → logprob: -8.890061378479004
    6. ')' → logprob: -9.390061378479004
    7. 'len' → logprob: -9.890061378479004
    8. '[' → logprob: -10.015061378479004
    9. '_' → logprob: -10.265061378479004
    10. '[len' → logprob: -10.390061378479004

Token 218: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20141352713108063
    2. ' len' → logprob: -1.7014135122299194
    3. '(len' → logprob: -16.076414108276367
    4. '[len' → logprob: -16.326414108276367
    5. '   ' → logprob: -17.951414108276367
    6. '=len' → logprob: -18.326414108276367
    7. '	len' → logprob: -19.201414108276367
    8. 'n' → logprob: -19.951414108276367
    9. ' ' → logprob: -20.326414108276367
    10. ',len' → logprob: -20.326414108276367

Token 219: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0006510786479339004
    2. '(' → logprob: -7.625650882720947
    3. 'h' → logprob: -8.875651359558105
    4. ' (' → logprob: -10.875651359558105
    5. '(H' → logprob: -13.250651359558105
    6. ')' → logprob: -14.250651359558105
    7. '(
' → logprob: -14.750651359558105
    8. 's' → logprob: -14.875651359558105
    9. '(n' → logprob: -15.250651359558105
    10. 'N' → logprob: -15.625651359558105

Token 220: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.0020742492051795e-05
    2. ')
' → logprob: -10.125049591064453
    3. '   ' → logprob: -11.875049591064453
    4. ' )' → logprob: -13.000049591064453
    5. '[' → logprob: -16.000049591064453
    6. ')n' → logprob: -16.250049591064453
    7. ')

' → logprob: -16.875049591064453
    8. '))' → logprob: -17.125049591064453
    9. '-' → logprob: -17.250049591064453
    10. ')...' → logprob: -17.500049591064453

Token 221: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44192245602607727
    2. '```' → logprob: -2.066922426223755
    3. '   ' → logprob: -2.316922426223755
    4. '    
' → logprob: -3.566922426223755
    5. 'def' → logprob: -3.816922426223755
    6. '[' → logprob: -4.066922664642334
    7. '<|end|>' → logprob: -4.566922664642334
    8. '  
' → logprob: -4.816922664642334
    9. 'result' → logprob: -5.316922664642334
    10. '\' → logprob: -5.441922664642334

Token 222: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007086999248713255
    2. '    
' → logprob: -5.882087230682373
    3. '   ' → logprob: -6.507087230682373
    4. 'result' → logprob: -7.507087230682373
    5. '  
' → logprob: -7.757087230682373
    6. '
' → logprob: -7.882087230682373
    7. '\n' → logprob: -8.007086753845215
    8. '+' → logprob: -8.007086753845215
    9. 'dp' → logprob: -8.507086753845215
    10. '```' → logprob: -9.382086753845215

Token 223: ' Nombre' (ID: 70208)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.46865314245224
    2. 'h' → logprob: -1.3436532020568848
    3. ' h' → logprob: -3.0936532020568848
    4. ' N' → logprob: -3.5936532020568848
    5. 'max' → logprob: -4.218653202056885
    6. 'sum' → logprob: -5.218653202056885
    7. 'n' → logprob: -5.718653202056885
    8. ' max' → logprob: -6.093653202056885
    9. 'result' → logprob: -6.468653202056885
    10. ' ' → logprob: -6.843653202056885

Token 224: ' d' (ID: 272)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.616532802581787
    2. '=' → logprob: -1.741532802581787
    3. '   ' → logprob: -1.741532802581787
    4. ' =' → logprob: -1.991532802581787
    5. 'de' → logprob: -2.116532802581787
    6. ')' → logprob: -3.491532802581787
    7. '(
' → logprob: -3.866532802581787
    8. 'mod' → logprob: -3.866532802581787
    9. 'N' → logprob: -3.866532802581787
    10. '_' → logprob: -3.991532802581787

Token 225: ''' (ID: 6)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.2542722523212433
    2. ''h' → logprob: -2.129272222518921
    3. 'h' → logprob: -3.379272222518921
    4. '   ' → logprob: -4.7542724609375
    5. 'ombres' → logprob: -5.0042724609375
    6. ''' → logprob: -5.1292724609375
    7. '=' → logprob: -5.2542724609375
    8. ' =' → logprob: -5.3792724609375
    9. ' éléments' → logprob: -5.3792724609375
    10. 'élé' → logprob: -5.5042724609375

Token 226: 'élé' (ID: 15228)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.29359766840934753
    2. 'élé' → logprob: -1.79359769821167
    3. ''ét' → logprob: -3.16859769821167
    4. 'et' → logprob: -3.91859769821167
    5. 'elements' → logprob: -4.54359769821167
    6. ''' → logprob: -5.29359769821167
    7. 'é' → logprob: -6.04359769821167
    8. 'h' → logprob: -6.04359769821167
    9. '’ét' → logprob: -6.79359769821167
    10. '\'' → logprob: -7.41859769821167

Token 227: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -4.000763510703109e-05
    2. 'ements' → logprob: -11.125040054321289
    3. 'm' → logprob: -12.000040054321289
    4. 'ment' → logprob: -12.000040054321289
    5. 'éments' → logprob: -12.375040054321289
    6. 'v' → logprob: -12.625040054321289
    7. 'MENTS' → logprob: -14.000040054321289
    8. '```' → logprob: -14.125040054321289
    9. 'ts' → logprob: -14.750040054321289
    10. '' → logprob: -14.750040054321289

Token 228: ' dans' (ID: 2671)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40985623002052307
    2. '<|end|>' → logprob: -2.1598563194274902
    3. ')' → logprob: -2.5348563194274902
    4. ' =' → logprob: -3.0348563194274902
    5. '=' → logprob: -3.5348563194274902
    6. '   ' → logprob: -4.15985631942749
    7. '<|end|>' → logprob: -4.15985631942749
    8. '    
' → logprob: -4.90985631942749
    9. 'N' → logprob: -5.28485631942749
    10. '-' → logprob: -6.03485631942749

Token 229: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -6.392202976712724e-06
    2. ' h' → logprob: -12.000006675720215
    3. '(h' → logprob: -16.2500057220459
    4. 'H' → logprob: -17.5000057220459
    5. '	h' → logprob: -17.6250057220459
    6. '```' → logprob: -17.8750057220459
    7. '[h' → logprob: -18.0000057220459
    8. '<h' → logprob: -18.2500057220459
    9. '   ' → logprob: -18.3750057220459
    10. 'la' → logprob: -18.6250057220459

Token 230: ' sous' (ID: 14487)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.004228339530527592
    2. 'liste' → logprob: -5.504228115081787
    3. ' h' → logprob: -9.754228591918945
    4. ' liste' → logprob: -10.129228591918945
    5. 'list' → logprob: -11.504228591918945
    6. 's' → logprob: -11.504228591918945
    7. 'suite' → logprob: -11.504228591918945
    8. 'sequence' → logprob: -12.254228591918945
    9. 'Liste' → logprob: -12.504228591918945
    10. 'sé' → logprob: -13.504228591918945

Token 231: '-l' (ID: 2887)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.003559804055839777
    2. '   ' → logprob: -6.628559589385986
    3. '_h' → logprob: -6.878559589385986
    4. ' h' → logprob: -7.878559589385986
    5. '(h' → logprob: -8.503560066223145
    6. ')' → logprob: -8.878560066223145
    7. '[' → logprob: -9.128560066223145
    8. '_' → logprob: -9.628560066223145
    9. '_list' → logprob: -10.003560066223145
    10. 'N' → logprob: -10.378560066223145

Token 232: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.24045349657535553
    2. 'h' → logprob: -1.7404534816741943
    3. 'ist' → logprob: -3.4904534816741943
    4. 'liste' → logprob: -6.365453720092773
    5. 'ste' → logprob: -6.740453720092773
    6. 'is' → logprob: -7.115453720092773
    7. 'st' → logprob: -7.490453720092773
    8. 'ite' → logprob: -8.115453720092773
    9. '`' → logprob: -8.240453720092773
    10. '```' → logprob: -8.240453720092773

Token 233: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42236730456352234
    2. ' =' → logprob: -1.9223673343658447
    3. '   ' → logprob: -3.1723673343658447
    4. 'dp' → logprob: -3.5473673343658447
    5. '=' → logprob: -3.6723673343658447
    6. '    
' → logprob: -3.7973673343658447
    7. 'result' → logprob: -4.422367095947266
    8. '```' → logprob: -4.672367095947266
    9. 'max' → logprob: -4.797367095947266
    10. ')' → logprob: -4.922367095947266

Token 234: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1362699419260025
    2. 'res' → logprob: -3.136270046234131
    3. 'result' → logprob: -3.511270046234131
    4. '   ' → logprob: -3.636270046234131
    5. ' dp' → logprob: -4.761270046234131
    6. ' res' → logprob: -4.886270046234131
    7. 'total' → logprob: -6.261270046234131
    8. ' result' → logprob: -6.636270046234131
    9. 'ans' → logprob: -6.761270046234131
    10. '    
' → logprob: -6.761270046234131

Token 235: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.021613776683807373
    2. 'res' → logprob: -4.021613597869873
    3. 'ans' → logprob: -7.021613597869873
    4. 'result' → logprob: -7.021613597869873
    5. 'f' → logprob: -7.771613597869873
    6. '   ' → logprob: -8.396614074707031
    7. 'total' → logprob: -8.521614074707031
    8. 'prefix' → logprob: -9.021614074707031
    9. 'ways' → logprob: -9.271614074707031
    10. 'left' → logprob: -9.396614074707031

Token 236: ' Compression' (ID: 133421)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03321290388703346
    2. 'res' → logprob: -3.908212900161743
    3. 'max' → logprob: -5.658213138580322
    4. 'result' → logprob: -5.908213138580322
    5. 'total' → logprob: -6.908213138580322
    6. 'ans' → logprob: -7.033213138580322
    7. 'prefix' → logprob: -7.158213138580322
    8. 'for' → logprob: -7.783213138580322
    9. 'min' → logprob: -7.783213138580322
    10. 'ways' → logprob: -8.033212661743164

Token 237: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8366740345954895
    2. '=' → logprob: -1.7116739749908447
    3. 'h' → logprob: -1.7116739749908447
    4. '   ' → logprob: -2.2116739749908447
    5. 'compressed' → logprob: -2.7116739749908447
    6. '=h' → logprob: -5.461674213409424
    7. '(h' → logprob: -5.961674213409424
    8. ' h' → logprob: -5.961674213409424
    9. 'dp' → logprob: -6.336674213409424
    10. 'def' → logprob: -6.461674213409424

Token 238: ' valeurs' (ID: 73668)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.21809326112270355
    2. 'ha' → logprob: -2.468093156814575
    3. ' h' → logprob: -2.593093156814575
    4. 'he' → logprob: -4.718093395233154
    5. 'H' → logprob: -4.843093395233154
    6. 'indices' → logprob: -5.218093395233154
    7. 'val' → logprob: -5.718093395233154
    8. 'élé' → logprob: -6.718093395233154
    9. 'diff' → logprob: -6.843093395233154
    10. 'positions' → logprob: -6.968093395233154

Token 239: ' de' (ID: 334)
  Prédit: 'compressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -1.0261791944503784
    2. ' =' → logprob: -1.4011791944503784
    3. '   ' → logprob: -1.7761791944503784
    4. 'comp' → logprob: -3.026179313659668
    5. '=' → logprob: -3.151179313659668
    6. 'h' → logprob: -3.401179313659668
    7. 'values' → logprob: -4.276179313659668
    8. 'counts' → logprob: -4.651179313659668
    9. 'unique' → logprob: -5.026179313659668
    10. 'vals' → logprob: -5.026179313659668

Token 240: ' hauteur' (ID: 72987)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.025225641205906868
    2. ' h' → logprob: -3.7752256393432617
    3. 'H' → logprob: -6.400225639343262
    4. ' H' → logprob: -9.150225639343262
    5. ' la' → logprob: -9.525225639343262
    6. 'la' → logprob: -10.025225639343262
    7. 'l' → logprob: -10.150225639343262
    8. 'ha' → logprob: -10.650225639343262
    9. ' ' → logprob: -11.900225639343262
    10. '[h' → logprob: -12.275225639343262

Token 241: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9213782548904419
    2. ' =' → logprob: -1.921378254890442
    3. '=' → logprob: -2.1713781356811523
    4. ',' → logprob: -2.4213781356811523
    5. 'h' → logprob: -2.9213781356811523
    6. 'values' → logprob: -3.0463781356811523
    7. 'compressed' → logprob: -3.5463781356811523
    8. ':' → logprob: -4.171378135681152
    9. 'vals' → logprob: -4.296378135681152
    10. 'indices' → logprob: -4.671378135681152

Token 242: ' permettre' (ID: 55483)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.680717408657074
    2. 'h' → logprob: -1.6807174682617188
    3. 'ré' → logprob: -2.4307174682617188
    4. 'index' → logprob: -3.0557174682617188
    5. ' faciliter' → logprob: -3.8057174682617188
    6. 'enumer' → logprob: -4.305717468261719
    7. 're' → logprob: -4.430717468261719
    8. 'comp' → logprob: -4.430717468261719
    9. 'val' → logprob: -4.555717468261719
    10. 'indices' → logprob: -4.680717468261719

Token 243: ' une' (ID: 2463)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.393090844154358
    2. ' une' → logprob: -1.518090844154358
    3. ' un' → logprob: -2.1430907249450684
    4. 'une' → logprob: -2.3930907249450684
    5. ' l' → logprob: -2.8930907249450684
    6. 'la' → logprob: -3.1430907249450684
    7. 'un' → logprob: -3.2680907249450684
    8. ' la' → logprob: -3.5180907249450684
    9. 'dp' → logprob: -3.5180907249450684
    10. '   ' → logprob: -4.143090724945068

Token 244: ' index' (ID: 3472)
  Prédit: 'compression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compression' → logprob: -1.0946439504623413
    2. 'mapping' → logprob: -1.8446439504623413
    3. 'rem' → logprob: -1.9696439504623413
    4. 'index' → logprob: -2.594644069671631
    5. 'normal' → logprob: -2.969644069671631
    6. 'ré' → logprob: -2.969644069671631
    7. 'dp' → logprob: -3.219644069671631
    8. 'coord' → logprob: -4.469644069671631
    9. ' compression' → logprob: -4.469644069671631
    10. 're' → logprob: -4.594644069671631

Token 245: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.1132153868675232
    2. 'age' → logprob: -2.488215446472168
    3. 'ing' → logprob: -3.988215446472168
    4. 'mapping' → logprob: -6.113215446472168
    5. ' mapping' → logprob: -6.613215446472168
    6. '   ' → logprob: -7.488215446472168
    7. 'map' → logprob: -8.238215446472168
    8. '_mapping' → logprob: -8.613215446472168
    9. '_map' → logprob: -8.863215446472168
    10. ' ' → logprob: -9.738215446472168

Token 246: ' efficace' (ID: 54338)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7323240041732788
    2. '   ' → logprob: -1.1073240041732788
    3. '=' → logprob: -2.7323241233825684
    4. 'h' → logprob: -3.7323241233825684
    5. 'unique' → logprob: -4.107324123382568
    6. ' des' → logprob: -4.107324123382568
    7. ',' → logprob: -4.857324123382568
    8. ' unique' → logprob: -5.107324123382568
    9. ' h' → logprob: -5.232324123382568
    10. 'des' → logprob: -5.357324123382568

Token 247: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0035326480865479
    2. 'h' → logprob: -1.5035326480865479
    3. '   ' → logprob: -1.6285326480865479
    4. ' =' → logprob: -2.878532648086548
    5. '=' → logprob: -3.628532648086548
    6. 'values' → logprob: -4.003532409667969
    7. ',' → logprob: -4.128532409667969
    8. '
' → logprob: -4.378532409667969
    9. 'unique' → logprob: -4.378532409667969
    10. ' h' → logprob: -4.753532409667969

Token 248: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20724663138389587
    2. 'la' → logprob: -2.2072465419769287
    3. 'les' → logprob: -3.3322465419769287
    4. 'le' → logprob: -3.8322465419769287
    5. 'l' → logprob: -5.457246780395508
    6. ' la' → logprob: -5.582246780395508
    7. ' dp' → logprob: -5.582246780395508
    8. 'DP' → logprob: -6.082246780395508
    9. 'une' → logprob: -6.957246780395508
    10. 'un' → logprob: -6.957246780395508

Token 249: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005975484848022461
    2. 'DP' → logprob: -5.505975723266602
    3. ' dp' → logprob: -7.130975723266602
    4. 'table' → logprob: -7.380975723266602
    5. 'd' → logprob: -8.755975723266602
    6. ' DP' → logprob: -9.755975723266602
    7. 'dict' → logprob: -10.505975723266602
    8. 'cache' → logprob: -10.505975723266602
    9. 'segment' → logprob: -10.630975723266602
    10. 'dynamic' → logprob: -10.630975723266602

Token 250: '
' (ID: 198)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.5164189338684082
    2. 'values' → logprob: -1.7664189338684082
    3. '   ' → logprob: -1.8914189338684082
    4. ':' → logprob: -2.266418933868408
    5. ',' → logprob: -2.391418933868408
    6. 'mapping' → logprob: -3.766418933868408
    7. ' =' → logprob: -3.891418933868408
    8. '=' → logprob: -4.016418933868408
    9. 'compressed' → logprob: -4.016418933868408
    10. 'max' → logprob: -4.016418933868408

Token 251: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9332196712493896
    2. 'h' → logprob: -1.6832196712493896
    3. '   ' → logprob: -2.3082196712493896
    4. 'compressed' → logprob: -2.3082196712493896
    5. 'min' → logprob: -2.4332196712493896
    6. 'unique' → logprob: -3.4332196712493896
    7. 'values' → logprob: -3.6832196712493896
    8. 'comp' → logprob: -4.558219909667969
    9. 'vals' → logprob: -4.558219909667969
    10. 'compress' → logprob: -4.808219909667969

Token 252: ' a' (ID: 261)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -1.1700903177261353
    2. 'max' → logprob: -1.4200903177261353
    3. 'compressed' → logprob: -2.0450901985168457
    4. 'vals' → logprob: -2.1700901985168457
    5. 'values' → logprob: -3.2950901985168457
    6. 'comp' → logprob: -3.4200901985168457
    7. 'all' → logprob: -3.6700901985168457
    8. 'compress' → logprob: -3.9200901985168457
    9. ' unique' → logprob: -4.170090198516846
    10. 'min' → logprob: -4.295090198516846

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07967574149370193
    2. ' =' → logprob: -2.5796756744384766
    3. ',' → logprob: -8.204675674438477
    4. '=
' → logprob: -9.204675674438477
    5. '=int' → logprob: -10.079675674438477
    6. '_map' → logprob: -10.079675674438477
    7. '=[]
' → logprob: -10.454675674438477
    8. 'pp' → logprob: -10.579675674438477
    9. '=[' → logprob: -10.579675674438477
    10. '=np' → logprob: -10.579675674438477

Token 254: ' [' (ID: 723)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.8797627687454224
    2. 'sorted' → logprob: -1.0047627687454224
    3. '[' → logprob: -1.7547627687454224
    4. 'h' → logprob: -3.629762649536133
    5. 'list' → logprob: -5.004762649536133
    6. ' sorted' → logprob: -5.254762649536133
    7. ' [' → logprob: -6.004762649536133
    8. '{' → logprob: -6.254762649536133
    9. '[list' → logprob: -7.129762649536133
    10. '[a' → logprob: -7.504762649536133

Token 255: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8145202994346619
    2. '0' → logprob: -1.3145203590393066
    3. 'x' → logprob: -1.3145203590393066
    4. 'hi' → logprob: -4.689520359039307
    5. 'val' → logprob: -5.689520359039307
    6. 'H' → logprob: -6.814520359039307
    7. 'v' → logprob: -6.939520359039307
    8. 'height' → logprob: -6.939520359039307
    9. 'i' → logprob: -7.564520359039307
    10. 'hh' → logprob: -7.564520359039307

Token 256: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07924435287714005
    2. '[i' → logprob: -2.579244375228882
    3. '.index' → logprob: -8.579244613647461
    4. '[-' → logprob: -9.829244613647461
    5. '.count' → logprob: -10.579244613647461
    6. '0' → logprob: -10.954244613647461
    7. ']' → logprob: -11.454244613647461
    8. '[j' → logprob: -11.704244613647461
    9. '[
' → logprob: -11.704244613647461
    10. '   ' → logprob: -12.079244613647461

Token 257: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21710561215877533
    2. ']-' → logprob: -1.7171056270599365
    3. '-' → logprob: -4.342105388641357
    4. ']+' → logprob: -6.217105388641357
    5. ' -' → logprob: -8.342105865478516
    6. 'if' → logprob: -9.217105865478516
    7. ' ]' → logprob: -10.217105865478516
    8. '+' → logprob: -10.467105865478516
    9. ']]' → logprob: -10.842105865478516
    10. ' if' → logprob: -11.092105865478516

Token 258: ' for' (ID: 395)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09218697249889374
    2. ' -' → logprob: -2.46718692779541
    3. ' for' → logprob: -6.34218692779541
    4. 'for' → logprob: -7.59218692779541
    5. ' if' → logprob: -7.59218692779541
    6. 'if' → logprob: -8.71718692779541
    7. '+' → logprob: -8.96718692779541
    8. ']' → logprob: -9.96718692779541
    9. ' ' → logprob: -10.09218692779541
    10. '   ' → logprob: -10.21718692779541

Token 259: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759504437446594
    2. ' i' → logprob: -0.8259504437446594
    3. ' ' → logprob: -12.075950622558594
    4. '	i' → logprob: -12.825950622558594
    5. ')' → logprob: -14.825950622558594
    6. '_' → logprob: -14.950950622558594
    7. ']' → logprob: -15.075950622558594
    8. '_i' → logprob: -15.200950622558594
    9. 'range' → logprob: -15.200950622558594
    10. ' in' → logprob: -15.450950622558594

Token 260: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25454261898994446
    2. 'in' → logprob: -1.504542589187622
    3. ' i' → logprob: -6.879542827606201
    4. 'i' → logprob: -7.129542827606201
    5. 'range' → logprob: -7.754542827606201
    6. ' ' → logprob: -8.629542350769043
    7. ']' → logprob: -9.754542350769043
    8. ' range' → logprob: -10.629542350769043
    9. '
' → logprob: -10.754542350769043
    10. '0' → logprob: -10.879542350769043

Token 261: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170460251159966
    2. ' range' → logprob: -6.751170635223389
    3. '
' → logprob: -16.126171112060547
    4. '   ' → logprob: -16.876171112060547
    5. ' ' → logprob: -17.001171112060547
    6. ']' → logprob: -17.001171112060547
    7. '(range' → logprob: -17.251171112060547
    8. '	range' → logprob: -17.376171112060547
    9. '  ' → logprob: -18.751171112060547
    10. '0' → logprob: -18.876171112060547

Token 262: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4592975676059723
    2. '(N' → logprob: -1.58429753780365
    3. '(' → logprob: -2.2092976570129395
    4. '1' → logprob: -2.9592976570129395
    5. 'len' → logprob: -7.8342976570129395
    6. '(len' → logprob: -7.9592976570129395
    7. '(n' → logprob: -8.084297180175781
    8. ' N' → logprob: -8.709297180175781
    9. 'n' → logprob: -9.334297180175781
    10. '2' → logprob: -9.709297180175781

Token 263: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.025151247158646584
    2. ')' → logprob: -3.775151252746582
    3. '-' → logprob: -7.025151252746582
    4. ')]
' → logprob: -7.525151252746582
    5. ' )' → logprob: -8.150151252746582
    6. ' -' → logprob: -10.150151252746582
    7. ']' → logprob: -10.275151252746582
    8. ')][' → logprob: -10.275151252746582
    9. ')
' → logprob: -11.400151252746582
    10. '   ' → logprob: -11.525151252746582

Token 264: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: ' a' (ID: 261)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2909766435623169
    2. '<|end|>' → logprob: -1.665976643562317
    3. '[' → logprob: -3.6659765243530273
    4. ' 
' → logprob: -4.415976524353027
    5. ' ' → logprob: -4.540976524353027
    6. '  
' → logprob: -5.415976524353027
    7. 'a' (adapté à ' a') → logprob: -6.165976524353027
    8. '<|end|>' → logprob: -6.540976524353027
    9. '    
' → logprob: -7.165976524353027
    10. '[a' → logprob: -7.290976524353027

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4062690734863281
    2. '=' → logprob: -1.2812690734863281
    3. '[' → logprob: -3.781269073486328
    4. '.sort' → logprob: -3.906269073486328
    5. '[:]' → logprob: -5.281269073486328
    6. '=[' → logprob: -6.781269073486328
    7. '.' → logprob: -7.031269073486328
    8. ',' → logprob: -7.281269073486328
    9. ' =[' → logprob: -7.406269073486328
    10. '   ' → logprob: -7.531269073486328

Token 267: ' list' (ID: 1562)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.17279349267482758
    2. 'list' → logprob: -2.297793388366699
    3. '[' → logprob: -3.422793388366699
    4. ' sorted' → logprob: -4.797793388366699
    5. '[a' → logprob: -5.172793388366699
    6. ' list' → logprob: -5.422793388366699
    7. '[h' → logprob: -6.047793388366699
    8. 'a' → logprob: -6.297793388366699
    9. ' [' → logprob: -6.922793388366699
    10. '{' → logprob: -7.172793388366699

Token 268: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.32614609599113464
    2. '(sorted' → logprob: -1.826146125793457
    3. '(dict' → logprob: -2.701146125793457
    4. '(map' → logprob: -3.451146125793457
    5. '(' → logprob: -4.076146125793457
    6. '({' → logprob: -7.201146125793457
    7. '(range' → logprob: -8.451146125793457
    8. '(com' → logprob: -8.701146125793457
    9. '(a' → logprob: -9.201146125793457
    10. 'sorted' → logprob: -10.076146125793457

Token 269: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00030185774085111916
    2. 'a' → logprob: -8.3753023147583
    3. '(' → logprob: -10.6253023147583
    4. '(sorted' → logprob: -10.7503023147583
    5. '(
' → logprob: -11.3753023147583
    6. ')a' → logprob: -12.1253023147583
    7. ')' → logprob: -12.2503023147583
    8. ' (' → logprob: -14.0003023147583
    9. 'sorted' → logprob: -14.1253023147583
    10. '([' → logprob: -14.3753023147583

Token 270: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016262276098132133
    2. '))
' → logprob: -4.391262054443359
    3. ')' → logprob: -6.016262054443359
    4. '()))' → logprob: -7.391262054443359
    5. '(a' → logprob: -8.26626205444336
    6. ' ))' → logprob: -8.51626205444336
    7. ')))' → logprob: -9.64126205444336
    8. ')
' → logprob: -10.14126205444336
    9. 'a' → logprob: -10.64126205444336
    10. ')a' → logprob: -10.76626205444336

Token 271: ' ' (ID: 220)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.310776948928833
    2. '<|end|>' → logprob: -1.435776948928833
    3. 'a' → logprob: -4.185776710510254
    4. '()' → logprob: -6.060776710510254
    5. '<|end|>' → logprob: -6.185776710510254
    6. '   ' → logprob: -6.185776710510254
    7. '
' → logprob: -6.685776710510254
    8. 'sort' → logprob: -6.810776710510254
    9. ')' → logprob: -6.810776710510254
    10. '[a' → logprob: -6.935776710510254

Token 272: ' #' (ID: 1069)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.49033740162849426
    2. 'a' → logprob: -1.1153373718261719
    3. ')' → logprob: -3.490337371826172
    4. '<|end|>' → logprob: -3.740337371826172
    5. '   ' → logprob: -6.240337371826172
    6. 'sort' → logprob: -6.615337371826172
    7. '.' → logprob: -7.865337371826172
    8. ').' → logprob: -8.490337371826172
    9. '<|end|>' → logprob: -8.740337371826172
    10. ')a' → logprob: -8.740337371826172

Token 273: ' É' (ID: 10055)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016060644760727882
    2. ' a' → logprob: -4.141060829162598
    3. 'sort' → logprob: -11.641060829162598
    4. ' ' → logprob: -11.766060829162598
    5. '   ' → logprob: -12.391060829162598
    6. ' sort' → logprob: -12.891060829162598
    7. ' sorted' → logprob: -13.891060829162598
    8. 'sorted' → logprob: -14.516060829162598
    9. '.sort' → logprob: -14.641060829162598
    10. '	a' → logprob: -15.016060829162598

Token 274: 'lim' (ID: 5406)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9581001996994019
    2. 'sorted' → logprob: -1.5831001996994019
    3. 'orted' → logprob: -1.8331001996994019
    4. 'sort' → logprob: -2.7081003189086914
    5. '(a' → logprob: -3.0831003189086914
    6. ' a' → logprob: -3.7081003189086914
    7. '[a' → logprob: -4.083100318908691
    8. 'mb' → logprob: -4.208100318908691
    9. '(sorted' → logprob: -4.458100318908691
    10. 'ss' → logprob: -5.083100318908691

Token 275: 'iner' (ID: 6010)
  Prédit: 'iner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.011324850842356682
    2. '(set' → logprob: -4.886324882507324
    3. 'orer' → logprob: -7.136324882507324
    4. 'in' → logprob: -7.761324882507324
    5. 'ent' → logprob: -8.011324882507324
    6. 'er' → logprob: -8.011324882507324
    7. 'a' → logprob: -8.261324882507324
    8. 'iter' → logprob: -8.386324882507324
    9. 'ner' → logprob: -9.011324882507324
    10. 'ine' → logprob: -9.136324882507324

Token 276: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: ' doubl' (ID: 127992)
  Prédit: ' duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.5436693429946899
    2. 'duplicates' → logprob: -1.16866934299469
    3. ' doubl' → logprob: -2.7936692237854004
    4. 'dou' → logprob: -3.7936692237854004
    5. ' duplic' → logprob: -4.6686692237854
    6. 'duplicate' → logprob: -5.2936692237854
    7. 'duplic' → logprob: -5.2936692237854
    8. ' duplicate' → logprob: -6.5436692237854
    9. 'd' → logprob: -6.7936692237854
    10. 'a' → logprob: -6.9186692237854

Token 278: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.2913258969783783
    2. 'és' → logprob: -1.4163259267807007
    3. 'es' → logprob: -5.29132604598999
    4. 'ic' → logprob: -5.41632604598999
    5. 's' → logprob: -8.916325569152832
    6. 'ics' → logprob: -9.041325569152832
    7. 'i' → logprob: -9.416325569152832
    8. 'ions' → logprob: -9.541325569152832
    9. 'icates' → logprob: -10.166325569152832
    10. 'ées' → logprob: -10.416325569152832

Token 279: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2068304568529129
    2. '   ' → logprob: -2.4568305015563965
    3. '.sort' → logprob: -3.2068305015563965
    4. ')' → logprob: -4.3318305015563965
    5. '<|end|>' → logprob: -4.3318305015563965
    6. '    
' → logprob: -5.0818305015563965
    7. ' a' → logprob: -5.0818305015563965
    8. '[' → logprob: -6.2068305015563965
    9. '()' → logprob: -6.2068305015563965
    10. ',' → logprob: -6.2068305015563965

Token 281: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.07216862589120865
    2. '.sort' → logprob: -3.3221685886383057
    3. '<|end|>' → logprob: -3.9471685886383057
    4. ' a' → logprob: -4.697168827056885
    5. ')' → logprob: -5.947168827056885
    6. '   ' → logprob: -7.447168827056885
    7. ' 
' → logprob: -8.197168350219727
    8. ',' → logprob: -8.572168350219727
    9. '.' → logprob: -8.697168350219727
    10. '    
' → logprob: -8.947168350219727

Token 282: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0013066678075119853
    2. '.' → logprob: -6.876306533813477
    3. '=' → logprob: -8.376306533813477
    4. ' =' → logprob: -10.626306533813477
    5. 'sort' → logprob: -11.626306533813477
    6. ' .' → logprob: -11.751306533813477
    7. ' sort' → logprob: -14.251306533813477
    8. '=.' → logprob: -14.501306533813477
    9. '.=' → logprob: -14.876306533813477
    10. '   ' → logprob: -15.126306533813477

Token 283: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.225939872208983e-05
    2. 'a' → logprob: -11.625032424926758
    3. '(' → logprob: -12.000032424926758
    4. '())' → logprob: -12.375032424926758
    5. '()
' → logprob: -12.625032424926758
    6. '()>' → logprob: -12.625032424926758
    7. '(a' → logprob: -13.500032424926758
    8. '()]' → logprob: -13.875032424926758
    9. ')' → logprob: -14.375032424926758
    10. ' ()' → logprob: -14.625032424926758

Token 284: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: ' comp' (ID: 1050)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12824246287345886
    2. 'm' → logprob: -2.3782424926757812
    3. 'compressed' → logprob: -4.253242492675781
    4. 'a' → logprob: -5.878242492675781
    5. '   ' → logprob: -6.128242492675781
    6. 'max' → logprob: -6.253242492675781
    7. 'compress' → logprob: -7.003242492675781
    8. 'size' → logprob: -7.128242492675781
    9. 'idx' → logprob: -7.128242492675781
    10. 'b' → logprob: -7.253242492675781

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1266421526670456
    2. '=' → logprob: -3.5016422271728516
    3. 'a' → logprob: -3.5016422271728516
    4. 'ressed' → logprob: -3.5016422271728516
    5. '_a' → logprob: -4.376642227172852
    6. '=a' → logprob: -4.876642227172852
    7. 'r' → logprob: -5.126642227172852
    8. 'ress' → logprob: -8.251642227172852
    9. '=[]' → logprob: -8.376642227172852
    10. '```' → logprob: -8.626642227172852

Token 287: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0005897291121073067
    2. ' {' → logprob: -7.500589847564697
    3. '{i' → logprob: -10.500589370727539
    4. '{x' → logprob: -12.000589370727539
    5. '{k' → logprob: -13.375589370727539
    6. '{id' → logprob: -14.125589370727539
    7. '{}' → logprob: -14.750589370727539
    8. '{name' → logprob: -15.375589370727539
    9. '{s' → logprob: -16.25058937072754
    10. '{}
' → logprob: -16.62558937072754

Token 288: 'i' (ID: 72)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2648668885231018
    2. 'x' → logprob: -2.139866828918457
    3. 'a' → logprob: -2.389866828918457
    4. 'val' → logprob: -3.764866828918457
    5. 'value' → logprob: -9.764866828918457
    6. 'k' → logprob: -9.889866828918457
    7. ' v' → logprob: -10.264866828918457
    8. ' x' → logprob: -11.139866828918457
    9. 'num' → logprob: -11.514866828918457
    10. 'e' → logprob: -11.639866828918457

Token 289: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30501997470855713
    2. ':a' → logprob: -1.5550199747085571
    3. 'a' → logprob: -3.1800198554992676
    4. ' :' → logprob: -4.930019855499268
    5. ':v' → logprob: -7.055019855499268
    6. 'v' → logprob: -7.305019855499268
    7. ':i' → logprob: -7.555019855499268
    8. ':value' → logprob: -8.430020332336426
    9. 'k' → logprob: -8.805020332336426
    10. ' a' → logprob: -9.055020332336426

Token 290: ' e' (ID: 319)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.011978565715253353
    2. 'v' → logprob: -5.011978626251221
    3. 'j' → logprob: -6.011978626251221
    4. ' idx' → logprob: -6.261978626251221
    5. 'index' → logprob: -7.261978626251221
    6. 'i' → logprob: -9.136978149414062
    7. 'a' → logprob: -10.261978149414062
    8. 'x' → logprob: -10.636978149414062
    9. 'k' → logprob: -11.511978149414062
    10. 'ix' → logprob: -11.636978149414062

Token 291: '+' (ID: 10)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4135955572128296
    2. 'for' → logprob: -1.7885955572128296
    3. ' for' → logprob: -1.9135955572128296
    4. ':i' → logprob: -1.9135955572128296
    5. 'n' → logprob: -2.038595676422119
    6. 'a' → logprob: -3.538595676422119
    7. 'i' → logprob: -3.663595676422119
    8. ':a' → logprob: -3.788595676422119
    9. 'rror' → logprob: -4.038595676422119
    10. 'num' → logprob: -4.163595676422119

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02904566191136837
    2. ' ' → logprob: -3.904045581817627
    3. '{' → logprob: -5.029045581817627
    4. '0' → logprob: -7.404045581817627
    5. ' {' → logprob: -8.404046058654785
    6. ' i' → logprob: -8.779046058654785
    7. 'i' → logprob: -9.029046058654785
    8. '   ' → logprob: -9.029046058654785
    9. '{i' → logprob: -9.029046058654785
    10. 'f' → logprob: -9.779046058654785

Token 293: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25196245312690735
    2. 'for' → logprob: -1.501962423324585
    3. '   ' → logprob: -11.626962661743164
    4. ' i' → logprob: -12.126962661743164
    5. ':' → logprob: -12.251962661743164
    6. ' ' → logprob: -12.251962661743164
    7. 'a' → logprob: -12.626962661743164
    8. 'i' → logprob: -13.126962661743164
    9. ',' → logprob: -14.001962661743164
    10. '	for' → logprob: -14.501962661743164

Token 294: ' e' (ID: 319)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7364249229431152
    2. 'enumer' → logprob: -0.9864249229431152
    3. 'range' → logprob: -2.1114249229431152
    4. 'e' → logprob: -3.8614249229431152
    5. ' range' → logprob: -5.486424922943115
    6. 'a' → logprob: -7.236424922943115
    7. ' i' → logprob: -7.236424922943115
    8. ' enumerate' → logprob: -7.611424922943115
    9. ' e' → logprob: -10.361425399780273
    10. ',' → logprob: -10.861425399780273

Token 295: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8760014772415161
    2. ' i' → logprob: -1.2510014772415161
    3. ',' → logprob: -1.5010014772415161
    4. ',i' → logprob: -2.6260013580322266
    5. ' in' → logprob: -6.376001358032227
    6. ' ,' → logprob: -8.626001358032227
    7. 'in' → logprob: -10.751001358032227
    8. ' range' → logprob: -10.751001358032227
    9. 'range' → logprob: -10.751001358032227
    10. '(i' → logprob: -10.876001358032227

Token 296: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010349531657993793
    2. ' i' → logprob: -6.876034736633301
    3. '(i' → logprob: -13.5010347366333
    4. '	i' → logprob: -14.8760347366333
    5. 'enumer' → logprob: -15.6260347366333
    6. ' (' → logprob: -16.751035690307617
    7. 'e' → logprob: -17.001035690307617
    8. '```' → logprob: -17.126035690307617
    9. '  ' → logprob: -17.376035690307617
    10. ' ' → logprob: -18.126035690307617

Token 297: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07269164174795151
    2. ' in' → logprob: -2.9476916790008545
    3. 'enumer' → logprob: -4.072691440582275
    4. 'a' → logprob: -7.697691440582275
    5. ' enumerate' → logprob: -9.447691917419434
    6. 'n' → logprob: -10.447691917419434
    7. ',' → logprob: -11.072691917419434
    8. 'en' → logprob: -11.322691917419434
    9. 'i' → logprob: -12.572691917419434
    10. 'enum' → logprob: -12.947691917419434

Token 298: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -9.662937372922897e-05
    2. ' enumerate' → logprob: -9.250096321105957
    3. '
' → logprob: -15.625096321105957
    4. '```' → logprob: -16.125097274780273
    5. 'enum' → logprob: -16.250097274780273
    6. 'en' → logprob: -16.875097274780273
    7. 'zip' → logprob: -19.000097274780273
    8. 'Enumer' → logprob: -19.375097274780273
    9. 'enqueue' → logprob: -19.625097274780273
    10. 'a' → logprob: -19.875097274780273

Token 299: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019316127290949225
    2. ' a' → logprob: -6.251931667327881
    3. '   ' → logprob: -13.501931190490723
    4. '(a' → logprob: -14.126931190490723
    5. ' ' → logprob: -14.251931190490723
    6. '	a' → logprob: -15.751931190490723
    7. '  ' → logprob: -17.00193214416504
    8. '[a' → logprob: -17.25193214416504
    9. '
' → logprob: -17.50193214416504
    10. 'range' → logprob: -17.87693214416504

Token 300: ')}' (ID: 15468)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -3.9054008084349334e-05
    2. ' }' → logprob: -11.000039100646973
    3. ')}' → logprob: -11.375039100646973
    4. '})' → logprob: -12.625039100646973
    5. '   ' → logprob: -13.000039100646973
    6. '}
' → logprob: -13.125039100646973
    7. '}}' → logprob: -13.500039100646973
    8. ',' → logprob: -14.250039100646973
    9. ')' → logprob: -14.875039100646973
    10. '}")' → logprob: -15.750039100646973

Token 301: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10052108019590378
    2. '    
' → logprob: -3.6005210876464844
    3. '{' → logprob: -3.9755210876464844
    4. '  
' → logprob: -4.725521087646484
    5. ' 
' → logprob: -4.850521087646484
    6. ')' → logprob: -5.100521087646484
    7. '
' → logprob: -5.225521087646484
    8. '<|end|>' → logprob: -5.475521087646484
    9. ' ' → logprob: -5.600521087646484
    10. '}' → logprob: -5.600521087646484

Token 302: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13217507302761078
    2. '}' → logprob: -2.3821749687194824
    3. '    
' → logprob: -3.7571749687194824
    4. '
' → logprob: -5.632174968719482
    5. ' 
' → logprob: -7.007174968719482
    6. ' }' → logprob: -7.382174968719482
    7. '}
' → logprob: -7.507174968719482
    8. '  
' → logprob: -7.757174968719482
    9. 'a' → logprob: -8.00717544555664
    10. ')' → logprob: -8.00717544555664

Token 303: ' D' (ID: 415)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.18921984732151031
    2. '{}' → logprob: -2.0642199516296387
    3. 'dict' → logprob: -4.189219951629639
    4. 'comp' → logprob: -4.189219951629639
    5. '{
' → logprob: -5.689219951629639
    6. '{i' → logprob: -5.939219951629639
    7. 'a' → logprob: -6.439219951629639
    8. '}' → logprob: -6.564219951629639
    9. ' {' → logprob: -7.189219951629639
    10. 'com' → logprob: -7.314219951629639

Token 304: 'iction' (ID: 4090)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.6275246739387512
    2. '{' → logprob: -1.2525246143341064
    3. 'ef' → logprob: -2.1275246143341064
    4. 'ictionary' → logprob: -3.5025246143341064
    5. 'ict' → logprob: -4.3775248527526855
    6. 'for' → logprob: -5.6275248527526855
    7. 'iction' → logprob: -5.6275248527526855
    8. ' comp' → logprob: -6.2525248527526855
    9. '{
' → logprob: -6.6275248527526855
    10. 'a' → logprob: -6.7525248527526855

Token 305: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.0002214172709500417
    2. 'ary' → logprob: -8.750221252441406
    3. 'naires' → logprob: -10.250221252441406
    4. 'n' → logprob: -11.250221252441406
    5. 'na' → logprob: -11.875221252441406
    6. 'aire' → logprob: -12.500221252441406
    7. '{' → logprob: -12.625221252441406
    8. 'ar' → logprob: -16.125221252441406
    9. 'a' → logprob: -16.625221252441406
    10. '{"' → logprob: -16.875221252441406

Token 306: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: ' hauteur' (ID: 72987)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7603087425231934
    2. ' {' → logprob: -0.8853087425231934
    3. '{i' → logprob: -2.6353087425231934
    4. 'a' → logprob: -4.010308742523193
    5. '{}' → logprob: -4.885308742523193
    6. ' i' → logprob: -5.010308742523193
    7. ' a' → logprob: -5.260308742523193
    8. 'i' → logprob: -6.135308742523193
    9. ' comp' → logprob: -6.260308742523193
    10. ' {}' → logprob: -6.385308742523193

Token 308: ' ->' (ID: 2747)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: ' index' (ID: 3472)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.2351102828979492
    2. ' index' → logprob: -1.6101102828979492
    3. 'index' → logprob: -2.360110282897949
    4. ' comp' → logprob: -2.360110282897949
    5. 'indice' → logprob: -2.610110282897949
    6. ' valeur' → logprob: -2.860110282897949
    7. 'compressed' → logprob: -3.485110282897949
    8. ' hauteur' → logprob: -3.735110282897949
    9. ' indice' → logprob: -3.735110282897949
    10. 'val' → logprob: -3.860110282897949

Token 310: ' compress' (ID: 34112)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2583809792995453
    2. '}' → logprob: -2.383380889892578
    3. '<|end|>' → logprob: -2.383380889892578
    4. '   ' → logprob: -4.133380889892578
    5. ' }' → logprob: -4.633380889892578
    6. '<|end|>' → logprob: -5.508380889892578
    7. ' ' → logprob: -5.883380889892578
    8. ',
' → logprob: -6.633380889892578
    9. '  ' → logprob: -6.633380889892578
    10. '
' → logprob: -7.008380889892578

Token 311: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.1300145834684372
    2. 'ée' → logprob: -2.380014657974243
    3. 'ed' → logprob: -4.130014419555664
    4. 'e' → logprob: -4.880014419555664
    5. 'ion' → logprob: -6.130014419555664
    6. 's' → logprob: -6.380014419555664
    7. 'sed' → logprob: -7.505014419555664
    8. '}' → logprob: -8.005014419555664
    9. 'és' → logprob: -8.630014419555664
    10. '{' → logprob: -9.005014419555664

Token 312: ' (>' (ID: 147584)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9151290655136108
    2. '   ' → logprob: -1.1651290655136108
    3. '<|end|>' → logprob: -2.1651291847229004
    4. '    
' → logprob: -3.0401291847229004
    5. '}' → logprob: -3.2901291847229004
    6. '
' → logprob: -3.2901291847229004
    7. ',
' → logprob: -4.2901291847229
    8. '  
' → logprob: -4.7901291847229
    9. '<|end|>' → logprob: -5.0401291847229
    10. ' ' → logprob: -5.2901291847229

Token 313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23571474850177765
    2. '=' → logprob: -2.1107146739959717
    3. '1' → logprob: -3.1107146739959717
    4. ' ' → logprob: -3.6107146739959717
    5. ')' → logprob: -4.860714912414551
    6. ' =' → logprob: -5.735714912414551
    7. '<|end|>' → logprob: -6.110714912414551
    8. '{' → logprob: -7.360714912414551
    9. 'a' → logprob: -7.360714912414551
    10. 'comp' → logprob: -7.610714912414551

Token 314: ')
' (ID: 446)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.026623396202921867
    2. ')' → logprob: -3.901623487472534
    3. ',' → logprob: -5.651623249053955
    4. ' }' → logprob: -6.026623249053955
    5. ')}' → logprob: -10.026623725891113
    6. '<|end|>' → logprob: -10.026623725891113
    7. '})' → logprob: -10.526623725891113
    8. ' ' → logprob: -12.151623725891113
    9. '}
' → logprob: -12.401623725891113
    10. ' )' → logprob: -13.026623725891113

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16950443387031555
    2. '  
' → logprob: -3.294504404067993
    3. '    
' → logprob: -3.419504404067993
    4. ')' → logprob: -3.419504404067993
    5. ' 
' → logprob: -4.169504642486572
    6. 'n' → logprob: -5.169504642486572
    7. '{' → logprob: -5.169504642486572
    8. '}' → logprob: -5.419504642486572
    9. '<|end|>' → logprob: -5.419504642486572
    10. ' ' → logprob: -5.669504642486572

Token 316: ' data' (ID: 1238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29735344648361206
    2. ')' → logprob: -2.422353506088257
    3. '  
' → logprob: -3.422353506088257
    4. '{' → logprob: -3.797353506088257
    5. ' ' → logprob: -3.922353506088257
    6. ' 
' → logprob: -4.172353267669678
    7. '<|end|>' → logprob: -4.297353267669678
    8. 'n' → logprob: -4.297353267669678
    9. '    
' → logprob: -4.422353267669678
    10. '\n' → logprob: -4.672353267669678

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484538793563843
    2. '=' → logprob: -1.2234538793563843
    3. ',' → logprob: -12.723453521728516
    4. '[' → logprob: -13.348453521728516
    5. '=[]' → logprob: -14.348453521728516
    6. '   ' → logprob: -14.473453521728516
    7. '={}' → logprob: -14.473453521728516
    8. ' ' → logprob: -14.723453521728516
    9. ']' → logprob: -14.723453521728516
    10. ')' → logprob: -15.098453521728516

Token 318: ' {' (ID: 354)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6960629224777222
    2. ' [' → logprob: -0.6960629224777222
    3. '[len' → logprob: -7.571063041687012
    4. '[[' → logprob: -7.696063041687012
    5. '{' → logprob: -8.196063041687012
    6. '[N' → logprob: -8.321063041687012
    7. '[n' → logprob: -8.446063041687012
    8. '[a' → logprob: -8.571063041687012
    9. ' [[' → logprob: -8.571063041687012
    10. '[]' → logprob: -8.696063041687012

Token 319: 'comp' (ID: 3697)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8741738796234131
    2. 'i' → logprob: -1.499173879623413
    3. '}' → logprob: -1.749173879623413
    4. 'x' → logprob: -2.624173879623413
    5. 'v' → logprob: -3.749173879623413
    6. 'comp' → logprob: -3.874173879623413
    7. 'key' → logprob: -3.999173879623413
    8. 'e' → logprob: -4.124174118041992
    9. '0' → logprob: -4.499174118041992
    10. 'c' → logprob: -4.624174118041992

Token 320: '[e' (ID: 51414)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.6370044350624084
    2. '[i' → logprob: -1.0120043754577637
    3. '[a' → logprob: -3.8870043754577637
    4. 'i' → logprob: -4.512004375457764
    5. '[x' → logprob: -4.637004375457764
    6. 'h' → logprob: -4.637004375457764
    7. 'x' → logprob: -4.887004375457764
    8. '[' → logprob: -5.012004375457764
    9. '[e' → logprob: -5.012004375457764
    10. 'a' → logprob: -5.137004375457764

Token 321: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0012638057814911008
    2. ']' → logprob: -6.876263618469238
    3. ']+' → logprob: -8.876263618469238
    4. ']=' → logprob: -10.501263618469238
    5. '):' → logprob: -11.626263618469238
    6. 'e' → logprob: -11.626263618469238
    7. '(e' → logprob: -11.876263618469238
    8. ':' → logprob: -12.001263618469238
    9. ']-' → logprob: -12.251263618469238
    10. ']]' → logprob: -12.501263618469238

Token 322: ' e' (ID: 319)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05935075879096985
    2. '[]' → logprob: -3.8093507289886475
    3. '1' → logprob: -4.059350967407227
    4. '[' → logprob: -4.934350967407227
    5. 'e' → logprob: -5.809350967407227
    6. 'h' → logprob: -6.434350967407227
    7. '[]}' → logprob: -6.934350967407227
    8. '[e' → logprob: -7.059350967407227
    9. 'pow' → logprob: -7.184350967407227
    10. 'a' → logprob: -7.309350967407227

Token 323: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12694784998893738
    2. 'for' → logprob: -2.1269478797912598
    3. ' ' → logprob: -11.751947402954102
    4. '   ' → logprob: -12.626947402954102
    5. '+' → logprob: -12.876947402954102
    6. '	for' → logprob: -13.251947402954102
    7. '}' → logprob: -13.376947402954102
    8. ',' → logprob: -14.376947402954102
    9. '    ' → logprob: -15.001947402954102
    10. ')' → logprob: -15.126947402954102

Token 324: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0013207156443968415
    2. ' e' → logprob: -6.876320838928223
    3. 'comp' → logprob: -8.626320838928223
    4. 'a' → logprob: -9.251320838928223
    5. ' comp' → logprob: -12.626320838928223
    6. '	e' → logprob: -13.251320838928223
    7. ')e' → logprob: -13.501320838928223
    8. '<|end|>' → logprob: -13.751320838928223
    9. 'data' → logprob: -14.501320838928223
    10. ',e' → logprob: -14.751320838928223

Token 325: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3939220905303955
    2. 'in' → logprob: -1.8939220905303955
    3. ',' → logprob: -2.7689220905303955
    4. 'e' → logprob: -2.7689220905303955
    5. ',e' → logprob: -3.1439220905303955
    6. ' e' → logprob: -5.643921852111816
    7. 'enumer' → logprob: -6.018921852111816
    8. ' ,' → logprob: -9.018921852111816
    9. 'a' → logprob: -9.143921852111816
    10. ' ' → logprob: -9.768921852111816

Token 326: ' comp' (ID: 1050)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03238969296216965
    2. 'comp' → logprob: -3.6573896408081055
    3. ' a' → logprob: -5.6573896408081055
    4. ' comp' → logprob: -6.7823896408081055
    5. 'e' → logprob: -6.9073896408081055
    6. 'range' → logprob: -8.407389640808105
    7. 'set' → logprob: -9.782389640808105
    8. 'data' → logprob: -9.907389640808105
    9. 'h' → logprob: -10.657389640808105
    10. ' range' → logprob: -11.032389640808105

Token 327: '.keys' (ID: 18392)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -1.981667537620524e-06
    2. ' }' → logprob: -13.625001907348633
    3. '}
' → logprob: -14.625001907348633
    4. '   ' → logprob: -15.875001907348633
    5. ',' → logprob: -17.625001907348633
    6. '}

' → logprob: -17.750001907348633
    7. '}.' → logprob: -18.625001907348633
    8. '<|end|>' → logprob: -19.125001907348633
    9. '},' → logprob: -19.375001907348633
    10. '}
' → logprob: -19.625001907348633

Token 328: '()}' (ID: 38237)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00018863992590922862
    2. '()}' → logprob: -8.625188827514648
    3. ' }' → logprob: -11.750188827514648
    4. ')}' → logprob: -15.000188827514648
    5. '()' → logprob: -15.875188827514648
    6. '   ' → logprob: -16.00018882751465
    7. '`}' → logprob: -16.00018882751465
    8. '}
' → logprob: -16.37518882751465
    9. '}}' → logprob: -17.12518882751465
    10. '}.' → logprob: -17.12518882751465

Token 329: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08287583291530609
    2. '<|end|>' → logprob: -2.9578757286071777
    3. '   ' → logprob: -4.332875728607178
    4. '    
' → logprob: -4.832875728607178
    5. '  
' → logprob: -6.082875728607178
    6. '

' → logprob: -7.332875728607178
    7. '
' → logprob: -7.332875728607178
    8. '<|end|>' → logprob: -7.582875728607178
    9. '}' → logprob: -7.707875728607178
    10. ')' → logprob: -8.082876205444336

Token 331: ' In' (ID: 730)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.056961510330438614
    2. 'versed' → logprob: -4.056961536407471
    3. 'verted' → logprob: -4.181961536407471
    4. 'v' → logprob: -4.681961536407471
    5. 'dex' → logprob: -4.931961536407471
    6. 'vert' → logprob: -5.681961536407471
    7. 'vers' → logprob: -7.181961536407471
    8. 'd' → logprob: -7.556961536407471
    9. '{' → logprob: -7.931961536407471
    10. '[' → logprob: -8.181961059570312

Token 333: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: ' index' (ID: 3472)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.9367428421974182
    2. ' comp' → logprob: -1.3117427825927734
    3. '{' → logprob: -1.6867427825927734
    4. 'e' → logprob: -2.8117427825927734
    5. 'a' → logprob: -4.186742782592773
    6. 'data' → logprob: -4.311742782592773
    7. ' e' → logprob: -4.436742782592773
    8. ' {' → logprob: -4.686742782592773
    9. 'height' → logprob: -4.811742782592773
    10. ' data' → logprob: -5.186742782592773

Token 335: ' compress' (ID: 34112)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038923606276512146
    2. ' :' → logprob: -3.538923501968384
    3. '<|end|>' → logprob: -6.038923740386963
    4. ' =' → logprob: -6.413923740386963
    5. '=' → logprob: -6.413923740386963
    6. 'comp' → logprob: -6.663923740386963
    7. '_comp' → logprob: -7.913923740386963
    8. ':data' → logprob: -7.913923740386963
    9. ')' → logprob: -8.538923263549805
    10. '->' → logprob: -9.288923263549805

Token 336: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.09176725894212723
    2. 'ed' → logprob: -2.5917673110961914
    3. 'éd' → logprob: -5.591767311096191
    4. 's' → logprob: -5.841767311096191
    5. 'e' → logprob: -5.966767311096191
    6. 'sed' → logprob: -6.591767311096191
    7. 'p' → logprob: -7.841767311096191
    8. 'édé' → logprob: -7.841767311096191
    9. 'ss' → logprob: -8.591767311096191
    10. '{' → logprob: -8.716767311096191

Token 337: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0066083152778446674
    2. ' :' → logprob: -5.256608486175537
    3. '}:' → logprob: -8.006608009338379
    4. '}' → logprob: -8.506608009338379
    5. ':e' → logprob: -9.006608009338379
    6. '=' → logprob: -9.131608009338379
    7. ':data' → logprob: -9.506608009338379
    8. '<|end|>' → logprob: -9.506608009338379
    9. ' =' → logprob: -10.006608009338379
    10. ':return' → logprob: -10.256608009338379

Token 338: ' hauteur' (ID: 72987)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.06853319704532623
    2. ' comp' → logprob: -2.818533182144165
    3. 'a' → logprob: -5.943533420562744
    4. 'e' → logprob: -6.193533420562744
    5. 'data' → logprob: -6.693533420562744
    6. ' data' → logprob: -8.568532943725586
    7. ' e' → logprob: -8.693532943725586
    8. ' a' → logprob: -10.068532943725586
    9. '	comp' → logprob: -10.193532943725586
    10. 'value' → logprob: -10.443532943725586

Token 339: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8351191282272339
    2. 'dp' → logprob: -1.0851191282272339
    3. '    
' → logprob: -2.7101192474365234
    4. '
' → logprob: -2.8351192474365234
    5. '  
' → logprob: -2.8351192474365234
    6. ' dp' → logprob: -4.085119247436523
    7. ' 
' → logprob: -4.960119247436523
    8. '<|end|>' → logprob: -5.585119247436523
    9. ')' → logprob: -5.835119247436523
    10. '   
' → logprob: -6.210119247436523

Token 341: ' data' (ID: 1238)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2580931484699249
    2. ' dp' → logprob: -2.2580931186676025
    3. '   ' → logprob: -3.5080931186676025
    4. 'max' → logprob: -3.5080931186676025
    5. 'f' → logprob: -4.258093357086182
    6. ' max' → logprob: -4.258093357086182
    7. '    
' → logprob: -5.508093357086182
    8. ')' → logprob: -5.758093357086182
    9. ' f' → logprob: -6.133093357086182
    10. 'v' → logprob: -6.133093357086182

Token 342: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7593652009963989
    2. ' =' → logprob: -1.009365200996399
    3. '<|end|>' → logprob: -2.5093650817871094
    4. '[' → logprob: -2.8843650817871094
    5. ',' → logprob: -4.259365081787109
    6. ')' → logprob: -5.634365081787109
    7. '[data' → logprob: -5.634365081787109
    8. '<|end|>' → logprob: -6.634365081787109
    9. '.setdefault' → logprob: -6.759365081787109
    10. '.keys' → logprob: -6.884365081787109

Token 343: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000354769523255527
    2. ' ' → logprob: -8.625354766845703
    3. '1' → logprob: -9.500354766845703
    4. '[' → logprob: -11.250354766845703
    5. '   ' → logprob: -11.500354766845703
    6. '100' → logprob: -11.625354766845703
    7. '-' → logprob: -12.000354766845703
    8. 'comp' → logprob: -12.250354766845703
    9. '10' → logprob: -12.375354766845703
    10. 'a' → logprob: -12.375354766845703

Token 344: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016932693542912602
    2. ']=' → logprob: -6.626693248748779
    3. '=' → logprob: -8.251693725585938
    4. ' =' → logprob: -9.876693725585938
    5. '0' → logprob: -10.126693725585938
    6. ' ]' → logprob: -12.001693725585938
    7. ']=-' → logprob: -13.626693725585938
    8. '}' → logprob: -13.751693725585938
    9. ',' → logprob: -14.126693725585938
    10. '"]' → logprob: -14.689193725585938

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759445428848267
    2. ' =' → logprob: -0.8259445428848267
    3. ']' → logprob: -13.200944900512695
    4. '0' → logprob: -14.075944900512695
    5. ',' → logprob: -14.450944900512695
    6. ']=' → logprob: -14.700944900512695
    7. '=}' → logprob: -14.700944900512695
    8. ')' → logprob: -15.575944900512695
    9. ' ' → logprob: -15.950944900512695
    10. ' ' → logprob: -16.325944900512695

Token 346: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0049141086637973785
    2. '-' → logprob: -5.629914283752441
    3. '1' → logprob: -7.629914283752441
    4. ' ' → logprob: -8.254914283752441
    5. 'float' → logprob: -8.629914283752441
    6. '10' → logprob: -9.004914283752441
    7. 'min' → logprob: -9.254914283752441
    8. 'max' → logprob: -10.379914283752441
    9. ' -' → logprob: -10.754914283752441
    10. 'a' → logprob: -10.754914283752441

Token 347: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005566820967942476
    2. '-' → logprob: -5.505566596984863
    3. '1' → logprob: -7.755566596984863
    4. ' ' → logprob: -7.755566596984863
    5. 'min' → logprob: -8.005566596984863
    6. 'a' → logprob: -9.755566596984863
    7. ' -' → logprob: -9.755566596984863
    8. 'float' → logprob: -9.755566596984863
    9. ' min' → logprob: -10.755566596984863
    10. 'max' → logprob: -11.005566596984863

Token 348: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2391940951347351
    2. '<|end|>' → logprob: -1.6141941547393799
    3. '   ' → logprob: -4.614193916320801
    4. '    
' → logprob: -6.239193916320801
    5. '<|end|>' → logprob: -7.489193916320801
    6. ')' → logprob: -7.989193916320801
    7. ' 
' → logprob: -7.989193916320801
    8. '  
' → logprob: -8.2391939163208
    9. '
' → logprob: -9.3641939163208
    10. '   
' → logprob: -10.2391939163208

Token 349: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.042952146381139755
    2. '   ' → logprob: -3.417952060699463
    3. '<|end|>' → logprob: -5.042952060699463
    4. '    
' → logprob: -6.292952060699463
    5. ' 
' → logprob: -7.792952060699463
    6. '  
' → logprob: -8.417952537536621
    7. ')' → logprob: -9.542952537536621
    8. '
' → logprob: -9.667952537536621
    9. '

' → logprob: -10.292952537536621
    10. '   
' → logprob: -10.667952537536621

Token 350: ' Correction' (ID: 134873)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6500153541564941
    2. ' dp' → logprob: -1.2750153541564941
    3. ' max' → logprob: -2.900015354156494
    4. 'max' → logprob: -3.150015354156494
    5. ' for' → logprob: -3.650015354156494
    6. 'for' → logprob: -3.900015354156494
    7. ' mod' → logprob: -5.275015354156494
    8. 'mod' → logprob: -5.650015354156494
    9. 'prev' → logprob: -5.650015354156494
    10. ' res' → logprob: -5.775015354156494

Token 351: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0408475399017334
    2. '<|end|>' → logprob: -1.2908475399017334
    3. 'for' → logprob: -2.7908475399017334
    4. 'e' → logprob: -2.9158475399017334
    5. ''une' → logprob: -2.9158475399017334
    6. ''' → logprob: -3.9158475399017334
    7. ''un' → logprob: -3.9158475399017334
    8. ' la' → logprob: -4.1658477783203125
    9. 'data' → logprob: -4.4158477783203125
    10. '`' → logprob: -4.5408477783203125

Token 353: 'initial' (ID: 17493)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.4239009618759155
    2. 'l' → logprob: -1.5489009618759155
    3. 'off' → logprob: -1.6739009618759155
    4. 'index' → logprob: -2.173901081085205
    5. 'base' → logprob: -2.548901081085205
    6. 'data' → logprob: -3.298901081085205
    7. 'indice' → logprob: -3.798901081085205
    8. 'la' → logprob: -4.048901081085205
    9. 'offset' → logprob: -4.423901081085205
    10. 'un' → logprob: -5.173901081085205

Token 354: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.18297827243804932
    2. 'ization' → logprob: -1.8079782724380493
    3. 'e' → logprob: -6.18297815322876
    4. 'value' → logprob: -8.557978630065918
    5. 'i' → logprob: -8.682978630065918
    6. 'data' → logprob: -9.182978630065918
    7. 'isé' → logprob: -9.182978630065918
    8. 'isée' → logprob: -9.307978630065918
    9. '_value' → logprob: -9.557978630065918
    10. 'a' → logprob: -9.932978630065918

Token 355: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38405388593673706
    2. '<|end|>' → logprob: -1.2590539455413818
    3. '   ' → logprob: -3.509053945541382
    4. '<|end|>' → logprob: -6.509053707122803
    5. '    
' → logprob: -6.634053707122803
    6. ')' → logprob: -7.509053707122803
    7. '  
' → logprob: -7.759053707122803
    8. '\n' → logprob: -8.384054183959961
    9. ',' → logprob: -8.759054183959961
    10. '
' → logprob: -8.759054183959961

Token 356: ' utilisé' (ID: 53138)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: ' valeur' (ID: 41664)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.3696979284286499
    2. 'val' → logprob: -2.8696980476379395
    3. 'sent' → logprob: -2.9946980476379395
    4. 'point' → logprob: -3.2446980476379395
    5. ' hauteur' → logprob: -3.6196980476379395
    6. ' base' → logprob: -3.8696980476379395
    7. 'ha' → logprob: -4.1196980476379395
    8. 'une' → logprob: -4.2446980476379395
    9. 'niveau' → logprob: -4.2446980476379395
    10. ' valeur' → logprob: -4.6196980476379395

Token 359: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5039392113685608
    2. '<|end|>' → logprob: -1.628939151763916
    3. ' for' → logprob: -3.128939151763916
    4. ',' → logprob: -3.503939151763916
    5. ')' → logprob: -3.878939151763916
    6. ' ' → logprob: -4.128939151763916
    7. '.' → logprob: -4.253939151763916
    8. 'a' → logprob: -4.878939151763916
    9. 'for' → logprob: -4.878939151763916
    10. '
' → logprob: -4.878939151763916

Token 360: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.6648117899894714
    2. 'ré' → logprob: -1.1648118495941162
    3. 'dé' → logprob: -2.539811849594116
    4. ' référence' → logprob: -3.289811849594116
    5. 'sent' → logprob: -4.039811611175537
    6. ' base' → logprob: -4.414811611175537
    7. 'ha' → logprob: -5.539811611175537
    8. 'dp' → logprob: -6.039811611175537
    9. ' ' → logprob: -6.039811611175537
    10. 'rep' → logprob: -6.039811611175537

Token 361: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 362: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.026477713137865067
    2. '   ' → logprob: -3.776477813720703
    3. ' dp' → logprob: -6.526477813720703
    4. 'max' → logprob: -7.151477813720703
    5. 'f' → logprob: -8.901477813720703
    6. 'res' → logprob: -9.276477813720703
    7. '
' → logprob: -9.401477813720703
    8. '    
' → logprob: -9.526477813720703
    9. 'from' → logprob: -9.776477813720703
    10. 'm' → logprob: -9.901477813720703

Token 363: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03193626552820206
    2. 'max' → logprob: -4.281936168670654
    3. 'f' → logprob: -5.031936168670654
    4. ' dp' → logprob: -5.906936168670654
    5. '   ' → logprob: -6.656936168670654
    6. 'm' → logprob: -7.031936168670654
    7. 'res' → logprob: -7.156936168670654
    8. 'd' → logprob: -7.781936168670654
    9. 'for' → logprob: -8.406936645507812
    10. 'ans' → logprob: -8.531936645507812

Token 364: ' Initial' (ID: 9209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06980413943529129
    2. 'max' → logprob: -3.1948041915893555
    3. 'from' → logprob: -5.0698041915893555
    4. 'f' → logprob: -5.9448041915893555
    5. 'import' → logprob: -6.3198041915893555
    6. 'm' → logprob: -6.4448041915893555
    7. ' dp' → logprob: -6.5698041915893555
    8. 'for' → logprob: -6.6948041915893555
    9. 'def' → logprob: -6.8198041915893555
    10. 'ans' → logprob: -7.0698041915893555

Token 365: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.035295628011226654
    2. 'ization' → logprob: -4.035295486450195
    3. 'iser' → logprob: -4.660295486450195
    4. 'dp' → logprob: -5.660295486450195
    5. '#' → logprob: -7.285295486450195
    6. 'ise' → logprob: -7.660295486450195
    7. 'i' → logprob: -7.785295486450195
    8. 'is' → logprob: -8.285295486450195
    9. 'izer' → logprob: -8.410295486450195
    10. 'def' → logprob: -8.535295486450195

Token 366: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06361865252256393
    2. '   ' → logprob: -3.3136186599731445
    3. ' dp' → logprob: -3.8136186599731445
    4. ' =' → logprob: -6.0636186599731445
    5. ' of' → logprob: -8.313618659973145
    6. 'max' → logprob: -9.063618659973145
    7. '=' → logprob: -9.188618659973145
    8. '	dp' → logprob: -9.563618659973145
    9. ':' → logprob: -9.938618659973145
    10. '_dp' → logprob: -9.938618659973145

Token 367: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002715118695050478
    2. 'f' → logprob: -6.502715110778809
    3. ' dp' → logprob: -7.377715110778809
    4. 'max' → logprob: -8.877715110778809
    5. '   ' → logprob: -9.377715110778809
    6. 'ans' → logprob: -9.877715110778809
    7. 'res' → logprob: -10.127715110778809
    8. 'd' → logprob: -10.627715110778809
    9. '#' → logprob: -10.627715110778809
    10. 'l' → logprob: -10.877715110778809

Token 368: ' table' (ID: 3293)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00208721193484962
    2. ' dp' → logprob: -6.252087116241455
    3. 'import' → logprob: -9.752087593078613
    4. 'DP' → logprob: -10.877087593078613
    5. 'f' → logprob: -11.127087593078613
    6. 'max' → logprob: -11.377087593078613
    7. '#' → logprob: -11.502087593078613
    8. 'prev' → logprob: -12.502087593078613
    9. 'd' → logprob: -12.752087593078613
    10. 'tab' → logprob: -12.752087593078613

Token 369: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03574351593852043
    2. ' dp' → logprob: -3.410743474960327
    3. '   ' → logprob: -6.410743713378906
    4. '_dp' → logprob: -9.035743713378906
    5. ' =' → logprob: -10.035743713378906
    6. 'DP' → logprob: -10.035743713378906
    7. 'd' → logprob: -10.285743713378906
    8. ' of' → logprob: -10.535743713378906
    9. '	dp' → logprob: -10.785743713378906
    10. '(dp' → logprob: -10.910743713378906

Token 370: ' programmation' (ID: 166376)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007603150443173945
    2. ' dp' → logprob: -7.250760078430176
    3. 'd' → logprob: -11.250760078430176
    4. '```' → logprob: -11.375760078430176
    5. 'val' → logprob: -11.625760078430176
    6. 'DP' → logprob: -12.625760078430176
    7. 'p' → logprob: -12.750760078430176
    8. 'f' → logprob: -13.375760078430176
    9. 'pd' → logprob: -14.375760078430176
    10. 'dé' → logprob: -14.375760078430176

Token 371: ' dynamique' (ID: 98708)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007017395459115505
    2. '_dp' → logprob: -5.507017612457275
    3. ' dp' → logprob: -6.257017612457275
    4. ' dynamique' → logprob: -7.382017612457275
    5. 'dynamic' → logprob: -9.257017135620117
    6. 'd' → logprob: -9.507017135620117
    7. '   ' → logprob: -9.757017135620117
    8. '_' → logprob: -10.007017135620117
    9. 'DP' → logprob: -10.507017135620117
    10. 'dyn' → logprob: -11.007017135620117

Token 372: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.027021929621696472
    2. ' dp' → logprob: -3.777021884918213
    3. '   ' → logprob: -5.902021884918213
    4. '
' → logprob: -8.527022361755371
    5. ' =' → logprob: -8.902022361755371
    6. ':' → logprob: -9.027022361755371
    7. 'f' → logprob: -9.277022361755371
    8. 'DP' → logprob: -9.527022361755371
    9. '	dp' → logprob: -9.652022361755371
    10. ',' → logprob: -9.777022361755371

Token 373: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13336506485939026
    2. ' dp' → logprob: -2.1333651542663574
    3. '   ' → logprob: -5.133365154266357
    4. '
' → logprob: -9.1333646774292
    5. '	dp' → logprob: -9.6333646774292
    6. '```' → logprob: -9.6333646774292
    7. '_dp' → logprob: -9.7583646774292
    8. '(dp' → logprob: -10.0083646774292
    9. ':' → logprob: -10.2583646774292
    10. 'DP' → logprob: -10.2583646774292

Token 374: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07158220559358597
    2. ' dp' → logprob: -2.696582317352295
    3. '   ' → logprob: -7.446582317352295
    4. 'max' → logprob: -8.071581840515137
    5. 'f' → logprob: -8.821581840515137
    6. 'from' → logprob: -9.571581840515137
    7. ' ' → logprob: -9.696581840515137
    8. ' max' → logprob: -9.696581840515137
    9. 'import' → logprob: -9.946581840515137
    10. 'd' → logprob: -9.946581840515137

Token 375: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11351415514945984
    2. ' dp' → logprob: -2.2385141849517822
    3. 'max' → logprob: -8.738513946533203
    4. '   ' → logprob: -9.113513946533203
    5. 'from' → logprob: -9.738513946533203
    6. '
' → logprob: -9.863513946533203
    7. ' max' → logprob: -9.863513946533203
    8. 'import' → logprob: -9.988513946533203
    9. 'size' → logprob: -10.863513946533203
    10. ' ' → logprob: -10.863513946533203

Token 376: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011074823327362537
    2. '=' → logprob: -4.511075019836426
    3. '[' → logprob: -11.761075019836426
    4. 'dp' → logprob: -12.386075019836426
    5. '_' → logprob: -12.761075019836426
    6. '   ' → logprob: -13.011075019836426
    7. ' ' → logprob: -13.261075019836426
    8. '=[' → logprob: -13.636075019836426
    9. 's' → logprob: -13.761075019836426
    10. '_dp' → logprob: -14.136075019836426

Token 377: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.8651010990142822
    2. ']' → logprob: -1.2401010990142822
    3. '[i' → logprob: -1.3651010990142822
    4. '[' → logprob: -3.8651010990142822
    5. ']=' → logprob: -5.490100860595703
    6. '   ' → logprob: -5.990100860595703
    7. '```' → logprob: -6.115100860595703
    8. '[j' → logprob: -7.740100860595703
    9. 'i' → logprob: -7.740100860595703
    10. 's' → logprob: -8.115100860595703

Token 378: 'j' (ID: 73)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7168065309524536
    2. 'j' → logprob: -0.8418065309524536
    3. 'comp' → logprob: -4.091806411743164
    4. 'v' → logprob: -4.466806411743164
    5. 'h' → logprob: -4.466806411743164
    6. 'k' → logprob: -4.591806411743164
    7. 'max' → logprob: -5.091806411743164
    8. 'a' → logprob: -5.216806411743164
    9. '1' → logprob: -5.716806411743164
    10. ']' → logprob: -5.966806411743164

Token 379: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022153230383992195
    2. ']=' → logprob: -6.252215385437012
    3. '=' → logprob: -9.377215385437012
    4. '][' → logprob: -9.502215385437012
    5. ' ]' → logprob: -9.752215385437012
    6. ' =' → logprob: -10.502215385437012
    7. '   ' → logprob: -11.127215385437012
    8. ']+=' → logprob: -12.127215385437012
    9. ')' → logprob: -12.502215385437012
    10. '[i' → logprob: -13.002215385437012

Token 380: ' nombre' (ID: 9733)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.022934217005968094
    2. '[' → logprob: -4.397934436798096
    3. ' =' → logprob: -5.397934436798096
    4. ' list' → logprob: -6.647934436798096
    5. ' dict' → logprob: -6.897934436798096
    6. '[int' → logprob: -7.647934436798096
    7. ' int' → logprob: -7.897934436798096
    8. '[i' → logprob: -7.897934436798096
    9. ' i' → logprob: -7.897934436798096
    10. '[n' → logprob: -8.147933959960938

Token 381: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.2463645935058594
    2. ' de' → logprob: -1.8713645935058594
    3. ' =' → logprob: -1.9963645935058594
    4. '_' → logprob: -1.9963645935058594
    5. ']' → logprob: -2.4963645935058594
    6. '[i' → logprob: -3.1213645935058594
    7. '_des' → logprob: -3.7463645935058594
    8. 's' → logprob: -3.8713645935058594
    9. '   ' → logprob: -3.8713645935058594
    10. '][' → logprob: -3.9963645935058594

Token 382: ' façons' (ID: 165958)
  Prédit: ' façons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.32451164722442627
    2. 'fa' → logprob: -1.4495116472244263
    3. '_' → logprob: -4.074511528015137
    4. ' fa' → logprob: -4.699511528015137
    5. 'man' → logprob: -5.199511528015137
    6. ' man' → logprob: -6.074511528015137
    7. '```' → logprob: -6.574511528015137
    8. ' ' → logprob: -6.699511528015137
    9. 'ways' → logprob: -6.949511528015137
    10. ' ways' → logprob: -6.949511528015137

Token 383: ' jusqu' (ID: 21961)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7426559329032898
    2. '[i' → logprob: -0.9926559329032898
    3. '=' → logprob: -2.7426559925079346
    4. ' de' → logprob: -3.1176559925079346
    5. '[' → logprob: -4.3676557540893555
    6. '   ' → logprob: -4.4926557540893555
    7. ' d' → logprob: -4.8676557540893555
    8. ' i' → logprob: -5.3676557540893555
    9. ' ' → logprob: -6.2426557540893555
    10. ')' → logprob: -6.4926557540893555

Token 384: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.3876020312309265
    2. '[i' → logprob: -1.5126020908355713
    3. 'à' → logprob: -3.6376020908355713
    4. '’à' → logprob: -3.8876020908355713
    5. '][' → logprob: -4.262601852416992
    6. ''au' → logprob: -4.262601852416992
    7. ' à' → logprob: -4.762601852416992
    8. ''][' → logprob: -5.387601852416992
    9. '   ' → logprob: -6.262601852416992
    10. ']' → logprob: -6.262601852416992

Token 385: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5882656574249268
    2. 'i' → logprob: -0.9632656574249268
    3. 'l' → logprob: -3.2132656574249268
    4. ' l' → logprob: -4.088265419006348
    5. 'index' → logprob: -6.338265419006348
    6. ' index' → logprob: -6.463265419006348
    7. ' la' → logprob: -6.963265419006348
    8. 'indice' → logprob: -7.338265419006348
    9. 'la' → logprob: -8.713265419006348
    10. ' position' → logprob: -8.838265419006348

Token 386: 'ème' (ID: 9767)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09544139355421066
    2. ']' → logprob: -3.4704413414001465
    3. '[i' → logprob: -3.9704413414001465
    4. ' ][' → logprob: -4.2204413414001465
    5. '   ' → logprob: -4.8454413414001465
    6. ' =' → logprob: -5.5954413414001465
    7. '[' → logprob: -6.2204413414001465
    8. ' [' → logprob: -6.4704413414001465
    9. '_' → logprob: -6.7204413414001465
    10. ')' → logprob: -6.7204413414001465

Token 387: ' position' (ID: 4010)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20957279205322266
    2. ' _' → logprob: -2.4595727920532227
    3. 'élé' → logprob: -3.4595727920532227
    4. '_token' → logprob: -4.209572792053223
    5. ']' → logprob: -4.834572792053223
    6. 'indice' → logprob: -4.834572792053223
    7. '   ' → logprob: -5.209572792053223
    8. ' élément' → logprob: -5.334572792053223
    9. ' token' → logprob: -5.834572792053223
    10. ' ' → logprob: -6.334572792053223

Token 388: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13288651406764984
    2. '   ' → logprob: -2.8828864097595215
    3. '[i' → logprob: -3.7578864097595215
    4. ',' → logprob: -4.6328864097595215
    5. ']' → logprob: -5.0078864097595215
    6. '][' → logprob: -5.2578864097595215
    7. '[' → logprob: -5.5078864097595215
    8. '=' → logprob: -5.6328864097595215
    9. '_' → logprob: -5.8828864097595215
    10. 'dp' → logprob: -6.1328864097595215

Token 389: ' hauteur' (ID: 72987)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0801595449447632
    2. ' une' → logprob: -1.7051595449447632
    3. ' hauteur' → logprob: -1.7051595449447632
    4. 'la' → logprob: -2.4551596641540527
    5. 'ha' → logprob: -2.5801596641540527
    6. 'j' → logprob: -2.8301596641540527
    7. ' j' → logprob: -3.3301596641540527
    8. 'le' → logprob: -4.830159664154053
    9. 'une' → logprob: -4.830159664154053
    10. ' le' → logprob: -5.080159664154053

Token 390: ' index' (ID: 3472)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.1533132791519165
    2. ' =' → logprob: -1.4033132791519165
    3. '[j' → logprob: -2.528313159942627
    4. 'max' → logprob: -2.653313159942627
    5. 'j' → logprob: -3.153313159942627
    6. ' max' → logprob: -3.778313159942627
    7. ' i' → logprob: -3.778313159942627
    8. '   ' → logprob: -3.903313159942627
    9. '_max' → logprob: -3.903313159942627
    10. ' maximale' → logprob: -4.028313159942627

Token 391: ' j' (ID: 441)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0279921293258667
    2. '0' → logprob: -1.4029921293258667
    3. 'ation' → logprob: -2.2779922485351562
    4. '[' → logprob: -2.9029922485351562
    5. '_comp' → logprob: -3.1529922485351562
    6. '   ' → logprob: -3.6529922485351562
    7. ' ' → logprob: -3.9029922485351562
    8. '_com' → logprob: -4.027992248535156
    9. 's' → logprob: -4.277992248535156
    10. 'e' → logprob: -4.527992248535156

Token 392: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0254298634827137
    2. '=' → logprob: -4.275429725646973
    3. '   ' → logprob: -5.650429725646973
    4. 'dp' → logprob: -5.900429725646973
    5. ']' → logprob: -6.025429725646973
    6. 'import' → logprob: -7.150429725646973
    7. '```' → logprob: -8.025429725646973
    8. '[i' → logprob: -8.275429725646973
    9. ' ' → logprob: -8.400429725646973
    10. ' dp' → logprob: -9.150429725646973

Token 393: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18798711895942688
    2. '   ' → logprob: -1.8129870891571045
    3. '=' → logprob: -6.062987327575684
    4. 'dp' → logprob: -6.062987327575684
    5. '[i' → logprob: -7.687987327575684
    6. ' dp' → logprob: -7.687987327575684
    7. '```' → logprob: -7.812987327575684
    8. '
' → logprob: -8.187987327575684
    9. ' ' → logprob: -8.187987327575684
    10. ' =
' → logprob: -8.187987327575684

Token 394: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.02642720192670822
    2. ' dp' → logprob: -3.6514272689819336
    3. '   ' → logprob: -9.651427268981934
    4. '[' → logprob: -11.151427268981934
    5. '
' → logprob: -12.026427268981934
    6. 'd' → logprob: -12.151427268981934
    7. 'import' → logprob: -12.276427268981934
    8. 'from' → logprob: -12.401427268981934
    9. '	dp' → logprob: -12.526427268981934
    10. ' 
' → logprob: -12.651427268981934

Token 395: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132932484149933
    2. '=' → logprob: -1.313293218612671
    3. '=[' → logprob: -11.06329345703125
    4. '[' → logprob: -12.06329345703125
    5. '=[[' → logprob: -12.31329345703125
    6. ')' → logprob: -13.56329345703125
    7. ']' → logprob: -14.06329345703125
    8. ' =[' → logprob: -14.43829345703125
    9. '=[]' → logprob: -14.56329345703125
    10. ' ' → logprob: -14.68829345703125

Token 396: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.005265888292342424
    2. ' [[' → logprob: -5.505265712738037
    3. '[' → logprob: -6.755265712738037
    4. ' [' → logprob: -10.755266189575195
    5. '[{' → logprob: -14.505266189575195
    6. '[]' → logprob: -16.755266189575195
    7. '[
' → logprob: -16.880266189575195
    8. '[n' → logprob: -17.005266189575195
    9. '   ' → logprob: -17.880266189575195
    10. '{' → logprob: -18.005266189575195

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.500004768371582
    3. 'False' → logprob: -14.875004768371582
    4. 'mod' → logprob: -16.250003814697266
    5. '[' → logprob: -16.375003814697266
    6. '(' → logprob: -16.875003814697266
    7. '1' → logprob: -17.625003814697266
    8. '-' → logprob: -17.750003814697266
    9. '   ' → logprob: -17.875003814697266
    10. ']' → logprob: -18.000003814697266

Token 398: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6772697567939758
    2. ']' → logprob: -1.052269697189331
    3. 'for' → logprob: -2.052269697189331
    4. ']*(' → logprob: -4.55226993560791
    5. ']*' → logprob: -6.17726993560791
    6. '   ' → logprob: -6.80226993560791
    7. '][' → logprob: -8.55226993560791
    8. ')' → logprob: -9.42726993560791
    9. '(n' → logprob: -9.67726993560791
    10. ' ]' → logprob: -9.80226993560791

Token 399: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.026504525914788246
    2. '_j' → logprob: -3.9015045166015625
    3. ' _' → logprob: -5.5265045166015625
    4. ' in' → logprob: -6.4015045166015625
    5. ' j' → logprob: -9.026504516601562
    6. 'j' → logprob: -9.276504516601562
    7. 'in' → logprob: -9.901504516601562
    8. '_in' → logprob: -10.526504516601562
    9. '_range' → logprob: -12.651504516601562
    10. '_i' → logprob: -13.151504516601562

Token 400: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.43042704463005066
    2. 'range' → logprob: -1.180427074432373
    3. ' in' → logprob: -3.555427074432373
    4. 'dp' → logprob: -5.180427074432373
    5. 'len' → logprob: -5.680427074432373
    6. ' range' → logprob: -6.055427074432373
    7. 'a' → logprob: -6.055427074432373
    8. 'n' → logprob: -9.180426597595215
    9. '(dp' → logprob: -10.305426597595215
    10. '(len' → logprob: -10.805426597595215

Token 401: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007227989844977856
    2. 'a' → logprob: -7.875722885131836
    3. ' range' → logprob: -8.125722885131836
    4. 'comp' → logprob: -10.750722885131836
    5. '(range' → logprob: -11.000722885131836
    6. '   ' → logprob: -12.750722885131836
    7. 'data' → logprob: -13.750722885131836
    8. '(a' → logprob: -14.000722885131836
    9. 'dp' → logprob: -14.000722885131836
    10. '
' → logprob: -14.500722885131836

Token 402: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25679638981819153
    2. '(len' → logprob: -1.5067963600158691
    3. '(N' → logprob: -5.881796360015869
    4. 'N' → logprob: -6.881796360015869
    5. ' len' → logprob: -7.131796360015869
    6. '   ' → logprob: -8.881796836853027
    7. '[len' → logprob: -10.506796836853027
    8. ' (' → logprob: -11.006796836853027
    9. ' N' → logprob: -11.131796836853027
    10. '(' → logprob: -11.256796836853027

Token 403: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.14943766593933105
    2. '(comp' → logprob: -2.024437665939331
    3. '(data' → logprob: -5.39943790435791
    4. '(dp' → logprob: -6.14943790435791
    5. 'a' → logprob: -9.64943790435791
    6. 'comp' → logprob: -12.52443790435791
    7. '(com' → logprob: -13.02443790435791
    8. ' comp' → logprob: -13.14943790435791
    9. '[a' → logprob: -13.27443790435791
    10. '(b' → logprob: -13.77443790435791

Token 404: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.5216827392578125
    2. '))' → logprob: -1.0216827392578125
    3. ')' → logprob: -3.2716827392578125
    4. '+' → logprob: -5.0216827392578125
    5. ')]' → logprob: -7.0216827392578125
    6. ')])' → logprob: -7.1466827392578125
    7. '))+' → logprob: -8.896682739257812
    8. ']+' → logprob: -10.146682739257812
    9. '))]
' → logprob: -10.396682739257812
    10. ' +' → logprob: -11.146682739257812

Token 405: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42875152826309204
    2. '1' → logprob: -1.0537514686584473
    3. ' ' → logprob: -10.678751945495605
    4. '3' → logprob: -11.053751945495605
    5. '
' → logprob: -12.803751945495605
    6. '+' → logprob: -12.866251945495605
    7. '   ' → logprob: -13.553751945495605
    8. '```' → logprob: -13.741251945495605
    9. '0' → logprob: -14.303751945495605
    10. ')' → logprob: -14.678751945495605

Token 406: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.843177233240567e-05
    2. ')' → logprob: -11.500018119812012
    3. ' )' → logprob: -12.500018119812012
    4. ']' → logprob: -13.000018119812012
    5. ')]
' → logprob: -14.000018119812012
    6. '   ' → logprob: -14.875018119812012
    7. '+' → logprob: -14.875018119812012
    8. ' ]' → logprob: -15.625018119812012
    9. ']]' → logprob: -16.000019073486328
    10. '])]' → logprob: -16.625019073486328

Token 407: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01855560764670372
    2. 'for' → logprob: -4.143555641174316
    3. ']' → logprob: -6.018555641174316
    4. '   ' → logprob: -9.768555641174316
    5. ')' → logprob: -11.518555641174316
    6. '<|end|>' → logprob: -12.018555641174316
    7. '	for' → logprob: -12.518555641174316
    8. ' ]' → logprob: -13.643555641174316
    9. '       ' → logprob: -14.018555641174316
    10. '    ' → logprob: -14.018555641174316

Token 408: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.042218275368213654
    2. ' range' → logprob: -3.7922182083129883
    3. ' _' → logprob: -4.417218208312988
    4. ' in' → logprob: -5.417218208312988
    5. ' i' → logprob: -6.667218208312988
    6. '_range' → logprob: -7.542218208312988
    7. 'range' → logprob: -8.042218208312988
    8. 'i' → logprob: -9.792218208312988
    9. 'in' → logprob: -9.917218208312988
    10. '_i' → logprob: -10.042218208312988

Token 409: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26042792201042175
    2. 'in' → logprob: -1.8854279518127441
    3. '_' → logprob: -3.510427951812744
    4. ' range' → logprob: -3.635427951812744
    5. ' in' → logprob: -4.260427951812744
    6. 'i' → logprob: -5.010427951812744
    7. '_range' → logprob: -8.010427474975586
    8. ' i' → logprob: -9.885427474975586
    9. '_i' → logprob: -10.260427474975586
    10. '0' → logprob: -11.260427474975586

Token 410: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858759790658951
    2. ' range' → logprob: -3.0485875606536865
    3. '_' → logprob: -15.673587799072266
    4. '(range' → logprob: -17.173587799072266
    5. '_range' → logprob: -18.423587799072266
    6. 'in' → logprob: -18.673587799072266
    7. '	range' → logprob: -18.798587799072266
    8. ' ' → logprob: -19.298587799072266
    9. ' in' → logprob: -20.298587799072266
    10. '   ' → logprob: -20.548587799072266

Token 411: '(N' (ID: 10564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6443861126899719
    2. 'N' → logprob: -1.2693860530853271
    3. '(N' → logprob: -1.8943860530853271
    4. ' range' → logprob: -3.394386053085327
    5. '(range' → logprob: -4.769386291503906
    6. '[N' → logprob: -7.644386291503906
    7. 'n' → logprob: -7.644386291503906
    8. '(n' → logprob: -8.144386291503906
    9. '   ' → logprob: -9.019386291503906
    10. ' N' → logprob: -9.894386291503906

Token 412: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0020013193134218454
    2. '+' → logprob: -6.2520012855529785
    3. ')]
' → logprob: -10.377001762390137
    4. '   ' → logprob: -11.252001762390137
    5. ' )' → logprob: -11.377001762390137
    6. ')' → logprob: -12.252001762390137
    7. ' +' → logprob: -12.377001762390137
    8. ')])' → logprob: -12.877001762390137
    9. ')][' → logprob: -13.752001762390137
    10. ')]
' → logprob: -14.252001762390137

Token 413: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 414: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04671560227870941
    2. 'for' → logprob: -3.171715497970581
    3. '   ' → logprob: -5.79671573638916
    4. 'j' → logprob: -8.29671573638916
    5. '#' → logprob: -9.04671573638916
    6. ' for' → logprob: -9.67171573638916
    7. 'i' → logprob: -9.92171573638916
    8. 'sum' → logprob: -10.54671573638916
    9. 'from' → logprob: -10.79671573638916
    10. 's' → logprob: -10.92171573638916

Token 415: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5260577201843262
    2. 'dp' → logprob: -0.9010577201843262
    3. '#' (adapté à ' #') → logprob: -6.151057720184326
    4. 'j' → logprob: -8.151058197021484
    5. ' for' → logprob: -8.526058197021484
    6. 'i' → logprob: -9.401058197021484
    7. '   ' → logprob: -9.526058197021484
    8. 'max' → logprob: -10.776058197021484
    9. 'base' → logprob: -11.276058197021484
    10. 'val' → logprob: -11.526058197021484

Token 416: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13038161396980286
    2. 'dp' → logprob: -2.5053815841674805
    3. 'j' → logprob: -3.7553815841674805
    4. '#' → logprob: -5.1303815841674805
    5. 'first' → logprob: -5.2553815841674805
    6. 'val' → logprob: -5.8803815841674805
    7. 'i' → logprob: -6.3803815841674805
    8. 'base' → logprob: -8.63038158416748
    9. 'value' → logprob: -8.75538158416748
    10. 'def' → logprob: -9.00538158416748

Token 417: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.008204021491110325
    2. 'ization' → logprob: -4.883203983306885
    3. 'z' → logprob: -8.758204460144043
    4. 's' → logprob: -8.758204460144043
    5. 'ation' → logprob: -10.008204460144043
    6. 'state' → logprob: -10.258204460144043
    7. 'is' → logprob: -10.383204460144043
    8. 'al' → logprob: -10.383204460144043
    9. '#' → logprob: -10.758204460144043
    10. 'dp' → logprob: -10.883204460144043

Token 418: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7352911829948425
    2. 'dp' → logprob: -0.7352911829948425
    3. '   ' → logprob: -3.3602912425994873
    4. 'for' → logprob: -5.735291004180908
    5. ' dp' → logprob: -6.235291004180908
    6. ' for' → logprob: -7.985291004180908
    7. '_dp' → logprob: -8.235291481018066
    8. '
' → logprob: -8.860291481018066
    9. ' =' → logprob: -9.485291481018066
    10. '(dp' → logprob: -9.610291481018066

Token 419: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05912167951464653
    2. ' dp' → logprob: -3.934121608734131
    3. 'i' → logprob: -4.059121608734131
    4. ' la' → logprob: -5.059121608734131
    5. 'j' → logprob: -5.684121608734131
    6. 'for' → logprob: -5.809121608734131
    7. ' i' → logprob: -6.309121608734131
    8. 'l' → logprob: -6.684121608734131
    9. 'la' → logprob: -6.684121608734131
    10. ' j' → logprob: -7.184121608734131

Token 420: ' première' (ID: 23423)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.285879909992218
    2. 'prem' → logprob: -1.6608798503875732
    3. 'for' → logprob: -3.4108798503875732
    4. 'first' → logprob: -4.535880088806152
    5. ' première' → logprob: -5.910880088806152
    6. '0' → logprob: -6.035880088806152
    7. 'i' → logprob: -6.285880088806152
    8. '[' → logprob: -6.410880088806152
    9. ' dp' → logprob: -6.535880088806152
    10. ' first' → logprob: -7.160880088806152

Token 421: ' transition' (ID: 14463)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.21880298852920532
    2. 'for' → logprob: -2.0938029289245605
    3. 'dp' → logprob: -3.2188029289245605
    4. ' ligne' → logprob: -4.0938029289245605
    5. 'i' → logprob: -5.0938029289245605
    6. 'range' → logprob: -5.2188029289245605
    7. 'line' → logprob: -6.3438029289245605
    8. '[' → logprob: -6.8438029289245605
    9. '[i' → logprob: -7.8438029289245605
    10. 'rang' → logprob: -8.468803405761719

Token 422: ' selon' (ID: 27571)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14423184096813202
    2. '   ' → logprob: -2.7692317962646484
    3. ' dp' → logprob: -3.2692317962646484
    4. '[' → logprob: -4.519231796264648
    5. '    
' → logprob: -4.894231796264648
    6. '
' → logprob: -5.019231796264648
    7. 'for' → logprob: -5.644231796264648
    8. ' for' → logprob: -6.644231796264648
    9. '(dp' → logprob: -7.269231796264648
    10. '_dp' → logprob: -7.394231796264648

Token 423: ' les' (ID: 1341)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5674813985824585
    2. 'a' → logprob: -1.1924813985824585
    3. ' la' → logprob: -3.442481517791748
    4. 'la' → logprob: -3.567481517791748
    5. ' h' → logprob: -3.692481517791748
    6. 'comp' → logprob: -4.567481517791748
    7. 'l' → logprob: -4.567481517791748
    8. 'dp' → logprob: -4.817481517791748
    9. ' a' → logprob: -5.442481517791748
    10. 'pow' → logprob: -5.942481517791748

Token 424: ' relations' (ID: 5523)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.12445168197154999
    2. 'a' → logprob: -3.4994516372680664
    3. 'val' → logprob: -3.4994516372680664
    4. 'comp' → logprob: -3.8744516372680664
    5. 'range' → logprob: -4.624451637268066
    6. 'ha' → logprob: -5.374451637268066
    7. 'compressed' → logprob: -5.749451637268066
    8. 'value' → logprob: -5.999451637268066
    9. 'indices' → logprob: -6.124451637268066
    10. '0' → logprob: -6.374451637268066

Token 425: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5005807280540466
    2. '   ' → logprob: -1.8755807876586914
    3. 'dp' → logprob: -1.8755807876586914
    4. ' for' → logprob: -2.8755807876586914
    5. 'h' → logprob: -4.250580787658691
    6. 'if' → logprob: -5.000580787658691
    7. 'a' → logprob: -5.375580787658691
    8. ' dp' → logprob: -6.875580787658691
    9. 'j' → logprob: -7.500580787658691
    10. 'i' → logprob: -7.625580787658691

Token 426: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16937211155891418
    2. 'ha' → logprob: -2.169372081756592
    3. 'h' → logprob: -4.169372081756592
    4. 'rec' → logprob: -5.169372081756592
    5. 'dp' → logprob: -5.294372081756592
    6. 'ré' → logprob: -5.419372081756592
    7. 'trans' → logprob: -6.044372081756592
    8. '```' → logprob: -6.294372081756592
    9. 're' → logprob: -6.669372081756592
    10. 'transition' → logprob: -7.044372081756592

Token 427: ' sé' (ID: 7462)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -1.5394705533981323
    2. 'prem' → logprob: -1.6644705533981323
    3. ' hauteur' → logprob: -1.7894705533981323
    4. 'pro' → logprob: -2.039470672607422
    5. 'r' → logprob: -2.164470672607422
    6. 'dp' → logprob: -3.539470672607422
    7. 'h' → logprob: -3.789470672607422
    8. 'problem' → logprob: -4.039470672607422
    9. 'fonction' → logprob: -4.039470672607422
    10. 'dé' → logprob: -4.664470672607422

Token 428: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0008108171750791371
    2. 'q' → logprob: -7.625810623168945
    3. 'quences' → logprob: -8.375810623168945
    4. 'dp' → logprob: -10.000810623168945
    5. 'rie' → logprob: -11.000810623168945
    6. 'qu' → logprob: -11.750810623168945
    7. 'ance' → logprob: -12.500810623168945
    8. 'quent' → logprob: -12.625810623168945
    9. 'QUENCE' → logprob: -13.125810623168945
    10. '#' → logprob: -13.375810623168945

Token 429: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14386998116970062
    2. 'for' → logprob: -2.7688698768615723
    3. '   ' → logprob: -3.3938698768615723
    4. '
' → logprob: -4.268869876861572
    5. ' for' → logprob: -4.893869876861572
    6. '[' → logprob: -5.643869876861572
    7. ' =' → logprob: -5.893869876861572
    8. ' dp' → logprob: -5.893869876861572
    9. '    
' → logprob: -6.143869876861572
    10. '=' → logprob: -7.018869876861572

Token 430: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.053568959236145
    2. '   ' → logprob: -1.428568959236145
    3. 'if' → logprob: -1.428568959236145
    4. 'for' → logprob: -2.0535688400268555
    5. 'i' → logprob: -3.6785688400268555
    6. ' for' → logprob: -4.9285688400268555
    7. '
' → logprob: -5.5535688400268555
    8. ' if' → logprob: -5.5535688400268555
    9. 'j' → logprob: -6.8035688400268555
    10. '    
' → logprob: -6.9285688400268555

Token 431: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12171442806720734
    2. 'dp' → logprob: -2.6217143535614014
    3. 'if' → logprob: -3.4967143535614014
    4. 'j' → logprob: -5.4967145919799805
    5. ' for' → logprob: -6.1217145919799805
    6. 'first' → logprob: -6.7467145919799805
    7. 'val' → logprob: -6.8717145919799805
    8. 'max' → logprob: -7.1217145919799805
    9. 'min' → logprob: -7.7467145919799805
    10. 'base' → logprob: -8.37171459197998

Token 432: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6360272765159607
    2. ' =' → logprob: -0.7610272765159607
    3. ',' → logprob: -6.2610273361206055
    4. '0' → logprob: -6.8860273361206055
    5. ' ' → logprob: -9.261027336120605
    6. ']' → logprob: -9.636027336120605
    7. '   ' → logprob: -9.761027336120605
    8. ')' → logprob: -10.011027336120605
    9. ' in' → logprob: -10.136027336120605
    10. '[' → logprob: -10.636027336120605

Token 433: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3486975133419037
    2. '1' → logprob: -1.223697543144226
    3. ' ' → logprob: -8.473697662353516
    4. '2' → logprob: -11.348697662353516
    5. 'N' → logprob: -11.723697662353516
    6. 'a' → logprob: -12.161197662353516
    7. '-' → logprob: -12.286197662353516
    8. '   ' → logprob: -13.161197662353516
    9. 'n' → logprob: -13.223697662353516
    10. 'h' → logprob: -13.536197662353516

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016110733151435852
    2. '1' → logprob: -4.141110897064209
    3. ' ' → logprob: -9.89111042022705
    4. '-' → logprob: -11.64111042022705
    5. '2' → logprob: -12.01611042022705
    6. 'N' → logprob: -12.82861042022705
    7. 'i' → logprob: -13.64111042022705
    8. 'a' → logprob: -14.07861042022705
    9. 'len' → logprob: -14.14111042022705
    10. 'n' → logprob: -14.45361042022705

Token 435: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012891360558569431
    2. 'for' → logprob: -5.2628912925720215
    3. '    
' → logprob: -5.8878912925720215
    4. ' 
' → logprob: -6.7628912925720215
    5. '   ' → logprob: -7.0128912925720215
    6. '  
' → logprob: -7.1378912925720215
    7. '   
' → logprob: -7.2628912925720215
    8. ' for' → logprob: -8.26289176940918
    9. 'dp' → logprob: -8.26289176940918
    10. ',' → logprob: -8.51289176940918

Token 436: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16815568506717682
    2. 'dp' → logprob: -2.0431556701660156
    3. ' 
' → logprob: -5.043155670166016
    4. '[' → logprob: -5.543155670166016
    5. 'for' → logprob: -5.793155670166016
    6. '  
' → logprob: -5.918155670166016
    7. ' dp' → logprob: -6.418155670166016
    8. '[j' → logprob: -6.668155670166016
    9. ':' → logprob: -6.668155670166016
    10. '   
' → logprob: -6.918155670166016

Token 437: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03650376945734024
    2. 'if' (adapté à ' if') → logprob: -4.161503791809082
    3. 'j' → logprob: -5.286503791809082
    4. ' for' → logprob: -5.536503791809082
    5. 'while' → logprob: -5.536503791809082
    6. 'dp' → logprob: -5.536503791809082
    7. 'h' → logprob: -6.661503791809082
    8. 'height' → logprob: -7.411503791809082
    9. '
' → logprob: -8.036503791809082
    10. 'a' → logprob: -8.161503791809082

Token 438: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5461451411247253
    2. 'h' → logprob: -1.5461452007293701
    3. ' a' → logprob: -2.29614520072937
    4. 'a' → logprob: -3.04614520072937
    5. ' comp' → logprob: -3.54614520072937
    6. 'comp' → logprob: -4.421144962310791
    7. 'N' → logprob: -5.421144962310791
    8. ' N' → logprob: -5.421144962310791
    9. ' n' → logprob: -5.796144962310791
    10. ' len' → logprob: -6.296144962310791

Token 439: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5231388807296753
    2. '[i' → logprob: -0.8981388807296753
    3. ' [' → logprob: -12.648138999938965
    4. '0' → logprob: -12.898138999938965
    5. '   ' → logprob: -12.898138999938965
    6. '```' → logprob: -13.648138999938965
    7. '==' → logprob: -13.898138999938965
    8. '[I' → logprob: -14.148138999938965
    9. '[
' → logprob: -14.523138999938965
    10. '[j' → logprob: -14.523138999938965

Token 440: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.054011307656764984
    2. ']==' → logprob: -3.929011344909668
    3. '[' → logprob: -4.054011344909668
    4. ']>' → logprob: -4.929011344909668
    5. '[i' → logprob: -5.429011344909668
    6. '+' → logprob: -6.304011344909668
    7. ']<' → logprob: -7.054011344909668
    8. '-' → logprob: -8.054011344909668
    9. ' ]' → logprob: -8.429011344909668
    10. ']!=' → logprob: -8.679011344909668

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11219305545091629
    2. ']' → logprob: -2.3621931076049805
    3. 'i' → logprob: -4.6121931076049805
    4. '0' → logprob: -6.8621931076049805
    5. ']+' → logprob: -7.7371931076049805
    6. ']==' → logprob: -8.73719310760498
    7. ' ' → logprob: -9.61219310760498
    8. '```' → logprob: -9.73719310760498
    9. '-' → logprob: -10.36219310760498
    10. ')' → logprob: -10.61219310760498

Token 442: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022594889625906944
    2. ']>' → logprob: -4.272594928741455
    3. '>' → logprob: -5.272594928741455
    4. '[' → logprob: -6.397594928741455
    5. ']==' → logprob: -7.647594928741455
    6. ']<' → logprob: -8.022594451904297
    7. ']>=' → logprob: -8.397594451904297
    8. ' >' → logprob: -8.647594451904297
    9. ' ]' → logprob: -9.022594451904297
    10. '-' → logprob: -9.397594451904297

Token 443: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.19963598251342773
    2. ' >' → logprob: -2.0746359825134277
    3. '<' → logprob: -3.0746359825134277
    4. ' <' → logprob: -4.949635982513428
    5. '>=' → logprob: -7.199635982513428
    6. '==' → logprob: -7.574635982513428
    7. ']' → logprob: -8.824636459350586
    8. ' ==' → logprob: -8.824636459350586
    9. '<=' → logprob: -8.824636459350586
    10. ' >=' → logprob: -9.199636459350586

Token 444: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0018059646245092154
    2. ' h' → logprob: -6.751805782318115
    3. 'a' → logprob: -7.501805782318115
    4. '   ' → logprob: -10.501806259155273
    5. 'i' → logprob: -10.626806259155273
    6. 'comp' → logprob: -11.376806259155273
    7. ' ' → logprob: -12.376806259155273
    8. ' a' → logprob: -12.626806259155273
    9. '0' → logprob: -13.001806259155273
    10. '	h' → logprob: -13.126806259155273

Token 445: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.13388703338569e-06
    2. 'i' → logprob: -11.875009536743164
    3. '[' → logprob: -13.125009536743164
    4. '```' → logprob: -16.500009536743164
    5. '(i' → logprob: -17.875009536743164
    6. '0' → logprob: -17.875009536743164
    7. '   ' → logprob: -18.375009536743164
    8. '1' → logprob: -19.125009536743164
    9. '_i' → logprob: -20.000009536743164
    10. 'h' → logprob: -20.000009536743164

Token 446: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5360193252563477
    2. ']:' → logprob: -0.9110193252563477
    3. ']' → logprob: -5.286019325256348
    4. '   ' → logprob: -5.911019325256348
    5. ':' → logprob: -7.036019325256348
    6. '):
' → logprob: -7.411019325256348
    7. '       ' → logprob: -7.411019325256348
    8. ' ]' → logprob: -7.661019325256348
    9. ']:
' → logprob: -7.661019325256348
    10. ':
' → logprob: -7.911019325256348

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006447131279855967
    2. 'dp' → logprob: -5.3814473152160645
    3. ':' → logprob: -7.5064473152160645
    4. 'for' → logprob: -7.6314473152160645
    5. '   ' → logprob: -8.256446838378906
    6. ' dp' → logprob: -8.506446838378906
    7. ':
' → logprob: -8.881446838378906
    8. ' for' → logprob: -9.006446838378906
    9. '
' → logprob: -11.506446838378906
    10. '	dp' → logprob: -11.756446838378906

Token 448: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06622086465358734
    2. 'for' → logprob: -2.816220760345459
    3. 'j' → logprob: -6.316220760345459
    4. '       ' → logprob: -6.691220760345459
    5. '   ' → logprob: -7.066220760345459
    6. 'if' → logprob: -8.441221237182617
    7. '           ' → logprob: -10.316221237182617
    8. ' dp' → logprob: -10.691221237182617
    9. ' for' → logprob: -11.066221237182617
    10. '	dp' → logprob: -11.816221237182617

Token 449: ' Cas' (ID: 8066)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.049883101135492325
    2. 'for' → logprob: -3.0498831272125244
    3. 'j' → logprob: -7.049882888793945
    4. '   ' → logprob: -9.424882888793945
    5. ' dp' → logprob: -9.424882888793945
    6. 'if' → logprob: -9.549882888793945
    7. ' for' → logprob: -9.924882888793945
    8. 'val' → logprob: -9.924882888793945
    9. 'pow' → logprob: -11.424882888793945
    10. 's' → logprob: -11.674882888793945

Token 450: ' où' (ID: 15113)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1537868976593018
    2. '   ' → logprob: -1.9037868976593018
    3. '[i' → logprob: -2.0287868976593018
    4. '[' → logprob: -2.0287868976593018
    5. ' dp' → logprob: -2.1537868976593018
    6. ' =' → logprob: -2.7787868976593018
    7. ':' → logprob: -3.7787868976593018
    8. '=' → logprob: -3.9037868976593018
    9. ' i' → logprob: -4.153786659240723
    10. '       ' → logprob: -4.528786659240723

Token 451: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07321891188621521
    2. 'h' → logprob: -3.448218822479248
    3. ' dp' → logprob: -3.448218822479248
    4. '   ' → logprob: -6.198218822479248
    5. ' h' → logprob: -6.198218822479248
    6. 'for' → logprob: -7.073218822479248
    7. 'a' → logprob: -7.073218822479248
    8. 'j' → logprob: -8.448219299316406
    9. '       ' → logprob: -8.698219299316406
    10. 'pow' → logprob: -8.948219299316406

Token 452: ' prochaine' (ID: 78876)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22810406982898712
    2. ' dp' → logprob: -1.6031041145324707
    3. ' ' → logprob: -7.103104114532471
    4. ']' → logprob: -8.103103637695312
    5. 'j' → logprob: -8.478103637695312
    6. '   ' → logprob: -8.853103637695312
    7. ')' → logprob: -9.103103637695312
    8. '[' → logprob: -9.228103637695312
    9. 'for' → logprob: -9.478103637695312
    10. ' ]' → logprob: -9.478103637695312

Token 453: ' hauteur' (ID: 72987)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1597797870635986
    2. '[' → logprob: -1.7847797870635986
    3. ']' → logprob: -2.2847797870635986
    4. ' hauteur' → logprob: -2.2847797870635986
    5. 'ha' → logprob: -2.4097797870635986
    6. 'height' → logprob: -3.6597797870635986
    7. '_' → logprob: -3.7847797870635986
    8. 'token' → logprob: -4.1597795486450195
    9. '[j' → logprob: -4.1597795486450195
    10. 'dp' → logprob: -4.5347795486450195

Token 454: ' est' (ID: 893)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2315988838672638
    2. ' >=' → logprob: -2.2315988540649414
    3. 'dp' → logprob: -3.6065988540649414
    4. '<=' → logprob: -3.7315988540649414
    5. '=' → logprob: -4.481598854064941
    6. ']' → logprob: -4.856598854064941
    7. '   ' → logprob: -5.231598854064941
    8. ' <=' → logprob: -5.356598854064941
    9. ']>=' → logprob: -5.606598854064941
    10. '==' → logprob: -5.731598854064941

Token 455: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5313339829444885
    2. 'sup' → logprob: -1.1563339233398438
    3. '>=' → logprob: -3.2813339233398438
    4. 'h' → logprob: -3.5313339233398438
    5. 'greater' → logprob: -4.156333923339844
    6. ' plus' → logprob: -5.406333923339844
    7. 'au' → logprob: -5.906333923339844
    8. 'super' → logprob: -6.156333923339844
    9. ' supérieure' → logprob: -6.406333923339844
    10. 'ég' → logprob: -7.156333923339844

Token 456: ' grande' (ID: 10094)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.8149100542068481
    2. 'grand' → logprob: -1.0649100542068481
    3. 'gr' → logprob: -1.8149100542068481
    4. 'large' → logprob: -4.189909934997559
    5. 'ha' → logprob: -4.439909934997559
    6. '```' → logprob: -4.939909934997559
    7. 'é' → logprob: -5.314909934997559
    8. '=' → logprob: -6.064909934997559
    9. ' grande' → logprob: -6.314909934997559
    10. 'import' → logprob: -6.439909934997559

Token 457: ' ou' (ID: 2031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1147369146347046
    2. ' or' → logprob: -1.1147369146347046
    3. '   ' → logprob: -1.4897369146347046
    4. '       ' → logprob: -3.114737033843994
    5. ' and' → logprob: -3.489737033843994
    6. ':
' → logprob: -4.114737033843994
    7. 'or' → logprob: -4.739737033843994
    8. 'dp' → logprob: -5.739737033843994
    9. 'and' → logprob: -6.114737033843994
    10. ' :' → logprob: -6.239737033843994

Token 458: ' ég' (ID: 33150)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.0013152358587831259
    2. 'égal' → logprob: -6.876315116882324
    3. 'eg' → logprob: -9.126315116882324
    4. 'é' → logprob: -9.876315116882324
    5. '```' → logprob: -10.501315116882324
    6. 'ou' → logprob: -10.626315116882324
    7. '=' → logprob: -10.876315116882324
    8. '_' → logprob: -11.251315116882324
    9. 'égalité' → logprob: -12.001315116882324
    10. ' ég' → logprob: -12.251315116882324

Token 459: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.4744113087654114
    2. 'al' → logprob: -0.9744113087654114
    3. '```' → logprob: -9.474411010742188
    4. 'gal' → logprob: -9.974411010742188
    5. 'aule' → logprob: -10.224411010742188
    6. 'a' → logprob: -10.724411010742188
    7. 'alee' → logprob: -10.724411010742188
    8. 'le' → logprob: -10.974411010742188
    9. '=' → logprob: -11.224411010742188
    10. 'l' → logprob: -11.599411010742188

Token 460: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7445614337921143
    2. ':' → logprob: -1.1195614337921143
    3. 'dp' → logprob: -2.2445614337921143
    4. '       ' → logprob: -3.2445614337921143
    5. ' or' → logprob: -4.244561195373535
    6. ' dp' → logprob: -4.369561195373535
    7. ':
' → logprob: -4.744561195373535
    8. '           ' → logprob: -4.869561195373535
    9. ',' → logprob: -5.619561195373535
    10. ' :' → logprob: -7.119561195373535

Token 461: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5486368536949158
    2. ':
' → logprob: -1.5486369132995605
    3. '       ' → logprob: -2.4236369132995605
    4. '   ' → logprob: -2.5486369132995605
    5. 'dp' → logprob: -4.4236369132995605
    6. '):
' → logprob: -5.2986369132995605
    7. '           ' → logprob: -5.4236369132995605
    8. ' :
' → logprob: -5.5486369132995605
    9. '):' → logprob: -5.6736369132995605
    10. ' dp' → logprob: -5.7986369132995605

Token 462: ' id' (ID: 1211)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.305602490901947
    2. 'for' → logprob: -1.6806025505065918
    3. 'j' → logprob: -3.305602550506592
    4. ' for' → logprob: -4.180602550506592
    5. ' dp' → logprob: -4.430602550506592
    6. '   ' → logprob: -4.680602550506592
    7. ' j' → logprob: -6.430602550506592
    8. 'pow' → logprob: -7.555602550506592
    9. '       ' → logprob: -8.430602073669434
    10. 'if' → logprob: -8.555602073669434

Token 463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8360627889633179
    2. '0' → logprob: -1.4610627889633179
    3. '_i' → logprob: -1.9610627889633179
    4. '_' → logprob: -2.9610629081726074
    5. 'x' → logprob: -3.3360629081726074
    6. '_current' → logprob: -3.5860629081726074
    7. '_x' → logprob: -4.586062908172607
    8. '=' → logprob: -4.836062908172607
    9. '_start' → logprob: -4.836062908172607
    10. '1' → logprob: -4.836062908172607

Token 464: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.2016698271036148
    2. ' comp' → logprob: -1.7016698122024536
    3. '   ' → logprob: -9.951669692993164
    4. 'dp' → logprob: -10.076669692993164
    5. '0' → logprob: -10.451669692993164
    6. '[' → logprob: -10.951669692993164
    7. '	comp' → logprob: -10.951669692993164
    8. 'a' → logprob: -11.201669692993164
    9. 'i' → logprob: -11.326669692993164
    10. '1' → logprob: -11.451669692993164

Token 465: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.13080821931362152
    2. '(h' → logprob: -2.130808115005493
    3. 'h' → logprob: -5.755808353424072
    4. '[' → logprob: -7.755808353424072
    5. '[a' → logprob: -8.630807876586914
    6. 'a' → logprob: -10.255807876586914
    7. '(' → logprob: -10.755807876586914
    8. '(a' → logprob: -11.130807876586914
    9. ' (' → logprob: -12.505807876586914
    10. '][' → logprob: -12.630807876586914

Token 466: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.908022285439074e-05
    2. '[' → logprob: -9.875059127807617
    3. 'i' → logprob: -12.750059127807617
    4. ']' → logprob: -12.875059127807617
    5. '])' → logprob: -14.000059127807617
    6. '(i' → logprob: -15.000059127807617
    7. '][' → logprob: -15.375059127807617
    8. '[
' → logprob: -15.750059127807617
    9. '   ' → logprob: -16.125059127807617
    10. '[I' → logprob: -16.625059127807617

Token 467: ']]
' (ID: 29446)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013207156443968415
    2. ']]' → logprob: -7.126320838928223
    3. '[' → logprob: -7.751320838928223
    4. 'i' → logprob: -9.751320838928223
    5. ']' → logprob: -11.376320838928223
    6. '0' → logprob: -12.376320838928223
    7. ']]]' → logprob: -12.876320838928223
    8. '(i' → logprob: -13.251320838928223
    9. ']]
' → logprob: -13.376320838928223
    10. '[]' → logprob: -14.126320838928223

Token 468: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0505685806274414
    2. 'dp' → logprob: -1.0505685806274414
    3. ']' → logprob: -2.0505685806274414
    4. '   ' → logprob: -3.0505685806274414
    5. '[' → logprob: -3.0505685806274414
    6. ')' → logprob: -3.9255685806274414
    7. ')
' → logprob: -4.050568580627441
    8. ']
' → logprob: -4.925568580627441
    9. '][' → logprob: -5.175568580627441
    10. ' dp' → logprob: -5.175568580627441

Token 469: ' id' (ID: 1211)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1471545398235321
    2. '   ' → logprob: -2.7721545696258545
    3. ' dp' → logprob: -2.7721545696258545
    4. 'for' → logprob: -4.897154331207275
    5. ' for' → logprob: -6.397154331207275
    6. '	dp' → logprob: -6.772154331207275
    7. ']' → logprob: -7.897154331207275
    8. '       ' → logprob: -8.147154808044434
    9. '
' → logprob: -8.272154808044434
    10. '    
' → logprob: -9.397154808044434

Token 470: '2' (ID: 17)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08437918871641159
    2. ' =' → logprob: -2.959379196166992
    3. '=' → logprob: -3.834379196166992
    4. ']=' → logprob: -5.084379196166992
    5. ']+=' → logprob: -8.084379196166992
    6. '   ' → logprob: -8.209379196166992
    7. ']+' → logprob: -9.084379196166992
    8. '[id' → logprob: -9.334379196166992
    9. '[' → logprob: -9.459379196166992
    10. ' ]' → logprob: -9.584379196166992

Token 471: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798858493566513
    2. '=' → logprob: -1.8048858642578125
    3. ']' → logprob: -8.929885864257812
    4. ')' → logprob: -12.929885864257812
    5. '   ' → logprob: -13.429885864257812
    6. ',' → logprob: -13.554885864257812
    7. ']=' → logprob: -13.929885864257812
    8. ' ' → logprob: -14.054885864257812
    9. '  ' → logprob: -15.054885864257812
    10. '    ' → logprob: -15.054885864257812

Token 472: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.005329100880771875
    2. ' comp' → logprob: -5.255329132080078
    3. '0' → logprob: -10.255329132080078
    4. 'com' → logprob: -11.630329132080078
    5. 'len' → logprob: -11.755329132080078
    6. 'id' → logprob: -11.755329132080078
    7. '   ' → logprob: -11.880329132080078
    8. 'dp' → logprob: -12.005329132080078
    9. 'max' → logprob: -12.255329132080078
    10. '(comp' → logprob: -12.505329132080078

Token 473: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -1.2352385965641588e-05
    2. 'h' → logprob: -12.000012397766113
    3. '(h' → logprob: -13.000012397766113
    4. '[' → logprob: -13.000012397766113
    5. ' [' → logprob: -14.500012397766113
    6. '[
' → logprob: -15.000012397766113
    7. '][' → logprob: -15.875012397766113
    8. '[(' → logprob: -16.625011444091797
    9. '.get' → logprob: -16.750011444091797
    10. ']' → logprob: -16.750011444091797

Token 474: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011784763046307489
    2. '[h' → logprob: -9.125118255615234
    3. '[' → logprob: -12.375118255615234
    4. 'i' → logprob: -12.500118255615234
    5. 'h' → logprob: -14.500118255615234
    6. '(i' → logprob: -15.750118255615234
    7. '{i' → logprob: -17.000118255615234
    8. '[j' → logprob: -17.000118255615234
    9. ']' → logprob: -17.125118255615234
    10. '[
' → logprob: -17.125118255615234

Token 475: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01605830155313015
    2. '+' → logprob: -4.141058444976807
    3. '[' → logprob: -11.016057968139648
    4. '+i' → logprob: -13.266057968139648
    5. '[
' → logprob: -13.516057968139648
    6. '(i' → logprob: -13.891057968139648
    7. '[++' → logprob: -13.891057968139648
    8. ']' → logprob: -14.516057968139648
    9. '[j' → logprob: -14.641057968139648
    10. 'i' → logprob: -15.016057968139648

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.739826181321405e-05
    2. '+' → logprob: -10.25004768371582
    3. '```' → logprob: -12.62504768371582
    4. ' ' → logprob: -13.37504768371582
    5. '   ' → logprob: -13.37504768371582
    6. '0' → logprob: -13.81254768371582
    7. 'i' → logprob: -13.93754768371582
    8. ']' → logprob: -14.18754768371582
    9. '[' → logprob: -14.93754768371582
    10. '[i' → logprob: -15.06254768371582

Token 477: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.05148453265428543
    2. ']]
' → logprob: -3.1764845848083496
    3. ']' → logprob: -4.92648458480835
    4. ']+' → logprob: -7.42648458480835
    5. '']]' → logprob: -8.801484107971191
    6. '[i' → logprob: -9.051484107971191
    7. ']]

' → logprob: -9.176484107971191
    8. ']]
' → logprob: -10.051484107971191
    9. '"]]' → logprob: -10.426484107971191
    10. ')]' → logprob: -10.426484107971191

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5590386390686035
    2. '
' → logprob: -1.3090386390686035
    3. '   ' → logprob: -2.9340386390686035
    4. '<|end|>' → logprob: -3.1840386390686035
    5. '        
' → logprob: -4.0590386390686035
    6. '    
' → logprob: -4.1840386390686035
    7. ')' → logprob: -4.8090386390686035
    8. '  
' → logprob: -5.4340386390686035
    9. 'dp' → logprob: -5.8090386390686035
    10. ' 
' → logprob: -5.9340386390686035

Token 479: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01901877298951149
    2. '   ' → logprob: -4.644018650054932
    3. 'for' (adapté à ' for') → logprob: -5.269018650054932
    4. 'if' → logprob: -6.519018650054932
    5. ' dp' → logprob: -6.894018650054932
    6. '
' → logprob: -7.019018650054932
    7. '       ' → logprob: -8.26901912689209
    8. '	dp' → logprob: -8.76901912689209
    9. ' for' → logprob: -9.01901912689209
    10. '    
' → logprob: -9.89401912689209

Token 480: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.17249228060245514
    2. 'k' → logprob: -2.297492265701294
    3. ' j' → logprob: -3.422492265701294
    4. 'x' → logprob: -4.547492504119873
    5. 'val' → logprob: -5.297492504119873
    6. 'v' → logprob: -6.047492504119873
    7. ' k' → logprob: -6.172492504119873
    8. ' val' → logprob: -6.547492504119873
    9. ' x' → logprob: -7.547492504119873
    10. 'prev' → logprob: -8.172492027282715

Token 481: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5761065483093262
    2. ' in' → logprob: -0.8261065483093262
    3. ')' → logprob: -9.201107025146484
    4. ',' → logprob: -10.826107025146484
    5. ' ' → logprob: -11.576107025146484
    6. '   ' → logprob: -11.701107025146484
    7. '	in' → logprob: -11.826107025146484
    8. '<|end|>' → logprob: -12.826107025146484
    9. '  ' → logprob: -13.201107025146484
    10. '_in' → logprob: -13.326107025146484

Token 482: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019301822176203132
    2. ' range' → logprob: -6.251930236816406
    3. '(range' → logprob: -14.001930236816406
    4. '	range' → logprob: -15.001930236816406
    5. '   ' → logprob: -15.126930236816406
    6. ')' → logprob: -16.751930236816406
    7. 'a' → logprob: -16.751930236816406
    8. ' ' → logprob: -17.751930236816406
    9. 'rang' → logprob: -18.001930236816406
    10. '[' → logprob: -18.251930236816406

Token 483: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.22840654850006104
    2. '(len' → logprob: -1.603406548500061
    3. '(' → logprob: -5.9784064292907715
    4. 'len' → logprob: -8.47840690612793
    5. ' (' → logprob: -9.35340690612793
    6. 'id' → logprob: -9.85340690612793
    7. '   ' → logprob: -10.47840690612793
    8. ' len' → logprob: -11.35340690612793
    9. '[id' → logprob: -11.47840690612793
    10. ' id' → logprob: -11.85340690612793

Token 484: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37683844566345215
    2. ',' → logprob: -1.2518384456634521
    3. ' +' → logprob: -4.251838684082031
    4. '):' → logprob: -5.501838684082031
    5. '):
' → logprob: -5.751838684082031
    6. ' ,' → logprob: -6.126838684082031
    7. '-' → logprob: -6.501838684082031
    8. ',id' → logprob: -6.751838684082031
    9. '   ' → logprob: -8.376838684082031
    10. ')' → logprob: -8.376838684082031

Token 485: ' id' (ID: 1211)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2025083303451538
    2. 'id' → logprob: -1.7025083303451538
    3. ' len' → logprob: -7.327508449554443
    4. ' id' → logprob: -7.952508449554443
    5. '0' → logprob: -10.702507972717285
    6. '   ' → logprob: -10.827507972717285
    7. '           ' → logprob: -11.827507972717285
    8. ' -' → logprob: -12.327507972717285
    9. '(len' → logprob: -12.452507972717285
    10. '-' → logprob: -12.577507972717285

Token 486: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003241414960939437
    2. '+' → logprob: -8.250324249267578
    3. '[i' → logprob: -10.750324249267578
    4. '[' → logprob: -11.000324249267578
    5. '[id' → logprob: -11.375324249267578
    6. '[j' → logprob: -12.750324249267578
    7. '```' → logprob: -13.125324249267578
    8. '[-' → logprob: -13.250324249267578
    9. '   ' → logprob: -13.250324249267578
    10. 'id' → logprob: -14.375324249267578

Token 487: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804241120815277
    2. ' +' → logprob: -3.2880423069000244
    3. '+
' → logprob: -15.288042068481445
    4. '):
' → logprob: -15.538042068481445
    5. ')+' → logprob: -15.788042068481445
    6. ',' → logprob: -15.913042068481445
    7. '   ' → logprob: -16.038042068481445
    8. '()+' → logprob: -17.038042068481445
    9. '):' → logprob: -17.288042068481445
    10. ',+' → logprob: -17.538042068481445

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.999452772201039e-05
    2. ' ' → logprob: -10.500029563903809
    3. ')' → logprob: -14.125029563903809
    4. ',' → logprob: -14.250029563903809
    5. '```' → logprob: -14.750029563903809
    6. '   ' → logprob: -15.250029563903809
    7. '):
' → logprob: -16.250030517578125
    8. '+' → logprob: -16.250030517578125
    9. '
' → logprob: -16.625030517578125
    10. '2' → logprob: -16.875030517578125

Token 489: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31355273723602295
    2. '):
' → logprob: -1.313552737236023
    3. ':' → logprob: -8.438552856445312
    4. '):
' → logprob: -10.188552856445312
    5. ')' → logprob: -10.813552856445312
    6. ']:' → logprob: -12.688552856445312
    7. ',' → logprob: -12.938552856445312
    8. '   ' → logprob: -13.188552856445312
    9. ':
' → logprob: -13.188552856445312
    10. '       ' → logprob: -13.438552856445312

Token 490: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04352877289056778
    2. '       ' → logprob: -3.7935287952423096
    3. '	       ' → logprob: -4.1685285568237305
    4. 'dp' → logprob: -6.6685285568237305
    5. ' dp' → logprob: -7.2935285568237305
    6. '	dp' → logprob: -7.4185285568237305
    7. '<|end|>' → logprob: -7.5435285568237305
    8. '               ' → logprob: -7.6685285568237305
    9. '		' → logprob: -8.16852855682373
    10. ' ' → logprob: -9.41852855682373

Token 491: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.09872272610664368
    2. ' dp' → logprob: -2.4737226963043213
    3. '               ' → logprob: -5.7237229347229
    4. '       ' → logprob: -5.8487229347229
    5. '	dp' → logprob: -6.2237229347229
    6. '           ' → logprob: -6.7237229347229
    7. '   ' → logprob: -7.9737229347229
    8. '(dp' → logprob: -10.973722457885742
    9. '_dp' → logprob: -11.223722457885742
    10. ' ' → logprob: -11.473722457885742

Token 492: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.25194522738456726
    2. '[' → logprob: -1.5019452571868896
    3. 'i' → logprob: -11.501945495605469
    4. '0' → logprob: -13.251945495605469
    5. '[j' → logprob: -13.751945495605469
    6. '[I' → logprob: -13.876945495605469
    7. '[n' → logprob: -15.001945495605469
    8. '[N' → logprob: -15.626945495605469
    9. '```' → logprob: -15.626945495605469
    10. '[ip' → logprob: -15.751945495605469

Token 493: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020598530769348145
    2. '[i' → logprob: -3.8955984115600586
    3. '[' → logprob: -10.770598411560059
    4. 'i' → logprob: -11.520598411560059
    5. ']' → logprob: -11.645598411560059
    6. ' ][' → logprob: -12.020598411560059
    7. '   ' → logprob: -12.895598411560059
    8. '"][' → logprob: -13.270598411560059
    9. '[j' → logprob: -13.520598411560059
    10. '[id' → logprob: -13.770598411560059

Token 494: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.5577775128767826e-06
    2. 'i' → logprob: -12.875005722045898
    3. 'a' → logprob: -13.750005722045898
    4. '[j' → logprob: -14.500005722045898
    5. ' j' → logprob: -15.375005722045898
    6. 'id' → logprob: -15.625005722045898
    7. '0' → logprob: -15.750005722045898
    8. ']' → logprob: -15.875005722045898
    9. 'dp' → logprob: -15.875005722045898
    10. '(j' → logprob: -16.3750057220459

Token 495: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008217262104153633
    2. ']+=' → logprob: -4.8832173347473145
    3. ']=' → logprob: -7.6332173347473145
    4. '+=' → logprob: -10.133216857910156
    5. '=' → logprob: -10.258216857910156
    6. ' ]' → logprob: -10.633216857910156
    7. '   ' → logprob: -11.258216857910156
    8. ' +=' → logprob: -11.758216857910156
    9. '+' → logprob: -13.258216857910156
    10. ']+' → logprob: -13.383216857910156

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015368407592177391
    2. ' =' → logprob: -4.765368461608887
    3. '+=' → logprob: -5.015368461608887
    4. ' +=' → logprob: -9.265368461608887
    5. '|' → logprob: -14.640368461608887
    6. ']+=' → logprob: -15.140368461608887
    7. ' |=' → logprob: -15.390368461608887
    8. '   ' → logprob: -16.26536750793457
    9. '.=' → logprob: -16.51536750793457
    10. '[' → logprob: -16.76536750793457

Token 497: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7219761610031128
    2. 'pow' → logprob: -0.7219761610031128
    3. 'data' → logprob: -4.471976280212402
    4. '(' → logprob: -4.596976280212402
    5. '(pow' → logprob: -5.721976280212402
    6. '(data' → logprob: -6.096976280212402
    7. 'dp' → logprob: -7.096976280212402
    8. '(dp' → logprob: -8.846976280212402
    9. ' pow' → logprob: -8.971976280212402
    10. '2' → logprob: -9.971976280212402

Token 498: '2' (ID: 17)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.4049336612224579
    2. '1' → logprob: -1.1549336910247803
    3. 'data' → logprob: -4.654933452606201
    4. '(' → logprob: -5.404933452606201
    5. '(pow' → logprob: -6.029933452606201
    6. 'dp' → logprob: -7.279933452606201
    7. '(data' → logprob: -7.779933452606201
    8. '2' → logprob: -9.02993392944336
    9. '(dp' → logprob: -10.27993392944336
    10. ' pow' → logprob: -10.40493392944336

Token 499: ' ' (ID: 220)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03141922131180763
    2. '%' → logprob: -5.156419277191162
    3. ')' → logprob: -5.281419277191162
    4. '```' → logprob: -5.406419277191162
    5. ' **' → logprob: -5.781419277191162
    6. ']' → logprob: -6.156419277191162
    7. '<|end|>' → logprob: -6.281419277191162
    8. '*' → logprob: -6.281419277191162
    9. '[j' → logprob: -6.781419277191162
    10. '0' → logprob: -7.031419277191162

Token 500: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: ' Deux' (ID: 92086)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: ' façons' (ID: 165958)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 503: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 504: ' construire' (ID: 92473)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.25197163224220276
    2. 'cho' → logprob: -2.12697172164917
    3. ' choisir' → logprob: -3.00197172164917
    4. ' faire' → logprob: -4.37697172164917
    5. 'comp' → logprob: -4.75197172164917
    6. 'contin' → logprob: -5.25197172164917
    7. ' compter' → logprob: -5.37697172164917
    8. 'placer' → logprob: -5.75197172164917
    9. 'dp' → logprob: -6.25197172164917
    10. 'mettre' → logprob: -6.37697172164917

Token 505: ' cette' (ID: 7696)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: ' configuration' (ID: 12282)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5091508626937866
    2. '   ' → logprob: -1.6341508626937866
    3. '<|end|>' → logprob: -1.7591508626937866
    4. '    
' → logprob: -5.009150981903076
    5. ')' → logprob: -5.634150981903076
    6. ' ' → logprob: -5.634150981903076
    7. '<|end|>' → logprob: -5.884150981903076
    8. 'elif' → logprob: -6.009150981903076
    9. '  
' → logprob: -6.134150981903076
    10. ' 
' → logprob: -6.134150981903076

Token 510: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03381996974349022
    2. ' j' → logprob: -3.4088199138641357
    3. 'k' → logprob: -9.033820152282715
    4. '```' → logprob: -10.658820152282715
    5. 'i' → logprob: -11.908820152282715
    6. '_j' → logprob: -12.658820152282715
    7. ' k' → logprob: -12.783820152282715
    8. ' ' → logprob: -13.033820152282715
    9. '	j' → logprob: -13.033820152282715
    10. '   ' → logprob: -13.158820152282715

Token 511: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11298692971467972
    2. ' in' → logprob: -2.2379870414733887
    3. '   ' → logprob: -10.36298656463623
    4. 'id' → logprob: -10.98798656463623
    5. '0' → logprob: -11.11298656463623
    6. 'range' → logprob: -11.11298656463623
    7. 'import' → logprob: -11.23798656463623
    8. 'from' → logprob: -11.48798656463623
    9. 'd' → logprob: -11.48798656463623
    10. '
' → logprob: -12.11298656463623

Token 512: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008257066365331411
    2. ' range' → logprob: -7.125825881958008
    3. '   ' → logprob: -11.500825881958008
    4. ' ' → logprob: -12.750825881958008
    5. 'id' → logprob: -13.500825881958008
    6. 're' → logprob: -13.500825881958008
    7. '
' → logprob: -13.625825881958008
    8. '(range' → logprob: -14.375825881958008
    9. '

' → logprob: -14.625825881958008
    10. '[' → logprob: -15.000825881958008

Token 513: '(' (ID: 7)
  Prédit: '(id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.1809590756893158
    2. '(' → logprob: -1.8059591054916382
    3. '(len' → logprob: -7.680959224700928
    4. '(comp' → logprob: -8.68095874786377
    5. '1' → logprob: -8.80595874786377
    6. '(data' → logprob: -9.05595874786377
    7. '(dp' → logprob: -9.05595874786377
    8. 'id' → logprob: -9.43095874786377
    9. '(i' → logprob: -10.68095874786377
    10. '2' → logprob: -11.05595874786377

Token 514: '0' (ID: 15)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.6389458179473877
    2. '1' → logprob: -1.0139458179473877
    3. '0' → logprob: -2.2639458179473877
    4. 'comp' → logprob: -5.888945579528809
    5. '2' → logprob: -6.388945579528809
    6. '   ' → logprob: -8.388945579528809
    7. 'data' → logprob: -8.513945579528809
    8. ' id' → logprob: -8.888945579528809
    9. 'i' → logprob: -9.263945579528809
    10. ' ' → logprob: -9.513945579528809

Token 515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03268185630440712
    2. ' ,' → logprob: -4.157681941986084
    3. ',id' → logprob: -4.157681941986084
    4. '   ' → logprob: -8.032681465148926
    5. ',j' → logprob: -8.657681465148926
    6. 'id' → logprob: -9.157681465148926
    7. ',i' → logprob: -9.907681465148926
    8. ' ' → logprob: -10.407681465148926
    9. '
' → logprob: -10.407681465148926
    10. ')' → logprob: -10.532681465148926

Token 516: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.001572471926920116
    2. ' id' → logprob: -7.126572608947754
    3. 'comp' → logprob: -7.251572608947754
    4. '   ' → logprob: -10.251572608947754
    5. ' comp' → logprob: -11.751572608947754
    6. '1' → logprob: -12.751572608947754
    7. '  ' → logprob: -13.001572608947754
    8. 'dp' → logprob: -13.251572608947754
    9. ' ' → logprob: -13.501572608947754
    10. 'len' → logprob: -13.501572608947754

Token 517: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7153789401054382
    2. '+' → logprob: -1.090378999710083
    3. '):' → logprob: -2.215378999710083
    4. ',' → logprob: -2.840378999710083
    5. ' +' → logprob: -5.840378761291504
    6. '[i' → logprob: -6.965378761291504
    7. '   ' → logprob: -7.840378761291504
    8. '[' → logprob: -7.965378761291504
    9. ',i' → logprob: -7.965378761291504
    10. '```' → logprob: -7.965378761291504

Token 518: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008549564518034458
    2. '       ' → logprob: -5.383549690246582
    3. 'dp' → logprob: -6.258549690246582
    4. ' dp' → logprob: -6.633549690246582
    5. '	dp' → logprob: -8.508549690246582
    6. '   ' → logprob: -8.633549690246582
    7. '	       ' → logprob: -9.383549690246582
    8. '```' → logprob: -9.883549690246582
    9. '               ' → logprob: -10.258549690246582
    10. '
' → logprob: -10.383549690246582

Token 519: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.1572677493095398
    2. ' dp' → logprob: -2.1572678089141846
    3. '           ' → logprob: -3.6572678089141846
    4. '0' → logprob: -6.1572675704956055
    5. '       ' → logprob: -7.0322675704956055
    6. '1' → logprob: -8.032267570495605
    7. '   ' → logprob: -8.157267570495605
    8. '2' → logprob: -9.032267570495605
    9. '
' → logprob: -9.032267570495605
    10. '	dp' → logprob: -9.532267570495605

Token 520: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4391956685576588e-05
    2. '[' → logprob: -10.750024795532227
    3. 'i' → logprob: -13.750024795532227
    4. '   ' → logprob: -14.625024795532227
    5. '[n' → logprob: -15.000024795532227
    6. '[I' → logprob: -15.375024795532227
    7. '[j' → logprob: -15.625024795532227
    8. '][' → logprob: -15.750024795532227
    9. '```' → logprob: -16.000024795532227
    10. ' [' → logprob: -17.000024795532227

Token 521: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001933277933858335
    2. '[j' → logprob: -6.6269330978393555
    3. '[i' → logprob: -7.6269330978393555
    4. ']' → logprob: -9.751933097839355
    5. '[' → logprob: -10.876933097839355
    6. '   ' → logprob: -11.751933097839355
    7. ' ][' → logprob: -12.126933097839355
    8. 'j' → logprob: -12.376933097839355
    9. '][]' → logprob: -12.876933097839355
    10. 'i' → logprob: -12.876933097839355

Token 522: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2808304727077484
    2. '0' → logprob: -1.7808305025100708
    3. '1' → logprob: -3.4058303833007812
    4. 'dp' → logprob: -3.7808303833007812
    5. '2' → logprob: -4.280830383300781
    6. 'a' → logprob: -5.905830383300781
    7. 'data' → logprob: -6.530830383300781
    8. 'mod' → logprob: -7.280830383300781
    9. 'id' → logprob: -7.405830383300781
    10. 'comp' → logprob: -7.530830383300781

Token 523: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12414605170488358
    2. ']' → logprob: -2.374145984649658
    3. ']=' → logprob: -4.124145984649658
    4. ' =' → logprob: -5.499145984649658
    5. '+=' → logprob: -5.999145984649658
    6. ']+=' → logprob: -7.249145984649658
    7. ' +=' → logprob: -9.624146461486816
    8. '[' → logprob: -10.124146461486816
    9. '   ' → logprob: -10.249146461486816
    10. ')' → logprob: -10.999146461486816

Token 524: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003849955275654793
    2. '+=' → logprob: -5.878849983215332
    3. ' =' → logprob: -6.878849983215332
    4. ' +=' → logprob: -11.253849983215332
    5. ']=' → logprob: -14.628849983215332
    6. '-=' → logprob: -14.878849983215332
    7. ']+=' → logprob: -15.003849983215332
    8. '   ' → logprob: -15.128849983215332
    9. '*=' → logprob: -15.378849983215332
    10. ']' → logprob: -16.128849029541016

Token 525: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33277472853660583
    2. '0' → logprob: -1.7077747583389282
    3. '2' → logprob: -2.4577746391296387
    4. '4' → logprob: -5.332774639129639
    5. 'data' → logprob: -5.582774639129639
    6. '3' → logprob: -5.957774639129639
    7. 'pow' → logprob: -6.582774639129639
    8. 'dp' → logprob: -7.082774639129639
    9. '(' → logprob: -7.332774639129639
    10. 'mod' → logprob: -7.707774639129639

Token 526: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26000455021858215
    2. '0' → logprob: -1.7600045204162598
    3. '2' → logprob: -3.3850045204162598
    4. '4' → logprob: -4.88500452041626
    5. 'data' → logprob: -5.38500452041626
    6. 'pow' → logprob: -5.51000452041626
    7. '3' → logprob: -5.63500452041626
    8. 'mod' → logprob: -6.88500452041626
    9. 'j' → logprob: -7.26000452041626
    10. '(' → logprob: -7.51000452041626

Token 527: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 528: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: ' Une' (ID: 19758)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4488388001918793
    2. ')' → logprob: -2.198838710784912
    3. '1' → logprob: -2.823838710784912
    4. 'for' → logprob: -2.823838710784912
    5. '<|end|>' → logprob: -2.823838710784912
    6. 'pass' → logprob: -4.198838710784912
    7. ' ' → logprob: -4.323838710784912
    8. '2' → logprob: -4.448838710784912
    9. ' for' → logprob: -4.448838710784912
    10. '   ' → logprob: -5.573838710784912

Token 530: ' seule' (ID: 41983)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 531: ' façon' (ID: 33381)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.1648361086845398
    2. ' façon' → logprob: -2.1648361682891846
    3. 'fois' → logprob: -3.7898361682891846
    4. 'man' → logprob: -4.9148359298706055
    5. 'way' → logprob: -6.2898359298706055
    6. 'voie' → logprob: -6.2898359298706055
    7. ' manière' → logprob: -6.4148359298706055
    8. '```' → logprob: -7.5398359298706055
    9. ' ' → logprob: -8.414835929870605
    10. 'vo' → logprob: -8.664835929870605

Token 532: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 533: ' les' (ID: 1341)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7029069066047668
    2. 'ces' → logprob: -1.077906847000122
    3. 'les' → logprob: -3.202906847000122
    4. ' j' → logprob: -3.577906847000122
    5. 'ce' → logprob: -3.952906847000122
    6. ' ces' → logprob: -3.952906847000122
    7. ' cette' → logprob: -4.327907085418701
    8. 'c' → logprob: -4.452907085418701
    9. ' chaque' → logprob: -4.702907085418701
    10. 'cet' → logprob: -5.327907085418701

Token 534: ' indices' (ID: 30378)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6713874936103821
    2. 'indices' → logprob: -1.6713874340057373
    3. 'j' → logprob: -1.7963874340057373
    4. 'ha' → logprob: -2.2963874340057373
    5. 'positions' → logprob: -4.546387672424316
    6. ' indices' → logprob: -5.171387672424316
    7. 'aut' → logprob: -5.796387672424316
    8. ' valeurs' → logprob: -5.921387672424316
    9. 'alt' → logprob: -6.421387672424316
    10. 'cas' → logprob: -6.671387672424316

Token 535: ' plus' (ID: 2932)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.1555774211883545
    2. 'plus' → logprob: -1.4055774211883545
    3. 'sup' → logprob: -1.5305774211883545
    4. 'j' → logprob: -3.1555774211883545
    5. 'avant' → logprob: -3.5305774211883545
    6. ' inf' → logprob: -3.7805774211883545
    7. 'jus' → logprob: -3.9055774211883545
    8. 'entre' → logprob: -4.155577659606934
    9. 'pr' → logprob: -4.280577659606934
    10. '```' → logprob: -4.280577659606934

Token 536: ' bas' (ID: 3222)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.25248971581459045
    2. 'gr' → logprob: -1.627489686012268
    3. 'bas' → logprob: -4.1274895668029785
    4. 'b' → logprob: -5.0024895668029785
    5. ' petits' → logprob: -6.2524895668029785
    6. 'grand' → logprob: -7.5024895668029785
    7. '```' → logprob: -7.8774895668029785
    8. '   ' → logprob: -8.377490043640137
    9. ' bas' → logprob: -9.377490043640137
    10. ' grands' → logprob: -9.502490043640137

Token 537: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 538: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 539: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 540: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05571889504790306
    2. ':
' → logprob: -2.9307188987731934
    3. '   ' → logprob: -7.555718898773193
    4. '[' → logprob: -9.180718421936035
    5. '```' → logprob: -9.680718421936035
    6. '[i' → logprob: -9.805718421936035
    7. '       ' → logprob: -10.680718421936035
    8. '{' → logprob: -10.680718421936035
    9. ' :' → logprob: -11.430718421936035
    10. ' :
' → logprob: -12.055718421936035

Token 541: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024562619626522064
    2. '       ' → logprob: -3.7745625972747803
    3. '```' → logprob: -6.899562835693359
    4. 'i' → logprob: -9.27456283569336
    5. ' i' → logprob: -9.27456283569336
    6. '[' → logprob: -10.77456283569336
    7. '	i' → logprob: -11.02456283569336
    8. 'id' → logprob: -11.27456283569336
    9. '[i' → logprob: -11.39956283569336
    10. ' id' → logprob: -11.77456283569336

Token 542: ' #' (ID: 1069)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.46678802371025085
    2. '   ' → logprob: -1.3417880535125732
    3. 'i' → logprob: -2.8417880535125732
    4. ' id' → logprob: -3.3417880535125732
    5. ' i' → logprob: -4.841787815093994
    6. 'for' → logprob: -5.341787815093994
    7. ' for' → logprob: -6.216787815093994
    8. '```' → logprob: -6.216787815093994
    9. '       ' → logprob: -7.591787815093994
    10. '
' → logprob: -9.091788291931152

Token 543: ' Cas' (ID: 8066)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.539260745048523
    2. 'id' → logprob: -0.914260745048523
    3. 'for' → logprob: -4.7892608642578125
    4. ' id' → logprob: -5.6642608642578125
    5. ' i' → logprob: -6.0392608642578125
    6. '   ' → logprob: -6.7892608642578125
    7. 'dp' → logprob: -8.039260864257812
    8. '```' → logprob: -8.539260864257812
    9. ' for' → logprob: -8.664260864257812
    10. 'j' → logprob: -12.289260864257812

Token 544: ' où' (ID: 15113)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17539288103580475
    2. 'i' → logprob: -2.3003928661346436
    3. '   ' → logprob: -4.050393104553223
    4. '       ' → logprob: -4.175393104553223
    5. ' where' → logprob: -4.175393104553223
    6. ' où' → logprob: -5.550393104553223
    7. 'where' → logprob: -5.925393104553223
    8. '[i' → logprob: -6.550393104553223
    9. ' ' → logprob: -7.425393104553223
    10. 'où' → logprob: -7.550393104553223

Token 545: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5181635618209839
    2. ' h' → logprob: -1.7681635618209839
    3. 'dp' → logprob: -2.1431636810302734
    4. 'i' → logprob: -2.8931636810302734
    5. ' i' → logprob: -3.5181636810302734
    6. ' dp' → logprob: -3.8931636810302734
    7. '   ' → logprob: -4.893163681030273
    8. 'j' → logprob: -7.018163681030273
    9. 'for' → logprob: -7.768163681030273
    10. 'not' → logprob: -7.893163681030273

Token 546: ' prochaine' (ID: 78876)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9331362247467041
    2. 'dp' → logprob: -1.058136224746704
    3. 'for' → logprob: -1.683136224746704
    4. 'id' → logprob: -3.183136224746704
    5. 'next' → logprob: -4.183135986328125
    6. ' for' → logprob: -5.558135986328125
    7. 'j' → logprob: -5.683135986328125
    8. ' i' → logprob: -6.183135986328125
    9. 'h' → logprob: -6.308135986328125
    10. ' dp' → logprob: -6.683135986328125

Token 547: ' hauteur' (ID: 72987)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8840941786766052
    2. 'if' → logprob: -1.13409423828125
    3. 'i' → logprob: -2.00909423828125
    4. 'for' → logprob: -2.88409423828125
    5. '[' → logprob: -4.00909423828125
    6. ' i' → logprob: -4.25909423828125
    7. 'id' → logprob: -4.50909423828125
    8. ' if' → logprob: -4.63409423828125
    9. ':' → logprob: -4.75909423828125
    10. '   ' → logprob: -5.88409423828125

Token 548: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7942380309104919
    2. '=' → logprob: -1.1692380905151367
    3. ' >' → logprob: -2.4192380905151367
    4. '   ' → logprob: -3.0442380905151367
    5. '[' → logprob: -3.5442380905151367
    6. '[i' → logprob: -3.9192380905151367
    7. ' =' → logprob: -4.294238090515137
    8. ' est' → logprob: -5.044238090515137
    9. ' is' → logprob: -5.294238090515137
    10. '       ' → logprob: -5.544238090515137

Token 549: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5666018128395081
    2. 'sup' → logprob: -1.3166017532348633
    3. 'greater' → logprob: -2.8166017532348633
    4. ' plus' → logprob: -3.5666017532348633
    5. ' supérieur' → logprob: -4.191601753234863
    6. 'larg' → logprob: -4.441601753234863
    7. 'strict' → logprob: -4.691601753234863
    8. '   ' → logprob: -4.941601753234863
    9. 'higher' → logprob: -5.066601753234863
    10. ' sup' → logprob: -5.316601753234863

Token 550: ' petite' (ID: 28119)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.5246329307556152
    2. 'grand' → logprob: -0.8996329307556152
    3. ' grande' → logprob: -7.649632930755615
    4. 'big' → logprob: -8.649633407592773
    5. '1' → logprob: -8.774633407592773
    6. '_gr' → logprob: -8.899633407592773
    7. 'haut' → logprob: -9.524633407592773
    8. 'e' → logprob: -9.649633407592773
    9. 'large' → logprob: -9.649633407592773
    10. '```' → logprob: -9.774633407592773

Token 551: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8043118715286255
    2. '   ' → logprob: -1.3043118715286255
    3. ':
' → logprob: -1.8043118715286255
    4. '```' → logprob: -2.679311752319336
    5. '       ' → logprob: -3.929311752319336
    6. '[i' → logprob: -4.429311752319336
    7. '[' → logprob: -4.929311752319336
    8. '<|end|>' → logprob: -5.929311752319336
    9. '
' → logprob: -6.429311752319336
    10. ',' → logprob: -7.179311752319336

Token 552: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10351091623306274
    2. '   ' → logprob: -2.978510856628418
    3. '```' → logprob: -3.228510856628418
    4. ':
' → logprob: -5.603510856628418
    5. '       ' → logprob: -5.853510856628418
    6. '[' → logprob: -7.978510856628418
    7. '[i' → logprob: -8.228510856628418
    8. '[id' → logprob: -9.353510856628418
    9. ',' → logprob: -9.478510856628418
    10. '<|end|>' → logprob: -9.728510856628418

Token 553: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.15888947248458862
    2. 'i' → logprob: -3.0338895320892334
    3. ' id' → logprob: -3.0338895320892334
    4. '   ' → logprob: -3.1588895320892334
    5. 'for' → logprob: -5.658889293670654
    6. ' i' → logprob: -5.908889293670654
    7. ' for' → logprob: -6.908889293670654
    8. '```' → logprob: -7.283889293670654
    9. 'dp' → logprob: -8.908889770507812
    10. '       ' → logprob: -9.783889770507812

Token 554: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141655206680298
    2. '=' → logprob: -1.7014164924621582
    3. '   ' → logprob: -13.076416969299316
    4. ',' → logprob: -14.451416969299316
    5. '    ' → logprob: -16.326416015625
    6. '=
' → logprob: -16.326416015625
    7. '```' → logprob: -16.451416015625
    8. ')' → logprob: -16.576416015625
    9. ' =
' → logprob: -16.701416015625
    10. '=int' → logprob: -16.826416015625

Token 555: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.14274759590625763
    2. ' comp' → logprob: -2.017747640609741
    3. 'com' → logprob: -10.26774787902832
    4. '	comp' → logprob: -11.26774787902832
    5. '(comp' → logprob: -11.89274787902832
    6. 'mod' → logprob: -12.26774787902832
    7. ' ' → logprob: -13.14274787902832
    8. '   ' → logprob: -13.14274787902832
    9. '.comp' → logprob: -13.64274787902832
    10. 'compl' → logprob: -13.83024787902832

Token 556: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -2.1008713702030946e-06
    2. 'h' → logprob: -13.375001907348633
    3. '(h' → logprob: -14.500001907348633
    4. '[' → logprob: -17.250001907348633
    5. ' h' → logprob: -19.750001907348633
    6. '<h' → logprob: -20.500001907348633
    7. '{' → logprob: -20.750001907348633
    8. '```' → logprob: -21.125001907348633
    9. 'comp' → logprob: -21.250001907348633
    10. ' [' → logprob: -21.250001907348633

Token 557: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019603055261541158
    2. '[h' → logprob: -8.62519645690918
    3. '[' → logprob: -12.00019645690918
    4. 'i' → logprob: -12.50019645690918
    5. 'h' → logprob: -13.12519645690918
    6. '[
' → logprob: -13.87519645690918
    7. ']' → logprob: -14.00019645690918
    8. '(i' → logprob: -14.00019645690918
    9. '[j' → logprob: -14.12519645690918
    10. '[I' → logprob: -14.75019645690918

Token 558: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0023612596560269594
    2. '[h' → logprob: -6.377361297607422
    3. ']' → logprob: -7.377361297607422
    4. 'h' → logprob: -11.377361297607422
    5. '[' → logprob: -11.502361297607422
    6. '[j' → logprob: -12.252361297607422
    7. '(i' → logprob: -13.377361297607422
    8. ']]' → logprob: -13.502361297607422
    9. 'i' → logprob: -13.627361297607422
    10. '])' → logprob: -14.002361297607422

Token 559: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009429076453670859
    2. '1' → logprob: -7.250942707061768
    3. ']' → logprob: -9.125943183898926
    4. '[i' → logprob: -9.375943183898926
    5. '(i' → logprob: -11.250943183898926
    6. '0' → logprob: -11.375943183898926
    7. ' i' → logprob: -11.625943183898926
    8. '])' → logprob: -13.000943183898926
    9. '```' → logprob: -13.375943183898926
    10. '{i' → logprob: -14.375943183898926

Token 560: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16320401430130005
    2. ']
' → logprob: -1.9132039546966553
    3. ']+' → logprob: -5.913204193115234
    4. ']]
' → logprob: -8.663204193115234
    5. ']]' → logprob: -9.788204193115234
    6. ']

' → logprob: -11.788204193115234
    7. ']}
' → logprob: -12.038204193115234
    8. ']-' → logprob: -12.538204193115234
    9. ']}' → logprob: -12.663204193115234
    10. ']
' → logprob: -12.788204193115234

Token 561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1564223766326904
    2. 'for' → logprob: -1.6564223766326904
    3. ' =' → logprob: -2.4064223766326904
    4. '<|end|>' → logprob: -2.5314223766326904
    5. ' for' → logprob: -2.7814223766326904
    6. '=' → logprob: -2.7814223766326904
    7. '```' → logprob: -3.0314223766326904
    8. '
' → logprob: -3.0314223766326904
    9. '        
' → logprob: -3.1564223766326904
    10. '[' → logprob: -4.2814226150512695

Token 562: ' for' (ID: 395)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.06194807589054108
    2. 'for' (adapté à ' for') → logprob: -2.93694806098938
    3. 'dp' → logprob: -5.061948299407959
    4. ' for' → logprob: -8.1869478225708
    5. ' id' → logprob: -8.1869478225708
    6. '   ' → logprob: -10.3119478225708
    7. 'range' → logprob: -10.9369478225708
    8. '       ' → logprob: -11.0619478225708
    9. '
' → logprob: -11.1869478225708
    10. 'if' → logprob: -11.6869478225708

Token 563: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.28117185831069946
    2. ' j' → logprob: -1.4061717987060547
    3. 'i' → logprob: -11.781171798706055
    4. '```' → logprob: -12.156171798706055
    5. ' i' → logprob: -13.156171798706055
    6. '_j' → logprob: -13.281171798706055
    7. '	j' → logprob: -13.406171798706055
    8. '[j' → logprob: -14.593671798706055
    9. '$j' → logprob: -14.781171798706055
    10. 'k' → logprob: -14.781171798706055

Token 564: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3868977725505829
    2. ' in' → logprob: -1.1368978023529053
    3. '```' → logprob: -11.886898040771484
    4. '   ' → logprob: -12.886898040771484
    5. '	in' → logprob: -12.886898040771484
    6. ' ' → logprob: -13.136898040771484
    7. 'n' → logprob: -13.261898040771484
    8. 'i' → logprob: -13.261898040771484
    9. '_in' → logprob: -13.511898040771484
    10. '[' → logprob: -14.136898040771484

Token 565: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024763736873865128
    2. ' range' → logprob: -6.002476215362549
    3. 'dp' → logprob: -15.502476692199707
    4. 're' → logprob: -15.877476692199707
    5. 'id' → logprob: -15.877476692199707
    6. '(range' → logprob: -16.50247573852539
    7. 'in' → logprob: -17.12747573852539
    8. 'reverse' → logprob: -17.87747573852539
    9. 'Range' → logprob: -18.50247573852539
    10. 'i' → logprob: -18.87747573852539

Token 566: '(' (ID: 7)
  Prédit: '(id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.8756117820739746
    2. 'id' → logprob: -1.0006117820739746
    3. 'range' → logprob: -1.6256117820739746
    4. '(' → logprob: -4.500611782073975
    5. '0' → logprob: -5.125611782073975
    6. 'in' → logprob: -7.375611782073975
    7. ' id' → logprob: -8.250612258911133
    8. '1' → logprob: -8.375612258911133
    9. '   ' → logprob: -8.750612258911133
    10. '(range' → logprob: -8.750612258911133

Token 567: '0' (ID: 15)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.3667997121810913
    2. '0' → logprob: -1.2417997121810913
    3. '1' → logprob: -4.241799831390381
    4. 'range' → logprob: -5.741799831390381
    5. '(id' → logprob: -7.616799831390381
    6. ' id' → logprob: -10.491799354553223
    7. '(' → logprob: -10.866799354553223
    8. '[id' → logprob: -10.866799354553223
    9. '2' → logprob: -11.741799354553223
    10. ' ' → logprob: -12.491799354553223

Token 568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3226128816604614
    2. 'id' → logprob: -1.4476128816604614
    3. ',id' → logprob: -4.072612762451172
    4. '(id' → logprob: -4.822612762451172
    5. '+' → logprob: -5.197612762451172
    6. '1' → logprob: -5.447612762451172
    7. ' ,' → logprob: -6.572612762451172
    8. 'range' → logprob: -7.072612762451172
    9. ' id' → logprob: -7.322612762451172
    10. ')' → logprob: -7.572612762451172

Token 569: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0002779014757834375
    2. ' id' → logprob: -8.250277519226074
    3. 'len' → logprob: -12.000277519226074
    4. '   ' → logprob: -12.125277519226074
    5. 'N' → logprob: -12.875277519226074
    6. 'i' → logprob: -14.000277519226074
    7. '(id' → logprob: -15.000277519226074
    8. ' ' → logprob: -15.125277519226074
    9. '  ' → logprob: -15.250277519226074
    10. '	id' → logprob: -15.875277519226074

Token 570: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2706758379936218
    2. '):
' → logprob: -2.0206758975982666
    3. '+' → logprob: -2.2706758975982666
    4. ']:' → logprob: -7.2706756591796875
    5. ':' → logprob: -8.270675659179688
    6. '[' → logprob: -8.895675659179688
    7. ']):' → logprob: -9.895675659179688
    8. ' +' → logprob: -10.270675659179688
    9. '       ' → logprob: -10.395675659179688
    10. ']:
' → logprob: -10.520675659179688

Token 571: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.172804355621338
    2. '```' → logprob: -1.297804355621338
    3. '[' → logprob: -1.547804355621338
    4. '<|end|>' → logprob: -2.672804355621338
    5. '   ' → logprob: -2.797804355621338
    6. ':
' → logprob: -3.797804355621338
    7. ':' → logprob: -4.922804355621338
    8. '        
' → logprob: -5.047804355621338
    9. '           ' → logprob: -5.297804355621338
    10. '[i' → logprob: -5.297804355621338

Token 572: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.05636968836188316
    2. ' dp' → logprob: -2.9313697814941406
    3. '       ' → logprob: -7.056369781494141
    4. '   ' → logprob: -8.18136978149414
    5. '	dp' → logprob: -8.68136978149414
    6. '           ' → logprob: -8.93136978149414
    7. '               ' → logprob: -10.43136978149414
    8. ' ' → logprob: -12.43136978149414
    9. '(dp' → logprob: -12.93136978149414
    10. '_dp' → logprob: -13.43136978149414

Token 573: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -11.750008583068848
    3. 'i' → logprob: -15.375008583068848
    4. '[n' → logprob: -15.375008583068848
    5. '   ' → logprob: -15.500008583068848
    6. '[I' → logprob: -15.500008583068848
    7. '```' → logprob: -16.625009536743164
    8. '[ip' → logprob: -17.000009536743164
    9. '[j' → logprob: -17.125009536743164
    10. '[u' → logprob: -17.250009536743164

Token 574: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.42883265018463135
    2. '][' → logprob: -1.0538326501846313
    3. ']' → logprob: -10.3038330078125
    4. '[j' → logprob: -10.4288330078125
    5. 'i' → logprob: -10.5538330078125
    6. '[' → logprob: -10.9288330078125
    7. ')[' → logprob: -12.8038330078125
    8. '[][' → logprob: -12.8038330078125
    9. ' ][' → logprob: -12.9288330078125
    10. '"][' → logprob: -13.0538330078125

Token 575: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0071217999793589115
    2. 'i' → logprob: -5.007121562957764
    3. '1' → logprob: -8.132122039794922
    4. '[j' → logprob: -10.382122039794922
    5. ']' → logprob: -10.507122039794922
    6. '[i' → logprob: -10.632122039794922
    7. '0' → logprob: -11.507122039794922
    8. '=' → logprob: -12.257122039794922
    9. ' j' → logprob: -12.257122039794922
    10. '2' → logprob: -13.132122039794922

Token 576: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05328154191374779
    2. ']' → logprob: -3.053281545639038
    3. ']=' → logprob: -5.553281307220459
    4. ' =' → logprob: -7.178281307220459
    5. '[' → logprob: -10.678281784057617
    6. '   ' → logprob: -11.928281784057617
    7. ']+=' → logprob: -12.178281784057617
    8. '+=' → logprob: -12.303281784057617
    9. ')' → logprob: -13.178281784057617
    10. '       ' → logprob: -14.053281784057617

Token 577: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006746162660419941
    2. ' =' → logprob: -5.006746292114258
    3. '+=' → logprob: -10.756746292114258
    4. '[' → logprob: -12.631746292114258
    5. ']=' → logprob: -12.881746292114258
    6. ']' → logprob: -13.631746292114258
    7. '   ' → logprob: -13.631746292114258
    8. ' +=' → logprob: -14.006746292114258
    9. '       ' → logprob: -15.881746292114258
    10. ']+=' → logprob: -16.631746292114258

Token 578: ' pow' (ID: 9779)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.44115149974823
    2. '1' → logprob: -1.06615149974823
    3. '0' → logprob: -4.4411516189575195
    4. '3' → logprob: -8.31615161895752
    5. '(' → logprob: -8.94115161895752
    6. 'mod' → logprob: -9.56615161895752
    7. 'pow' → logprob: -10.44115161895752
    8. ' ' → logprob: -10.94115161895752
    9. 'data' → logprob: -11.06615161895752
    10. 'h' → logprob: -11.06615161895752

Token 579: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8624639324116288e-06
    2. '2' → logprob: -13.750001907348633
    3. '(
' → logprob: -14.500001907348633
    4. ' (' → logprob: -15.750001907348633
    5. '<|end|>' → logprob: -17.250001907348633
    6. '(pow' → logprob: -17.500001907348633
    7. 'def' → logprob: -19.125001907348633
    8. '()' → logprob: -19.375001907348633
    9. '(

' → logprob: -19.625001907348633
    10. '```' → logprob: -19.625001907348633

Token 580: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03807396814227104
    2. '(' → logprob: -3.288074016571045
    3. ' ' → logprob: -11.413073539733887
    4. '10' → logprob: -12.538073539733887
    5. 'mod' → logprob: -12.538073539733887
    6. 'pow' → logprob: -12.913073539733887
    7. '```' → logprob: -13.163073539733887
    8. '1' → logprob: -13.538073539733887
    9. ')' → logprob: -13.538073539733887
    10. '(
' → logprob: -13.538073539733887

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013180967653170228
    2. ',h' → logprob: -6.876317977905273
    3. ',j' → logprob: -8.876317977905273
    4. '(h' → logprob: -9.876317977905273
    5. ')' → logprob: -10.251317977905273
    6. ' ,' → logprob: -10.876317977905273
    7. '(' → logprob: -11.876317977905273
    8. '2' → logprob: -12.251317977905273
    9. 'h' → logprob: -12.751317977905273
    10. ',(' → logprob: -12.876317977905273

Token 582: ' h' (ID: 312)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.36217162013053894
    2. 'h' → logprob: -1.3621716499328613
    3. 'a' → logprob: -3.2371716499328613
    4. '(data' → logprob: -5.987171649932861
    5. '(h' → logprob: -5.987171649932861
    6. 'comp' → logprob: -7.112171649932861
    7. 'j' → logprob: -7.362171649932861
    8. '(a' → logprob: -7.487171649932861
    9. '(' → logprob: -7.987171649932861
    10. 'dp' → logprob: -8.112171173095703

Token 583: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0021622790955007076
    2. '[' → logprob: -6.252162456512451
    3. '[j' → logprob: -9.377161979675293
    4. '[h' → logprob: -9.377161979675293
    5. 'i' → logprob: -10.252161979675293
    6. '[n' → logprob: -11.252161979675293
    7. 'h' → logprob: -12.002161979675293
    8. '1' → logprob: -13.127161979675293
    9. '[N' → logprob: -13.627161979675293
    10. '0' → logprob: -13.627161979675293

Token 584: ']-' (ID: 27107)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008783506345935166
    2. '[' → logprob: -7.25087833404541
    3. '[j' → logprob: -9.62587833404541
    4. ']' → logprob: -9.62587833404541
    5. 'i' → logprob: -11.50087833404541
    6. '(i' → logprob: -12.37587833404541
    7. '[
' → logprob: -12.37587833404541
    8. '0' → logprob: -12.62587833404541
    9. '1' → logprob: -12.75087833404541
    10. '```' → logprob: -12.75087833404541

Token 585: 'h' (ID: 71)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6404572129249573
    2. 'h' → logprob: -1.3904571533203125
    3. 'j' → logprob: -2.0154571533203125
    4. 'a' → logprob: -2.6404571533203125
    5. 'comp' → logprob: -4.7654571533203125
    6. 'id' → logprob: -5.5154571533203125
    7. 'dp' → logprob: -5.5154571533203125
    8. '0' → logprob: -7.0154571533203125
    9. 'data' → logprob: -7.1404571533203125
    10. ' ' → logprob: -8.765457153320312

Token 586: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011149685829877853
    2. '[' → logprob: -5.011149883270264
    3. 'i' → logprob: -5.636149883270264
    4. '[j' → logprob: -7.511149883270264
    5. '1' → logprob: -8.261149406433105
    6. 'j' → logprob: -11.261149406433105
    7. '(i' → logprob: -11.886149406433105
    8. '0' → logprob: -11.886149406433105
    9. '[next' → logprob: -12.011149406433105
    10. '{i' → logprob: -12.511149406433105

Token 587: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00035929924342781305
    2. '[' → logprob: -8.500359535217285
    3. '+' → logprob: -10.250359535217285
    4. 'i' → logprob: -10.375359535217285
    5. '[j' → logprob: -10.750359535217285
    6. ']' → logprob: -10.750359535217285
    7. '{i' → logprob: -11.000359535217285
    8. '1' → logprob: -11.625359535217285
    9. '(i' → logprob: -12.000359535217285
    10. '```' → logprob: -12.250359535217285

Token 588: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011534435179783031
    2. 'j' → logprob: -10.125115394592285
    3. '[j' → logprob: -11.000115394592285
    4. ' ' → logprob: -11.500115394592285
    5. '   ' → logprob: -11.625115394592285
    6. '[i' → logprob: -11.687615394592285
    7. 'i' → logprob: -11.875115394592285
    8. '```' → logprob: -12.000115394592285
    9. '2' → logprob: -12.312615394592285
    10. ']' → logprob: -13.625115394592285

Token 589: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0524258092045784
    2. '[i' → logprob: -3.0524258613586426
    3. ']' → logprob: -6.177425861358643
    4. '-' → logprob: -6.927425861358643
    5. '),' → logprob: -8.052425384521484
    6. ',' → logprob: -8.677425384521484
    7. '[j' → logprob: -9.927425384521484
    8. '```' → logprob: -10.427425384521484
    9. ']-' → logprob: -10.427425384521484
    10. ' ],' → logprob: -10.427425384521484

Token 590: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00020354038861114532
    2. ' mod' → logprob: -8.500203132629395
    3. '	mod' → logprob: -17.87520408630371
    4. '           ' → logprob: -18.00020408630371
    5. '10' → logprob: -18.50020408630371
    6. '(mod' → logprob: -19.00020408630371
    7. '       ' → logprob: -19.12520408630371
    8. '   ' → logprob: -19.37520408630371
    9. ' мод' → logprob: -20.37520408630371
    10. '               ' → logprob: -20.37520408630371

Token 591: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.045823566731997e-05
    2. ')
' → logprob: -12.000020027160645
    3. ' )' → logprob: -12.125020027160645
    4. ',' → logprob: -12.375020027160645
    5. '   ' → logprob: -13.375020027160645
    6. ')}' → logprob: -14.250020027160645
    7. '),' → logprob: -14.875020027160645
    8. ')*' → logprob: -15.125020027160645
    9. '):' → logprob: -15.250020027160645
    10. ')...' → logprob: -15.750020027160645

Token 592: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 593: ' dp' (ID: 21546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9662814736366272
    2. '   ' → logprob: -1.4662814140319824
    3. 'for' → logprob: -1.8412814140319824
    4. ' for' → logprob: -2.4662814140319824
    5. '[i' → logprob: -2.8412814140319824
    6. '<|end|>' → logprob: -3.3412814140319824
    7. ')' → logprob: -3.7162814140319824
    8. '[' → logprob: -5.091281414031982
    9. ' i' → logprob: -5.091281414031982
    10. '```' → logprob: -5.966281414031982

Token 594: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.125001907348633
    3. '```' → logprob: -16.750001907348633
    4. '[I' → logprob: -17.000001907348633
    5. '[n' → logprob: -17.500001907348633
    6. 'i' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '[j' → logprob: -18.375001907348633
    9. '[u' → logprob: -18.500001907348633
    10. '][' → logprob: -19.125001907348633

Token 595: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4809276759624481
    2. '][' → logprob: -0.9809277057647705
    3. '[' → logprob: -5.105927467346191
    4. ']' → logprob: -8.730927467346191
    5. ')[' → logprob: -8.855927467346191
    6. '[id' → logprob: -9.480927467346191
    7. '[n' → logprob: -9.605927467346191
    8. 'i' → logprob: -10.230927467346191
    9. '[len' → logprob: -10.355927467346191
    10. '   ' → logprob: -10.355927467346191

Token 596: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0007399422465823591
    2. '0' → logprob: -7.500740051269531
    3. 'i' → logprob: -9.125740051269531
    4. 'h' → logprob: -10.875740051269531
    5. 'comp' → logprob: -11.000740051269531
    6. '[id' → logprob: -11.000740051269531
    7. ' id' → logprob: -11.875740051269531
    8. ']' → logprob: -12.125740051269531
    9. 'j' → logprob: -12.750740051269531
    10. '[' → logprob: -13.375740051269531

Token 597: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3893462121486664
    2. ']' → logprob: -1.1393462419509888
    3. ']=' → logprob: -6.139346122741699
    4. '[' → logprob: -9.0143461227417
    5. '[i' → logprob: -9.8893461227417
    6. '-' → logprob: -10.1393461227417
    7. ']+=' → logprob: -10.2643461227417
    8. '][]' → logprob: -11.0143461227417
    9. '=' → logprob: -11.3893461227417
    10. '][-' → logprob: -11.6393461227417

Token 598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759899020195007
    2. '=' → logprob: -0.8259899020195007
    3. ' +=' → logprob: -10.825989723205566
    4. ']' → logprob: -11.200989723205566
    5. '+=' → logprob: -11.325989723205566
    6. '[' → logprob: -13.325989723205566
    7. ')' → logprob: -13.575989723205566
    8. ']=' → logprob: -13.700989723205566
    9. ' |=' → logprob: -15.950989723205566
    10. '   ' → logprob: -16.325990676879883

Token 599: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23421341180801392
    2. '2' → logprob: -1.8592133522033691
    3. 'pow' → logprob: -3.234213352203369
    4. '0' → logprob: -4.984213352203369
    5. '3' → logprob: -5.234213352203369
    6. '(' → logprob: -7.234213352203369
    7. '4' → logprob: -8.484213829040527
    8. 'dp' → logprob: -8.734213829040527
    9. '(pow' → logprob: -9.234213829040527
    10. 'mod' → logprob: -9.921713829040527

Token 600: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44684675335884094
    2. '2' → logprob: -1.6968467235565186
    3. 'pow' → logprob: -1.9468467235565186
    4. '0' → logprob: -3.5718467235565186
    5. '(' → logprob: -5.696846961975098
    6. '3' → logprob: -6.446846961975098
    7. '(pow' → logprob: -7.446846961975098
    8. 'dp' → logprob: -8.196846961975098
    9. '4' → logprob: -9.321846961975098
    10. '((' → logprob: -9.696846961975098

Token 601: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 602: ' (' (ID: 350)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.021408772096037865
    2. 'dp' → logprob: -4.146408557891846
    3. ' pow' → logprob: -6.021408557891846
    4. '(' → logprob: -6.521408557891846
    5. '(pow' → logprob: -7.646408557891846
    6. '2' → logprob: -8.021409034729004
    7. '1' → logprob: -8.271409034729004
    8. 'mod' → logprob: -8.396409034729004
    9. '(dp' → logprob: -9.896409034729004
    10. ' dp' → logprob: -10.396409034729004

Token 603: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.1558133214712143
    2. 'dp' → logprob: -2.280813217163086
    3. 'h' → logprob: -3.780813217163086
    4. '(' → logprob: -5.405813217163086
    5. '(h' → logprob: -5.655813217163086
    6. '2' → logprob: -6.030813217163086
    7. '(pow' → logprob: -6.155813217163086
    8. 'solve' → logprob: -6.155813217163086
    9. '(dp' → logprob: -7.030813217163086
    10. 'len' → logprob: -7.655813217163086

Token 604: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.650518920039758e-06
    2. '2' → logprob: -12.625003814697266
    3. '(pow' → logprob: -15.375003814697266
    4. 'def' → logprob: -17.250003814697266
    5. ' (' → logprob: -19.125003814697266
    6. '<|end|>' → logprob: -19.250003814697266
    7. '```' → logprob: -19.375003814697266
    8. 'pow' → logprob: -19.375003814697266
    9. '(
' → logprob: -19.875003814697266
    10. ')' → logprob: -21.125003814697266

Token 605: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4740793704986572
    2. '(' → logprob: -0.9740793704986572
    3. '(pow' → logprob: -14.224079132080078
    4. '```' → logprob: -14.724079132080078
    5. '<|end|>' → logprob: -14.724079132080078
    6. ' ' → logprob: -15.099079132080078
    7. ')' → logprob: -15.224079132080078
    8. 'def' → logprob: -16.349079132080078
    9. '1' → logprob: -16.724079132080078
    10. '10' → logprob: -16.974079132080078

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02951672486960888
    2. ',h' → logprob: -3.9045166969299316
    3. '(h' → logprob: -4.779516696929932
    4. '(' → logprob: -7.654516696929932
    5. 'h' → logprob: -10.52951717376709
    6. ' ,' → logprob: -11.90451717376709
    7. '(pow' → logprob: -12.52951717376709
    8. ',
' → logprob: -12.52951717376709
    9. ',(' → logprob: -12.65451717376709
    10. '```' → logprob: -13.15451717376709

Token 607: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.010722244158387184
    2. '(h' → logprob: -4.6357221603393555
    3. 'data' → logprob: -7.8857221603393555
    4. ' h' → logprob: -8.260722160339355
    5. '   ' → logprob: -8.760722160339355
    6. 'comp' → logprob: -9.635722160339355
    7. '(' → logprob: -10.510722160339355
    8. ' (' → logprob: -11.260722160339355
    9. '(data' → logprob: -11.760722160339355
    10. ' ' → logprob: -11.885722160339355

Token 608: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04900698736310005
    2. '[h' → logprob: -3.049006938934326
    3. '[j' → logprob: -8.549007415771484
    4. '[' → logprob: -8.674007415771484
    5. 'h' → logprob: -11.049007415771484
    6. 'i' → logprob: -11.174007415771484
    7. '[n' → logprob: -11.799007415771484
    8. '```' → logprob: -12.299007415771484
    9. '(i' → logprob: -13.049007415771484
    10. '[u' → logprob: -13.049007415771484

Token 609: ']-' (ID: 27107)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.673547563375905e-05
    2. '[' → logprob: -10.000086784362793
    3. '[j' → logprob: -11.000086784362793
    4. '[h' → logprob: -12.250086784362793
    5. '[-' → logprob: -12.500086784362793
    6. '[id' → logprob: -12.750086784362793
    7. '```' → logprob: -13.000086784362793
    8. '-' → logprob: -13.250086784362793
    9. '[next' → logprob: -13.500086784362793
    10. '[
' → logprob: -13.500086784362793

Token 610: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0007335089612752199
    2. '1' → logprob: -7.625733375549316
    3. 'data' → logprob: -9.250733375549316
    4. ' h' → logprob: -9.625733375549316
    5. '   ' → logprob: -10.750733375549316
    6. 'a' → logprob: -11.000733375549316
    7. 'j' → logprob: -11.625733375549316
    8. '(h' → logprob: -11.750733375549316
    9. '2' → logprob: -12.000733375549316
    10. 'comp' → logprob: -12.375733375549316

Token 611: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00030400342075154185
    2. '[' → logprob: -8.500304222106934
    3. '1' → logprob: -9.250304222106934
    4. '[j' → logprob: -13.500304222106934
    5. '(i' → logprob: -13.750304222106934
    6. 'i' → logprob: -14.125304222106934
    7. '{i' → logprob: -14.750304222106934
    8. '[next' → logprob: -15.750304222106934
    9. '```' → logprob: -16.000303268432617
    10. '   ' → logprob: -16.500303268432617

Token 612: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011406653560698032
    2. '[' → logprob: -4.761406421661377
    3. '+' → logprob: -6.136406421661377
    4. '-' → logprob: -7.761406421661377
    5. '[j' → logprob: -9.511406898498535
    6. '1' → logprob: -10.011406898498535
    7. '[id' → logprob: -10.636406898498535
    8. '(i' → logprob: -10.761406898498535
    9. ']' → logprob: -11.636406898498535
    10. '   ' → logprob: -11.761406898498535

Token 613: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.992775888647884e-05
    2. '[' → logprob: -11.375069618225098
    3. '```' → logprob: -11.500069618225098
    4. 'h' → logprob: -11.625069618225098
    5. '   ' → logprob: -11.750069618225098
    6. '[i' → logprob: -11.875069618225098
    7. 'i' → logprob: -12.125069618225098
    8. 'next' → logprob: -12.375069618225098
    9. '2' → logprob: -13.062569618225098
    10. '[h' → logprob: -13.750069618225098

Token 614: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.1198754757642746
    2. '[i' → logprob: -2.494875431060791
    3. ']' → logprob: -3.744875431060791
    4. ']-' → logprob: -5.119875431060791
    5. '[j' → logprob: -7.869875431060791
    6. ',' → logprob: -8.74487590789795
    7. '-' → logprob: -9.36987590789795
    8. '[id' → logprob: -9.49487590789795
    9. '[' → logprob: -10.61987590789795
    10. '(i' → logprob: -10.61987590789795

Token 615: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0004882152716163546
    2. ' mod' → logprob: -7.62548828125
    3. '(mod' → logprob: -16.12548828125
    4. '	mod' → logprob: -16.87548828125
    5. '```' → logprob: -17.00048828125
    6. '   ' → logprob: -18.75048828125
    7. ' ' → logprob: -18.87548828125
    8. '2' → logprob: -18.87548828125
    9. 'm' → logprob: -18.87548828125
    10. ' мод' → logprob: -19.25048828125

Token 616: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010899970307946205
    2. ',' → logprob: -4.885900020599365
    3. ')%' → logprob: -6.135900020599365
    4. '%' → logprob: -7.635900020599365
    5. '))' → logprob: -8.135899543762207
    6. '-' → logprob: -8.635899543762207
    7. ')-' → logprob: -9.885899543762207
    8. ' )' → logprob: -10.510899543762207
    9. ' -' → logprob: -10.760899543762207
    10. '),' → logprob: -11.010899543762207

Token 617: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3802848160266876
    2. '%' → logprob: -1.3802847862243652
    3. ')%' → logprob: -2.7552847862243652
    4. ' %' → logprob: -6.880284786224365
    5. '%)' → logprob: -9.255285263061523
    6. ' )' → logprob: -9.880285263061523
    7. ']%' → logprob: -11.255285263061523
    8. '+' → logprob: -11.505285263061523
    9. '   ' → logprob: -11.630285263061523
    10. '))' → logprob: -11.755285263061523

Token 618: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.250005722045898
    3. 'pow' → logprob: -14.500005722045898
    4. '2' → logprob: -15.375005722045898
    5. ')' → logprob: -16.2500057220459
    6. '0' → logprob: -16.2500057220459
    7. 'mod' → logprob: -16.6250057220459
    8. '(' → logprob: -17.0000057220459
    9. '```' → logprob: -17.8125057220459
    10. '   ' → logprob: -17.8750057220459

Token 619: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '2' → logprob: -17.0
    4. 'mod' → logprob: -18.5
    5. '(' → logprob: -18.75
    6. '0' → logprob: -18.75
    7. 'pow' → logprob: -19.375
    8. '
' → logprob: -20.125
    9. '```' → logprob: -20.125
    10. ')' → logprob: -20.25

Token 620: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012626138050109148
    2. ')%' → logprob: -6.751262664794922
    3. '+' → logprob: -9.751262664794922
    4. '%' → logprob: -11.751262664794922
    5. ' )' → logprob: -11.751262664794922
    6. '   ' → logprob: -11.876262664794922
    7. '))' → logprob: -13.001262664794922
    8. ' +' → logprob: -13.376262664794922
    9. ')
' → logprob: -13.626262664794922
    10. ']' → logprob: -13.751262664794922

Token 621: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6126070022583008
    2. '<|end|>' → logprob: -1.1126070022583008
    3. '   ' → logprob: -2.862607002258301
    4. ')' → logprob: -3.237607002258301
    5. ' %' → logprob: -4.362607002258301
    6. '<|end|>' → logprob: -4.987607002258301
    7. '+' → logprob: -5.112607002258301
    8. '       ' → logprob: -6.362607002258301
    9. ' ' → logprob: -6.487607002258301
    10. '```' → logprob: -7.112607002258301

Token 622: ' dp' (ID: 21546)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.707955539226532
    2. '<|end|>' → logprob: -0.957955539226532
    3. ')' → logprob: -2.7079555988311768
    4. ' %' → logprob: -4.082955360412598
    5. '```' → logprob: -4.707955360412598
    6. '
' → logprob: -4.707955360412598
    7. '   ' → logprob: -4.832955360412598
    8. '<|end|>' → logprob: -5.332955360412598
    9. '[' → logprob: -5.832955360412598
    10. ' ' → logprob: -6.457955360412598

Token 623: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.6100132496794686e-05
    2. '[' → logprob: -10.125056266784668
    3. '<|end|>' → logprob: -11.750056266784668
    4. '[user' → logprob: -12.750056266784668
    5. '[I' → logprob: -13.875056266784668
    6. '[n' → logprob: -13.875056266784668
    7. '<|end|>' → logprob: -14.500056266784668
    8. '[u' → logprob: -14.500056266784668
    9. '[ind' → logprob: -15.125056266784668
    10. '[s' → logprob: -15.500056266784668

Token 624: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07948319613933563
    2. '[i' → logprob: -2.5794832706451416
    3. ')[' → logprob: -7.7044830322265625
    4. ']' → logprob: -9.704483032226562
    5. '[' → logprob: -10.454483032226562
    6. '[I' → logprob: -11.329483032226562
    7. ' ][' → logprob: -11.954483032226562
    8. ')' → logprob: -12.079483032226562
    9. '<|end|>' → logprob: -12.579483032226562
    10. '   ' → logprob: -12.579483032226562

Token 625: 'id' (ID: 315)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11322923004627228
    2. 'id' → logprob: -2.238229274749756
    3. 'j' → logprob: -8.238228797912598
    4. '0' → logprob: -8.988228797912598
    5. '1' → logprob: -12.113228797912598
    6. ']' → logprob: -13.113228797912598
    7. '```' → logprob: -13.363228797912598
    8. ' i' → logprob: -13.738228797912598
    9. '(i' → logprob: -13.863228797912598
    10. '   ' → logprob: -14.113228797912598

Token 626: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.015885258093476295
    2. ']' → logprob: -4.265885353088379
    3. '-' → logprob: -7.015885353088379
    4. '+' → logprob: -8.015885353088379
    5. '[' → logprob: -9.140885353088379
    6. ']+=' → logprob: -9.390885353088379
    7. '[i' → logprob: -9.765885353088379
    8. '][]' → logprob: -9.890885353088379
    9. ']=' → logprob: -10.015885353088379
    10. ' ][' → logprob: -10.140885353088379

Token 627: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0031920899637043476
    2. ' %=' → logprob: -6.253191947937012
    3. '%' → logprob: -6.753191947937012
    4. '=' → logprob: -9.753191947937012
    5. '//=' → logprob: -11.253191947937012
    6. ']' → logprob: -11.753191947937012
    7. '```' → logprob: -12.003191947937012
    8. ')' → logprob: -12.253191947937012
    9. '+=' → logprob: -12.878191947937012
    10. ')%' → logprob: -13.878191947937012

Token 628: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. ' mod' → logprob: -15.75
    3. '(mod' → logprob: -18.75
    4. '10' → logprob: -23.25
    5. '	mod' → logprob: -24.125
    6. '```' → logprob: -24.25
    7. 'MOD' → logprob: -25.375
    8. 'mods' → logprob: -26.0
    9. ' мод' → logprob: -26.125
    10. '_mod' → logprob: -26.5

Token 629: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032212406396865845
    2. '<|end|>' → logprob: -4.032212257385254
    3. '    
' → logprob: -5.282212257385254
    4. '\n' → logprob: -6.032212257385254
    5. ' for' → logprob: -6.282212257385254
    6. '
' → logprob: -6.782212257385254
    7. 'for' → logprob: -7.282212257385254
    8. ')' → logprob: -7.532212257385254
    9. '```' → logprob: -7.657212257385254
    10. '       ' → logprob: -8.157212257385254

Token 630: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04813418537378311
    2. '<|end|>' → logprob: -3.9231340885162354
    3. 'i' → logprob: -4.5481343269348145
    4. ' for' → logprob: -6.0481343269348145
    5. '\t' → logprob: -6.0481343269348145
    6. 'for' → logprob: -6.0481343269348145
    7. '[i' → logprob: -6.5481343269348145
    8. ')' → logprob: -6.5481343269348145
    9. '\n' → logprob: -6.5481343269348145
    10. ' i' → logprob: -7.1731343269348145

Token 631: ' id' (ID: 1211)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21047942340373993
    2. '   ' → logprob: -1.8354793787002563
    3. ')' → logprob: -4.585479259490967
    4. '<|end|>' → logprob: -4.960479259490967
    5. 'for' → logprob: -5.835479259490967
    6. '    ' → logprob: -6.585479259490967
    7. '```' → logprob: -6.835479259490967
    8. ' i' → logprob: -6.835479259490967
    9. '#' → logprob: -7.085479259490967
    10. '	i' → logprob: -7.335479259490967

Token 632: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7699843645095825
    2. '+=' → logprob: -1.0199843645095825
    3. ' +=' → logprob: -2.644984245300293
    4. ' =' → logprob: -2.769984245300293
    5. '=' → logprob: -3.269984245300293
    6. '+' → logprob: -5.894984245300293
    7. ',' → logprob: -8.019984245300293
    8. '=i' → logprob: -8.394984245300293
    9. '_plus' → logprob: -8.644984245300293
    10. '1' → logprob: -8.769984245300293

Token 633: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142152905464172
    2. '=' → logprob: -1.7014214992523193
    3. ',' → logprob: -12.076421737670898
    4. ' +=' → logprob: -13.701421737670898
    5. ')' → logprob: -14.576421737670898
    6. '+=' → logprob: -14.951421737670898
    7. '   ' → logprob: -15.701421737670898
    8. '[' → logprob: -16.2014217376709
    9. ' ' → logprob: -16.5764217376709
    10. '+' → logprob: -16.7014217376709

Token 634: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.03374700993299484
    2. ' comp' → logprob: -3.4087469577789307
    3. 'id' → logprob: -10.408746719360352
    4. '0' → logprob: -10.908746719360352
    5. 'com' → logprob: -11.533746719360352
    6. '	comp' → logprob: -12.033746719360352
    7. ' id' → logprob: -12.408746719360352
    8. 'max' → logprob: -12.533746719360352
    9. '(comp' → logprob: -12.533746719360352
    10. 'mod' → logprob: -12.908746719360352

Token 635: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -6.511406809295295e-06
    2. 'h' → logprob: -12.250006675720215
    3. '[' → logprob: -13.875006675720215
    4. '[a' → logprob: -15.125006675720215
    5. '(h' → logprob: -15.625006675720215
    6. '{' → logprob: -16.6250057220459
    7. '```' → logprob: -17.0000057220459
    8. '[data' → logprob: -17.1250057220459
    9. 'a' → logprob: -17.5000057220459
    10. 'comp' → logprob: -18.0000057220459

Token 636: '[i' (ID: 1768)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.3135598599910736
    2. '[i' → logprob: -1.313559889793396
    3. 'h' → logprob: -8.188559532165527
    4. '[' → logprob: -11.563559532165527
    5. ']' → logprob: -12.438559532165527
    6. '(h' → logprob: -13.188559532165527
    7. 'i' → logprob: -13.313559532165527
    8. '[j' → logprob: -14.438559532165527
    9. '```' → logprob: -14.438559532165527
    10. ')' → logprob: -14.813559532165527

Token 637: ']]
' (ID: 29446)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001940040965564549
    2. '[' → logprob: -9.37519359588623
    3. '+' → logprob: -9.87519359588623
    4. ']' → logprob: -10.50019359588623
    5. 'i' → logprob: -11.25019359588623
    6. '[
' → logprob: -12.25019359588623
    7. '+i' → logprob: -12.87519359588623
    8. ']+' → logprob: -13.00019359588623
    9. '[j' → logprob: -13.00019359588623
    10. '(i' → logprob: -13.62519359588623

Token 638: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8711804151535034
    2. '   ' → logprob: -1.6211804151535034
    3. '       ' → logprob: -2.121180534362793
    4. ')' → logprob: -2.621180534362793
    5. 'for' → logprob: -2.621180534362793
    6. '```' → logprob: -2.621180534362793
    7. '[' → logprob: -3.621180534362793
    8. '<|end|>' → logprob: -4.996180534362793
    9. '[i' → logprob: -5.746180534362793
    10. '[j' → logprob: -6.121180534362793

Token 639: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01257510669529438
    2. ' for' → logprob: -4.387575149536133
    3. '```' → logprob: -9.887575149536133
    4. '   ' → logprob: -11.887575149536133
    5. '       ' → logprob: -12.887575149536133
    6. 'j' → logprob: -13.887575149536133
    7. '
' → logprob: -14.012575149536133
    8. '	for' → logprob: -14.137575149536133
    9. ')' → logprob: -14.137575149536133
    10. 'i' → logprob: -14.637575149536133

Token 640: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.250000953674316
    3. 'i' → logprob: -16.625
    4. '   ' → logprob: -17.625
    5. '```' → logprob: -17.75
    6. '[int' → logprob: -18.5
    7. '[j' → logprob: -18.625
    8. ')[' → logprob: -19.5
    9. '[n' → logprob: -19.625
    10. '[id' → logprob: -19.75

Token 641: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004848153796046972
    2. ']' → logprob: -5.879848003387451
    3. '[' → logprob: -6.879848003387451
    4. '[id' → logprob: -7.129848003387451
    5. '][-' → logprob: -9.62984848022461
    6. ' ][' → logprob: -11.00484848022461
    7. 'id' → logprob: -11.25484848022461
    8. ')[' → logprob: -11.50484848022461
    9. '[i' → logprob: -11.69234848022461
    10. '][:' → logprob: -11.75484848022461

Token 642: 'id' (ID: 315)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6352804899215698
    2. 'id' → logprob: -0.7602804899215698
    3. 'j' → logprob: -6.010280609130859
    4. '[i' → logprob: -9.63528060913086
    5. '][' → logprob: -10.13528060913086
    6. '[id' → logprob: -10.26028060913086
    7. '0' → logprob: -10.38528060913086
    8. ']' → logprob: -10.88528060913086
    9. ' id' → logprob: -12.38528060913086
    10. '1' → logprob: -12.63528060913086

Token 643: ']' (ID: 60)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5869296789169312
    2. '][' → logprob: -0.8369296789169312
    3. ']' → logprob: -4.836929798126221
    4. '-' → logprob: -7.211929798126221
    5. '[id' → logprob: -7.336929798126221
    6. '[' → logprob: -7.961929798126221
    7. '][:' → logprob: -8.211929321289062
    8. '+' → logprob: -8.461929321289062
    9. ']=' → logprob: -8.836929321289062
    10. '[i' → logprob: -8.836929321289062

Token 644: ' +=' (ID: 2757)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21073555946350098
    2. '][' → logprob: -2.210735559463501
    3. ']' → logprob: -3.585735559463501
    4. '=' → logprob: -4.085735321044922
    5. ']+=' → logprob: -4.835735321044922
    6. '[i' → logprob: -5.085735321044922
    7. '[j' → logprob: -5.335735321044922
    8. ']=' → logprob: -5.710735321044922
    9. '%=' → logprob: -6.085735321044922
    10. '+=' → logprob: -6.460735321044922

Token 645: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0506936311721802
    2. 'pow' → logprob: -1.1756936311721802
    3. '1' → logprob: -1.6756936311721802
    4. 'dp' → logprob: -2.0506935119628906
    5. '(' → logprob: -4.175693511962891
    6. 'mod' → logprob: -5.925693511962891
    7. ' ' → logprob: -6.425693511962891
    8. '(dp' → logprob: -6.550693511962891
    9. ' pow' → logprob: -6.800693511962891
    10. ' dp' → logprob: -7.050693511962891

Token 646: '2' (ID: 17)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8247931003570557
    2. '2' → logprob: -1.4497931003570557
    3. '1' → logprob: -1.8247931003570557
    4. 'dp' → logprob: -1.9497931003570557
    5. '(' → logprob: -4.574792861938477
    6. 'mod' → logprob: -5.199792861938477
    7. '0' → logprob: -5.949792861938477
    8. 'sum' → logprob: -6.199792861938477
    9. '(dp' → logprob: -6.949792861938477
    10. '(pow' → logprob: -7.449792861938477

Token 647: ' ' (ID: 220)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6014184951782227
    2. '<|end|>' → logprob: -1.6014184951782227
    3. '%' → logprob: -1.7264184951782227
    4. ')' → logprob: -2.8514184951782227
    5. ' %=' → logprob: -4.976418495178223
    6. ' *' → logprob: -6.226418495178223
    7. '<|end|>' → logprob: -6.476418495178223
    8. ')%' → logprob: -6.851418495178223
    9. '
' → logprob: -6.976418495178223
    10. '*' → logprob: -7.476418495178223

Token 648: ' #' (ID: 1069)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2889609932899475
    2. ' %' → logprob: -1.9139609336853027
    3. ')' → logprob: -2.6639609336853027
    4. '
' → logprob: -4.038960933685303
    5. ' %=' → logprob: -4.913960933685303
    6. ')%' → logprob: -5.663960933685303
    7. '<|end|>' → logprob: -6.038960933685303
    8. '%
' → logprob: -7.288960933685303
    9. '%=' → logprob: -7.413960933685303
    10. '   ' → logprob: -8.413961410522461

Token 649: ' Aj' (ID: 28294)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3194687068462372
    2. ' dp' → logprob: -1.4444687366485596
    3. '<|end|>' → logprob: -3.4444687366485596
    4. '
' → logprob: -5.6944684982299805
    5. '(dp' → logprob: -7.1944684982299805
    6. '	dp' → logprob: -7.3194684982299805
    7. '%' → logprob: -8.69446849822998
    8. '```' → logprob: -8.81946849822998
    9. '<|end|>' → logprob: -9.06946849822998
    10. '_dp' → logprob: -9.06946849822998

Token 650: 'oute' (ID: 3509)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8324241638183594
    2. '+=' → logprob: -0.9574241638183594
    3. '+' → logprob: -2.7074241638183594
    4. ' +=' → logprob: -2.8324241638183594
    5. 'dp' → logprob: -3.7074241638183594
    6. '%' → logprob: -4.707424163818359
    7. '%=' → logprob: -4.957424163818359
    8. ' =' → logprob: -5.082424163818359
    9. ' %=' → logprob: -6.332424163818359
    10. ' dp' → logprob: -6.457424163818359

Token 651: ' ' (ID: 220)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.3508856296539307
    2. '%' → logprob: -1.7258856296539307
    3. '<|end|>' → logprob: -1.7258856296539307
    4. ')' → logprob: -2.2258856296539307
    5. 'dp' → logprob: -2.4758856296539307
    6. ' dp' → logprob: -3.3508856296539307
    7. ' +=' → logprob: -3.7258856296539307
    8. '[' → logprob: -3.8508856296539307
    9. ' %' → logprob: -3.9758856296539307
    10. ' *' → logprob: -4.350885391235352

Token 652: '2' (ID: 17)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0241999626159668
    2. 'dp' → logprob: -1.1491999626159668
    3. '2' → logprob: -2.149199962615967
    4. ')' → logprob: -3.024199962615967
    5. 'mod' → logprob: -3.024199962615967
    6. '*' → logprob: -3.149199962615967
    7. '1' → logprob: -3.274199962615967
    8. 'pow' → logprob: -5.149199962615967
    9. '
' → logprob: -5.524199962615967
    10. '(dp' → logprob: -6.024199962615967

Token 653: ' façons' (ID: 165958)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8246386051177979
    2. '<|end|>' → logprob: -0.8246386051177979
    3. '
' → logprob: -2.199638605117798
    4. ')' → logprob: -5.574638366699219
    5. '\n' → logprob: -5.824638366699219
    6. '```' → logprob: -5.949638366699219
    7. '<|end|>' → logprob: -6.574638366699219
    8. '%
' → logprob: -7.949638366699219
    9. ' %' → logprob: -8.074638366699219
    10. '   ' → logprob: -8.574638366699219

Token 654: ' supplémentaires' (ID: 99346)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3360240161418915
    2. '<|end|>' → logprob: -1.8360240459442139
    3. '
' → logprob: -2.836024045944214
    4. '```' → logprob: -4.086023807525635
    5. '       ' → logprob: -4.336023807525635
    6. ')' → logprob: -4.461023807525635
    7. '\n' → logprob: -4.586023807525635
    8. '   ' → logprob: -5.336023807525635
    9. '%
' → logprob: -5.836023807525635
    10. '<|end|>' → logprob: -6.586023807525635

Token 655: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9825044870376587
    2. '<|end|>' → logprob: -1.2325044870376587
    3. '%' → logprob: -1.6075044870376587
    4. '\n' → logprob: -2.732504367828369
    5. '```' → logprob: -3.107504367828369
    6. '   ' → logprob: -4.607504367828369
    7. ')' → logprob: -5.857504367828369
    8. '    
' → logprob: -5.982504367828369
    9. '<|end|>' → logprob: -6.232504367828369
    10. '[i' → logprob: -6.357504367828369

Token 656: ' la' (ID: 557)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.1525011658668518
    2. 'j' → logprob: -2.527501106262207
    3. ' id' → logprob: -3.027501106262207
    4. ' j' → logprob: -4.527501106262207
    5. 'l' → logprob: -7.027501106262207
    6. 'comp' → logprob: -7.902501106262207
    7. 'dp' → logprob: -8.402501106262207
    8. ' la' → logprob: -8.527501106262207
    9. 'la' → logprob: -9.027501106262207
    10. 'le' → logprob: -9.152501106262207

Token 657: ' configuration' (ID: 12282)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8490806221961975
    2. ' j' → logprob: -1.8490805625915527
    3. 'dp' → logprob: -2.4740805625915527
    4. 'id' → logprob: -2.5990805625915527
    5. ')' → logprob: -2.5990805625915527
    6. 'i' → logprob: -3.4740805625915527
    7. 'for' → logprob: -3.5990805625915527
    8. ' for' → logprob: -3.5990805625915527
    9. 'pl' → logprob: -4.599080562591553
    10. ']' → logprob: -4.599080562591553

Token 658: ' maximale' (ID: 76380)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07887259870767593
    2. '
' → logprob: -3.4538726806640625
    3. '<|end|>' → logprob: -3.9538726806640625
    4. '```' → logprob: -4.9538726806640625
    5. '%
' → logprob: -5.4538726806640625
    6. ')' → logprob: -5.5788726806640625
    7. ' %' → logprob: -5.9538726806640625
    8. '\n' → logprob: -6.5788726806640625
    9. 'dp' → logprob: -6.7038726806640625
    10. '       ' → logprob: -7.3288726806640625

Token 659: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5283724069595337
    2. '
' → logprob: -1.4033724069595337
    3. '<|end|>' → logprob: -2.153372287750244
    4. '```' → logprob: -3.778372287750244
    5. '   ' → logprob: -4.403372287750244
    6. ')' → logprob: -5.528372287750244
    7. '\n' → logprob: -5.778372287750244
    8. '%
' → logprob: -6.653372287750244
    9. '    
' → logprob: -6.653372287750244
    10. '       ' → logprob: -6.903372287750244

Token 660: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.47898074984550476
    2. '
' → logprob: -1.8539807796478271
    3. '```' → logprob: -1.8539807796478271
    4. '<|end|>' → logprob: -3.103980779647827
    5. ')' → logprob: -4.853980541229248
    6. '[i' → logprob: -6.103980541229248
    7. '   ' → logprob: -6.103980541229248
    8. '\n' → logprob: -6.353980541229248
    9. '%
' → logprob: -6.603980541229248
    10. '    
' → logprob: -6.728980541229248

Token 661: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.03752664849162102
    2. ' dp' → logprob: -3.7875266075134277
    3. '	dp' → logprob: -4.662526607513428
    4. '<|end|>' → logprob: -6.662526607513428
    5. '       ' → logprob: -6.787526607513428
    6. '(dp' → logprob: -7.162526607513428
    7. '   ' → logprob: -7.787526607513428
    8. '```' → logprob: -7.912526607513428
    9. '
' → logprob: -8.287527084350586
    10. '_dp' → logprob: -8.787527084350586

Token 662: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.849109119386412e-06
    2. '[' → logprob: -12.000009536743164
    3. 'i' → logprob: -13.500009536743164
    4. '<|end|>' → logprob: -13.875009536743164
    5. '```' → logprob: -15.375009536743164
    6. 's' → logprob: -16.000009536743164
    7. '[user' → logprob: -16.125009536743164
    8. '[I' → logprob: -16.125009536743164
    9. '<|end|>' → logprob: -16.625009536743164
    10. '[int' → logprob: -16.750009536743164

Token 663: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.32723280787467957
    2. '[id' → logprob: -1.327232837677002
    3. '[' → logprob: -4.827232837677002
    4. '[i' → logprob: -5.327232837677002
    5. ']' → logprob: -7.827232837677002
    6. ')[' → logprob: -8.202232360839844
    7. '%' → logprob: -10.202232360839844
    8. '[idx' → logprob: -10.577232360839844
    9. '[ip' → logprob: -10.577232360839844
    10. '[ind' → logprob: -10.702232360839844

Token 664: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -3.726595241460018e-05
    2. '[id' → logprob: -10.62503719329834
    3. ' id' → logprob: -11.50003719329834
    4. 'i' → logprob: -13.87503719329834
    5. '[' → logprob: -14.50003719329834
    6. ']' → logprob: -15.37503719329834
    7. 'data' → logprob: -15.62503719329834
    8. '(id' → logprob: -15.87503719329834
    9. 'comp' → logprob: -16.125038146972656
    10. '_id' → logprob: -16.375038146972656

Token 665: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.845798710244708e-05
    2. ']%' → logprob: -10.875038146972656
    3. ')' → logprob: -11.625038146972656
    4. '%' → logprob: -12.125038146972656
    5. '%=' → logprob: -12.500038146972656
    6. ' ]' → logprob: -14.625038146972656
    7. '']' → logprob: -15.625038146972656
    8. ' %=' → logprob: -15.625038146972656
    9. ']+=' → logprob: -15.625038146972656
    10. ')%' → logprob: -15.875038146972656

Token 666: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.00491992337629199
    2. ' %=' → logprob: -5.37992000579834
    3. '%' → logprob: -8.12992000579834
    4. '=' → logprob: -12.87992000579834
    5. ')' → logprob: -14.12992000579834
    6. ' ' → logprob: -14.37992000579834
    7. '	' → logprob: -15.50492000579834
    8. ')%' → logprob: -15.50492000579834
    9. '```' → logprob: -15.50492000579834
    10. ' %' → logprob: -15.75492000579834

Token 667: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0019286326132714748
    2. ' mod' → logprob: -6.251928806304932
    3. '(mod' → logprob: -19.751928329467773
    4. '	mod' → logprob: -20.376928329467773
    5. ' мод' → logprob: -23.126928329467773
    6. '_mod' → logprob: -23.251928329467773
    7. '```' → logprob: -23.751928329467773
    8. '.mod' → logprob: -24.376928329467773
    9. ' modul' → logprob: -24.876928329467773
    10. ' ' → logprob: -25.626928329467773

Token 668: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 669: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08768961578607559
    2. 'i' → logprob: -3.0876896381378174
    3. '```' → logprob: -3.5876896381378174
    4. '    
' → logprob: -5.712689399719238
    5. ' i' → logprob: -6.212689399719238
    6. 'for' → logprob: -6.337689399719238
    7. ' for' → logprob: -6.462689399719238
    8. '
' → logprob: -8.212689399719238
    9. '\n' → logprob: -8.212689399719238
    10. '       ' → logprob: -8.337689399719238

Token 670: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14293630421161652
    2. 'for' → logprob: -2.2679362297058105
    3. '   ' → logprob: -4.1429362297058105
    4. '```' → logprob: -4.7679362297058105
    5. ' for' → logprob: -5.7679362297058105
    6. ' i' → logprob: -6.5179362297058105
    7. '    
' → logprob: -8.142936706542969
    8. ')' → logprob: -9.392936706542969
    9. '\n' → logprob: -9.392936706542969
    10. '\' → logprob: -10.267936706542969

Token 671: ' Rem' (ID: 6890)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0074279652908444405
    2. 'i' → logprob: -5.007428169250488
    3. 'from' → logprob: -7.882428169250488
    4. 'prefix' → logprob: -8.382428169250488
    5. ' for' → logprob: -9.882428169250488
    6. '```' → logprob: -11.132428169250488
    7. 'import' → logprob: -11.757428169250488
    8. 'prev' → logprob: -12.007428169250488
    9. '   ' → logprob: -12.132428169250488
    10. '#' → logprob: -12.757428169250488

Token 672: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.03841748833656311
    2. 'for' → logprob: -4.413417339324951
    3. 'p' → logprob: -5.163417339324951
    4. 'aining' → logprob: -5.288417339324951
    5. 'placer' → logprob: -5.288417339324951
    6. 'onter' → logprob: -5.913417339324951
    7. 'er' → logprob: -6.163417339324951
    8. 'pir' → logprob: -6.913417339324951
    9. 'ainer' → logprob: -7.288417339324951
    10. 'ain' → logprob: -7.413417339324951

Token 673: 'issage' (ID: 63863)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.6835286617279053
    2. 'issage' → logprob: -0.9335286617279053
    3. 'a' → logprob: -2.9335286617279053
    4. 'ege' → logprob: -4.808528900146484
    5. 'aign' → logprob: -5.058528900146484
    6. 'e' → logprob: -5.183528900146484
    7. 'arge' → logprob: -5.433528900146484
    8. 'ige' → logprob: -6.058528900146484
    9. 'er' → logprob: -6.058528900146484
    10. 'i' → logprob: -6.683528900146484

Token 674: ' progress' (ID: 7408)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0410684198141098
    2. ' for' → logprob: -3.2910683155059814
    3. '```' → logprob: -6.5410685539245605
    4. 'i' → logprob: -6.6660685539245605
    5. '   ' → logprob: -8.166068077087402
    6. ' i' → logprob: -11.166068077087402
    7. ' of' → logprob: -13.666068077087402
    8. '	for' → logprob: -13.791068077087402
    9. '[i' → logprob: -13.916068077087402
    10. '``' → logprob: -14.041068077087402

Token 675: 'if' (ID: 366)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.7890108227729797
    2. 'i' → logprob: -1.539010763168335
    3. 'ant' → logprob: -2.164010763168335
    4. 'ement' → logprob: -2.664010763168335
    5. 'e' → logprob: -3.289010763168335
    6. 'ent' → logprob: -3.414010763168335
    7. 'ion' → logprob: -3.914010763168335
    8. 'er' → logprob: -4.789011001586914
    9. '   ' → logprob: -4.914011001586914
    10. 'ément' → logprob: -5.039011001586914

Token 676: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19008086621761322
    2. ' for' → logprob: -2.0650808811187744
    3. '```' → logprob: -3.6900808811187744
    4. '   ' → logprob: -4.065080642700195
    5. 'i' → logprob: -5.565080642700195
    6. ' i' → logprob: -8.690080642700195
    7. '	for' → logprob: -9.690080642700195
    8. '    
' → logprob: -9.815080642700195
    9. '``' → logprob: -10.815080642700195
    10. '
' → logprob: -11.565080642700195

Token 677: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002197717549279332
    2. ' range' → logprob: -6.127197742462158
    3. 'dp' → logprob: -11.377197265625
    4. '```' → logprob: -14.627197265625
    5. '   ' → logprob: -15.252197265625
    6. 'i' → logprob: -15.627197265625
    7. '(range' → logprob: -16.252197265625
    8. 'for' → logprob: -16.877197265625
    9. 'r' → logprob: -17.752197265625
    10. '	range' → logprob: -17.877197265625

Token 678: ' DP' (ID: 51992)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5915186405181885
    2. 'range' → logprob: -0.8415186405181885
    3. 'dp' → logprob: -4.591518402099609
    4. '```' → logprob: -5.966518402099609
    5. 'i' → logprob: -6.466518402099609
    6. ' range' → logprob: -7.091518402099609
    7. 'pl' → logprob: -8.84151840209961
    8. ' for' → logprob: -8.84151840209961
    9. '`' → logprob: -10.84151840209961
    10. 'n' → logprob: -11.84151840209961

Token 679: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7851365208625793
    2. '```' → logprob: -1.5351364612579346
    3. ' for' → logprob: -1.6601364612579346
    4. '   ' → logprob: -2.0351364612579346
    5. '    
' → logprob: -6.285136699676514
    6. '	for' → logprob: -6.535136699676514
    7. '
' → logprob: -6.910136699676514
    8. 'i' → logprob: -6.910136699676514
    9. '``' → logprob: -7.410136699676514
    10. ' i' → logprob: -7.910136699676514

Token 680: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21050451695919037
    2. ' i' → logprob: -1.7105045318603516
    3. ' range' → logprob: -4.960504531860352
    4. 'range' → logprob: -6.210504531860352
    5. '```' → logprob: -12.335504531860352
    6. 'j' → logprob: -12.460504531860352
    7. '_i' → logprob: -12.460504531860352
    8. '_range' → logprob: -12.585504531860352
    9. ' j' → logprob: -12.710504531860352
    10. '_' → logprob: -13.085504531860352

Token 681: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0038172954227775335
    2. ' i' → logprob: -5.628817081451416
    3. '```' → logprob: -8.628817558288574
    4. 'indice' → logprob: -11.878817558288574
    5. 'position' → logprob: -12.253817558288574
    6. 'index' → logprob: -12.503817558288574
    7. '_i' → logprob: -12.628817558288574
    8. '`' → logprob: -12.753817558288574
    9. 'j' → logprob: -12.878817558288574
    10. 'idx' → logprob: -13.128817558288574

Token 682: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5009636878967285
    2. ' for' → logprob: -1.0009636878967285
    3. 'i' → logprob: -4.3759636878967285
    4. '```' → logprob: -4.7509636878967285
    5. '   ' → logprob: -6.2509636878967285
    6. ' i' → logprob: -6.3759636878967285
    7. ' in' → logprob: -7.0009636878967285
    8. 'in' → logprob: -8.12596321105957
    9. ',' → logprob: -8.87596321105957
    10. ':' → logprob: -9.00096321105957

Token 683: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031808018684387207
    2. ' range' → logprob: -5.753180980682373
    3. '```' → logprob: -13.253180503845215
    4. '   ' → logprob: -14.878180503845215
    5. 'h' → logprob: -15.003180503845215
    6. '(range' → logprob: -15.253180503845215
    7. '`' → logprob: -16.00318145751953
    8. 'la' → logprob: -16.00318145751953
    9. 'dp' → logprob: -16.50318145751953
    10. '	range' → logprob: -17.37818145751953

Token 684: ' sé' (ID: 7462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.8590300139039755e-05
    2. 'for' → logprob: -10.375048637390137
    3. ' range' → logprob: -11.875048637390137
    4. '```' → logprob: -11.875048637390137
    5. 'pl' → logprob: -13.625048637390137
    6. 'sequence' → logprob: -14.750048637390137
    7. 'h' → logprob: -14.750048637390137
    8. '   ' → logprob: -15.125048637390137
    9. 'dp' → logprob: -15.875048637390137
    10. '`' → logprob: -15.875048637390137

Token 685: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00036394817288964987
    2. 'q' → logprob: -8.000364303588867
    3. 'quent' → logprob: -11.875364303588867
    4. 'que' → logprob: -11.875364303588867
    5. 'QUENCE' → logprob: -12.125364303588867
    6. 'range' → logprob: -12.875364303588867
    7. '   ' → logprob: -13.375364303588867
    8. '#' → logprob: -13.375364303588867
    9. 'quences' → logprob: -14.000364303588867
    10. 'qu' → logprob: -14.125364303588867

Token 686: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.659995436668396
    2. '   ' → logprob: -1.534995436668396
    3. ' for' → logprob: -2.4099955558776855
    4. 'for' → logprob: -2.6599955558776855
    5. '[i' → logprob: -3.5349955558776855
    6. '\n' → logprob: -3.6599955558776855
    7. '<|end|>' → logprob: -3.7849955558776855
    8. '
' → logprob: -4.6599955558776855
    9. '    
' → logprob: -4.7849955558776855
    10. ')' → logprob: -6.4099955558776855

Token 687: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28662511706352234
    2. ' for' → logprob: -1.9116251468658447
    3. 'for' → logprob: -2.6616251468658447
    4. '```' → logprob: -3.6616251468658447
    5. '
' → logprob: -6.536624908447266
    6. '    
' → logprob: -6.661624908447266
    7. '	for' → logprob: -7.161624908447266
    8. '\n' → logprob: -7.161624908447266
    9. '  
' → logprob: -8.036624908447266
    10. '<|end|>' → logprob: -8.286624908447266

Token 688: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7279903292655945
    2. ' for' → logprob: -0.8529903292655945
    3. '   ' → logprob: -2.7279903888702393
    4. '```' → logprob: -4.47799015045166
    5. 'i' → logprob: -5.22799015045166
    6. '
' → logprob: -5.47799015045166
    7. ' i' → logprob: -5.85299015045166
    8. '\n' → logprob: -7.10299015045166
    9. '    
' → logprob: -7.85299015045166
    10. '	for' → logprob: -8.47799015045166

Token 689: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7101408839225769
    2. ' i' → logprob: -0.7101408839225769
    3. ' j' → logprob: -4.835140705108643
    4. 'j' → logprob: -5.335140705108643
    5. 'x' → logprob: -7.210140705108643
    6. 'k' → logprob: -7.460140705108643
    7. ' x' → logprob: -8.0851411819458
    8. ' k' → logprob: -8.2101411819458
    9. '_' → logprob: -8.3351411819458
    10. ' idx' → logprob: -8.6476411819458

Token 690: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00409656623378396
    2. 'in' → logprob: -5.504096508026123
    3. '	in' → logprob: -11.629096984863281
    4. '   ' → logprob: -12.004096984863281
    5. ' ' → logprob: -14.129096984863281
    6. '1' → logprob: -14.754096984863281
    7. '+' → logprob: -14.879096984863281
    8. ',' → logprob: -15.379096984863281
    9. ' i' → logprob: -15.754096984863281
    10. 'In' → logprob: -15.754096984863281

Token 691: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804631531238556
    2. ' range' → logprob: -3.288046360015869
    3. '1' → logprob: -12.288045883178711
    4. '(range' → logprob: -16.28804588317871
    5. ' ' → logprob: -16.41304588317871
    6. '	range' → logprob: -18.78804588317871
    7. '   ' → logprob: -19.03804588317871
    8. '```' → logprob: -20.16304588317871
    9. '(' → logprob: -20.66304588317871
    10. '  ' → logprob: -20.66304588317871

Token 692: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25273916125297546
    2. '1' → logprob: -1.5027391910552979
    3. '   ' → logprob: -7.127738952636719
    4. ' ' → logprob: -12.627738952636719
    5. ' (' → logprob: -14.002738952636719
    6. '[' → logprob: -14.377738952636719
    7. ',' → logprob: -14.502738952636719
    8. '
' → logprob: -14.752738952636719
    9. '(i' → logprob: -14.752738952636719
    10. '=' → logprob: -15.002738952636719

Token 693: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9623810658231378e-05
    2. '   ' → logprob: -11.250020027160645
    3. ' ' → logprob: -12.125020027160645
    4. '2' → logprob: -14.875020027160645
    5. '    ' → logprob: -15.625020027160645
    6. '  ' → logprob: -16.000019073486328
    7. '
' → logprob: -16.125019073486328
    8. 'i' → logprob: -16.250019073486328
    9. '(' → logprob: -16.625019073486328
    10. 'N' → logprob: -17.375019073486328

Token 694: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009339710813947022
    2. ',N' → logprob: -7.50093412399292
    3. ' ,' → logprob: -8.125933647155762
    4. ',n' → logprob: -10.000933647155762
    5. ',len' → logprob: -10.250933647155762
    6. '(N' → logprob: -13.500933647155762
    7. '   ' → logprob: -13.625933647155762
    8. 'N' → logprob: -14.000933647155762
    9. '(len' → logprob: -15.125933647155762
    10. 'len' → logprob: -15.625933647155762

Token 695: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.4736459888808895e-05
    2. 'n' → logprob: -11.875014305114746
    3. ' N' → logprob: -12.250014305114746
    4. '   ' → logprob: -12.875014305114746
    5. 'len' → logprob: -15.000014305114746
    6. '	N' → logprob: -18.000015258789062
    7. ')' → logprob: -18.750015258789062
    8. '```' → logprob: -18.875015258789062
    9. '       ' → logprob: -19.625015258789062
    10. '    
' → logprob: -20.125015258789062

Token 696: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42881977558135986
    2. '):
' → logprob: -1.0538197755813599
    3. '   ' → logprob: -9.42881965637207
    4. '):
' → logprob: -11.67881965637207
    5. ':' → logprob: -12.42881965637207
    6. ')' → logprob: -12.42881965637207
    7. '+' → logprob: -12.55381965637207
    8. '(N' → logprob: -12.92881965637207
    9. '```' → logprob: -12.92881965637207
    10. '(' → logprob: -13.30381965637207

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.117345684382599e-05
    2. '0' → logprob: -11.000020980834961
    3. ' ' → logprob: -13.500020980834961
    4. '```' → logprob: -13.625020980834961
    5. ')' → logprob: -14.250020980834961
    6. '):
' → logprob: -14.875020980834961
    7. '2' → logprob: -15.125020980834961
    8. '   ' → logprob: -15.250020980834961
    9. '):' → logprob: -17.00002098083496
    10. '...' → logprob: -17.00002098083496

Token 698: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13131219148635864
    2. '):' → logprob: -2.131312131881714
    3. '   ' → logprob: -6.131312370300293
    4. ':' → logprob: -6.256312370300293
    5. ':
' → logprob: -8.506312370300293
    6. ',' → logprob: -10.006312370300293
    7. ')' → logprob: -11.506312370300293
    8. '+' → logprob: -12.006312370300293
    9. '):
' → logprob: -12.006312370300293
    10. '       ' → logprob: -12.131312370300293

Token 699: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5555334091186523
    2. '   ' → logprob: -1.0555334091186523
    3. ' for' → logprob: -2.6805334091186523
    4. 'for' → logprob: -4.930533409118652
    5. '```' → logprob: -6.555533409118652
    6. '    ' → logprob: -7.930533409118652
    7. ' j' → logprob: -8.680533409118652
    8. ' if' → logprob: -9.055533409118652
    9. ' ind' → logprob: -10.055533409118652
    10. '
' → logprob: -10.180533409118652

Token 700: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11802352219820023
    2. '   ' → logprob: -3.368023633956909
    3. 'id' → logprob: -3.618023633956909
    4. 'prefix' → logprob: -4.24302339553833
    5. 'if' (adapté à ' if') → logprob: -4.36802339553833
    6. 'prev' → logprob: -4.86802339553833
    7. 'max' → logprob: -5.74302339553833
    8. ' for' → logprob: -5.99302339553833
    9. 'sum' → logprob: -6.11802339553833
    10. 'curr' → logprob: -6.49302339553833

Token 701: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01857210323214531
    2. ' h' → logprob: -4.0185723304748535
    3. '   ' → logprob: -8.643571853637695
    4. 'a' → logprob: -9.018571853637695
    5. '(h' → logprob: -10.268571853637695
    6. 'comp' → logprob: -10.393571853637695
    7. ' ' → logprob: -11.268571853637695
    8. '	h' → logprob: -11.768571853637695
    9. ' a' → logprob: -11.893571853637695
    10. '  ' → logprob: -12.581071853637695

Token 702: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.875001907348633
    3. '```' → logprob: -14.500001907348633
    4. '[j' → logprob: -15.250001907348633
    5. ')' → logprob: -15.875001907348633
    6. 'i' → logprob: -16.000001907348633
    7. '[h' → logprob: -16.250001907348633
    8. ' [' → logprob: -16.750001907348633
    9. '[I' → logprob: -16.875001907348633
    10. ']' → logprob: -17.000001907348633

Token 703: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6632381081581116
    2. ']' → logprob: -0.7882381081581116
    3. '[' → logprob: -4.288238048553467
    4. '[j' → logprob: -4.788238048553467
    5. '+' → logprob: -5.913238048553467
    6. ']>=' → logprob: -6.288238048553467
    7. ']<=' → logprob: -6.913238048553467
    8. ']==' → logprob: -7.163238048553467
    9. ']>' → logprob: -7.663238048553467
    10. '[h' → logprob: -8.163238525390625

Token 704: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06105904281139374
    2. ']' → logprob: -3.56105899810791
    3. ']>=' → logprob: -3.81105899810791
    4. 'i' → logprob: -4.93605899810791
    5. ']>' → logprob: -7.81105899810791
    6. '[i' → logprob: -8.31105899810791
    7. '+' → logprob: -8.31105899810791
    8. ']<=' → logprob: -8.68605899810791
    9. ']>
' → logprob: -9.31105899810791
    10. ']==' → logprob: -9.93605899810791

Token 705: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09377897530794144
    2. ']>=' → logprob: -2.4687790870666504
    3. '>=' → logprob: -5.59377908706665
    4. ' >=' → logprob: -7.34377908706665
    5. ' ]' → logprob: -8.468778610229492
    6. '[' → logprob: -9.093778610229492
    7. ']>' → logprob: -9.718778610229492
    8. '   ' → logprob: -10.593778610229492
    9. '']' → logprob: -11.718778610229492
    10. '>' → logprob: -11.718778610229492

Token 706: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.03576606139540672
    2. ' >=' → logprob: -3.785766124725342
    3. ']>=' → logprob: -4.535766124725342
    4. ']' → logprob: -7.160766124725342
    5. '>' → logprob: -7.285766124725342
    6. '[' → logprob: -9.035765647888184
    7. '   ' → logprob: -9.910765647888184
    8. ')>=' → logprob: -10.285765647888184
    9. '==' → logprob: -11.160765647888184
    10. '<' → logprob: -11.785765647888184

Token 707: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0010355490958318114
    2. ' h' → logprob: -6.876035690307617
    3. '   ' → logprob: -13.876035690307617
    4. '       ' → logprob: -15.126035690307617
    5. 'comp' → logprob: -15.251035690307617
    6. '[h' → logprob: -15.376035690307617
    7. '	h' → logprob: -15.501035690307617
    8. 'i' → logprob: -16.001035690307617
    9. '```' → logprob: -16.001035690307617
    10. '0' → logprob: -16.563535690307617

Token 708: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00038086410495452583
    2. 'h' → logprob: -8.250380516052246
    3. 'i' → logprob: -9.375380516052246
    4. '[' → logprob: -10.500380516052246
    5. '[h' → logprob: -12.500380516052246
    6. '```' → logprob: -13.125380516052246
    7. 'comp' → logprob: -15.125380516052246
    8. '   ' → logprob: -15.375380516052246
    9. ' [' → logprob: -15.625380516052246
    10. ' i' → logprob: -15.625380516052246

Token 709: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.45356443524360657
    2. ']:
' → logprob: -1.5785644054412842
    3. ':' → logprob: -2.078564405441284
    4. ':
' → logprob: -4.203564643859863
    5. '):
' → logprob: -4.953564643859863
    6. '       ' → logprob: -5.203564643859863
    7. '):' → logprob: -5.328564643859863
    8. ']' → logprob: -8.078564643859863
    9. '           ' → logprob: -8.828564643859863
    10. ']:
' → logprob: -9.078564643859863

Token 710: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.726677417755127
    2. ':
' → logprob: -1.476677417755127
    3. ':' → logprob: -2.101677417755127
    4. '           ' → logprob: -2.226677417755127
    5. ' :
' → logprob: -4.351677417755127
    6. '[' → logprob: -4.851677417755127
    7. '
' → logprob: -4.976677417755127
    8. ' :' → logprob: -5.101677417755127
    9. '<|end|>' → logprob: -5.226677417755127
    10. '```' → logprob: -5.226677417755127

Token 711: ' id' (ID: 1211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1776750236749649
    2. 'prefix' → logprob: -2.9276750087738037
    3. ' for' → logprob: -3.1776750087738037
    4. '       ' → logprob: -3.4276750087738037
    5. 'id' (adapté à ' id') → logprob: -4.552675247192383
    6. 'sum' → logprob: -4.677675247192383
    7. '   ' → logprob: -5.802675247192383
    8. 's' → logprob: -6.302675247192383
    9. 'prev' → logprob: -6.427675247192383
    10. 'j' → logprob: -6.427675247192383

Token 712: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029755352064967155
    2. '=' → logprob: -3.5297553539276123
    3. ',' → logprob: -13.404755592346191
    4. '   ' → logprob: -13.904755592346191
    5. '=
' → logprob: -15.279755592346191
    6. 's' → logprob: -15.404755592346191
    7. '1' → logprob: -15.404755592346191
    8. ')' → logprob: -15.404755592346191
    9. '```' → logprob: -15.404755592346191
    10. ' =
' → logprob: -15.654755592346191

Token 713: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.00525403767824173
    2. ' comp' → logprob: -5.25525426864624
    3. 'dp' → logprob: -11.255253791809082
    4. '0' → logprob: -12.630253791809082
    5. 'com' → logprob: -14.005253791809082
    6. '   ' → logprob: -14.130253791809082
    7. '	comp' → logprob: -14.130253791809082
    8. '(comp' → logprob: -14.880253791809082
    9. 'data' → logprob: -15.005253791809082
    10. ' ' → logprob: -15.505253791809082

Token 714: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -9.674858301877975e-05
    2. 'h' → logprob: -9.250096321105957
    3. '(h' → logprob: -15.750096321105957
    4. 'comp' → logprob: -16.000097274780273
    5. '[' → logprob: -16.000097274780273
    6. '   ' → logprob: -17.250097274780273
    7. '```' → logprob: -17.250097274780273
    8. '<h' → logprob: -18.000097274780273
    9. '       ' → logprob: -18.250097274780273
    10. '=h' → logprob: -18.375097274780273

Token 715: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. 'i' → logprob: -12.125006675720215
    3. '[' → logprob: -14.375006675720215
    4. '[h' → logprob: -15.500006675720215
    5. '(i' → logprob: -15.875006675720215
    6. '```' → logprob: -17.0000057220459
    7. '{i' → logprob: -17.1250057220459
    8. ']' → logprob: -17.7500057220459
    9. 'h' → logprob: -17.8750057220459
    10. '[
' → logprob: -17.8750057220459

Token 716: ']]
' (ID: 29446)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002953015500679612
    2. ']' → logprob: -8.250295639038086
    3. 'i' → logprob: -11.375295639038086
    4. '[' → logprob: -11.750295639038086
    5. '])' → logprob: -11.875295639038086
    6. '])
' → logprob: -12.875295639038086
    7. '(i' → logprob: -13.625295639038086
    8. ']+' → logprob: -13.750295639038086
    9. '[
' → logprob: -13.750295639038086
    10. ']
' → logprob: -14.500295639038086

Token 717: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8056245446205139
    2. '           ' → logprob: -0.8056245446205139
    3. '       ' → logprob: -3.180624485015869
    4. ' 
' → logprob: -4.305624485015869
    5. '<|end|>' → logprob: -4.305624485015869
    6. '+' → logprob: -4.555624485015869
    7. '            
' → logprob: -5.055624485015869
    8. '  
' → logprob: -5.180624485015869
    9. '        
' → logprob: -5.180624485015869
    10. '    
' → logprob: -6.305624485015869

Token 718: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.0338449701666832
    2. 'for' → logprob: -3.4088449478149414
    3. '           ' → logprob: -8.783844947814941
    4. '       ' → logprob: -10.658844947814941
    5. '   ' → logprob: -12.033844947814941
    6. ' for' → logprob: -12.283844947814941
    7. ' id' → logprob: -12.908844947814941
    8. 'dp' → logprob: -13.033844947814941
    9. 'j' → logprob: -13.658844947814941
    10. 'if' → logprob: -13.908844947814941

Token 719: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.548602819442749
    2. '[i' → logprob: -1.423602819442749
    3. ' =' → logprob: -1.923602819442749
    4. '           ' → logprob: -3.923602819442749
    5. '+' → logprob: -4.798603057861328
    6. '       ' → logprob: -6.173603057861328
    7. '   ' → logprob: -6.298603057861328
    8. 'i' → logprob: -7.423603057861328
    9. '               ' → logprob: -7.423603057861328
    10. '[' → logprob: -7.923603057861328

Token 720: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407740354537964
    2. ' =' → logprob: -0.9740774035453796
    3. '=
' → logprob: -15.599077224731445
    4. ')' → logprob: -16.099077224731445
    5. '   ' → logprob: -16.724077224731445
    6. '<|end|>' → logprob: -17.474077224731445
    7. ' =
' → logprob: -17.724077224731445
    8. ',' → logprob: -17.849077224731445
    9. '           ' → logprob: -18.224077224731445
    10. '=com' → logprob: -18.349077224731445

Token 721: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.07889419049024582
    2. ' comp' → logprob: -2.5788941383361816
    3. 'com' → logprob: -13.07889461517334
    4. '	comp' → logprob: -13.20389461517334
    5. '(comp' → logprob: -15.07889461517334
    6. '.comp' → logprob: -16.953893661499023
    7. 'cop' → logprob: -17.703893661499023
    8. ' ' → logprob: -18.203893661499023
    9. ' comps' → logprob: -18.328893661499023
    10. '```' → logprob: -18.328893661499023

Token 722: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -3.7697225252486533e-06
    2. 'h' → logprob: -12.500003814697266
    3. '(h' → logprob: -17.000003814697266
    4. '<h' → logprob: -18.250003814697266
    5. '```' → logprob: -18.500003814697266
    6. '[' → logprob: -19.125003814697266
    7. '=h' → logprob: -20.000003814697266
    8. '	h' → logprob: -20.750003814697266
    9. '[
' → logprob: -20.875003814697266
    10. '{' → logprob: -21.250003814697266

Token 723: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006726144813001156
    2. '[h' → logprob: -5.006726264953613
    3. 'h' → logprob: -11.881726264953613
    4. 'i' → logprob: -12.881726264953613
    5. '[' → logprob: -14.131726264953613
    6. '{i' → logprob: -15.131726264953613
    7. '```' → logprob: -16.006725311279297
    8. '(i' → logprob: -16.256725311279297
    9. '[
' → logprob: -16.506725311279297
    10. '[next' → logprob: -18.256725311279297

Token 724: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25237837433815
    2. '[i' → logprob: -1.5023783445358276
    3. 'i' → logprob: -8.627378463745117
    4. '1' → logprob: -9.252378463745117
    5. '+i' → logprob: -9.752378463745117
    6. '(i' → logprob: -10.502378463745117
    7. '```' → logprob: -10.752378463745117
    8. '[' → logprob: -10.877378463745117
    9. '+
' → logprob: -11.252378463745117
    10. '   ' → logprob: -11.627378463745117

Token 725: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. 'i' → logprob: -9.37510871887207
    3. '+' → logprob: -11.62510871887207
    4. '```' → logprob: -11.75010871887207
    5. '[i' → logprob: -13.37510871887207
    6. ' ' → logprob: -13.50010871887207
    7. '   ' → logprob: -13.50010871887207
    8. '(i' → logprob: -14.12510871887207
    9. '
' → logprob: -15.00010871887207
    10. ']' → logprob: -15.00010871887207

Token 726: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4652596712112427
    2. ']
' → logprob: -1.2152596712112427
    3. ']+' → logprob: -2.590259552001953
    4. ']
' → logprob: -7.965259552001953
    5. '           ' → logprob: -11.465259552001953
    6. '+' → logprob: -11.715259552001953
    7. '       ' → logprob: -12.090259552001953
    8. ']:
' → logprob: -12.340259552001953
    9. ']+=' → logprob: -12.340259552001953
    10. ']

' → logprob: -12.965259552001953

Token 727: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3836154341697693
    2. '           ' → logprob: -1.508615493774414
    3. '
' → logprob: -3.508615493774414
    4. 'for' → logprob: -3.508615493774414
    5. ' for' → logprob: -3.883615493774414
    6. '        
' → logprob: -5.758615493774414
    7. '```' → logprob: -6.008615493774414
    8. '   ' → logprob: -6.133615493774414
    9. '            
' → logprob: -6.633615493774414
    10. '<|end|>' → logprob: -6.758615493774414

Token 728: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09097225964069366
    2. ' for' → logprob: -2.5909721851348877
    3. '           ' → logprob: -4.465972423553467
    4. 'prefix' → logprob: -9.090971946716309
    5. '```' → logprob: -9.340971946716309
    6. 'sum' → logprob: -9.340971946716309
    7. 'if' → logprob: -9.715971946716309
    8. 'j' → logprob: -10.090971946716309
    9. 'prev' → logprob: -10.590971946716309
    10. '   ' → logprob: -11.090971946716309

Token 729: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03351590782403946
    2. 'prefix' → logprob: -3.9085159301757812
    3. ' for' → logprob: -5.033515930175781
    4. 's' → logprob: -6.408515930175781
    5. 'prev' → logprob: -6.658515930175781
    6. 'sum' → logprob: -7.158515930175781
    7. 'dp' → logprob: -7.908515930175781
    8. '       ' → logprob: -8.033515930175781
    9. 'c' → logprob: -8.283515930175781
    10. 'pref' → logprob: -8.408515930175781

Token 730: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1948860883712769
    2. 'h' → logprob: -1.5698860883712769
    3. ' j' → logprob: -1.8198860883712769
    4. 'dp' → logprob: -2.1948862075805664
    5. ' h' → logprob: -2.3198862075805664
    6. 'id' → logprob: -3.1948862075805664
    7. ' id' → logprob: -3.4448862075805664
    8. ' dp' → logprob: -3.9448862075805664
    9. 'i' → logprob: -4.569886207580566
    10. ' i' → logprob: -5.194886207580566

Token 731: ' hauteur' (ID: 72987)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6996220946311951
    2. 'j' → logprob: -1.5746221542358398
    3. 'id' → logprob: -2.44962215423584
    4. 'h' → logprob: -2.82462215423584
    5. 'i' → logprob: -2.94962215423584
    6. 'for' → logprob: -3.32462215423584
    7. ' j' → logprob: -3.94962215423584
    8. ' dp' → logprob: -4.82462215423584
    9. ' id' → logprob: -5.07462215423584
    10. 'max' → logprob: -5.44962215423584

Token 732: ' suivante' (ID: 107439)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.161595106124878
    2. 'id' → logprob: -2.036595106124878
    3. '[id' → logprob: -2.036595106124878
    4. 's' → logprob: -2.286595106124878
    5. '[j' → logprob: -2.661595106124878
    6. 'diff' → logprob: -3.161595106124878
    7. '<=' → logprob: -3.286595106124878
    8. 'est' → logprob: -3.536595106124878
    9. 'for' → logprob: -3.911595106124878
    10. 'i' → logprob: -4.411595344543457

Token 733: ' est' (ID: 893)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.47717559337615967
    2. ' <=' → logprob: -1.4771755933761597
    3. '>=' → logprob: -2.977175712585449
    4. '[j' → logprob: -3.352175712585449
    5. ' >=' → logprob: -3.852175712585449
    6. '==' → logprob: -4.102175712585449
    7. '[i' → logprob: -4.977175712585449
    8. ']' → logprob: -5.227175712585449
    9. ' ==' → logprob: -5.352175712585449
    10. '>' → logprob: -6.352175712585449

Token 734: ' supérieure' (ID: 106336)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7670798301696777
    2. 'id' → logprob: -1.2670798301696777
    3. 'h' → logprob: -2.5170798301696777
    4. '<=' → logprob: -2.5170798301696777
    5. 'j' → logprob: -4.267079830169678
    6. ' id' → logprob: -4.642079830169678
    7. '>' → logprob: -4.767079830169678
    8. '```' → logprob: -5.017079830169678
    9. ' ' → logprob: -5.142079830169678
    10. '   ' → logprob: -5.267079830169678

Token 735: ' ou' (ID: 2031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5060710906982422
    2. ' or' → logprob: -1.6310710906982422
    3. '           ' → logprob: -2.131071090698242
    4. ',' → logprob: -3.506071090698242
    5. ' ou' → logprob: -3.506071090698242
    6. ':
' → logprob: -5.131071090698242
    7. '               ' → logprob: -5.381071090698242
    8. 'or' → logprob: -5.506071090698242
    9. 'ou' → logprob: -6.756071090698242
    10. ' :' → logprob: -6.881071090698242

Token 736: ' ég' (ID: 33150)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.031100334599614143
    2. 'égal' → logprob: -4.156100273132324
    3. 'eg' → logprob: -4.656100273132324
    4. ' ég' → logprob: -5.281100273132324
    5. 'é' → logprob: -9.406100273132324
    6. 'égalité' → logprob: -9.781100273132324
    7. '```' → logprob: -9.906100273132324
    8. '=' → logprob: -10.156100273132324
    9. 'à' → logprob: -10.281100273132324
    10. 'ug' → logprob: -10.281100273132324

Token 737: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0002072357019642368
    2. 'alee' → logprob: -9.25020694732666
    3. 'al' → logprob: -10.12520694732666
    4. '{' → logprob: -11.37520694732666
    5. '```' → logprob: -11.75020694732666
    6. 'a' → logprob: -11.75020694732666
    7. 'але' → logprob: -12.00020694732666
    8. ']' → logprob: -12.25020694732666
    9. '</' → logprob: -12.50020694732666
    10. '"' → logprob: -13.00020694732666

Token 738: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0902920961380005
    2. ':' → logprob: -1.2152920961380005
    3. '           ' → logprob: -1.4652920961380005
    4. ',' → logprob: -2.215291976928711
    5. '               ' → logprob: -4.715291976928711
    6. '       ' → logprob: -5.715291976928711
    7. 'for' → logprob: -6.215291976928711
    8. ' for' → logprob: -6.465291976928711
    9. ',
' → logprob: -6.715291976928711
    10. '   ' → logprob: -6.715291976928711

Token 739: ' multiplier' (ID: 61814)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20566324889659882
    2. ' for' → logprob: -1.7056632041931152
    3. '           ' → logprob: -5.705663204193115
    4. '   ' → logprob: -7.705663204193115
    5. '               ' → logprob: -8.705663681030273
    6. '       ' → logprob: -8.955663681030273
    7. '	for' → logprob: -9.705663681030273
    8. '
' → logprob: -10.080663681030273
    9. '```' → logprob: -11.080663681030273
    10. ' ' → logprob: -11.330663681030273

Token 740: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5265895128250122
    2. 'dp' → logprob: -1.6515895128250122
    3. ' for' → logprob: -2.0265893936157227
    4. ' par' → logprob: -4.026589393615723
    5. ' dp' → logprob: -4.026589393615723
    6. '   ' → logprob: -4.276589393615723
    7. ' j' → logprob: -5.276589393615723
    8. 'par' → logprob: -5.276589393615723
    9. '(dp' → logprob: -5.401589393615723
    10. 'j' → logprob: -5.401589393615723

Token 741: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3179345428943634
    2. 'dp' → logprob: -1.817934513092041
    3. 'pow' → logprob: -2.442934513092041
    4. '(' → logprob: -5.317934513092041
    5. ' dp' → logprob: -5.442934513092041
    6. ' ' → logprob: -5.442934513092041
    7. 'for' → logprob: -5.942934513092041
    8. 'j' → logprob: -6.567934513092041
    9. '(dp' → logprob: -6.692934513092041
    10. ' pow' → logprob: -6.942934513092041

Token 742: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01283523254096508
    2. 'dp' → logprob: -5.1378350257873535
    3. 'pow' → logprob: -5.2628350257873535
    4. '(' → logprob: -7.6378350257873535
    5. '3' → logprob: -8.012835502624512
    6. ' ' → logprob: -8.137835502624512
    7. 'for' → logprob: -9.012835502624512
    8. '4' → logprob: -9.512835502624512
    9. '(dp' → logprob: -9.637835502624512
    10. '   ' → logprob: -9.762835502624512

Token 743: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26617369055747986
    2. ' for' → logprob: -2.0161736011505127
    3. 'for' → logprob: -2.5161736011505127
    4. ' and' → logprob: -5.016173839569092
    5. '       ' → logprob: -5.766173839569092
    6. ',' → logprob: -5.891173839569092
    7. '               ' → logprob: -6.266173839569092
    8. '
' → logprob: -6.516173839569092
    9. '   ' → logprob: -7.016173839569092
    10. '<|end|>' → logprob: -7.516173839569092

Token 744: ' les' (ID: 1341)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.12907564640045166
    2. 'j' → logprob: -2.129075527191162
    3. 'for' → logprob: -7.004075527191162
    4. ' for' → logprob: -7.504075527191162
    5. '```' → logprob: -8.62907600402832
    6. ' ' → logprob: -8.75407600402832
    7. '   ' → logprob: -9.25407600402832
    8. ')' → logprob: -10.25407600402832
    9. ' ' → logprob: -10.62907600402832
    10. '    ' → logprob: -10.87907600402832

Token 745: ' nouvelles' (ID: 37997)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.038875937461853
    2. 'j' → logprob: -1.288875937461853
    3. 'for' → logprob: -1.663875937461853
    4. 'range' → logprob: -2.2888760566711426
    5. ' range' → logprob: -3.2888760566711426
    6. ' for' → logprob: -3.6638760566711426
    7. 'tokens' → logprob: -6.288876056671143
    8. 'i' → logprob: -6.663876056671143
    9. 'dp' → logprob: -6.913876056671143
    10. 'pl' → logprob: -6.913876056671143

Token 746: ' options' (ID: 3880)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3035827875137329
    2. 'fa' → logprob: -1.928582787513733
    3. '   ' → logprob: -3.4285826683044434
    4. 'man' → logprob: -3.5535826683044434
    5. 'pl' → logprob: -4.178582668304443
    6. 'ways' → logprob: -4.553582668304443
    7. ' for' → logprob: -4.678582668304443
    8. '       ' → logprob: -5.053582668304443
    9. ' façons' → logprob: -5.178582668304443
    10. '```' → logprob: -6.928582668304443

Token 747: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5104848742485046
    2. '       ' → logprob: -2.5104849338531494
    3. '
' → logprob: -2.8854849338531494
    4. 'for' → logprob: -3.1354849338531494
    5. '<|end|>' → logprob: -3.2604849338531494
    6. ' for' → logprob: -3.5104849338531494
    7. '   ' → logprob: -3.6354849338531494
    8. '\n' → logprob: -3.7604849338531494
    9. ' 
' → logprob: -3.8854849338531494
    10. ',' → logprob: -4.13548469543457

Token 748: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1395719200372696
    2. '       ' → logprob: -3.3895719051361084
    3. ' for' → logprob: -3.3895719051361084
    4. 'for' → logprob: -3.5145719051361084
    5. '[' → logprob: -5.0145721435546875
    6. '               ' → logprob: -5.2645721435546875
    7. '   ' → logprob: -5.3895721435546875
    8. '<|end|>' → logprob: -5.6395721435546875
    9. '```' → logprob: -6.2645721435546875
    10. ')' → logprob: -6.2645721435546875

Token 749: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23703636229038239
    2. ' for' → logprob: -1.6120363473892212
    3. '           ' → logprob: -4.737036228179932
    4. '   ' → logprob: -6.862036228179932
    5. 'prefix' → logprob: -6.987036228179932
    6. '       ' → logprob: -8.73703670501709
    7. 'j' → logprob: -8.73703670501709
    8. ' prefix' → logprob: -8.98703670501709
    9. ' j' → logprob: -9.23703670501709
    10. 'sum' → logprob: -9.86203670501709

Token 750: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014182780869305134
    2. ' j' → logprob: -4.2641825675964355
    3. '   ' → logprob: -11.389183044433594
    4. '```' → logprob: -13.264183044433594
    5. ' ' → logprob: -13.639183044433594
    6. 'k' → logprob: -13.764183044433594
    7. '	j' → logprob: -13.889183044433594
    8. 'i' → logprob: -14.139183044433594
    9. '    ' → logprob: -14.889183044433594
    10. '       ' → logprob: -15.201683044433594

Token 751: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2812598645687103
    2. 'in' → logprob: -1.4062598943710327
    3. '[' → logprob: -11.156259536743164
    4. 'n' → logprob: -11.281259536743164
    5. 'range' → logprob: -11.281259536743164
    6. ')' → logprob: -11.406259536743164
    7. '```' → logprob: -11.656259536743164
    8. '   ' → logprob: -12.031259536743164
    9. 'dans' → logprob: -12.156259536743164
    10. '_in' → logprob: -12.406259536743164

Token 752: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008082019630819559
    2. ' range' → logprob: -7.125808238983154
    3. '(range' → logprob: -13.375807762145996
    4. '   ' → logprob: -13.625807762145996
    5. 'id' → logprob: -14.750807762145996
    6. ' ' → logprob: -15.250807762145996
    7. '  ' → logprob: -16.875808715820312
    8. 'in' → logprob: -17.250808715820312
    9. '    ' → logprob: -17.500808715820312
    10. '	range' → logprob: -17.625808715820312

Token 753: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.0005831766175106168
    2. '(' → logprob: -8.25058364868164
    3. 'id' → logprob: -8.50058364868164
    4. '(len' → logprob: -9.37558364868164
    5. '0' → logprob: -11.12558364868164
    6. '(comp' → logprob: -12.00058364868164
    7. ' (' → logprob: -12.87558364868164
    8. '(i' → logprob: -13.12558364868164
    9. '   ' → logprob: -13.25058364868164
    10. '[id' → logprob: -13.87558364868164

Token 754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009841199032962322
    2. ',id' → logprob: -5.259840965270996
    3. ',j' → logprob: -6.134840965270996
    4. ' ,' → logprob: -6.884840965270996
    5. '+' → logprob: -7.759840965270996
    6. ',len' → logprob: -7.884840965270996
    7. '[id' → logprob: -8.759840965270996
    8. '(id' → logprob: -9.134840965270996
    9. '[' → logprob: -9.759840965270996
    10. ',
' → logprob: -10.134840965270996

Token 755: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0031808018684387207
    2. ' id' → logprob: -5.753180980682373
    3. '(id' → logprob: -13.503180503845215
    4. 'len' → logprob: -13.753180503845215
    5. 'j' → logprob: -15.253180503845215
    6. '   ' → logprob: -16.12818145751953
    7. '	id' → logprob: -16.25318145751953
    8. '{id' → logprob: -17.00318145751953
    9. '[id' → logprob: -17.87818145751953
    10. ',id' → logprob: -18.37818145751953

Token 756: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1777031570672989
    2. '+' → logprob: -2.1777031421661377
    3. 'id' → logprob: -3.3027031421661377
    4. ',' → logprob: -5.927703380584717
    5. '[id' → logprob: -6.177703380584717
    6. '   ' → logprob: -6.677703380584717
    7. '[' → logprob: -6.802703380584717
    8. '```' → logprob: -7.177703380584717
    9. 'i' → logprob: -7.302703380584717
    10. '
' → logprob: -7.552703380584717

Token 757: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005095454398542643
    2. ' +' → logprob: -7.625509738922119
    3. '[j' → logprob: -11.250509262084961
    4. '+j' → logprob: -13.000509262084961
    5. ',' → logprob: -13.625509262084961
    6. '[' → logprob: -13.750509262084961
    7. '()+' → logprob: -14.250509262084961
    8. '+
' → logprob: -14.375509262084961
    9. ')+' → logprob: -14.500509262084961
    10. '):
' → logprob: -15.000509262084961

Token 758: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005412388709373772
    2. '+' → logprob: -8.000541687011719
    3. '2' → logprob: -8.500541687011719
    4. ' ' → logprob: -14.500541687011719
    5. 'j' → logprob: -14.750541687011719
    6. '```' → logprob: -14.750541687011719
    7. ' +' → logprob: -16.25054168701172
    8. '0' → logprob: -16.43804168701172
    9. '(' → logprob: -16.50054168701172
    10. 'len' → logprob: -16.56304168701172

Token 759: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2748571038246155
    2. '):' → logprob: -1.5248570442199707
    3. ':' → logprob: -3.8998570442199707
    4. ':
' → logprob: -6.399857044219971
    5. ')' → logprob: -8.524857521057129
    6. '           ' → logprob: -8.774857521057129
    7. '):
' → logprob: -8.899857521057129
    8. '               ' → logprob: -9.774857521057129
    9. ']:
' → logprob: -10.274857521057129
    10. '       ' → logprob: -10.399857521057129

Token 760: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23645751178264618
    2. '           ' → logprob: -1.9864574670791626
    3. ' dp' → logprob: -2.736457586288452
    4. ' ' → logprob: -6.111457347869873
    5. '<|end|>' → logprob: -6.861457347869873
    6. ' 
' → logprob: -6.986457347869873
    7. '```' → logprob: -7.486457347869873
    8. ' ' → logprob: -7.486457347869873
    9. 'dp' → logprob: -7.736457347869873
    10. '       ' → logprob: -7.736457347869873

Token 761: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.026470521464943886
    2. 'dp' (adapté à ' dp') → logprob: -3.651470422744751
    3. '               ' → logprob: -9.651470184326172
    4. '	dp' → logprob: -10.526470184326172
    5. '(dp' → logprob: -10.901470184326172
    6. '                   ' → logprob: -11.026470184326172
    7. ' ' → logprob: -11.151470184326172
    8. '           ' → logprob: -12.026470184326172
    9. '_dp' → logprob: -12.026470184326172
    10. '2' → logprob: -12.151470184326172

Token 762: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.729906196298543e-06
    2. '[' → logprob: -12.250009536743164
    3. '[j' → logprob: -13.000009536743164
    4. '][' → logprob: -14.375009536743164
    5. 'i' → logprob: -14.625009536743164
    6. '```' → logprob: -14.625009536743164
    7. '[u' → logprob: -15.125009536743164
    8. '[n' → logprob: -15.625009536743164
    9. ')[' → logprob: -16.000009536743164
    10. '[I' → logprob: -16.250009536743164

Token 763: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05806276947259903
    2. '[i' → logprob: -3.308062791824341
    3. '[j' → logprob: -3.933062791824341
    4. ')[' → logprob: -9.558062553405762
    5. '[' → logprob: -9.683062553405762
    6. ']' → logprob: -10.183062553405762
    7. ' ][' → logprob: -11.433062553405762
    8. '```' → logprob: -11.558062553405762
    9. '[][' → logprob: -11.808062553405762
    10. ']][' → logprob: -12.308062553405762

Token 764: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00018268341955263168
    2. '[j' → logprob: -8.62518310546875
    3. '(j' → logprob: -13.50018310546875
    4. ' j' → logprob: -13.62518310546875
    5. '	j' → logprob: -15.87518310546875
    6. '```' → logprob: -16.12518310546875
    7. '$j' → logprob: -16.62518310546875
    8. '   ' → logprob: -16.75018310546875
    9. '_j' → logprob: -16.75018310546875
    10. ',j' → logprob: -16.87518310546875

Token 765: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025687016546726227
    2. ']=' → logprob: -3.7756869792938232
    3. '=' → logprob: -6.400687217712402
    4. ']+=' → logprob: -7.275687217712402
    5. '           ' → logprob: -10.775687217712402
    6. '   ' → logprob: -11.150687217712402
    7. ']*' → logprob: -11.525687217712402
    8. '       ' → logprob: -11.775687217712402
    9. ' ]' → logprob: -11.775687217712402
    10. ' =' → logprob: -12.275687217712402

Token 766: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004746368620544672
    2. ' =' → logprob: -5.379746437072754
    3. '*=' → logprob: -9.004746437072754
    4. '+=' → logprob: -13.629746437072754
    5. ' *=' → logprob: -14.004746437072754
    6. '=j' → logprob: -15.379746437072754
    7. ' ' → logprob: -16.004745483398438
    8. ')' → logprob: -16.004745483398438
    9. ']=' → logprob: -16.129745483398438
    10. ' <<=' → logprob: -16.129745483398438

Token 767: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.19512341916561127
    2. '(' → logprob: -1.8201234340667725
    3. 'dp' → logprob: -4.445123195648193
    4. '2' → logprob: -5.695123195648193
    5. '(sum' → logprob: -10.070123672485352
    6. ' (' → logprob: -10.070123672485352
    7. 'sum' → logprob: -10.445123672485352
    8. '((' → logprob: -11.320123672485352
    9. '(pow' → logprob: -11.570123672485352
    10. ' dp' → logprob: -12.445123672485352

Token 768: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06540059298276901
    2. '(dp' → logprob: -3.1904006004333496
    3. '2' → logprob: -4.06540060043335
    4. '(' → logprob: -5.31540060043335
    5. ' dp' → logprob: -9.690400123596191
    6. ' (' → logprob: -12.440400123596191
    7. '_dp' → logprob: -13.190400123596191
    8. '	dp' → logprob: -13.190400123596191
    9. '1' → logprob: -13.565400123596191
    10. '   ' → logprob: -13.565400123596191

Token 769: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07889848947525024
    2. '*' → logprob: -2.5788984298706055
    3. ')' → logprob: -12.203898429870605
    4. ' *
' → logprob: -13.953898429870605
    5. '   ' → logprob: -14.328898429870605
    6. ' ' → logprob: -14.578898429870605
    7. ' ' → logprob: -15.203898429870605
    8. '**' → logprob: -15.203898429870605
    9. 'dp' → logprob: -15.328898429870605
    10. ' dp' → logprob: -15.453898429870605

Token 770: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001783475512638688
    2. '(dp' → logprob: -6.37678337097168
    3. 'sum' → logprob: -9.87678337097168
    4. ' dp' → logprob: -10.75178337097168
    5. '(' → logprob: -12.37678337097168
    6. ' (' → logprob: -13.62678337097168
    7. '(sum' → logprob: -13.75178337097168
    8. '(
' → logprob: -14.62678337097168
    9. 'pow' → logprob: -15.12678337097168
    10. '((' → logprob: -15.25178337097168

Token 771: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0046326881274580956
    2. 'i' → logprob: -5.379632472991943
    3. '```' → logprob: -12.629632949829102
    4. '(i' → logprob: -13.379632949829102
    5. '
' → logprob: -13.629632949829102
    6. '[' → logprob: -13.754632949829102
    7. '   ' → logprob: -14.129632949829102
    8. '{i' → logprob: -14.379632949829102
    9. 'previous' → logprob: -14.629632949829102
    10. '[
' → logprob: -14.879632949829102

Token 772: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017076305812224746
    2. '-' → logprob: -9.125170707702637
    3. 'i' → logprob: -10.375170707702637
    4. '][' → logprob: -10.625170707702637
    5. '[' → logprob: -12.750170707702637
    6. '(i' → logprob: -14.000170707702637
    7. '```' → logprob: -14.250170707702637
    8. '[j' → logprob: -14.500170707702637
    9. ')[' → logprob: -15.125170707702637
    10. '
' → logprob: -15.750170707702637

Token 773: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007785348570905626
    2. '[i' → logprob: -7.750778675079346
    3. '][' → logprob: -8.750778198242188
    4. 'j' → logprob: -9.125778198242188
    5. '1' → logprob: -9.625778198242188
    6. ' i' → logprob: -12.625778198242188
    7. '[' → logprob: -13.000778198242188
    8. ']' → logprob: -13.250778198242188
    9. '   ' → logprob: -13.625778198242188
    10. '(i' → logprob: -14.000778198242188

Token 774: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.034200314432382584
    2. '][' → logprob: -3.409200429916382
    3. ')[' → logprob: -8.284200668334961
    4. '[' → logprob: -9.159200668334961
    5. '[j' → logprob: -9.409200668334961
    6. 'i' → logprob: -9.909200668334961
    7. '```' → logprob: -11.284200668334961
    8. '}[' → logprob: -11.909200668334961
    9. '   ' → logprob: -12.159200668334961
    10. ')' → logprob: -12.284200668334961

Token 775: 'id' (ID: 315)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00025800178991630673
    2. 'i' → logprob: -8.875258445739746
    3. '[j' → logprob: -9.625258445739746
    4. 'id' → logprob: -10.250258445739746
    5. ' j' → logprob: -12.625258445739746
    6. '   ' → logprob: -12.750258445739746
    7. '```' → logprob: -13.125258445739746
    8. ']' → logprob: -13.375258445739746
    9. '[' → logprob: -13.875258445739746
    10. '][' → logprob: -14.125258445739746

Token 776: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.17539097368717194
    2. ']' → logprob: -1.9253909587860107
    3. ']+' → logprob: -5.67539119720459
    4. '-' → logprob: -5.80039119720459
    5. '[j' → logprob: -5.92539119720459
    6. 'j' → logprob: -6.17539119720459
    7. '2' → logprob: -6.17539119720459
    8. '```' → logprob: -7.42539119720459
    9. '+j' → logprob: -8.42539119720459
    10. ' -' → logprob: -9.05039119720459

Token 777: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.00355968507938087
    2. ' %' → logprob: -5.753559589385986
    3. ')' → logprob: -8.503560066223145
    4. ')%' → logprob: -8.878560066223145
    5. '[j' → logprob: -11.128560066223145
    6. '<|end|>' → logprob: -12.253560066223145
    7. '%=' → logprob: -12.503560066223145
    8. '
' → logprob: -12.753560066223145
    9. '%n' → logprob: -12.753560066223145
    10. '%i' → logprob: -13.128560066223145

Token 778: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -5.836499985889532e-05
    2. ' mod' → logprob: -9.7500581741333
    3. '(mod' → logprob: -17.875059127807617
    4. '```' → logprob: -19.375059127807617
    5. '	mod' → logprob: -20.125059127807617
    6. '
' → logprob: -21.625059127807617
    7. '_mod' → logprob: -22.125059127807617
    8. '`' → logprob: -22.375059127807617
    9. '10' → logprob: -22.375059127807617
    10. ' ' → logprob: -22.500059127807617

Token 779: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 780: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 781: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44407349824905396
    2. ' for' → logprob: -1.0690734386444092
    3. '       ' → logprob: -4.444073677062988
    4. '<|end|>' → logprob: -6.944073677062988
    5. 'else' → logprob: -7.194073677062988
    6. '	for' → logprob: -7.569073677062988
    7. ' else' → logprob: -7.694073677062988
    8. '```' → logprob: -8.944073677062988
    9. '           ' → logprob: -9.069073677062988
    10. ' ' → logprob: -9.069073677062988

Token 782: ' Les' (ID: 7029)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004785276483744383
    2. ' for' → logprob: -5.379785060882568
    3. '           ' → logprob: -9.129785537719727
    4. '       ' → logprob: -10.629785537719727
    5. '```' → logprob: -11.254785537719727
    6. '	for' → logprob: -12.004785537719727
    7. '   ' → logprob: -12.129785537719727
    8. ' ' → logprob: -12.879785537719727
    9. 'continue' → logprob: -13.754785537719727
    10. '
' → logprob: -13.879785537719727

Token 783: ' autres' (ID: 18701)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08937200903892517
    2. 'j' → logprob: -2.589371919631958
    3. ' for' → logprob: -4.964372158050537
    4. ' j' → logprob: -6.214372158050537
    5. 'pour' → logprob: -7.214372158050537
    6. 'i' → logprob: -8.714371681213379
    7. '[j' → logprob: -9.339371681213379
    8. '```' → logprob: -9.464371681213379
    9. ')' → logprob: -9.964371681213379
    10. '[' → logprob: -10.214371681213379

Token 784: ' indices' (ID: 30378)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005856147035956383
    2. ' for' → logprob: -5.505856037139893
    3. '```' → logprob: -6.380856037139893
    4. 'tokens' → logprob: -10.50585651397705
    5. 'elif' → logprob: -11.50585651397705
    6. 'ranges' → logprob: -11.63085651397705
    7. 'j' → logprob: -11.75585651397705
    8. 'indices' → logprob: -12.38085651397705
    9. '...' → logprob: -12.88085651397705
    10. 'range' → logprob: -12.88085651397705

Token 785: ' con' (ID: 406)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22637896239757538
    2. '[j' → logprob: -2.101378917694092
    3. ' for' → logprob: -3.476378917694092
    4. '[' → logprob: -3.976378917694092
    5. '```' → logprob: -4.101378917694092
    6. ',' → logprob: -6.101378917694092
    7. ')' → logprob: -6.351378917694092
    8. 'pour' → logprob: -6.601378917694092
    9. '...' → logprob: -6.851378917694092
    10. 's' → logprob: -7.226378917694092

Token 786: 'ser' (ID: 599)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0340876467525959
    2. 'for' → logprob: -4.409087657928467
    3. '```' → logprob: -4.784087657928467
    4. 'tin' → logprob: -5.034087657928467
    5. '[' → logprob: -5.909087657928467
    6. 's' → logprob: -7.159087657928467
    7. 'st' → logprob: -7.409087657928467
    8. 'strained' → logprob: -7.784087657928467
    9. '[t' → logprob: -7.784087657928467
    10. '[j' → logprob: -7.909087657928467

Token 787: 'vent' (ID: 818)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05154906585812569
    2. 'tent' → logprob: -4.051548957824707
    3. 'erved' → logprob: -4.801548957824707
    4. 'erv' → logprob: -5.301548957824707
    5. 'serv' → logprob: -5.301548957824707
    6. 'trent' → logprob: -6.176548957824707
    7. 'èrent' → logprob: -6.176548957824707
    8. 'ent' → logprob: -6.301548957824707
    9. '[t' → logprob: -6.926548957824707
    10. 'v' → logprob: -6.926548957824707

Token 788: ' leurs' (ID: 16348)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11750242859125137
    2. '(dp' → logprob: -2.992502450942993
    3. ' dp' → logprob: -2.992502450942993
    4. '(' → logprob: -4.867502212524414
    5. ' (' → logprob: -6.617502212524414
    6. '0' → logprob: -7.867502212524414
    7. '1' → logprob: -8.117502212524414
    8. '   ' → logprob: -8.367502212524414
    9. '(j' → logprob: -8.992502212524414
    10. '```' → logprob: -9.242502212524414

Token 789: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6345805525779724
    2. 'dp' → logprob: -1.0095806121826172
    3. ' dp' → logprob: -3.259580612182617
    4. 'values' → logprob: -3.509580612182617
    5. '```' → logprob: -4.134580612182617
    6. ' val' → logprob: -4.884580612182617
    7. ' valeurs' → logprob: -5.259580612182617
    8. 'vals' → logprob: -6.259580612182617
    9. 'copies' → logprob: -6.884580612182617
    10. '(dp' → logprob: -7.134580612182617

Token 790: ' précéd' (ID: 55435)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6592329740524292
    2. '<|end|>' → logprob: -1.2842329740524292
    3. '       ' → logprob: -2.7842330932617188
    4. '.' → logprob: -3.4092330932617188
    5. '           ' → logprob: -4.034233093261719
    6. '   ' → logprob: -4.534233093261719
    7. '    
' → logprob: -4.534233093261719
    8. '
' → logprob: -4.784233093261719
    9. '        
' → logprob: -4.909233093261719
    10. ' for' → logprob: -5.034233093261719

Token 791: 'entes' (ID: 5651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7346799373626709
    2. 'entes' → logprob: -1.234679937362671
    3. '```' → logprob: -3.109679937362671
    4. 'ents' → logprob: -3.609679937362671
    5. 'é' → logprob: -4.10968017578125
    6. 'ent' → logprob: -4.10968017578125
    7. 'es' → logprob: -4.23468017578125
    8. 'ées' → logprob: -4.23468017578125
    9. '[' → logprob: -4.23468017578125
    10. 'és' → logprob: -4.60968017578125

Token 792: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4462637901306152
    2. '<|end|>' → logprob: -1.5712637901306152
    3. '       ' → logprob: -1.8212637901306152
    4. '```' → logprob: -2.1962637901306152
    5. 'for' → logprob: -2.6962637901306152
    6. ' for' → logprob: -2.9462637901306152
    7. '   ' → logprob: -3.3212637901306152
    8. '  
' → logprob: -3.3212637901306152
    9. '    
' → logprob: -3.5712637901306152
    10. '\n' → logprob: -3.6962637901306152

Token 793: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.950766384601593
    2. '```' → logprob: -1.5757663249969482
    3. '<|end|>' → logprob: -1.7007663249969482
    4. ' for' → logprob: -2.0757663249969482
    5. ' 
' → logprob: -4.075766563415527
    6. '   ' → logprob: -4.325766563415527
    7. 'for' → logprob: -4.325766563415527
    8. '           ' → logprob: -4.700766563415527
    9. '\n' → logprob: -4.950766563415527
    10. ' else' → logprob: -5.325766563415527

Token 794: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.576560378074646
    2. ' for' → logprob: -0.826560378074646
    3. '```' → logprob: -7.4515604972839355
    4. '       ' → logprob: -11.201560020446777
    5. 'else' → logprob: -11.701560020446777
    6. 'elif' → logprob: -12.326560020446777
    7. '           ' → logprob: -12.451560020446777
    8. '   ' → logprob: -12.576560020446777
    9. ' else' → logprob: -13.326560020446777
    10. '	for' → logprob: -14.076560020446777

Token 795: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01603788509964943
    2. ' j' → logprob: -4.141037940979004
    3. '   ' → logprob: -14.016037940979004
    4. '_j' → logprob: -14.266037940979004
    5. 'k' → logprob: -14.391037940979004
    6. '```' → logprob: -14.391037940979004
    7. '	j' → logprob: -14.641037940979004
    8. ' ' → logprob: -15.766037940979004
    9. '[j' → logprob: -16.766036987304688
    10. ' ' → logprob: -16.891036987304688

Token 796: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.17981363832950592
    2. ' in' → logprob: -1.8048136234283447
    3. '(' → logprob: -11.304813385009766
    4. ')' → logprob: -11.679813385009766
    5. '   ' → logprob: -11.929813385009766
    6. 'n' → logprob: -12.304813385009766
    7. 'range' → logprob: -12.554813385009766
    8. '0' → logprob: -12.679813385009766
    9. 'from' → logprob: -12.679813385009766
    10. 'In' → logprob: -12.929813385009766

Token 797: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01605008915066719
    2. ' range' → logprob: -4.141049861907959
    3. '(range' → logprob: -11.391050338745117
    4. '(' → logprob: -13.641050338745117
    5. '0' → logprob: -13.766050338745117
    6. 'in' → logprob: -14.391050338745117
    7. ' in' → logprob: -14.641050338745117
    8. ' ' → logprob: -15.266050338745117
    9. '
' → logprob: -15.766050338745117
    10. '	range' → logprob: -15.766050338745117

Token 798: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2520610988140106
    2. '(id' → logprob: -1.502061128616333
    3. '(len' → logprob: -9.877060890197754
    4. '(j' → logprob: -10.502060890197754
    5. '(range' → logprob: -11.252060890197754
    6. '(i' → logprob: -11.252060890197754
    7. '0' → logprob: -11.877060890197754
    8. '(idx' → logprob: -12.627060890197754
    9. 'id' → logprob: -12.752060890197754
    10. 'range' → logprob: -13.127060890197754

Token 799: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04344945400953293
    2. 'id' → logprob: -3.1684494018554688
    3. 'range' → logprob: -7.918449401855469
    4. ' ' → logprob: -10.418449401855469
    5. ' id' → logprob: -11.168449401855469
    6. '(' → logprob: -11.168449401855469
    7. '(id' → logprob: -11.668449401855469
    8. 'idx' → logprob: -12.543449401855469
    9. '2' → logprob: -12.793449401855469
    10. 'len' → logprob: -12.793449401855469

Token 800: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005384945310652256
    2. ',j' → logprob: -6.005384922027588
    3. ',id' → logprob: -6.130384922027588
    4. ' ,' → logprob: -7.630384922027588
    5. '(id' → logprob: -8.755385398864746
    6. '   ' → logprob: -11.130385398864746
    7. 'in' → logprob: -11.130385398864746
    8. '(j' → logprob: -11.505385398864746
    9. '(' → logprob: -11.630385398864746
    10. 'j' → logprob: -11.880385398864746

Token 801: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -2.7014437364414334e-05
    2. ' id' → logprob: -10.62502670288086
    3. '   ' → logprob: -14.25002670288086
    4. 'len' → logprob: -14.25002670288086
    5. 'comp' → logprob: -14.25002670288086
    6. 'N' → logprob: -15.37502670288086
    7. 'j' → logprob: -15.75002670288086
    8. 'idx' → logprob: -16.37502670288086
    9. 'dp' → logprob: -16.87502670288086
    10. 'a' → logprob: -16.87502670288086

Token 802: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.024521438404917717
    2. '):' → logprob: -3.7745213508605957
    3. '+' → logprob: -7.899521350860596
    4. ',' → logprob: -8.399521827697754
    5. '```' → logprob: -8.399521827697754
    6. '       ' → logprob: -9.024521827697754
    7. '[j' → logprob: -9.399521827697754
    8. ',j' → logprob: -9.774521827697754
    9. '   ' → logprob: -10.024521827697754
    10. ')' → logprob: -10.274521827697754

Token 803: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4983474314212799
    2. ' dp' → logprob: -1.6233474016189575
    3. 'dp' → logprob: -1.9983474016189575
    4. '               ' → logprob: -3.373347520828247
    5. '           ' → logprob: -4.498347282409668
    6. '(dp' → logprob: -4.748347282409668
    7. '``' → logprob: -5.873347282409668
    8. '	dp' → logprob: -6.498347282409668
    9. '_dp' → logprob: -8.373347282409668
    10. ':
' → logprob: -8.623347282409668

Token 804: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.023377783596515656
    2. ' dp' → logprob: -3.7733778953552246
    3. '               ' → logprob: -9.023377418518066
    4. '           ' → logprob: -12.148377418518066
    5. '	dp' → logprob: -12.773377418518066
    6. '```' → logprob: -13.023377418518066
    7. '(dp' → logprob: -13.898377418518066
    8. '_dp' → logprob: -14.898377418518066
    9. '   ' → logprob: -16.648378372192383
    10. '.dp' → logprob: -16.773378372192383

Token 805: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001438266917830333
    2. '```' → logprob: -9.375144004821777
    3. '][' → logprob: -10.250144004821777
    4. '[' → logprob: -11.375144004821777
    5. 'i' → logprob: -11.875144004821777
    6. ']' → logprob: -13.125144004821777
    7. '[j' → logprob: -13.750144004821777
    8. '   ' → logprob: -14.375144004821777
    9. ')[' → logprob: -15.250144004821777
    10. '``' → logprob: -15.375144004821777

Token 806: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006649764720350504
    2. '[j' → logprob: -5.131649971008301
    3. '[i' → logprob: -7.381649971008301
    4. ')[' → logprob: -10.0066499710083
    5. '```' → logprob: -10.8816499710083
    6. ']' → logprob: -11.5066499710083
    7. '[' → logprob: -12.2566499710083
    8. '   ' → logprob: -13.0066499710083
    9. ' ][' → logprob: -13.1316499710083
    10. ']][' → logprob: -13.3816499710083

Token 807: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003180094063282013
    2. 'i' → logprob: -5.878180027008057
    3. 'dp' → logprob: -8.878180503845215
    4. '(j' → logprob: -9.128180503845215
    5. '(i' → logprob: -9.628180503845215
    6. '[j' → logprob: -11.003180503845215
    7. '(' → logprob: -11.003180503845215
    8. '(dp' → logprob: -11.503180503845215
    9. '[i' → logprob: -11.878180503845215
    10. '```' → logprob: -12.628180503845215

Token 808: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023870747536420822
    2. ']=' → logprob: -3.7738707065582275
    3. '][' → logprob: -7.898870944976807
    4. '=' → logprob: -9.023870468139648
    5. '[i' → logprob: -10.148870468139648
    6. ')' → logprob: -10.523870468139648
    7. '[j' → logprob: -10.773870468139648
    8. ' ]' → logprob: -11.023870468139648
    9. '           ' → logprob: -11.898870468139648
    10. ']=(' → logprob: -12.398870468139648

Token 809: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00036382899270392954
    2. ' =' → logprob: -8.750364303588867
    3. '[' → logprob: -9.875364303588867
    4. '=
' → logprob: -10.250364303588867
    5. '[i' → logprob: -10.250364303588867
    6. ']=' → logprob: -10.250364303588867
    7. '+=' → logprob: -10.750364303588867
    8. '[j' → logprob: -11.625364303588867
    9. ']' → logprob: -12.125364303588867
    10. '           ' → logprob: -13.000364303588867

Token 810: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02019146829843521
    2. ' dp' → logprob: -4.270191669464111
    3. '(dp' → logprob: -5.645191669464111
    4. '(' → logprob: -6.395191669464111
    5. ' (' → logprob: -7.145191669464111
    6. '0' → logprob: -12.395191192626953
    7. '	dp' → logprob: -12.770191192626953
    8. '1' → logprob: -13.395191192626953
    9. '           ' → logprob: -13.520191192626953
    10. 'pow' → logprob: -13.520191192626953

Token 811: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002795703476294875
    2. 'i' → logprob: -8.250279426574707
    3. '```' → logprob: -11.250279426574707
    4. 'user' → logprob: -12.750279426574707
    5. '[user' → logprob: -13.750279426574707
    6. '[' → logprob: -14.500279426574707
    7. '(i' → logprob: -15.875279426574707
    8. '{i' → logprob: -16.000280380249023
    9. '``' → logprob: -16.000280380249023
    10. '   ' → logprob: -16.250280380249023

Token 812: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.7888184528565034e-05
    2. '[i' → logprob: -10.5000581741333
    3. ' -' → logprob: -11.1250581741333
    4. 'i' → logprob: -11.6250581741333
    5. '][' → logprob: -12.2500581741333
    6. '[' → logprob: -14.2500581741333
    7. '   ' → logprob: -14.7500581741333
    8. '```' → logprob: -14.8750581741333
    9. '−' → logprob: -15.8750581741333
    10. '(i' → logprob: -16.375057220458984

Token 813: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. 'i' → logprob: -13.375004768371582
    3. '```' → logprob: -14.062504768371582
    4. ' ' → logprob: -14.375004768371582
    5. '-' → logprob: -15.375004768371582
    6. '۱' → logprob: -15.437504768371582
    7. 'prev' → logprob: -15.750004768371582
    8. '0' → logprob: -16.1250057220459
    9. '   ' → logprob: -16.1250057220459
    10. '11' → logprob: -16.1875057220459

Token 814: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6371150612831116
    2. '[j' → logprob: -0.7621150612831116
    3. '[i' → logprob: -5.637115001678467
    4. '[' → logprob: -7.762115001678467
    5. '```' → logprob: -8.512115478515625
    6. ')[' → logprob: -9.137115478515625
    7. ' ][' → logprob: -10.012115478515625
    8. '   ' → logprob: -10.137115478515625
    9. ' [' → logprob: -10.262115478515625
    10. ']' → logprob: -10.762115478515625

Token 815: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.088346359931165e-07
    2. '[j' → logprob: -14.875000953674316
    3. '```' → logprob: -15.500000953674316
    4. ' j' → logprob: -15.625000953674316
    5. '   ' → logprob: -16.625
    6. '	j' → logprob: -17.5
    7. '_j' → logprob: -18.25
    8. '0' → logprob: -18.5
    9. '[' → logprob: -18.5
    10. ']' → logprob: -19.125

Token 816: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16846345365047455
    2. '%' → logprob: -2.6684634685516357
    3. ')' → logprob: -3.2934634685516357
    4. ']%' → logprob: -3.5434634685516357
    5. '<|end|>' → logprob: -4.543463230133057
    6. ')%' → logprob: -5.668463230133057
    7. '<|end|>' → logprob: -6.043463230133057
    8. '       ' → logprob: -6.918463230133057
    9. ' %' → logprob: -7.418463230133057
    10. '           ' → logprob: -7.918463230133057

Token 817: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 818: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3402799069881439
    2. ' else' → logprob: -2.2152798175811768
    3. 'for' → logprob: -2.8402798175811768
    4. '       ' → logprob: -3.2152798175811768
    5. ' for' → logprob: -3.2152798175811768
    6. '```' → logprob: -3.9652798175811768
    7. '   ' → logprob: -4.340280055999756
    8. '<|end|>' → logprob: -5.090280055999756
    9. 'elif' → logprob: -6.840280055999756
    10. '           ' → logprob: -8.090279579162598

Token 819: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16971571743488312
    2. ':
' → logprob: -1.9197157621383667
    3. '```' → logprob: -4.919715881347656
    4. '       ' → logprob: -6.294715881347656
    5. '[' → logprob: -9.044715881347656
    6. '{' → logprob: -10.294715881347656
    7. '           ' → logprob: -10.669715881347656
    8. '{
' → logprob: -10.919715881347656
    9. '):
' → logprob: -11.294715881347656
    10. '[
' → logprob: -11.419715881347656

Token 820: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0889996662735939
    2. '```' → logprob: -2.5889997482299805
    3. '           ' → logprob: -4.9639997482299805
    4. '   ' → logprob: -6.5889997482299805
    5. ' for' → logprob: -6.8389997482299805
    6. '``' → logprob: -8.58899974822998
    7. '        ' → logprob: -8.71399974822998
    8. '        
' → logprob: -9.83899974822998
    9. ' id' → logprob: -9.96399974822998
    10. 'for' → logprob: -9.96399974822998

Token 821: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.0007702016155235469
    2. 'i' → logprob: -8.625770568847656
    3. '       ' → logprob: -8.625770568847656
    4. '```' → logprob: -8.750770568847656
    5. 'for' → logprob: -9.250770568847656
    6. '           ' → logprob: -9.250770568847656
    7. ' id' → logprob: -10.125770568847656
    8. '   ' → logprob: -11.000770568847656
    9. 'j' → logprob: -14.500770568847656
    10. 'idx' → logprob: -14.750770568847656

Token 822: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587825149297714
    2. '=' → logprob: -3.0485877990722656
    3. '```' → logprob: -16.298587799072266
    4. '=int' → logprob: -16.548587799072266
    5. ',' → logprob: -16.798587799072266
    6. ')' → logprob: -16.798587799072266
    7. ' ' → logprob: -17.298587799072266
    8. '=
' → logprob: -17.423587799072266
    9. ' =
' → logprob: -17.548587799072266
    10. '＝' → logprob: -17.673587799072266

Token 823: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.06199076771736145
    2. ' comp' → logprob: -2.811990737915039
    3. 'com' → logprob: -11.186990737915039
    4. '	comp' → logprob: -11.811990737915039
    5. '(comp' → logprob: -14.061990737915039
    6. ' cop' → logprob: -15.061990737915039
    7. ' comps' → logprob: -15.936990737915039
    8. '.comp' → logprob: -15.936990737915039
    9. ' ' → logprob: -16.06199073791504
    10. '[' → logprob: -16.18699073791504

Token 824: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -1.318681188422488e-05
    2. 'h' → logprob: -11.25001335144043
    3. '(h' → logprob: -16.50001335144043
    4. '[' → logprob: -17.50001335144043
    5. '=h' → logprob: -18.50001335144043
    6. '<h' → logprob: -19.00001335144043
    7. '```' → logprob: -19.62501335144043
    8. '[int' → logprob: -19.75001335144043
    9. '[
' → logprob: -20.25001335144043
    10. ' h' → logprob: -20.50001335144043

Token 825: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.780830830801278e-05
    2. 'i' → logprob: -9.37508773803711
    3. '[h' → logprob: -13.25008773803711
    4. 'h' → logprob: -15.00008773803711
    5. '{i' → logprob: -15.12508773803711
    6. '```' → logprob: -15.50008773803711
    7. '(i' → logprob: -16.00008773803711
    8. '
' → logprob: -16.12508773803711
    9. '[' → logprob: -17.12508773803711
    10. '1' → logprob: -17.87508773803711

Token 826: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08912584185600281
    2. '[i' → logprob: -2.464125871658325
    3. '[' → logprob: -8.964125633239746
    4. 'i' → logprob: -11.339125633239746
    5. '   ' → logprob: -11.464125633239746
    6. '-' → logprob: -11.589125633239746
    7. '[h' → logprob: -11.964125633239746
    8. '[id' → logprob: -12.214125633239746
    9. '+i' → logprob: -13.089125633239746
    10. '[next' → logprob: -13.089125633239746

Token 827: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. '+' → logprob: -11.125015258789062
    3. 'i' → logprob: -16.000015258789062
    4. ' ' → logprob: -16.000015258789062
    5. '   ' → logprob: -16.750015258789062
    6. '```' → logprob: -17.000015258789062
    7. ']' → logprob: -17.375015258789062
    8. '[i' → logprob: -19.000015258789062
    9. ']+' → logprob: -19.500015258789062
    10. '
' → logprob: -20.250015258789062

Token 828: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01298573985695839
    2. ']
' → logprob: -4.512985706329346
    3. ']+' → logprob: -6.262985706329346
    4. '[j' → logprob: -11.887986183166504
    5. '```' → logprob: -12.512986183166504
    6. '+' → logprob: -12.887986183166504
    7. ']:
' → logprob: -13.137986183166504
    8. ']=' → logprob: -13.262986183166504
    9. ']+=' → logprob: -13.262986183166504
    10. ']]' → logprob: -13.387986183166504

Token 829: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7170451283454895
    2. '```' → logprob: -0.9670451283454895
    3. 'for' → logprob: -2.2170450687408447
    4. ' for' → logprob: -4.217045307159424
    5. '       ' → logprob: -5.092045307159424
    6. '[' → logprob: -6.967045307159424
    7. '               ' → logprob: -8.342044830322266
    8. '   ' → logprob: -8.592044830322266
    9. '``' → logprob: -8.592044830322266
    10. '{
' → logprob: -10.342044830322266

Token 830: ' id' (ID: 1211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023929782037157565
    2. '```' → logprob: -8.375239372253418
    3. 'id' (adapté à ' id') → logprob: -12.500239372253418
    4. '       ' → logprob: -13.000239372253418
    5. '   ' → logprob: -14.000239372253418
    6. ' for' → logprob: -14.375239372253418
    7. 'pow' → logprob: -14.375239372253418
    8. 'range' → logprob: -15.000239372253418
    9. '           ' → logprob: -15.125239372253418
    10. '``' → logprob: -16.5002384185791

Token 831: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03007570654153824
    2. ' =' → logprob: -3.780075788497925
    3. 'for' → logprob: -5.030075550079346
    4. '2' → logprob: -9.780076026916504
    5. '   ' → logprob: -9.780076026916504
    6. '+=' → logprob: -10.655076026916504
    7. '```' → logprob: -10.780076026916504
    8. ' for' → logprob: -10.780076026916504
    9. ')' → logprob: -10.905076026916504
    10. '[' → logprob: -11.155076026916504

Token 832: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34846052527427673
    2. '=' → logprob: -1.2234605550765991
    3. ')' → logprob: -12.34846019744873
    4. '<|end|>' → logprob: -13.09846019744873
    5. '[' → logprob: -13.22346019744873
    6. '```' → logprob: -13.34846019744873
    7. 'for' → logprob: -13.47346019744873
    8. ' for' → logprob: -13.47346019744873
    9. '=
' → logprob: -14.72346019744873
    10. ',' → logprob: -14.84846019744873

Token 833: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.00861681904643774
    2. ' comp' → logprob: -4.758616924285889
    3. '	comp' → logprob: -13.88361644744873
    4. 'com' → logprob: -14.38361644744873
    5. '```' → logprob: -15.25861644744873
    6. '(comp' → logprob: -15.38361644744873
    7. 'id' → logprob: -16.008617401123047
    8. 'cop' → logprob: -16.883617401123047
    9. 'data' → logprob: -17.133617401123047
    10. '.comp' → logprob: -17.258617401123047

Token 834: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.12973956763744354
    2. '[' → logprob: -2.12973952293396
    3. '{' → logprob: -6.504739761352539
    4. 'comp' → logprob: -6.754739761352539
    5. '```' → logprob: -9.254739761352539
    6. '(comp' → logprob: -11.004739761352539
    7. '	comp' → logprob: -12.129739761352539
    8. '[[' → logprob: -12.254739761352539
    9. 'h' → logprob: -12.629739761352539
    10. ' comp' → logprob: -12.754739761352539

Token 835: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0781404972076416
    2. '[id' → logprob: -2.9531404972076416
    3. '+' → logprob: -4.2031402587890625
    4. '2' → logprob: -5.2031402587890625
    5. '[' → logprob: -6.8281402587890625
    6. '[j' → logprob: -8.078140258789062
    7. ']' → logprob: -8.453140258789062
    8. '{i' → logprob: -8.453140258789062
    9. 'id' → logprob: -8.703140258789062
    10. '-' → logprob: -9.078140258789062

Token 836: ']]
' (ID: 29446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4144366979598999
    2. '2' → logprob: -1.1644366979599
    3. ']' → logprob: -4.5394368171691895
    4. ']+' → logprob: -4.5394368171691895
    5. '[i' → logprob: -6.2894368171691895
    6. ']]' → logprob: -6.6644368171691895
    7. 'i' → logprob: -6.7894368171691895
    8. '-' → logprob: -7.6644368171691895
    9. ']]
' → logprob: -8.164436340332031
    10. '```' → logprob: -8.164436340332031

Token 837: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.45010003447532654
    2. '       ' → logprob: -1.200100064277649
    3. 'for' → logprob: -3.3250999450683594
    4. '           ' → logprob: -3.9500999450683594
    5. ' for' → logprob: -5.450099945068359
    6. '[' → logprob: -7.700099945068359
    7. '   ' → logprob: -7.825099945068359
    8. '               ' → logprob: -7.825099945068359
    9. '``' → logprob: -8.32509994506836
    10. '	for' → logprob: -9.32509994506836

Token 838: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003675609827041626
    2. '```' → logprob: -6.00367546081543
    3. '       ' → logprob: -7.62867546081543
    4. ' for' → logprob: -7.87867546081543
    5. 'pow' → logprob: -8.62867546081543
    6. '           ' → logprob: -8.87867546081543
    7. '   ' → logprob: -12.62867546081543
    8. '	for' → logprob: -12.87867546081543
    9. '``' → logprob: -13.00367546081543
    10. 'range' → logprob: -13.25367546081543

Token 839: ' Cas' (ID: 8066)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.35706390615087e-05
    2. '```' → logprob: -10.500033378601074
    3. ' for' → logprob: -12.875033378601074
    4. '       ' → logprob: -13.250033378601074
    5. '   ' → logprob: -14.250033378601074
    6. '           ' → logprob: -14.625033378601074
    7. 'range' → logprob: -16.00003433227539
    8. 'id' → logprob: -16.37503433227539
    9. '
' → logprob: -16.50003433227539
    10. 'pow' → logprob: -16.50003433227539

Token 840: ' où' (ID: 15113)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5902444124221802
    2. 'for' → logprob: -0.8402444124221802
    3. ' j' → logprob: -5.090244293212891
    4. '           ' → logprob: -5.840244293212891
    5. '```' → logprob: -5.840244293212891
    6. ' range' → logprob: -7.090244293212891
    7. 'range' → logprob: -8.59024429321289
    8. 'j' → logprob: -8.71524429321289
    9. '   ' → logprob: -8.71524429321289
    10. '       ' → logprob: -8.71524429321289

Token 841: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3357618451118469
    2. 'j' → logprob: -1.4607617855072021
    3. ' for' → logprob: -3.460761785507202
    4. 'dp' → logprob: -4.460762023925781
    5. ' j' → logprob: -5.335762023925781
    6. 'range' → logprob: -6.210762023925781
    7. '           ' → logprob: -7.085762023925781
    8. 'id' → logprob: -7.210762023925781
    9. '   ' → logprob: -7.960762023925781
    10. 'i' → logprob: -7.960762023925781

Token 842: ' hauteur' (ID: 72987)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012520013377070427
    2. 'j' → logprob: -5.012519836425781
    3. ' for' → logprob: -5.262519836425781
    4. '```' → logprob: -8.012519836425781
    5. 'i' → logprob: -9.262519836425781
    6. 'pour' → logprob: -10.387519836425781
    7. ' j' → logprob: -10.762519836425781
    8. 'range' → logprob: -10.887519836425781
    9. 'dp' → logprob: -11.012519836425781
    10. 'next' → logprob: -11.012519836425781

Token 843: ' dim' (ID: 6051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29602277278900146
    2. '```' → logprob: -2.546022891998291
    3. '[i' → logprob: -2.921022891998291
    4. '=' → logprob: -3.421022891998291
    5. '[j' → logprob: -3.671022891998291
    6. '[' → logprob: -3.671022891998291
    7. ' for' → logprob: -4.546022891998291
    8. 's' → logprob: -5.171022891998291
    9. 'range' → logprob: -5.421022891998291
    10. 'pour' → logprob: -5.796022891998291

Token 844: 'inue' (ID: 9329)
  Prédit: 'inue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.0001261845463886857
    2. 'i' → logprob: -10.625125885009766
    3. 'ine' → logprob: -10.625125885009766
    4. 'id' → logprob: -10.750125885009766
    5. 'in' → logprob: -10.750125885009766
    6. 'inu' → logprob: -10.875125885009766
    7. 'inie' → logprob: -12.625125885009766
    8. 'p' → logprob: -13.375125885009766
    9. 'pute' → logprob: -13.500125885009766
    10. 'ini' → logprob: -13.500125885009766

Token 845: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0874319076538086
    2. '```' → logprob: -1.5874319076538086
    3. '       ' → logprob: -1.8374319076538086
    4. ' for' → logprob: -2.0874319076538086
    5. 'for' → logprob: -2.2124319076538086
    6. '           ' → logprob: -3.9624319076538086
    7. '   ' → logprob: -4.087431907653809
    8. '<|end|>' → logprob: -4.337431907653809
    9. ':
' → logprob: -5.462431907653809
    10. ')' → logprob: -5.837431907653809

Token 846: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4681333601474762
    2. 'for' → logprob: -1.7181333303451538
    3. ' for' → logprob: -2.3431334495544434
    4. '       ' → logprob: -3.2181334495544434
    5. '           ' → logprob: -3.4681334495544434
    6. ':' → logprob: -4.093133449554443
    7. '   ' → logprob: -5.343133449554443
    8. '[' → logprob: -6.093133449554443
    9. '               ' → logprob: -6.843133449554443
    10. ':
' → logprob: -7.843133449554443

Token 847: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04372699558734894
    2. ' for' → logprob: -3.168726921081543
    3. '```' → logprob: -7.418726921081543
    4. '       ' → logprob: -9.918726921081543
    5. '   ' → logprob: -10.168726921081543
    6. '[' → logprob: -10.418726921081543
    7. '	for' → logprob: -12.668726921081543
    8. '           ' → logprob: -12.793726921081543
    9. ')' → logprob: -13.168726921081543
    10. '``' → logprob: -14.918726921081543

Token 848: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.061976201832294464
    2. ' j' → logprob: -2.811976194381714
    3. '```' → logprob: -12.936976432800293
    4. '	j' → logprob: -13.186976432800293
    5. 'i' → logprob: -13.311976432800293
    6. '_j' → logprob: -14.186976432800293
    7. '`' → logprob: -14.811976432800293
    8. '   ' → logprob: -15.124476432800293
    9. '[j' → logprob: -15.124476432800293
    10. '$j' → logprob: -15.311976432800293

Token 849: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.63266921043396
    2. 'in' → logprob: -0.75766921043396
    3. 'range' → logprob: -10.257669448852539
    4. '```' → logprob: -11.632669448852539
    5. '[' → logprob: -11.882669448852539
    6. '
' → logprob: -12.132669448852539
    7. ' ' → logprob: -13.007669448852539
    8. ')' → logprob: -13.007669448852539
    9. '(' → logprob: -13.757669448852539
    10. 's' → logprob: -14.132669448852539

Token 850: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004890497075393796
    2. ' range' → logprob: -7.625489234924316
    3. '(range' → logprob: -14.625489234924316
    4. '0' → logprob: -16.12548828125
    5. '
' → logprob: -16.75048828125
    6. '```' → logprob: -16.87548828125
    7. 'j' → logprob: -17.00048828125
    8. 'id' → logprob: -17.25048828125
    9. 'in' → logprob: -17.25048828125
    10. '	range' → logprob: -17.37548828125

Token 851: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3870599865913391
    2. '(id' → logprob: -1.1370599269866943
    3. 'range' → logprob: -9.637060165405273
    4. '(range' → logprob: -9.887060165405273
    5. '(j' → logprob: -10.512060165405273
    6. ' in' → logprob: -11.387060165405273
    7. ' (' → logprob: -11.887060165405273
    8. '(in' → logprob: -12.012060165405273
    9. '(i' → logprob: -12.262060165405273
    10. 'in' → logprob: -12.387060165405273

Token 852: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06268373131752014
    2. 'id' → logprob: -2.8126838207244873
    3. 'range' → logprob: -7.812683582305908
    4. '(' → logprob: -8.562684059143066
    5. '(id' → logprob: -9.437684059143066
    6. ' id' → logprob: -11.562684059143066
    7. ' ' → logprob: -11.812684059143066
    8. 'j' → logprob: -12.437684059143066
    9. '1' → logprob: -12.687684059143066
    10. '2' → logprob: -12.812684059143066

Token 853: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4130748212337494
    2. '(id' → logprob: -1.2880748510360718
    3. ',id' → logprob: -3.2880747318267822
    4. 'id' → logprob: -3.7880747318267822
    5. 'range' → logprob: -6.288074970245361
    6. '(' → logprob: -8.038074493408203
    7. 'in' → logprob: -9.163074493408203
    8. ' id' → logprob: -9.288074493408203
    9. '=id' → logprob: -9.663074493408203
    10. '[id' → logprob: -9.913074493408203

Token 854: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.00020687808864749968
    2. ' id' → logprob: -8.50020694732666
    3. 'j' → logprob: -12.87520694732666
    4. '(id' → logprob: -14.62520694732666
    5. '	id' → logprob: -16.125205993652344
    6. '   ' → logprob: -16.875205993652344
    7. 'i' → logprob: -17.375205993652344
    8. 'range' → logprob: -17.375205993652344
    9. 'idx' → logprob: -17.375205993652344
    10. 'len' → logprob: -17.875205993652344

Token 855: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1177711933851242
    2. '):' → logprob: -2.4927711486816406
    3. ',' → logprob: -4.117771148681641
    4. '[j' → logprob: -5.117771148681641
    5. ',j' → logprob: -5.242771148681641
    6. '```' → logprob: -7.992771148681641
    7. '+' → logprob: -8.74277114868164
    8. ',id' → logprob: -8.99277114868164
    9. ':' → logprob: -9.99277114868164
    10. '[' → logprob: -10.49277114868164

Token 856: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.44405779242515564
    2. '               ' → logprob: -1.069057822227478
    3. '[' → logprob: -5.319057941436768
    4. '           ' → logprob: -5.819057941436768
    5. '``' → logprob: -6.194057941436768
    6. '       ' → logprob: -6.194057941436768
    7. 'dp' → logprob: -6.444057941436768
    8. '(dp' → logprob: -7.569057941436768
    9. ' dp' → logprob: -7.944057941436768
    10. '[j' → logprob: -8.56905746459961

Token 857: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.006914883852005005
    2. ' dp' → logprob: -5.006915092468262
    3. '           ' → logprob: -9.881915092468262
    4. '```' → logprob: -9.881915092468262
    5. '(dp' → logprob: -10.256915092468262
    6. '	dp' → logprob: -10.756915092468262
    7. '               ' → logprob: -11.256915092468262
    8. '_dp' → logprob: -11.756915092468262
    9. 'pow' → logprob: -12.131915092468262
    10. '       ' → logprob: -12.256915092468262

Token 858: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010127831774298102
    2. '```' → logprob: -9.250101089477539
    3. '[' → logprob: -12.875101089477539
    4. 'i' → logprob: -14.000101089477539
    5. '[
' → logprob: -15.250101089477539
    6. '``' → logprob: -15.500101089477539
    7. '[I' → logprob: -15.500101089477539
    8. '][' → logprob: -15.500101089477539
    9. '[n' → logprob: -15.875101089477539
    10. '[user' → logprob: -16.00010108947754

Token 859: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12698553502559662
    2. '][' → logprob: -2.126985549926758
    3. '```' → logprob: -10.251985549926758
    4. 'i' → logprob: -11.876985549926758
    5. '[j' → logprob: -11.876985549926758
    6. '}[' → logprob: -13.251985549926758
    7. '[' → logprob: -13.501985549926758
    8. ')[' → logprob: -14.251985549926758
    9. '>[' → logprob: -14.376985549926758
    10. ']][' → logprob: -14.501985549926758

Token 860: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3646860420703888
    2. 'dp' → logprob: -1.2396860122680664
    3. '(dp' → logprob: -4.989686012268066
    4. 'i' → logprob: -5.114686012268066
    5. 'pow' → logprob: -6.614686012268066
    6. '(i' → logprob: -7.239686012268066
    7. '(j' → logprob: -7.239686012268066
    8. '[j' → logprob: -8.614686012268066
    9. '(' → logprob: -8.739686012268066
    10. '[i' → logprob: -9.614686012268066

Token 861: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3162287175655365
    2. ']=' → logprob: -2.0662286281585693
    3. '[i' → logprob: -2.6912286281585693
    4. '][' → logprob: -3.1912286281585693
    5. '[j' → logprob: -3.4412286281585693
    6. '=' → logprob: -6.566228866577148
    7. '[' → logprob: -6.816228866577148
    8. '```' → logprob: -7.566228866577148
    9. ']+=' → logprob: -8.691228866577148
    10. '[
' → logprob: -9.566228866577148

Token 862: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006383875850588083
    2. ' =' → logprob: -6.381383895874023
    3. '[' → logprob: -6.506383895874023
    4. '```' → logprob: -6.881383895874023
    5. ']=' → logprob: -7.506383895874023
    6. '[i' → logprob: -7.631383895874023
    7. '+=' → logprob: -7.756383895874023
    8. '[j' → logprob: -8.006383895874023
    9. '[
' → logprob: -9.256383895874023
    10. ']' → logprob: -9.381383895874023

Token 863: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.09875556081533432
    2. 'dp' → logprob: -3.5987555980682373
    3. 'pow' → logprob: -3.5987555980682373
    4. '(pow' → logprob: -3.9737555980682373
    5. ' (' → logprob: -4.723755359649658
    6. '(' → logprob: -4.723755359649658
    7. ' dp' → logprob: -5.973755359649658
    8. ' pow' → logprob: -9.098755836486816
    9. '(p' → logprob: -9.598755836486816
    10. '2' → logprob: -12.098755836486816

Token 864: 'pow' (ID: 30304)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18191777169704437
    2. '(dp' → logprob: -2.681917667388916
    3. '(' → logprob: -3.056917667388916
    4. 'pow' → logprob: -3.306917667388916
    5. '2' → logprob: -4.306917667388916
    6. '(pow' → logprob: -7.556917667388916
    7. ' dp' → logprob: -8.681918144226074
    8. ' (' → logprob: -10.806918144226074
    9. '(p' → logprob: -11.681918144226074
    10. '(
' → logprob: -11.681918144226074

Token 865: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.250000953674316
    3. '(
' → logprob: -16.0
    4. '```' → logprob: -16.875
    5. '<|end|>' → logprob: -18.125
    6. 'def' → logprob: -18.5
    7. '(pow' → logprob: -18.625
    8. ' (' → logprob: -18.75
    9. '(code' → logprob: -19.5
    10. '[' → logprob: -20.0

Token 866: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9266199160483666e-05
    2. '(' → logprob: -10.875019073486328
    3. ' ' → logprob: -15.375019073486328
    4. '```' → logprob: -17.875019073486328
    5. ')' → logprob: -20.000019073486328
    6. '   ' → logprob: -20.250019073486328
    7. 'pow' → logprob: -20.250019073486328
    8. '[' → logprob: -20.625019073486328
    9. '(pow' → logprob: -21.000019073486328
    10. '{' → logprob: -21.250019073486328

Token 867: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7012881636619568
    2. '(h' → logprob: -1.0762882232666016
    3. '(' → logprob: -1.8262882232666016
    4. '```' → logprob: -6.701288223266602
    5. '[h' → logprob: -8.076288223266602
    6. ',h' → logprob: -8.201288223266602
    7. '(j' → logprob: -9.201288223266602
    8. '[' → logprob: -9.951288223266602
    9. '(
' → logprob: -10.326288223266602
    10. '(dp' → logprob: -10.701288223266602

Token 868: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.005665445234626532
    2. '(h' → logprob: -5.755665302276611
    3. ' h' → logprob: -6.005665302276611
    4. '[h' → logprob: -11.88066577911377
    5. '```' → logprob: -13.00566577911377
    6. '(' → logprob: -13.25566577911377
    7. ' (' → logprob: -13.25566577911377
    8. '2' → logprob: -13.38066577911377
    9. ' ' → logprob: -13.75566577911377
    10. 'H' → logprob: -13.88066577911377

Token 869: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.0259150157216936e-05
    2. 'i' → logprob: -10.37505054473877
    3. '[' → logprob: -11.25005054473877
    4. '```' → logprob: -12.62505054473877
    5. '(i' → logprob: -13.37505054473877
    6. '{i' → logprob: -14.75005054473877
    7. '[I' → logprob: -15.62505054473877
    8. '[j' → logprob: -15.87505054473877
    9. '[user' → logprob: -16.375049591064453
    10. '[
' → logprob: -16.500049591064453

Token 870: ']-' (ID: 27107)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002704423386603594
    2. '-' → logprob: -6.627704620361328
    3. ']-' → logprob: -7.127704620361328
    4. '[j' → logprob: -8.377704620361328
    5. '-i' → logprob: -8.877704620361328
    6. ']' → logprob: -9.127704620361328
    7. 'i' → logprob: -10.127704620361328
    8. '[' → logprob: -10.752704620361328
    9. '[
' → logprob: -11.377704620361328
    10. '][' → logprob: -11.752704620361328

Token 871: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.4034345187828876e-05
    2. '[h' → logprob: -11.37502384185791
    3. ' h' → logprob: -12.12502384185791
    4. 'j' → logprob: -13.00002384185791
    5. '[i' → logprob: -13.75002384185791
    6. '[j' → logprob: -14.12502384185791
    7. '```' → logprob: -14.25002384185791
    8. '_h' → logprob: -14.50002384185791
    9. '(h' → logprob: -14.50002384185791
    10. 'i' → logprob: -15.75002384185791

Token 872: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.038171280175447464
    2. 'i' → logprob: -3.2881712913513184
    3. '[' → logprob: -10.16317081451416
    4. '{i' → logprob: -10.53817081451416
    5. '[j' → logprob: -10.91317081451416
    6. '_i' → logprob: -11.66317081451416
    7. '1' → logprob: -11.91317081451416
    8. '(i' → logprob: -12.16317081451416
    9. '[
' → logprob: -12.28817081451416
    10. 'j' → logprob: -12.28817081451416

Token 873: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.13111597299575806
    2. '+' → logprob: -2.1311159133911133
    3. 'i' → logprob: -6.506115913391113
    4. '[' → logprob: -6.881115913391113
    5. '1' → logprob: -7.381115913391113
    6. '(i' → logprob: -7.881115913391113
    7. '```' → logprob: -8.256115913391113
    8. '{i' → logprob: -9.256115913391113
    9. '_next' → logprob: -9.381115913391113
    10. '[j' → logprob: -9.631115913391113

Token 874: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. '+' → logprob: -13.125007629394531
    3. '[i' → logprob: -13.250007629394531
    4. '```' → logprob: -13.500007629394531
    5. '[' → logprob: -14.250007629394531
    6. ' ' → logprob: -14.375007629394531
    7. 'i' → logprob: -14.875007629394531
    8. '   ' → logprob: -15.187507629394531
    9. '`' → logprob: -16.87500762939453
    10. '[j' → logprob: -16.93750762939453

Token 875: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5244897603988647
    2. ',' → logprob: -0.8994897603988647
    3. '[i' → logprob: -7.524489879608154
    4. ' ,' → logprob: -8.649489402770996
    5. '       ' → logprob: -9.149489402770996
    6. '[j' → logprob: -9.524489402770996
    7. '[],' → logprob: -9.524489402770996
    8. '),' → logprob: -9.774489402770996
    9. '```' → logprob: -9.774489402770996
    10. '[' → logprob: -10.399489402770996

Token 876: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01105159055441618
    2. ' mod' → logprob: -4.511051654815674
    3. '(mod' → logprob: -13.011051177978516
    4. '```' → logprob: -13.636051177978516
    5. '	mod' → logprob: -15.886051177978516
    6. '_mod' → logprob: -17.636051177978516
    7. ' мод' → logprob: -17.636051177978516
    8. ')' → logprob: -18.136051177978516
    9. 'moder' → logprob: -18.136051177978516
    10. '.mod' → logprob: -18.261051177978516

Token 877: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013810674427077174
    2. ',' → logprob: -7.251380920410156
    3. ')*' → logprob: -8.001380920410156
    4. '               ' → logprob: -9.501380920410156
    5. '           ' → logprob: -9.626380920410156
    6. '       ' → logprob: -9.751380920410156
    7. '```' → logprob: -9.751380920410156
    8. '   ' → logprob: -11.001380920410156
    9. '                   ' → logprob: -11.376380920410156
    10. ']' → logprob: -11.376380920410156

Token 878: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22111918032169342
    2. '*' → logprob: -1.7211191654205322
    3. ')' → logprob: -4.221119403839111
    4. '[j' → logprob: -6.221119403839111
    5. '```' → logprob: -7.221119403839111
    6. '[' → logprob: -7.346119403839111
    7. '       ' → logprob: -8.346118927001953
    8. '[i' → logprob: -8.471118927001953
    9. '               ' → logprob: -8.596118927001953
    10. '*j' → logprob: -8.971118927001953

Token 879: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0017650244990363717
    2. ' dp' → logprob: -6.501765251159668
    3. '(dp' → logprob: -8.251765251159668
    4. ' (' → logprob: -14.126765251159668
    5. '(' → logprob: -15.001765251159668
    6. '	dp' → logprob: -15.251765251159668
    7. '
' → logprob: -15.376765251159668
    8. '   ' → logprob: -16.87676429748535
    9. '(
' → logprob: -16.87676429748535
    10. ')' → logprob: -16.87676429748535

Token 880: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. 'i' → logprob: -13.25000286102295
    3. '```' → logprob: -15.25000286102295
    4. '[user' → logprob: -16.500001907348633
    5. '{i' → logprob: -16.625001907348633
    6. '(i' → logprob: -17.125001907348633
    7. '[
' → logprob: -17.250001907348633
    8. '[' → logprob: -17.250001907348633
    9. '[I' → logprob: -17.625001907348633
    10. 'user' → logprob: -18.000001907348633

Token 881: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20155173540115356
    2. '-' → logprob: -1.7015516757965088
    3. 'i' → logprob: -9.57655143737793
    4. '[-' → logprob: -10.45155143737793
    5. '-i' → logprob: -10.70155143737793
    6. '```' → logprob: -11.82655143737793
    7. '[' → logprob: -12.70155143737793
    8. '(i' → logprob: -13.45155143737793
    9. '-[' → logprob: -13.57655143737793
    10. ' -' → logprob: -13.57655143737793

Token 882: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. '```' → logprob: -13.500004768371582
    3. 'i' → logprob: -14.312504768371582
    4. ' ' → logprob: -14.562504768371582
    5. 'prev' → logprob: -14.625004768371582
    6. '-' → logprob: -14.875004768371582
    7. '{' → logprob: -16.187503814697266
    8. '۱' → logprob: -16.437503814697266
    9. '<|end|>' → logprob: -16.562503814697266
    10. '১' → logprob: -16.687503814697266

Token 883: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03524833545088768
    2. '[j' → logprob: -3.535248279571533
    3. '][' → logprob: -5.410248279571533
    4. '[' → logprob: -7.160248279571533
    5. ')[' → logprob: -8.910248756408691
    6. '[id' → logprob: -10.910248756408691
    7. '}[' → logprob: -11.035248756408691
    8. ']' → logprob: -11.410248756408691
    9. '```' → logprob: -11.535248756408691
    10. '[I' → logprob: -11.660248756408691

Token 884: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1398757123970427e-05
    2. '[j' → logprob: -11.500011444091797
    3. ' j' → logprob: -14.000011444091797
    4. '   ' → logprob: -16.125011444091797
    5. '(j' → logprob: -16.750011444091797
    6. '0' → logprob: -16.750011444091797
    7. '_j' → logprob: -17.000011444091797
    8. 'i' → logprob: -17.625011444091797
    9. '```' → logprob: -17.625011444091797
    10. '	j' → logprob: -17.875011444091797

Token 885: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009682760573923588
    2. ')%' → logprob: -7.0009684562683105
    3. '])' → logprob: -10.875967979431152
    4. '[j' → logprob: -11.750967979431152
    5. '       ' → logprob: -11.875967979431152
    6. '           ' → logprob: -12.000967979431152
    7. ' )' → logprob: -12.500967979431152
    8. '))' → logprob: -12.875967979431152
    9. '                   ' → logprob: -13.000967979431152
    10. '               ' → logprob: -13.250967979431152

Token 886: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.14190387725830078
    2. ')' → logprob: -2.766903877258301
    3. ' %' → logprob: -2.891903877258301
    4. ')%' → logprob: -4.391903877258301
    5. '           ' → logprob: -7.016903877258301
    6. '       ' → logprob: -9.0169038772583
    7. '```' → logprob: -9.0169038772583
    8. '               ' → logprob: -9.1419038772583
    9. '%)' → logprob: -9.7669038772583
    10. '%n' → logprob: -9.7669038772583

Token 887: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0040807779878377914
    2. ' mod' → logprob: -5.504080772399902
    3. '(mod' → logprob: -13.004080772399902
    4. '```' → logprob: -17.00408172607422
    5. '	mod' → logprob: -17.50408172607422
    6. '_mod' → logprob: -18.75408172607422
    7. ' мод' → logprob: -19.00408172607422
    8. '
' → logprob: -19.25408172607422
    9. '`' → logprob: -19.25408172607422
    10. ' ' → logprob: -19.75408172607422

Token 888: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.05060174688696861
    2. '       ' → logprob: -3.3006017208099365
    3. '   ' → logprob: -5.425601959228516
    4. ')' → logprob: -5.800601959228516
    5. '           ' → logprob: -6.300601959228516
    6. '<|end|>' → logprob: -6.675601959228516
    7. '``' → logprob: -7.300601959228516
    8. '\n' → logprob: -7.800601959228516
    9. 'for' → logprob: -8.050601959228516
    10. '[' → logprob: -9.425601959228516

Token 889: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.000777707842644304
    2. '       ' → logprob: -7.625777721405029
    3. '``' → logprob: -8.625777244567871
    4. '<|end|>' → logprob: -10.375777244567871
    5. 'for' → logprob: -10.750777244567871
    6. '   ' → logprob: -10.750777244567871
    7. ' for' → logprob: -11.375777244567871
    8. ')' → logprob: -12.000777244567871
    9. '[' → logprob: -12.625777244567871
    10. '           ' → logprob: -13.250777244567871

Token 890: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31482377648353577
    2. 'for' (adapté à ' for') → logprob: -1.5648237466812134
    3. '```' → logprob: -3.189823865890503
    4. '       ' → logprob: -4.939823627471924
    5. '[' → logprob: -5.064823627471924
    6. '   ' → logprob: -6.439823627471924
    7. '[j' → logprob: -6.439823627471924
    8. ' for' → logprob: -6.814823627471924
    9. ' dp' → logprob: -7.564823627471924
    10. '	dp' → logprob: -8.189824104309082

Token 891: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12693576514720917
    2. ' j' → logprob: -2.1269357204437256
    3. '_j' → logprob: -13.001935958862305
    4. '```' → logprob: -13.001935958862305
    5. '<|end|>' → logprob: -13.751935958862305
    6. '	j' → logprob: -13.876935958862305
    7. '$j' → logprob: -14.751935958862305
    8. '[j' → logprob: -15.626935958862305
    9. 'range' → logprob: -16.126935958862305
    10. '<|end|>' → logprob: -16.626935958862305

Token 892: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.44040581583976746
    2. ' in' → logprob: -1.0654058456420898
    3. '(id' → logprob: -4.81540584564209
    4. 'range' → logprob: -6.06540584564209
    5. '[id' → logprob: -7.56540584564209
    6. '```' → logprob: -8.06540584564209
    7. '(range' → logprob: -9.19040584564209
    8. 'id' → logprob: -9.56540584564209
    9. 'en' → logprob: -10.19040584564209
    10. '(in' → logprob: -10.31540584564209

Token 893: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031855558045208454
    2. ' range' → logprob: -5.753185749053955
    3. '(range' → logprob: -11.753185272216797
    4. '	range' → logprob: -18.878185272216797
    5. '(' → logprob: -20.878185272216797
    6. '
' → logprob: -21.253185272216797
    7. '```' → logprob: -21.253185272216797
    8. '_range' → logprob: -21.378185272216797
    9. '(id' → logprob: -21.503185272216797
    10. 'rang' → logprob: -22.128185272216797

Token 894: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.0002457238151691854
    2. 'range' → logprob: -8.500246047973633
    3. '(range' → logprob: -10.500246047973633
    4. '(' → logprob: -11.625246047973633
    5. 'id' → logprob: -12.875246047973633
    6. '[id' → logprob: -13.625246047973633
    7. ' (' → logprob: -14.750246047973633
    8. ' range' → logprob: -15.250246047973633
    9. 'Range' → logprob: -15.375246047973633
    10. '(
' → logprob: -15.625246047973633

Token 895: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1318507194519043
    2. ',id' → logprob: -2.3818507194519043
    3. '(id' → logprob: -3.6318507194519043
    4. '[id' → logprob: -5.881850719451904
    5. ',j' → logprob: -6.881850719451904
    6. ' ,' → logprob: -8.506851196289062
    7. ',len' → logprob: -8.881851196289062
    8. '```' → logprob: -9.256851196289062
    9. '
' → logprob: -9.381851196289062
    10. '+' → logprob: -9.631851196289062

Token 896: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0009137284359894693
    2. ' id' → logprob: -7.000913619995117
    3. '(id' → logprob: -13.125913619995117
    4. 'len' → logprob: -16.250913619995117
    5. '{id' → logprob: -16.750913619995117
    6. '	id' → logprob: -16.875913619995117
    7. '```' → logprob: -17.375913619995117
    8. 'range' → logprob: -17.750913619995117
    9. '"id' → logprob: -17.875913619995117
    10. ''id' → logprob: -18.500913619995117

Token 897: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.317247167928144e-05
    2. '[' → logprob: -10.500093460083008
    3. '[id' → logprob: -10.875093460083008
    4. '[i' → logprob: -11.250093460083008
    5. 'id' → logprob: -11.500093460083008
    6. ',' → logprob: -12.125093460083008
    7. '+' → logprob: -12.125093460083008
    8. '```' → logprob: -12.500093460083008
    9. 'i' → logprob: -13.500093460083008
    10. '``' → logprob: -13.500093460083008

Token 898: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003920655872207135
    2. '[' → logprob: -8.500391960144043
    3. '```' → logprob: -9.500391960144043
    4. ' +' → logprob: -9.875391960144043
    5. '[j' → logprob: -10.250391960144043
    6. '+j' → logprob: -11.125391960144043
    7. ')+' → logprob: -12.625391960144043
    8. ']+' → logprob: -12.750391960144043
    9. '()+' → logprob: -13.250391960144043
    10. '[
' → logprob: -13.500391960144043

Token 899: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8438677787780762
    2. '```' → logprob: -1.2188677787780762
    3. 'dp' → logprob: -2.218867778778076
    4. '           ' → logprob: -2.468867778778076
    5. '[' → logprob: -2.843867778778076
    6. ' dp' → logprob: -4.968867778778076
    7. '``' → logprob: -5.093867778778076
    8. '(dp' → logprob: -5.968867778778076
    9. '       ' → logprob: -5.968867778778076
    10. '   ' → logprob: -6.343867778778076

Token 900: ' low' (ID: 4465)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3702872097492218
    2. '(dp' → logprob: -1.4952871799468994
    3. ' dp' → logprob: -2.4952871799468994
    4. '(' → logprob: -6.6202874183654785
    5. ' (' → logprob: -6.6202874183654785
    6. '```' → logprob: -9.62028694152832
    7. '	dp' → logprob: -10.74528694152832
    8. '(
' → logprob: -11.12028694152832
    9. '_dp' → logprob: -11.24528694152832
    10. '((' → logprob: -11.99528694152832

Token 901: ' =' (ID: 314)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7323790192604065
    2. '[j' → logprob: -1.3573789596557617
    3. '```' → logprob: -2.8573789596557617
    4. '][' → logprob: -2.9823789596557617
    5. '[i' → logprob: -2.9823789596557617
    6. 'j' → logprob: -3.6073789596557617
    7. '=' → logprob: -4.232378959655762
    8. 's' → logprob: -4.482378959655762
    9. '=j' → logprob: -4.857378959655762
    10. ' =' → logprob: -4.857378959655762

Token 902: ' data' (ID: 1238)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2671494781970978
    2. 'comp' → logprob: -2.5171494483947754
    3. '(dp' → logprob: -2.7671494483947754
    4. 'pow' → logprob: -3.2671494483947754
    5. ' dp' → logprob: -3.3921494483947754
    6. '(' → logprob: -4.767149448394775
    7. ' comp' → logprob: -6.142149448394775
    8. 'data' → logprob: -6.142149448394775
    9. '(comp' → logprob: -6.142149448394775
    10. ' (' → logprob: -6.392149448394775

Token 903: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00046022076276130974
    2. '[' → logprob: -8.125460624694824
    3. 'j' → logprob: -9.250460624694824
    4. 'comp' → logprob: -10.500460624694824
    5. '```' → logprob: -11.500460624694824
    6. '(j' → logprob: -11.875460624694824
    7. '[data' → logprob: -12.750460624694824
    8. ' =' → logprob: -12.750460624694824
    9. ' [' → logprob: -12.875460624694824
    10. '=j' → logprob: -13.000460624694824

Token 904: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18020972609519958
    2. '-' → logprob: -2.1802096366882324
    3. ']-' → logprob: -3.8052096366882324
    4. ']+' → logprob: -3.9302096366882324
    5. ']
' → logprob: -5.680209636688232
    6. '+' → logprob: -6.180209636688232
    7. '[j' → logprob: -6.305209636688232
    8. ' -' → logprob: -6.805209636688232
    9. '```' → logprob: -6.805209636688232
    10. '[' → logprob: -8.80521011352539

Token 905: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.341792106628418
    2. '               ' → logprob: -1.466792106628418
    3. ' =' → logprob: -1.966792106628418
    4. ')' → logprob: -2.091792106628418
    5. '=' → logprob: -2.591792106628418
    6. '<|end|>' → logprob: -3.216792106628418
    7. ']' → logprob: -3.341792106628418
    8. '           ' → logprob: -3.841792106628418
    9. '[' → logprob: -4.341792106628418
    10. '+' → logprob: -4.466792106628418

Token 906: ' up' (ID: 869)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.726256251335144
    2. 'dp' → logprob: -1.226256251335144
    3. '(' → logprob: -2.1012563705444336
    4. ' (' → logprob: -3.1012563705444336
    5. 'pow' → logprob: -3.9762563705444336
    6. '```' → logprob: -3.9762563705444336
    7. ' dp' → logprob: -4.601256370544434
    8. '(
' → logprob: -5.851256370544434
    9. '(pow' → logprob: -6.351256370544434
    10. '               ' → logprob: -7.226256370544434

Token 907: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7048801779747009
    2. '=' → logprob: -1.3298802375793457
    3. '[j' → logprob: -1.8298802375793457
    4. '+' → logprob: -3.4548802375793457
    5. '```' → logprob: -3.4548802375793457
    6. ']' → logprob: -5.079880237579346
    7. '=j' → logprob: -6.204880237579346
    8. '[' → logprob: -6.329880237579346
    9. 's' → logprob: -6.579880237579346
    10. '1' → logprob: -6.829880237579346

Token 908: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.018369542434811592
    2. ' data' → logprob: -4.018369674682617
    3. 'h' → logprob: -9.268369674682617
    4. '           ' → logprob: -10.518369674682617
    5. 'd' → logprob: -11.143369674682617
    6. '               ' → logprob: -11.143369674682617
    7. '[data' → logprob: -11.768369674682617
    8. '   ' → logprob: -11.893369674682617
    9. '(data' → logprob: -12.018369674682617
    10. '       ' → logprob: -12.143369674682617

Token 909: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.228561349213123e-05
    2. 'j' → logprob: -9.875052452087402
    3. '```' → logprob: -14.625052452087402
    4. '[
' → logprob: -16.125051498413086
    5. '(j' → logprob: -16.750051498413086
    6. '[' → logprob: -16.750051498413086
    7. '{' → logprob: -17.000051498413086
    8. '[i' → logprob: -17.750051498413086
    9. '\[' → logprob: -18.500051498413086
    10. '_j' → logprob: -18.625051498413086

Token 910: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02336054854094982
    2. ']' → logprob: -4.023360729217529
    3. ']+' → logprob: -5.398360729217529
    4. '[j' → logprob: -7.523360729217529
    5. ' +' → logprob: -9.773360252380371
    6. '```' → logprob: -10.773360252380371
    7. '+j' → logprob: -10.898360252380371
    8. '-' → logprob: -11.023360252380371
    9. '+
' → logprob: -12.023360252380371
    10. 'j' → logprob: -12.523360252380371

Token 911: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6069236397743225
    2. 'j' → logprob: -1.4819235801696777
    3. ']' → logprob: -1.7319235801696777
    4. '+' → logprob: -3.1069235801696777
    5. ']+' → logprob: -5.231923580169678
    6. '```' → logprob: -7.481923580169678
    7. '+j' → logprob: -10.231924057006836
    8. '(j' → logprob: -10.231924057006836
    9. ' j' → logprob: -10.356924057006836
    10. '[j' → logprob: -10.481924057006836

Token 912: ']' (ID: 60)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.10107418894767761
    2. ']' → logprob: -2.35107421875
    3. '               ' → logprob: -7.85107421875
    4. '           ' → logprob: -8.60107421875
    5. ']+' → logprob: -9.47607421875
    6. ']
' → logprob: -9.47607421875
    7. ']*' → logprob: -10.47607421875
    8. '-' → logprob: -10.72607421875
    9. '```' → logprob: -10.72607421875
    10. '+' → logprob: -11.47607421875

Token 913: ' -' (ID: 533)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.33235785365104675
    2. '               ' → logprob: -1.5823578834533691
    3. '                   ' → logprob: -3.707357883453369
    4. '           ' → logprob: -4.332357883453369
    5. '%' → logprob: -4.957357883453369
    6. ' =' → logprob: -5.332357883453369
    7. '<|end|>' → logprob: -5.457357883453369
    8. '                       ' → logprob: -5.707357883453369
    9. '=' → logprob: -5.707357883453369
    10. '``' → logprob: -5.957357883453369

Token 914: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019853383128065616
    2. ' ' → logprob: -9.000198364257812
    3. '<|end|>' → logprob: -9.625198364257812
    4. '...' → logprob: -12.250198364257812
    5. '=' → logprob: -13.375198364257812
    6. '0' → logprob: -13.625198364257812
    7. ')' → logprob: -14.875198364257812
    8. 'data' → logprob: -15.500198364257812
    9. '#' → logprob: -15.750198364257812
    10. 'lower' → logprob: -16.000198364257812

Token 915: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00248849974013865
    2. 'low' → logprob: -6.002488613128662
    3. '<|end|>' → logprob: -12.877488136291504
    4. ' low' → logprob: -13.002488136291504
    5. '(low' → logprob: -13.127488136291504
    6. '...' → logprob: -13.252488136291504
    7. ' ' → logprob: -13.502488136291504
    8. 'lower' → logprob: -13.627488136291504
    9. '-low' → logprob: -14.877488136291504
    10. '```' → logprob: -15.502488136291504

Token 916: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2931995093822479
    2. ')' → logprob: -2.1681995391845703
    3. '               ' → logprob: -3.7931995391845703
    4. ':' → logprob: -3.7931995391845703
    5. '):
' → logprob: -3.7931995391845703
    6. '<|end|>' → logprob: -4.04319953918457
    7. ':
' → logprob: -4.41819953918457
    8. '                   ' → logprob: -4.54319953918457
    9. '           ' → logprob: -4.79319953918457
    10. '):' → logprob: -5.91819953918457

Token 917: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.03876456245779991
    2. '                   ' → logprob: -4.038764476776123
    3. '               ' → logprob: -4.788764476776123
    4. '``' → logprob: -6.038764476776123
    5. '           ' → logprob: -6.288764476776123
    6. ' =' → logprob: -6.413764476776123
    7. ':' → logprob: -6.788764476776123
    8. '):
' → logprob: -6.913764476776123
    9. '<|end|>' → logprob: -7.163764476776123
    10. ')' → logprob: -7.413764476776123

Token 918: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6688857078552246
    2. ' for' → logprob: -1.1688857078552246
    3. 'dp' (adapté à ' dp') → logprob: -2.1688857078552246
    4. '```' → logprob: -3.0438857078552246
    5. ' dp' → logprob: -4.918885707855225
    6. ')' → logprob: -5.918885707855225
    7. 'pow' → logprob: -7.293885707855225
    8. '(dp' → logprob: -7.293885707855225
    9. '       ' → logprob: -7.418885707855225
    10. ' =' → logprob: -7.543885707855225

Token 919: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3782830137643032e-05
    2. '```' → logprob: -11.25001335144043
    3. 'i' → logprob: -15.00001335144043
    4. '[' → logprob: -16.12501335144043
    5. '[j' → logprob: -17.25001335144043
    6. '   ' → logprob: -17.25001335144043
    7. '[I' → logprob: -17.25001335144043
    8. '[u' → logprob: -17.37501335144043
    9. '[
' → logprob: -17.87501335144043
    10. '\[' → logprob: -18.00001335144043

Token 920: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006418698467314243
    2. '[j' → logprob: -5.381418704986572
    3. '[i' → logprob: -6.381418704986572
    4. '[' → logprob: -10.256418228149414
    5. '```' → logprob: -10.631418228149414
    6. ')[' → logprob: -11.131418228149414
    7. ']' → logprob: -11.506418228149414
    8. '}[' → logprob: -12.506418228149414
    9. ''][' → logprob: -12.881418228149414
    10. '"][' → logprob: -13.256418228149414

Token 921: 'id' (ID: 315)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.38696959614753723
    2. 'i' → logprob: -1.1369695663452148
    3. '[i' → logprob: -9.386969566345215
    4. '[j' → logprob: -11.386969566345215
    5. ' j' → logprob: -14.136969566345215
    6. ' i' → logprob: -14.261969566345215
    7. '```' → logprob: -14.386969566345215
    8. 'range' → logprob: -14.511969566345215
    9. '[' → logprob: -15.386969566345215
    10. '   ' → logprob: -15.636969566345215

Token 922: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05516987666487694
    2. ']' → logprob: -3.3051698207855225
    3. '[j' → logprob: -4.180170059204102
    4. ']+=' → logprob: -7.305170059204102
    5. '```' → logprob: -8.430170059204102
    6. '[' → logprob: -8.555170059204102
    7. '-' → logprob: -8.680170059204102
    8. '+' → logprob: -9.305170059204102
    9. ']=' → logprob: -9.930170059204102
    10. '][]' → logprob: -10.055170059204102

Token 923: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4921230375766754
    2. '=' → logprob: -1.742123007774353
    3. ' +=' → logprob: -2.2421231269836426
    4. ' =' → logprob: -2.4921231269836426
    5. ']+=' → logprob: -3.9921231269836426
    6. ']' → logprob: -5.492123126983643
    7. '+=(' → logprob: -6.867123126983643
    8. '=(' → logprob: -7.867123126983643
    9. '+' → logprob: -8.617122650146484
    10. ']=' → logprob: -9.367122650146484

Token 924: ' dp' (ID: 21546)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.274130254983902
    2. '(dp' → logprob: -1.7741302251815796
    3. ' (' → logprob: -3.024130344390869
    4. 'dp' → logprob: -4.149130344390869
    5. '2' → logprob: -5.774130344390869
    6. ' dp' → logprob: -6.149130344390869
    7. '(pow' → logprob: -8.774129867553711
    8. '((' → logprob: -8.774129867553711
    9. 'pow' → logprob: -9.149129867553711
    10. ' ' → logprob: -9.899129867553711

Token 925: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008508439059369266
    2. 'i' → logprob: -7.250850677490234
    3. '```' → logprob: -9.375850677490234
    4. '[' → logprob: -10.000850677490234
    5. '[
' → logprob: -13.250850677490234
    6. '{i' → logprob: -13.500850677490234
    7. '[int' → logprob: -13.750850677490234
    8. '[I' → logprob: -13.875850677490234
    9. '(i' → logprob: -14.250850677490234
    10. '_i' → logprob: -14.375850677490234

Token 926: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00146558100823313
    2. '[i' → logprob: -7.126465797424316
    3. 'i' → logprob: -8.126465797424316
    4. '[' → logprob: -9.001465797424316
    5. ' -' → logprob: -9.251465797424316
    6. '][' → logprob: -9.376465797424316
    7. '```' → logprob: -10.751465797424316
    8. '[-' → logprob: -12.126465797424316
    9. '−' → logprob: -12.376465797424316
    10. '(i' → logprob: -13.313965797424316

Token 927: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. '```' → logprob: -11.937524795532227
    3. 'i' → logprob: -12.187524795532227
    4. '2' → logprob: -12.875024795532227
    5. '11' → logprob: -13.687524795532227
    6. 'prev' → logprob: -13.750024795532227
    7. ' ' → logprob: -14.062524795532227
    8. '۱' → logprob: -14.062524795532227
    9. '-' → logprob: -14.687524795532227
    10. '१' → logprob: -15.000024795532227

Token 928: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.13109630346298218
    2. '][' → logprob: -2.506096363067627
    3. '[j' → logprob: -3.256096363067627
    4. '[id' → logprob: -6.631096363067627
    5. '[' → logprob: -6.756096363067627
    6. '```' → logprob: -9.631095886230469
    7. '}[' → logprob: -9.881095886230469
    8. 'i' → logprob: -10.631095886230469
    9. ')[' → logprob: -10.881095886230469
    10. '   ' → logprob: -11.381095886230469

Token 929: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09020627290010452
    2. 'id' → logprob: -2.4652063846588135
    3. 'low' → logprob: -7.590206146240234
    4. 'up' → logprob: -7.715206146240234
    5. 'i' → logprob: -8.590206146240234
    6. 'data' → logprob: -10.965206146240234
    7. '[j' → logprob: -10.965206146240234
    8. '[id' → logprob: -11.215206146240234
    9. ']' → logprob: -11.715206146240234
    10. '(id' → logprob: -11.715206146240234

Token 930: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007689089514315128
    2. ']%' → logprob: -5.132688999176025
    3. ' ]' → logprob: -7.257688999176025
    4. ']
' → logprob: -8.007689476013184
    5. ' *' → logprob: -8.632689476013184
    6. '%' → logprob: -8.882689476013184
    7. '<|end|>' → logprob: -9.007689476013184
    8. ')' → logprob: -9.507689476013184
    9. ']*' → logprob: -10.507689476013184
    10. '```' → logprob: -10.757689476013184

Token 931: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6628382802009583
    2. '%' → logprob: -1.1628382205963135
    3. '<|end|>' → logprob: -2.6628382205963135
    4. '
' → logprob: -3.5378382205963135
    5. ')' → logprob: -3.6628382205963135
    6. ' *' → logprob: -4.037838459014893
    7. '           ' → logprob: -4.412838459014893
    8. '       ' → logprob: -5.162838459014893
    9. '                   ' → logprob: -6.412838459014893
    10. ' 
' → logprob: -6.412838459014893

Token 932: ' pow' (ID: 9779)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3958774507045746
    2. '(pow' → logprob: -1.645877480506897
    3. 'pow' → logprob: -2.3958773612976074
    4. '2' → logprob: -4.020877361297607
    5. ' (' → logprob: -4.270877361297607
    6. '((' → logprob: -4.645877361297607
    7. ' pow' → logprob: -7.520877361297607
    8. '(p' → logprob: -8.145877838134766
    9. ' ((' → logprob: -9.020877838134766
    10. '```' → logprob: -9.145877838134766

Token 933: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.049755782238208e-05
    2. '2' → logprob: -10.75005054473877
    3. '(
' → logprob: -11.50005054473877
    4. '<|end|>' → logprob: -12.00005054473877
    5. '(pow' → logprob: -12.37505054473877
    6. '```' → logprob: -12.62505054473877
    7. ' (' → logprob: -13.25005054473877
    8. '('' → logprob: -13.75005054473877
    9. '((' → logprob: -14.25005054473877
    10. '()' → logprob: -15.12505054473877

Token 934: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006719991099089384
    2. '(' → logprob: -5.006720066070557
    3. '```' → logprob: -12.381719589233398
    4. ' ' → logprob: -15.381719589233398
    5. '(
' → logprob: -16.1317195892334
    6. ' (' → logprob: -18.5067195892334
    7. ')' → logprob: -18.6317195892334
    8. '   ' → logprob: -19.0067195892334
    9. '(pow' → logprob: -19.2567195892334
    10. '[' → logprob: -19.2567195892334

Token 935: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.180210143327713
    2. ',' → logprob: -2.3052101135253906
    3. '(h' → logprob: -3.0552101135253906
    4. '('' → logprob: -4.555210113525391
    5. '(
' → logprob: -5.930210113525391
    6. '(','' → logprob: -6.930210113525391
    7. '```' → logprob: -7.430210113525391
    8. '((' → logprob: -7.430210113525391
    9. '(',' → logprob: -7.555210113525391
    10. ',h' → logprob: -7.930210113525391

Token 936: ' h' (ID: 312)
  Prédit: '(up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(up' → logprob: -0.3045104742050171
    2. 'up' → logprob: -1.929510474205017
    3. '(low' → logprob: -2.6795105934143066
    4. '(' → logprob: -3.9295105934143066
    5. '(h' → logprob: -4.679510593414307
    6. 'low' → logprob: -4.679510593414307
    7. ' (' → logprob: -5.054510593414307
    8. 'h' → logprob: -6.929510593414307
    9. ' up' → logprob: -6.929510593414307
    10. '(high' → logprob: -7.179510593414307

Token 937: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.12127808178775e-05
    2. '[j' → logprob: -10.125051498413086
    3. '[h' → logprob: -12.250051498413086
    4. '[' → logprob: -12.500051498413086
    5. 'i' → logprob: -13.500051498413086
    6. '(i' → logprob: -14.625051498413086
    7. '```' → logprob: -14.750051498413086
    8. '[n' → logprob: -16.250051498413086
    9. '[
' → logprob: -16.500051498413086
    10. '[u' → logprob: -17.375051498413086

Token 938: ']-' (ID: 27107)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7817467451095581
    2. '-' → logprob: -1.031746745109558
    3. '-i' → logprob: -3.0317468643188477
    4. ']-' → logprob: -3.0317468643188477
    5. '-j' → logprob: -3.1567468643188477
    6. '[j' → logprob: -3.7817468643188477
    7. '-h' → logprob: -4.156746864318848
    8. ']' → logprob: -6.031746864318848
    9. '+' → logprob: -6.531746864318848
    10. ' -' → logprob: -7.031746864318848

Token 939: 'up' (ID: 817)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.02613784186542034
    2. 'up' → logprob: -3.7761378288269043
    3. 'low' → logprob: -6.401137828826904
    4. ' h' → logprob: -7.151137828826904
    5. '(up' → logprob: -9.151138305664062
    6. ' up' → logprob: -9.276138305664062
    7. '(h' → logprob: -9.401138305664062
    8. 'data' → logprob: -9.776138305664062
    9. '```' → logprob: -10.901138305664062
    10. ' low' → logprob: -10.901138305664062

Token 940: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02035360597074032
    2. '+' → logprob: -4.2703537940979
    3. '-' → logprob: -5.5203537940979
    4. '```' → logprob: -7.2703537940979
    5. ' ,' → logprob: -7.7703537940979
    6. ' +' → logprob: -8.270353317260742
    7. ',j' → logprob: -8.270353317260742
    8. '[j' → logprob: -9.145353317260742
    9. ' -' → logprob: -9.270353317260742
    10. '',' → logprob: -9.520353317260742

Token 941: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.061967913061380386
    2. ' mod' → logprob: -2.8119678497314453
    3. '(mod' → logprob: -15.811967849731445
    4. '	mod' → logprob: -16.436967849731445
    5. '```' → logprob: -16.936967849731445
    6. '10' → logprob: -17.436967849731445
    7. 'mods' → logprob: -18.186967849731445
    8. ' modul' → logprob: -18.436967849731445
    9. ' мод' → logprob: -18.561967849731445
    10. ' modular' → logprob: -18.686967849731445

Token 942: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05734677612781525
    2. ',' → logprob: -3.182346820831299
    3. ')%' → logprob: -4.557346820831299
    4. ')
' → logprob: -6.307346820831299
    5. '```' → logprob: -6.807346820831299
    6. ' )' → logprob: -8.80734634399414
    7. '                   ' → logprob: -8.80734634399414
    8. '%' → logprob: -8.80734634399414
    9. '           ' → logprob: -9.18234634399414
    10. '       ' → logprob: -9.55734634399414

Token 943: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04797909036278725
    2. ')' → logprob: -3.7979791164398193
    3. ' %' → logprob: -4.54797887802124
    4. ')%' → logprob: -4.79797887802124
    5. '```' → logprob: -6.54797887802124
    6. '                   ' → logprob: -6.67297887802124
    7. '           ' → logprob: -7.17297887802124
    8. '
' → logprob: -7.54797887802124
    9. '%d' → logprob: -7.67297887802124
    10. '                       ' → logprob: -8.047979354858398

Token 944: ' (' (ID: 350)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.675226092338562
    2. '(' → logprob: -1.175226092338562
    3. '(pow' → logprob: -2.1752262115478516
    4. '2' → logprob: -2.9252262115478516
    5. '(h' → logprob: -5.300226211547852
    6. '((' → logprob: -5.800226211547852
    7. 'mod' → logprob: -6.550226211547852
    8. ' (' → logprob: -6.800226211547852
    9. '(dp' → logprob: -7.175226211547852
    10. '(
' → logprob: -7.425226211547852

Token 945: 'pow' (ID: 30304)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.136566162109375
    2. '(' → logprob: -2.386566162109375
    3. '2' → logprob: -4.136566162109375
    4. ' (' → logprob: -5.261566162109375
    5. '((' → logprob: -5.261566162109375
    6. '(p' → logprob: -5.386566162109375
    7. 'pow' → logprob: -6.136566162109375
    8. '(
' → logprob: -8.136566162109375
    9. '(h' → logprob: -8.261566162109375
    10. '   ' → logprob: -8.386566162109375

Token 946: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.8921695047756657e-05
    2. '(
' → logprob: -11.000028610229492
    3. '2' → logprob: -12.125028610229492
    4. ' (' → logprob: -12.500028610229492
    5. '((' → logprob: -13.125028610229492
    6. '```' → logprob: -14.250028610229492
    7. '(

' → logprob: -16.750028610229492
    8. '(
' → logprob: -17.250028610229492
    9. '(-' → logprob: -17.500028610229492
    10. '('' → logprob: -17.500028610229492

Token 947: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02325153350830078
    2. '(' → logprob: -3.773251533508301
    3. ' ' → logprob: -12.6482515335083
    4. '```' → logprob: -13.3982515335083
    5. '(
' → logprob: -14.2732515335083
    6. ' (' → logprob: -14.5232515335083
    7. '0' → logprob: -17.023250579833984
    8. '`' → logprob: -17.523250579833984
    9. '``' → logprob: -17.648250579833984
    10. '1' → logprob: -18.648250579833984

Token 948: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1683199256658554
    2. ',' → logprob: -2.0433199405670166
    3. '(-' → logprob: -3.7933199405670166
    4. '(h' → logprob: -7.0433197021484375
    5. '```' → logprob: -7.5433197021484375
    6. '(',' → logprob: -8.168319702148438
    7. '(
' → logprob: -8.543319702148438
    8. '((' → logprob: -8.918319702148438
    9. ' (' → logprob: -9.043319702148438
    10. '(','' → logprob: -9.168319702148438

Token 949: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.8607544302940369
    2. 'low' → logprob: -0.8607544302940369
    3. '(low' → logprob: -2.3607544898986816
    4. '(up' → logprob: -3.6107544898986816
    5. 'data' → logprob: -4.485754489898682
    6. 'h' → logprob: -4.485754489898682
    7. '(' → logprob: -5.735754489898682
    8. '(h' → logprob: -5.860754489898682
    9. '(data' → logprob: -6.485754489898682
    10. ' low' → logprob: -7.610754489898682

Token 950: '-low' (ID: 115392)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09982796013355255
    2. ' -' → logprob: -2.474828004837036
    3. '```' → logprob: -5.099827766418457
    4. ',' → logprob: -5.974827766418457
    5. '+' → logprob: -6.974827766418457
    6. '-j' → logprob: -7.849827766418457
    7. '-h' → logprob: -8.349827766418457
    8. ')-' → logprob: -8.474827766418457
    9. '[j' → logprob: -8.849827766418457
    10. '``' → logprob: -9.974827766418457

Token 951: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0459251403808594
    2. ' -' → logprob: -1.0459251403808594
    3. ',' → logprob: -1.2959251403808594
    4. '```' → logprob: -3.9209251403808594
    5. ')-' → logprob: -6.920925140380859
    6. '+' → logprob: -7.170925140380859
    7. ')' → logprob: -7.170925140380859
    8. ',j' → logprob: -8.04592514038086
    9. ' ,' → logprob: -8.29592514038086
    10. '``' → logprob: -8.79592514038086

Token 952: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004996428731828928
    2. '0' → logprob: -6.379996299743652
    3. ' ' → logprob: -6.504996299743652
    4. '2' → logprob: -7.254996299743652
    5. '```' → logprob: -7.379996299743652
    6. 'j' → logprob: -8.879996299743652
    7. ' j' → logprob: -9.504996299743652
    8. ')' → logprob: -9.504996299743652
    9. '7' → logprob: -10.004996299743652
    10. '(' → logprob: -10.129996299743652

Token 953: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13861531019210815
    2. ')' → logprob: -2.513615369796753
    3. ' -' → logprob: -3.638615369796753
    4. '-' → logprob: -4.013615131378174
    5. ' ,' → logprob: -5.763615131378174
    6. ' )' → logprob: -8.013615608215332
    7. '```' → logprob: -8.388615608215332
    8. ')-' → logprob: -8.763615608215332
    9. '+' → logprob: -9.263615608215332
    10. '),' → logprob: -9.888615608215332

Token 954: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.20142006874084473
    2. ' mod' → logprob: -1.7014200687408447
    3. '(mod' → logprob: -12.826419830322266
    4. '```' → logprob: -12.951419830322266
    5. ')' → logprob: -14.451419830322266
    6. '	mod' → logprob: -14.826419830322266
    7. ' ' → logprob: -15.826419830322266
    8. '_mod' → logprob: -16.076419830322266
    9. ' -' → logprob: -16.326419830322266
    10. '``' → logprob: -16.451419830322266

Token 955: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6386740207672119
    2. ' -' → logprob: -0.8886740207672119
    3. ')' → logprob: -2.888674020767212
    4. '```' → logprob: -5.513673782348633
    5. ',' → logprob: -7.263673782348633
    6. ')-' → logprob: -8.638673782348633
    7. '()' → logprob: -10.013673782348633
    8. '``' → logprob: -10.013673782348633
    9. ' )' → logprob: -10.138673782348633
    10. '%' → logprob: -10.513673782348633

Token 956: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018089536752086133
    2. ' ' → logprob: -8.625181198120117
    3. '```' → logprob: -13.750181198120117
    4. '
' → logprob: -16.500181198120117
    5. '   ' → logprob: -17.000181198120117
    6. '2' → logprob: -17.125181198120117
    7. '0' → logprob: -17.375181198120117
    8. ')' → logprob: -17.500181198120117
    9. ',' → logprob: -18.125181198120117
    10. 'mod' → logprob: -18.187681198120117

Token 957: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01475673820823431
    2. ')%' → logprob: -4.264756679534912
    3. '```' → logprob: -8.51475715637207
    4. ')
' → logprob: -8.76475715637207
    5. ' )' → logprob: -9.38975715637207
    6. ',' → logprob: -10.01475715637207
    7. '%' → logprob: -10.76475715637207
    8. '))' → logprob: -11.26475715637207
    9. '')' → logprob: -11.38975715637207
    10. '+' → logprob: -11.51475715637207

Token 958: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5018000602722168
    2. ')' → logprob: -1.2518000602722168
    3. '```' → logprob: -2.501800060272217
    4. ')%' → logprob: -4.376800060272217
    5. '%)' → logprob: -5.751800060272217
    6. ' %' → logprob: -5.876800060272217
    7. '<|end|>' → logprob: -6.126800060272217
    8. '%=' → logprob: -6.126800060272217
    9. '``' → logprob: -7.501800060272217
    10. '[' → logprob: -7.626800060272217

Token 959: ' dp' (ID: 21546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6912338733673096
    2. '%' → logprob: -0.9412338733673096
    3. ' %' → logprob: -2.5662338733673096
    4. ')%' → logprob: -4.5662336349487305
    5. '%=' → logprob: -4.8162336349487305
    6. ' %=' → logprob: -5.5662336349487305
    7. '           ' → logprob: -5.9412336349487305
    8. ')
' → logprob: -6.8162336349487305
    9. '               ' → logprob: -6.9412336349487305
    10. '%n' → logprob: -7.1912336349487305

Token 960: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.957014556974173e-05
    2. '```' → logprob: -9.750069618225098
    3. 'i' → logprob: -12.125069618225098
    4. '[' → logprob: -12.625069618225098
    5. '][' → logprob: -14.000069618225098
    6. '``' → logprob: -14.625069618225098
    7. '[
' → logprob: -15.250069618225098
    8. '
' → logprob: -16.12506866455078
    9. '[user' → logprob: -16.25006866455078
    10. '<|end|>' → logprob: -16.25006866455078

Token 961: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10081201791763306
    2. '[i' → logprob: -2.3508119583129883
    3. '[id' → logprob: -8.225811958312988
    4. '[' → logprob: -8.350811958312988
    5. ']' → logprob: -10.850811958312988
    6. '```' → logprob: -11.225811958312988
    7. ')[' → logprob: -11.350811958312988
    8. '   ' → logprob: -11.475811958312988
    9. 'i' → logprob: -11.725811958312988
    10. '"][' → logprob: -12.225811958312988

Token 962: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0019574174657464027
    2. 'i' → logprob: -6.751957416534424
    3. 'comp' → logprob: -7.376957416534424
    4. '[id' → logprob: -9.501957893371582
    5. ''id' → logprob: -10.626957893371582
    6. '"id' → logprob: -11.126957893371582
    7. '[' → logprob: -11.626957893371582
    8. 'idx' → logprob: -11.751957893371582
    9. ' id' → logprob: -12.001957893371582
    10. '   ' → logprob: -12.251957893371582

Token 963: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.058385204523801804
    2. '[j' → logprob: -3.183385133743286
    3. '][' → logprob: -5.058385372161865
    4. ']%' → logprob: -5.058385372161865
    5. '[i' → logprob: -7.058385372161865
    6. ')' → logprob: -7.058385372161865
    7. '%' → logprob: -8.433384895324707
    8. '[' → logprob: -9.308384895324707
    9. ']+=' → logprob: -9.433384895324707
    10. '```' → logprob: -9.433384895324707

Token 964: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.02510788105428219
    2. ' %=' → logprob: -3.7751078605651855
    3. '%' → logprob: -6.5251078605651855
    4. ')' → logprob: -8.275108337402344
    5. '=' → logprob: -10.025108337402344
    6. '```' → logprob: -10.650108337402344
    7. ')%' → logprob: -11.025108337402344
    8. '+=' → logprob: -11.150108337402344
    9. ']' → logprob: -11.275108337402344
    10. '   ' → logprob: -12.025108337402344

Token 965: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00020509003661572933
    2. ' mod' → logprob: -8.500205039978027
    3. '(mod' → logprob: -13.375205039978027
    4. '```' → logprob: -18.375205993652344
    5. '	mod' → logprob: -18.375205993652344
    6. '
' → logprob: -20.000205993652344
    7. '_mod' → logprob: -20.500205993652344
    8. 'mods' → logprob: -21.250205993652344
    9. ' мод' → logprob: -21.625205993652344
    10. '10' → logprob: -21.625205993652344

Token 966: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4244307279586792
    2. '       ' → logprob: -1.4244307279586792
    3. '<|end|>' → logprob: -2.7994308471679688
    4. '               ' → logprob: -3.9244308471679688
    5. '```' → logprob: -4.299430847167969
    6. '   ' → logprob: -5.674430847167969
    7. ')' → logprob: -6.049430847167969
    8. '
' → logprob: -7.174430847167969
    9. '                       ' → logprob: -7.424430847167969
    10. '+' → logprob: -7.924430847167969

Token 967: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4953751266002655
    2. '           ' → logprob: -1.120375156402588
    3. '```' → logprob: -3.745375156402588
    4. 'for' → logprob: -3.870375156402588
    5. '<|end|>' → logprob: -4.620375156402588
    6. '   ' → logprob: -5.370375156402588
    7. '               ' → logprob: -6.620375156402588
    8. '+' → logprob: -6.620375156402588
    9. 'continue' → logprob: -6.995375156402588
    10. ' for' → logprob: -7.120375156402588

Token 968: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0028632879257202
    2. '       ' → logprob: -1.6278632879257202
    3. '               ' → logprob: -1.7528632879257202
    4. ')' → logprob: -2.5028634071350098
    5. ' for' → logprob: -3.1278634071350098
    6. '<|end|>' → logprob: -3.1278634071350098
    7. '```' → logprob: -3.8778634071350098
    8. 'for' → logprob: -4.00286340713501
    9. '   ' → logprob: -4.50286340713501
    10. ' ' → logprob: -4.87786340713501

Token 969: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -13.875000953674316
    3. '[' → logprob: -16.000001907348633
    4. 'i' → logprob: -16.250001907348633
    5. '[I' → logprob: -17.375001907348633
    6. '\[' → logprob: -17.875001907348633
    7. '[
' → logprob: -19.125001907348633
    8. '[user' → logprob: -19.250001907348633
    9. '][' → logprob: -19.625001907348633
    10. '(i' → logprob: -19.750001907348633

Token 970: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002690840628929436
    2. '[i' → logprob: -8.750268936157227
    3. '[' → logprob: -9.500268936157227
    4. '[id' → logprob: -11.375268936157227
    5. '   ' → logprob: -12.000268936157227
    6. '```' → logprob: -12.000268936157227
    7. ']' → logprob: -12.750268936157227
    8. ' ][' → logprob: -13.500268936157227
    9. 'i' → logprob: -14.125268936157227
    10. '       ' → logprob: -14.250268936157227

Token 971: 'id' (ID: 315)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3133586049079895
    2. 'id' → logprob: -1.3133585453033447
    3. 'j' → logprob: -10.688358306884766
    4. '-' → logprob: -10.813358306884766
    5. 'prev' → logprob: -11.438358306884766
    6. '][' → logprob: -11.688358306884766
    7. 'idx' → logprob: -11.813358306884766
    8. ' i' → logprob: -12.313358306884766
    9. '(i' → logprob: -12.313358306884766
    10. '[i' → logprob: -12.563358306884766

Token 972: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5258474946022034
    2. ']+=' → logprob: -0.9008474946022034
    3. '+=' → logprob: -6.400847434997559
    4. ']=' → logprob: -7.775847434997559
    5. ' +=' → logprob: -8.650847434997559
    6. '=' → logprob: -9.150847434997559
    7. ']+' → logprob: -9.400847434997559
    8. '+' → logprob: -9.650847434997559
    9. '<|end|>' → logprob: -9.775847434997559
    10. ')' → logprob: -10.525847434997559

Token 973: ' +=' (ID: 2757)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.056242816150188446
    2. '+=' → logprob: -3.5562427043914795
    3. ' %=' → logprob: -4.431242942810059
    4. '=' → logprob: -5.181242942810059
    5. ' +=' → logprob: -5.306242942810059
    6. '%' → logprob: -5.806242942810059
    7. '<|end|>' → logprob: -8.306242942810059
    8. ')' → logprob: -9.431242942810059
    9. ' =' → logprob: -9.431242942810059
    10. ']+=' → logprob: -9.681242942810059

Token 974: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5689735412597656
    2. '2' → logprob: -0.9439735412597656
    3. 'dp' → logprob: -3.4439735412597656
    4. '(dp' → logprob: -4.443973541259766
    5. ' (' → logprob: -7.443973541259766
    6. 'pow' → logprob: -8.693973541259766
    7. ' ' → logprob: -9.318973541259766
    8. '0' → logprob: -9.693973541259766
    9. ' dp' → logprob: -9.943973541259766
    10. '1' → logprob: -10.068973541259766

Token 975: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19822320342063904
    2. '(' → logprob: -1.8232232332229614
    3. 'dp' → logprob: -4.448223114013672
    4. '(dp' → logprob: -5.073223114013672
    5. ' (' → logprob: -9.323223114013672
    6. 'pow' → logprob: -9.323223114013672
    7. ' ' → logprob: -10.323223114013672
    8. 'mod' → logprob: -10.448223114013672
    9. '0' → logprob: -10.948223114013672
    10. '((' → logprob: -11.073223114013672

Token 976: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0420476496219635
    2. '<|end|>' → logprob: -3.7920477390289307
    3. '*' → logprob: -4.792047500610352
    4. ' %' → logprob: -5.667047500610352
    5. '%' → logprob: -5.792047500610352
    6. ')' → logprob: -6.042047500610352
    7. '   ' → logprob: -7.792047500610352
    8. '<|end|>' → logprob: -8.542047500610352
    9. '       ' → logprob: -8.792047500610352
    10. '[' → logprob: -9.042047500610352

Token 977: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6601197123527527
    2. '(dp' → logprob: -1.0351197719573975
    3. 'pow' → logprob: -2.2851197719573975
    4. '(pow' → logprob: -4.035119533538818
    5. '(' → logprob: -5.035119533538818
    6. ' (' → logprob: -7.285119533538818
    7. '1' → logprob: -7.785119533538818
    8. ' dp' → logprob: -8.160120010375977
    9. '((' → logprob: -8.285120010375977
    10. '2' → logprob: -9.035120010375977

Token 978: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.2987729102605954e-05
    2. 'i' → logprob: -10.375042915344238
    3. '```' → logprob: -12.500042915344238
    4. '[' → logprob: -12.625042915344238
    5. '[user' → logprob: -13.750042915344238
    6. '_i' → logprob: -14.000042915344238
    7. 'user' → logprob: -14.125042915344238
    8. '   ' → logprob: -15.375042915344238
    9. '(i' → logprob: -15.625042915344238
    10. 'previous' → logprob: -15.750042915344238

Token 979: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2542097568511963
    2. '-' → logprob: -1.5042097568511963
    3. '][' → logprob: -6.754209518432617
    4. 'i' → logprob: -7.004209518432617
    5. '```' → logprob: -9.004209518432617
    6. ' -' → logprob: -10.629209518432617
    7. '[' → logprob: -10.754209518432617
    8. '-i' → logprob: -11.879209518432617
    9. '(i' → logprob: -12.379209518432617
    10. '   ' → logprob: -12.754209518432617

Token 980: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. 'i' → logprob: -10.000051498413086
    3. '```' → logprob: -12.625051498413086
    4. ' ' → logprob: -14.750051498413086
    5. 'prev' → logprob: -14.875051498413086
    6. '-' → logprob: -15.375051498413086
    7. '2' → logprob: -15.437551498413086
    8. '[i' → logprob: -15.562551498413086
    9. '{' → logprob: -16.000051498413086
    10. '[' → logprob: -16.062551498413086

Token 981: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001254693343071267
    2. '][' → logprob: -9.375125885009766
    3. '```' → logprob: -10.375125885009766
    4. 'i' → logprob: -13.000125885009766
    5. '}[' → logprob: -13.500125885009766
    6. '[j' → logprob: -14.125125885009766
    7. '   ' → logprob: -14.125125885009766
    8. '[' → logprob: -14.250125885009766
    9. '[id' → logprob: -14.250125885009766
    10. ')[' → logprob: -14.875125885009766

Token 982: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.018156850710511208
    2. 'i' → logprob: -4.393157005310059
    3. '[id' → logprob: -5.268157005310059
    4. '[i' → logprob: -8.018157005310059
    5. '[' → logprob: -9.143157005310059
    6. 'j' → logprob: -11.143157005310059
    7. 'idx' → logprob: -11.768157005310059
    8. 'comp' → logprob: -12.018157005310059
    9. ' id' → logprob: -13.143157005310059
    10. '[j' → logprob: -13.143157005310059

Token 983: '2' (ID: 17)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11265573650598526
    2. ']%' → logprob: -2.3626556396484375
    3. '[j' → logprob: -5.4876556396484375
    4. '[i' → logprob: -5.6126556396484375
    5. ')' → logprob: -5.8626556396484375
    6. '])' → logprob: -7.1126556396484375
    7. '%' → logprob: -8.112655639648438
    8. ')%' → logprob: -8.362655639648438
    9. '```' → logprob: -8.862655639648438
    10. ']
' → logprob: -9.612655639648438

Token 984: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010197168216109276
    2. ']%' → logprob: -4.635197162628174
    3. '[j' → logprob: -8.385197639465332
    4. ' ]' → logprob: -9.885197639465332
    5. ']
' → logprob: -9.885197639465332
    6. '   ' → logprob: -10.385197639465332
    7. ')' → logprob: -10.510197639465332
    8. '%' → logprob: -10.635197639465332
    9. '       ' → logprob: -11.885197639465332
    10. '```' → logprob: -12.260197639465332

Token 985: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.19379210472106934
    2. '```' → logprob: -1.8187921047210693
    3. ' %' → logprob: -4.818792343139648
    4. ')%' → logprob: -6.693792343139648
    5. '<|end|>' → logprob: -7.443792343139648
    6. '
' → logprob: -7.568792343139648
    7. '``' → logprob: -7.568792343139648
    8. 'dp' → logprob: -7.568792343139648
    9. ')' → logprob: -7.943792343139648
    10. '       ' → logprob: -8.068792343139648

Token 986: ' dp' (ID: 21546)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4451157748699188
    2. '%' → logprob: -1.1951158046722412
    3. 'dp' (adapté à ' dp') → logprob: -4.195115566253662
    4. '           ' → logprob: -4.695115566253662
    5. '       ' → logprob: -4.945115566253662
    6. '(dp' → logprob: -5.070115566253662
    7. '
' → logprob: -5.195115566253662
    8. ' %' → logprob: -6.070115566253662
    9. '``' → logprob: -6.070115566253662
    10. ' dp' → logprob: -6.570115566253662

Token 987: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.625
    3. 'i' → logprob: -16.75
    4. '[' → logprob: -17.625
    5. '[
' → logprob: -19.0
    6. ',i' → logprob: -19.0
    7. '[I' → logprob: -19.625
    8. '(i' → logprob: -20.5
    9. '[][' → logprob: -20.75
    10. '[int' → logprob: -20.75

Token 988: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004652273200917989
    2. '[i' → logprob: -7.750465393066406
    3. '[' → logprob: -10.750465393066406
    4. ']' → logprob: -12.750465393066406
    5. 'i' → logprob: -12.750465393066406
    6. '   ' → logprob: -13.500465393066406
    7. ')[' → logprob: -13.750465393066406
    8. '[id' → logprob: -14.375465393066406
    9. ''][' → logprob: -14.500465393066406
    10. '```' → logprob: -14.500465393066406

Token 989: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.00015920029545668513
    2. 'i' → logprob: -8.75015926361084
    3. '[id' → logprob: -16.000158309936523
    4. 'j' → logprob: -16.125158309936523
    5. ' id' → logprob: -16.250158309936523
    6. ''id' → logprob: -16.875158309936523
    7. '"id' → logprob: -16.875158309936523
    8. '
' → logprob: -17.000158309936523
    9. 'idx' → logprob: -17.250158309936523
    10. ']' → logprob: -17.250158309936523

Token 990: ']' (ID: 60)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.8039165735244751
    2. ')' → logprob: -1.053916573524475
    3. ']' → logprob: -1.803916573524475
    4. ' %=' → logprob: -3.5539164543151855
    5. '%' → logprob: -4.9289164543151855
    6. ')%' → logprob: -6.5539164543151855
    7. '   ' → logprob: -6.5539164543151855
    8. '       ' → logprob: -8.553916931152344
    9. ']%' → logprob: -8.678916931152344
    10. '=' → logprob: -9.928916931152344

Token 991: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.00019889144459739327
    2. ' %=' → logprob: -8.750199317932129
    3. '%' → logprob: -10.125199317932129
    4. '=' → logprob: -16.000198364257812
    5. ')%' → logprob: -16.500198364257812
    6. ')' → logprob: -17.500198364257812
    7. '   ' → logprob: -17.500198364257812
    8. '+=' → logprob: -17.625198364257812
    9. ' ' → logprob: -17.750198364257812
    10. '```' → logprob: -18.000198364257812

Token 992: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.306760805164231e-05
    2. ' mod' → logprob: -11.25001335144043
    3. '(mod' → logprob: -17.12501335144043
    4. '	mod' → logprob: -20.37501335144043
    5. '```' → logprob: -21.37501335144043
    6. '_mod' → logprob: -22.00001335144043
    7. 'moder' → logprob: -22.12501335144043
    8. 'mods' → logprob: -22.50001335144043
    9. 'modal' → logprob: -22.62501335144043
    10. '
' → logprob: -22.87501335144043

Token 993: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0229557752609253
    2. '       ' → logprob: -1.1479557752609253
    3. '```' → logprob: -1.3979557752609253
    4. '<|end|>' → logprob: -4.272955894470215
    5. 'continue' → logprob: -4.647955894470215
    6. '	continue' → logprob: -4.772955894470215
    7. '	return' → logprob: -4.772955894470215
    8. 'for' → logprob: -5.022955894470215
    9. 'return' → logprob: -5.022955894470215
    10. '
' → logprob: -5.272955894470215

Token 994: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31898394227027893
    2. '       ' → logprob: -1.4439839124679565
    3. 'for' → logprob: -3.818984031677246
    4. '           ' → logprob: -5.443984031677246
    5. '```' → logprob: -5.943984031677246
    6. '[' → logprob: -6.068984031677246
    7. ' for' → logprob: -6.193984031677246
    8. 'return' → logprob: -7.443984031677246
    9. ')' → logprob: -7.568984031677246
    10. '+' → logprob: -7.693984031677246

Token 995: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005591244902461767
    2. '   ' → logprob: -5.50559139251709
    3. 'result' → logprob: -7.50559139251709
    4. '```' → logprob: -7.50559139251709
    5. 'res' → logprob: -9.00559139251709
    6. 'for' → logprob: -9.50559139251709
    7. 'dp' → logprob: -9.50559139251709
    8. 'ret' → logprob: -10.13059139251709
    9. ' return' → logprob: -10.25559139251709
    10. 'if' → logprob: -11.13059139251709

Token 996: ' Calcul' (ID: 57243)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029917098581790924
    2. 'res' → logprob: -4.654917240142822
    3. 'result' → logprob: -4.654917240142822
    4. 'max' → logprob: -4.779917240142822
    5. 'ret' → logprob: -7.279917240142822
    6. 'answer' → logprob: -7.779917240142822
    7. 'ans' → logprob: -8.404916763305664
    8. 'last' → logprob: -8.904916763305664
    9. '   ' → logprob: -9.029916763305664
    10. 'dp' → logprob: -9.529916763305664

Token 997: ' final' (ID: 1721)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3537319302558899
    2. 'final' → logprob: -1.8537318706512451
    3. 'res' → logprob: -3.103731870651245
    4. 'er' → logprob: -3.478731870651245
    5. 'total' → logprob: -4.353732109069824
    6. '   ' → logprob: -4.603732109069824
    7. '_result' → logprob: -4.978732109069824
    8. '#' → logprob: -5.103732109069824
    9. ' result' → logprob: -5.228732109069824
    10. 'return' → logprob: -5.228732109069824

Token 998: ' de' (ID: 334)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16439887881278992
    2. 'result' → logprob: -2.1643989086151123
    3. 'res' → logprob: -3.4143989086151123
    4. '   ' → logprob: -6.289398670196533
    5. 'answer' → logprob: -6.789398670196533
    6. 'ret' → logprob: -7.414398670196533
    7. 'ans' → logprob: -8.789399147033691
    8. '```' → logprob: -9.914399147033691
    9. ' return' → logprob: -10.039399147033691
    10. 'total' → logprob: -10.789399147033691

Token 999: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6868863105773926
    2. 'result' → logprob: -1.0618863105773926
    3. 'return' → logprob: -3.0618863105773926
    4. 'dp' → logprob: -3.0618863105773926
    5. 'res' → logprob: -3.3118863105773926
    6. 'max' → logprob: -4.811886310577393
    7. 'ans' → logprob: -5.436886310577393
    8. 'answer' → logprob: -5.436886310577393
    9. 'rés' → logprob: -6.936886310577393
    10. '(sum' → logprob: -7.561886310577393

Token 1000: ' réponse' (ID: 50332)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.8405221104621887
    2. 'result' → logprob: -1.340522050857544
    3. 'return' → logprob: -1.590522050857544
    4. 'answer' → logprob: -3.215522050857544
    5. 'ré' → logprob: -3.590522050857544
    6. 's' → logprob: -3.715522050857544
    7. 'res' → logprob: -5.715522289276123
    8. 'solution' → logprob: -5.965522289276123
    9. 'ret' → logprob: -6.465522289276123
    10. 'val' → logprob: -6.840522289276123

Token 1001: ' pour' (ID: 1930)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.30051037669181824
    2. 'result' → logprob: -2.0505104064941406
    3. 'res' → logprob: -2.1755104064941406
    4. 'ret' → logprob: -4.925510406494141
    5. 'answer' → logprob: -5.425510406494141
    6. '   ' → logprob: -5.675510406494141
    7. 'ans' → logprob: -6.925510406494141
    8. '```' → logprob: -7.425510406494141
    9. 'total' → logprob: -8.67551040649414
    10. ' return' → logprob: -8.67551040649414

Token 1002: ' cette' (ID: 7696)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13754497468471527
    2. 'return' → logprob: -3.012544870376587
    3. 'dp' → logprob: -3.262544870376587
    4. 'N' → logprob: -4.387545108795166
    5. 'la' → logprob: -4.637545108795166
    6. 'h' → logprob: -4.637545108795166
    7. 'le' → logprob: -5.262545108795166
    8. 'l' → logprob: -6.887545108795166
    9. 'j' → logprob: -7.512545108795166
    10. 'n' → logprob: -8.512544631958008

Token 1003: ' portion' (ID: 19137)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0875639095902443
    2. 'sé' → logprob: -3.837563991546631
    3. '
' → logprob: -4.212563991546631
    4. '   ' → logprob: -4.712563991546631
    5. '#' → logprob: -4.962563991546631
    6. 'sub' → logprob: -5.212563991546631
    7. 'sequence' → logprob: -5.337563991546631
    8. 'def' → logprob: -5.337563991546631
    9. 'fonction' → logprob: -5.337563991546631
    10. '```' → logprob: -5.837563991546631

Token 1004: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14222264289855957
    2. 'result' → logprob: -2.3922226428985596
    3. 'res' → logprob: -4.0172224044799805
    4. 'answer' → logprob: -4.0172224044799805
    5. '   ' → logprob: -5.8922224044799805
    6. 'ans' → logprob: -6.6422224044799805
    7. 'ret' → logprob: -7.2672224044799805
    8. '
' → logprob: -8.64222240447998
    9. ' return' → logprob: -9.26722240447998
    10. '```' → logprob: -10.64222240447998

Token 1005: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0340091809630394
    2. 'result' → logprob: -4.034008979797363
    3. '   ' → logprob: -4.784008979797363
    4. 'res' → logprob: -5.659008979797363
    5. 'answer' → logprob: -6.034008979797363
    6. 'ret' → logprob: -7.409008979797363
    7. ' return' → logprob: -7.784008979797363
    8. 'ans' → logprob: -7.909008979797363
    9. '```' → logprob: -10.159008979797363
    10. 'r' → logprob: -11.159008979797363

Token 1006: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12956051528453827
    2. 'res' → logprob: -2.7545604705810547
    3. 'result' → logprob: -3.0045604705810547
    4. 'answer' → logprob: -6.004560470581055
    5. 'ret' → logprob: -6.129560470581055
    6. 'ans' (adapté à ' ans') → logprob: -6.379560470581055
    7. '   ' → logprob: -6.504560470581055
    8. ' return' → logprob: -8.254560470581055
    9. '```' → logprob: -9.254560470581055
    10. '
' → logprob: -10.129560470581055

Token 1007: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34905508160591125
    2. '=' → logprob: -1.2240550518035889
    3. '   ' → logprob: -7.474055290222168
    4. '[' → logprob: -11.474055290222168
    5. '_' → logprob: -11.474055290222168
    6. '=[' → logprob: -12.599055290222168
    7. 's' → logprob: -13.474055290222168
    8. '    ' → logprob: -13.599055290222168
    9. '_=' → logprob: -13.599055290222168
    10. '```' → logprob: -13.599055290222168

Token 1008: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.374438613653183
    2. 'dp' → logprob: -1.3744386434555054
    3. 'sum' → logprob: -2.874438524246216
    4. '(dp' → logprob: -6.624438762664795
    5. ' dp' → logprob: -7.374438762664795
    6. '(' → logprob: -7.749438762664795
    7. ' sum' → logprob: -8.374438285827637
    8. '(sum' → logprob: -9.499438285827637
    9. ' ' → logprob: -9.749438285827637
    10. 'max' → logprob: -9.749438285827637

Token 1009: '0' (ID: 15)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11944787949323654
    2. 'sum' → logprob: -2.494447946548462
    3. '0' → logprob: -4.369447708129883
    4. 'max' → logprob: -4.494447708129883
    5. '(dp' → logprob: -5.369447708129883
    6. '(' → logprob: -6.994447708129883
    7. '(sum' → logprob: -8.244447708129883
    8. '(max' → logprob: -9.244447708129883
    9. 'pow' → logprob: -9.494447708129883
    10. '2' → logprob: -9.619447708129883

Token 1010: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022826088592410088
    2. ' for' → logprob: -4.022826194763184
    3. '   ' → logprob: -5.647826194763184
    4. '
' → logprob: -6.897826194763184
    5. '[' → logprob: -9.647826194763184
    6. '	for' → logprob: -10.272826194763184
    7. '    
' → logprob: -11.647826194763184
    8. '```' → logprob: -12.022826194763184
    9. 'ans' → logprob: -12.147826194763184
    10. '[i' → logprob: -13.647826194763184

Token 1011: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006484676618129015
    2. ' for' → logprob: -5.131484508514404
    3. '   ' → logprob: -7.756484508514404
    4. 'ans' → logprob: -9.631484985351562
    5. '```' → logprob: -10.506484985351562
    6. '
' → logprob: -10.756484985351562
    7. '	for' → logprob: -11.506484985351562
    8. ')' → logprob: -13.756484985351562
    9. '    
' → logprob: -14.131484985351562
    10. '[' → logprob: -14.881484985351562

Token 1012: ' id' (ID: 1211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.236549335066229e-05
    2. '   ' → logprob: -11.875021934509277
    3. ' for' → logprob: -11.875021934509277
    4. 'ans' → logprob: -12.250021934509277
    5. 'i' → logprob: -13.250021934509277
    6. '
' → logprob: -13.750021934509277
    7. '```' → logprob: -14.125021934509277
    8. 'j' → logprob: -17.875022888183594
    9. '``' → logprob: -18.375022888183594
    10. 'answer' → logprob: -18.625022888183594

Token 1013: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018414702266454697
    2. ' =' → logprob: -4.018414497375488
    3. 'for' → logprob: -8.393414497375488
    4. ')' → logprob: -12.018414497375488
    5. '=
' → logprob: -12.143414497375488
    6. '[' → logprob: -12.393414497375488
    7. '=len' → logprob: -12.393414497375488
    8. ' in' → logprob: -12.643414497375488
    9. 'in' → logprob: -12.768414497375488
    10. 's' → logprob: -12.768414497375488

Token 1014: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.1334591507911682
    2. 'len' → logprob: -2.1334590911865234
    3. ' comp' → logprob: -5.383459091186523
    4. ' len' → logprob: -6.383459091186523
    5. '0' → logprob: -8.758459091186523
    6. 'com' → logprob: -10.508459091186523
    7. 'N' → logprob: -11.258459091186523
    8. 'dp' → logprob: -12.258459091186523
    9. 'max' → logprob: -12.633459091186523
    10. 'range' → logprob: -12.758459091186523

Token 1015: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.0003576304006855935
    2. 'h' → logprob: -8.000357627868652
    3. '(h' → logprob: -11.125357627868652
    4. 'H' → logprob: -13.125357627868652
    5. '[' → logprob: -13.375357627868652
    6. '```' → logprob: -13.750357627868652
    7. '=h' → logprob: -14.500357627868652
    8. '[a' → logprob: -14.625357627868652
    9. 'a' → logprob: -14.875357627868652
    10. '_h' → logprob: -15.250357627868652

Token 1016: '[-' (ID: 17503)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0157233364880085
    2. 'i' → logprob: -4.76572322845459
    3. '[-' → logprob: -5.76572322845459
    4. '[N' → logprob: -5.76572322845459
    5. '[' → logprob: -7.64072322845459
    6. '[n' → logprob: -9.14072322845459
    7. ']' → logprob: -9.26572322845459
    8. 'N' → logprob: -9.89072322845459
    9. '[len' → logprob: -11.14072322845459
    10. '```' → logprob: -11.14072322845459

Token 1017: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004495989065617323
    2. '1' → logprob: -5.504496097564697
    3. '(-' → logprob: -8.629495620727539
    4. '[-' → logprob: -9.879495620727539
    5. '```' → logprob: -9.879495620727539
    6. ' -' → logprob: -10.629495620727539
    7. ']-' → logprob: -10.754495620727539
    8. '])' → logprob: -10.879495620727539
    9. ']' → logprob: -11.004495620727539
    10. '(' → logprob: -11.129495620727539

Token 1018: ']]
' (ID: 29446)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.26099589467048645
    2. ']' → logprob: -1.510995864868164
    3. ']]
' → logprob: -5.260995864868164
    4. '[-' → logprob: -5.760995864868164
    5. '])
' → logprob: -8.385995864868164
    6. ']]' → logprob: -8.635995864868164
    7. '])' → logprob: -9.885995864868164
    8. ')]
' → logprob: -10.010995864868164
    9. '()]
' → logprob: -10.760995864868164
    10. ')]' → logprob: -11.010995864868164

Token 1019: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000850605487357825
    2. ' for' → logprob: -7.125850677490234
    3. '```' → logprob: -10.625850677490234
    4. 'ans' → logprob: -11.750850677490234
    5. '   ' → logprob: -11.750850677490234
    6. '
' → logprob: -13.000850677490234
    7. ')' → logprob: -14.000850677490234
    8. '<|end|>' → logprob: -14.375850677490234
    9. '[' → logprob: -14.500850677490234
    10. '	for' → logprob: -14.625850677490234

Token 1020: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.233804303221405e-05
    2. 'ans' → logprob: -9.375092506408691
    3. ' for' → logprob: -12.000092506408691
    4. '```' → logprob: -13.875092506408691
    5. '[' → logprob: -15.750092506408691
    6. '+' → logprob: -16.750091552734375
    7. 'dp' → logprob: -17.000091552734375
    8. '(ans' → logprob: -17.500091552734375
    9. '   ' → logprob: -18.000091552734375
    10. '
' → logprob: -18.125091552734375

Token 1021: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005358263850212097
    2. 'i' → logprob: -5.2553582191467285
    3. ' j' → logprob: -9.005358695983887
    4. ' i' → logprob: -13.880358695983887
    5. 'ans' → logprob: -14.880358695983887
    6. 'x' → logprob: -15.505358695983887
    7. 'k' → logprob: -16.13035774230957
    8. '```' → logprob: -16.25535774230957
    9. '_j' → logprob: -17.00535774230957
    10. 'val' → logprob: -17.13035774230957

Token 1022: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08897239714860916
    2. ' in' → logprob: -2.463972330093384
    3. 'id' → logprob: -11.338972091674805
    4. '```' → logprob: -12.088972091674805
    5. '0' → logprob: -12.463972091674805
    6. 'range' → logprob: -12.588972091674805
    7. ' ' → logprob: -13.088972091674805
    8. '   ' → logprob: -13.713972091674805
    9. ')' → logprob: -13.963972091674805
    10. 'i' → logprob: -14.213972091674805

Token 1023: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000320565392030403
    2. 'dp' → logprob: -8.125320434570312
    3. ' range' → logprob: -10.625320434570312
    4. '[' → logprob: -16.125320434570312
    5. 'data' → logprob: -17.250320434570312
    6. '(range' → logprob: -17.250320434570312
    7. 're' → logprob: -17.875320434570312
    8. '0' → logprob: -17.875320434570312
    9. '```' → logprob: -18.375320434570312
    10. '   ' → logprob: -18.500320434570312

Token 1024: '(' (ID: 7)
  Prédit: '(id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.00173337128944695
    2. '(len' → logprob: -6.751733303070068
    3. '(' → logprob: -7.501733303070068
    4. 'id' → logprob: -12.126733779907227
    5. '(ans' → logprob: -12.626733779907227
    6. '[id' → logprob: -14.126733779907227
    7. '0' → logprob: -15.126733779907227
    8. 'len' → logprob: -15.251733779907227
    9. '(dp' → logprob: -15.376733779907227
    10. '(i' → logprob: -15.626733779907227

Token 1025: '0' (ID: 15)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.012032504193484783
    2. '0' → logprob: -4.512032508850098
    3. 'len' → logprob: -7.012032508850098
    4. '1' → logprob: -10.262032508850098
    5. ' id' → logprob: -10.762032508850098
    6. '(id' → logprob: -11.137032508850098
    7. 'ans' → logprob: -11.637032508850098
    8. 'dp' → logprob: -13.012032508850098
    9. '[id' → logprob: -15.012032508850098
    10. ' ' → logprob: -15.137032508850098

Token 1026: ',' (ID: 11)
  Prédit: '(id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.05127956345677376
    2. '(len' → logprob: -3.3012795448303223
    3. 'id' → logprob: -4.801279544830322
    4. 'len' → logprob: -6.051279544830322
    5. '[id' → logprob: -6.551279544830322
    6. '(' → logprob: -7.176279544830322
    7. '(ans' → logprob: -9.55128002166748
    8. '   ' → logprob: -9.80128002166748
    9. '0' → logprob: -9.92628002166748
    10. 'ans' → logprob: -10.17628002166748

Token 1027: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -5.991464786347933e-05
    2. ' id' → logprob: -9.750060081481934
    3. 'ans' → logprob: -13.750060081481934
    4. 'len' → logprob: -15.125060081481934
    5. '(id' → logprob: -16.375059127807617
    6. '   ' → logprob: -17.375059127807617
    7. '0' → logprob: -18.250059127807617
    8. '	id' → logprob: -18.375059127807617
    9. '
' → logprob: -18.625059127807617
    10. '1' → logprob: -18.625059127807617

Token 1028: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000241085872403346
    2. ' +' → logprob: -8.37524127960205
    3. '):
' → logprob: -12.00024127960205
    4. '):' → logprob: -13.50024127960205
    5. ']+' → logprob: -14.12524127960205
    6. '```' → logprob: -14.50024127960205
    7. '   ' → logprob: -15.00024127960205
    8. '+
' → logprob: -15.12524127960205
    9. '[' → logprob: -15.25024127960205
    10. '()+' → logprob: -15.50024127960205

Token 1029: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.078619360923767
    2. 'ans' → logprob: -1.078619360923767
    3. '   ' → logprob: -1.328619360923767
    4. ' ans' → logprob: -3.4536194801330566
    5. '```' → logprob: -4.203619480133057
    6. '	ans' → logprob: -5.328619480133057
    7. '(ans' → logprob: -5.703619480133057
    8. '``' → logprob: -9.703619003295898
    9. '_ans' → logprob: -9.953619003295898
    10. '+' → logprob: -10.078619003295898

Token 1030: ' low' (ID: 4465)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0025956344325095415
    2. '(ans' → logprob: -6.1275954246521
    3. '```' → logprob: -8.252595901489258
    4. ' ans' → logprob: -9.002595901489258
    5. '	ans' → logprob: -10.877595901489258
    6. '_ans' → logprob: -13.002595901489258
    7. '``' → logprob: -13.002595901489258
    8. '   ' → logprob: -13.502595901489258
    9. 'dp' → logprob: -14.002595901489258
    10. 'anst' → logprob: -14.627595901489258

Token 1031: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.3834071159362793
    2. ']+=' → logprob: -1.3834071159362793
    3. '+' → logprob: -2.0084071159362793
    4. ' +=' → logprob: -2.2584071159362793
    5. ']' → logprob: -2.7584071159362793
    6. '=' → logprob: -3.1334071159362793
    7. '][' → logprob: -3.1334071159362793
    8. '       ' → logprob: -3.8834071159362793
    9. 'dp' → logprob: -4.133407115936279
    10. ']+' → logprob: -4.383407115936279

Token 1032: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.030007222667336464
    2. ' data' → logprob: -3.5300071239471436
    3. '0' → logprob: -8.905007362365723
    4. 'a' → logprob: -9.530007362365723
    5. 'comp' → logprob: -10.155007362365723
    6. '   ' → logprob: -12.780007362365723
    7. ' a' → logprob: -13.530007362365723
    8. ' comp' → logprob: -13.530007362365723
    9. ' ' → logprob: -13.905007362365723
    10. '	data' → logprob: -14.405007362365723

Token 1033: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000649529043585062
    2. '[j' → logprob: -7.375649452209473
    3. 'i' → logprob: -10.750649452209473
    4. '[' → logprob: -14.000649452209473
    5. '```' → logprob: -15.375649452209473
    6. 'j' → logprob: -15.875649452209473
    7. '[
' → logprob: -16.00065040588379
    8. '(i' → logprob: -16.37565040588379
    9. '{i' → logprob: -17.25065040588379
    10. ' [' → logprob: -18.00065040588379

Token 1034: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6982810497283936
    2. ']' → logprob: -0.9482810497283936
    3. '+' → logprob: -2.6982810497283936
    4. ']+' → logprob: -3.0732810497283936
    5. ' +' → logprob: -7.073281288146973
    6. '       ' → logprob: -8.323281288146973
    7. '-' → logprob: -8.573281288146973
    8. '   ' → logprob: -9.073281288146973
    9. ']
' → logprob: -10.573281288146973
    10. ' -' → logprob: -10.823281288146973

Token 1035: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03214661404490471
    2. '```' → logprob: -3.657146692276001
    3. 'pow' → logprob: -6.282146453857422
    4. '
' → logprob: -7.032146453857422
    5. '+' → logprob: -7.157146453857422
    6. '   ' → logprob: -8.032146453857422
    7. '           ' → logprob: -8.032146453857422
    8. '        ' → logprob: -8.157146453857422
    9. ' for' → logprob: -8.407146453857422
    10. ',' → logprob: -8.532146453857422

Token 1036: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' (adapté à ' up') → logprob: -0.11183356493711472
    2. '       ' → logprob: -2.6118335723876953
    3. 'pow' → logprob: -4.361833572387695
    4. 'ans' → logprob: -4.486833572387695
    5. '```' → logprob: -5.111833572387695
    6. 'dp' → logprob: -7.236833572387695
    7. '           ' → logprob: -7.361833572387695
    8. ' up' → logprob: -8.486833572387695
    9. 'for' → logprob: -8.611833572387695
    10. 'low' → logprob: -8.861833572387695

Token 1037: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4933560788631439
    2. ' =' → logprob: -0.9933561086654663
    3. '+' → logprob: -3.9933559894561768
    4. ']' → logprob: -8.868355751037598
    5. '```' → logprob: -9.118355751037598
    6. ' +' → logprob: -9.368355751037598
    7. ',' → logprob: -9.618355751037598
    8. 'data' → logprob: -9.618355751037598
    9. '+
' → logprob: -9.743355751037598
    10. '=data' → logprob: -10.368355751037598

Token 1038: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.20147034525871277
    2. ' data' → logprob: -1.7014703750610352
    3. '[data' → logprob: -11.326470375061035
    4. '
' → logprob: -11.951470375061035
    5. '(data' → logprob: -12.076470375061035
    6. '   ' → logprob: -12.201470375061035
    7. '{
' → logprob: -12.576470375061035
    8. '```' → logprob: -12.826470375061035
    9. 'i' → logprob: -12.951470375061035
    10. 'h' → logprob: -12.951470375061035

Token 1039: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.392202976712724e-06
    2. '```' → logprob: -12.875006675720215
    3. '[
' → logprob: -13.375006675720215
    4. 'i' → logprob: -13.625006675720215
    5. '[j' → logprob: -14.375006675720215
    6. '[' → logprob: -15.250006675720215
    7. '``' → logprob: -17.1250057220459
    8. '{i' → logprob: -17.1250057220459
    9. '
' → logprob: -18.0000057220459
    10. '(i' → logprob: -18.7500057220459

Token 1040: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02159067615866661
    2. ']+' → logprob: -4.021590709686279
    3. ']' → logprob: -5.771590709686279
    4. ' +' → logprob: -8.396590232849121
    5. '+
' → logprob: -10.146590232849121
    6. '```' → logprob: -10.396590232849121
    7. '+i' → logprob: -11.646590232849121
    8. '[i' → logprob: -12.021590232849121
    9. 'i' → logprob: -13.271590232849121
    10. ')+' → logprob: -13.521590232849121

Token 1041: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13070592284202576
    2. '+' → logprob: -2.1307058334350586
    3. ']+' → logprob: -5.880705833435059
    4. '```' → logprob: -8.255705833435059
    5. ']' → logprob: -8.505705833435059
    6. 'j' → logprob: -8.755705833435059
    7. 'i' → logprob: -8.880705833435059
    8. ' ' → logprob: -9.505705833435059
    9. ' +' → logprob: -10.130705833435059
    10. '+
' → logprob: -10.380705833435059

Token 1042: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016318924725055695
    2. ']+' → logprob: -4.5163187980651855
    3. '+' → logprob: -5.7663187980651855
    4. ' -' → logprob: -7.5163187980651855
    5. ' +' → logprob: -7.6413187980651855
    6. ']
' → logprob: -7.8913187980651855
    7. ' ]' → logprob: -8.141319274902344
    8. '-' → logprob: -8.516319274902344
    9. '```' → logprob: -9.391319274902344
    10. ']-' → logprob: -9.516319274902344

Token 1043: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.40861114859580994
    2. '       ' → logprob: -1.5336111783981323
    3. '```' → logprob: -2.7836110591888428
    4. ' +' → logprob: -3.7836110591888428
    5. ')' → logprob: -4.158611297607422
    6. '<|end|>' → logprob: -4.658611297607422
    7. '           ' → logprob: -5.158611297607422
    8. ',' → logprob: -7.533611297607422
    9. '=' → logprob: -7.658611297607422
    10. '               ' → logprob: -7.908611297607422

Token 1044: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4418171455617994e-05
    2. ' ' → logprob: -10.125044822692871
    3. '```' → logprob: -12.750044822692871
    4. '+' → logprob: -13.750044822692871
    5. '<|end|>' → logprob: -15.375044822692871
    6. ' ' → logprob: -17.250043869018555
    7. '   ' → logprob: -17.500043869018555
    8. '``' → logprob: -18.125043869018555
    9. '
' → logprob: -18.500043869018555
    10. '...' → logprob: -18.875043869018555

Token 1045: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -17.625
    4. '<|end|>' → logprob: -17.875
    5. '
' → logprob: -19.5
    6. '۱' → logprob: -20.75
    7. '   ' → logprob: -21.875
    8. '0' → logprob: -22.25
    9. '+' → logprob: -22.5
    10. '2' → logprob: -22.5

Token 1046: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007335194852203131
    2. '```' → logprob: -6.132335186004639
    3. ')' → logprob: -6.382335186004639
    4. '           ' → logprob: -6.757335186004639
    5. '<|end|>' → logprob: -7.007335186004639
    6. '=' → logprob: -7.757335186004639
    7. '   ' → logprob: -8.507335662841797
    8. '+' → logprob: -8.757335662841797
    9. ':' → logprob: -9.132335662841797
    10. ',' → logprob: -9.257335662841797

Token 1047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1380634605884552
    2. '```' → logprob: -2.388063430786133
    3. '           ' → logprob: -3.513063430786133
    4. 'for' → logprob: -5.638063430786133
    5. ' for' → logprob: -6.138063430786133
    6. '   ' → logprob: -7.138063430786133
    7. 'dp' → logprob: -7.638063430786133
    8. '``' → logprob: -8.263063430786133
    9. ' dp' → logprob: -10.638063430786133
    10. '[' → logprob: -11.013063430786133

Token 1048: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.5193880200386047
    2. '       ' → logprob: -1.64438796043396
    3. 'dp' → logprob: -2.01938796043396
    4. '```' → logprob: -2.64438796043396
    5. 'for' → logprob: -5.144388198852539
    6. '(ans' → logprob: -6.519388198852539
    7. '   ' → logprob: -7.769388198852539
    8. ' ans' → logprob: -8.894388198852539
    9. '``' → logprob: -9.269388198852539
    10. '(dp' → logprob: -9.894388198852539

Token 1049: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5504931211471558
    2. ' +=' → logprob: -0.9254931211471558
    3. '=' → logprob: -4.050493240356445
    4. '```' → logprob: -5.175493240356445
    5. ' =' → logprob: -6.050493240356445
    6. '   ' → logprob: -7.675493240356445
    7. '+' → logprob: -7.675493240356445
    8. ']+=' → logprob: -8.050493240356445
    9. '+=(' → logprob: -9.050493240356445
    10. ')' → logprob: -9.550493240356445

Token 1050: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008066141046583652
    2. '(dp' → logprob: -4.883066177368164
    3. ' dp' → logprob: -7.758066177368164
    4. '(' → logprob: -10.883066177368164
    5. '   ' → logprob: -12.383066177368164
    6. ' (' → logprob: -12.508066177368164
    7. '	dp' → logprob: -13.008066177368164
    8. 'pow' → logprob: -13.133066177368164
    9. '((' → logprob: -14.883066177368164
    10. 'ans' → logprob: -15.258066177368164

Token 1051: '[N' (ID: 49776)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.015364883467555046
    2. 'i' → logprob: -4.515364646911621
    3. '[len' → logprob: -5.640364646911621
    4. '[-' → logprob: -7.640364646911621
    5. 'len' → logprob: -9.140364646911621
    6. '[N' → logprob: -9.640364646911621
    7. '```' → logprob: -9.765364646911621
    8. '[' → logprob: -11.140364646911621
    9. '[n' → logprob: -11.140364646911621
    10. '   ' → logprob: -12.515364646911621

Token 1052: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010175921022891998
    2. '[N' → logprob: -5.135175704956055
    3. '-' → logprob: -6.260175704956055
    4. '[' → logprob: -6.760175704956055
    5. 'i' → logprob: -7.760175704956055
    6. '][' → logprob: -8.260175704956055
    7. '[I' → logprob: -8.635175704956055
    8. '```' → logprob: -8.760175704956055
    9. '[-' → logprob: -9.885175704956055
    10. '   ' → logprob: -11.135175704956055

Token 1053: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033522743615321815
    2. '2' → logprob: -8.625335693359375
    3. '0' → logprob: -9.250335693359375
    4. '```' → logprob: -10.750335693359375
    5. '-' → logprob: -11.250335693359375
    6. '
' → logprob: -12.187835693359375
    7. ' ' → logprob: -12.687835693359375
    8. 'for' → logprob: -13.000335693359375
    9. 'i' → logprob: -13.125335693359375
    10. '   ' → logprob: -13.312835693359375

Token 1054: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.32274341583251953
    2. '[i' → logprob: -1.3227434158325195
    3. '[j' → logprob: -5.0727434158325195
    4. '[' → logprob: -6.1977434158325195
    5. '[id' → logprob: -8.07274341583252
    6. '```' → logprob: -8.94774341583252
    7. '[s' → logprob: -9.69774341583252
    8. '       ' → logprob: -9.82274341583252
    9. ']' → logprob: -9.82274341583252
    10. '   ' → logprob: -10.32274341583252

Token 1055: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01815076172351837
    2. 'j' → logprob: -4.018150806427002
    3. '```' → logprob: -15.143150329589844
    4. '   ' → logprob: -15.268150329589844
    5. ' i' → logprob: -15.393150329589844
    6. '[i' → logprob: -16.893150329589844
    7. '(i' → logprob: -17.768150329589844
    8. ' j' → logprob: -18.768150329589844
    9. '       ' → logprob: -18.768150329589844
    10. '	i' → logprob: -19.018150329589844

Token 1056: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003373694489710033
    2. ']*' → logprob: -8.125337600708008
    3. '*' → logprob: -10.875337600708008
    4. ' *' → logprob: -12.250337600708008
    5. '```' → logprob: -12.375337600708008
    6. ' ]' → logprob: -12.375337600708008
    7. '[' → logprob: -13.375337600708008
    8. '][' → logprob: -13.625337600708008
    9. '[j' → logprob: -13.625337600708008
    10. ']
' → logprob: -13.625337600708008

Token 1057: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07471941411495209
    2. '*' → logprob: -2.9497194290161133
    3. '*(' → logprob: -4.574719429016113
    4. '       ' → logprob: -4.949719429016113
    5. '```' → logprob: -6.699719429016113
    6. '           ' → logprob: -7.699719429016113
    7. '   ' → logprob: -8.324719429016113
    8. ')' → logprob: -9.199719429016113
    9. '
' → logprob: -9.699719429016113
    10. ' *(' → logprob: -10.824719429016113

Token 1058: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00634206086397171
    2. '(pow' → logprob: -5.131341934204102
    3. ' pow' → logprob: -8.256341934204102
    4. ' (' → logprob: -9.256341934204102
    5. '(' → logprob: -10.631341934204102
    6. '((' → logprob: -10.881341934204102
    7. '(p' → logprob: -11.381341934204102
    8. '   ' → logprob: -14.006341934204102
    9. '
' → logprob: -14.006341934204102
    10. '```' → logprob: -14.131341934204102

Token 1059: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2113979209971149e-05
    2. '(
' → logprob: -12.000012397766113
    3. '2' → logprob: -12.375012397766113
    4. ' (' → logprob: -14.375012397766113
    5. '<|end|>' → logprob: -14.500012397766113
    6. '```' → logprob: -14.875012397766113
    7. '(pow' → logprob: -15.500012397766113
    8. '((' → logprob: -17.750011444091797
    9. '(

' → logprob: -18.000011444091797
    10. '()' → logprob: -18.375011444091797

Token 1060: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003811025235336274
    2. '(' → logprob: -7.875380992889404
    3. '```' → logprob: -14.875381469726562
    4. ' ' → logprob: -15.125381469726562
    5. 'pow' → logprob: -15.500381469726562
    6. '   ' → logprob: -16.250381469726562
    7. '       ' → logprob: -17.375381469726562
    8. '(pow' → logprob: -17.500381469726562
    9. '
' → logprob: -18.750381469726562
    10. '(
' → logprob: -18.750381469726562

Token 1061: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026270456612110138
    2. '(' → logprob: -4.276270389556885
    3. '(h' → logprob: -4.526270389556885
    4. '(up' → logprob: -7.026270389556885
    5. ',h' → logprob: -8.401270866394043
    6. '(
' → logprob: -10.651270866394043
    7. '```' → logprob: -10.651270866394043
    8. ',
' → logprob: -11.026270866394043
    9. 'up' → logprob: -12.026270866394043
    10. 'h' → logprob: -12.151270866394043

Token 1062: ' h' (ID: 312)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.4283348619937897
    2. 'h' → logprob: -1.1783348321914673
    3. '(h' → logprob: -4.178334712982178
    4. '(up' → logprob: -4.178334712982178
    5. ' h' → logprob: -5.803334712982178
    6. ' up' → logprob: -6.053334712982178
    7. ' (' → logprob: -6.053334712982178
    8. '(' → logprob: -6.428334712982178
    9. '-up' → logprob: -8.428335189819336
    10. '   ' → logprob: -9.178335189819336

Token 1063: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.018642429262399673
    2. '[i' → logprob: -4.768642425537109
    3. '[N' → logprob: -4.768642425537109
    4. '[' → logprob: -6.893642425537109
    5. '```' → logprob: -8.39364242553711
    6. '-' → logprob: -9.14364242553711
    7. '[len' → logprob: -10.51864242553711
    8. '``' → logprob: -10.51864242553711
    9. '   ' → logprob: -11.01864242553711
    10. '[
' → logprob: -11.14364242553711

Token 1064: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05653193220496178
    2. '-' → logprob: -2.9315319061279297
    3. '[-' → logprob: -7.05653190612793
    4. '(-' → logprob: -8.05653190612793
    5. '(' → logprob: -8.30653190612793
    6. '2' → logprob: -9.30653190612793
    7. ']' → logprob: -10.43153190612793
    8. ']-' → logprob: -10.80653190612793
    9. ' -' → logprob: -10.93153190612793
    10. '[' → logprob: -11.30653190612793

Token 1065: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6652265191078186
    2. ']-' → logprob: -0.9152265191078186
    3. ' -' → logprob: -3.290226459503174
    4. '-id' → logprob: -3.540226459503174
    5. '-low' → logprob: -4.915226459503174
    6. ']' → logprob: -5.415226459503174
    7. '-up' → logprob: -5.415226459503174
    8. '-i' → logprob: -6.415226459503174
    9. '[-' → logprob: -7.415226459503174
    10. ')-' → logprob: -9.665226936340332

Token 1066: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.1797696202993393
    2. 'low' → logprob: -1.8047696352005005
    3. ' low' → logprob: -11.179769515991211
    4. ' up' → logprob: -12.429769515991211
    5. '   ' → logprob: -13.554769515991211
    6. '(low' → logprob: -13.679769515991211
    7. 'u' → logprob: -14.179769515991211
    8. '(up' → logprob: -14.929769515991211
    9. '	up' → logprob: -15.054769515991211
    10. 'upl' → logprob: -15.179769515991211

Token 1067: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023321842309087515
    2. '+' → logprob: -8.75023365020752
    3. ' ,' → logprob: -9.87523365020752
    4. ',
' → logprob: -11.75023365020752
    5. '```' → logprob: -11.87523365020752
    6. ' +' → logprob: -13.37523365020752
    7. '
' → logprob: -13.50023365020752
    8. '-' → logprob: -13.50023365020752
    9. '           ' → logprob: -13.87523365020752
    10. '       ' → logprob: -14.00023365020752

Token 1068: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.20141363143920898
    2. ' mod' → logprob: -1.701413631439209
    3. '(mod' → logprob: -15.076414108276367
    4. '```' → logprob: -17.826414108276367
    5. '	mod' → logprob: -17.951414108276367
    6. ' modul' → logprob: -18.826414108276367
    7. ' modular' → logprob: -19.076414108276367
    8. '_mod' → logprob: -19.326414108276367
    9. '2' → logprob: -19.326414108276367
    10. ')' → logprob: -19.451414108276367

Token 1069: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00485528027638793
    2. ')' → logprob: -5.754855155944824
    3. '       ' → logprob: -7.254855155944824
    4. ' ,' → logprob: -7.254855155944824
    5. '           ' → logprob: -9.129855155944824
    6. '   ' → logprob: -9.379855155944824
    7. '               ' → logprob: -10.254855155944824
    8. '                   ' → logprob: -12.004855155944824
    9. '```' → logprob: -12.504855155944824
    10. ')
' → logprob: -12.754855155944824

Token 1070: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9596540331840515
    2. '(ans' → logprob: -1.4596540927886963
    3. '       ' → logprob: -1.7096540927886963
    4. '```' → logprob: -2.7096540927886963
    5. ')' → logprob: -2.9596540927886963
    6. 'ans' → logprob: -3.2096540927886963
    7. '
' → logprob: -3.8346540927886963
    8. ' ans' → logprob: -4.959653854370117
    9. ' %' → logprob: -5.459653854370117
    10. '           ' → logprob: -5.709653854370117

Token 1071: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7289338707923889
    2. '(p' → logprob: -0.7289338707923889
    3. '(pow' → logprob: -3.353933811187744
    4. '(' → logprob: -9.353934288024902
    5. '((' → logprob: -9.728934288024902
    6. '(pr' → logprob: -11.353934288024902
    7. '(pp' → logprob: -11.478934288024902
    8. '   ' → logprob: -11.603934288024902
    9. '(po' → logprob: -12.603934288024902
    10. '(py' → logprob: -12.853934288024902

Token 1072: 'pow' (ID: 30304)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.05904503911733627
    2. '(p' → logprob: -3.3090450763702393
    3. 'pow' → logprob: -3.9340450763702393
    4. ' (' → logprob: -6.80904483795166
    5. '(' → logprob: -9.93404483795166
    6. ' pow' → logprob: -10.43404483795166
    7. '```' → logprob: -10.80904483795166
    8. '
' → logprob: -12.55904483795166
    9. '`' → logprob: -12.80904483795166
    10. '.pow' → logprob: -12.93404483795166

Token 1073: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.9153885558771435e-06
    2. '```' → logprob: -12.500005722045898
    3. '2' → logprob: -13.500005722045898
    4. '(
' → logprob: -14.750005722045898
    5. '<|end|>' → logprob: -15.375005722045898
    6. ' (' → logprob: -16.1250057220459
    7. '1' → logprob: -17.3750057220459
    8. '((' → logprob: -17.5000057220459
    9. '0' → logprob: -18.8750057220459
    10. '4' → logprob: -19.1250057220459

Token 1074: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000182921823579818
    2. '(' → logprob: -8.62518310546875
    3. ' ' → logprob: -12.87518310546875
    4. '```' → logprob: -14.50018310546875
    5. '   ' → logprob: -17.75018310546875
    6. ' (' → logprob: -17.75018310546875
    7. '
' → logprob: -18.25018310546875
    8. '(
' → logprob: -18.37518310546875
    9. 'pow' → logprob: -18.50018310546875
    10. '0' → logprob: -18.50018310546875

Token 1075: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007903180085122585
    2. ',' → logprob: -4.882903099060059
    3. '(up' → logprob: -8.507903099060059
    4. '```' → logprob: -10.382903099060059
    5. '(i' → logprob: -10.507903099060059
    6. ' (' → logprob: -11.007903099060059
    7. '2' → logprob: -11.632903099060059
    8. '(
' → logprob: -12.507903099060059
    9. '(pow' → logprob: -13.757903099060059
    10. '
' → logprob: -14.132903099060059

Token 1076: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.004574430640786886
    2. '(up' → logprob: -5.879574298858643
    3. '(' → logprob: -6.754574298858643
    4. ' up' → logprob: -7.629574298858643
    5. ' (' → logprob: -9.6295747756958
    6. '
' → logprob: -11.1295747756958
    7. '   ' → logprob: -12.1295747756958
    8. '```' → logprob: -12.2545747756958
    9. '2' → logprob: -12.5045747756958
    10. '1' → logprob: -12.6295747756958

Token 1077: '-low' (ID: 115392)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2714659869670868
    2. '-low' → logprob: -2.521466016769409
    3. ' -' → logprob: -2.771466016769409
    4. '[i' → logprob: -3.021466016769409
    5. '-i' → logprob: -3.146466016769409
    6. 'i' → logprob: -6.27146577835083
    7. '[-' → logprob: -8.021466255187988
    8. '[' → logprob: -8.521466255187988
    9. '```' → logprob: -8.646466255187988
    10. '
' → logprob: -9.271466255187988

Token 1078: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023095356300473213
    2. ' +' → logprob: -8.75023078918457
    3. '```' → logprob: -9.87523078918457
    4. ',' → logprob: -11.00023078918457
    5. '()+' → logprob: -12.75023078918457
    6. '``' → logprob: -14.75023078918457
    7. '+,' → logprob: -15.12523078918457
    8. '[' → logprob: -15.25023078918457
    9. '+j' → logprob: -15.87523078918457
    10. '-' → logprob: -16.00023078918457

Token 1079: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030673449859023094
    2. '+' → logprob: -3.5306735038757324
    3. '0' → logprob: -7.655673503875732
    4. '```' → logprob: -7.905673503875732
    5. '-' → logprob: -10.405673027038574
    6. ' ' → logprob: -11.280673027038574
    7. '(' → logprob: -11.530673027038574
    8. '``' → logprob: -11.780673027038574
    9. ' +' → logprob: -12.155673027038574
    10. '`' → logprob: -12.780673027038574

Token 1080: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000181372175575234
    2. '-' → logprob: -9.625181198120117
    3. ')' → logprob: -10.125181198120117
    4. ' ,' → logprob: -10.125181198120117
    5. ' -' → logprob: -11.250181198120117
    6. '```' → logprob: -11.625181198120117
    7. '),' → logprob: -12.500181198120117
    8. '(mod' → logprob: -13.000181198120117
    9. '(),' → logprob: -13.125181198120117
    10. 'mod' → logprob: -13.750181198120117

Token 1081: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.612634362885728e-05
    2. ' mod' → logprob: -9.500076293945312
    3. '(mod' → logprob: -13.875076293945312
    4. '```' → logprob: -15.500076293945312
    5. '	mod' → logprob: -16.875076293945312
    6. '0' → logprob: -17.625076293945312
    7. '
' → logprob: -18.250076293945312
    8. 'm' → logprob: -18.500076293945312
    9. '_mod' → logprob: -18.625076293945312
    10. ')' → logprob: -18.875076293945312

Token 1082: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8180578351020813
    2. ')' → logprob: -1.3180577754974365
    3. ')-' → logprob: -1.9430577754974365
    4. ' -' → logprob: -2.1930577754974365
    5. ',' → logprob: -3.4430577754974365
    6. '()-' → logprob: -6.068058013916016
    7. '()' → logprob: -7.193058013916016
    8. '```' → logprob: -7.818058013916016
    9. ')-(' → logprob: -9.193058013916016
    10. ' )' → logprob: -9.318058013916016

Token 1083: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3183409571647644
    2. ' -' → logprob: -1.3183410167694092
    3. ')' → logprob: -5.44334077835083
    4. ')-' → logprob: -7.69334077835083
    5. ',' → logprob: -8.943341255187988
    6. '()-' → logprob: -9.193341255187988
    7. ' )' → logprob: -11.568341255187988
    8. '```' → logprob: -11.568341255187988
    9. '-)' → logprob: -11.943341255187988
    10. ' ' → logprob: -12.193341255187988

Token 1084: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. '```' → logprob: -12.500005722045898
    3. ' ' → logprob: -13.125005722045898
    4. '<|end|>' → logprob: -16.1250057220459
    5. '0' → logprob: -16.5000057220459
    6. '   ' → logprob: -16.6250057220459
    7. 'mod' → logprob: -17.3750057220459
    8. ')' → logprob: -17.7500057220459
    9. '
' → logprob: -18.0000057220459
    10. '...' → logprob: -18.1250057220459

Token 1085: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. '```' → logprob: -12.000006675720215
    3. ' ' → logprob: -14.750006675720215
    4. '
' → logprob: -15.000006675720215
    5. '<|end|>' → logprob: -16.37500762939453
    6. '0' → logprob: -16.87500762939453
    7. '...' → logprob: -17.62500762939453
    8. ')' → logprob: -17.75000762939453
    9. 'mod' → logprob: -18.12500762939453
    10. '   ' → logprob: -18.25000762939453

Token 1086: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030693374574184418
    2. ')
' → logprob: -6.1280694007873535
    3. '       ' → logprob: -7.6280694007873535
    4. '   ' → logprob: -8.253068923950195
    5. '```' → logprob: -9.753068923950195
    6. ')%' → logprob: -10.628068923950195
    7. ')+' → logprob: -11.628068923950195
    8. '           ' → logprob: -11.753068923950195
    9. ' )' → logprob: -11.753068923950195
    10. ')\' → logprob: -12.503068923950195

Token 1087: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38948825001716614
    2. '```' → logprob: -1.5144882202148438
    3. ')' → logprob: -2.6394882202148438
    4. '
' → logprob: -4.889488220214844
    5. 'ans' → logprob: -4.889488220214844
    6. '``' → logprob: -5.764488220214844
    7. '(ans' → logprob: -5.764488220214844
    8. '       ' → logprob: -6.139488220214844
    9. ')
' → logprob: -6.389488220214844
    10. ' %' → logprob: -6.639488220214844

Token 1088: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.09741298854351044
    2. '%=' → logprob: -3.5974130630493164
    3. '```' → logprob: -3.7224130630493164
    4. '%' → logprob: -3.8474130630493164
    5. '=' → logprob: -5.222413063049316
    6. '(ans' → logprob: -5.222413063049316
    7. ' ans' → logprob: -6.097413063049316
    8. ')' → logprob: -6.097413063049316
    9. '       ' → logprob: -6.347413063049316
    10. '
' → logprob: -7.222413063049316

Token 1089: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.005185254849493504
    2. '%' → logprob: -5.505185127258301
    3. ' %=' → logprob: -6.880185127258301
    4. ')' → logprob: -10.5051851272583
    5. '+=' → logprob: -10.6301851272583
    6. ')%' → logprob: -11.6301851272583
    7. '   ' → logprob: -12.1301851272583
    8. '```' → logprob: -12.2551851272583
    9. '=' → logprob: -12.6301851272583
    10. '	' → logprob: -14.0051851272583

Token 1090: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.320199877838604e-07
    2. ' mod' → logprob: -14.75
    3. '(mod' → logprob: -20.125
    4. '	mod' → logprob: -22.5
    5. '
' → logprob: -23.625
    6. '   ' → logprob: -24.75
    7. 'MOD' → logprob: -24.75
    8. '_mod' → logprob: -25.125
    9. 'Mod' → logprob: -26.0
    10. '```' → logprob: -26.125

Token 1091: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7641153335571289
    2. '```' → logprob: -1.764115333557129
    3. 'for' → logprob: -2.139115333557129
    4. ')' → logprob: -2.139115333557129
    5. '       ' → logprob: -2.639115333557129
    6. '+' → logprob: -4.014115333557129
    7. '<|end|>' → logprob: -4.889115333557129
    8. '
' → logprob: -5.139115333557129
    9. ' for' → logprob: -5.389115333557129
    10. '[' → logprob: -5.514115333557129

Token 1092: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7466977834701538
    2. 'for' → logprob: -1.3716977834701538
    3. '   ' → logprob: -2.2466979026794434
    4. 'ans' → logprob: -2.3716979026794434
    5. '       ' → logprob: -3.8716979026794434
    6. '+' → logprob: -4.246697902679443
    7. ' for' → logprob: -4.371697902679443
    8. ')' → logprob: -4.996697902679443
    9. '``' → logprob: -5.121697902679443
    10. '(ans' → logprob: -5.871697902679443

Token 1093: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.3336198031902313
    2. 'for' → logprob: -1.3336198329925537
    3. 'dp' → logprob: -4.208619594573975
    4. 'if' → logprob: -5.583619594573975
    5. '   ' → logprob: -6.833619594573975
    6. '```' → logprob: -8.083620071411133
    7. 'id' → logprob: -9.583620071411133
    8. 'return' → logprob: -10.333620071411133
    9. '(ans' → logprob: -11.458620071411133
    10. ' for' → logprob: -12.083620071411133

Token 1094: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17524461448192596
    2. ' +=' → logprob: -1.9252445697784424
    3. '=' → logprob: -4.6752448081970215
    4. '```' → logprob: -6.9252448081970215
    5. '%=' → logprob: -7.0502448081970215
    6. '%' → logprob: -7.0502448081970215
    7. '   ' → logprob: -7.1752448081970215
    8. '[' → logprob: -7.1752448081970215
    9. '+' → logprob: -7.3002448081970215
    10. ']+=' → logprob: -8.675244331359863

Token 1095: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.019972270354628563
    2. '2' → logprob: -4.144972324371338
    3. '(' → logprob: -6.394972324371338
    4. '(dp' → logprob: -6.769972324371338
    5. ' dp' → logprob: -6.894972324371338
    6. ' ' → logprob: -10.01997184753418
    7. '   ' → logprob: -10.89497184753418
    8. ' (' → logprob: -11.26997184753418
    9. 'pow' → logprob: -11.51997184753418
    10. 'sum' → logprob: -12.26997184753418

Token 1096: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.051027439534664154
    2. '2' → logprob: -3.801027536392212
    3. '(' → logprob: -4.176027297973633
    4. '(dp' → logprob: -4.426027297973633
    5. 'sum' → logprob: -10.676027297973633
    6. ' dp' → logprob: -10.926027297973633
    7. 'pow' → logprob: -10.926027297973633
    8. ' (' → logprob: -13.176027297973633
    9. '((' → logprob: -13.176027297973633
    10. '   ' → logprob: -13.301027297973633

Token 1097: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.17984481155872345
    2. ' *' → logprob: -1.804844856262207
    3. '*(' → logprob: -9.429844856262207
    4. '*[' → logprob: -11.554844856262207
    5. '   ' → logprob: -12.929844856262207
    6. '[' → logprob: -13.054844856262207
    7. '```' → logprob: -13.679844856262207
    8. '**' → logprob: -14.179844856262207
    9. 'dp' → logprob: -14.429844856262207
    10. '*object' → logprob: -14.804844856262207

Token 1098: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.3319124011322856e-05
    2. ' dp' → logprob: -10.875022888183594
    3. '(dp' → logprob: -12.625022888183594
    4. 'ans' → logprob: -15.125022888183594
    5. '	dp' → logprob: -15.250022888183594
    6. 'pow' → logprob: -15.375022888183594
    7. '   ' → logprob: -16.375022888183594
    8. 'mod' → logprob: -17.125022888183594
    9. '(' → logprob: -17.875022888183594
    10. 'd' → logprob: -18.125022888183594

Token 1099: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -2.975612187583465e-05
    2. 'N' → logprob: -10.625029563903809
    3. '[n' → logprob: -13.000029563903809
    4. '```' → logprob: -14.125029563903809
    5. '[-' → logprob: -14.250029563903809
    6. '[len' → logprob: -14.375029563903809
    7. '[i' → logprob: -14.500029563903809
    8. '[' → logprob: -14.750029563903809
    9. '(N' → logprob: -16.875030517578125
    10. 'len' → logprob: -17.125030517578125

Token 1100: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0018621186027303338
    2. '[N' → logprob: -6.626862049102783
    3. '[-' → logprob: -8.126862525939941
    4. 'N' → logprob: -8.751862525939941
    5. '2' → logprob: -9.751862525939941
    6. '[' → logprob: -11.501862525939941
    7. ' -' → logprob: -12.626862525939941
    8. 'len' → logprob: -13.001862525939941
    9. '```' → logprob: -13.376862525939941
    10. '
' → logprob: -13.501862525939941

Token 1101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018206365406513214
    2. '-' → logprob: -4.018206596374512
    3. '1' → logprob: -11.393206596374512
    4. '
' → logprob: -11.393206596374512
    5. 'len' → logprob: -11.393206596374512
    6. ' -' → logprob: -12.268206596374512
    7. 'N' → logprob: -12.268206596374512
    8. '...' → logprob: -12.893206596374512
    9. '```' → logprob: -12.893206596374512
    10. ' ' → logprob: -13.393206596374512

Token 1102: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11945835500955582
    2. '[id' → logprob: -2.2444584369659424
    3. '][' → logprob: -5.244458198547363
    4. '[idx' → logprob: -7.869458198547363
    5. ')[' → logprob: -8.369458198547363
    6. '[data' → logprob: -8.744458198547363
    7. '   ' → logprob: -9.619458198547363
    8. '[ind' → logprob: -9.744458198547363
    9. '[class' → logprob: -9.869458198547363
    10. '[len' → logprob: -9.869458198547363

Token 1103: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.22112901508808136
    2. 'comp' → logprob: -1.721129059791565
    3. 'N' → logprob: -4.096128940582275
    4. '[N' → logprob: -6.471128940582275
    5. '[' → logprob: -6.971128940582275
    6. '[id' → logprob: -8.721129417419434
    7. 'data' → logprob: -9.971129417419434
    8. '   ' → logprob: -10.096129417419434
    9. 'com' → logprob: -10.221129417419434
    10. '(N' → logprob: -11.221129417419434

Token 1104: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023814730811864138
    2. ']%' → logprob: -6.502381324768066
    3. '[id' → logprob: -8.252381324768066
    4. '][' → logprob: -8.377381324768066
    5. '[i' → logprob: -8.627381324768066
    6. ']
' → logprob: -9.252381324768066
    7. '[' → logprob: -10.002381324768066
    8. '   ' → logprob: -11.377381324768066
    9. '```' → logprob: -11.627381324768066
    10. '%' → logprob: -11.877381324768066

Token 1105: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38886740803718567
    2. '```' → logprob: -1.5138673782348633
    3. '   ' → logprob: -2.5138673782348633
    4. '``' → logprob: -5.388867378234863
    5. ')%' → logprob: -5.513867378234863
    6. 'ans' → logprob: -5.513867378234863
    7. ')' → logprob: -6.263867378234863
    8. '(ans' → logprob: -6.638867378234863
    9. '%=' → logprob: -6.763867378234863
    10. '
' → logprob: -6.763867378234863

Token 1106: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.5391055345535278
    2. '```' → logprob: -0.9141055345535278
    3. '%' → logprob: -5.289105415344238
    4. '(ans' → logprob: -5.664105415344238
    5. '``' → logprob: -6.164105415344238
    6. '   ' → logprob: -6.164105415344238
    7. ' ans' → logprob: -6.914105415344238
    8. '	ans' → logprob: -7.039105415344238
    9. '%=' → logprob: -7.539105415344238
    10. ' %=' → logprob: -8.289105415344238

Token 1107: ' %=' (ID: 117035)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2643760144710541
    2. '%=' → logprob: -1.5143760442733765
    3. ' %=' → logprob: -4.514376163482666
    4. '   ' → logprob: -6.889376163482666
    5. ')%' → logprob: -9.014375686645508
    6. ' %' → logprob: -9.514375686645508
    7. ')' → logprob: -9.764375686645508
    8. 'return' → logprob: -10.139375686645508
    9. '%
' → logprob: -10.764375686645508
    10. '()%' → logprob: -11.014375686645508

Token 1108: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.054500666621607e-06
    2. ' mod' → logprob: -12.75000286102295
    3. '(mod' → logprob: -17.250003814697266
    4. '```' → logprob: -18.000003814697266
    5. '
' → logprob: -18.875003814697266
    6. '0' → logprob: -19.375003814697266
    7. '	mod' → logprob: -19.500003814697266
    8. '10' → logprob: -19.625003814697266
    9. '   ' → logprob: -20.500003814697266
    10. '`' → logprob: -21.000003814697266

Token 1109: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0054237195290625095
    2. 'return' → logprob: -5.255423545837402
    3. '```' → logprob: -8.880423545837402
    4. ' return' → logprob: -10.755423545837402
    5. '	return' → logprob: -10.880423545837402
    6. '    
' → logprob: -12.005423545837402
    7. '
' → logprob: -13.130423545837402
    8. ':return' → logprob: -14.255423545837402
    9. '       ' → logprob: -14.755423545837402
    10. '<|end|>' → logprob: -15.005423545837402

Token 1110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01740737073123455
    2. 'return' → logprob: -4.267407417297363
    3. '```' → logprob: -5.767407417297363
    4. ' return' → logprob: -9.892407417297363
    5. '    
' → logprob: -10.517407417297363
    6. '	return' → logprob: -11.017407417297363
    7. '``' → logprob: -12.267407417297363
    8. '
' → logprob: -12.642407417297363
    9. ':return' → logprob: -13.142407417297363
    10. '<|end|>' → logprob: -13.392407417297363

Token 1111: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.050442174077034
    2. '   ' → logprob: -3.0504422187805176
    3. '```' → logprob: -6.300442218780518
    4. ' return' → logprob: -11.17544174194336
    5. '	return' → logprob: -13.30044174194336
    6. '``' → logprob: -14.17544174194336
    7. ':return' → logprob: -14.30044174194336
    8. '{return' → logprob: -15.67544174194336
    9. 'Return' → logprob: -16.42544174194336
    10. '    
' → logprob: -16.67544174194336

Token 1112: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011073531582951546
    2. ' ans' → logprob: -4.511073589324951
    3. '(ans' → logprob: -10.886073112487793
    4. '   ' → logprob: -12.386073112487793
    5. '	ans' → logprob: -13.636073112487793
    6. 'dp' → logprob: -14.386073112487793
    7. '0' → logprob: -14.636073112487793
    8. 'mod' → logprob: -15.636073112487793
    9. 'answer' → logprob: -16.01107406616211
    10. '_ans' → logprob: -16.13607406616211

Token 1113: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1114: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1115: ' Pr' (ID: 2284)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.091996431350708
    2. '#' → logprob: -1.466996431350708
    3. 'parts' → logprob: -2.091996431350708
    4. 'if' → logprob: -2.341996431350708
    5. 'def' → logprob: -2.716996431350708
    6. 'pos' → logprob: -3.716996431350708
    7. 'res' → logprob: -3.716996431350708
    8. 'rest' → logprob: -4.091996192932129
    9. 'h' → logprob: -4.466996192932129
    10. 'idx' → logprob: -4.591996192932129

Token 1116: 'ise' (ID: 1096)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016181817278265953
    2. '#' → logprob: -4.391181945800781
    3. 'e' → logprob: -7.141181945800781
    4. 'ef' → logprob: -7.266181945800781
    5. 'é' → logprob: -8.016181945800781
    6. 'em' → logprob: -8.266181945800781
    7. 'ed' → logprob: -8.516181945800781
    8. 'esent' → logprob: -8.891181945800781
    9. 'edict' → logprob: -9.016181945800781
    10. 'éd' → logprob: -9.641181945800781

Token 1117: ' en' (ID: 469)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.7898159623146057
    2. 'input' → logprob: -1.414815902709961
    3. 'mod' → logprob: -2.539815902709961
    4. '_of' → logprob: -3.164815902709961
    5. '#' → logprob: -3.664815902709961
    6. 'de' → logprob: -4.414815902709961
    7. 'off' → logprob: -4.414815902709961
    8. 'while' → logprob: -4.414815902709961
    9. '=input' → logprob: -4.414815902709961
    10. 'en' → logprob: -4.539815902709961

Token 1118: ' compte' (ID: 19657)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4650929272174835
    2. 'comp' → logprob: -1.7150928974151611
    3. 'charge' → logprob: -1.9650928974151611
    4. 'entrée' → logprob: -3.840092897415161
    5. 'account' → logprob: -4.34009313583374
    6. 'com' → logprob: -5.71509313583374
    7. ' compte' → logprob: -5.96509313583374
    8. 'entry' → logprob: -6.09009313583374
    9. '```' → logprob: -6.21509313583374
    10. 'count' → logprob: -6.34009313583374

Token 1119: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6757761836051941
    2. 'H' → logprob: -1.6757762432098389
    3. 'de' → logprob: -2.675776243209839
    4. 'def' → logprob: -2.675776243209839
    5. 'of' → logprob: -2.800776243209839
    6. 'if' → logprob: -3.300776243209839
    7. '_' → logprob: -3.925776243209839
    8. '#' → logprob: -3.925776243209839
    9. 'des' → logprob: -4.55077600479126
    10. '
' → logprob: -5.55077600479126

Token 1120: ' portions' (ID: 34833)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1256976127624512
    2. 'indices' → logprob: -1.3756976127624512
    3. 'positions' → logprob: -1.6256976127624512
    4. 'ones' → logprob: -2.375697612762451
    5. '#' → logprob: -2.750697612762451
    6. '_' → logprob: -4.125697612762451
    7. 'H' → logprob: -4.750697612762451
    8. 'segments' → logprob: -5.125697612762451
    9. 'if' → logprob: -5.500697612762451
    10. 'one' → logprob: -5.625697612762451

Token 1121: ' sépar' (ID: 97160)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.0413556098937988
    2. 'rest' → logprob: -1.4163556098937988
    3. 'de' → logprob: -2.416355609893799
    4. 'of' → logprob: -3.041355609893799
    5. '#' → logprob: -3.291355609893799
    6. 'def' → logprob: -3.541355609893799
    7. '=' → logprob: -3.666355609893799
    8. 'for' → logprob: -3.916355609893799
    9. 'pos' → logprob: -3.916355609893799
    10. 'indices' → logprob: -4.041355609893799

Token 1122: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.00048262736527249217
    2. 'és' → logprob: -8.375482559204102
    3. 'ée' → logprob: -8.375482559204102
    4. 'é' → logprob: -11.250482559204102
    5. '```' → logprob: -12.875482559204102
    6. 'es' → logprob: -13.750482559204102
    7. 'par' → logprob: -13.875482559204102
    8. 'ated' → logprob: -14.125482559204102
    9. 'ees' → logprob: -14.500482559204102
    10. 'É' → logprob: -14.500482559204102

Token 1123: ' par' (ID: 686)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6364906430244446
    2. 'pos' → logprob: -2.1364905834198
    3. 'positions' → logprob: -2.3864905834198
    4. '#' → logprob: -3.0114905834198
    5. 'rest' → logprob: -3.5114905834198
    6. 'def' → logprob: -3.6364905834198
    7. 'prev' → logprob: -3.7614905834198
    8. 'par' → logprob: -4.136490821838379
    9. 'res' → logprob: -4.386490821838379
    10. 'parts' → logprob: -4.386490821838379

Token 1124: ' les' (ID: 1341)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.036875877529382706
    2. 'les' → logprob: -3.7868759632110596
    3. 'des' → logprob: -5.1618757247924805
    4. 'un' → logprob: -5.6618757247924805
    5. 'l' → logprob: -7.0368757247924805
    6. '```' → logprob: -7.6618757247924805
    7. 'indices' → logprob: -7.9118757247924805
    8. '#' → logprob: -8.28687572479248
    9. 'positions' → logprob: -8.28687572479248
    10. 'i' → logprob: -8.53687572479248

Token 1125: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024987291544675827
    2. 'H' → logprob: -7.502498626708984
    3. '#' → logprob: -7.627498626708984
    4. '`' → logprob: -7.877498626708984
    5. '```' → logprob: -7.877498626708984
    6. '[' → logprob: -8.252498626708984
    7. 'ones' → logprob: -9.377498626708984
    8. '``' → logprob: -9.752498626708984
    9. '
' → logprob: -9.877498626708984
    10. '_' → logprob: -9.877498626708984

Token 1126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002636006975080818
    2. ' ' → logprob: -8.375263214111328
    3. '```' → logprob: -11.125263214111328
    4. '`' → logprob: -11.750263214111328
    5. '[' → logprob: -12.000263214111328
    6. 's' → logprob: -13.375263214111328
    7. '
' → logprob: -14.625263214111328
    8. ' ones' → logprob: -14.750263214111328
    9. 'print' → logprob: -14.875263214111328
    10. '_' → logprob: -15.500263214111328

Token 1127: ''' (ID: 6)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.43147793412208557
    2. 'positions' → logprob: -1.8064779043197632
    3. 'pos' → logprob: -2.6814780235290527
    4. 'parts' → logprob: -3.0564780235290527
    5. 'prev' → logprob: -4.056478023529053
    6. 'start' → logprob: -4.306478023529053
    7. 'sections' → logprob: -4.431478023529053
    8. 'last' → logprob: -5.431478023529053
    9. 'def' → logprob: -5.806478023529053
    10. '```' → logprob: -6.056478023529053

Token 1128: ' dans' (ID: 2671)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.40915611386299133
    2. 'positions' → logprob: -1.784156084060669
    3. 'parts' → logprob: -2.409156084060669
    4. 'pos' → logprob: -3.659156084060669
    5. 'sections' → logprob: -3.784156084060669
    6. 'prev' → logprob: -5.034156322479248
    7. '```' → logprob: -5.284156322479248
    8. 'start' → logprob: -6.284156322479248
    9. 'sub' → logprob: -6.284156322479248
    10. 'indices' → logprob: -6.284156322479248

Token 1129: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.002725821454077959
    2. 'la' → logprob: -6.252725601196289
    3. '#' → logprob: -7.377725601196289
    4. 'l' → logprob: -10.002725601196289
    5. 'le' → logprob: -10.002725601196289
    6. 'the' → logprob: -10.127725601196289
    7. 'range' → logprob: -11.252725601196289
    8. 'def' → logprob: -12.127725601196289
    9. 'les' → logprob: -12.502725601196289
    10. '
' → logprob: -12.502725601196289

Token 1130: '
' (ID: 198)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.5875300765037537
    2. 'positions' → logprob: -1.5875301361083984
    3. 'parts' → logprob: -1.8375301361083984
    4. 'pos' → logprob: -3.4625301361083984
    5. 'sections' → logprob: -4.712530136108398
    6. 'indices' → logprob: -4.962530136108398
    7. 'prev' → logprob: -5.337530136108398
    8. 'res' → logprob: -5.337530136108398
    9. 'result' → logprob: -5.712530136108398
    10. 'port' → logprob: -5.837530136108398

Token 1131: 'ans' (ID: 616)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.5255810022354126
    2. 'parts' → logprob: -1.7755810022354126
    3. 'positions' → logprob: -2.025580883026123
    4. 'pos' → logprob: -3.400580883026123
    5. 'res' → logprob: -3.525580883026123
    6. 'result' → logprob: -4.025580883026123
    7. 'sections' → logprob: -5.275580883026123
    8. '```' → logprob: -5.525580883026123
    9. 'port' → logprob: -5.775580883026123
    10. 'prev' → logprob: -5.900580883026123

Token 1132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142532885074615
    2. '=' → logprob: -1.701425313949585
    3. ',' → logprob: -11.451425552368164
    4. 's' → logprob: -15.201425552368164
    5. '＝' → logprob: -15.451425552368164
    6. '_' → logprob: -16.076425552368164
    7. ' +=' → logprob: -16.201425552368164
    8. '=int' → logprob: -16.326425552368164
    9. '_=' → logprob: -16.576425552368164
    10. '=[]' → logprob: -16.826425552368164

Token 1133: ' pow' (ID: 9779)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. '0' → logprob: -11.250019073486328
    3. ' ' → logprob: -12.250019073486328
    4. '```' → logprob: -14.125019073486328
    5. 'mod' → logprob: -16.125019073486328
    6. '   ' → logprob: -16.625019073486328
    7. '[' → logprob: -17.375019073486328
    8. '[]' → logprob: -17.375019073486328
    9. '10' → logprob: -17.875019073486328
    10. '2' → logprob: -17.875019073486328

Token 1134: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.7133641196996905e-05
    2. '2' → logprob: -10.62502670288086
    3. '(
' → logprob: -13.25002670288086
    4. '(pow' → logprob: -14.37502670288086
    5. ' (' → logprob: -15.37502670288086
    6. '```' → logprob: -16.75002670288086
    7. '10' → logprob: -17.12502670288086
    8. '=' → logprob: -17.37502670288086
    9. 'pow' → logprob: -17.50002670288086
    10. '()' → logprob: -18.00002670288086

Token 1135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.625003814697266
    3. ' ' → logprob: -16.125003814697266
    4. '```' → logprob: -16.375003814697266
    5. '
' → logprob: -16.625003814697266
    6. '10' → logprob: -17.000003814697266
    7. '   ' → logprob: -19.000003814697266
    8. 'mod' → logprob: -19.250003814697266
    9. '

' → logprob: -19.375003814697266
    10. '
' → logprob: -20.250003814697266

Token 1136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00788023043423891
    2. '(' → logprob: -5.257880210876465
    3. '(n' → logprob: -6.632880210876465
    4. ' ,' → logprob: -8.257880210876465
    5. '1' → logprob: -8.382880210876465
    6. ',n' → logprob: -8.382880210876465
    7. 'n' → logprob: -8.632880210876465
    8. ')' → logprob: -9.382880210876465
    9. '(ans' → logprob: -9.507880210876465
    10. 'ans' → logprob: -9.882880210876465

Token 1137: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0023843301460146904
    2. 'n' → logprob: -6.127384185791016
    3. '1' → logprob: -9.627384185791016
    4. 'len' → logprob: -10.127384185791016
    5. ' H' → logprob: -10.877384185791016
    6. '(' → logprob: -11.002384185791016
    7. '(H' → logprob: -11.002384185791016
    8. 'sum' → logprob: -11.127384185791016
    9. '(n' → logprob: -11.377384185791016
    10. 'mod' → logprob: -11.877384185791016

Token 1138: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.03759221360087395
    2. '[' → logprob: -3.4125921726226807
    3. '0' → logprob: -5.91259241104126
    4. '.' → logprob: -7.53759241104126
    5. '.index' → logprob: -7.78759241104126
    6. '[-' → logprob: -9.662591934204102
    7. 'count' → logprob: -9.787591934204102
    8. '[n' → logprob: -9.912591934204102
    9. '[i' → logprob: -10.412591934204102
    10. ')' → logprob: -10.787591934204102

Token 1139: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018047726480290294
    2. '1' → logprob: -7.001804828643799
    3. '('' → logprob: -7.376804828643799
    4. '(
' → logprob: -8.87680435180664
    5. ' (' → logprob: -9.12680435180664
    6. ')' → logprob: -12.00180435180664
    7. '```' → logprob: -12.50180435180664
    8. '("' → logprob: -13.37680435180664
    9. '((' → logprob: -13.75180435180664
    10. '(H' → logprob: -13.87680435180664

Token 1140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. '(' → logprob: -11.125024795532227
    3. ' ' → logprob: -11.625024795532227
    4. '0' → logprob: -14.750024795532227
    5. '```' → logprob: -15.750024795532227
    6. '-' → logprob: -16.250024795532227
    7. '
' → logprob: -16.375024795532227
    8. '   ' → logprob: -16.375024795532227
    9. ')' → logprob: -16.500024795532227
    10. '  ' → logprob: -17.000024795532227

Token 1141: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1611500233411789
    2. ')' → logprob: -2.1611499786376953
    3. ',' → logprob: -3.6611499786376953
    4. '(' → logprob: -5.411149978637695
    5. '(),' → logprob: -7.036149978637695
    6. '(H' → logprob: -7.286149978637695
    7. '('' → logprob: -7.536149978637695
    8. '()' → logprob: -7.911149978637695
    9. '()),' → logprob: -7.911149978637695
    10. '```' → logprob: -8.786149978637695

Token 1142: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00017314712749794126
    2. ' mod' → logprob: -9.000173568725586
    3. 'n' → logprob: -10.250173568725586
    4. '10' → logprob: -12.500173568725586
    5. 'pow' → logprob: -12.750173568725586
    6. '-' → logprob: -13.375173568725586
    7. '(mod' → logprob: -13.500173568725586
    8. 'ans' → logprob: -14.000173568725586
    9. '```' → logprob: -14.125173568725586
    10. 'H' → logprob: -14.500173568725586

Token 1143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00466461107134819
    2. ')
' → logprob: -5.379664421081543
    3. ')*' → logprob: -10.754664421081543
    4. ')**' → logprob: -12.254664421081543
    5. '*' → logprob: -12.504664421081543
    6. ' )' → logprob: -12.629664421081543
    7. '
' → logprob: -13.129664421081543
    8. '**' → logprob: -13.379664421081543
    9. '```' → logprob: -13.379664421081543
    10. '   ' → logprob: -13.629664421081543

Token 1144: ' ' (ID: 220)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.9974063038825989
    2. 'prev' → logprob: -1.247406244277954
    3. 'pos' → logprob: -2.622406244277954
    4. 'idx' → logprob: -2.747406244277954
    5. 'segments' → logprob: -2.997406244277954
    6. 'i' → logprob: -2.997406244277954
    7. 'current' → logprob: -3.497406244277954
    8. 'last' → logprob: -4.247406482696533
    9. 'cur' → logprob: -4.622406482696533
    10. 'temp' → logprob: -4.872406482696533

Token 1145: ' #' (ID: 1069)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.8726366758346558
    2. 'pos' → logprob: -1.8726366758346558
    3. 'parts' → logprob: -2.1226367950439453
    4. 'last' → logprob: -2.2476367950439453
    5. 'segments' → logprob: -3.1226367950439453
    6. 'idx' → logprob: -3.2476367950439453
    7. 'current' → logprob: -3.4976367950439453
    8. 'i' → logprob: -3.4976367950439453
    9. 'segment' → logprob: -4.122636795043945
    10. 'start' → logprob: -4.497636795043945

Token 1146: ' Chaque' (ID: 94758)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6011550426483154
    2. 'prev' → logprob: -1.9761550426483154
    3. 'parts' → logprob: -2.4761550426483154
    4. 'pos' → logprob: -2.4761550426483154
    5. 'last' → logprob: -2.9761550426483154
    6. 'positions' → logprob: -3.7261550426483154
    7. 'idx' → logprob: -3.9761550426483154
    8. 'start' → logprob: -4.4761552810668945
    9. 'indices' → logprob: -5.2261552810668945
    10. 'sub' → logprob: -5.3511552810668945

Token 1147: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5269869565963745
    2. '_' → logprob: -1.7769869565963745
    3. '*' → logprob: -2.026987075805664
    4. 'segment' → logprob: -3.151987075805664
    5. 'portion' → logprob: -3.776987075805664
    6. 'élé' → logprob: -4.526987075805664
    7. '```' → logprob: -4.651987075805664
    8. 'token' → logprob: -5.151987075805664
    9. '`' → logprob: -5.651987075805664
    10. 'part' → logprob: -6.276987075805664

Token 1148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03433370962738991
    2. ' ' → logprob: -3.7843337059020996
    3. ' =' → logprob: -6.1593337059021
    4. '(' → logprob: -6.4093337059021
    5. '')' → logprob: -6.7843337059021
    6. ''' → logprob: -6.9093337059021
    7. ')' → logprob: -7.0343337059021
    8. '   ' → logprob: -7.2843337059021
    9. ' '' → logprob: -7.2843337059021
    10. ' (' → logprob: -7.5343337059021

Token 1149: ''' (ID: 6)
  Prédit: ' représente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.6977734565734863
    2. ')' → logprob: -0.9477734565734863
    3. ' contribue' → logprob: -4.197773456573486
    4. ' a' → logprob: -4.697773456573486
    5. '<|end|>' → logprob: -4.822773456573486
    6. '*' → logprob: -5.072773456573486
    7. ' *' → logprob: -5.197773456573486
    8. ' +=' → logprob: -5.197773456573486
    9. ' represents' → logprob: -5.572773456573486
    10. '**' → logprob: -5.572773456573486

Token 1150: ' offre' (ID: 32066)
  Prédit: ' multipl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multipl' → logprob: -0.9006919264793396
    2. ' représente' → logprob: -1.4006919860839844
    3. 'rep' → logprob: -1.9006919860839844
    4. ' represents' → logprob: -2.6506919860839844
    5. 'con' → logprob: -4.400691986083984
    6. ' apporte' → logprob: -4.400691986083984
    7. 'prés' → logprob: -4.650691986083984
    8. ' contribue' → logprob: -4.900691986083984
    9. ' =' → logprob: -5.025691986083984
    10. 'est' → logprob: -5.400691986083984

Token 1151: ' ' (ID: 220)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5362763404846191
    2. '2' → logprob: -1.1612763404846191
    3. '```' → logprob: -3.411276340484619
    4. 'une' → logprob: -3.661276340484619
    5. 'multip' → logprob: -4.411276340484619
    6. '*' → logprob: -4.661276340484619
    7. '1' → logprob: -5.161276340484619
    8. '
' → logprob: -5.786276340484619
    9. 'a' → logprob: -6.161276340484619
    10. ' ans' → logprob: -6.536276340484619

Token 1152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05067552998661995
    2. 'de' → logprob: -3.800675630569458
    3. 'une' → logprob: -4.550675392150879
    4. 'ans' → logprob: -5.550675392150879
    5. '```' → logprob: -5.550675392150879
    6. 'multip' → logprob: -5.800675392150879
    7. ' deux' → logprob: -6.550675392150879
    8. ' ' → logprob: -6.675675392150879
    9. 'un' → logprob: -7.800675392150879
    10. '1' → logprob: -7.925675392150879

Token 1153: ' possibilités' (ID: 119756)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.08580031245946884
    2. '*' → logprob: -2.5858004093170166
    3. ' **' → logprob: -5.8358001708984375
    4. '```' → logprob: -6.4608001708984375
    5. ' *' → logprob: -7.3358001708984375
    6. '
' → logprob: -7.7108001708984375
    7. 'ans' → logprob: -7.9608001708984375
    8. ')' → logprob: -9.085800170898438
    9. '*object' → logprob: -9.210800170898438
    10. '*=' → logprob: -9.460800170898438

Token 1154: ' indépend' (ID: 68392)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.1396714448928833
    2. 'pos' → logprob: -1.8896714448928833
    3. 'last' → logprob: -2.1396713256835938
    4. 'parts' → logprob: -2.2646713256835938
    5. 'segments' → logprob: -2.3896713256835938
    6. 'current' → logprob: -2.5146713256835938
    7. 'segment' → logprob: -3.5146713256835938
    8. 'cur' → logprob: -3.7646713256835938
    9. 'i' → logprob: -3.8896713256835938
    10. 'idx' → logprob: -4.014671325683594

Token 1155: 'antes' (ID: 5193)
  Prédit: 'amment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amment' → logprob: -0.33548256754875183
    2. 'ément' → logprob: -1.8354825973510742
    3. 'ans' → logprob: -2.960482597351074
    4. ')' → logprob: -4.210482597351074
    5. 'e' → logprob: -4.460482597351074
    6. '```' → logprob: -4.835482597351074
    7. 'of' → logprob: -5.210482597351074
    8. 'de' → logprob: -5.210482597351074
    9. 'es' → logprob: -5.585482597351074
    10. 'emment' → logprob: -5.710482597351074

Token 1156: '

' (ID: 279)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.2880802154541016
    2. 'last' → logprob: -1.5380802154541016
    3. 'segments' → logprob: -2.0380802154541016
    4. 'current' → logprob: -2.4130802154541016
    5. 'pos' → logprob: -2.4130802154541016
    6. 'parts' → logprob: -2.7880802154541016
    7. 'cur' → logprob: -3.4130802154541016
    8. 'start' → logprob: -3.5380802154541016
    9. 'i' → logprob: -3.9130802154541016
    10. 'segment' → logprob: -4.163080215454102

Token 1157: '#' (ID: 2)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.8449249267578125
    2. 'segments' → logprob: -2.0949249267578125
    3. 'prev' → logprob: -2.3449249267578125
    4. 'start' → logprob: -2.7199249267578125
    5. 'last' → logprob: -2.9699249267578125
    6. 'i' → logprob: -2.9699249267578125
    7. 'parts' → logprob: -3.0949249267578125
    8. 'pos' → logprob: -3.2199249267578125
    9. 'current' → logprob: -3.3449249267578125
    10. 'positions' → logprob: -4.0949249267578125

Token 1158: ' Index' (ID: 14580)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.269486904144287
    2. 'segments' → logprob: -1.269486904144287
    3. 'start' → logprob: -1.519486904144287
    4. 'pos' → logprob: -3.269486904144287
    5. 'parts' → logprob: -3.394486904144287
    6. 'current' → logprob: -3.519486904144287
    7. 'last' → logprob: -3.894486904144287
    8. 'sub' → logprob: -4.144486904144287
    9. 'i' → logprob: -4.269486904144287
    10. 'prev' → logprob: -4.519486904144287

Token 1159: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1272139698266983
    2. ' =' → logprob: -2.252213954925537
    3. 'i' → logprob: -5.127213954925537
    4. 'start' → logprob: -5.502213954925537
    5. 'last' → logprob: -6.127213954925537
    6. 's' → logprob: -7.002213954925537
    7. '=i' → logprob: -9.127214431762695
    8. 'pos' → logprob: -9.252214431762695
    9. 'idx' → logprob: -9.252214431762695
    10. '_start' → logprob: -9.252214431762695

Token 1160: ' toutes' (ID: 17502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2467406541109085
    2. 'i' → logprob: -1.746740698814392
    3. '1' → logprob: -3.8717405796051025
    4. 'pos' → logprob: -5.496740818023682
    5. 'dern' → logprob: -5.496740818023682
    6. 'start' → logprob: -5.871740818023682
    7. 'dé' → logprob: -5.871740818023682
    8. 'der' → logprob: -6.121740818023682
    9. 'last' → logprob: -6.371740818023682
    10. 'idx' → logprob: -6.746740818023682

Token 1161: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0966634750366211
    2. 'pos' → logprob: -2.971663475036621
    3. 'idx' → logprob: -4.596663475036621
    4. 'positions' → logprob: -4.596663475036621
    5. '(i' → logprob: -4.721663475036621
    6. '[i' → logprob: -6.096663475036621
    7. 'val' → logprob: -6.221663475036621
    8. 'indices' → logprob: -6.346663475036621
    9. 'e' → logprob: -6.846663475036621
    10. '(idx' → logprob: -7.096663475036621

Token 1162: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.20903371274471283
    2. 'i' → logprob: -2.209033727645874
    3. 'occ' → logprob: -3.459033727645874
    4. 'pos' → logprob: -3.959033727645874
    5. 'val' → logprob: -4.334033489227295
    6. 'occur' → logprob: -4.709033489227295
    7. 'indices' → logprob: -5.459033489227295
    8. '1' → logprob: -7.209033489227295
    9. 'H' → logprob: -7.834033489227295
    10. '[i' → logprob: -8.959033966064453

Token 1163: ' où' (ID: 15113)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.238192081451416
    2. '=' → logprob: -1.863192081451416
    3. ' =' → logprob: -1.988192081451416
    4. '_of' → logprob: -2.238192081451416
    5. '_' → logprob: -2.488192081451416
    6. 'pos' → logprob: -2.988192081451416
    7. '_one' → logprob: -2.988192081451416
    8. '_pos' → logprob: -3.613192081451416
    9. 'où' → logprob: -4.238192081451416
    10. 'des' → logprob: -4.238192081451416

Token 1164: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.02868049405515194
    2. '1' → logprob: -3.7786805629730225
    3. 'val' → logprob: -5.653680324554443
    4. 'i' → logprob: -6.653680324554443
    5. 'value' → logprob: -9.278680801391602
    6. 'len' → logprob: -9.403680801391602
    7. 'la' → logprob: -9.528680801391602
    8. 'h' → logprob: -9.653680801391602
    9. 'l' → logprob: -9.653680801391602
    10. ' H' → logprob: -9.653680801391602

Token 1165: ' valeur' (ID: 41664)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0038452092558145523
    2. 'val' → logprob: -5.87884521484375
    3. '1' → logprob: -7.75384521484375
    4. 'value' → logprob: -7.87884521484375
    5. 'h' → logprob: -9.00384521484375
    6. 'élé' → logprob: -10.12884521484375
    7. ' H' → logprob: -10.50384521484375
    8. 'ha' → logprob: -11.50384521484375
    9. 'height' → logprob: -12.00384521484375
    10. ' valeur' → logprob: -12.12884521484375

Token 1166: ' est' (ID: 893)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0424368791282177
    2. 'un' → logprob: -4.1674370765686035
    3. '=' → logprob: -4.6674370765686035
    4. 'H' → logprob: -5.6674370765686035
    5. 'est' → logprob: -5.6674370765686035
    6. '==' → logprob: -5.9174370765686035
    7. '```' → logprob: -6.1674370765686035
    8. 'i' → logprob: -6.5424370765686035
    9. ' ' → logprob: -6.6674370765686035
    10. 'val' → logprob: -8.042436599731445

Token 1167: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. 'H' → logprob: -11.500015258789062
    3. ' ' → logprob: -12.750015258789062
    4. '```' → logprob: -13.375015258789062
    5. '==' → logprob: -15.500015258789062
    6. '`' → logprob: -15.875015258789062
    7. '=' → logprob: -16.250015258789062
    8. '0' → logprob: -17.250015258789062
    9. '
' → logprob: -17.625015258789062
    10. '100' → logprob: -18.125015258789062

Token 1168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.625000953674316
    3. '`' → logprob: -17.5
    4. '
' → logprob: -17.625
    5. 'H' → logprob: -17.875
    6. ' ' → logprob: -18.0
    7. '۱' → logprob: -20.0
    8. ''' → logprob: -21.125
    9. '``' → logprob: -21.125
    10. '   ' → logprob: -21.375

Token 1169: ''
' (ID: 2207)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05335942283272743
    2. ' =' → logprob: -3.0533595085144043
    3. ']' → logprob: -6.178359508514404
    4. '_' → logprob: -7.053359508514404
    5. '1' → logprob: -7.428359508514404
    6. 's' → logprob: -7.803359508514404
    7. '_positions' → logprob: -8.178359031677246
    8. ']=' → logprob: -9.553359031677246
    9. '_indices' → logprob: -9.678359031677246
    10. 'indices' → logprob: -9.803359031677246

Token 1170: 'check' (ID: 3416)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.15800270438194275
    2. 'idx' → logprob: -3.0330026149749756
    3. 'one' → logprob: -3.2830026149749756
    4. 'indices' → logprob: -3.7830026149749756
    5. 'positions' → logprob: -3.9080026149749756
    6. 'pos' → logprob: -4.158002853393555
    7. 'indexes' → logprob: -7.283002853393555
    8. 'index' → logprob: -8.033002853393555
    9. 'i' → logprob: -8.533002853393555
    10. 'inds' → logprob: -8.783002853393555

Token 1171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05363129824399948
    2. 's' → logprob: -3.30363130569458
    3. ' =' → logprob: -4.42863130569458
    4. '_positions' → logprob: -5.80363130569458
    5. '_indices' → logprob: -8.303630828857422
    6. '_' → logprob: -9.428630828857422
    7. '=[]' → logprob: -9.678630828857422
    8. '_s' → logprob: -10.553630828857422
    9. '_pos' → logprob: -10.678630828857422
    10. '=s' → logprob: -10.928630828857422

Token 1172: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02400493621826172
    2. '[' → logprob: -3.7740049362182617
    3. '[e' → logprob: -7.899004936218262
    4. '[k' → logprob: -9.274004936218262
    5. '[x' → logprob: -9.399004936218262
    6. '[j' → logprob: -9.899004936218262
    7. '[idx' → logprob: -10.024004936218262
    8. '[pos' → logprob: -10.524004936218262
    9. '[s' → logprob: -11.274004936218262
    10. '[index' → logprob: -11.524004936218262

Token 1173: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00039170795935206115
    2. 'idx' → logprob: -7.875391483306885
    3. '(i' → logprob: -12.500391960144043
    4. 'index' → logprob: -12.625391960144043
    5. '0' → logprob: -13.375391960144043
    6. ' i' → logprob: -13.625391960144043
    7. 'ix' → logprob: -14.625391960144043
    8. '-' → logprob: -14.750391960144043
    9. 'e' → logprob: -15.375391960144043
    10. '   ' → logprob: -16.125391006469727

Token 1174: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42873668670654297
    2. ' for' → logprob: -1.053736686706543
    3. 'i' → logprob: -11.178736686706543
    4. '
' → logprob: -11.928736686706543
    5. '	for' → logprob: -12.928736686706543
    6. 'in' → logprob: -13.178736686706543
    7. '+' → logprob: -13.303736686706543
    8. ' in' → logprob: -13.428736686706543
    9. '   ' → logprob: -13.553736686706543
    10. ' ' → logprob: -13.553736686706543

Token 1175: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.031049605458974838
    2. 'i' → logprob: -3.5310494899749756
    3. ' range' → logprob: -6.656049728393555
    4. ' i' → logprob: -12.031049728393555
    5. 'enumer' → logprob: -12.906049728393555
    6. '
' → logprob: -13.781049728393555
    7. ',' → logprob: -13.781049728393555
    8. ',i' → logprob: -14.656049728393555
    9. 'in' → logprob: -15.156049728393555
    10. '(range' → logprob: -15.406049728393555

Token 1176: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5767731666564941
    2. 'in' → logprob: -0.8267731666564941
    3. ' in' → logprob: -7.951773166656494
    4. 'range' → logprob: -8.701772689819336
    5. 'i' → logprob: -8.951772689819336
    6. ',x' → logprob: -9.826772689819336
    7. ',i' → logprob: -10.076772689819336
    8. ',in' → logprob: -10.701772689819336
    9. ',e' → logprob: -10.951772689819336
    10. ',v' → logprob: -10.951772689819336

Token 1177: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.988221684878226e-06
    2. ' range' → logprob: -11.875006675720215
    3. '
' → logprob: -17.87500762939453
    4. 'enumer' → logprob: -18.87500762939453
    5. '(range' → logprob: -19.62500762939453
    6. 'i' → logprob: -19.87500762939453
    7. '	range' → logprob: -21.00000762939453
    8. 'r' → logprob: -21.37500762939453
    9. '

' → logprob: -22.12500762939453
    10. '```' → logprob: -22.25000762939453

Token 1178: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32894209027290344
    2. '(n' → logprob: -1.578942060470581
    3. 'len' → logprob: -3.078942060470581
    4. '(len' → logprob: -3.578942060470581
    5. '(' → logprob: -8.57894229888916
    6. '1' → logprob: -12.07894229888916
    7. ' n' → logprob: -12.07894229888916
    8. ' len' → logprob: -12.57894229888916
    9. '
' → logprob: -12.82894229888916
    10. '(
' → logprob: -13.82894229888916

Token 1179: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013614487834274769
    2. 'if' → logprob: -4.888614654541016
    3. ' if' → logprob: -5.138614654541016
    4. '
' → logprob: -10.013614654541016
    5. ' )' → logprob: -10.388614654541016
    6. '   ' → logprob: -11.763614654541016
    7. ')]' → logprob: -11.763614654541016
    8. '(H' → logprob: -12.013614654541016
    9. ')
' → logprob: -12.388614654541016
    10. ' ' → logprob: -12.388614654541016

Token 1180: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31348058581352234
    2. ' if' → logprob: -1.3134806156158447
    3. '   ' → logprob: -8.563480377197266
    4. ' ' → logprob: -11.688480377197266
    5. '       ' → logprob: -11.813480377197266
    6. '	if' → logprob: -12.813480377197266
    7. '  ' → logprob: -13.063480377197266
    8. '    ' → logprob: -13.063480377197266
    9. '
' → logprob: -13.438480377197266
    10. ',' → logprob: -13.938480377197266

Token 1181: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.935296834039036e-06
    2. ' H' → logprob: -12.75000286102295
    3. '   ' → logprob: -20.125003814697266
    4. '(H' → logprob: -20.250003814697266
    5. '	H' → logprob: -21.500003814697266
    6. '_H' → logprob: -22.125003814697266
    7. '```' → logprob: -22.250003814697266
    8. ' ' → logprob: -22.375003814697266
    9. ']' → logprob: -22.375003814697266
    10. 'h' → logprob: -22.875003814697266

Token 1182: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -13.500004768371582
    3. '[I' → logprob: -13.750004768371582
    4. '```' → logprob: -13.750004768371582
    5. '==' → logprob: -14.625004768371582
    6. '[
' → logprob: -15.000004768371582
    7. 'H' → logprob: -16.500003814697266
    8. 'i' → logprob: -16.750003814697266
    9. '{i' → logprob: -16.750003814697266
    10. '``' → logprob: -17.500003814697266

Token 1183: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00475027272477746
    2. ']==' → logprob: -5.8797502517700195
    3. '==' → logprob: -7.0047502517700195
    4. ']' → logprob: -7.1297502517700195
    5. '][' → logprob: -9.00475025177002
    6. '[' → logprob: -9.62975025177002
    7. ' ==' → logprob: -11.00475025177002
    8. '[
' → logprob: -11.25475025177002
    9. '[I' → logprob: -11.75475025177002
    10. '```' → logprob: -13.25475025177002

Token 1184: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02182922512292862
    2. ' ==' → logprob: -4.646829128265381
    3. ']==' → logprob: -4.771829128265381
    4. '[' → logprob: -5.896829128265381
    5. '[i' → logprob: -7.646829128265381
    6. ']' → logprob: -9.021829605102539
    7. '```' → logprob: -9.021829605102539
    8. '==
' → logprob: -10.396829605102539
    9. '()==' → logprob: -10.896829605102539
    10. '[
' → logprob: -12.146829605102539

Token 1185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.50000286102295
    3. '0' → logprob: -13.62500286102295
    4. '
' → logprob: -16.500003814697266
    5. '```' → logprob: -16.625003814697266
    6. '<|end|>' → logprob: -18.375003814697266
    7. '   ' → logprob: -19.250003814697266
    8. '`' → logprob: -19.375003814697266
    9. '۱' → logprob: -19.750003814697266
    10. '2' → logprob: -19.750003814697266

Token 1186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -17.0
    4. '0' → logprob: -18.875
    5. '
' → logprob: -19.0
    6. '`' → logprob: -20.5
    7. '۱' → logprob: -20.625
    8. '' → logprob: -21.25
    9. '   ' → logprob: -21.375
    10. '(' → logprob: -21.625

Token 1187: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.939851037808694e-05
    2. ']
' → logprob: -11.125029563903809
    3. ' ]' → logprob: -11.375029563903809
    4. ']

' → logprob: -13.375029563903809
    5. ')]' → logprob: -14.875029563903809
    6. '()]' → logprob: -14.875029563903809
    7. 'if' → logprob: -15.500029563903809
    8. '   ' → logprob: -15.875029563903809
    9. ' or' → logprob: -16.375028610229492
    10. '`]' → logprob: -16.625028610229492

Token 1188: '#' (ID: 2)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.608756422996521
    2. 'start' → logprob: -1.108756422996521
    3. 'check' → logprob: -3.2337565422058105
    4. 'last' → logprob: -3.3587565422058105
    5. 'if' → logprob: -3.8587565422058105
    6. 'pos' → logprob: -4.3587565422058105
    7. '```' → logprob: -4.7337565422058105
    8. 'l' → logprob: -5.9837565422058105
    9. 'i' → logprob: -5.9837565422058105
    10. 'for' → logprob: -6.6087565422058105

Token 1189: ' Cr' (ID: 5790)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.4054410457611084
    2. 'start' → logprob: -1.5304410457611084
    3. 'last' → logprob: -3.5304410457611084
    4. 'if' → logprob: -3.6554410457611084
    5. 'check' → logprob: -3.6554410457611084
    6. 'segments' → logprob: -3.9054410457611084
    7. '```' → logprob: -5.5304412841796875
    8. 'from' → logprob: -5.6554412841796875
    9. 'positions' → logprob: -6.2804412841796875
    10. 'for' → logprob: -6.4054412841796875

Token 1190: 'éer' (ID: 83012)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.2817252278327942
    2. 'urent' → logprob: -2.5317251682281494
    3. 'urrent' → logprob: -3.1567251682281494
    4. 'e' → logprob: -3.9067251682281494
    5. 'nt' → logprob: -4.0317254066467285
    6. 'est' → logprob: -4.7817254066467285
    7. 'segments' → logprob: -4.9067254066467285
    8. 'es' → logprob: -5.0317254066467285
    9. 'i' → logprob: -5.2817254066467285
    10. 'st' → logprob: -5.5317254066467285

Token 1191: ' des' (ID: 731)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.09544506669044495
    2. 'sub' → logprob: -2.845445156097412
    3. 'check' → logprob: -3.970445156097412
    4. 'ranges' → logprob: -5.220445156097412
    5. 'for' → logprob: -6.220445156097412
    6. 's' → logprob: -6.470445156097412
    7. '#' → logprob: -6.845445156097412
    8. 'parts' → logprob: -7.595445156097412
    9. 'pieces' → logprob: -7.720445156097412
    10. 'part' → logprob: -7.720445156097412

Token 1192: ' born' (ID: 12275)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.009711354970932007
    2. 'sub' → logprob: -5.884711265563965
    3. 's' → logprob: -6.509711265563965
    4. '```' → logprob: -6.634711265563965
    5. 'chunks' → logprob: -7.259711265563965
    6. 'for' → logprob: -7.384711265563965
    7. 'start' → logprob: -7.509711265563965
    8. 'ranges' → logprob: -7.759711265563965
    9. 'prev' → logprob: -8.509711265563965
    10. 'blocks' → logprob: -8.634711265563965

Token 1193: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.024446990340948105
    2. 'aries' → logprob: -4.399446964263916
    3. 'e' → logprob: -5.774446964263916
    4. 's' → logprob: -5.899446964263916
    5. 'd' → logprob: -5.899446964263916
    6. 'aires' → logprob: -6.774446964263916
    7. 'ages' → logprob: -7.524446964263916
    8. 'eurs' → logprob: -7.774446964263916
    9. 'ies' → logprob: -8.774447441101074
    10. 'ges' → logprob: -8.899447441101074

Token 1194: ' de' (ID: 334)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.042790547013282776
    2. 'for' → logprob: -4.042790412902832
    3. 'bounds' → logprob: -5.292790412902832
    4. 'segments' → logprob: -5.292790412902832
    5. ' =' → logprob: -5.667790412902832
    6. '=' → logprob: -5.917790412902832
    7. 'bound' → logprob: -5.917790412902832
    8. 'b' → logprob: -6.292790412902832
    9. 'prev' → logprob: -7.417790412902832
    10. '[-' → logprob: -7.417790412902832

Token 1195: ' décou' (ID: 68302)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.7462189197540283
    2. 'segment' → logprob: -1.3712189197540283
    3. 'partition' → logprob: -2.4962189197540283
    4. 'check' → logprob: -3.1212189197540283
    5. 'interval' → logprob: -3.7462189197540283
    6. 'sé' → logprob: -3.7462189197540283
    7. 'sub' → logprob: -3.8712189197540283
    8. 'seg' → logprob: -4.121218681335449
    9. 'd' → logprob: -4.246218681335449
    10. 's' → logprob: -4.746218681335449

Token 1196: 'page' (ID: 5342)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.33049461245536804
    2. 'tes' → logprob: -2.9554946422576904
    3. 'pts' → logprob: -3.0804946422576904
    4. 'ps' → logprob: -3.2054946422576904
    5. 'ts' → logprob: -3.3304946422576904
    6. 'pp' → logprob: -3.5804946422576904
    7. 'ptions' → logprob: -4.455494403839111
    8. 'ption' → logprob: -4.830494403839111
    9. 'pes' → logprob: -4.955494403839111
    10. 'nts' → logprob: -5.080494403839111

Token 1197: ' de' (ID: 334)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.02817959524691105
    2. 'segments' → logprob: -4.52817964553833
    3. 'positions' → logprob: -5.27817964553833
    4. ' =' → logprob: -5.90317964553833
    5. '=' → logprob: -6.52817964553833
    6. 'for' → logprob: -6.77817964553833
    7. 'parts' → logprob: -7.02817964553833
    8. 'bounds' → logprob: -7.15317964553833
    9. '=[' → logprob: -7.27817964553833
    10. 'b' → logprob: -7.52817964553833

Token 1198: ' la' (ID: 557)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.23412474989891052
    2. 'check' → logprob: -2.1091246604919434
    3. 'la' → logprob: -3.1091246604919434
    4. 's' → logprob: -4.984124660491943
    5. 'les' → logprob: -4.984124660491943
    6. 'sub' → logprob: -5.234124660491943
    7. 'segment' → logprob: -5.484124660491943
    8. 'tr' → logprob: -5.859124660491943
    9. 'l' → logprob: -5.859124660491943
    10. 'H' → logprob: -6.484124660491943

Token 1199: ' liste' (ID: 31719)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.4056985378265381
    2. 'part' → logprob: -2.405698537826538
    3. 'segments' → logprob: -2.655698537826538
    4. 's' → logprob: -2.905698537826538
    5. 'sub' → logprob: -3.280698537826538
    6. 'positions' → logprob: -4.155698776245117
    7. 'tr' → logprob: -4.655698776245117
    8. 'parts' → logprob: -4.780698776245117
    9. 'sé' → logprob: -4.905698776245117
    10. 'portion' → logprob: -5.030698776245117

Token 1200: ' principale' (ID: 68926)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.23735250532627106
    2. 'segments' → logprob: -1.9873524904251099
    3. 'for' → logprob: -3.6123526096343994
    4. 'parts' → logprob: -3.9873526096343994
    5. 'positions' → logprob: -4.61235237121582
    6. 'interval' → logprob: -5.36235237121582
    7. 'ranges' → logprob: -5.86235237121582
    8. 'pieces' → logprob: -6.48735237121582
    9. 'bounds' → logprob: -6.73735237121582
    10. 'bound' → logprob: -6.86235237121582

Token 1201: ' H' (ID: 487)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.5007814168930054
    2. 'segments' → logprob: -1.2507814168930054
    3. 'parts' → logprob: -3.625781536102295
    4. 'prev' → logprob: -4.000781536102295
    5. 'for' → logprob: -4.000781536102295
    6. 'bounds' → logprob: -4.625781536102295
    7. 'bound' → logprob: -5.250781536102295
    8. 'positions' → logprob: -5.375781536102295
    9. 'pieces' → logprob: -5.500781536102295
    10. 'interval' → logprob: -5.625781536102295

Token 1202: '
' (ID: 198)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.09741320461034775
    2. 'segments' → logprob: -2.8474133014678955
    3. 'for' → logprob: -4.597413063049316
    4. 'parts' → logprob: -4.972413063049316
    5. 'bounds' → logprob: -5.597413063049316
    6. ' =' → logprob: -6.097413063049316
    7. 'prev' → logprob: -6.347413063049316
    8. 'positions' → logprob: -6.472413063049316
    9. '=' → logprob: -6.472413063049316
    10. 'pieces' → logprob: -6.722413063049316

Token 1203: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.6829960346221924
    2. 'bounds' → logprob: -0.9329960346221924
    3. 'segments' → logprob: -3.3079960346221924
    4. 'b' → logprob: -3.5579960346221924
    5. 'parts' → logprob: -4.057995796203613
    6. 'bound' → logprob: -5.307995796203613
    7. 'cuts' → logprob: -5.557995796203613
    8. 'for' → logprob: -6.557995796203613
    9. 'ranges' → logprob: -7.182995796203613
    10. 'pieces' → logprob: -7.182995796203613

Token 1204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6782504320144653
    2. '.append' → logprob: -1.1782504320144653
    3. ' =' → logprob: -1.8032504320144653
    4. '=[' → logprob: -4.303250312805176
    5. '+=' → logprob: -5.803250312805176
    6. '.insert' → logprob: -6.553250312805176
    7. '+' → logprob: -6.678250312805176
    8. ' +=' → logprob: -7.678250312805176
    9. '.extend' → logprob: -8.678250312805176
    10. ' =[' → logprob: -10.678250312805176

Token 1205: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.04863131046295166
    2. '[' → logprob: -3.048631191253662
    3. '([-' → logprob: -10.17363166809082
    4. ' [-' → logprob: -12.42363166809082
    5. '([' → logprob: -13.92363166809082
    6. ' [' → logprob: -14.79863166809082
    7. '[len' → logprob: -15.42363166809082
    8. '[:-' → logprob: -16.54863166809082
    9. '[]' → logprob: -17.17363166809082
    10. 'check' → logprob: -17.17363166809082

Token 1206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -15.875
    3. 'mod' → logprob: -17.625
    4. '```' → logprob: -18.375
    5. ' ' → logprob: -18.5
    6. '-' → logprob: -19.0
    7. '0' → logprob: -19.25
    8. '１' → logprob: -20.0
    9. '۱' → logprob: -20.0
    10. '10' → logprob: -20.125

Token 1207: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02732020430266857
    2. ']+' → logprob: -3.652320146560669
    3. ',' → logprob: -6.902320384979248
    4. '+' → logprob: -11.65231990814209
    5. ' ]' → logprob: -13.15231990814209
    6. ']+=' → logprob: -13.90231990814209
    7. ']+\' → logprob: -15.02731990814209
    8. ',
' → logprob: -15.02731990814209
    9. ',len' → logprob: -15.40231990814209
    10. '```' → logprob: -15.52731990814209

Token 1208: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06268922239542007
    2. ' +' → logprob: -2.8126893043518066
    3. '+
' → logprob: -7.562689304351807
    4. '+[' → logprob: -9.187688827514648
    5. ']+' → logprob: -9.937688827514648
    6. ' +
' → logprob: -11.562688827514648
    7. ']' → logprob: -11.687688827514648
    8. ',' → logprob: -12.312688827514648
    9. '
' → logprob: -12.312688827514648
    10. ')+' → logprob: -12.312688827514648

Token 1209: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -5.991464786347933e-05
    2. ' check' → logprob: -9.750060081481934
    3. '[' → logprob: -13.375060081481934
    4. '(check' → logprob: -19.375059127807617
    5. '	check' → logprob: -19.750059127807617
    6. ' [' → logprob: -20.250059127807617
    7. '   ' → logprob: -20.250059127807617
    8. '```' → logprob: -20.250059127807617
    9. 'list' → logprob: -21.000059127807617
    10. '_check' → logprob: -21.125059127807617

Token 1210: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4750336706638336
    2. '+' → logprob: -0.9750336408615112
    3. '+[' → logprob: -7.225033760070801
    4. '
' → logprob: -9.3500337600708
    5. 'for' → logprob: -9.8500337600708
    6. '+
' → logprob: -10.1000337600708
    7. '<|end|>' → logprob: -11.1000337600708
    8. ' for' → logprob: -11.9750337600708
    9. '#' → logprob: -12.3500337600708
    10. '.append' → logprob: -12.7250337600708

Token 1211: ' [' (ID: 723)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.7729658540920354e-05
    2. ' [' → logprob: -10.750027656555176
    3. '[' → logprob: -12.000027656555176
    4. '
' → logprob: -17.250028610229492
    5. '=[' → logprob: -17.625028610229492
    6. '[len' → logprob: -17.625028610229492
    7. '[num' → logprob: -18.125028610229492
    8. '[s' → logprob: -18.375028610229492
    9. '\[' → logprob: -18.375028610229492
    10. '   ' → logprob: -18.375028610229492

Token 1212: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00015050210640765727
    2. '[n' → logprob: -8.875150680541992
    3. ' n' → logprob: -11.625150680541992
    4. '[' → logprob: -13.625150680541992
    5. 'len' → logprob: -15.500150680541992
    6. ']' → logprob: -16.875150680541992
    7. '[len' → logprob: -17.000150680541992
    8. ' [' → logprob: -17.125150680541992
    9. '(n' → logprob: -17.375150680541992
    10. '	n' → logprob: -17.625150680541992

Token 1213: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013774730905424803
    2. ' ]' → logprob: -9.750137329101562
    3. ']
' → logprob: -10.250137329101562
    4. ')]' → logprob: -11.000137329101562
    5. '+' → logprob: -11.750137329101562
    6. '`]' → logprob: -12.250137329101562
    7. '+]' → logprob: -12.375137329101562
    8. '-' → logprob: -12.750137329101562
    9. '_]' → logprob: -13.625137329101562
    10. ')' → logprob: -13.625137329101562

Token 1214: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006849141791462898
    2. '```' → logprob: -7.62568473815918
    3. 'prev' → logprob: -9.62568473815918
    4. 'i' → logprob: -9.75068473815918
    5. 'start' → logprob: -10.87568473815918
    6. 'pos' → logprob: -11.12568473815918
    7. ' for' → logprob: -11.25068473815918
    8. 'segments' → logprob: -12.00068473815918
    9. 'last' → logprob: -12.25068473815918
    10. 'current' → logprob: -12.25068473815918

Token 1215: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2948405128554441e-05
    2. '```' → logprob: -12.62501335144043
    3. 'from' → logprob: -12.75001335144043
    4. 'i' → logprob: -12.87501335144043
    5. 'segments' → logprob: -13.50001335144043
    6. 'def' → logprob: -13.62501335144043
    7. 'prev' → logprob: -14.25001335144043
    8. 'result' → logprob: -15.00001335144043
    9. 'parts' → logprob: -15.50001335144043
    10. ' for' → logprob: -16.12501335144043

Token 1216: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001216186792589724
    2. 'idx' → logprob: -7.001216411590576
    3. '_i' → logprob: -8.876215934753418
    4. 'segment' → logprob: -9.751215934753418
    5. 'k' → logprob: -11.001215934753418
    6. '_segment' → logprob: -11.126215934753418
    7. '_index' → logprob: -11.251215934753418
    8. 'seg' → logprob: -11.501215934753418
    9. 'x' → logprob: -11.751215934753418
    10. 'index' → logprob: -11.751215934753418

Token 1217: ' sous' (ID: 14487)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6413263082504272
    2. 'i' → logprob: -0.8913263082504272
    3. 'idx' → logprob: -3.016326427459717
    4. 'segment' → logprob: -5.766326427459717
    5. '_k' → logprob: -6.266326427459717
    6. '_segment' → logprob: -6.391326427459717
    7. '_i' → logprob: -6.641326427459717
    8. '_' → logprob: -6.766326427459717
    9. '_index' → logprob: -7.141326427459717
    10. 'index' → logprob: -7.641326427459717

Token 1218: '-s' (ID: 2011)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5372416377067566
    2. 'segment' → logprob: -1.9122416973114014
    3. 'range' → logprob: -2.1622416973114014
    4. 'list' → logprob: -2.6622416973114014
    5. 'lst' → logprob: -4.412241458892822
    6. '_list' → logprob: -4.662241458892822
    7. 'liste' → logprob: -4.662241458892822
    8. 'sequence' → logprob: -4.662241458892822
    9. 'array' → logprob: -4.787241458892822
    10. 'slice' → logprob: -5.287241458892822

Token 1219: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4484579265117645
    2. 'quence' → logprob: -1.948457956314087
    3. 'e' → logprob: -2.073457956314087
    4. 'ection' → logprob: -3.448457956314087
    5. 'eq' → logprob: -4.323457717895508
    6. 'équ' → logprob: -4.448457717895508
    7. 'egment' → logprob: -4.573457717895508
    8. 'lice' → logprob: -4.823457717895508
    9. '_' → logprob: -5.573457717895508
    10. '[' → logprob: -6.323457717895508

Token 1220: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0059316400438547134
    2. 'ction' → logprob: -6.005931854248047
    3. '
' → logprob: -6.380931854248047
    4. 'q' → logprob: -7.005931854248047
    5. '#' → logprob: -8.130931854248047
    6. '[' → logprob: -9.380931854248047
    7. 'quent' → logprob: -9.505931854248047
    8. '   ' → logprob: -9.880931854248047
    9. '```' → logprob: -10.005931854248047
    10. 'gment' → logprob: -10.130931854248047

Token 1221: ' comprise' (ID: 68545)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05291064456105232
    2. ' in' → logprob: -3.052910566329956
    3. 'range' → logprob: -6.677910804748535
    4. 'for' → logprob: -6.802910804748535
    5. 'i' → logprob: -7.052910804748535
    6. 'dans' → logprob: -7.802910804748535
    7. '```' → logprob: -9.052910804748535
    8. '_range' → logprob: -9.177910804748535
    9. '_in' → logprob: -9.677910804748535
    10. '
' → logprob: -9.802910804748535

Token 1222: ' entre' (ID: 3853)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.11898771673440933
    2. 'entre' → logprob: -2.618987798690796
    3. '_between' → logprob: -3.493987798690796
    4. 'in' → logprob: -5.743987560272217
    5. 'dans' → logprob: -5.743987560272217
    6. ' entre' → logprob: -6.493987560272217
    7. ' between' → logprob: -7.743987560272217
    8. 'range' → logprob: -8.118988037109375
    9. 'for' → logprob: -9.993988037109375
    10. '```' → logprob: -10.368988037109375

Token 1223: ' les' (ID: 1341)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.019770918413996696
    2. 'i' → logprob: -4.644771099090576
    3. 'range' → logprob: -4.644771099090576
    4. '(check' → logprob: -9.394770622253418
    5. ' check' → logprob: -9.519770622253418
    6. 'len' → logprob: -9.894770622253418
    7. '1' → logprob: -10.019770622253418
    8. '
' → logprob: -10.394770622253418
    9. '(i' → logprob: -11.269770622253418
    10. 'adj' → logprob: -11.644770622253418

Token 1224: ' '' (ID: 461)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00010366239439463243
    2. 'checks' → logprob: -10.625103950500488
    3. 'i' → logprob: -10.875103950500488
    4. 'pairs' → logprob: -11.375103950500488
    5. '(check' → logprob: -11.750103950500488
    6. 'indices' → logprob: -11.750103950500488
    7. 'b' → logprob: -11.875103950500488
    8. ' check' → logprob: -12.000103950500488
    9. 'c' → logprob: -13.250103950500488
    10. 'segments' → logprob: -13.250103950500488

Token 1225: '1' (ID: 16)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.001818216871470213
    2. ']' → logprob: -6.8768181800842285
    3. '+' → logprob: -8.376818656921387
    4. 'checks' → logprob: -9.126818656921387
    5. '-' → logprob: -9.376818656921387
    6. ' check' → logprob: -9.626818656921387
    7. '1' → logprob: -9.626818656921387
    8. '']' → logprob: -10.126818656921387
    9. 'c' → logprob: -10.501818656921387
    10. '_check' → logprob: -10.501818656921387

Token 1226: '',' (ID: 787)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3770112991333008
    2. ']' → logprob: -1.8770112991333008
    3. ']:
' → logprob: -2.752011299133301
    4. 'i' → logprob: -3.377011299133301
    5. '[i' → logprob: -3.752011299133301
    6. 's' → logprob: -4.252011299133301
    7. ',' → logprob: -4.877011299133301
    8. '],' → logprob: -5.752011299133301
    9. ' +' → logprob: -5.752011299133301
    10. ']+' → logprob: -5.877011299133301

Token 1227: ' appliquer' (ID: 172872)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006825604941695929
    2. ' for' → logprob: -5.3818254470825195
    3. '   ' → logprob: -6.1318254470825195
    4. '```' → logprob: -11.00682544708252
    5. '
' → logprob: -11.50682544708252
    6. 'range' → logprob: -13.00682544708252
    7. '    
' → logprob: -15.00682544708252
    8. '	for' → logprob: -15.13182544708252
    9. '#' → logprob: -16.131826400756836
    10. '``' → logprob: -16.631826400756836

Token 1228: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.26089075207710266
    2. 'solve' → logprob: -1.5108907222747803
    3. 'lambda' → logprob: -6.260890960693359
    4. 'range' → logprob: -6.260890960693359
    5. '(ans' → logprob: -6.260890960693359
    6. ' ans' → logprob: -7.010890960693359
    7. '
' → logprob: -7.260890960693359
    8. '   ' → logprob: -7.885890960693359
    9. '#' → logprob: -7.885890960693359
    10. ' solve' → logprob: -8.13589096069336

Token 1229: ' fonction' (ID: 17610)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23150034248828888
    2. 'solve' → logprob: -1.7315003871917725
    3. 'sub' → logprob: -4.356500148773193
    4. 'slice' → logprob: -5.356500148773193
    5. 'result' → logprob: -5.856500148773193
    6. 'rés' → logprob: -6.606500148773193
    7. 'def' → logprob: -6.856500148773193
    8. 'lambda' → logprob: -6.856500148773193
    9. ' for' → logprob: -6.981500148773193
    10. 'res' → logprob: -7.481500148773193

Token 1230: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.2881830930709839
    2. 'for' → logprob: -1.4131830930709839
    3. '```' → logprob: -5.788183212280273
    4. 'h' → logprob: -7.163183212280273
    5. 'ans' → logprob: -7.413183212280273
    6. 'range' → logprob: -7.663183212280273
    7. 's' → logprob: -7.913183212280273
    8. ' for' → logprob: -8.288183212280273
    9. '``' → logprob: -8.663183212280273
    10. 'result' → logprob: -8.663183212280273

Token 1231: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0047539533115923405
    2. ' for' → logprob: -6.129754066467285
    3. '```' → logprob: -6.879754066467285
    4. '
' → logprob: -7.379754066467285
    5. '   ' → logprob: -7.629754066467285
    6. ':
' → logprob: -8.629754066467285
    7. ':' → logprob: -9.879754066467285
    8. '(range' → logprob: -10.254754066467285
    9. '(
' → logprob: -10.379754066467285
    10. '(' → logprob: -10.629754066467285

Token 1232: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000206401280593127
    2. ' for' → logprob: -8.875205993652344
    3. '```' → logprob: -9.750205993652344
    4. '
' → logprob: -11.750205993652344
    5. '``' → logprob: -15.750205993652344
    6. '    
' → logprob: -16.875205993652344
    7. 'result' → logprob: -17.375205993652344
    8. '   ' → logprob: -18.250205993652344
    9. 'range' → logprob: -18.250205993652344
    10. '  
' → logprob: -18.875205993652344

Token 1233: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004195694345980883
    2. 'idx' → logprob: -6.004195690155029
    3. 'l' → logprob: -7.629195690155029
    4. 'k' → logprob: -8.004196166992188
    5. 'x' → logprob: -8.129196166992188
    6. '_i' → logprob: -8.379196166992188
    7. 'ii' → logprob: -9.629196166992188
    8. 'ind' → logprob: -9.629196166992188
    9. 'e' → logprob: -10.129196166992188
    10. ' i' → logprob: -10.379196166992188

Token 1234: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2519908845424652
    2. ' in' → logprob: -1.5019909143447876
    3. '1' → logprob: -10.376991271972656
    4. 'i' → logprob: -11.001991271972656
    5. '```' → logprob: -11.751991271972656
    6. ' i' → logprob: -12.876991271972656
    7. '   ' → logprob: -13.626991271972656
    8. ' ' → logprob: -14.376991271972656
    9. '_in' → logprob: -14.876991271972656
    10. '	in' → logprob: -15.251991271972656

Token 1235: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031822288874536753
    2. ' range' → logprob: -5.753182411193848
    3. '1' → logprob: -13.128182411193848
    4. 'in' → logprob: -13.128182411193848
    5. ' in' → logprob: -15.628182411193848
    6. '
' → logprob: -16.12818145751953
    7. '   ' → logprob: -16.37818145751953
    8. ' ' → logprob: -16.62818145751953
    9. '0' → logprob: -17.12818145751953
    10. '```' → logprob: -17.37818145751953

Token 1236: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021510053426027298
    2. '1' → logprob: -4.021510124206543
    3. '(len' → logprob: -5.771510124206543
    4. 'len' → logprob: -8.396510124206543
    5. 'range' → logprob: -11.521510124206543
    6. '(i' → logprob: -12.896510124206543
    7. 'i' → logprob: -14.771510124206543
    8. '(
' → logprob: -15.146510124206543
    9. '```' → logprob: -15.896510124206543
    10. '0' → logprob: -16.146509170532227

Token 1237: '(check' (ID: 40506)
  Prédit: '(check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.0036079094279557467
    2. 'check' → logprob: -5.628607749938965
    3. '1' → logprob: -13.128607749938965
    4. '(' → logprob: -13.378607749938965
    5. ')' → logprob: -13.503607749938965
    6. ' (' → logprob: -13.628607749938965
    7. ' check' → logprob: -14.128607749938965
    8. '
' → logprob: -15.878607749938965
    9. '```' → logprob: -16.12860870361328
    10. '-' → logprob: -16.12860870361328

Token 1238: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010954206809401512
    2. ' -' → logprob: -5.2609543800354
    3. '[i' → logprob: -5.8859543800354
    4. ')' → logprob: -6.1359543800354
    5. ')-' → logprob: -8.010953903198242
    6. '+' → logprob: -8.510953903198242
    7. '1' → logprob: -9.635953903198242
    8. '[:-' → logprob: -10.010953903198242
    9. '[' → logprob: -10.260953903198242
    10. ')][' → logprob: -11.010953903198242

Token 1239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. '2' → logprob: -13.000005722045898
    3. ' ' → logprob: -13.125005722045898
    4. '```' → logprob: -14.625005722045898
    5. '   ' → logprob: -15.250005722045898
    6. '0' → logprob: -16.0000057220459
    7. ')' → logprob: -16.3750057220459
    8. 'i' → logprob: -17.1250057220459
    9. '
' → logprob: -17.2500057220459
    10. '-' → logprob: -17.8750057220459

Token 1240: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018999118357896805
    2. '   ' → logprob: -5.518999099731445
    3. '+' → logprob: -5.643999099731445
    4. '1' → logprob: -5.768999099731445
    5. '):' → logprob: -5.768999099731445
    6. ':' → logprob: -6.518999099731445
    7. ':
' → logprob: -6.768999099731445
    8. ',' → logprob: -7.018999099731445
    9. '[' → logprob: -7.768999099731445
    10. '():
' → logprob: -8.143999099731445

Token 1241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001327499165199697
    2. '```' → logprob: -7.1263275146484375
    3. '	h' → logprob: -8.251327514648438
    4. '	sub' → logprob: -9.626327514648438
    5. ' h' → logprob: -9.876327514648438
    6. '    
' → logprob: -10.001327514648438
    7. 'h' → logprob: -10.501327514648438
    8. '   ' → logprob: -10.626327514648438
    9. ' ' → logprob: -11.376327514648438
    10. '	s' → logprob: -11.626327514648438

Token 1242: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.95509272813797
    2. 'segment' → logprob: -1.4550926685333252
    3. 'sub' → logprob: -1.4550926685333252
    4. ' segment' → logprob: -2.330092668533325
    5. 'l' (adapté à ' l') → logprob: -3.955092668533325
    6. ' sub' → logprob: -4.455092906951904
    7. 'start' → logprob: -5.205092906951904
    8. '    
' → logprob: -5.955092906951904
    9. '```' → logprob: -5.955092906951904
    10. ' subse' → logprob: -6.080092906951904

Token 1243: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030177617445588112
    2. '=' → logprob: -3.530177593231201
    3. '   ' → logprob: -8.28017807006836
    4. '+' → logprob: -9.40517807006836
    5. ',' → logprob: -9.90517807006836
    6. 'ex' → logprob: -11.78017807006836
    7. '=i' → logprob: -12.28017807006836
    8. '=l' → logprob: -12.53017807006836
    9. ' ' → logprob: -12.90517807006836
    10. '=_' → logprob: -12.90517807006836

Token 1244: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.46866461634635925
    2. 'check' → logprob: -1.0936646461486816
    3. ' check' → logprob: -3.9686646461486816
    4. ' r' → logprob: -4.468664646148682
    5. 'l' → logprob: -5.218664646148682
    6. '   ' → logprob: -5.968664646148682
    7. ' =' → logprob: -8.218664169311523
    8. '_check' → logprob: -8.968664169311523
    9. ' l' → logprob: -9.468664169311523
    10. 'i' → logprob: -9.468664169311523

Token 1245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890113443136215
    2. ' =' → logprob: -2.5789010524749756
    3. '   ' → logprob: -11.703901290893555
    4. '=
' → logprob: -13.328901290893555
    5. '＝' → logprob: -15.078901290893555
    6. ',' → logprob: -15.203901290893555
    7. '=l' → logprob: -15.953901290893555
    8. '=int' → logprob: -15.953901290893555
    9. ' ' → logprob: -16.578901290893555
    10. ')' → logprob: -16.578901290893555

Token 1246: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.018158607184886932
    2. ' check' → logprob: -4.018158435821533
    3. '   ' → logprob: -12.143158912658691
    4. '	check' → logprob: -13.018158912658691
    5. '(check' → logprob: -14.018158912658691
    6. '_check' → logprob: -16.393157958984375
    7. ' ' → logprob: -16.643157958984375
    8. 'chec' → logprob: -17.268157958984375
    9. ' ' → logprob: -17.643157958984375
    10. '  ' → logprob: -17.768157958984375

Token 1247: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01008150726556778
    2. 'i' → logprob: -4.6350812911987305
    3. '+' → logprob: -8.76008129119873
    4. '   ' → logprob: -9.76008129119873
    5. '[' → logprob: -10.26008129119873
    6. '[
' → logprob: -10.88508129119873
    7. '```' → logprob: -10.88508129119873
    8. 's' → logprob: -11.63508129119873
    9. '[l' → logprob: -12.13508129119873
    10. '(i' → logprob: -12.63508129119873

Token 1248: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26660504937171936
    2. ']+' → logprob: -1.891605019569397
    3. ']' → logprob: -2.5166051387786865
    4. ' +' → logprob: -6.016604900360107
    5. ')+' → logprob: -11.516605377197266
    6. '   ' → logprob: -12.641605377197266
    7. ')' → logprob: -12.766605377197266
    8. '+l' → logprob: -13.391605377197266
    9. '+]' → logprob: -13.641605377197266
    10. ' ]' → logprob: -13.766605377197266

Token 1249: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.17996351420879364
    2. ' check' → logprob: -1.80496346950531
    3. '   ' → logprob: -8.554963111877441
    4. '	check' → logprob: -10.929963111877441
    5. '    ' → logprob: -13.054963111877441
    6. 'l' → logprob: -13.304963111877441
    7. '(check' → logprob: -13.429963111877441
    8. '    
' → logprob: -14.429963111877441
    9. '  ' → logprob: -14.429963111877441
    10. '       ' → logprob: -14.804963111877441

Token 1250: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5703057646751404
    2. 'i' → logprob: -1.3203058242797852
    3. '[i' → logprob: -1.8203058242797852
    4. ' +' → logprob: -5.570305824279785
    5. '+i' → logprob: -6.695305824279785
    6. '(i' → logprob: -8.195305824279785
    7. ' i' → logprob: -9.070305824279785
    8. '```' → logprob: -9.195305824279785
    9. '`' → logprob: -10.820305824279785
    10. '{i' → logprob: -10.945305824279785

Token 1251: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004752407781779766
    2. ']+' → logprob: -5.6297526359558105
    3. ']' → logprob: -7.0047526359558105
    4. 'i' → logprob: -9.129752159118652
    5. ' +' → logprob: -9.129752159118652
    6. '+i' → logprob: -11.254752159118652
    7. '   ' → logprob: -12.504752159118652
    8. '1' → logprob: -12.629752159118652
    9. '[i' → logprob: -12.754752159118652
    10. '[' → logprob: -13.754752159118652

Token 1252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.750436007976532e-05
    2. '2' → logprob: -10.37503719329834
    3. ' ' → logprob: -12.62503719329834
    4. '-' → logprob: -14.12503719329834
    5. '0' → logprob: -14.50003719329834
    6. '```' → logprob: -14.81253719329834
    7. '   ' → logprob: -14.93753719329834
    8. 'i' → logprob: -15.50003719329834
    9. '
' → logprob: -15.93753719329834
    10. '+' → logprob: -16.187538146972656

Token 1253: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03328439220786095
    2. ']+' → logprob: -4.7832841873168945
    3. ' +' → logprob: -4.9082841873168945
    4. ')' → logprob: -4.9082841873168945
    5. ']' → logprob: -5.0332841873168945
    6. ')+' → logprob: -5.9082841873168945
    7. '   ' → logprob: -9.158284187316895
    8. '+l' → logprob: -9.158284187316895
    9. ')
' → logprob: -9.908284187316895
    10. ']
' → logprob: -10.033284187316895

Token 1254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007152102887630463
    2. '```' → logprob: -5.132152080535889
    3. ' if' → logprob: -7.757152080535889
    4. '    
' → logprob: -8.382152557373047
    5. 'if' → logprob: -8.382152557373047
    6. 'h' → logprob: -9.132152557373047
    7. ' h' → logprob: -9.507152557373047
    8. '       ' → logprob: -10.257152557373047
    9. '   ' → logprob: -11.007152557373047
    10. '    ' → logprob: -11.132152557373047

Token 1255: ' ans' (ID: 3345)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.8347669243812561
    2. '   ' → logprob: -1.4597668647766113
    3. 'segment' → logprob: -1.7097668647766113
    4. 'if' → logprob: -1.9597668647766113
    5. 'subset' → logprob: -5.834766864776611
    6. ' if' → logprob: -6.084766864776611
    7. ' segment' → logprob: -6.584766864776611
    8. '    
' → logprob: -6.584766864776611
    9. 'h' → logprob: -7.084766864776611
    10. 's' → logprob: -7.459766864776611

Token 1256: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.8608996868133545
    2. '=' → logprob: -1.6108996868133545
    3. ' *=' → logprob: -1.8608996868133545
    4. ' =' → logprob: -2.2358996868133545
    5. '   ' → logprob: -2.4858996868133545
    6. '```' → logprob: -3.6108996868133545
    7. '*' → logprob: -6.360899925231934
    8. '#' → logprob: -7.360899925231934
    9. '\' → logprob: -8.235899925231934
    10. '%=' → logprob: -8.235899925231934

Token 1257: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -4.36574100604048e-06
    2. ' solve' → logprob: -12.625004768371582
    3. '   ' → logprob: -14.250004768371582
    4. 'pow' → logprob: -16.000003814697266
    5. '(s' → logprob: -16.000003814697266
    6. '```' → logprob: -16.625003814697266
    7. 'sol' → logprob: -18.000003814697266
    8. '  ' → logprob: -18.500003814697266
    9. '.solve' → logprob: -19.250003814697266
    10. 'save' → logprob: -19.500003814697266

Token 1258: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -6.074907287256792e-05
    2. ' (' → logprob: -11.00006103515625
    3. '(
' → logprob: -11.00006103515625
    4. '(h' → logprob: -11.50006103515625
    5. 'H' → logprob: -11.75006103515625
    6. '(' → logprob: -11.75006103515625
    7. '```' → logprob: -14.50006103515625
    8. '((' → logprob: -14.87506103515625
    9. '([' → logprob: -14.87506103515625
    10. '`' → logprob: -17.12506103515625

Token 1259: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0003501242317724973
    2. '[(' → logprob: -8.750349998474121
    3. '[' → logprob: -8.875349998474121
    4. 'l' → logprob: -11.000349998474121
    5. '[
' → logprob: -11.000349998474121
    6. ' [' → logprob: -12.625349998474121
    7. '   ' → logprob: -12.750349998474121
    8. '(l' → logprob: -13.000349998474121
    9. ')[' → logprob: -13.000349998474121
    10. '[m' → logprob: -13.250349998474121

Token 1260: '+' (ID: 10)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.1161535307765007
    2. '+' → logprob: -2.6161534786224365
    3. 'l' → logprob: -4.116153717041016
    4. '[' → logprob: -4.616153717041016
    5. '][' → logprob: -5.991153717041016
    6. '[(' → logprob: -6.241153717041016
    7. ']' → logprob: -6.241153717041016
    8. '+l' → logprob: -6.991153717041016
    9. ']+' → logprob: -7.116153717041016
    10. '[
' → logprob: -7.366153717041016

Token 1261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.975612187583465e-05
    2. 'i' → logprob: -10.750029563903809
    3. '2' → logprob: -12.250029563903809
    4. 'r' → logprob: -14.000029563903809
    5. ' ' → logprob: -14.125029563903809
    6. '```' → logprob: -14.500029563903809
    7. '   ' → logprob: -14.750029563903809
    8. '(i' → logprob: -15.250029563903809
    9. ']' → logprob: -15.875029563903809
    10. '0' → logprob: -16.250030517578125

Token 1262: ':r' (ID: 118417)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.2835390865802765
    2. ':r' → logprob: -1.408539056777954
    3. 'r' → logprob: -7.158539295196533
    4. '][' → logprob: -7.408539295196533
    5. ':' → logprob: -7.533539295196533
    6. '(r' → logprob: -8.908538818359375
    7. ' :' → logprob: -9.408538818359375
    8. '[' → logprob: -9.408538818359375
    9. '   ' → logprob: -9.658538818359375
    10. '[
' → logprob: -10.783538818359375

Token 1263: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002352337818592787
    2. '])
' → logprob: -6.377352237701416
    3. ')' → logprob: -7.377352237701416
    4. ']' → logprob: -12.002352714538574
    5. ')
' → logprob: -12.252352714538574
    6. ' ])' → logprob: -12.877352714538574
    7. ')])' → logprob: -13.627352714538574
    8. ''])' → logprob: -13.877352714538574
    9. '])*' → logprob: -14.127352714538574
    10. '[' → logprob: -14.252352714538574

Token 1264: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.677749752998352
    2. '%' → logprob: -1.177749752998352
    3. '
' → logprob: -2.4277496337890625
    4. '```' → logprob: -2.5527496337890625
    5. '%=' → logprob: -5.4277496337890625
    6. '%
' → logprob: -5.5527496337890625
    7. '(ans' → logprob: -6.1777496337890625
    8. 'mod' → logprob: -6.4277496337890625
    9. '    
' → logprob: -6.5527496337890625
    10. ' %=' → logprob: -7.0527496337890625

Token 1265: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.003683093935251236
    2. ' ans' → logprob: -6.378683090209961
    3. 'mod' → logprob: -6.878683090209961
    4. '(ans' → logprob: -7.253683090209961
    5. '%' → logprob: -8.753683090209961
    6. '```' → logprob: -10.253683090209961
    7. '	ans' → logprob: -11.003683090209961
    8. '_ans' → logprob: -11.253683090209961
    9. '   ' → logprob: -12.128683090209961
    10. '%=' → logprob: -12.253683090209961

Token 1266: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.017060663551092148
    2. ' %=' → logprob: -4.14206075668335
    3. '%' → logprob: -6.89206075668335
    4. ' ' → logprob: -12.517060279846191
    5. '```' → logprob: -13.142060279846191
    6. ' %' → logprob: -13.267060279846191
    7. '	' → logprob: -14.517060279846191
    8. '   ' → logprob: -14.767060279846191
    9. ')%' → logprob: -15.017060279846191
    10. 'ans' → logprob: -15.142060279846191

Token 1267: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.5776860184123507e-06
    2. ' mod' → logprob: -13.00000286102295
    3. '(mod' → logprob: -15.25000286102295
    4. '10' → logprob: -17.125001907348633
    5. '```' → logprob: -20.625001907348633
    6. '	mod' → logprob: -21.375001907348633
    7. ' мод' → logprob: -23.125001907348633
    8. 'MOD' → logprob: -23.500001907348633
    9. '100' → logprob: -23.625001907348633
    10. 'mods' → logprob: -24.000001907348633

Token 1268: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23233367502689362
    2. '<|end|>' → logprob: -1.7323336601257324
    3. '
' → logprob: -4.482333660125732
    4. '```' → logprob: -4.857333660125732
    5. ')' → logprob: -5.232333660125732
    6. 'return' → logprob: -5.357333660125732
    7. '#' → logprob: -7.482333660125732
    8. '   ' → logprob: -8.98233413696289
    9. 'ans' → logprob: -9.10733413696289
    10. '    
' → logprob: -9.73233413696289

Token 1269: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1270: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.028366761282086372
    2. '(' → logprob: -3.903366804122925
    3. '()' → logprob: -4.903366565704346
    4. '('' → logprob: -8.028367042541504
    5. 'ans' → logprob: -11.153367042541504
    6. '("("' → logprob: -11.528367042541504
    7. '("' → logprob: -11.778367042541504
    8. '("")' → logprob: -12.153367042541504
    9. '(
' → logprob: -12.903367042541504
    10. '(len' → logprob: -13.778367042541504

Token 1271: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.575563020305708e-05
    2. '())' → logprob: -9.875065803527832
    3. '()' → logprob: -11.500065803527832
    4. '))' → logprob: -13.500065803527832
    5. ')`' → logprob: -13.875065803527832
    6. '`)' → logprob: -14.750065803527832
    7. ' )' → logprob: -14.875065803527832
    8. ')
' → logprob: -15.125065803527832
    9. '**' → logprob: -15.375065803527832
    10. ')**' → logprob: -15.625065803527832

Token 1272: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1273: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1274: ' Aff' (ID: 13741)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1275: 'ichage' (ID: 118475)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.21431288123130798
    2. 'icher' → logprob: -2.589312791824341
    3. 'ichage' → logprob: -2.964312791824341
    4. '#' → logprob: -3.589312791824341
    5. 'ich' → logprob: -4.08931303024292
    6. 'ic' → logprob: -4.58931303024292
    7. 'iche' → logprob: -5.21431303024292
    8. 'cher' → logprob: -5.83931303024292
    9. 'iché' → logprob: -6.83931303024292
    10. '```' → logprob: -7.58931303024292

Token 1276: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03550814837217331
    2. '<|end|>' → logprob: -3.535508155822754
    3. '(' → logprob: -5.285508155822754
    4. ')' → logprob: -8.160508155822754
    5. '("")' → logprob: -9.535508155822754
    6. '#' → logprob: -9.535508155822754
    7. '```' → logprob: -9.785508155822754
    8. '()
' → logprob: -9.785508155822754
    9. '\' → logprob: -10.660508155822754
    10. '<|end|>' → logprob: -10.785508155822754

Token 1277: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5336469411849976
    2. 'result' → logprob: -1.0336469411849976
    3. 'final' → logprob: -3.158647060394287
    4. 'answer' → logprob: -4.283647060394287
    5. 'solution' → logprob: -7.033647060394287
    6. 'rés' → logprob: -7.783647060394287
    7. '(ans' → logprob: -9.283646583557129
    8. 'resultado' → logprob: -9.783646583557129
    9. ' final' → logprob: -11.158646583557129
    10. 'total' → logprob: -11.283646583557129

Token 1278: ' final' (ID: 1721)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6160051822662354
    2. '<|end|>' → logprob: -0.8660051822662354
    3. '```' → logprob: -3.3660051822662354
    4. '
' → logprob: -6.366004943847656
    5. '#' → logprob: -6.991004943847656
    6. '<|end|>' → logprob: -7.116004943847656
    7. '\n' → logprob: -7.991004943847656
    8. '}' → logprob: -8.366004943847656
    9. '``' → logprob: -9.116004943847656
    10. '')' → logprob: -9.366004943847656


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1276
Tokens correctement prédits (1ère position, stricte): 380
Tokens correctement prédits (1ère position, avec adaptation): 408
Tokens correctement prédits (top 10): 862
Précision stricte (1ère position): 29.78%
Précision adaptée (1ère position): 31.97%
Précision (top 10): 67.55%
================================================================================
