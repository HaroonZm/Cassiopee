================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

N, M = map(int, sys.stdin.readline().split())
adj = []
for i in range(N+1):
    adj.append([])

for i in range(M):
    a, b = map(int, sys.stdin.readline().split())
    adj[a].append(b)
    adj[b].append(a)

deg = []
for i in range(N+1):
    deg.append(len(adj[i]))

f = []
ok = False
for i in range(1, N+1):
    if deg[i] % 2 == 1:
        print('No')
        sys.exit()
    elif deg[i] >= 6:
        ok = True
    elif deg[i] == 4:
        f.append(i)

if ok:
    print('Yes')
    sys.exit()

if len(f) >= 3:
    print('Yes')
    sys.exit()

if len(f) <= 1:
    print('No')
    sys.exit()

t1 = f[0]
t2 = f[1]
seen = [0] * (N+1)
seen[t1] = 1
seen[t2] = 1
stack = [t1]

while stack:
    v = stack.pop()
    for u in adj[v]:
        if seen[u] == 0:
            seen[u] = 1
            stack.append(u)

if sum(seen) != N:
    print('Yes')
else:
    print('No')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3356378674507141
    2. '=' → logprob: -1.3356378078460693
    3. ' ' → logprob: -3.9606378078460693
    4. ',' → logprob: -6.460638046264648
    5. '  ' → logprob: -7.585638046264648
    6. '.' → logprob: -7.710638046264648
    7. '   ' → logprob: -9.085638046264648
    8. '_' → logprob: -9.210638046264648
    9. '=sys' → logprob: -10.085638046264648
    10. ')' → logprob: -10.210638046264648

Token 5: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5408611297607422
    2. ' M' → logprob: -1.6658611297607422
    3. ' K' → logprob: -2.040861129760742
    4. 'K' → logprob: -3.290861129760742
    5. 'M' → logprob: -3.290861129760742
    6. ' =' → logprob: -4.915861129760742
    7. 'input' → logprob: -5.915861129760742
    8. '  ' → logprob: -6.290861129760742
    9. '=' → logprob: -6.665861129760742
    10. ' input' → logprob: -6.665861129760742

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22575870156288147
    2. '=' → logprob: -1.600758671760559
    3. ',' → logprob: -8.22575855255127
    4. ' ' → logprob: -10.22575855255127
    5. '<|end|>' → logprob: -10.85075855255127
    6. ')' → logprob: -11.60075855255127
    7. ' ,' → logprob: -12.47575855255127
    8. '```' → logprob: -13.22575855255127
    9. '`' → logprob: -13.85075855255127
    10. ' =
' → logprob: -13.97575855255127

Token 7: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004668526351451874
    2. 'map' → logprob: -5.379668712615967
    3. ' input' → logprob: -10.504668235778809
    4. ' ' → logprob: -11.004668235778809
    5. ' sys' → logprob: -13.379668235778809
    6. '0' → logprob: -13.879668235778809
    7. ' list' → logprob: -14.254668235778809
    8. 'input' → logprob: -14.504668235778809
    9. ' [' → logprob: -15.379668235778809
    10. '10' → logprob: -16.254669189453125

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02152743749320507
    2. '(int' → logprob: -4.646527290344238
    3. '(str' → logprob: -4.896527290344238
    4. '(lambda' → logprob: -5.521527290344238
    5. '(
' → logprob: -10.146527290344238
    6. '(input' → logprob: -10.521527290344238
    7. '(sys' → logprob: -11.021527290344238
    8. '(list' → logprob: -11.021527290344238
    9. '()' → logprob: -11.271527290344238
    10. '(len' → logprob: -11.271527290344238

Token 9: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.2742639183998108
    2. ')' → logprob: -1.649263858795166
    3. '(' → logprob: -3.399263858795166
    4. '(input' → logprob: -4.649263858795166
    5. ',' → logprob: -6.524263858795166
    6. '```' → logprob: -7.399263858795166
    7. '=sys' → logprob: -7.524263858795166
    8. '(system' → logprob: -7.649263858795166
    9. '(str' → logprob: -8.024264335632324
    10. '`' → logprob: -8.524264335632324

Token 10: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.124611735343933
    2. ' input' → logprob: -1.124611735343933
    3. ' sys' → logprob: -1.624611735343933
    4. 'sys' → logprob: -1.874611735343933
    5. ')' → logprob: -10.499611854553223
    6. '(sys' → logprob: -12.499611854553223
    7. ' ' → logprob: -12.624611854553223
    8. ' )' → logprob: -12.749611854553223
    9. '=sys' → logprob: -13.499611854553223
    10. '	sys' → logprob: -15.124611854553223

Token 11: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.24254143238067627
    2. '.' → logprob: -2.2425413131713867
    3. '.argv' → logprob: -2.2425413131713867
    4. '.readline' → logprob: -6.492541313171387
    5. '.stdout' → logprob: -6.867541313171387
    6. '.std' → logprob: -8.867541313171387
    7. ' .' → logprob: -9.242541313171387
    8. '.input' → logprob: -9.867541313171387
    9. '.import' → logprob: -9.867541313171387
    10. '.standard' → logprob: -11.242541313171387

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.012211170047521591
    2. '.' → logprob: -5.012211322784424
    3. '.read' → logprob: -5.262211322784424
    4. '.readlines' → logprob: -8.887210845947266
    5. '.stdin' → logprob: -9.012210845947266
    6. ').' → logprob: -11.637210845947266
    7. '.argv' → logprob: -11.887210845947266
    8. '.)' → logprob: -12.512210845947266
    9. '.input' → logprob: -12.762210845947266
    10. '.write' → logprob: -13.512210845947266

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.013488071039319038
    2. '().' → logprob: -4.763488292694092
    3. '()' → logprob: -5.513488292694092
    4. ')' → logprob: -7.513488292694092
    5. '()))' → logprob: -8.388487815856934
    6. '());' → logprob: -11.263487815856934
    7. '()[' → logprob: -11.763487815856934
    8. '();)' → logprob: -11.888487815856934
    9. '()),' → logprob: -12.013487815856934
    10. ' ())' → logprob: -12.013487815856934

Token 14: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07156533002853394
    2. 'split' → logprob: -3.0715653896331787
    3. 'rstrip' → logprob: -3.8215653896331787
    4. ')' → logprob: -7.6965651512146
    5. 'read' → logprob: -7.9465651512146
    6. 'replace' → logprob: -12.071565628051758
    7. ' strip' → logprob: -13.196565628051758
    8. '```' → logprob: -13.321565628051758
    9. 'decode' → logprob: -13.571565628051758
    10. '())' → logprob: -13.571565628051758

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038127838633954525
    2. '))' → logprob: -5.628812789916992
    3. '())' → logprob: -8.878812789916992
    4. '()' → logprob: -9.628812789916992
    5. '`)' → logprob: -13.003812789916992
    6. '(' → logprob: -13.503812789916992
    7. ')
' → logprob: -14.128812789916992
    8. ')))' → logprob: -14.503812789916992
    9. '),' → logprob: -14.628812789916992
    10. ' )' → logprob: -14.753812789916992

Token 16: 'adj' (ID: 57001)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8149391412734985
    2. '\n' → logprob: -0.9399391412734985
    3. 'a' → logprob: -2.939939022064209
    4. '
' → logprob: -3.564939022064209
    5. 'd' → logprob: -4.689939022064209
    6. '\' → logprob: -4.689939022064209
    7. ')' → logprob: -4.689939022064209
    8. '' → logprob: -4.939939022064209
    9. 'data' → logprob: -5.189939022064209
    10. 'r' → logprob: -5.314939022064209

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11882121860980988
    2. 'acency' → logprob: -2.243821144104004
    3. 'acent' → logprob: -5.368821144104004
    4. '[]' → logprob: -7.368821144104004
    5. '\[' → logprob: -8.493821144104004
    6. '[a' → logprob: -9.368821144104004
    7. '[u' → logprob: -9.368821144104004
    8. '[][]' → logprob: -9.618821144104004
    9. 'ac' → logprob: -10.118821144104004
    10. ']' → logprob: -10.243821144104004

Token 18: ' []
' (ID: 8911)
  Prédit: ' [[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.5902861952781677
    2. '[' → logprob: -0.8402861952781677
    3. ' [' → logprob: -4.5902862548828125
    4. ' []' → logprob: -5.7152862548828125
    5. '[]' → logprob: -7.2152862548828125
    6. ' ' → logprob: -10.590286254882812
    7. ' [{}' → logprob: -11.090286254882812
    8. ' {}' → logprob: -11.590286254882812
    9. ' [[' → logprob: -12.715286254882812
    10. '[:]' → logprob: -12.965286254882812

Token 19: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018514296039938927
    2. '[' → logprob: -4.393514156341553
    3. ' for' → logprob: -5.393514156341553
    4. '.' → logprob: -7.393514156341553
    5. '(' → logprob: -8.393514633178711
    6. 'f' → logprob: -8.518514633178711
    7. '_' → logprob: -8.768514633178711
    8. '.for' → logprob: -9.768514633178711
    9. ' ' → logprob: -10.018514633178711
    10. '=' → logprob: -10.643514633178711

Token 20: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05648190528154373
    2. ' i' → logprob: -3.1814818382263184
    3. ' _' → logprob: -4.431481838226318
    4. '_' → logprob: -6.931481838226318
    5. ' ‌' → logprob: -8.431482315063477
    6. '  ' → logprob: -8.556482315063477
    7. 'i' → logprob: -10.306482315063477
    8. ' ​' → logprob: -10.931482315063477
    9. ' ▁' → logprob: -11.181482315063477
    10. ' ' → logprob: -11.181482315063477

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.226474791765213
    2. 'in' → logprob: -1.6014747619628906
    3. 'n' → logprob: -7.226474761962891
    4. ' ' → logprob: -8.35147476196289
    5. '_' → logprob: -10.85147476196289
    6. 'i' → logprob: -11.60147476196289
    7. 'range' → logprob: -11.60147476196289
    8. 'import' → logprob: -11.85147476196289
    9. '	in' → logprob: -12.10147476196289
    10. ' i' → logprob: -12.22647476196289

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132704198360443
    2. 'range' → logprob: -1.3132704496383667
    3. '	range' → logprob: -12.813270568847656
    4. 'rang' → logprob: -13.313270568847656
    5. '(range' → logprob: -14.188270568847656
    6. 'r' → logprob: -14.438270568847656
    7. ' ' → logprob: -14.563270568847656
    8. 'ra' → logprob: -14.563270568847656
    9. ' ra' → logprob: -14.688270568847656
    10. ' ran' → logprob: -14.813270568847656

Token 23: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038289371877908707
    2. '(N' → logprob: -5.628829002380371
    3. ' (' → logprob: -9.003829002380371
    4. '(M' → logprob: -9.253829002380371
    5. '(n' → logprob: -12.753829002380371
    6. '(len' → logprob: -12.753829002380371
    7. '(
' → logprob: -14.003829002380371
    8. '(range' → logprob: -14.378829002380371
    9. ' ' → logprob: -14.503829002380371
    10. '(s' → logprob: -14.753829002380371

Token 24: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011259667575359344
    2. ')' → logprob: -4.51125955581665
    3. ' ):' → logprob: -9.011260032653809
    4. '):
' → logprob: -10.261260032653809
    5. ':' → logprob: -10.386260032653809
    6. '+' → logprob: -11.136260032653809
    7. ',' → logprob: -13.136260032653809
    8. ' )' → logprob: -13.386260032653809
    9. ' ' → logprob: -13.761260032653809
    10. '):
' → logprob: -14.386260032653809

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004963174578733742
    2. ' ' → logprob: -7.6254963874816895
    3. '2' → logprob: -12.500495910644531
    4. ')' → logprob: -13.000495910644531
    5. '   ' → logprob: -14.625495910644531
    6. '  ' → logprob: -15.000495910644531
    7. '+' → logprob: -15.500495910644531
    8. '0' → logprob: -15.500495910644531
    9. '-' → logprob: -15.500495910644531
    10. '5' → logprob: -15.625495910644531

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01681746356189251
    2. ')' → logprob: -4.391817569732666
    3. ' ):' → logprob: -6.016817569732666
    4. ':' → logprob: -6.391817569732666
    5. '):
' → logprob: -9.016817092895508
    6. ' )' → logprob: -10.016817092895508
    7. ' :' → logprob: -12.016817092895508
    8. ']:' → logprob: -12.391817092895508
    9. ',' → logprob: -12.641817092895508
    10. ' ' → logprob: -13.766817092895508

Token 27: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38008421659469604
    2. ' adj' → logprob: -1.5050842761993408
    3. 'adj' → logprob: -2.755084276199341
    4. '    ' → logprob: -4.505084037780762
    5. ' []' → logprob: -4.630084037780762
    6. '[' → logprob: -5.255084037780762
    7. '   ' → logprob: -7.005084037780762
    8. '[]' → logprob: -7.505084037780762
    9. ' [
' → logprob: -8.005084037780762
    10. '     
' → logprob: -8.130084037780762

Token 28: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.128930002450943
    2. ' []' → logprob: -2.62893009185791
    3. 'adj' (adapté à ' adj') → logprob: -3.12893009185791
    4. '[]' → logprob: -5.75393009185791
    5. '   ' → logprob: -7.12893009185791
    6. ' adjacency' → logprob: -7.87893009185791
    7. '[' → logprob: -8.12893009185791
    8. '    ' → logprob: -9.25393009185791
    9. ' [' → logprob: -9.37893009185791
    10. ' ' → logprob: -9.62893009185791

Token 29: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5786012411117554
    2. '.' → logprob: -0.8286012411117554
    3. ' .' → logprob: -6.453601360321045
    4. ' =' → logprob: -7.328601360321045
    5. '[' → logprob: -8.453600883483887
    6. '=' → logprob: -9.328600883483887
    7. ' ' → logprob: -10.453600883483887
    8. '.extend' → logprob: -10.703600883483887
    9. '.app' → logprob: -10.828600883483887
    10. '.setdefault' → logprob: -11.453600883483887

Token 30: '([]' (ID: 18742)
  Prédit: '([]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.00010831133840838447
    2. '([' → logprob: -9.87510871887207
    3. '(' → logprob: -10.25010871887207
    4. '[]' → logprob: -10.87510871887207
    5. '([])
' → logprob: -13.37510871887207
    6. '(set' → logprob: -14.12510871887207
    7. '(list' → logprob: -16.25010871887207
    8. '({' → logprob: -16.50010871887207
    9. '([],' → logprob: -17.00010871887207
    10. '((' → logprob: -18.25010871887207

Token 31: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.522638169466518e-05
    2. ')
' → logprob: -10.625024795532227
    3. ' )' → logprob: -14.500024795532227
    4. '
' → logprob: -15.875024795532227
    5. ')

' → logprob: -16.375024795532227
    6. '<|end|>' → logprob: -17.250024795532227
    7. ')
' → logprob: -17.750024795532227
    8. '' → logprob: -17.875024795532227
    9. '[' → logprob: -18.000024795532227
    10. '))' → logprob: -18.000024795532227

Token 32: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004029718693345785
    2. ' for' → logprob: -5.629029750823975
    3. 'graph' → logprob: -9.879029273986816
    4. 'f' → logprob: -10.129029273986816
    5. '#' → logprob: -10.254029273986816
    6. ')' → logprob: -10.379029273986816
    7. 'visited' → logprob: -10.629029273986816
    8. '```' → logprob: -10.754029273986816
    9. '   ' → logprob: -11.004029273986816
    10. '[' → logprob: -11.004029273986816

Token 33: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0468989722430706
    2. ' i' → logprob: -3.5468990802764893
    3. ' _' → logprob: -4.42189884185791
    4. '  ' → logprob: -6.42189884185791
    5. '_' → logprob: -6.54689884185791
    6. ' range' → logprob: -6.79689884185791
    7. ' space' → logprob: -8.42189884185791
    8. ' ‌' → logprob: -8.54689884185791
    9. ' I' → logprob: -10.04689884185791
    10. 'i' → logprob: -10.04689884185791

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16173966228961945
    2. 'in' → logprob: -1.911739706993103
    3. ' ' → logprob: -6.536739826202393
    4. '  ' → logprob: -10.786739349365234
    5. '(' → logprob: -11.661739349365234
    6. '_' → logprob: -11.786739349365234
    7. 'n' → logprob: -12.536739349365234
    8. ' i' → logprob: -12.536739349365234
    9. 'range' → logprob: -12.536739349365234
    10. 'import' → logprob: -13.161739349365234

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519315779209137
    2. ' range' → logprob: -1.5019315481185913
    3. ' ' → logprob: -13.876931190490723
    4. '(range' → logprob: -14.626931190490723
    5. '	range' → logprob: -14.751931190490723
    6. 'rang' → logprob: -15.376931190490723
    7. 'r' → logprob: -16.12693214416504
    8. ' xrange' → logprob: -16.50193214416504
    9. '  ' → logprob: -17.00193214416504
    10. '```' → logprob: -17.25193214416504

Token 36: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.011067868210375309
    2. '(' → logprob: -4.511067867279053
    3. '(m' → logprob: -12.136068344116211
    4. '(N' → logprob: -12.261068344116211
    5. 'M' → logprob: -12.511068344116211
    6. ' (' → logprob: -13.011068344116211
    7. '(
' → logprob: -13.761068344116211
    8. ')' → logprob: -13.886068344116211
    9. '()' → logprob: -14.886068344116211
    10. ' M' → logprob: -14.886068344116211

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005492483731359243
    2. ' ):' → logprob: -5.380492687225342
    3. ')' → logprob: -7.130492687225342
    4. '):
' → logprob: -10.505492210388184
    5. ':' → logprob: -10.630492210388184
    6. ' )' → logprob: -11.380492210388184
    7. ',' → logprob: -13.255492210388184
    8. '   ' → logprob: -13.380492210388184
    9. '+' → logprob: -13.755492210388184
    10. '():' → logprob: -14.130492210388184

Token 38: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6269403696060181
    2. '   ' → logprob: -1.251940369606018
    3. '<|end|>' → logprob: -2.5019402503967285
    4. ' readline' → logprob: -3.3769402503967285
    5. '    
' → logprob: -4.3769402503967285
    6. ' a' → logprob: -5.1269402503967285
    7. 'n' → logprob: -5.3769402503967285
    8. ' input' → logprob: -5.3769402503967285
    9. ' ' → logprob: -5.3769402503967285
    10. 'a' → logprob: -5.5019402503967285

Token 39: ' a' (ID: 261)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.13541626930236816
    2. 'u' → logprob: -2.135416269302368
    3. ' line' → logprob: -6.135416030883789
    4. ' node' → logprob: -6.135416030883789
    5. 'a' (adapté à ' a') → logprob: -6.385416030883789
    6. 's' → logprob: -7.760416030883789
    7. ' a' → logprob: -7.885416030883789
    8. 'x' → logprob: -8.260416030883789
    9. 'node' → logprob: -8.260416030883789
    10. 'line' → logprob: -8.260416030883789

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18059174716472626
    2. ' ,' → logprob: -1.8055917024612427
    3. ',b' → logprob: -7.180591583251953
    4. ' b' → logprob: -10.430591583251953
    5. ' ' → logprob: -10.680591583251953
    6. 'b' → logprob: -11.680591583251953
    7. ',a' → logprob: -12.305591583251953
    8. ',d' → logprob: -12.430591583251953
    9. 'd' → logprob: -12.555591583251953
    10. ',n' → logprob: -13.430591583251953

Token 41: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.28196945786476135
    2. ' b' → logprob: -1.406969428062439
    3. '<|end|>' → logprob: -7.6569695472717285
    4. ' ' → logprob: -8.03196907043457
    5. 'space' → logprob: -11.90696907043457
    6. ' space' → logprob: -12.15696907043457
    7. '<|end|>' → logprob: -12.28196907043457
    8. '  ' → logprob: -13.65696907043457
    9. ' ' → logprob: -14.65696907043457
    10. 's' → logprob: -14.65696907043457

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061972279101610184
    2. '=' → logprob: -2.8119723796844482
    3. ' ' → logprob: -13.061972618103027
    4. ')' → logprob: -14.061972618103027
    5. '<|end|>' → logprob: -14.686972618103027
    6. ',' → logprob: -14.811972618103027
    7. '=input' → logprob: -15.311972618103027
    8. '=int' → logprob: -15.436972618103027
    9. '  ' → logprob: -16.31197166442871
    10. ' =
' → logprob: -16.43697166442871

Token 43: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0021938022691756487
    2. 'map' → logprob: -6.127193927764893
    3. ' ' → logprob: -12.752193450927734
    4. '	map' → logprob: -12.877193450927734
    5. ' list' → logprob: -13.377193450927734
    6. ' ' → logprob: -14.002193450927734
    7. ' mapa' → logprob: -15.752193450927734
    8. ' 
' → logprob: -15.752193450927734
    9. ',map' → logprob: -16.002193450927734
    10. '(map' → logprob: -16.377193450927734

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017452733591198921
    2. '(' → logprob: -6.376745223999023
    3. '<int' → logprob: -10.626745223999023
    4. '[int' → logprob: -12.376745223999023
    5. '=int' → logprob: -12.501745223999023
    6. '(str' → logprob: -12.751745223999023
    7. ' (' → logprob: -12.876745223999023
    8. 'int' → logprob: -13.626745223999023
    9. ']int' → logprob: -13.876745223999023
    10. ',int' → logprob: -14.001745223999023

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004814342129975557
    2. '(sys' → logprob: -5.754814147949219
    3. '(' → logprob: -6.629814147949219
    4. '(),' → logprob: -9.004814147949219
    5. ')' → logprob: -9.254814147949219
    6. ' ,' → logprob: -10.129814147949219
    7. '=sys' → logprob: -10.504814147949219
    8. '),' → logprob: -12.004814147949219
    9. 'sys' → logprob: -12.004814147949219
    10. ',System' → logprob: -12.879814147949219

Token 46: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.38691434264183044
    2. 'sys' → logprob: -1.1369143724441528
    3. '(sys' → logprob: -10.886914253234863
    4. '	sys' → logprob: -11.386914253234863
    5. '=sys' → logprob: -11.511914253234863
    6. ' ' → logprob: -13.511914253234863
    7. ')' → logprob: -14.136914253234863
    8. '_sys' → logprob: -15.011914253234863
    9. '.sys' → logprob: -15.386914253234863
    10. 's' → logprob: -16.01191520690918

Token 47: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.598092684522271e-05
    2. '.stdout' → logprob: -10.250056266784668
    3. '.readline' → logprob: -12.125056266784668
    4. '.' → logprob: -12.250056266784668
    5. 'stdin' → logprob: -12.375056266784668
    6. '.argv' → logprob: -12.875056266784668
    7. '.std' → logprob: -12.875056266784668
    8. '.stderr' → logprob: -14.750056266784668
    9. '(stdin' → logprob: -14.875056266784668
    10. '.st' → logprob: -16.62505531311035

Token 48: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0007137430948205292
    2. '().' → logprob: -7.25071382522583
    3. ').' → logprob: -13.250713348388672
    4. '.stdin' → logprob: -14.000713348388672
    5. '.' → logprob: -14.750713348388672
    6. '.readlines' → logprob: -14.875713348388672
    7. '())' → logprob: -16.375713348388672
    8. '()).' → logprob: -16.500713348388672
    9. '```' → logprob: -16.875713348388672
    10. '   ' → logprob: -17.250713348388672

Token 49: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001085497424355708
    2. '()' → logprob: -9.37510871887207
    3. '.readline' → logprob: -10.87510871887207
    4. ')' → logprob: -13.00010871887207
    5. ' ().' → logprob: -13.50010871887207
    6. '.' → logprob: -14.50010871887207
    7. '())' → logprob: -15.62510871887207
    8. '().__' → logprob: -16.25010871887207
    9. '(' → logprob: -16.50010871887207
    10. '```' → logprob: -17.00010871887207

Token 50: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4378848391061183e-05
    2. 'strip' → logprob: -11.500014305114746
    3. 'rstrip' → logprob: -12.750014305114746
    4. 'read' → logprob: -14.375014305114746
    5. ' split' → logprob: -14.875014305114746
    6. 'spl' → logprob: -15.125014305114746
    7. '(split' → logprob: -17.250015258789062
    8. 's' → logprob: -17.875015258789062
    9. ')' → logprob: -19.125015258789062
    10. '```' → logprob: -20.625015258789062

Token 51: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004532419610768557
    2. '())' → logprob: -6.004532337188721
    3. '()' → logprob: -6.379532337188721
    4. '))' → logprob: -8.004532814025879
    5. ')
' → logprob: -11.254532814025879
    6. '(' → logprob: -13.004532814025879
    7. ' )' → logprob: -13.129532814025879
    8. '`)' → logprob: -13.504532814025879
    9. '   ' → logprob: -13.629532814025879
    10. '())
' → logprob: -14.504532814025879

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008451338857412338
    2. 'adj' → logprob: -5.258451461791992
    3. '
' → logprob: -7.383451461791992
    4. '```' → logprob: -7.383451461791992
    5. '<|end|>' → logprob: -7.633451461791992
    6. '    
' → logprob: -7.633451461791992
    7. ')' → logprob: -8.008451461791992
    8. '[' → logprob: -9.508451461791992
    9. ' adj' → logprob: -9.633451461791992
    10. '(adj' → logprob: -9.758451461791992

Token 53: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.03561778366565704
    2. ' adj' → logprob: -3.7856178283691406
    3. '   ' → logprob: -4.410617828369141
    4. '```' → logprob: -10.16061782836914
    5. '(adj' → logprob: -10.78561782836914
    6. '    
' → logprob: -10.91061782836914
    7. 'a' → logprob: -11.41061782836914
    8. ' 
' → logprob: -11.53561782836914
    9. 'ad' → logprob: -11.53561782836914
    10. ' ' → logprob: -12.28561782836914

Token 54: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00040302498382516205
    2. '[' → logprob: -8.25040340423584
    3. '[b' → logprob: -8.87540340423584
    4. ' [' → logprob: -14.25040340423584
    5. '```' → logprob: -14.37540340423584
    6. '[i' → logprob: -15.25040340423584
    7. 'a' → logprob: -15.37540340423584
    8. '\[' → logprob: -16.500402450561523
    9. '   ' → logprob: -17.125402450561523
    10. '[A' → logprob: -17.250402450561523

Token 55: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.6652707457542419
    2. '].' → logprob: -0.9152707457542419
    3. ').' → logprob: -2.7902708053588867
    4. '.' → logprob: -3.7902708053588867
    5. '[' → logprob: -7.040270805358887
    6. ')' → logprob: -8.290270805358887
    7. ' .' → logprob: -9.165270805358887
    8. ']' → logprob: -9.290270805358887
    9. '.add' → logprob: -10.790270805358887
    10. '   ' → logprob: -10.915270805358887

Token 56: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -15.75
    3. ' append' → logprob: -16.125
    4. 'appen' → logprob: -18.25
    5. 'push' → logprob: -18.5
    6. 'add' → logprob: -19.0
    7. 'Append' → logprob: -19.0
    8. '_append' → logprob: -19.125
    9. '	append' → logprob: -19.875
    10. 'app' → logprob: -20.75

Token 57: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.505351095460355e-05
    2. '(' → logprob: -9.500075340270996
    3. 'b' → logprob: -16.75007438659668
    4. '((' → logprob: -17.12507438659668
    5. ' (' → logprob: -18.25007438659668
    6. '(
' → logprob: -18.37507438659668
    7. '(a' → logprob: -19.25007438659668
    8. '(B' → logprob: -19.50007438659668
    9. ')b' → logprob: -19.50007438659668
    10. '	b' → logprob: -20.37507438659668

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.081584716506768e-05
    2. ')
' → logprob: -11.125020980834961
    3. ' )' → logprob: -12.125020980834961
    4. '),' → logprob: -16.37502098083496
    5. '))' → logprob: -16.62502098083496
    6. '   ' → logprob: -16.62502098083496
    7. '<|end|>' → logprob: -16.87502098083496
    8. ')

' → logprob: -17.00002098083496
    9. ')}}' → logprob: -17.50002098083496
    10. ')#' → logprob: -17.62502098083496

Token 59: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' adj' (ID: 20251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0451771020889282
    2. 'adj' (adapté à ' adj') → logprob: -1.2951771020889282
    3. '\n' → logprob: -2.4201769828796387
    4. ' ' → logprob: -2.5451769828796387
    5. '<|end|>' → logprob: -2.5451769828796387
    6. ' 
' → logprob: -3.2951769828796387
    7. ' adj' → logprob: -3.4201769828796387
    8. ')' → logprob: -4.295176982879639
    9. '    
' → logprob: -4.670176982879639
    10. '  
' → logprob: -4.920176982879639

Token 61: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.011670373380184174
    2. '[a' → logprob: -4.5116705894470215
    3. '[' → logprob: -7.3866705894470215
    4. 'b' → logprob: -14.386670112609863
    5. '```' → logprob: -14.386670112609863
    6. '[s' → logprob: -14.386670112609863
    7. ' [' → logprob: -15.011670112609863
    8. '[i' → logprob: -15.761670112609863
    9. '.' → logprob: -16.26167106628418
    10. '[c' → logprob: -16.76167106628418

Token 62: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.06119540333747864
    2. '].' → logprob: -2.9361953735351562
    3. '.append' → logprob: -5.811195373535156
    4. '.' → logprob: -6.186195373535156
    5. ')' → logprob: -6.811195373535156
    6. '   ' → logprob: -9.811195373535156
    7. ' .' → logprob: -10.686195373535156
    8. ' ).' → logprob: -10.686195373535156
    9. '}.' → logprob: -11.686195373535156
    10. ' ' → logprob: -12.186195373535156

Token 63: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.60414821645827e-06
    2. 'appen' → logprob: -12.375004768371582
    3. ' append' → logprob: -15.125004768371582
    4. '	append' → logprob: -16.875003814697266
    5. 'app' → logprob: -17.500003814697266
    6. '.append' → logprob: -18.250003814697266
    7. 'adj' → logprob: -19.000003814697266
    8. 'add' → logprob: -20.000003814697266
    9. '```' → logprob: -20.375003814697266
    10. 'a' → logprob: -20.375003814697266

Token 64: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00026181264547631145
    2. '(' → logprob: -8.250262260437012
    3. 'a' → logprob: -14.750262260437012
    4. '(
' → logprob: -16.000261306762695
    5. '(A' → logprob: -17.125261306762695
    6. '('' → logprob: -18.875261306762695
    7. '((' → logprob: -19.250261306762695
    8. '("("' → logprob: -19.500261306762695
    9. '(

' → logprob: -19.625261306762695
    10. '(an' → logprob: -19.625261306762695

Token 65: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.15441757265944e-05
    2. ')
' → logprob: -10.375031471252441
    3. ' )' → logprob: -15.875031471252441
    4. ')

' → logprob: -16.500032424926758
    5. '#' → logprob: -17.750032424926758
    6. '))' → logprob: -18.625032424926758
    7. ')`' → logprob: -18.625032424926758
    8. '
' → logprob: -18.750032424926758
    9. '```' → logprob: -18.750032424926758
    10. '),' → logprob: -18.875032424926758

Token 66: 'deg' (ID: 30546)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.09061900526285172
    2. 'v' → logprob: -2.7156190872192383
    3. 'd' → logprob: -5.340619087219238
    4. 'def' → logprob: -5.840619087219238
    5. 'dist' → logprob: -5.840619087219238
    6. 'for' → logprob: -6.465619087219238
    7. 'visit' → logprob: -6.465619087219238
    8. 'q' → logprob: -6.715619087219238
    9. 'depth' → logprob: -6.840619087219238
    10. 'distance' → logprob: -7.215619087219238

Token 67: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3288823664188385
    2. 's' → logprob: -2.0788824558258057
    3. '[]' → logprob: -2.3288824558258057
    4. '(' → logprob: -3.8288824558258057
    5. 'ree' → logprob: -4.203882217407227
    6. 'rees' → logprob: -4.578882217407227
    7. ']' → logprob: -5.453882217407227
    8. '[:]' → logprob: -5.828882217407227
    9. '_' → logprob: -7.703882217407227
    10. '\[' → logprob: -7.953882217407227

Token 68: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12869775295257568
    2. '[len' → logprob: -2.1286978721618652
    3. '[]' → logprob: -7.128697872161865
    4. '[N' → logprob: -7.628697872161865
    5. '[i' → logprob: -8.503697395324707
    6. ' [' → logprob: -9.378697395324707
    7. '[n' → logprob: -10.128697395324707
    8. '[a' → logprob: -10.253697395324707
    9. '[int' → logprob: -10.253697395324707
    10. '[node' → logprob: -11.003697395324707

Token 69: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.044626325368881226
    2. '[' → logprob: -3.544626235961914
    3. ' for' → logprob: -4.919626235961914
    4. '(' → logprob: -4.919626235961914
    5. '[]' → logprob: -9.419626235961914
    6. '=' → logprob: -10.169626235961914
    7. '[:]' → logprob: -11.419626235961914
    8. ' =' → logprob: -12.419626235961914
    9. '()' → logprob: -12.794626235961914
    10. '[i' → logprob: -12.794626235961914

Token 70: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01172704342752695
    2. 'i' → logprob: -4.7617268562316895
    3. ' ' → logprob: -6.1367268562316895
    4. '_' → logprob: -7.5117268562316895
    5. ' _' → logprob: -7.8867268562316895
    6. '	i' → logprob: -11.636727333068848
    7. ' node' → logprob: -12.386727333068848
    8. ' j' → logprob: -13.011727333068848
    9. ' ‌' → logprob: -13.386727333068848
    10. '_i' → logprob: -14.136727333068848

Token 71: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6960708498954773
    2. ' in' → logprob: -0.8210708498954773
    3. 'in' → logprob: -2.821070909500122
    4. 'n' → logprob: -7.071070671081543
    5. ' i' → logprob: -7.446070671081543
    6. '  ' → logprob: -7.946070671081543
    7. ' n' → logprob: -9.946070671081543
    8. 'i' → logprob: -10.821070671081543
    9. '_' → logprob: -11.071070671081543
    10. ')' → logprob: -11.571070671081543

Token 72: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1718573421239853
    2. ' ' → logprob: -1.9218573570251465
    3. 'range' → logprob: -4.5468573570251465
    4. '(range' → logprob: -7.2968573570251465
    5. ' (' → logprob: -8.921856880187988
    6. '(' → logprob: -9.046856880187988
    7. '  ' → logprob: -11.671856880187988
    8. ' )' → logprob: -12.546856880187988
    9. ' xrange' → logprob: -12.546856880187988
    10. '	range' → logprob: -12.671856880187988

Token 73: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07905414700508118
    2. '(N' → logprob: -2.579054117202759
    3. '(range' → logprob: -8.95405387878418
    4. '(
' → logprob: -11.32905387878418
    5. '(n' → logprob: -11.57905387878418
    6. ' (' → logprob: -12.95405387878418
    7. '()' → logprob: -13.07905387878418
    8. '((' → logprob: -13.45405387878418
    9. '(len' → logprob: -13.57905387878418
    10. ' range' → logprob: -13.57905387878418

Token 74: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002714681322686374
    2. ' +' → logprob: -8.500271797180176
    3. ')' → logprob: -10.625271797180176
    4. '1' → logprob: -10.875271797180176
    5. '):' → logprob: -11.500271797180176
    6. '+
' → logprob: -12.250271797180176
    7. '(' → logprob: -12.375271797180176
    8. '+)' → logprob: -13.250271797180176
    9. '):
' → logprob: -13.875271797180176
    10. ' ' → logprob: -14.125271797180176

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.618001053633634e-05
    2. '+' → logprob: -11.000025749206543
    3. ')' → logprob: -12.625025749206543
    4. ' ' → logprob: -12.625025749206543
    5. '2' → logprob: -13.875025749206543
    6. '```' → logprob: -14.000025749206543
    7. '(' → logprob: -15.000025749206543
    8. '   ' → logprob: -15.750025749206543
    9. '):
' → logprob: -16.87502670288086
    10. '>' → logprob: -17.00002670288086

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03001219592988491
    2. ')' → logprob: -3.5300121307373047
    3. '):
' → logprob: -8.655012130737305
    4. ':' → logprob: -9.780012130737305
    5. ' ):' → logprob: -10.655012130737305
    6. '):
' → logprob: -12.780012130737305
    7. ' )' → logprob: -13.905012130737305
    8. '):

' → logprob: -14.530012130737305
    9. '():' → logprob: -14.655012130737305
    10. ',' → logprob: -14.780012130737305

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11551141738891602
    2. ' deg' → logprob: -2.740511417388916
    3. 'deg' → logprob: -3.115511417388916
    4. '	de' → logprob: -9.740510940551758
    5. 'de' → logprob: -10.990510940551758
    6. ' ' → logprob: -10.990510940551758
    7. '    
' → logprob: -11.115510940551758
    8. '[' → logprob: -11.365510940551758
    9. '    ' → logprob: -11.490510940551758
    10. '0' → logprob: -11.490510940551758

Token 78: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' (adapté à ' deg') → logprob: -0.008627460338175297
    2. ' deg' → logprob: -4.758627414703369
    3. 'd' → logprob: -12.258627891540527
    4. '   ' → logprob: -12.258627891540527
    5. 'de' → logprob: -13.258627891540527
    6. 'degree' → logprob: -13.758627891540527
    7. '_deg' → logprob: -15.133627891540527
    8. ' ' → logprob: -15.258627891540527
    9. '	de' → logprob: -16.63362693786621
    10. '0' → logprob: -17.75862693786621

Token 79: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04311120882630348
    2. '.' → logprob: -3.1681113243103027
    3. '.extend' → logprob: -10.293110847473145
    4. ' .' → logprob: -10.918110847473145
    5. '.push' → logprob: -11.043110847473145
    6. ').' → logprob: -11.293110847473145
    7. '.setdefault' → logprob: -11.793110847473145
    8. '[' → logprob: -12.793110847473145
    9. '   ' → logprob: -13.043110847473145
    10. '.app' → logprob: -13.043110847473145

Token 80: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0007362506585195661
    2. '(' → logprob: -7.375736236572266
    3. 'len' → logprob: -9.375736236572266
    4. '(adj' → logprob: -10.750736236572266
    5. '([]' → logprob: -14.625736236572266
    6. '((' → logprob: -14.625736236572266
    7. ' (' → logprob: -14.750736236572266
    8. '[len' → logprob: -15.000736236572266
    9. '0' → logprob: -15.125736236572266
    10. '(ad' → logprob: -15.375736236572266

Token 81: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.062143467366695404
    2. '(' → logprob: -2.812143564224243
    3. '(ad' → logprob: -8.812143325805664
    4. 'adj' → logprob: -11.187143325805664
    5. '(
' → logprob: -12.062143325805664
    6. ' (' → logprob: -12.562143325805664
    7. '(

' → logprob: -12.937143325805664
    8. ')' → logprob: -14.437143325805664
    9. ' adj' → logprob: -15.562143325805664
    10. '(ans' → logprob: -16.312143325805664

Token 82: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006048606592230499
    2. '[' → logprob: -7.500604629516602
    3. ')' → logprob: -10.750604629516602
    4. '[
' → logprob: -11.125604629516602
    5. ' [' → logprob: -12.125604629516602
    6. '(i' → logprob: -12.625604629516602
    7. ')[' → logprob: -13.000604629516602
    8. '[a' → logprob: -13.125604629516602
    9. ')i' → logprob: -14.250604629516602
    10. ' ' → logprob: -15.125604629516602

Token 83: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023152081295847893
    2. ')' → logprob: -4.273151874542236
    3. ')))' → logprob: -4.773151874542236
    4. ']))' → logprob: -8.023152351379395
    5. ' ))' → logprob: -9.898152351379395
    6. '))
' → logprob: -10.398152351379395
    7. '])' → logprob: -10.398152351379395
    8. '[' → logprob: -11.523152351379395
    9. ')])' → logprob: -11.523152351379395
    10. '[i' → logprob: -12.273152351379395

Token 84: 'f' (ID: 69)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.5528805255889893
    2. 'queue' → logprob: -1.8028805255889893
    3. 'answer' → logprob: -2.0528805255889893
    4. 'for' → logprob: -2.3028805255889893
    5. 'result' → logprob: -2.6778805255889893
    6. 'stack' → logprob: -3.3028805255889893
    7. 'ans' → logprob: -3.5528805255889893
    8. 'q' → logprob: -3.5528805255889893
    9. 'res' → logprob: -3.9278805255889893
    10. 'order' → logprob: -3.9278805255889893

Token 85: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.012778972275555134
    2. 'o' → logprob: -4.3877787590026855
    3. 'for' → logprob: -9.387779235839844
    4. 'rom' → logprob: -10.387779235839844
    5. 'ro' → logprob: -10.887779235839844
    6. '#' → logprob: -11.012779235839844
    7. '```' → logprob: -11.137779235839844
    8. 'i' → logprob: -11.137779235839844
    9. 'r' → logprob: -11.387779235839844
    10. 'deg' → logprob: -11.762779235839844

Token 86: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7729611396789551
    2. 'open' → logprob: -1.397961139678955
    3. 'deg' → logprob: -2.147961139678955
    4. '[]' → logprob: -3.022961139678955
    5. 'len' → logprob: -3.897961139678955
    6. '[len' → logprob: -4.022961139678955
    7. 'lambda' → logprob: -4.272961139678955
    8. 'sorted' → logprob: -4.272961139678955
    9. 'ilter' → logprob: -4.772961139678955
    10. '[max' → logprob: -4.897961139678955

Token 87: 'ok' (ID: 525)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13225559890270233
    2. 'or' → logprob: -2.1322555541992188
    3. '[' → logprob: -6.007255554199219
    4. '(' → logprob: -6.632255554199219
    5. '0' → logprob: -7.757255554199219
    6. 'range' → logprob: -8.132255554199219
    7. '=' → logprob: -8.257255554199219
    8. '[]' → logprob: -9.257255554199219
    9. 'def' → logprob: -9.257255554199219
    10. '_' → logprob: -10.007255554199219

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049909304827451706
    2. '=' → logprob: -3.5499093532562256
    3. ' ' → logprob: -4.6749091148376465
    4. 'ay' → logprob: -4.7999091148376465
    5. ',' → logprob: -6.6749091148376465
    6. '[' → logprob: -8.049909591674805
    7. '_' → logprob: -8.549909591674805
    8. '.' → logprob: -8.674909591674805
    9. '=[]' → logprob: -9.549909591674805
    10. 'a' → logprob: -9.674909591674805

Token 89: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.46402737498283386
    2. ' True' → logprob: -1.7140274047851562
    3. '[]' → logprob: -2.2140274047851562
    4. '[' → logprob: -3.0890274047851562
    5. 'False' → logprob: -4.214027404785156
    6. ' []' → logprob: -4.214027404785156
    7. ' [' → logprob: -5.589027404785156
    8. ' False' → logprob: -7.089027404785156
    9. '[len' → logprob: -7.464027404785156
    10. ' ' → logprob: -7.714027404785156

Token 90: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02803785540163517
    2. 'for' → logprob: -4.278038024902344
    3. '' → logprob: -5.028038024902344
    4. '<|end|>' → logprob: -5.778038024902344
    5. '\n' → logprob: -6.153038024902344
    6. ' for' → logprob: -7.403038024902344
    7. ' 
' → logprob: -8.153038024902344
    8. ' ' → logprob: -8.278038024902344
    9. ',' → logprob: -8.778038024902344
    10. '  
' → logprob: -9.153038024902344

Token 91: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00909312441945076
    2. ' for' → logprob: -5.634093284606934
    3. 'f' → logprob: -6.009093284606934
    4. ' ' → logprob: -7.134093284606934
    5. ' 
' → logprob: -7.259093284606934
    6. '
' → logprob: -8.009093284606934
    7. ':' → logprob: -8.259093284606934
    8. '\n' → logprob: -8.759093284606934
    9. '[' → logprob: -8.884093284606934
    10. '0' → logprob: -9.009093284606934

Token 92: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0381116047501564
    2. ' ' → logprob: -3.413111686706543
    3. 'i' → logprob: -5.538111686706543
    4. ' _' → logprob: -8.038111686706543
    5. '_' → logprob: -9.663111686706543
    6. '  ' → logprob: -9.788111686706543
    7. ' ' → logprob: -10.288111686706543
    8. '   ' → logprob: -11.913111686706543
    9. ' ‌' → logprob: -11.913111686706543
    10. ' x' → logprob: -12.163111686706543

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10204409807920456
    2. 'in' → logprob: -2.477044105529785
    3. ' ' → logprob: -4.352044105529785
    4. '  ' → logprob: -9.602044105529785
    5. ' i' → logprob: -10.602044105529785
    6. 'n' → logprob: -10.977044105529785
    7. '	in' → logprob: -12.102044105529785
    8. ',' → logprob: -12.227044105529785
    9. ' ,' → logprob: -12.727044105529785
    10. ' n' → logprob: -12.852044105529785

Token 94: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02635452151298523
    2. ' range' → logprob: -3.6513545513153076
    3. '(range' → logprob: -10.026354789733887
    4. ' ' → logprob: -12.901354789733887
    5. '	range' → logprob: -13.276354789733887
    6. '  ' → logprob: -14.026354789733887
    7. '(' → logprob: -14.151354789733887
    8. 'rang' → logprob: -14.276354789733887
    9. '   ' → logprob: -14.401354789733887
    10. 'in' → logprob: -14.526354789733887

Token 95: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.43685731291770935
    2. '(' → logprob: -1.0618573427200317
    3. ' (' → logprob: -5.186857223510742
    4. '(range' → logprob: -6.311857223510742
    5. '(n' → logprob: -8.436857223510742
    6. '(len' → logprob: -8.811857223510742
    7. ' ' → logprob: -9.561857223510742
    8. '((' → logprob: -9.686857223510742
    9. '(de' → logprob: -10.061857223510742
    10. ' range' → logprob: -10.436857223510742

Token 96: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0013885662192478776
    2. '1' → logprob: -7.3763885498046875
    3. ' N' → logprob: -8.001388549804688
    4. 'len' → logprob: -8.251388549804688
    5. '(N' → logprob: -9.376388549804688
    6. ')' → logprob: -11.001388549804688
    7. '0' → logprob: -11.251388549804688
    8. ' ' → logprob: -11.376388549804688
    9. '   ' → logprob: -11.501388549804688
    10. 'deg' → logprob: -12.001388549804688

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014050206169486046
    2. ' in' → logprob: -4.889050006866455
    3. ' ,' → logprob: -6.389050006866455
    4. 'in' → logprob: -6.639050006866455
    5. ',N' → logprob: -6.889050006866455
    6. ' to' → logprob: -6.889050006866455
    7. ')' → logprob: -7.764050006866455
    8. 'range' → logprob: -8.389050483703613
    9. ',len' → logprob: -8.514050483703613
    10. ' ' → logprob: -8.639050483703613

Token 98: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004078878089785576
    2. ' N' → logprob: -5.5040788650512695
    3. 'len' → logprob: -15.75407886505127
    4. ' ' → logprob: -16.254079818725586
    5. 'n' → logprob: -16.504079818725586
    6. ')' → logprob: -16.879079818725586
    7. ' len' → logprob: -18.504079818725586
    8. '	N' → logprob: -18.629079818725586
    9. '(N' → logprob: -18.754079818725586
    10. '   ' → logprob: -19.004079818725586

Token 99: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002619318547658622
    2. ' +' → logprob: -8.250262260437012
    3. '+
' → logprob: -15.500262260437012
    4. '1' → logprob: -15.750262260437012
    5. ')+' → logprob: -16.875261306762695
    6. '()+' → logprob: -17.250261306762695
    7. '＋' → logprob: -17.250261306762695
    8. '):' → logprob: -17.375261306762695
    9. ')' → logprob: -17.625261306762695
    10. '+)' → logprob: -17.750261306762695

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001354824344161898
    2. '+' → logprob: -9.00013542175293
    3. ' ' → logprob: -11.62513542175293
    4. ')' → logprob: -13.75013542175293
    5. '2' → logprob: -14.00013542175293
    6. '```' → logprob: -14.75013542175293
    7. '   ' → logprob: -14.87513542175293
    8. '-' → logprob: -16.87513542175293
    9. ' +' → logprob: -16.87513542175293
    10. '):
' → logprob: -17.00013542175293

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0361531563103199
    2. ':' → logprob: -3.4111530780792236
    3. ')' → logprob: -6.036153316497803
    4. ' ):' → logprob: -9.286152839660645
    5. '):
' → logprob: -11.536152839660645
    6. ' :' → logprob: -12.786152839660645
    7. ',' → logprob: -13.411152839660645
    8. '():' → logprob: -13.411152839660645
    9. ':)' → logprob: -13.786152839660645
    10. ':**' → logprob: -13.911152839660645

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.512275755405426
    2. ':' → logprob: -1.1372756958007812
    3. ' ' → logprob: -3.1372756958007812
    4. ' if' → logprob: -4.012275695800781
    5. '<|end|>' → logprob: -4.637275695800781
    6. 'if' → logprob: -5.887275695800781
    7. ':
' → logprob: -6.387275695800781
    8. '  ' → logprob: -7.012275695800781
    9. '    
' → logprob: -7.137275695800781
    10. '    ' → logprob: -7.262275695800781

Token 103: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3200773000717163
    2. 'if' (adapté à ' if') → logprob: -1.9450773000717163
    3. ' ' → logprob: -2.570077419281006
    4. ' f' → logprob: -3.195077419281006
    5. '   ' → logprob: -4.695077419281006
    6. 'f' → logprob: -6.570077419281006
    7. '    ' → logprob: -7.070077419281006
    8. '  ' → logprob: -7.570077419281006
    9. ' i' → logprob: -8.070076942443848
    10. '<|end|>' → logprob: -8.695076942443848

Token 104: ' deg' (ID: 5597)
  Prédit: ' deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deg' → logprob: -0.00977285485714674
    2. 'deg' → logprob: -4.634772777557373
    3. ' len' → logprob: -11.884773254394531
    4. '   ' → logprob: -12.009773254394531
    5. ' not' → logprob: -13.259773254394531
    6. '(de' → logprob: -14.384773254394531
    7. '	de' → logprob: -14.759773254394531
    8. 'len' → logprob: -15.509773254394531
    9. ' ' → logprob: -15.509773254394531
    10. ')' → logprob: -15.634773254394531

Token 105: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001561009994475171
    2. '[' → logprob: -9.75015640258789
    3. ' [' → logprob: -9.87515640258789
    4. '==' → logprob: -10.62515640258789
    5. '```' → logprob: -12.12515640258789
    6. ' ==' → logprob: -12.50015640258789
    7. '\[' → logprob: -13.50015640258789
    8. '[
' → logprob: -13.50015640258789
    9. '[a' → logprob: -13.87515640258789
    10. ')' → logprob: -14.00015640258789

Token 106: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5675239562988281
    2. ' ==' → logprob: -1.1925239562988281
    3. '>' → logprob: -2.942523956298828
    4. '>=' → logprob: -4.067523956298828
    5. ')' → logprob: -4.192523956298828
    6. ' >=' → logprob: -4.317523956298828
    7. ' >' → logprob: -4.692523956298828
    8. '<' → logprob: -4.817523956298828
    9. ' <' → logprob: -5.067523956298828
    10. '<=' → logprob: -6.192523956298828

Token 107: ' %' (ID: 1851)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5118221044540405
    2. ' ==' → logprob: -1.2618221044540405
    3. '%' → logprob: -3.26182222366333
    4. '>=' → logprob: -3.76182222366333
    5. ' >=' → logprob: -3.88682222366333
    6. '>' → logprob: -4.76182222366333
    7. '!=' → logprob: -5.01182222366333
    8. ' %' → logprob: -5.51182222366333
    9. ' >' → logprob: -5.51182222366333
    10. ' !=' → logprob: -5.63682222366333

Token 108: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17994201183319092
    2. ' ' → logprob: -1.804942011833191
    3. '3' → logprob: -8.67994213104248
    4. '4' → logprob: -11.55494213104248
    5. '```' → logprob: -11.55494213104248
    6. ' ' → logprob: -13.55494213104248
    7. '26' → logprob: -14.05494213104248
    8. '<|end|>' → logprob: -14.24244213104248
    9. ')' → logprob: -14.30494213104248
    10. '==' → logprob: -14.42994213104248

Token 109: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004011177225038409
    2. '3' → logprob: -8.625401496887207
    3. ' ' → logprob: -8.750401496887207
    4. '4' → logprob: -10.000401496887207
    5. '200' → logprob: -12.250401496887207
    6. '10' → logprob: -12.500401496887207
    7. '26' → logprob: -13.687901496887207
    8. '```' → logprob: -13.937901496887207
    9. '20' → logprob: -14.062901496887207
    10. '6' → logprob: -14.250401496887207

Token 110: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.9206188917160034
    2. '==' → logprob: -1.2956188917160034
    3. ' !=' → logprob: -1.2956188917160034
    4. ' ==' → logprob: -2.920619010925293
    5. ')' → logprob: -8.795619010925293
    6. ')!=' → logprob: -10.045619010925293
    7. '=' → logprob: -10.170619010925293
    8. ' ' → logprob: -10.170619010925293
    9. '0' → logprob: -10.420619010925293
    10. ':' → logprob: -11.420619010925293

Token 111: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3034595847129822
    2. '1' → logprob: -1.553459644317627
    3. ' ' → logprob: -3.053459644317627
    4. '2' → logprob: -5.803459644317627
    5. '```' → logprob: -12.678459167480469
    6. ' !=' → logprob: -13.490959167480469
    7. '!=' → logprob: -13.615959167480469
    8. '
' → logprob: -13.803459167480469
    9. '

' → logprob: -14.365959167480469
    10. '  ' → logprob: -14.803459167480469

Token 112: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38760995864868164
    2. '1' → logprob: -1.1376099586486816
    3. ' ' → logprob: -7.262609958648682
    4. '2' → logprob: -10.387609481811523
    5. '```' → logprob: -13.012609481811523
    6. '

' → logprob: -14.325109481811523
    7. ' !=' → logprob: -14.575109481811523
    8. '!=' → logprob: -14.762609481811523
    9. '
' → logprob: -15.450109481811523
    10. '01' → logprob: -15.512609481811523

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.264322317088954e-05
    2. ':
' → logprob: -10.000052452087402
    3. ' :' → logprob: -12.250052452087402
    4. ' and' → logprob: -14.125052452087402
    5. '):' → logprob: -14.625052452087402
    6. 'and' → logprob: -15.500052452087402
    7. ':**' → logprob: -15.500052452087402
    8. ':return' → logprob: -15.750052452087402
    9. '   ' → logprob: -16.62505340576172
    10. '<|end|>' → logprob: -17.00005340576172

Token 114: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9293164014816284
    2. '       ' → logprob: -1.1793164014816284
    3. ':' → logprob: -1.5543164014816284
    4. ' f' → logprob: -4.054316520690918
    5. ' :' → logprob: -4.429316520690918
    6. ':
' → logprob: -4.429316520690918
    7. '
' → logprob: -4.554316520690918
    8. ' ' → logprob: -4.804316520690918
    9. 'f' → logprob: -5.179316520690918
    10. ' ok' → logprob: -5.554316520690918

Token 115: ' print' (ID: 2123)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.3859986960887909
    2. ' ok' → logprob: -1.2609987258911133
    3. '   ' → logprob: -3.5109987258911133
    4. 'f' → logprob: -5.385998725891113
    5. ' f' → logprob: -6.135998725891113
    6. '	ok' → logprob: -9.135998725891113
    7. '
' → logprob: -10.010998725891113
    8. ' ' → logprob: -10.760998725891113
    9. '    
' → logprob: -10.885998725891113
    10. 'o' → logprob: -11.260998725891113

Token 116: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2895776331424713
    2. '(' → logprob: -2.0395777225494385
    3. '(i' → logprob: -2.4145777225494385
    4. '(-' → logprob: -3.5395777225494385
    5. '('' → logprob: -6.539577484130859
    6. '("-' → logprob: -7.914577484130859
    7. '("("' → logprob: -8.16457748413086
    8. ' ("' → logprob: -8.78957748413086
    9. '("?' → logprob: -8.78957748413086
    10. '()' → logprob: -9.16457748413086

Token 117: 'No' (ID: 3160)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.5143778920173645
    2. 'No' → logprob: -1.6393778324127197
    3. ''' → logprob: -3.0143778324127197
    4. '"' → logprob: -3.3893778324127197
    5. 'Impossible' → logprob: -3.7643778324127197
    6. 'IMP' → logprob: -3.8893778324127197
    7. 'Yes' → logprob: -4.389378070831299
    8. 'im' → logprob: -4.514378070831299
    9. 'Euler' → logprob: -4.764378070831299
    10. 'YES' → logprob: -4.764378070831299

Token 118: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.19564202427864075
    2. '')
' → logprob: -2.1956419944763184
    3. ')' → logprob: -2.8206419944763184
    4. ')
' → logprob: -5.195641994476318
    5. '')
' → logprob: -8.070642471313477
    6. '()' → logprob: -8.320642471313477
    7. '")' → logprob: -8.445642471313477
    8. ''' → logprob: -8.820642471313477
    9. ')')
' → logprob: -9.070642471313477
    10. ' ')' → logprob: -9.820642471313477

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05042075365781784
    2. '
' → logprob: -3.1754207611083984
    3. '<|end|>' → logprob: -5.300420761108398
    4. '        
' → logprob: -7.300420761108398
    5. '           ' → logprob: -7.675420761108398
    6. ')' → logprob: -7.800420761108398
    7. ',' → logprob: -8.675420761108398
    8. '\n' → logprob: -8.925420761108398
    9. '   ' → logprob: -9.175420761108398
    10. '<|end|>' → logprob: -9.425420761108398

Token 120: ' sys' (ID: 12228)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1452600210905075
    2. '       ' → logprob: -2.5202600955963135
    3. '\n' → logprob: -3.7702600955963135
    4. '        
' → logprob: -4.895259857177734
    5. ')' → logprob: -5.520259857177734
    6. 'exit' → logprob: -5.895259857177734
    7. '' → logprob: -6.145259857177734
    8. '    
' → logprob: -6.270259857177734
    9. '           ' → logprob: -6.395259857177734
    10. '
' → logprob: -6.520259857177734

Token 121: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.18046951293945312
    2. '.' → logprob: -1.8054695129394531
    3. '.stdout' → logprob: -7.680469512939453
    4. '.ex' → logprob: -9.430469512939453
    5. 'exit' → logprob: -10.180469512939453
    6. '.EXIT' → logprob: -10.555469512939453
    7. '.quit' → logprob: -10.930469512939453
    8. '.stdin' → logprob: -11.180469512939453
    9. '.e' → logprob: -11.555469512939453
    10. '```' → logprob: -11.555469512939453

Token 122: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47416940331459045
    2. '(' → logprob: -0.9741693735122681
    3. '_' → logprob: -10.349169731140137
    4. '(
' → logprob: -11.099169731140137
    5. '0' → logprob: -11.724169731140137
    6. '(

' → logprob: -12.224169731140137
    7. '()`' → logprob: -12.724169731140137
    8. '("("' → logprob: -12.849169731140137
    9. '((' → logprob: -12.974169731140137
    10. '()
' → logprob: -12.974169731140137

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.160149335861206
    2. '
' → logprob: -1.660149335861206
    3. 'ok' → logprob: -2.285149335861206
    4. 'print' → logprob: -2.535149335861206
    5. 'for' → logprob: -2.660149335861206
    6. '    
' → logprob: -2.910149335861206
    7. 'else' → logprob: -3.160149335861206
    8. ')' → logprob: -3.160149335861206
    9. 'f' → logprob: -3.785149335861206
    10. '\n' → logprob: -4.035149574279785

Token 124: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.868748664855957
    2. 'elif' (adapté à ' elif') → logprob: -1.993748664855957
    3. '   ' → logprob: -2.368748664855957
    4. 'f' → logprob: -2.493748664855957
    5. 'if' → logprob: -2.868748664855957
    6. ' ' → logprob: -3.118748664855957
    7. ' else' → logprob: -3.493748664855957
    8. ')' → logprob: -3.618748664855957
    9. 'for' → logprob: -3.743748664855957
    10. '<|end|>' → logprob: -3.993748664855957

Token 125: ' deg' (ID: 5597)
  Prédit: ' deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deg' → logprob: -0.5238726139068604
    2. 'deg' → logprob: -0.8988726139068604
    3. '   ' → logprob: -8.023872375488281
    4. ' not' → logprob: -8.523872375488281
    5. 'not' → logprob: -9.148872375488281
    6. ' len' → logprob: -10.398872375488281
    7. 'len' → logprob: -10.648872375488281
    8. ' ' → logprob: -11.023872375488281
    9. 'd' → logprob: -12.148872375488281
    10. '    ' → logprob: -12.398872375488281

Token 126: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003955224819947034
    2. '[' → logprob: -7.87539529800415
    3. ' [' → logprob: -13.000395774841309
    4. '[I' → logprob: -13.125395774841309
    5. '```' → logprob: -13.500395774841309
    6. '[a' → logprob: -13.750395774841309
    7. '[int' → logprob: -14.125395774841309
    8. '[j' → logprob: -14.125395774841309
    9. '[
' → logprob: -14.375395774841309
    10. '\[' → logprob: -14.375395774841309

Token 127: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9887804388999939
    2. '>' → logprob: -1.4887804985046387
    3. '[i' → logprob: -1.6137804985046387
    4. '[' → logprob: -2.9887804985046387
    5. ' ==' → logprob: -3.1137804985046387
    6. ')' → logprob: -3.3637804985046387
    7. '%' → logprob: -3.6137804985046387
    8. ']' → logprob: -4.363780498504639
    9. ' >' → logprob: -4.363780498504639
    10. '>=' → logprob: -4.863780498504639

Token 128: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5468867421150208
    2. '>' → logprob: -1.171886682510376
    3. ' ==' → logprob: -3.171886682510376
    4. ' >' → logprob: -3.546886682510376
    5. '>=' → logprob: -3.671886682510376
    6. '!=' → logprob: -5.171886920928955
    7. '%' → logprob: -5.296886920928955
    8. ' >=' → logprob: -5.796886920928955
    9. ' !=' → logprob: -7.546886920928955
    10. ' ' → logprob: -8.171886444091797

Token 129: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5574067831039429
    2. '2' → logprob: -1.0574067831039429
    3. '6' → logprob: -2.5574069023132324
    4. '1' → logprob: -6.932406902313232
    5. '3' → logprob: -7.307406902313232
    6. '
' → logprob: -7.807406902313232
    7. 'N' → logprob: -9.057406425476074
    8. ' ' → logprob: -9.432406425476074
    9. '```' → logprob: -10.182406425476074
    10. '0' → logprob: -10.432406425476074

Token 130: '6' (ID: 21)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.47818875312805176
    2. '6' → logprob: -1.2281887531280518
    3. '2' → logprob: -2.4781887531280518
    4. '3' → logprob: -5.978188514709473
    5. 'N' → logprob: -8.228188514709473
    6. '1' → logprob: -8.603188514709473
    7. '
' → logprob: -8.603188514709473
    8. ' ' → logprob: -9.853188514709473
    9. '   ' → logprob: -10.478188514709473
    10. '5' → logprob: -10.603188514709473

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006070644594728947
    2. ':
' → logprob: -5.381070613861084
    3. ' and' → logprob: -6.756070613861084
    4. 'and' → logprob: -8.881071090698242
    5. '   ' → logprob: -9.006071090698242
    6. ' or' → logprob: -11.506071090698242
    7. ' :' → logprob: -12.131071090698242
    8. '       ' → logprob: -12.631071090698242
    9. '):' → logprob: -13.756071090698242
    10. ':
' → logprob: -14.006071090698242

Token 132: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005127734504640102
    2. '       ' → logprob: -5.380127906799316
    3. 'ok' → logprob: -7.755127906799316
    4. ' ok' → logprob: -9.755127906799316
    5. 'print' → logprob: -11.630127906799316
    6. '           ' → logprob: -12.755127906799316
    7. '  ' → logprob: -13.130127906799316
    8. '	ok' → logprob: -13.255127906799316
    9. 'Ok' → logprob: -14.255127906799316
    10. '   ' → logprob: -14.380127906799316

Token 133: ' ok' (ID: 4763)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38899552822113037
    2. 'ok' (adapté à ' ok') → logprob: -1.1389955282211304
    3. 'print' → logprob: -7.13899564743042
    4. '       ' → logprob: -7.38899564743042
    5. ' ok' → logprob: -7.63899564743042
    6. '  ' → logprob: -9.138995170593262
    7. '	ok' → logprob: -10.138995170593262
    8. ' ' → logprob: -10.638995170593262
    9. '```' → logprob: -11.763995170593262
    10. 'Ok' → logprob: -11.763995170593262

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008619185537099838
    2. ' =' → logprob: -4.75861930847168
    3. '==' → logprob: -13.25861930847168
    4. '=True' → logprob: -13.50861930847168
    5. ':' → logprob: -14.38361930847168
    6. ' ' → logprob: -14.88361930847168
    7. '+=' → logprob: -16.13361930847168
    8. '=False' → logprob: -16.13361930847168
    9. ' ==' → logprob: -16.50861930847168
    10. '[' → logprob: -16.50861930847168

Token 135: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0011773703154176474
    2. ' True' → logprob: -6.7511773109436035
    3. 'False' → logprob: -11.876177787780762
    4. 'Tr' → logprob: -16.126176834106445
    5. '1' → logprob: -16.751176834106445
    6. '=True' → logprob: -17.001176834106445
    7. '(True' → logprob: -17.376176834106445
    8. ' ' → logprob: -18.001176834106445
    9. '   ' → logprob: -19.376176834106445
    10. ' False' → logprob: -20.251176834106445

Token 136: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18759547173976898
    2. 'print' → logprob: -2.1875953674316406
    3. '<|end|>' → logprob: -3.1875953674316406
    4. 'if' → logprob: -5.812595367431641
    5. 'f' → logprob: -5.812595367431641
    6. ')' → logprob: -5.937595367431641
    7. '```' → logprob: -6.187595367431641
    8. 'for' → logprob: -7.187595367431641
    9. '

' → logprob: -7.187595367431641
    10. '
' → logprob: -7.312595367431641

Token 137: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.076941967010498
    2. 'if' → logprob: -1.201941967010498
    3. 'print' → logprob: -1.701941967010498
    4. 'f' → logprob: -2.326941967010498
    5. '   ' → logprob: -3.701941967010498
    6. '

' → logprob: -3.826941967010498
    7. ')' → logprob: -5.201941967010498
    8. ')
' → logprob: -5.451941967010498
    9. '       ' → logprob: -5.451941967010498
    10. 'for' → logprob: -5.701941967010498

Token 138: ' elif' (ID: 9497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2972807884216309
    2. 'f' → logprob: -1.4222807884216309
    3. 'else' → logprob: -1.6722807884216309
    4. 'print' → logprob: -2.422280788421631
    5. 'elif' (adapté à ' elif') → logprob: -2.672280788421631
    6. ':' → logprob: -2.672280788421631
    7. '   ' → logprob: -4.297280788421631
    8. 'if' → logprob: -4.422280788421631
    9. '
' → logprob: -4.922280788421631
    10. ' else' → logprob: -5.047280788421631

Token 139: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.22579209506511688
    2. ' deg' → logprob: -1.6007920503616333
    3. ' ' → logprob: -9.475791931152344
    4. 'adj' → logprob: -9.725791931152344
    5. 'not' → logprob: -10.100791931152344
    6. '1' → logprob: -10.475791931152344
    7. '0' → logprob: -10.725791931152344
    8. '3' → logprob: -10.975791931152344
    9. '2' → logprob: -11.100791931152344
    10. ' not' → logprob: -11.225791931152344

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011880126112373546
    2. '[' → logprob: -9.12511920928955
    3. ' [' → logprob: -12.75011920928955
    4. 'i' → logprob: -13.75011920928955
    5. '==' → logprob: -13.75011920928955
    6. '```' → logprob: -14.00011920928955
    7. '[I' → logprob: -14.37511920928955
    8. '   ' → logprob: -14.62511920928955
    9. '[
' → logprob: -15.31261920928955
    10. '[a' → logprob: -15.37511920928955

Token 141: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7622206211090088
    2. ' >=' → logprob: -0.8872206211090088
    3. '==' → logprob: -2.387220621109009
    4. '>=' → logprob: -3.762220621109009
    5. ' ' → logprob: -6.38722038269043
    6. ']' → logprob: -6.51222038269043
    7. '>' → logprob: -6.88722038269043
    8. ' >' → logprob: -7.26222038269043
    9. ')' → logprob: -7.51222038269043
    10. '[' → logprob: -8.63722038269043

Token 142: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28584998846054077
    2. ' ==' → logprob: -2.1608500480651855
    3. '>=' → logprob: -2.4108500480651855
    4. ' >=' → logprob: -3.2858500480651855
    5. '>' → logprob: -5.6608500480651855
    6. ' ' → logprob: -7.4108500480651855
    7. ' >' → logprob: -7.6608500480651855
    8. '%' → logprob: -7.9108500480651855
    9. '<=' → logprob: -8.410849571228027
    10. '<' → logprob: -8.660849571228027

Token 143: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.018556781113147736
    2. '2' → logprob: -4.143556594848633
    3. '0' → logprob: -6.518556594848633
    4. '5' → logprob: -7.143556594848633
    5. '3' → logprob: -8.518556594848633
    6. ' ' → logprob: -11.143556594848633
    7. '1' → logprob: -11.518556594848633
    8. '
' → logprob: -11.643556594848633
    9. '```' → logprob: -11.893556594848633
    10. '``' → logprob: -13.268556594848633

Token 144: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.014735719189047813
    2. '2' → logprob: -4.639735698699951
    3. '0' → logprob: -5.889735698699951
    4. '5' → logprob: -6.264735698699951
    5. '3' → logprob: -8.63973617553711
    6. '
' → logprob: -10.26473617553711
    7. ' ' → logprob: -10.70223617553711
    8. '1' → logprob: -11.01473617553711
    9. '```' → logprob: -11.13973617553711
    10. '``' → logprob: -11.82723617553711

Token 145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.138030543923378
    2. ':
' → logprob: -2.138030529022217
    3. ' and' → logprob: -4.763030529022217
    4. 'and' → logprob: -6.013030529022217
    5. ':
' → logprob: -10.888031005859375
    6. ':

' → logprob: -11.263031005859375
    7. '   ' → logprob: -11.638031005859375
    8. ' or' → logprob: -12.263031005859375
    9. ',' → logprob: -13.513031005859375
    10. 'or' → logprob: -13.513031005859375

Token 146: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.707398533821106
    2. 'f' → logprob: -0.832398533821106
    3. 'ok' → logprob: -3.2073984146118164
    4. 'for' → logprob: -3.9573984146118164
    5. 'if' → logprob: -5.457398414611816
    6. '       ' → logprob: -5.457398414611816
    7. 'print' → logprob: -6.082398414611816
    8. ' ok' → logprob: -7.832398414611816
    9. ' f' → logprob: -8.457398414611816
    10. 'count' → logprob: -8.582398414611816

Token 147: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.029899630695581436
    2. '   ' → logprob: -4.404899597167969
    3. 'for' → logprob: -4.779899597167969
    4. 'print' → logprob: -6.154899597167969
    5. 'ok' → logprob: -6.404899597167969
    6. 'if' → logprob: -6.654899597167969
    7. 'cnt' → logprob: -7.154899597167969
    8. 'idx' → logprob: -7.529899597167969
    9. 'count' → logprob: -7.654899597167969
    10. 'x' → logprob: -8.154899597167969

Token 148: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38728564977645874
    2. '.append' → logprob: -1.1372857093811035
    3. '=' → logprob: -9.387285232543945
    4. ' =' → logprob: -9.512285232543945
    5. '.extend' → logprob: -9.887285232543945
    6. '.=' → logprob: -9.887285232543945
    7. '.app' → logprob: -10.137285232543945
    8. '.a' → logprob: -11.137285232543945
    9. '.i' → logprob: -11.137285232543945
    10. '[' → logprob: -11.262285232543945

Token 149: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.203409844194539e-05
    2. '(adj' → logprob: -10.375041961669922
    3. '(' → logprob: -12.000041961669922
    4. '(True' → logprob: -13.125041961669922
    5. 'i' → logprob: -13.625041961669922
    6. '((' → logprob: -14.750041961669922
    7. '(a' → logprob: -15.250041961669922
    8. 'adj' → logprob: -15.625041961669922
    9. '[i' → logprob: -16.000041961669922
    10. '(ad' → logprob: -16.125041961669922

Token 150: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.143808109802194e-05
    2. ' )' → logprob: -10.125041007995605
    3. ')
' → logprob: -13.750041007995605
    4. '))' → logprob: -16.875041961669922
    5. '())' → logprob: -17.250041961669922
    6. '')' → logprob: -17.250041961669922
    7. ' ' → logprob: -17.250041961669922
    8. ',)' → logprob: -17.250041961669922
    9. ')#' → logprob: -17.375041961669922
    10. '#' → logprob: -17.750041961669922

Token 151: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04747788608074188
    2. 'for' → logprob: -3.672477960586548
    3. 'f' → logprob: -4.672477722167969
    4. '
' → logprob: -5.422477722167969
    5. ' if' → logprob: -5.547477722167969
    6. ' ' → logprob: -7.297477722167969
    7. ':' → logprob: -7.672477722167969
    8. '#' → logprob: -7.797477722167969
    9. ' for' → logprob: -8.047477722167969
    10. '```' → logprob: -8.297477722167969

Token 152: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.05368858203291893
    2. ' not' → logprob: -3.0536885261535645
    3. ' ' → logprob: -5.9286885261535645
    4. 'ok' → logprob: -6.1786885261535645
    5. ' len' → logprob: -8.928689002990723
    6. 'not' → logprob: -9.303689002990723
    7. ' ' → logprob: -9.428689002990723
    8. '  ' → logprob: -11.053689002990723
    9. ' okay' → logprob: -11.303689002990723
    10. ' o' → logprob: -12.303689002990723

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001329791557509452
    2. ' :' → logprob: -10.12513256072998
    3. ' ==' → logprob: -10.25013256072998
    4. '==' → logprob: -10.25013256072998
    5. ':
' → logprob: -11.00013256072998
    6. ' or' → logprob: -12.87513256072998
    7. ' and' → logprob: -13.50013256072998
    8. ' is' → logprob: -14.87513256072998
    9. 'and' → logprob: -15.50013256072998
    10. '=' → logprob: -15.62513256072998

Token 154: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.034375980496406555
    2. '   ' → logprob: -3.5343759059906006
    3. ' print' → logprob: -5.78437614440918
    4. ':
' → logprob: -7.03437614440918
    5. '
' → logprob: -8.28437614440918
    6. ':' → logprob: -8.53437614440918
    7. '    
' → logprob: -9.53437614440918
    8. '```' → logprob: -10.78437614440918
    9. '	print' → logprob: -10.78437614440918
    10. 'for' → logprob: -11.40937614440918

Token 155: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03199734166264534
    2. ' print' → logprob: -3.6569974422454834
    3. '   ' → logprob: -5.781997203826904
    4. '
' → logprob: -6.031997203826904
    5. '    
' → logprob: -10.406997680664062
    6. ':
' → logprob: -10.656997680664062
    7. 'for' → logprob: -10.906997680664062
    8. ':' → logprob: -11.094497680664062
    9. '	print' → logprob: -11.594497680664062
    10. ' ' → logprob: -11.656997680664062

Token 156: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.022678224369883537
    2. '(' → logprob: -4.272678375244141
    3. '("' → logprob: -4.772678375244141
    4. '(No' → logprob: -11.27267837524414
    5. '()' → logprob: -13.39767837524414
    6. '(
' → logprob: -13.64767837524414
    7. '(('' → logprob: -14.14767837524414
    8. '(True' → logprob: -14.39767837524414
    9. ' ('' → logprob: -14.39767837524414
    10. 'No' → logprob: -14.52267837524414

Token 157: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.00017827287956606597
    2. ''' → logprob: -9.625178337097168
    3. 'No' → logprob: -9.625178337097168
    4. ' Yes' → logprob: -10.625178337097168
    5. 'YES' → logprob: -11.125178337097168
    6. '"' → logprob: -13.625178337097168
    7. 'Ok' → logprob: -13.875178337097168
    8. 'Ye' → logprob: -14.000178337097168
    9. '0' → logprob: -14.875178337097168
    10. 'Oui' → logprob: -14.875178337097168

Token 158: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.046698201447725296
    2. ')' → logprob: -3.7966980934143066
    3. '')
' → logprob: -3.9216980934143066
    4. '<|end|>' → logprob: -6.296698093414307
    5. '")' → logprob: -7.546698093414307
    6. '   ' → logprob: -8.296698570251465
    7. ')
' → logprob: -8.421698570251465
    8. '
' → logprob: -8.671698570251465
    9. 'elif' → logprob: -9.671698570251465
    10. '```' → logprob: -9.921698570251465

Token 159: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5542569160461426
    2. '   ' → logprob: -1.3042569160461426
    3. 'elif' → logprob: -1.9292569160461426
    4. '
' → logprob: -5.929256916046143
    5. '    
' → logprob: -6.929256916046143
    6. ' else' → logprob: -6.929256916046143
    7. 'import' → logprob: -7.179256916046143
    8. 'sys' → logprob: -7.429256916046143
    9. ' ' → logprob: -7.554256916046143
    10. '  
' → logprob: -7.679256916046143

Token 160: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.3948272466659546
    2. ' sys' → logprob: -1.2698272466659546
    3. '   ' → logprob: -3.144827365875244
    4. 'exit' → logprob: -6.894827365875244
    5. 'else' → logprob: -7.644827365875244
    6. '	sys' → logprob: -7.769827365875244
    7. ' exit' → logprob: -8.519826889038086
    8. ' ' → logprob: -9.519826889038086
    9. 'import' → logprob: -11.144826889038086
    10. 'elif' → logprob: -11.644826889038086

Token 161: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -6.682846287731081e-05
    2. '.stdout' → logprob: -9.875066757202148
    3. 'exit' → logprob: -11.250066757202148
    4. '.stdin' → logprob: -13.750066757202148
    5. '.argv' → logprob: -15.250066757202148
    6. '	exit' → logprob: -15.250066757202148
    7. '```' → logprob: -15.500066757202148
    8. '.stderr' → logprob: -15.625066757202148
    9. '.ex' → logprob: -15.875066757202148
    10. '_exit' → logprob: -16.62506675720215

Token 162: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.29340603761375e-05
    2. '(' → logprob: -9.500092506408691
    3. '()`' → logprob: -11.750092506408691
    4. '()
' → logprob: -12.000092506408691
    5. '()>' → logprob: -14.625092506408691
    6. '().' → logprob: -14.625092506408691
    7. ' ()' → logprob: -14.875092506408691
    8. '()]' → logprob: -14.875092506408691
    9. '()\' → logprob: -15.000092506408691
    10. '()

' → logprob: -15.125092506408691

Token 163: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6278186440467834
    2. 'for' → logprob: -1.6278185844421387
    3. '#' → logprob: -2.8778185844421387
    4. 'def' → logprob: -3.0028185844421387
    5. 'visited' → logprob: -3.0028185844421387
    6. 'from' → logprob: -3.1278185844421387
    7. 'f' → logprob: -3.8778185844421387
    8. 'used' → logprob: -4.377818584442139
    9. 'found' → logprob: -5.127818584442139
    10. 'import' → logprob: -5.127818584442139

Token 164: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.09833504259586334
    2. ' not' → logprob: -2.473335027694702
    3. 'len' → logprob: -4.723335266113281
    4. 'not' → logprob: -8.473335266113281
    5. '(len' → logprob: -8.848335266113281
    6. ' ' → logprob: -9.723335266113281
    7. ' f' → logprob: -10.348335266113281
    8. ' l' → logprob: -11.848335266113281
    9. ' le' → logprob: -12.973335266113281
    10. ' ok' → logprob: -13.223335266113281

Token 165: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0017253957921639085
    2. '(' → logprob: -6.751725196838379
    3. ' (' → logprob: -7.501725196838379
    4. '(s' → logprob: -13.251725196838379
    5. '(F' → logprob: -14.876725196838379
    6. 'f' → logprob: -15.626725196838379
    7. '()' → logprob: -15.626725196838379
    8. '(
' → logprob: -16.251726150512695
    9. ' ' → logprob: -16.751726150512695
    10. '(fc' → logprob: -17.251726150512695

Token 166: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1889750361442566
    2. '()' → logprob: -2.1889750957489014
    3. '<' → logprob: -3.5639750957489014
    4. '==' → logprob: -4.438974857330322
    5. '()<' → logprob: -5.188974857330322
    6. ' <' → logprob: -5.313974857330322
    7. ' ==' → logprob: -5.938974857330322
    8. '>' → logprob: -6.313974857330322
    9. ' )' → logprob: -6.563974857330322
    10. '()==' → logprob: -7.188974857330322

Token 167: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3021138906478882
    2. ' <' → logprob: -1.4271138906478882
    3. '==' → logprob: -4.427114009857178
    4. '>' → logprob: -6.177114009857178
    5. ' ==' → logprob: -6.177114009857178
    6. '()' → logprob: -7.052114009857178
    7. '>=' → logprob: -7.302114009857178
    8. ' ' → logprob: -7.427114009857178
    9. '()<' → logprob: -7.427114009857178
    10. ' >' → logprob: -7.927114009857178

Token 168: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.013481252826750278
    2. '4' → logprob: -4.513481140136719
    3. '2' → logprob: -6.388481140136719
    4. '1' → logprob: -7.638481140136719
    5. '5' → logprob: -8.763481140136719
    6. '6' → logprob: -10.513481140136719
    7. ' ' → logprob: -10.513481140136719
    8. '10' → logprob: -11.763481140136719
    9. '```' → logprob: -12.013481140136719
    10. '8' → logprob: -12.075981140136719

Token 169: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.001953371800482273
    2. '1' → logprob: -7.126953601837158
    3. '2' → logprob: -7.251953601837158
    4. '4' → logprob: -8.251953125
    5. '5' → logprob: -9.626953125
    6. '

' → logprob: -10.876953125
    7. '6' → logprob: -11.001953125
    8. '```' → logprob: -11.001953125
    9. '   ' → logprob: -11.564453125
    10. '10' → logprob: -11.689453125

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10026922076940536
    2. ':
' → logprob: -2.350269317626953
    3. ' :' → logprob: -10.475269317626953
    4. ' :
' → logprob: -11.225269317626953
    5. ':
' → logprob: -11.725269317626953
    6. ' or' → logprob: -12.600269317626953
    7. 'print' → logprob: -12.850269317626953
    8. ':

' → logprob: -13.350269317626953
    9. '   ' → logprob: -13.600269317626953
    10. '==' → logprob: -13.600269317626953

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47527673840522766
    2. 'print' → logprob: -0.9752767086029053
    3. ' print' → logprob: -6.850276947021484
    4. '```' → logprob: -9.225276947021484
    5. '	print' → logprob: -11.100276947021484
    6. '       ' → logprob: -12.225276947021484
    7. '``' → logprob: -12.350276947021484
    8. ' ' → logprob: -12.475276947021484
    9. '    
' → logprob: -13.100276947021484
    10. 'for' → logprob: -13.225276947021484

Token 172: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002196409972384572
    2. '   ' → logprob: -6.377196311950684
    3. ' print' → logprob: -7.627196311950684
    4. ' ' → logprob: -13.002196311950684
    5. '```' → logprob: -13.252196311950684
    6. '  ' → logprob: -14.502196311950684
    7. '	print' → logprob: -14.502196311950684
    8. 'for' → logprob: -14.627196311950684
    9. '    
' → logprob: -15.127196311950684
    10. '[' → logprob: -15.627196311950684

Token 173: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0013304755557328463
    2. '(' → logprob: -6.626330375671387
    3. '("' → logprob: -12.376330375671387
    4. ' ('' → logprob: -15.751330375671387
    5. '(
' → logprob: -16.876331329345703
    6. '()' → logprob: -17.126331329345703
    7. '(('' → logprob: -17.751331329345703
    8. '(`' → logprob: -18.251331329345703
    9. '(No' → logprob: -18.376331329345703
    10. 's' → logprob: -18.876331329345703

Token 174: 'Yes' (ID: 13022)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.3895532786846161
    2. 'Yes' → logprob: -1.7645533084869385
    3. ''' → logprob: -1.8895533084869385
    4. '('' → logprob: -9.38955307006836
    5. ' No' → logprob: -9.63955307006836
    6. '"No' → logprob: -10.51455307006836
    7. ' Yes' → logprob: -10.76455307006836
    8. '(No' → logprob: -11.88955307006836
    9. 'YES' → logprob: -12.01455307006836
    10. '"' → logprob: -12.13955307006836

Token 175: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.595802903175354
    2. '')
' → logprob: -0.845802903175354
    3. ')' → logprob: -4.2208027839660645
    4. ')
' → logprob: -5.3458027839660645
    5. '')
' → logprob: -9.720803260803223
    6. '()' → logprob: -9.845803260803223
    7. '   ' → logprob: -10.345803260803223
    8. '")' → logprob: -10.470803260803223
    9. '")
' → logprob: -10.595803260803223
    10. ')
' → logprob: -12.845803260803223

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005863950937055051
    2. 'sys' → logprob: -8.00058650970459
    3. '    
' → logprob: -9.75058650970459
    4. ')' → logprob: -9.75058650970459
    5. '<|end|>' → logprob: -10.00058650970459
    6. 'import' → logprob: -11.00058650970459
    7. '	sys' → logprob: -11.37558650970459
    8. 'elif' → logprob: -11.37558650970459
    9. 'else' → logprob: -11.50058650970459
    10. '
' → logprob: -11.75058650970459

Token 177: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6973942518234253
    2. 'sys' (adapté à ' sys') → logprob: -0.6973942518234253
    3. ' sys' → logprob: -5.572394371032715
    4. '	sys' → logprob: -9.072394371032715
    5. '
' → logprob: -9.322394371032715
    6. 'import' → logprob: -9.572394371032715
    7. '\n' → logprob: -10.072394371032715
    8. '    
' → logprob: -10.447394371032715
    9. '=sys' → logprob: -10.697394371032715
    10. '  ' → logprob: -10.947394371032715

Token 178: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -8.602024900028482e-05
    2. '.stdout' → logprob: -10.000085830688477
    3. '.' → logprob: -10.750085830688477
    4. 'exit' → logprob: -11.250085830688477
    5. '.quit' → logprob: -12.750085830688477
    6. '.write' → logprob: -13.875085830688477
    7. '	exit' → logprob: -14.875085830688477
    8. '.stderr' → logprob: -15.125085830688477
    9. '.EXIT' → logprob: -15.375085830688477
    10. '.out' → logprob: -15.625085830688477

Token 179: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000455340719781816
    2. '(' → logprob: -7.750455379486084
    3. '()
' → logprob: -10.875454902648926
    4. '()`' → logprob: -13.500454902648926
    5. ' ()' → logprob: -13.625454902648926
    6. '()\' → logprob: -13.750454902648926
    7. '()

' → logprob: -14.250454902648926
    8. '()<' → logprob: -15.125454902648926
    9. '();' → logprob: -15.375454902648926
    10. '()>' → logprob: -15.500454902648926

Token 180: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2586335837841034
    2. 'def' → logprob: -2.133633613586426
    3. 'from' → logprob: -3.508633613586426
    4. '#' → logprob: -4.383633613586426
    5. 'found' → logprob: -4.383633613586426
    6. 'for' → logprob: -4.508633613586426
    7. 'elif' → logprob: -4.508633613586426
    8. 'print' → logprob: -5.008633613586426
    9. 'import' → logprob: -5.258633613586426
    10. 'flag' → logprob: -5.383633613586426

Token 181: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.002208069898188114
    2. 'len' → logprob: -6.752208232879639
    3. ' N' → logprob: -8.12720775604248
    4. ' not' → logprob: -8.12720775604248
    5. ' ' → logprob: -8.50220775604248
    6. '(len' → logprob: -9.25220775604248
    7. ' f' → logprob: -9.87720775604248
    8. ' M' → logprob: -10.25220775604248
    9. ' ok' → logprob: -10.75220775604248
    10. '  ' → logprob: -12.12720775604248

Token 182: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.10056387633085251
    2. '(' → logprob: -2.3505637645721436
    3. ' (' → logprob: -7.975564002990723
    4. '(s' → logprob: -11.475564002990723
    5. '(
' → logprob: -13.975564002990723
    6. '(F' → logprob: -14.225564002990723
    7. '()' → logprob: -15.850564002990723
    8. '((' → logprob: -15.975564002990723
    9. '('' → logprob: -16.225563049316406
    10. '（' → logprob: -16.225563049316406

Token 183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1327868402004242
    2. '==' → logprob: -2.382786750793457
    3. ' ==' → logprob: -3.632786750793457
    4. '()' → logprob: -6.132786750793457
    5. ' )' → logprob: -6.257786750793457
    6. ')==' → logprob: -7.132786750793457
    7. '<' → logprob: -8.507786750793457
    8. ' <' → logprob: -8.507786750793457
    9. '()==' → logprob: -9.882786750793457
    10. ' ' → logprob: -10.132786750793457

Token 184: ' <=' (ID: 5017)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6972060203552246
    2. ' ==' → logprob: -1.0722060203552246
    3. ' <' → logprob: -2.6972060203552246
    4. '<' → logprob: -2.8222060203552246
    5. ' ' → logprob: -4.322206020355225
    6. ' <=' → logprob: -4.572206020355225
    7. '<=' → logprob: -5.572206020355225
    8. '2' → logprob: -5.697206020355225
    9. '1' → logprob: -7.822206020355225
    10. '()' → logprob: -7.947206020355225

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005698873195797205
    2. ' ' → logprob: -5.2556986808776855
    3. '2' → logprob: -7.8806986808776855
    4. '0' → logprob: -9.380699157714844
    5. '4' → logprob: -14.318199157714844
    6. '3' → logprob: -14.693199157714844
    7. ' ' → logprob: -15.005699157714844
    8. '  ' → logprob: -15.068199157714844
    9. '１' → logprob: -16.068199157714844
    10. '```' → logprob: -16.255699157714844

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008384577231481671
    2. '2' → logprob: -7.125838279724121
    3. '0' → logprob: -10.625838279724121
    4. ' ' → logprob: -11.875838279724121
    5. '```' → logprob: -14.375838279724121
    6. '   ' → logprob: -14.688338279724121
    7. '4' → logprob: -15.125838279724121
    8. '3' → logprob: -15.188338279724121
    9. '  ' → logprob: -15.500838279724121
    10. '１' → logprob: -15.750838279724121

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2260190099477768
    2. ':
' → logprob: -1.601019024848938
    3. '   ' → logprob: -7.476018905639648
    4. ':
' → logprob: -11.601018905639648
    5. ' or' → logprob: -11.851018905639648
    6. ':return' → logprob: -12.101018905639648
    7. '):
' → logprob: -12.351018905639648
    8. '():
' → logprob: -12.351018905639648
    9. ' :
' → logprob: -13.226018905639648
    10. '):' → logprob: -13.601018905639648

Token 188: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.44307398796081543
    2. ':' → logprob: -1.3180739879608154
    3. '   ' → logprob: -2.4430739879608154
    4. 'print' → logprob: -5.8180742263793945
    5. ' and' → logprob: -9.318074226379395
    6. '):
' → logprob: -9.693074226379395
    7. ' print' → logprob: -9.818074226379395
    8. ' :
' → logprob: -9.818074226379395
    9. ' or' → logprob: -10.568074226379395
    10. 'and' → logprob: -10.818074226379395

Token 189: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007869940251111984
    2. ' print' → logprob: -5.132869720458984
    3. '   ' → logprob: -6.257869720458984
    4. '
' → logprob: -11.007869720458984
    5. ' ' → logprob: -12.632869720458984
    6. '	print' → logprob: -13.132869720458984
    7. '```' → logprob: -14.382869720458984
    8. '  ' → logprob: -15.007869720458984
    9. '    
' → logprob: -15.132869720458984
    10. 'if' → logprob: -15.382869720458984

Token 190: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001933873863890767
    2. '(' → logprob: -6.251934051513672
    3. '("' → logprob: -13.001934051513672
    4. '('(' → logprob: -13.001934051513672
    5. ' ('' → logprob: -14.376934051513672
    6. '(('' → logprob: -16.626934051513672
    7. '(
' → logprob: -17.001934051513672
    8. '(`' → logprob: -18.126934051513672
    9. '()' → logprob: -18.501934051513672
    10. '('\' → logprob: -18.876934051513672

Token 191: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.2019144743680954
    2. ''' → logprob: -1.7019144296646118
    3. 'Yes' → logprob: -8.07691478729248
    4. '"No' → logprob: -8.95191478729248
    5. '('' → logprob: -10.45191478729248
    6. ' No' → logprob: -11.45191478729248
    7. '(No' → logprob: -12.57691478729248
    8. '   ' → logprob: -12.57691478729248
    9. '`' → logprob: -13.20191478729248
    10. '```' → logprob: -13.20191478729248

Token 192: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.20640045404434204
    2. '')
' → logprob: -1.9564003944396973
    3. ')' → logprob: -3.2064003944396973
    4. ')
' → logprob: -5.456400394439697
    5. '()' → logprob: -8.581400871276855
    6. '")' → logprob: -9.706400871276855
    7. '   ' → logprob: -10.206400871276855
    8. '()
' → logprob: -10.456400871276855
    9. '')
' → logprob: -11.206400871276855
    10. '")
' → logprob: -11.706400871276855

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01998758129775524
    2. ')' → logprob: -4.5199875831604
    3. 'else' → logprob: -6.1449875831604
    4. '
' → logprob: -6.8949875831604
    5. 'import' → logprob: -6.8949875831604
    6. 'sys' → logprob: -7.3949875831604
    7. '<|end|>' → logprob: -7.5199875831604
    8. '#' → logprob: -7.5199875831604
    9. '    
' → logprob: -7.7699875831604
    10. ' ' → logprob: -7.8949875831604

Token 194: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.16881251335144043
    2. ' sys' → logprob: -1.9188125133514404
    3. '   ' → logprob: -4.7938127517700195
    4. '	sys' → logprob: -8.91881275177002
    5. 'import' → logprob: -9.29381275177002
    6. 'else' → logprob: -11.41881275177002
    7. '(sys' → logprob: -11.54381275177002
    8. ' ' → logprob: -11.79381275177002
    9. '=sys' → logprob: -12.29381275177002
    10. 'exit' → logprob: -12.91881275177002

Token 195: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -2.3080716346157715e-05
    2. '.' → logprob: -11.500022888183594
    3. 'exit' → logprob: -11.875022888183594
    4. '.quit' → logprob: -13.000022888183594
    5. '	exit' → logprob: -14.000022888183594
    6. '.stdout' → logprob: -14.125022888183594
    7. '.EXIT' → logprob: -14.125022888183594
    8. ' .' → logprob: -14.500022888183594
    9. '.Exit' → logprob: -15.125022888183594
    10. '_exit' → logprob: -16.000022888183594

Token 196: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.975612187583465e-05
    2. '(' → logprob: -10.750029563903809
    3. '()`' → logprob: -12.875029563903809
    4. '()
' → logprob: -13.000029563903809
    5. '()>' → logprob: -14.375029563903809
    6. '();' → logprob: -14.375029563903809
    7. '()

' → logprob: -14.500029563903809
    8. ' ()' → logprob: -14.750029563903809
    9. '()<' → logprob: -15.250029563903809
    10. '())' → logprob: -15.625029563903809

Token 197: 't' (ID: 83)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6718281507492065
    2. 'from' → logprob: -1.6718281507492065
    3. 'u' → logprob: -2.171828269958496
    4. 'visited' → logprob: -2.546828269958496
    5. 'if' → logprob: -2.796828269958496
    6. '#' → logprob: -2.921828269958496
    7. 'import' → logprob: -3.171828269958496
    8. 'x' → logprob: -3.296828269958496
    9. 'for' → logprob: -3.421828269958496
    10. 'g' → logprob: -3.671828269958496

Token 198: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2346926927566528
    2. ' =' → logprob: -1.4846926927566528
    3. 'emp' → logprob: -1.6096926927566528
    4. 'wo' → logprob: -2.4846925735473633
    5. 'ry' → logprob: -2.9846925735473633
    6. '=' → logprob: -3.1096925735473633
    7. 'o' → logprob: -3.6096925735473633
    8. 'mp' → logprob: -3.8596925735473633
    9. 'h' → logprob: -4.234692573547363
    10. 'rip' → logprob: -4.859692573547363

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1887618452310562
    2. ',' → logprob: -3.1887619495391846
    3. 'wo' → logprob: -3.3137619495391846
    4. '=' → logprob: -3.6887619495391846
    5. 'emp' → logprob: -3.8137619495391846
    6. 'mp' → logprob: -4.4387617111206055
    7. 'o' → logprob: -4.9387617111206055
    8. '1' → logprob: -5.1887617111206055
    9. 'w' → logprob: -5.4387617111206055
    10. 'h' → logprob: -5.5637617111206055

Token 200: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04643922671675682
    2. 'adj' → logprob: -3.4214391708374023
    3. '[]' → logprob: -4.921439170837402
    4. ' f' → logprob: -5.921439170837402
    5. '[' → logprob: -7.046439170837402
    6. '[f' → logprob: -7.671439170837402
    7. 'len' → logprob: -8.046439170837402
    8. '0' → logprob: -8.296439170837402
    9. ' []' → logprob: -9.046439170837402
    10. '[]
' → logprob: -9.421439170837402

Token 201: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003910626284778118
    2. '[:]' → logprob: -6.003910541534424
    3. '[:' → logprob: -6.628910541534424
    4. '.copy' → logprob: -9.378911018371582
    5. '.' → logprob: -11.503911018371582
    6. '[]' → logprob: -12.253911018371582
    7. ',' → logprob: -12.628911018371582
    8. ' =' → logprob: -13.628911018371582
    9. '[-' → logprob: -13.878911018371582
    10. '+' → logprob: -14.003911018371582

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.50000286102295
    3. '1' → logprob: -13.75000286102295
    4. '-' → logprob: -16.312501907348633
    5. ']' → logprob: -17.500001907348633
    6. '```' → logprob: -17.937501907348633
    7. '   ' → logprob: -18.250001907348633
    8. '00' → logprob: -18.375001907348633
    9. '])' → logprob: -18.687501907348633
    10. '2' → logprob: -18.687501907348633

Token 203: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018248161301016808
    2. ']
' → logprob: -4.018248081207275
    3. ' ]' → logprob: -9.893248558044434
    4. '];' → logprob: -11.518248558044434
    5. ']

' → logprob: -11.518248558044434
    6. '],' → logprob: -12.268248558044434
    7. '][' → logprob: -12.268248558044434
    8. ')' → logprob: -12.393248558044434
    9. ']
' → logprob: -12.893248558044434
    10. '[' → logprob: -13.018248558044434

Token 204: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -8.888114098226652e-05
    2. '   ' → logprob: -10.625088691711426
    3. 'for' → logprob: -11.125088691711426
    4. ' t' → logprob: -11.250088691711426
    5. 'import' → logprob: -11.250088691711426
    6. 'from' → logprob: -11.625088691711426
    7. 'f' → logprob: -12.500088691711426
    8. 'neighbors' → logprob: -12.625088691711426
    9. 'adj' → logprob: -13.625088691711426
    10. 'deg' → logprob: -13.750088691711426

Token 205: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014239625306800008
    2. '=' → logprob: -9.625142097473145
    3. ' =' → logprob: -10.000142097473145
    4. '[' → logprob: -11.250142097473145
    5. 'f' → logprob: -11.875142097473145
    6. ' ' → logprob: -12.750142097473145
    7. '```' → logprob: -13.250142097473145
    8. ',' → logprob: -13.375142097473145
    9. '_' → logprob: -13.500142097473145
    10. '2' → logprob: -13.625142097473145

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021152347326279
    2. '=' → logprob: -2.3502116203308105
    3. ',' → logprob: -13.225211143493652
    4. ' ' → logprob: -13.475211143493652
    5. '=f' → logprob: -13.475211143493652
    6. ' f' → logprob: -16.35021209716797
    7. 'f' → logprob: -16.60021209716797
    8. ' =
' → logprob: -17.35021209716797
    9. 't' → logprob: -17.47521209716797
    10. '=t' → logprob: -17.47521209716797

Token 207: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12692862749099731
    2. ' f' → logprob: -2.1269285678863525
    3. '   ' → logprob: -15.251928329467773
    4. '	f' → logprob: -16.001928329467773
    5. ' ' → logprob: -16.126928329467773
    6. '[' → logprob: -16.751928329467773
    7. '0' → logprob: -17.251928329467773
    8. ' ' → logprob: -18.251928329467773
    9. '  ' → logprob: -18.564428329467773
    10. 't' → logprob: -18.689428329467773

Token 208: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.906711546937004e-05
    2. '1' → logprob: -10.000048637390137
    3. '```' → logprob: -13.625048637390137
    4. ' [' → logprob: -13.750048637390137
    5. '\[' → logprob: -13.875048637390137
    6. 'f' → logprob: -16.250049591064453
    7. '[
' → logprob: -16.375049591064453
    8. 's' → logprob: -16.625049591064453
    9. '][' → logprob: -17.000049591064453
    10. '
' → logprob: -17.500049591064453

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. ']' → logprob: -17.0
    4. '-' → logprob: -17.5
    5. '0' → logprob: -17.625
    6. '```' → logprob: -18.0
    7. '   ' → logprob: -18.625
    8. '2' → logprob: -19.0
    9. '])' → logprob: -19.4375
    10. '１' → logprob: -20.0

Token 210: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5259795784950256
    2. ')' → logprob: -0.9009795784950256
    3. '<|end|>' → logprob: -6.025979518890381
    4. '}' → logprob: -9.275979995727539
    5. '#' → logprob: -9.400979995727539
    6. 't' → logprob: -10.150979995727539
    7. '<|end|>' → logprob: -10.150979995727539
    8. '])' → logprob: -10.275979995727539
    9. '```' → logprob: -10.900979995727539
    10. 'import' → logprob: -11.025979995727539

Token 211: 'seen' (ID: 34177)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1026151180267334
    2. 'visited' → logprob: -1.2276151180267334
    3. 'found' → logprob: -2.4776151180267334
    4. 'if' → logprob: -2.6026151180267334
    5. 'def' → logprob: -2.8526151180267334
    6. 'used' → logprob: -3.8526151180267334
    7. 'neighbors' → logprob: -4.1026153564453125
    8. 'common' → logprob: -4.1026153564453125
    9. 'count' → logprob: -4.3526153564453125
    10. 'flag' → logprob: -4.4776153564453125

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00867543462663889
    2. '=' → logprob: -4.758675575256348
    3. '[' → logprob: -10.008675575256348
    4. '=[' → logprob: -11.883675575256348
    5. ' =[' → logprob: -12.633675575256348
    6. '=[]' → logprob: -13.258675575256348
    7. '_' → logprob: -13.758675575256348
    8. ' ' → logprob: -14.508675575256348
    9. ',' → logprob: -14.758675575256348
    10. '[:]' → logprob: -15.008675575256348

Token 213: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0035302250180393457
    2. 'set' → logprob: -6.503530025482178
    3. ' [' → logprob: -6.878530025482178
    4. '[t' → logprob: -7.378530025482178
    5. '[]' → logprob: -8.253530502319336
    6. '[s' → logprob: -10.253530502319336
    7. '[N' → logprob: -10.878530502319336
    8. ' set' → logprob: -11.878530502319336
    9. '[node' → logprob: -11.878530502319336
    10. '[start' → logprob: -12.003530502319336

Token 214: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.982165698194876e-05
    2. ' False' → logprob: -9.750080108642578
    3. '0' → logprob: -10.750080108642578
    4. '(False' → logprob: -17.625080108642578
    5. '   ' → logprob: -18.750080108642578
    6. '[' → logprob: -19.875080108642578
    7. 'True' → logprob: -20.875080108642578
    8. '
' → logprob: -21.000080108642578
    9. ' ' → logprob: -21.125080108642578
    10. '=False' → logprob: -22.125080108642578

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08078198879957199
    2. ']*(' → logprob: -2.580781936645508
    3. ' for' → logprob: -6.830781936645508
    4. ']*' → logprob: -7.455781936645508
    5. 'for' → logprob: -8.455781936645508
    6. ']+' → logprob: -11.705781936645508
    7. ' ]' → logprob: -11.830781936645508
    8. '*(' → logprob: -12.955781936645508
    9. '*' → logprob: -14.955781936645508
    10. '(' → logprob: -14.955781936645508

Token 216: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6596056222915649
    2. 'for' → logprob: -0.9096056222915649
    3. ']' → logprob: -3.2846055030822754
    4. '*(' → logprob: -3.9096055030822754
    5. '(N' → logprob: -4.784605503082275
    6. '*' → logprob: -5.284605503082275
    7. ']*(' → logprob: -5.284605503082275
    8. '(' → logprob: -6.409605503082275
    9. ']*' → logprob: -7.284605503082275
    10. ' *' → logprob: -7.409605503082275

Token 217: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.000593543634749949
    2. '(len' → logprob: -7.625593662261963
    3. '(' → logprob: -9.500593185424805
    4. '(n' → logprob: -11.000593185424805
    5. '((' → logprob: -12.500593185424805
    6. ' (' → logprob: -12.625593185424805
    7. 'N' → logprob: -13.250593185424805
    8. '(max' → logprob: -13.375593185424805
    9. '   ' → logprob: -13.875593185424805
    10. '(MAX' → logprob: -14.375593185424805

Token 218: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1269834339618683
    2. '(N' → logprob: -2.126983404159546
    3. 'len' → logprob: -11.001983642578125
    4. ' N' → logprob: -11.251983642578125
    5. ' (' → logprob: -11.376983642578125
    6. '   ' → logprob: -12.376983642578125
    7. '(len' → logprob: -12.751983642578125
    8. '(' → logprob: -12.876983642578125
    9. ' ' → logprob: -13.376983642578125
    10. '	N' → logprob: -14.626983642578125

Token 219: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.796184723294573e-06
    2. '1' → logprob: -12.375005722045898
    3. '+
' → logprob: -13.750005722045898
    4. ' +' → logprob: -15.375005722045898
    5. '```' → logprob: -16.7500057220459
    6. '2' → logprob: -18.5000057220459
    7. '+)' → logprob: -18.7500057220459
    8. ')+' → logprob: -19.2500057220459
    9. '+B' → logprob: -19.2500057220459
    10. '+A' → logprob: -19.3750057220459

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '2' → logprob: -12.375004768371582
    3. '
' → logprob: -14.875004768371582
    4. ' ' → logprob: -16.8750057220459
    5. '3' → logprob: -17.5625057220459
    6. '7' → logprob: -17.5625057220459
    7. '```' → logprob: -17.5625057220459
    8. '   ' → logprob: -17.6875057220459
    9. '(' → logprob: -17.8125057220459
    10. '

' → logprob: -18.0000057220459

Token 221: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003685861302074045
    2. ')
' → logprob: -8.000368118286133
    3. ' )' → logprob: -10.375368118286133
    4. ')
' → logprob: -13.875368118286133
    5. ')

' → logprob: -15.000368118286133
    6. ']' → logprob: -15.750368118286133
    7. '
' → logprob: -16.500368118286133
    8. '))' → logprob: -16.625368118286133
    9. ' )
' → logprob: -16.750368118286133
    10. '),' → logprob: -16.750368118286133

Token 222: 'seen' (ID: 34177)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7764382362365723
    2. 'stack' → logprob: -1.0264382362365723
    3. 'from' → logprob: -2.5264382362365723
    4. 'for' → logprob: -3.7764382362365723
    5. 'seen' → logprob: -4.026438236236572
    6. 'q' → logprob: -4.151438236236572
    7. 'visited' → logprob: -4.401438236236572
    8. 'queue' → logprob: -4.401438236236572
    9. 'import' → logprob: -4.651438236236572
    10. 'if' → logprob: -4.901438236236572

Token 223: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.05546528846025467
    2. '[' → logprob: -2.9304652214050293
    3. '=' → logprob: -8.555465698242188
    4. '[:]' → logprob: -9.555465698242188
    5. '[T' → logprob: -10.055465698242188
    6. ']' → logprob: -10.180465698242188
    7. '[]' → logprob: -10.430465698242188
    8. '[s' → logprob: -10.555465698242188
    9. ' [' → logprob: -10.680465698242188
    10. '\[' → logprob: -10.930465698242188

Token 224: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16025662422180176
    2. '1' → logprob: -1.9102566242218018
    3. ']' → logprob: -11.285256385803223
    4. '[' → logprob: -11.410256385803223
    5. '_' → logprob: -13.035256385803223
    6. '```' → logprob: -13.035256385803223
    7. '0' → logprob: -14.535256385803223
    8. '+' → logprob: -14.535256385803223
    9. '=' → logprob: -14.785256385803223
    10. ' ' → logprob: -14.785256385803223

Token 225: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002690840628929436
    2. ']=' → logprob: -8.375268936157227
    3. '=' → logprob: -11.000268936157227
    4. ' ]' → logprob: -11.250268936157227
    5. ')' → logprob: -12.250268936157227
    6. ' =' → logprob: -13.000268936157227
    7. '[' → logprob: -14.125268936157227
    8. '])' → logprob: -15.000268936157227
    9. ']
' → logprob: -15.750268936157227
    10. ',' → logprob: -16.500268936157227

Token 226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687989115715027
    2. ' =' → logprob: -1.1368799209594727
    3. ',' → logprob: -13.136879920959473
    4. ']' → logprob: -13.511879920959473
    5. '+=' → logprob: -13.636879920959473
    6. ' ' → logprob: -13.761879920959473
    7. '=True' → logprob: -14.136879920959473
    8. ' +=' → logprob: -14.136879920959473
    9. ']=' → logprob: -14.761879920959473
    10. '[' → logprob: -15.011879920959473

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.77022064034827e-05
    2. '2' → logprob: -10.250097274780273
    3. ' ' → logprob: -10.500097274780273
    4. 'True' → logprob: -10.625097274780273
    5. 't' → logprob: -11.625097274780273
    6. '  ' → logprob: -14.875097274780273
    7. ' True' → logprob: -15.250097274780273
    8. '   ' → logprob: -15.500097274780273
    9. '3' → logprob: -15.875097274780273
    10. '-' → logprob: -16.000097274780273

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001537169300718233
    2. 'True' → logprob: -9.375153541564941
    3. '2' → logprob: -9.875153541564941
    4. ' ' → logprob: -11.625153541564941
    5. 't' → logprob: -12.375153541564941
    6. '3' → logprob: -13.375153541564941
    7. '0' → logprob: -14.250153541564941
    8. '-' → logprob: -14.250153541564941
    9. ' True' → logprob: -15.125153541564941
    10. '7' → logprob: -15.250153541564941

Token 229: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.460089772939682
    2. 'stack' → logprob: -1.8350898027420044
    3. 'seen' → logprob: -2.210089683532715
    4. 'queue' → logprob: -3.335089683532715
    5. 'q' → logprob: -4.335089683532715
    6. 'from' → logprob: -4.460089683532715
    7. ' for' → logprob: -4.710089683532715
    8. 'visited' → logprob: -4.835089683532715
    9. '
' → logprob: -5.460089683532715
    10. 'if' → logprob: -5.835089683532715

Token 230: 'seen' (ID: 34177)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.34976738691329956
    2. 'stack' → logprob: -1.3497674465179443
    3. 'for' → logprob: -4.099767208099365
    4. 'queue' → logprob: -4.349767208099365
    5. 'import' → logprob: -5.349767208099365
    6. 'q' → logprob: -6.724767208099365
    7. 't' → logprob: -9.599767684936523
    8. 'seen' → logprob: -10.099767684936523
    9. '```' → logprob: -10.224767684936523
    10. 'if' → logprob: -10.224767684936523

Token 231: '[t' (ID: 32184)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5311376452445984
    2. '[t' → logprob: -0.9061376452445984
    3. '<|end|>' → logprob: -5.906137466430664
    4. 't' → logprob: -6.406137466430664
    5. '_adj' → logprob: -6.906137466430664
    6. 'adj' → logprob: -7.781137466430664
    7. '[s' → logprob: -8.156137466430664
    8. 'for' → logprob: -9.031137466430664
    9. '[temp' → logprob: -9.281137466430664
    10. ' =' → logprob: -9.656137466430664

Token 232: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.504040356958285e-05
    2. '1' → logprob: -10.125064849853516
    3. ']' → logprob: -11.125064849853516
    4. ')' → logprob: -13.250064849853516
    5. '[' → logprob: -13.250064849853516
    6. 'adj' → logprob: -13.250064849853516
    7. 't' → logprob: -13.500064849853516
    8. '])' → logprob: -14.250064849853516
    9. '0' → logprob: -14.250064849853516
    10. 'f' → logprob: -14.875064849853516

Token 233: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003304500598460436
    2. '=' → logprob: -6.503304481506348
    3. ' ]' → logprob: -6.753304481506348
    4. ' =' → logprob: -7.628304481506348
    5. ']=' → logprob: -8.878304481506348
    6. ')' → logprob: -12.003304481506348
    7. '   ' → logprob: -14.128304481506348
    8. ' ' → logprob: -15.878304481506348
    9. ']
' → logprob: -16.253305435180664
    10. '[' → logprob: -16.378305435180664

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054887473583221436
    2. ' =' → logprob: -2.929887533187866
    3. '   ' → logprob: -12.804887771606445
    4. '=True' → logprob: -14.304887771606445
    5. ' ' → logprob: -14.429887771606445
    6. '==' → logprob: -15.804887771606445
    7. '+=' → logprob: -15.929887771606445
    8. '    ' → logprob: -15.929887771606445
    9. ')' → logprob: -16.054887771606445
    10. '  ' → logprob: -16.054887771606445

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005687730386853218
    2. '2' → logprob: -5.255687713623047
    3. ' ' → logprob: -7.755687713623047
    4. '-' → logprob: -11.380687713623047
    5. '0' → logprob: -11.505687713623047
    6. '  ' → logprob: -13.755687713623047
    7. 'True' → logprob: -14.255687713623047
    8. ' -' → logprob: -14.505687713623047
    9. '   ' → logprob: -14.505687713623047
    10. '3' → logprob: -14.568187713623047

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007199380779638886
    2. '2' → logprob: -7.250720024108887
    3. '-' → logprob: -12.250720024108887
    4. ' ' → logprob: -12.375720024108887
    5. '   ' → logprob: -14.875720024108887
    6. '  ' → logprob: -15.375720024108887
    7. '0' → logprob: -15.938220024108887
    8. ' -' → logprob: -16.50071907043457
    9. '3' → logprob: -16.75071907043457
    10. 'True' → logprob: -17.00071907043457

Token 237: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7847037315368652
    2. 'stack' → logprob: -1.0347037315368652
    3. 'from' → logprob: -2.4097037315368652
    4. 'queue' → logprob: -2.6597037315368652
    5. 'q' → logprob: -4.284703731536865
    6. 'if' → logprob: -5.659703731536865
    7. ' for' → logprob: -5.784703731536865
    8. 'import' → logprob: -5.909703731536865
    9. 'def' → logprob: -7.034703731536865
    10. 'found' → logprob: -7.284703731536865

Token 238: 'stack' (ID: 15145)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.709489643573761
    2. 'from' → logprob: -1.4594895839691162
    3. 'stack' → logprob: -1.4594895839691162
    4. 'queue' → logprob: -3.584489583969116
    5. 'q' → logprob: -5.209489822387695
    6. 'if' → logprob: -5.459489822387695
    7. 'import' → logprob: -6.209489822387695
    8. 'visited' → logprob: -7.084489822387695
    9. 'def' → logprob: -7.334489822387695
    10. 'found' → logprob: -7.584489822387695

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896967768669128
    2. '=' → logprob: -2.4639697074890137
    3. '=[]' → logprob: -10.963969230651855
    4. '.append' → logprob: -11.588969230651855
    5. '[:]' → logprob: -13.588969230651855
    6. '[]' → logprob: -14.088969230651855
    7. '.' → logprob: -14.713969230651855
    8. ' ' → logprob: -14.963969230651855
    9. ' =[' → logprob: -15.838969230651855
    10. '[' → logprob: -15.963969230651855

Token 240: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.890277087688446
    2. '[' → logprob: -1.3902771472930908
    3. '[t' → logprob: -1.3902771472930908
    4. ' [' → logprob: -3.140277147293091
    5. '[f' → logprob: -3.390277147293091
    6. ' []' → logprob: -4.765276908874512
    7. 'adj' → logprob: -5.390276908874512
    8. ' adj' → logprob: -8.765276908874512
    9. '[ind' → logprob: -9.140276908874512
    10. '[top' → logprob: -9.140276908874512

Token 241: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0006212961161509156
    2. '(t' → logprob: -7.500621318817139
    3. 'adj' → logprob: -10.50062084197998
    4. ' t' → logprob: -11.62562084197998
    5. '   ' → logprob: -11.75062084197998
    6. '(' → logprob: -11.75062084197998
    7. 'f' → logprob: -11.87562084197998
    8. ']' → logprob: -13.12562084197998
    9. '[t' → logprob: -13.25062084197998
    10. '(adj' → logprob: -13.75062084197998

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007669798564165831
    2. '2' → logprob: -4.882669925689697
    3. '(' → logprob: -11.007669448852539
    4. ']' → logprob: -11.007669448852539
    5. '[' → logprob: -11.632669448852539
    6. 'f' → logprob: -11.757669448852539
    7. '_' → logprob: -12.257669448852539
    8. 't' → logprob: -12.382669448852539
    9. 'x' → logprob: -13.382669448852539
    10. '0' → logprob: -15.007669448852539

Token 243: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013957221992313862
    2. ',' → logprob: -4.5139570236206055
    3. ' ]' → logprob: -5.8889570236206055
    4. ']
' → logprob: -9.388957023620605
    5. '   ' → logprob: -10.888957023620605
    6. ',
' → logprob: -11.388957023620605
    7. ' ,' → logprob: -11.638957023620605
    8. ',t' → logprob: -12.263957023620605
    9. '[' → logprob: -14.138957023620605
    10. '+]' → logprob: -14.138957023620605

Token 244: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.028721967712044716
    2. ' while' → logprob: -4.653721809387207
    3. '	while' → logprob: -5.153721809387207
    4. '\n' → logprob: -5.528721809387207
    5. '```' → logprob: -5.903721809387207
    6. '   ' → logprob: -6.153721809387207
    7. 'While' → logprob: -6.528721809387207
    8. '\t' → logprob: -7.403721809387207
    9. 'True' → logprob: -7.653721809387207
    10. '
' → logprob: -8.028721809387207

Token 245: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0005610156804323196
    2. ' stack' → logprob: -7.500561237335205
    3. 'len' → logprob: -11.750560760498047
    4. '	stack' → logprob: -16.625560760498047
    5. '(stack' → logprob: -17.125560760498047
    6. ' len' → logprob: -18.125560760498047
    7. 'st' → logprob: -19.125560760498047
    8. ' ' → logprob: -19.625560760498047
    9. '   ' → logprob: -19.750560760498047
    10. 'Stack' → logprob: -20.000560760498047

Token 246: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38738057017326355
    2. '.pop' → logprob: -1.137380599975586
    3. 'pop' → logprob: -8.887380599975586
    4. '.' → logprob: -9.012380599975586
    5. '[-' → logprob: -9.137380599975586
    6. ':
' → logprob: -9.762380599975586
    7. '.append' → logprob: -10.387380599975586
    8. '):' → logprob: -10.637380599975586
    9. ' :' → logprob: -11.762380599975586
    10. '>:' → logprob: -12.887380599975586

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07238210737705231
    2. 'u' → logprob: -4.072381973266602
    3. 'v' → logprob: -4.072381973266602
    4. 'current' → logprob: -4.322381973266602
    5. ' current' → logprob: -5.197381973266602
    6. 'node' → logprob: -5.322381973266602
    7. ' u' → logprob: -5.447381973266602
    8. 'x' → logprob: -5.572381973266602
    9. ' node' → logprob: -6.572381973266602
    10. ' v' → logprob: -7.447381973266602

Token 248: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01774212345480919
    2. 'v' (adapté à ' v') → logprob: -5.017742156982422
    3. ' u' → logprob: -5.392742156982422
    4. 'stack' → logprob: -5.517742156982422
    5. 'node' → logprob: -6.767742156982422
    6. 'x' → logprob: -7.517742156982422
    7. ' stack' → logprob: -7.767742156982422
    8. 'current' → logprob: -9.267742156982422
    9. ' node' → logprob: -9.767742156982422
    10. 'cur' → logprob: -9.892742156982422

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023584820330142975
    2. '=' → logprob: -3.7735848426818848
    3. '.pop' → logprob: -8.023584365844727
    4. '.append' → logprob: -11.523584365844727
    5. '.' → logprob: -13.773584365844727
    6. 'pop' → logprob: -14.898584365844727
    7. '   ' → logprob: -16.398584365844727
    8. ',' → logprob: -16.523584365844727
    9. ')' → logprob: -16.773584365844727
    10. '.=' → logprob: -17.648584365844727

Token 250: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0040785204619169235
    2. ' stack' → logprob: -5.504078388214111
    3. '	stack' → logprob: -16.129077911376953
    4. '   ' → logprob: -18.254077911376953
    5. '(stack' → logprob: -19.129077911376953
    6. ' ' → logprob: -19.879077911376953
    7. '.stack' → logprob: -21.129077911376953
    8. '_stack' → logprob: -21.254077911376953
    9. 'Stack' → logprob: -22.129077911376953
    10. '  ' → logprob: -22.379077911376953

Token 251: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -1.0280383548888494e-06
    2. '.' → logprob: -15.000000953674316
    3. '[-' → logprob: -15.000000953674316
    4. 'pop' → logprob: -15.000000953674316
    5. ' .' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '.p' → logprob: -21.500001907348633
    8. ' pop' → logprob: -21.625001907348633
    9. '_pop' → logprob: -21.875001907348633
    10. '	pop' → logprob: -21.875001907348633

Token 252: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016158436483237892
    2. '()
' → logprob: -8.750161170959473
    3. '(' → logprob: -12.875161170959473
    4. '()

' → logprob: -15.625161170959473
    5. ' ()' → logprob: -15.875161170959473
    6. ')' → logprob: -15.875161170959473
    7. '()\' → logprob: -17.00016212463379
    8. '()]' → logprob: -17.25016212463379
    9. '();' → logprob: -17.87516212463379
    10. '   ' → logprob: -17.87516212463379

Token 253: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006354739889502525
    2. '   ' → logprob: -8.000635147094727
    3. ' for' → logprob: -8.500635147094727
    4. 'if' → logprob: -9.250635147094727
    5. '	for' → logprob: -15.000635147094727
    6. '    
' → logprob: -15.125635147094727
    7. '
' → logprob: -18.000635147094727
    8. '```' → logprob: -18.000635147094727
    9. 'found' → logprob: -18.500635147094727
    10. ' if' → logprob: -19.500635147094727

Token 254: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003485745983198285
    2. 'if' → logprob: -8.000349044799805
    3. ' for' → logprob: -11.250349044799805
    4. '   ' → logprob: -16.125349044799805
    5. 'found' → logprob: -17.625349044799805
    6. '    
' → logprob: -18.125349044799805
    7. '	for' → logprob: -19.625349044799805
    8. ' if' → logprob: -19.625349044799805
    9. '```' → logprob: -19.625349044799805
    10. '
' → logprob: -19.625349044799805

Token 255: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.11963668465614319
    2. 'w' → logprob: -2.4946367740631104
    3. 'nv' → logprob: -4.119636535644531
    4. 'x' → logprob: -5.494636535644531
    5. 'nx' → logprob: -5.619636535644531
    6. 'n' → logprob: -6.119636535644531
    7. 'to' → logprob: -6.119636535644531
    8. 'e' → logprob: -6.994636535644531
    9. ' u' → logprob: -7.619636535644531
    10. 'i' → logprob: -9.244636535644531

Token 256: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0889698937535286
    2. 'in' → logprob: -2.4639699459075928
    3. '	in' → logprob: -10.838970184326172
    4. ' ' → logprob: -12.588970184326172
    5. '    ' → logprob: -13.588970184326172
    6. '   ' → logprob: -13.963970184326172
    7. '<|end|>' → logprob: -14.088970184326172
    8. ',' → logprob: -14.088970184326172
    9. ' ' → logprob: -14.463970184326172
    10. 'In' → logprob: -14.588970184326172

Token 257: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.00043102685594931245
    2. ' adj' → logprob: -7.750431060791016
    3. 'ad' → logprob: -15.500431060791016
    4. '(adj' → logprob: -16.500431060791016
    5. '   ' → logprob: -17.375431060791016
    6. 'range' → logprob: -18.000431060791016
    7. ' ' → logprob: -18.750431060791016
    8. '  ' → logprob: -20.125431060791016
    9. 'adm' → logprob: -20.875431060791016
    10. 'aj' → logprob: -21.000431060791016

Token 258: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. 'v' → logprob: -15.75
    3. '[u' → logprob: -16.125
    4. '[' → logprob: -16.625
    5. ' [' → logprob: -20.125
    6. '	v' → logprob: -20.375
    7. '(v' → logprob: -20.75
    8. '```' → logprob: -21.5
    9. ')v' → logprob: -21.625
    10. '   ' → logprob: -21.75

Token 259: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0008367887930944562
    2. ']' → logprob: -7.7508368492126465
    3. ']:
' → logprob: -8.000836372375488
    4. ':' → logprob: -10.000836372375488
    5. ']:
' → logprob: -11.625836372375488
    6. '):' → logprob: -12.000836372375488
    7. '   ' → logprob: -12.375836372375488
    8. '       ' → logprob: -13.250836372375488
    9. '}:' → logprob: -13.875836372375488
    10. '>:' → logprob: -14.375836372375488

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00752558559179306
    2. 'if' → logprob: -5.507525444030762
    3. '   ' → logprob: -6.007525444030762
    4. ' if' → logprob: -7.007525444030762
    5. '	   ' → logprob: -10.757525444030762
    6. '    ' → logprob: -10.882525444030762
    7. '	' → logprob: -11.507525444030762
    8. '	if' → logprob: -11.507525444030762
    9. ' ' → logprob: -12.632525444030762
    10. '<|end|>' → logprob: -13.257525444030762

Token 261: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7513482570648193
    2. ' if' → logprob: -0.7513482570648193
    3. '           ' → logprob: -2.8763482570648193
    4. '       ' → logprob: -9.251348495483398
    5. '   ' → logprob: -9.626348495483398
    6. ' ' → logprob: -11.251348495483398
    7. '	if' → logprob: -12.001348495483398
    8. '        ' → logprob: -12.251348495483398
    9. '0' → logprob: -12.751348495483398
    10. '
' → logprob: -12.876348495483398

Token 262: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.549004852771759
    2. 'not' → logprob: -1.1740047931671143
    3. 'u' → logprob: -2.7990047931671143
    4. ' not' → logprob: -4.049005031585693
    5. '(u' → logprob: -4.424005031585693
    6. '(not' → logprob: -4.549005031585693
    7. ' seen' → logprob: -4.674005031585693
    8. '(se' → logprob: -6.674005031585693
    9. ' u' → logprob: -6.799005031585693
    10. ' (' → logprob: -8.549004554748535

Token 263: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -12.75000286102295
    3. 'u' → logprob: -16.250003814697266
    4. '[v' → logprob: -18.000003814697266
    5. '[
' → logprob: -18.000003814697266
    6. ' [' → logprob: -18.125003814697266
    7. '==' → logprob: -18.625003814697266
    8. '```' → logprob: -19.000003814697266
    9. '
' → logprob: -19.250003814697266
    10. '<u' → logprob: -19.375003814697266

Token 264: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09200584143400192
    2. ' ==' → logprob: -2.467005729675293
    3. ']==' → logprob: -6.092005729675293
    4. ']' → logprob: -7.842005729675293
    5. ')' → logprob: -8.217005729675293
    6. ')==' → logprob: -9.217005729675293
    7. '[' → logprob: -10.842005729675293
    8. '=' → logprob: -12.342005729675293
    9. ' ' → logprob: -12.467005729675293
    10. '']==' → logprob: -13.217005729675293

Token 265: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.026314932852983475
    2. ' ==' → logprob: -3.6513149738311768
    3. ']==' → logprob: -12.276314735412598
    4. '=' → logprob: -12.651314735412598
    5. '<' → logprob: -13.526314735412598
    6. ')==' → logprob: -13.901314735412598
    7. '!=' → logprob: -13.901314735412598
    8. ' ' → logprob: -14.151314735412598
    9. ':' → logprob: -14.276314735412598
    10. '==
' → logprob: -14.526314735412598

Token 266: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -9.000140190124512
    3. '1' → logprob: -11.125140190124512
    4. '2' → logprob: -14.500140190124512
    5. '   ' → logprob: -14.687640190124512
    6. 'False' → logprob: -14.750140190124512
    7. '  ' → logprob: -15.812640190124512
    8. '۰' → logprob: -16.937639236450195
    9. '    ' → logprob: -17.125139236450195
    10. '```' → logprob: -17.625139236450195

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.625027656555176
    3. '1' → logprob: -12.875027656555176
    4. '2' → logprob: -15.500027656555176
    5. 'False' → logprob: -15.500027656555176
    6. '   ' → logprob: -15.625027656555176
    7. '  ' → logprob: -16.68752670288086
    8. '۰' → logprob: -17.56252670288086
    9. '    ' → logprob: -17.87502670288086
    10. '```' → logprob: -18.18752670288086

Token 268: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16186580061912537
    2. ':' → logprob: -2.286865711212158
    3. ':
' → logprob: -3.161865711212158
    4. 'and' → logprob: -5.661865711212158
    5. '       ' → logprob: -7.411865711212158
    6. ' or' → logprob: -7.411865711212158
    7. '   ' → logprob: -7.411865711212158
    8. '<|end|>' → logprob: -9.536866188049316
    9. '           ' → logprob: -10.536866188049316
    10. ' ' → logprob: -10.786866188049316

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0313122384250164
    2. '   ' → logprob: -4.781312465667725
    3. ' and' → logprob: -4.781312465667725
    4. ' if' → logprob: -4.906312465667725
    5. '       ' → logprob: -5.781312465667725
    6. ' or' → logprob: -6.906312465667725
    7. 'if' → logprob: -7.031312465667725
    8. '               ' → logprob: -7.531312465667725
    9. ' seen' → logprob: -8.031311988830566
    10. 'and' → logprob: -8.031311988830566

Token 270: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.09205770492553711
    2. 'if' → logprob: -3.467057704925537
    3. '               ' → logprob: -3.467057704925537
    4. '           ' → logprob: -3.967057704925537
    5. ' seen' → logprob: -5.717057704925537
    6. ' if' → logprob: -6.342057704925537
    7. '   ' → logprob: -6.842057704925537
    8. '       ' → logprob: -9.217058181762695
    9. 'stack' → logprob: -9.842058181762695
    10. '                   ' → logprob: -9.842058181762695

Token 271: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.125001907348633
    3. ' [' → logprob: -14.500001907348633
    4. '[user' → logprob: -15.625001907348633
    5. 'u' → logprob: -15.875001907348633
    6. '```' → logprob: -16.000001907348633
    7. '   ' → logprob: -16.625001907348633
    8. '[
' → logprob: -17.250001907348633
    9. '
' → logprob: -17.750001907348633
    10. '           ' → logprob: -18.250001907348633

Token 272: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35333025455474854
    2. ' =' → logprob: -1.6033302545547485
    3. ']' → logprob: -2.353330135345459
    4. ']=' → logprob: -6.603330135345459
    5. ')' → logprob: -11.103330612182617
    6. ' ]' → logprob: -12.603330612182617
    7. '<|end|>' → logprob: -13.978330612182617
    8. ')=' → logprob: -14.353330612182617
    9. '>' → logprob: -14.478330612182617
    10. ' ' → logprob: -14.853330612182617

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. ' ' → logprob: -18.264163970947266
    4. '=True' → logprob: -18.389163970947266
    5. ')' → logprob: -18.514163970947266
    6. '＝' → logprob: -18.889163970947266
    7. '=
' → logprob: -19.264163970947266
    8. '<|end|>' → logprob: -19.389163970947266
    9. '1' → logprob: -19.514163970947266
    10. ')=' → logprob: -19.889163970947266

Token 274: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028879677411168814
    2. ' ' → logprob: -5.877888202667236
    3. 'seen' → logprob: -10.377887725830078
    4. 'v' → logprob: -10.877887725830078
    5. 'stack' → logprob: -11.502887725830078
    6. '2' → logprob: -11.752887725830078
    7. '  ' → logprob: -12.377887725830078
    8. '   ' → logprob: -12.627887725830078
    9. 'True' → logprob: -13.690387725830078
    10. ' stack' → logprob: -13.752887725830078

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003612065047491342
    2. ' ' → logprob: -8.250361442565918
    3. 'seen' → logprob: -9.625361442565918
    4. 'v' → logprob: -10.875361442565918
    5. '2' → logprob: -12.250361442565918
    6. 'stack' → logprob: -12.375361442565918
    7. '   ' → logprob: -12.875361442565918
    8. '  ' → logprob: -14.000361442565918
    9. ' seen' → logprob: -14.125361442565918
    10. 'True' → logprob: -14.750361442565918

Token 276: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008827168494462967
    2. 'stack' → logprob: -4.758827209472656
    3. '	stack' → logprob: -10.008827209472656
    4. ' stack' → logprob: -10.258827209472656
    5. '
' → logprob: -10.258827209472656
    6. '   ' → logprob: -10.383827209472656
    7. '		' → logprob: -10.633827209472656
    8. '       ' → logprob: -11.008827209472656
    9. '(stack' → logprob: -11.383827209472656
    10. '               ' → logprob: -12.508827209472656

Token 277: '           ' (ID: 352)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.5772169828414917
    2. '           ' → logprob: -0.8272169828414917
    3. 'if' → logprob: -7.077217102050781
    4. '   ' → logprob: -8.327217102050781
    5. '       ' → logprob: -9.202217102050781
    6. ' stack' → logprob: -9.702217102050781
    7. '	stack' → logprob: -11.077217102050781
    8. '               ' → logprob: -12.202217102050781
    9. '(stack' → logprob: -13.577217102050781
    10. '_stack' → logprob: -13.702217102050781

Token 278: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -1.676292231422849e-05
    2. 'if' → logprob: -11.125017166137695
    3. '   ' → logprob: -13.750017166137695
    4. ' stack' → logprob: -14.375017166137695
    5. '           ' → logprob: -15.250017166137695
    6. '	stack' → logprob: -16.875017166137695
    7. '
' → logprob: -18.000017166137695
    8. '       ' → logprob: -18.125017166137695
    9. '               ' → logprob: -18.625017166137695
    10. 'u' → logprob: -18.625017166137695

Token 279: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -14.125001907348633
    3. '.extend' → logprob: -14.125001907348633
    4. ' .' → logprob: -16.250001907348633
    5. '.push' → logprob: -16.750001907348633
    6. '.app' → logprob: -17.375001907348633
    7. '   ' → logprob: -19.750001907348633
    8. 'append' → logprob: -20.000001907348633
    9. '.Append' → logprob: -20.375001907348633
    10. '.pop' → logprob: -20.625001907348633

Token 280: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -5.512236498361744e-07
    2. 'u' → logprob: -14.875000953674316
    3. '(' → logprob: -15.875000953674316
    4. '[u' → logprob: -20.375
    5. '(
' → logprob: -20.75
    6. '	u' → logprob: -20.75
    7. '(v' → logprob: -21.875
    8. ' u' → logprob: -22.0
    9. '<u' → logprob: -22.625
    10. '(user' → logprob: -23.0

Token 281: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.125006675720215
    3. ' )' → logprob: -14.250006675720215
    4. '[u' → logprob: -15.125006675720215
    5. '[' → logprob: -16.0000057220459
    6. ')

' → logprob: -17.1250057220459
    7. 'u' → logprob: -17.3750057220459
    8. ']' → logprob: -17.7500057220459
    9. '))' → logprob: -18.0000057220459
    10. '   ' → logprob: -18.1250057220459

Token 282: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002703112317249179
    2. 'print' → logprob: -6.1277031898498535
    3. ' if' → logprob: -7.7527031898498535
    4. 'v' → logprob: -10.252702713012695
    5. 'for' → logprob: -10.252702713012695
    6. '```' → logprob: -12.127702713012695
    7. 'i' → logprob: -13.127702713012695
    8. 'u' → logprob: -13.127702713012695
    9. 'while' → logprob: -13.127702713012695
    10. '0' → logprob: -13.252702713012695

Token 283: ' sum' (ID: 4215)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.061830975115299225
    2. ' seen' → logprob: -3.061830997467041
    3. 'all' → logprob: -4.811830997467041
    4. ' all' → logprob: -6.186830997467041
    5. 'not' → logprob: -6.561830997467041
    6. ' not' → logprob: -7.686830997467041
    7. '0' → logprob: -7.936830997467041
    8. '1' → logprob: -8.686830520629883
    9. ' ' → logprob: -8.936830520629883
    10. '   ' → logprob: -9.061830520629883

Token 284: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.001490696449764073
    2. '(' → logprob: -6.626490592956543
    3. '([' → logprob: -8.751490592956543
    4. ' (' → logprob: -13.001490592956543
    5. '((' → logprob: -13.626490592956543
    6. '(s' → logprob: -13.876490592956543
    7. 'seen' → logprob: -14.626490592956543
    8. '(i' → logprob: -15.501490592956543
    9. '(range' → logprob: -15.626490592956543
    10. '(len' → logprob: -16.00149154663086

Token 285: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.00014036978245712817
    2. '(en' → logprob: -9.500140190124512
    3. 'e' → logprob: -10.625140190124512
    4. '[' → logprob: -11.125140190124512
    5. 'seen' → logprob: -11.750140190124512
    6. 'ened' → logprob: -11.875140190124512
    7. 'end' → logprob: -13.000140190124512
    8. 'ene' → logprob: -13.375140190124512
    9. 'ens' → logprob: -13.500140190124512
    10. '(' → logprob: -13.625140190124512

Token 286: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006474606227129698
    2. ')==' → logprob: -6.131474494934082
    3. ' )' → logprob: -6.381474494934082
    4. '==' → logprob: -6.631474494934082
    5. '[' → logprob: -7.631474494934082
    6. ' ==' → logprob: -8.131474494934082
    7. ')<' → logprob: -8.881474494934082
    8. ' <' → logprob: -9.006474494934082
    9. ')!=' → logprob: -9.506474494934082
    10. '<' → logprob: -9.756474494934082

Token 287: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9335005283355713
    2. ' !=' → logprob: -1.1835005283355713
    3. '==' → logprob: -1.9335005283355713
    4. '!=' → logprob: -2.5585005283355713
    5. ' <' → logprob: -3.1835005283355713
    6. '<' → logprob: -3.3085005283355713
    7. ' ' → logprob: -8.683500289916992
    8. '<N' → logprob: -8.933500289916992
    9. ' >=' → logprob: -9.683500289916992
    10. ')' → logprob: -9.683500289916992

Token 288: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0025698295794427395
    2. ' N' → logprob: -6.127569675445557
    3. 'len' → logprob: -8.752570152282715
    4. '2' → logprob: -9.127570152282715
    5. '   ' → logprob: -9.627570152282715
    6. ' ' → logprob: -10.127570152282715
    7. '    ' → logprob: -12.502570152282715
    8. '(N' → logprob: -13.127570152282715
    9. '(' → logprob: -13.877570152282715
    10. '1' → logprob: -14.002570152282715

Token 289: ':
' (ID: 734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06862737238407135
    2. ':' → logprob: -2.81862735748291
    3. ' +' → logprob: -5.81862735748291
    4. ':
' → logprob: -5.94362735748291
    5. '+:' → logprob: -7.19362735748291
    6. '+
' → logprob: -9.06862735748291
    7. '-' → logprob: -9.94362735748291
    8. '):' → logprob: -10.56862735748291
    9. ' and' → logprob: -10.81862735748291
    10. ' :' → logprob: -10.94362735748291

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08384722471237183
    2. ' print' → logprob: -2.5838472843170166
    3. 'print' → logprob: -5.3338470458984375
    4. '```' → logprob: -9.958847045898438
    5. '    
' → logprob: -10.583847045898438
    6. '	print' → logprob: -11.333847045898438
    7. '
' → logprob: -11.583847045898438
    8. '       ' → logprob: -11.833847045898438
    9. ' ' → logprob: -12.333847045898438
    10. '\n' → logprob: -12.583847045898438

Token 291: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2332666665315628
    2. ' print' → logprob: -1.6082667112350464
    3. '   ' → logprob: -4.858266830444336
    4. '
' → logprob: -10.983266830444336
    5. '```' → logprob: -11.108266830444336
    6. '	print' → logprob: -11.233266830444336
    7. ' ' → logprob: -12.108266830444336
    8. '``' → logprob: -12.733266830444336
    9. '    
' → logprob: -13.608266830444336
    10. '  ' → logprob: -14.108266830444336

Token 292: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.005244668107479811
    2. '(' → logprob: -5.255244731903076
    3. ' ('' → logprob: -11.880244255065918
    4. '("' → logprob: -12.880244255065918
    5. '('(' → logprob: -13.755244255065918
    6. ' (' → logprob: -16.005245208740234
    7. '(
' → logprob: -17.005245208740234
    8. '(('' → logprob: -17.380245208740234
    9. '(`' → logprob: -17.880245208740234
    10. 'f' → logprob: -18.005245208740234

Token 293: 'Yes' (ID: 13022)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0005616117268800735
    2. ''' → logprob: -7.500561714172363
    3. ' No' → logprob: -12.125561714172363
    4. 'Yes' → logprob: -13.000561714172363
    5. '"No' → logprob: -14.875561714172363
    6. '(No' → logprob: -16.125560760498047
    7. 'NO' → logprob: -16.250560760498047
    8. '('' → logprob: -16.250560760498047
    9. '
' → logprob: -16.500560760498047
    10. '```' → logprob: -17.250560760498047

Token 294: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.018466437235474586
    2. ')' → logprob: -4.518466472625732
    3. '')
' → logprob: -5.018466472625732
    4. '")' → logprob: -8.018465995788574
    5. '   ' → logprob: -8.518465995788574
    6. '<|end|>' → logprob: -8.643465995788574
    7. ')
' → logprob: -10.018465995788574
    8. '```' → logprob: -11.268465995788574
    9. '")
' → logprob: -12.643465995788574
    10. '`)' → logprob: -13.143465995788574

Token 295: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04565545916557312
    2. '<|end|>' → logprob: -3.5456554889678955
    3. ')' → logprob: -4.920655250549316
    4. '   ' → logprob: -5.420655250549316
    5. ' else' → logprob: -6.170655250549316
    6. '```' → logprob: -6.795655250549316
    7. '
' → logprob: -8.670655250549316
    8. '    
' → logprob: -8.795655250549316
    9. 'elif' → logprob: -8.920655250549316
    10. ' ' → logprob: -9.295655250549316

Token 296: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014120254665613174
    2. ':' → logprob: -4.389120101928711
    3. ':
' → logprob: -6.514120101928711
    4. '       ' → logprob: -9.514120101928711
    5. '    
' → logprob: -10.264120101928711
    6. '
' → logprob: -11.889120101928711
    7. '    ' → logprob: -13.014120101928711
    8. '  ' → logprob: -13.389120101928711
    9. ' ' → logprob: -13.514120101928711
    10. '```' → logprob: -13.639120101928711

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1610085666179657
    2. 'print' → logprob: -1.911008596420288
    3. ' print' → logprob: -7.161008358001709
    4. '	print' → logprob: -12.661008834838867
    5. '```' → logprob: -13.036008834838867
    6. '       ' → logprob: -14.286008834838867
    7. '    
' → logprob: -14.286008834838867
    8. ' ' → logprob: -14.786008834838867
    9. '   ' → logprob: -15.411008834838867
    10. '
' → logprob: -15.411008834838867

Token 298: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011849920265376568
    2. '   ' → logprob: -7.126184940338135
    3. ' print' → logprob: -7.876184940338135
    4. ' ' → logprob: -15.251185417175293
    5. '	print' → logprob: -15.251185417175293
    6. '  ' → logprob: -16.251184463500977
    7. '```' → logprob: -16.251184463500977
    8. 'Print' → logprob: -16.751184463500977
    9. '.print' → logprob: -17.751184463500977
    10. '    
' → logprob: -17.751184463500977

Token 299: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01816820353269577
    2. '(' → logprob: -4.018167972564697
    3. '()' → logprob: -11.893168449401855
    4. '("' → logprob: -12.143168449401855
    5. '('(' → logprob: -12.518168449401855
    6. ' (' → logprob: -14.018168449401855
    7. '(
' → logprob: -14.393168449401855
    8. ' ('' → logprob: -14.643168449401855
    9. '("("' → logprob: -15.018168449401855
    10. '("""' → logprob: -16.01816749572754

Token 300: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0003460712905507535
    2. ''' → logprob: -8.000346183776855
    3. ' No' → logprob: -11.500346183776855
    4. '   ' → logprob: -15.625346183776855
    5. 'Yes' → logprob: -15.750346183776855
    6. '"No' → logprob: -16.00034523010254
    7. ''N' → logprob: -16.37534523010254
    8. 'N' → logprob: -17.25034523010254
    9. '('' → logprob: -18.00034523010254
    10. '\n' → logprob: -18.25034523010254

Token 301: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001522718113847077
    2. '')' → logprob: -6.501522541046143
    3. ')
' → logprob: -11.5015230178833
    4. '())' → logprob: -12.1265230178833
    5. '()' → logprob: -12.6265230178833
    6. '")' → logprob: -14.0015230178833
    7. ' )' → logprob: -14.8765230178833
    8. '`)' → logprob: -15.3765230178833
    9. '')
' → logprob: -16.626522064208984
    10. '）' → logprob: -16.751522064208984


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 299
Tokens correctement prédits (1ère position, stricte): 131
Tokens correctement prédits (1ère position, avec adaptation): 145
Tokens correctement prédits (top 10): 273
Précision stricte (1ère position): 43.81%
Précision adaptée (1ère position): 48.49%
Précision (top 10): 91.30%
================================================================================
