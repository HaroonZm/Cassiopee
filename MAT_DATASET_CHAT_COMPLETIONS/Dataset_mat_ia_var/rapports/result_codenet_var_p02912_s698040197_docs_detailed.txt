================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import heapq

def main():
    """
    Main function to solve the priority queue problem.

    It reads the number of items (N) and number of operations (M),
    then processes M times to halve the highest value in a list, using a max-heap.
    Finally, prints the sum of the resulting numbers.
    """

    # Read number of elements N and number of operations M from standard input
    N, M = map(int, input().split())
    
    # Read the list of integers from standard input and convert to max-heap by negating values,
    # since heapq in Python implements a min-heap
    A = list(map(lambda x: int(x)*(-1), input().split()))
    
    # Transform the list into a heap in-place
    heapq.heapify(A)

    # Perform M operations; each time, replace the largest element with its half (rounded down)
    for _ in range(M):
        # Remove the largest element (smallest negative number)
        num = heapq.heappop(A)
        # Halve the extracted value and re-negate appropriately to maintain max-heap property.
        # Use (-num)//2*(-1) to get the next value (half, as negative, re-negated).
        new_num = (-num) // 2 * (-1)
        # Insert the new value back into the heap
        heapq.heappush(A, new_num)
    
    # Calculate the sum of the current state of the heap.
    # Negate the sum to revert back to the original sign.
    result = sum(A) * (-1)
    print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -7.278864359250292e-05
    2. '(' → logprob: -10.250072479248047
    3. '.\' → logprob: -11.625072479248047
    4. '."""' → logprob: -11.750072479248047
    5. '```' → logprob: -12.875072479248047
    6. '\' → logprob: -12.875072479248047
    7. '.​' → logprob: -13.000072479248047
    8. ' .' → logprob: -13.250072479248047
    9. '.`' → logprob: -13.625072479248047
    10. '[' → logprob: -14.125072479248047

Token 4: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00012070851516909897
    2. '\' → logprob: -10.625121116638184
    3. '.
' → logprob: -11.250121116638184
    4. '.heap' → logprob: -11.375121116638184
    5. '.\' → logprob: -11.500121116638184
    6. '<|end|>' → logprob: -11.625121116638184
    7. '(' → logprob: -11.875121116638184
    8. '```' → logprob: -11.875121116638184
    9. 'import' → logprob: -12.500121116638184
    10. '[' → logprob: -12.875121116638184

Token 5: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0035622965078800917
    2. ' heap' → logprob: -6.8785624504089355
    3. ' space' → logprob: -7.7535624504089355
    4. ' a' → logprob: -7.7535624504089355
    5. ' ' → logprob: -7.8785624504089355
    6. ' find' → logprob: -8.128561973571777
    7. ' he' → logprob: -9.003561973571777
    8. ' process' → logprob: -9.128561973571777
    9. ' add' → logprob: -9.253561973571777
    10. ' shortest' → logprob: -9.628561973571777

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0026283347979187965
    2. '():' → logprob: -6.877628326416016
    3. '(:' → logprob: -7.252628326416016
    4. ':' → logprob: -8.002628326416016
    5. '```' → logprob: -8.502628326416016
    6. '(
' → logprob: -9.002628326416016
    7. ' (' → logprob: -9.252628326416016
    8. '(`' → logprob: -10.877628326416016
    9. '):' → logprob: -11.502628326416016
    10. '('' → logprob: -11.502628326416016

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8768853545188904
    2. ' ' → logprob: -1.1268854141235352
    3. '(' → logprob: -1.8768854141235352
    4. '    ' → logprob: -3.751885414123535
    5. '(heap' → logprob: -3.751885414123535
    6. 'heap' → logprob: -3.876885414123535
    7. '[' → logprob: -4.501885414123535
    8. ' heap' → logprob: -4.876885414123535
    9. ' (' → logprob: -5.251885414123535
    10. ' 
' → logprob: -5.626885414123535

Token 8: ' """
' (ID: 7037)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7188103795051575
    2. '   ' → logprob: -1.0938103199005127
    3. 'n' → logprob: -3.3438103199005127
    4. '(' → logprob: -3.7188103199005127
    5. 'he' → logprob: -3.8438103199005127
    6. ' ' → logprob: -4.343810558319092
    7. 'priority' → logprob: -4.468810558319092
    8. 'data' → logprob: -4.718810558319092
    9. 'h' → logprob: -4.718810558319092
    10. 'max' → logprob: -4.843810558319092

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.005747675895691
    2. 'Use' → logprob: -2.5057477951049805
    3. 'A' → logprob: -2.7557477951049805
    4. 'Initialize' → logprob: -2.8807477951049805
    5. 'Implement' → logprob: -2.8807477951049805
    6. ' Use' → logprob: -3.1307477951049805
    7. 'Sort' → logprob: -3.6307477951049805
    8. 'Create' → logprob: -3.8807477951049805
    9. ' Sort' → logprob: -3.8807477951049805
    10. ' Priority' → logprob: -3.8807477951049805

Token 10: ' Main' (ID: 7956)
  Prédit: 'Use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Use' → logprob: -1.347880244255066
    2. '   ' → logprob: -1.972880244255066
    3. 'Create' → logprob: -2.0978803634643555
    4. 'Initialize' → logprob: -2.4728803634643555
    5. 'Find' → logprob: -2.8478803634643555
    6. 'Implement' → logprob: -2.9728803634643555
    7. 'Build' → logprob: -2.9728803634643555
    8. 'Priority' → logprob: -3.2228803634643555
    9. 'Calculate' → logprob: -3.4728803634643555
    10. 'Sort' → logprob: -3.4728803634643555

Token 11: ' function' (ID: 1114)
  Prédit: ' function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' function' → logprob: -0.747063159942627
    2. '   ' → logprob: -0.997063159942627
    3. ' code' → logprob: -2.872063159942627
    4. '()' → logprob: -2.997063159942627
    5. ')' → logprob: -4.372063159942627
    6. ' continuation' → logprob: -4.622063159942627
    7. '_' → logprob: -5.122063159942627
    8. '```' → logprob: -5.247063159942627
    9. ' task' → logprob: -5.747063159942627
    10. '    ' → logprob: -6.247063159942627

Token 12: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19523952901363373
    2. ' to' → logprob: -2.320239543914795
    3. 'def' → logprob: -3.570239543914795
    4. '```' → logprob: -3.570239543914795
    5. ' for' → logprob: -5.320239543914795
    6. '.' → logprob: -5.945239543914795
    7. '    ' → logprob: -6.195239543914795
    8. ' code' → logprob: -6.445239543914795
    9. '"""' → logprob: -6.445239543914795
    10. '
' → logprob: -6.695239543914795

Token 13: ' solve' (ID: 17722)
  Prédit: ' create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' create' → logprob: -1.0104461908340454
    2. ' implement' → logprob: -1.0104461908340454
    3. ' find' → logprob: -2.885446071624756
    4. ' process' → logprob: -3.260446071624756
    5. ' manage' → logprob: -3.510446071624756
    6. ' use' → logprob: -3.510446071624756
    7. 'create' → logprob: -4.385446071624756
    8. 'implement' → logprob: -4.385446071624756
    9. ' initialize' → logprob: -4.635446071624756
    10. ' demonstrate' → logprob: -4.760446071624756

Token 14: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.029351545497775078
    2. 'the' → logprob: -3.6543514728546143
    3. ' a' → logprob: -6.154351711273193
    4. '   ' → logprob: -8.654351234436035
    5. ' an' → logprob: -8.904351234436035
    6. 'a' → logprob: -9.404351234436035
    7. ' ' → logprob: -9.529351234436035
    8. ' problem' → logprob: -10.029351234436035
    9. '```' → logprob: -10.154351234436035
    10. ' next' → logprob: -10.279351234436035

Token 15: ' priority' (ID: 17621)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.6837483644485474
    2. ' shortest' → logprob: -2.308748245239258
    3. ' minimum' → logprob: -2.683748245239258
    4. 'problem' → logprob: -2.933748245239258
    5. ' traveling' → logprob: -3.058748245239258
    6. ' Traveling' → logprob: -3.183748245239258
    7. ' ' → logprob: -3.308748245239258
    8. 'minimum' → logprob: -3.933748245239258
    9. ' maximum' → logprob: -4.308748245239258
    10. ' next' → logprob: -4.621248245239258

Token 16: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.011365041136741638
    2. '-' → logprob: -5.636364936828613
    3. '_queue' → logprob: -5.761364936828613
    4. ' ' → logprob: -6.511364936828613
    5. '_' → logprob: -7.011364936828613
    6. 'queue' → logprob: -7.011364936828613
    7. '-based' → logprob: -8.011364936828613
    8. ' task' → logprob: -8.136364936828613
    9. ' based' → logprob: -8.761364936828613
    10. ' que' → logprob: -9.136364936828613

Token 17: ' problem' (ID: 4792)
  Prédit: ' problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.21210679411888123
    2. ' based' → logprob: -3.087106704711914
    3. '-based' → logprob: -3.712106704711914
    4. '   ' → logprob: -3.837106704711914
    5. ' with' → logprob: -4.087106704711914
    6. ' using' → logprob: -4.087106704711914
    7. ' operations' → logprob: -4.212106704711914
    8. ' implementation' → logprob: -4.587106704711914
    9. ' for' → logprob: -4.837106704711914
    10. ' task' → logprob: -4.962106704711914

Token 18: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030224677175283432
    2. '"""' → logprob: -3.655224561691284
    3. '"""
' → logprob: -6.405224800109863
    4. '    ' → logprob: -6.905224800109863
    5. '```' → logprob: -7.280224800109863
    6. '`' → logprob: -8.405224800109863
    7. '\n' → logprob: -9.655224800109863
    8. '""' → logprob: -10.030224800109863
    9. '.' → logprob: -10.030224800109863
    10. ' """' → logprob: -10.530224800109863

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05906166881322861
    2. '"""' → logprob: -3.0590617656707764
    3. ' """' → logprob: -5.184061527252197
    4. '    ' → logprob: -5.809061527252197
    5. '"""
' → logprob: -7.809061527252197
    6. '```' → logprob: -7.809061527252197
    7. ' """
' → logprob: -8.309062004089355
    8. '""' → logprob: -9.184062004089355
    9. ' The' → logprob: -9.309062004089355
    10. 'The' → logprob: -9.559062004089355

Token 20: ' It' (ID: 1225)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11539893597364426
    2. '"""' → logprob: -3.11539888381958
    3. 'p' → logprob: -4.24039888381958
    4. '```' → logprob: -4.24039888381958
    5. 'heap' → logprob: -4.74039888381958
    6. 'priority' → logprob: -5.11539888381958
    7. 'q' → logprob: -5.74039888381958
    8. '    ' → logprob: -5.99039888381958
    9. '"""
' → logprob: -6.11539888381958
    10. 'n' → logprob: -6.49039888381958

Token 21: ' reads' (ID: 31523)
  Prédit: ' uses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' uses' → logprob: -0.09587104618549347
    2. ' manages' → logprob: -3.8458709716796875
    3. ' processes' → logprob: -4.2208709716796875
    4. '   ' → logprob: -4.8458709716796875
    5. ' implements' → logprob: -5.0958709716796875
    6. ' ' → logprob: -5.0958709716796875
    7. ' maintains' → logprob: -5.0958709716796875
    8. ' keeps' → logprob: -5.3458709716796875
    9. ' initializes' → logprob: -5.5958709716796875
    10. ' continues' → logprob: -6.0958709716796875

Token 22: ' the' (ID: 290)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12295586615800858
    2. ' the' → logprob: -2.747955799102783
    3. ' from' → logprob: -3.372955799102783
    4. ' lines' → logprob: -4.872955799102783
    5. 'input' → logprob: -5.372955799102783
    6. ' data' → logprob: -6.622955799102783
    7. ' a' → logprob: -6.997955799102783
    8. 'from' → logprob: -7.122955799102783
    9. ' inputs' → logprob: -7.747955799102783
    10. ' and' → logprob: -7.747955799102783

Token 23: ' number' (ID: 2086)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2778802514076233
    2. ' next' → logprob: -2.2778801918029785
    3. ' number' → logprob: -2.6528801918029785
    4. 'input' → logprob: -4.0278801918029785
    5. ' commands' → logprob: -4.1528801918029785
    6. ' rest' → logprob: -5.5278801918029785
    7. ' queries' → logprob: -5.6528801918029785
    8. ' operations' → logprob: -5.7778801918029785
    9. ' tasks' → logprob: -6.0278801918029785
    10. ' problem' → logprob: -6.1528801918029785

Token 24: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48865562677383423
    2. ' of' → logprob: -1.1136555671691895
    3. '_of' → logprob: -3.6136555671691895
    4. ' ' → logprob: -4.3636555671691895
    5. 'of' → logprob: -4.6136555671691895
    6. '_tokens' → logprob: -5.6136555671691895
    7. '  ' → logprob: -7.3636555671691895
    8. '_s' → logprob: -7.4886555671691895
    9. '	of' → logprob: -7.6136555671691895
    10. '_token' → logprob: -7.7386555671691895

Token 25: ' items' (ID: 4732)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.4709733724594116
    2. ' commands' → logprob: -2.095973491668701
    3. ' operations' → logprob: -2.720973491668701
    4. ' lines' → logprob: -3.095973491668701
    5. ' tasks' → logprob: -3.220973491668701
    6. ' items' → logprob: -3.595973491668701
    7. ' integers' → logprob: -4.720973491668701
    8. ' queries' → logprob: -4.970973491668701
    9. ' students' → logprob: -5.095973491668701
    10. 'elements' → logprob: -5.220973491668701

Token 26: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.488980770111084
    2. ',' → logprob: -1.738980770111084
    3. 'and' → logprob: -1.863980770111084
    4. ' from' → logprob: -3.488980770111084
    5. 'from' → logprob: -4.238980770111084
    6. ' to' → logprob: -5.113980770111084
    7. '   ' → logprob: -6.488980770111084
    8. '```' → logprob: -6.988980770111084
    9. ' ' → logprob: -7.863980770111084
    10. ' (' → logprob: -7.863980770111084

Token 27: 'N' (ID: 45)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16687220335006714
    2. ' and' → logprob: -3.166872262954712
    3. ' n' → logprob: -3.541872262954712
    4. 'n' → logprob: -3.916872262954712
    5. ' )' → logprob: -4.166872024536133
    6. '),' → logprob: -4.291872024536133
    7. 'and' → logprob: -4.541872024536133
    8. ',' → logprob: -4.791872024536133
    9. ' from' → logprob: -5.041872024536133
    10. 'from' → logprob: -6.166872024536133

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05178691819310188
    2. '),' → logprob: -3.0517868995666504
    3. ' and' → logprob: -6.80178689956665
    4. 'and' → logprob: -6.80178689956665
    5. ',' → logprob: -7.80178689956665
    6. ' )' → logprob: -7.92678689956665
    7. '```' → logprob: -9.426787376403809
    8. ' ),' → logprob: -10.676787376403809
    9. 'from' → logprob: -10.801787376403809
    10. ').' → logprob: -10.926787376403809

Token 29: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9336581826210022
    2. ' and' → logprob: -1.1836581230163574
    3. '   ' → logprob: -1.8086581230163574
    4. ' from' → logprob: -3.6836581230163574
    5. '<|end|>' → logprob: -3.6836581230163574
    6. 'and' → logprob: -4.183658123016357
    7. '```' → logprob: -4.308658123016357
    8. ' ,' → logprob: -4.308658123016357
    9. '    ' → logprob: -4.433658123016357
    10. ')' → logprob: -4.558658123016357

Token 30: ' number' (ID: 2086)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2277098000049591
    2. ' processes' → logprob: -2.2277097702026367
    3. 'the' → logprob: -3.1027097702026367
    4. ' then' → logprob: -3.7277097702026367
    5. ' their' → logprob: -4.352709770202637
    6. ' each' → logprob: -5.727709770202637
    7. ' a' → logprob: -5.852709770202637
    8. ' queries' → logprob: -6.727709770202637
    9. ' items' → logprob: -6.852709770202637
    10. 'process' → logprob: -6.977709770202637

Token 31: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.2480742186307907
    2. 'of' → logprob: -1.6230741739273071
    3. '_tokens' → logprob: -4.748074054718018
    4. ' of' → logprob: -4.998074054718018
    5. '=' → logprob: -5.873074054718018
    6. '_items' → logprob: -7.248074054718018
    7. ')' → logprob: -7.748074054718018
    8. 's' → logprob: -7.873074054718018
    9. ' =' → logprob: -7.998074054718018
    10. '_lines' → logprob: -7.998074054718018

Token 32: ' operations' (ID: 12084)
  Prédit: ' operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operations' → logprob: -0.3952908217906952
    2. ' queries' → logprob: -1.6452908515930176
    3. 'queries' → logprob: -3.3952908515930176
    4. 'operations' → logprob: -4.145290851593018
    5. ' lines' → logprob: -4.145290851593018
    6. ' commands' → logprob: -4.270290851593018
    7. ' customers' → logprob: -5.145290851593018
    8. ' items' → logprob: -5.520290851593018
    9. '```' → logprob: -5.645290851593018
    10. ' tasks' → logprob: -5.645290851593018

Token 33: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6272549033164978
    2. ' (' → logprob: -1.7522549629211426
    3. '(' → logprob: -2.2522549629211426
    4. '```' → logprob: -2.2522549629211426
    5. 's' → logprob: -3.6272549629211426
    6. ',' → logprob: -4.127254962921143
    7. ' ' → logprob: -5.127254962921143
    8. ' to' → logprob: -5.252254962921143
    9. '.' → logprob: -5.502254962921143
    10. '`' → logprob: -5.627254962921143

Token 34: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5767936706542969
    2. 'Q' → logprob: -1.8267936706542969
    3. 'K' → logprob: -1.9517936706542969
    4. ' M' → logprob: -2.451793670654297
    5. ')' → logprob: -4.076793670654297
    6. ' Q' → logprob: -4.326793670654297
    7. ' K' → logprob: -4.701793670654297
    8. ' ' → logprob: -5.076793670654297
    9. ' )' → logprob: -5.826793670654297
    10. '   ' → logprob: -8.451793670654297

Token 35: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003276937175542116
    2. '   ' → logprob: -6.128276824951172
    3. '),' → logprob: -7.753276824951172
    4. '```' → logprob: -8.128276824951172
    5. ').' → logprob: -8.378276824951172
    6. '")' → logprob: -10.128276824951172
    7. ' )' → logprob: -10.128276824951172
    8. ')
' → logprob: -11.378276824951172
    9. ' ' → logprob: -11.628276824951172
    10. ' from' → logprob: -11.753276824951172

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26645171642303467
    2. '    ' → logprob: -2.516451835632324
    3. '```' → logprob: -3.016451835632324
    4. ')' → logprob: -3.391451835632324
    5. '\n' → logprob: -4.141451835632324
    6. ' ' → logprob: -4.266451835632324
    7. ',' → logprob: -4.391451835632324
    8. ' \' → logprob: -5.516451835632324
    9. ' )' → logprob: -5.766451835632324
    10. ' and' → logprob: -5.766451835632324

Token 37: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08306366950273514
    2. '    ' → logprob: -2.8330636024475098
    3. ' ' → logprob: -5.08306360244751
    4. ' )' → logprob: -5.58306360244751
    5. ')' → logprob: -5.83306360244751
    6. ' and' → logprob: -6.83306360244751
    7. ' ,' → logprob: -7.08306360244751
    8. '    
' → logprob: -7.45806360244751
    9. '  ' → logprob: -7.58306360244751
    10. '     
' → logprob: -7.58306360244751

Token 38: ' processes' (ID: 14340)
  Prédit: ' processes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' processes' → logprob: -0.07552089542150497
    2. ' performs' → logprob: -2.9505209922790527
    3. ' reads' → logprob: -4.575520992279053
    4. ' executes' → logprob: -5.200520992279053
    5. ' iter' → logprob: -6.575520992279053
    6. '   ' → logprob: -7.200520992279053
    7. 'process' → logprob: -7.575520992279053
    8. ' proceeds' → logprob: -7.575520992279053
    9. ' runs' → logprob: -7.700520992279053
    10. ' continues' → logprob: -8.950520515441895

Token 39: ' M' (ID: 391)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.28616005182266235
    2. ' the' → logprob: -1.5361599922180176
    3. ' ' → logprob: -4.536159992218018
    4. ' operations' → logprob: -4.661159992218018
    5. ' input' → logprob: -5.536159992218018
    6. '<|end|>' → logprob: -5.661159992218018
    7. 'each' → logprob: -6.286159992218018
    8. 'the' → logprob: -6.786159992218018
    9. ' a' → logprob: -7.036159992218018
    10. ' them' → logprob: -8.161160469055176

Token 40: ' times' (ID: 4238)
  Prédit: ' operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operations' → logprob: -0.12902723252773285
    2. ' ' → logprob: -2.1290271282196045
    3. ' lines' → logprob: -6.879027366638184
    4. 'operations' → logprob: -7.254027366638184
    5. ' commands' → logprob: -9.879027366638184
    6. '  ' → logprob: -10.004027366638184
    7. ' space' → logprob: -10.379027366638184
    8. ' queries' → logprob: -10.504027366638184
    9. ' more' → logprob: -10.629027366638184
    10. ' line' → logprob: -10.754027366638184

Token 41: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.131904736161232
    2. ' the' → logprob: -3.1319048404693604
    3. ':' → logprob: -3.2569048404693604
    4. ' :' → logprob: -5.006904602050781
    5. '    ' → logprob: -5.131904602050781
    6. '.' → logprob: -5.131904602050781
    7. ' for' → logprob: -5.756904602050781
    8. ' to' → logprob: -5.756904602050781
    9. ' ' → logprob: -5.881904602050781
    10. '(' → logprob: -6.381904602050781

Token 42: ' halve' (ID: 118360)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.6842114329338074
    2. ' perform' → logprob: -1.5592114925384521
    3. ' process' → logprob: -2.184211492538452
    4. ' insert' → logprob: -3.434211492538452
    5. ' execute' → logprob: -3.559211492538452
    6. ' push' → logprob: -3.809211492538452
    7. ' add' → logprob: -4.184211254119873
    8. ' handle' → logprob: -4.809211254119873
    9. 'perform' → logprob: -4.934211254119873
    10. ' complete' → logprob: -5.309211254119873

Token 43: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.07053861021995544
    2. ' each' → logprob: -3.0705385208129883
    3. 'the' → logprob: -4.320538520812988
    4. '<|end|>' → logprob: -5.195538520812988
    5. 'each' → logprob: -6.445538520812988
    6. ' and' → logprob: -8.195538520812988
    7. ' a' → logprob: -8.195538520812988
    8. ' items' → logprob: -9.070538520812988
    9. '<|end|>' → logprob: -9.445538520812988
    10. 's' → logprob: -9.570538520812988

Token 44: ' highest' (ID: 11639)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' values' → logprob: -1.067820429801941
    2. ' value' → logprob: -1.942820429801941
    3. 'priority' → logprob: -2.0678205490112305
    4. ' priority' → logprob: -2.1928205490112305
    5. 'value' → logprob: -2.4428205490112305
    6. 'values' → logprob: -3.0678205490112305
    7. ' price' → logprob: -3.9428205490112305
    8. ' prices' → logprob: -4.1928205490112305
    9. 'price' → logprob: -4.1928205490112305
    10. ' current' → logprob: -4.4428205490112305

Token 45: ' value' (ID: 1432)
  Prédit: 'priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'priority' → logprob: -0.24264468252658844
    2. ' priority' → logprob: -2.117644786834717
    3. 'value' → logprob: -3.867644786834717
    4. 'price' → logprob: -4.492644786834717
    5. '<|end|>' → logprob: -4.492644786834717
    6. '-valu' → logprob: -4.617644786834717
    7. ' value' → logprob: -4.617644786834717
    8. ' price' → logprob: -4.992644786834717
    9. ' valued' → logprob: -4.992644786834717
    10. '_priority' → logprob: -5.492644786834717

Token 46: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011283244006335735
    2. 's' → logprob: -6.0112833976745605
    3. ' ' → logprob: -6.2612833976745605
    4. ',' → logprob: -6.5112833976745605
    5. '  ' → logprob: -7.3862833976745605
    6. '.' → logprob: -7.3862833976745605
    7. '       ' → logprob: -7.3862833976745605
    8. '    ' → logprob: -7.7612833976745605
    9. '    
' → logprob: -7.8862833976745605
    10. ''s' → logprob: -8.511282920837402

Token 47: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.07158476114273071
    2. 'the' → logprob: -2.696584701538086
    3. ' a' → logprob: -7.071584701538086
    4. ' heap' → logprob: -8.321584701538086
    5. 'heap' → logprob: -8.446584701538086
    6. 'a' → logprob: -8.571584701538086
    7. 'he' → logprob: -9.446584701538086
    8. '   ' → logprob: -11.071584701538086
    9. '```' → logprob: -11.446584701538086
    10. ' each' → logprob: -11.821584701538086

Token 48: ' list' (ID: 1562)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.9342898726463318
    2. 'heap' → logprob: -1.1842899322509766
    3. ' priority' → logprob: -2.0592899322509766
    4. 'priority' → logprob: -2.0592899322509766
    5. ' list' → logprob: -4.684289932250977
    6. ' collection' → logprob: -5.309289932250977
    7. 'queue' → logprob: -5.684289932250977
    8. 'list' → logprob: -5.684289932250977
    9. ' queue' → logprob: -5.684289932250977
    10. 'collection' → logprob: -5.809289932250977

Token 49: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00924360379576683
    2. '.' → logprob: -4.884243488311768
    3. ',' → logprob: -7.259243488311768
    4. '    
' → logprob: -8.509243965148926
    5. '```' → logprob: -9.009243965148926
    6. '    ' → logprob: -9.259243965148926
    7. ' ' → logprob: -9.509243965148926
    8. '       ' → logprob: -9.509243965148926
    9. '(' → logprob: -9.759243965148926
    10. ')' → logprob: -10.009243965148926

Token 50: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.591654360294342
    2. ' and' → logprob: -1.0916543006896973
    3. ' then' → logprob: -3.0916543006896973
    4. '    ' → logprob: -3.5916543006896973
    5. 'and' → logprob: -4.716654300689697
    6. ' remove' → logprob: -4.841654300689697
    7. ' removes' → logprob: -5.466654300689697
    8. ' continuing' → logprob: -6.466654300689697
    9. ',' → logprob: -6.591654300689697
    10. ' until' → logprob: -6.841654300689697

Token 51: ' a' (ID: 261)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.6735425591468811
    2. ' a' → logprob: -0.7985425591468811
    3. ' the' → logprob: -3.7985424995422363
    4. 'heap' → logprob: -4.298542499542236
    5. ' priority' → logprob: -6.548542499542236
    6. ' heaps' → logprob: -7.798542499542236
    7. 'he' → logprob: -7.798542499542236
    8. 'the' → logprob: -8.173542976379395
    9. 'a' → logprob: -8.298542976379395
    10. '(heap' → logprob: -8.298542976379395

Token 52: ' max' (ID: 2999)
  Prédit: ' priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' priority' → logprob: -0.6434659957885742
    2. ' heap' → logprob: -1.3934659957885742
    3. ' max' → logprob: -2.143465995788574
    4. 'priority' → logprob: -2.768465995788574
    5. 'heap' → logprob: -3.643465995788574
    6. 'max' → logprob: -4.393465995788574
    7. ' min' → logprob: -5.393465995788574
    8. ' space' → logprob: -7.268465995788574
    9. 'min' → logprob: -7.893465995788574
    10. 'space' → logprob: -8.018465995788574

Token 53: '-' (ID: 12)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.4839114248752594
    2. '-' → logprob: -1.233911395072937
    3. 'heap' → logprob: -3.6089115142822266
    4. '_heap' → logprob: -3.8589115142822266
    5. '```' → logprob: -3.9839115142822266
    6. '   ' → logprob: -4.483911514282227
    7. ')' → logprob: -5.608911514282227
    8. '_' → logprob: -5.608911514282227
    9. '(heap' → logprob: -5.858911514282227
    10. 'q' → logprob: -6.733911514282227

Token 54: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5232235193252563
    2. ' heap' → logprob: -0.8982235193252563
    3. '```' → logprob: -10.148223876953125
    4. '_heap' → logprob: -11.398223876953125
    5. ' ' → logprob: -11.898223876953125
    6. 'pq' → logprob: -12.023223876953125
    7. 'queue' → logprob: -12.398223876953125
    8. ')' → logprob: -12.398223876953125
    9. 'priority' → logprob: -12.398223876953125
    10. 'q' → logprob: -12.523223876953125

Token 55: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23379313945770264
    2. '.' → logprob: -1.8587931394577026
    3. ')' → logprob: -3.983793258666992
    4. ',' → logprob: -5.233793258666992
    5. '```' → logprob: -5.233793258666992
    6. '
' → logprob: -5.358793258666992
    7. ').' → logprob: -5.483793258666992
    8. '):' → logprob: -5.733793258666992
    9. ')
' → logprob: -6.108793258666992
    10. ':' → logprob: -6.233793258666992

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0722002312541008
    2. '"""' → logprob: -2.697200298309326
    3. '```' → logprob: -6.697200298309326
    4. '"""
' → logprob: -7.447200298309326
    5. '""' → logprob: -8.447199821472168
    6. '"' → logprob: -9.572199821472168
    7. ' """' → logprob: -9.822199821472168
    8. '`' → logprob: -10.197199821472168
    9. '    ' → logprob: -11.197199821472168
    10. ')' → logprob: -11.197199821472168

Token 57: ' Finally' (ID: 23568)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12125317752361298
    2. '"""' → logprob: -2.496253252029419
    3. '"""
' → logprob: -3.996253252029419
    4. '```' → logprob: -4.49625301361084
    5. ')' → logprob: -7.74625301361084
    6. '""' → logprob: -7.74625301361084
    7. '"' → logprob: -7.87125301361084
    8. '
' → logprob: -8.37125301361084
    9. '`' → logprob: -8.74625301361084
    10. '\n' → logprob: -9.12125301361084

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06909427791833878
    2. '   ' → logprob: -3.194094181060791
    3. ' it' → logprob: -4.194094181060791
    4. ' writes' → logprob: -5.694094181060791
    5. ' returns' → logprob: -5.694094181060791
    6. ' the' → logprob: -7.444094181060791
    7. ' outputs' → logprob: -7.694094181060791
    8. ' prints' → logprob: -7.694094181060791
    9. ' ,' → logprob: -7.944094181060791
    10. ':' → logprob: -8.06909465789795

Token 59: ' prints' (ID: 33767)
  Prédit: ' it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.08371183276176453
    2. '   ' → logprob: -3.458711862564087
    3. 'it' → logprob: -3.958711862564087
    4. ' the' → logprob: -4.208711624145508
    5. ' outputs' → logprob: -5.333711624145508
    6. ' prints' → logprob: -5.333711624145508
    7. ' calculates' → logprob: -6.583711624145508
    8. 'outputs' → logprob: -7.083711624145508
    9. 'the' → logprob: -7.583711624145508
    10. ' writes' → logprob: -7.833711624145508

Token 60: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.01736987754702568
    2. 'the' → logprob: -4.142369747161865
    3. '(len' → logprob: -7.767369747161865
    4. '(' → logprob: -7.767369747161865
    5. '(sum' → logprob: -8.517370223999023
    6. '(max' → logprob: -8.892370223999023
    7. 'sum' → logprob: -11.017370223999023
    8. ' their' → logprob: -11.142370223999023
    9. ' all' → logprob: -11.142370223999023
    10. '(the' → logprob: -11.517370223999023

Token 61: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.09192070364952087
    2. 'sum' → logprob: -3.0919206142425537
    3. ' total' → logprob: -3.4669206142425537
    4. ' maximum' → logprob: -5.341920852661133
    5. ' final' → logprob: -6.091920852661133
    6. 'total' → logprob: -6.591920852661133
    7. ' result' → logprob: -7.341920852661133
    8. ' remaining' → logprob: -7.341920852661133
    9. 'final' → logprob: -8.091920852661133
    10. 'max' → logprob: -8.341920852661133

Token 62: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1833438277244568
    2. '(' → logprob: -2.0583438873291016
    3. '()' → logprob: -3.9333438873291016
    4. ' of' → logprob: -4.808343887329102
    5. ')' → logprob: -5.183343887329102
    6. ' ' → logprob: -6.433343887329102
    7. '    ' → logprob: -6.808343887329102
    8. '  ' → logprob: -6.933343887329102
    9. '.' → logprob: -7.183343887329102
    10. '```' → logprob: -8.058343887329102

Token 63: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.18166938424110413
    2. ' all' → logprob: -1.8066693544387817
    3. 'the' → logprob: -6.556669235229492
    4. 'all' → logprob: -8.806669235229492
    5. ' remaining' → logprob: -8.806669235229492
    6. ' heap' → logprob: -9.806669235229492
    7. ' items' → logprob: -10.181669235229492
    8. ' values' → logprob: -10.431669235229492
    9. ' final' → logprob: -10.931669235229492
    10. ' ' → logprob: -11.431669235229492

Token 64: ' resulting' (ID: 20547)
  Prédit: ' remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -1.3841770887374878
    2. ' heap' → logprob: -1.5091770887374878
    3. ' elements' → logprob: -2.0091772079467773
    4. 'remaining' → logprob: -2.5091772079467773
    5. ' values' → logprob: -2.6341772079467773
    6. ' list' → logprob: -2.6341772079467773
    7. 'heap' → logprob: -2.6341772079467773
    8. 'values' → logprob: -3.7591772079467773
    9. ' final' → logprob: -3.8841772079467773
    10. 'list' → logprob: -4.009177207946777

Token 65: ' numbers' (ID: 8663)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.24901054799556732
    2. ' list' → logprob: -1.7490105628967285
    3. ' elements' → logprob: -3.7490105628967285
    4. ' heap' → logprob: -4.8740105628967285
    5. ' items' → logprob: -5.2490105628967285
    6. 'values' → logprob: -5.4990105628967285
    7. ' array' → logprob: -5.9990105628967285
    8. ' numbers' → logprob: -6.1240105628967285
    9. 'list' → logprob: -7.8740105628967285
    10. 'heap' → logprob: -8.37401008605957

Token 66: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03911026194691658
    2. '```' → logprob: -3.7891101837158203
    3. '\n' → logprob: -5.16411018371582
    4. ')' → logprob: -5.53911018371582
    5. '
' → logprob: -6.41411018371582
    6. '\' → logprob: -6.78911018371582
    7. '.' → logprob: -7.16411018371582
    8. '"""' → logprob: -7.28911018371582
    9. ':' → logprob: -7.91411018371582
    10. '    
' → logprob: -7.91411018371582

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04911491647362709
    2. '"""' → logprob: -3.174114942550659
    3. '```' → logprob: -5.42411470413208
    4. '"""
' → logprob: -7.17411470413208
    5. '"' → logprob: -8.174115180969238
    6. '""' → logprob: -8.424115180969238
    7. ' """' → logprob: -8.674115180969238
    8. ')' → logprob: -9.174115180969238
    9. '`' → logprob: -9.799115180969238
    10. '    ' → logprob: -10.924115180969238

Token 68: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28110644221305847
    2. '```' → logprob: -1.7811064720153809
    3. '"""' → logprob: -2.656106472015381
    4. '"""
' → logprob: -6.031106472015381
    5. '
' → logprob: -6.156106472015381
    6. '`' → logprob: -7.906106472015381
    7. '""' → logprob: -7.906106472015381
    8. '``' → logprob: -8.031105995178223
    9. '"' → logprob: -8.156105995178223
    10. ')' → logprob: -8.781105995178223

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012264199322089553
    2. 'N' → logprob: -7.626226425170898
    3. 'n' → logprob: -7.751226425170898
    4. 'import' → logprob: -8.876226425170898
    5. '    
' → logprob: -10.001226425170898
    6. '```' → logprob: -10.001226425170898
    7. ' N' → logprob: -10.251226425170898
    8. 'input' → logprob: -11.501226425170898
    9. '
' → logprob: -11.501226425170898
    10. ' n' → logprob: -12.376226425170898

Token 70: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04449006915092468
    2. 'n' → logprob: -3.294490098953247
    3. '   ' → logprob: -5.294489860534668
    4. '#' (adapté à ' #') → logprob: -7.169489860534668
    5. ' N' → logprob: -7.544489860534668
    6. ' n' → logprob: -10.294489860534668
    7. 'import' → logprob: -10.419489860534668
    8. 'input' → logprob: -11.169489860534668
    9. 'num' → logprob: -11.919489860534668
    10. '```' → logprob: -12.044489860534668

Token 71: ' Read' (ID: 5405)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6896297931671143
    2. ' N' → logprob: -1.1896297931671143
    3. '   ' → logprob: -2.3146297931671143
    4. 'n' → logprob: -3.1896297931671143
    5. ' n' → logprob: -4.689629554748535
    6. '#' → logprob: -4.814629554748535
    7. 'input' → logprob: -4.814629554748535
    8. 'data' → logprob: -5.189629554748535
    9. 'heap' → logprob: -5.564629554748535
    10. ' input' → logprob: -5.689629554748535

Token 72: ' number' (ID: 2086)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7686249017715454
    2. ' N' → logprob: -0.7686249017715454
    3. 'n' → logprob: -3.143624782562256
    4. '   ' → logprob: -4.143624782562256
    5. 'N' → logprob: -4.518624782562256
    6. '```' → logprob: -7.268624782562256
    7. ' ' → logprob: -7.393624782562256
    8. ' the' → logprob: -7.643624782562256
    9. 'int' → logprob: -8.893625259399414
    10. ' input' → logprob: -8.893625259399414

Token 73: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7732510566711426
    2. 's' → logprob: -1.0232510566711426
    3. ' =' → logprob: -2.7732510566711426
    4. '_line' → logprob: -2.7732510566711426
    5. ' of' → logprob: -5.148251056671143
    6. ' ' → logprob: -5.273251056671143
    7. '(' → logprob: -5.273251056671143
    8. '=' → logprob: -5.273251056671143
    9. '```' → logprob: -5.273251056671143
    10. '(N' → logprob: -5.398251056671143

Token 74: ' elements' (ID: 8632)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.013509475626051426
    2. 'items' → logprob: -4.763509273529053
    3. ' elements' → logprob: -5.763509273529053
    4. ' ' → logprob: -6.638509273529053
    5. ' N' → logprob: -8.888509750366211
    6. '_items' → logprob: -9.513509750366211
    7. ' integers' → logprob: -9.763509750366211
    8. ' objects' → logprob: -10.263509750366211
    9. ' lines' → logprob: -10.513509750366211
    10. ' values' → logprob: -10.638509750366211

Token 75: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7998579144477844
    2. 'N' → logprob: -1.2998578548431396
    3. 'n' → logprob: -1.4248578548431396
    4. ' N' → logprob: -4.549858093261719
    5. '(N' → logprob: -4.549858093261719
    6. ' and' → logprob: -4.799858093261719
    7. ' (' → logprob: -5.924858093261719
    8. ' =' → logprob: -6.549858093261719
    9. '(' → logprob: -7.049858093261719
    10. ',' → logprob: -7.174858093261719

Token 76: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4777910113334656
    2. '   ' → logprob: -1.3527910709381104
    3. ',' → logprob: -2.7277910709381104
    4. ' and' → logprob: -3.2277910709381104
    5. 'n' → logprob: -4.727790832519531
    6. 'N' → logprob: -5.852790832519531
    7. '=' → logprob: -6.477790832519531
    8. ' N' → logprob: -7.102790832519531
    9. 'and' → logprob: -7.477790832519531
    10. '<|end|>' → logprob: -7.602790832519531

Token 77: ' number' (ID: 2086)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.39317017793655396
    2. 'M' → logprob: -1.1431701183319092
    3. ' number' → logprob: -5.143170356750488
    4. ' the' → logprob: -8.893170356750488
    5. 'number' → logprob: -9.143170356750488
    6. ' operations' → logprob: -9.268170356750488
    7. ' ' → logprob: -10.143170356750488
    8. 'the' → logprob: -11.393170356750488
    9. 'operations' → logprob: -11.643170356750488
    10. '  ' → logprob: -12.018170356750488

Token 78: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.5780753493309021
    2. '=' → logprob: -1.3280754089355469
    3. ' =' → logprob: -2.328075408935547
    4. '_items' → logprob: -3.703075408935547
    5. '_' → logprob: -3.953075408935547
    6. '   ' → logprob: -5.328075408935547
    7. '_tokens' → logprob: -5.453075408935547
    8. ' of' → logprob: -5.703075408935547
    9. ',' → logprob: -5.828075408935547
    10. '_elements' → logprob: -6.203075408935547

Token 79: ' operations' (ID: 12084)
  Prédit: ' operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operations' → logprob: -0.03340684249997139
    2. 'operations' → logprob: -4.033406734466553
    3. ' elements' → logprob: -4.908406734466553
    4. ' items' → logprob: -4.908406734466553
    5. 'items' → logprob: -9.283407211303711
    6. ' spaces' → logprob: -9.533407211303711
    7. ' ' → logprob: -9.908407211303711
    8. 'elements' → logprob: -10.033407211303711
    9. ' values' → logprob: -11.033407211303711
    10. '```' → logprob: -11.033407211303711

Token 80: ' M' (ID: 391)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5112138390541077
    2. ' =' → logprob: -1.886213779449463
    3. 'N' → logprob: -2.011213779449463
    4. 'n' → logprob: -2.636213779449463
    5. ' N' → logprob: -3.761213779449463
    6. ',' → logprob: -4.761213779449463
    7. '```' → logprob: -6.136213779449463
    8. '`' → logprob: -6.511213779449463
    9. '=' → logprob: -6.761213779449463
    10. ' (' → logprob: -6.886213779449463

Token 81: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015401026234030724
    2. '\n' → logprob: -4.7654008865356445
    3. '   ' → logprob: -5.7654008865356445
    4. 'n' → logprob: -6.0154008865356445
    5. '    
' → logprob: -7.0154008865356445
    6. '  
' → logprob: -9.140400886535645
    7. 'newline' → logprob: -9.890400886535645
    8. 'N' → logprob: -10.140400886535645
    9. '
' → logprob: -10.640400886535645
    10. '```' → logprob: -10.890400886535645

Token 82: ' standard' (ID: 7024)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.010703491978347301
    2. ' the' → logprob: -5.2607035636901855
    3. 'input' → logprob: -5.2607035636901855
    4. 'the' → logprob: -9.635703086853027
    5. ' stdin' → logprob: -9.885703086853027
    6. ' a' → logprob: -9.885703086853027
    7. ' user' → logprob: -10.385703086853027
    8. ' ' → logprob: -11.010703086853027
    9. 'stdin' → logprob: -11.760703086853027
    10. '=input' → logprob: -12.010703086853027

Token 83: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.01569376327097416
    2. 'input' → logprob: -4.890693664550781
    3. ' ' → logprob: -5.265693664550781
    4. '(' → logprob: -6.515693664550781
    5. '()' → logprob: -8.140693664550781
    6. '_input' → logprob: -8.265693664550781
    7. '(input' → logprob: -8.765693664550781
    8. ' =' → logprob: -9.015693664550781
    9. ' (' → logprob: -9.140693664550781
    10. '_' → logprob: -9.390693664550781

Token 84: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04666873440146446
    2. '\n' → logprob: -3.421668767929077
    3. '   ' → logprob: -5.171668529510498
    4. '    
' → logprob: -5.546668529510498
    5. 'n' → logprob: -5.921668529510498
    6. '  
' → logprob: -8.421669006347656
    7. 'newline' → logprob: -9.171669006347656
    8. '```' → logprob: -9.421669006347656
    9. ' 
' → logprob: -9.671669006347656
    10. '\' → logprob: -9.921669006347656

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5043339133262634
    2. '    
' → logprob: -1.8793339729309082
    3. 'n' → logprob: -2.004333972930908
    4. '
' → logprob: -3.004333972930908
    5. '\n' → logprob: -3.254333972930908
    6. '  
' → logprob: -4.879333972930908
    7. ' 
' → logprob: -5.754333972930908
    8. '   
' → logprob: -6.254333972930908
    9. ',' → logprob: -6.629333972930908
    10. 'newline' → logprob: -6.879333972930908

Token 86: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7398188710212708
    2. 'n' → logprob: -1.239818811416626
    3. 'N' (adapté à ' N') → logprob: -2.239818811416626
    4. ' N' → logprob: -2.489818811416626
    5. ' n' → logprob: -4.114819049835205
    6. '    
' → logprob: -4.114819049835205
    7. '
' → logprob: -5.489819049835205
    8. ' 
' → logprob: -5.614819049835205
    9. '\n' → logprob: -6.114819049835205
    10. ' line' → logprob: -8.864818572998047

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.584861744660884e-05
    2. ' ,' → logprob: -10.375045776367188
    3. ',N' → logprob: -12.000045776367188
    4. '=' → logprob: -12.875045776367188
    5. ',M' → logprob: -13.250045776367188
    6. ',
' → logprob: -13.500045776367188
    7. ',input' → logprob: -14.750045776367188
    8. ',n' → logprob: -15.125045776367188
    9. ',int' → logprob: -15.625045776367188
    10. ')' → logprob: -15.625045776367188

Token 88: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.031158221885561943
    2. ' ' → logprob: -3.781158208847046
    3. 'M' → logprob: -5.156158447265625
    4. '<|end|>' → logprob: -6.281158447265625
    5. ' ' → logprob: -9.531158447265625
    6. '  ' → logprob: -9.531158447265625
    7. 'space' → logprob: -11.156158447265625
    8. ' =' → logprob: -11.406158447265625
    9. '<|end|>' → logprob: -11.531158447265625
    10. '```' → logprob: -11.781158447265625

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489221587777138
    2. '=' → logprob: -2.9298923015594482
    3. '=input' → logprob: -11.929892539978027
    4. ',' → logprob: -13.429892539978027
    5. '=int' → logprob: -13.929892539978027
    6. ')' → logprob: -15.179892539978027
    7. ' =
' → logprob: -15.429892539978027
    8. '<|end|>' → logprob: -15.679892539978027
    9. ' ' → logprob: -16.67989158630371
    10. '=

' → logprob: -17.30489158630371

Token 90: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0004936986370012164
    2. 'map' → logprob: -7.62549352645874
    3. ' list' → logprob: -12.625494003295898
    4. ' ' → logprob: -13.250494003295898
    5. '	map' → logprob: -15.000494003295898
    6. ' input' → logprob: -16.6254940032959
    7. ' tuple' → logprob: -16.6254940032959
    8. ' [' → logprob: -16.7504940032959
    9. ' mapa' → logprob: -17.3754940032959
    10. '(map' → logprob: -18.0004940032959

Token 91: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3184041380882263
    2. '(' → logprob: -1.318404197692871
    3. '(input' → logprob: -5.318404197692871
    4. '(list' → logprob: -9.193404197692871
    5. '(str' → logprob: -9.193404197692871
    6. '(
' → logprob: -12.193404197692871
    7. '(map' → logprob: -12.443404197692871
    8. '(eval' → logprob: -12.443404197692871
    9. '(lambda' → logprob: -12.568404197692871
    10. ' (' → logprob: -13.068404197692871

Token 92: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.011787837371230125
    2. '(' → logprob: -4.6367878913879395
    3. 'input' → logprob: -7.0117878913879395
    4. ',input' → logprob: -7.5117878913879395
    5. ')' → logprob: -7.6367878913879395
    6. ' input' → logprob: -10.011787414550781
    7. ')(' → logprob: -10.636787414550781
    8. ',' → logprob: -11.136787414550781
    9. '=input' → logprob: -12.261787414550781
    10. ' (' → logprob: -12.761787414550781

Token 93: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.005234594456851482
    2. 'input' → logprob: -5.255234718322754
    3. ')' → logprob: -14.630234718322754
    4. '(input' → logprob: -15.755234718322754
    5. ' )' → logprob: -15.880234718322754
    6. ' ' → logprob: -17.005233764648438
    7. ',input' → logprob: -17.630233764648438
    8. '	input' → logprob: -17.755233764648438
    9. '=input' → logprob: -18.505233764648438
    10. '_input' → logprob: -19.880233764648438

Token 94: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4628400206565857
    2. '()' → logprob: -1.0878400802612305
    3. '())' → logprob: -3.4628400802612305
    4. '('' → logprob: -7.0878400802612305
    5. '(' → logprob: -7.3378400802612305
    6. ')' → logprob: -8.46284008026123
    7. '()`' → logprob: -9.71284008026123
    8. ' ()' → logprob: -9.96284008026123
    9. '());' → logprob: -10.08784008026123
    10. '(),' → logprob: -10.08784008026123

Token 95: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026205103495158255
    2. 'strip' → logprob: -8.250262260437012
    3. 'rstrip' → logprob: -14.500262260437012
    4. ' split' → logprob: -16.375261306762695
    5. 'read' → logprob: -17.375261306762695
    6. '(split' → logprob: -17.500261306762695
    7. 'spl' → logprob: -18.625261306762695
    8. ')' → logprob: -19.875261306762695
    9. '.split' → logprob: -21.500261306762695
    10. '_split' → logprob: -21.625261306762695

Token 96: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008915786631405354
    2. '())' → logprob: -5.258915901184082
    3. '))' → logprob: -5.758915901184082
    4. '()' → logprob: -7.633915901184082
    5. '(' → logprob: -11.008915901184082
    6. '()))' → logprob: -12.133915901184082
    7. ')))' → logprob: -12.883915901184082
    8. ' )' → logprob: -12.883915901184082
    9. ')
' → logprob: -13.133915901184082
    10. '),' → logprob: -13.508915901184082

Token 97: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40538468956947327
    2. '
' → logprob: -1.4053846597671509
    3. '    
' → logprob: -3.1553847789764404
    4. '```' → logprob: -4.030384540557861
    5. 'n' → logprob: -5.530384540557861
    6. 'numbers' → logprob: -5.780384540557861
    7. '<|end|>' → logprob: -5.780384540557861
    8. '  
' → logprob: -6.030384540557861
    9. 'items' → logprob: -6.155384540557861
    10. 'data' → logprob: -6.280384540557861

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7062371373176575
    2. 'A' → logprob: -1.9562370777130127
    3. 'arr' → logprob: -2.2062370777130127
    4. 'numbers' → logprob: -2.9562370777130127
    5. ' A' → logprob: -3.2062370777130127
    6. 'a' → logprob: -3.4562370777130127
    7. 'data' → logprob: -3.5812370777130127
    8. 'values' → logprob: -3.7062370777130127
    9. 'nums' → logprob: -3.8312370777130127
    10. 'items' → logprob: -4.331237316131592

Token 99: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.5383907556533813
    2. 'numbers' → logprob: -1.5383907556533813
    3. 'A' → logprob: -1.6633907556533813
    4. 'values' → logprob: -2.038390636444092
    5. 'nums' → logprob: -2.788390636444092
    6. 'a' → logprob: -2.913390636444092
    7. 'items' → logprob: -3.038390636444092
    8. 'lst' → logprob: -3.413390636444092
    9. 'data' → logprob: -3.913390636444092
    10. '#' (adapté à ' #') → logprob: -4.288390636444092

Token 100: ' Read' (ID: 5405)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.6508249044418335
    2. 'nums' → logprob: -1.6508249044418335
    3. ' numbers' → logprob: -2.150825023651123
    4. 'A' → logprob: -2.275825023651123
    5. 'numbers' → logprob: -2.400825023651123
    6. ' arr' → logprob: -3.275825023651123
    7. ' A' → logprob: -3.275825023651123
    8. 'values' → logprob: -3.275825023651123
    9. 'a' → logprob: -3.275825023651123
    10. 'lst' → logprob: -3.400825023651123

Token 101: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1131855249404907
    2. ' numbers' → logprob: -1.4881855249404907
    3. ' values' → logprob: -1.7381855249404907
    4. ' a' → logprob: -2.363185405731201
    5. 'numbers' → logprob: -2.738185405731201
    6. 'values' → logprob: -3.113185405731201
    7. '()' → logprob: -3.738185405731201
    8. 'the' → logprob: -4.113185405731201
    9. 'arr' → logprob: -5.113185405731201
    10. 'a' → logprob: -5.238185405731201

Token 102: ' list' (ID: 1562)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.174444556236267
    2. 'numbers' → logprob: -1.174444556236267
    3. ' values' → logprob: -2.2994446754455566
    4. ' list' → logprob: -2.5494446754455566
    5. 'values' → logprob: -2.6744446754455566
    6. ' elements' → logprob: -2.9244446754455566
    7. 'list' → logprob: -3.1744446754455566
    8. ' array' → logprob: -4.299444675445557
    9. 'elements' → logprob: -5.049444675445557
    10. 'lst' → logprob: -5.424444675445557

Token 103: ' of' (ID: 328)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.721525251865387
    2. ' of' → logprob: -1.8465251922607422
    3. '_numbers' → logprob: -2.221525192260742
    4. 's' → logprob: -3.221525192260742
    5. 'numbers' → logprob: -3.221525192260742
    6. 'a' → logprob: -3.346525192260742
    7. ' numbers' → logprob: -3.971525192260742
    8. 'arr' → logprob: -3.971525192260742
    9. 'values' → logprob: -4.221525192260742
    10. '(' → logprob: -4.596525192260742

Token 104: ' integers' (ID: 54912)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.30843350291252136
    2. 'values' → logprob: -1.8084335327148438
    3. ' numbers' → logprob: -2.8084335327148438
    4. ' values' → logprob: -4.183433532714844
    5. ' integers' → logprob: -4.808433532714844
    6. 'inte' → logprob: -5.058433532714844
    7. 'a' → logprob: -5.433433532714844
    8. 'A' → logprob: -5.683433532714844
    9. 'items' → logprob: -6.183433532714844
    10. 'nums' → logprob: -7.808433532714844

Token 105: ' from' (ID: 591)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.204336404800415
    2. 'A' → logprob: -2.079336404800415
    3. 'numbers' → logprob: -2.204336404800415
    4. '   ' → logprob: -2.329336404800415
    5. 'arr' → logprob: -2.329336404800415
    6. 'values' → logprob: -2.579336404800415
    7. 'data' → logprob: -3.079336404800415
    8. ' values' → logprob: -3.579336404800415
    9. 'lst' → logprob: -3.579336404800415
    10. ' a' → logprob: -4.079336166381836

Token 106: ' standard' (ID: 7024)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.011573401279747486
    2. 'input' → logprob: -4.511573314666748
    3. ' list' → logprob: -7.761573314666748
    4. ' the' → logprob: -9.761573791503906
    5. 'list' → logprob: -10.386573791503906
    6. 'the' → logprob: -12.386573791503906
    7. '=input' → logprob: -13.386573791503906
    8. ' a' → logprob: -13.511573791503906
    9. '(input' → logprob: -14.011573791503906
    10. '_input' → logprob: -14.886573791503906

Token 107: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01822146773338318
    2. ' input' → logprob: -4.018221378326416
    3. '_input' → logprob: -10.143221855163574
    4. '=input' → logprob: -11.518221855163574
    5. '(input' → logprob: -11.643221855163574
    6. '	input' → logprob: -12.018221855163574
    7. '()' → logprob: -13.518221855163574
    8. '```' → logprob: -13.643221855163574
    9. '<|end|>' → logprob: -13.768221855163574
    10. 'import' → logprob: -13.768221855163574

Token 108: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8018465638160706
    2. 'a' → logprob: -1.8018465042114258
    3. 'arr' → logprob: -2.801846504211426
    4. 'A' → logprob: -2.801846504211426
    5. ' a' → logprob: -2.926846504211426
    6. ' A' → logprob: -2.926846504211426
    7. 'numbers' → logprob: -3.051846504211426
    8. ' numbers' → logprob: -3.676846504211426
    9. '    
' → logprob: -3.801846504211426
    10. 'lst' → logprob: -4.301846504211426

Token 109: ' convert' (ID: 8452)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.19921189546585083
    2. ' lst' → logprob: -2.699211835861206
    3. ' list' → logprob: -3.699211835861206
    4. ' data' → logprob: -4.074212074279785
    5. ' l' → logprob: -4.699212074279785
    6. 'heap' → logprob: -4.949212074279785
    7. ' A' → logprob: -4.949212074279785
    8. ' nums' → logprob: -5.199212074279785
    9. ' a' → logprob: -5.324212074279785
    10. ' arr' → logprob: -5.449212074279785

Token 110: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07638368755578995
    2. '(int' → logprob: -2.701383590698242
    3. '(list' → logprob: -5.826383590698242
    4. ' to' → logprob: -7.201383590698242
    5. 'int' → logprob: -7.701383590698242
    6. '   ' → logprob: -8.076383590698242
    7. ' (' → logprob: -8.451383590698242
    8. '(lambda' → logprob: -8.451383590698242
    9. '(
' → logprob: -8.826383590698242
    10. ' into' → logprob: -8.951383590698242

Token 111: ' max' (ID: 2999)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4704104959964752
    2. ' list' → logprob: -1.2204104661941528
    3. 'a' → logprob: -3.7204105854034424
    4. 'list' → logprob: -3.8454105854034424
    5. '[-' → logprob: -4.220410346984863
    6. ' [-' → logprob: -4.220410346984863
    7. ' negatives' → logprob: -6.095410346984863
    8. ' negative' → logprob: -7.345410346984863
    9. ' integers' → logprob: -7.845410346984863
    10. '[' → logprob: -7.970410346984863

Token 112: '-' (ID: 12)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7428357601165771
    2. 'q' → logprob: -1.2428357601165771
    3. '_heap' → logprob: -2.367835760116577
    4. ' heap' → logprob: -2.867835760116577
    5. '(heap' → logprob: -3.242835760116577
    6. '-' → logprob: -4.117835998535156
    7. ')' → logprob: -4.992835998535156
    8. 'hq' → logprob: -5.867835998535156
    9. 'h' → logprob: -6.117835998535156
    10. '_' → logprob: -6.117835998535156

Token 113: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0006473870598711073
    2. ' heap' → logprob: -7.37564754486084
    3. '_heap' → logprob: -11.25064754486084
    4. 'he' → logprob: -12.00064754486084
    5. 'queue' → logprob: -14.37564754486084
    6. 'h' → logprob: -15.25064754486084
    7. '-' → logprob: -15.50064754486084
    8. 'q' → logprob: -15.87564754486084
    9. 'priority' → logprob: -15.87564754486084
    10. 'array' → logprob: -16.375646591186523

Token 114: ' by' (ID: 656)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.7761178612709045
    2. 'a' → logprob: -1.6511178016662598
    3. 'A' → logprob: -2.0261178016662598
    4. 'data' → logprob: -2.9011178016662598
    5. 'numbers' → logprob: -3.2761178016662598
    6. ' A' → logprob: -3.7761178016662598
    7. 'values' → logprob: -3.9011178016662598
    8. '   ' → logprob: -3.9011178016662598
    9. 'lst' → logprob: -3.9011178016662598
    10. 'items' → logprob: -4.52611780166626

Token 115: ' neg' (ID: 4528)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.8233919739723206
    2. 'using' → logprob: -2.073391914367676
    3. 'lambda' → logprob: -2.323391914367676
    4. ' [-' → logprob: -2.448391914367676
    5. ' using' → logprob: -2.823391914367676
    6. '[-' → logprob: -2.948391914367676
    7. ' lambda' → logprob: -3.823391914367676
    8. ' neg' → logprob: -4.073391914367676
    9. 'in' → logprob: -4.448391914367676
    10. '   ' → logprob: -4.573391914367676

Token 116: 'ating' (ID: 1365)
  Prédit: 'ating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.003543643979355693
    2. '   ' → logprob: -6.753543853759766
    3. '-' → logprob: -7.503543853759766
    4. 'at' → logprob: -7.753543853759766
    5. 'import' → logprob: -8.253543853759766
    6. 'ifying' → logprob: -8.503543853759766
    7. 'heap' → logprob: -8.753543853759766
    8. '[' → logprob: -9.003543853759766
    9. 'verting' → logprob: -9.253543853759766
    10. 't' → logprob: -9.503543853759766

Token 117: ' values' (ID: 4824)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5712316632270813
    2. 'arr' → logprob: -1.6962316036224365
    3. 'A' → logprob: -2.6962316036224365
    4. ' a' → logprob: -3.1962316036224365
    5. 'numbers' → logprob: -3.4462316036224365
    6. 'data' → logprob: -3.6962316036224365
    7. 'values' → logprob: -3.9462316036224365
    8. ' A' → logprob: -4.571231842041016
    9. 'lst' → logprob: -4.571231842041016
    10. ' numbers' → logprob: -4.821231842041016

Token 118: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.235826015472412
    2. 'arr' → logprob: -1.360826015472412
    3. 'A' → logprob: -1.985826015472412
    4. 'a' → logprob: -2.235826015472412
    5. 'nums' → logprob: -2.985826015472412
    6. 'numbers' → logprob: -3.235826015472412
    7. 'values' → logprob: -3.485826015472412
    8. 'items' → logprob: -3.610826015472412
    9. ' A' → logprob: -4.110826015472412
    10. 'data' → logprob: -4.360826015472412

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0233287513256073
    2. ' values' → logprob: -5.27332878112793
    3. ' heap' → logprob: -5.64832878112793
    4. 'arr' → logprob: -6.14832878112793
    5. 'values' → logprob: -6.27332878112793
    6. '    ' → logprob: -6.39832878112793
    7. ' lst' → logprob: -6.52332878112793
    8. ' items' → logprob: -6.64832878112793
    9. ' arr' → logprob: -7.02332878112793
    10. 'heap' → logprob: -7.39832878112793

Token 120: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.3223358392715454
    2. ' heap' → logprob: -1.8223358392715454
    3. '   ' → logprob: -1.9473358392715454
    4. 'heap' → logprob: -2.447335720062256
    5. ' lst' → logprob: -2.697335720062256
    6. ' arr' → logprob: -2.697335720062256
    7. 'lst' → logprob: -3.072335720062256
    8. 'nums' → logprob: -3.572335720062256
    9. ' data' → logprob: -3.697335720062256
    10. 'data' → logprob: -3.947335720062256

Token 121: ' since' (ID: 3630)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.9511911273002625
    2. ' data' → logprob: -2.3261911869049072
    3. ' arr' → logprob: -2.4511911869049072
    4. 'nums' → logprob: -2.7011911869049072
    5. ' heap' → logprob: -2.8261911869049072
    6. 'data' → logprob: -2.9511911869049072
    7. ' values' → logprob: -3.4511911869049072
    8. 'values' → logprob: -3.4511911869049072
    9. 'numbers' → logprob: -3.4511911869049072
    10. ' numbers' → logprob: -3.5761911869049072

Token 122: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.04321122542023659
    2. ' heap' → logprob: -3.5432112216949463
    3. 'Python' → logprob: -5.043211460113525
    4. ' Python' → logprob: -5.168211460113525
    5. 'python' → logprob: -6.793211460113525
    6. ' python' → logprob: -10.168210983276367
    7. 'import' → logprob: -11.043210983276367
    8. ' the' → logprob: -11.418210983276367
    9. '```' → logprob: -11.418210983276367
    10. '(heap' → logprob: -11.793210983276367

Token 123: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.7848862373502925e-05
    2. 'queue' → logprob: -11.500027656555176
    3. ' elements' → logprob: -12.875027656555176
    4. 'ify' → logprob: -13.125027656555176
    5. ' is' → logprob: -13.375027656555176
    6. 'heap' → logprob: -13.625027656555176
    7. 'data' → logprob: -13.750027656555176
    8. 'elements' → logprob: -13.750027656555176
    9. 's' → logprob: -14.250027656555176
    10. '#' → logprob: -14.500027656555176

Token 124: ' in' (ID: 306)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -1.0136533975601196
    2. 'only' → logprob: -1.5136533975601196
    3. ' is' → logprob: -2.13865327835083
    4. ' in' → logprob: -2.63865327835083
    5. ' implements' → logprob: -3.26365327835083
    6. ' uses' → logprob: -3.26365327835083
    7. ' works' → logprob: -3.38865327835083
    8. 'in' → logprob: -3.88865327835083
    9. ' operates' → logprob: -3.88865327835083
    10. 'is' → logprob: -4.26365327835083

Token 125: ' Python' (ID: 26534)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.20598141849040985
    2. 'Python' → logprob: -1.7059813737869263
    3. ' Python' → logprob: -5.455981254577637
    4. ' python' → logprob: -8.330981254577637
    5. 'py' → logprob: -10.205981254577637
    6. '-python' → logprob: -12.080981254577637
    7. 'import' → logprob: -13.205981254577637
    8. '_python' → logprob: -13.830981254577637
    9. 'ython' → logprob: -15.830981254577637
    10. '.python' → logprob: -16.330982208251953

Token 126: ' implements' (ID: 8227)
  Prédit: ' implements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' implements' → logprob: -1.1811472177505493
    2. 'only' → logprob: -1.6811472177505493
    3. 'implements' → logprob: -1.8061472177505493
    4. 'is' → logprob: -1.8061472177505493
    5. ' only' → logprob: -2.3061470985412598
    6. ' is' → logprob: -3.1811470985412598
    7. ' uses' → logprob: -4.05614709854126
    8. 'uses' → logprob: -4.30614709854126
    9. 'works' → logprob: -6.18114709854126
    10. 'provid' → logprob: -7.05614709854126

Token 127: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5249906778335571
    2. ' a' → logprob: -0.8999906778335571
    3. ' min' → logprob: -6.649990558624268
    4. 'min' → logprob: -7.524990558624268
    5. ' ' → logprob: -10.774991035461426
    6. ' as' → logprob: -12.649991035461426
    7. '	a' → logprob: -13.399991035461426
    8. '_min' → logprob: -13.649991035461426
    9. '  ' → logprob: -14.274991035461426
    10. ' ' → logprob: -14.587491035461426

Token 128: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03804194927215576
    2. ' min' → logprob: -3.2880420684814453
    3. 'minimum' → logprob: -15.413042068481445
    4. '[min' → logprob: -15.913042068481445
    5. '(min' → logprob: -16.538042068481445
    6. '_min' → logprob: -17.038042068481445
    7. '	min' → logprob: -17.288042068481445
    8. '-min' → logprob: -18.788042068481445
    9. 'max' → logprob: -18.913042068481445
    10. '.min' → logprob: -19.038042068481445

Token 129: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.017221080139279366
    2. 'heap' → logprob: -4.267220973968506
    3. ' heap' → logprob: -5.892220973968506
    4. ' -' → logprob: -9.642221450805664
    5. '   ' → logprob: -9.767221450805664
    6. 'q' → logprob: -9.892221450805664
    7. ')' → logprob: -10.517221450805664
    8. ',' → logprob: -10.517221450805664
    9. '```' → logprob: -10.517221450805664
    10. '_heap' → logprob: -11.767221450805664

Token 130: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -4.127333340875339e-06
    2. ' heap' → logprob: -12.625003814697266
    3. 'queue' → logprob: -14.250003814697266
    4. '_heap' → logprob: -17.500003814697266
    5. 'priority' → logprob: -17.875003814697266
    6. '```' → logprob: -18.250003814697266
    7. '-' → logprob: -18.500003814697266
    8. 'he' → logprob: -19.375003814697266
    9. 'stack' → logprob: -19.875003814697266
    10. '.heap' → logprob: -20.250003814697266

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15013450384140015
    2. 'values' → logprob: -3.400134563446045
    3. ')' → logprob: -3.650134563446045
    4. 'data' → logprob: -4.400134563446045
    5. 'arr' → logprob: -4.650134563446045
    6. 'numbers' → logprob: -4.650134563446045
    7. 'a' → logprob: -5.025134563446045
    8. 'nums' → logprob: -5.025134563446045
    9. ',' → logprob: -5.025134563446045
    10. 'heap' → logprob: -5.150134563446045

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6421976685523987
    2. 'arr' → logprob: -1.642197608947754
    3. 'numbers' → logprob: -2.642197608947754
    4. 'A' → logprob: -2.767197608947754
    5. ' A' → logprob: -3.517197608947754
    6. 'a' → logprob: -3.517197608947754
    7. 'values' → logprob: -3.767197608947754
    8. ' numbers' → logprob: -4.642197608947754
    9. 'data' → logprob: -4.642197608947754
    10. ' values' → logprob: -4.767197608947754

Token 133: ' A' (ID: 355)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.9010434746742249
    2. 'A' (adapté à ' A') → logprob: -2.15104341506958
    3. 'values' → logprob: -2.40104341506958
    4. 'numbers' → logprob: -2.40104341506958
    5. 'items' → logprob: -3.27604341506958
    6. '   ' → logprob: -3.27604341506958
    7. ' numbers' → logprob: -3.52604341506958
    8. 'data' → logprob: -3.65104341506958
    9. ' arr' → logprob: -3.65104341506958
    10. ' A' → logprob: -3.65104341506958

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759431719779968
    2. ' =' → logprob: -0.8259431719779968
    3. '   ' → logprob: -13.575942993164062
    4. '＝' → logprob: -14.950942993164062
    5. ' ' → logprob: -15.075942993164062
    6. '_values' → logprob: -15.075942993164062
    7. 's' → logprob: -15.325942993164062
    8. '_' → logprob: -15.825942993164062
    9. '=[]' → logprob: -15.950942993164062
    10. '	' → logprob: -16.075942993164062

Token 135: ' list' (ID: 1562)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.20456072688102722
    2. ' [-' → logprob: -1.7045607566833496
    3. 'list' → logprob: -6.20456075668335
    4. ' list' → logprob: -6.82956075668335
    5. ' [' → logprob: -10.954560279846191
    6. '[' → logprob: -11.204560279846191
    7. '[list' → logprob: -12.079560279846191
    8. ' ' → logprob: -13.079560279846191
    9. '   ' → logprob: -13.454560279846191
    10. '[]' → logprob: -15.454560279846191

Token 136: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0009168167016468942
    2. '(' → logprob: -7.000916957855225
    3. '(-' → logprob: -12.625916481018066
    4. 'map' → logprob: -13.500916481018066
    5. '(int' → logprob: -15.000916481018066
    6. '()' → logprob: -16.125917434692383
    7. '(
' → logprob: -16.375917434692383
    8. '.map' → logprob: -18.125917434692383
    9. ' (' → logprob: -18.250917434692383
    10. '	map' → logprob: -18.375917434692383

Token 137: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002865854650735855
    2. '(' → logprob: -5.877865791320801
    3. 'int' → logprob: -10.8778657913208
    4. '[int' → logprob: -10.8778657913208
    5. '<int' → logprob: -12.0028657913208
    6. '(lambda' → logprob: -12.2528657913208
    7. ',int' → logprob: -12.3778657913208
    8. '(
' → logprob: -12.8778657913208
    9. ']int' → logprob: -13.0028657913208
    10. '=int' → logprob: -13.2528657913208

Token 138: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00765501894056797
    2. ' x' → logprob: -4.882655143737793
    3. 'lambda' → logprob: -10.507655143737793
    4. 'int' → logprob: -11.257655143737793
    5. 'a' → logprob: -12.132655143737793
    6. ':' → logprob: -14.757655143737793
    7. '   ' → logprob: -14.757655143737793
    8. ' lambda' → logprob: -15.007655143737793
    9. 'y' → logprob: -15.132655143737793
    10. ' ' → logprob: -15.382655143737793

Token 139: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017538920044898987
    2. ':int' → logprob: -4.392539024353027
    3. ' :' → logprob: -5.392539024353027
    4. 'int' → logprob: -7.892539024353027
    5. ':-' → logprob: -10.642539024353027
    6. ':
' → logprob: -11.517539024353027
    7. 'x' → logprob: -11.517539024353027
    8. '(int' → logprob: -11.767539024353027
    9. ':x' → logprob: -11.767539024353027
    10. '=int' → logprob: -11.892539024353027

Token 140: ' int' (ID: 677)
  Prédit: '-int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-int' → logprob: -0.1123589500784874
    2. '-' → logprob: -2.487359046936035
    3. ' -' → logprob: -3.987359046936035
    4. '-x' → logprob: -5.737359046936035
    5. '-neg' → logprob: -8.112359046936035
    6. '-l' → logprob: -8.362359046936035
    7. 'int' → logprob: -8.362359046936035
    8. '-n' → logprob: -8.987359046936035
    9. '-in' → logprob: -9.737359046936035
    10. '-num' → logprob: -9.987359046936035

Token 141: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008619893342256546
    2. 'x' → logprob: -5.508619785308838
    3. '(-' → logprob: -6.008619785308838
    4. '(' → logprob: -6.258619785308838
    5. ')' → logprob: -10.258620262145996
    6. '(
' → logprob: -10.508620262145996
    7. ' (' → logprob: -10.508620262145996
    8. ',' → logprob: -11.633620262145996
    9. '-' → logprob: -11.633620262145996
    10. ')x' → logprob: -11.633620262145996

Token 142: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.7621931433677673
    2. ')' → logprob: -0.8871931433677673
    3. '),' → logprob: -2.137193202972412
    4. 'input' → logprob: -7.637193202972412
    5. ')x' → logprob: -7.637193202972412
    6. ' )' → logprob: -7.762193202972412
    7. '())' → logprob: -7.887193202972412
    8. ')-' → logprob: -8.012192726135254
    9. '()),' → logprob: -8.262192726135254
    10. ')+' → logprob: -8.762192726135254

Token 143: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016058066859841347
    2. ' -' → logprob: -4.141057968139648
    3. '(-' → logprob: -10.766057968139648
    4. ' (-' → logprob: -13.891057968139648
    5. '   ' → logprob: -14.516057968139648
    6. ' ' → logprob: -14.641057968139648
    7. '  ' → logprob: -14.766057968139648
    8. ',-' → logprob: -16.01605796813965
    9. ')' → logprob: -17.07855796813965
    10. '-
' → logprob: -17.14105796813965

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.25001335144043
    4. ')' → logprob: -16.37501335144043
    5. '-' → logprob: -16.50001335144043
    6. '  ' → logprob: -18.43751335144043
    7. '１' → logprob: -18.56251335144043
    8. ' -' → logprob: -19.12501335144043
    9. '```' → logprob: -19.25001335144043
    10. '
' → logprob: -19.37501335144043

Token 145: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0015806859591975808
    2. ')' → logprob: -6.501580715179443
    3. ',' → logprob: -9.626580238342285
    4. ' ),' → logprob: -12.376580238342285
    5. '   ' → logprob: -12.751580238342285
    6. 'A' → logprob: -14.251580238342285
    7. ')),' → logprob: -14.376580238342285
    8. '),
' → logprob: -14.501580238342285
    9. '),(' → logprob: -14.626580238342285
    10. ',A' → logprob: -15.126580238342285

Token 146: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015023599844425917
    2. ' input' → logprob: -6.501502513885498
    3. '(input' → logprob: -18.001502990722656
    4. 'range' → logprob: -18.126502990722656
    5. '   ' → logprob: -18.376502990722656
    6. ' ' → logprob: -18.501502990722656
    7. '<input' → logprob: -19.001502990722656
    8. 'list' → logprob: -19.126502990722656
    9. '	input' → logprob: -19.876502990722656
    10. '[input' → logprob: -20.126502990722656

Token 147: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.975612187583465e-05
    2. '()' → logprob: -10.500029563903809
    3. ' ().' → logprob: -13.125029563903809
    4. '()
' → logprob: -16.500030517578125
    5. '(' → logprob: -17.375030517578125
    6. '.split' → logprob: -18.500030517578125
    7. '.' → logprob: -19.125030517578125
    8. '()[' → logprob: -19.375030517578125
    9. '()))' → logprob: -19.375030517578125
    10. '())' → logprob: -19.375030517578125

Token 148: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000340945553034544
    2. 'strip' → logprob: -8.000341415405273
    3. ' split' → logprob: -12.625341415405273
    4. 'rstrip' → logprob: -13.125341415405273
    5. '(split' → logprob: -16.125341415405273
    6. 'spl' → logprob: -16.625341415405273
    7. 'read' → logprob: -17.250341415405273
    8. '().' → logprob: -17.625341415405273
    9. ')' → logprob: -17.625341415405273
    10. '.split' → logprob: -18.625341415405273

Token 149: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.11477801948785782
    2. '()))' → logprob: -2.2397780418395996
    3. '()' → logprob: -6.4897780418396
    4. ')' → logprob: -8.239777565002441
    5. '())' → logprob: -9.739777565002441
    6. '(' → logprob: -10.114777565002441
    7. ' ))' → logprob: -10.739777565002441
    8. ')))' → logprob: -11.239777565002441
    9. '()))
' → logprob: -11.489777565002441
    10. '))
' → logprob: -11.739777565002441

Token 150: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06838759034872055
    2. 'heap' → logprob: -2.943387508392334
    3. '
' → logprob: -4.818387508392334
    4. '    
' → logprob: -5.943387508392334
    5. ')' → logprob: -6.443387508392334
    6. ' heap' → logprob: -7.693387508392334
    7. '<|end|>' → logprob: -9.193387985229492
    8. '.heap' → logprob: -9.443387985229492
    9. '```' → logprob: -9.568387985229492
    10. '(heap' → logprob: -9.693387985229492

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29076436161994934
    2. 'heap' → logprob: -1.415764331817627
    3. ' heap' → logprob: -4.665764331817627
    4. 'import' → logprob: -10.040764808654785
    5. 'for' → logprob: -10.665764808654785
    6. '#' → logprob: -10.665764808654785
    7. '    
' → logprob: -10.915764808654785
    8. ' for' → logprob: -11.665764808654785
    9. '(heap' → logprob: -12.040764808654785
    10. '   ' → logprob: -12.165764808654785

Token 152: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0022014055866748095
    2. 'for' → logprob: -6.752201557159424
    3. '   ' → logprob: -7.002201557159424
    4. '#' (adapté à ' #') → logprob: -9.752201080322266
    5. ' heap' → logprob: -10.002201080322266
    6. 'import' → logprob: -11.377201080322266
    7. '
' → logprob: -13.502201080322266
    8. ' for' → logprob: -13.752201080322266
    9. '```' → logprob: -14.002201080322266
    10. 'while' → logprob: -14.377201080322266

Token 153: ' Transform' (ID: 27287)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.08930660039186478
    2. ' heap' → logprob: -2.464306592941284
    3. 'for' → logprob: -9.089306831359863
    4. 'import' → logprob: -9.464306831359863
    5. '#' → logprob: -9.839306831359863
    6. ' for' → logprob: -9.964306831359863
    7. '   ' → logprob: -10.589306831359863
    8. 'h' → logprob: -11.339306831359863
    9. '
' → logprob: -11.714306831359863
    10. '.heap' → logprob: -11.964306831359863

Token 154: ' the' (ID: 290)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.3637513220310211
    2. 'heap' → logprob: -1.3637512922286987
    3. 'A' → logprob: -3.3637514114379883
    4. 'the' → logprob: -5.113751411437988
    5. ' heap' → logprob: -6.113751411437988
    6. '(heap' → logprob: -6.113751411437988
    7. ' A' → logprob: -6.363751411437988
    8. ' the' → logprob: -6.613751411437988
    9. '(' → logprob: -7.863751411437988
    10. 'he' → logprob: -8.488751411437988

Token 155: ' list' (ID: 1562)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0576496422290802
    2. ' A' → logprob: -3.682649612426758
    3. 'heap' → logprob: -4.057649612426758
    4. 'list' → logprob: -4.432649612426758
    5. ' list' → logprob: -6.682649612426758
    6. ' heap' → logprob: -7.807649612426758
    7. 'array' → logprob: -11.182649612426758
    8. 'import' → logprob: -11.807649612426758
    9. ' array' → logprob: -13.182649612426758
    10. '(A' → logprob: -13.307649612426758

Token 156: ' into' (ID: 1511)
  Prédit: 'into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'into' → logprob: -0.6724428534507751
    2. ' into' → logprob: -1.29744291305542
    3. 'heap' → logprob: -1.67244291305542
    4. '(heap' → logprob: -3.79744291305542
    5. ' heap' → logprob: -6.29744291305542
    6. 'to' → logprob: -6.54744291305542
    7. '.heap' → logprob: -7.29744291305542
    8. '   ' → logprob: -7.54744291305542
    9. 'import' → logprob: -7.54744291305542
    10. ' to' → logprob: -7.92244291305542

Token 157: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.24127088487148285
    2. 'a' → logprob: -1.616270899772644
    3. 'heap' → logprob: -4.241271018981934
    4. ' heap' → logprob: -6.616271018981934
    5. ' ' → logprob: -13.241271018981934
    6. '_heap' → logprob: -13.866271018981934
    7. 'A' → logprob: -14.491271018981934
    8. '.heap' → logprob: -14.616271018981934
    9. '(heap' → logprob: -15.116271018981934
    10. 'an' → logprob: -15.366271018981934

Token 158: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0019294669618830085
    2. ' heap' → logprob: -6.25192928314209
    3. '.heap' → logprob: -14.25192928314209
    4. '_heap' → logprob: -15.87692928314209
    5. 'min' → logprob: -17.501930236816406
    6. 'max' → logprob: -18.126930236816406
    7. 'Heap' → logprob: -18.126930236816406
    8. 'h' → logprob: -18.251930236816406
    9. '(heap' → logprob: -18.251930236816406
    10. 'import' → logprob: -20.376930236816406

Token 159: ' in' (ID: 306)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.08023138344287872
    2. '   ' → logprob: -2.5802314281463623
    3. ' heap' → logprob: -6.705231189727783
    4. '(heap' → logprob: -9.580231666564941
    5. '.heap' → logprob: -10.580231666564941
    6. '
' → logprob: -12.080231666564941
    7. 'he' → logprob: -12.080231666564941
    8. '    
' → logprob: -12.830231666564941
    9. '_heap' → logprob: -12.955231666564941
    10. '```' → logprob: -13.955231666564941

Token 160: '-place' (ID: 81838)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.5389997363090515
    2. '-place' → logprob: -0.9139997363090515
    3. ' place' → logprob: -4.288999557495117
    4. 'heap' → logprob: -6.288999557495117
    5. 'O' → logprob: -9.788999557495117
    6. 'Place' → logprob: -10.913999557495117
    7. '-' → logprob: -10.913999557495117
    8. '
' → logprob: -11.038999557495117
    9. '_place' → logprob: -11.163999557495117
    10. ' heap' → logprob: -11.288999557495117

Token 161: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.14552347362041473
    2. '   ' → logprob: -2.0205235481262207
    3. ' heap' → logprob: -6.770523548126221
    4. '
' → logprob: -7.270523548126221
    5. '(heap' → logprob: -7.270523548126221
    6. '.heap' → logprob: -8.520523071289062
    7. '    
' → logprob: -10.145523071289062
    8. '_heap' → logprob: -10.520523071289062
    9. 'he' → logprob: -11.520523071289062
    10. '```' → logprob: -12.145523071289062

Token 162: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.4819514751434326
    2. '   ' → logprob: -0.9819514751434326
    3. ' heap' → logprob: -4.856951713562012
    4. '(heap' → logprob: -10.356951713562012
    5. '.heap' → logprob: -11.356951713562012
    6. 'he' → logprob: -12.231951713562012
    7. '    
' → logprob: -12.356951713562012
    8. '_heap' → logprob: -12.731951713562012
    9. '```' → logprob: -12.731951713562012
    10. '
' → logprob: -13.106951713562012

Token 163: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.011534038931131363
    2. ' heap' → logprob: -4.511534214019775
    3. '   ' → logprob: -7.636534214019775
    4. '.heap' → logprob: -13.636533737182617
    5. '(heap' → logprob: -14.511533737182617
    6. 'he' → logprob: -14.761533737182617
    7. ' ' → logprob: -14.886533737182617
    8. 'import' → logprob: -15.386533737182617
    9. '```' → logprob: -15.511533737182617
    10. '_heap' → logprob: -15.636533737182617

Token 164: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.676292231422849e-05
    2. 'ify' → logprob: -11.000017166137695
    3. '.heap' → logprob: -17.250017166137695
    4. '.q' → logprob: -18.250017166137695
    5. 'p' → logprob: -19.375017166137695
    6. '.' → logprob: -19.875017166137695
    7. 'h' → logprob: -20.000017166137695
    8. 'heap' → logprob: -20.250017166137695
    9. '```' → logprob: -20.375017166137695
    10. 'k' → logprob: -20.500017166137695

Token 165: '.heap' (ID: 177287)
  Prédit: '.heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.heap' → logprob: -0.0027733708266168833
    2. '.he' → logprob: -6.002773284912109
    3. '.' → logprob: -8.12777328491211
    4. 'heap' → logprob: -14.87777328491211
    5. '(heap' → logprob: -15.12777328491211
    6. '.h' → logprob: -15.37777328491211
    7. '.f' → logprob: -15.87777328491211
    8. '.nl' → logprob: -16.00277328491211
    9. ' heap' → logprob: -16.12777328491211
    10. '.build' → logprob: -16.37777328491211

Token 166: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -5.512236498361744e-07
    2. 'lify' → logprob: -15.375000953674316
    3. 'fy' → logprob: -15.750000953674316
    4. 'replace' → logprob: -17.0
    5. '```' → logprob: -17.375
    6. 'q' → logprob: -17.5
    7. 'if' → logprob: -17.875
    8. 'IFY' → logprob: -18.125
    9. 'heap' → logprob: -18.5
    10. 'push' → logprob: -18.75

Token 167: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.2524021157296374e-05
    2. '(' → logprob: -9.875052452087402
    3. 'A' → logprob: -14.500052452087402
    4. '(
' → logprob: -15.125052452087402
    5. ' (' → logprob: -15.875052452087402
    6. '((' → logprob: -16.62505340576172
    7. ')' → logprob: -17.12505340576172
    8. '```' → logprob: -18.00005340576172
    9. ')(' → logprob: -18.25005340576172
    10. '(`' → logprob: -18.37505340576172

Token 168: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -16.375
    4. '))' → logprob: -16.75
    5. ')#' → logprob: -18.5
    6. '   ' → logprob: -18.625
    7. ')`' → logprob: -18.625
    8. ')

' → logprob: -19.5
    9. '),' → logprob: -19.625
    10. ')}' → logprob: -19.875

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4205080270767212
    2. 'for' → logprob: -1.1705080270767212
    3. '    
' → logprob: -4.045507907867432
    4. ' for' → logprob: -4.295507907867432
    5. '
' → logprob: -6.295507907867432
    6. '```' → logprob: -10.17050838470459
    7. '  
' → logprob: -11.04550838470459
    8. ' 
' → logprob: -11.17050838470459
    9. '	for' → logprob: -11.29550838470459
    10. '   
' → logprob: -11.92050838470459

Token 170: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013517005369067192
    2. ' for' → logprob: -4.513516902923584
    3. '   ' → logprob: -6.013516902923584
    4. '    
' → logprob: -11.013517379760742
    5. '
' → logprob: -13.138517379760742
    6. '	for' → logprob: -13.513517379760742
    7. ' 
' → logprob: -14.763517379760742
    8. 'while' → logprob: -15.013517379760742
    9. ' ' → logprob: -16.638517379760742
    10. '    ' → logprob: -16.888517379760742

Token 171: ' Perform' (ID: 36780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006739762146025896
    2. ' for' → logprob: -5.006739616394043
    3. '   ' → logprob: -10.631739616394043
    4. 'while' → logprob: -15.256739616394043
    5. ' ' → logprob: -17.13174057006836
    6. '	for' → logprob: -17.25674057006836
    7. 'For' → logprob: -18.50674057006836
    8. '  ' → logprob: -19.00674057006836
    9. '    
' → logprob: -19.38174057006836
    10. '
' → logprob: -19.50674057006836

Token 172: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.16104884445667267
    2. ' for' → logprob: -2.6610488891601562
    3. 'for' → logprob: -3.5360488891601562
    4. 'M' → logprob: -3.5360488891601562
    5. ' range' → logprob: -4.036048889160156
    6. 'range' → logprob: -6.536048889160156
    7. '_' → logprob: -6.911048889160156
    8. ' ' → logprob: -7.911048889160156
    9. '   ' → logprob: -9.661048889160156
    10. ' _' → logprob: -9.911048889160156

Token 173: ' operations' (ID: 12084)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.004059521481394768
    2. 'times' → logprob: -5.879059314727783
    3. '_times' → logprob: -7.754059314727783
    4. ' for' → logprob: -8.379059791564941
    5. '   ' → logprob: -8.754059791564941
    6. ' ' → logprob: -9.004059791564941
    7. 'for' → logprob: -9.254059791564941
    8. '    ' → logprob: -9.379059791564941
    9. ' _' → logprob: -10.379059791564941
    10. ' iterations' → logprob: -10.504059791564941

Token 174: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06541097164154053
    2. ' for' → logprob: -2.94041109085083
    3. 'for' → logprob: -4.69041109085083
    4. '
' → logprob: -6.94041109085083
    5. '    
' → logprob: -8.815410614013672
    6. '<|end|>' → logprob: -9.940410614013672
    7. ':' → logprob: -10.190410614013672
    8. '	for' → logprob: -10.190410614013672
    9. '<|end|>' → logprob: -10.940410614013672
    10. '  
' → logprob: -11.940410614013672

Token 175: ' each' (ID: 2454)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2018204629421234
    2. '   ' → logprob: -1.9518204927444458
    3. 'for' → logprob: -3.2018203735351562
    4. '    
' → logprob: -10.701820373535156
    5. ' 
' → logprob: -11.326820373535156
    6. '    ' → logprob: -11.951820373535156
    7. '
' → logprob: -12.201820373535156
    8. ' ' → logprob: -12.701820373535156
    9. ' while' → logprob: -13.201820373535156
    10. '	for' → logprob: -13.576820373535156

Token 176: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.6236118078231812
    2. ' time' → logprob: -0.9986118078231812
    3. ' iteration' → logprob: -2.6236119270324707
    4. 'iteration' → logprob: -4.123611927032471
    5. 'operation' → logprob: -5.998611927032471
    6. ' operation' → logprob: -6.373611927032471
    7. '_time' → logprob: -7.373611927032471
    8. '_iteration' → logprob: -7.623611927032471
    9. 'for' → logprob: -7.998611927032471
    10. ' for' → logprob: -8.123611450195312

Token 177: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2947615087032318
    2. ',' → logprob: -2.1697614192962646
    3. ':' → logprob: -2.4197614192962646
    4. '       ' → logprob: -3.4197614192962646
    5. ':
' → logprob: -4.794761657714844
    6. '#' → logprob: -5.794761657714844
    7. ' we' → logprob: -6.419761657714844
    8. '    ' → logprob: -6.794761657714844
    9. ' the' → logprob: -7.044761657714844
    10. '<|end|>' → logprob: -7.669761657714844

Token 178: ' replace' (ID: 13284)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0196784734725952
    2. '#' → logprob: -1.2696784734725952
    3. 'val' → logprob: -2.5196785926818848
    4. '   ' → logprob: -2.8946785926818848
    5. 'top' → logprob: -3.1446785926818848
    6. ' x' → logprob: -3.6446785926818848
    7. ' #' → logprob: -3.7696785926818848
    8. 'pop' → logprob: -3.7696785926818848
    9. 'max' → logprob: -4.019678592681885
    10. ' val' → logprob: -4.144678592681885

Token 179: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3890411853790283
    2. 'the' → logprob: -1.1390411853790283
    3. 'he' → logprob: -7.389040946960449
    4. '-' → logprob: -7.889040946960449
    5. 'largest' → logprob: -8.01404094696045
    6. 'a' → logprob: -9.13904094696045
    7. 'max' → logprob: -9.26404094696045
    8. '#' → logprob: -9.51404094696045
    9. 'heap' → logprob: -9.63904094696045
    10. '<|end|>' → logprob: -9.76404094696045

Token 180: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.20418418943881989
    2. 'max' → logprob: -2.7041842937469482
    3. ' largest' → logprob: -3.2041842937469482
    4. 'top' → logprob: -3.9541842937469482
    5. ' top' → logprob: -4.204184055328369
    6. 'root' → logprob: -4.704184055328369
    7. 'heap' → logprob: -5.079184055328369
    8. 'maximum' → logprob: -5.579184055328369
    9. 'highest' → logprob: -5.579184055328369
    10. '-largest' → logprob: -5.954184055328369

Token 181: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.4256603419780731
    2. 'value' → logprob: -1.5506603717803955
    3. ' value' → logprob: -2.5506603717803955
    4. 'element' → logprob: -3.0506603717803955
    5. '<|end|>' → logprob: -6.175660133361816
    6. 'number' → logprob: -6.300660133361816
    7. ' number' → logprob: -6.425660133361816
    8. 'item' → logprob: -6.550660133361816
    9. ' item' → logprob: -7.300660133361816
    10. ' (' → logprob: -8.550660133361816

Token 182: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.4019037187099457
    2. '   ' → logprob: -1.901903748512268
    3. 'with' → logprob: -2.4019036293029785
    4. ' by' → logprob: -2.6519036293029785
    5. '<|end|>' → logprob: -5.0269036293029785
    6. ' (' → logprob: -5.6519036293029785
    7. 'by' → logprob: -5.9019036293029785
    8. ',' → logprob: -6.4019036293029785
    9. ' =' → logprob: -7.0269036293029785
    10. '#' → logprob: -7.0269036293029785

Token 183: ' its' (ID: 1617)
  Prédit: ' its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.5368385910987854
    2. 'its' → logprob: -1.4118385314941406
    3. ' half' → logprob: -2.6618385314941406
    4. 'half' → logprob: -2.7868385314941406
    5. 'the' → logprob: -4.661838531494141
    6. ' the' → logprob: -4.911838531494141
    7. 'A' → logprob: -5.411838531494141
    8. '-A' → logprob: -5.411838531494141
    9. '-' → logprob: -5.911838531494141
    10. ' A' → logprob: -6.036838531494141

Token 184: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.7246221899986267
    2. ' half' → logprob: -0.8496221899986267
    3. 'hal' → logprob: -3.7246222496032715
    4. 'negative' → logprob: -4.5996222496032715
    5. '//' → logprob: -5.2246222496032715
    6. 'ceil' → logprob: -5.3496222496032715
    7. ' negative' → logprob: -5.3496222496032715
    8. 'neg' → logprob: -5.3496222496032715
    9. '(-' → logprob: -5.8496222496032715
    10. ' (' → logprob: -5.8496222496032715

Token 185: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001077110879123211
    2. ',' → logprob: -8.001076698303223
    3. ' ' → logprob: -8.251076698303223
    4. '    
' → logprob: -9.001076698303223
    5. '<|end|>' → logprob: -9.001076698303223
    6. ' (' → logprob: -10.376076698303223
    7. '  ' → logprob: -10.376076698303223
    8. '    ' → logprob: -10.501076698303223
    9. ')' → logprob: -10.626076698303223
    10. ' while' → logprob: -10.876076698303223

Token 186: 'rounded' (ID: 62633)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27246060967445374
    2. ' )' → logprob: -1.8974605798721313
    3. 'A' → logprob: -4.522460460662842
    4. '#' → logprob: -4.647460460662842
    5. 'import' → logprob: -4.647460460662842
    6. ' //' → logprob: -4.897460460662842
    7. '//' → logprob: -5.022460460662842
    8. 'abs' → logprob: -5.272460460662842
    9. 'integer' → logprob: -5.397460460662842
    10. '2' → logprob: -5.522460460662842

Token 187: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.5639441609382629
    2. 'up' → logprob: -1.3139441013336182
    3. ')' → logprob: -2.188944101333618
    4. ' down' → logprob: -3.438944101333618
    5. ' up' → logprob: -4.438944339752197
    6. '-up' → logprob: -5.938944339752197
    7. '-down' → logprob: -6.563944339752197
    8. '+' → logprob: -7.438944339752197
    9. ' )' → logprob: -7.563944339752197
    10. '(' → logprob: -8.438943862915039

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06563405692577362
    2. '   ' → logprob: -2.81563401222229
    3. ')
' → logprob: -5.815634250640869
    4. 'import' → logprob: -9.190633773803711
    5. '       ' → logprob: -9.440633773803711
    6. ' )' → logprob: -9.815633773803711
    7. ').' → logprob: -9.940633773803711
    8. 'if' → logprob: -10.315633773803711
    9. ' by' → logprob: -10.690633773803711
    10. ' if' → logprob: -10.690633773803711

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004449701402336359
    2. 'for' → logprob: -6.254449844360352
    3. '
' → logprob: -6.629449844360352
    4. ' for' → logprob: -6.879449844360352
    5. '    
' → logprob: -8.754449844360352
    6. '```' → logprob: -12.629449844360352
    7. '	for' → logprob: -12.879449844360352
    8. '<|end|>' → logprob: -14.004449844360352
    9. ',' → logprob: -14.254449844360352
    10. '  
' → logprob: -14.629449844360352

Token 190: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12419775128364563
    2. ' for' → logprob: -2.2491977214813232
    3. 'for' (adapté à ' for') → logprob: -4.499197959899902
    4. '
' → logprob: -9.124197959899902
    5. '    
' → logprob: -9.624197959899902
    6. '	for' → logprob: -11.249197959899902
    7. ' 
' → logprob: -13.249197959899902
    8. '    ' → logprob: -13.249197959899902
    9. '```' → logprob: -14.749197959899902
    10. ' ' → logprob: -15.749197959899902

Token 191: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.010027934797108173
    2. '_' → logprob: -4.635027885437012
    3. ' i' → logprob: -8.260027885437012
    4. ' ' → logprob: -11.510027885437012
    5. '_i' → logprob: -13.385027885437012
    6. 'i' → logprob: -14.135027885437012
    7. ' in' → logprob: -14.385027885437012
    8. '_range' → logprob: -15.385027885437012
    9. ' range' → logprob: -15.510027885437012
    10. ' __' → logprob: -17.010028839111328

Token 192: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08921699225902557
    2. 'in' → logprob: -2.464216947555542
    3. 'n' → logprob: -8.964217185974121
    4. ' ' → logprob: -9.839217185974121
    5. 's' → logprob: -10.839217185974121
    6. 'import' → logprob: -10.964217185974121
    7. '  ' → logprob: -11.589217185974121
    8. 'i' → logprob: -11.714217185974121
    9. '```' → logprob: -11.714217185974121
    10. 'range' → logprob: -11.964217185974121

Token 193: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015054593095555902
    2. ' range' → logprob: -6.501505374908447
    3. '(range' → logprob: -13.126505851745605
    4. 'ange' → logprob: -15.126505851745605
    5. '	range' → logprob: -15.751505851745605
    6. '```' → logprob: -16.00150489807129
    7. '(' → logprob: -16.37650489807129
    8. 'rang' → logprob: -16.37650489807129
    9. ' ' → logprob: -16.50150489807129
    10. ')' → logprob: -16.50150489807129

Token 194: '(M' (ID: 6103)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.249666228890419
    2. '(M' → logprob: -1.9996662139892578
    3. '(' → logprob: -2.624666213989258
    4. ' range' → logprob: -4.999666213989258
    5. ')' → logprob: -5.874666213989258
    6. ' )' → logprob: -6.874666213989258
    7. ' M' → logprob: -6.999666213989258
    8. ' ' → logprob: -7.874666213989258
    9. '   ' → logprob: -7.874666213989258
    10. '(range' → logprob: -7.874666213989258

Token 195: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20161564648151398
    2. '):
' → logprob: -1.7016156911849976
    3. ':' → logprob: -9.576615333557129
    4. '):
' → logprob: -9.576615333557129
    5. ')' → logprob: -10.576615333557129
    6. '   ' → logprob: -10.826615333557129
    7. ' ):' → logprob: -11.576615333557129
    8. ' ):
' → logprob: -12.451615333557129
    9. ':
' → logprob: -12.576615333557129
    10. '):

' → logprob: -14.326615333557129

Token 196: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015553286066278815
    2. ' x' → logprob: -7.126555442810059
    3. '       ' → logprob: -8.251555442810059
    4. ' top' → logprob: -8.751555442810059
    5. 'x' → logprob: -9.626555442810059
    6. ' max' → logprob: -9.751555442810059
    7. ' val' → logprob: -10.126555442810059
    8. 'v' → logprob: -10.126555442810059
    9. ' largest' → logprob: -10.876555442810059
    10. ' v' → logprob: -11.126555442810059

Token 197: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6598384976387024
    2. 'largest' → logprob: -2.0348384380340576
    3. '   ' → logprob: -2.1598384380340576
    4. 'x' → logprob: -2.2848384380340576
    5. 'top' → logprob: -2.5348384380340576
    6. ' largest' → logprob: -4.409838676452637
    7. 'a' → logprob: -4.409838676452637
    8. 'val' → logprob: -4.534838676452637
    9. ' max' → logprob: -4.784838676452637
    10. ' top' → logprob: -5.534838676452637

Token 198: ' Remove' (ID: 18141)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.32361018657684326
    2. 'largest' → logprob: -1.4486101865768433
    3. 'x' → logprob: -3.948610305786133
    4. 'val' → logprob: -4.698610305786133
    5. 'top' → logprob: -5.323610305786133
    6. 'a' → logprob: -6.323610305786133
    7. ' largest' → logprob: -6.573610305786133
    8. 'current' → logprob: -6.573610305786133
    9. ' max' → logprob: -7.073610305786133
    10. 'num' → logprob: -7.323610305786133

Token 199: ' the' (ID: 290)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.24012333154678345
    2. 'max' → logprob: -2.2401232719421387
    3. ' largest' → logprob: -2.4901232719421387
    4. ' max' → logprob: -4.615123271942139
    5. 'x' → logprob: -4.990123271942139
    6. 'top' → logprob: -5.865123271942139
    7. 'val' → logprob: -6.740123271942139
    8. 'current' → logprob: -7.240123271942139
    9. '   ' → logprob: -7.615123271942139
    10. ' val' → logprob: -7.865123271942139

Token 200: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.12777812778949738
    2. 'max' → logprob: -2.5027780532836914
    3. ' largest' → logprob: -3.3777780532836914
    4. ' smallest' → logprob: -6.752778053283691
    5. ' max' → logprob: -7.127778053283691
    6. 'top' → logprob: -7.627778053283691
    7. 'small' → logprob: -7.877778053283691
    8. 'heap' → logprob: -8.252778053283691
    9. 'current' → logprob: -8.502778053283691
    10. 'maximum' → logprob: -8.627778053283691

Token 201: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.13960157334804535
    2. 'value' → logprob: -3.139601469039917
    3. 'element' → logprob: -3.139601469039917
    4. ' value' → logprob: -3.389601469039917
    5. ' item' → logprob: -5.264601707458496
    6. 'item' → logprob: -5.639601707458496
    7. 'val' → logprob: -8.014601707458496
    8. 'elem' → logprob: -8.264601707458496
    9. '_element' → logprob: -8.639601707458496
    10. ' elem' → logprob: -9.264601707458496

Token 202: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7219148278236389
    2. 'largest' → logprob: -0.8469148278236389
    3. ' largest' → logprob: -2.971914768218994
    4. 'x' → logprob: -4.721914768218994
    5. ',' → logprob: -5.096914768218994
    6. ' =' → logprob: -5.346914768218994
    7. ' x' → logprob: -5.971914768218994
    8. 'top' → logprob: -6.221914768218994
    9. 'value' → logprob: -6.346914768218994
    10. 'max' → logprob: -6.596914768218994

Token 203: 'small' (ID: 18158)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.2573274374008179
    2. 'x' → logprob: -1.3823274374008179
    3. ' heap' → logprob: -2.0073275566101074
    4. 'largest' → logprob: -2.2573275566101074
    5. 'val' → logprob: -3.1323275566101074
    6. 'value' → logprob: -3.6323275566101074
    7. 'a' → logprob: -3.6323275566101074
    8. '   ' → logprob: -3.8823275566101074
    9. 'max' → logprob: -4.257327556610107
    10. ' val' → logprob: -4.632327556610107

Token 204: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.001166056958027184
    2. '       ' → logprob: -8.251166343688965
    3. ' =' → logprob: -8.251166343688965
    4. '[' → logprob: -8.376166343688965
    5. 'heap' → logprob: -9.376166343688965
    6. '   ' → logprob: -9.501166343688965
    7. ')' → logprob: -10.001166343688965
    8. 'int' → logprob: -10.126166343688965
    9. '=-' → logprob: -10.501166343688965
    10. '=' → logprob: -10.501166343688965

Token 205: ' negative' (ID: 12626)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.0879017561674118
    2. ')' → logprob: -3.2129018306732178
    3. ' value' → logprob: -4.212901592254639
    4. ' item' → logprob: -4.587901592254639
    5. 'value' → logprob: -4.962901592254639
    6. 'element' → logprob: -5.087901592254639
    7. ' )' → logprob: -6.462901592254639
    8. 'A' → logprob: -6.712901592254639
    9. 'item' → logprob: -7.337901592254639
    10. ' in' → logprob: -7.337901592254639

Token 206: ' number' (ID: 2086)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.9405609965324402
    2. 'value' → logprob: -1.315561056137085
    3. ' number' → logprob: -1.690561056137085
    4. 'number' → logprob: -2.690561056137085
    5. ')' → logprob: -3.065561056137085
    6. ' element' → logprob: -3.690561056137085
    7. 'element' → logprob: -5.565560817718506
    8. 'heap' → logprob: -5.565560817718506
    9. ' of' → logprob: -6.440560817718506
    10. ' heap' → logprob: -6.565560817718506

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24638088047504425
    2. '       ' → logprob: -1.8713809251785278
    3. ' )' → logprob: -3.4963808059692383
    4. ')
' → logprob: -3.8713808059692383
    5. ' =' → logprob: -4.746380805969238
    6. ' )
' → logprob: -6.121380805969238
    7. '=' → logprob: -7.496380805969238
    8. ',' → logprob: -7.621380805969238
    9. '   ' → logprob: -7.996380805969238
    10. '):' → logprob: -8.246380805969238

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013539585284888744
    2. '   ' → logprob: -5.763539791107178
    3. 'x' → logprob: -6.013539791107178
    4. 'largest' → logprob: -6.763539791107178
    5. 'v' → logprob: -6.888539791107178
    6. ' x' → logprob: -7.013539791107178
    7. 'top' → logprob: -7.013539791107178
    8. ',' → logprob: -7.763539791107178
    9. ' largest' → logprob: -7.888539791107178
    10. 'current' → logprob: -7.888539791107178

Token 209: ' num' (ID: 2269)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9513890147209167
    2. 'largest' → logprob: -1.4513890743255615
    3. 'max' → logprob: -1.5763890743255615
    4. 'val' → logprob: -2.9513890743255615
    5. 'current' → logprob: -3.5763890743255615
    6. ' largest' → logprob: -4.201388835906982
    7. 'top' → logprob: -4.326388835906982
    8. 'cur' → logprob: -4.701388835906982
    9. 'a' → logprob: -4.701388835906982
    10. 'curr' → logprob: -4.701388835906982

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520213723182678
    2. ' =' → logprob: -1.502021312713623
    3. ')' → logprob: -9.877021789550781
    4. ',' → logprob: -10.877021789550781
    5. ')=' → logprob: -11.627021789550781
    6. '   ' → logprob: -12.127021789550781
    7. '=-' → logprob: -12.502021789550781
    8. '=
' → logprob: -14.377021789550781
    9. 's' → logprob: -14.502021789550781
    10. ' ' → logprob: -14.627021789550781

Token 211: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.02055543102324009
    2. ' heap' → logprob: -3.8955554962158203
    3. 'he' → logprob: -11.77055549621582
    4. '   ' → logprob: -13.02055549621582
    5. ' -' → logprob: -13.52055549621582
    6. '-' → logprob: -13.52055549621582
    7. '(heap' → logprob: -14.77055549621582
    8. '.heap' → logprob: -15.27055549621582
    9. 'h' → logprob: -16.39555549621582
    10. ' he' → logprob: -16.89555549621582

Token 212: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.36574100604048e-06
    2. '.' → logprob: -13.500004768371582
    3. '   ' → logprob: -13.875004768371582
    4. '.he' → logprob: -14.125004768371582
    5. '.q' → logprob: -15.250004768371582
    6. '[' → logprob: -15.250004768371582
    7. '```' → logprob: -15.500004768371582
    8. '.pop' → logprob: -16.000003814697266
    9. '       ' → logprob: -16.750003814697266
    10. ' ' → logprob: -17.000003814697266

Token 213: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -2.7014437364414334e-05
    2. '.heap' → logprob: -10.75002670288086
    3. 'he' → logprob: -12.37502670288086
    4. '.' → logprob: -13.87502670288086
    5. ' he' → logprob: -15.25002670288086
    6. ' .' → logprob: -17.50002670288086
    7. 'q' → logprob: -17.62502670288086
    8. '.op' → logprob: -17.87502670288086
    9. '.pop' → logprob: -18.00002670288086
    10. '.nl' → logprob: -18.00002670288086

Token 214: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.36574100604048e-06
    2. 'pp' → logprob: -12.750004768371582
    3. 'ap' → logprob: -13.625004768371582
    4. 'pop' → logprob: -16.250003814697266
    5. 'a' → logprob: -16.500003814697266
    6. 'q' → logprob: -17.500003814697266
    7. '[' → logprob: -18.375003814697266
    8. 'p' → logprob: -18.500003814697266
    9. 'appen' → logprob: -19.750003814697266
    10. 'replace' → logprob: -20.750003814697266

Token 215: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0029467977583408356
    2. 'ap' → logprob: -6.252946853637695
    3. 'app' → logprob: -7.127946853637695
    4. 'pop' → logprob: -9.502946853637695
    5. 'p' → logprob: -9.877946853637695
    6. 'e' → logprob: -10.002946853637695
    7. 'ush' → logprob: -10.752946853637695
    8. '[' → logprob: -11.877946853637695
    9. 'q' → logprob: -12.502946853637695
    10. 'a' → logprob: -13.252946853637695

Token 216: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.816093228830141e-06
    2. 'A' → logprob: -13.12500286102295
    3. '(' → logprob: -14.37500286102295
    4. '(
' → logprob: -15.37500286102295
    5. ')' → logprob: -18.500001907348633
    6. ' A' → logprob: -18.625001907348633
    7. ' (' → logprob: -19.375001907348633
    8. '```' → logprob: -19.500001907348633
    9. ',A' → logprob: -20.000001907348633
    10. '[A' → logprob: -20.000001907348633

Token 217: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4747235178947449
    2. ')' → logprob: -0.9747235178947449
    3. ')

' → logprob: -7.8497233390808105
    4. ')
' → logprob: -8.599723815917969
    5. '       ' → logprob: -9.849723815917969
    6. '   ' → logprob: -11.099723815917969
    7. ')

' → logprob: -13.849723815917969
    8. ')*' → logprob: -14.224723815917969
    9. ' )
' → logprob: -14.474723815917969
    10. ')+' → logprob: -15.099723815917969

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01663540117442608
    2. '        
' → logprob: -5.141635417938232
    3. '
' → logprob: -6.016635417938232
    4. 'num' → logprob: -6.266635417938232
    5. '        ' → logprob: -6.891635417938232
    6. ' 
' → logprob: -7.016635417938232
    7. ')' → logprob: -7.141635417938232
    8. ' num' → logprob: -7.141635417938232
    9. ',' → logprob: -7.266635417938232
    10. ' heap' → logprob: -8.141634941101074

Token 219: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9646876454353333
    2. ' num' → logprob: -1.3396875858306885
    3. 'num' → logprob: -1.4646875858306885
    4. ' heap' → logprob: -2.8396875858306885
    5. 'heap' → logprob: -3.8396875858306885
    6. ' new' → logprob: -4.464687824249268
    7. '#' (adapté à ' #') → logprob: -4.714687824249268
    8. 'new' → logprob: -4.964687824249268
    9. ' half' → logprob: -5.339687824249268
    10. 'half' → logprob: -5.464687824249268

Token 220: ' Hal' (ID: 19696)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.0905249118804932
    2. ' num' → logprob: -1.2155249118804932
    3. 'half' → logprob: -1.9655249118804932
    4. ' half' → logprob: -2.465524911880493
    5. 'hal' → logprob: -3.340524911880493
    6. ' heap' → logprob: -3.840524911880493
    7. ' hal' → logprob: -3.840524911880493
    8. '       ' → logprob: -3.840524911880493
    9. 'heap' → logprob: -4.090524673461914
    10. ' new' → logprob: -4.590524673461914

Token 221: 've' (ID: 737)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.011279234662652016
    2. 've' → logprob: -4.511279106140137
    3. '   ' → logprob: -9.761279106140137
    4. 'ving' → logprob: -9.761279106140137
    5. '       ' → logprob: -10.261279106140137
    6. '```' → logprob: -11.136279106140137
    7. 'v' → logprob: -11.511279106140137
    8. 'num' → logprob: -11.636279106140137
    9. '#' → logprob: -11.636279106140137
    10. 'fe' → logprob: -12.136279106140137

Token 222: ' the' (ID: 290)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.7172340154647827
    2. 'num' → logprob: -0.7172340154647827
    3. ' =' → logprob: -4.842234134674072
    4. '(num' → logprob: -5.217234134674072
    5. ' (' → logprob: -6.217234134674072
    6. '       ' → logprob: -6.342234134674072
    7. '_num' → logprob: -6.342234134674072
    8. '   ' → logprob: -6.592234134674072
    9. ' the' → logprob: -6.842234134674072
    10. '=' → logprob: -7.342234134674072

Token 223: ' extracted' (ID: 48182)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.06523475050926208
    2. ' num' → logprob: -3.065234661102295
    3. '-num' → logprob: -4.315234661102295
    4. '(-' → logprob: -7.065234661102295
    5. ' (-' → logprob: -7.815234661102295
    6. '-' → logprob: -7.815234661102295
    7. 'abs' → logprob: -8.065235137939453
    8. ' -' → logprob: -8.315235137939453
    9. 'value' → logprob: -8.440235137939453
    10. ' value' → logprob: -8.815235137939453

Token 224: ' value' (ID: 1432)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.09892197698354721
    2. 'value' → logprob: -2.72392201423645
    3. 'number' → logprob: -4.598921775817871
    4. ' value' → logprob: -4.598921775817871
    5. ' number' → logprob: -5.473921775817871
    6. ' num' → logprob: -5.598921775817871
    7. 'element' → logprob: -7.973921775817871
    8. ' element' → logprob: -8.848921775817871
    9. '#' → logprob: -10.348921775817871
    10. 'token' → logprob: -11.973921775817871

Token 225: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17275749146938324
    2. ' =' → logprob: -2.547757387161255
    3. 'num' → logprob: -3.047757387161255
    4. '=' → logprob: -3.922757387161255
    5. ' num' → logprob: -4.797757625579834
    6. ',' → logprob: -6.422757625579834
    7. ' //' → logprob: -6.797757625579834
    8. '        ' → logprob: -7.797757625579834
    9. '   ' → logprob: -7.797757625579834
    10. '=num' → logprob: -8.297757148742676

Token 226: ' re' (ID: 322)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.3353559970855713
    2. ' heap' → logprob: -1.5853559970855713
    3. 'push' → logprob: -2.7103559970855713
    4. ' push' → logprob: -4.585355758666992
    5. 'he' → logprob: -6.585355758666992
    6. 'insert' → logprob: -8.085355758666992
    7. 'new' → logprob: -8.335355758666992
    8. 'num' → logprob: -8.335355758666992
    9. '       ' → logprob: -8.585355758666992
    10. 'import' → logprob: -8.835355758666992

Token 227: '-neg' (ID: 136782)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.13645580410957336
    2. 'heap' → logprob: -2.136455774307251
    3. 'insert' → logprob: -5.26145601272583
    4. 'append' → logprob: -6.63645601272583
    5. 'n' → logprob: -6.76145601272583
    6. 'he' → logprob: -6.88645601272583
    7. '   ' → logprob: -8.386455535888672
    8. ' heap' → logprob: -9.136455535888672
    9. ' push' → logprob: -9.636455535888672
    10. 'turn' → logprob: -10.011455535888672

Token 228: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.012624780647456646
    2. 'eg' → logprob: -5.262624740600586
    3. 'heap' → logprob: -5.512624740600586
    4. '   ' → logprob: -6.637624740600586
    5. '       ' → logprob: -7.137624740600586
    6. 'neg' → logprob: -8.387624740600586
    7. '(-' → logprob: -9.262624740600586
    8. 'um' → logprob: -9.262624740600586
    9. '           ' → logprob: -9.637624740600586
    10. 'e' → logprob: -9.762624740600586

Token 229: ' appropriately' (ID: 54286)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4594060778617859
    2. 'num' → logprob: -1.5844061374664307
    3. ' num' → logprob: -2.3344061374664307
    4. ',' → logprob: -3.5844061374664307
    5. '(num' → logprob: -4.209405899047852
    6. ' (' → logprob: -5.334405899047852
    7. ' =' → logprob: -5.334405899047852
    8. ' heap' → logprob: -5.584405899047852
    9. 'heap' → logprob: -5.959405899047852
    10. '(heap' → logprob: -6.709405899047852

Token 230: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001307617872953415
    2. 'heap' → logprob: -7.501307487487793
    3. 'num' → logprob: -8.376307487487793
    4. ',' → logprob: -8.501307487487793
    5. '
' → logprob: -8.876307487487793
    6. ' heap' → logprob: -9.751307487487793
    7. ')' → logprob: -11.126307487487793
    8. '(heap' → logprob: -11.126307487487793
    9. '        
' → logprob: -11.501307487487793
    10. ')
' → logprob: -11.751307487487793

Token 231: ' maintain' (ID: 12930)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.9207037091255188
    2. ' push' → logprob: -1.545703649520874
    3. 'heap' → logprob: -1.545703649520874
    4. ' heap' → logprob: -2.045703649520874
    5. ' maintain' → logprob: -4.545703887939453
    6. 'he' → logprob: -4.545703887939453
    7. 'maint' → logprob: -5.170703887939453
    8. 'put' → logprob: -5.170703887939453
    9. '   ' → logprob: -5.670703887939453
    10. 'insert' → logprob: -5.795703887939453

Token 232: ' max' (ID: 2999)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6542003750801086
    2. 'max' → logprob: -1.6542003154754639
    3. 'heap' → logprob: -1.9042003154754639
    4. 'a' → logprob: -2.404200315475464
    5. ' the' → logprob: -3.404200315475464
    6. ' max' → logprob: -5.029200553894043
    7. ' heap' → logprob: -5.404200553894043
    8. ' a' → logprob: -5.529200553894043
    9. 'min' → logprob: -7.904200553894043
    10. '-' → logprob: -8.404200553894043

Token 233: '-' (ID: 12)
  Prédit: '_heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.31233200430870056
    2. 'heap' → logprob: -1.687332034111023
    3. '       ' → logprob: -3.1873319149017334
    4. ' heap' → logprob: -3.8123319149017334
    5. '   ' → logprob: -4.5623321533203125
    6. '-' → logprob: -5.5623321533203125
    7. 'q' → logprob: -5.9373321533203125
    8. '_h' → logprob: -7.4373321533203125
    9. 'A' → logprob: -7.8123321533203125
    10. '_he' → logprob: -8.187332153320312

Token 234: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0004932218580506742
    2. ' heap' → logprob: -7.625493049621582
    3. 'he' → logprob: -12.500493049621582
    4. '1' → logprob: -15.000493049621582
    5. '_heap' → logprob: -15.000493049621582
    6. '```' → logprob: -15.500493049621582
    7. '(heap' → logprob: -15.750493049621582
    8. '-' → logprob: -16.0004940032959
    9. ')' → logprob: -16.5004940032959
    10. 'A' → logprob: -16.7504940032959

Token 235: ' property' (ID: 4322)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014951827935874462
    2. 'num' → logprob: -5.014951705932617
    3. 'heap' → logprob: -5.514951705932617
    4. ' heap' → logprob: -6.139951705932617
    5. ',' → logprob: -7.264951705932617
    6. ' num' → logprob: -7.514951705932617
    7. ' =' → logprob: -9.264951705932617
    8. '(heap' → logprob: -9.264951705932617
    9. '=' → logprob: -9.639951705932617
    10. '   ' → logprob: -9.889951705932617

Token 236: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4368683993816376
    2. 'heap' → logprob: -1.81186842918396
    3. 'num' → logprob: -2.31186842918396
    4. ' heap' → logprob: -2.56186842918396
    5. ' num' → logprob: -4.686868190765381
    6. 'new' → logprob: -5.936868190765381
    7. ' new' → logprob: -7.436868190765381
    8. ',' → logprob: -8.311868667602539
    9. 'he' → logprob: -8.436868667602539
    10. 'import' → logprob: -8.436868667602539

Token 237: '       ' (ID: 309)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.9655746221542358
    2. 'heap' → logprob: -1.3405746221542358
    3. '       ' → logprob: -1.5905746221542358
    4. 'num' → logprob: -2.4655747413635254
    5. ' num' → logprob: -3.7155747413635254
    6. 'half' → logprob: -4.590574741363525
    7. 'new' → logprob: -4.715574741363525
    8. 'hal' → logprob: -4.840574741363525
    9. ' new' → logprob: -5.215574741363525
    10. ' half' → logprob: -5.715574741363525

Token 238: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6543468832969666
    2. 'num' → logprob: -1.4043469429016113
    3. ' heap' → logprob: -2.5293469429016113
    4. 'half' → logprob: -2.6543469429016113
    5. 'hal' → logprob: -3.6543469429016113
    6. ' num' → logprob: -3.6543469429016113
    7. 'new' → logprob: -4.404346942901611
    8. ' half' → logprob: -4.904346942901611
    9. ' new' → logprob: -5.654346942901611
    10. '   ' → logprob: -5.779346942901611

Token 239: ' Use' (ID: 7649)
  Prédit: 'hal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hal' → logprob: -1.7340396642684937
    2. 'num' → logprob: -1.9840396642684937
    3. 'half' → logprob: -2.109039783477783
    4. ' new' → logprob: -2.109039783477783
    5. ' num' → logprob: -2.234039783477783
    6. 'heap' → logprob: -2.484039783477783
    7. ' hal' → logprob: -2.609039783477783
    8. ' heap' → logprob: -2.734039783477783
    9. 'new' → logprob: -2.984039783477783
    10. ' half' → logprob: -2.984039783477783

Token 240: ' (-' (ID: 21382)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.738074779510498
    2. '(-' → logprob: -1.863074779510498
    3. '-num' → logprob: -1.863074779510498
    4. ' (' → logprob: -1.988074779510498
    5. ' -' → logprob: -2.363074779510498
    6. ' num' → logprob: -2.738074779510498
    7. '(num' → logprob: -3.363074779510498
    8. ' (-' → logprob: -3.363074779510498
    9. '-(' → logprob: -3.488074779510498
    10. 'heap' → logprob: -3.613074779510498

Token 241: 'num' (ID: 4571)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.7384437918663025
    2. 'num' → logprob: -0.8634437918663025
    3. '(num' → logprob: -2.4884438514709473
    4. '((-' → logprob: -4.488443851470947
    5. '(' → logprob: -6.113443851470947
    6. ' (' → logprob: -6.488443851470947
    7. ' (-' → logprob: -7.488443851470947
    8. '(-(' → logprob: -7.488443851470947
    9. '-num' → logprob: -7.863443851470947
    10. ' num' → logprob: -8.363443374633789

Token 242: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04466792568564415
    2. ')//' → logprob: -4.044667720794678
    3. '//' → logprob: -4.669667720794678
    4. '+' → logprob: -4.919667720794678
    5. ' //' → logprob: -5.419667720794678
    6. ' +' → logprob: -5.669667720794678
    7. ' )' → logprob: -6.544667720794678
    8. '   ' → logprob: -9.544668197631836
    9. '       ' → logprob: -10.544668197631836
    10. ' ' → logprob: -10.669668197631836

Token 243: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003372502396814525
    2. ' ' → logprob: -8.000337600708008
    3. '```' → logprob: -14.125337600708008
    4. '   ' → logprob: -15.625337600708008
    5. '>' → logprob: -15.687837600708008
    6. '
' → logprob: -16.062837600708008
    7. '２' → logprob: -16.375337600708008
    8. '=' → logprob: -16.625337600708008
    9. '    ' → logprob: -16.750337600708008
    10. '۲' → logprob: -16.750337600708008

Token 244: '*(-' (ID: 78771)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0663318783044815
    2. '
' → logprob: -3.6913318634033203
    3. ')
' → logprob: -3.9413318634033203
    4. ')' → logprob: -5.06633186340332
    5. 'heap' → logprob: -5.06633186340332
    6. ' =' → logprob: -6.44133186340332
    7. ',' → logprob: -6.94133186340332
    8. 'num' → logprob: -7.19133186340332
    9. '        
' → logprob: -7.31633186340332
    10. ' heap' → logprob: -7.31633186340332

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ')' → logprob: -12.625006675720215
    3. ' ' → logprob: -13.625006675720215
    4. '   ' → logprob: -14.000006675720215
    5. '-' → logprob: -14.750006675720215
    6. '  ' → logprob: -16.9375057220459
    7. ' -' → logprob: -17.0000057220459
    8. '１' → logprob: -17.0000057220459
    9. '```' → logprob: -17.3125057220459
    10. '    ' → logprob: -17.5625057220459

Token 246: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004049322451464832
    2. ' )' → logprob: -8.125405311584473
    3. ')
' → logprob: -9.625405311584473
    4. '))' → logprob: -10.750405311584473
    5. '1' → logprob: -12.000405311584473
    6. '),' → logprob: -12.375405311584473
    7. ',' → logprob: -12.625405311584473
    8. ')))' → logprob: -13.875405311584473
    9. '   ' → logprob: -14.250405311584473
    10. ')`' → logprob: -14.500405311584473

Token 247: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10122761130332947
    2. '
' → logprob: -2.8512275218963623
    3. ')' → logprob: -3.9762275218963623
    4. 'num' → logprob: -5.226227760314941
    5. ')
' → logprob: -5.351227760314941
    6. ',' → logprob: -5.976227760314941
    7. '        
' → logprob: -6.351227760314941
    8. ' =' → logprob: -6.601227760314941
    9. 'heap' → logprob: -6.851227760314941
    10. ' )' → logprob: -7.726227760314941

Token 248: ' get' (ID: 717)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'push' → logprob: -1.2793420553207397
    2. ' push' → logprob: -1.7793420553207397
    3. 'heap' → logprob: -1.9043420553207397
    4. 'num' → logprob: -2.5293421745300293
    5. '-' → logprob: -2.6543421745300293
    6. '-num' → logprob: -2.7793421745300293
    7. 'neg' → logprob: -3.0293421745300293
    8. ' heap' → logprob: -3.1543421745300293
    9. ' -' → logprob: -3.7793421745300293
    10. '-neg' → logprob: -4.029342174530029

Token 249: ' the' (ID: 290)
  Prédit: '-num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-num' → logprob: -0.01820121519267559
    2. ' -' → logprob: -5.0182013511657715
    3. 'num' → logprob: -5.2682013511657715
    4. '-' → logprob: -5.2682013511657715
    5. ' num' → logprob: -7.6432013511657715
    6. '-n' → logprob: -8.018200874328613
    7. '(-' → logprob: -9.143200874328613
    8. '-(' → logprob: -9.518200874328613
    9. '(num' → logprob: -9.893200874328613
    10. '-negative' → logprob: -11.518200874328613

Token 250: ' next' (ID: 2613)
  Prédit: '-num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-num' → logprob: -0.01211907435208559
    2. '-' → logprob: -4.762119293212891
    3. ' -' → logprob: -6.262119293212891
    4. 'num' → logprob: -6.887119293212891
    5. '-neg' → logprob: -8.63711929321289
    6. '-new' → logprob: -9.13711929321289
    7. '-negative' → logprob: -9.63711929321289
    8. ' num' → logprob: -9.63711929321289
    9. '-(' → logprob: -10.13711929321289
    10. '-n' → logprob: -10.38711929321289

Token 251: ' value' (ID: 1432)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.19141702353954315
    2. ' num' → logprob: -2.6914169788360596
    3. ' value' → logprob: -2.9414169788360596
    4. 'value' → logprob: -3.8164169788360596
    5. ' token' → logprob: -4.316417217254639
    6. 'token' → logprob: -4.566417217254639
    7. ' -' → logprob: -6.816417217254639
    8. ' element' → logprob: -7.066417217254639
    9. '-num' → logprob: -7.066417217254639
    10. ' number' → logprob: -7.566417217254639

Token 252: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014026345685124397
    2. ')' → logprob: -5.139026165008545
    3. '
' → logprob: -5.639026165008545
    4. ',' → logprob: -7.139026165008545
    5. 'num' → logprob: -7.139026165008545
    6. 'heap' → logprob: -7.389026165008545
    7. ')
' → logprob: -8.014026641845703
    8. 'next' → logprob: -8.139026641845703
    9. ' =' → logprob: -8.139026641845703
    10. 'new' → logprob: -8.264026641845703

Token 253: 'half' (ID: 52836)
  Prédit: '-num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-num' → logprob: -0.31470543146133423
    2. 'num' → logprob: -1.6897053718566895
    3. ' num' → logprob: -3.1897053718566895
    4. '-' → logprob: -3.9397053718566895
    5. ' -' → logprob: -4.0647053718566895
    6. '-n' → logprob: -6.3147053718566895
    7. ')' → logprob: -6.4397053718566895
    8. '   ' → logprob: -6.6897053718566895
    9. '-(' → logprob: -7.4397053718566895
    10. 'heap' → logprob: -7.5647053718566895

Token 254: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0270234365016222
    2. '   ' → logprob: -4.6520233154296875
    3. '       ' → logprob: -5.1520233154296875
    4. ' *' → logprob: -5.7770233154296875
    5. ')*' → logprob: -6.4020233154296875
    6. ' )' → logprob: -6.6520233154296875
    7. '*' → logprob: -6.9020233154296875
    8. ' of' → logprob: -7.0270233154296875
    9. '*num' → logprob: -7.4020233154296875
    10. '*(-' → logprob: -7.5270233154296875

Token 255: ' as' (ID: 472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3047552704811096
    2. 'num' → logprob: -2.554755210876465
    3. ' )' → logprob: -2.929755210876465
    4. ' num' → logprob: -3.179755210876465
    5. '-' → logprob: -3.679755210876465
    6. ' -' → logprob: -3.929755210876465
    7. '-)' → logprob: -5.054755210876465
    8. 'neg' → logprob: -5.179755210876465
    9. '-num' → logprob: -5.179755210876465
    10. '1' → logprob: -5.804755210876465

Token 256: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.6969608068466187
    2. 'a' → logprob: -0.8219608068466187
    3. ' negative' → logprob: -3.696960926055908
    4. 'positive' → logprob: -3.821960926055908
    5. ' a' → logprob: -4.571960926055908
    6. 'an' → logprob: -5.571960926055908
    7. ' positive' → logprob: -7.571960926055908
    8. 'integer' → logprob: -7.946960926055908
    9. 'neg' → logprob: -8.19696044921875
    10. ' an' → logprob: -9.19696044921875

Token 257: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035617039538919926
    2. 'num' → logprob: -6.128561496734619
    3. '1' → logprob: -8.128561973571777
    4. '*num' → logprob: -8.253561973571777
    5. ')*' → logprob: -8.378561973571777
    6. '_num' → logprob: -8.753561973571777
    7. ' )' → logprob: -9.003561973571777
    8. '*)' → logprob: -9.503561973571777
    9. '*' → logprob: -9.628561973571777
    10. '(num' → logprob: -10.128561973571777

Token 258: ' re' (ID: 322)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7592171430587769
    2. ')' → logprob: -1.3842171430587769
    3. ' so' → logprob: -2.7592172622680664
    4. ' heap' → logprob: -3.3842172622680664
    5. 'heap' → logprob: -3.5092172622680664
    6. 'num' → logprob: -4.009217262268066
    7. ' )' → logprob: -4.384217262268066
    8. ' because' → logprob: -4.509217262268066
    9. ' and' → logprob: -4.634217262268066
    10. ' to' → logprob: -4.759217262268066

Token 259: '-neg' (ID: 136782)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18195740878582
    2. '-neg' → logprob: -2.431957483291626
    3. 'heap' → logprob: -3.681957483291626
    4. 'neg' → logprob: -4.306957244873047
    5. '-negative' → logprob: -4.431957244873047
    6. 'turned' → logprob: -4.431957244873047
    7. 'insert' → logprob: -5.431957244873047
    8. '-in' → logprob: -5.806957244873047
    9. '-)' → logprob: -6.681957244873047
    10. 'versed' → logprob: -6.806957244873047

Token 260: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.007883423008024693
    2. 'ate' → logprob: -5.882883548736572
    3. '   ' → logprob: -6.382883548736572
    4. 'ating' → logprob: -7.007883548736572
    5. '(-' → logprob: -7.257883548736572
    6. '-' → logprob: -8.132883071899414
    7. 'g' → logprob: -8.632883071899414
    8. '       ' → logprob: -8.757883071899414
    9. ')' → logprob: -9.007883071899414
    10. 't' → logprob: -9.132883071899414

Token 261: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007661870680749416
    2. ' )' → logprob: -6.507661819458008
    3. '))' → logprob: -6.507661819458008
    4. '   ' → logprob: -6.757661819458008
    5. '       ' → logprob: -7.007661819458008
    6. ')
' → logprob: -7.257661819458008
    7. 'num' → logprob: -7.882661819458008
    8. '=' → logprob: -7.882661819458008
    9. ')))' → logprob: -8.757661819458008
    10. ').' → logprob: -9.007661819458008

Token 262: '       ' (ID: 309)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -1.1706078052520752
    2. '       ' → logprob: -1.2956078052520752
    3. 'heap' → logprob: -1.5456078052520752
    4. ' next' → logprob: -2.920607805252075
    5. 'new' → logprob: -3.045607805252075
    6. ' new' → logprob: -3.045607805252075
    7. 'next' → logprob: -3.170607805252075
    8. 'num' → logprob: -5.670607566833496
    9. 'value' → logprob: -6.295607566833496
    10. ' value' → logprob: -7.295607566833496

Token 263: ' new' (ID: 620)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.16751566529273987
    2. ' heap' → logprob: -2.167515754699707
    3. 'next' → logprob: -3.667515754699707
    4. 'new' (adapté à ' new') → logprob: -5.292515754699707
    5. ' next' → logprob: -5.542515754699707
    6. 'half' → logprob: -6.667515754699707
    7. ' new' → logprob: -6.792515754699707
    8. 'num' → logprob: -7.042515754699707
    9. '       ' → logprob: -7.167515754699707
    10. '   ' → logprob: -8.042515754699707

Token 264: '_num' (ID: 9834)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.28390881419181824
    2. '_num' → logprob: -1.9089088439941406
    3. '_value' → logprob: -2.7839088439941406
    4. '=' → logprob: -3.6589088439941406
    5. ' =' → logprob: -4.658908843994141
    6. '_' → logprob: -6.533908843994141
    7. 'num' → logprob: -8.28390884399414
    8. '_=' → logprob: -9.65890884399414
    9. 'val' → logprob: -10.03390884399414
    10. 'value' → logprob: -10.03390884399414

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.251930832862854
    2. ' =' → logprob: -1.501930832862854
    3. ')' → logprob: -14.876931190490723
    4. '=
' → logprob: -15.126931190490723
    5. '=num' → logprob: -15.501931190490723
    6. '=(-' → logprob: -15.626931190490723
    7. ' ' → logprob: -15.876931190490723
    8. '=int' → logprob: -16.001930236816406
    9. '＝' → logprob: -16.001930236816406
    10. '=

' → logprob: -16.251930236816406

Token 266: ' (-' (ID: 21382)
  Prédit: '-num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-num' → logprob: -1.0373852252960205
    2. '(-' → logprob: -1.5373852252960205
    3. '-(' → logprob: -1.7873852252960205
    4. '-' → logprob: -1.7873852252960205
    5. ' -' → logprob: -3.0373852252960205
    6. '(-(' → logprob: -3.9123852252960205
    7. '(num' → logprob: -5.537384986877441
    8. '-n' → logprob: -5.662384986877441
    9. 'num' → logprob: -5.787384986877441
    10. '((-' → logprob: -5.912384986877441

Token 267: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -2.248469718324486e-05
    2. '(-' → logprob: -11.750022888183594
    3. ' num' → logprob: -12.125022888183594
    4. '(num' → logprob: -12.375022888183594
    5. '-num' → logprob: -13.000022888183594
    6. '((-' → logprob: -13.875022888183594
    7. '(' → logprob: -14.250022888183594
    8. '   ' → logprob: -15.250022888183594
    9. '((' → logprob: -15.750022888183594
    10. ' (' → logprob: -16.000022888183594

Token 268: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14053289592266083
    2. ')//' → logprob: -2.140532970428467
    3. '//' → logprob: -4.390532970428467
    4. ' //' → logprob: -7.390532970428467
    5. ' )' → logprob: -7.640532970428467
    6. '+' → logprob: -11.640532493591309
    7. '   ' → logprob: -12.015532493591309
    8. ')
' → logprob: -13.765532493591309
    9. ' ' → logprob: -13.890532493591309
    10. '       ' → logprob: -14.140532493591309

Token 269: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.12584739923477173
    2. ' //' → logprob: -2.250847339630127
    3. '#' → logprob: -4.375847339630127
    4. '
' → logprob: -9.375847816467285
    5. 'new' → logprob: -9.375847816467285
    6. ' #' → logprob: -9.625847816467285
    7. '//=' → logprob: -10.250847816467285
    8. ' ' → logprob: -10.375847816467285
    9. '2' → logprob: -11.375847816467285
    10. '   ' → logprob: -11.625847816467285

Token 270: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '
' → logprob: -16.750123977661133
    4. '```' → logprob: -16.750123977661133
    5. '   ' → logprob: -18.000123977661133
    6. '２' → logprob: -18.687623977661133
    7. '۲' → logprob: -18.750123977661133
    8. '  ' → logprob: -19.437623977661133
    9. '>' → logprob: -19.750123977661133
    10. '=' → logprob: -19.812623977661133

Token 271: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.2166411478538066e-05
    2. ' ' → logprob: -9.875052452087402
    3. '```' → logprob: -15.000052452087402
    4. '   ' → logprob: -16.125051498413086
    5. '
' → logprob: -16.375051498413086
    6. '۲' → logprob: -17.625051498413086
    7. '  ' → logprob: -17.687551498413086
    8. '２' → logprob: -17.875051498413086
    9. '    ' → logprob: -18.812551498413086
    10. '>' → logprob: -19.062551498413086

Token 272: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5955089330673218
    2. ' *' → logprob: -1.3455089330673218
    3. '*' → logprob: -1.9705089330673218
    4. 'heap' → logprob: -3.7205090522766113
    5. '*(-' → logprob: -4.220509052276611
    6. ' heap' → logprob: -5.095509052276611
    7. '*-' → logprob: -6.220509052276611
    8. '   ' → logprob: -7.845509052276611
    9. '(heap' → logprob: -7.970509052276611
    10. ')' → logprob: -8.470508575439453

Token 273: ' (-' (ID: 21382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1416158825159073
    2. '(-' → logprob: -2.141615867614746
    3. ' -' → logprob: -4.266615867614746
    4. ' (-' → logprob: -7.516615867614746
    5. '(' → logprob: -12.641615867614746
    6. ' ' → logprob: -13.141615867614746
    7. '-(' → logprob: -14.391615867614746
    8. '   ' → logprob: -14.891615867614746
    9. '  ' → logprob: -15.516615867614746
    10. '	' → logprob: -15.641615867614746

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.375008583068848
    3. '-' → logprob: -12.500008583068848
    4. ')' → logprob: -15.750008583068848
    5. ' -' → logprob: -15.875008583068848
    6. '   ' → logprob: -17.37500762939453
    7. '(-' → logprob: -18.25000762939453
    8. '１' → logprob: -18.62500762939453
    9. '```' → logprob: -19.18750762939453
    10. '  ' → logprob: -19.31250762939453

Token 275: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004904801025986671
    2. ')
' → logprob: -7.625490665435791
    3. ')
' → logprob: -14.000490188598633
    4. '       ' → logprob: -15.000490188598633
    5. '<|end|>' → logprob: -15.250490188598633
    6. '))' → logprob: -15.375490188598633
    7. ' )' → logprob: -15.500490188598633
    8. ')

' → logprob: -15.625490188598633
    9. ')#' → logprob: -15.875490188598633
    10. '   ' → logprob: -16.375490188598633

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08961887657642365
    2. 'heap' → logprob: -2.4646189212799072
    3. ' heap' → logprob: -7.339618682861328
    4. '(heap' → logprob: -10.839618682861328
    5. '.heap' → logprob: -12.714618682861328
    6. '   ' → logprob: -12.714618682861328
    7. '```' → logprob: -13.214618682861328
    8. '_heap' → logprob: -14.214618682861328
    9. '      ' → logprob: -15.339618682861328
    10. ' ' → logprob: -15.714618682861328

Token 277: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00014537633978761733
    2. '       ' → logprob: -9.000144958496094
    3. ' heap' → logprob: -10.750144958496094
    4. '   ' → logprob: -15.875144958496094
    5. 'if' → logprob: -16.000144958496094
    6. '(heap' → logprob: -16.125144958496094
    7. 'he' → logprob: -16.625144958496094
    8. '.heap' → logprob: -17.250144958496094
    9. 'queue' → logprob: -18.250144958496094
    10. '        
' → logprob: -18.750144958496094

Token 278: ' Insert' (ID: 34954)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.6240566083070007e-06
    2. ' heap' → logprob: -13.625001907348633
    3. 'if' → logprob: -15.500001907348633
    4. '   ' → logprob: -16.000001907348633
    5. 'he' → logprob: -17.250001907348633
    6. '```' → logprob: -18.875001907348633
    7. '(heap' → logprob: -19.625001907348633
    8. '.heap' → logprob: -19.625001907348633
    9. 'Heap' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.750001907348633

Token 279: ' the' (ID: 290)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.025158919394016266
    2. 'heap' → logprob: -4.275158882141113
    3. ' new' → logprob: -4.525158882141113
    4. ' heap' → logprob: -10.025158882141113
    5. '(new' → logprob: -10.275158882141113
    6. 'he' → logprob: -11.525158882141113
    7. '(heap' → logprob: -11.525158882141113
    8. '   ' → logprob: -13.275158882141113
    9. 'A' → logprob: -13.650158882141113
    10. '       ' → logprob: -16.15015983581543

Token 280: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.018298601731657982
    2. ' new' → logprob: -4.018298625946045
    3. 'heap' → logprob: -8.893298149108887
    4. ' heap' → logprob: -11.643298149108887
    5. 'num' → logprob: -14.143298149108887
    6. '   ' → logprob: -14.518298149108887
    7. 'he' → logprob: -14.643298149108887
    8. '_new' → logprob: -15.643298149108887
    9. 'push' → logprob: -16.143299102783203
    10. '```' → logprob: -16.143299102783203

Token 281: ' value' (ID: 1432)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.007349627558141947
    2. 'num' → logprob: -5.007349491119385
    3. 'new' → logprob: -7.507349491119385
    4. '_n' → logprob: -10.882349967956543
    5. '_new' → logprob: -11.007349967956543
    6. '   ' → logprob: -12.007349967956543
    7. '_val' → logprob: -12.132349967956543
    8. 'value' → logprob: -12.382349967956543
    9. 'heap' → logprob: -12.382349967956543
    10. '_' → logprob: -12.507349967956543

Token 282: ' back' (ID: 1602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5168163776397705
    2. 'heap' → logprob: -1.2668163776397705
    3. '(heap' → logprob: -2.2668163776397705
    4. ' heap' → logprob: -4.141816139221191
    5. ' into' → logprob: -6.641816139221191
    6. '.heap' → logprob: -7.516816139221191
    7. 'into' → logprob: -9.266816139221191
    8. ',' → logprob: -9.516816139221191
    9. 'new' → logprob: -9.516816139221191
    10. 'he' → logprob: -9.641816139221191

Token 283: ' into' (ID: 1511)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5689958930015564
    2. 'into' → logprob: -1.8189959526062012
    3. '(heap' → logprob: -2.068995952606201
    4. '(A' → logprob: -2.693995952606201
    5. '       ' → logprob: -3.193995952606201
    6. ' into' → logprob: -3.568995952606201
    7. 'A' → logprob: -5.818995952606201
    8. '   ' → logprob: -6.443995952606201
    9. ' heap' → logprob: -6.568995952606201
    10. 'to' → logprob: -7.193995952606201

Token 284: ' the' (ID: 290)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0001434690784662962
    2. ' A' → logprob: -9.000143051147461
    3. 'the' → logprob: -11.250143051147461
    4. 'heap' → logprob: -12.000143051147461
    5. ' the' → logprob: -14.250143051147461
    6. '   ' → logprob: -15.875143051147461
    7. ' heap' → logprob: -17.25014305114746
    8. '```' → logprob: -17.62514305114746
    9. '	A' → logprob: -18.25014305114746
    10. 'a' → logprob: -18.75014305114746

Token 285: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.13443224132061005
    2. 'A' → logprob: -2.134432315826416
    3. ' heap' → logprob: -5.009432315826416
    4. ' A' → logprob: -7.134432315826416
    5. 'queue' → logprob: -13.259431838989258
    6. '   ' → logprob: -14.384431838989258
    7. 'h' → logprob: -14.634431838989258
    8. '```' → logprob: -14.884431838989258
    9. '.heap' → logprob: -15.009431838989258
    10. 'he' → logprob: -15.259431838989258

Token 286: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5792523622512817
    2. '       ' → logprob: -0.8292523622512817
    3. ' heap' → logprob: -6.079252243041992
    4. '(heap' → logprob: -6.954252243041992
    5. '.heap' → logprob: -10.329252243041992
    6. '   ' → logprob: -10.829252243041992
    7. '```' → logprob: -12.079252243041992
    8. '_heap' → logprob: -13.329252243041992
    9. 'he' → logprob: -14.454252243041992
    10. '        
' → logprob: -14.954252243041992

Token 287: '       ' (ID: 309)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.032514095306396484
    2. '       ' → logprob: -3.5325140953063965
    3. ' heap' → logprob: -5.9075140953063965
    4. '(heap' → logprob: -10.657514572143555
    5. '.heap' → logprob: -11.907514572143555
    6. '```' → logprob: -12.032514572143555
    7. '   ' → logprob: -12.532514572143555
    8. '_heap' → logprob: -14.657514572143555
    9. 'he' → logprob: -15.532514572143555
    10. '``' → logprob: -16.532514572143555

Token 288: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -7.896309739408025e-07
    2. ' heap' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.5
    4. 'he' → logprob: -20.5
    5. '.heap' → logprob: -21.375
    6. '(heap' → logprob: -21.75
    7. '```' → logprob: -22.125
    8. '       ' → logprob: -23.75
    9. '_heap' → logprob: -24.125
    10. '`' → logprob: -24.375

Token 289: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9266199160483666e-05
    2. 'p' → logprob: -10.875019073486328
    3. 'push' → logprob: -15.875019073486328
    4. 'qp' → logprob: -16.500019073486328
    5. 'app' → logprob: -16.875019073486328
    6. 'qq' → logprob: -19.000019073486328
    7. 'h' → logprob: -19.000019073486328
    8. 'k' → logprob: -19.125019073486328
    9. 'ap' → logprob: -19.125019073486328
    10. 'pq' → logprob: -19.375019073486328

Token 290: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -5.3120038501219824e-05
    2. '.heap' → logprob: -10.125053405761719
    3. 'he' → logprob: -11.375053405761719
    4. ' he' → logprob: -14.375053405761719
    5. '.' → logprob: -15.000053405761719
    6. '.push' → logprob: -15.125053405761719
    7. 'heap' → logprob: -15.625053405761719
    8. '_he' → logprob: -16.62505340576172
    9. 'q' → logprob: -16.87505340576172
    10. 'push' → logprob: -17.62505340576172

Token 291: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.7120533811976202e-05
    2. 'ap' → logprob: -11.000017166137695
    3. 'pp' → logprob: -14.750017166137695
    4. 'push' → logprob: -18.125017166137695
    5. 'a' → logprob: -18.375017166137695
    6. 'appen' → logprob: -19.000017166137695
    7. ' app' → logprob: -19.875017166137695
    8. 'p' → logprob: -20.250017166137695
    9. 'append' → logprob: -20.375017166137695
    10. 'q' → logprob: -21.000017166137695

Token 292: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.6240566083070007e-06
    2. 'sh' → logprob: -13.875001907348633
    3. 'push' → logprob: -14.500001907348633
    4. 'op' → logprob: -17.250001907348633
    5. 'u' → logprob: -18.125001907348633
    6. 'USH' → logprob: -18.500001907348633
    7. 'us' → logprob: -18.625001907348633
    8. 'h' → logprob: -18.750001907348633
    9. 'q' → logprob: -18.750001907348633
    10. '```' → logprob: -18.875001907348633

Token 293: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.531315314830863e-06
    2. 'A' → logprob: -12.625003814697266
    3. '(' → logprob: -15.625003814697266
    4. '(
' → logprob: -17.000003814697266
    5. ',A' → logprob: -18.875003814697266
    6. ' A' → logprob: -19.125003814697266
    7. '[A' → logprob: -19.375003814697266
    8. '```' → logprob: -19.875003814697266
    9. '   ' → logprob: -20.375003814697266
    10. '	A' → logprob: -20.375003814697266

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05696950480341911
    2. ',new' → logprob: -2.931969404220581
    3. '(new' → logprob: -6.30696964263916
    4. 'new' → logprob: -9.43196964263916
    5. ',A' → logprob: -9.55696964263916
    6. '(' → logprob: -9.80696964263916
    7. 'A' → logprob: -10.43196964263916
    8. ' ,' → logprob: -11.80696964263916
    9. ')' → logprob: -11.93196964263916
    10. ' new' → logprob: -12.18196964263916

Token 295: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0004306692280806601
    2. ' new' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.500431060791016
    4. ')new' → logprob: -19.500431060791016
    5. '	new' → logprob: -19.625431060791016
    6. '       ' → logprob: -19.625431060791016
    7. '(new' → logprob: -20.500431060791016
    8. '```' → logprob: -21.125431060791016
    9. ' ' → logprob: -21.375431060791016
    10. '[new' → logprob: -21.500431060791016

Token 296: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.01491142250597477
    2. 'w' → logprob: -4.514911651611328
    3. 'q' → logprob: -6.014911651611328
    4. 'num' → logprob: -6.889911651611328
    5. 'new' → logprob: -8.264911651611328
    6. 'p' → logprob: -10.264911651611328
    7. 's' → logprob: -10.889911651611328
    8. '_new' → logprob: -11.139911651611328
    9. 'ew' → logprob: -11.639911651611328
    10. 'v' → logprob: -12.264911651611328

Token 297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.282920129597187e-05
    2. ')
' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.500012397766113
    4. ' )' → logprob: -14.875012397766113
    5. '))' → logprob: -15.750012397766113
    6. ')return' → logprob: -16.37501335144043
    7. '       ' → logprob: -17.00001335144043
    8. '<|end|>' → logprob: -17.50001335144043
    9. '`)' → logprob: -17.62501335144043
    10. ')}' → logprob: -18.12501335144043

Token 298: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6380323767662048
    2. '    
' → logprob: -0.8880323767662048
    3. '
' → logprob: -3.0130324363708496
    4. '```' → logprob: -5.13803243637085
    5. 'sum' → logprob: -5.63803243637085
    6. 'print' → logprob: -7.88803243637085
    7. '   
' → logprob: -8.388031959533691
    8. '  
' → logprob: -8.513031959533691
    9. '        
' → logprob: -8.638031959533691
    10. '    
    
' → logprob: -9.013031959533691

Token 299: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05733046680688858
    2. '   ' → logprob: -3.057330369949341
    3. '#' → logprob: -4.80733060836792
    4. 'result' → logprob: -8.432330131530762
    5. 'total' → logprob: -8.807330131530762
    6. ' print' → logprob: -9.557330131530762
    7. '```' → logprob: -9.557330131530762
    8. '    
' → logprob: -11.432330131530762
    9. '#print' → logprob: -12.057330131530762
    10. 'sum' → logprob: -12.432330131530762

Token 300: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009704180411063135
    2. '#' (adapté à ' #') → logprob: -7.375970363616943
    3. 'result' → logprob: -8.375970840454102
    4. '   ' → logprob: -9.375970840454102
    5. 'total' → logprob: -10.625970840454102
    6. ' print' → logprob: -13.375970840454102
    7. '    
' → logprob: -13.625970840454102
    8. '#print' → logprob: -14.000970840454102
    9. 'answer' → logprob: -14.500970840454102
    10. 'ans' → logprob: -16.1259708404541

Token 301: ' Calculate' (ID: 38942)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011938151903450489
    2. '#' → logprob: -5.011938095092773
    3. 'result' → logprob: -5.386938095092773
    4. 'total' → logprob: -7.386938095092773
    5. 'answer' → logprob: -12.261938095092773
    6. 'ans' → logprob: -12.636938095092773
    7. '#print' → logprob: -12.886938095092773
    8. ' print' → logprob: -13.511938095092773
    9. '   ' → logprob: -14.261938095092773
    10. 'sum' → logprob: -14.511938095092773

Token 302: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013283991254866123
    2. '-print' → logprob: -5.013284206390381
    3. 'result' → logprob: -5.638284206390381
    4. '-s' → logprob: -6.763284206390381
    5. 'the' → logprob: -7.638284206390381
    6. ' print' → logprob: -8.138283729553223
    7. '-' → logprob: -8.388283729553223
    8. 'total' → logprob: -8.638283729553223
    9. '#' → logprob: -9.138283729553223
    10. 'sum' → logprob: -9.138283729553223

Token 303: ' sum' (ID: 4215)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11088033765554428
    2. 'result' → logprob: -2.6108803749084473
    3. 'total' → logprob: -3.6108803749084473
    4. 'sum' → logprob: -6.360880374908447
    5. 'answer' → logprob: -6.735880374908447
    6. '-print' → logprob: -7.735880374908447
    7. '-s' → logprob: -7.985880374908447
    8. '-' → logprob: -8.735879898071289
    9. '-total' → logprob: -8.735879898071289
    10. '-result' → logprob: -8.860879898071289

Token 304: ' of' (ID: 328)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03093426674604416
    2. 'result' → logprob: -4.1559343338012695
    3. '=' → logprob: -5.0309343338012695
    4. '   ' → logprob: -5.1559343338012695
    5. ' =' → logprob: -6.1559343338012695
    6. 'answer' → logprob: -8.53093433380127
    7. '#' → logprob: -9.65593433380127
    8. 'ans' → logprob: -10.90593433380127
    9. 'total' → logprob: -11.28093433380127
    10. 'sum' → logprob: -11.28093433380127

Token 305: ' the' (ID: 290)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.07838720828294754
    2. '(-' → logprob: -3.0783872604370117
    3. '-' → logprob: -3.8283872604370117
    4. '-n' → logprob: -5.578387260437012
    5. '-A' → logprob: -6.453387260437012
    6. '-neg' → logprob: -6.828387260437012
    7. '-num' → logprob: -8.203387260437012
    8. '-s' → logprob: -8.453387260437012
    9. '-negative' → logprob: -8.703387260437012
    10. 'A' → logprob: -9.203387260437012

Token 306: ' current' (ID: 2208)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.027581045404076576
    2. '(-' → logprob: -5.027581214904785
    3. '-' → logprob: -5.152581214904785
    4. '-neg' → logprob: -5.152581214904785
    5. '-n' → logprob: -5.277581214904785
    6. '-num' → logprob: -6.777581214904785
    7. '-s' → logprob: -7.027581214904785
    8. '-negative' → logprob: -7.527581214904785
    9. '-values' → logprob: -8.027581214904785
    10. '-elements' → logprob: -8.652581214904785

Token 307: ' state' (ID: 2608)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.07059893012046814
    2. 'A' → logprob: -2.820598840713501
    3. '(-' → logprob: -6.19559907913208
    4. 'numbers' → logprob: -6.69559907913208
    5. 'values' → logprob: -6.82059907913208
    6. 'nums' → logprob: -6.94559907913208
    7. 'elements' → logprob: -7.07059907913208
    8. '([-' → logprob: -7.57059907913208
    9. 'neg' → logprob: -7.82059907913208
    10. '#' → logprob: -8.070598602294922

Token 308: ' of' (ID: 328)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.37891578674316406
    2. 'result' → logprob: -1.878915786743164
    3. 'A' → logprob: -2.128915786743164
    4. ' =' → logprob: -4.003915786743164
    5. 'of' → logprob: -4.628915786743164
    6. '=' → logprob: -5.503915786743164
    7. ' of' → logprob: -5.753915786743164
    8. '#' → logprob: -6.003915786743164
    9. '   ' → logprob: -6.503915786743164
    10. 'ans' → logprob: -6.628915786743164

Token 309: ' the' (ID: 290)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0012754731578752398
    2. '[-' → logprob: -7.001275539398193
    3. 'the' → logprob: -8.001275062561035
    4. ' A' → logprob: -10.876275062561035
    5. 'heap' → logprob: -12.251275062561035
    6. '(-' → logprob: -13.376275062561035
    7. ' the' → logprob: -13.751275062561035
    8. ' [-' → logprob: -13.876275062561035
    9. '-A' → logprob: -14.876275062561035
    10. '[' → logprob: -15.251275062561035

Token 310: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0630275160074234
    2. 'A' → logprob: -2.8130276203155518
    3. 'list' → logprob: -7.063027381896973
    4. '[-' → logprob: -9.563027381896973
    5. ' heap' → logprob: -10.313027381896973
    6. 'queue' → logprob: -10.563027381896973
    7. 'priority' → logprob: -10.688027381896973
    8. 'array' → logprob: -11.063027381896973
    9. 'elements' → logprob: -11.438027381896973
    10. '[A' → logprob: -11.438027381896973

Token 311: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001334286411292851
    2. 'result' → logprob: -6.751334190368652
    3. 'total' → logprob: -9.376334190368652
    4. '   ' → logprob: -10.251334190368652
    5. 'answer' → logprob: -10.376334190368652
    6. ' print' → logprob: -12.001334190368652
    7. 'ans' → logprob: -12.751334190368652
    8. 'sum' → logprob: -13.001334190368652
    9. 's' → logprob: -15.126334190368652
    10. '```' → logprob: -15.251334190368652

Token 312: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004685018677264452
    2. 'result' → logprob: -5.754684925079346
    3. '   ' → logprob: -7.004684925079346
    4. 'total' → logprob: -7.504684925079346
    5. ' print' → logprob: -10.629685401916504
    6. 'answer' → logprob: -11.004685401916504
    7. 'ans' → logprob: -12.879685401916504
    8. '    
' → logprob: -13.504685401916504
    9. '
' → logprob: -13.879685401916504
    10. '```' → logprob: -14.004685401916504

Token 313: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00853088777512312
    2. 'result' → logprob: -5.258531093597412
    3. 'total' → logprob: -5.758531093597412
    4. '   ' → logprob: -9.383530616760254
    5. 'answer' → logprob: -10.883530616760254
    6. 'ans' → logprob: -11.008530616760254
    7. ' print' → logprob: -11.508530616760254
    8. 'sum' → logprob: -13.133530616760254
    9. '    
' → logprob: -13.633530616760254
    10. '#' (adapté à ' #') → logprob: -14.133530616760254

Token 314: ' Neg' (ID: 22837)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009495983831584454
    2. 'result' → logprob: -4.884496212005615
    3. 'total' → logprob: -6.384496212005615
    4. 'answer' → logprob: -9.509495735168457
    5. 'ans' → logprob: -9.759495735168457
    6. ' print' → logprob: -10.259495735168457
    7. '#' → logprob: -11.259495735168457
    8. '   ' → logprob: -11.509495735168457
    9. 'sum' → logprob: -12.634495735168457
    10. 'res' → logprob: -13.509495735168457

Token 315: 'ate' (ID: 379)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.403674840927124
    2. 'sum' → logprob: -1.903674840927124
    3. 'ate' → logprob: -2.403674840927124
    4. 'ated' → logprob: -3.028674840927124
    5. '_sum' → logprob: -3.778674840927124
    6. 'A' → logprob: -4.653675079345703
    7. 'ative' → logprob: -5.278675079345703
    8. '#' → logprob: -5.903675079345703
    9. 's' → logprob: -6.778675079345703
    10. 'result' → logprob: -7.153675079345703

Token 316: ' the' (ID: 290)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.41345733404159546
    2. 'and' → logprob: -1.7884573936462402
    3. 'the' → logprob: -2.1634573936462402
    4. 'each' → logprob: -4.16345739364624
    5. 'all' → logprob: -4.41345739364624
    6. ' and' → logprob: -4.91345739364624
    7. 'A' → logprob: -5.28845739364624
    8. '(sum' → logprob: -5.53845739364624
    9. 'values' → logprob: -6.03845739364624
    10. ' the' → logprob: -6.28845739364624

Token 317: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07025517523288727
    2. 'values' → logprob: -2.9452552795410156
    3. 'numbers' → logprob: -4.820255279541016
    4. 'num' → logprob: -5.945255279541016
    5. 'value' → logprob: -6.195255279541016
    6. 'elements' → logprob: -6.820255279541016
    7. 'nums' → logprob: -7.695255279541016
    8. ' sum' → logprob: -8.445255279541016
    9. ' values' → logprob: -8.695255279541016
    10. 'val' → logprob: -8.695255279541016

Token 318: ' to' (ID: 316)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02801617421209812
    2. 'result' → logprob: -4.153016090393066
    3. '   ' → logprob: -5.028016090393066
    4. 'sum' → logprob: -6.028016090393066
    5. '(' → logprob: -6.778016090393066
    6. '(sum' → logprob: -7.528016090393066
    7. '(print' → logprob: -8.653016090393066
    8. 'A' → logprob: -9.028016090393066
    9. 'total' → logprob: -9.028016090393066
    10. '(-' → logprob: -9.278016090393066

Token 319: ' revert' (ID: 34674)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008137972326949239
    2. ' print' → logprob: -8.375813484191895
    3. '-print' → logprob: -8.375813484191895
    4. 'get' → logprob: -8.625813484191895
    5. '   ' → logprob: -9.000813484191895
    6. '-' → logprob: -10.500813484191895
    7. '-get' → logprob: -11.875813484191895
    8. 'return' → logprob: -12.375813484191895
    9. ' get' → logprob: -13.000813484191895
    10. '_print' → logprob: -13.250813484191895

Token 320: ' back' (ID: 1602)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.1948081254959106
    2. 'the' → logprob: -1.3198081254959106
    3. '   ' → logprob: -1.8198081254959106
    4. ' the' → logprob: -2.944808006286621
    5. '-s' → logprob: -2.944808006286621
    6. 'it' → logprob: -3.069808006286621
    7. ' it' → logprob: -3.444808006286621
    8. '-' → logprob: -3.569808006286621
    9. 'to' → logprob: -4.069808006286621
    10. '-neg' → logprob: -4.569808006286621

Token 321: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07493853569030762
    2. 'sum' → logprob: -3.4499385356903076
    3. ' to' → logprob: -4.074938774108887
    4. 'to' → logprob: -4.074938774108887
    5. 'return' → logprob: -5.574938774108887
    6. 'print' → logprob: -6.574938774108887
    7. '(-' → logprob: -8.824938774108887
    8. ' sum' → logprob: -8.824938774108887
    9. '(sum' → logprob: -8.824938774108887
    10. '-' → logprob: -8.949938774108887

Token 322: ' the' (ID: 290)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positive' → logprob: -0.048698533326387405
    2. '-positive' → logprob: -3.6736984252929688
    3. ' positive' → logprob: -4.048698425292969
    4. 'the' → logprob: -5.923698425292969
    5. 'negative' → logprob: -6.923698425292969
    6. 'a' → logprob: -7.423698425292969
    7. 'original' → logprob: -9.173698425292969
    8. '-' → logprob: -9.298698425292969
    9. ' the' → logprob: -9.798698425292969
    10. '-negative' → logprob: -9.923698425292969

Token 323: ' original' (ID: 4756)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positive' → logprob: -0.028415074571967125
    2. ' positive' → logprob: -4.028415203094482
    3. 'original' → logprob: -4.903415203094482
    4. 'actual' → logprob: -6.528415203094482
    5. 'negative' → logprob: -7.278415203094482
    6. '-positive' → logprob: -7.903415203094482
    7. ' original' → logprob: -9.153414726257324
    8. 'correct' → logprob: -9.403414726257324
    9. 'real' → logprob: -10.528414726257324
    10. 'normal' → logprob: -11.153414726257324

Token 324: ' sign' (ID: 2232)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -1.0685101747512817
    2. ' values' → logprob: -1.3185101747512817
    3. 'sum' → logprob: -1.8185101747512817
    4. 'value' → logprob: -2.568510055541992
    5. ' sum' → logprob: -3.193510055541992
    6. 'sign' → logprob: -3.318510055541992
    7. ' value' → logprob: -3.443510055541992
    8. ' sign' → logprob: -3.943510055541992
    9. 'numbers' → logprob: -5.193510055541992
    10. ' numbers' → logprob: -5.318510055541992

Token 325: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0067568132653832436
    2. 'print' → logprob: -5.006756782531738
    3. '
' → logprob: -11.006756782531738
    4. ' print' → logprob: -11.881756782531738
    5. ')' → logprob: -12.131756782531738
    6. ',' → logprob: -12.131756782531738
    7. '    
' → logprob: -13.131756782531738
    8. 'return' → logprob: -13.256756782531738
    9. 'sum' → logprob: -13.756756782531738
    10. '```' → logprob: -15.256756782531738

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933174133300781
    2. 'print' → logprob: -0.6933174133300781
    3. '```' → logprob: -8.943317413330078
    4. ' print' → logprob: -10.693317413330078
    5. 'total' → logprob: -12.193317413330078
    6. 'result' → logprob: -12.443317413330078
    7. '    
' → logprob: -12.443317413330078
    8. '`' → logprob: -13.568317413330078
    9. '
' → logprob: -13.943317413330078
    10. 'return' → logprob: -14.318317413330078

Token 327: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017684244085103273
    2. '   ' → logprob: -8.875176429748535
    3. 'total' → logprob: -10.875176429748535
    4. 'result' (adapté à ' result') → logprob: -11.625176429748535
    5. ' print' → logprob: -12.125176429748535
    6. '```' → logprob: -12.875176429748535
    7. '
' → logprob: -15.000176429748535
    8. 'return' → logprob: -15.250176429748535
    9. '    
' → logprob: -15.250176429748535
    10. '`' → logprob: -15.500176429748535

Token 328: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858771339058876
    2. ' =' → logprob: -3.0485877990722656
    3. '＝' → logprob: -15.548587799072266
    4. '   ' → logprob: -16.048587799072266
    5. '=int' → logprob: -17.673587799072266
    6. '=

' → logprob: -17.673587799072266
    7. '=sum' → logprob: -18.048587799072266
    8. '=
' → logprob: -18.298587799072266
    9. ' =
' → logprob: -18.548587799072266
    10. ')' → logprob: -18.923587799072266

Token 329: ' sum' (ID: 4215)
  Prédit: '-s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.18280501663684845
    2. '-' → logprob: -1.932805061340332
    3. ' -' → logprob: -3.807805061340332
    4. '-S' → logprob: -10.932805061340332
    5. '-score' → logprob: -10.932805061340332
    6. '   ' → logprob: -11.182805061340332
    7. '-neg' → logprob: -11.557805061340332
    8. '-n' → logprob: -11.557805061340332
    9. '-num' → logprob: -12.432805061340332
    10. '-summary' → logprob: -12.432805061340332

Token 330: '(A' (ID: 10706)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.38487231731414795
    2. '([-' → logprob: -1.509872317314148
    3. '(A' → logprob: -2.5098724365234375
    4. '(map' → logprob: -4.8848724365234375
    5. '(x' → logprob: -5.3848724365234375
    6. '((-' → logprob: -6.0098724365234375
    7. '(num' → logprob: -6.8848724365234375
    8. '([' → logprob: -7.1348724365234375
    9. 'A' → logprob: -7.6348724365234375
    10. '(a' → logprob: -8.759872436523438

Token 331: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024865958839654922
    2. ')*' → logprob: -6.002486705780029
    3. '*(-' → logprob: -12.252486228942871
    4. ')
' → logprob: -12.752486228942871
    5. '*' → logprob: -13.502486228942871
    6. '   ' → logprob: -14.252486228942871
    7. ' )' → logprob: -14.377486228942871
    8. ' *' → logprob: -15.752486228942871
    9. '*-' → logprob: -15.877486228942871
    10. '*)' → logprob: -16.002487182617188

Token 332: ' *' (ID: 425)
  Prédit: '*(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(-' → logprob: -0.21431346237659454
    2. '*-' → logprob: -2.089313507080078
    3. ' *' → logprob: -3.339313507080078
    4. '
' → logprob: -3.964313507080078
    5. '*' → logprob: -4.839313507080078
    6. '   ' → logprob: -5.214313507080078
    7. 'print' → logprob: -7.464313507080078
    8. '<|end|>' → logprob: -8.089313507080078
    9. ' 
' → logprob: -9.839313507080078
    10. '```' → logprob: -9.964313507080078

Token 333: ' (-' (ID: 21382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006402421277016401
    2. '(-' → logprob: -7.375640392303467
    3. ' -' → logprob: -11.250639915466309
    4. '(' → logprob: -14.625639915466309
    5. '−' → logprob: -16.000640869140625
    6. '   ' → logprob: -16.625640869140625
    7. ' (-' → logprob: -18.000640869140625
    8. '-(' → logprob: -18.000640869140625
    9. '  ' → logprob: -18.500640869140625
    10. '`' → logprob: -18.625640869140625

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -17.5
    4. ')' → logprob: -18.0
    5. '１' → logprob: -20.875
    6. '  ' → logprob: -21.0
    7. '```' → logprob: -21.375
    8. '۱' → logprob: -22.5
    9. '       ' → logprob: -23.125
    10. '-' → logprob: -23.1875

Token 335: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067201098427176476
    2. ')
' → logprob: -5.006720066070557
    3. '   ' → logprob: -12.506720542907715
    4. ')
' → logprob: -14.756720542907715
    5. ')

' → logprob: -15.006720542907715
    6. 'print' → logprob: -15.881720542907715
    7. ' )' → logprob: -16.0067195892334
    8. ')`' → logprob: -17.8817195892334
    9. '),' → logprob: -18.1317195892334
    10. '))' → logprob: -18.5067195892334

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1288890391588211
    2. 'print' → logprob: -2.1288890838623047
    3. '    
' → logprob: -6.753889083862305
    4. '```' → logprob: -7.253889083862305
    5. '
' → logprob: -9.628889083862305
    6. ' print' → logprob: -11.628889083862305
    7. '  
' → logprob: -12.628889083862305
    8. '	print' → logprob: -12.878889083862305
    9. '<|end|>' → logprob: -12.878889083862305
    10. '``' → logprob: -14.378889083862305

Token 337: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.38734206557273865
    2. '   ' → logprob: -1.137342095375061
    3. '```' → logprob: -8.38734245300293
    4. '
' → logprob: -9.01234245300293
    5. '    
' → logprob: -9.26234245300293
    6. ' print' → logprob: -10.63734245300293
    7. '	print' → logprob: -13.63734245300293
    8. '<|end|>' → logprob: -14.88734245300293
    9. '  
' → logprob: -15.26234245300293
    10. 'return' → logprob: -16.01234245300293

Token 338: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0009243228123523295
    2. '(' → logprob: -7.000924110412598
    3. 'result' → logprob: -11.375924110412598
    4. '()' → logprob: -13.875924110412598
    5. '(results' → logprob: -15.875924110412598
    6. '(res' → logprob: -16.125925064086914
    7. '(
' → logprob: -16.250925064086914
    8. ' (' → logprob: -16.625925064086914
    9. '(resultado' → logprob: -18.250925064086914
    10. '(Result' → logprob: -19.000925064086914

Token 339: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -17.0
    4. '())' → logprob: -18.375
    5. '()' → logprob: -18.875
    6. ')`' → logprob: -19.625
    7. '))' → logprob: -19.875
    8. '),' → logprob: -20.125
    9. '')' → logprob: -20.375
    10. ')}' → logprob: -20.5

Token 340: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2876656651496887
    2. '<|end|>' → logprob: -1.537665605545044
    3. '#' → logprob: -4.412665843963623
    4. '```' → logprob: -4.537665843963623
    5. 'main' → logprob: -5.162665843963623
    6. '
' → logprob: -5.912665843963623
    7. ' if' → logprob: -6.162665843963623
    8. '<|end|>' → logprob: -7.162665843963623
    9. ')' → logprob: -8.287665367126465
    10. '\n' → logprob: -8.787665367126465

Token 341: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.038815706968307495
    2. '__' → logprob: -3.28881573677063
    3. '_' → logprob: -7.663815498352051
    4. ' ' → logprob: -8.78881549835205
    5. '_name' → logprob: -9.41381549835205
    6. ' _' → logprob: -10.03881549835205
    7. '___' → logprob: -11.78881549835205
    8. ' ' → logprob: -12.41381549835205
    9. 'name' → logprob: -12.66381549835205
    10. '_main' → logprob: -13.41381549835205

Token 342: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13734474778175354
    2. ' ==' → logprob: -2.3873448371887207
    3. '==' → logprob: -3.3873448371887207
    4. ' __' → logprob: -6.637344837188721
    5. '=="' → logprob: -7.512344837188721
    6. 'name' → logprob: -7.762344837188721
    7. '.__' → logprob: -8.387344360351562
    8. '=='' → logprob: -9.887344360351562
    9. '__.__' → logprob: -10.637344360351562
    10. ' =="' → logprob: -11.637344360351562

Token 343: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.125210297293961e-05
    2. '==' → logprob: -9.750081062316895
    3. '=="' → logprob: -11.375081062316895
    4. '__.__' → logprob: -11.500081062316895
    5. ' ==' → logprob: -15.250081062316895
    6. '__["' → logprob: -15.375081062316895
    7. '___' → logprob: -15.625081062316895
    8. '=='' → logprob: -15.750081062316895
    9. '__.' → logprob: -16.00008201599121
    10. '__('' → logprob: -16.12508201599121

Token 344: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2086072713136673
    2. '==' → logprob: -1.7086073160171509
    3. ' ==' → logprob: -5.333607196807861
    4. '=="' → logprob: -6.083607196807861
    5. '=='' → logprob: -9.95860767364502
    6. '=' → logprob: -12.70860767364502
    7. '__.__' → logprob: -12.95860767364502
    8. '"' → logprob: -13.33360767364502
    9. '===' → logprob: -13.33360767364502
    10. '==
' → logprob: -13.70860767364502

Token 345: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004087185952812433
    2. ''' → logprob: -5.504086971282959
    3. '__' → logprob: -11.879087448120117
    4. ' "__' → logprob: -13.254087448120117
    5. '"name' → logprob: -18.254087448120117
    6. 'main' → logprob: -18.879087448120117
    7. ' '__' → logprob: -18.879087448120117
    8. '"user' → logprob: -19.004087448120117
    9. '"class' → logprob: -19.129087448120117
    10. ''"' → logprob: -19.129087448120117

Token 346: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. '__' → logprob: -16.5
    3. 'name' → logprob: -18.125
    4. ' main' → logprob: -18.375
    5. '"' → logprob: -19.375
    6. '_main' → logprob: -19.875
    7. '	main' → logprob: -21.75
    8. '-main' → logprob: -21.875
    9. 'built' → logprob: -22.375
    10. ''' → logprob: -22.875

Token 347: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.01422179862856865
    2. '__' → logprob: -4.264221668243408
    3. '__':
' → logprob: -9.764222145080566
    4. '__["' → logprob: -15.014222145080566
    5. '__:' → logprob: -15.139222145080566
    6. '"' → logprob: -16.01422119140625
    7. '_' → logprob: -17.13922119140625
    8. '__("' → logprob: -17.13922119140625
    9. '__.' → logprob: -17.26422119140625
    10. '__.__' → logprob: -17.26422119140625

Token 348: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04490694776177406
    2. ' main' → logprob: -3.2949068546295166
    3. '   ' → logprob: -5.294907093048096
    4. '	main' → logprob: -6.419907093048096
    5. '_main' → logprob: -9.294906616210938
    6. '__' → logprob: -9.544906616210938
    7. '    
' → logprob: -11.669906616210938
    8. '"' → logprob: -12.294906616210938
    9. '(main' → logprob: -12.294906616210938
    10. '_MAIN' → logprob: -12.794906616210938

Token 349: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.547789674485102e-05
    2. ' main' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.125036239624023
    4. '	main' → logprob: -17.750036239624023
    5. '_main' → logprob: -22.875036239624023
    6. '.main' → logprob: -23.250036239624023
    7. '(main' → logprob: -23.500036239624023
    8. 'Main' → logprob: -24.000036239624023
    9. ' ' → logprob: -25.625036239624023
    10. '  ' → logprob: -25.750036239624023

Token 350: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04729973524808884
    2. '<|end|>' → logprob: -3.42229962348938
    3. '(' → logprob: -4.797299861907959
    4. '()
' → logprob: -6.672299861907959
    5. '```' → logprob: -6.922299861907959
    6. '
' → logprob: -7.047299861907959
    7. ')' → logprob: -7.047299861907959
    8. ':' → logprob: -8.1722993850708
    9. '#' → logprob: -8.2972993850708
    10. '<|end|>' → logprob: -8.9222993850708


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 348
Tokens correctement prédits (1ère position, stricte): 105
Tokens correctement prédits (1ère position, avec adaptation): 109
Tokens correctement prédits (top 10): 242
Précision stricte (1ère position): 30.17%
Précision adaptée (1ère position): 31.32%
Précision (top 10): 69.54%
================================================================================
