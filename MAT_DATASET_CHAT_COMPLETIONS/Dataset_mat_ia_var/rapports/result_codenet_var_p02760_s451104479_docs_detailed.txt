================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:24:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def read_bingo_grid():
    """
    Lit une grille 3x3 pour le bingo à partir de l'entrée standard.
    Chaque ligne doit contenir trois entiers séparés par des espaces.

    Returns:
        list[list[int]]: La grille 3x3 représentée sous forme de liste de listes d'entiers.
    """
    return [list(map(int, input().split())) for _ in range(3)]

def read_drawn_numbers():
    """
    Lit le nombre total de numéros tirés, puis lit chacun des numéros tirés.

    Returns:
        list[int]: Liste des numéros tirés.
    """
    N = int(input())
    return [int(input()) for _ in range(N)]

def mark_drawn_numbers(bingo_grid, drawn_numbers):
    """
    Marque les cases de la grille dont la valeur correspond à un numéro tiré.

    Args:
        bingo_grid (list[list[int]]): Grille du bingo 3x3 avec les valeurs initiales.
        drawn_numbers (list[int]): Liste des numéros tirés.

    Returns:
        list[list[bool]]: Grille 3x3 de valeurs booléennes indiquant les cases marquées.
    """
    marked = [[False for _ in range(3)] for _ in range(3)]
    for i in range(3):
        for j in range(3):
            if bingo_grid[i][j] in drawn_numbers:
                marked[i][j] = True
    return marked

def check_bingo(marked):
    """
    Vérifie si la grille marquée contient une ligne, une colonne ou une diagonale complète.

    Args:
        marked (list[list[bool]]): Grille 3x3 de valeurs booléennes indiquant les cases marquées.

    Returns:
        bool: True si une ligne, une colonne ou une diagonale est complètement marquée, False sinon.
    """
    # Vérification des lignes et des colonnes
    for i in range(3):
        # Vérifie la i-ème colonne
        if marked[0][i] and marked[1][i] and marked[2][i]:
            return True
        # Vérifie la i-ème ligne
        if marked[i][0] and marked[i][1] and marked[i][2]:
            return True

    # Vérifie la diagonale principale
    if marked[0][0] and marked[1][1] and marked[2][2]:
        return True

    # Vérifie la diagonale secondaire
    if marked[0][2] and marked[1][1] and marked[2][0]:
        return True

    return False

def main():
    """
    Fonction principale qui gère la logique du jeu de Bingo:
    - Lecture de la grille
    - Lecture des numéros tirés
    - Marquage des numéros dans la grille
    - Vérification de l'état de victoire
    Affiche "Yes" si une ligne, colonne ou diagonale complète est marquée, sinon "No".
    """
    bingo_grid = read_bingo_grid()
    drawn_numbers = read_drawn_numbers()
    marked = mark_drawn_numbers(bingo_grid, drawn_numbers)
    if check_bingo(marked):
        print('Yes')
    else:
        print('No')

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023278674110770226
    2. ' main' → logprob: -5.148278713226318
    3. ' process' → logprob: -5.898278713226318
    4. ' space' → logprob: -6.023278713226318
    5. ' sys' → logprob: -6.273278713226318
    6. ' ' → logprob: -6.273278713226318
    7. '  ' → logprob: -7.023278713226318
    8. ' a' → logprob: -7.398278713226318
    9. ' function' → logprob: -7.398278713226318
    10. ' def' → logprob: -7.523278713226318

Token 5: '_b' (ID: 1535)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5790096521377563
    2. '_' → logprob: -0.8290096521377563
    3. '_line' → logprob: -6.704009532928467
    4. ' (' → logprob: -6.829009532928467
    5. '_file' → logprob: -8.954010009765625
    6. '```' → logprob: -9.329010009765625
    7. '_input' → logprob: -9.454010009765625
    8. '_data' → logprob: -9.454010009765625
    9. '("""' → logprob: -10.329010009765625
    10. '():' → logprob: -10.829010009765625

Token 6: 'ingo' (ID: 14878)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7904325127601624
    2. 'uffer' → logprob: -1.0404324531555176
    3. 'uf' → logprob: -2.5404324531555176
    4. 'in' → logprob: -2.6654324531555176
    5. 'inary' → logprob: -3.7904324531555176
    6. 'a' → logprob: -5.290432453155518
    7. 'u' → logprob: -5.915432453155518
    8. 'i' → logprob: -5.915432453155518
    9. 'lock' → logprob: -6.165432453155518
    10. 'atch' → logprob: -6.290432453155518

Token 7: '_grid' (ID: 34614)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7265431880950928
    2. '(' → logprob: -0.9765431880950928
    3. '_card' → logprob: -2.3515431880950928
    4. '_cards' → logprob: -3.9765431880950928
    5. '_game' → logprob: -4.851543426513672
    6. '_line' → logprob: -5.601543426513672
    7. '(_' → logprob: -5.976543426513672
    8. '_board' → logprob: -6.101543426513672
    9. '_input' → logprob: -6.601543426513672
    10. '():' → logprob: -7.101543426513672

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0069838957861065865
    2. '():' → logprob: -5.631983757019043
    3. '(:' → logprob: -6.506983757019043
    4. '_' → logprob: -6.631983757019043
    5. ':' → logprob: -8.381983757019043
    6. '):' → logprob: -9.381983757019043
    7. '```' → logprob: -9.881983757019043
    8. '(":' → logprob: -10.631983757019043
    9. '(_:' → logprob: -10.756983757019043
    10. ' (' → logprob: -10.881983757019043

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2350088357925415
    2. '():' → logprob: -2.235008716583252
    3. '   ' → logprob: -2.735008716583252
    4. '(' → logprob: -3.735008716583252
    5. '```' → logprob: -4.860008716583252
    6. '\' → logprob: -6.735008716583252
    7. '(
' → logprob: -7.485008716583252
    8. '[' → logprob: -7.610008716583252
    9. '    
' → logprob: -7.735008716583252
    10. ':
' → logprob: -7.735008716583252

Token 10: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1744324117898941
    2. 'grid' → logprob: -2.2994325160980225
    3. ' grid' → logprob: -3.1744325160980225
    4. ' ' → logprob: -5.424432277679443
    5. 'return' → logprob: -5.674432277679443
    6. '    ' → logprob: -5.674432277679443
    7. '[' → logprob: -6.299432277679443
    8. '```' → logprob: -6.549432277679443
    9. 'b' → logprob: -6.674432277679443
    10. '\' → logprob: -7.424432277679443

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7259841561317444
    2. 'Reads' → logprob: -0.9759841561317444
    3. ' Reads' → logprob: -2.7259840965270996
    4. ' reads' → logprob: -3.2259840965270996
    5. '"""' → logprob: -4.2259840965271
    6. 'Read' → logprob: -4.3509840965271
    7. 'Returns' → logprob: -5.8509840965271
    8. 'reads' → logprob: -6.9759840965271
    9. ' Read' → logprob: -7.6009840965271
    10. ' ' → logprob: -8.600984573364258

Token 12: ' Lit' (ID: 45595)
  Prédit: 'Reads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Reads' → logprob: -0.9001618027687073
    2. '   ' → logprob: -1.0251617431640625
    3. '"""' → logprob: -2.6501617431640625
    4. ' reads' → logprob: -2.9001617431640625
    5. ' Reads' → logprob: -3.5251617431640625
    6. 'Returns' → logprob: -4.1501617431640625
    7. ' """' → logprob: -4.1501617431640625
    8. 'Read' → logprob: -4.5251617431640625
    9. ' ' → logprob: -4.6501617431640625
    10. 'reads' → logprob: -5.2751617431640625

Token 13: ' une' (ID: 2463)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2656012773513794
    2. 'er' → logprob: -1.5156012773513794
    3. '   ' → logprob: -5.14060115814209
    4. 'es' → logprob: -6.01560115814209
    5. ' ' → logprob: -7.39060115814209
    6. 'ère' → logprob: -7.51560115814209
    7. 'lines' → logprob: -7.76560115814209
    8. 's' → logprob: -7.89060115814209
    9. '()' → logprob: -8.01560115814209
    10. 'era' → logprob: -8.14060115814209

Token 14: ' grille' (ID: 99153)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.536987841129303
    2. 'la' → logprob: -1.6619877815246582
    3. 'une' → logprob: -3.286987781524658
    4. ' ' → logprob: -3.411987781524658
    5. '5' → logprob: -3.536987781524658
    6. 'l' → logprob: -3.536987781524658
    7. 'le' → logprob: -3.911987781524658
    8. 'les' → logprob: -4.536987781524658
    9. '12' → logprob: -4.661987781524658
    10. ' les' → logprob: -4.786987781524658

Token 15: ' ' (ID: 220)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.22320376336574554
    2. ' complète' → logprob: -2.223203659057617
    3. ' ' → logprob: -3.348203659057617
    4. '   ' → logprob: -3.848203659057617
    5. 'de' → logprob: -5.098203659057617
    6. '\n' → logprob: -5.223203659057617
    7. 'b' → logprob: -5.598203659057617
    8. '\' → logprob: -5.723203659057617
    9. ',' → logprob: -5.723203659057617
    10. 'n' → logprob: -6.473203659057617

Token 16: '3' (ID: 18)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.19595663249492645
    2. 'de' → logprob: -2.0709567070007324
    3. 'b' → logprob: -3.5709567070007324
    4. ' ' → logprob: -4.320956707000732
    5. 'B' → logprob: -5.695956707000732
    6. '\n' → logprob: -6.570956707000732
    7. '\' → logprob: -6.945956707000732
    8. '   ' → logprob: -7.320956707000732
    9. ' B' → logprob: -7.570956707000732
    10. 'n' → logprob: -7.570956707000732

Token 17: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.013838598504662514
    2. ' x' → logprob: -4.388838768005371
    3. '0' → logprob: -7.513838768005371
    4. ' ' → logprob: -7.888838768005371
    5. '*' → logprob: -9.388838768005371
    6. '6' → logprob: -9.638838768005371
    7. '3' → logprob: -10.263838768005371
    8. 'par' → logprob: -10.263838768005371
    9. '7' → logprob: -10.763838768005371
    10. ' par' → logprob: -10.763838768005371

Token 18: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7965965867042542
    2. ' ' → logprob: -0.7965965867042542
    3. '```' → logprob: -3.5465965270996094
    4. '   ' → logprob: -4.296596527099609
    5. ' ```' → logprob: -4.546596527099609
    6. 'par' → logprob: -4.796596527099609
    7. 'x' → logprob: -4.921596527099609
    8. ' ' → logprob: -5.046596527099609
    9. '*' → logprob: -5.546596527099609
    10. ' par' → logprob: -5.921596527099609

Token 19: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6088007688522339
    2. ' ' → logprob: -1.4838007688522339
    3. '\n' → logprob: -2.8588008880615234
    4. '\' → logprob: -2.9838008880615234
    5. ' 
' → logprob: -3.1088008880615234
    6. '  
' → logprob: -3.9838008880615234
    7. ' de' → logprob: -4.233800888061523
    8. '
' → logprob: -4.733800888061523
    9. '   
' → logprob: -5.733800888061523
    10. '    
' → logprob: -5.858800888061523

Token 20: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6505491733551025
    2. 'b' → logprob: -1.6505491733551025
    3. ' ' → logprob: -2.4005491733551025
    4. ' une' → logprob: -3.0255491733551025
    5. ' un' → logprob: -3.2755491733551025
    6. ' bingo' → logprob: -3.5255491733551025
    7. ' jouer' → logprob: -3.7755491733551025
    8. '_' → logprob: -4.275548934936523
    9. ' ' → logprob: -4.400548934936523
    10. ' la' → logprob: -4.400548934936523

Token 21: ' bingo' (ID: 65141)
  Prédit: ' jeu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jeu' → logprob: -0.935522735118866
    2. ' bingo' → logprob: -1.0605227947235107
    3. 'b' → logprob: -1.5605227947235107
    4. 'jeu' → logprob: -4.060522556304932
    5. 'B' → logprob: -4.685522556304932
    6. ' joueur' → logprob: -5.435522556304932
    7. ' code' → logprob: -5.560522556304932
    8. ' b' → logprob: -5.685522556304932
    9. 'je' → logprob: -6.060522556304932
    10. ' B' → logprob: -6.685522556304932

Token 22: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05081738904118538
    2. '
' → logprob: -4.550817489624023
    3. ' ' → logprob: -4.550817489624023
    4. '    ' → logprob: -4.925817489624023
    5. '.' → logprob: -5.800817489624023
    6. '\n' → logprob: -6.050817489624023
    7. ',' → logprob: -6.300817489624023
    8. '"""
' → logprob: -6.300817489624023
    9. ' 
' → logprob: -6.425817489624023
    10. ' de' → logprob: -6.425817489624023

Token 23: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.003564904211089015
    2. ' remplir' → logprob: -7.253564834594727
    3. 'from' → logprob: -7.878564834594727
    4. ' l' → logprob: -8.128564834594727
    5. ' compléter' → logprob: -8.378564834594727
    6. 'stdin' → logprob: -8.378564834594727
    7. ' stdin' → logprob: -8.503564834594727
    8. ' jouer' → logprob: -8.503564834594727
    9. ' chaque' → logprob: -8.878564834594727
    10. 'part' → logprob: -9.003564834594727

Token 24: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7175331711769104
    2. ' du' → logprob: -0.7175331711769104
    3. ' de' → logprob: -3.9675331115722656
    4. '   ' → logprob: -6.217533111572266
    5. ' des' → logprob: -6.592533111572266
    6. 'du' → logprob: -7.092533111572266
    7. 'd' → logprob: -7.342533111572266
    8. '    ' → logprob: -9.217533111572266
    9. ' ' → logprob: -9.342533111572266
    10. 'de' → logprob: -9.717533111572266

Token 25: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7001430988311768
    2. ' l' → logprob: -1.5751430988311768
    3. ' stdin' → logprob: -2.2001430988311768
    4. ' sys' → logprob: -2.8251430988311768
    5. 'sys' → logprob: -2.8251430988311768
    6. 'stdin' → logprob: -3.9501430988311768
    7. ' standard' → logprob: -4.075142860412598
    8. ' input' → logprob: -4.325142860412598
    9. 'la' → logprob: -5.575142860412598
    10. ' la' → logprob: -5.700142860412598

Token 26: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8802112340927124
    2. ''entrée' → logprob: -1.0052112340927124
    3. 'a' → logprob: -1.8802112340927124
    4. 'e' → logprob: -3.255211353302002
    5. 'input' → logprob: -5.380211353302002
    6. 'u' → logprob: -5.505211353302002
    7. ''utilisateur' → logprob: -5.880211353302002
    8. ''''' → logprob: -6.005211353302002
    9. ''import' → logprob: -6.255211353302002
    10. ''espace' → logprob: -6.255211353302002

Token 27: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.6526036262512207
    2. '   ' → logprob: -2.4026036262512207
    3. '.' → logprob: -2.5276036262512207
    4. 'standard' → logprob: -2.9026036262512207
    5. '```' → logprob: -3.0276036262512207
    6. '\n' → logprob: -3.2776036262512207
    7. ' de' → logprob: -3.4026036262512207
    8. '"""
' → logprob: -3.7776036262512207
    9. '`' → logprob: -3.9026036262512207
    10. ',' → logprob: -3.9026036262512207

Token 28: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014721262268722057
    2. '    
' → logprob: -7.876471996307373
    3. '.' → logprob: -8.251472473144531
    4. '\n' → logprob: -8.626472473144531
    5. '    ' → logprob: -9.001472473144531
    6. '
' → logprob: -9.376472473144531
    7. '"""' → logprob: -9.376472473144531
    8. ',' → logprob: -9.751472473144531
    9. '   
' → logprob: -9.876472473144531
    10. '  ' → logprob: -10.126472473144531

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002632430987432599
    2. '"""' → logprob: -9.125263214111328
    3. '    ' → logprob: -9.625263214111328
    4. '    
' → logprob: -10.875263214111328
    5. '```' → logprob: -11.000263214111328
    6. '  ' → logprob: -11.000263214111328
    7. '   
' → logprob: -11.875263214111328
    8. '       ' → logprob: -12.250263214111328
    9. '
' → logprob: -12.375263214111328
    10. '\n' → logprob: -12.500263214111328

Token 30: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000595447258092463
    2. '"""' → logprob: -8.125595092773438
    3. '    ' → logprob: -8.500595092773438
    4. ' """' → logprob: -11.000595092773438
    5. '  ' → logprob: -11.250595092773438
    6. '    
' → logprob: -11.375595092773438
    7. '```' → logprob: -11.375595092773438
    8. ' lines' → logprob: -12.000595092773438
    9. '   ' → logprob: -12.000595092773438
    10. ' ' → logprob: -12.125595092773438

Token 31: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.711776852607727
    2. 'ligne' → logprob: -1.336776852607727
    3. ' ' → logprob: -1.836776852607727
    4. '  ' → logprob: -3.9617767333984375
    5. '   ' → logprob: -3.9617767333984375
    6. 'l' → logprob: -4.4617767333984375
    7. ' line' → logprob: -4.8367767333984375
    8. 'n' → logprob: -4.9617767333984375
    9. '    ' → logprob: -5.5867767333984375
    10. 'élé' → logprob: -5.7117767333984375

Token 32: ' doit' (ID: 21822)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19724394381046295
    2. ' est' → logprob: -2.3222439289093018
    3. ' de' → logprob: -3.9472439289093018
    4. ' contient' → logprob: -4.072244167327881
    5. '    ' → logprob: -4.572244167327881
    6. ' suivante' → logprob: -4.822244167327881
    7. ' doit' → logprob: -4.947244167327881
    8. ' a' → logprob: -5.822244167327881
    9. '  ' → logprob: -6.697244167327881
    10. 'de' → logprob: -6.822244167327881

Token 33: ' conten' (ID: 23523)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.21719101071357727
    2. 'être' → logprob: -1.7171909809112549
    3. ' etre' → logprob: -5.842191219329834
    4. ' be' → logprob: -6.592191219329834
    5. 'contin' → logprob: -6.592191219329834
    6. 'êt' → logprob: -6.842191219329834
    7. 'etre' → logprob: -6.967191219329834
    8. ' avoir' → logprob: -6.967191219329834
    9. 'êtres' → logprob: -7.467191219329834
    10. 's' → logprob: -7.592191219329834

Token 34: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.669344961643219
    2. 'er' → logprob: -1.2943449020385742
    3. 'r' → logprob: -1.9193449020385742
    4. 't' → logprob: -2.794344902038574
    5. 'ur' → logprob: -6.419344902038574
    6. 'ter' → logprob: -6.544344902038574
    7. 'e' → logprob: -7.044344902038574
    8. 're' → logprob: -7.669344902038574
    9. 'tre' → logprob: -8.044344902038574
    10. '```' → logprob: -8.794344902038574

Token 35: ' trois' (ID: 25564)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6405218243598938
    2. ' trois' → logprob: -1.640521764755249
    3. ' ' → logprob: -2.015521764755249
    4. '9' → logprob: -2.140521764755249
    5. ' neuf' → logprob: -5.265522003173828
    6. ' une' → logprob: -5.390522003173828
    7. 'une' → logprob: -5.515522003173828
    8. ' un' → logprob: -6.140522003173828
    9. ' des' → logprob: -6.390522003173828
    10. '   ' → logprob: -6.390522003173828

Token 36: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.12621763348579407
    2. ' ent' → logprob: -2.3762176036834717
    3. ' nombres' → logprob: -3.8762176036834717
    4. 'n' → logprob: -5.876217842102051
    5. 'nombre' → logprob: -7.626217842102051
    6. 'int' → logprob: -7.626217842102051
    7. ' chiffres' → logprob: -7.751217842102051
    8. ' entier' → logprob: -8.75121784210205
    9. 'ch' → logprob: -9.37621784210205
    10. ' ' → logprob: -9.37621784210205

Token 37: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5307138562202454
    2. 'iers' → logprob: -0.9057138562202454
    3. 'ières' → logprob: -5.03071403503418
    4. 'ié' → logprob: -7.90571403503418
    5. 'ier' → logprob: -8.28071403503418
    6. '```' → logprob: -8.65571403503418
    7. '   ' → logprob: -9.90571403503418
    8. ' i' → logprob: -9.90571403503418
    9. 'r' → logprob: -10.53071403503418
    10. 'ires' → logprob: -10.78071403503418

Token 38: ' sépar' (ID: 97160)
  Prédit: ' separated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' separated' → logprob: -0.7493500709533691
    2. ',' → logprob: -1.2493500709533691
    3. '   ' → logprob: -2.624350070953369
    4. ' ,' → logprob: -2.999350070953369
    5. ' sépar' → logprob: -3.124350070953369
    6. '<|end|>' → logprob: -3.249350070953369
    7. ' distinct' → logprob: -5.374350070953369
    8. ' (' → logprob: -5.374350070953369
    9. ' ' → logprob: -5.374350070953369
    10. '.' → logprob: -5.499350070953369

Token 39: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0033706773538142443
    2. 'é' → logprob: -5.753370761871338
    3. 'es' → logprob: -8.75337028503418
    4. 'ées' → logprob: -10.75337028503418
    5. 'ée' → logprob: -12.62837028503418
    6. 'ès' → logprob: -12.87837028503418
    7. 'e' → logprob: -13.12837028503418
    8. '```' → logprob: -13.12837028503418
    9. 'ÉS' → logprob: -13.37837028503418
    10. 's' → logprob: -14.25337028503418

Token 40: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.2020389586687088
    2. 'par' → logprob: -1.7020390033721924
    3. 'es' → logprob: -8.202038764953613
    4. '(par' → logprob: -9.452038764953613
    5. '_par' → logprob: -9.452038764953613
    6. ' ' → logprob: -9.577038764953613
    7. '```' → logprob: -9.952038764953613
    8. '   ' → logprob: -10.577038764953613
    9. ' by' → logprob: -11.202038764953613
    10. 'e' → logprob: -11.827038764953613

Token 41: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.9633800983428955
    2. ' des' → logprob: -1.0883800983428955
    3. 'un' → logprob: -2.0883800983428955
    4. ' un' → logprob: -2.3383800983428955
    5. ' ' → logprob: -3.5883800983428955
    6. ''un' → logprob: -4.088379859924316
    7. ' espaces' → logprob: -5.213379859924316
    8. ''' → logprob: -5.838379859924316
    9. 'spaces' → logprob: -6.338379859924316
    10. 'esp' → logprob: -6.963379859924316

Token 42: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.43825140595436096
    2. ' espaces' → logprob: -1.0632513761520386
    3. 'es' → logprob: -5.063251495361328
    4. 'spaces' → logprob: -5.938251495361328
    5. ' spaces' → logprob: -8.688251495361328
    6. ''esp' → logprob: -9.063251495361328
    7. ' espace' → logprob: -9.563251495361328
    8. 'space' → logprob: -10.188251495361328
    9. ' espacios' → logprob: -10.188251495361328
    10. ' esp' → logprob: -10.813251495361328

Token 43: '.

' (ID: 364)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7347154021263123
    2. '   ' → logprob: -0.9847154021263123
    3. '.' → logprob: -2.359715461730957
    4. '    
' → logprob: -3.859715461730957
    5. ',' → logprob: -4.984715461730957
    6. '\' → logprob: -5.234715461730957
    7. ')' → logprob: -5.359715461730957
    8. '  
' → logprob: -5.734715461730957
    9. ' 
' → logprob: -5.859715461730957
    10. ' ' → logprob: -6.484715461730957

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019412329129409045
    2. '"""' → logprob: -8.875194549560547
    3. '  ' → logprob: -10.875194549560547
    4. '    ' → logprob: -11.125194549560547
    5. '```' → logprob: -11.375194549560547
    6. '"""
' → logprob: -12.750194549560547
    7. '    
' → logprob: -13.625194549560547
    8. ' """' → logprob: -14.000194549560547
    9. '""' → logprob: -14.125194549560547
    10. '       ' → logprob: -14.500194549560547

Token 45: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24968193471431732
    2. 'grid' → logprob: -1.6246819496154785
    3. 'lines' → logprob: -3.8746819496154785
    4. 'b' → logprob: -7.3746819496154785
    5. ' lines' → logprob: -7.3746819496154785
    6. 'return' → logprob: -7.9996819496154785
    7. ' grid' → logprob: -7.9996819496154785
    8. 'gr' → logprob: -8.12468147277832
    9. '```' → logprob: -8.12468147277832
    10. '"""' → logprob: -8.99968147277832

Token 46: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5759648680686951
    2. '    ' → logprob: -1.4509649276733398
    3. ':' → logprob: -2.57596492767334
    4. '   ' → logprob: -2.95096492767334
    5. '[' → logprob: -3.07596492767334
    6. '```' → logprob: -4.95096492767334
    7. '[]' → logprob: -5.32596492767334
    8. ' ' → logprob: -5.45096492767334
    9. '[:]' → logprob: -6.20096492767334
    10. ' []' → logprob: -6.57596492767334

Token 47: '       ' (ID: 309)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.7321904301643372
    2. ' [
' → logprob: -1.3571903705596924
    3. ' [' → logprob: -2.1071903705596924
    4. ' [[' → logprob: -2.7321903705596924
    5. '[' → logprob: -3.2321903705596924
    6. '   ' → logprob: -3.9821903705596924
    7. ' grid' → logprob: -5.6071906089782715
    8. '[]' → logprob: -6.1071906089782715
    9. '[[' → logprob: -6.4821906089782715
    10. '[
' → logprob: -6.4821906089782715

Token 48: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.8663997054100037
    2. ' list' → logprob: -1.1163997650146484
    3. ' List' → logprob: -2.1163997650146484
    4. 'List' → logprob: -2.2413997650146484
    5. '[
' → logprob: -5.116399765014648
    6. '[' → logprob: -5.366399765014648
    7. '[[' → logprob: -5.616399765014648
    8. '[List' → logprob: -5.991399765014648
    9. ' grid' → logprob: -6.366399765014648
    10. '   ' → logprob: -6.741399765014648

Token 49: '[list' (ID: 141696)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.3125516176223755
    2. '[List' → logprob: -1.3125516176223755
    3. '[list' → logprob: -1.5625516176223755
    4. '[' → logprob: -1.5625516176223755
    5. '[
' → logprob: -3.937551498413086
    6. '[int' → logprob: -4.687551498413086
    7. '[]' → logprob: -5.812551498413086
    8. '<|end|>' → logprob: -5.812551498413086
    9. '[str' → logprob: -6.187551498413086
    10. '   ' → logprob: -6.812551498413086

Token 50: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.739826181321405e-05
    2. ']int' → logprob: -10.50004768371582
    3. ']' → logprob: -11.62504768371582
    4. '[' → logprob: -12.00004768371582
    5. '<int' → logprob: -12.87504768371582
    6. 'int' → logprob: -13.87504768371582
    7. ']]' → logprob: -14.25004768371582
    8. ']]]' → logprob: -15.50004768371582
    9. ' ]' → logprob: -15.87504768371582
    10. ' of' → logprob: -16.50004768371582

Token 51: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.043180279433727264
    2. ']]]' → logprob: -3.168180227279663
    3. ']])' → logprob: -9.668180465698242
    4. ' ]]' → logprob: -10.168180465698242
    5. ']]:
' → logprob: -10.293180465698242
    6. ']' → logprob: -10.918180465698242
    7. '[' → logprob: -12.293180465698242
    8. '[int' → logprob: -12.543180465698242
    9. ']]

' → logprob: -12.668180465698242
    10. ']]
' → logprob: -12.918180465698242

Token 52: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34579193592071533
    2. ':' → logprob: -1.5957919359207153
    3. ':
' → logprob: -3.845791816711426
    4. '<|end|>' → logprob: -4.595791816711426
    5. '[' → logprob: -4.720791816711426
    6. '):' → logprob: -5.095791816711426
    7. ' ' → logprob: -5.095791816711426
    8. '```' → logprob: -5.220791816711426
    9. '
' → logprob: -5.595791816711426
    10. ' 
' → logprob: -5.970791816711426

Token 53: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5261293053627014
    2. '[' → logprob: -2.1511292457580566
    3. '[[' → logprob: -2.4011292457580566
    4. '[
' → logprob: -3.5261292457580566
    5. '[['' → logprob: -3.5261292457580566
    6. '<|end|>' → logprob: -3.7761292457580566
    7. ' [[' → logprob: -4.026129245758057
    8. '[]' → logprob: -4.151129245758057
    9. ' [
' → logprob: -4.276129245758057
    10. '```' → logprob: -4.401129245758057

Token 54: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.07292162626981735
    2. ' grid' → logprob: -2.9479215145111084
    3. ' liste' → logprob: -5.1979217529296875
    4. ' gr' → logprob: -5.3229217529296875
    5. ' ' → logprob: -6.3229217529296875
    6. 'gr' → logprob: -6.5729217529296875
    7. ' [
' → logprob: -6.8229217529296875
    8. ' [' → logprob: -7.3229217529296875
    9. ' matr' → logprob: -7.4479217529296875
    10. ' prochaine' → logprob: -7.9479217529296875

Token 55: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.299916386604309
    2. ' des' → logprob: -1.674916386604309
    3. ' complète' → logprob: -1.674916386604309
    4. ' de' → logprob: -2.4249162673950195
    5. ' ' → logprob: -2.4249162673950195
    6. '[
' → logprob: -2.6749162673950195
    7. '<|end|>' → logprob: -3.4249162673950195
    8. ' [
' → logprob: -3.9249162673950195
    9. '   ' → logprob: -4.2999162673950195
    10. '[]' → logprob: -4.9249162673950195

Token 56: '3' (ID: 18)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3492036461830139
    2. '[
' → logprob: -1.8492035865783691
    3. 'b' → logprob: -3.349203586578369
    4. '3' → logprob: -3.849203586578369
    5. ' de' → logprob: -3.849203586578369
    6. 'de' → logprob: -4.224203586578369
    7. 'B' → logprob: -4.224203586578369
    8. 'com' → logprob: -4.974203586578369
    9. '[]' → logprob: -5.224203586578369
    10. '   ' → logprob: -6.099203586578369

Token 57: 'x' (ID: 87)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.1988023519515991
    2. '[' → logprob: -1.4488023519515991
    3. '   ' → logprob: -1.6988023519515991
    4. 'x' → logprob: -1.8238023519515991
    5. '[
' → logprob: -3.5738024711608887
    6. ']' → logprob: -3.6988024711608887
    7. '[List' → logprob: -4.198802471160889
    8. '[]' → logprob: -4.448802471160889
    9. '<int' → logprob: -5.198802471160889
    10. '*' → logprob: -5.448802471160889

Token 58: '3' (ID: 18)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05242003872990608
    2. '3' → logprob: -3.052420139312744
    3. ' x' → logprob: -6.302420139312744
    4. '   ' → logprob: -7.177420139312744
    5. '][' → logprob: -7.802420139312744
    6. '```' → logprob: -8.177419662475586
    7. ']' → logprob: -8.802419662475586
    8. ' ' → logprob: -9.427419662475586
    9. '*' → logprob: -9.677419662475586
    10. ')x' → logprob: -10.052419662475586

Token 59: ' représent' (ID: 42664)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23377293348312378
    2. ']' → logprob: -1.9837729930877686
    3. '```' → logprob: -3.3587729930877686
    4. '[
' → logprob: -4.7337727546691895
    5. ' ]' → logprob: -4.8587727546691895
    6. ']
' → logprob: -5.8587727546691895
    7. '[' → logprob: -5.8587727546691895
    8. ')' → logprob: -5.8587727546691895
    9. '"""
' → logprob: -6.3587727546691895
    10. '[]' → logprob: -6.7337727546691895

Token 60: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0007768734358251095
    2. 'ant' → logprob: -7.625776767730713
    3. 'ee' → logprob: -8.250777244567871
    4. 'é' → logprob: -11.250777244567871
    5. 'ation' → logprob: -11.625777244567871
    6. 'ées' → logprob: -12.875777244567871
    7. 'e' → logprob: -13.625777244567871
    8. '   ' → logprob: -14.125777244567871
    9. 'ed' → logprob: -15.125777244567871
    10. 'ante' → logprob: -15.625777244567871

Token 61: ' sous' (ID: 14487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5214313268661499
    2. ' par' → logprob: -1.27143132686615
    3. ' as' → logprob: -2.6464314460754395
    4. ' ' → logprob: -3.8964314460754395
    5. ' en' → logprob: -4.6464314460754395
    6. ' comme' → logprob: -5.1464314460754395
    7. '    ' → logprob: -5.2714314460754395
    8. '  ' → logprob: -5.3964314460754395
    9. 'par' → logprob: -5.7714314460754395
    10. ' sous' → logprob: -6.3964314460754395

Token 62: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.027390150353312492
    2. ' la' → logprob: -3.777390241622925
    3. ' form' → logprob: -6.027390003204346
    4. '   ' → logprob: -7.527390003204346
    5. ' une' → logprob: -7.777390003204346
    6. 'la' → logprob: -8.027390480041504
    7. 'forme' → logprob: -8.027390480041504
    8. 'form' → logprob: -9.902390480041504
    9. ' forma' → logprob: -10.652390480041504
    10. 'une' → logprob: -11.152390480041504

Token 63: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.09328696131706238
    2. ' de' → logprob: -2.4682869911193848
    3. 'd' → logprob: -5.718286991119385
    4. 'de' → logprob: -7.093286991119385
    5. ' of' → logprob: -8.718286514282227
    6. '   ' → logprob: -10.468286514282227
    7. 'e' → logprob: -11.718286514282227
    8. '[' → logprob: -12.468286514282227
    9. ' ' → logprob: -12.843286514282227
    10. '  ' → logprob: -13.093286514282227

Token 64: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.2369154989719391
    2. ' listes' → logprob: -1.8619154691696167
    3. ' list' → logprob: -3.6119155883789062
    4. 'liste' → logprob: -4.736915588378906
    5. 'list' → logprob: -5.111915588378906
    6. ' la' → logprob: -5.861915588378906
    7. ' matr' → logprob: -5.986915588378906
    8. ' tableau' → logprob: -6.361915588378906
    9. ' lists' → logprob: -6.486915588378906
    10. ' tableaux' → logprob: -6.861915588378906

Token 65: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15302249789237976
    2. '[
' → logprob: -2.278022527694702
    3. '[list' → logprob: -4.028022289276123
    4. '[List' → logprob: -4.778022289276123
    5. ' de' → logprob: -5.278022289276123
    6. '[int' → logprob: -6.153022289276123
    7. '   ' → logprob: -6.403022289276123
    8. ' of' → logprob: -6.403022289276123
    9. ' des' → logprob: -7.278022289276123
    10. '[]' → logprob: -7.778022289276123

Token 66: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9807016253471375
    2. ' list' → logprob: -1.2307016849517822
    3. ' listes' → logprob: -1.2307016849517822
    4. ' liste' → logprob: -3.8557016849517822
    5. ' lists' → logprob: -4.230701446533203
    6. 'lists' → logprob: -5.730701446533203
    7. 'liste' → logprob: -6.355701446533203
    8. ' listas' → logprob: -10.605701446533203
    9. '```' → logprob: -10.730701446533203
    10. ' ' → logprob: -10.980701446533203

Token 67: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06676118075847626
    2. ']' → logprob: -4.191761016845703
    3. '[' → logprob: -4.441761016845703
    4. '[
' → logprob: -4.441761016845703
    5. '```' → logprob: -4.566761016845703
    6. '.' → logprob: -5.441761016845703
    7. ')' → logprob: -6.066761016845703
    8. '[int' → logprob: -6.441761016845703
    9. ' ]' → logprob: -6.691761016845703
    10. '    ' → logprob: -6.816761016845703

Token 68: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.03578618913888931
    2. 'ent' → logprob: -4.035786151885986
    3. 'int' → logprob: -4.535786151885986
    4. ''int' → logprob: -6.035786151885986
    5. '[int' → logprob: -6.285786151885986
    6. '’ent' → logprob: -6.660786151885986
    7. '`' → logprob: -8.035786628723145
    8. 'ints' → logprob: -8.160786628723145
    9. '<int' → logprob: -8.660786628723145
    10. ' ent' → logprob: -8.910786628723145

Token 69: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0001310719089815393
    2. 'ier' → logprob: -9.500130653381348
    3. '   ' → logprob: -10.125130653381348
    4. 'i' → logprob: -11.875130653381348
    5. 'ières' → logprob: -12.500130653381348
    6. '```' → logprob: -12.625130653381348
    7. '       ' → logprob: -13.500130653381348
    8. '     ' → logprob: -15.875130653381348
    9. 'ieurs' → logprob: -16.250131607055664
    10. '  ' → logprob: -16.375131607055664

Token 70: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016524016857147217
    2. ']' → logprob: -4.266523838043213
    3. '```' → logprob: -6.766523838043213
    4. ')' → logprob: -7.391523838043213
    5. '.' → logprob: -9.391524314880371
    6. '[
' → logprob: -9.891524314880371
    7. '    
' → logprob: -10.016524314880371
    8. ' ]' → logprob: -10.141524314880371
    9. ':
' → logprob: -10.266524314880371
    10. '    ' → logprob: -10.391524314880371

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035612501204013824
    2. '"""' → logprob: -3.4106125831604004
    3. '"""
' → logprob: -6.9106125831604
    4. ')' → logprob: -7.6606125831604
    5. '\n' → logprob: -8.910612106323242
    6. '```' → logprob: -8.910612106323242
    7. ' """' → logprob: -9.535612106323242
    8. '""' → logprob: -10.160612106323242
    9. '    
' → logprob: -10.785612106323242
    10. '
' → logprob: -10.785612106323242

Token 72: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017943652346730232
    2. '"""' → logprob: -4.267943859100342
    3. '```' → logprob: -6.142943859100342
    4. '"""
' (adapté à ' """
') → logprob: -6.767943859100342
    5. ')' → logprob: -8.392943382263184
    6. ' """' → logprob: -9.517943382263184
    7. ' """
' → logprob: -9.517943382263184
    8. '    ' → logprob: -10.392943382263184
    9. '""' → logprob: -10.767943382263184
    10. '\n' → logprob: -11.517943382263184

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003544118662830442
    2. 'grid' → logprob: -8.125354766845703
    3. ' grid' → logprob: -10.125354766845703
    4. '    
' → logprob: -12.375354766845703
    5. ' lines' → logprob: -12.500354766845703
    6. '```' → logprob: -12.875354766845703
    7. '
' → logprob: -13.625354766845703
    8. 'return' → logprob: -13.750354766845703
    9. '    ' → logprob: -13.750354766845703
    10. '   ' → logprob: -14.000354766845703

Token 74: ' return' (ID: 622)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.023691002279520035
    2. ' grid' → logprob: -4.148691177368164
    3. 'b' → logprob: -5.023691177368164
    4. '   ' → logprob: -7.273691177368164
    5. 'gr' → logprob: -8.398691177368164
    6. 'return' (adapté à ' return') → logprob: -9.773691177368164
    7. ' bingo' → logprob: -10.273691177368164
    8. '```' → logprob: -11.648691177368164
    9. 'lines' → logprob: -11.773691177368164
    10. ' b' → logprob: -12.773691177368164

Token 75: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.42873746156692505
    2. '[' → logprob: -1.1787374019622803
    3. ' [
' → logprob: -4.053737640380859
    4. '[list' → logprob: -4.303737640380859
    5. '[int' → logprob: -5.303737640380859
    6. '[
' → logprob: -6.178737640380859
    7. '[input' → logprob: -6.678737640380859
    8. '[line' → logprob: -7.928737640380859
    9. '[len' → logprob: -8.30373764038086
    10. '[s' → logprob: -8.80373764038086

Token 76: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08137734979391098
    2. '[list' → logprob: -2.5813772678375244
    3. ' list' → logprob: -6.3313775062561035
    4. '[' → logprob: -7.3313775062561035
    5. '[int' → logprob: -10.581377029418945
    6. ' [' → logprob: -11.081377029418945
    7. '   ' → logprob: -12.081377029418945
    8. '[List' → logprob: -13.331377029418945
    9. '[line' → logprob: -14.956377029418945
    10. '	list' → logprob: -14.956377029418945

Token 77: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0004384174826554954
    2. '(' → logprob: -7.750438213348389
    3. 'map' → logprob: -12.250438690185547
    4. '(int' → logprob: -13.875438690185547
    5. ' map' → logprob: -14.125438690185547
    6. '(
' → logprob: -14.500438690185547
    7. '	map' → logprob: -14.750438690185547
    8. '()' → logprob: -16.125438690185547
    9. '_map' → logprob: -16.750438690185547
    10. '(m' → logprob: -16.750438690185547

Token 78: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003368926409166306
    2. 'int' → logprob: -8.375336647033691
    3. '<int' → logprob: -10.000336647033691
    4. '(' → logprob: -10.875336647033691
    5. ' int' → logprob: -11.000336647033691
    6. ',int' → logprob: -11.750336647033691
    7. '[int' → logprob: -12.000336647033691
    8. ']int' → logprob: -12.250336647033691
    9. '<|end|>' → logprob: -13.500336647033691
    10. '=int' → logprob: -13.500336647033691

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4409913718700409
    2. '(sys' → logprob: -1.3159914016723633
    3. '(input' → logprob: -3.0659914016723633
    4. ',input' → logprob: -3.8159914016723633
    5. 'input' → logprob: -4.940991401672363
    6. 'sys' → logprob: -5.190991401672363
    7. ' sys' → logprob: -5.565991401672363
    8. ' input' → logprob: -6.190991401672363
    9. '(' → logprob: -7.565991401672363
    10. ')' → logprob: -8.440991401672363

Token 80: ' input' (ID: 3422)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.48622530698776245
    2. 'sys' → logprob: -1.2362253665924072
    3. ' input' → logprob: -2.6112253665924072
    4. 'input' → logprob: -3.8612253665924072
    5. '(sys' → logprob: -10.236225128173828
    6. '=sys' → logprob: -10.861225128173828
    7. ' line' → logprob: -11.736225128173828
    8. 'line' → logprob: -11.986225128173828
    9. '	sys' → logprob: -12.111225128173828
    10. ')' → logprob: -12.111225128173828

Token 81: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0023981286212801933
    2. '()' → logprob: -6.3773980140686035
    3. '(' → logprob: -7.5023980140686035
    4. '()))' → logprob: -9.252398490905762
    5. '())' → logprob: -11.127398490905762
    6. 'split' → logprob: -11.877398490905762
    7. '()(' → logprob: -12.377398490905762
    8. '(split' → logprob: -12.502398490905762
    9. '.readline' → logprob: -12.502398490905762
    10. ')' → logprob: -13.252398490905762

Token 82: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001937558175995946
    2. 'strip' → logprob: -6.251937389373779
    3. 'rstrip' → logprob: -11.751937866210938
    4. '(split' → logprob: -14.501937866210938
    5. ' split' → logprob: -14.626937866210938
    6. 's' → logprob: -18.251937866210938
    7. 'spl' → logprob: -18.376937866210938
    8. '.split' → logprob: -19.001937866210938
    9. ' ' → logprob: -19.626937866210938
    10. ' strip' → logprob: -19.876937866210938

Token 83: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.008642109110951424
    2. '()' → logprob: -5.008642196655273
    3. '))' → logprob: -6.633642196655273
    4. '())' → logprob: -7.758642196655273
    5. '(' → logprob: -8.883642196655273
    6. '())))' → logprob: -10.633642196655273
    7. '()))
' → logprob: -11.883642196655273
    8. '('' → logprob: -12.508642196655273
    9. ')' → logprob: -13.258642196655273
    10. '()));' → logprob: -13.758642196655273

Token 84: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1996164619922638
    2. ')' → logprob: -2.9496164321899414
    3. ' for' → logprob: -3.0746164321899414
    4. 'for' → logprob: -3.3246164321899414
    5. '(' → logprob: -3.4496164321899414
    6. '()]' → logprob: -4.824616432189941
    7. '())' → logprob: -5.574616432189941
    8. ']' → logprob: -6.449616432189941
    9. ' ' → logprob: -8.074616432189941
    10. '[' → logprob: -8.574616432189941

Token 85: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.35043659806251526
    2. ' range' → logprob: -1.4754365682601929
    3. '_' → logprob: -3.2254366874694824
    4. ' ' → logprob: -3.7254366874694824
    5. ' i' → logprob: -5.850436687469482
    6. 'range' → logprob: -9.100436210632324
    7. '	range' → logprob: -9.850436210632324
    8. '(range' → logprob: -10.850436210632324
    9. '_range' → logprob: -11.225436210632324
    10. ' ▁' → logprob: -12.225436210632324

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005565751809626818
    2. 'in' → logprob: -5.630565643310547
    3. ' ' → logprob: -7.255565643310547
    4. '<|end|>' → logprob: -7.255565643310547
    5. 'range' → logprob: -7.755565643310547
    6. '  ' → logprob: -10.130565643310547
    7. ' range' → logprob: -10.755565643310547
    8. ' i' → logprob: -11.005565643310547
    9. 'import' → logprob: -11.505565643310547
    10. '<|end|>' → logprob: -12.130565643310547

Token 87: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17978645861148834
    2. ' range' → logprob: -1.8047864437103271
    3. '[' → logprob: -10.804786682128906
    4. '(range' → logprob: -12.179786682128906
    5. '(' → logprob: -12.429786682128906
    6. ' ' → logprob: -12.804786682128906
    7. 'rang' → logprob: -13.179786682128906
    8. '	range' → logprob: -13.304786682128906
    9. '```' → logprob: -13.554786682128906
    10. 'ran' → logprob: -14.179786682128906

Token 88: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.723352049040841e-06
    2. ' (' → logprob: -12.750004768371582
    3. '(
' → logprob: -13.250004768371582
    4. '(

' → logprob: -18.000003814697266
    5. '3' → logprob: -18.375003814697266
    6. ')(' → logprob: -19.750003814697266
    7. '(
' → logprob: -19.875003814697266
    8. ' ' → logprob: -20.000003814697266
    9. ')' → logprob: -21.125003814697266
    10. ' (
' → logprob: -21.500003814697266

Token 89: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00861729308962822
    2. ' ' → logprob: -4.758617401123047
    3. '9' → logprob: -12.883617401123047
    4. '(' → logprob: -16.383617401123047
    5. '  ' → logprob: -16.758617401123047
    6. '   ' → logprob: -16.883617401123047
    7. ')' → logprob: -18.133617401123047
    8. ' ' → logprob: -18.133617401123047
    9. '```' → logprob: -18.633617401123047
    10. '' → logprob: -19.758617401123047

Token 90: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002690840628929436
    2. ')' → logprob: -8.375268936157227
    3. ']' → logprob: -10.375268936157227
    4. ' )' → logprob: -12.250268936157227
    5. ')])' → logprob: -13.625268936157227
    6. '))' → logprob: -14.625268936157227
    7. '   ' → logprob: -15.000268936157227
    8. ')]
' → logprob: -15.875268936157227
    9. '])]' → logprob: -15.875268936157227
    10. '])' → logprob: -16.125268936157227

Token 91: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0384279265999794
    2. '

' → logprob: -3.5384278297424316
    3. 'def' → logprob: -5.038427829742432
    4. '```' → logprob: -7.288427829742432
    5. '#' → logprob: -7.663427829742432
    6. '' → logprob: -8.41342830657959
    7. '\n' → logprob: -8.78842830657959
    8. '
' → logprob: -8.78842830657959
    9. '<|end|>' → logprob: -9.03842830657959
    10. '\' → logprob: -9.16342830657959

Token 92: ' read' (ID: 1729)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.009132340550422668
    2. ' play' → logprob: -5.634132385253906
    3. ' main' → logprob: -6.384132385253906
    4. ' bingo' → logprob: -6.384132385253906
    5. ' space' → logprob: -7.634132385253906
    6. ' is' → logprob: -8.009132385253906
    7. ' calculate' → logprob: -8.384132385253906
    8. ' find' → logprob: -8.634132385253906
    9. ' checking' → logprob: -9.134132385253906
    10. ' ' → logprob: -9.134132385253906

Token 93: '_draw' (ID: 51847)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.07097054272890091
    2. '_' → logprob: -2.8209705352783203
    3. '_s' → logprob: -6.82097053527832
    4. '_a' → logprob: -7.19597053527832
    5. '_user' → logprob: -7.44597053527832
    6. '_game' → logprob: -7.44597053527832
    7. '_numbers' → logprob: -7.82097053527832
    8. '_input' → logprob: -7.82097053527832
    9. '_line' → logprob: -8.07097053527832
    10. '_cards' → logprob: -8.19597053527832

Token 94: 'n' (ID: 77)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23182108998298645
    2. '()' → logprob: -1.981821060180664
    3. 's' → logprob: -3.481821060180664
    4. '():' → logprob: -3.981821060180664
    5. '_numbers' → logprob: -5.106821060180664
    6. '_n' → logprob: -5.481821060180664
    7. 'n' → logprob: -5.856821060180664
    8. '_line' → logprob: -6.106821060180664
    9. '_list' → logprob: -6.856821060180664
    10. '_number' → logprob: -7.356821060180664

Token 95: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.36319345235824585
    2. '_' → logprob: -1.3631935119628906
    3. '_tokens' → logprob: -4.488193511962891
    4. '_b' → logprob: -4.488193511962891
    5. '()' → logprob: -4.613193511962891
    6. '_cards' → logprob: -4.988193511962891
    7. '_number' → logprob: -6.613193511962891
    8. '_lines' → logprob: -7.113193511962891
    9. '_items' → logprob: -7.113193511962891
    10. '_codes' → logprob: -7.113193511962891

Token 96: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.027225754223764e-05
    2. ' ():' → logprob: -9.875060081481934
    3. '()' → logprob: -11.750060081481934
    4. '():
' → logprob: -15.000060081481934
    5. '(' → logprob: -15.500060081481934
    6. '()>' → logprob: -16.25006103515625
    7. ' ()' → logprob: -16.25006103515625
    8. '():
' → logprob: -17.50006103515625
    9. '_' → logprob: -17.87506103515625
    10. '_parent' → logprob: -17.87506103515625

Token 97: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004493023734539747
    2. '()' → logprob: -5.754493236541748
    3. '   ' → logprob: -6.879493236541748
    4. '():
' → logprob: -8.75449275970459
    5. ':' → logprob: -9.50449275970459
    6. ' ():' → logprob: -10.50449275970459
    7. '(' → logprob: -10.87949275970459
    8. ' ()' → logprob: -12.87949275970459
    9. ' ' → logprob: -13.75449275970459
    10. ' :' → logprob: -13.87949275970459

Token 98: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014480947284027934
    2. 'return' → logprob: -8.376447677612305
    3. '()' → logprob: -8.376447677612305
    4. '  ' → logprob: -8.626447677612305
    5. ' return' → logprob: -8.876447677612305
    6. '    
' → logprob: -9.001447677612305
    7. '    ' → logprob: -9.001447677612305
    8. ' ' → logprob: -9.001447677612305
    9. '<|end|>' → logprob: -9.876447677612305
    10. 'def' → logprob: -10.126447677612305

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011521248379722238
    2. '"""' → logprob: -7.001152038574219
    3. '"' → logprob: -9.376152038574219
    4. '  ' → logprob: -10.126152038574219
    5. '"""
' → logprob: -10.126152038574219
    6. ' ' → logprob: -10.751152038574219
    7. ' """' → logprob: -11.126152038574219
    8. '    ' → logprob: -11.501152038574219
    9. ' """
' → logprob: -11.626152038574219
    10. ')' → logprob: -12.001152038574219

Token 100: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.949026571121067e-05
    2. '"""
' → logprob: -10.750099182128906
    3. 'def' → logprob: -10.750099182128906
    4. '"""' → logprob: -11.125099182128906
    5. '    
' → logprob: -11.500099182128906
    6. '
' → logprob: -12.000099182128906
    7. 'Reads' → logprob: -12.125099182128906
    8. 'Lire' → logprob: -12.250099182128906
    9. '  ' → logprob: -12.750099182128906
    10. ' ' → logprob: -13.250099182128906

Token 101: ' le' (ID: 505)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.25470101833343506
    2. ' la' → logprob: -1.879701018333435
    3. ' un' → logprob: -3.7547011375427246
    4. ' ' → logprob: -3.8797011375427246
    5. ' les' → logprob: -4.879701137542725
    6. 'une' → logprob: -5.254701137542725
    7. ' l' → logprob: -5.379701137542725
    8. '()' → logprob: -5.754701137542725
    9. ' le' → logprob: -6.754701137542725
    10. ' a' → logprob: -6.879701137542725

Token 102: ' nombre' (ID: 9733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31686636805534363
    2. 'n' → logprob: -1.941866397857666
    3. 'a' → logprob: -3.441866397857666
    4. 'e' → logprob: -4.441866397857666
    5. 'nombre' → logprob: -4.441866397857666
    6. ' nombres' → logprob: -4.566866397857666
    7. ' reste' → logprob: -5.191866397857666
    8. 't' → logprob: -5.191866397857666
    9. ' nombre' → logprob: -5.316866397857666
    10. 'ent' → logprob: -5.691866397857666

Token 103: ' total' (ID: 3609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20244425535202026
    2. '_' → logprob: -2.202444314956665
    3. '_s' → logprob: -3.077444314956665
    4. ' ' → logprob: -4.577444076538086
    5. ' s' → logprob: -4.577444076538086
    6. '  ' → logprob: -6.202444076538086
    7. '_d' → logprob: -6.327444076538086
    8. ' d' → logprob: -7.952444076538086
    9. '_draw' → logprob: -8.327444076538086
    10. 'd' → logprob: -8.452444076538086

Token 104: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.507076621055603
    2. ' ' → logprob: -1.257076621055603
    3. ' de' → logprob: -3.0070767402648926
    4. ' des' → logprob: -4.257076740264893
    5. 's' → logprob: -4.507076740264893
    6. '  ' → logprob: -4.632076740264893
    7. '_d' → logprob: -5.132076740264893
    8. ' d' → logprob: -5.507076740264893
    9. ' total' → logprob: -6.007076740264893
    10. '_total' → logprob: -6.007076740264893

Token 105: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -1.3967097997665405
    2. ' tir' → logprob: -1.3967097997665405
    3. 'tir' → logprob: -1.8967097997665405
    4. 'num' → logprob: -1.8967097997665405
    5. 't' → logprob: -2.77170991897583
    6. ' nombres' → logprob: -3.27170991897583
    7. 'n' → logprob: -4.02170991897583
    8. 'tickets' → logprob: -4.14670991897583
    9. ' tickets' → logprob: -4.64670991897583
    10. ' numbers' → logprob: -5.02170991897583

Token 106: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.46790146827697754
    2. 'é' → logprob: -1.2179014682769775
    3. '_' → logprob: -2.7179014682769775
    4. '_draw' → logprob: -5.342901229858398
    5. 'éro' → logprob: -5.467901229858398
    6. '_tokens' → logprob: -7.842901229858398
    7. '_points' → logprob: -8.467901229858398
    8. ' ' → logprob: -8.592901229858398
    9. '__' → logprob: -8.717901229858398
    10. '_numbers' → logprob: -8.842901229858398

Token 107: ' tir' (ID: 16690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.042072441428899765
    2. '_' → logprob: -4.167072296142578
    3. ' à' → logprob: -4.167072296142578
    4. 'draw' → logprob: -5.667072296142578
    5. '_draw' → logprob: -5.792072296142578
    6. 's' → logprob: -6.542072296142578
    7. ' draw' → logprob: -7.667072296142578
    8. ' drawn' → logprob: -7.917072296142578
    9. ' a' → logprob: -8.042072296142578
    10. ' _' → logprob: -8.917072296142578

Token 108: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0189578328281641
    2. 'é' → logprob: -4.143957614898682
    3. 's' → logprob: -5.893957614898682
    4. 'ées' → logprob: -9.64395809173584
    5. 'es' → logprob: -10.39395809173584
    6. 'e' → logprob: -12.01895809173584
    7. 'ée' → logprob: -12.14395809173584
    8. '```' → logprob: -12.26895809173584
    9. 'ÉS' → logprob: -12.39395809173584
    10. 'nés' → logprob: -12.39395809173584

Token 109: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8697327375411987
    2. '   ' → logprob: -1.1197327375411987
    3. ' ()' → logprob: -1.8697327375411987
    4. '():' → logprob: -2.9947328567504883
    5. '(' → logprob: -4.119732856750488
    6. ':' → logprob: -4.619732856750488
    7. ' ' → logprob: -4.994732856750488
    8. ' ():' → logprob: -5.869732856750488
    9. ' :' → logprob: -6.119732856750488
    10. ' (' → logprob: -6.244732856750488

Token 110: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.030817296355962753
    2. ' ' → logprob: -5.03081750869751
    3. '   ' → logprob: -5.15581750869751
    4. '    ' → logprob: -5.28081750869751
    5. ' n' → logprob: -6.28081750869751
    6. ' ' → logprob: -6.28081750869751
    7. ' ,' → logprob: -6.53081750869751
    8. ' then' → logprob: -6.65581750869751
    9. 'p' → logprob: -6.90581750869751
    10. ' et' → logprob: -7.28081750869751

Token 111: ' lit' (ID: 11980)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9027310609817505
    2. '   ' → logprob: -1.4027310609817505
    3. ' le' → logprob: -2.152730941772461
    4. ' ' → logprob: -2.902730941772461
    5. ' numbers' → logprob: -2.902730941772461
    6. ' return' → logprob: -3.402730941772461
    7. ' une' → logprob: -3.902730941772461
    8. ' les' → logprob: -4.527730941772461
    9. 'numbers' → logprob: -4.777730941772461
    10. ' un' → logprob: -4.902730941772461

Token 112: ' chacun' (ID: 52136)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5521887540817261
    2. ' le' → logprob: -1.427188754081726
    3. '   ' → logprob: -2.4271888732910156
    4. ' la' → logprob: -3.3021888732910156
    5. '()' → logprob: -4.177188873291016
    6. ' l' → logprob: -4.927188873291016
    7. ' un' → logprob: -5.052188873291016
    8. '  ' → logprob: -5.177188873291016
    9. '(' → logprob: -5.552188873291016
    10. ' ()' → logprob: -5.552188873291016

Token 113: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8971328735351562
    2. ' des' → logprob: -1.2721328735351562
    3. '_' → logprob: -2.3971328735351562
    4. ' les' → logprob: -2.5221328735351562
    5. '(' → logprob: -3.2721328735351562
    6. '   ' → logprob: -3.6471328735351562
    7. ' ' → logprob: -4.022132873535156
    8. ' _' → logprob: -4.397132873535156
    9. ' le' → logprob: -4.772132873535156
    10. '_l' → logprob: -5.522132873535156

Token 114: ' num' (ID: 2269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16143955290317535
    2. ' nombres' → logprob: -2.5364396572113037
    3. 'n' → logprob: -3.9114396572113037
    4. ' numbers' → logprob: -4.411439418792725
    5. '  ' → logprob: -4.911439418792725
    6. ' n' → logprob: -5.161439418792725
    7. ' num' → logprob: -5.286439418792725
    8. ' drawn' → logprob: -5.286439418792725
    9. ' lignes' → logprob: -5.661439418792725
    10. 'numbers' → logprob: -5.911439418792725

Token 115: 'éros' (ID: 120888)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.6631799936294556
    2. 'éros' → logprob: -0.7881799936294556
    3. 'és' → logprob: -4.788179874420166
    4. 'um' → logprob: -5.163179874420166
    5. 'éro' → logprob: -5.538179874420166
    6. '_' → logprob: -6.038179874420166
    7. 'u' → logprob: -6.163179874420166
    8. 'ros' → logprob: -6.413179874420166
    9. 'érés' → logprob: -6.413179874420166
    10. 's' → logprob: -7.288179874420166

Token 116: ' tir' (ID: 16690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5547029376029968
    2. '_' → logprob: -1.5547029972076416
    3. ' _' → logprob: -2.5547029972076416
    4. 's' → logprob: -3.8047029972076416
    5. ' drawn' → logprob: -4.1797027587890625
    6. '  ' → logprob: -4.4297027587890625
    7. ' ' → logprob: -4.5547027587890625
    8. '   ' → logprob: -4.6797027587890625
    9. ' tir' → logprob: -4.9297027587890625
    10. '_draw' → logprob: -4.9297027587890625

Token 117: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.011862651444971561
    2. 'es' → logprob: -4.636862754821777
    3. 's' → logprob: -6.511862754821777
    4. 'é' → logprob: -7.511862754821777
    5. 't' → logprob: -11.261862754821777
    6. '```' → logprob: -11.261862754821777
    7. 'nés' → logprob: -11.511862754821777
    8. 'rés' → logprob: -12.011862754821777
    9. 'ÉS' → logprob: -12.386862754821777
    10. '   ' → logprob: -12.636862754821777

Token 118: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07969093322753906
    2. '(' → logprob: -3.954690933227539
    3. ' (' → logprob: -4.454690933227539
    4. ',' → logprob: -4.704690933227539
    5. '(n' → logprob: -4.704690933227539
    6. '()' → logprob: -5.454690933227539
    7. ' ' → logprob: -5.579690933227539
    8. '.' → logprob: -5.579690933227539
    9. ' ()' → logprob: -6.079690933227539
    10. '  ' → logprob: -6.579690933227539

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004064270760864019
    2. ')' → logprob: -5.629064083099365
    3. 'def' → logprob: -8.379064559936523
    4. ' ' → logprob: -9.004064559936523
    5. '```' → logprob: -10.129064559936523
    6. '()' → logprob: -11.254064559936523
    7. '  ' → logprob: -11.379064559936523
    8. ' )' → logprob: -11.754064559936523
    9. '    ' → logprob: -11.879064559936523
    10. 'n' → logprob: -11.879064559936523

Token 120: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010968804126605392
    2. 'n' → logprob: -7.126096725463867
    3. ' ' → logprob: -9.626096725463867
    4. ' lines' → logprob: -9.751096725463867
    5. '```' → logprob: -10.001096725463867
    6. '
' → logprob: -10.126096725463867
    7. 'def' → logprob: -10.376096725463867
    8. ' n' → logprob: -11.126096725463867
    9. 'num' → logprob: -11.876096725463867
    10. '    
' → logprob: -12.001096725463867

Token 121: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7228334546089172
    2. '[' → logprob: -1.3478333950042725
    3. ' list' → logprob: -2.7228333950042725
    4. ':' → logprob: -2.9728333950042725
    5. ' [' → logprob: -3.2228333950042725
    6. ':list' → logprob: -3.4728333950042725
    7. ' :' → logprob: -4.222833633422852
    8. ' [
' → logprob: -4.347833633422852
    9. '    ' → logprob: -4.972833633422852
    10. '[List' → logprob: -5.097833633422852

Token 122: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10828836262226105
    2. ' list' → logprob: -2.608288288116455
    3. ' []' → logprob: -4.483288288116455
    4. ' [' → logprob: -4.733288288116455
    5. '    ' → logprob: -5.108288288116455
    6. 'list' → logprob: -6.608288288116455
    7. '[' → logprob: -7.483288288116455
    8. ' [
' → logprob: -8.108288764953613
    9. ' ' → logprob: -8.608288764953613
    10. '  ' → logprob: -9.108288764953613

Token 123: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.008494604378938675
    2. ' list' → logprob: -4.8834943771362305
    3. 'int' → logprob: -7.1334943771362305
    4. 'List' → logprob: -10.38349437713623
    5. '[list' → logprob: -10.50849437713623
    6. '   ' → logprob: -10.88349437713623
    7. '[int' → logprob: -11.63349437713623
    8. ' int' → logprob: -13.75849437713623
    9. '```' → logprob: -14.75849437713623
    10. '[' → logprob: -14.75849437713623

Token 124: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.141186450899113e-05
    2. '[' → logprob: -10.875020980834961
    3. '<int' → logprob: -13.375020980834961
    4. '(int' → logprob: -15.375020980834961
    5. '[
' → logprob: -15.500020980834961
    6. '[]' → logprob: -15.750020980834961
    7. '[list' → logprob: -16.37502098083496
    8. '```' → logprob: -16.75002098083496
    9. 'int' → logprob: -16.87502098083496
    10. '[List' → logprob: -17.00002098083496

Token 125: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.31557875871658325
    2. ']' → logprob: -1.3155786991119385
    3. ']]' → logprob: -7.440578937530518
    4. ']):' → logprob: -7.565578937530518
    5. '[int' → logprob: -7.815578937530518
    6. '()]' → logprob: -8.56557846069336
    7. ']:
' → logprob: -9.06557846069336
    8. ']()' → logprob: -9.44057846069336
    9. '()' → logprob: -9.56557846069336
    10. ']int' → logprob: -9.69057846069336

Token 126: ' Liste' (ID: 61030)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8206218481063843
    2. ' []' → logprob: -0.8206218481063843
    3. '[]' → logprob: -3.195621967315674
    4. '[' → logprob: -3.320621967315674
    5. '[int' → logprob: -3.320621967315674
    6. ' list' → logprob: -5.820621967315674
    7. '[list' → logprob: -6.820621967315674
    8. ' ' → logprob: -7.820621967315674
    9. ' read' → logprob: -7.820621967315674
    10. 'list' → logprob: -8.070621490478516

Token 127: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.23546874523162842
    2. '[int' → logprob: -1.6104687452316284
    3. 'des' → logprob: -4.985468864440918
    4. ' of' → logprob: -6.360468864440918
    5. '_des' → logprob: -7.735468864440918
    6. '[' → logprob: -8.110468864440918
    7. 'Des' → logprob: -8.235468864440918
    8. '<int' → logprob: -8.485468864440918
    9. ' de' → logprob: -9.235468864440918
    10. '[]' → logprob: -10.610468864440918

Token 128: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.24892133474349976
    2. 'num' → logprob: -1.6239213943481445
    3. ' nombres' → logprob: -3.9989213943481445
    4. ' numbers' → logprob: -6.1239213943481445
    5. 'numbers' → logprob: -6.2489213943481445
    6. ' numeros' → logprob: -8.248921394348145
    7. 'nums' → logprob: -8.873921394348145
    8. ' números' → logprob: -9.248921394348145
    9. ' numéro' → logprob: -9.998921394348145
    10. 'ent' → logprob: -10.498921394348145

Token 129: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.5121424794197083
    2. 'é' → logprob: -1.0121424198150635
    3. '_' → logprob: -4.012142658233643
    4. 'éro' → logprob: -4.262142658233643
    5. 'ro' → logprob: -7.387142658233643
    6. 'ros' → logprob: -7.387142658233643
    7. 'érés' → logprob: -7.512142658233643
    8. '__' → logprob: -7.762142658233643
    9. '_ro' → logprob: -7.762142658233643
    10. 'és' → logprob: -7.887142658233643

Token 130: ' tir' (ID: 16690)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9034516215324402
    2. 'tir' → logprob: -0.9034516215324402
    3. '_t' → logprob: -2.028451681137085
    4. ' tir' → logprob: -3.278451681137085
    5. '_draw' → logprob: -4.278451442718506
    6. 'draw' → logprob: -6.528451442718506
    7. ' ' → logprob: -6.903451442718506
    8. 's' → logprob: -7.028451442718506
    9. ' _' → logprob: -7.528451442718506
    10. 't' → logprob: -8.028451919555664

Token 131: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.11445050686597824
    2. 'rés' → logprob: -2.239450454711914
    3. 'é' → logprob: -7.364450454711914
    4. 'rès' → logprob: -8.364450454711914
    5. 's' → logprob: -8.864450454711914
    6. '```' → logprob: -8.989450454711914
    7. '``' → logprob: -9.489450454711914
    8. 'es' → logprob: -9.614450454711914
    9. '[' → logprob: -9.739450454711914
    10. 'dés' → logprob: -10.114450454711914

Token 132: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3620642125606537
    2. '   ' → logprob: -1.362064242362976
    3. ')' → logprob: -4.112064361572266
    4. ' ]' → logprob: -4.362064361572266
    5. '()' → logprob: -4.737064361572266
    6. '  ' → logprob: -6.487064361572266
    7. '()]' → logprob: -6.737064361572266
    8. '<|end|>' → logprob: -6.737064361572266
    9. '    ' → logprob: -7.112064361572266
    10. ' ' → logprob: -7.487064361572266

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007936051115393639
    2. ']' → logprob: -5.132936000823975
    3. 'def' → logprob: -7.132936000823975
    4. ')' → logprob: -7.257936000823975
    5. '"""' → logprob: -9.007936477661133
    6. '    
' → logprob: -9.507936477661133
    7. '    ' → logprob: -9.632936477661133
    8. '"""
' → logprob: -10.007936477661133
    9. ' ]' → logprob: -10.507936477661133
    10. '()' → logprob: -10.632936477661133

Token 134: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008872066624462605
    2. ']' → logprob: -5.508872032165527
    3. 'def' → logprob: -6.008872032165527
    4. ')' → logprob: -6.258872032165527
    5. '"""' → logprob: -8.633872032165527
    6. '"""
' (adapté à ' """
') → logprob: -9.633872032165527
    7. '```' → logprob: -9.633872032165527
    8. ']
' → logprob: -10.383872032165527
    9. '
' → logprob: -10.883872032165527
    10. ')
' → logprob: -11.508872032165527

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021268151700496674
    2. 'n' → logprob: -4.271268367767334
    3. ' n' → logprob: -5.021268367767334
    4. ' total' → logprob: -8.646267890930176
    5. 'total' → logprob: -9.021267890930176
    6. 'num' → logprob: -10.146267890930176
    7. 'def' → logprob: -10.396267890930176
    8. 'count' → logprob: -11.146267890930176
    9. '	n' → logprob: -11.271267890930176
    10. '    ' → logprob: -11.521267890930176

Token 136: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2321670651435852
    2. ' n' → logprob: -1.7321670055389404
    3. 'count' → logprob: -4.7321672439575195
    4. 'total' → logprob: -4.9821672439575195
    5. '   ' → logprob: -5.1071672439575195
    6. ' count' → logprob: -5.7321672439575195
    7. ' total' → logprob: -5.7321672439575195
    8. 'num' → logprob: -6.6071672439575195
    9. 'nb' → logprob: -8.73216724395752
    10. 'draw' → logprob: -8.85716724395752

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016134431585669518
    2. '=' → logprob: -4.141134262084961
    3. ' ' → logprob: -9.891134262084961
    4. '=int' → logprob: -10.266134262084961
    5. '_' → logprob: -12.391134262084961
    6. ' =
' → logprob: -12.641134262084961
    7. '  ' → logprob: -13.141134262084961
    8. ')' → logprob: -13.391134262084961
    9. ',' → logprob: -13.641134262084961
    10. ' ' → logprob: -13.891134262084961

Token 138: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.005233882926404476
    2. 'int' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.005233764648438
    4. ' in' → logprob: -17.380233764648438
    5. '=int' → logprob: -17.380233764648438
    6. '[int' → logprob: -18.255233764648438
    7. '	int' → logprob: -18.755233764648438
    8. '<int' → logprob: -19.130233764648438
    9. '(int' → logprob: -19.255233764648438
    10. ' ' → logprob: -20.255233764648438

Token 139: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05037597194314003
    2. '(' → logprob: -3.0503759384155273
    3. '(sys' → logprob: -6.425375938415527
    4. 'input' → logprob: -8.800375938415527
    5. ' (' → logprob: -11.675375938415527
    6. '()' → logprob: -12.425375938415527
    7. ' input' → logprob: -12.800375938415527
    8. '(
' → logprob: -14.300375938415527
    9. 'sys' → logprob: -15.175375938415527
    10. '(in' → logprob: -16.550376892089844

Token 140: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018271449953317642
    2. '()' → logprob: -4.018271446228027
    3. '())
' → logprob: -9.518271446228027
    4. '().' → logprob: -10.518271446228027
    5. ' ())' → logprob: -11.518271446228027
    6. ')' → logprob: -12.393271446228027
    7. '(' → logprob: -12.643271446228027
    8. '()
' → logprob: -12.893271446228027
    9. '())

' → logprob: -15.018271446228027
    10. '())
' → logprob: -15.518271446228027

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15323320031166077
    2. 'draw' → logprob: -2.778233289718628
    3. '
' → logprob: -3.403233289718628
    4. '    
' → logprob: -4.153233051300049
    5. 'numbers' → logprob: -4.153233051300049
    6. ' drawn' → logprob: -4.403233051300049
    7. ' numbers' → logprob: -7.528233051300049
    8. 'num' → logprob: -7.653233051300049
    9. '  
' → logprob: -8.403233528137207
    10. 'nums' → logprob: -8.403233528137207

Token 142: ' return' (ID: 622)
  Prédit: ' drawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' drawn' → logprob: -0.9988740682601929
    2. ' numbers' → logprob: -1.3738740682601929
    3. 'numbers' → logprob: -1.3738740682601929
    4. 'draw' → logprob: -2.9988741874694824
    5. '   ' → logprob: -3.8738741874694824
    6. 'nums' → logprob: -3.9988741874694824
    7. ' return' → logprob: -4.248874187469482
    8. ' draw' → logprob: -5.373874187469482
    9. 'return' (adapté à ' return') → logprob: -5.498874187469482
    10. '    
' → logprob: -5.623874187469482

Token 143: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.0475546270608902
    2. '[' → logprob: -3.7975547313690186
    3. '[list' → logprob: -3.7975547313690186
    4. '[int' → logprob: -6.6725544929504395
    5. '[input' → logprob: -8.297554969787598
    6. '[List' → logprob: -10.047554969787598
    7. '[num' → logprob: -11.922554969787598
    8. '[n' → logprob: -11.922554969787598
    9. '[line' → logprob: -12.547554969787598
    10. '[next' → logprob: -13.047554969787598

Token 144: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.15310683415737e-05
    2. ' int' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.87502098083496
    4. '[int' → logprob: -18.25002098083496
    5. '<int' → logprob: -18.62502098083496
    6. '```' → logprob: -18.75002098083496
    7. '	int' → logprob: -18.87502098083496
    8. '(int' → logprob: -19.12502098083496
    9. '
' → logprob: -19.75002098083496
    10. '  ' → logprob: -20.12502098083496

Token 145: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010414731688797474
    2. '()' → logprob: -5.1354146003723145
    3. '(' → logprob: -5.6354146003723145
    4. 'input' → logprob: -7.1354146003723145
    5. '(
' → logprob: -10.010415077209473
    6. '(sys' → logprob: -10.635415077209473
    7. ' input' → logprob: -10.885415077209473
    8. ' (' → logprob: -11.385415077209473
    9. ' ()' → logprob: -12.510415077209473
    10. '()]' → logprob: -13.510415077209473

Token 146: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00019972586596850306
    2. '()' → logprob: -8.625199317932129
    3. ')' → logprob: -11.750199317932129
    4. '())
' → logprob: -12.250199317932129
    5. ' ())' → logprob: -13.000199317932129
    6. '()]' → logprob: -13.500199317932129
    7. '().' → logprob: -13.500199317932129
    8. '()))' → logprob: -13.625199317932129
    9. '()
' → logprob: -14.750199317932129
    10. '(' → logprob: -15.250199317932129

Token 147: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4296475052833557
    2. ')' → logprob: -1.679647445678711
    3. '()' → logprob: -1.929647445678711
    4. ' for' → logprob: -4.054647445678711
    5. ' ' → logprob: -9.304647445678711
    6. ']' → logprob: -9.554647445678711
    7. '   ' → logprob: -10.054647445678711
    8. '	for' → logprob: -10.679647445678711
    9. '(' → logprob: -10.929647445678711
    10. ')]' → logprob: -11.429647445678711

Token 148: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1646793931722641
    2. ' _' → logprob: -2.0396792888641357
    3. '_' → logprob: -4.414679527282715
    4. ' ' → logprob: -5.164679527282715
    5. 'range' → logprob: -6.289679527282715
    6. ' in' → logprob: -6.289679527282715
    7. '_range' → logprob: -8.414679527282715
    8. ' ' → logprob: -12.039679527282715
    9. '	range' → logprob: -12.039679527282715
    10. ' xrange' → logprob: -12.789679527282715

Token 149: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20202122628688812
    2. ' range' → logprob: -1.7020212411880493
    3. ' in' → logprob: -7.45202112197876
    4. 'in' → logprob: -10.577021598815918
    5. '(range' → logprob: -13.577021598815918
    6. '	range' → logprob: -15.202021598815918
    7. ' ' → logprob: -15.452021598815918
    8. '  ' → logprob: -16.4520206451416
    9. '(' → logprob: -17.0770206451416
    10. ')' → logprob: -17.8270206451416

Token 150: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889099419116974
    2. ' range' → logprob: -2.5788910388946533
    3. '(range' → logprob: -14.953890800476074
    4. 'rang' → logprob: -14.953890800476074
    5. '	range' → logprob: -15.078890800476074
    6. ' ' → logprob: -15.953890800476074
    7. 'ran' → logprob: -16.95389175415039
    8. 'ra' → logprob: -17.32889175415039
    9. 'r' → logprob: -17.32889175415039
    10. '_' → logprob: -17.57889175415039

Token 151: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002649119414854795
    2. '(' → logprob: -8.250265121459961
    3. ' (' → logprob: -13.000265121459961
    4. 'N' → logprob: -14.125265121459961
    5. '(
' → logprob: -14.250265121459961
    6. '(n' → logprob: -17.37526512145996
    7. '(

' → logprob: -18.50026512145996
    8. ' N' → logprob: -18.62526512145996
    9. '	N' → logprob: -19.25026512145996
    10. '   ' → logprob: -19.62526512145996

Token 152: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013154871703591198
    2. ']' → logprob: -9.000131607055664
    3. ')' → logprob: -11.875131607055664
    4. ' )' → logprob: -15.125131607055664
    5. ')]
' → logprob: -15.250131607055664
    6. ' ]' → logprob: -15.625131607055664
    7. '   ' → logprob: -16.250131607055664
    8. '])' → logprob: -16.500131607055664
    9. '])]' → logprob: -17.000131607055664
    10. '))' → logprob: -17.125131607055664

Token 153: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5048530030981055e-06
    2. '#' → logprob: -14.625001907348633
    3. 'draw' → logprob: -15.375001907348633
    4. '```' → logprob: -15.375001907348633
    5. 'import' → logprob: -15.625001907348633
    6. 'class' → logprob: -16.000001907348633
    7. '<|end|>' → logprob: -16.000001907348633
    8. 'if' → logprob: -17.250001907348633
    9. ' def' → logprob: -17.250001907348633
    10. '
' → logprob: -17.250001907348633

Token 154: ' mark' (ID: 1983)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.23896853625774384
    2. ' is' → logprob: -2.23896861076355
    3. ' main' → logprob: -2.73896861076355
    4. ' has' → logprob: -3.48896861076355
    5. ' bingo' → logprob: -5.363968372344971
    6. 'check' → logprob: -5.863968372344971
    7. ' mark' → logprob: -6.488968372344971
    8. 'b' → logprob: -8.363968849182129
    9. 'main' → logprob: -8.488968849182129
    10. ' def' → logprob: -8.488968849182129

Token 155: '_draw' (ID: 51847)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.018327748402953148
    2. '_' → logprob: -4.018327713012695
    3. '_numbers' → logprob: -10.268327713012695
    4. '_grid' → logprob: -10.393327713012695
    5. '_number' → logprob: -10.518327713012695
    6. '_cell' → logprob: -10.643327713012695
    7. '_cells' → logprob: -11.643327713012695
    8. '_square' → logprob: -11.768327713012695
    9. '_in' → logprob: -11.893327713012695
    10. '(' → logprob: -12.143327713012695

Token 156: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0012828527251258492
    2. '(n' → logprob: -7.251282691955566
    3. '_numbers' → logprob: -8.001282691955566
    4. '(numbers' → logprob: -9.626282691955566
    5. '_n' → logprob: -10.626282691955566
    6. '(
' → logprob: -10.876282691955566
    7. '()' → logprob: -11.188782691955566
    8. '
' → logprob: -11.376282691955566
    9. '(' → logprob: -11.376282691955566
    10. '_number' → logprob: -11.938782691955566

Token 157: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.006703531369566917
    2. '_' → logprob: -5.6317033767700195
    3. '_number' → logprob: -5.8817033767700195
    4. '(' → logprob: -8.50670337677002
    5. '_num' → logprob: -9.75670337677002
    6. '_nums' → logprob: -10.75670337677002
    7. '_n' → logprob: -11.88170337677002
    8. '_cells' → logprob: -12.50670337677002
    9. '(numbers' → logprob: -12.75670337677002
    10. 'numbers' → logprob: -13.13170337677002

Token 158: '(b' (ID: 3229)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.3156854212284088
    2. '(' → logprob: -1.3156853914260864
    3. '(b' → logprob: -6.440685272216797
    4. '(gr' → logprob: -7.565685272216797
    5. '(g' → logprob: -8.315685272216797
    6. '(board' → logprob: -10.815685272216797
    7. '(Grid' → logprob: -11.315685272216797
    8. ' (' → logprob: -11.690685272216797
    9. '(
' → logprob: -12.565685272216797
    10. '(s' → logprob: -12.815685272216797

Token 159: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -0.02025957964360714
    2. '_' → logprob: -4.645259380340576
    3. 'ing' → logprob: -5.395259380340576
    4. 'i' → logprob: -6.645259380340576
    5. '```' → logprob: -7.020259380340576
    6. ')' → logprob: -7.395259380340576
    7. '   ' → logprob: -8.020259857177734
    8. '_in' → logprob: -8.270259857177734
    9. '_ing' → logprob: -8.395259857177734
    10. '``' → logprob: -8.520259857177734

Token 160: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.0009338518721051514
    2. '_' → logprob: -7.250933647155762
    3. '_gr' → logprob: -8.750933647155762
    4. ')_' → logprob: -10.500933647155762
    5. ' _' → logprob: -12.250933647155762
    6. 'grid' → logprob: -12.250933647155762
    7. ')' → logprob: -12.250933647155762
    8. '):' → logprob: -12.750933647155762
    9. '   ' → logprob: -13.000933647155762
    10. ' grid' → logprob: -13.125933647155762

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000320565392030403
    2. ' ,' → logprob: -8.500320434570312
    3. ',b' → logprob: -9.250320434570312
    4. '):' → logprob: -11.500320434570312
    5. ',
' → logprob: -12.000320434570312
    6. '   ' → logprob: -13.875320434570312
    7. ')' → logprob: -13.875320434570312
    8. ' ' → logprob: -14.375320434570312
    9. ',n' → logprob: -14.500320434570312
    10. ',g' → logprob: -15.125320434570312

Token 162: ' drawn' (ID: 25279)
  Prédit: ' drawn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' drawn' → logprob: -0.08913009613752365
    2. 'draw' → logprob: -2.464130163192749
    3. ' numbers' → logprob: -9.589130401611328
    4. 'numbers' → logprob: -10.089130401611328
    5. ' draw' → logprob: -10.464130401611328
    6. '   ' → logprob: -11.589130401611328
    7. ' draws' → logprob: -11.714130401611328
    8. '_draw' → logprob: -11.714130401611328
    9. 'marked' → logprob: -12.339130401611328
    10. 'called' → logprob: -12.589130401611328

Token 163: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.003775619901716709
    2. '_' → logprob: -5.628775596618652
    3. ')_' → logprob: -9.753775596618652
    4. '_nums' → logprob: -9.878775596618652
    5. '_num' → logprob: -10.753775596618652
    6. '_n' → logprob: -11.128775596618652
    7. ')' → logprob: -11.128775596618652
    8. '_indices' → logprob: -13.003775596618652
    9. '_number' → logprob: -13.128775596618652
    10. '_)' → logprob: -13.253775596618652

Token 164: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012122603366151452
    2. '):
' → logprob: -6.876212120056152
    3. ')' → logprob: -9.001212120056152
    4. ' ):' → logprob: -9.876212120056152
    5. ',' → logprob: -13.501212120056152
    6. '):
' → logprob: -13.626212120056152
    7. ':' → logprob: -14.126212120056152
    8. '   ' → logprob: -14.376212120056152
    9. ']:' → logprob: -15.501212120056152
    10. ' ' → logprob: -15.626212120056152

Token 165: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12673383951187134
    2. '   ' → logprob: -2.3767337799072266
    3. ':
' → logprob: -4.501733779907227
    4. '):' → logprob: -5.376733779907227
    5. '(b' → logprob: -5.501733779907227
    6. '(' → logprob: -5.626733779907227
    7. ' :' → logprob: -7.001733779907227
    8. '(n' → logprob: -8.126733779907227
    9. '):
' → logprob: -8.251733779907227
    10. '():' → logprob: -8.251733779907227

Token 166: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002327363472431898
    2. ' for' → logprob: -7.1273274421691895
    3. '
' → logprob: -7.2523274421691895
    4. '    ' → logprob: -8.252326965332031
    5. '    
' → logprob: -8.877326965332031
    6. ':' → logprob: -9.002326965332031
    7. 'for' → logprob: -9.127326965332031
    8. ' ' → logprob: -9.877326965332031
    9. '  ' → logprob: -10.502326965332031
    10. '   
' → logprob: -10.502326965332031

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024725666735321283
    2. '    ' → logprob: -7.002472400665283
    3. ' for' → logprob: -7.127472400665283
    4. 'for' → logprob: -8.627472877502441
    5. 'def' → logprob: -8.877472877502441
    6. ' """
' → logprob: -9.127472877502441
    7. '"""' → logprob: -9.252472877502441
    8. ' indentation' → logprob: -9.752472877502441
    9. ' """' → logprob: -10.127472877502441
    10. '
' → logprob: -10.127472877502441

Token 168: ' Mar' (ID: 3145)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.685285747051239
    2. '   ' → logprob: -0.810285747051239
    3. 'for' → logprob: -3.310285806655884
    4. ' marked' → logprob: -5.310285568237305
    5. ' """
' → logprob: -5.435285568237305
    6. ' """' → logprob: -6.435285568237305
    7. '    
' → logprob: -6.935285568237305
    8. ' 
' → logprob: -7.185285568237305
    9. ' grid' → logprob: -7.685285568237305
    10. '    ' → logprob: -7.685285568237305

Token 169: 'que' (ID: 1126)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004282822832465172
    2. 'que' → logprob: -5.5042829513549805
    3. 'q' → logprob: -9.00428295135498
    4. 'quer' → logprob: -10.25428295135498
    5. 'qu' → logprob: -10.75428295135498
    6. 'к' → logprob: -11.87928295135498
    7. 'ke' → logprob: -12.50428295135498
    8. 'ker' → logprob: -12.75428295135498
    9. '```' → logprob: -12.87928295135498
    10. 'r' → logprob: -13.12928295135498

Token 170: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14291222393512726
    2. ' for' → logprob: -2.3929121494293213
    3. '   ' → logprob: -4.1429123878479
    4. ' the' → logprob: -4.1429123878479
    5. '  ' → logprob: -6.2679123878479
    6. ' ' → logprob: -6.2679123878479
    7. 'for' → logprob: -6.8929123878479
    8. ' la' → logprob: -7.0179123878479
    9. '_' → logprob: -7.2679123878479
    10. '    ' → logprob: -7.3929123878479

Token 171: ' cases' (ID: 7911)
  Prédit: ' cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.7127119898796082
    2. 'cases' → logprob: -1.587712049484253
    3. ' num' → logprob: -3.212712049484253
    4. ' lignes' → logprob: -3.337712049484253
    5. 'num' → logprob: -3.587712049484253
    6. ' ' → logprob: -3.587712049484253
    7. ' cellules' → logprob: -3.587712049484253
    8. ' numbers' → logprob: -3.712712049484253
    9. ' nombres' → logprob: -3.712712049484253
    10. 'n' → logprob: -4.337711811065674

Token 172: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1175569295883179
    2. ' du' → logprob: -1.9925569295883179
    3. ' (' → logprob: -1.9925569295883179
    4. ' ' → logprob: -2.7425570487976074
    5. ' dans' → logprob: -2.7425570487976074
    6. '(b' → logprob: -3.2425570487976074
    7. '   ' → logprob: -3.4925570487976074
    8. 'dans' → logprob: -3.4925570487976074
    9. 'de' → logprob: -3.7425570487976074
    10. ' au' → logprob: -3.8675570487976074

Token 173: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6075553297996521
    2. ' bingo' → logprob: -1.1075553894042969
    3. ' la' → logprob: -2.107555389404297
    4. ' b' → logprob: -6.857555389404297
    5. ' the' → logprob: -6.982555389404297
    6. 'la' → logprob: -7.482555389404297
    7. ' ' → logprob: -7.607555389404297
    8. 'the' → logprob: -8.857555389404297
    9. '   ' → logprob: -9.357555389404297
    10. 'l' → logprob: -9.732555389404297

Token 174: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.6591157913208008
    2. 'gr' → logprob: -0.7841157913208008
    3. 'b' → logprob: -3.909115791320801
    4. 'grid' → logprob: -5.909115791320801
    5. ' bingo' → logprob: -6.034115791320801
    6. ' grid' → logprob: -7.659115791320801
    7. ' gr' → logprob: -7.909115791320801
    8. ' ' → logprob: -10.4091157913208
    9. ' b' → logprob: -10.5341157913208
    10. 'for' → logprob: -11.0341157913208

Token 175: ' dont' (ID: 11562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4218801259994507
    2. ' bingo' → logprob: -1.4218801259994507
    3. '_' → logprob: -3.5468802452087402
    4. ' b' → logprob: -4.29688024520874
    5. '_b' → logprob: -4.29688024520874
    6. 'b' → logprob: -4.92188024520874
    7. ',' → logprob: -4.92188024520874
    8. ' en' → logprob: -5.29688024520874
    9. '[' → logprob: -5.42188024520874
    10. ' de' → logprob: -5.54688024520874

Token 176: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9392821788787842
    2. ' bingo' → logprob: -1.3142821788787842
    3. ' la' → logprob: -1.8142821788787842
    4. ' b' → logprob: -2.814282178878784
    5. ' les' → logprob: -3.189282178878784
    6. 'b' → logprob: -3.939282178878784
    7. ' ' → logprob: -4.064282417297363
    8. ' any' → logprob: -4.689282417297363
    9. ' the' → logprob: -4.814282417297363
    10. ' value' → logprob: -5.689282417297363

Token 177: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.25894445180892944
    2. 'val' → logprob: -1.5089445114135742
    3. ' val' → logprob: -6.133944511413574
    4. ' valeurs' → logprob: -6.508944511413574
    5. 'value' → logprob: -7.258944511413574
    6. 'number' → logprob: -7.633944511413574
    7. ' value' → logprob: -7.758944511413574
    8. ' number' → logprob: -8.133944511413574
    9. ' ' → logprob: -8.133944511413574
    10. 'nombre' → logprob: -8.258944511413574

Token 178: ' correspond' (ID: 11095)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.4531714916229248
    2. ' correspond' → logprob: -1.5781714916229248
    3. ' se' → logprob: -2.578171491622925
    4. ' ' → logprob: -3.453171491622925
    5. ' is' → logprob: -4.203171730041504
    6. ' in' → logprob: -4.953171730041504
    7. ' match' → logprob: -5.078171730041504
    8. ' matches' → logprob: -5.453171730041504
    9. ' corresponds' → logprob: -5.578171730041504
    10. ' dans' → logprob: -5.953171730041504

Token 179: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7977573871612549
    2. ' ' → logprob: -1.5477573871612549
    3. ' a' → logprob: -1.9227573871612549
    4. ' aux' → logprob: -2.547757387161255
    5. ' au' → logprob: -2.797757387161255
    6. ' to' → logprob: -3.547757387161255
    7. 'to' → logprob: -4.922757148742676
    8. '  ' → logprob: -5.672757148742676
    9. 'au' → logprob: -6.172757148742676
    10. 'à' → logprob: -6.547757148742676

Token 180: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.013748889788985252
    2. ' l' → logprob: -5.013749122619629
    3. ' une' → logprob: -5.513749122619629
    4. 'un' → logprob: -6.763749122619629
    5. ' des' → logprob: -7.138749122619629
    6. ' a' → logprob: -7.388749122619629
    7. ' one' → logprob: -9.138749122619629
    8. ' drawn' → logprob: -9.263749122619629
    9. ' any' → logprob: -10.013749122619629
    10. 'l' → logprob: -10.263749122619629

Token 181: ' numéro' (ID: 65036)
  Prédit: ' numéro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numéro' → logprob: -0.10325764864683151
    2. ' nombre' → logprob: -3.353257656097412
    3. ' number' → logprob: -3.603257656097412
    4. ' drawn' → logprob: -4.603257656097412
    5. ' num' → logprob: -4.728257656097412
    6. 'num' → logprob: -5.103257656097412
    7. 'number' → logprob: -5.853257656097412
    8. ' numero' → logprob: -5.853257656097412
    9. 'nombre' → logprob: -6.228257656097412
    10. 'numero' → logprob: -6.853257656097412

Token 182: ' tir' (ID: 16690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5487222671508789
    2. '_' → logprob: -0.9237222671508789
    3. ' tir' → logprob: -5.298722267150879
    4. ' présent' → logprob: -5.298722267150879
    5. '_draw' → logprob: -5.298722267150879
    6. ' present' → logprob: -6.548722267150879
    7. ' drawn' → logprob: -6.548722267150879
    8. ' _' → logprob: -6.798722267150879
    9. ' d' → logprob: -7.673722267150879
    10. 'prés' → logprob: -8.048722267150879

Token 183: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.17600779235363007
    2. ' ' → logprob: -2.1760077476501465
    3. '   ' → logprob: -4.5510077476501465
    4. ')' → logprob: -4.8010077476501465
    5. '_' → logprob: -4.9260077476501465
    6. 'n' → logprob: -5.8010077476501465
    7. ' à' → logprob: -5.8010077476501465
    8. '  ' → logprob: -5.9260077476501465
    9. '}' → logprob: -6.3010077476501465
    10. '=' → logprob: -6.4260077476501465

Token 184: '.

' (ID: 364)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9046214818954468
    2. '.' → logprob: -1.6546214818954468
    3. '   ' → logprob: -1.6546214818954468
    4. ' en' → logprob: -2.5296216011047363
    5. ' ' → logprob: -2.9046216011047363
    6. ' par' → logprob: -3.5296216011047363
    7. ' ,' → logprob: -4.154621601104736
    8. ' ' → logprob: -5.029621601104736
    9. ' avec' → logprob: -5.404621601104736
    10. '  ' → logprob: -5.529621601104736

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010123264510184526
    2. ' ' → logprob: -8.126012802124023
    3. '    
' → logprob: -8.251012802124023
    4. '    ' → logprob: -9.126012802124023
    5. ' 
' → logprob: -9.501012802124023
    6. '
' → logprob: -10.126012802124023
    7. '   
' → logprob: -10.376012802124023
    8. '  ' → logprob: -10.501012802124023
    9. '  
' → logprob: -10.501012802124023
    10. 'n' → logprob: -10.626012802124023

Token 186: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043298326432704926
    2. '    
' → logprob: -3.6682982444763184
    3. ' 
' → logprob: -4.668298244476318
    4. ' for' → logprob: -5.793298244476318
    5. '   
' → logprob: -6.418298244476318
    6. ' ' → logprob: -7.418298244476318
    7. '
' → logprob: -7.543298244476318
    8. '     
' → logprob: -8.418298721313477
    9. '   ' → logprob: -8.543298721313477
    10. 'for' → logprob: -8.668298721313477

Token 187: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2676756680011749
    2. '=' → logprob: -2.3926756381988525
    3. ':' → logprob: -2.8926756381988525
    4. '(' → logprob: -3.5176756381988525
    5. '):' → logprob: -3.6426756381988525
    6. ')' → logprob: -4.392675876617432
    7. '(b' → logprob: -4.392675876617432
    8. ' (' → logprob: -5.892675876617432
    9. '   ' → logprob: -6.642675876617432
    10. ',b' → logprob: -6.892675876617432

Token 188: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12715309858322144
    2. 'b' → logprob: -2.752153158187866
    3. ' bingo' → logprob: -3.877153158187866
    4. ' b' → logprob: -4.002152919769287
    5. '	b' → logprob: -4.502152919769287
    6. '    ' → logprob: -5.502152919769287
    7. ' ' → logprob: -7.877152919769287
    8. '    
' → logprob: -8.252153396606445
    9. '(b' → logprob: -8.877153396606445
    10. ' ' → logprob: -9.127153396606445

Token 189: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11999950557947159
    2. ' bingo' → logprob: -2.369999408721924
    3. '   ' → logprob: -3.994999408721924
    4. ' b' → logprob: -7.119999408721924
    5. '	b' → logprob: -8.619999885559082
    6. ' ' → logprob: -9.494999885559082
    7. ' grid' → logprob: -10.494999885559082
    8. 'grid' → logprob: -10.994999885559082
    9. ' ' → logprob: -11.369999885559082
    10. 'bing' → logprob: -11.869999885559082

Token 190: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.0004822697374038398
    2. '_' → logprob: -7.875482082366943
    3. '_gr' → logprob: -9.250482559204102
    4. '_b' → logprob: -13.000482559204102
    5. '_GRID' → logprob: -14.125482559204102
    6. ' _' → logprob: -14.625482559204102
    7. '[' → logprob: -14.750482559204102
    8. 'Grid' → logprob: -15.000482559204102
    9. 'grid' → logprob: -15.375482559204102
    10. ' ' → logprob: -15.500482559204102

Token 191: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -5.061676347395405e-05
    2. ' ,' → logprob: -11.12505054473877
    3. ':' → logprob: -11.25005054473877
    4. '):' → logprob: -11.37505054473877
    5. ',b' → logprob: -12.62505054473877
    6. ',List' → logprob: -13.37505054473877
    7. ',
' → logprob: -13.62505054473877
    8. ',list' → logprob: -14.12505054473877
    9. ':list' → logprob: -14.12505054473877
    10. ' ' → logprob: -14.37505054473877

Token 192: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0011876109056174755
    2. ' list' → logprob: -7.126187801361084
    3. 'List' → logprob: -8.126187324523926
    4. ')' → logprob: -9.751187324523926
    5. '   ' → logprob: -11.126187324523926
    6. '[list' → logprob: -11.876187324523926
    7. ':list' → logprob: -13.001187324523926
    8. '):' → logprob: -13.376187324523926
    9. '):
' → logprob: -14.376187324523926
    10. ' List' → logprob: -14.751187324523926

Token 193: '[list' (ID: 141696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5777378678321838
    2. '[int' → logprob: -1.702737808227539
    3. '[list' → logprob: -1.952737808227539
    4. '):' → logprob: -3.577737808227539
    5. ')' → logprob: -3.702737808227539
    6. '[' → logprob: -4.077737808227539
    7. '   ' → logprob: -4.202737808227539
    8. ' ,' → logprob: -5.327737808227539
    9. '[List' → logprob: -5.577737808227539
    10. ',list' → logprob: -5.577737808227539

Token 194: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.9040898880339228e-05
    2. ',int' → logprob: -11.000028610229492
    3. 'int' → logprob: -12.375028610229492
    4. ',' → logprob: -12.875028610229492
    5. '   ' → logprob: -13.125028610229492
    6. '<int' → logprob: -13.250028610229492
    7. ']int' → logprob: -13.875028610229492
    8. '[' → logprob: -15.500028610229492
    9. '(int' → logprob: -15.750028610229492
    10. ' int' → logprob: -16.000028610229492

Token 195: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.16299277544021606
    2. ']])' → logprob: -1.9129927158355713
    3. ']],' → logprob: -5.91299295425415
    4. '[int' → logprob: -11.162992477416992
    5. '[' → logprob: -11.412992477416992
    6. '],' → logprob: -11.787992477416992
    7. ' ]' → logprob: -12.537992477416992
    8. ']' → logprob: -12.537992477416992
    9. ']],
' → logprob: -12.537992477416992
    10. ']):' → logprob: -12.662992477416992

Token 196: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05648055300116539
    2. '],' → logprob: -3.056480646133423
    3. '),' → logprob: -5.431480407714844
    4. ']):' → logprob: -6.181480407714844
    5. '):' → logprob: -7.681480407714844
    6. ' ,' → logprob: -8.306480407714844
    7. ')' → logprob: -8.556480407714844
    8. '])' → logprob: -8.806480407714844
    9. ',
' → logprob: -9.306480407714844
    10. '[int' → logprob: -9.431480407714844

Token 197: ' Gr' (ID: 2502)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.47680774331092834
    2. '   ' → logprob: -1.226807713508606
    3. 'list' → logprob: -2.7268078327178955
    4. 'List' → logprob: -5.601807594299316
    5. '    ' → logprob: -5.851807594299316
    6. 'The' → logprob: -5.976807594299316
    7. ' List' → logprob: -6.476807594299316
    8. ' la' → logprob: -6.851807594299316
    9. 'La' → logprob: -6.851807594299316
    10. ' La' → logprob: -6.976807594299316

Token 198: 'ille' (ID: 3301)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.018769612535834312
    2. '   ' → logprob: -4.64376974105835
    3. 'ids' → logprob: -5.89376974105835
    4. 'idden' → logprob: -6.64376974105835
    5. '):
' → logprob: -7.39376974105835
    6. 'ille' → logprob: -7.39376974105835
    7. '[' → logprob: -7.39376974105835
    8. ' id' → logprob: -7.64376974105835
    9. 'idé' → logprob: -8.143769264221191
    10. '[
' → logprob: -8.268769264221191

Token 199: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06272190809249878
    2. ' ,' → logprob: -4.1877217292785645
    3. '<|end|>' → logprob: -4.5627217292785645
    4. '_b' → logprob: -4.9377217292785645
    5. '   ' → logprob: -4.9377217292785645
    6. ',
' → logprob: -5.3127217292785645
    7. '[int' → logprob: -5.6877217292785645
    8. ',b' → logprob: -5.8127217292785645
    9. '[' → logprob: -5.9377217292785645
    10. 'b' → logprob: -6.5627217292785645

Token 200: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10279256850481033
    2. ' bingo' → logprob: -2.352792501449585
    3. 'B' → logprob: -7.102792739868164
    4. ' b' → logprob: -7.477792739868164
    5. ' ' → logprob: -7.727792739868164
    6. '```' → logprob: -8.852792739868164
    7. ' code' → logprob: -8.977792739868164
    8. ' jeu' → logprob: -8.977792739868164
    9. 'code' → logprob: -9.977792739868164
    10. 'jeu' → logprob: -9.977792739868164

Token 201: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02849363349378109
    2. '   ' → logprob: -4.403493404388428
    3. ' ,' → logprob: -4.403493404388428
    4. ',
' → logprob: -6.278493404388428
    5. ')' → logprob: -7.278493404388428
    6. '):' → logprob: -8.028493881225586
    7. ',b' → logprob: -8.778493881225586
    8. '<|end|>' → logprob: -8.903493881225586
    9. '):
' → logprob: -9.028493881225586
    10. ' ,
' → logprob: -9.403493881225586

Token 202: '3' (ID: 18)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019248253665864468
    2. ' ,' → logprob: -7.001924991607666
    3. ',
' → logprob: -7.251924991607666
    4. '   ' → logprob: -8.501924514770508
    5. ')' → logprob: -9.501924514770508
    6. '):' → logprob: -11.751924514770508
    7. '),' → logprob: -11.876924514770508
    8. ' ,
' → logprob: -12.626924514770508
    9. ',
' → logprob: -13.626924514770508
    10. ',\
' → logprob: -14.001924514770508

Token 203: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9765519499778748
    2. '   ' → logprob: -1.2265520095825195
    3. '[' → logprob: -1.9765520095825195
    4. ']' → logprob: -2.8515520095825195
    5. '[
' → logprob: -3.7265520095825195
    6. '[int' → logprob: -3.8515520095825195
    7. ')' → logprob: -3.9765520095825195
    8. ' ' → logprob: -4.4765520095825195
    9. '[]' → logprob: -4.6015520095825195
    10. '[x' → logprob: -4.7265520095825195

Token 204: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0027209450490772724
    2. '[' → logprob: -6.002720832824707
    3. ' ' → logprob: -9.002720832824707
    4. '[
' → logprob: -9.752720832824707
    5. '```' → logprob: -10.127720832824707
    6. '-' → logprob: -11.752720832824707
    7. ']' → logprob: -12.627720832824707
    8. '
' → logprob: -13.502720832824707
    9. '   ' → logprob: -13.752720832824707
    10. ' [' → logprob: -13.877720832824707

Token 205: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30746379494667053
    2. '   ' → logprob: -1.8074637651443481
    3. ',
' → logprob: -2.9324638843536377
    4. ')' → logprob: -3.3074638843536377
    5. '):
' → logprob: -5.182463645935059
    6. '<|end|>' → logprob: -6.557463645935059
    7. ' ,' → logprob: -6.807463645935059
    8. '
' → logprob: -7.182463645935059
    9. ')
' → logprob: -7.557463645935059
    10. '):' → logprob: -7.807463645935059

Token 206: ' les' (ID: 1341)
  Prédit: ' marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' marks' → logprob: -1.5035945177078247
    2. 'b' → logprob: -2.003594398498535
    3. 'marked' → logprob: -2.003594398498535
    4. ' the' → logprob: -2.503594398498535
    5. ' drawn' → logprob: -2.753594398498535
    6. ' ' → logprob: -2.753594398498535
    7. ' marked' → logprob: -3.003594398498535
    8. 'bool' → logprob: -3.253594398498535
    9. ' bool' → logprob: -3.753594398498535
    10. '[]' → logprob: -3.753594398498535

Token 207: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.4988327026367188
    2. ' valeurs' → logprob: -2.1238327026367188
    3. '[
' → logprob: -2.3738327026367188
    4. ' drawn' → logprob: -2.4988327026367188
    5. ' marked' → logprob: -2.4988327026367188
    6. 'mar' → logprob: -2.8738327026367188
    7. ' ' → logprob: -2.8738327026367188
    8. 'marked' → logprob: -3.1238327026367188
    9. ' marks' → logprob: -3.4988327026367188
    10. '   ' → logprob: -3.8738327026367188

Token 208: ' initial' (ID: 4871)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0971812009811401
    2. ')' → logprob: -1.4721812009811401
    3. '   ' → logprob: -1.7221812009811401
    4. '):' → logprob: -2.4721813201904297
    5. ' marked' → logprob: -3.3471813201904297
    6. '):
' → logprob: -3.8471813201904297
    7. '),' → logprob: -4.22218132019043
    8. ' ,' → logprob: -4.47218132019043
    9. ',
' → logprob: -4.72218132019043
    10. '[' → logprob: -4.72218132019043

Token 209: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.42674365639686584
    2. '_' → logprob: -1.9267436265945435
    3. 'ées' → logprob: -2.301743745803833
    4. '[' → logprob: -3.426743745803833
    5. 'és' → logprob: -3.801743745803833
    6. 'ales' → logprob: -4.551743507385254
    7. ')' → logprob: -4.801743507385254
    8. '   ' → logprob: -5.801743507385254
    9. '[
' → logprob: -5.801743507385254
    10. 'aires' → logprob: -5.926743507385254

Token 210: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49794453382492065
    2. '   ' → logprob: -0.9979445338249207
    3. ',
' → logprob: -3.9979445934295654
    4. '):
' → logprob: -6.122944355010986
    5. ')' → logprob: -6.622944355010986
    6. '
' → logprob: -7.747944355010986
    7. ' ,' → logprob: -7.747944355010986
    8. '    
' → logprob: -8.622944831848145
    9. ' ' → logprob: -8.747944831848145
    10. ',b' → logprob: -9.122944831848145

Token 211: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02427177131175995
    2. '    
' → logprob: -4.8992719650268555
    3. '  
' → logprob: -5.3992719650268555
    4. ')' → logprob: -5.3992719650268555
    5. '
' → logprob: -5.5242719650268555
    6. '   
' → logprob: -6.7742719650268555
    7. ' 
' → logprob: -7.1492719650268555
    8. '):
' → logprob: -7.7742719650268555
    9. '```' → logprob: -8.399271965026855
    10. 'def' → logprob: -8.774271965026855

Token 212: ' drawn' (ID: 25279)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'draw' → logprob: -1.0502312183380127
    2. ' drawn' → logprob: -1.0502312183380127
    3. 'marked' → logprob: -1.9252312183380127
    4. '   ' → logprob: -1.9252312183380127
    5. ' marked' → logprob: -4.925230979919434
    6. 'mark' → logprob: -8.300230979919434
    7. 'for' → logprob: -8.425230979919434
    8. 'def' → logprob: -9.175230979919434
    9. '    
' → logprob: -9.300230979919434
    10. ' draw' → logprob: -9.425230979919434

Token 213: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.004700683988630772
    2. '_' → logprob: -5.504700660705566
    3. ')_' → logprob: -8.254700660705566
    4. '_n' → logprob: -9.004700660705566
    5. '_num' → logprob: -9.879700660705566
    6. ' _' → logprob: -10.254700660705566
    7. '_nums' → logprob: -10.379700660705566
    8. '[' → logprob: -10.629700660705566
    9. '_tokens' → logprob: -10.754700660705566
    10. ')' → logprob: -11.504700660705566

Token 214: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.081840880215168
    2. '):
' → logprob: -2.581840991973877
    3. ' ):' → logprob: -6.581840991973877
    4. ',' → logprob: -7.206840991973877
    5. ')' → logprob: -7.956840991973877
    6. '):

' → logprob: -8.331840515136719
    7. ':' → logprob: -9.081840515136719
    8. '   ' → logprob: -10.331840515136719
    9. ' ):
' → logprob: -10.706840515136719
    10. ')):' → logprob: -11.456840515136719

Token 215: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6513677835464478
    2. 'set' → logprob: -0.9013677835464478
    3. '):' → logprob: -2.901367664337158
    4. ')' → logprob: -4.401367664337158
    5. '):
' → logprob: -5.651367664337158
    6. ')set' → logprob: -7.151367664337158
    7. ' list' → logprob: -7.651367664337158
    8. ' set' → logprob: -8.526368141174316
    9. '):

' → logprob: -9.651368141174316
    10. 'List' → logprob: -10.026368141174316

Token 216: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.75000286102295
    3. '):' → logprob: -14.00000286102295
    4. '<int' → logprob: -15.00000286102295
    5. '[list' → logprob: -15.87500286102295
    6. '[
' → logprob: -16.625001907348633
    7. '):
' → logprob: -17.125001907348633
    8. '[Int' → logprob: -17.375001907348633
    9. ')' → logprob: -17.500001907348633
    10. '[List' → logprob: -17.875001907348633

Token 217: ']):' (ID: 60705)
  Prédit: ']):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.017536457628011703
    2. '])' → logprob: -4.517536640167236
    3. ')]' → logprob: -5.392536640167236
    4. ']):
' → logprob: -7.017536640167236
    5. ')' → logprob: -7.642536640167236
    6. ']' → logprob: -8.392536163330078
    7. '):' → logprob: -8.642536163330078
    8. '])]' → logprob: -10.142536163330078
    9. ' ]' → logprob: -10.517536163330078
    10. ']]' → logprob: -10.767536163330078

Token 218: ' Liste' (ID: 61030)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.18307405710220337
    2. 'set' → logprob: -2.4330739974975586
    3. '   ' → logprob: -3.4330739974975586
    4. ' for' → logprob: -4.183073997497559
    5. 'Set' → logprob: -4.558073997497559
    6. ' 
' → logprob: -5.683073997497559
    7. 'for' → logprob: -5.933073997497559
    8. ' Set' → logprob: -6.183073997497559
    9. ')' → logprob: -6.308073997497559
    10. '    
' → logprob: -6.308073997497559

Token 219: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.24648764729499817
    2. '[' → logprob: -2.246487617492676
    3. ' of' → logprob: -3.371487617492676
    4. '   ' → logprob: -4.121487617492676
    5. '[int' → logprob: -4.121487617492676
    6. '):' → logprob: -4.621487617492676
    7. ')' → logprob: -4.746487617492676
    8. '[ind' → logprob: -5.121487617492676
    9. 'des' → logprob: -5.246487617492676
    10. ' de' → logprob: -5.371487617492676

Token 220: ' num' (ID: 2269)
  Prédit: ' drawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' drawn' → logprob: -0.009693527594208717
    2. 'draw' → logprob: -5.009693622589111
    3. ' numbers' → logprob: -6.509693622589111
    4. ' num' → logprob: -7.634693622589111
    5. 'num' → logprob: -8.259693145751953
    6. 'numbers' → logprob: -8.509693145751953
    7. ' ' → logprob: -9.009693145751953
    8. ' ' → logprob: -9.759693145751953
    9. ' draw' → logprob: -10.509693145751953
    10. 'd' → logprob: -10.509693145751953

Token 221: 'éros' (ID: 120888)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.15116655826568604
    2. 'éros' → logprob: -2.4011664390563965
    3. 'és' → logprob: -4.2761664390563965
    4. 'r' → logprob: -4.7761664390563965
    5. 'rs' → logprob: -5.2761664390563965
    6. 'érés' → logprob: -5.5261664390563965
    7. 'é' → logprob: -5.6511664390563965
    8. '   ' → logprob: -5.6511664390563965
    9. 't' → logprob: -6.5261664390563965
    10. '_' → logprob: -6.5261664390563965

Token 222: ' tir' (ID: 16690)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7274448871612549
    2. '_t' → logprob: -0.8524448871612549
    3. 'tir' → logprob: -2.977444887161255
    4. '_draw' → logprob: -3.852444887161255
    5. '   ' → logprob: -4.977444648742676
    6. '	' → logprob: -6.352444648742676
    7. 't' → logprob: -6.602444648742676
    8. '_mark' → logprob: -6.727444648742676
    9. 'draw' → logprob: -7.102444648742676
    10. 's' → logprob: -7.227444648742676

Token 223: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.006896882317960262
    2. 'é' → logprob: -5.25689697265625
    3. '   ' → logprob: -7.38189697265625
    4. 's' → logprob: -7.63189697265625
    5. 'rés' → logprob: -8.50689697265625
    6. '_' → logprob: -9.25689697265625
    7. 'nés' → logprob: -10.13189697265625
    8. '```' → logprob: -10.38189697265625
    9. '[' → logprob: -10.63189697265625
    10. 'ed' → logprob: -10.63189697265625

Token 224: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6903064846992493
    2. '):
' → logprob: -0.8153064846992493
    3. '   ' → logprob: -3.3153064250946045
    4. ')' → logprob: -3.9403064250946045
    5. '):
' → logprob: -8.815306663513184
    6. ' ):' → logprob: -10.440306663513184
    7. ' ):
' → logprob: -10.440306663513184
    8. ']):' → logprob: -10.565306663513184
    9. ')
' → logprob: -10.940306663513184
    10. '
' → logprob: -11.440306663513184

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00537367956712842
    2. '
' → logprob: -6.255373477935791
    3. '    
' → logprob: -7.005373477935791
    4. 'marked' → logprob: -7.005373477935791
    5. ' marked' → logprob: -7.255373477935791
    6. ')' → logprob: -8.25537395477295
    7. '```' → logprob: -8.25537395477295
    8. '   
' → logprob: -9.38037395477295
    9. '  
' → logprob: -10.38037395477295
    10. '    ' → logprob: -10.38037395477295

Token 226: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21585792303085327
    2. 'marked' → logprob: -2.090857982635498
    3. 'for' → logprob: -3.340857982635498
    4. ' for' → logprob: -4.590857982635498
    5. ' marked' → logprob: -4.590857982635498
    6. '"""
' → logprob: -5.340857982635498
    7. '
' → logprob: -5.465857982635498
    8. 'b' → logprob: -6.840857982635498
    9. '    
' → logprob: -7.090857982635498
    10. 'mar' → logprob: -7.215857982635498

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8486427664756775
    2. ' [
' → logprob: -1.2236428260803223
    3. ':
' → logprob: -2.0986428260803223
    4. '[
' → logprob: -3.3486428260803223
    5. ' bingo' → logprob: -3.5986428260803223
    6. '   ' → logprob: -3.7236428260803223
    7. '[' → logprob: -3.9736428260803223
    8. ' None' → logprob: -4.598642826080322
    9. ' :
' → logprob: -4.723642826080322
    10. ' [' → logprob: -5.223642826080322

Token 228: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08488371968269348
    2. '    ' → logprob: -3.334883689880371
    3. '       ' → logprob: -3.709883689880371
    4. ' None' → logprob: -4.209883689880371
    5. 'None' → logprob: -5.334883689880371
    6. ' [
' → logprob: -7.709883689880371
    7. '[' → logprob: -8.209883689880371
    8. '    
' → logprob: -8.709883689880371
    9. 'b' → logprob: -8.959883689880371
    10. '[
' → logprob: -8.959883689880371

Token 229: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.002339258324354887
    2. ' list' → logprob: -6.5023393630981445
    3. 'None' → logprob: -7.1273393630981445
    4. 'List' → logprob: -11.127339363098145
    5. '[list' → logprob: -12.502339363098145
    6. ' None' → logprob: -12.627339363098145
    7. '   ' → logprob: -12.752339363098145
    8. 'set' → logprob: -13.127339363098145
    9. 'none' → logprob: -13.252339363098145
    10. 'bool' → logprob: -13.377339363098145

Token 230: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -3.4285862057004124e-05
    2. '[List' → logprob: -11.25003433227539
    3. '[[' → logprob: -11.50003433227539
    4. '[' → logprob: -11.62503433227539
    5. 'list' → logprob: -13.25003433227539
    6. '[
' → logprob: -16.12503433227539
    7. 'of' → logprob: -16.50003433227539
    8. '```' → logprob: -16.87503433227539
    9. '[int' → logprob: -17.00003433227539
    10. '(list' → logprob: -17.37503433227539

Token 231: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01818377524614334
    2. '[int' → logprob: -4.018183708190918
    3. 'bool' → logprob: -10.643183708190918
    4. '[str' → logprob: -12.018183708190918
    5. '[
' → logprob: -14.018183708190918
    6. '(bool' → logprob: -14.143183708190918
    7. ',bool' → logprob: -14.518183708190918
    8. '[[' → logprob: -14.643183708190918
    9. '<bool' → logprob: -14.893183708190918
    10. '[list' → logprob: -15.018183708190918

Token 232: 'bool' (ID: 9037)
  Prédit: 'bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0005793657619506121
    2. 'int' → logprob: -7.500579357147217
    3. ' bool' → logprob: -11.875579833984375
    4. '[' → logprob: -11.875579833984375
    5. 'str' → logprob: -12.125579833984375
    6. '   ' → logprob: -13.125579833984375
    7. '(bool' → logprob: -13.250579833984375
    8. '
' → logprob: -13.750579833984375
    9. ']' → logprob: -14.500579833984375
    10. '<bool' → logprob: -14.875579833984375

Token 233: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.00888825487345457
    2. ']]:
' → logprob: -4.758888244628906
    3. ']])' → logprob: -9.008888244628906
    4. ']]]' → logprob: -9.133888244628906
    5. '[' → logprob: -11.258888244628906
    6. ' ]' → logprob: -11.633888244628906
    7. ']],' → logprob: -12.133888244628906
    8. ']' → logprob: -12.258888244628906
    9. '   ' → logprob: -12.633888244628906
    10. ']:' → logprob: -13.258888244628906

Token 234: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004990743473172188
    2. ':
' → logprob: -6.004990577697754
    3. '   ' → logprob: -6.379990577697754
    4. ' :' → logprob: -7.754990577697754
    5. '):' → logprob: -8.629990577697754
    6. '[' → logprob: -10.004990577697754
    7. '[b' → logprob: -10.754990577697754
    8. ':b' → logprob: -10.879990577697754
    9. ':[[' → logprob: -10.879990577697754
    10. '(b' → logprob: -11.129990577697754

Token 235: ' Gr' (ID: 2502)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.0672907829284668
    2. '[[' → logprob: -1.1922907829284668
    3. ' [[' → logprob: -1.9422907829284668
    4. ' [
' → logprob: -2.192290782928467
    5. '[' → logprob: -2.942290782928467
    6. ' [' → logprob: -4.692290782928467
    7. '   ' → logprob: -4.692290782928467
    8. ' La' → logprob: -4.817290782928467
    9. ' A' → logprob: -4.817290782928467
    10. 'A' → logprob: -5.817290782928467

Token 236: 'ille' (ID: 3301)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.014164921827614307
    2. 'id' → logprob: -4.639164924621582
    3. '[
' → logprob: -6.139164924621582
    4. '[' → logprob: -6.264164924621582
    5. ' [[' → logprob: -9.014164924621582
    6. '=[[' → logprob: -9.389164924621582
    7. 'ade' → logprob: -10.514164924621582
    8. 'e' → logprob: -10.514164924621582
    9. '([[' → logprob: -11.264164924621582
    10. '[]
' → logprob: -11.514164924621582

Token 237: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13411153852939606
    2. ' de' → logprob: -2.3841116428375244
    3. ' of' → logprob: -4.634111404418945
    4. '[
' → logprob: -4.884111404418945
    5. ' [' → logprob: -5.134111404418945
    6. ' des' → logprob: -6.134111404418945
    7. ' ' → logprob: -6.634111404418945
    8. '[[' → logprob: -6.759111404418945
    9. '_b' → logprob: -7.009111404418945
    10. '_mark' → logprob: -7.009111404418945

Token 238: '3' (ID: 18)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.07263509929180145
    2. '[' → logprob: -2.9476351737976074
    3. '[
' → logprob: -5.447635173797607
    4. 'de' → logprob: -5.447635173797607
    5. 'of' → logprob: -5.822635173797607
    6. ' de' → logprob: -6.197635173797607
    7. '3' → logprob: -6.572635173797607
    8. '([[' → logprob: -7.197635173797607
    9. '=[[' → logprob: -7.947635173797607
    10. 'des' → logprob: -8.19763469696045

Token 239: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3053508400917053
    2. '[' → logprob: -1.4303507804870605
    3. '[[' → logprob: -3.8053507804870605
    4. '[
' → logprob: -7.1803507804870605
    5. ' [[' → logprob: -8.305351257324219
    6. '<bool' → logprob: -8.930351257324219
    7. ' [' → logprob: -9.180351257324219
    8. 'of' → logprob: -9.180351257324219
    9. 'bool' → logprob: -9.305351257324219
    10. '3' → logprob: -10.180351257324219

Token 240: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.008710184134542942
    2. '[' → logprob: -4.7587103843688965
    3. ' ' → logprob: -10.383709907531738
    4. '```' → logprob: -10.883709907531738
    5. '_' → logprob: -11.008709907531738
    6. 'bool' → logprob: -11.383709907531738
    7. '[
' → logprob: -12.008709907531738
    8. ' ' → logprob: -13.133709907531738
    9. '
' → logprob: -13.133709907531738
    10. '[[' → logprob: -13.508709907531738

Token 241: ' de' (ID: 334)
  Prédit: ' indiqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indiqu' → logprob: -0.2671634554862976
    2. ' indicating' → logprob: -2.6421635150909424
    3. ' de' → logprob: -2.7671635150909424
    4. ' mar' → logprob: -3.7671635150909424
    5. 'ind' → logprob: -4.142163276672363
    6. ' marking' → logprob: -4.517163276672363
    7. ' of' → logprob: -4.642163276672363
    8. ' with' → logprob: -5.017163276672363
    9. '[' → logprob: -5.142163276672363
    10. ' représentant' → logprob: -5.392163276672363

Token 242: ' valeurs' (ID: 73668)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.3601650893688202
    2. ' bool' → logprob: -1.3601651191711426
    3. ' la' → logprob: -4.485165119171143
    4. ' mêmes' → logprob: -4.985165119171143
    5. '[' → logprob: -5.235165119171143
    6. 'm' → logprob: -5.360165119171143
    7. ' mar' → logprob: -5.985165119171143
    8. 'mar' → logprob: -5.985165119171143
    9. ' marques' → logprob: -6.110165119171143
    10. ' même' → logprob: -6.235165119171143

Token 243: ' bool' (ID: 3792)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1170802116394043
    2. '   ' → logprob: -1.6170802116394043
    3. '[' → logprob: -2.2420802116394043
    4. ' True' → logprob: -2.3670802116394043
    5. ' marked' → logprob: -2.4920802116394043
    6. ' mar' → logprob: -3.1170802116394043
    7. ' marks' → logprob: -3.4920802116394043
    8. ' mark' → logprob: -4.117080211639404
    9. '[
' → logprob: -4.117080211639404
    10. ' =' → logprob: -4.492080211639404

Token 244: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.016989756375551224
    2. '[' → logprob: -4.141989707946777
    3. '[[' → logprob: -7.766989707946777
    4. '[
' → logprob: -8.641989707946777
    5. 'ées' → logprob: -9.266989707946777
    6. '[][]' → logprob: -10.016989707946777
    7. '```' → logprob: -10.391989707946777
    8. '[['' → logprob: -10.766989707946777
    9. 'eens' → logprob: -10.766989707946777
    10. 'ennes' → logprob: -11.016989707946777

Token 245: 'ennes' (ID: 21989)
  Prédit: 'ennes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ennes' → logprob: -0.006463355850428343
    2. 'enes' → logprob: -5.756463527679443
    3. 'ens' → logprob: -6.006463527679443
    4. 'anes' → logprob: -8.756463050842285
    5. 'enne' → logprob: -9.006463050842285
    6. 'an' → logprob: -9.006463050842285
    7. 'en' → logprob: -9.131463050842285
    8. 'ans' → logprob: -9.131463050842285
    9. 'ènes' → logprob: -10.256463050842285
    10. 'n' → logprob: -10.381463050842285

Token 246: ' indiqu' (ID: 100773)
  Prédit: ' indicating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indicating' → logprob: -0.8143137097358704
    2. ' indiqu' → logprob: -1.1893136501312256
    3. ' marking' → logprob: -2.5643136501312256
    4. ',' → logprob: -3.0643136501312256
    5. ' representing' → logprob: -3.4393136501312256
    6. ' mar' → logprob: -3.6893136501312256
    7. '   ' → logprob: -3.8143136501312256
    8. ' représentant' → logprob: -4.439313888549805
    9. ' mark' → logprob: -4.814313888549805
    10. ' where' → logprob: -5.064313888549805

Token 247: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -4.127333340875339e-06
    2. '   ' → logprob: -13.250003814697266
    3. ' ant' → logprob: -14.000003814697266
    4. '[' → logprob: -14.375003814697266
    5. 'ent' → logprob: -15.000003814697266
    6. '_ant' → logprob: -15.625003814697266
    7. 'antes' → logprob: -16.375003814697266
    8. '=' → logprob: -17.250003814697266
    9. 'e' → logprob: -17.250003814697266
    10. '#' → logprob: -17.250003814697266

Token 248: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.17738474905490875
    2. ' quelles' → logprob: -2.802384853363037
    3. ' si' → logprob: -2.927384853363037
    4. ' lesquelles' → logprob: -4.677384853363037
    5. ',' → logprob: -4.927384853363037
    6. 'True' → logprob: -5.302384853363037
    7. ' la' → logprob: -5.927384853363037
    8. ' True' → logprob: -5.927384853363037
    9. ' if' → logprob: -6.052384853363037
    10. '   ' → logprob: -6.177384853363037

Token 249: ' cases' (ID: 7911)
  Prédit: ' marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marks' → logprob: -0.7268452048301697
    2. ' cases' → logprob: -1.1018452644348145
    3. ' True' → logprob: -3.4768452644348145
    4. ' mar' → logprob: -3.6018452644348145
    5. 'cases' → logprob: -3.6018452644348145
    6. ' marked' → logprob: -3.6018452644348145
    7. 'marks' → logprob: -4.3518452644348145
    8. ' marques' → logprob: -4.3518452644348145
    9. '[
' → logprob: -4.8518452644348145
    10. '[' → logprob: -4.8518452644348145

Token 250: ' mar' (ID: 2674)
  Prédit: ' mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.010073608718812466
    2. 'mar' → logprob: -5.260073661804199
    3. ' marqué' → logprob: -6.760073661804199
    4. ' où' → logprob: -7.135073661804199
    5. ' marked' → logprob: -7.510073661804199
    6. ' marc' → logprob: -7.885073661804199
    7. '   ' → logprob: -8.0100736618042
    8. ' de' → logprob: -8.6350736618042
    9. ' True' → logprob: -8.6350736618042
    10. ' déjà' → logprob: -8.7600736618042

Token 251: 'quées' (ID: 111264)
  Prédit: 'quées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quées' → logprob: -0.004890262149274349
    2. 'qu' → logprob: -5.379890441894531
    3. 'quée' → logprob: -8.754890441894531
    4. 'q' → logprob: -9.629890441894531
    5. 'k' → logprob: -11.629890441894531
    6. '[' → logprob: -11.629890441894531
    7. '```' → logprob: -12.504890441894531
    8. '-' → logprob: -12.629890441894531
    9. 'qués' → logprob: -12.754890441894531
    10. 'qué' → logprob: -12.754890441894531

Token 252: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0243430994451046
    2. '.' → logprob: -4.399343013763428
    3. ',' → logprob: -5.274343013763428
    4. ':' → logprob: -6.899343013763428
    5. ')' → logprob: -7.024343013763428
    6. ']' → logprob: -7.149343013763428
    7. '
' → logprob: -7.774343013763428
    8. '(b' → logprob: -7.774343013763428
    9. ' ' → logprob: -7.899343013763428
    10. '  ' → logprob: -8.024343490600586

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009141081012785435
    2. '
' → logprob: -5.134140968322754
    3. '    
' → logprob: -6.759140968322754
    4. ')' → logprob: -6.884140968322754
    5. '   
' → logprob: -8.134140968322754
    6. '  
' → logprob: -8.634140968322754
    7. '"""' → logprob: -8.884140968322754
    8. '```' → logprob: -9.634140968322754
    9. ')
' → logprob: -9.759140968322754
    10. ']' → logprob: -10.009140968322754

Token 254: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003517518052831292
    2. '
' → logprob: -6.2535176277160645
    3. '    
' → logprob: -7.3785176277160645
    4. ')' → logprob: -7.5035176277160645
    5. '):
' → logprob: -9.503517150878906
    6. '   
' → logprob: -9.628517150878906
    7. '```' → logprob: -9.628517150878906
    8. '  
' → logprob: -9.878517150878906
    9. '"""' → logprob: -10.503517150878906
    10. ')
' → logprob: -10.628517150878906

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07419715076684952
    2. ' marked' → logprob: -3.0741970539093018
    3. 'marked' → logprob: -4.074197292327881
    4. ' marks' → logprob: -5.699197292327881
    5. 'marks' → logprob: -6.449197292327881
    6. ' mark' → logprob: -6.449197292327881
    7. '    
' → logprob: -7.449197292327881
    8. 'mark' → logprob: -7.824197292327881
    9. '
' → logprob: -8.699196815490723
    10. ' grid' → logprob: -8.824196815490723

Token 256: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' (adapté à ' marked') → logprob: -0.07375321537256241
    2. 'marks' → logprob: -2.8237531185150146
    3. '   ' → logprob: -4.823753356933594
    4. 'mark' → logprob: -6.198753356933594
    5. 'return' → logprob: -6.698753356933594
    6. ' marked' → logprob: -8.448753356933594
    7. ' marks' → logprob: -8.698753356933594
    8. 'checked' → logprob: -12.323753356933594
    9. 'result' → logprob: -12.448753356933594
    10. ' return' → logprob: -12.573753356933594

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31895169615745544
    2. '=' → logprob: -1.3189517259597778
    3. '_' → logprob: -5.818951606750488
    4. '_grid' → logprob: -5.943951606750488
    5. ' ' → logprob: -10.193951606750488
    6. '   ' → logprob: -10.943951606750488
    7. '_=' → logprob: -12.818951606750488
    8. '=[]' → logprob: -12.943951606750488
    9. '_marks' → logprob: -13.068951606750488
    10. '=
' → logprob: -13.193951606750488

Token 258: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.07889077812433243
    2. ' [[' → logprob: -2.578890800476074
    3. ' [' → logprob: -14.328890800476074
    4. '[' → logprob: -14.828890800476074
    5. '[]' → logprob: -16.953889846801758
    6. '[]
' → logprob: -17.453889846801758
    7. '[
' → logprob: -17.953889846801758
    8. '([[' → logprob: -19.203889846801758
    9. '   ' → logprob: -19.828889846801758
    10. ' ' → logprob: -20.078889846801758

Token 259: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.306760805164231e-05
    2. ' False' → logprob: -11.25001335144043
    3. '(False' → logprob: -18.25001335144043
    4. '   ' → logprob: -18.37501335144043
    5. 'false' → logprob: -20.00001335144043
    6. '
' → logprob: -20.25001335144043
    7. '=False' → logprob: -20.25001335144043
    8. '0' → logprob: -21.87501335144043
    9. 'True' → logprob: -22.12501335144043
    10. '    
' → logprob: -22.62501335144043

Token 260: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.020589066669344902
    2. 'for' → logprob: -3.8955891132354736
    3. ']' → logprob: -11.270588874816895
    4. '   ' → logprob: -11.395588874816895
    5. ' ' → logprob: -11.895588874816895
    6. ',' → logprob: -12.145588874816895
    7. ')' → logprob: -12.895588874816895
    8. '	for' → logprob: -13.020588874816895
    9. '    ' → logprob: -13.395588874816895
    10. ' if' → logprob: -13.395588874816895

Token 261: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6931739449501038
    2. ' _' → logprob: -0.6931739449501038
    3. '_j' → logprob: -11.068174362182617
    4. ' j' → logprob: -12.318174362182617
    5. ' range' → logprob: -12.693174362182617
    6. 'range' → logprob: -14.068174362182617
    7. 'j' → logprob: -14.068174362182617
    8. 'col' → logprob: -14.693174362182617
    9. ' in' → logprob: -15.193174362182617
    10. ' col' → logprob: -15.443174362182617

Token 262: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28595468401908875
    2. 'range' → logprob: -1.7859547138214111
    3. 'in' → logprob: -3.035954713821411
    4. ' range' → logprob: -3.410954713821411
    5. ' ' → logprob: -11.285954475402832
    6. 'row' → logprob: -11.535954475402832
    7. ' row' → logprob: -14.035954475402832
    8. ')' → logprob: -14.410954475402832
    9. ' _' → logprob: -14.785954475402832
    10. 'for' → logprob: -14.785954475402832

Token 263: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.693186342716217
    2. 'range' → logprob: -0.693186342716217
    3. '_' → logprob: -10.31818675994873
    4. 'row' → logprob: -13.19318675994873
    5. ' _' → logprob: -13.44318675994873
    6. '_range' → logprob: -14.31818675994873
    7. ' bingo' → logprob: -14.69318675994873
    8. ' rang' → logprob: -15.19318675994873
    9. 'b' → logprob: -15.19318675994873
    10. ' ' → logprob: -15.44318675994873

Token 264: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.554343366995454e-05
    2. '3' → logprob: -9.375085830688477
    3. ' (' → logprob: -14.750085830688477
    4. '(
' → logprob: -16.000085830688477
    5. '   ' → logprob: -17.250085830688477
    6. ' ' → logprob: -17.750085830688477
    7. '
' → logprob: -18.750085830688477
    8. '(len' → logprob: -18.875085830688477
    9. '9' → logprob: -19.500085830688477
    10. ']' → logprob: -19.750085830688477

Token 265: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.625001907348633
    4. ')' → logprob: -21.500001907348633
    5. 'len' → logprob: -22.000001907348633
    6. '9' → logprob: -22.000001907348633
    7. '۳' → logprob: -22.000001907348633
    8. '３' → logprob: -22.125001907348633
    9. '
' → logprob: -22.812501907348633
    10. '```' → logprob: -23.000001907348633

Token 266: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0038098113145679235
    2. ']' → logprob: -5.628809928894043
    3. ' ]' → logprob: -9.378809928894043
    4. ')' → logprob: -9.378809928894043
    5. ']]' → logprob: -11.253809928894043
    6. '   ' → logprob: -11.378809928894043
    7. ' )' → logprob: -11.628809928894043
    8. '])' → logprob: -12.253809928894043
    9. '}]' → logprob: -14.503809928894043
    10. ')]
' → logprob: -14.503809928894043

Token 267: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.001641738461330533
    2. 'for' → logprob: -6.501641750335693
    3. '   ' → logprob: -9.376641273498535
    4. '    ' → logprob: -10.376641273498535
    5. ']' → logprob: -11.751641273498535
    6. '	for' → logprob: -12.376641273498535
    7. '       ' → logprob: -12.501641273498535
    8. ' ' → logprob: -12.501641273498535
    9. '        ' → logprob: -13.751641273498535
    10. ' ]' → logprob: -13.751641273498535

Token 268: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.042025480419397354
    2. ' range' → logprob: -3.417025566101074
    3. '_' → logprob: -4.792025566101074
    4. 'range' → logprob: -10.292025566101074
    5. ' ' → logprob: -11.667025566101074
    6. '_range' → logprob: -12.667025566101074
    7. ' in' → logprob: -13.667025566101074
    8. ' row' → logprob: -13.917025566101074
    9. ' i' → logprob: -14.417025566101074
    10. ' __' → logprob: -14.917025566101074

Token 269: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061967913061380386
    2. ' range' → logprob: -2.8119678497314453
    3. '(range' → logprob: -16.186967849731445
    4. ' in' → logprob: -17.311967849731445
    5. '3' → logprob: -17.436967849731445
    6. '	range' → logprob: -17.686967849731445
    7. '_range' → logprob: -17.811967849731445
    8. '(' → logprob: -18.311967849731445
    9. ' ' → logprob: -19.186967849731445
    10. 'in' → logprob: -19.311967849731445

Token 270: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163628220558167
    2. ' range' → logprob: -4.264163494110107
    3. '(range' → logprob: -16.764163970947266
    4. '3' → logprob: -17.139163970947266
    5. '[' → logprob: -17.889163970947266
    6. ' ' → logprob: -18.389163970947266
    7. '	range' → logprob: -18.889163970947266
    8. '(' → logprob: -19.889163970947266
    9. '   ' → logprob: -20.264163970947266
    10. '
' → logprob: -21.014163970947266

Token 271: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020771251001860946
    2. 'range' → logprob: -8.625207901000977
    3. ' range' → logprob: -10.875207901000977
    4. '(range' → logprob: -11.625207901000977
    5. '(
' → logprob: -16.500207901000977
    6. ' (' → logprob: -16.625207901000977
    7. '3' → logprob: -18.000207901000977
    8. ' ' → logprob: -18.000207901000977
    9. '((' → logprob: -19.375207901000977
    10. 'Range' → logprob: -19.375207901000977

Token 272: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.12500286102295
    4. ')' → logprob: -16.500001907348633
    5. '(' → logprob: -17.250001907348633
    6. '       ' → logprob: -17.500001907348633
    7. 'range' → logprob: -17.875001907348633
    8. '
' → logprob: -18.000001907348633
    9. '           ' → logprob: -18.500001907348633
    10. '     ' → logprob: -19.187501907348633

Token 273: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005385418422520161
    2. ']' → logprob: -5.255385398864746
    3. '   ' → logprob: -9.130385398864746
    4. ')' → logprob: -10.630385398864746
    5. '])]' → logprob: -12.005385398864746
    6. '])' → logprob: -12.505385398864746
    7. ')]
' → logprob: -12.880385398864746
    8. ' ]' → logprob: -12.880385398864746
    9. ']]' → logprob: -13.505385398864746
    10. ']
' → logprob: -14.380385398864746

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029981767758727074
    2. '
' → logprob: -3.779981851577759
    3. '    
' → logprob: -5.15498161315918
    4. ' for' → logprob: -7.27998161315918
    5. 'for' → logprob: -8.52998161315918
    6. '  
' → logprob: -11.02998161315918
    7. '   
' → logprob: -11.27998161315918
    8. ' 
' → logprob: -11.52998161315918
    9. '' → logprob: -12.90498161315918
    10. '
' → logprob: -12.90498161315918

Token 275: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13690875470638275
    2. ' for' → logprob: -2.386908769607544
    3. 'for' (adapté à ' for') → logprob: -3.386908769607544
    4. '
' → logprob: -6.511908531188965
    5. '    
' → logprob: -7.261908531188965
    6. '	for' → logprob: -10.886908531188965
    7. ' 
' → logprob: -12.261908531188965
    8. '   
' → logprob: -12.636908531188965
    9. '  
' → logprob: -12.886908531188965
    10. '    ' → logprob: -13.386908531188965

Token 276: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.42907440662384033
    2. 'i' → logprob: -1.0540744066238403
    3. ' row' → logprob: -8.67907428741455
    4. 'row' → logprob: -9.30407428741455
    5. ' r' → logprob: -9.92907428741455
    6. 'r' → logprob: -10.05407428741455
    7. ' ' → logprob: -12.17907428741455
    8. ' y' → logprob: -12.17907428741455
    9. '	i' → logprob: -12.55407428741455
    10. 'y' → logprob: -13.30407428741455

Token 277: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02632097154855728
    2. 'in' → logprob: -3.6513209342956543
    3. ' ' → logprob: -11.151321411132812
    4. ',' → logprob: -12.776321411132812
    5. '	in' → logprob: -13.901321411132812
    6. '   ' → logprob: -14.526321411132812
    7. '[' → logprob: -15.026321411132812
    8. ' i' → logprob: -15.276321411132812
    9. 'import' → logprob: -15.401321411132812
    10. 'range' → logprob: -15.651321411132812

Token 278: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931478977203369
    2. 'range' → logprob: -0.6931478977203369
    3. ' ' → logprob: -15.318147659301758
    4. ' rang' → logprob: -15.693147659301758
    5. 'rang' → logprob: -16.068147659301758
    6. '	range' → logprob: -16.318147659301758
    7. '   ' → logprob: -16.443147659301758
    8. '(range' → logprob: -17.068147659301758
    9. ' ran' → logprob: -17.193147659301758
    10. 'ran' → logprob: -17.818147659301758

Token 279: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. '(
' → logprob: -13.875001907348633
    3. '3' → logprob: -14.000001907348633
    4. ' (' → logprob: -15.375001907348633
    5. ' ' → logprob: -19.125001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '(len' → logprob: -21.250001907348633
    8. '(

' → logprob: -21.875001907348633
    9. '6' → logprob: -22.875001907348633
    10. '(
' → logprob: -23.000001907348633

Token 280: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.125011444091797
    4. ')' → logprob: -19.250011444091797
    5. '
' → logprob: -19.875011444091797
    6. '0' → logprob: -20.625011444091797
    7. '       ' → logprob: -20.750011444091797
    8. 'len' → logprob: -21.000011444091797
    9. '```' → logprob: -21.000011444091797
    10. '  ' → logprob: -21.375011444091797

Token 281: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018508676439523697
    2. '):
' → logprob: -4.1435089111328125
    3. ')' → logprob: -6.0185089111328125
    4. '   ' → logprob: -10.893508911132812
    5. ':' → logprob: -11.768508911132812
    6. ' ):' → logprob: -11.893508911132812
    7. ' ' → logprob: -13.393508911132812
    8. '):

' → logprob: -13.518508911132812
    9. '):
' → logprob: -14.268508911132812
    10. ',' → logprob: -14.643508911132812

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24200785160064697
    2. ' for' → logprob: -1.617007851600647
    3. '   ' → logprob: -4.617007732391357
    4. ' ' → logprob: -5.992007732391357
    5. '    ' → logprob: -6.117007732391357
    6. 'for' → logprob: -7.117007732391357
    7. '	for' → logprob: -7.617007732391357
    8. '     ' → logprob: -8.992008209228516
    9. '    
' → logprob: -9.117008209228516
    10. '	   ' → logprob: -9.117008209228516

Token 283: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0891244113445282
    2. 'for' (adapté à ' for') → logprob: -2.5891244411468506
    3. '   ' → logprob: -4.5891242027282715
    4. '	for' → logprob: -10.96412467956543
    5. ' ' → logprob: -13.58912467956543
    6. ' j' → logprob: -14.08912467956543
    7. '    ' → logprob: -14.33912467956543
    8. '       ' → logprob: -14.58912467956543
    9. 'j' → logprob: -15.83912467956543
    10. '
' → logprob: -16.71412467956543

Token 284: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2519293427467346
    2. 'j' → logprob: -1.5019292831420898
    3. '    ' → logprob: -15.87692928314209
    4. '   ' → logprob: -16.501930236816406
    5. '	j' → logprob: -16.876930236816406
    6. '3' → logprob: -17.501930236816406
    7. ' ' → logprob: -17.876930236816406
    8. 'range' → logprob: -18.126930236816406
    9. ' range' → logprob: -18.501930236816406
    10. '$j' → logprob: -19.001930236816406

Token 285: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02058626525104046
    2. 'in' → logprob: -3.8955862522125244
    3. ' ' → logprob: -10.395586013793945
    4. '   ' → logprob: -12.145586013793945
    5. '    ' → logprob: -12.395586013793945
    6. '(' → logprob: -13.895586013793945
    7. ',' → logprob: -14.770586013793945
    8. '0' → logprob: -14.770586013793945
    9. '3' → logprob: -15.145586013793945
    10. 'import' → logprob: -15.145586013793945

Token 286: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5789269208908081
    2. ' range' → logprob: -0.8289269208908081
    3. '3' → logprob: -5.828927040100098
    4. ' ' → logprob: -10.203927040100098
    5. '(range' → logprob: -13.703927040100098
    6. ' in' → logprob: -13.828927040100098
    7. '   ' → logprob: -13.828927040100098
    8. '(' → logprob: -13.953927040100098
    9. 'in' → logprob: -15.203927040100098
    10. '    ' → logprob: -15.453927040100098

Token 287: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.107425062713446e-06
    2. '3' → logprob: -12.375006675720215
    3. ' (' → logprob: -12.875006675720215
    4. '(
' → logprob: -15.375006675720215
    5. ' ' → logprob: -17.00000762939453
    6. ')' → logprob: -18.75000762939453
    7. '   ' → logprob: -19.00000762939453
    8. 'range' → logprob: -19.25000762939453
    9. 'in' → logprob: -20.00000762939453
    10. ' range' → logprob: -21.25000762939453

Token 288: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.570319702499546e-05
    2. ' ' → logprob: -10.625025749206543
    3. '   ' → logprob: -13.625025749206543
    4. '       ' → logprob: -16.500024795532227
    5. ')' → logprob: -17.000024795532227
    6. '           ' → logprob: -17.750024795532227
    7. '     ' → logprob: -18.750024795532227
    8. '               ' → logprob: -18.750024795532227
    9. '                   ' → logprob: -18.875024795532227
    10. '
' → logprob: -19.000024795532227

Token 289: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3486672043800354
    2. '):' → logprob: -1.2236671447753906
    3. ')' → logprob: -8.97366714477539
    4. '   ' → logprob: -9.72366714477539
    5. ':' → logprob: -11.72366714477539
    6. '):
' → logprob: -11.72366714477539
    7. '):

' → logprob: -12.09866714477539
    8. '       ' → logprob: -12.34866714477539
    9. ' ):
' → logprob: -13.34866714477539
    10. ' ):' → logprob: -13.59866714477539

Token 290: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005420696688815951
    2. ' if' → logprob: -7.750542163848877
    3. '               ' → logprob: -9.875541687011719
    4. '       ' → logprob: -10.375541687011719
    5. 'if' → logprob: -10.875541687011719
    6. ',' → logprob: -12.625541687011719
    7. ':' → logprob: -13.750541687011719
    8. ':
' → logprob: -13.875541687011719
    9. '            
' → logprob: -14.000541687011719
    10. '	       ' → logprob: -14.375541687011719

Token 291: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.112261563539505
    2. 'if' (adapté à ' if') → logprob: -2.3622615337371826
    3. '           ' → logprob: -4.987261772155762
    4. '               ' → logprob: -5.862261772155762
    5. '       ' → logprob: -6.112261772155762
    6. ' marked' → logprob: -9.987261772155762
    7. '   ' → logprob: -10.237261772155762
    8. 'marked' → logprob: -11.612261772155762
    9. 'If' → logprob: -13.362261772155762
    10. '
' → logprob: -13.737261772155762

Token 292: ' bingo' (ID: 65141)
  Prédit: ' bingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bingo' → logprob: -0.20142114162445068
    2. 'b' → logprob: -1.7014211416244507
    3. '	b' → logprob: -12.576420783996582
    4. ' b' → logprob: -12.826420783996582
    5. ' ' → logprob: -14.576420783996582
    6. '   ' → logprob: -14.826420783996582
    7. ' bing' → logprob: -15.076420783996582
    8. '(b' → logprob: -15.576420783996582
    9. 'bing' → logprob: -15.701420783996582
    10. 'B' → logprob: -15.701420783996582

Token 293: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -2.2200749754119897e-06
    2. '[_' → logprob: -14.000001907348633
    3. '_' → logprob: -14.750001907348633
    4. ' _' → logprob: -14.750001907348633
    5. '_gr' → logprob: -16.250001907348633
    6. 'grid' → logprob: -16.250001907348633
    7. '[' → logprob: -16.375001907348633
    8. ')_' → logprob: -17.125001907348633
    9. '[i' → logprob: -17.250001907348633
    10. '_GRID' → logprob: -17.250001907348633

Token 294: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.27099974633893e-05
    2. ' [' → logprob: -11.625012397766113
    3. '[j' → logprob: -13.125012397766113
    4. '[' → logprob: -13.750012397766113
    5. '][' → logprob: -15.125012397766113
    6. '   ' → logprob: -15.750012397766113
    7. '[I' → logprob: -15.750012397766113
    8. '[
' → logprob: -16.87501335144043
    9. ')[' → logprob: -17.25001335144043
    10. 'i' → logprob: -17.75001335144043

Token 295: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20292522013187408
    2. '[j' → logprob: -1.702925205230713
    3. '[i' → logprob: -7.202925205230713
    4. ']' → logprob: -7.952925205230713
    5. ' ][' → logprob: -8.702925682067871
    6. '[' → logprob: -9.077925682067871
    7. ' [' → logprob: -9.952925682067871
    8. '   ' → logprob: -10.452925682067871
    9. ']][' → logprob: -11.577925682067871
    10. ')][' → logprob: -11.827925682067871

Token 296: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0325924449716695e-05
    2. ' j' → logprob: -11.50001049041748
    3. '	j' → logprob: -15.87501049041748
    4. '   ' → logprob: -17.125009536743164
    5. '[j' → logprob: -17.375009536743164
    6. '_j' → logprob: -18.750009536743164
    7. ' ' → logprob: -18.875009536743164
    8. ',j' → logprob: -19.125009536743164
    9. '```' → logprob: -19.125009536743164
    10. '
' → logprob: -19.250009536743164

Token 297: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13071125745773315
    2. 'in' → logprob: -2.630711317062378
    3. ')' → logprob: -3.630711317062378
    4. ']' → logprob: -3.755711317062378
    5. ' )' → logprob: -8.505711555480957
    6. ' ]' → logprob: -8.505711555480957
    7. ' ' → logprob: -8.755711555480957
    8. '）' → logprob: -11.505711555480957
    9. '==' → logprob: -12.005711555480957
    10. ']==' → logprob: -12.255711555480957

Token 298: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1427331268787384
    2. 'in' → logprob: -2.017733097076416
    3. ' ' → logprob: -10.017733573913574
    4. ')' → logprob: -12.767733573913574
    5. ' i' → logprob: -12.892733573913574
    6. ' ' → logprob: -13.017733573913574
    7. '	in' → logprob: -14.017733573913574
    8. 'In' → logprob: -14.142733573913574
    9. '[' → logprob: -14.580233573913574
    10. ' not' → logprob: -14.642733573913574

Token 299: ' drawn' (ID: 25279)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'draw' → logprob: -0.31336382031440735
    2. ' drawn' → logprob: -1.313363790512085
    3. ' draw' → logprob: -9.438364028930664
    4. '   ' → logprob: -12.188364028930664
    5. ' ' → logprob: -12.313364028930664
    6. '	draw' → logprob: -12.688364028930664
    7. ' ' → logprob: -12.688364028930664
    8. '_draw' → logprob: -13.313364028930664
    9. ' drew' → logprob: -13.938364028930664
    10. 'dr' → logprob: -14.188364028930664

Token 300: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0003434488025959581
    2. '_' → logprob: -8.000343322753906
    3. '_draw' → logprob: -12.125343322753906
    4. ')_' → logprob: -14.375343322753906
    5. ' _' → logprob: -14.875343322753906
    6. '_n' → logprob: -15.250343322753906
    7. '_number' → logprob: -15.500343322753906
    8. 'ed' → logprob: -15.625343322753906
    9. '_d' → logprob: -15.875343322753906
    10. 's' → logprob: -16.250343322753906

Token 301: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2599993944168091
    2. ':
' → logprob: -1.509999394416809
    3. '               ' → logprob: -5.2599992752075195
    4. '           ' → logprob: -6.1349992752075195
    5. '):
' → logprob: -8.00999927520752
    6. ' :
' → logprob: -8.88499927520752
    7. ' :' → logprob: -9.38499927520752
    8. '):' → logprob: -10.63499927520752
    9. '                   ' → logprob: -11.25999927520752
    10. ' and' → logprob: -11.50999927520752

Token 302: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006338051171042025
    2. ' marked' → logprob: -7.625633716583252
    3. 'marked' → logprob: -9.12563419342041
    4. '           ' → logprob: -11.62563419342041
    5. '                
' → logprob: -11.62563419342041
    6. '                   ' → logprob: -12.25063419342041
    7. '.mark' → logprob: -12.87563419342041
    8. '(mark' → logprob: -13.37563419342041
    9. 'mark' → logprob: -13.50063419342041
    10. 'Marked' → logprob: -13.50063419342041

Token 303: ' marked' (ID: 20779)
  Prédit: ' marked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.014168680645525455
    2. 'marked' (adapté à ' marked') → logprob: -4.389168739318848
    3. '                   ' → logprob: -6.764168739318848
    4. '               ' → logprob: -7.639168739318848
    5. 'mark' → logprob: -12.014168739318848
    6. ' mark' → logprob: -12.264168739318848
    7. 'Marked' → logprob: -13.139168739318848
    8. '                    
' → logprob: -13.264168739318848
    9. '           ' → logprob: -13.514168739318848
    10. ' marcado' → logprob: -13.514168739318848

Token 304: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.125000953674316
    3. ' [' → logprob: -14.875000953674316
    4. '[I' → logprob: -15.375000953674316
    5. '[j' → logprob: -17.125001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '[
' → logprob: -19.500001907348633
    8. '[ii' → logprob: -20.500001907348633
    9. '[T' → logprob: -20.625001907348633
    10. '
' → logprob: -20.625001907348633

Token 305: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00013095269969198853
    2. ']' → logprob: -9.125130653381348
    3. ' ][' → logprob: -11.500130653381348
    4. '[i' → logprob: -12.000130653381348
    5. '[j' → logprob: -12.875130653381348
    6. '[' → logprob: -13.625130653381348
    7. ']][' → logprob: -14.125130653381348
    8. '   ' → logprob: -14.750130653381348
    9. '"][' → logprob: -15.000130653381348
    10. ' ' → logprob: -16.375131607055664

Token 306: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.704273118884885e-07
    2. ' j' → logprob: -15.250000953674316
    3. 'True' → logprob: -15.750000953674316
    4. ' ' → logprob: -16.375
    5. '1' → logprob: -16.875
    6. '
' → logprob: -17.375
    7. '   ' → logprob: -17.5
    8. '	j' → logprob: -17.5
    9. ']' → logprob: -17.625
    10. '[j' → logprob: -17.75

Token 307: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00041029640124179423
    2. ']=' → logprob: -7.875410079956055
    3. '=' → logprob: -10.500410079956055
    4. ' ]' → logprob: -13.125410079956055
    5. ' =' → logprob: -14.875410079956055
    6. ')' → logprob: -16.250410079956055
    7. '[' → logprob: -17.125410079956055
    8. '=True' → logprob: -17.375410079956055
    9. ']
' → logprob: -17.375410079956055
    10. '           ' → logprob: -18.500410079956055

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020849853754044
    2. ' =' → logprob: -2.3502085208892822
    3. '=True' → logprob: -13.225208282470703
    4. ' =
' → logprob: -17.975208282470703
    5. '=
' → logprob: -18.225208282470703
    6. '=

' → logprob: -19.475208282470703
    7. '=true' → logprob: -19.975208282470703
    8. '[' → logprob: -20.100208282470703
    9. ' ' → logprob: -20.475208282470703
    10. 'True' → logprob: -20.475208282470703

Token 309: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01416350994259119
    2. ' True' → logprob: -4.264163494110107
    3. '(True' → logprob: -20.514163970947266
    4. '=True' → logprob: -20.764163970947266
    5. 'Tr' → logprob: -22.639163970947266
    6. 'true' → logprob: -23.514163970947266
    7. '.True' → logprob: -23.514163970947266
    8. '   ' → logprob: -23.889163970947266
    9. ' Tru' → logprob: -24.264163970947266
    10. 'TRUE' → logprob: -24.514163970947266

Token 310: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.240576833486557
    2. '    
' → logprob: -2.61557674407959
    3. '<|end|>' → logprob: -2.86557674407959
    4. '  
' → logprob: -3.86557674407959
    5. 'return' → logprob: -3.86557674407959
    6. '\n' → logprob: -4.61557674407959
    7. ' return' → logprob: -4.74057674407959
    8. '   ' → logprob: -4.86557674407959
    9. '	return' → logprob: -5.11557674407959
    10. ' 
' → logprob: -5.36557674407959

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3212839365005493
    2. '
' → logprob: -1.6962839365005493
    3. '    
' → logprob: -2.6962838172912598
    4. 'return' → logprob: -5.07128381729126
    5. '	return' → logprob: -5.19628381729126
    6. '<|end|>' → logprob: -5.32128381729126
    7. ' return' → logprob: -5.44628381729126
    8. '\n' → logprob: -6.82128381729126
    9. '  
' → logprob: -7.19628381729126
    10. '<|end|>' → logprob: -8.571284294128418

Token 312: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12705419957637787
    2. 'return' (adapté à ' return') → logprob: -2.252054214477539
    3. '
' → logprob: -4.377054214477539
    4. ' return' → logprob: -7.127054214477539
    5. '    
' → logprob: -7.502054214477539
    6. '	return' → logprob: -8.752054214477539
    7. '\n' → logprob: -11.252054214477539
    8. '```' → logprob: -11.252054214477539
    9. ':return' → logprob: -12.002054214477539
    10. '       ' → logprob: -12.752054214477539

Token 313: ' marked' (ID: 20779)
  Prédit: ' marked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.6931474208831787
    2. 'marked' → logprob: -0.6931474208831787
    3. 'mark' → logprob: -15.818147659301758
    4. ' ' → logprob: -17.318147659301758
    5. 'Marked' → logprob: -17.318147659301758
    6. '[' → logprob: -17.443147659301758
    7. '(mark' → logprob: -17.568147659301758
    8. ' ' → logprob: -17.943147659301758
    9. '_mark' → logprob: -18.193147659301758
    10. 'mar' → logprob: -18.943147659301758

Token 314: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06088721379637718
    2. '
' → logprob: -3.185887098312378
    3. '

' → logprob: -4.560887336730957
    4. '<|end|>' → logprob: -4.935887336730957
    5. '<|end|>' → logprob: -10.560887336730957
    6. '  
' → logprob: -10.560887336730957
    7. '```' → logprob: -11.185887336730957
    8. ' def' → logprob: -11.810887336730957
    9. '    
' → logprob: -11.935887336730957
    10. '
' → logprob: -12.810887336730957

Token 315: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.088346359931165e-07
    2. '
' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -16.0
    4. ' def' → logprob: -17.5
    5. '```' → logprob: -17.875
    6. '

' → logprob: -18.0
    7. '  
' → logprob: -19.75
    8. 'import' → logprob: -19.875
    9. '<|end|>' → logprob: -20.25
    10. '    
' → logprob: -20.5

Token 316: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.958160936832428
    2. 'check' → logprob: -1.0831608772277832
    3. ' is' → logprob: -1.9581608772277832
    4. 'is' → logprob: -2.333160877227783
    5. 'def' → logprob: -4.083160877227783
    6. ' has' → logprob: -4.208160877227783
    7. 'has' → logprob: -5.208160877227783
    8. ' def' → logprob: -6.333160877227783
    9. ' main' → logprob: -7.833160877227783
    10. ' bingo' → logprob: -8.583161354064941

Token 317: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0003943304473068565
    2. '_win' → logprob: -8.375393867492676
    3. '_line' → logprob: -9.250393867492676
    4. '_horizontal' → logprob: -11.125393867492676
    5. '_w' → logprob: -11.500393867492676
    6. '_' → logprob: -11.625393867492676
    7. '_lines' → logprob: -11.750393867492676
    8. '_for' → logprob: -11.875393867492676
    9. '_row' → logprob: -12.125393867492676
    10. '_complete' → logprob: -12.375393867492676

Token 318: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -0.0015965107595548034
    2. 'ing' → logprob: -6.501596450805664
    3. 'i' → logprob: -10.501596450805664
    4. 'in' → logprob: -11.001596450805664
    5. 'ING' → logprob: -11.501596450805664
    6. '_' → logprob: -11.751596450805664
    7. 'ingos' → logprob: -12.126596450805664
    8. '   ' → logprob: -12.501596450805664
    9. '

' → logprob: -12.876596450805664
    10. 'I' → logprob: -13.001596450805664

Token 319: '(mark' (ID: 126438)
  Prédit: '(mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mark' → logprob: -0.015775078907608986
    2. '(' → logprob: -4.265775203704834
    3. '_mark' → logprob: -7.015775203704834
    4. '(b' → logprob: -7.890775203704834
    5. '(grid' → logprob: -8.890774726867676
    6. '(m' → logprob: -9.765774726867676
    7. '_line' → logprob: -10.140774726867676
    8. '_(' → logprob: -10.890774726867676
    9. '(mask' → logprob: -11.015774726867676
    10. '(lines' → logprob: -11.140774726867676

Token 320: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -5.512236498361744e-07
    2. 'et' → logprob: -15.375000953674316
    3. 'edin' → logprob: -15.750000953674316
    4. 'eds' → logprob: -15.875000953674316
    5. '_ed' → logprob: -17.75
    6. 'edt' → logprob: -18.0
    7. 'edf' → logprob: -18.375
    8. 'edas' → logprob: -18.75
    9. 'edis' → logprob: -19.125
    10. 'def' → logprob: -19.375

Token 321: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02695312723517418
    2. '):
' → logprob: -3.6519532203674316
    3. ')' → logprob: -7.526953220367432
    4. '   ' → logprob: -10.526952743530273
    5. '):
' → logprob: -10.526952743530273
    6. ' ):' → logprob: -10.651952743530273
    7. ' ' → logprob: -10.776952743530273
    8. '_grid' → logprob: -11.776952743530273
    9. '):

' → logprob: -12.526952743530273
    10. ')):' → logprob: -14.026952743530273

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012356207298580557
    2. '
' → logprob: -9.750123977661133
    3. ':' → logprob: -10.375123977661133
    4. 'for' → logprob: -10.875123977661133
    5. ':
' → logprob: -12.250123977661133
    6. '    
' → logprob: -12.750123977661133
    7. 'def' → logprob: -13.375123977661133
    8. '    ' → logprob: -13.500123977661133
    9. ' for' → logprob: -13.500123977661133
    10. '(' → logprob: -13.875123977661133

Token 323: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021732202731072903
    2. 'for' → logprob: -6.50217342376709
    3. ' for' → logprob: -7.87717342376709
    4. '
' → logprob: -8.37717342376709
    5. 'def' → logprob: -10.25217342376709
    6. ':' → logprob: -12.12717342376709
    7. '    
' → logprob: -12.12717342376709
    8. '    ' → logprob: -12.25217342376709
    9. '(' → logprob: -12.75217342376709
    10. ':
' → logprob: -13.12717342376709

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00040302498382516205
    2. '"""
' → logprob: -8.37540340423584
    3. '"""' → logprob: -9.25040340423584
    4. '    ' → logprob: -9.75040340423584
    5. 'def' → logprob: -11.75040340423584
    6. '
' → logprob: -12.62540340423584
    7. ' """
' → logprob: -13.00040340423584
    8. '#' → logprob: -13.37540340423584
    9. 'for' → logprob: -14.12540340423584
    10. '    
' → logprob: -15.12540340423584

Token 325: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6443527340888977
    2. 'for' → logprob: -1.394352674484253
    3. '   ' → logprob: -1.769352674484253
    4. 'def' → logprob: -3.144352674484253
    5. ' for' → logprob: -4.644352912902832
    6. ' #' → logprob: -6.769352912902832
    7. 'Checks' → logprob: -7.394352912902832
    8. '
' → logprob: -7.519352912902832
    9. 'n' → logprob: -7.769352912902832
    10. '"""
' → logprob: -8.269352912902832

Token 326: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -8.77627644513268e-06
    2. 'if' → logprob: -11.750008583068848
    3. 'ife' → logprob: -15.375008583068848
    4. '   ' → logprob: -15.750008583068848
    5. 'ifiez' → logprob: -15.750008583068848
    6. 'i' → logprob: -16.125009536743164
    7. 'ifies' → logprob: -16.750009536743164
    8. 'ifier' → logprob: -16.750009536743164
    9. 'ifi' → logprob: -16.875009536743164
    10. 'ifié' → logprob: -17.000009536743164

Token 327: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3618624210357666
    2. ' si' → logprob: -1.2368624210357666
    3. '   ' → logprob: -4.6118621826171875
    4. 'if' → logprob: -6.7368621826171875
    5. ' les' → logprob: -6.7368621826171875
    6. 'si' → logprob: -7.4868621826171875
    7. ' toutes' → logprob: -8.611862182617188
    8. ' s' → logprob: -9.736862182617188
    9. ' whether' → logprob: -9.861862182617188
    10. '    ' → logprob: -10.361862182617188

Token 328: ' la' (ID: 557)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.03434200957417488
    2. 'any' → logprob: -4.159341812133789
    3. ' il' → logprob: -4.534341812133789
    4. ' (
' → logprob: -6.284341812133789
    5. ' la' → logprob: -6.784341812133789
    6. ' there' → logprob: -7.034341812133789
    7. ' toute' → logprob: -7.284341812133789
    8. ' une' → logprob: -7.409341812133789
    9. ' ' → logprob: -7.909341812133789
    10. '   ' → logprob: -8.159341812133789

Token 329: ' grille' (ID: 99153)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5461474657058716
    2. 're' → logprob: -1.7961474657058716
    3. ' bingo' → logprob: -1.7961474657058716
    4. 'marked' → logprob: -3.671147346496582
    5. ' marked' → logprob: -3.921147346496582
    6. ' b' → logprob: -5.046147346496582
    7. '```' → logprob: -5.171147346496582
    8. '
' → logprob: -5.421147346496582
    9. 'gr' → logprob: -5.671147346496582
    10. 'def' → logprob: -6.171147346496582

Token 330: ' mar' (ID: 2674)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1837248057126999
    2. 'a' → logprob: -2.558724880218506
    3. ' mar' → logprob: -3.308724880218506
    4. ' possède' → logprob: -3.683724880218506
    5. ' comporte' → logprob: -4.683724880218506
    6. 'mar' → logprob: -4.933724880218506
    7. ' has' → logprob: -5.808724880218506
    8. ' marqué' → logprob: -6.558724880218506
    9. 'marked' → logprob: -6.683724880218506
    10. ' contient' → logprob: -6.933724880218506

Token 331: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -0.27383285760879517
    2. 'ked' → logprob: -1.5238327980041504
    3. 'k' → logprob: -4.27383279800415
    4. 'qu' → logprob: -5.27383279800415
    5. 'quées' → logprob: -7.02383279800415
    6. 'que' → logprob: -7.39883279800415
    7. 'q' → logprob: -7.64883279800415
    8. 'qué' → logprob: -8.773833274841309
    9. 'quee' → logprob: -9.148833274841309
    10. '[' → logprob: -9.898833274841309

Token 332: ' contient' (ID: 89067)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5127468705177307
    2. 'a' → logprob: -1.012746810913086
    3. ' possède' → logprob: -4.637746810913086
    4. ' contient' → logprob: -4.637746810913086
    5. ' comporte' → logprob: -5.012746810913086
    6. '   ' → logprob: -5.137746810913086
    7. ' has' → logprob: -6.012746810913086
    8. 'poss' → logprob: -6.762746810913086
    9. ' présente' → logprob: -7.262746810913086
    10. 'prés' → logprob: -8.262746810913086

Token 333: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5369459986686707
    2. ' un' → logprob: -1.2869460582733154
    3. 'une' → logprob: -2.1619460582733154
    4. 'un' → logprob: -4.536945819854736
    5. ' a' → logprob: -4.786945819854736
    6. 'a' → logprob: -6.161945819854736
    7. ' au' → logprob: -6.661945819854736
    8. ' bingo' → logprob: -7.536945819854736
    9. 'au' → logprob: -7.786945819854736
    10. ' ' → logprob: -8.036946296691895

Token 334: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.5587990283966064
    2. ' ligne' → logprob: -1.1837990283966064
    3. 'b' → logprob: -2.1837990283966064
    4. ' bingo' → logprob: -5.433798789978027
    5. ' b' → logprob: -6.433798789978027
    6. 'bing' → logprob: -7.183798789978027
    7. 'line' → logprob: -7.308798789978027
    8. 'l' → logprob: -7.808798789978027
    9. ' line' → logprob: -8.433798789978027
    10. 'complete' → logprob: -8.933798789978027

Token 335: ',' (ID: 11)
  Prédit: ' complète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complète' → logprob: -0.3743199110031128
    2. ',' → logprob: -1.3743199110031128
    3. 'complete' → logprob: -4.374320030212402
    4. ' complete' → logprob: -4.499320030212402
    5. ' or' → logprob: -4.499320030212402
    6. ' ou' → logprob: -5.374320030212402
    7. ' compl' → logprob: -5.624320030212402
    8. 'com' → logprob: -5.874320030212402
    9. 'compl' → logprob: -5.874320030212402
    10. 'ou' → logprob: -5.874320030212402

Token 336: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.025483250617981
    2. 'col' → logprob: -1.275483250617981
    3. ' colonne' → logprob: -1.525483250617981
    4. ' une' → logprob: -2.0254831314086914
    5. ' ou' → logprob: -5.900483131408691
    6. ' col' → logprob: -5.900483131408691
    7. 'ou' → logprob: -6.025483131408691
    8. '   ' → logprob: -6.025483131408691
    9. 'column' → logprob: -6.775483131408691
    10. ' colon' → logprob: -8.525483131408691

Token 337: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.089793361723423
    2. ' colonne' → logprob: -2.4647934436798096
    3. 'column' → logprob: -7.3397932052612305
    4. ' col' → logprob: -8.83979320526123
    5. 'ligne' → logprob: -10.71479320526123
    6. 'colon' → logprob: -11.21479320526123
    7. '   ' → logprob: -11.71479320526123
    8. '```' → logprob: -12.83979320526123
    9. ' colon' → logprob: -12.96479320526123
    10. ' column' → logprob: -13.58979320526123

Token 338: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.054318349808454514
    2. ' ou' → logprob: -3.679318428039551
    3. 'ou' → logprob: -3.679318428039551
    4. ' or' → logprob: -6.429318428039551
    5. 'or' → logprob: -7.804318428039551
    6. '   ' → logprob: -8.67931842803955
    7. ' ,' → logprob: -9.55431842803955
    8. ' ' → logprob: -10.05431842803955
    9. ' complète' → logprob: -10.30431842803955
    10. '```' → logprob: -10.80431842803955

Token 339: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.2740994393825531
    2. 'une' → logprob: -1.5240994691848755
    3. 'di' → logprob: -4.024099349975586
    4. '   ' → logprob: -6.149099349975586
    5. ''une' → logprob: -7.899099349975586
    6. ' diagonal' → logprob: -8.024099349975586
    7. '```' → logprob: -8.024099349975586
    8. ' diagon' → logprob: -8.774099349975586
    9. ' ' → logprob: -8.899099349975586
    10. '#' → logprob: -9.024099349975586

Token 340: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.01738053560256958
    2. ' diagon' → logprob: -4.142380714416504
    3. 'diag' → logprob: -6.767380714416504
    4. ' diagonal' → logprob: -8.642380714416504
    5. 'ligne' → logprob: -11.642380714416504
    6. ' diag' → logprob: -13.017380714416504
    7. '_di' → logprob: -13.267380714416504
    8. '#' → logprob: -13.392380714416504
    9. '(di' → logprob: -13.642380714416504
    10. ' ligne' → logprob: -14.767380714416504

Token 341: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -5.3954463510308415e-05
    2. 'al' → logprob: -9.875054359436035
    3. '
' → logprob: -13.875054359436035
    4. 'a' → logprob: -14.125054359436035
    5. 'але' → logprob: -14.750054359436035
    6. 'e' → logprob: -16.37505340576172
    7. 'alle' → logprob: -16.50005340576172
    8. '```' → logprob: -16.62505340576172
    9. '**' → logprob: -17.12505340576172
    10. 'o' → logprob: -17.12505340576172

Token 342: ' complète' (ID: 75660)
  Prédit: ' complète'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complète' → logprob: -0.5770357847213745
    2. 'compl' → logprob: -1.5770357847213745
    3. ' entièrement' → logprob: -2.202035903930664
    4. ' compl' → logprob: -2.452035903930664
    5. ' complètement' → logprob: -4.202035903930664
    6. 'com' → logprob: -4.827035903930664
    7. ' entière' → logprob: -5.952035903930664
    8. ' complete' → logprob: -6.077035903930664
    9. 'ent' → logprob: -6.077035903930664
    10. 'complete' → logprob: -6.952035903930664

Token 343: '.

' (ID: 364)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6388630270957947
    2. ' mar' → logprob: -1.6388630867004395
    3. ' True' → logprob: -2.1388630867004395
    4. '   ' → logprob: -2.6388630867004395
    5. ',' → logprob: -4.1388630867004395
    6. '.' → logprob: -4.5138630867004395
    7. 'de' → logprob: -4.6388630867004395
    8. 'mar' → logprob: -4.6388630867004395
    9. 'True' → logprob: -4.8888630867004395
    10. ' avec' → logprob: -5.1388630867004395

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00033796546631492674
    2. 'def' → logprob: -8.250337600708008
    3. ')' → logprob: -10.000337600708008
    4. '    
' → logprob: -11.000337600708008
    5. '```' → logprob: -12.250337600708008
    6. '
' → logprob: -12.875337600708008
    7. '  ' → logprob: -13.625337600708008
    8. '    ' → logprob: -13.625337600708008
    9. ' def' → logprob: -14.250337600708008
    10. ' ' → logprob: -14.375337600708008

Token 345: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020998192951083183
    2. 'def' → logprob: -4.020998001098633
    3. ' for' → logprob: -6.395998001098633
    4. 'for' → logprob: -7.145998001098633
    5. '
' → logprob: -8.145998001098633
    6. ' def' → logprob: -10.020998001098633
    7. '    
' → logprob: -10.270998001098633
    8. ' ' → logprob: -12.770998001098633
    9. '  ' → logprob: -12.770998001098633
    10. ' lines' → logprob: -12.770998001098633

Token 346: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36470359563827515
    2. '):
' → logprob: -2.11470365524292
    3. ':
' → logprob: -2.73970365524292
    4. ':' → logprob: -2.73970365524292
    5. '(mark' → logprob: -3.36470365524292
    6. '       ' → logprob: -4.23970365524292
    7. '):' → logprob: -6.36470365524292
    8. 'def' → logprob: -6.98970365524292
    9. 'marked' → logprob: -7.23970365524292
    10. ' marked' → logprob: -7.61470365524292

Token 347: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005386164411902428
    2. '       ' → logprob: -7.8755388259887695
    3. '   ' → logprob: -9.50053882598877
    4. ' marked' → logprob: -10.00053882598877
    5. 'marked' → logprob: -10.50053882598877
    6. '   ' → logprob: -12.00053882598877
    7. '    
' → logprob: -14.00053882598877
    8. '    ' → logprob: -14.12553882598877
    9. '  ' → logprob: -14.75053882598877
    10. 'def' → logprob: -14.75053882598877

Token 348: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' (adapté à ' marked') → logprob: -0.0006380964769050479
    2. ' marked' → logprob: -7.375638008117676
    3. '   ' → logprob: -11.500638008117676
    4. 'mar' → logprob: -15.000638008117676
    5. 'list' → logprob: -15.125638008117676
    6. 'mark' → logprob: -15.250638008117676
    7. '
' → logprob: -16.125638961791992
    8. 'def' → logprob: -16.125638961791992
    9. 'listed' → logprob: -16.625638961791992
    10. '       ' → logprob: -16.875638961791992

Token 349: ' (' (ID: 350)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ):' → logprob: -0.9411290287971497
    2. ' ):
' → logprob: -1.1911289691925049
    3. '):
' → logprob: -1.8161289691925049
    4. '):' → logprob: -2.191128969192505
    5. ' )' → logprob: -4.191129207611084
    6. ' (' → logprob: -5.191129207611084
    7. ')' → logprob: -5.441129207611084
    8. ':' → logprob: -5.441129207611084
    9. ':list' → logprob: -7.316129207611084
    10. '   ' → logprob: -7.816129207611084

Token 350: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.3856492842023727e-06
    2. ' list' → logprob: -14.375000953674316
    3. '[list' → logprob: -14.875000953674316
    4. ')' → logprob: -15.125000953674316
    5. 'List' → logprob: -16.625001907348633
    6. '   ' → logprob: -18.500001907348633
    7. '):
' → logprob: -18.625001907348633
    8. '
' → logprob: -19.125001907348633
    9. '(list' → logprob: -19.500001907348633
    10. ')
' → logprob: -19.625001907348633

Token 351: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -8.220573363360018e-05
    2. '[List' → logprob: -9.750082015991211
    3. '[[' → logprob: -11.375082015991211
    4. '[' → logprob: -12.000082015991211
    5. '[int' → logprob: -12.125082015991211
    6. 'list' → logprob: -15.125082015991211
    7. ':list' → logprob: -16.00008201599121
    8. '```' → logprob: -16.25008201599121
    9. '[
' → logprob: -16.37508201599121
    10. '=list' → logprob: -16.75008201599121

Token 352: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.739826181321405e-05
    2. 'bool' → logprob: -10.37504768371582
    3. '[int' → logprob: -11.12504768371582
    4. '<bool' → logprob: -14.25004768371582
    5. ',bool' → logprob: -15.25004768371582
    6. '
' → logprob: -16.25004768371582
    7. '   ' → logprob: -16.37504768371582
    8. '(bool' → logprob: -16.75004768371582
    9. '```' → logprob: -17.00004768371582
    10. ' bool' → logprob: -17.12504768371582

Token 353: 'bool' (ID: 9037)
  Prédit: 'bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -3.128163257315464e-07
    2. ' bool' → logprob: -16.0
    3. '[' → logprob: -16.75
    4. 'int' → logprob: -17.875
    5. '<bool' → logprob: -17.875
    6. '```' → logprob: -18.25
    7. '
' → logprob: -18.625
    8. 'Bool' → logprob: -19.375
    9. '(bool' → logprob: -19.5
    10. '	bool' → logprob: -19.875

Token 354: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.004626052919775248
    2. ']])' → logprob: -5.379626274108887
    3. '```' → logprob: -13.129626274108887
    4. '[' → logprob: -13.504626274108887
    5. ']])
' → logprob: -14.254626274108887
    6. ']]]' → logprob: -14.879626274108887
    7. ')]' → logprob: -15.004626274108887
    8. ' ]' → logprob: -15.129626274108887
    9. ']]:
' → logprob: -15.254626274108887
    10. ']' → logprob: -15.379626274108887

Token 355: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03989635780453682
    2. ']):' → logprob: -3.289896249771118
    3. ')' → logprob: -6.664896488189697
    4. '   ' → logprob: -7.789896488189697
    5. '):
' → logprob: -9.789896011352539
    6. ')]' → logprob: -10.539896011352539
    7. ' ):' → logprob: -10.914896011352539
    8. ')):' → logprob: -11.039896011352539
    9. ']:' → logprob: -11.289896011352539
    10. '])' → logprob: -11.539896011352539

Token 356: ' Gr' (ID: 2502)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03707645833492279
    2. '[' → logprob: -4.412076473236084
    3. ' ' → logprob: -5.287076473236084
    4. '[
' → logprob: -5.412076473236084
    5. 'La' → logprob: -5.912076473236084
    6. 'list' → logprob: -6.037076473236084
    7. 'bool' → logprob: -6.287076473236084
    8. ')' → logprob: -6.412076473236084
    9. '3' → logprob: -7.037076473236084
    10. ' list' → logprob: -7.037076473236084

Token 357: 'ille' (ID: 3301)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.6283017992973328
    2. '[[' → logprob: -1.7533018589019775
    3. 'oolean' → logprob: -2.1283018589019775
    4. '[' → logprob: -2.8783018589019775
    5. 'ool' → logprob: -3.0033018589019775
    6. 'arked' → logprob: -3.7533018589019775
    7. '[
' → logprob: -4.003301620483398
    8. 'bool' → logprob: -5.253301620483398
    9. 'ooked' → logprob: -5.753301620483398
    10. 'Marked' → logprob: -6.003301620483398

Token 358: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0511287450790405
    2. '3' → logprob: -1.4261287450790405
    3. '[' → logprob: -1.4261287450790405
    4. ' de' → logprob: -2.05112886428833
    5. ' [' → logprob: -4.30112886428833
    6. ' of' → logprob: -5.17612886428833
    7. '   ' → logprob: -5.42612886428833
    8. '[][]' → logprob: -5.55112886428833
    9. '<bool' → logprob: -5.80112886428833
    10. ' marked' → logprob: -5.80112886428833

Token 359: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004197828937321901
    2. '[' → logprob: -5.629197597503662
    3. 'bool' → logprob: -8.00419807434082
    4. 'of' → logprob: -9.25419807434082
    5. '[[' → logprob: -10.12919807434082
    6. '<bool' → logprob: -10.37919807434082
    7. 'de' → logprob: -10.62919807434082
    8. '[list' → logprob: -10.62919807434082
    9. '```' → logprob: -10.75419807434082
    10. ' ' → logprob: -11.75419807434082

Token 360: 'x' (ID: 87)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1304319202899933
    2. 'for' → logprob: -2.630431890487671
    3. '   ' → logprob: -4.38043212890625
    4. '[[' → logprob: -5.00543212890625
    5. 'x' → logprob: -5.25543212890625
    6. '[list' → logprob: -5.25543212890625
    7. '[
' → logprob: -5.50543212890625
    8. '[int' → logprob: -5.50543212890625
    9. '```' → logprob: -6.13043212890625
    10. '       ' → logprob: -6.13043212890625

Token 361: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.30996376276016235
    2. '[' → logprob: -1.4349637031555176
    3. 'bool' → logprob: -3.6849637031555176
    4. '[
' → logprob: -7.184963703155518
    5. 'for' → logprob: -7.684963703155518
    6. '```' → logprob: -7.934963703155518
    7. '][' → logprob: -8.434964179992676
    8. 'True' → logprob: -8.559964179992676
    9. '-' → logprob: -8.559964179992676
    10. '   ' → logprob: -8.559964179992676

Token 362: ' de' (ID: 334)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026898697018623352
    2. ')' → logprob: -4.4018988609313965
    3. '   ' → logprob: -4.4018988609313965
    4. '):
' → logprob: -6.5268988609313965
    5. ':' → logprob: -8.526898384094238
    6. ' de' → logprob: -9.151898384094238
    7. 'de' → logprob: -10.151898384094238
    8. '```' → logprob: -10.151898384094238
    9. ' ):' → logprob: -10.401898384094238
    10. '[' → logprob: -10.651898384094238

Token 363: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.395371675491333
    2. 'bool' → logprob: -1.145371675491333
    3. ' valeurs' → logprob: -5.645371437072754
    4. 'values' → logprob: -6.020371437072754
    5. 'marked' → logprob: -6.895371437072754
    6. ' bool' → logprob: -7.520371437072754
    7. 'mar' → logprob: -8.270371437072754
    8. 'cases' → logprob: -8.395371437072754
    9. 'valu' → logprob: -8.895371437072754
    10. 'vals' → logprob: -9.020371437072754

Token 364: ' bool' (ID: 3792)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5583934783935547
    2. 'bool' → logprob: -1.0583934783935547
    3. '<bool' → logprob: -3.9333934783935547
    4. '   ' → logprob: -4.433393478393555
    5. '_bool' → logprob: -4.683393478393555
    6. ' bool' → logprob: -4.808393478393555
    7. '[][]' → logprob: -5.058393478393555
    8. ',bool' → logprob: -5.433393478393555
    9. '```' → logprob: -5.433393478393555
    10. '[[' → logprob: -5.558393478393555

Token 365: 'é' (ID: 377)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.9928849935531616
    2. '_' → logprob: -1.8678849935531616
    3. ']' → logprob: -1.9928849935531616
    4. ')]' → logprob: -2.367885112762451
    5. ']]:
' → logprob: -2.742885112762451
    6. '[' → logprob: -2.992885112762451
    7. '   ' → logprob: -3.742885112762451
    8. ']])' → logprob: -3.867885112762451
    9. '```' → logprob: -4.492885112762451
    10. ']:
' → logprob: -4.492885112762451

Token 366: 'ennes' (ID: 21989)
  Prédit: 'ennes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ennes' → logprob: -0.0023359241895377636
    2. 'annes' → logprob: -7.002336025238037
    3. 'iennes' → logprob: -7.252336025238037
    4. 'anes' → logprob: -7.877336025238037
    5. 'ènes' → logprob: -9.002335548400879
    6. 'aines' → logprob: -9.502335548400879
    7. 'enes' → logprob: -9.627335548400879
    8. 'en' → logprob: -11.002335548400879
    9. 'ens' → logprob: -11.502335548400879
    10. 'an' → logprob: -11.627335548400879

Token 367: ' indiqu' (ID: 100773)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2409924864768982
    2. '):' → logprob: -1.615992546081543
    3. '):
' → logprob: -4.615992546081543
    4. ']):' → logprob: -6.115992546081543
    5. ')' → logprob: -6.740992546081543
    6. ']:' → logprob: -7.365992546081543
    7. '```' → logprob: -7.740992546081543
    8. '       ' → logprob: -7.990992546081543
    9. ']' → logprob: -8.615992546081543
    10. ']):
' → logprob: -9.365992546081543

Token 368: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -14.250000953674316
    3. '[' → logprob: -16.125001907348633
    4. 'iquant' → logprob: -16.750001907348633
    5. 'iant' → logprob: -16.750001907348633
    6. 'ing' → logprob: -17.000001907348633
    7. 'ent' → logprob: -18.125001907348633
    8. ' ant' → logprob: -18.375001907348633
    9. '
' → logprob: -18.500001907348633
    10. 'Ant' → logprob: -18.875001907348633

Token 369: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1844874769449234
    2. 'les' → logprob: -1.8094874620437622
    3. '   ' → logprob: -5.434487342834473
    4. ' if' → logprob: -9.934487342834473
    5. ' ' → logprob: -10.059487342834473
    6. '```' → logprob: -10.184487342834473
    7. '<|end|>' → logprob: -10.434487342834473
    8. 'if' → logprob: -10.434487342834473
    9. ' ' → logprob: -10.809487342834473
    10. '       ' → logprob: -11.309487342834473

Token 370: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.02328786998987198
    2. ' cases' → logprob: -3.773287773132324
    3. 'case' → logprob: -10.273287773132324
    4. ' case' → logprob: -13.398287773132324
    5. 'cells' → logprob: -13.398287773132324
    6. 'mar' → logprob: -13.523287773132324
    7. '```' → logprob: -14.398287773132324
    8. 'cas' → logprob: -14.648287773132324
    9. ' lignes' → logprob: -15.148287773132324
    10. '   ' → logprob: -15.273287773132324

Token 371: ' mar' (ID: 2674)
  Prédit: ' mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.03876915201544762
    2. 'mar' → logprob: -3.288769245147705
    3. '   ' → logprob: -7.913769245147705
    4. ' marqué' → logprob: -8.913768768310547
    5. 'mark' → logprob: -9.038768768310547
    6. ' mark' → logprob: -10.288768768310547
    7. ',' → logprob: -10.788768768310547
    8. ' marked' → logprob: -11.038768768310547
    9. 'marked' → logprob: -11.163768768310547
    10. ' marc' → logprob: -12.288768768310547

Token 372: 'quées' (ID: 111264)
  Prédit: 'quées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quées' → logprob: -0.008744694292545319
    2. 'qu' → logprob: -4.758744716644287
    3. 'q' → logprob: -10.383744239807129
    4. 'qués' → logprob: -10.883744239807129
    5. 'ées' → logprob: -11.008744239807129
    6. '
' → logprob: -11.508744239807129
    7. 'isées' → logprob: -11.883744239807129
    8. 'quée' → logprob: -12.383744239807129
    9. '```' → logprob: -12.383744239807129
    10. '``' → logprob: -12.633744239807129

Token 373: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7485519647598267
    2. '):
' → logprob: -0.7485519647598267
    3. '):' → logprob: -2.998551845550537
    4. ')' → logprob: -5.623551845550537
    5. '):

' → logprob: -7.873551845550537
    6. '):
' → logprob: -10.873552322387695
    7. ')
' → logprob: -10.998552322387695
    8. '
' → logprob: -12.623552322387695
    9. ' ):
' → logprob: -12.998552322387695
    10. '       ' → logprob: -13.748552322387695

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013834332639817148
    2. '    
' → logprob: -9.375138282775879
    3. '
' → logprob: -10.000138282775879
    4. 'def' → logprob: -11.875138282775879
    5. 'for' → logprob: -14.375138282775879
    6. '   
' → logprob: -16.125139236450195
    7. ' for' → logprob: -16.375139236450195
    8. '  
' → logprob: -16.625139236450195
    9. '    
    
' → logprob: -16.875139236450195
    10. '        
' → logprob: -17.000139236450195

Token 375: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003525002161040902
    2. 'for' → logprob: -5.8785247802734375
    3. 'def' → logprob: -8.003524780273438
    4. '
' → logprob: -8.378524780273438
    5. 'Returns' (adapté à ' Returns') → logprob: -9.378524780273438
    6. ' for' → logprob: -10.753524780273438
    7. 'if' → logprob: -10.878524780273438
    8. '    
' → logprob: -11.253524780273438
    9. '"""
' → logprob: -11.628524780273438
    10. '```' → logprob: -12.503524780273438

Token 376: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42216795682907104
    2. ' :' → logprob: -1.1721680164337158
    3. ' bool' → logprob: -4.047167778015137
    4. ' True' → logprob: -4.547167778015137
    5. ' =' → logprob: -6.547167778015137
    6. ' ' → logprob: -7.047167778015137
    7. ' boolean' → logprob: -7.047167778015137
    8. '   ' → logprob: -7.422167778015137
    9. '_' → logprob: -7.672167778015137
    10. ' ' → logprob: -7.922167778015137

Token 377: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050810035318136215
    2. ' bool' → logprob: -3.3008100986480713
    3. ' True' → logprob: -4.425809860229492
    4. 'bool' → logprob: -7.675809860229492
    5. 'True' → logprob: -8.300809860229492
    6. '    ' → logprob: -11.925809860229492
    7. ' False' → logprob: -13.925809860229492
    8. ' ' → logprob: -14.425809860229492
    9. '   ' → logprob: -14.550809860229492
    10. 'False' → logprob: -14.925809860229492

Token 378: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' (adapté à ' bool') → logprob: -0.0003625177196227014
    2. ' bool' → logprob: -8.000362396240234
    3. 'True' → logprob: -10.750362396240234
    4. '   ' → logprob: -12.125362396240234
    5. '
' → logprob: -15.750362396240234
    6. ' True' → logprob: -16.500362396240234
    7. 'Bool' → logprob: -17.750362396240234
    8. '```' → logprob: -18.250362396240234
    9. 'true' → logprob: -19.125362396240234
    10. '<bool' → logprob: -19.375362396240234

Token 379: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02542126551270485
    2. ' True' → logprob: -4.775421142578125
    3. ' :' → logprob: -5.150421142578125
    4. 'True' → logprob: -5.650421142578125
    5. '   ' → logprob: -5.900421142578125
    6. '):' → logprob: -6.275421142578125
    7. '=True' → logprob: -6.525421142578125
    8. '(True' → logprob: -7.900421142578125
    9. ':
' → logprob: -8.150421142578125
    10. '<|end|>' → logprob: -8.400421142578125

Token 380: ' True' (ID: 6432)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.5549233555793762
    2. ' True' → logprob: -1.0549232959747314
    3. 'True' → logprob: -2.8049232959747314
    4. '   ' → logprob: -4.3049235343933105
    5. 'any' → logprob: -6.1799235343933105
    6. ' for' → logprob: -7.1799235343933105
    7. ' all' → logprob: -7.4299235343933105
    8. 'Any' → logprob: -9.304923057556152
    9. ' return' → logprob: -9.429923057556152
    10. '
' → logprob: -11.179923057556152

Token 381: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: ' une' (ID: 2463)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.12135877460241318
    2. ' il' → logprob: -3.121358871459961
    3. ' une' → logprob: -3.496358871459961
    4. ' True' → logprob: -3.996358871459961
    5. 'any' → logprob: -4.621358871459961
    6. ' au' → logprob: -6.246358871459961
    7. 'True' → logprob: -6.371358871459961
    8. ' la' → logprob: -6.496358871459961
    9. 'il' → logprob: -6.621358871459961
    10. ' toute' → logprob: -6.621358871459961

Token 383: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.0800214409828186
    2. 'ligne' → logprob: -2.580021381378174
    3. ' any' → logprob: -8.080021858215332
    4. ' line' → logprob: -8.205021858215332
    5. 'b' → logprob: -8.705021858215332
    6. 'line' → logprob: -9.830021858215332
    7. ' ' → logprob: -9.955021858215332
    8. ' bingo' → logprob: -9.955021858215332
    9. 'any' → logprob: -9.955021858215332
    10. ' b' → logprob: -10.080021858215332

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36930325627326965
    2. ' ou' → logprob: -1.9943032264709473
    3. ' or' → logprob: -1.9943032264709473
    4. 's' → logprob: -4.744303226470947
    5. '   ' → logprob: -4.994303226470947
    6. 'ou' → logprob: -4.994303226470947
    7. ')' → logprob: -5.619303226470947
    8. '    ' → logprob: -5.994303226470947
    9. 'or' → logprob: -6.744303226470947
    10. ' complète' → logprob: -6.994303226470947

Token 385: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7027259469032288
    2. 'col' → logprob: -2.077725887298584
    3. 'une' → logprob: -2.077725887298584
    4. ' colonne' → logprob: -2.202725887298584
    5. '   ' → logprob: -2.827725887298584
    6. '       ' → logprob: -3.577725887298584
    7. ' False' → logprob: -4.202725887298584
    8. ' True' → logprob: -4.577725887298584
    9. ' column' → logprob: -4.577725887298584
    10. 'column' → logprob: -4.952725887298584

Token 386: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.011402171105146408
    2. ' colonne' → logprob: -4.511402130126953
    3. 'column' → logprob: -8.386402130126953
    4. ' col' → logprob: -9.261402130126953
    5. 'colon' → logprob: -11.136402130126953
    6. '```' → logprob: -12.761402130126953
    7. ' True' → logprob: -13.011402130126953
    8. '   ' → logprob: -13.136402130126953
    9. ' colon' → logprob: -13.636402130126953
    10. ' kol' → logprob: -13.886402130126953

Token 387: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -1.0363664627075195
    2. ',' → logprob: -1.4113664627075195
    3. 'ou' → logprob: -1.5363664627075195
    4. ' or' → logprob: -2.2863664627075195
    5. ' complète' → logprob: -2.7863664627075195
    6. ' complet' → logprob: -5.1613664627075195
    7. 'or' → logprob: -5.4113664627075195
    8. ')' → logprob: -5.5363664627075195
    9. '   ' → logprob: -6.1613664627075195
    10. ' completes' → logprob: -7.2863664627075195

Token 388: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.031352680176496506
    2. 'une' → logprob: -3.5313527584075928
    3. '   ' → logprob: -7.406352519989014
    4. ' True' → logprob: -8.031352996826172
    5. '```' → logprob: -8.156352996826172
    6. 'n' → logprob: -9.781352996826172
    7. 'di' → logprob: -10.031352996826172
    8. ' n' → logprob: -10.156352996826172
    9. ' ' → logprob: -10.156352996826172
    10. '       ' → logprob: -10.281352996826172

Token 389: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.06533917039632797
    2. ' diagon' → logprob: -2.9403390884399414
    3. 'diag' → logprob: -5.190339088439941
    4. ' diagonal' → logprob: -5.565339088439941
    5. ' diag' → logprob: -8.190339088439941
    6. 'ligne' → logprob: -8.315339088439941
    7. 'case' → logprob: -8.690339088439941
    8. ' ligne' → logprob: -9.440339088439941
    9. 'b' → logprob: -9.815339088439941
    10. ' case' → logprob: -10.190339088439941

Token 390: 'ale' (ID: 1167)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.04920957237482071
    2. 'e' → logprob: -3.7992095947265625
    3. 'ale' → logprob: -4.6742095947265625
    4. 'é' → logprob: -5.0492095947265625
    5. 'è' → logprob: -5.2992095947265625
    6. 'ère' → logprob: -5.5492095947265625
    7. 'née' → logprob: -8.924209594726562
    8. 'le' → logprob: -9.049209594726562
    9. 'rée' → logprob: -9.299209594726562
    10. 'ee' → logprob: -9.299209594726562

Token 391: ' est' (ID: 893)
  Prédit: ' complète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complète' → logprob: -0.30592602491378784
    2. ' est' → logprob: -2.4309260845184326
    3. ' complete' → logprob: -2.5559260845184326
    4. ' is' → logprob: -3.1809260845184326
    5. 'complete' → logprob: -3.6809260845184326
    6. 'est' → logprob: -4.1809258460998535
    7. 'compl' → logprob: -4.4309258460998535
    8. 'com' → logprob: -6.1809258460998535
    9. ' compl' → logprob: -7.5559258460998535
    10. '_complete' → logprob: -7.5559258460998535

Token 392: ' complètement' (ID: 81766)
  Prédit: ' complète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complète' → logprob: -0.7275243997573853
    2. 'compl' → logprob: -1.1025243997573853
    3. ' compl' → logprob: -1.9775243997573853
    4. 'com' → logprob: -3.6025242805480957
    5. ' complete' → logprob: -4.727524280548096
    6. 'complete' → logprob: -5.852524280548096
    7. ' rempl' → logprob: -6.102524280548096
    8. ' True' → logprob: -6.477524280548096
    9. ' complètement' → logprob: -6.977524280548096
    10. ' entièrement' → logprob: -7.477524280548096

Token 393: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.07122014462947845
    2. ' mar' → logprob: -3.8212201595306396
    3. 'True' → logprob: -4.1962199211120605
    4. ' rempl' → logprob: -4.3212199211120605
    5. ' True' → logprob: -4.8212199211120605
    6. 'co' → logprob: -5.0712199211120605
    7. 'mark' → logprob: -6.4462199211120605
    8. 'rem' → logprob: -6.6962199211120605
    9. 'b' → logprob: -7.5712199211120605
    10. 'marked' → logprob: -7.8212199211120605

Token 394: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -0.006884680595248938
    2. 'qu' → logprob: -5.256884574890137
    3. 'quee' → logprob: -6.756884574890137
    4. 'q' → logprob: -8.006884574890137
    5. 'quées' → logprob: -9.506884574890137
    6. 'k' → logprob: -10.131884574890137
    7. 'qué' → logprob: -10.756884574890137
    8. 'que' → logprob: -11.631884574890137
    9. 'qués' → logprob: -13.381884574890137
    10. 'uée' → logprob: -13.756884574890137

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008035039529204369
    2. '   ' → logprob: -5.383035182952881
    3. ',
' → logprob: -6.133035182952881
    4. 'True' → logprob: -7.508035182952881
    5. ' ,' → logprob: -8.758034706115723
    6. '
' → logprob: -8.883034706115723
    7. ' True' → logprob: -9.008034706115723
    8. '.' → logprob: -9.258034706115723
    9. '```' → logprob: -9.883034706115723
    10. '=True' → logprob: -10.008034706115723

Token 396: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.7713406085968018
    2. 'False' → logprob: -1.1463406085968018
    3. '   ' → logprob: -1.5213406085968018
    4. ' True' → logprob: -7.771340370178223
    5. '
' → logprob: -7.896340370178223
    6. '    ' → logprob: -8.521340370178223
    7. 'True' → logprob: -8.771340370178223
    8. ' else' → logprob: -8.896340370178223
    9. '       ' → logprob: -10.521340370178223
    10. '    
' → logprob: -10.646340370178223

Token 397: ' sinon' (ID: 52915)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8149183988571167
    2. '   ' → logprob: -0.8149183988571167
    3. '.' → logprob: -2.9399185180664062
    4. '```' → logprob: -3.9399185180664062
    5. '<|end|>' → logprob: -3.9399185180664062
    6. ' else' → logprob: -4.689918518066406
    7. '=True' → logprob: -6.064918518066406
    8. 'else' → logprob: -6.064918518066406
    9. ' sinon' → logprob: -6.689918518066406
    10. ',
' → logprob: -6.689918518066406

Token 398: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007551728282123804
    2. '
' → logprob: -5.507551670074463
    3. '.' → logprob: -6.257551670074463
    4. ')' → logprob: -7.007551670074463
    5. ',' → logprob: -8.007552146911621
    6. '```' → logprob: -9.007552146911621
    7. 'def' → logprob: -9.507552146911621
    8. '<|end|>' → logprob: -10.382552146911621
    9. '.
' → logprob: -11.132552146911621
    10. ',
' → logprob: -11.132552146911621

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014315475709736347
    2. '    
' → logprob: -7.251431465148926
    3. '
' → logprob: -7.626431465148926
    4. ')' → logprob: -8.501431465148926
    5. '    ' → logprob: -12.126431465148926
    6. '```' → logprob: -12.126431465148926
    7. '' → logprob: -12.626431465148926
    8. 'def' → logprob: -12.876431465148926
    9. '  
' → logprob: -13.126431465148926
    10. ':' → logprob: -13.126431465148926

Token 400: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000980766722932458
    2. '
' → logprob: -7.500980854034424
    3. '    
' → logprob: -8.125980377197266
    4. ')' → logprob: -9.000980377197266
    5. 'def' → logprob: -13.125980377197266
    6. '   
' → logprob: -13.500980377197266
    7. ')
' → logprob: -13.875980377197266
    8. '```' → logprob: -13.875980377197266
    9. '    ' → logprob: -14.250980377197266
    10. '  
' → logprob: -14.625980377197266

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004007600946351886
    2. '    
' → logprob: -8.12540054321289
    3. '
' → logprob: -10.00040054321289
    4. ' for' → logprob: -10.75040054321289
    5. '    ' → logprob: -11.25040054321289
    6. 'for' → logprob: -11.75040054321289
    7. ' 
' → logprob: -11.87540054321289
    8. '   
' → logprob: -12.62540054321289
    9. '   ' → logprob: -13.50040054321289
    10. '  
' → logprob: -13.62540054321289

Token 402: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10776329040527344
    2. '   ' → logprob: -2.8577632904052734
    3. '#' (adapté à ' #') → logprob: -3.1077632904052734
    4. ' for' → logprob: -9.732763290405273
    5. '	for' → logprob: -13.607763290405273
    6. ' #' → logprob: -14.482763290405273
    7. '
' → logprob: -14.982763290405273
    8. 'def' → logprob: -15.107763290405273
    9. '    
' → logprob: -16.607763290405273
    10. '  ' → logprob: -16.607763290405273

Token 403: ' Vér' (ID: 159169)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03828326612710953
    2. '#' → logprob: -3.288283348083496
    3. '   ' → logprob: -8.413283348083496
    4. ' for' → logprob: -11.038283348083496
    5. 'def' → logprob: -13.038283348083496
    6. 'For' → logprob: -14.038283348083496
    7. 'n' → logprob: -15.038283348083496
    8. '	for' → logprob: -15.288283348083496
    9. ' #' → logprob: -15.413283348083496
    10. '```' → logprob: -17.53828239440918

Token 404: 'ification' (ID: 3166)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2318849116563797
    2. 'ifier' → logprob: -2.1068849563598633
    3. 'ifie' → logprob: -2.6068849563598633
    4. 'if' → logprob: -4.856884956359863
    5. 'ifiez' → logprob: -5.981884956359863
    6. 'for' → logprob: -7.606884956359863
    7. 'ify' → logprob: -8.231884956359863
    8. 'ification' → logprob: -8.856884956359863
    9. 'ifies' → logprob: -8.981884956359863
    10. 'ifié' → logprob: -9.481884956359863

Token 405: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35642534494400024
    2. ' for' → logprob: -1.6064252853393555
    3. 'for' → logprob: -2.3564252853393555
    4. ' des' → logprob: -5.4814252853393555
    5. '#' → logprob: -9.231425285339355
    6. ' de' → logprob: -9.856425285339355
    7. ' of' → logprob: -10.731425285339355
    8. 'des' → logprob: -10.731425285339355
    9. ' ' → logprob: -10.856425285339355
    10. '	for' → logprob: -11.356425285339355

Token 406: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1549583673477173
    2. 'i' → logprob: -1.4049583673477173
    3. 'range' → logprob: -2.2799582481384277
    4. 'for' → logprob: -2.4049582481384277
    5. 'rows' → logprob: -2.6549582481384277
    6. ' lignes' → logprob: -2.7799582481384277
    7. ' for' → logprob: -3.4049582481384277
    8. ' rows' → logprob: -3.7799582481384277
    9. ' range' → logprob: -3.7799582481384277
    10. ' i' → logprob: -4.529958248138428

Token 407: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003055308014154434
    2. 'for' → logprob: -6.503055095672607
    3. ' for' → logprob: -6.753055095672607
    4. '
' → logprob: -8.503055572509766
    5. '    
' → logprob: -8.753055572509766
    6. ':' → logprob: -11.503055572509766
    7. '  
' → logprob: -12.253055572509766
    8. '	for' → logprob: -13.003055572509766
    9. '   
' → logprob: -13.253055572509766
    10. '```' → logprob: -13.878055572509766

Token 408: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6887725591659546
    2. ' colon' → logprob: -1.3137725591659546
    3. 'colon' → logprob: -1.6887725591659546
    4. 'des' → logprob: -3.188772678375244
    5. 'col' → logprob: -6.938772678375244
    6. ' for' → logprob: -6.938772678375244
    7. '   ' → logprob: -7.688772678375244
    8. 'for' → logprob: -7.938772678375244
    9. 'cols' → logprob: -8.563772201538086
    10. 'columns' → logprob: -10.438772201538086

Token 409: ' colon' (ID: 20947)
  Prédit: 'colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -0.02297954261302948
    2. ' colon' → logprob: -3.897979497909546
    3. 'cols' → logprob: -6.397979736328125
    4. 'columns' → logprob: -7.897979736328125
    5. 'col' → logprob: -8.397979736328125
    6. 'range' → logprob: -8.897979736328125
    7. 'for' → logprob: -11.522979736328125
    8. 'ranges' → logprob: -11.647979736328125
    9. 'column' → logprob: -12.522979736328125
    10. '```' → logprob: -12.897979736328125

Token 410: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -1.2233183042553719e-05
    2. 'es' → logprob: -11.500012397766113
    3. 'n' → logprob: -14.625012397766113
    4. '#' → logprob: -15.125012397766113
    5. '```' → logprob: -15.375012397766113
    6. '``' → logprob: -15.750012397766113
    7. '\' → logprob: -16.000011444091797
    8. '   ' → logprob: -16.125011444091797
    9. 'nées' → logprob: -16.250011444091797
    10. '[' → logprob: -16.500011444091797

Token 411: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.764977686339989e-05
    2. '    
' → logprob: -10.625057220458984
    3. 'for' → logprob: -10.750057220458984
    4. '
' → logprob: -11.875057220458984
    5. ' for' → logprob: -12.375057220458984
    6. '  
' → logprob: -15.500057220458984
    7. '   
' → logprob: -15.750057220458984
    8. '```' → logprob: -16.375057220458984
    9. '  ' → logprob: -16.500057220458984
    10. '       ' → logprob: -17.375057220458984

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.482821431243792e-05
    2. 'for' → logprob: -9.62508487701416
    3. '
' → logprob: -11.37508487701416
    4. '    
' → logprob: -12.50008487701416
    5. ' for' → logprob: -12.62508487701416
    6. '```' → logprob: -17.250083923339844
    7. '   
' → logprob: -17.375083923339844
    8. '   ' → logprob: -17.625083923339844
    9. '  
' → logprob: -17.750083923339844
    10. '       ' → logprob: -17.875083923339844

Token 413: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011951940134167671
    2. 'for' (adapté à ' for') → logprob: -4.511951923370361
    3. ' for' → logprob: -7.011951923370361
    4. '
' → logprob: -13.13695240020752
    5. '    
' → logprob: -14.63695240020752
    6. '	for' → logprob: -15.26195240020752
    7. '   ' → logprob: -16.761951446533203
    8. '```' → logprob: -17.261951446533203
    9. '  ' → logprob: -17.761951446533203
    10. '       ' → logprob: -18.261951446533203

Token 414: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12692894041538239
    2. 'i' → logprob: -2.1269290447235107
    3. ' row' → logprob: -14.87692928314209
    4. '	i' → logprob: -15.50192928314209
    5. ' ' → logprob: -15.62692928314209
    6. '   ' → logprob: -16.626928329467773
    7. ' range' → logprob: -17.376928329467773
    8. 'row' → logprob: -17.376928329467773
    9. ' ' → logprob: -18.126928329467773
    10. ' line' → logprob: -18.376928329467773

Token 415: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023249439895153046
    2. 'in' → logprob: -3.773249387741089
    3. ' ' → logprob: -12.898249626159668
    4. 'range' → logprob: -14.273249626159668
    5. '0' → logprob: -15.773249626159668
    6. '   ' → logprob: -15.898249626159668
    7. 'In' → logprob: -16.14824867248535
    8. '  ' → logprob: -16.64824867248535
    9. ',' → logprob: -16.64824867248535
    10. '	in' → logprob: -17.39824867248535

Token 416: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740777611732483
    2. 'range' → logprob: -0.9740777611732483
    3. ' ' → logprob: -14.974078178405762
    4. '	range' → logprob: -15.599078178405762
    5. '(range' → logprob: -16.099077224731445
    6. '   ' → logprob: -16.349077224731445
    7. '```' → logprob: -18.224077224731445
    8. '[' → logprob: -18.349077224731445
    9. 'in' → logprob: -18.724077224731445
    10. ')' → logprob: -18.724077224731445

Token 417: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.742448022123426e-05
    2. '3' → logprob: -9.625067710876465
    3. '(
' → logprob: -13.625067710876465
    4. ' (' → logprob: -16.12506675720215
    5. '   ' → logprob: -16.37506675720215
    6. ' ' → logprob: -17.62506675720215
    7. '
' → logprob: -20.87506675720215
    8. 'def' → logprob: -22.00006675720215
    9. '(
' → logprob: -22.12506675720215
    10. '	' → logprob: -22.50006675720215

Token 418: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -18.625
    4. '```' → logprob: -19.75
    5. 'def' → logprob: -19.875
    6. '۳' → logprob: -19.875
    7. ')' → logprob: -20.75
    8. '৩' → logprob: -20.75
    9. '
' → logprob: -21.25
    10. '３' → logprob: -21.5

Token 419: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1610761433839798
    2. '):
' → logprob: -1.9110761880874634
    3. ')' → logprob: -7.411076068878174
    4. '   ' → logprob: -8.536076545715332
    5. ':' → logprob: -10.661076545715332
    6. ' ):' → logprob: -10.911076545715332
    7. ' ):
' → logprob: -12.536076545715332
    8. '):

' → logprob: -13.161076545715332
    9. '):
' → logprob: -13.161076545715332
    10. ' ' → logprob: -14.286076545715332

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013572083844337612
    2. ' if' → logprob: -9.25013542175293
    3. 'if' → logprob: -10.87513542175293
    4. '   ' → logprob: -11.25013542175293
    5. '    ' → logprob: -12.75013542175293
    6. '<|end|>' → logprob: -13.62513542175293
    7. '	' → logprob: -14.75013542175293
    8. '	   ' → logprob: -14.75013542175293
    9. '        
' → logprob: -15.00013542175293
    10. '           ' → logprob: -15.00013542175293

Token 421: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.021408185362815857
    2. ' if' → logprob: -4.0214080810546875
    3. '       ' → logprob: -5.7714080810546875
    4. '   ' → logprob: -8.896408081054688
    5. '	if' → logprob: -14.771408081054688
    6. 'If' → logprob: -16.771408081054688
    7. '    ' → logprob: -16.896408081054688
    8. ' ' → logprob: -16.896408081054688
    9. '           ' → logprob: -17.521408081054688
    10. '	   ' → logprob: -17.771408081054688

Token 422: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003721622342709452
    2. ' if' → logprob: -8.000371932983398
    3. '   ' → logprob: -10.375371932983398
    4. '       ' → logprob: -12.125371932983398
    5. 'If' → logprob: -18.1253719329834
    6. '	if' → logprob: -19.0003719329834
    7. '    ' → logprob: -19.0003719329834
    8. ' ' → logprob: -19.2503719329834
    9. '           ' → logprob: -19.7503719329834
    10. '
' → logprob: -20.1253719329834

Token 423: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.04553290084004402
    2. 'if' → logprob: -3.6705329418182373
    3. 'ifier' → logprob: -4.170532703399658
    4. 'ifiez' → logprob: -6.295532703399658
    5. 'ify' → logprob: -6.545532703399658
    6. 'ification' → logprob: -9.295533180236816
    7. '   ' → logprob: -9.295533180236816
    8. 'f' → logprob: -9.920533180236816
    9. 'ifies' → logprob: -10.295533180236816
    10. 'ifié' → logprob: -11.420533180236816

Token 424: ' la' (ID: 557)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07356207817792892
    2. ' all' → logprob: -2.6985621452331543
    3. 'all' → logprob: -6.323562145233154
    4. 'if' → logprob: -6.948562145233154
    5. '   ' → logprob: -7.323562145233154
    6. ' les' → logprob: -9.823561668395996
    7. '    ' → logprob: -10.198561668395996
    8. ' ' → logprob: -10.323561668395996
    9. ' la' → logprob: -10.698561668395996
    10. ' marked' → logprob: -11.198561668395996

Token 425: ' i' (ID: 575)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.002258498687297106
    2. ' all' → logprob: -6.62725830078125
    3. 'marked' → logprob: -7.12725830078125
    4. 't' → logprob: -9.37725830078125
    5. '   ' → logprob: -10.87725830078125
    6. ' marked' → logprob: -12.12725830078125
    7. ' ' → logprob: -12.75225830078125
    8. 'len' → logprob: -12.87725830078125
    9. 'ligne' → logprob: -13.00225830078125
    10. 'if' → logprob: -13.12725830078125

Token 426: '-' (ID: 12)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1251629739999771
    2. 'if' → logprob: -2.7501630783081055
    3. ' in' → logprob: -3.1251630783081055
    4. '   ' → logprob: -6.7501630783081055
    5. ' all' → logprob: -6.7501630783081055
    6. ' range' → logprob: -6.7501630783081055
    7. ' ' → logprob: -7.0001630783081055
    8. ' line' → logprob: -7.1251630783081055
    9. ' ==' → logprob: -7.2501630783081055
    10. ' not' → logprob: -7.7501630783081055

Token 427: 'ème' (ID: 9767)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.5274139046669006
    2. 'range' → logprob: -1.7774138450622559
    3. '0' → logprob: -2.652413845062256
    4. ' ' → logprob: -3.402413845062256
    5. 'th' → logprob: -3.652413845062256
    6. ' range' → logprob: -3.777413845062256
    7. 'row' → logprob: -4.152413845062256
    8. 'len' → logprob: -4.777413845062256
    9. '1' → logprob: -4.777413845062256
    10. ' ligne' → logprob: -4.902413845062256

Token 428: ' colonne' (ID: 148275)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.06662122160196304
    2. ' ligne' → logprob: -3.6916213035583496
    3. 'all' → logprob: -3.9416213035583496
    4. 'range' → logprob: -5.19162130355835
    5. ' all' → logprob: -5.44162130355835
    6. 'if' → logprob: -5.69162130355835
    7. ' if' → logprob: -6.31662130355835
    8. 'sum' → logprob: -6.81662130355835
    9. ' range' → logprob: -6.81662130355835
    10. 'l' → logprob: -6.94162130355835

Token 429: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5441701412200928
    2. ' if' → logprob: -1.5441701412200928
    3. 'if' → logprob: -1.6691701412200928
    4. '   ' → logprob: -4.044170379638672
    5. ',' → logprob: -8.919170379638672
    6. ' and' → logprob: -9.794170379638672
    7. '           ' → logprob: -10.794170379638672
    8. ':' → logprob: -10.919170379638672
    9. 'and' → logprob: -11.669170379638672
    10. ' or' → logprob: -12.669170379638672

Token 430: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5399869084358215
    2. '   ' → logprob: -1.4149868488311768
    3. ' if' → logprob: -1.7899868488311768
    4. '       ' → logprob: -4.914987087249756
    5. 'for' → logprob: -12.664986610412598
    6. ' ' → logprob: -12.914986610412598
    7. ' and' → logprob: -13.289986610412598
    8. '           ' → logprob: -13.289986610412598
    9. '    ' → logprob: -13.289986610412598
    10. ',' → logprob: -13.539986610412598

Token 431: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005848681554198265
    2. '   ' → logprob: -5.7558488845825195
    3. ' if' → logprob: -6.0058488845825195
    4. '       ' → logprob: -8.50584888458252
    5. 'all' → logprob: -15.75584888458252
    6. '           ' → logprob: -15.75584888458252
    7. ' ' → logprob: -16.005847930908203
    8. 'for' → logprob: -16.005847930908203
    9. '    ' → logprob: -16.505847930908203
    10. '  ' → logprob: -16.630847930908203

Token 432: ' marked' (ID: 20779)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.14129610359668732
    2. ' all' → logprob: -2.141296148300171
    3. 'marked' → logprob: -4.391295909881592
    4. ' marked' → logprob: -6.391295909881592
    5. '   ' → logprob: -8.89129638671875
    6. ' ' → logprob: -10.64129638671875
    7. '(all' → logprob: -11.26629638671875
    8. '	all' → logprob: -12.01629638671875
    9. 'mark' → logprob: -12.39129638671875
    10. '    ' → logprob: -12.76629638671875

Token 433: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018651321530342102
    2. '[i' → logprob: -4.018651485443115
    3. '[j' → logprob: -8.018651008605957
    4. 'all' → logprob: -9.768651008605957
    5. ' [' → logprob: -10.393651008605957
    6. '][' → logprob: -10.893651008605957
    7. '0' → logprob: -11.393651008605957
    8. '[row' → logprob: -11.518651008605957
    9. '   ' → logprob: -12.018651008605957
    10. '[][' → logprob: -12.268651008605957

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004282851587049663
    2. '[' → logprob: -7.875428199768066
    3. ' ' → logprob: -10.250428199768066
    4. 'i' → logprob: -12.500428199768066
    5. '
' → logprob: -12.750428199768066
    6. '   ' → logprob: -13.000428199768066
    7. '00' → logprob: -13.875428199768066
    8. '1' → logprob: -14.562928199768066
    9. '[i' → logprob: -14.875428199768066
    10. '```' → logprob: -15.125428199768066

Token 435: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002714681322686374
    2. '[i' → logprob: -8.500271797180176
    3. ' ][' → logprob: -9.875271797180176
    4. ']' → logprob: -11.750271797180176
    5. '[' → logprob: -12.500271797180176
    6. ']][' → logprob: -13.250271797180176
    7. 'i' → logprob: -14.000271797180176
    8. '   ' → logprob: -14.000271797180176
    9. ')][' → logprob: -15.125271797180176
    10. '"][' → logprob: -15.375271797180176

Token 436: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.088346359931165e-07
    2. ' i' → logprob: -14.000000953674316
    3. '
' → logprob: -20.875
    4. '   ' → logprob: -21.25
    5. '	i' → logprob: -21.5
    6. '```' → logprob: -21.75
    7. '[i' → logprob: -21.875
    8. ',i' → logprob: -23.0
    9. '(i' → logprob: -23.5
    10. ' ' → logprob: -23.5

Token 437: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.762356209335849e-05
    2. ' ]' → logprob: -10.50003719329834
    3. 'and' → logprob: -11.75003719329834
    4. ' and' → logprob: -13.87503719329834
    5. '   ' → logprob: -14.37503719329834
    6. ']
' → logprob: -14.50003719329834
    7. '][' → logprob: -17.250038146972656
    8. '"]' → logprob: -17.250038146972656
    9. ' ' → logprob: -17.375038146972656
    10. ']]' → logprob: -17.500038146972656

Token 438: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.2014184147119522
    2. ' and' → logprob: -1.701418399810791
    3. '   ' → logprob: -12.57641887664795
    4. '    ' → logprob: -14.70141887664795
    5. ' ' → logprob: -15.07641887664795
    6. '&' → logprob: -15.32641887664795
    7. 'a' → logprob: -15.32641887664795
    8. '	and' → logprob: -16.451417922973633
    9. '       ' → logprob: -16.701417922973633
    10. 'et' → logprob: -16.951417922973633

Token 439: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.251936137676239
    2. ' marked' → logprob: -1.5019361972808838
    3. 'mark' → logprob: -12.501935958862305
    4. '   ' → logprob: -13.501935958862305
    5. 'Marked' → logprob: -14.376935958862305
    6. 'marks' → logprob: -15.251935958862305
    7. ' all' → logprob: -15.251935958862305
    8. ' ' → logprob: -15.751935958862305
    9. ' ' → logprob: -15.876935958862305
    10. ' marcado' → logprob: -16.001935958862305

Token 440: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001040671137161553
    2. '1' → logprob: -6.876040458679199
    3. '[
' → logprob: -12.2510404586792
    4. ' [' → logprob: -13.2510404586792
    5. '][' → logprob: -14.8760404586792
    6. ' ' → logprob: -15.0010404586792
    7. '```' → logprob: -15.5010404586792
    8. '
' → logprob: -15.6260404586792
    9. '   ' → logprob: -16.001041412353516
    10. 'def' → logprob: -17.251041412353516

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -18.625
    4. '
' → logprob: -20.25
    5. '[' → logprob: -21.0
    6. '```' → logprob: -22.25
    7. '  ' → logprob: -22.625
    8. '    ' → logprob: -23.625
    9. '       ' → logprob: -23.75
    10. '     ' → logprob: -24.5

Token 442: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00016563729150220752
    2. '[i' → logprob: -9.375165939331055
    3. '[' → logprob: -10.000165939331055
    4. ' ][' → logprob: -10.500165939331055
    5. ']' → logprob: -13.250165939331055
    6. '}[' → logprob: -13.875165939331055
    7. ' [' → logprob: -14.000165939331055
    8. '>[' → logprob: -14.000165939331055
    9. '```' → logprob: -14.000165939331055
    10. '   ' → logprob: -14.125165939331055

Token 443: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.65707261255011e-06
    2. '[i' → logprob: -12.375008583068848
    3. ' i' → logprob: -12.375008583068848
    4. '[' → logprob: -15.750008583068848
    5. '```' → logprob: -17.500009536743164
    6. '   ' → logprob: -17.875009536743164
    7. '{i' → logprob: -18.125009536743164
    8. ' ' → logprob: -18.125009536743164
    9. '][' → logprob: -18.375009536743164
    10. ')i' → logprob: -18.750009536743164

Token 444: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5929325819015503
    2. ' and' → logprob: -0.8429325819015503
    3. 'and' → logprob: -4.09293270111084
    4. ' ]' → logprob: -9.21793270111084
    5. ')' → logprob: -10.09293270111084
    6. '[' → logprob: -11.96793270111084
    7. ' ' → logprob: -13.34293270111084
    8. '][' → logprob: -13.34293270111084
    9. '```' → logprob: -13.46793270111084
    10. '       ' → logprob: -13.46793270111084

Token 445: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02324652671813965
    2. 'and' → logprob: -3.7732465267181396
    3. ' ' → logprob: -14.273246765136719
    4. '```' → logprob: -15.648246765136719
    5. ')' → logprob: -16.27324676513672
    6. '[' → logprob: -16.64824676513672
    7. '
' → logprob: -16.89824676513672
    8. ' ' → logprob: -17.14824676513672
    9. ']' → logprob: -17.39824676513672
    10. '	and' → logprob: -17.89824676513672

Token 446: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.07889165729284286
    2. ' marked' → logprob: -2.5788917541503906
    3. 'mark' → logprob: -13.32889175415039
    4. '   ' → logprob: -15.95389175415039
    5. 'Marked' → logprob: -16.07889175415039
    6. '```' → logprob: -17.95389175415039
    7. ' ' → logprob: -18.20389175415039
    8. 'marks' → logprob: -18.32889175415039
    9. '(mark' → logprob: -18.45389175415039
    10. 'checked' → logprob: -18.82889175415039

Token 447: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.743758760625497e-05
    2. '[i' → logprob: -10.375077247619629
    3. '][' → logprob: -10.875077247619629
    4. '2' → logprob: -11.250077247619629
    5. '   ' → logprob: -12.000077247619629
    6. ' ' → logprob: -13.375077247619629
    7. '```' → logprob: -13.375077247619629
    8. ''[' → logprob: -14.000077247619629
    9. ' [' → logprob: -14.375077247619629
    10. '3' → logprob: -14.750077247619629

Token 448: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.250006675720215
    3. 'i' → logprob: -13.375006675720215
    4. '   ' → logprob: -15.875006675720215
    5. '```' → logprob: -17.1250057220459
    6. '[' → logprob: -18.1250057220459
    7. ' i' → logprob: -18.2500057220459
    8. '
' → logprob: -18.7500057220459
    9. '  ' → logprob: -18.8750057220459
    10. '۲' → logprob: -19.1250057220459

Token 449: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00044103997061029077
    2. '[i' → logprob: -7.875441074371338
    3. ' ][' → logprob: -10.37544059753418
    4. '[' → logprob: -10.87544059753418
    5. ']' → logprob: -12.12544059753418
    6. '}[' → logprob: -13.62544059753418
    7. '   ' → logprob: -13.75044059753418
    8. ' [' → logprob: -14.62544059753418
    9. '```' → logprob: -14.62544059753418
    10. '"][' → logprob: -14.87544059753418

Token 450: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.676981345459353e-06
    2. ' i' → logprob: -12.125005722045898
    3. '[i' → logprob: -15.750005722045898
    4. '][' → logprob: -18.0000057220459
    5. '   ' → logprob: -18.7500057220459
    6. ']' → logprob: -18.7500057220459
    7. '[' → logprob: -19.3750057220459
    8. '
' → logprob: -19.3750057220459
    9. '	i' → logprob: -19.7500057220459
    10. '```' → logprob: -19.8750057220459

Token 451: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.013761592097580433
    2. ']:
' → logprob: -4.388761520385742
    3. ']' → logprob: -6.888761520385742
    4. ':' → logprob: -8.888761520385742
    5. ' ]' → logprob: -10.138761520385742
    6. ']==' → logprob: -11.013761520385742
    7. '):' → logprob: -11.513761520385742
    8. ']:
' → logprob: -11.638761520385742
    9. ']:

' → logprob: -12.263761520385742
    10. '       ' → logprob: -12.638761520385742

Token 452: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7062004208564758
    2. '           ' → logprob: -1.081200361251831
    3. '       ' → logprob: -2.331200361251831
    4. ':
' → logprob: -2.831200361251831
    5. ' or' → logprob: -4.70620059967041
    6. ':return' → logprob: -7.08120059967041
    7. '   ' → logprob: -8.08120059967041
    8. '               ' → logprob: -8.58120059967041
    9. ' :' → logprob: -8.95620059967041
    10. ' and' → logprob: -9.33120059967041

Token 453: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38302353024482727
    2. ' return' → logprob: -1.7580235004425049
    3. 'return' (adapté à ' return') → logprob: -2.008023500442505
    4. '           ' → logprob: -4.633023738861084
    5. '               ' → logprob: -6.508023738861084
    6. '
' → logprob: -8.758023262023926
    7. '   ' → logprob: -9.133023262023926
    8. '	return' → logprob: -9.758023262023926
    9. ':return' → logprob: -12.383023262023926
    10. '	       ' → logprob: -12.633023262023926

Token 454: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006715370807796717
    2. ' True' → logprob: -5.006715297698975
    3. '(True' → logprob: -20.256715774536133
    4. '=True' → logprob: -22.256715774536133
    5. 'False' → logprob: -22.881715774536133
    6. 'true' → logprob: -23.006715774536133
    7. 'Tr' → logprob: -23.881715774536133
    8. ' ' → logprob: -24.506715774536133
    9. '   ' → logprob: -24.756715774536133
    10. ' ' → logprob: -24.756715774536133

Token 455: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009375771507620811
    2. '
' → logprob: -4.75937557220459
    3. '   ' → logprob: -7.50937557220459
    4. '        
' → logprob: -9.13437557220459
    5. '<|end|>' → logprob: -10.75937557220459
    6. '    
' → logprob: -11.00937557220459
    7. '' → logprob: -11.75937557220459
    8. ' ' → logprob: -12.00937557220459
    9. '  
' → logprob: -12.00937557220459
    10. ')' → logprob: -12.00937557220459

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010652327910065651
    2. '   ' → logprob: -9.500106811523438
    3. '	' → logprob: -11.125106811523438
    4. '
' → logprob: -12.125106811523438
    5. '        
' → logprob: -12.750106811523438
    6. '           ' → logprob: -13.375106811523438
    7. ',' → logprob: -13.500106811523438
    8. ')' → logprob: -13.875106811523438
    9. '      ' → logprob: -14.375106811523438
    10. ' ' → logprob: -14.625106811523438

Token 457: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008428996428847313
    2. '   ' → logprob: -4.883429050445557
    3. ' ' → logprob: -8.133428573608398
    4. '	' → logprob: -8.633428573608398
    5. '     ' → logprob: -9.133428573608398
    6. '      ' → logprob: -9.383428573608398
    7. '    ' → logprob: -9.883428573608398
    8. '        
' → logprob: -10.383428573608398
    9. '
' → logprob: -10.883428573608398
    10. '  ' → logprob: -11.008428573608398

Token 458: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1985950618982315
    2. ' if' → logprob: -1.9485950469970703
    3. '       ' → logprob: -3.3235950469970703
    4. '   ' → logprob: -6.44859504699707
    5. ' ' → logprob: -11.19859504699707
    6. '#' → logprob: -11.94859504699707
    7. 'elif' → logprob: -12.32359504699707
    8. '     ' → logprob: -12.44859504699707
    9. '    ' → logprob: -12.94859504699707
    10. '
' → logprob: -13.44859504699707

Token 459: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -9.400689305039123e-05
    2. 'if' → logprob: -9.875094413757324
    3. 'ifies' → logprob: -11.250094413757324
    4. '       ' → logprob: -11.500094413757324
    5. 'ifié' → logprob: -12.000094413757324
    6. '   ' → logprob: -12.125094413757324
    7. 'ifiez' → logprob: -12.625094413757324
    8. 'ife' → logprob: -13.000094413757324
    9. 'f' → logprob: -14.500094413757324
    10. 'ifes' → logprob: -15.000094413757324

Token 460: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7718358039855957
    2. ' marked' → logprob: -0.8968358039855957
    3. '   ' → logprob: -2.6468358039855957
    4. 'marked' → logprob: -3.0218358039855957
    5. '       ' → logprob: -5.896835803985596
    6. '    ' → logprob: -6.271835803985596
    7. ' les' → logprob: -6.271835803985596
    8. ' ' → logprob: -6.646835803985596
    9. ' the' → logprob: -7.771835803985596
    10. 'la' → logprob: -7.771835803985596

Token 461: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020827390253543854
    2. ' i' → logprob: -3.895827293395996
    3. 'ligne' → logprob: -8.770827293395996
    4. '[i' → logprob: -9.270827293395996
    5. '   ' → logprob: -11.145827293395996
    6. ' ' → logprob: -11.645827293395996
    7. '	i' → logprob: -12.770827293395996
    8. '  ' → logprob: -13.020827293395996
    9. ' ligne' → logprob: -13.645827293395996
    10. 'l' → logprob: -13.645827293395996

Token 462: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.36319512128829956
    2. '-' → logprob: -1.4881951808929443
    3. '[' → logprob: -2.6131951808929443
    4. '-[' → logprob: -6.488194942474365
    5. '[-' → logprob: -6.613194942474365
    6. '   ' → logprob: -6.738194942474365
    7. '][-' → logprob: -7.238194942474365
    8. '>[' → logprob: -9.363195419311523
    9. '-th' → logprob: -9.488195419311523
    10. '[i' → logprob: -9.738195419311523

Token 463: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.13508617877960205
    2. 'ième' → logprob: -2.3850860595703125
    3. '[' → logprob: -3.7600860595703125
    4. '-' → logprob: -5.6350860595703125
    5. '[i' → logprob: -7.2600860595703125
    6. 'i' → logprob: -7.2600860595703125
    7. 'èm' → logprob: -7.3850860595703125
    8. '```' → logprob: -7.3850860595703125
    9. 'th' → logprob: -7.5100860595703125
    10. 'è' → logprob: -7.7600860595703125

Token 464: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.004554254002869129
    2. ' ligne' → logprob: -5.504554271697998
    3. 'row' → logprob: -8.25455379486084
    4. 'line' → logprob: -8.62955379486084
    5. 'l' → logprob: -11.37955379486084
    6. ' line' → logprob: -11.62955379486084
    7. '[' → logprob: -12.00455379486084
    8. 'range' → logprob: -12.37955379486084
    9. ' row' → logprob: -12.50455379486084
    10. '   ' → logprob: -14.87955379486084

Token 465: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008688253001309931
    2. ' if' → logprob: -7.625868797302246
    3. '   ' → logprob: -8.000868797302246
    4. 'if' → logprob: -10.250868797302246
    5. ' and' → logprob: -12.625868797302246
    6. '           ' → logprob: -14.000868797302246
    7. '      ' → logprob: -14.125868797302246
    8. ',' → logprob: -14.250868797302246
    9. '
' → logprob: -14.250868797302246
    10. '        
' → logprob: -14.625868797302246

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000643095700070262
    2. '   ' → logprob: -7.375643253326416
    3. 'if' → logprob: -11.875642776489258
    4. ' if' → logprob: -12.250642776489258
    5. '      ' → logprob: -13.625642776489258
    6. '           ' → logprob: -14.000642776489258
    7. '     ' → logprob: -14.875642776489258
    8. ' ' → logprob: -15.125642776489258
    9. '        
' → logprob: -15.375642776489258
    10. '<|end|>' → logprob: -15.375642776489258

Token 467: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.34932413697242737
    2. ' if' → logprob: -1.349324107170105
    3. '       ' → logprob: -3.3493242263793945
    4. '   ' → logprob: -8.099324226379395
    5. ' ' → logprob: -12.224324226379395
    6. '	if' → logprob: -13.849324226379395
    7. 'elif' → logprob: -14.474324226379395
    8. '     ' → logprob: -14.599324226379395
    9. '    ' → logprob: -15.099324226379395
    10. '  ' → logprob: -15.224324226379395

Token 468: ' marked' (ID: 20779)
  Prédit: ' marked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.2016516923904419
    2. 'marked' → logprob: -1.701651692390442
    3. ' all' → logprob: -8.451651573181152
    4. 'all' → logprob: -10.826651573181152
    5. '   ' → logprob: -13.201651573181152
    6. 'mark' → logprob: -13.951651573181152
    7. '(mark' → logprob: -13.951651573181152
    8. ' ' → logprob: -14.451651573181152
    9. ' ' → logprob: -15.576651573181152
    10. ' mark' → logprob: -15.951651573181152

Token 469: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -11.875007629394531
    3. ' [' → logprob: -15.750007629394531
    4. '   ' → logprob: -16.25000762939453
    5. 'i' → logprob: -17.25000762939453
    6. '[
' → logprob: -17.87500762939453
    7. '[I' → logprob: -18.12500762939453
    8. '][' → logprob: -18.62500762939453
    9. '       ' → logprob: -19.25000762939453
    10. ' ' → logprob: -19.37500762939453

Token 470: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0036499607376754284
    2. ']' → logprob: -5.628650188446045
    3. '[' → logprob: -10.253649711608887
    4. ' ][' → logprob: -11.503649711608887
    5. ']==' → logprob: -13.753649711608887
    6. '][:' → logprob: -14.003649711608887
    7. ']
' → logprob: -14.378649711608887
    8. ']][' → logprob: -14.378649711608887
    9. '   ' → logprob: -14.878649711608887
    10. '][]' → logprob: -15.003649711608887

Token 471: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.37500286102295
    3. '][' → logprob: -14.25000286102295
    4. '
' → logprob: -15.75000286102295
    5. ']' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.250001907348633
    7. '[' → logprob: -17.500001907348633
    8. '  ' → logprob: -18.125001907348633
    9. '1' → logprob: -18.437501907348633
    10. '    ' → logprob: -18.562501907348633

Token 472: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.4855663721391466e-05
    2. ' ]' → logprob: -11.750015258789062
    3. '][' → logprob: -12.500015258789062
    4. 'and' → logprob: -13.500015258789062
    5. ']
' → logprob: -13.750015258789062
    6. '   ' → logprob: -15.250015258789062
    7. ' and' → logprob: -15.375015258789062
    8. '[' → logprob: -16.625015258789062
    9. ')' → logprob: -17.000015258789062
    10. '[i' → logprob: -17.625015258789062

Token 473: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11042431741952896
    2. 'and' → logprob: -2.360424280166626
    3. ']' → logprob: -4.610424518585205
    4. ')' → logprob: -8.610424041748047
    5. ' ]' → logprob: -10.985424041748047
    6. '][' → logprob: -12.235424041748047
    7. '[' → logprob: -12.360424041748047
    8. ' ' → logprob: -12.485424041748047
    9. '```' → logprob: -13.360424041748047
    10. '   ' → logprob: -14.110424041748047

Token 474: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.47407862544059753
    2. ' marked' → logprob: -0.9740786552429199
    3. 'mark' → logprob: -14.474078178405762
    4. 'Marked' → logprob: -14.474078178405762
    5. ' ' → logprob: -15.724078178405762
    6. '   ' → logprob: -15.849078178405762
    7. '```' → logprob: -16.474079132080078
    8. ' ' → logprob: -16.724079132080078
    9. '(mark' → logprob: -16.974079132080078
    10. ' marcado' → logprob: -17.099079132080078

Token 475: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008933556382544339
    2. '[' → logprob: -7.500893592834473
    3. '][' → logprob: -8.000893592834473
    4. 'i' → logprob: -13.375893592834473
    5. '   ' → logprob: -13.375893592834473
    6. ' [' → logprob: -14.125893592834473
    7. '[I' → logprob: -14.500893592834473
    8. '}[' → logprob: -16.250892639160156
    9. '>[' → logprob: -16.375892639160156
    10. ' ][' → logprob: -16.500892639160156

Token 476: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003843173326458782
    2. '[' → logprob: -7.875384330749512
    3. ']' → logprob: -13.250384330749512
    4. ' ][' → logprob: -13.375384330749512
    5. '   ' → logprob: -14.250384330749512
    6. '1' → logprob: -16.250383377075195
    7. '[i' → logprob: -17.000383377075195
    8. '       ' → logprob: -17.000383377075195
    9. '>[' → logprob: -18.375383377075195
    10. ']][' → logprob: -18.750383377075195

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.500000953674316
    3. '
' → logprob: -15.125000953674316
    4. '0' → logprob: -17.25
    5. '   ' → logprob: -17.625
    6. '```' → logprob: -20.25
    7. '  ' → logprob: -20.375
    8. '

' → logprob: -21.375
    9. '۱' → logprob: -22.0625
    10. '    
' → logprob: -22.0625

Token 478: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007377792615443468
    2. '][' → logprob: -5.632377624511719
    3. 'and' → logprob: -5.882377624511719
    4. ' and' → logprob: -7.007377624511719
    5. ' ]' → logprob: -10.382377624511719
    6. '[i' → logprob: -10.632377624511719
    7. '[' → logprob: -11.632377624511719
    8. '   ' → logprob: -12.382377624511719
    9. '       ' → logprob: -12.882377624511719
    10. 'i' → logprob: -13.382377624511719

Token 479: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5766863822937012
    2. ' and' → logprob: -0.8266863822937012
    3. '[' → logprob: -7.326686382293701
    4. ']' → logprob: -9.70168685913086
    5. '```' → logprob: -11.70168685913086
    6. '][' → logprob: -11.82668685913086
    7. '[i' → logprob: -12.07668685913086
    8. ' ' → logprob: -13.70168685913086
    9. ' [' → logprob: -14.07668685913086
    10. '[]' → logprob: -14.07668685913086

Token 480: ' marked' (ID: 20779)
  Prédit: ' marked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.3132619559764862
    2. 'marked' → logprob: -1.3132619857788086
    3. 'mark' → logprob: -16.063261032104492
    4. 'Marked' → logprob: -16.313261032104492
    5. ' marcado' → logprob: -17.188261032104492
    6. '   ' → logprob: -17.938261032104492
    7. ' ' → logprob: -17.938261032104492
    8. '(mark' → logprob: -18.188261032104492
    9. '_mark' → logprob: -18.438261032104492
    10. ' marcada' → logprob: -18.438261032104492

Token 481: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04922318458557129
    2. '[' → logprob: -3.0492231845855713
    3. '2' → logprob: -7.424222946166992
    4. 'i' → logprob: -10.299222946166992
    5. ' ' → logprob: -13.049222946166992
    6. '   ' → logprob: -13.299222946166992
    7. '][' → logprob: -14.549222946166992
    8. ' [' → logprob: -14.799222946166992
    9. '  ' → logprob: -15.549222946166992
    10. ' i' → logprob: -15.799222946166992

Token 482: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01425364799797535
    2. '[' → logprob: -4.264253616333008
    3. '2' → logprob: -9.639253616333008
    4. ']' → logprob: -11.014253616333008
    5. ' ][' → logprob: -12.764253616333008
    6. '   ' → logprob: -13.389253616333008
    7. '[i' → logprob: -13.764253616333008
    8. ' ' → logprob: -14.389253616333008
    9. 'i' → logprob: -14.514253616333008
    10. '}[' → logprob: -14.639253616333008

Token 483: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. 'i' → logprob: -16.375001907348633
    4. '```' → logprob: -16.500001907348633
    5. '
' → logprob: -17.375001907348633
    6. '۲' → logprob: -17.500001907348633
    7. '[' → logprob: -18.625001907348633
    8. '0' → logprob: -18.750001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '２' → logprob: -19.125001907348633

Token 484: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.14486095309257507
    2. ']:
' → logprob: -2.0198609828948975
    3. ']' → logprob: -6.519860744476318
    4. ':' → logprob: -7.644860744476318
    5. ']:
' → logprob: -9.269861221313477
    6. '       ' → logprob: -10.394861221313477
    7. '):' → logprob: -10.519861221313477
    8. ' ]' → logprob: -10.769861221313477
    9. '   ' → logprob: -11.269861221313477
    10. ':
' → logprob: -11.644861221313477

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002257548738270998
    2. ':
' → logprob: -6.377257347106934
    3. ':' → logprob: -8.002257347106934
    4. ' return' → logprob: -9.377257347106934
    5. ':return' → logprob: -9.877257347106934
    6. 'return' → logprob: -10.627257347106934
    7. '               ' → logprob: -10.752257347106934
    8. '
' → logprob: -11.252257347106934
    9. '		' → logprob: -11.502257347106934
    10. '       ' → logprob: -12.627257347106934

Token 486: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3138023316860199
    2. 'return' (adapté à ' return') → logprob: -1.3138023614883423
    3. '           ' → logprob: -8.188802719116211
    4. '               ' → logprob: -8.313802719116211
    5. '       ' → logprob: -12.313802719116211
    6. '   ' → logprob: -12.438802719116211
    7. ' ' → logprob: -12.813802719116211
    8. '	return' → logprob: -12.813802719116211
    9. '
' → logprob: -13.563802719116211
    10. ':return' → logprob: -13.938802719116211

Token 487: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.02324547804892063
    2. ' True' → logprob: -3.7732455730438232
    3. '(True' → logprob: -19.648244857788086
    4. 'False' → logprob: -20.898244857788086
    5. '=True' → logprob: -20.898244857788086
    6. ' ' → logprob: -21.898244857788086
    7. 'Tr' → logprob: -23.898244857788086
    8. '_true' → logprob: -24.273244857788086
    9. 'true' → logprob: -24.523244857788086
    10. ' ' → logprob: -24.523244857788086

Token 488: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22890722751617432
    2. '   ' → logprob: -1.6039072275161743
    3. '    
' → logprob: -6.228907108306885
    4. '\n' → logprob: -7.603907108306885
    5. '<|end|>' → logprob: -7.978907108306885
    6. '  
' → logprob: -8.728907585144043
    7. '

' → logprob: -8.853907585144043
    8. 'newline' → logprob: -9.603907585144043
    9. '
    
' → logprob: -10.103907585144043
    10. '' → logprob: -10.103907585144043

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005409015342593193
    2. '
' → logprob: -5.505409240722656
    3. '    
' → logprob: -6.630409240722656
    4. '        
' → logprob: -12.755409240722656
    5. '    
    
' → logprob: -13.255409240722656
    6. '  
' → logprob: -13.380409240722656
    7. '\
' → logprob: -14.255409240722656
    8. '       ' → logprob: -14.505409240722656
    9. '

' → logprob: -14.630409240722656
    10. '   
' → logprob: -14.880409240722656

Token 490: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5772194266319275
    2. '#' (adapté à ' #') → logprob: -0.8272194266319275
    3. 'if' → logprob: -6.827219486236572
    4. '
' → logprob: -8.702219009399414
    5. ' #' → logprob: -11.702219009399414
    6. '    
' → logprob: -11.827219009399414
    7. 'di' → logprob: -12.202219009399414
    8. 'for' → logprob: -12.327219009399414
    9. '```' → logprob: -13.452219009399414
    10. '  ' → logprob: -14.202219009399414

Token 491: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.005207432433962822
    2. '   ' → logprob: -5.505207538604736
    3. 'if' → logprob: -6.880207538604736
    4. ' #' → logprob: -9.755207061767578
    5. 'for' → logprob: -11.130207061767578
    6. 'V' → logprob: -11.630207061767578
    7. 'di' → logprob: -11.880207061767578
    8. '
' → logprob: -12.630207061767578
    9. 'Diagonal' → logprob: -12.880207061767578
    10. ' if' → logprob: -13.130207061767578

Token 492: 'ifie' (ID: 46409)
  Prédit: 'ification'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.03703705221414566
    2. 'if' → logprob: -4.037036895751953
    3. 'ifie' → logprob: -4.537036895751953
    4. '   ' → logprob: -5.162036895751953
    5. '#' → logprob: -6.412036895751953
    6. 'f' → logprob: -7.787036895751953
    7. 'ifiez' → logprob: -9.787036895751953
    8. 'ifié' → logprob: -10.287036895751953
    9. 'ication' → logprob: -10.412036895751953
    10. '```' → logprob: -10.412036895751953

Token 493: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1308363378047943
    2. ' les' → logprob: -3.130836248397827
    3. ' marked' → logprob: -3.130836248397827
    4. '   ' → logprob: -3.755836248397827
    5. 'la' → logprob: -5.505836486816406
    6. 'marked' → logprob: -5.880836486816406
    7. 'les' → logprob: -6.005836486816406
    8. ' the' → logprob: -7.255836486816406
    9. ' if' → logprob: -8.005836486816406
    10. '[' → logprob: -8.130836486816406

Token 494: ' diagon' (ID: 146014)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.0026842064689844847
    2. '0' → logprob: -6.502684116363525
    3. ' marked' → logprob: -7.127684116363525
    4. 'di' → logprob: -8.752684593200684
    5. '[' → logprob: -9.252684593200684
    6. 'main' → logprob: -9.627684593200684
    7. 'mar' → logprob: -10.877684593200684
    8. ' ' → logprob: -11.502684593200684
    9. '   ' → logprob: -11.502684593200684
    10. 'major' → logprob: -12.252684593200684

Token 495: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.001409282092936337
    2. 'al' → logprob: -6.62640905380249
    3. '[' → logprob: -10.126409530639648
    4. 'ales' → logprob: -10.751409530639648
    5. 'a' → logprob: -11.626409530639648
    6. 'але' → logprob: -13.376409530639648
    7. 'als' → logprob: -13.376409530639648
    8. '[
' → logprob: -13.501409530639648
    9. '```' → logprob: -13.751409530639648
    10. '#' → logprob: -13.876409530639648

Token 496: ' principale' (ID: 68926)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007054218556731939
    2. '   ' → logprob: -5.632054328918457
    3. '0' → logprob: -6.257054328918457
    4. ' principale' → logprob: -7.632054328918457
    5. ' [' → logprob: -7.632054328918457
    6. '[
' → logprob: -8.132054328918457
    7. ' ' → logprob: -9.382054328918457
    8. '1' → logprob: -10.007054328918457
    9. 'principal' → logprob: -10.382054328918457
    10. '(' → logprob: -10.757054328918457

Token 497: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010616567305987701
    2. ' if' → logprob: -9.875105857849121
    3. 'if' → logprob: -9.875105857849121
    4. ' for' → logprob: -13.875105857849121
    5. 'for' → logprob: -14.000105857849121
    6. '  ' → logprob: -14.875105857849121
    7. '    
' → logprob: -15.500105857849121
    8. ' and' → logprob: -16.125106811523438
    9. '   ' → logprob: -16.250106811523438
    10. ' (' → logprob: -16.375106811523438

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036409306339919567
    2. 'if' → logprob: -6.253641128540039
    3. ' if' → logprob: -6.378641128540039
    4. '[' → logprob: -12.253641128540039
    5. ' and' → logprob: -12.503641128540039
    6. '(' → logprob: -13.753641128540039
    7. 'and' → logprob: -14.128641128540039
    8. '
' → logprob: -14.378641128540039
    9. ' (' → logprob: -14.378641128540039
    10. 'for' → logprob: -14.878641128540039

Token 499: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019325295463204384
    2. 'if' (adapté à ' if') → logprob: -4.269325256347656
    3. ' if' → logprob: -5.269325256347656
    4. 'for' → logprob: -14.644325256347656
    5. '   ' → logprob: -15.394325256347656
    6. '	if' → logprob: -15.894325256347656
    7. '```' → logprob: -16.019325256347656
    8. ' for' → logprob: -16.019325256347656
    9. '    
' → logprob: -16.144325256347656
    10. '       ' → logprob: -16.144325256347656

Token 500: ' marked' (ID: 20779)
  Prédit: ' marked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.02630506083369255
    2. 'marked' → logprob: -3.6513049602508545
    3. '   ' → logprob: -12.776305198669434
    4. '(mark' → logprob: -14.526305198669434
    5. ' marcado' → logprob: -15.401305198669434
    6. 'Marked' → logprob: -15.526305198669434
    7. ' mark' → logprob: -15.776305198669434
    8. 'mark' → logprob: -15.901305198669434
    9. ' (' → logprob: -15.901305198669434
    10. ' marcada' → logprob: -16.026304244995117

Token 501: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001502598519437015
    2. '0' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.251502990722656
    4. ' [' → logprob: -16.751502990722656
    5. '   ' → logprob: -17.001502990722656
    6. '[
' → logprob: -17.251502990722656
    7. '00' → logprob: -19.001502990722656
    8. '```' → logprob: -19.626502990722656
    9. '
' → logprob: -20.376502990722656
    10. '\[' → logprob: -20.501502990722656

Token 502: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '[' → logprob: -15.375000953674316
    4. '00' → logprob: -18.125
    5. '   ' → logprob: -18.625
    6. '۰' → logprob: -18.75
    7. '
' → logprob: -19.125
    8. '```' → logprob: -19.125
    9. '０' → logprob: -19.375
    10. '2' → logprob: -20.75

Token 503: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00020926215802319348
    2. '[' → logprob: -8.500208854675293
    3. ' ][' → logprob: -12.375208854675293
    4. ']' → logprob: -14.000208854675293
    5. '0' → logprob: -14.625208854675293
    6. ']][' → logprob: -16.37520980834961
    7. '   ' → logprob: -16.50020980834961
    8. '"][' → logprob: -17.62520980834961
    9. ''][' → logprob: -17.75020980834961
    10. ')][' → logprob: -17.87520980834961

Token 504: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '
' → logprob: -17.625
    4. '1' → logprob: -18.0
    5. '```' → logprob: -18.625
    6. '۰' → logprob: -19.0
    7. ']' → logprob: -19.1875
    8. '2' → logprob: -19.25
    9. '[' → logprob: -19.5625
    10. '   ' → logprob: -19.6875

Token 505: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001680059707723558
    2. ' and' → logprob: -7.12667989730835
    3. 'and' → logprob: -7.75167989730835
    4. ' ]' → logprob: -7.75167989730835
    5. '   ' → logprob: -11.751680374145508
    6. ')' → logprob: -12.251680374145508
    7. ']
' → logprob: -13.751680374145508
    8. ' ' → logprob: -14.876680374145508
    9. '    ' → logprob: -15.001680374145508
    10. '[' → logprob: -15.626680374145508

Token 506: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0788901224732399
    2. 'and' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.328889846801758
    4. ')' → logprob: -16.078889846801758
    5. '   ' → logprob: -16.828889846801758
    6. '```' → logprob: -17.203889846801758
    7. ' et' → logprob: -17.328889846801758
    8. 'et' → logprob: -17.953889846801758
    9. '
' → logprob: -18.078889846801758
    10. ' и' → logprob: -18.328889846801758

Token 507: ' marked' (ID: 20779)
  Prédit: ' marked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.575946569442749
    2. 'marked' → logprob: -0.825946569442749
    3. 'mark' → logprob: -12.575946807861328
    4. 'Marked' → logprob: -13.200946807861328
    5. '   ' → logprob: -14.450946807861328
    6. ' mark' → logprob: -15.700946807861328
    7. '[' → logprob: -15.700946807861328
    8. ' ' → logprob: -15.950946807861328
    9. ' marks' → logprob: -15.950946807861328
    10. ' ' → logprob: -16.200946807861328

Token 508: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006720229052007198
    2. '][' → logprob: -5.006720066070557
    3. '}[' → logprob: -13.256720542907715
    4. '```' → logprob: -13.881720542907715
    5. ' [' → logprob: -14.256720542907715
    6. '>[' → logprob: -14.631720542907715
    7. '   ' → logprob: -15.256720542907715
    8. ']' → logprob: -15.381720542907715
    9. ' ][' → logprob: -16.1317195892334
    10. '1' → logprob: -16.1317195892334

Token 509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '
' → logprob: -16.625
    4. '[' → logprob: -18.125
    5. '   ' → logprob: -18.5
    6. '```' → logprob: -18.5
    7. '{' → logprob: -19.625
    8. '۱' → logprob: -19.75
    9. '

' → logprob: -20.5
    10. '``' → logprob: -20.5

Token 510: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008059371029958129
    2. '[' → logprob: -7.125805854797363
    3. ']' → logprob: -14.875805854797363
    4. '}[' → logprob: -15.375805854797363
    5. '>[' → logprob: -15.375805854797363
    6. ' ][' → logprob: -15.500805854797363
    7. '```' → logprob: -15.750805854797363
    8. '"][' → logprob: -16.25080680847168
    9. ''][' → logprob: -16.62580680847168
    10. '1' → logprob: -17.37580680847168

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -17.625
    4. '
' → logprob: -18.25
    5. '۱' → logprob: -18.75
    6. '   ' → logprob: -19.25
    7. '১' → logprob: -19.875
    8. '१' → logprob: -20.3125
    9. '0' → logprob: -20.375
    10. '[' → logprob: -21.0

Token 512: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.038146715611219406
    2. ']' → logprob: -3.538146734237671
    3. 'and' → logprob: -4.788146495819092
    4. ')' → logprob: -10.91314697265625
    5. ' ]' → logprob: -12.41314697265625
    6. '```' → logprob: -12.53814697265625
    7. '   ' → logprob: -12.91314697265625
    8. '[' → logprob: -13.66314697265625
    9. ' ' → logprob: -14.03814697265625
    10. 'et' → logprob: -14.41314697265625

Token 513: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014163747429847717
    2. 'and' → logprob: -4.264163970947266
    3. ' et' → logprob: -16.264163970947266
    4. ' ' → logprob: -16.764163970947266
    5. 'et' → logprob: -16.764163970947266
    6. '```' → logprob: -17.389163970947266
    7. ' ' → logprob: -18.514163970947266
    8. '	and' → logprob: -19.389163970947266
    9. '   ' → logprob: -19.514163970947266
    10. ' и' → logprob: -19.639163970947266

Token 514: ' marked' (ID: 20779)
  Prédit: ' marked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.3868732452392578
    2. 'marked' → logprob: -1.1368732452392578
    3. 'Marked' → logprob: -14.261873245239258
    4. 'mark' → logprob: -14.386873245239258
    5. '```' → logprob: -14.886873245239258
    6. '   ' → logprob: -15.136873245239258
    7. '(mark' → logprob: -16.011873245239258
    8. '[' → logprob: -16.261873245239258
    9. ' mark' → logprob: -16.636873245239258
    10. '_mark' → logprob: -16.886873245239258

Token 515: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '2' → logprob: -14.125000953674316
    3. ' [' → logprob: -16.125001907348633
    4. '[
' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '][' → logprob: -17.000001907348633
    7. ' ' → logprob: -17.125001907348633
    8. '```' → logprob: -17.125001907348633
    9. '[[' → logprob: -18.500001907348633
    10. '``' → logprob: -19.375001907348633

Token 516: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '[' → logprob: -16.375001907348633
    4. '```' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '۲' → logprob: -18.500001907348633
    7. 'marked' → logprob: -18.875001907348633
    8. '
' → logprob: -19.000001907348633
    9. '  ' → logprob: -19.625001907348633
    10. '``' → logprob: -19.875001907348633

Token 517: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.026312140747904778
    2. '[' → logprob: -3.6513121128082275
    3. '2' → logprob: -12.776311874389648
    4. '```' → logprob: -12.901311874389648
    5. ']' → logprob: -13.276311874389648
    6. ' ][' → logprob: -13.776311874389648
    7. '"][' → logprob: -14.276311874389648
    8. ''][' → logprob: -14.276311874389648
    9. '}[' → logprob: -14.276311874389648
    10. '   ' → logprob: -14.401311874389648

Token 518: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '```' → logprob: -15.375001907348633
    4. '۲' → logprob: -16.875001907348633
    5. '
' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '[' → logprob: -18.000001907348633
    8. '২' → logprob: -18.937501907348633
    9. '0' → logprob: -19.062501907348633
    10. '２' → logprob: -19.125001907348633

Token 519: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5383342504501343
    2. ']:' → logprob: -1.1633342504501343
    3. '):' → logprob: -3.038334369659424
    4. ']:
' → logprob: -3.288334369659424
    5. '):
' → logprob: -4.913334369659424
    6. ':
' → logprob: -5.038334369659424
    7. ']' → logprob: -5.663334369659424
    8. '   ' → logprob: -8.038333892822266
    9. ' and' → logprob: -8.038333892822266
    10. ')' → logprob: -8.288333892822266

Token 520: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5309830904006958
    2. '       ' → logprob: -0.9059830904006958
    3. ':' → logprob: -5.405982971191406
    4. ':
' → logprob: -5.780982971191406
    5. ':return' → logprob: -9.030982971191406
    6. ' return' → logprob: -10.030982971191406
    7. '	' → logprob: -10.655982971191406
    8. '    ' → logprob: -11.280982971191406
    9. ' :
' → logprob: -11.780982971191406
    10. '	return' → logprob: -12.030982971191406

Token 521: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35511696338653564
    2. ' return' → logprob: -1.6051169633865356
    3. 'return' (adapté à ' return') → logprob: -2.605116844177246
    4. '       ' → logprob: -3.730116844177246
    5. '	return' → logprob: -9.230116844177246
    6. '
' → logprob: -10.605116844177246
    7. ':return' → logprob: -10.980116844177246
    8. '    ' → logprob: -12.355116844177246
    9. '           ' → logprob: -12.605116844177246
    10. ' ' → logprob: -13.105116844177246

Token 522: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0485873706638813
    2. ' True' → logprob: -3.0485873222351074
    3. '=True' → logprob: -19.548587799072266
    4. '(True' → logprob: -19.798587799072266
    5. ' ' → logprob: -20.673587799072266
    6. '_true' → logprob: -22.048587799072266
    7. 'Tr' → logprob: -22.423587799072266
    8. 'true' → logprob: -22.673587799072266
    9. '.True' → logprob: -23.173587799072266
    10. 'False' → logprob: -23.798587799072266

Token 523: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0562136285007
    2. '
' → logprob: -3.056213617324829
    3. '    
' → logprob: -4.931213855743408
    4. '  
' → logprob: -8.55621337890625
    5. ' 
' → logprob: -9.30621337890625
    6. '   
' → logprob: -9.43121337890625
    7. '  ' → logprob: -12.93121337890625
    8. '\' → logprob: -12.93121337890625
    9. '\
' → logprob: -12.93121337890625
    10. '\n' → logprob: -13.30621337890625

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013383356854319572
    2. '
' → logprob: -6.751338481903076
    3. '    
' → logprob: -8.876338005065918
    4. ' 
' → logprob: -11.751338005065918
    5. 'if' → logprob: -11.876338005065918
    6. '  
' → logprob: -12.876338005065918
    7. '```' → logprob: -13.001338005065918
    8. '\
' → logprob: -13.126338005065918
    9. ' if' → logprob: -13.626338005065918
    10. '  ' → logprob: -13.751338005065918

Token 525: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026314230635762215
    2. '#' (adapté à ' #') → logprob: -6.502631187438965
    3. 'if' → logprob: -6.877631187438965
    4. '
' → logprob: -9.502631187438965
    5. '    
' → logprob: -11.377631187438965
    6. ' if' → logprob: -12.002631187438965
    7. '  ' → logprob: -13.377631187438965
    8. ' ' → logprob: -13.502631187438965
    9. ' #' → logprob: -14.377631187438965
    10. '```' → logprob: -14.502631187438965

Token 526: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013242349959909916
    2. '#' → logprob: -4.513242244720459
    3. '   ' → logprob: -6.513242244720459
    4. ' if' → logprob: -7.263242244720459
    5. ' #' → logprob: -12.013242721557617
    6. 'elif' → logprob: -14.638242721557617
    7. ' ' → logprob: -14.763242721557617
    8. '
' → logprob: -15.388242721557617
    9. 'return' → logprob: -15.513242721557617
    10. '  ' → logprob: -16.013242721557617

Token 527: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0002762326330412179
    2. 'if' → logprob: -8.625276565551758
    3. 'ifiez' → logprob: -9.750276565551758
    4. 'f' → logprob: -11.125276565551758
    5. 'ifié' → logprob: -11.375276565551758
    6. 'ife' → logprob: -12.625276565551758
    7. 'fi' → logprob: -13.125276565551758
    8. '#' → logprob: -13.375276565551758
    9. 'ifi' → logprob: -13.625276565551758
    10. 'ifies' → logprob: -13.875276565551758

Token 528: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.03539954125881195
    2. ' marked' → logprob: -3.4103994369506836
    3. '   ' → logprob: -6.535399436950684
    4. ' the' → logprob: -8.910399436950684
    5. 'marked' → logprob: -9.160399436950684
    6. 'la' → logprob: -10.910399436950684
    7. ' les' → logprob: -10.910399436950684
    8. 'the' → logprob: -12.160399436950684
    9. '(mark' → logprob: -12.410399436950684
    10. ' if' → logprob: -12.410399436950684

Token 529: ' diagon' (ID: 146014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38820621371269226
    2. '[' → logprob: -1.1382062435150146
    3. ' ' → logprob: -7.0132060050964355
    4. '2' → logprob: -8.763206481933594
    5. 'marked' → logprob: -9.138206481933594
    6. 'di' → logprob: -9.513206481933594
    7. '[
' → logprob: -10.638206481933594
    8. '1' → logprob: -10.763206481933594
    9. ' [' → logprob: -11.138206481933594
    10. '(' → logprob: -11.763206481933594

Token 530: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.01831698603928089
    2. 'al' → logprob: -4.643317222595215
    3. '[' → logprob: -4.768317222595215
    4. '(' → logprob: -11.643317222595215
    5. '0' → logprob: -11.643317222595215
    6. '{' → logprob: -12.643317222595215
    7. '2' → logprob: -13.143317222595215
    8. ' ' → logprob: -13.268317222595215
    9. '[
' → logprob: -13.893317222595215
    10. 'alle' → logprob: -14.268317222595215

Token 531: ' secondaire' (ID: 166050)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003948072553612292
    2. '   ' → logprob: -8.750394821166992
    3. 'principal' → logprob: -8.750394821166992
    4. ' [' → logprob: -10.250394821166992
    5. '0' → logprob: -11.125394821166992
    6. ' principal' → logprob: -11.625394821166992
    7. '2' → logprob: -12.125394821166992
    8. '1' → logprob: -12.250394821166992
    9. '[
' → logprob: -12.500394821166992
    10. ' ' → logprob: -13.125394821166992

Token 532: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032286944333463907
    2. ' if' → logprob: -6.003228664398193
    3. 'if' → logprob: -7.503228664398193
    4. '
' → logprob: -9.128229141235352
    5. '[' → logprob: -9.753229141235352
    6. '(' → logprob: -11.378229141235352
    7. '  ' → logprob: -12.128229141235352
    8. ' ' → logprob: -12.378229141235352
    9. '```' → logprob: -13.128229141235352
    10. '    
' → logprob: -13.253229141235352

Token 533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2760319709777832
    2. '[' → logprob: -1.5260319709777832
    3. 'if' → logprob: -4.026031970977783
    4. ' if' → logprob: -5.151031970977783
    5. '0' → logprob: -9.401031494140625
    6. '[
' → logprob: -10.901031494140625
    7. ' and' → logprob: -11.151031494140625
    8. '(' → logprob: -11.401031494140625
    9. ' [' → logprob: -11.526031494140625
    10. '
' → logprob: -11.526031494140625

Token 534: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13452520966529846
    2. ' if' → logprob: -2.1345252990722656
    3. '   ' → logprob: -4.884525299072266
    4. '[' → logprob: -12.259525299072266
    5. '	if' → logprob: -15.009525299072266
    6. ' ' → logprob: -15.134525299072266
    7. '  ' → logprob: -16.259525299072266
    8. '```' → logprob: -17.009525299072266
    9. '
' → logprob: -17.134525299072266
    10. '0' → logprob: -17.259525299072266

Token 535: ' marked' (ID: 20779)
  Prédit: ' marked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.02975199744105339
    2. 'marked' → logprob: -3.529752016067505
    3. '   ' → logprob: -14.529751777648926
    4. 'mark' → logprob: -15.654751777648926
    5. ' ' → logprob: -15.654751777648926
    6. '[' → logprob: -15.904751777648926
    7. '(mark' → logprob: -16.154752731323242
    8. 'Marked' → logprob: -16.279752731323242
    9. ' ' → logprob: -16.404752731323242
    10. ' marks' → logprob: -16.404752731323242

Token 536: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -15.125000953674316
    3. '0' → logprob: -15.375000953674316
    4. ' [' → logprob: -15.750000953674316
    5. '[
' → logprob: -16.375
    6. ' ' → logprob: -18.25
    7. '	' → logprob: -19.625
    8. '```' → logprob: -19.75
    9. '1' → logprob: -20.125
    10. '2' → logprob: -20.125

Token 537: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.375004768371582
    3. ' ' → logprob: -15.375004768371582
    4. '2' → logprob: -15.625004768371582
    5. '۰' → logprob: -18.125003814697266
    6. '```' → logprob: -18.375003814697266
    7. '[
' → logprob: -19.500003814697266
    8. '   ' → logprob: -19.625003814697266
    9. '(' → logprob: -20.250003814697266
    10. '1' → logprob: -20.312503814697266

Token 538: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04859202727675438
    2. '[' → logprob: -3.0485920906066895
    3. ']' → logprob: -12.798591613769531
    4. ' ][' → logprob: -14.298591613769531
    5. '>[' → logprob: -15.048591613769531
    6. '2' → logprob: -15.173591613769531
    7. '}[' → logprob: -15.548591613769531
    8. '3' → logprob: -16.42359161376953
    9. '1' → logprob: -16.79859161376953
    10. '```' → logprob: -16.79859161376953

Token 539: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -18.375
    4. '
' → logprob: -18.5
    5. '２' → logprob: -20.625
    6. '۲' → logprob: -20.75
    7. '

' → logprob: -20.875
    8. '   ' → logprob: -21.125
    9. '' → logprob: -21.5
    10. '``' → logprob: -22.125

Token 540: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014673690311610699
    2. ' and' → logprob: -7.001467227935791
    3. 'and' → logprob: -7.626467227935791
    4. ' ]' → logprob: -9.62646770477295
    5. ')' → logprob: -14.25146770477295
    6. '[' → logprob: -15.12646770477295
    7. '```' → logprob: -15.12646770477295
    8. '}' → logprob: -15.62646770477295
    9. '   ' → logprob: -15.75146770477295
    10. '][' → logprob: -15.87646770477295

Token 541: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011048054322600365
    2. 'and' → logprob: -4.511047840118408
    3. ' ' → logprob: -15.886048316955566
    4. 'et' → logprob: -16.26104736328125
    5. ' et' → logprob: -17.26104736328125
    6. ' ' → logprob: -17.26104736328125
    7. '```' → logprob: -18.63604736328125
    8. ')' → logprob: -18.76104736328125
    9. ' и' → logprob: -19.01104736328125
    10. ',' → logprob: -20.13604736328125

Token 542: ' marked' (ID: 20779)
  Prédit: ' marked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.0019299437990412116
    2. 'marked' → logprob: -6.251929759979248
    3. 'Marked' → logprob: -13.751930236816406
    4. ' mark' → logprob: -15.126930236816406
    5. 'mark' → logprob: -17.126930236816406
    6. ' ' → logprob: -17.126930236816406
    7. ' marcado' → logprob: -17.376930236816406
    8. '(mark' → logprob: -17.501930236816406
    9. ' marcada' → logprob: -17.626930236816406
    10. ' marks' → logprob: -18.751930236816406

Token 543: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003812217037193477
    2. '1' → logprob: -7.875380992889404
    3. ' [' → logprob: -14.250381469726562
    4. '[
' → logprob: -15.500381469726562
    5. '][' → logprob: -15.750381469726562
    6. '{' → logprob: -16.875381469726562
    7. '   ' → logprob: -17.375381469726562
    8. '
' → logprob: -17.750381469726562
    9. '```' → logprob: -17.875381469726562
    10. ' ' → logprob: -18.500381469726562

Token 544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '[' → logprob: -16.875
    3. ' ' → logprob: -17.125
    4. '```' → logprob: -17.625
    5. '۱' → logprob: -19.125
    6. '2' → logprob: -19.25
    7. '
' → logprob: -19.5
    8. '   ' → logprob: -20.25
    9. '<|end|>' → logprob: -20.25
    10. '0' → logprob: -20.375

Token 545: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2525050640106201
    2. '][' → logprob: -1.5025050640106201
    3. '1' → logprob: -7.752505302429199
    4. '}[' → logprob: -9.1275053024292
    5. '>[' → logprob: -11.0025053024292
    6. ''][' → logprob: -11.8775053024292
    7. '"][' → logprob: -12.1275053024292
    8. ']' → logprob: -12.8775053024292
    9. '```' → logprob: -13.1275053024292
    10. ' [' → logprob: -13.3775053024292

Token 546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '```' → logprob: -18.75
    4. '۱' → logprob: -19.75
    5. '2' → logprob: -20.25
    6. '[' → logprob: -20.5
    7. '
' → logprob: -20.875
    8. '<|end|>' → logprob: -21.125
    9. '১' → logprob: -21.4375
    10. '   ' → logprob: -21.5

Token 547: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08223184943199158
    2. 'and' → logprob: -2.5822317600250244
    3. ' and' → logprob: -5.7072319984436035
    4. '[' → logprob: -11.707231521606445
    5. ')' → logprob: -13.207231521606445
    6. '```' → logprob: -13.582231521606445
    7. 'et' → logprob: -13.957231521606445
    8. '3' → logprob: -14.457231521606445
    9. '0' → logprob: -14.457231521606445
    10. '}' → logprob: -14.832231521606445

Token 548: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889298349618912
    2. 'and' → logprob: -2.578892946243286
    3. 'et' → logprob: -12.953892707824707
    4. ' et' → logprob: -14.203892707824707
    5. '```' → logprob: -15.953892707824707
    6. ' ' → logprob: -17.078893661499023
    7. '[' → logprob: -17.828893661499023
    8. ' ' → logprob: -18.078893661499023
    9. '	and' → logprob: -19.078893661499023
    10. '   ' → logprob: -19.453893661499023

Token 549: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.25193047523498535
    2. ' marked' → logprob: -1.5019304752349854
    3. 'mark' → logprob: -14.126930236816406
    4. 'Marked' → logprob: -14.626930236816406
    5. '   ' → logprob: -16.626930236816406
    6. '(mark' → logprob: -17.876930236816406
    7. '```' → logprob: -18.001930236816406
    8. '[' → logprob: -18.001930236816406
    9. 'marks' → logprob: -18.751930236816406
    10. ' mark' → logprob: -18.876930236816406

Token 550: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. '][' → logprob: -12.500004768371582
    3. ' [' → logprob: -14.500004768371582
    4. '2' → logprob: -14.875004768371582
    5. '[
' → logprob: -15.500004768371582
    6. '0' → logprob: -17.0000057220459
    7. '```' → logprob: -17.1250057220459
    8. '   ' → logprob: -17.5000057220459
    9. ' ' → logprob: -17.6250057220459
    10. ']' → logprob: -18.0000057220459

Token 551: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.875008583068848
    3. '0' → logprob: -14.375008583068848
    4. '[' → logprob: -15.375008583068848
    5. '```' → logprob: -16.00000762939453
    6. '   ' → logprob: -16.37500762939453
    7. '1' → logprob: -17.81250762939453
    8. '۲' → logprob: -18.06250762939453
    9. '
' → logprob: -18.62500762939453
    10. '][' → logprob: -18.62500762939453

Token 552: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018163522705435753
    2. '[' → logprob: -4.018163681030273
    3. ']' → logprob: -12.643163681030273
    4. '"][' → logprob: -12.643163681030273
    5. '}[' → logprob: -13.143163681030273
    6. '0' → logprob: -13.268163681030273
    7. ''][' → logprob: -13.768163681030273
    8. '2' → logprob: -14.143163681030273
    9. '```' → logprob: -14.393163681030273
    10. '>[' → logprob: -14.768163681030273

Token 553: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '2' → logprob: -18.875
    3. '```' → logprob: -20.625
    4. ' ' → logprob: -20.875
    5. '۰' → logprob: -21.75
    6. '
' → logprob: -22.5
    7. '   ' → logprob: -22.875
    8. '1' → logprob: -23.625
    9. '[' → logprob: -23.75
    10. '０' → logprob: -24.375

Token 554: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.026761865243315697
    2. ']:' → logprob: -3.651761770248413
    3. ']' → logprob: -7.901762008666992
    4. ' ]' → logprob: -10.651762008666992
    5. ']:
' → logprob: -10.776762008666992
    6. ']:

' → logprob: -10.901762008666992
    7. '   ' → logprob: -11.026762008666992
    8. '[' → logprob: -13.151762008666992
    9. '       ' → logprob: -13.401762008666992
    10. ']]:
' → logprob: -13.401762008666992

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006992773152887821
    2. ':
' → logprob: -5.631992816925049
    3. ':' → logprob: -5.756992816925049
    4. '   ' → logprob: -8.50699234008789
    5. ':return' → logprob: -10.88199234008789
    6. ' return' → logprob: -13.25699234008789
    7. '):
' → logprob: -14.00699234008789
    8. ' :
' → logprob: -14.25699234008789
    9. ' :' → logprob: -14.75699234008789
    10. '	' → logprob: -15.38199234008789

Token 556: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2561420500278473
    2. ' return' → logprob: -1.506142020225525
    3. '       ' → logprob: -5.7561421394348145
    4. '   ' → logprob: -6.8811421394348145
    5. '
' → logprob: -12.506141662597656
    6. ' True' → logprob: -12.756141662597656
    7. 'True' → logprob: -13.006141662597656
    8. '	return' → logprob: -13.256141662597656
    9. '           ' → logprob: -13.256141662597656
    10. ' ' → logprob: -14.506141662597656

Token 557: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0485873706638813
    2. ' True' → logprob: -3.0485873222351074
    3. 'False' → logprob: -17.298587799072266
    4. '(True' → logprob: -19.048587799072266
    5. '=True' → logprob: -19.548587799072266
    6. '.True' → logprob: -22.048587799072266
    7. 'true' → logprob: -22.298587799072266
    8. 'Tr' → logprob: -22.298587799072266
    9. ' ' → logprob: -22.548587799072266
    10. 'Yes' → logprob: -22.673587799072266

Token 558: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7049689292907715
    2. '   ' → logprob: -0.7049689292907715
    3. '    
' → logprob: -4.4549689292907715
    4. '\n' → logprob: -9.95496940612793
    5. '  
' → logprob: -10.45496940612793
    6. 'return' → logprob: -11.20496940612793
    7. '
' → logprob: -11.57996940612793
    8. '\
' → logprob: -12.07996940612793
    9. '	
' → logprob: -12.20496940612793
    10. '        
' → logprob: -12.57996940612793

Token 559: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009724684990942478
    2. 'return' → logprob: -5.0097246170043945
    3. 'False' → logprob: -6.0097246170043945
    4. '
' → logprob: -8.009724617004395
    5. '    
' → logprob: -8.509724617004395
    6. ' return' → logprob: -11.759724617004395
    7. '	return' → logprob: -13.009724617004395
    8. '```' → logprob: -13.259724617004395
    9. '  
' → logprob: -13.759724617004395
    10. ' False' → logprob: -13.884724617004395

Token 560: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.6312321753939614e-05
    2. '   ' → logprob: -10.250036239624023
    3. ' return' → logprob: -14.000036239624023
    4. '	return' → logprob: -18.125036239624023
    5. '
' → logprob: -18.250036239624023
    6. '    
' → logprob: -18.375036239624023
    7. '```' → logprob: -19.000036239624023
    8. 'False' → logprob: -19.750036239624023
    9. 'Return' → logprob: -20.375036239624023
    10. 'eturn' → logprob: -20.875036239624023

Token 561: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03804149478673935
    2. ' False' → logprob: -3.288041591644287
    3. '(False' → logprob: -20.413042068481445
    4. '_false' → logprob: -22.038042068481445
    5. 'false' → logprob: -23.038042068481445
    6. '=False' → logprob: -24.163042068481445
    7. 'True' → logprob: -24.288042068481445
    8. ' false' → logprob: -24.288042068481445
    9. '.False' → logprob: -24.538042068481445
    10. 'Falsy' → logprob: -26.538042068481445

Token 562: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24884828925132751
    2. 'def' → logprob: -1.74884831905365
    3. '
' → logprob: -3.1238481998443604
    4. '```' → logprob: -7.2488484382629395
    5. '<|end|>' → logprob: -7.8738484382629395
    6. '  
' → logprob: -7.9988484382629395
    7. '

' → logprob: -8.373847961425781
    8. '\n' → logprob: -8.373847961425781
    9. '#' → logprob: -8.748847961425781
    10. '\' → logprob: -9.498847961425781

Token 563: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06197742745280266
    2. 'if' → logprob: -2.8119773864746094
    3. '```' → logprob: -11.68697738647461
    4. 'b' → logprob: -14.18697738647461
    5. ' if' → logprob: -14.93697738647461
    6. '
' → logprob: -16.31197738647461
    7. '  
' → logprob: -16.56197738647461
    8. '    
' → logprob: -16.93697738647461
    9. 'import' → logprob: -17.18697738647461
    10. '#' → logprob: -17.68697738647461

Token 564: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0007105246186256409
    2. 'main' → logprob: -7.250710487365723
    3. ' def' → logprob: -14.875710487365723
    4. 'def' → logprob: -15.500710487365723
    5. ' check' → logprob: -16.62571144104004
    6. ' play' → logprob: -17.62571144104004
    7. '	main' → logprob: -17.62571144104004
    8. ' run' → logprob: -18.25071144104004
    9. ' solve' → logprob: -18.37571144104004
    10. '_main' → logprob: -18.62571144104004

Token 565: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011522514978423715
    2. ' ():' → logprob: -9.250115394592285
    3. '()' → logprob: -11.750115394592285
    4. '():
' → logprob: -12.000115394592285
    5. '_' → logprob: -12.625115394592285
    6. '(' → logprob: -14.250115394592285
    7. '()>' → logprob: -14.375115394592285
    8. '():
' → logprob: -15.875115394592285
    9. '()">' → logprob: -16.37511444091797
    10. ':' → logprob: -16.62511444091797

Token 566: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010923543013632298
    2. 'b' → logprob: -7.626092433929443
    3. '
' → logprob: -8.001091957092285
    4. '    
' → logprob: -8.626091957092285
    5. '```' → logprob: -9.751091957092285
    6. '(b' → logprob: -11.751091957092285
    7. '(' → logprob: -12.626091957092285
    8. ':' → logprob: -13.251091957092285
    9. '(
' → logprob: -13.251091957092285
    10. '()' → logprob: -13.376091957092285

Token 567: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2952898442745209
    2. 'b' → logprob: -1.5452898740768433
    3. ' bingo' → logprob: -3.1702897548675537
    4. '	b' → logprob: -8.920289993286133
    5. '    
' → logprob: -9.170289993286133
    6. ' b' → logprob: -9.920289993286133
    7. '```' → logprob: -9.920289993286133
    8. 'grid' → logprob: -10.420289993286133
    9. '    ' → logprob: -11.170289993286133
    10. ' grid' → logprob: -11.670289993286133

Token 568: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18132010102272034
    2. 'b' → logprob: -1.806320071220398
    3. ' bingo' → logprob: -8.056320190429688
    4. 'grid' → logprob: -8.181320190429688
    5. '    
' → logprob: -8.556320190429688
    6. ' b' → logprob: -8.556320190429688
    7. '#' → logprob: -8.681320190429688
    8. ' grid' → logprob: -9.181320190429688
    9. '"""' → logprob: -9.306320190429688
    10. ')' → logprob: -10.431320190429688

Token 569: ' Fonction' (ID: 189149)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0791996419429779
    2. '   ' → logprob: -2.8291995525360107
    3. ' bingo' → logprob: -4.32919979095459
    4. 'grid' → logprob: -5.82919979095459
    5. ' grid' → logprob: -7.70419979095459
    6. '#' → logprob: -8.20419979095459
    7. ' b' → logprob: -9.57919979095459
    8. '```' → logprob: -9.95419979095459
    9. '    
' → logprob: -10.82919979095459
    10. '	b' → logprob: -11.07919979095459

Token 570: ' principale' (ID: 68926)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1688690036535263
    2. ' principale' → logprob: -1.9188690185546875
    3. ' de' → logprob: -5.9188690185546875
    4. ' principal' → logprob: -6.5438690185546875
    5. ' def' → logprob: -6.9188690185546875
    6. 'main' → logprob: -7.0438690185546875
    7. '()' → logprob: -7.1688690185546875
    8. 'def' → logprob: -7.5438690185546875
    9. ' ' → logprob: -7.7938690185546875
    10. '_main' → logprob: -8.668869018554688

Token 571: ' qui' (ID: 2780)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3169199526309967
    2. '():
' → logprob: -1.3169199228286743
    3. ':' → logprob: -6.066919803619385
    4. '()' → logprob: -6.941919803619385
    5. ':
' → logprob: -8.941920280456543
    6. '   ' → logprob: -9.066920280456543
    7. 'def' → logprob: -9.191920280456543
    8. ' :' → logprob: -12.691920280456543
    9. ' ():' → logprob: -12.941920280456543
    10. '():

' → logprob: -12.941920280456543

Token 572: ' g' (ID: 329)
  Prédit: ' lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.47571268677711487
    2. '   ' → logprob: -1.1007126569747925
    3. '()' → logprob: -4.850712776184082
    4. ' appelle' → logprob: -5.350712776184082
    5. ' continue' → logprob: -5.600712776184082
    6. '():
' → logprob: -5.850712776184082
    7. ' récup' → logprob: -5.850712776184082
    8. ':' → logprob: -5.975712776184082
    9. ' reads' → logprob: -6.100712776184082
    10. 'def' → logprob: -6.350712776184082

Token 573: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.029434312134981155
    2. 'ere' → logprob: -4.1544342041015625
    3. 'def' → logprob: -6.0294342041015625
    4. 'lit' → logprob: -6.0294342041015625
    5. 'ére' → logprob: -6.2794342041015625
    6. '   ' → logprob: -6.7794342041015625
    7. '`' → logprob: -6.9044342041015625
    8. 'arde' → logprob: -7.2794342041015625
    9. 'e' → logprob: -7.6544342041015625
    10. '"""
' → logprob: -7.9044342041015625

Token 574: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.772864043712616
    2. ' l' → logprob: -1.1478641033172607
    3. ' le' → logprob: -1.6478641033172607
    4. '   ' → logprob: -4.772863864898682
    5. '()' → logprob: -5.022863864898682
    6. 'l' → logprob: -5.147863864898682
    7. 'le' → logprob: -5.397863864898682
    8. ' ' → logprob: -7.272863864898682
    9. 'la' → logprob: -7.522863864898682
    10. ' the' → logprob: -7.897863864898682

Token 575: ' logique' (ID: 115350)
  Prédit: 'lecture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lecture' → logprob: -0.7688854336738586
    2. 'gr' → logprob: -1.2688853740692139
    3. 'log' → logprob: -2.518885374069214
    4. ' lecture' → logprob: -2.893885374069214
    5. 'import' → logprob: -3.268885374069214
    6. ' logique' → logprob: -3.393885374069214
    7. 'execution' → logprob: -4.518885612487793
    8. 'entrée' → logprob: -4.893885612487793
    9. 'suite' → logprob: -5.268885612487793
    10. ' grille' → logprob: -5.518885612487793

Token 576: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.48473769426345825
    2. ' de' → logprob: -1.4847376346588135
    3. '   ' → logprob: -1.9847376346588135
    4. 'du' → logprob: -5.234737873077393
    5. ' principale' → logprob: -5.484737873077393
    6. 'de' → logprob: -5.734737873077393
    7. 'def' → logprob: -6.359737873077393
    8. ':' → logprob: -6.984737873077393
    9. ' des' → logprob: -6.984737873077393
    10. ':
' → logprob: -6.984737873077393

Token 577: ' jeu' (ID: 24626)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.16073483228683472
    2. 'jeu' → logprob: -2.6607348918914795
    3. ' programme' → logprob: -2.7857348918914795
    4. ' jeu' → logprob: -4.9107346534729
    5. 'b' → logprob: -5.5357346534729
    6. 'program' → logprob: -5.7857346534729
    7. 'if' → logprob: -7.5357346534729
    8. ' program' → logprob: -7.7857346534729
    9. ' script' → logprob: -8.410735130310059
    10. 'code' → logprob: -8.410735130310059

Token 578: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037755006924271584
    2. '.' → logprob: -6.253775596618652
    3. ':' → logprob: -7.628775596618652
    4. '```' → logprob: -8.128775596618652
    5. ':
' → logprob: -8.628775596618652
    6. '()' → logprob: -8.628775596618652
    7. '    
' → logprob: -8.753775596618652
    8. '
' → logprob: -9.003775596618652
    9. '():' → logprob: -9.003775596618652
    10. '():
' → logprob: -9.253775596618652

Token 579: ' Bingo' (ID: 83316)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5240328311920166
    2. ' bingo' → logprob: -0.8990328311920166
    3. ' b' → logprob: -7.1490325927734375
    4. '```' → logprob: -9.899032592773438
    5. 'B' → logprob: -11.524032592773438
    6. ' Bingo' → logprob: -11.899032592773438
    7. ' loto' → logprob: -11.899032592773438
    8. ' ' → logprob: -12.399032592773438
    9. 'bing' → logprob: -12.524032592773438
    10. ' code' → logprob: -12.774032592773438

Token 580: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4522373378276825
    2. ':' → logprob: -1.4522373676300049
    3. '   ' → logprob: -2.202237367630005
    4. '():
' → logprob: -4.202237129211426
    5. ':
' → logprob: -6.452237129211426
    6. '.' → logprob: -6.952237129211426
    7. '()' → logprob: -7.077237129211426
    8. '):' → logprob: -7.452237129211426
    9. ' :' → logprob: -9.702237129211426
    10. '):
' → logprob: -10.077237129211426

Token 581: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010627019219100475
    2. '    
' → logprob: -7.626062870025635
    3. '    ' → logprob: -8.376062393188477
    4. '
' → logprob: -8.876062393188477
    5. '```' → logprob: -9.251062393188477
    6. 'b' → logprob: -10.251062393188477
    7. ' 
' → logprob: -11.376062393188477
    8. '       ' → logprob: -11.501062393188477
    9. '  
' → logprob: -11.501062393188477
    10. '#' → logprob: -11.876062393188477

Token 582: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004008234012871981
    2. 'b' → logprob: -5.6290082931518555
    3. ' bingo' → logprob: -9.129008293151855
    4. '    
' → logprob: -9.254008293151855
    5. '    ' → logprob: -9.879008293151855
    6. '```' → logprob: -10.504008293151855
    7. '
' → logprob: -10.754008293151855
    8. '#' → logprob: -10.754008293151855
    9. 'grid' → logprob: -11.379008293151855
    10. ' b' → logprob: -11.379008293151855

Token 583: ' Lecture' (ID: 106534)
  Prédit: ' bingo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bingo' → logprob: -0.5012006759643555
    2. 'b' → logprob: -1.2512006759643555
    3. '   ' → logprob: -2.2512006759643555
    4. '    ' → logprob: -7.6262006759643555
    5. ' grid' → logprob: -7.7512006759643555
    6. ' b' → logprob: -7.8762006759643555
    7. '```' → logprob: -8.001200675964355
    8. 'grid' → logprob: -8.126200675964355
    9. '	b' → logprob: -8.626200675964355
    10. ' ' → logprob: -8.876200675964355

Token 584: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36241471767425537
    2. '()' → logprob: -1.4874147176742554
    3. ' des' → logprob: -3.112414836883545
    4. ' ' → logprob: -4.612414836883545
    5. ' du' → logprob: -4.612414836883545
    6. ' de' → logprob: -4.987414836883545
    7. '(' → logprob: -6.237414836883545
    8. '_' → logprob: -6.612414836883545
    9. '    ' → logprob: -6.862414836883545
    10. 'def' → logprob: -8.362414360046387

Token 585: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.01789131946861744
    2. 'la' → logprob: -4.8928914070129395
    3. '()' → logprob: -5.2678914070129395
    4. 'b' → logprob: -6.0178914070129395
    5. '   ' → logprob: -6.8928914070129395
    6. '```' → logprob: -8.017890930175781
    7. ' ' → logprob: -8.392890930175781
    8. '_' → logprob: -8.517890930175781
    9. 'l' → logprob: -8.767890930175781
    10. ' the' → logprob: -8.892890930175781

Token 586: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.4372765123844147
    2. 'b' → logprob: -1.0622764825820923
    3. ' grille' → logprob: -4.812276363372803
    4. 'grid' → logprob: -8.937276840209961
    5. '```' → logprob: -9.187276840209961
    6. ' bingo' → logprob: -10.312276840209961
    7. ' gr' → logprob: -10.312276840209961
    8. ' b' → logprob: -10.687276840209961
    9. '#' → logprob: -11.312276840209961
    10. 'g' → logprob: -11.812276840209961

Token 587: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024583669379353523
    2. 'b' → logprob: -4.64958381652832
    3. ' bingo' → logprob: -4.89958381652832
    4. ' de' → logprob: -6.39958381652832
    5. '    
' → logprob: -6.77458381652832
    6. '3' → logprob: -6.77458381652832
    7. '
' → logprob: -7.14958381652832
    8. '_b' → logprob: -7.27458381652832
    9. ' ' → logprob: -7.64958381652832
    10. ' b' → logprob: -8.27458381652832

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010823521297425032
    2. '
' → logprob: -7.501082420349121
    3. '    
' → logprob: -7.626082420349121
    4. ',' → logprob: -10.751082420349121
    5. ',
' → logprob: -12.376082420349121
    6. '   
' → logprob: -12.501082420349121
    7. '  
' → logprob: -13.001082420349121
    8. 'import' → logprob: -13.126082420349121
    9. '    ' → logprob: -13.751082420349121
    10. '```' → logprob: -13.876082420349121

Token 589: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011546355381142348
    2. '    
' → logprob: -10.250115394592285
    3. '
' → logprob: -10.500115394592285
    4. '    ' → logprob: -10.750115394592285
    5. 'b' → logprob: -11.375115394592285
    6. ',' → logprob: -12.375115394592285
    7. ' ' → logprob: -12.625115394592285
    8. '  ' → logprob: -12.750115394592285
    9. '   ' → logprob: -13.500115394592285
    10. '```' → logprob: -13.500115394592285

Token 590: ' Lecture' (ID: 106534)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'draw' → logprob: -0.5399256348609924
    2. ' drawn' → logprob: -0.9149256348609924
    3. 'lecture' → logprob: -5.289925575256348
    4. 'Lecture' → logprob: -5.789925575256348
    5. ' lecture' → logprob: -6.539925575256348
    6. 'read' → logprob: -6.664925575256348
    7. ' draw' → logprob: -6.664925575256348
    8. '   ' → logprob: -6.789925575256348
    9. ' Lecture' → logprob: -7.914925575256348
    10. 'dess' → logprob: -7.914925575256348

Token 591: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.05722813308238983
    2. '   ' → logprob: -3.0572280883789062
    3. ' du' → logprob: -5.682228088378906
    4. 'des' → logprob: -5.682228088378906
    5. ' de' → logprob: -6.932228088378906
    6. '  ' → logprob: -8.307228088378906
    7. '    ' → logprob: -8.932228088378906
    8. '()' → logprob: -9.057228088378906
    9. ' ' → logprob: -9.557228088378906
    10. '_des' → logprob: -9.682228088378906

Token 592: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.40722158551216125
    2. 'tir' → logprob: -1.9072215557098389
    3. ' num' → logprob: -2.407221555709839
    4. ' drawn' → logprob: -3.407221555709839
    5. ' tir' → logprob: -3.657221555709839
    6. 'draw' → logprob: -3.657221555709839
    7. 'nums' → logprob: -5.907221794128418
    8. 'n' → logprob: -6.282221794128418
    9. ' nombres' → logprob: -6.657221794128418
    10. 'numbers' → logprob: -6.907221794128418

Token 593: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.0009217040496878326
    2. 'é' → logprob: -7.500921726226807
    3. 'éro' → logprob: -8.125921249389648
    4. '_' → logprob: -10.000921249389648
    5. '__' → logprob: -11.500921249389648
    6. '_numbers' → logprob: -11.500921249389648
    7. 'eros' → logprob: -13.375921249389648
    8. 'ériques' → logprob: -13.750921249389648
    9. 'éraux' → logprob: -14.625921249389648
    10. 'érés' → logprob: -14.750921249389648

Token 594: ' tir' (ID: 16690)
  Prédit: 'tir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tir' → logprob: -0.23109368979930878
    2. ' tir' → logprob: -1.9810936450958252
    3. '_t' → logprob: -3.731093645095825
    4. 't' → logprob: -3.981093645095825
    5. '   ' → logprob: -4.481093883514404
    6. '_' → logprob: -4.731093883514404
    7. 'ti' → logprob: -7.106093883514404
    8. '    
' → logprob: -7.356093883514404
    9. ' ' → logprob: -7.606093883514404
    10. '#' → logprob: -7.731093883514404

Token 595: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -2.868328920158092e-05
    2. 'es' → logprob: -11.125028610229492
    3. 'é' → logprob: -12.000028610229492
    4. 'ÉS' → logprob: -12.875028610229492
    5. '```' → logprob: -13.750028610229492
    6. 'ès' → logprob: -14.125028610229492
    7. 'ées' → logprob: -14.125028610229492
    8. 'nés' → logprob: -14.125028610229492
    9. '   ' → logprob: -14.500028610229492
    10. 's' → logprob: -14.625028610229492

Token 596: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00046081675100140274
    2. '
' → logprob: -8.250460624694824
    3. '    
' → logprob: -8.875460624694824
    4. ',' → logprob: -10.375460624694824
    5. ',
' → logprob: -11.625460624694824
    6. '\n' → logprob: -12.875460624694824
    7. '  
' → logprob: -13.000460624694824
    8. ')' → logprob: -13.125460624694824
    9. '   ' → logprob: -13.375460624694824
    10. '<|end|>' → logprob: -13.375460624694824

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011152983643114567
    2. '    
' → logprob: -9.50011157989502
    3. '
' → logprob: -10.62511157989502
    4. ',' → logprob: -12.62511157989502
    5. ')' → logprob: -13.37511157989502
    6. '```' → logprob: -13.62511157989502
    7. '#' → logprob: -13.87511157989502
    8. '       ' → logprob: -14.12511157989502
    9. 'import' → logprob: -14.12511157989502
    10. 'def' → logprob: -14.12511157989502

Token 598: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003598952607717365
    2. '
' → logprob: -8.125359535217285
    3. '    
' → logprob: -10.250359535217285
    4. '    ' → logprob: -12.000359535217285
    5. '  ' → logprob: -12.250359535217285
    6. ' ' → logprob: -12.500359535217285
    7. '```' → logprob: -12.500359535217285
    8. ',' → logprob: -13.125359535217285
    9. '#' → logprob: -13.625359535217285
    10. '   ' → logprob: -14.000359535217285

Token 599: ' Mar' (ID: 3145)
  Prédit: ' marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.8440746665000916
    2. 'marked' → logprob: -0.9690746665000916
    3. 'b' → logprob: -2.3440747261047363
    4. 'mark' → logprob: -3.4690747261047363
    5. 'mar' → logprob: -3.9690747261047363
    6. '   ' → logprob: -4.594074726104736
    7. ' mark' → logprob: -5.094074726104736
    8. ' mar' → logprob: -5.344074726104736
    9. ' marking' → logprob: -5.469074726104736
    10. ' b' → logprob: -5.469074726104736

Token 600: 'qu' (ID: 351)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2072757482528687
    2. 'ked' → logprob: -1.7072757482528687
    3. 'qué' → logprob: -1.9572757482528687
    4. 'qu' → logprob: -1.9572757482528687
    5. 'quée' → logprob: -2.082275867462158
    6. 'que' → logprob: -2.707275867462158
    7. 'quer' → logprob: -3.957275867462158
    8. 'q' → logprob: -4.457275867462158
    9. 'ker' → logprob: -4.582275867462158
    10. '   ' → logprob: -6.332275867462158

Token 601: 'age' (ID: 477)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04525187611579895
    2. 'ked' → logprob: -4.045251846313477
    3. 'q' → logprob: -4.295251846313477
    4. 'ed' → logprob: -4.920251846313477
    5. 'qu' → logprob: -5.670251846313477
    6. 'que' → logprob: -7.795251846313477
    7. '   ' → logprob: -7.795251846313477
    8. '```' → logprob: -8.045251846313477
    9. 'e' → logprob: -8.295251846313477
    10. 'er' → logprob: -8.420251846313477

Token 602: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6011969447135925
    2. ' des' → logprob: -0.8511969447135925
    3. 'des' → logprob: -4.601196765899658
    4. '(b' → logprob: -4.851196765899658
    5. ' ' → logprob: -6.476196765899658
    6. ' de' → logprob: -6.601196765899658
    7. '    ' → logprob: -7.101196765899658
    8. '()' → logprob: -7.351196765899658
    9. ' du' → logprob: -7.476196765899658
    10. '  ' → logprob: -7.726196765899658

Token 603: ' num' (ID: 2269)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.2785301208496094
    2. 'b' → logprob: -2.0285301208496094
    3. ' cases' → logprob: -2.5285301208496094
    4. 'gr' → logprob: -4.028530120849609
    5. ' drawn' → logprob: -5.403530120849609
    6. 'num' → logprob: -5.653530120849609
    7. ' b' → logprob: -6.403530120849609
    8. 'numbers' → logprob: -6.903530120849609
    9. 'draw' → logprob: -7.278530120849609
    10. '```' → logprob: -7.653530120849609

Token 604: 'éros' (ID: 120888)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.012370259501039982
    2. 'rés' → logprob: -5.0123701095581055
    3. 'nés' → logprob: -5.8873701095581055
    4. 'qués' → logprob: -7.3873701095581055
    5. '_' → logprob: -7.6373701095581055
    6. 'é' → logprob: -7.8873701095581055
    7. '__' → logprob: -7.8873701095581055
    8. 'dés' → logprob: -8.512370109558105
    9. 'érés' → logprob: -8.637370109558105
    10. 't' → logprob: -8.762370109558105

Token 605: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13337799906730652
    2. 'tir' → logprob: -3.008378028869629
    3. ' tir' → logprob: -3.008378028869629
    4. ' mar' → logprob: -3.883378028869629
    5. '    
' → logprob: -6.258378028869629
    6. 't' → logprob: -7.258378028869629
    7. 'mar' → logprob: -7.633378028869629
    8. '_t' → logprob: -8.258378028869629
    9. '_' → logprob: -8.383378028869629
    10. '  ' → logprob: -8.508378028869629

Token 606: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.432282030582428
    2. ' la' → logprob: -1.0572819709777832
    3. 'b' → logprob: -6.432281970977783
    4. '   ' → logprob: -6.432281970977783
    5. 'le' → logprob: -8.682282447814941
    6. ' ' → logprob: -9.682282447814941
    7. 'les' → logprob: -10.307282447814941
    8. 'the' → logprob: -10.432282447814941
    9. 'l' → logprob: -11.557282447814941
    10. ' le' → logprob: -11.682282447814941

Token 607: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.0713903084397316
    2. ' grille' → logprob: -2.696390390396118
    3. ' gr' → logprob: -7.696390151977539
    4. 'b' → logprob: -7.696390151977539
    5. 'grid' → logprob: -7.821390151977539
    6. ' grid' → logprob: -9.571390151977539
    7. '   ' → logprob: -11.196390151977539
    8. '_gr' → logprob: -11.696390151977539
    9. '
' → logprob: -11.946390151977539
    10. ' ' → logprob: -12.196390151977539

Token 608: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03465307131409645
    2. '
' → logprob: -3.4096531867980957
    3. '    
' → logprob: -7.034653186798096
    4. 'b' → logprob: -9.409652709960938
    5. '  
' → logprob: -11.534652709960938
    6. ',
' → logprob: -11.784652709960938
    7. '   
' → logprob: -12.159652709960938
    8. ',' → logprob: -12.159652709960938
    9. ' 
' → logprob: -12.909652709960938
    10. '<|end|>' → logprob: -13.409652709960938

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007645202334970236
    2. '
' → logprob: -5.132645130157471
    3. '    
' → logprob: -6.382645130157471
    4. '```' → logprob: -12.007645606994629
    5. '   
' → logprob: -12.382645606994629
    6. '  
' → logprob: -12.382645606994629
    7. '<|end|>' → logprob: -13.132645606994629
    8. ')' → logprob: -13.507645606994629
    9. '#' → logprob: -13.882645606994629
    10. ',' → logprob: -13.882645606994629

Token 610: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022308611369226128
    2. '
' → logprob: -8.875223159790039
    3. '    
' → logprob: -9.500223159790039
    4. '#' → logprob: -13.375223159790039
    5. '  
' → logprob: -14.125223159790039
    6. 'b' → logprob: -14.375223159790039
    7. '       ' → logprob: -14.500223159790039
    8. ',' → logprob: -14.625223159790039
    9. '    ' → logprob: -14.625223159790039
    10. '   
' → logprob: -14.625223159790039

Token 611: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6673570275306702
    2. ' if' → logprob: -1.5423569679260254
    3. ' Vér' → logprob: -2.4173569679260254
    4. 'V' → logprob: -2.7923569679260254
    5. '   ' → logprob: -3.1673569679260254
    6. 'v' → logprob: -3.4173569679260254
    7. ' vér' → logprob: -4.292356967926025
    8. '#' → logprob: -4.542356967926025
    9. ' verification' → logprob: -5.417356967926025
    10. ' check' → logprob: -6.042356967926025

Token 612: 'ification' (ID: 3166)
  Prédit: 'ifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00016361083544325083
    2. 'if' → logprob: -9.500164031982422
    3. 'ification' → logprob: -9.500164031982422
    4. 'ifies' → logprob: -12.250164031982422
    5. '   ' → logprob: -12.750164031982422
    6. 'ifiez' → logprob: -13.000164031982422
    7. 'ifiant' → logprob: -13.500164031982422
    8. 'ifi' → logprob: -14.125164031982422
    9. 'ifié' → logprob: -14.250164031982422
    10. 'ifier' → logprob: -14.375164031982422

Token 613: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.8812306523323059
    2. '   ' → logprob: -1.1312305927276611
    3. ' if' → logprob: -2.131230592727661
    4. ' de' → logprob: -2.256230592727661
    5. ' si' → logprob: -3.506230592727661
    6. ' des' → logprob: -5.00623083114624
    7. 'du' → logprob: -6.88123083114624
    8. 'if' → logprob: -7.25623083114624
    9. '  ' → logprob: -8.131230354309082
    10. ' ' → logprob: -8.131230354309082

Token 614: ' l' (ID: 305)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3217625021934509
    2. 'le' → logprob: -2.4467625617980957
    3. ' bingo' → logprob: -2.6967625617980957
    4. ' la' → logprob: -3.0717625617980957
    5. 'la' → logprob: -3.1967625617980957
    6. ' le' → logprob: -4.196762561798096
    7. 'l' → logprob: -4.821762561798096
    8. ' b' → logprob: -5.446762561798096
    9. 'if' → logprob: -6.196762561798096
    10. ' if' → logprob: -6.446762561798096

Token 615: ''état' (ID: 116357)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.001706600189209
    2. 'b' → logprob: -1.126706600189209
    3. 'e' → logprob: -1.501706600189209
    4. ' bingo' → logprob: -2.876706600189209
    5. 'a' → logprob: -4.126706600189209
    6. '_' → logprob: -5.626706600189209
    7. 'B' → logprob: -6.001706600189209
    8. 'if' → logprob: -6.751706600189209
    9. 'is' → logprob: -7.251706600189209
    10. 'es' → logprob: -7.501706600189209

Token 616: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19143909215927124
    2. ' de' → logprob: -2.316439151763916
    3. ' du' → logprob: -3.441439151763916
    4. 'b' → logprob: -4.066439151763916
    5. '_b' → logprob: -4.566439151763916
    6. ' if' → logprob: -5.066439151763916
    7. ' bingo' → logprob: -5.816439151763916
    8. 'du' → logprob: -6.066439151763916
    9. 'de' → logprob: -6.191439151763916
    10. 'if' → logprob: -7.566439151763916

Token 617: ' victoire' (ID: 96596)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.040876299142837524
    2. ' bingo' → logprob: -3.2908763885498047
    3. 'la' → logprob: -6.665876388549805
    4. ' b' → logprob: -7.415876388549805
    5. ' la' → logprob: -7.415876388549805
    6. ' victoire' → logprob: -9.165876388549805
    7. '"' → logprob: -9.665876388549805
    8. 'l' → logprob: -10.415876388549805
    9. 'le' → logprob: -10.540876388549805
    10. 'bing' → logprob: -10.790876388549805

Token 618: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004291195946279913
    2. '
' → logprob: -8.750429153442383
    3. ')' → logprob: -9.125429153442383
    4. '    
' → logprob: -9.375429153442383
    5. '<|end|>' → logprob: -10.250429153442383
    6. '```' → logprob: -11.625429153442383
    7. ',' → logprob: -11.875429153442383
    8. ')
' → logprob: -12.250429153442383
    9. '.' → logprob: -12.750429153442383
    10. 'b' → logprob: -13.000429153442383

Token 619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16242574155330658
    2. '
' → logprob: -1.9124257564544678
    3. '    
' → logprob: -6.162425518035889
    4. '```' → logprob: -10.287425994873047
    5. '

' → logprob: -11.162425994873047
    6. '  
' → logprob: -11.412425994873047
    7. ')' → logprob: -12.162425994873047
    8. ' 
' → logprob: -12.287425994873047
    9. '   
' → logprob: -12.287425994873047
    10. '
' → logprob: -12.412425994873047

Token 620: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003889980260282755
    2. '
' → logprob: -5.753890037536621
    3. 'b' → logprob: -7.878890037536621
    4. '    
' → logprob: -8.128890037536621
    5. '```' → logprob: -11.128890037536621
    6. ')' → logprob: -12.128890037536621
    7. '"""' → logprob: -12.753890037536621
    8. '#' → logprob: -13.253890037536621
    9. '
' → logprob: -13.378890037536621
    10. '  
' → logprob: -13.503890037536621

Token 621: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.4097760021686554
    2. 'f' → logprob: -1.659775972366333
    3. 'ic' → logprob: -2.534775972366333
    4. 'fic' → logprob: -3.409775972366333
    5. 'ichage' → logprob: -4.034776210784912
    6. '   ' → logprob: -4.659776210784912
    7. 'icher' → logprob: -6.409776210784912
    8. 'ich' → logprob: -6.784776210784912
    9. 'ter' → logprob: -6.784776210784912
    10. '#' → logprob: -7.784776210784912

Token 622: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.20342792570590973
    2. '(' → logprob: -1.7034279108047485
    3. '(
' → logprob: -6.328427791595459
    4. '('' → logprob: -8.578428268432617
    5. '()' → logprob: -10.828428268432617
    6. '(""' → logprob: -11.703428268432617
    7. '("")' → logprob: -12.578428268432617
    8. '(True' → logprob: -13.078428268432617
    9. '("""' → logprob: -13.203428268432617
    10. '(("' → logprob: -14.203428268432617

Token 623: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.050670649856328964
    2. 'B' → logprob: -3.050670623779297
    3. 'YES' → logprob: -6.800670623779297
    4. '"' → logprob: -7.800670623779297
    5. '"B' → logprob: -8.425670623779297
    6. 'yes' → logprob: -9.175670623779297
    7. 'Oui' → logprob: -9.425670623779297
    8. ' Yes' → logprob: -10.300670623779297
    9. 'P' → logprob: -11.050670623779297
    10. '```' → logprob: -11.550670623779297

Token 624: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -3.2617008400848135e-05
    2. '\n' → logprob: -11.250032424926758
    3. '```' → logprob: -12.125032424926758
    4. '!"' → logprob: -12.500032424926758
    5. 'Yes' → logprob: -12.500032424926758
    6. '"""' → logprob: -13.125032424926758
    7. '")' → logprob: -14.000032424926758
    8. '"
' → logprob: -14.500032424926758
    9. '"B' → logprob: -14.750032424926758
    10. '""' → logprob: -14.875032424926758

Token 625: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07659284770488739
    2. 'if' → logprob: -3.3265929222106934
    3. '
' → logprob: -3.7015929222106934
    4. ' if' → logprob: -4.576592922210693
    5. 'def' → logprob: -7.201592922210693
    6. ' ' → logprob: -7.451592922210693
    7. ' or' → logprob: -7.826592922210693
    8. '```' → logprob: -8.326592445373535
    9. '    
' → logprob: -8.826592445373535
    10. '()' → logprob: -9.076592445373535

Token 626: ' une' (ID: 2463)
  Prédit: ' bingo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bingo' → logprob: -0.048354439437389374
    2. ' Bingo' → logprob: -3.923354387283325
    3. ' la' → logprob: -5.048354625701904
    4. ' le' → logprob: -5.298354625701904
    5. ' une' → logprob: -5.673354625701904
    6. ' b' → logprob: -6.173354625701904
    7. ' B' → logprob: -6.423354625701904
    8. ' True' → logprob: -6.423354625701904
    9. ' il' → logprob: -6.548354625701904
    10. 'b' → logprob: -6.673354625701904

Token 627: ' ligne' (ID: 19583)
  Prédit: ' bingo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bingo' → logprob: -0.5741509199142456
    2. 'b' → logprob: -0.9491509199142456
    3. 'B' → logprob: -3.449151039123535
    4. ' b' → logprob: -5.199151039123535
    5. ' Bingo' → logprob: -5.199151039123535
    6. ' ligne' → logprob: -5.824151039123535
    7. ' B' → logprob: -6.574151039123535
    8. ' line' → logprob: -6.824151039123535
    9. ' victoire' → logprob: -8.199151039123535
    10. '  
' → logprob: -8.699151039123535

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02338116057217121
    2. 'b' → logprob: -4.898381233215332
    3. ' or' → logprob: -5.148381233215332
    4. ' ou' → logprob: -5.148381233215332
    5. 'B' → logprob: -6.273381233215332
    6. ',
' → logprob: -6.898381233215332
    7. '
' → logprob: -8.648381233215332
    8. ' ' → logprob: -9.023381233215332
    9. ' ,' → logprob: -9.273381233215332
    10. 'ou' → logprob: -9.273381233215332

Token 629: ' colonne' (ID: 148275)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6937044262886047
    2. ' "' → logprob: -0.6937044262886047
    3. '   ' → logprob: -7.568704605102539
    4. ' ' → logprob: -11.568704605102539
    5. '"B' → logprob: -11.943704605102539
    6. ' une' → logprob: -12.818704605102539
    7. ' or' → logprob: -12.943704605102539
    8. '    ' → logprob: -13.068704605102539
    9. ' un' → logprob: -13.193704605102539
    10. ',' → logprob: -13.193704605102539

Token 630: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.09431620687246323
    2. ' or' → logprob: -2.844316244125366
    3. 'ou' → logprob: -3.719316244125366
    4. 'or' → logprob: -5.344316005706787
    5. ',' → logprob: -6.594316005706787
    6. ' ' → logprob: -7.344316005706787
    7. '"' → logprob: -7.844316005706787
    8. '   ' → logprob: -8.969316482543945
    9. 's' → logprob: -9.344316482543945
    10. 'o' → logprob: -9.719316482543945

Token 631: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.059180665761232376
    2. ' diagon' → logprob: -2.934180736541748
    3. ' diagonal' → logprob: -5.809180736541748
    4. 'diag' → logprob: -6.934180736541748
    5. ' une' → logprob: -8.93418025970459
    6. ' diag' → logprob: -9.68418025970459
    7. 'une' → logprob: -10.05918025970459
    8. ' di' → logprob: -10.68418025970459
    9. '#' → logprob: -11.68418025970459
    10. '_di' → logprob: -11.80918025970459

Token 632: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.007686366327106953
    2. 'e' → logprob: -4.882686138153076
    3. 'ée' → logprob: -9.882686614990234
    4. 'al' → logprob: -11.507686614990234
    5. 'le' → logprob: -11.632686614990234
    6. 'alle' → logprob: -12.507686614990234
    7. 'ae' → logprob: -12.757686614990234
    8. 'é' → logprob: -13.882686614990234
    9. 'a' → logprob: -14.132686614990234
    10. 'ee' → logprob: -15.257686614990234

Token 633: ' complète' (ID: 75660)
  Prédit: ' complète'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complète' → logprob: -0.6828176379203796
    2. ' is' → logprob: -1.8078176975250244
    3. ' has' → logprob: -2.3078176975250244
    4. ' a' → logprob: -2.4328176975250244
    5. ' est' → logprob: -2.6828176975250244
    6. ' complete' → logprob: -3.6828176975250244
    7. ' complet' → logprob: -3.8078176975250244
    8. ' bingo' → logprob: -5.182817459106445
    9. ' completes' → logprob: -5.432817459106445
    10. 'a' → logprob: -5.932817459106445

Token 634: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.1103144884109497
    2. '\n' → logprob: -1.3603144884109497
    3. '   ' → logprob: -1.8603144884109497
    4. ' is' → logprob: -2.61031436920166
    5. ' a' → logprob: -2.98531436920166
    6. ' marked' → logprob: -3.48531436920166
    7. '"' → logprob: -3.86031436920166
    8. ',' → logprob: -4.23531436920166
    9. '
' → logprob: -4.36031436920166
    10. 'b' → logprob: -4.73531436920166

Token 635: ' mar' (ID: 2674)
  Prédit: ' trouv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouv' → logprob: -1.0996114015579224
    2. ' mar' → logprob: -2.474611282348633
    3. ' bingo' → logprob: -2.474611282348633
    4. ' présente' → logprob: -2.599611282348633
    5. ' atte' → logprob: -2.599611282348633
    6. 'b' → logprob: -2.849611282348633
    7. ' obten' → logprob: -2.974611282348633
    8. ' gagn' → logprob: -3.349611282348633
    9. ' form' → logprob: -3.474611282348633
    10. '
' → logprob: -3.599611282348633

Token 636: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -0.017318330705165863
    2. 'qu' → logprob: -4.517318248748779
    3. 'q' → logprob: -5.642318248748779
    4. 'quee' → logprob: -6.517318248748779
    5. 'qué' → logprob: -7.267318248748779
    6. 'que' → logprob: -9.142318725585938
    7. 'quées' → logprob: -9.267318725585938
    8. 'què' → logprob: -10.017318725585938
    9. '#' → logprob: -10.267318725585938
    10. 'k' → logprob: -10.642318725585938

Token 637: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4646262228488922
    2. ',' → logprob: -1.0896261930465698
    3. '
' → logprob: -4.089626312255859
    4. 'def' → logprob: -4.589626312255859
    5. ';' → logprob: -5.714626312255859
    6. ',
' → logprob: -6.214626312255859
    7. '.' → logprob: -6.839626312255859
    8. '"' → logprob: -6.964626312255859
    9. 'import' → logprob: -8.33962631225586
    10. 'if' → logprob: -8.58962631225586

Token 638: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001019471324980259
    2. 'else' → logprob: -7.501019477844238
    3. '"' → logprob: -8.001019477844238
    4. 'print' → logprob: -9.751019477844238
    5. '```' → logprob: -11.001019477844238
    6. '
' → logprob: -11.251019477844238
    7. ' else' → logprob: -11.501019477844238
    8. '    
' → logprob: -11.626019477844238
    9. 'def' → logprob: -11.626019477844238
    10. '       ' → logprob: -12.501019477844238

Token 639: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01842699572443962
    2. ' "' → logprob: -4.018426895141602
    3. '   ' → logprob: -8.393426895141602
    4. ' ' → logprob: -10.893426895141602
    5. ' print' → logprob: -11.268426895141602
    6. ''' → logprob: -12.518426895141602
    7. 'print' → logprob: -12.643426895141602
    8. '"No' → logprob: -12.768426895141602
    9. '
' → logprob: -13.018426895141602
    10. ' ' → logprob: -13.893426895141602

Token 640: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00012630375567823648
    2. ' No' → logprob: -9.375125885009766
    3. '"No' → logprob: -10.125125885009766
    4. 'Yes' → logprob: -14.625125885009766
    5. '"' → logprob: -15.000125885009766
    6. 'NO' → logprob: -15.000125885009766
    7. '   ' → logprob: -16.250125885009766
    8. '_No' → logprob: -16.500125885009766
    9. '```' → logprob: -17.375125885009766
    10. ' ' → logprob: -17.750125885009766

Token 641: '".
' (ID: 26880)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00481078028678894
    2. '")' → logprob: -5.879810810089111
    3. '"
' → logprob: -6.254810810089111
    4. '".' → logprob: -9.754810333251953
    5. '")
' → logprob: -11.004810333251953
    6. '"
' → logprob: -13.129810333251953
    7. ')' → logprob: -13.754810333251953
    8. '"""' → logprob: -13.879810333251953
    9. '```' → logprob: -13.879810333251953
    10. ')"' → logprob: -13.879810333251953

Token 642: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23442012071609497
    2. '
' → logprob: -1.6094200611114502
    3. '    
' → logprob: -4.734420299530029
    4. '```' → logprob: -9.734419822692871
    5. '  
' → logprob: -10.234419822692871
    6. '

' → logprob: -10.734419822692871
    7. '\n' → logprob: -11.234419822692871
    8. '
' → logprob: -11.859419822692871
    9. '   
' → logprob: -11.984419822692871
    10. '' → logprob: -12.359419822692871

Token 643: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016548404470086098
    2. '
' → logprob: -4.1415486335754395
    3. '    
' → logprob: -7.6415486335754395
    4. 'b' → logprob: -10.891548156738281
    5. '```' → logprob: -12.016548156738281
    6. '  
' → logprob: -13.391548156738281
    7. '\n' → logprob: -13.641548156738281
    8. '
' → logprob: -13.641548156738281
    9. '   
' → logprob: -13.891548156738281
    10. '' → logprob: -14.141548156738281

Token 644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0052354102954268456
    2. 'b' → logprob: -5.255235195159912
    3. '	b' → logprob: -14.50523567199707
    4. ' bingo' → logprob: -14.50523567199707
    5. '    
' → logprob: -15.38023567199707
    6. '```' → logprob: -15.88023567199707
    7. '
' → logprob: -16.00523567199707
    8. '   ' → logprob: -16.38023567199707
    9. 'grid' → logprob: -16.88023567199707
    10. '       ' → logprob: -17.50523567199707

Token 645: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02685391530394554
    2. '   ' → logprob: -3.6518537998199463
    3. ' bingo' → logprob: -7.526854038238525
    4. '	b' → logprob: -11.901853561401367
    5. ' b' → logprob: -13.026853561401367
    6. '```' → logprob: -13.151853561401367
    7. 'grid' → logprob: -13.651853561401367
    8. 'bing' → logprob: -14.026853561401367
    9. '    
' → logprob: -14.151853561401367
    10. '  ' → logprob: -14.776853561401367

Token 646: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.0004967942950315773
    2. '_' → logprob: -7.625496864318848
    3. '_gr' → logprob: -11.875496864318848
    4. ' _' → logprob: -14.125496864318848
    5. '_g' → logprob: -15.000496864318848
    6. '\' → logprob: -15.375496864318848
    7. '=_' → logprob: -16.00049591064453
    8. '_
' → logprob: -16.00049591064453
    9. '_b' → logprob: -16.75049591064453
    10. '_GRID' → logprob: -17.12549591064453

Token 647: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246990516781807
    2. '=' → logprob: -3.773247003555298
    3. ',' → logprob: -14.148246765136719
    4. ')' → logprob: -15.148246765136719
    5. ' =
' → logprob: -15.773246765136719
    6. '()' → logprob: -15.898246765136719
    7. '   ' → logprob: -16.14824676513672
    8. ' ' → logprob: -16.52324676513672
    9. '(' → logprob: -17.39824676513672
    10. ' =
' → logprob: -17.77324676513672

Token 648: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.16022412478923798
    2. ' read' → logprob: -1.9102240800857544
    3. '	read' → logprob: -18.91022491455078
    4. '(read' → logprob: -20.28522491455078
    5. '.read' → logprob: -22.66022491455078
    6. '_read' → logprob: -23.16022491455078
    7. 'Read' → logprob: -23.53522491455078
    8. ' reading' → logprob: -24.28522491455078
    9. 'reading' → logprob: -24.41022491455078
    10. ' ' → logprob: -24.91022491455078

Token 649: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0007127894787117839
    2. '_' → logprob: -7.250712871551514
    3. ' _' → logprob: -13.375712394714355
    4. ')_' → logprob: -15.125712394714355
    5. ' ' → logprob: -15.375712394714355
    6. 'b' → logprob: -15.500712394714355
    7. '(' → logprob: -15.875712394714355
    8. '_a' → logprob: -16.625713348388672
    9. '()' → logprob: -16.875713348388672
    10. '"_' → logprob: -16.875713348388672

Token 650: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -0.00010998018842656165
    2. '_b' → logprob: -9.625109672546387
    3. 'b' → logprob: -10.375109672546387
    4. 'ing' → logprob: -12.125109672546387
    5. '_' → logprob: -12.875109672546387
    6. ' bingo' → logprob: -14.125109672546387
    7. 'i' → logprob: -14.625109672546387
    8. '_ing' → logprob: -14.625109672546387
    9. '```' → logprob: -14.750109672546387
    10. '`' → logprob: -14.875109672546387

Token 651: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -2.2200749754119897e-06
    2. '_gr' → logprob: -13.250001907348633
    3. '_' → logprob: -15.125001907348633
    4. 'grid' → logprob: -17.500001907348633
    5. 'Grid' → logprob: -18.625001907348633
    6. '_g' → logprob: -18.625001907348633
    7. ' _' → logprob: -19.000001907348633
    8. '_GRID' → logprob: -19.250001907348633
    9. '```' → logprob: -19.375001907348633
    10. ')_' → logprob: -19.375001907348633

Token 652: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1503826379776001
    2. '
' → logprob: -2.4003825187683105
    3. '()
' → logprob: -3.1503825187683105
    4. '()' → logprob: -5.2753825187683105
    5. '    
' → logprob: -7.1503825187683105
    6. '  
' → logprob: -9.525382995605469
    7. '   
' → logprob: -10.650382995605469
    8. 'b' → logprob: -11.025382995605469
    9. ' ' → logprob: -11.400382995605469
    10. '(
' → logprob: -11.400382995605469

Token 653: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014791740104556084
    2. 'draw' → logprob: -4.389791965484619
    3. '
' → logprob: -7.139791965484619
    4. '    
' → logprob: -7.264791965484619
    5. ' drawn' → logprob: -7.264791965484619
    6. '```' → logprob: -9.639791488647461
    7. '   ' → logprob: -12.139791488647461
    8. '  
' → logprob: -12.264791488647461
    9. '	draw' → logprob: -12.514791488647461
    10. '   
' → logprob: -13.514791488647461

Token 654: ' drawn' (ID: 25279)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'draw' → logprob: -0.0011780819622799754
    2. ' drawn' → logprob: -6.75117826461792
    3. '   ' → logprob: -11.876177787780762
    4. ' draw' → logprob: -14.376177787780762
    5. '
' → logprob: -16.501178741455078
    6. 'Draw' → logprob: -16.876178741455078
    7. '	draw' → logprob: -17.001178741455078
    8. '```' → logprob: -17.001178741455078
    9. 'drawing' → logprob: -17.251178741455078
    10. '       ' → logprob: -17.251178741455078

Token 655: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.5094070477061905e-05
    2. '_' → logprob: -11.250015258789062
    3. ')_' → logprob: -14.250015258789062
    4. '_n' → logprob: -14.250015258789062
    5. '_num' → logprob: -15.750015258789062
    6. '_number' → logprob: -15.750015258789062
    7. '_nums' → logprob: -16.250015258789062
    8. ' _' → logprob: -16.625015258789062
    9. '_tokens' → logprob: -17.750015258789062
    10. '_draw' → logprob: -18.000015258789062

Token 656: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587825149297714
    2. '=' → logprob: -3.0485877990722656
    3. ')' → logprob: -15.298587799072266
    4. ',' → logprob: -16.173587799072266
    5. ' ' → logprob: -17.298587799072266
    6. ' =
' → logprob: -17.423587799072266
    7. '.' → logprob: -17.923587799072266
    8. ' +=' → logprob: -18.548587799072266
    9. '=[]' → logprob: -18.923587799072266
    10. '   ' → logprob: -19.048587799072266

Token 657: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.575940728187561
    2. 'read' → logprob: -0.825940728187561
    3. '[]' → logprob: -14.20094108581543
    4. 'list' → logprob: -15.20094108581543
    5. ' list' → logprob: -15.70094108581543
    6. ' []' → logprob: -16.57594108581543
    7. '	read' → logprob: -16.57594108581543
    8. ' ' → logprob: -17.45094108581543
    9. 'int' → logprob: -17.70094108581543
    10. '[' → logprob: -18.20094108581543

Token 658: '_draw' (ID: 51847)
  Prédit: '_draw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_draw' → logprob: -0.02066485583782196
    2. '_b' → logprob: -4.145664691925049
    3. '_' → logprob: -5.520664691925049
    4. ')_' → logprob: -8.895665168762207
    5. '()' → logprob: -9.020665168762207
    6. 'draw' → logprob: -9.270665168762207
    7. '_d' → logprob: -9.395665168762207
    8. '```' → logprob: -10.145665168762207
    9. ' drawn' → logprob: -10.895665168762207
    10. '"_' → logprob: -10.895665168762207

Token 659: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3511047959327698
    2. '_numbers' → logprob: -1.226104736328125
    3. 'wn' → logprob: -6.976104736328125
    4. '_n' → logprob: -7.101104736328125
    5. 'w' → logprob: -7.976104736328125
    6. '(n' → logprob: -8.601104736328125
    7. 'numbers' → logprob: -9.476104736328125
    8. '(numbers' → logprob: -9.601104736328125
    9. 't' → logprob: -9.726104736328125
    10. 'awn' → logprob: -10.101104736328125

Token 660: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -4.60414821645827e-06
    2. 'umbers' → logprob: -12.375004768371582
    3. 'numbers' → logprob: -15.625004768371582
    4. '_' → logprob: -16.375003814697266
    5. '_number' → logprob: -16.875003814697266
    6. '(numbers' → logprob: -18.625003814697266
    7. 'Numbers' → logprob: -18.750003814697266
    8. '_n' → logprob: -18.875003814697266
    9. '(_' → logprob: -19.000003814697266
    10. 's' → logprob: -19.250003814697266

Token 661: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3930395841598511
    2. '   ' → logprob: -1.143039584159851
    3. 'marked' → logprob: -5.518039703369141
    4. '    
' → logprob: -6.393039703369141
    5. ' marked' → logprob: -7.893039703369141
    6. '  
' → logprob: -10.26803970336914
    7. 'mark' → logprob: -11.39303970336914
    8. '
' → logprob: -11.64303970336914
    9. '   
' → logprob: -11.64303970336914
    10. '(mark' → logprob: -12.39303970336914

Token 662: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021808229386806488
    2. 'marked' → logprob: -4.27180814743042
    3. ' marked' → logprob: -4.89680814743042
    4. '    
' → logprob: -9.521808624267578
    5. '
' → logprob: -10.021808624267578
    6. '   ' → logprob: -11.521808624267578
    7. 'mark' → logprob: -12.396808624267578
    8. '```' → logprob: -12.396808624267578
    9. '  ' → logprob: -13.021808624267578
    10. ' ' → logprob: -13.896808624267578

Token 663: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' (adapté à ' marked') → logprob: -0.011072585359215736
    2. ' marked' → logprob: -4.761072635650635
    3. '   ' → logprob: -6.011072635650635
    4. 'mark' → logprob: -13.011072158813477
    5. 'marks' → logprob: -14.386072158813477
    6. '    
' → logprob: -15.261072158813477
    7. ' marks' → logprob: -16.136072158813477
    8. '```' → logprob: -16.261072158813477
    9. ' ' → logprob: -16.511072158813477
    10. '
' → logprob: -16.761072158813477

Token 664: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002194755943492055
    2. '=' → logprob: -6.127194881439209
    3. '_' → logprob: -11.62719440460205
    4. '   ' → logprob: -15.00219440460205
    5. '_mark' → logprob: -16.252195358276367
    6. ' ' → logprob: -16.752195358276367
    7. '=b' → logprob: -17.127195358276367
    8. ')' → logprob: -17.377195358276367
    9. ' =
' → logprob: -17.502195358276367
    10. '_numbers' → logprob: -17.502195358276367

Token 665: ' mark' (ID: 1983)
  Prédit: ' mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.20141363143920898
    2. 'mark' → logprob: -1.701413631439209
    3. '(mark' → logprob: -15.076414108276367
    4. '   ' → logprob: -17.076414108276367
    5. '_mark' → logprob: -18.201414108276367
    6. 'marked' → logprob: -19.826414108276367
    7. '.mark' → logprob: -19.951414108276367
    8. ' marked' → logprob: -20.951414108276367
    9. 'Mark' → logprob: -21.451414108276367
    10. ' ' → logprob: -21.576414108276367

Token 666: '_draw' (ID: 51847)
  Prédit: '_draw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_draw' → logprob: -6.704273118884885e-07
    2. '_mark' → logprob: -14.625000953674316
    3. '_' → logprob: -16.0
    4. '_b' → logprob: -17.5
    5. 'draw' → logprob: -17.875
    6. '_d' → logprob: -18.0
    7. '_Draw' → logprob: -19.5
    8. '_print' → logprob: -19.75
    9. '_DRAW' → logprob: -19.75
    10. 'Draw' → logprob: -19.75

Token 667: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014900267124176025
    2. '_numbers' → logprob: -4.514900207519531
    3. 'wn' → logprob: -6.139900207519531
    4. 'w' → logprob: -6.889900207519531
    5. '_draw' → logprob: -7.764900207519531
    6. 'ed' → logprob: -9.389900207519531
    7. 'numbers' → logprob: -10.014900207519531
    8. 'b' → logprob: -10.764900207519531
    9. 'awn' → logprob: -11.139900207519531
    10. '_n' → logprob: -11.139900207519531

Token 668: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -2.6537622034084052e-05
    2. 'umbers' → logprob: -10.87502670288086
    3. 'numbers' → logprob: -13.00002670288086
    4. '_' → logprob: -13.12502670288086
    5. 'ed' → logprob: -13.25002670288086
    6. '_number' → logprob: -14.50002670288086
    7. '_mark' → logprob: -14.62502670288086
    8. '_n' → logprob: -16.12502670288086
    9. '_num' → logprob: -16.12502670288086
    10. '```' → logprob: -17.00002670288086

Token 669: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00010962257510982454
    2. '(' → logprob: -9.125109672546387
    3. ' (' → logprob: -14.750109672546387
    4. '(
' → logprob: -15.375109672546387
    5. '(br' → logprob: -18.87510871887207
    6. 'b' → logprob: -19.12510871887207
    7. '(B' → logprob: -19.75010871887207
    8. '(bl' → logprob: -19.87510871887207
    9. ' ' → logprob: -20.25010871887207
    10. '(be' → logprob: -20.25010871887207

Token 670: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -1.8789383830153383e-05
    2. 'ing' → logprob: -11.625019073486328
    3. 'b' → logprob: -12.500019073486328
    4. ' bingo' → logprob: -13.500019073486328
    5. '```' → logprob: -14.000019073486328
    6. 'ngo' → logprob: -14.375019073486328
    7. 'i' → logprob: -14.375019073486328
    8. '   ' → logprob: -14.375019073486328
    9. 'in' → logprob: -14.625019073486328
    10. 'ango' → logprob: -15.625019073486328

Token 671: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.00016587569552939385
    2. ',' → logprob: -8.875165939331055
    3. 'grid' → logprob: -11.000165939331055
    4. ',b' → logprob: -13.125165939331055
    5. '_,' → logprob: -13.625165939331055
    6. '_numbers' → logprob: -13.750165939331055
    7. '_GRID' → logprob: -14.250165939331055
    8. ' ,' → logprob: -14.250165939331055
    9. '<Grid' → logprob: -14.375165939331055
    10. 'Grid' → logprob: -14.500165939331055

Token 672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ',
' → logprob: -13.50000286102295
    3. ' ,' → logprob: -13.62500286102295
    4. ',b' → logprob: -17.000001907348633
    5. '‌,' → logprob: -18.250001907348633
    6. ',d' → logprob: -18.250001907348633
    7. ',\
' → logprob: -19.375001907348633
    8. ',
' → logprob: -20.375001907348633
    9. ',

' → logprob: -20.375001907348633
    10. '   ' → logprob: -20.625001907348633

Token 673: ' drawn' (ID: 25279)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'draw' → logprob: -0.043002739548683167
    2. ' drawn' → logprob: -3.1680028438568115
    3. ' draw' → logprob: -13.29300308227539
    4. '   ' → logprob: -14.66800308227539
    5. 'Draw' → logprob: -15.16800308227539
    6. '_draw' → logprob: -15.41800308227539
    7. '	draw' → logprob: -15.66800308227539
    8. ' ' → logprob: -15.79300308227539
    9. ' ' → logprob: -15.91800308227539
    10. 'drawing' → logprob: -15.91800308227539

Token 674: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -7.696077227592468e-05
    2. 'numbers' → logprob: -9.500077247619629
    3. 'umbers' → logprob: -14.500077247619629
    4. '_' → logprob: -14.750077247619629
    5. 's' → logprob: -15.375077247619629
    6. 'draw' → logprob: -15.500077247619629
    7. 'ed' → logprob: -16.000076293945312
    8. '_number' → logprob: -16.125076293945312
    9. 'Numbers' → logprob: -16.250076293945312
    10. 'd' → logprob: -16.250076293945312

Token 675: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25196409225463867
    2. ')
' → logprob: -1.5019640922546387
    3. '   ' → logprob: -10.376964569091797
    4. ')
' → logprob: -12.876964569091797
    5. ')

' → logprob: -13.876964569091797
    6. ' )
' → logprob: -15.751964569091797
    7. ' )' → logprob: -16.126964569091797
    8. ' ' → logprob: -16.626964569091797
    9. ')`
' → logprob: -17.501964569091797
    10. ')\
' → logprob: -17.626964569091797

Token 676: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0069745443761348724
    2. 'if' → logprob: -5.006974697113037
    3. ' if' → logprob: -8.506974220275879
    4. '
' → logprob: -10.506974220275879
    5. '    
' → logprob: -10.631974220275879
    6. '```' → logprob: -12.131974220275879
    7. '	if' → logprob: -16.006975173950195
    8. '``' → logprob: -16.881975173950195
    9. '  
' → logprob: -16.881975173950195
    10. 'result' → logprob: -17.506975173950195

Token 677: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0034613250754773617
    2. ' if' → logprob: -6.2534613609313965
    3. 'print' → logprob: -7.1284613609313965
    4. '   ' → logprob: -7.2534613609313965
    5. 'result' → logprob: -11.503460884094238
    6. 'b' → logprob: -11.878460884094238
    7. '```' → logprob: -13.128460884094238
    8. '    
' → logprob: -13.378460884094238
    9. 'is' → logprob: -14.503460884094238
    10. '
' → logprob: -14.753460884094238

Token 678: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.2014141082763672
    2. 'check' → logprob: -1.7014141082763672
    3. '(check' → logprob: -14.076414108276367
    4. '	check' → logprob: -17.451414108276367
    5. '   ' → logprob: -18.951414108276367
    6. ' ' → logprob: -19.576414108276367
    7. ' ' → logprob: -19.701414108276367
    8. '_check' → logprob: -19.701414108276367
    9. '.check' → logprob: -19.826414108276367
    10. 'chec' → logprob: -20.701414108276367

Token 679: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.25
    3. '(b' → logprob: -18.0
    4. 'b' → logprob: -18.25
    5. '_B' → logprob: -20.0
    6. '_check' → logprob: -20.25
    7. 'B' → logprob: -21.0
    8. '(_' → logprob: -21.125
    9. '(' → logprob: -21.625
    10. '\' → logprob: -21.875

Token 680: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -8.661626634420827e-05
    2. 'igo' → logprob: -10.375086784362793
    3. 'ing' → logprob: -10.500086784362793
    4. '_' → logprob: -11.875086784362793
    5. '_b' → logprob: -12.375086784362793
    6. 'ango' → logprob: -12.875086784362793
    7. 'b' → logprob: -12.875086784362793
    8. ' bingo' → logprob: -13.375086784362793
    9. 'o' → logprob: -13.500086784362793
    10. 'ngo' → logprob: -13.625086784362793

Token 681: '(mark' (ID: 126438)
  Prédit: '(mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mark' → logprob: -7.886803359724581e-05
    2. '(' → logprob: -9.500079154968262
    3. ' (' → logprob: -13.125079154968262
    4. '(marker' → logprob: -13.500079154968262
    5. '(mask' → logprob: -14.500079154968262
    6. '(
' → logprob: -17.000078201293945
    7. '(m' → logprob: -17.125078201293945
    8. '(ma' → logprob: -18.250078201293945
    9. '(mac' → logprob: -19.875078201293945
    10. '(M' → logprob: -20.125078201293945

Token 682: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.9361264946837764e-07
    2. 'arked' → logprob: -15.75
    3. 'ED' → logprob: -18.5
    4. '[' → logprob: -18.5
    5. '   ' → logprob: -18.75
    6. 'edin' → logprob: -19.75
    7. 'ked' → logprob: -20.0
    8. '_ed' → logprob: -20.375
    9. 'ед' → logprob: -20.625
    10. 'edi' → logprob: -21.125

Token 683: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000354769523255527
    2. '):
' → logprob: -8.125354766845703
    3. ')' → logprob: -10.375354766845703
    4. ' ):' → logprob: -10.750354766845703
    5. '   ' → logprob: -12.875354766845703
    6. ':' → logprob: -13.875354766845703
    7. '(b' → logprob: -14.125354766845703
    8. '():' → logprob: -14.125354766845703
    9. '(mark' → logprob: -14.250354766845703
    10. ' ' → logprob: -15.250354766845703

Token 684: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.246537173457909e-06
    2. 'print' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.375003814697266
    4. ' print' → logprob: -14.375003814697266
    5. '    ' → logprob: -17.125003814697266
    6. '```' → logprob: -17.125003814697266
    7. '      ' → logprob: -18.375003814697266
    8. '           ' → logprob: -18.625003814697266
    9. '        
' → logprob: -18.875003814697266
    10. '
' → logprob: -19.000003814697266

Token 685: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.8761179447174072
    2. ' print' → logprob: -1.1261179447174072
    3. '       ' → logprob: -1.3761179447174072
    4. '   ' → logprob: -5.001117706298828
    5. '```' → logprob: -11.626117706298828
    6. '	print' → logprob: -11.876117706298828
    7. '
' → logprob: -12.376117706298828
    8. 'pr' → logprob: -13.501117706298828
    9. 'Print' → logprob: -13.876117706298828
    10. '           ' → logprob: -14.501117706298828

Token 686: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004085878375917673
    2. '(' → logprob: -5.504086017608643
    3. '('' → logprob: -11.879085540771484
    4. '(
' → logprob: -14.879085540771484
    5. '("""' → logprob: -17.254085540771484
    6. ' ("' → logprob: -17.504085540771484
    7. '(

' → logprob: -18.004085540771484
    8. '("("' → logprob: -18.379085540771484
    9. '("")' → logprob: -18.879085540771484
    10. '()' → logprob: -18.879085540771484

Token 687: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: 0.0
    2. ' Yes' → logprob: -17.75
    3. 'YES' → logprob: -20.5
    4. 'Oui' → logprob: -20.75
    5. 'True' → logprob: -22.625
    6. 'Hello' → logprob: -23.25
    7. 'Yeah' → logprob: -23.25
    8. 'Ye' → logprob: -23.25
    9. '.Yes' → logprob: -23.875
    10. '"' → logprob: -24.0

Token 688: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.02325514331459999
    2. '')
' → logprob: -3.7732551097869873
    3. '')
' → logprob: -12.148255348205566
    4. ')' → logprob: -13.023255348205566
    5. '")' → logprob: -13.273255348205566
    6. '')

' → logprob: -16.27325439453125
    7. '")
' → logprob: -16.89825439453125
    8. ''' → logprob: -16.89825439453125
    9. ')')
' → logprob: -17.52325439453125
    10. '')")
' → logprob: -18.14825439453125

Token 689: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012892624363303185
    2. 'else' → logprob: -9.000128746032715
    3. ' else' → logprob: -12.125128746032715
    4. '	else' → logprob: -17.62512969970703
    5. '   ' → logprob: -18.62512969970703
    6. '    
' → logprob: -18.75012969970703
    7. '
' → logprob: -18.87512969970703
    8. '       ' → logprob: -19.00012969970703
    9. ' ' → logprob: -19.00012969970703
    10. '```' → logprob: -19.62512969970703

Token 690: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.21045748889446259
    2. '   ' → logprob: -1.710457444190979
    3. ' else' → logprob: -4.7104573249816895
    4. ' ' → logprob: -13.335457801818848
    5. '	else' → logprob: -14.085457801818848
    6. 'e' → logprob: -16.71045684814453
    7. 'Else' → logprob: -16.83545684814453
    8. '```' → logprob: -16.96045684814453
    9. 'els' → logprob: -17.08545684814453
    10. 'elser' → logprob: -17.33545684814453

Token 691: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02202608436346054
    2. ':
' → logprob: -4.022026062011719
    3. '       ' → logprob: -5.647026062011719
    4. ' :' → logprob: -8.772026062011719
    5. '   ' → logprob: -9.022026062011719
    6. ' :
' → logprob: -9.897026062011719
    7. '    ' → logprob: -12.772026062011719
    8. '      ' → logprob: -13.022026062011719
    9. '):' → logprob: -13.522026062011719
    10. '           ' → logprob: -13.897026062011719

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003217283869162202
    2. ' print' → logprob: -6.1282172203063965
    3. 'print' → logprob: -6.8782172203063965
    4. '   ' → logprob: -13.878217697143555
    5. '           ' → logprob: -15.753217697143555
    6. '    ' → logprob: -15.878217697143555
    7. '(print' → logprob: -16.128217697143555
    8. '      ' → logprob: -16.503217697143555
    9. '     ' → logprob: -16.503217697143555
    10. '	print' → logprob: -16.628217697143555

Token 693: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.029755352064967155
    2. ' print' → logprob: -3.5297553539276123
    3. '       ' → logprob: -13.029755592346191
    4. 'Print' → logprob: -13.654755592346191
    5. 'No' → logprob: -13.779755592346191
    6. '   ' → logprob: -15.279755592346191
    7. ' No' → logprob: -15.279755592346191
    8. ''' → logprob: -17.029754638671875
    9. '	print' → logprob: -17.904754638671875
    10. '(print' → logprob: -18.779754638671875

Token 694: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0024764856789261103
    2. '(' → logprob: -6.002476692199707
    3. '("' → logprob: -14.627476692199707
    4. '(
' → logprob: -14.752476692199707
    5. ' ('' → logprob: -17.87747573852539
    6. '(

' → logprob: -18.62747573852539
    7. ''' → logprob: -19.25247573852539
    8. '(('' → logprob: -19.50247573852539
    9. '(No' → logprob: -19.62747573852539
    10. '(\'' → logprob: -20.12747573852539

Token 695: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: 0.0
    2. ' No' → logprob: -20.5
    3. ''' → logprob: -22.625
    4. 'N' → logprob: -26.125
    5. '_No' → logprob: -26.125
    6. '"No' → logprob: -26.25
    7. 'NO' → logprob: -26.375
    8. '   ' → logprob: -26.875
    9. 'Yes' → logprob: -27.375
    10. '.No' → logprob: -28.0

Token 696: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -1.5048530030981055e-06
    2. ')' → logprob: -13.875001907348633
    3. '')
' → logprob: -14.625001907348633
    4. '")' → logprob: -16.875001907348633
    5. '.')' → logprob: -20.125001907348633
    6. '()' → logprob: -20.250001907348633
    7. ''' → logprob: -20.500001907348633
    8. '')

' → logprob: -21.000001907348633
    9. '')"' → logprob: -21.375001907348633
    10. '('' → logprob: -21.875001907348633

Token 697: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001199158956296742
    2. '
' → logprob: -6.751199245452881
    3. 'main' → logprob: -11.126198768615723
    4. ' if' → logprob: -11.376198768615723
    5. '```' → logprob: -13.001198768615723
    6. '\n' → logprob: -15.126198768615723
    7. '  
' → logprob: -16.00119972229004
    8. '    
' → logprob: -16.62619972229004
    9. '\
' → logprob: -17.00119972229004
    10. ' 
' → logprob: -17.37619972229004

Token 698: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.025465652346611023
    2. '__' → logprob: -4.150465488433838
    3. '_' → logprob: -5.400465488433838
    4. ' ' → logprob: -5.400465488433838
    5. ' ' → logprob: -9.275465965270996
    6. ' ' → logprob: -9.400465965270996
    7. ' _' → logprob: -10.150465965270996
    8. ' ​' → logprob: -10.150465965270996
    9. '_name' → logprob: -10.525465965270996
    10. '​' → logprob: -11.025465965270996

Token 699: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06191244721412659
    2. ' __' → logprob: -3.3119125366210938
    3. '.__' → logprob: -4.061912536621094
    4. ' ==' → logprob: -5.561912536621094
    5. '__.' → logprob: -6.686912536621094
    6. '==' → logprob: -7.561912536621094
    7. '__.__' → logprob: -7.686912536621094
    8. ' .' → logprob: -9.811912536621094
    9. '.' → logprob: -10.186912536621094
    10. '.name' → logprob: -10.436912536621094

Token 700: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.8624639324116288e-06
    2. '__.__' → logprob: -13.500001907348633
    3. '___' → logprob: -15.375001907348633
    4. '==' → logprob: -16.875001907348633
    5. '__.' → logprob: -17.000001907348633
    6. '____' → logprob: -17.250001907348633
    7. '__
' → logprob: -17.500001907348633
    8. '_' → logprob: -18.500001907348633
    9. '__('' → logprob: -18.500001907348633
    10. '__[' → logprob: -19.125001907348633

Token 701: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00024192029377445579
    2. '==' → logprob: -9.000242233276367
    3. ' ==' → logprob: -9.250242233276367
    4. '_' → logprob: -11.125242233276367
    5. '___' → logprob: -12.500242233276367
    6. ' __' → logprob: -13.750242233276367
    7. '__.__' → logprob: -13.750242233276367
    8. '____' → logprob: -14.375242233276367
    9. '=="' → logprob: -14.750242233276367
    10. '__.' → logprob: -15.500242233276367

Token 702: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47433891892433167
    2. ''' → logprob: -0.9743388891220093
    3. ' "__' → logprob: -8.84933853149414
    4. '__' → logprob: -9.47433853149414
    5. ' '__' → logprob: -10.09933853149414
    6. ''"' → logprob: -16.09933853149414
    7. '('__' → logprob: -16.59933853149414
    8. '"name' → logprob: -16.84933853149414
    9. '"user' → logprob: -17.59933853149414
    10. '("__' → logprob: -17.59933853149414

Token 703: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002060436672763899
    2. '__' → logprob: -8.500205993652344
    3. '_main' → logprob: -13.375205993652344
    4. 'name' → logprob: -14.375205993652344
    5. ' main' → logprob: -15.000205993652344
    6. '-main' → logprob: -19.375205993652344
    7. '__":
' → logprob: -19.500205993652344
    8. '	main' → logprob: -19.500205993652344
    9. '_MAIN' → logprob: -19.750205993652344
    10. '"' → logprob: -19.875205993652344

Token 704: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.018163053318858147
    2. '__' → logprob: -4.018163204193115
    3. '__':
' → logprob: -11.268162727355957
    4. '_' → logprob: -15.018162727355957
    5. '__["' → logprob: -19.143163681030273
    6. '___' → logprob: -19.768163681030273
    7. '_"' → logprob: -20.143163681030273
    8. '"' → logprob: -20.143163681030273
    9. '__("' → logprob: -20.393163681030273
    10. '__",' → logprob: -20.518163681030273

Token 705: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00416245311498642
    2. ' main' → logprob: -5.754162311553955
    3. '   ' → logprob: -7.004162311553955
    4. '	main' → logprob: -9.504162788391113
    5. '_main' → logprob: -14.004162788391113
    6. '    
' → logprob: -14.379162788391113
    7. ' ' → logprob: -16.504161834716797
    8. '  ' → logprob: -16.629161834716797
    9. '
' → logprob: -17.004161834716797
    10. '(main' → logprob: -17.004161834716797

Token 706: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.5491004129871726e-05
    2. ' main' → logprob: -10.000045776367188
    3. '	main' → logprob: -18.250045776367188
    4. '   ' → logprob: -20.000045776367188
    5. '_main' → logprob: -22.875045776367188
    6. '.main' → logprob: -23.750045776367188
    7. 'ma' → logprob: -23.875045776367188
    8. '(main' → logprob: -24.250045776367188
    9. 'Main' → logprob: -25.125045776367188
    10. ' ' → logprob: -25.125045776367188

Token 707: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 705
Tokens correctement prédits (1ère position, stricte): 351
Tokens correctement prédits (1ère position, avec adaptation): 368
Tokens correctement prédits (top 10): 573
Précision stricte (1ère position): 49.79%
Précision adaptée (1ère position): 52.20%
Précision (top 10): 81.28%
================================================================================
