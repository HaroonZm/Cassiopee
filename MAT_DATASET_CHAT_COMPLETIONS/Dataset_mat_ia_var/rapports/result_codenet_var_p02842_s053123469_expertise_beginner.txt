================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())

X = int(N / 1.08)
if X * 1.08 < N:
    X = X + 1

if int(X * 1.08) == N:
    print(X)
else:
    print(":(")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00021879478299524635
    2. '('' → logprob: -9.125218391418457
    3. '(N' → logprob: -10.125218391418457
    4. '(
' → logprob: -10.500218391418457
    5. ''' → logprob: -10.750218391418457
    6. '```' → logprob: -12.000218391418457
    7. '("("' → logprob: -12.375218391418457
    8. '`' → logprob: -12.625218391418457
    9. '(`' → logprob: -13.625218391418457
    10. ')' → logprob: -13.875218391418457

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'X' (ID: 55)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20979663729667664
    2. 'if' → logprob: -1.959796667098999
    3. 's' → logprob: -4.20979642868042
    4. 'total' → logprob: -4.83479642868042
    5. 'result' → logprob: -5.08479642868042
    6. 'factor' → logprob: -5.08479642868042
    7. 'sum' → logprob: -5.58479642868042
    8. 'count' → logprob: -5.95979642868042
    9. 'f' → logprob: -6.08479642868042
    10. 'i' → logprob: -7.20979642868042

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11880651116371155
    2. '+' → logprob: -2.9938066005706787
    3. '=' → logprob: -3.7438066005706787
    4. ' =' → logprob: -3.9938066005706787
    5. '**' → logprob: -5.2438063621521
    6. ' ' → logprob: -5.7438063621521
    7. ')' → logprob: -5.9938063621521
    8. '*' → logprob: -5.9938063621521
    9. ' **' → logprob: -6.7438063621521
    10. '_' → logprob: -6.8688063621521

Token 7: ' int' (ID: 677)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.4708824157714844
    2. '0' → logprob: -1.7208824157714844
    3. '[]' → logprob: -1.7208824157714844
    4. 'int' → logprob: -2.0958824157714844
    5. 'list' → logprob: -2.3458824157714844
    6. ' int' → logprob: -2.5958824157714844
    7. ' list' → logprob: -2.9708824157714844
    8. ' ' → logprob: -3.7208824157714844
    9. ' N' → logprob: -4.095882415771484
    10. '[int' → logprob: -4.845882415771484

Token 8: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00892842747271061
    2. '(input' → logprob: -5.258928298950195
    3. '()' → logprob: -5.883928298950195
    4. ' (' → logprob: -8.008928298950195
    5. '('' → logprob: -8.258928298950195
    6. ' ' → logprob: -9.258928298950195
    7. ')' → logprob: -9.758928298950195
    8. 'input' → logprob: -10.133928298950195
    9. '```' → logprob: -10.633928298950195
    10. ' ()' → logprob: -11.258928298950195

Token 9: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034702327102422714
    2. '*' → logprob: -6.878470420837402
    3. '+' → logprob: -6.878470420837402
    4. '))' → logprob: -7.878470420837402
    5. '**' → logprob: -7.878470420837402
    6. '[' → logprob: -8.128470420837402
    7. ' )' → logprob: -9.378470420837402
    8. '/' → logprob: -10.253470420837402
    9. '(' → logprob: -10.378470420837402
    10. ')**' → logprob: -10.628470420837402

Token 10: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0757075771689415
    2. '10' → logprob: -3.3257076740264893
    3. '3' → logprob: -4.20070743560791
    4. '5' → logprob: -4.82570743560791
    5. ' ' → logprob: -4.95070743560791
    6. '100' → logprob: -5.82570743560791
    7. '4' → logprob: -6.20070743560791
    8. '1' → logprob: -7.20070743560791
    9. '6' → logprob: -7.82570743560791
    10. '7' → logprob: -8.82570743560791

Token 11: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03143943473696709
    2. '10' → logprob: -4.406439304351807
    3. ' ' → logprob: -5.031439304351807
    4. '3' → logprob: -5.031439304351807
    5. '5' → logprob: -5.531439304351807
    6. '1' → logprob: -6.906439304351807
    7. '4' → logprob: -7.906439304351807
    8. '6' → logprob: -9.281439781188965
    9. '100' → logprob: -9.406439781188965
    10. '7' → logprob: -9.531439781188965

Token 12: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010287618497386575
    2. '))' → logprob: -7.251028537750244
    3. '2' → logprob: -8.626029014587402
    4. ' )' → logprob: -9.501029014587402
    5. '0' → logprob: -10.501029014587402
    6. ')
' → logprob: -12.251029014587402
    7. '1' → logprob: -12.376029014587402
    8. '')' → logprob: -12.751029014587402
    9. '`)' → logprob: -13.001029014587402
    10. '(' → logprob: -13.126029014587402

Token 13: '08' (ID: 3062)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06859753280878067
    2. '0' → logprob: -3.1935975551605225
    3. '2' → logprob: -3.9435975551605225
    4. ' )' → logprob: -5.568597316741943
    5. ' ' → logprob: -6.443597316741943
    6. '))' → logprob: -8.318597793579102
    7. '1' → logprob: -9.068597793579102
    8. '3' → logprob: -10.443597793579102
    9. '(' → logprob: -10.568597793579102
    10. '4' → logprob: -10.943597793579102

Token 14: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.133198283147067e-05
    2. '))' → logprob: -10.000051498413086
    3. '')' → logprob: -13.625051498413086
    4. '*' → logprob: -14.000051498413086
    5. '`)' → logprob: -14.375051498413086
    6. ')*' → logprob: -14.625051498413086
    7. '```' → logprob: -14.750051498413086
    8. ')`' → logprob: -14.875051498413086
    9. '*)' → logprob: -15.000051498413086
    10. '**' → logprob: -15.000051498413086

Token 15: 'if' (ID: 366)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5905544757843018
    2. 'if' → logprob: -1.3405544757843018
    3. ' while' → logprob: -2.2155544757843018
    4. '+' → logprob: -3.2155544757843018
    5. 'for' → logprob: -4.340554237365723
    6. ' if' → logprob: -4.465554237365723
    7. '```' → logprob: -5.590554237365723
    8. ':' → logprob: -7.340554237365723
    9. '*' → logprob: -7.340554237365723
    10. '#' → logprob: -7.465554237365723

Token 16: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.45399123430252075
    2. ' X' → logprob: -1.578991174697876
    3. 'int' → logprob: -2.703991174697876
    4. ' int' → logprob: -3.328991174697876
    5. ' abs' → logprob: -3.453991174697876
    6. 'abs' → logprob: -4.078991413116455
    7. ' ' → logprob: -5.578991413116455
    8. '(int' → logprob: -6.828991413116455
    9. ' (' → logprob: -7.203991413116455
    10. 'N' → logprob: -7.703991413116455

Token 17: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11955630034208298
    2. ' *' → logprob: -2.244556188583374
    3. ':' → logprob: -6.619556427001953
    4. '>' → logprob: -6.619556427001953
    5. '+' → logprob: -6.744556427001953
    6. ' >' → logprob: -7.619556427001953
    7. ' ==' → logprob: -7.869556427001953
    8. '%' → logprob: -7.994556427001953
    9. '==' → logprob: -8.244556427001953
    10. ' ' → logprob: -8.369556427001953

Token 18: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00804567988961935
    2. ' ' → logprob: -4.883045673370361
    3. '108' → logprob: -7.758045673370361
    4. '```' → logprob: -12.38304615020752
    5. '  ' → logprob: -13.75804615020752
    6. '(' → logprob: -14.00804615020752
    7. '<|end|>' → logprob: -14.13304615020752
    8. ' (' → logprob: -14.82054615020752
    9. '109' → logprob: -14.88304615020752
    10. '9' → logprob: -15.25804615020752

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11308806389570236
    2. '108' → logprob: -2.2380881309509277
    3. ' ' → logprob: -8.23808765411377
    4. '```' → logprob: -13.98808765411377
    5. '0' → logprob: -15.73808765411377
    6. '109' → logprob: -16.488088607788086
    7. '`' → logprob: -16.613088607788086
    8. '107' → logprob: -16.613088607788086
    9. '(' → logprob: -17.363088607788086
    10. '106' → logprob: -17.363088607788086

Token 20: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2818569839000702
    2. '08' → logprob: -1.4068570137023926
    3. '1' → logprob: -7.906857013702393
    4. '0' → logprob: -8.906856536865234
    5. '108' → logprob: -10.031856536865234
    6. '```' → logprob: -10.281856536865234
    7. ' .' → logprob: -10.406856536865234
    8. '<' → logprob: -11.156856536865234
    9. '008' → logprob: -11.406856536865234
    10. ',' → logprob: -11.531856536865234

Token 21: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -8.77627644513268e-06
    2. '0' → logprob: -12.500008583068848
    3. '8' → logprob: -12.750008583068848
    4. '1' → logprob: -13.625008583068848
    5. '```' → logprob: -14.625008583068848
    6. '080' → logprob: -16.250009536743164
    7. '081' → logprob: -17.437509536743164
    8. 'print' → logprob: -17.562509536743164
    9. 'int' → logprob: -17.937509536743164
    10. ' ' → logprob: -18.125009536743164

Token 22: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16841289401054382
    2. ' <' → logprob: -2.168412923812866
    3. '<int' → logprob: -4.043412685394287
    4. '<=' → logprob: -4.418412685394287
    5. ' <=' → logprob: -5.043412685394287
    6. '>' → logprob: -6.418412685394287
    7. ' ' → logprob: -7.543412685394287
    8. '>=' → logprob: -7.668412685394287
    9. '<|end|>' → logprob: -8.043413162231445
    10. ' >=' → logprob: -8.543413162231445

Token 23: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08903740346431732
    2. ' N' → logprob: -2.4640374183654785
    3. 'int' → logprob: -9.71403694152832
    4. ' ' → logprob: -10.96403694152832
    5. 'float' → logprob: -12.21403694152832
    6. ' int' → logprob: -12.46403694152832
    7. ' float' → logprob: -12.83903694152832
    8. '=' → logprob: -13.21403694152832
    9. '>N' → logprob: -13.46403694152832
    10. '	N' → logprob: -13.71403694152832

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07380571216344833
    2. '+' → logprob: -3.198805809020996
    3. '+:' → logprob: -3.823805809020996
    4. ' +' → logprob: -5.198805809020996
    5. ' :' → logprob: -6.198805809020996
    6. '-' → logprob: -7.448805809020996
    7. ' -' → logprob: -8.573805809020996
    8. '):' → logprob: -9.448805809020996
    9. ':
' → logprob: -10.698805809020996
    10. '1' → logprob: -11.698805809020996

Token 25: '   ' (ID: 271)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.7024596929550171
    2. '+' → logprob: -1.577459692955017
    3. 'X' → logprob: -1.577459692955017
    4. ' +' → logprob: -3.4524598121643066
    5. ' +
' → logprob: -3.8274598121643066
    6. '+
' → logprob: -4.077459812164307
    7. '1' → logprob: -4.327459812164307
    8. ':' → logprob: -6.452459812164307
    9. ' +=' → logprob: -6.577459812164307
    10. ' :
' → logprob: -7.202459812164307

Token 26: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.1820327490568161
    2. 'X' (adapté à ' X') → logprob: -1.9320327043533325
    3. '+' → logprob: -4.182032585144043
    4. ' +' → logprob: -6.682032585144043
    5. ' +=' → logprob: -6.807032585144043
    6. ' ' → logprob: -7.432032585144043
    7. ' =' → logprob: -7.557032585144043
    8. '+=' → logprob: -7.557032585144043
    9. '1' → logprob: -7.682032585144043
    10. '=' → logprob: -8.182032585144043

Token 27: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18197041749954224
    2. ' +=' → logprob: -2.1819703578948975
    3. '+=' → logprob: -3.1819703578948975
    4. ' +' → logprob: -4.431970596313477
    5. '=' → logprob: -9.556970596313477
    6. ' =' → logprob: -10.306970596313477
    7. '++' → logprob: -11.056970596313477
    8. '-' → logprob: -11.556970596313477
    9. '<|end|>' → logprob: -11.806970596313477
    10. '1' → logprob: -12.681970596313477

Token 28: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.5782956480979919
    2. ' X' → logprob: -0.8282956480979919
    3. '+' → logprob: -6.078295707702637
    4. ' ' → logprob: -11.453295707702637
    5. ' +' → logprob: -11.453295707702637
    6. '	X' → logprob: -11.703295707702637
    7. '0' → logprob: -11.953295707702637
    8. '   ' → logprob: -12.328295707702637
    9. '>X' → logprob: -12.453295707702637
    10. 'int' → logprob: -12.578295707702637

Token 29: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004626649431884289
    2. ' +' → logprob: -5.379626750946045
    3. '+
' → logprob: -12.629626274108887
    4. '-' → logprob: -13.129626274108887
    5. 'else' → logprob: -14.879626274108887
    6. '<|end|>' → logprob: -15.754626274108887
    7. '+=' → logprob: -16.004627227783203
    8. '+

' → logprob: -16.129627227783203
    9. '＋' → logprob: -16.629627227783203
    10. ' -' → logprob: -16.754627227783203

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.745069499127567e-05
    2. ' ' → logprob: -9.37508773803711
    3. '2' → logprob: -12.87508773803711
    4. '10' → logprob: -18.75008773803711
    5. '１' → logprob: -19.25008773803711
    6. '  ' → logprob: -20.12508773803711
    7. '```' → logprob: -20.12508773803711
    8. '100' → logprob: -21.00008773803711
    9. '+' → logprob: -21.00008773803711
    10. '3' → logprob: -21.25008773803711

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.500041007995605
    3. '2' → logprob: -11.250041007995605
    4. '１' → logprob: -17.12504005432129
    5. '  ' → logprob: -17.25004005432129
    6. '10' → logprob: -17.93754005432129
    7. '3' → logprob: -18.12504005432129
    8. '   ' → logprob: -18.50004005432129
    9. '```' → logprob: -18.62504005432129
    10. '7' → logprob: -19.68754005432129

Token 32: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7455039024353027
    2. 'print' → logprob: -1.3705039024353027
    3. '<|end|>' → logprob: -1.9955039024353027
    4. 'else' → logprob: -2.8705039024353027
    5. ':' → logprob: -3.8705039024353027
    6. '\n' → logprob: -4.620503902435303
    7. ')' → logprob: -4.995503902435303
    8. '  
' → logprob: -5.495503902435303
    9. 'elif' → logprob: -5.620503902435303
    10. '```' → logprob: -5.620503902435303

Token 33: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007502152118831873
    2. 'if' → logprob: -5.00750207901001
    3. '<|end|>' → logprob: -8.757502555847168
    4. 'else' → logprob: -8.882502555847168
    5. '
' → logprob: -8.882502555847168
    6. ' print' → logprob: -9.382502555847168
    7. '```' → logprob: -9.382502555847168
    8. 'elif' → logprob: -9.757502555847168
    9. ' if' → logprob: -10.507502555847168
    10. 'for' → logprob: -10.757502555847168

Token 34: ' int' (ID: 677)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.1354915350675583
    2. 'X' → logprob: -2.2604916095733643
    3. ' N' → logprob: -4.010491371154785
    4. 'N' → logprob: -6.135491371154785
    5. ' ' → logprob: -6.385491371154785
    6. ' (' → logprob: -8.385491371154785
    7. ' abs' → logprob: -9.635491371154785
    8. '(' → logprob: -10.385491371154785
    9. '(X' → logprob: -10.385491371154785
    10. 'abs' → logprob: -10.760491371154785

Token 35: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.01762980967760086
    2. '(' → logprob: -4.142629623413086
    3. '(N' → logprob: -6.767629623413086
    4. '((' → logprob: -8.142629623413086
    5. ' (' → logprob: -9.267629623413086
    6. 'X' → logprob: -10.642629623413086
    7. '(x' → logprob: -11.017629623413086
    8. '(A' → logprob: -12.892629623413086
    9. ' X' → logprob: -13.017629623413086
    10. '(round' → logprob: -13.267629623413086

Token 36: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5765059590339661
    2. '*' → logprob: -0.8265059590339661
    3. ')' → logprob: -8.326505661010742
    4. ' /' → logprob: -8.576505661010742
    5. '/' → logprob: -9.326505661010742
    6. ' ' → logprob: -10.201505661010742
    7. ')*' → logprob: -13.201505661010742
    8. '*(' → logprob: -13.576505661010742
    9. '  ' → logprob: -14.076505661010742
    10. ' ' → logprob: -14.201505661010742

Token 37: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17980259656906128
    2. ' ' → logprob: -1.804802656173706
    3. ')' → logprob: -9.804802894592285
    4. '<|end|>' → logprob: -13.554802894592285
    5. '  ' → logprob: -15.304802894592285
    6. '0' → logprob: -15.554802894592285
    7. '.' → logprob: -15.679802894592285
    8. ' )' → logprob: -15.929802894592285
    9. '```' → logprob: -15.929802894592285
    10. '<|end|>' → logprob: -16.42980194091797

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.448370838072151e-05
    2. ' ' → logprob: -9.625094413757324
    3. '.' → logprob: -10.625094413757324
    4. ')' → logprob: -12.875094413757324
    5. '(' → logprob: -14.125094413757324
    6. '0' → logprob: -15.250094413757324
    7. '```' → logprob: -15.875094413757324
    8. '`' → logprob: -16.50009536743164
    9. '   ' → logprob: -16.75009536743164
    10. '*' → logprob: -17.12509536743164

Token 39: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00021772195759695023
    2. ')' → logprob: -8.75021743774414
    3. ' .' → logprob: -11.25021743774414
    4. '0' → logprob: -11.37521743774414
    5. '08' → logprob: -11.50021743774414
    6. ').' → logprob: -12.00021743774414
    7. '<|end|>' → logprob: -12.00021743774414
    8. '.)' → logprob: -12.50021743774414
    9. '<|end|>' → logprob: -13.87521743774414
    10. '1' → logprob: -13.87521743774414

Token 40: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -15.500000953674316
    3. '```' → logprob: -16.0
    4. '1' → logprob: -17.5
    5. '   ' → logprob: -17.6875
    6. ' ' → logprob: -17.8125
    7. '8' → logprob: -18.125
    8. '081' → logprob: -18.5
    9. '07' → logprob: -18.5625
    10. '<' → logprob: -18.875

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006151919718831778
    2. ')==' → logprob: -5.381152153015137
    3. '==' → logprob: -6.631152153015137
    4. ' ==' → logprob: -8.506152153015137
    5. ' )' → logprob: -12.131152153015137
    6. ')>=' → logprob: -13.756152153015137
    7. '）' → logprob: -13.881152153015137
    8. ')>' → logprob: -14.756152153015137
    9. '()' → logprob: -15.131152153015137
    10. ')=' → logprob: -15.506152153015137

Token 42: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4742242693901062
    2. ' ==' → logprob: -0.9742242693901062
    3. '=' → logprob: -9.099224090576172
    4. ')' → logprob: -11.599224090576172
    5. '>=' → logprob: -12.474224090576172
    6. ' =' → logprob: -12.599224090576172
    7. ' ' → logprob: -12.599224090576172
    8. ' ' → logprob: -12.724224090576172
    9. ')==' → logprob: -13.224224090576172
    10. '===' → logprob: -13.224224090576172

Token 43: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6931576728820801
    2. ' N' → logprob: -0.6931576728820801
    3. ' ' → logprob: -12.068157196044922
    4. '	N' → logprob: -12.943157196044922
    5. '<|end|>' → logprob: -13.318157196044922
    6. '  ' → logprob: -15.693157196044922
    7. '   ' → logprob: -15.943157196044922
    8. '>N' → logprob: -16.068157196044922
    9. 'int' → logprob: -16.193157196044922
    10. '<|end|>' → logprob: -16.818157196044922

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00407923199236393
    2. ':
' → logprob: -5.504079341888428
    3. ':

' → logprob: -15.37907886505127
    4. 'print' → logprob: -15.75407886505127
    5. ':
' → logprob: -16.004079818725586
    6. ' :' → logprob: -16.504079818725586
    7. ',' → logprob: -16.629079818725586
    8. ':return' → logprob: -16.879079818725586
    9. ' print' → logprob: -17.254079818725586
    10. '):
' → logprob: -17.504079818725586

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36716291308403015
    2. 'print' → logprob: -1.2421629428863525
    3. ' print' → logprob: -3.9921629428863525
    4. '```' → logprob: -10.242162704467773
    5. '	print' → logprob: -10.492162704467773
    6. '   ' → logprob: -12.242162704467773
    7. '`' → logprob: -12.492162704467773
    8. '       ' → logprob: -12.617162704467773
    9. ' ' → logprob: -13.242162704467773
    10. '``' → logprob: -13.492162704467773

Token 46: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0325924449716695e-05
    2. ' print' → logprob: -11.75001049041748
    3. '   ' → logprob: -13.00001049041748
    4. '```' → logprob: -17.000009536743164
    5. 'pr' → logprob: -17.250009536743164
    6. 'printf' → logprob: -17.750009536743164
    7. 'prit' → logprob: -18.250009536743164
    8. 'Print' → logprob: -18.625009536743164
    9. '	print' → logprob: -18.875009536743164
    10. 'prin' → logprob: -19.750009536743164

Token 47: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.001359997782856226
    2. '(' → logprob: -6.751359939575195
    3. 'X' → logprob: -8.626359939575195
    4. '(x' → logprob: -11.501359939575195
    5. '(int' → logprob: -15.626359939575195
    6. ' (' → logprob: -16.876359939575195
    7. '(A' → logprob: -16.876359939575195
    8. '('' → logprob: -17.251359939575195
    9. '(
' → logprob: -17.501359939575195
    10. '()' → logprob: -17.751359939575195

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026526954025030136
    2. ')
' → logprob: -8.250265121459961
    3. 'else' → logprob: -13.000265121459961
    4. ' )' → logprob: -14.250265121459961
    5. '))' → logprob: -15.500265121459961
    6. '）' → logprob: -15.500265121459961
    7. ')`' → logprob: -16.12526512145996
    8. '0' → logprob: -16.25026512145996
    9. ')
' → logprob: -16.37526512145996
    10. ')#' → logprob: -16.75026512145996

Token 49: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.27099974633893e-05
    2. ' else' → logprob: -11.375012397766113
    3. 'elif' → logprob: -13.625012397766113
    4. '```' → logprob: -17.50001335144043
    5. '_else' → logprob: -17.50001335144043
    6. '#else' → logprob: -18.87501335144043
    7. 'elses' → logprob: -19.87501335144043
    8. 'elser' → logprob: -20.25001335144043
    9. '}else' → logprob: -20.25001335144043
    10. 'Else' → logprob: -20.37501335144043

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012477317359298468
    2. ':
' → logprob: -6.751247882843018
    3. '   ' → logprob: -9.50124740600586
    4. ' :' → logprob: -14.00124740600586
    5. ':
' → logprob: -14.87624740600586
    6. '():
' → logprob: -15.12624740600586
    7. '```' → logprob: -15.87624740600586
    8. '<|end|>' → logprob: -16.00124740600586
    9. '(' → logprob: -16.12624740600586
    10. '():' → logprob: -16.12624740600586

Token 51: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19237689673900604
    2. '   ' → logprob: -2.1923768520355225
    3. 'print' → logprob: -2.8173768520355225
    4. '(-' → logprob: -6.567377090454102
    5. ' -' → logprob: -6.817377090454102
    6. '  ' → logprob: -7.567377090454102
    7. '```' → logprob: -8.692377090454102
    8. ' print' → logprob: -8.817377090454102
    9. '-print' → logprob: -9.567377090454102
    10. '    ' → logprob: -9.817377090454102

Token 52: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5329791903495789
    2. '-' → logprob: -0.9079791903495789
    3. '   ' → logprob: -5.1579790115356445
    4. '(-' → logprob: -6.5329790115356445
    5. ' print' → logprob: -6.5329790115356445
    6. ' -' → logprob: -7.7829790115356445
    7. '```' → logprob: -8.032979011535645
    8. '  ' → logprob: -9.032979011535645
    9. '-print' → logprob: -9.032979011535645
    10. ' ' → logprob: -10.032979011535645

Token 53: '(":' (ID: 40387)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013617542572319508
    2. '(-' → logprob: -4.513617515563965
    3. '("' → logprob: -6.138617515563965
    4. '0' → logprob: -8.513617515563965
    5. '("?' → logprob: -9.388617515563965
    6. '('' → logprob: -9.513617515563965
    7. '('?' → logprob: -10.763617515563965
    8. '("-' → logprob: -12.013617515563965
    9. '(None' → logprob: -12.263617515563965
    10. '()' → logprob: -12.388617515563965

Token 54: '("' (ID: 568)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.42661863565444946
    2. '-' → logprob: -2.1766185760498047
    3. '(":' → logprob: -2.1766185760498047
    4. ':' → logprob: -2.6766185760498047
    5. '"' → logprob: -4.926618576049805
    6. '(' → logprob: -5.551618576049805
    7. ':(' → logprob: -5.676618576049805
    8. '404' → logprob: -5.801618576049805
    9. '(:' → logprob: -5.801618576049805
    10. ' ":' → logprob: -5.801618576049805

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08942151069641113
    2. '<|end|>' → logprob: -2.464421510696411
    3. '
' → logprob: -8.589421272277832
    4. '```' → logprob: -8.964421272277832
    5. '\n' → logprob: -9.589421272277832
    6. '<|end|>' → logprob: -10.714421272277832
    7. ')
' → logprob: -10.714421272277832
    8. '")' → logprob: -10.839421272277832
    9. ' )' → logprob: -12.089421272277832
    10. '')' → logprob: -12.464421272277832


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 53
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 40
Précision stricte (1ère position): 28.30%
Précision adaptée (1ère position): 32.08%
Précision (top 10): 75.47%
================================================================================
