================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur d'entrer un nombre entier, le convertir depuis une chaîne de caractères (input retourne une chaîne) vers un entier
n = int(input())

# Demander à l'utilisateur d'entrer une chaîne de caractères, la stocker dans la variable s
s = input()

# Créer un dictionnaire vide nommé 'hash' qui servira à stocker des couples de chaînes ('red', 'blue') comme clés, et compter leurs occurrences
hash = {}

# La boucle suivante va parcourir tous les entiers possibles de 0 jusqu'à 2^n - 1 en utilisant 'bit' comme variable d'itération
# 1 << n signifie '2 à la puissance n', soit le nombre total de combinaisons binaires sur n bits
for bit in range(1 << n):
    red = ""   # Créer une chaîne vide 'red' qui contiendra certains caractères de 's'
    blue = ""  # Créer une chaîne vide 'blue' qui contiendra d'autres caractères de 's'
    
    # On parcourt chaque position du mot de n caractères, avec la variable 'i' allant de 0 à n - 1
    for i in range(n):
        # Vérifie si le i-ème bit de 'bit' est un (c'est-à-dire égal à 1)
        # (1 << i) crée un nombre qui n'a qu'un seul bit à 1, au rang i (0-based)
        # (bit & (1 << i)) est non-nul si le bit de rang i de 'bit' est à 1
        # > 0 convertit cela en une condition True ou False
        if (bit & (1 << i)) > 0:
            # Le caractère s[i] est ajouté à la chaîne 'red' si le bit est à 1
            red += s[i]
        else:
            # Sinon, le caractère s[i] est ajouté à la chaîne 'blue'
            blue += s[i]
    # On crée un couple (red, blue) et on incrémente de un la valeur associée à cette clé dans le dictionnaire 'hash'
    # hash.get((red, blue), 0) retourne la valeur actuelle, ou 0 si la clé n'existe pas encore
    hash[(red, blue)] = hash.get((red, blue), 0) + 1

# Créer une nouvelle chaîne 't' qui contient la seconde moitié de la chaîne 's' (du n-ième caractère à la fin), inversée
# s[n:] signifie : tous les caractères de s à partir de l'indice n (0-based), jusqu'à la fin
# [::-1] signifie : inverser la chaîne résultante
t = s[n:][::-1]

# Initialiser un compteur 'cnt' à zéro. Il va compter le résultat final.
cnt = 0

# On répète la même méthode d'énumération de toutes les partitions possibles pour la chaîne inversée 't'
for bit in range(1 << n):
    red = ""   # Nouvelle chaîne vide pour 'red'
    blue = ""  # Nouvelle chaîne vide pour 'blue'
    for i in range(n):
        # On utilise le même principe de test de bit pour répartir les caractères de 't' dans 'red' ou 'blue'
        if (bit & (1 << i)) > 0:
            # Ajoute t[i] à 'red' si le i-ème bit de 'bit' est à 1
            red += t[i]
        else:
            # Ajoute t[i] à 'blue' si le bit est à 0
            blue += t[i]
    # Pour chaque partition de la chaîne inversée 't', on cherche dans 'hash' 
    # la clé (blue, red) plutôt que (red, blue), ce qui correspond à échanger les rôles des couleurs
    # La méthode get retourne 0 si la clé n'est pas présente
    cnt += hash.get((blue, red), 0)

# Affiche le résultat final, c'est-à-dire la valeur totale de cnt, dans la sortie standard
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10995493829250336
    2. ' ' → logprob: -2.859954833984375
    3. ':' → logprob: -4.234954833984375
    4. '```' → logprob: -4.984954833984375
    5. ' à' → logprob: -5.484954833984375
    6. ''' → logprob: -5.484954833984375
    7. ' d' → logprob: -6.109954833984375
    8. ' de' → logprob: -6.234954833984375
    9. ' a' → logprob: -6.609954833984375
    10. 's' → logprob: -6.609954833984375

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18355052173137665
    2. 'util' → logprob: -1.933550477027893
    3. 'user' → logprob: -4.1835503578186035
    4. ' l' → logprob: -5.5585503578186035
    5. 'u' → logprob: -5.8085503578186035
    6. 'us' → logprob: -7.4335503578186035
    7. 'un' → logprob: -9.433550834655762
    8. ' user' → logprob: -9.558550834655762
    9. 'input' → logprob: -10.933550834655762
    10. 'client' → logprob: -11.058550834655762

Token 5: ''utilisateur' (ID: 140803)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8029748797416687
    2. ''utilisateur' → logprob: -0.9279748797416687
    3. ' utilisateur' → logprob: -2.5529749393463135
    4. 'u' → logprob: -3.0529749393463135
    5. '’utilisateur' → logprob: -3.8029749393463135
    6. 'a' → logprob: -5.302974700927734
    7. '_util' → logprob: -6.552974700927734
    8. 'user' → logprob: -7.427974700927734
    9. ''' → logprob: -7.552974700927734
    10. ' user' → logprob: -8.427974700927734

Token 6: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2284974306821823
    2. '_' → logprob: -1.9784973859786987
    3. 's' → logprob: -3.3534975051879883
    4. ' )' → logprob: -5.228497505187988
    5. ' a' → logprob: -5.353497505187988
    6. ' input' → logprob: -5.478497505187988
    7. 'input' → logprob: -6.103497505187988
    8. ' d' → logprob: -6.478497505187988
    9. ''' → logprob: -6.603497505187988
    10. '   ' → logprob: -6.853497505187988

Token 7: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06404297053813934
    2. ''' → logprob: -3.1890430450439453
    3. '_' → logprob: -4.564043045043945
    4. ''entrée' → logprob: -5.439043045043945
    5. 'entr' → logprob: -6.689043045043945
    6. 'é' → logprob: -6.939043045043945
    7. 'a' → logprob: -7.189043045043945
    8. ''ent' → logprob: -7.814043045043945
    9. 'entrée' → logprob: -7.939043045043945
    10. 'u' → logprob: -8.064043045043945

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.02164224162697792
    2. 'entrée' → logprob: -4.396642208099365
    3. 'ent' → logprob: -5.021642208099365
    4. 's' → logprob: -6.896642208099365
    5. 'entre' → logprob: -8.021642684936523
    6. 'enter' → logprob: -8.396642684936523
    7. 'input' → logprob: -8.521642684936523
    8. 'identifier' → logprob: -8.771642684936523
    9. 'entra' → logprob: -9.521642684936523
    10. '```' → logprob: -9.521642684936523

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00018494461255613714
    2. 'e' → logprob: -9.375185012817383
    3. 'é' → logprob: -9.750185012817383
    4. 'éer' → logprob: -10.875185012817383
    5. 'ée' → logprob: -11.250185012817383
    6. 'eer' → logprob: -12.500185012817383
    7. 'erer' → logprob: -13.250185012817383
    8. '```' → logprob: -14.375185012817383
    9. 'érer' → logprob: -14.500185012817383
    10. 'er's' → logprob: -14.625185012817383

Token 10: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013902324251830578
    2. '_' → logprob: -5.388902187347412
    3. ''' → logprob: -6.013902187347412
    4. ' un' → logprob: -6.013902187347412
    5. ' u' → logprob: -7.138902187347412
    6. '  ' → logprob: -7.138902187347412
    7. ' a' → logprob: -8.26390266418457
    8. '`' → logprob: -8.38890266418457
    9. ' ,' → logprob: -8.38890266418457
    10. 'u' → logprob: -8.51390266418457

Token 11: ' nombre' (ID: 9733)
  Prédit: ' nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nom' → logprob: -1.384101152420044
    2. 'nom' → logprob: -1.759101152420044
    3. ' ' → logprob: -1.884101152420044
    4. ' espace' → logprob: -1.884101152420044
    5. 'nombre' → logprob: -3.259101152420044
    6. 'texte' → logprob: -3.634101152420044
    7. 'e' → logprob: -3.634101152420044
    8. '_' → logprob: -3.634101152420044
    9. 'n' → logprob: -3.759101152420044
    10. 'a' → logprob: -3.759101152420044

Token 12: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.021752238273620605
    2. 'x' → logprob: -5.27175235748291
    3. 'nombre' → logprob: -5.39675235748291
    4. '_' → logprob: -5.64675235748291
    5. 'i' → logprob: -5.77175235748291
    6. '`' → logprob: -6.89675235748291
    7. '#' → logprob: -7.27175235748291
    8. 'input' → logprob: -7.39675235748291
    9. '```' → logprob: -7.39675235748291
    10. 'u' → logprob: -7.64675235748291

Token 13: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008975337259471416
    2. 'nombre' → logprob: -5.633975505828857
    3. 'x' → logprob: -6.008975505828857
    4. 'i' → logprob: -7.258975505828857
    5. '\n' → logprob: -7.383975505828857
    6. 'input' → logprob: -7.883975505828857
    7. '\' → logprob: -8.1339750289917
    8. '#' → logprob: -8.6339750289917
    9. '```' → logprob: -8.8839750289917
    10. '`' → logprob: -9.1339750289917

Token 14: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2497987598180771
    2. ' n' → logprob: -2.6247987747192383
    3. ' ' → logprob: -2.9997987747192383
    4. 'input' → logprob: -3.8747987747192383
    5. 'num' → logprob: -4.374798774719238
    6. 'nombre' → logprob: -4.499798774719238
    7. 'x' → logprob: -4.749798774719238
    8. 'ent' → logprob: -4.874798774719238
    9. ' input' → logprob: -4.874798774719238
    10. 's' → logprob: -4.999798774719238

Token 15: ' convertir' (ID: 79223)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.9374510645866394
    2. 'n' → logprob: -1.4374511241912842
    3. ' nombre' → logprob: -1.4374511241912842
    4. ' code' → logprob: -3.812451124191284
    5. ' saisir' → logprob: -3.812451124191284
    6. 's' → logprob: -4.437450885772705
    7. ' continuer' → logprob: -4.562450885772705
    8. ' convertir' → logprob: -4.812450885772705
    9. ' input' → logprob: -4.937450885772705
    10. 'r' → logprob: -5.312450885772705

Token 16: ' depuis' (ID: 16277)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26737096905708313
    2. '_' → logprob: -1.5173709392547607
    3. '(' → logprob: -6.26737117767334
    4. ''' → logprob: -6.26737117767334
    5. 's' → logprob: -6.39237117767334
    6. '```' → logprob: -6.76737117767334
    7. ',' → logprob: -7.01737117767334
    8. ' )' → logprob: -7.39237117767334
    9. 'u' → logprob: -7.51737117767334
    10. ' _' → logprob: -7.51737117767334

Token 17: ' une' (ID: 2463)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6353925466537476
    2. 'input' → logprob: -0.8853925466537476
    3. 'l' → logprob: -3.760392665863037
    4. 'une' → logprob: -4.635392665863037
    5. ' l' → logprob: -5.260392665863037
    6. 'int' → logprob: -5.635392665863037
    7. 'str' → logprob: -5.760392665863037
    8. '=input' → logprob: -6.010392665863037
    9. 'string' → logprob: -6.260392665863037
    10. 'la' → logprob: -6.385392665863037

Token 18: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.15835829079151154
    2. 'chaine' → logprob: -2.408358335494995
    3. ' chaine' → logprob: -4.158358097076416
    4. ' input' → logprob: -4.533358097076416
    5. 'string' → logprob: -4.783358097076416
    6. ' string' → logprob: -4.783358097076416
    7. 's' → logprob: -5.408358097076416
    8. ' ' → logprob: -5.908358097076416
    9. 'entrée' → logprob: -6.033358097076416
    10. 'input' → logprob: -6.408358097076416

Token 19: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7439441084861755
    2. 'n' → logprob: -1.9939441680908203
    3. 'e' → logprob: -2.8689441680908203
    4. 'i' → logprob: -3.1189441680908203
    5. 'input' → logprob: -3.1189441680908203
    6. '`' → logprob: -3.3689441680908203
    7. ':' → logprob: -3.3689441680908203
    8. '=' → logprob: -3.6189441680908203
    9. '.' → logprob: -3.7439441680908203
    10. '_' → logprob: -3.8689441680908203

Token 20: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.013972028158605099
    2. ' caractères' → logprob: -4.51397180557251
    3. 'texte' → logprob: -6.26397180557251
    4. '#' → logprob: -7.76397180557251
    5. 'entrée' → logprob: -7.76397180557251
    6. 's' → logprob: -10.263972282409668
    7. ' caracteres' → logprob: -11.013972282409668
    8. ' caract' → logprob: -11.138972282409668
    9. 'str' → logprob: -11.513972282409668
    10. 'text' → logprob: -11.513972282409668

Token 21: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.052848007529973984
    2. 'i' → logprob: -3.4278481006622314
    3. 'x' → logprob: -4.802847862243652
    4. 'input' → logprob: -5.927847862243652
    5. 'e' → logprob: -6.302847862243652
    6. 'nombre' → logprob: -6.802847862243652
    7. '(' → logprob: -6.927847862243652
    8. '`' → logprob: -7.177847862243652
    9. '=' → logprob: -7.552847862243652
    10. 'a' → logprob: -7.677847862243652

Token 22: 'input' (ID: 2586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46790429949760437
    2. 'input' → logprob: -1.0929043292999268
    3. ' input' → logprob: -4.842904090881348
    4. ' )' → logprob: -4.842904090881348
    5. '`)' → logprob: -5.092904090881348
    6. 'ent' → logprob: -5.592904090881348
    7. '),' → logprob: -5.717904090881348
    8. '")' → logprob: -6.217904090881348
    9. 'int' → logprob: -6.342904090881348
    10. '')' → logprob: -6.467904090881348

Token 23: ' retourne' (ID: 178818)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015364529564976692
    2. '()' → logprob: -4.390364646911621
    3. '(' → logprob: -7.140364646911621
    4. '')' → logprob: -7.390364646911621
    5. '())' → logprob: -7.640364646911621
    6. '`)' → logprob: -8.140364646911621
    7. '")' → logprob: -8.390364646911621
    8. '('' → logprob: -8.765364646911621
    9. ' )' → logprob: -9.515364646911621
    10. '))' → logprob: -10.390364646911621

Token 24: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.3223634958267212
    2. ' un' → logprob: -1.5723634958267212
    3. 'une' → logprob: -3.9473633766174316
    4. ')' → logprob: -4.322363376617432
    5. ''' → logprob: -4.947363376617432
    6. ''un' → logprob: -5.072363376617432
    7. ''une' → logprob: -5.197363376617432
    8. 'un' → logprob: -5.322363376617432
    9. ' ' → logprob: -6.197363376617432
    10. ' ' → logprob: -6.197363376617432

Token 25: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.23977766931056976
    2. 'chaine' → logprob: -2.6147775650024414
    3. 'string' → logprob: -2.8647775650024414
    4. ' string' → logprob: -3.7397775650024414
    5. 'ent' → logprob: -4.239777565002441
    6. ' chaine' → logprob: -4.489777565002441
    7. 'nombre' → logprob: -4.864777565002441
    8. 'str' → logprob: -4.989777565002441
    9. 's' → logprob: -5.489777565002441
    10. 'int' → logprob: -5.739777565002441

Token 26: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041611455380916595
    2. ' )' → logprob: -6.004161357879639
    3. '')' → logprob: -7.129161357879639
    4. '")' → logprob: -7.879161357879639
    5. '`)' → logprob: -8.25416088104248
    6. 'e' → logprob: -10.25416088104248
    7. 's' → logprob: -10.75416088104248
    8. '),' → logprob: -10.87916088104248
    9. '(' → logprob: -11.00416088104248
    10. ').' → logprob: -11.12916088104248

Token 27: ' vers' (ID: 3640)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012219296768307686
    2. 'nombre' → logprob: -4.887219429016113
    3. 'x' → logprob: -6.137219429016113
    4. '#' → logprob: -7.012219429016113
    5. 'i' → logprob: -7.637219429016113
    6. '```' → logprob: -8.387219429016113
    7. 'e' → logprob: -8.887219429016113
    8. 'num' → logprob: -9.012219429016113
    9. '`' → logprob: -9.012219429016113
    10. 'number' → logprob: -9.887219429016113

Token 28: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.34732502698898315
    2. 'un' → logprob: -1.722325086593628
    3. 'int' → logprob: -2.347325086593628
    4. ' int' → logprob: -4.222324848175049
    5. 'ent' → logprob: -5.847324848175049
    6. ' entier' → logprob: -6.972324848175049
    7. 'une' → logprob: -8.597325325012207
    8. ' une' → logprob: -9.097325325012207
    9. ' ' → logprob: -9.347325325012207
    10. '```' → logprob: -9.597325325012207

Token 29: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.9954028129577637
    2. ' nombre' → logprob: -1.1204028129577637
    3. ' ' → logprob: -1.8704028129577637
    4. 'ent' → logprob: -2.7454028129577637
    5. 'nombre' → logprob: -2.8704028129577637
    6. 'int' → logprob: -4.620402812957764
    7. ' int' → logprob: -4.745402812957764
    8. ' espace' → logprob: -5.245402812957764
    9. '```' → logprob: -6.995402812957764
    10. ' type' → logprob: -7.245402812957764

Token 30: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.062087006866931915
    2. 'i' → logprob: -3.437087059020996
    3. 'x' → logprob: -3.937087059020996
    4. 'nombre' → logprob: -5.812087059020996
    5. 'e' → logprob: -6.312087059020996
    6. '=' → logprob: -7.187087059020996
    7. 'a' → logprob: -7.562087059020996
    8. '#' → logprob: -7.812087059020996
    9. '```' → logprob: -7.812087059020996
    10. ':' → logprob: -8.312087059020996

Token 31: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06167161837220192
    2. 'x' → logprob: -3.686671733856201
    3. 'nombre' → logprob: -3.686671733856201
    4. ':' → logprob: -6.061671733856201
    5. '```' → logprob: -6.561671733856201
    6. 'i' → logprob: -6.561671733856201
    7. 'a' → logprob: -7.061671733856201
    8. ',' → logprob: -7.436671733856201
    9. '#' → logprob: -7.561671733856201
    10. 'ent' → logprob: -7.936671733856201

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602572351694107
    2. '=' → logprob: -1.9102572202682495
    3. ' ' → logprob: -11.160257339477539
    4. ',' → logprob: -11.785257339477539
    5. '=input' → logprob: -12.285257339477539
    6. '=int' → logprob: -13.035257339477539
    7. '_' → logprob: -13.410257339477539
    8. '.' → logprob: -14.285257339477539
    9. 'space' → logprob: -14.410257339477539
    10. ')' → logprob: -15.035257339477539

Token 33: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12693357467651367
    2. 'int' → logprob: -2.1269335746765137
    3. ' input' → logprob: -12.751934051513672
    4. 'input' → logprob: -13.251934051513672
    5. '=int' → logprob: -14.626934051513672
    6. ' ' → logprob: -15.751934051513672
    7. ' ' → logprob: -15.751934051513672
    8. '[int' → logprob: -16.626934051513672
    9. '<int' → logprob: -16.751934051513672
    10. '(int' → logprob: -17.126934051513672

Token 34: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03808362036943436
    2. '(' → logprob: -3.288083553314209
    3. ' (' → logprob: -10.163084030151367
    4. 'input' → logprob: -13.038084030151367
    5. '(
' → logprob: -14.538084030151367
    6. '('' → logprob: -15.538084030151367
    7. '(

' → logprob: -15.538084030151367
    8. '()' → logprob: -15.663084030151367
    9. '=input' → logprob: -16.288084030151367
    10. '<input' → logprob: -16.913084030151367

Token 35: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5530015230178833
    2. '()' → logprob: -1.1780015230178833
    3. '('' → logprob: -3.3030014038085938
    4. '("("' → logprob: -3.3030014038085938
    5. '())' → logprob: -3.4280014038085938
    6. '("' → logprob: -4.928001403808594
    7. '(""))' → logprob: -6.303001403808594
    8. '("")' → logprob: -6.553001403808594
    9. ')' → logprob: -8.928001403808594
    10. '(">' → logprob: -9.928001403808594

Token 36: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4979400038719177
    2. '*' → logprob: -1.7479400634765625
    3. ')' → logprob: -2.3729400634765625
    4. '#' → logprob: -2.9979400634765625
    5. ' ' → logprob: -3.8729400634765625
    6. '
' → logprob: -4.2479400634765625
    7. '\' → logprob: -4.4979400634765625
    8. '+
' → logprob: -4.9979400634765625
    9. '\n' → logprob: -5.7479400634765625
    10. ' *' → logprob: -5.8729400634765625

Token 37: ' Dem' (ID: 9458)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4235183894634247
    2. ' if' → logprob: -1.173518419265747
    3. '#' → logprob: -4.048518180847168
    4. 'print' → logprob: -4.923518180847168
    5. 'factor' → logprob: -4.923518180847168
    6. 'for' → logprob: -7.298518180847168
    7. 'n' → logprob: -7.298518180847168
    8. 's' → logprob: -7.548518180847168
    9. ' #' → logprob: -7.673518180847168
    10. 'Si' → logprob: -8.298518180847168

Token 38: 'ander' (ID: 9330)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4806221723556519
    2. 'ander' → logprob: -1.4806221723556519
    3. 'and' → logprob: -1.7306221723556519
    4. 'a' → logprob: -2.1056222915649414
    5. 'andez' → logprob: -2.1056222915649414
    6. 'ande' → logprob: -3.4806222915649414
    7. 'e' → logprob: -4.105622291564941
    8. 'print' → logprob: -4.480622291564941
    9. 'ar' → logprob: -4.605622291564941
    10. 'ager' → logprob: -4.605622291564941

Token 39: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47860342264175415
    2. ' à' → logprob: -1.7286033630371094
    3. '(' → logprob: -1.9786033630371094
    4. '("' → logprob: -4.103603363037109
    5. '()' → logprob: -4.353603363037109
    6. '  ' → logprob: -4.978603363037109
    7. 'à' → logprob: -5.103603363037109
    8. '_' → logprob: -5.978603363037109
    9. ')' → logprob: -5.978603363037109
    10. ' (' → logprob: -6.228603363037109

Token 40: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3535543978214264
    2. 'l' → logprob: -1.353554368019104
    3. ' un' → logprob: -4.1035542488098145
    4. ' ' → logprob: -5.2285542488098145
    5. ' une' → logprob: -5.3535542488098145
    6. ' n' → logprob: -5.4785542488098145
    7. 'une' → logprob: -6.1035542488098145
    8. 'un' → logprob: -6.3535542488098145
    9. ' la' → logprob: -7.1035542488098145
    10. 'user' → logprob: -7.4785542488098145

Token 41: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.003170226002112031
    2. ''' → logprob: -6.128170013427734
    3. '’utilisateur' → logprob: -7.503170013427734
    4. ' utilisateur' → logprob: -9.378170013427734
    5. ''user' → logprob: -9.503170013427734
    6. ''util' → logprob: -9.503170013427734
    7. 'a' → logprob: -9.753170013427734
    8. 'u' → logprob: -10.253170013427734
    9. ' user' → logprob: -11.378170013427734
    10. ''autre' → logprob: -12.003170013427734

Token 42: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.37367087602615356
    2. '(' → logprob: -1.2486708164215088
    3. ')' → logprob: -5.373671054840088
    4. '("' → logprob: -5.498671054840088
    5. ' d' → logprob: -5.748671054840088
    6. ' de' → logprob: -6.123671054840088
    7. ' (' → logprob: -6.748671054840088
    8. ' ()' → logprob: -6.873671054840088
    9. '('' → logprob: -6.998671054840088
    10. '#' → logprob: -7.123671054840088

Token 43: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5911996960639954
    2. ''entrée' → logprob: -1.3411996364593506
    3. ''aff' → logprob: -2.5911996364593506
    4. 'e' → logprob: -2.7161996364593506
    5. ''é' → logprob: -4.34119987487793
    6. ''ent' → logprob: -5.21619987487793
    7. 'a' → logprob: -5.71619987487793
    8. ''utilisateur' → logprob: -6.34119987487793
    9. ''ex' → logprob: -6.46619987487793
    10. ''entre' → logprob: -6.59119987487793

Token 44: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.049732375890016556
    2. ''' → logprob: -4.299732208251953
    3. 'aff' → logprob: -4.299732208251953
    4. 'entrée' → logprob: -4.799732208251953
    5. ''aff' → logprob: -6.674732208251953
    6. 'é' → logprob: -6.799732208251953
    7. 'contin' → logprob: -6.924732208251953
    8. 'ent' → logprob: -7.174732208251953
    9. ''entrée' → logprob: -7.424732208251953
    10. '')' → logprob: -7.549732208251953

Token 45: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.000454506283858791
    2. 'trer' → logprob: -7.875454425811768
    3. ' er' → logprob: -10.750454902648926
    4. 'ter' → logprob: -11.125454902648926
    5. ''er' → logprob: -11.750454902648926
    6. 'éer' → logprob: -11.875454902648926
    7. 'e' → logprob: -12.500454902648926
    8. 'rer' → logprob: -12.500454902648926
    9. 'érer' → logprob: -12.625454902648926
    10. 'er's' → logprob: -12.625454902648926

Token 46: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.36149632930755615
    2. '(' → logprob: -2.3614964485168457
    3. ' ' → logprob: -2.4864964485168457
    4. '()' → logprob: -2.8614964485168457
    5. 'un' → logprob: -3.6114964485168457
    6. '  ' → logprob: -4.611496448516846
    7. ' (' → logprob: -4.986496448516846
    8. '("' → logprob: -5.736496448516846
    9. 'a' → logprob: -5.861496448516846
    10. ')' → logprob: -6.236496448516846

Token 47: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -1.1240841150283813
    2. ' phrase' → logprob: -1.6240841150283813
    3. 'chaine' → logprob: -1.6240841150283813
    4. 'phrase' → logprob: -2.374083995819092
    5. ' autre' → logprob: -2.749083995819092
    6. ' valeur' → logprob: -4.249083995819092
    7. ' deuxième' → logprob: -4.374083995819092
    8. 'val' → logprob: -4.624083995819092
    9. ' chaine' → logprob: -4.624083995819092
    10. 'cha' → logprob: -4.624083995819092

Token 48: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7063028812408447
    2. 'user' → logprob: -1.9563028812408447
    3. 'chaine' → logprob: -1.9563028812408447
    4. 'texte' → logprob: -2.4563028812408447
    5. '()' → logprob: -2.7063028812408447
    6. 'text' → logprob: -4.081302642822266
    7. 'input' → logprob: -4.081302642822266
    8. 'message' → logprob: -4.081302642822266
    9. 'string' → logprob: -5.456302642822266
    10. 'txt' → logprob: -5.706302642822266

Token 49: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4290170967578888
    2. ' caractères' → logprob: -1.0540170669555664
    3. ' caract' → logprob: -9.429017066955566
    4. ' caracteres' → logprob: -9.679017066955566
    5. ' caractère' → logprob: -9.804017066955566
    6. ' ' → logprob: -9.929017066955566
    7. ' car' → logprob: -11.304017066955566
    8. 'c' → logprob: -11.304017066955566
    9. 'texte' → logprob: -11.554017066955566
    10. '#' → logprob: -11.554017066955566

Token 50: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.286577045917511
    2. 'chaine' → logprob: -1.7865769863128662
    3. 'user' → logprob: -2.661576986312866
    4. 'str' → logprob: -5.411577224731445
    5. 'texte' → logprob: -5.786577224731445
    6. 'nom' → logprob: -6.661577224731445
    7. 'text' → logprob: -7.036577224731445
    8. 'name' → logprob: -7.661577224731445
    9. 'string' → logprob: -7.786577224731445
    10. 'input' → logprob: -7.786577224731445

Token 51: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08608593046665192
    2. ' s' → logprob: -3.4610860347747803
    3. 'chaine' → logprob: -3.5860860347747803
    4. 'texte' → logprob: -4.336085796356201
    5. 'nom' → logprob: -5.336085796356201
    6. 'str' → logprob: -6.336085796356201
    7. 'text' → logprob: -6.961085796356201
    8. ' chaine' → logprob: -7.461085796356201
    9. 'name' → logprob: -7.711085796356201
    10. 'prenom' → logprob: -7.836085796356201

Token 52: ' stock' (ID: 6546)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2571594715118408
    2. 'print' → logprob: -1.5071594715118408
    3. 'chaine' → logprob: -1.5071594715118408
    4. 'str' → logprob: -2.882159471511841
    5. 'nom' → logprob: -3.257159471511841
    6. 'name' → logprob: -3.382159471511841
    7. 'string' → logprob: -3.757159471511841
    8. 'aff' → logprob: -4.382159233093262
    9. 'n' → logprob: -4.632159233093262
    10. 'strip' → logprob: -5.007159233093262

Token 53: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.002347934525460005
    2. 'age' → logprob: -6.752347946166992
    3. 'ée' → logprob: -7.127347946166992
    4. 'r' → logprob: -8.502347946166992
    5. 'e' → logprob: -10.002347946166992
    6. 'é' → logprob: -10.502347946166992
    7. 'ant' → logprob: -10.502347946166992
    8. '=' → logprob: -10.627347946166992
    9. ' =' → logprob: -10.752347946166992
    10. '_' → logprob: -12.627347946166992

Token 54: ' dans' (ID: 2671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13067527115345
    2. 'chaine' → logprob: -2.3806753158569336
    3. 'user' → logprob: -3.7556753158569336
    4. 'nom' → logprob: -6.130675315856934
    5. 'str' → logprob: -6.255675315856934
    6. 'name' → logprob: -7.005675315856934
    7. 'texte' → logprob: -7.380675315856934
    8. 'string' → logprob: -7.505675315856934
    9. 'text' → logprob: -8.380675315856934
    10. 'txt' → logprob: -9.755675315856934

Token 55: ' la' (ID: 557)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.7852696776390076
    2. 's' → logprob: -0.9102696776390076
    3. 'une' → logprob: -2.5352697372436523
    4. 'user' → logprob: -4.035269737243652
    5. 'texte' → logprob: -5.035269737243652
    6. 'variable' → logprob: -5.160269737243652
    7. 'nom' → logprob: -5.285269737243652
    8. 'text' → logprob: -5.660269737243652
    9. ' s' → logprob: -5.660269737243652
    10. 'string' → logprob: -5.785269737243652

Token 56: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.16473570466041565
    2. 'variable' → logprob: -1.9147356748580933
    3. 'chaine' → logprob: -6.039735794067383
    4. 's' → logprob: -7.039735794067383
    5. 'var' → logprob: -7.414735794067383
    6. 'string' → logprob: -9.039735794067383
    7. ' s' → logprob: -9.164735794067383
    8. ' var' → logprob: -9.289735794067383
    9. ' ' → logprob: -9.414735794067383
    10. ' string' → logprob: -9.789735794067383

Token 57: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07269507646560669
    2. 'chaine' → logprob: -3.072695016860962
    3. 'texte' → logprob: -4.947695255279541
    4. 'nom' → logprob: -5.072695255279541
    5. 'text' → logprob: -5.072695255279541
    6. 'user' → logprob: -6.447695255279541
    7. 'name' → logprob: -7.197695255279541
    8. ' s' → logprob: -7.447695255279541
    9. 'string' → logprob: -8.072694778442383
    10. '```' → logprob: -8.197694778442383

Token 58: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -4.60414821645827e-06
    2. ' s' → logprob: -12.375004768371582
    3. '_s' → logprob: -15.500004768371582
    4. '```' → logprob: -16.250003814697266
    5. '`s' → logprob: -18.000003814697266
    6. ' ' → logprob: -18.250003814697266
    7. ''s' → logprob: -18.875003814697266
    8. '<|end|>' → logprob: -19.000003814697266
    9. ' =' → logprob: -19.125003814697266
    10. ',' → logprob: -19.375003814697266

Token 59: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.2729995988775045e-06
    2. ' s' → logprob: -12.000006675720215
    3. '`s' → logprob: -17.8750057220459
    4. '_s' → logprob: -18.3750057220459
    5. '```' → logprob: -19.1250057220459
    6. '`' → logprob: -22.8750057220459
    7. '.s' → logprob: -22.8750057220459
    8. ''s' → logprob: -22.8750057220459
    9. 'str' → logprob: -23.3750057220459
    10. '	s' → logprob: -23.6250057220459

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005933417472988367
    2. '=' → logprob: -5.1309332847595215
    3. 's' → logprob: -12.38093376159668
    4. ' ' → logprob: -15.50593376159668
    5. ' ' → logprob: -16.00593376159668
    6. '=input' → logprob: -16.13093376159668
    7. '_' → logprob: -16.75593376159668
    8. ',' → logprob: -17.75593376159668
    9. ' =
' → logprob: -17.88093376159668
    10. ' s' → logprob: -17.88093376159668

Token 61: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12692947685718536
    2. 'input' → logprob: -2.126929521560669
    3. '=input' → logprob: -14.25192928314209
    4. '(input' → logprob: -14.87692928314209
    5. ' ' → logprob: -15.37692928314209
    6. '	input' → logprob: -16.876930236816406
    7. ' ' → logprob: -17.001930236816406
    8. '<input' → logprob: -17.501930236816406
    9. 's' → logprob: -17.751930236816406
    10. 'str' → logprob: -17.876930236816406

Token 62: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010522229131311178
    2. '(' → logprob: -6.876052379608154
    3. ' ()' → logprob: -11.501051902770996
    4. '())' → logprob: -13.001051902770996
    5. '()`' → logprob: -13.251051902770996
    6. '()

' → logprob: -13.626051902770996
    7. '()]' → logprob: -13.876051902770996
    8. '();' → logprob: -14.751051902770996
    9. '()>' → logprob: -15.126051902770996
    10. ')' → logprob: -15.251051902770996

Token 63: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9283396601676941
    2. '#' → logprob: -1.0533397197723389
    3. 'if' → logprob: -2.303339719772339
    4. 'n' → logprob: -2.803339719772339
    5. 'print' → logprob: -3.803339719772339
    6. '\n' → logprob: -3.928339719772339
    7. ' 
' → logprob: -4.17833948135376
    8. '<|end|>' → logprob: -4.92833948135376
    9. 'i' → logprob: -5.17833948135376
    10. '[' → logprob: -5.55333948135376

Token 64: ' Cr' (ID: 5790)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8429468274116516
    2. '#' → logprob: -1.0929467678070068
    3. 'if' → logprob: -1.5929467678070068
    4. 'result' → logprob: -4.217947006225586
    5. 'for' → logprob: -4.342947006225586
    6. ' if' → logprob: -6.592947006225586
    7. 'n' → logprob: -8.092947006225586
    8. 'length' → logprob: -8.217947006225586
    9. 'sum' → logprob: -8.342947006225586
    10. ' print' → logprob: -8.592947006225586

Token 65: 'éer' (ID: 83012)
  Prédit: 'éer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.015212849713861942
    2. 'ée' → logprob: -5.1402130126953125
    3. 'om' → logprob: -6.0152130126953125
    4. 'é' → logprob: -6.2652130126953125
    5. 'e' → logprob: -6.6402130126953125
    6. 'eer' → logprob: -7.7652130126953125
    7. 'omp' → logprob: -8.140213012695312
    8. 'on' → logprob: -8.390213012695312
    9. 'éal' → logprob: -8.390213012695312
    10. '#' → logprob: -8.390213012695312

Token 66: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4925893545150757
    2. ' ' → logprob: -1.7425893545150757
    3. '_' → logprob: -2.4925894737243652
    4. ' un' → logprob: -3.2425894737243652
    5. 'une' → logprob: -3.4925894737243652
    6. ' a' → logprob: -4.117589473724365
    7. 'a' → logprob: -4.242589473724365
    8. '()' → logprob: -4.492589473724365
    9. '#' → logprob: -4.867589473724365
    10. ' =' → logprob: -5.617589473724365

Token 67: ' diction' (ID: 155259)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.30259788036346436
    2. 'a' → logprob: -2.927597999572754
    3. 't' → logprob: -3.802597999572754
    4. ' tableau' → logprob: -3.927597999572754
    5. 'es' → logprob: -4.052597999572754
    6. 'liste' → logprob: -4.302597999572754
    7. ' =' → logprob: -4.552597999572754
    8. '#' → logprob: -4.677597999572754
    9. 'd' → logprob: -4.677597999572754
    10. 's' → logprob: -4.927597999572754

Token 68: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.3148151636123657
    2. 'aire' → logprob: -1.3148151636123657
    3. 'ary' → logprob: -7.064815044403076
    4. 'a' → logprob: -8.064815521240234
    5. 'ar' → logprob: -9.189815521240234
    6. 'er' → logprob: -9.814815521240234
    7. 'airie' → logprob: -9.814815521240234
    8. 'air' → logprob: -10.064815521240234
    9. '{' → logprob: -10.189815521240234
    10. '{}' → logprob: -10.564815521240234

Token 69: ' vide' (ID: 21835)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.047539278864860535
    2. 'dict' → logprob: -3.922539234161377
    3. ' d' → logprob: -4.047539234161377
    4. '{' → logprob: -5.297539234161377
    5. ' =' → logprob: -6.797539234161377
    6. 'my' → logprob: -7.047539234161377
    7. 's' → logprob: -7.922539234161377
    8. '{}' → logprob: -7.922539234161377
    9. 'dictionary' → logprob: -8.047539710998535
    10. 'D' → logprob: -8.672539710998535

Token 70: ' nommé' (ID: 149888)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.010054253041744232
    2. 'dict' → logprob: -4.635054111480713
    3. '{' → logprob: -8.885054588317871
    4. 'dictionary' → logprob: -10.010054588317871
    5. 'dic' → logprob: -10.260054588317871
    6. '{}' → logprob: -10.385054588317871
    7. ' d' → logprob: -10.510054588317871
    8. 'my' → logprob: -12.260054588317871
    9. 'di' → logprob: -12.510054588317871
    10. '```' → logprob: -12.635054588317871

Token 71: ' '' (ID: 461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004808653611689806
    2. 'mon' → logprob: -6.12980842590332
    3. 'dict' → logprob: -6.50480842590332
    4. 'result' → logprob: -8.25480842590332
    5. 'counts' → logprob: -8.25480842590332
    6. ' d' → logprob: -8.62980842590332
    7. 'data' → logprob: -9.25480842590332
    8. 'my' → logprob: -9.50480842590332
    9. '```' → logprob: -9.75480842590332
    10. 'count' → logprob: -10.00480842590332

Token 72: 'hash' (ID: 16909)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02098769322037697
    2. 'dict' → logprob: -5.020987510681152
    3. 'mon' → logprob: -5.270987510681152
    4. 'counts' → logprob: -6.020987510681152
    5. 'fre' → logprob: -6.520987510681152
    6. 'freq' → logprob: -6.520987510681152
    7. 'result' → logprob: -7.020987510681152
    8. 'comp' → logprob: -7.895987510681152
    9. 'data' → logprob: -7.895987510681152
    10. 'my' → logprob: -8.145987510681152

Token 73: ''' (ID: 6)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.06858384609222412
    2. 'map' → logprob: -3.4435839653015137
    3. '_table' → logprob: -3.8185839653015137
    4. '_' → logprob: -4.568583965301514
    5. 'es' → logprob: -6.943583965301514
    6. '_dict' → logprob: -7.818583965301514
    7. '_d' → logprob: -9.193583488464355
    8. 'd' → logprob: -9.193583488464355
    9. 'Map' → logprob: -9.443583488464355
    10. 'ing' → logprob: -9.568583488464355

Token 74: ' qui' (ID: 2780)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.1210564374923706
    2. ' =' → logprob: -2.49605655670166
    3. ' hash' → logprob: -3.62105655670166
    4. '_hash' → logprob: -5.99605655670166
    5. '=' → logprob: -7.49605655670166
    6. '{' → logprob: -7.87105655670166
    7. ' ' → logprob: -8.49605655670166
    8. '	hash' → logprob: -8.74605655670166
    9. '(hash' → logprob: -8.99605655670166
    10. '
' → logprob: -9.12105655670166

Token 75: ' serv' (ID: 2096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4460241794586182
    2. 's' → logprob: -2.071024179458618
    3. '=' → logprob: -2.821024179458618
    4. ' sera' → logprob: -2.821024179458618
    5. ':' → logprob: -3.071024179458618
    6. 'cont' → logprob: -3.196024179458618
    7. ' permettra' → logprob: -3.446024179458618
    8. ' contient' → logprob: -3.446024179458618
    9. '<|end|>' → logprob: -3.821024179458618
    10. ')' → logprob: -3.946024179458618

Token 76: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.00019150081789121032
    2. 'ra' → logprob: -8.875191688537598
    3. 'ir' → logprob: -10.375191688537598
    4. 'irà' → logprob: -11.625191688537598
    5. 'era' → logprob: -12.250191688537598
    6. '#' → logprob: -12.875191688537598
    7. 'a' → logprob: -13.625191688537598
    8. 'e' → logprob: -14.250191688537598
    9. 'irá' → logprob: -14.375191688537598
    10. 'it' → logprob: -14.500191688537598

Token 77: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.19567906856536865
    2. ' as' → logprob: -3.445679187774658
    3. ' de' → logprob: -3.570679187774658
    4. ' ' → logprob: -3.695679187774658
    5. ' a' → logprob: -3.820679187774658
    6. 'à' → logprob: -4.320679187774658
    7. 's' → logprob: -4.820679187774658
    8. 'a' → logprob: -4.945679187774658
    9. '<|end|>' → logprob: -5.195679187774658
    10. 'de' → logprob: -5.570679187774658

Token 78: ' stock' (ID: 6546)
  Prédit: ' compter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.10705160349607468
    2. 'stock' → logprob: -3.2320516109466553
    3. ' stock' → logprob: -3.4820516109466553
    4. '<|end|>' → logprob: -4.857051372528076
    5. 'count' → logprob: -4.982051372528076
    6. 's' → logprob: -5.857051372528076
    7. ' compt' → logprob: -6.232051372528076
    8. 'comp' → logprob: -6.357051372528076
    9. 'registrer' → logprob: -6.857051372528076
    10. ' mém' → logprob: -7.107051372528076

Token 79: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.09082237631082535
    2. 'ir' → logprob: -2.465822458267212
    3. 'e' → logprob: -6.715822219848633
    4. 'a' → logprob: -8.215822219848633
    5. 'u' → logprob: -9.340822219848633
    6. 'i' → logprob: -9.465822219848633
    7. 'ira' → logprob: -9.715822219848633
    8. 'irà' → logprob: -9.715822219848633
    9. 'era' → logprob: -11.215822219848633
    10. 'r' → logprob: -11.215822219848633

Token 80: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' couples' (ID: 29972)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8937092423439026
    2. ' fré' → logprob: -2.143709182739258
    3. '<|end|>' → logprob: -2.393709182739258
    4. ' occurrences' → logprob: -2.643709182739258
    5. 'élé' → logprob: -3.018709182739258
    6. 'counts' → logprob: -3.143709182739258
    7. 's' → logprob: -3.393709182739258
    8. ' counts' → logprob: -3.518709182739258
    9. 'occ' → logprob: -4.143709182739258
    10. ' mots' → logprob: -4.643709182739258

Token 82: ' de' (ID: 334)
  Prédit: ' clé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clé' → logprob: -0.2908565104007721
    2. ' clés' → logprob: -2.4158565998077393
    3. 'clé' → logprob: -3.1658565998077393
    4. ' de' → logprob: -3.2908565998077393
    5. ' cle' → logprob: -3.6658565998077393
    6. ' :' → logprob: -4.04085636138916
    7. ' ' → logprob: -4.29085636138916
    8. ' key' → logprob: -4.66585636138916
    9. ' (' → logprob: -5.91585636138916
    10. ':' → logprob: -6.16585636138916

Token 83: ' chaînes' (ID: 179904)
  Prédit: ' clés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clés' → logprob: -0.19320091605186462
    2. 'clé' → logprob: -2.3182008266448975
    3. ' clé' → logprob: -3.3182008266448975
    4. ' cle' → logprob: -4.193201065063477
    5. ' caractères' → logprob: -4.818201065063477
    6. 'cles' → logprob: -5.068201065063477
    7. 'car' → logprob: -5.693201065063477
    8. 'cl' → logprob: -6.193201065063477
    9. ' valeurs' → logprob: -6.193201065063477
    10. 'val' → logprob: -6.818201065063477

Token 84: ' ('' (ID: 9906)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.6882474422454834
    2. ' ' → logprob: -2.0632474422454834
    3. ' {}' → logprob: -2.0632474422454834
    4. ' =' → logprob: -2.0632474422454834
    5. '{' → logprob: -2.4382474422454834
    6. 's' → logprob: -2.9382474422454834
    7. '```' → logprob: -2.9382474422454834
    8. ' {' → logprob: -3.3132474422454834
    9. '={}' → logprob: -3.3132474422454834
    10. ' :' → logprob: -3.9382474422454834

Token 85: 'red' (ID: 1291)
  Prédit: 'clé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clé' → logprob: -0.298509806394577
    2. 'mot' → logprob: -2.4235098361968994
    3. 'car' → logprob: -2.6735098361968994
    4. '')' → logprob: -3.6735098361968994
    5. 's' → logprob: -3.7985098361968994
    6. ')' → logprob: -4.42350959777832
    7. 'cles' → logprob: -4.54850959777832
    8. 'chaine' → logprob: -5.04850959777832
    9. 'élé' → logprob: -5.79850959777832
    10. ' clés' → logprob: -6.04850959777832

Token 86: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8838944435119629
    2. '')' → logprob: -1.133894443511963
    3. '',' → logprob: -1.633894443511963
    4. '_' → logprob: -3.508894443511963
    5. 'is' → logprob: -4.633894443511963
    6. 'es' → logprob: -4.633894443511963
    7. 's' → logprob: -5.133894443511963
    8. '','' → logprob: -6.383894443511963
    9. 'u' → logprob: -7.008894443511963
    10. '':' → logprob: -7.008894443511963

Token 87: ' '' (ID: 461)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -1.702901005744934
    2. ' bleu' → logprob: -1.827901005744934
    3. ' green' → logprob: -1.952901005744934
    4. ')' → logprob: -2.0779008865356445
    5. 'green' → logprob: -2.2029008865356445
    6. 'blue' → logprob: -2.7029008865356445
    7. ' '' → logprob: -3.0779008865356445
    8. ''' → logprob: -3.2029008865356445
    9. ''s' → logprob: -3.8279008865356445
    10. ' ' → logprob: -4.3279008865356445

Token 88: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.7541987895965576
    2. 'green' → logprob: -1.2541987895965576
    3. 'red' → logprob: -2.7541987895965576
    4. ' blue' → logprob: -3.3791987895965576
    5. 'value' → logprob: -3.6291987895965576
    6. ' green' → logprob: -3.7541987895965576
    7. '')' → logprob: -4.254199028015137
    8. 's' → logprob: -4.629199028015137
    9. ''' → logprob: -4.879199028015137
    10. 'int' → logprob: -5.129199028015137

Token 89: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.006469397805631161
    2. ''' → logprob: -5.881469249725342
    3. ')' → logprob: -5.881469249725342
    4. '',' → logprob: -8.1314697265625
    5. 'es' → logprob: -8.8814697265625
    6. ''),' → logprob: -9.0064697265625
    7. 'e' → logprob: -9.5064697265625
    8. 's' → logprob: -10.1314697265625
    9. ':' → logprob: -10.5064697265625
    10. '")' → logprob: -10.8814697265625

Token 90: ' comme' (ID: 7971)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.015408075414597988
    2. ' hash' → logprob: -4.265408039093018
    3. ' =' → logprob: -7.640408039093018
    4. '_hash' → logprob: -9.015408515930176
    5. '{}' → logprob: -9.265408515930176
    6. '(hash' → logprob: -9.390408515930176
    7. '	hash' → logprob: -9.515408515930176
    8. '{' → logprob: -9.515408515930176
    9. '```' → logprob: -9.640408515930176
    10. '
' → logprob: -9.765408515930176

Token 91: ' clés' (ID: 96616)
  Prédit: ' clés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clés' → logprob: -0.6670369505882263
    2. 'cl' → logprob: -1.417037010192871
    3. 'clé' → logprob: -1.542037010192871
    4. 'cles' → logprob: -3.792037010192871
    5. ' clé' → logprob: -5.667037010192871
    6. ' keys' → logprob: -6.417037010192871
    7. 'keys' → logprob: -7.042037010192871
    8. ' cl' → logprob: -7.917037010192871
    9. 'cle' → logprob: -7.917037010192871
    10. ' ' → logprob: -8.542037010192871

Token 92: ',' (ID: 11)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.005037713795900345
    2. ' hash' → logprob: -5.380037784576416
    3. '_hash' → logprob: -9.630037307739258
    4. ' =' → logprob: -9.630037307739258
    5. '
' → logprob: -10.005037307739258
    6. ',' → logprob: -10.255037307739258
    7. '{' → logprob: -10.255037307739258
    8. '(hash' → logprob: -10.505037307739258
    9. '	hash' → logprob: -10.755037307739258
    10. ':' → logprob: -10.755037307739258

Token 93: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.3502897322177887
    2. '<|end|>' → logprob: -2.350289821624756
    3. 'et' → logprob: -2.850289821624756
    4. ' avec' → logprob: -3.725289821624756
    5. ' ' → logprob: -3.725289821624756
    6. ' des' → logprob: -4.100289821624756
    7. '{' → logprob: -4.100289821624756
    8. '{}' → logprob: -4.350289821624756
    9. 'values' → logprob: -4.850289821624756
    10. ' with' → logprob: -5.100289821624756

Token 94: ' compter' (ID: 81694)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6462891697883606
    2. 'leurs' → logprob: -2.021289110183716
    3. 'leur' → logprob: -2.146289110183716
    4. '<|end|>' → logprob: -2.271289110183716
    5. ' leurs' → logprob: -2.896289110183716
    6. 'des' → logprob: -3.646289110183716
    7. 'int' → logprob: -4.021289348602295
    8. ' ' → logprob: -4.896289348602295
    9. '0' → logprob: -5.521289348602295
    10. ' leur' → logprob: -6.021289348602295

Token 95: ' leurs' (ID: 16348)
  Prédit: 'leur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leur' → logprob: -1.5380480289459229
    2. '<|end|>' → logprob: -1.5380480289459229
    3. ' ' → logprob: -1.7880480289459229
    4. ' les' → logprob: -2.538048028945923
    5. 's' → logprob: -2.663048028945923
    6. 'les' → logprob: -2.913048028945923
    7. ' leurs' → logprob: -3.413048028945923
    8. ',' → logprob: -3.913048028945923
    9. ' ' → logprob: -4.288047790527344
    10. ' leur' → logprob: -4.288047790527344

Token 96: ' occurrences' (ID: 108073)
  Prédit: ' occurrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occurrences' → logprob: -0.09349185228347778
    2. 'occ' → logprob: -2.968491792678833
    3. ' fré' → logprob: -4.093492031097412
    4. 'occur' → logprob: -4.968492031097412
    5. 'val' → logprob: -5.718492031097412
    6. 'appar' → logprob: -5.843492031097412
    7. ' valeurs' → logprob: -6.093492031097412
    8. ' occur' → logprob: -6.718492031097412
    9. '<|end|>' → logprob: -7.218492031097412
    10. ' appar' → logprob: -7.218492031097412

Token 97: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2304023951292038
    2. 'hash' → logprob: -1.6054023504257202
    3. '
' → logprob: -5.98040246963501
    4. ' hash' → logprob: -6.73040246963501
    5. '

' → logprob: -7.85540246963501
    6. '_hash' → logprob: -8.730401992797852
    7. ' 
' → logprob: -8.730401992797852
    8. '(hash' → logprob: -9.105401992797852
    9. '' → logprob: -9.480401992797852
    10. 'h' → logprob: -9.980401992797852

Token 98: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0019730038475245237
    2. ' hash' → logprob: -6.2519731521606445
    3. 'h' → logprob: -11.626973152160645
    4. '
' → logprob: -11.876973152160645
    5. '	hash' → logprob: -11.876973152160645
    6. '_hash' → logprob: -12.001973152160645
    7. '(hash' → logprob: -12.126973152160645
    8. 'hashed' → logprob: -13.126973152160645
    9. '```' → logprob: -13.501973152160645
    10. 'Hash' → logprob: -14.001973152160645

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02332455664873123
    2. '=' → logprob: -3.773324489593506
    3. '={}' → logprob: -10.148324966430664
    4. 's' → logprob: -11.023324966430664
    5. '_' → logprob: -11.773324966430664
    6. 'hash' → logprob: -13.023324966430664
    7. ' ' → logprob: -13.023324966430664
    8. '=[]' → logprob: -13.398324966430664
    9. 'e' → logprob: -13.523324966430664
    10. '{}' → logprob: -13.523324966430664

Token 100: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.3874630331993103
    2. ' {}' → logprob: -1.137463092803955
    3. 'dict' → logprob: -7.637463092803955
    4. ' dict' → logprob: -9.137462615966797
    5. ' ' → logprob: -14.012462615966797
    6. ' ' → logprob: -15.012462615966797
    7. ' defaultdict' → logprob: -15.137462615966797
    8. '={}' → logprob: -15.262462615966797
    9. ' {}\' → logprob: -15.887462615966797
    10. ' {}
' → logprob: -16.762462615966797

Token 101: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07788050174713135
    2. '
' → logprob: -3.327880382537842
    3. 'n' → logprob: -3.952880382537842
    4. 'while' → logprob: -4.702880382537842
    5. '#' → logprob: -5.952880382537842
    6. 'i' → logprob: -6.077880382537842
    7. 'if' → logprob: -6.452880382537842
    8. ' for' → logprob: -7.202880382537842
    9. 'a' → logprob: -7.452880382537842
    10. '  
' → logprob: -7.702880382537842

Token 102: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008235682616941631
    2. '#' → logprob: -7.875823497772217
    3. ' for' → logprob: -8.250823974609375
    4. 'lines' → logprob: -9.375823974609375
    5. 'while' → logprob: -9.750823974609375
    6. 'n' → logprob: -11.250823974609375
    7. 'line' → logprob: -11.875823974609375
    8. 'i' → logprob: -12.125823974609375
    9. 'ligne' → logprob: -13.000823974609375
    10. 'words' → logprob: -13.500823974609375

Token 103: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5232319831848145
    2. ' for' → logprob: -1.1482319831848145
    3. 's' → logprob: -3.6482319831848145
    4. 'n' → logprob: -4.0232319831848145
    5. ' s' → logprob: -4.3982319831848145
    6. '#' → logprob: -4.5232319831848145
    7. ' boucle' → logprob: -6.1482319831848145
    8. ' ligne' → logprob: -6.5232319831848145
    9. 'r' → logprob: -6.5232319831848145
    10. ' n' → logprob: -6.6482319831848145

Token 104: ' suivante' (ID: 107439)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31326669454574585
    2. ' for' → logprob: -1.3132667541503906
    3. 'while' → logprob: -14.06326675415039
    4. 'n' → logprob: -14.43826675415039
    5. 's' → logprob: -14.43826675415039
    6. '#' → logprob: -14.68826675415039
    7. ':' → logprob: -14.68826675415039
    8. 'pour' → logprob: -14.68826675415039
    9. ' ' → logprob: -14.81326675415039
    10. ' pour' → logprob: -15.06326675415039

Token 105: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029841894283890724
    2. ' for' → logprob: -3.529841899871826
    3. ':' → logprob: -9.529841423034668
    4. '#' → logprob: -12.279841423034668
    5. 'n' → logprob: -12.654841423034668
    6. 's' → logprob: -12.904841423034668
    7. 'pour' → logprob: -12.904841423034668
    8. 'while' → logprob: -13.154841423034668
    9. 'i' → logprob: -14.529841423034668
    10. '.for' → logprob: -14.779841423034668

Token 106: ' parcour' (ID: 130642)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2477119266986847
    2. ' for' → logprob: -1.8727118968963623
    3. ' parcour' → logprob: -2.9977118968963623
    4. ' lire' → logprob: -5.497712135314941
    5. 'i' → logprob: -6.747712135314941
    6. ' iter' → logprob: -6.872712135314941
    7. 'iter' → logprob: -7.372712135314941
    8. 'r' → logprob: -7.497712135314941
    9. 'par' → logprob: -7.497712135314941
    10. 'contin' → logprob: -7.622712135314941

Token 107: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0078665092587471
    2. 'er' → logprob: -4.882866382598877
    3. 'r' → logprob: -8.632866859436035
    4. 'oir' → logprob: -10.382866859436035
    5. 're' → logprob: -11.257866859436035
    6. 'rir' → logprob: -11.382866859436035
    7. 'ire' → logprob: -12.007866859436035
    8. 'e' → logprob: -12.632866859436035
    9. '#' → logprob: -12.757866859436035
    10. 'i' → logprob: -13.132866859436035

Token 108: ' tous' (ID: 10688)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8382687568664551
    2. 'range' → logprob: -1.088268756866455
    3. ' s' → logprob: -1.838268756866455
    4. 's' → logprob: -2.713268756866455
    5. 'n' → logprob: -5.963268756866455
    6. ' n' → logprob: -6.213268756866455
    7. '(range' → logprob: -7.963268756866455
    8. ' la' → logprob: -9.088268280029297
    9. ' ' → logprob: -9.713268280029297
    10. '(s' → logprob: -10.338268280029297

Token 109: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0726349353790283
    2. '(range' → logprob: -1.4476349353790283
    3. 's' → logprob: -2.3226349353790283
    4. '(' → logprob: -2.6976349353790283
    5. 'i' → logprob: -2.8226349353790283
    6. ' i' → logprob: -2.8226349353790283
    7. ' range' → logprob: -2.9476349353790283
    8. '_' → logprob: -3.9476349353790283
    9. 'e' → logprob: -4.822634696960449
    10. ' les' → logprob: -4.947634696960449

Token 110: ' ent' (ID: 1121)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.3356555700302124
    2. 'i' → logprob: -1.9606555700302124
    3. 'n' → logprob: -1.9606555700302124
    4. ' caractères' → logprob: -1.9606555700302124
    5. 'élé' → logprob: -3.085655689239502
    6. 'range' → logprob: -3.460655689239502
    7. 'indices' → logprob: -3.460655689239502
    8. 's' → logprob: -3.585655689239502
    9. ' éléments' → logprob: -3.710655689239502
    10. ' n' → logprob: -3.710655689239502

Token 111: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.16305840015411377
    2. 'r' → logprob: -3.163058280944824
    3. 'u' → logprob: -3.788058280944824
    4. 'ières' → logprob: -3.788058280944824
    5. 's' → logprob: -4.038058280944824
    6. 't' → logprob: -4.413058280944824
    7. 'range' → logprob: -5.038058280944824
    8. 'er' → logprob: -5.163058280944824
    9. 're' → logprob: -5.538058280944824
    10. 'ités' → logprob: -5.538058280944824

Token 112: ' possibles' (ID: 97753)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07531572878360748
    2. ' de' → logprob: -3.2003157138824463
    3. 'i' → logprob: -4.450315952301025
    4. ' from' → logprob: -5.325315952301025
    5. ' range' → logprob: -5.325315952301025
    6. 'de' → logprob: -5.950315952301025
    7. 'from' → logprob: -6.075315952301025
    8. ' ' → logprob: -6.325315952301025
    9. 'range' → logprob: -7.200315952301025
    10. ' compris' → logprob: -7.575315952301025

Token 113: ' de' (ID: 334)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9137670397758484
    2. ' i' → logprob: -1.6637670993804932
    3. 'for' → logprob: -2.038767099380493
    4. ' for' → logprob: -2.288767099380493
    5. ' range' → logprob: -2.663767099380493
    6. 'i' → logprob: -2.913767099380493
    7. 'n' → logprob: -4.413766860961914
    8. '(range' → logprob: -4.663766860961914
    9. '(' → logprob: -5.163766860961914
    10. ',' → logprob: -5.788766860961914

Token 114: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5090999007225037
    2. '1' → logprob: -1.2590999603271484
    3. '0' → logprob: -2.2590999603271484
    4. ' n' → logprob: -5.259099960327148
    5. ' range' → logprob: -6.009099960327148
    6. 'n' → logprob: -6.134099960327148
    7. 'range' → logprob: -8.009099960327148
    8. '2' → logprob: -8.134099960327148
    9. ' i' → logprob: -9.634099960327148
    10. ' ' → logprob: -11.134099960327148

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4407765567302704
    2. '1' → logprob: -1.0657765865325928
    3. ' ' → logprob: -4.815776348114014
    4. 'n' → logprob: -6.065776348114014
    5. 'range' → logprob: -6.690776348114014
    6. ' range' → logprob: -8.815776824951172
    7. ' n' → logprob: -9.690776824951172
    8. '2' → logprob: -10.065776824951172
    9. 'i' → logprob: -10.690776824951172
    10. 's' → logprob: -11.440776824951172

Token 116: ' jusqu' (ID: 21961)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.008317280560731888
    2. ' jusqu' → logprob: -5.758317470550537
    3. 'à' → logprob: -5.758317470550537
    4. ' ' → logprob: -7.508317470550537
    5. 'n' → logprob: -8.133316993713379
    6. ' a' → logprob: -8.258316993713379
    7. ' to' → logprob: -8.383316993713379
    8. ' jusque' → logprob: -8.883316993713379
    9. 's' → logprob: -9.258316993713379
    10. 'a' → logprob: -9.633316993713379

Token 117: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.15626297891139984
    2. 'n' → logprob: -2.1562628746032715
    3. ' n' → logprob: -4.0312628746032715
    4. ''à' → logprob: -5.5312628746032715
    5. 'à' → logprob: -5.9062628746032715
    6. ' a' → logprob: -6.4062628746032715
    7. '’à' → logprob: -6.9062628746032715
    8. ' au' → logprob: -7.2812628746032715
    9. 'a' → logprob: -7.9062628746032715
    10. 'au' → logprob: -8.65626335144043

Token 118: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04859009385108948
    2. 'n' → logprob: -3.0485901832580566
    3. ' ' → logprob: -13.423589706420898
    4. '	n' → logprob: -14.548589706420898
    5. '(n' → logprob: -14.923589706420898
    6. ' (' → logprob: -15.673589706420898
    7. ' ' → logprob: -16.6735897064209
    8. '<n' → logprob: -17.0485897064209
    9. '```' → logprob: -17.4235897064209
    10. ')n' → logprob: -18.0485897064209

Token 119: '2' (ID: 17)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3868755102157593
    2. 'n' → logprob: -1.1368755102157593
    3. '(n' → logprob: -13.01187515258789
    4. '	n' → logprob: -13.88687515258789
    5. ' ' → logprob: -14.38687515258789
    6. ' ' → logprob: -15.76187515258789
    7. '<n' → logprob: -16.13687515258789
    8. ' (' → logprob: -16.26187515258789
    9. '```' → logprob: -16.26187515258789
    10. '(' → logprob: -17.13687515258789

Token 120: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.48451289534568787
    2. ' **' → logprob: -0.9845129251480103
    3. ' *' → logprob: -5.484512805938721
    4. 'n' → logprob: -6.234512805938721
    5. ' ' → logprob: -6.234512805938721
    6. ' n' → logprob: -6.484512805938721
    7. '*n' → logprob: -7.609512805938721
    8. '*' → logprob: -8.234513282775879
    9. '^' → logprob: -11.859513282775879
    10. '0' → logprob: -12.234513282775879

Token 121: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07897891104221344
    2. ' n' → logprob: -2.578979015350342
    3. ' ' → logprob: -9.828978538513184
    4. '(n' → logprob: -11.703978538513184
    5. '**' → logprob: -11.953978538513184
    6. '32' → logprob: -12.453978538513184
    7. '	n' → logprob: -12.953978538513184
    8. ' **' → logprob: -13.328978538513184
    9. '31' → logprob: -13.578978538513184
    10. '*n' → logprob: -13.578978538513184

Token 122: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5345545411109924
    2. ' :' → logprob: -1.0345544815063477
    3. '(' → logprob: -3.6595544815063477
    4. 'for' → logprob: -4.034554481506348
    5. ' for' → logprob: -5.534554481506348
    6. 'range' → logprob: -5.534554481506348
    7. ' (' → logprob: -6.034554481506348
    8. '(n' → logprob: -6.659554481506348
    9. '(range' → logprob: -6.909554481506348
    10. ' :
' → logprob: -7.034554481506348

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005945982877165079
    2. ' ' → logprob: -5.130946159362793
    3. 'n' → logprob: -11.130946159362793
    4. ' n' → logprob: -13.255946159362793
    5. '-' → logprob: -15.505946159362793
    6. ' -' → logprob: -15.630946159362793
    7. '2' → logprob: -15.880946159362793
    8. '```' → logprob: -15.880946159362793
    9. ' ' → logprob: -16.380945205688477
    10. '  ' → logprob: -16.505945205688477

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9040898880339228e-05
    2. ' ' → logprob: -10.500028610229492
    3. '2' → logprob: -14.250028610229492
    4. 'n' → logprob: -14.750028610229492
    5. '-' → logprob: -16.250028610229492
    6. '```' → logprob: -16.500028610229492
    7. '<|end|>' → logprob: -16.875028610229492
    8. '3' → logprob: -17.250028610229492
    9. '.' → logprob: -17.937528610229492
    10. '  ' → logprob: -18.000028610229492

Token 125: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9372218251228333
    2. 'for' → logprob: -0.9372218251228333
    3. ' for' → logprob: -2.1872217655181885
    4. ' :' → logprob: -2.4372217655181885
    5. ' :
' → logprob: -4.687222003936768
    6. ':
' → logprob: -5.562222003936768
    7. ',' → logprob: -6.687222003936768
    8. '
' → logprob: -7.062222003936768
    9. ' ' → logprob: -7.937222003936768
    10. '' → logprob: -8.56222152709961

Token 126: ' utilisant' (ID: 92474)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02669071964919567
    2. 'range' → logprob: -3.651690721511841
    3. ' ' → logprob: -8.401690483093262
    4. ' r' → logprob: -10.276690483093262
    5. ' xrange' → logprob: -10.651690483093262
    6. '	range' → logprob: -10.651690483093262
    7. ':' → logprob: -11.276690483093262
    8. '(range' → logprob: -11.401690483093262
    9. '_range' → logprob: -11.651690483093262
    10. ' n' → logprob: -12.151690483093262

Token 127: ' '' (ID: 461)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2821367084980011
    2. 'range' → logprob: -1.4071366786956787
    3. ' ' → logprob: -7.907136917114258
    4. 'n' → logprob: -8.657136917114258
    5. '(range' → logprob: -8.782136917114258
    6. ' n' → logprob: -9.532136917114258
    7. ' ' → logprob: -9.907136917114258
    8. ' i' → logprob: -11.032136917114258
    9. '  ' → logprob: -11.157136917114258
    10. ' for' → logprob: -11.282136917114258

Token 128: 'bit' (ID: 6516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.19192813336849213
    2. ' i' → logprob: -2.3169281482696533
    3. 'range' → logprob: -2.6919281482696533
    4. 'i' → logprob: -5.066927909851074
    5. ' for' → logprob: -7.316927909851074
    6. ' n' → logprob: -7.691927909851074
    7. 'n' → logprob: -8.066927909851074
    8. ' ' → logprob: -8.066927909851074
    9. 'for' → logprob: -9.191927909851074
    10. ' a' → logprob: -10.191927909851074

Token 129: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002168105449527502
    2. 'mask' → logprob: -6.87716817855835
    3. '_' → logprob: -7.50216817855835
    4. ''' → logprob: -7.87716817855835
    5. '```' → logprob: -10.002167701721191
    6. '_mask' → logprob: -10.252167701721191
    7. '_index' → logprob: -10.627167701721191
    8. ' s' → logprob: -11.502167701721191
    9. 'shift' → logprob: -11.752167701721191
    10. '_s' → logprob: -11.752167701721191

Token 130: ' comme' (ID: 7971)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1832054853439331
    2. ' :' → logprob: -1.808205485343933
    3. ' :
' → logprob: -6.933205604553223
    4. ':
' → logprob: -7.433205604553223
    5. 'for' → logprob: -7.683205604553223
    6. ',' → logprob: -7.933205604553223
    7. ' ' → logprob: -8.058205604553223
    8. ' for' → logprob: -8.308205604553223
    9. 'in' → logprob: -8.933205604553223
    10. ' in' → logprob: -8.933205604553223

Token 131: ' variable' (ID: 11076)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2668609619140625
    2. 'range' → logprob: -1.7668609619140625
    3. ' l' → logprob: -3.8918609619140625
    4. ' ' → logprob: -4.3918609619140625
    5. ')' → logprob: -5.0168609619140625
    6. ' un' → logprob: -5.1418609619140625
    7. ' la' → logprob: -5.3918609619140625
    8. 'n' → logprob: -5.8918609619140625
    9. ' ' → logprob: -6.5168609619140625
    10. '_' → logprob: -6.6418609619140625

Token 132: ' d' (ID: 272)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.311956524848938
    2. ':' → logprob: -1.436956524848938
    3. ' for' → logprob: -1.436956524848938
    4. 'for' → logprob: -2.4369564056396484
    5. 'range' → logprob: -3.4369564056396484
    6. ' pour' → logprob: -3.5619564056396484
    7. ' range' → logprob: -4.186956405639648
    8. ' ' → logprob: -4.186956405639648
    9. ' en' → logprob: -4.311956405639648
    10. ' in' → logprob: -4.311956405639648

Token 133: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3697793185710907
    2. 'é' → logprob: -1.744779348373413
    3. 'éc' → logprob: -2.994779348373413
    4. 'range' → logprob: -4.119779109954834
    5. 'i' → logprob: -4.494779109954834
    6. ''' → logprob: -4.494779109954834
    7. ''ind' → logprob: -5.244779109954834
    8. ' it' → logprob: -5.619779109954834
    9. 'it' → logprob: -5.619779109954834
    10. 'ex' → logprob: -5.994779109954834

Token 134: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.8857581615447998
    2. 'é' → logprob: -1.6357581615447998
    3. 'ex' → logprob: -2.6357581615448
    4. 'um' → logprob: -2.7607581615448
    5. 'ité' → logprob: -2.8857581615448
    6. 'i' → logprob: -3.6357581615448
    7. 'iteration' → logprob: -3.7607581615448
    8. 'éré' → logprob: -4.010758399963379
    9. 'index' → logprob: -4.010758399963379
    10. 'éc' → logprob: -4.010758399963379

Token 135: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.01656998321413994
    2. 'ération' → logprob: -4.891570091247559
    3. 'e' → logprob: -5.266570091247559
    4. 'é' → logprob: -7.016570091247559
    5. 'ex' → logprob: -7.391570091247559
    6. 'éra' → logprob: -8.266570091247559
    7. 'ér' → logprob: -8.391570091247559
    8. 'ère' → logprob: -8.391570091247559
    9. 'érateur' → logprob: -8.516570091247559
    10. 'érêt' → logprob: -8.641570091247559

Token 136: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013955462723970413
    2. ' :' → logprob: -4.888955593109131
    3. ':
' → logprob: -5.638955593109131
    4. 'for' → logprob: -7.013955593109131
    5. '
' → logprob: -7.388955593109131
    6. ' :
' → logprob: -7.888955593109131
    7. ' for' → logprob: -8.013955116271973
    8. ',' → logprob: -8.263955116271973
    9. '.' → logprob: -9.513955116271973
    10. '' → logprob: -9.763955116271973

Token 137: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09292212873697281
    2. ' for' → logprob: -2.4679222106933594
    3. '
' → logprob: -5.842922210693359
    4. ':' → logprob: -7.467922210693359
    5. 'f' → logprob: -8.21792221069336
    6. ' 
' → logprob: -9.59292221069336
    7. '' → logprob: -10.59292221069336
    8. ':
' → logprob: -10.59292221069336
    9. 'range' → logprob: -10.84292221069336
    10. 'n' → logprob: -10.96792221069336

Token 138: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043003883212804794
    2. ' for' → logprob: -3.168003797531128
    3. 'f' → logprob: -12.793004035949707
    4. '
' → logprob: -14.293004035949707
    5. 'from' → logprob: -15.418004035949707
    6. 'fo' → logprob: -15.668004035949707
    7. 'n' → logprob: -15.918004035949707
    8. '```' → logprob: -16.04300308227539
    9. ' 
' → logprob: -16.29300308227539
    10. ' f' → logprob: -16.41800308227539

Token 139: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016611411410849541
    2. ' for' → logprob: -8.750165939331055
    3. 'f' → logprob: -11.875165939331055
    4. 'fo' → logprob: -14.625165939331055
    5. '```' → logprob: -16.750165939331055
    6. '
' → logprob: -18.125165939331055
    7. 'from' → logprob: -18.125165939331055
    8. 'i' → logprob: -18.875165939331055
    9. ' ' → logprob: -19.000165939331055
    10. '	for' → logprob: -19.000165939331055

Token 140: ' <<' (ID: 2256)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1564784198999405
    2. ' ' → logprob: -2.2814784049987793
    3. 'for' → logprob: -3.4064784049987793
    4. '2' → logprob: -5.531478404998779
    5. '0' → logprob: -6.031478404998779
    6. ' <<' → logprob: -7.031478404998779
    7. '7' → logprob: -7.781478404998779
    8. '6' → logprob: -8.406478881835938
    9. '4' → logprob: -8.531478881835938
    10. '  ' → logprob: -8.656478881835938

Token 141: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1602526605129242
    2. 'n' → logprob: -1.9102526903152466
    3. ' ' → logprob: -10.785252571105957
    4. '	n' → logprob: -12.785252571105957
    5. ')n' → logprob: -13.410252571105957
    6. '<|end|>' → logprob: -13.410252571105957
    7. '(n' → logprob: -14.160252571105957
    8. ' ' → logprob: -15.160252571105957
    9. '```' → logprob: -15.535252571105957
    10. ')' → logprob: -15.785252571105957

Token 142: ' signifie' (ID: 81149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33689290285110474
    2. ':' → logprob: -1.71189284324646
    3. ' for' → logprob: -2.33689284324646
    4. '
' → logprob: -5.586893081665039
    5. ' :' → logprob: -6.086893081665039
    6. ':
' → logprob: -6.711893081665039
    7. '):' → logprob: -7.336893081665039
    8. ')' → logprob: -7.711893081665039
    9. ' :
' → logprob: -8.961893081665039
    10. 'range' → logprob: -9.086893081665039

Token 143: ' '' (ID: 461)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1876111924648285
    2. ' ' → logprob: -1.8126112222671509
    3. '1' → logprob: -5.312611103057861
    4. ' ' → logprob: -6.687611103057861
    5. ' une' → logprob: -7.187611103057861
    6. ' deux' → logprob: -8.43761157989502
    7. ' (' → logprob: -8.81261157989502
    8. '(' → logprob: -9.06261157989502
    9. 'une' → logprob: -9.18761157989502
    10. ' la' → logprob: -9.43761157989502

Token 144: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01930658333003521
    2. ' ' → logprob: -4.394306659698486
    3. '1' → logprob: -5.894306659698486
    4. '(' → logprob: -6.019306659698486
    5. 'pow' → logprob: -6.769306659698486
    6. ' (' → logprob: -8.394306182861328
    7. 'n' → logprob: -10.144306182861328
    8. ')' → logprob: -10.394306182861328
    9. '```' → logprob: -10.769306182861328
    10. ' pow' → logprob: -10.894306182861328

Token 145: ' à' (ID: 1221)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.09625819325447083
    2. ' **' → logprob: -2.4712581634521484
    3. ')' → logprob: -5.221258163452148
    4. 'n' → logprob: -7.721258163452148
    5. ' ' → logprob: -7.971258163452148
    6. ')**' → logprob: -8.471258163452148
    7. '*' → logprob: -8.596258163452148
    8. ' n' → logprob: -8.971258163452148
    9. '^' → logprob: -9.096258163452148
    10. '**)' → logprob: -9.096258163452148

Token 146: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2520676851272583
    2. ' n' → logprob: -1.5020676851272583
    3. ' ' → logprob: -10.002067565917969
    4. ')' → logprob: -10.252067565917969
    5. ' ' → logprob: -10.627067565917969
    6. ')n' → logprob: -11.752067565917969
    7. ' )' → logprob: -12.252067565917969
    8. '	n' → logprob: -12.627067565917969
    9. '<|end|>' → logprob: -13.002067565917969
    10. '```' → logprob: -13.252067565917969

Token 147: ' puissance' (ID: 63494)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001772638875991106
    2. 'power' → logprob: -6.876772403717041
    3. ' puissance' → logprob: -7.876772403717041
    4. 'pu' → logprob: -8.1267728805542
    5. ' n' → logprob: -10.2517728805542
    6. '```' → logprob: -12.1267728805542
    7. '(n' → logprob: -12.5017728805542
    8. 'pow' → logprob: -12.5017728805542
    9. ')n' → logprob: -13.0017728805542
    10. ')' → logprob: -13.0017728805542

Token 148: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6326472759246826
    2. ' n' → logprob: -0.7576472759246826
    3. ' ' → logprob: -10.382647514343262
    4. '<|end|>' → logprob: -12.007647514343262
    5. ')n' → logprob: -12.382647514343262
    6. '	n' → logprob: -13.382647514343262
    7. ' ' → logprob: -14.007647514343262
    8. ')' → logprob: -14.007647514343262
    9. '(n' → logprob: -14.257647514343262
    10. '_n' → logprob: -14.382647514343262

Token 149: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5126156210899353
    2. ')'' → logprob: -1.01261568069458
    3. ')' → logprob: -3.38761568069458
    4. '')' → logprob: -5.76261568069458
    5. ' )' → logprob: -7.76261568069458
    6. ' '' → logprob: -8.637615203857422
    7. 'n' → logprob: -10.512615203857422
    8. ')',' → logprob: -10.637615203857422
    9. ')'
' → logprob: -10.637615203857422
    10. ')+'' → logprob: -10.637615203857422

Token 150: ' soit' (ID: 17293)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22627077996730804
    2. 'for' → logprob: -1.6012707948684692
    3. ':' → logprob: -7.85127067565918
    4. ' ' → logprob: -8.22627067565918
    5. ' :' → logprob: -9.47627067565918
    6. ' bit' → logprob: -9.72627067565918
    7. '
' → logprob: -11.60127067565918
    8. ' range' → logprob: -11.72627067565918
    9. ' 
' → logprob: -11.97627067565918
    10. 'range' → logprob: -11.97627067565918

Token 151: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3556584119796753
    2. ' n' → logprob: -2.105658531188965
    3. '2' → logprob: -2.355658531188965
    4. ' (' → logprob: -3.105658531188965
    5. '1' → logprob: -3.855658531188965
    6. '(' → logprob: -4.855658531188965
    7. 'n' → logprob: -5.230658531188965
    8. ' ' → logprob: -7.230658531188965
    9. ' i' → logprob: -7.355658531188965
    10. ')' → logprob: -7.355658531188965

Token 152: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.08612234890460968
    2. ' nombre' → logprob: -2.7111222743988037
    3. 'dé' → logprob: -4.586122512817383
    4. 'n' → logprob: -6.211122512817383
    5. 'bit' → logprob: -6.961122512817383
    6. 'd' → logprob: -7.211122512817383
    7. '1' → logprob: -7.961122512817383
    8. 'total' → logprob: -8.086122512817383
    9. '2' → logprob: -8.211122512817383
    10. 'shift' → logprob: -8.586122512817383

Token 153: ' total' (ID: 3609)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6588006615638733
    2. ' total' → logprob: -1.2838006019592285
    3. 'total' → logprob: -2.5338006019592285
    4. ' d' → logprob: -2.7838006019592285
    5. 'de' → logprob: -3.2838006019592285
    6. 'd' → logprob: -4.6588006019592285
    7. ' des' → logprob: -4.9088006019592285
    8. ' ' → logprob: -6.1588006019592285
    9. ' of' → logprob: -6.2838006019592285
    10. 'des' → logprob: -6.7838006019592285

Token 154: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6389259696006775
    2. ' d' → logprob: -1.5139260292053223
    3. ' des' → logprob: -2.0139260292053223
    4. ' of' → logprob: -2.6389260292053223
    5. 'de' → logprob: -4.388926029205322
    6. 'des' → logprob: -4.513926029205322
    7. 'd' → logprob: -4.763926029205322
    8. '<|end|>' → logprob: -5.638926029205322
    9. ' ' → logprob: -5.888926029205322
    10. '  ' → logprob: -6.013926029205322

Token 155: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -1.0945082902908325
    2. ' bits' → logprob: -1.0945082902908325
    3. ' bit' → logprob: -2.469508171081543
    4. ' sous' → logprob: -2.719508171081543
    5. 'bits' → logprob: -2.844508171081543
    6. 'comb' → logprob: -3.469508171081543
    7. 'bit' → logprob: -3.469508171081543
    8. 's' → logprob: -4.094508171081543
    9. ' chaînes' → logprob: -4.594508171081543
    10. 'poss' → logprob: -5.469508171081543

Token 156: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.003021441400051117
    2. 'inations' → logprob: -6.128021240234375
    3. 'in' → logprob: -7.753021240234375
    4. 'ina' → logprob: -8.628021240234375
    5. '```' → logprob: -9.878021240234375
    6. '#' → logprob: -10.128021240234375
    7. 'i' → logprob: -10.628021240234375
    8. 'inas' → logprob: -11.003021240234375
    9. '``' → logprob: -11.503021240234375
    10. 'is' → logprob: -11.628021240234375

Token 157: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.003261249978095293
    2. 'ais' → logprob: -6.753261089324951
    3. 'sons' → logprob: -7.003261089324951
    4. 'a' → logprob: -7.128261089324951
    5. '#' → logprob: -8.87826156616211
    6. 's' → logprob: -10.37826156616211
    7. '```' → logprob: -10.50326156616211
    8. 'on' → logprob: -10.75326156616211
    9. 'asons' → logprob: -11.12826156616211
    10. '##' → logprob: -11.37826156616211

Token 158: ' bin' (ID: 6958)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20206640660762787
    2. '
' → logprob: -1.827066421508789
    3. ' for' → logprob: -3.827066421508789
    4. '
' → logprob: -8.452066421508789
    5. '\n' → logprob: -10.202066421508789
    6. ':' → logprob: -11.327066421508789
    7. ' 
' → logprob: -11.577066421508789
    8. '```' → logprob: -11.952066421508789
    9. ':
' → logprob: -12.077066421508789
    10. '' → logprob: -12.577066421508789

Token 159: 'aires' (ID: 8507)
  Prédit: 'inais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.1919713318347931
    2. 'in' → logprob: -2.6919713020324707
    3. 'ina' → logprob: -2.6919713020324707
    4. 'ines' → logprob: -4.316971302032471
    5. '#' → logprob: -4.941971302032471
    6. 'inas' → logprob: -5.816971302032471
    7. '```' → logprob: -5.941971302032471
    8. 'inations' → logprob: -5.941971302032471
    9. 'i' → logprob: -6.816971302032471
    10. 'iques' → logprob: -7.754471302032471

Token 160: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6709535121917725
    2. '
' → logprob: -0.9209535121917725
    3. ' for' → logprob: -2.4209535121917725
    4. ' 
' → logprob: -7.420953750610352
    5. '\n' → logprob: -7.545953750610352
    6. '
' → logprob: -8.170953750610352
    7. '' → logprob: -9.295953750610352
    8. ':' → logprob: -9.545953750610352
    9. '  
' → logprob: -9.670953750610352
    10. ':
' → logprob: -10.420953750610352

Token 161: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03839993104338646
    2. 'n' → logprob: -3.2883999347686768
    3. ' ' → logprob: -8.538399696350098
    4. '<|end|>' → logprob: -9.663399696350098
    5. 's' → logprob: -10.538399696350098
    6. ' ' → logprob: -10.663399696350098
    7. ' espaces' → logprob: -11.538399696350098
    8. '(n' → logprob: -11.913399696350098
    9. '	n' → logprob: -11.913399696350098
    10. 'space' → logprob: -12.413399696350098

Token 162: ' bits' (ID: 18189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2755698263645172
    2. '
' → logprob: -1.7755697965621948
    3. ' for' → logprob: -2.6505699157714844
    4. '
' → logprob: -8.025569915771484
    5. ':' → logprob: -9.025569915771484
    6. '\n' → logprob: -9.275569915771484
    7. 'bit' → logprob: -10.150569915771484
    8. 'n' → logprob: -10.400569915771484
    9. '

' → logprob: -10.525569915771484
    10. ':
' → logprob: -10.650569915771484

Token 163: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1041092649102211
    2. '
' → logprob: -2.354109287261963
    3. ' for' → logprob: -5.604109287261963
    4. '
' → logprob: -8.729108810424805
    5. '```' → logprob: -11.229108810424805
    6. '\n' → logprob: -11.729108810424805
    7. ' 
' → logprob: -11.854108810424805
    8. ':' → logprob: -12.229108810424805
    9. 'bit' → logprob: -12.604108810424805
    10. ':
' → logprob: -12.979108810424805

Token 164: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005404269322752953
    2. '
' → logprob: -5.255404472351074
    3. ' for' → logprob: -8.755404472351074
    4. 'f' → logprob: -11.755404472351074
    5. '
' → logprob: -13.505404472351074
    6. 'bit' → logprob: -14.130404472351074
    7. 'fo' → logprob: -14.130404472351074
    8. '\n' → logprob: -14.380404472351074
    9. '' → logprob: -14.755404472351074
    10. '

' → logprob: -15.005404472351074

Token 165: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.01623659022152424
    2. ' ' → logprob: -4.141236782073975
    3. 'bit' → logprob: -8.641236305236816
    4. ' ' → logprob: -11.391236305236816
    5. '  ' → logprob: -12.016236305236816
    6. ' i' → logprob: -12.266236305236816
    7. ' _' → logprob: -14.641236305236816
    8. '_bit' → logprob: -14.641236305236816
    9. '```' → logprob: -14.766236305236816
    10. ' ' → logprob: -15.016236305236816

Token 166: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00887113157659769
    2. 'in' → logprob: -4.883871078491211
    3. ' ' → logprob: -6.883871078491211
    4. 's' → logprob: -8.633871078491211
    5. ' i' → logprob: -10.383871078491211
    6. 'n' → logprob: -12.133871078491211
    7. 'space' → logprob: -12.133871078491211
    8. '  ' → logprob: -12.758871078491211
    9. ' ' → logprob: -13.008871078491211
    10. ',' → logprob: -13.008871078491211

Token 167: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018152866512537003
    2. 'range' → logprob: -4.018152713775635
    3. ' ' → logprob: -12.893153190612793
    4. '	range' → logprob: -15.018153190612793
    5. '(range' → logprob: -15.893153190612793
    6. '   ' → logprob: -17.143152236938477
    7. ' xrange' → logprob: -17.518152236938477
    8. '  ' → logprob: -18.018152236938477
    9. '0' → logprob: -18.768152236938477
    10. ' ' → logprob: -19.018152236938477

Token 168: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7120533811976202e-05
    2. ' (' → logprob: -11.125017166137695
    3. '((' → logprob: -13.125017166137695
    4. '(
' → logprob: -15.500017166137695
    5. '(n' → logprob: -18.750017166137695
    6. '1' → logprob: -18.875017166137695
    7. '(s' → logprob: -19.625017166137695
    8. '()' → logprob: -19.875017166137695
    9. '(

' → logprob: -20.375017166137695
    10. ')' → logprob: -20.750017166137695

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011251768097281456
    2. ' ' → logprob: -4.636251926422119
    3. '(' → logprob: -6.636251926422119
    4. '0' → logprob: -8.761251449584961
    5. ' (' → logprob: -11.011251449584961
    6. ')' → logprob: -12.261251449584961
    7. '2' → logprob: -12.511251449584961
    8. '   ' → logprob: -13.761251449584961
    9. '  ' → logprob: -16.26125144958496
    10. '```' → logprob: -17.76125144958496

Token 170: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.0024490193463861942
    2. '<<' → logprob: -6.127449035644531
    3. ' ' → logprob: -8.377449035644531
    4. ' <' → logprob: -11.127449035644531
    5. ',' → logprob: -11.377449035644531
    6. '1' → logprob: -12.752449035644531
    7. ' ,' → logprob: -13.627449035644531
    8. ' <<
' → logprob: -14.002449035644531
    9. '   ' → logprob: -14.752449035644531
    10. '(' → logprob: -14.752449035644531

Token 171: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3869093358516693
    2. 'n' → logprob: -1.1369093656539917
    3. ' ' → logprob: -10.511909484863281
    4. ')n' → logprob: -12.136909484863281
    5. ')' → logprob: -13.136909484863281
    6. '	n' → logprob: -13.511909484863281
    7. '(n' → logprob: -14.136909484863281
    8. '1' → logprob: -14.636909484863281
    9. '_n' → logprob: -14.636909484863281
    10. ' ' → logprob: -16.01190948486328

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021593389101326466
    2. ' ):' → logprob: -9.125215530395508
    3. ')' → logprob: -9.875215530395508
    4. '):
' → logprob: -10.000215530395508
    5. ':' → logprob: -11.750215530395508
    6. '):
' → logprob: -13.875215530395508
    7. '():' → logprob: -14.750215530395508
    8. ''):' → logprob: -15.875215530395508
    9. '   ' → logprob: -16.000215530395508
    10. '):

' → logprob: -16.500215530395508

Token 173: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6086447238922119
    2. '   ' → logprob: -0.9836447238922119
    3. ' :' → logprob: -2.733644723892212
    4. ' ' → logprob: -4.483644485473633
    5. '<|end|>' → logprob: -6.608644485473633
    6. '):' → logprob: -6.733644485473633
    7. '  ' → logprob: -7.108644485473633
    8. '    
' → logprob: -7.483644485473633
    9. '    ' → logprob: -8.108644485473633
    10. ')' → logprob: -8.233644485473633

Token 174: ' red' (ID: 3592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4026668071746826
    2. ' key' → logprob: -1.4026668071746826
    3. 'key' → logprob: -2.9026668071746826
    4. ' subset' → logprob: -4.902667045593262
    5. 'count' → logprob: -5.652667045593262
    6. '    
' → logprob: -5.777667045593262
    7. 'sub' → logprob: -6.027667045593262
    8. 'prefix' → logprob: -6.277667045593262
    9. ' subse' → logprob: -6.277667045593262
    10. ' sub' → logprob: -6.652667045593262

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30166101455688477
    2. ',' → logprob: -2.1766610145568848
    3. '=' → logprob: -2.5516610145568848
    4. '_' → logprob: -3.6766610145568848
    5. '_count' → logprob: -3.8016610145568848
    6. ']' → logprob: -4.426661014556885
    7. 'count' → logprob: -6.051661014556885
    8. '[' → logprob: -6.176661014556885
    9. 's' → logprob: -6.426661014556885
    10. '_counts' → logprob: -6.676661014556885

Token 176: ' ""' (ID: 3216)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.027070892974734306
    2. '''' → logprob: -3.652070999145508
    3. '"' → logprob: -7.902070999145508
    4. '0' → logprob: -8.277070999145508
    5. ' ""' → logprob: -9.527070999145508
    6. '[]' → logprob: -9.902070999145508
    7. '''
' → logprob: -12.027070999145508
    8. ''' → logprob: -12.277070999145508
    9. '"",' → logprob: -12.777070999145508
    10. ' ' → logprob: -13.027070999145508

Token 177: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14004334807395935
    2. 'for' → logprob: -2.390043258666992
    3. '<|end|>' → logprob: -3.515043258666992
    4. 'red' → logprob: -5.640043258666992
    5. ' for' → logprob: -6.515043258666992
    6. '   ' → logprob: -7.015043258666992
    7. ';' → logprob: -7.515043258666992
    8. '    
' → logprob: -7.515043258666992
    9. ' ' → logprob: -7.890043258666992
    10. 's' → logprob: -8.015043258666992

Token 179: ' Cr' (ID: 5790)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1331569254398346
    2. ' for' → logprob: -2.5081570148468018
    3. 'red' → logprob: -3.7581570148468018
    4. ' ' → logprob: -5.133156776428223
    5. '   ' → logprob: -5.508156776428223
    6. ' red' → logprob: -6.383156776428223
    7. '""' → logprob: -6.758156776428223
    8. '    ' → logprob: -6.758156776428223
    9. '  ' → logprob: -7.008156776428223
    10. '#' → logprob: -7.133156776428223

Token 180: 'éer' (ID: 83012)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.12374912947416306
    2. 'éd' → logprob: -3.373749017715454
    3. 'édit' → logprob: -4.123749256134033
    4. 'e' → logprob: -4.248749256134033
    5. 'd' → logprob: -4.373749256134033
    6. 'edit' → logprob: -4.498749256134033
    7. '#' → logprob: -4.998749256134033
    8. '   ' → logprob: -4.998749256134033
    9. 'ont' → logprob: -5.873749256134033
    10. 'éer' → logprob: -6.498749256134033

Token 181: ' une' (ID: 2463)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8943626880645752
    2. '""' → logprob: -1.1443626880645752
    3. 'red' → logprob: -2.644362688064575
    4. '   ' → logprob: -2.644362688064575
    5. ' ""' → logprob: -2.894362688064575
    6. '<|end|>' → logprob: -3.769362688064575
    7. ' ' → logprob: -4.394362449645996
    8. ' "' → logprob: -4.519362449645996
    9. '  ' → logprob: -5.144362449645996
    10. ' red' → logprob: -5.269362449645996

Token 182: ' chaîne' (ID: 89288)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.48031261563301086
    2. 'red' → logprob: -1.7303125858306885
    3. '"' → logprob: -1.8553125858306885
    4. 'for' → logprob: -3.8553125858306885
    5. ' ""' → logprob: -5.230312824249268
    6. '"""' → logprob: -5.355312824249268
    7. '''' → logprob: -5.480312824249268
    8. ''' → logprob: -6.230312824249268
    9. 'chaine' → logprob: -6.480312824249268
    10. ' red' → logprob: -6.480312824249268

Token 183: ' vide' (ID: 21835)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7870564460754395
    2. '<|end|>' → logprob: -0.9120564460754395
    3. 'red' → logprob: -3.1620564460754395
    4. ' for' → logprob: -3.4120564460754395
    5. 'for' → logprob: -3.5370564460754395
    6. ' ' → logprob: -4.4120564460754395
    7. '  ' → logprob: -4.7870564460754395
    8. '    
' → logprob: -5.1620564460754395
    9. '    ' → logprob: -5.2870564460754395
    10. ' red' → logprob: -6.1620564460754395

Token 185: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0015840200940147042
    2. ' red' → logprob: -7.126584053039551
    3. '"' → logprob: -8.25158405303955
    4. ''' → logprob: -9.25158405303955
    5. '   ' → logprob: -9.50158405303955
    6. 'rou' → logprob: -9.62658405303955
    7. 'for' → logprob: -9.75158405303955
    8. 'r' → logprob: -10.12658405303955
    9. 's' → logprob: -10.25158405303955
    10. '""' → logprob: -10.50158405303955

Token 186: ''' (ID: 6)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39931416511535645
    2. '<|end|>' → logprob: -1.1493141651153564
    3. '    
' → logprob: -5.774313926696777
    4. '
' → logprob: -5.774313926696777
    5. '<|end|>' → logprob: -6.149313926696777
    6. '  ' → logprob: -6.524313926696777
    7. ' ' → logprob: -7.524313926696777
    8. ' red' → logprob: -7.774313926696777
    9. '  
' → logprob: -8.149313926696777
    10. 'red' → logprob: -8.399313926696777

Token 188: ' cont' (ID: 836)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.019616723060608
    2. ' va' → logprob: -2.2696166038513184
    3. ' cont' → logprob: -2.5196166038513184
    4. 'cont' → logprob: -2.6446166038513184
    5. ' représente' → logprob: -2.6446166038513184
    6. ' s' → logprob: -2.8946166038513184
    7. '<|end|>' → logprob: -3.1446166038513184
    8. 'represent' → logprob: -3.6446166038513184
    9. ' ' → logprob: -3.8946166038513184
    10. ' sera' → logprob: -4.269616603851318

Token 189: 'i' (ID: 72)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5904175639152527
    2. 'inue' → logprob: -1.2154176235198975
    3. 'ient' → logprob: -2.0904176235198975
    4. 'i' → logprob: -4.215417385101318
    5. 'inu' → logprob: -5.340417385101318
    6. 'inut' → logprob: -6.340417385101318
    7. 'iend' → logprob: -6.590417385101318
    8. 'endra' → logprob: -8.340417861938477
    9. 'ien' → logprob: -8.465417861938477
    10. 't' → logprob: -8.465417861938477

Token 190: 'endra' (ID: 32364)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -1.3503748178482056
    2. 'nera' → logprob: -1.3503748178482056
    3. 'nd' → logprob: -1.7253748178482056
    4. 'n' → logprob: -2.225374698638916
    5. 't' → logprob: -2.350374698638916
    6. 'nent' → logprob: -2.725374698638916
    7. 'ner' → logprob: -5.100374698638916
    8. 'nit' → logprob: -5.350374698638916
    9. 'nte' → logprob: -5.475374698638916
    10. 'ne' → logprob: -5.975374698638916

Token 191: ' certains' (ID: 30681)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9862852692604065
    2. 'red' → logprob: -2.1112852096557617
    3. '"' → logprob: -2.3612852096557617
    4. ' ' → logprob: -2.6112852096557617
    5. ' s' → logprob: -2.6112852096557617
    6. ' "' → logprob: -2.8612852096557617
    7. ' for' → logprob: -3.6112852096557617
    8. ')' → logprob: -3.9862852096557617
    9. '">' → logprob: -4.111285209655762
    10. ''' → logprob: -4.236285209655762

Token 192: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.6248703002929688
    2. ' caracteres' → logprob: -2.2498703002929688
    3. ' espaces' → logprob: -2.7498703002929688
    4. ' characters' → logprob: -3.2498703002929688
    5. 'car' → logprob: -3.3748703002929688
    6. ' indices' → logprob: -3.3748703002929688
    7. '   ' → logprob: -3.4998703002929688
    8. ' s' → logprob: -3.6248703002929688
    9. ' car' → logprob: -3.9998703002929688
    10. ' caract' → logprob: -3.9998703002929688

Token 193: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7673962116241455
    2. '   ' → logprob: -1.2673962116241455
    3. ' ' → logprob: -2.3923962116241455
    4. ' for' → logprob: -2.5173962116241455
    5. '<|end|>' → logprob: -3.3923962116241455
    6. '  ' → logprob: -4.267395973205566
    7. 's' → logprob: -4.392395973205566
    8. '    ' → logprob: -5.267395973205566
    9. 'red' → logprob: -5.392395973205566
    10. ',' → logprob: -6.267395973205566

Token 194: ' '' (ID: 461)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5759820938110352
    2. 's' → logprob: -0.8259820938110352
    3. ' ' → logprob: -10.825982093811035
    4. ' la' → logprob: -11.200982093811035
    5. '	s' → logprob: -13.450982093811035
    6. ' ' → logprob: -13.575982093811035
    7. 'la' → logprob: -13.825982093811035
    8. '   ' → logprob: -13.950982093811035
    9. '(s' → logprob: -14.388482093811035
    10. '`s' → logprob: -14.450982093811035

Token 195: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0013259568950161338
    2. ' s' → logprob: -6.626326084136963
    3. ' ' → logprob: -17.126325607299805
    4. '   ' → logprob: -18.001325607299805
    5. '(s' → logprob: -18.501325607299805
    6. ' ' → logprob: -19.001325607299805
    7. 'red' → logprob: -19.251325607299805
    8. '_s' → logprob: -19.501325607299805
    9. 'range' → logprob: -19.563825607299805
    10. '	s' → logprob: -19.688825607299805

Token 196: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6192436218261719
    2. ')' → logprob: -1.7442436218261719
    3. 'for' → logprob: -1.8692436218261719
    4. ' for' → logprob: -2.994243621826172
    5. ' ' → logprob: -4.369243621826172
    6. ' if' → logprob: -4.494243621826172
    7. '
' → logprob: -4.494243621826172
    8. '"' → logprob: -4.619243621826172
    9. '  ' → logprob: -4.619243621826172
    10. 'if' → logprob: -4.869243621826172

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0244703721255064
    2. 'red' → logprob: -4.399470329284668
    3. '    
' → logprob: -5.024470329284668
    4. ' for' → logprob: -6.774470329284668
    5. '  ' → logprob: -6.899470329284668
    6. 'for' → logprob: -7.149470329284668
    7. 'blue' → logprob: -7.649470329284668
    8. ' red' → logprob: -7.899470329284668
    9. '   
' → logprob: -8.024470329284668
    10. 'r' → logprob: -8.524470329284668

Token 198: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.0017295641591772437
    2. ' blue' → logprob: -6.876729488372803
    3. 'for' → logprob: -7.376729488372803
    4. '   ' → logprob: -9.876729965209961
    5. ' for' → logprob: -12.126729965209961
    6. ' bleu' → logprob: -12.126729965209961
    7. 'blu' → logprob: -12.626729965209961
    8. 'red' → logprob: -13.001729965209961
    9. 'ble' → logprob: -13.751729965209961
    10. ' ' → logprob: -14.376729965209961

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141783356666565
    2. '=' → logprob: -1.7014178037643433
    3. '=""' → logprob: -12.701417922973633
    4. ' ' → logprob: -13.826417922973633
    5. 's' → logprob: -15.826417922973633
    6. '  ' → logprob: -16.576417922973633
    7. '   ' → logprob: -16.701417922973633
    8. '="' → logprob: -17.201417922973633
    9. '	' → logprob: -17.951417922973633
    10. ' ="' → logprob: -17.951417922973633

Token 200: ' ""' (ID: 3216)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.0005593468667939305
    2. ' ""' → logprob: -7.500559329986572
    3. '''' → logprob: -12.25055980682373
    4. '"' → logprob: -13.37555980682373
    5. '("")' → logprob: -17.625558853149414
    6. '""""' → logprob: -18.000558853149414
    7. '"":' → logprob: -18.125558853149414
    8. ' ' → logprob: -19.000558853149414
    9. '"""' → logprob: -19.000558853149414
    10. '"",' → logprob: -19.250558853149414

Token 201: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012872596271336079
    2. '<|end|>' → logprob: -7.626287460327148
    3. 'for' → logprob: -7.876287460327148
    4. ' for' → logprob: -8.626287460327148
    5. '  ' → logprob: -9.501287460327148
    6. '    
' → logprob: -9.876287460327148
    7. '
' → logprob: -10.001287460327148
    8. ' ' → logprob: -10.501287460327148
    9. '	for' → logprob: -11.251287460327148
    10. '<|end|>' → logprob: -11.376287460327148

Token 202: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003536517033353448
    2. '  ' → logprob: -6.753536701202393
    3. '<|end|>' → logprob: -7.003536701202393
    4. ' ' → logprob: -7.503536701202393
    5. 'for' → logprob: -8.253536224365234
    6. '    
' → logprob: -8.378536224365234
    7. '
' → logprob: -8.753536224365234
    8. ' for' → logprob: -9.378536224365234
    9. '<|end|>' → logprob: -10.003536224365234
    10. '  
' → logprob: -10.378536224365234

Token 203: ' Cr' (ID: 5790)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.9136518239974976
    2. '#' → logprob: -1.7886518239974976
    3. ' for' → logprob: -1.9136518239974976
    4. ' red' → logprob: -2.788651943206787
    5. ' ' → logprob: -2.913651943206787
    6. ' #' → logprob: -3.163651943206787
    7. '   ' → logprob: -3.163651943206787
    8. 'for' → logprob: -3.413651943206787
    9. 'blue' → logprob: -4.038651943206787
    10. 'Créer' → logprob: -4.413651943206787

Token 204: 'éer' (ID: 83012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8686560392379761
    2. 'rer' → logprob: -1.368656039237976
    3. 'éer' → logprob: -1.743656039237976
    4. 'reate' → logprob: -2.6186561584472656
    5. 'ré' → logprob: -3.9936561584472656
    6. 'reat' → logprob: -4.618656158447266
    7. 're' → logprob: -4.618656158447266
    8. 'rée' → logprob: -4.993656158447266
    9. '#' → logprob: -5.493656158447266
    10. 'arer' → logprob: -5.743656158447266

Token 205: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.02490662969648838
    2. 'une' → logprob: -4.149906635284424
    3. '   ' → logprob: -5.274906635284424
    4. ' ' → logprob: -7.024906635284424
    5. 'a' → logprob: -7.399906635284424
    6. 'red' → logprob: -8.024906158447266
    7. '    ' → logprob: -8.024906158447266
    8. '  ' → logprob: -8.149906158447266
    9. '"' → logprob: -8.524906158447266
    10. ' a' → logprob: -8.899906158447266

Token 206: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.40660062432289124
    2. 'chaine' → logprob: -1.1566005945205688
    3. 'cha' → logprob: -4.531600475311279
    4. ' chaine' → logprob: -4.781600475311279
    5. 'chain' → logprob: -9.656600952148438
    6. 'string' → logprob: -9.656600952148438
    7. ' chaînes' → logprob: -9.781600952148438
    8. '"' → logprob: -10.156600952148438
    9. ' ' → logprob: -10.281600952148438
    10. '_' → logprob: -10.656600952148438

Token 207: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.4745107889175415
    2. ' vide' → logprob: -0.9745107889175415
    3. ' empty' → logprob: -8.47451114654541
    4. 'empty' → logprob: -9.34951114654541
    5. ' bleu' → logprob: -10.22451114654541
    6. '=""' → logprob: -11.09951114654541
    7. 'vid' → logprob: -11.22451114654541
    8. 'vider' → logprob: -11.34951114654541
    9. 'ble' → logprob: -11.34951114654541
    10. '""' → logprob: -11.47451114654541

Token 208: ' '' (ID: 461)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.19389837980270386
    2. 'blue' → logprob: -2.5688984394073486
    3. ''' → logprob: -3.1938984394073486
    4. ' '' → logprob: -3.8188984394073486
    5. '"' → logprob: -4.5688982009887695
    6. ' bleu' → logprob: -4.8188982009887695
    7. ' ' → logprob: -4.9438982009887695
    8. ' ' → logprob: -5.5688982009887695
    9. '   ' → logprob: -5.8188982009887695
    10. '  ' → logprob: -7.4438982009887695

Token 209: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.0030487736221402884
    2. 'red' → logprob: -6.503048896789551
    3. ' blue' → logprob: -6.753048896789551
    4. 's' → logprob: -8.00304889678955
    5. 'ble' → logprob: -10.87804889678955
    6. ''' → logprob: -11.75304889678955
    7. ' bleu' → logprob: -12.12804889678955
    8. ' s' → logprob: -12.62804889678955
    9. ' ' → logprob: -12.87804889678955
    10. '"' → logprob: -13.50304889678955

Token 210: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2581702172756195
    2. '"' → logprob: -1.508170247077942
    3. '   ' → logprob: -5.258170127868652
    4. ' =' → logprob: -8.383170127868652
    5. ' "' → logprob: -8.508170127868652
    6. '""' → logprob: -8.758170127868652
    7. '  ' → logprob: -9.133170127868652
    8. '"""' → logprob: -9.508170127868652
    9. '''' → logprob: -10.258170127868652
    10. ''"' → logprob: -10.508170127868652

Token 211: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7979950904846191
    2. '<|end|>' → logprob: -0.9229950904846191
    3. '  ' → logprob: -2.547995090484619
    4. ' ' → logprob: -3.297995090484619
    5. ' for' → logprob: -4.297995090484619
    6. '<|end|>' → logprob: -4.672995090484619
    7. '
' → logprob: -5.297995090484619
    8. 'for' → logprob: -5.547995090484619
    9. '  
' → logprob: -6.422995090484619
    10. '    
' → logprob: -6.797995090484619

Token 212: ' cont' (ID: 836)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.125935897231102
    2. ' cont' → logprob: -2.5009357929229736
    3. 'conten' → logprob: -3.5009357929229736
    4. 'con' → logprob: -6.125936031341553
    5. '   ' → logprob: -6.875936031341553
    6. ' contient' → logprob: -7.000936031341553
    7. 'contain' → logprob: -7.500936031341553
    8. '_cont' → logprob: -7.625936031341553
    9. 'contin' → logprob: -8.625935554504395
    10. '  ' → logprob: -8.875935554504395

Token 213: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.390133261680603
    2. 'iend' → logprob: -1.140133261680603
    3. 'endra' → logprob: -6.265133380889893
    4. 'ient' → logprob: -7.265133380889893
    5. 'in' → logprob: -8.390132904052734
    6. 'enir' → logprob: -9.140132904052734
    7. 'iennent' → logprob: -9.515132904052734
    8. 'en' → logprob: -9.890132904052734
    9. 'ien' → logprob: -11.015132904052734
    10. 'a' → logprob: -11.140132904052734

Token 214: 'endra' (ID: 32364)
  Prédit: 'endra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endra' → logprob: -0.0011285445652902126
    2. 'end' → logprob: -7.376128673553467
    3. 'ent' → logprob: -7.876128673553467
    4. 'nd' → logprob: -9.751128196716309
    5. 'n' → logprob: -10.876128196716309
    6. '   ' → logprob: -11.126128196716309
    7. 'en' → logprob: -11.626128196716309
    8. 'entra' → logprob: -12.126128196716309
    9. 'endr' → logprob: -12.501128196716309
    10. 'andra' → logprob: -13.001128196716309

Token 215: ' d' (ID: 272)
  Prédit: ' certains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' certains' → logprob: -0.010944414883852005
    2. ' certain' → logprob: -5.635944366455078
    3. ' s' → logprob: -5.885944366455078
    4. ' des' → logprob: -6.135944366455078
    5. ' ' → logprob: -7.260944366455078
    6. 's' → logprob: -7.510944366455078
    7. 'certain' → logprob: -7.635944366455078
    8. ' some' → logprob: -8.510944366455078
    9. ' certaines' → logprob: -8.635944366455078
    10. '  ' → logprob: -10.010944366455078

Token 216: ''autres' (ID: 38753)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.8566316962242126
    2. 's' → logprob: -1.1066317558288574
    3. ''autres' → logprob: -2.1066317558288574
    4. 'e' → logprob: -3.2316317558288574
    5. ' s' → logprob: -3.7316317558288574
    6. ''' → logprob: -3.9816317558288574
    7. 'eux' → logprob: -4.356631755828857
    8. ' certains' → logprob: -4.856631755828857
    9. 'certain' → logprob: -5.606631755828857
    10. '   ' → logprob: -5.856631755828857

Token 217: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.037457533180713654
    2. 'car' → logprob: -3.6624574661254883
    3. ' caracteres' → logprob: -5.162457466125488
    4. ' ' → logprob: -6.412457466125488
    5. ' caract' → logprob: -6.537457466125488
    6. ' car' → logprob: -7.662457466125488
    7. ' s' → logprob: -7.662457466125488
    8. ' des' → logprob: -8.162457466125488
    9. 's' → logprob: -8.537457466125488
    10. '<|end|>' → logprob: -8.662457466125488

Token 218: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028568280395120382
    2. '<|end|>' → logprob: -7.002856731414795
    3. '  ' → logprob: -7.627856731414795
    4. '    
' → logprob: -7.877856731414795
    5. ' for' → logprob: -8.127857208251953
    6. 'for' → logprob: -8.502857208251953
    7. '    ' → logprob: -8.627857208251953
    8. ' ' → logprob: -8.752857208251953
    9. '
' → logprob: -9.627857208251953
    10. '<|end|>' → logprob: -9.752857208251953

Token 219: ' '' (ID: 461)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.31519609689712524
    2. 's' → logprob: -1.3151960372924805
    3. ' '' → logprob: -7.0651960372924805
    4. ''s' → logprob: -7.0651960372924805
    5. ''' → logprob: -8.56519603729248
    6. ' ' → logprob: -10.81519603729248
    7. '_s' → logprob: -12.69019603729248
    8. '(s' → logprob: -12.81519603729248
    9. ' ' → logprob: -13.31519603729248
    10. '	s' → logprob: -13.69019603729248

Token 220: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014316289685666561
    2. ' s' → logprob: -4.264316082000732
    3. ''s' → logprob: -9.13931655883789
    4. ''' → logprob: -10.38931655883789
    5. ' ' → logprob: -11.76431655883789
    6. '	s' → logprob: -13.26431655883789
    7. '   ' → logprob: -13.63931655883789
    8. '_s' → logprob: -14.13931655883789
    9. '(s' → logprob: -14.38931655883789
    10. ' '' → logprob: -14.76431655883789

Token 221: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11840037256479263
    2. ''' → logprob: -2.2434003353118896
    3. ''
' → logprob: -5.618400573730469
    4. '"' → logprob: -6.368400573730469
    5. '
' → logprob: -9.493400573730469
    6. 'for' → logprob: -10.368400573730469
    7. '')' → logprob: -10.868400573730469
    8. ''
' → logprob: -10.993400573730469
    9. '"
' → logprob: -11.118400573730469
    10. ' for' → logprob: -11.243400573730469

Token 222: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04318803921341896
    2. ' for' → logprob: -3.7931880950927734
    3. 'for' → logprob: -4.668188095092773
    4. '
' → logprob: -5.668188095092773
    5. '	for' → logprob: -6.168188095092773
    6. '    
' → logprob: -6.168188095092773
    7. '<|end|>' → logprob: -6.418188095092773
    8. '  
' → logprob: -8.043188095092773
    9. ' 
' → logprob: -8.793188095092773
    10. '  ' → logprob: -8.793188095092773

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018544020131230354
    2. 'for' → logprob: -4.0185441970825195
    3. ' for' → logprob: -7.8935441970825195
    4. '	for' → logprob: -11.01854419708252
    5. '   ' → logprob: -12.51854419708252
    6. ' ' → logprob: -15.51854419708252
    7. '  ' → logprob: -15.64354419708252
    8. '   ' → logprob: -15.89354419708252
    9. '       ' → logprob: -16.143543243408203
    10. '    
' → logprob: -16.143543243408203

Token 224: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4974866644479334e-05
    2. '   ' → logprob: -11.500015258789062
    3. ' for' → logprob: -12.250015258789062
    4. '	for' → logprob: -18.375015258789062
    5. ' ' → logprob: -18.750015258789062
    6. '  ' → logprob: -21.500015258789062
    7. '#' (adapté à ' #') → logprob: -22.375015258789062
    8. '```' → logprob: -23.125015258789062
    9. '    
' → logprob: -23.750015258789062
    10. 'i' → logprob: -24.375015258789062

Token 225: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.674858301877975e-05
    2. ' for' → logprob: -9.250096321105957
    3. '   ' → logprob: -14.500096321105957
    4. '#' → logprob: -17.375097274780273
    5. 'pour' → logprob: -17.625097274780273
    6. '	for' → logprob: -17.875097274780273
    7. ' ' → logprob: -18.375097274780273
    8. 'For' → logprob: -19.375097274780273
    9. 'Pour' → logprob: -20.625097274780273
    10. '  ' → logprob: -20.750097274780273

Token 226: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47634029388427734
    2. ' for' → logprob: -0.9763402938842773
    3. '   ' → logprob: -6.101340293884277
    4. '	for' → logprob: -11.726340293884277
    5. 'pour' → logprob: -11.976340293884277
    6. ' ' → logprob: -12.976340293884277
    7. ' pour' → logprob: -12.976340293884277
    8. '  ' → logprob: -14.726340293884277
    9. 'n' → logprob: -14.851340293884277
    10. '#' → logprob: -15.101340293884277

Token 227: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.2475460022687912
    2. 'ours' → logprob: -2.1225459575653076
    3. 'oure' → logprob: -2.8725459575653076
    4. 'our' → logprob: -3.3725459575653076
    5. 'ourse' → logprob: -4.997546195983887
    6. 'orre' → logprob: -6.622546195983887
    7. '#' → logprob: -8.622546195983887
    8. '_' → logprob: -8.872546195983887
    9. '
' → logprob: -9.872546195983887
    10. 'court' → logprob: -10.497546195983887

Token 228: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03883381932973862
    2. 'range' → logprob: -3.2888338565826416
    3. ' len' → logprob: -7.6638336181640625
    4. ' n' → logprob: -9.163833618164062
    5. ' ' → logprob: -9.413833618164062
    6. ' i' → logprob: -9.788833618164062
    7. ' for' → logprob: -10.538833618164062
    8. 'len' → logprob: -11.038833618164062
    9. 'n' → logprob: -11.038833618164062
    10. ' in' → logprob: -11.663833618164062

Token 229: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.020091688260436058
    2. 'i' → logprob: -4.020091533660889
    3. ' index' → logprob: -6.520091533660889
    4. 'index' → logprob: -8.270092010498047
    5. ' ' → logprob: -10.020092010498047
    6. 'indice' → logprob: -10.020092010498047
    7. ' idx' → logprob: -10.395092010498047
    8. ' indice' → logprob: -10.770092010498047
    9. ' position' → logprob: -11.145092010498047
    10. ' caractère' → logprob: -11.520092010498047

Token 230: ' du' (ID: 1462)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16681912541389465
    2. ' in' → logprob: -2.2918190956115723
    3. 'i' → logprob: -3.4168190956115723
    4. ' dans' → logprob: -5.041819095611572
    5. ' for' → logprob: -5.291819095611572
    6. ' de' → logprob: -6.041819095611572
    7. 'in' → logprob: -6.041819095611572
    8. 'for' → logprob: -6.916819095611572
    9. 'dans' → logprob: -7.166819095611572
    10. '   ' → logprob: -7.916819095611572

Token 231: ' mot' (ID: 3598)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6725340485572815
    2. 'range' → logprob: -1.6725339889526367
    3. 's' → logprob: -1.7975339889526367
    4. ' s' → logprob: -2.2975339889526367
    5. 'n' → logprob: -3.4225339889526367
    6. ' n' → logprob: -6.297533988952637
    7. ' ' → logprob: -7.172533988952637
    8. ' for' → logprob: -8.797533988952637
    9. 'string' → logprob: -9.297533988952637
    10. ' string' → logprob: -10.047533988952637

Token 232: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3287763297557831
    2. ' i' → logprob: -1.9537763595581055
    3. 'for' → logprob: -2.0787763595581055
    4. 'i' → logprob: -4.9537763595581055
    5. ' in' → logprob: -6.7037763595581055
    6. 'n' → logprob: -6.8287763595581055
    7. 's' → logprob: -6.9537763595581055
    8. ' range' → logprob: -6.9537763595581055
    9. 'range' → logprob: -7.4537763595581055
    10. ' n' → logprob: -7.7037763595581055

Token 233: ' n' (ID: 297)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5729233026504517
    2. 's' → logprob: -1.5729233026504517
    3. 'n' → logprob: -1.9479233026504517
    4. 'long' → logprob: -3.947923183441162
    5. ' s' → logprob: -4.072923183441162
    6. 'length' → logprob: -4.197923183441162
    7. ' range' → logprob: -5.322923183441162
    8. ' longueur' → logprob: -5.447923183441162
    9. ' ' → logprob: -5.572923183441162
    10. 'i' → logprob: -5.697923183441162

Token 234: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -1.5555391311645508
    2. 's' → logprob: -1.6805391311645508
    3. 'car' → logprob: -1.9305391311645508
    4. 'for' → logprob: -2.555539131164551
    5. 'bits' → logprob: -2.805539131164551
    6. ' caracteres' → logprob: -3.180539131164551
    7. ' for' → logprob: -3.305539131164551
    8. 'i' → logprob: -3.305539131164551
    9. ' caract' → logprob: -3.555539131164551
    10. 'n' → logprob: -3.555539131164551

Token 235: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5993030667304993
    2. 'for' → logprob: -0.8493030667304993
    3. '   ' → logprob: -4.349303245544434
    4. ' in' → logprob: -5.099303245544434
    5. 'in' → logprob: -5.974303245544434
    6. 'range' → logprob: -7.224303245544434
    7. ' range' → logprob: -8.349303245544434
    8. ':' → logprob: -8.474303245544434
    9. ',' → logprob: -9.224303245544434
    10. 'n' → logprob: -9.724303245544434

Token 236: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.508987545967102
    2. ' for' → logprob: -1.008987545967102
    3. 'for' → logprob: -3.3839874267578125
    4. '	for' → logprob: -8.758987426757812
    5. '    ' → logprob: -9.883987426757812
    6. '    
' → logprob: -10.258987426757812
    7. ' ' → logprob: -10.508987426757812
    8. '   ' → logprob: -10.633987426757812
    9. '  ' → logprob: -10.758987426757812
    10. ' ' → logprob: -10.883987426757812

Token 237: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11758849024772644
    2. ' range' → logprob: -2.617588520050049
    3. 'i' → logprob: -3.492588520050049
    4. ' i' → logprob: -5.367588520050049
    5. 'for' → logprob: -6.117588520050049
    6. '_' → logprob: -7.617588520050049
    7. 'n' → logprob: -9.61758804321289
    8. ' for' → logprob: -9.86758804321289
    9. ' ' → logprob: -11.11758804321289
    10. '_range' → logprob: -11.36758804321289

Token 238: ' variable' (ID: 11076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6522426009178162
    2. 'range' → logprob: -0.9022426009178162
    3. ' range' → logprob: -2.777242660522461
    4. ' for' → logprob: -4.527242660522461
    5. 'rang' → logprob: -9.402242660522461
    6. 'i' → logprob: -9.777242660522461
    7. 'n' → logprob: -10.027242660522461
    8. '   ' → logprob: -10.277242660522461
    9. ' ' → logprob: -10.277242660522461
    10. 'position' → logprob: -10.277242660522461

Token 239: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31337663531303406
    2. ' i' → logprob: -1.3133766651153564
    3. 'j' → logprob: -9.688376426696777
    4. 'pos' → logprob: -10.813376426696777
    5. ' j' → logprob: -11.688376426696777
    6. ' ' → logprob: -11.688376426696777
    7. '	i' → logprob: -12.063376426696777
    8. 'idx' → logprob: -12.938376426696777
    9. 'index' → logprob: -13.313376426696777
    10. ' index' → logprob: -13.938376426696777

Token 240: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0018686638213694096
    2. ' i' → logprob: -6.376868724822998
    3. 'j' → logprob: -9.00186824798584
    4. 'pos' → logprob: -10.25186824798584
    5. 'index' → logprob: -13.25186824798584
    6. 'idx' → logprob: -13.25186824798584
    7. '	i' → logprob: -13.75186824798584
    8. 'k' → logprob: -14.25186824798584
    9. ' ' → logprob: -14.50186824798584
    10. 'p' → logprob: -14.50186824798584

Token 241: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07022073864936829
    2. 'in' → logprob: -3.320220708847046
    3. ')' → logprob: -3.820220708847046
    4. '):' → logprob: -5.570220947265625
    5. ''' → logprob: -6.195220947265625
    6. ' for' → logprob: -6.820220947265625
    7. ' en' → logprob: -7.070220947265625
    8. 'for' → logprob: -7.695220947265625
    9. '   ' → logprob: -7.820220947265625
    10. ' '' → logprob: -8.320220947265625

Token 242: ' allant' (ID: 122150)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.192941352725029
    2. 'in' → logprob: -2.067941427230835
    3. ' for' → logprob: -3.567941427230835
    4. 'for' → logprob: -4.317941188812256
    5. '   ' → logprob: -4.942941188812256
    6. ',' → logprob: -9.317941665649414
    7. ' en' → logprob: -9.442941665649414
    8. ' ' → logprob: -10.192941665649414
    9. '	for' → logprob: -10.442941665649414
    10. '  ' → logprob: -10.942941665649414

Token 243: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5176485776901245
    2. ' in' → logprob: -1.3926485776901245
    3. 'de' → logprob: -3.017648696899414
    4. 'in' → logprob: -3.017648696899414
    5. 'from' → logprob: -4.017648696899414
    6. ' range' → logprob: -4.017648696899414
    7. 'range' → logprob: -4.267648696899414
    8. ' from' → logprob: -5.642648696899414
    9. ' en' → logprob: -6.392648696899414
    10. ' dans' → logprob: -6.892648696899414

Token 244: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012203442165628076
    2. ' ' → logprob: -6.876220226287842
    3. ' range' → logprob: -8.751220703125
    4. 'range' → logprob: -10.501220703125
    5. 'n' → logprob: -14.126220703125
    6. '   ' → logprob: -14.751220703125
    7. ' n' → logprob: -15.126220703125
    8. ' i' → logprob: -16.376220703125
    9. ' ' → logprob: -16.751220703125
    10. '1' → logprob: -17.001220703125

Token 245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. 'range' → logprob: -12.625003814697266
    3. ' range' → logprob: -15.125003814697266
    4. ' ' → logprob: -15.375003814697266
    5. 'n' → logprob: -20.500003814697266
    6. '۰' → logprob: -21.250003814697266
    7. 'for' → logprob: -21.375003814697266
    8. '1' → logprob: -21.875003814697266
    9. '=' → logprob: -22.500003814697266
    10. 'i' → logprob: -23.125003814697266

Token 246: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0654946118593216
    2. 'à' → logprob: -3.4404945373535156
    3. ' to' → logprob: -3.8154945373535156
    4. 'to' → logprob: -5.190494537353516
    5. ' ' → logprob: -6.065494537353516
    6. ' jusqu' → logprob: -7.065494537353516
    7. '   ' → logprob: -8.190494537353516
    8. ' n' → logprob: -9.190494537353516
    9. 'n' → logprob: -10.190494537353516
    10. ' a' → logprob: -10.565494537353516

Token 247: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759432911872864
    2. 'n' → logprob: -0.8259432911872864
    3. ' ' → logprob: -13.325942993164062
    4. '	n' → logprob: -13.575942993164062
    5. ' range' → logprob: -14.450942993164062
    6. '   ' → logprob: -15.575942993164062
    7. 'range' → logprob: -16.575942993164062
    8. '1' → logprob: -17.200942993164062
    9. '0' → logprob: -17.575942993164062
    10. '(n' → logprob: -17.825942993164062

Token 248: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10839854925870895
    2. ' -' → logprob: -2.9833984375
    3. ':' → logprob: -3.2333984375
    4. 'for' → logprob: -4.8583984375
    5. ' for' → logprob: -6.4833984375
    6. '   ' → logprob: -6.6083984375
    7. ':
' → logprob: -7.3583984375
    8. 'n' → logprob: -7.7333984375
    9. '):' → logprob: -8.1083984375
    10. 'range' → logprob: -9.1083984375

Token 249: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -17.75037956237793
    4. 'n' → logprob: -18.00037956237793
    5. '-' → logprob: -18.50037956237793
    6. '```' → logprob: -19.12537956237793
    7. ' n' → logprob: -19.25037956237793
    8. ' ' → logprob: -20.37537956237793
    9. '  ' → logprob: -20.37537956237793
    10. '2' → logprob: -20.87537956237793

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -17.00002098083496
    4. '   ' → logprob: -17.87502098083496
    5. '-' → logprob: -18.62502098083496
    6. 'n' → logprob: -19.37502098083496
    7. '
' → logprob: -19.37502098083496
    8. ' ' → logprob: -19.75002098083496
    9. '2' → logprob: -19.75002098083496
    10. '  ' → logprob: -21.25002098083496

Token 251: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08819561451673508
    2. ' for' → logprob: -2.588195562362671
    3. '
' → logprob: -5.46319580078125
    4. 'for' → logprob: -5.71319580078125
    5. '    
' → logprob: -7.33819580078125
    6. '	for' → logprob: -7.58819580078125
    7. ':' → logprob: -7.96319580078125
    8. '  
' → logprob: -9.83819580078125
    9. '\n' → logprob: -10.33819580078125
    10. '  ' → logprob: -10.71319580078125

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3234696090221405
    2. ' for' → logprob: -1.573469638824463
    3. 'for' → logprob: -2.698469638824463
    4. '	for' → logprob: -6.573469638824463
    5. '    
' → logprob: -8.698469161987305
    6. '
' → logprob: -9.073469161987305
    7. ':' → logprob: -11.323469161987305
    8. '  
' → logprob: -11.948469161987305
    9. ' 
' → logprob: -12.198469161987305
    10. '  ' → logprob: -12.198469161987305

Token 253: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08566103130578995
    2. ' for' → logprob: -2.585660934448242
    3. 'for' (adapté à ' for') → logprob: -5.585660934448242
    4. '	for' → logprob: -5.835660934448242
    5. '    
' → logprob: -10.210660934448242
    6. '   ' → logprob: -11.210660934448242
    7. '
' → logprob: -11.585660934448242
    8. '\t' → logprob: -12.210660934448242
    9. '       ' → logprob: -12.710660934448242
    10. ' ' → logprob: -13.960660934448242

Token 254: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.001933277933858335
    2. 'i' → logprob: -6.2519330978393555
    3. '	i' → logprob: -13.376933097839355
    4. ' ' → logprob: -13.376933097839355
    5. ' ' → logprob: -13.626933097839355
    6. '_i' → logprob: -16.626934051513672
    7. ' ' → logprob: -16.626934051513672
    8. '  ' → logprob: -17.001934051513672
    9. '```' → logprob: -17.626934051513672
    10. ' in' → logprob: -17.626934051513672

Token 255: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009761283174157143
    2. 'in' → logprob: -4.634761333465576
    3. ' ' → logprob: -12.509760856628418
    4. '	in' → logprob: -15.259760856628418
    5. 'In' → logprob: -15.634760856628418
    6. ' ' → logprob: -15.884760856628418
    7. ')' → logprob: -16.384761810302734
    8. ' i' → logprob: -16.572261810302734
    9. 'inth' → logprob: -16.759761810302734
    10. ',' → logprob: -16.884761810302734

Token 256: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023245826363563538
    2. 'range' → logprob: -3.7732458114624023
    3. '	range' → logprob: -15.523245811462402
    4. ' ' → logprob: -16.39824676513672
    5. '(range' → logprob: -16.64824676513672
    6. ' xrange' → logprob: -16.77324676513672
    7. 'n' → logprob: -19.77324676513672
    8. '.range' → logprob: -19.77324676513672
    9. ' rango' → logprob: -19.77324676513672
    10. '_range' → logprob: -20.52324676513672

Token 257: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00026503115077503026
    2. '(' → logprob: -8.250265121459961
    3. ' (' → logprob: -12.750265121459961
    4. 'n' → logprob: -14.250265121459961
    5. ' n' → logprob: -15.500265121459961
    6. '(
' → logprob: -17.37526512145996
    7. '	n' → logprob: -18.12526512145996
    8. '(len' → logprob: -18.50026512145996
    9. '   ' → logprob: -19.00026512145996
    10. ')n' → logprob: -19.25026512145996

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013616628712043166
    2. '):
' → logprob: -6.626361846923828
    3. ' ):' → logprob: -10.876361846923828
    4. ')' → logprob: -11.251361846923828
    5. '):
' → logprob: -13.376361846923828
    6. '   ' → logprob: -13.876361846923828
    7. ':' → logprob: -14.126361846923828
    8. '):

' → logprob: -15.376361846923828
    9. '}:' → logprob: -16.126361846923828
    10. '():' → logprob: -16.876361846923828

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03395906090736389
    2. '   ' → logprob: -4.158958911895752
    3. ' ' → logprob: -5.408958911895752
    4. '<|end|>' → logprob: -5.408958911895752
    5. '    ' → logprob: -5.533958911895752
    6. ' if' → logprob: -6.283958911895752
    7. '        
' → logprob: -7.283958911895752
    8. ' 
' → logprob: -8.03395938873291
    9. ':' → logprob: -8.15895938873291
    10. 'if' → logprob: -8.53395938873291

Token 260: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6747833490371704
    2. ' if' → logprob: -0.7997833490371704
    3. 'if' → logprob: -3.799783229827881
    4. '   ' → logprob: -4.549783229827881
    5. ' 
' → logprob: -5.674783229827881
    6. '    ' → logprob: -6.174783229827881
    7. '        
' → logprob: -7.049783229827881
    8. ' ' → logprob: -7.174783229827881
    9. '     
' → logprob: -8.549783706665039
    10. '    
' → logprob: -8.674783706665039

Token 261: ' Vér' (ID: 159169)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12699204683303833
    2. 'if' → logprob: -2.1269919872283936
    3. '   ' → logprob: -10.251992225646973
    4. '       ' → logprob: -11.376992225646973
    5. '    ' → logprob: -11.751992225646973
    6. ' ' → logprob: -12.001992225646973
    7. ' ' → logprob: -13.876992225646973
    8. '	if' → logprob: -14.001992225646973
    9. '  ' → logprob: -14.626992225646973
    10. ' 
' → logprob: -15.751992225646973

Token 262: 'ifie' (ID: 46409)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2018834948539734
    2. 'ifie' → logprob: -2.451883554458618
    3. 'ifier' → logprob: -2.951883554458618
    4. 'ifiez' → logprob: -4.201883316040039
    5. ' if' → logprob: -4.326883316040039
    6. '   ' → logprob: -4.326883316040039
    7. '       ' → logprob: -6.826883316040039
    8. 'f' → logprob: -6.951883316040039
    9. 'ify' → logprob: -7.701883316040039
    10. 'ifiant' → logprob: -8.951883316040039

Token 263: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.019166607409715652
    2. ' (' → logprob: -4.769166469573975
    3. ' ' → logprob: -5.144166469573975
    4. 'if' → logprob: -5.394166469573975
    5. '  ' → logprob: -10.894166946411133
    6. '(' → logprob: -11.019166946411133
    7. ' ' → logprob: -11.019166946411133
    8. '   ' → logprob: -11.144166946411133
    9. ' si' → logprob: -11.144166946411133
    10. ' bit' → logprob: -11.394166946411133

Token 264: ' le' (ID: 505)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.360106885433197
    2. ' (' → logprob: -1.4851069450378418
    3. ' bit' → logprob: -2.610106945037842
    4. 'bit' → logprob: -6.110106945037842
    5. '(' → logprob: -9.485106468200684
    6. '((' → logprob: -10.235106468200684
    7. ' ' → logprob: -10.360106468200684
    8. ' ((' → logprob: -11.110106468200684
    9. '(b' → logprob: -11.985106468200684
    10. ' not' → logprob: -13.360106468200684

Token 265: ' i' (ID: 575)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.48700135946273804
    2. 'bit' → logprob: -1.6120014190673828
    3. ' bit' → logprob: -1.7370014190673828
    4. ' (' → logprob: -4.612001419067383
    5. '((' → logprob: -10.487001419067383
    6. '(' → logprob: -10.612001419067383
    7. ' ' → logprob: -12.987001419067383
    8. ' ((' → logprob: -12.987001419067383
    9. '   ' → logprob: -13.487001419067383
    10. '(b' → logprob: -13.612001419067383

Token 266: '-' (ID: 12)
  Prédit: '-th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-th' → logprob: -0.6454076170921326
    2. 'th' → logprob: -0.8954076170921326
    3. ' &' → logprob: -3.1454076766967773
    4. 'f' → logprob: -4.770407676696777
    5. 'n' → logprob: -5.895407676696777
    6. ' ' → logprob: -5.895407676696777
    7. '&' → logprob: -6.020407676696777
    8. ' bit' → logprob: -6.270407676696777
    9. 'nt' → logprob: -6.395407676696777
    10. 't' → logprob: -6.770407676696777

Token 267: 'ème' (ID: 9767)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.29712939262390137
    2. '-th' → logprob: -1.4221293926239014
    3. ' bit' → logprob: -4.7971296310424805
    4. ''t' → logprob: -5.1721296310424805
    5. 'bit' → logprob: -7.0471296310424805
    6. '_th' → logprob: -8.67212963104248
    7. ' th' → logprob: -9.04712963104248
    8. 't' → logprob: -9.17212963104248
    9. ' &' → logprob: -9.17212963104248
    10. 'nth' → logprob: -9.17212963104248

Token 268: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5283061265945435
    2. ' bit' → logprob: -0.9033061265945435
    3. 'car' → logprob: -6.403306007385254
    4. ' caractère' → logprob: -7.028306007385254
    5. ' ' → logprob: -7.528306007385254
    6. '(bit' → logprob: -7.653306007385254
    7. ' caract' → logprob: -7.778306007385254
    8. 'space' → logprob: -8.653306007385254
    9. ')' → logprob: -8.903306007385254
    10. '```' → logprob: -9.153306007385254

Token 269: ' de' (ID: 334)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.13967177271842957
    2. '&' → logprob: -2.889671802520752
    3. ' (' → logprob: -3.014671802520752
    4. '(bit' → logprob: -4.389671802520752
    5. ' bit' → logprob: -4.889671802520752
    6. ' of' → logprob: -6.389671802520752
    7. ' de' → logprob: -6.639671802520752
    8. '(' → logprob: -6.889671802520752
    9. ')' → logprob: -7.764671802520752
    10. ' in' → logprob: -7.889671802520752

Token 270: ' '' (ID: 461)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.38804468512535095
    2. 'bit' → logprob: -1.1380447149276733
    3. '(bit' → logprob: -6.763044834136963
    4. ' (' → logprob: -11.138044357299805
    5. '(' → logprob: -13.888044357299805
    6. 'bitr' → logprob: -14.763044357299805
    7. ' ' → logprob: -15.013044357299805
    8. '_bit' → logprob: -15.388044357299805
    9. 'Bit' → logprob: -15.638044357299805
    10. ' бит' → logprob: -15.763044357299805

Token 271: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.18415266275405884
    2. ' bit' → logprob: -1.809152603149414
    3. '(bit' → logprob: -5.434152603149414
    4. ' (' → logprob: -10.934152603149414
    5. '(' → logprob: -11.934152603149414
    6. 'bitr' → logprob: -13.059152603149414
    7. 'Bit' → logprob: -13.684152603149414
    8. '_bit' → logprob: -13.684152603149414
    9. 'b' → logprob: -14.059152603149414
    10. ' бит' → logprob: -14.309152603149414

Token 272: ''' (ID: 6)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.04342011734843254
    2. ''' → logprob: -3.6684200763702393
    3. ')' → logprob: -5.043420314788818
    4. '&' → logprob: -5.168420314788818
    5. ' '' → logprob: -6.668420314788818
    6. ' ' → logprob: -6.793420314788818
    7. ' >>' → logprob: -7.043420314788818
    8. '>>' → logprob: -7.668420314788818
    9. ' )' → logprob: -8.16841983795166
    10. '"' → logprob: -8.91841983795166

Token 273: ' est' (ID: 893)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.004201867152005434
    2. '&' → logprob: -5.504201889038086
    3. ' ' → logprob: -9.379201889038086
    4. ' (' → logprob: -11.254201889038086
    5. ' is' → logprob: -11.504201889038086
    6. ' &
' → logprob: -12.379201889038086
    7. ' ' → logprob: -13.004201889038086
    8. '=' → logprob: -13.629201889038086
    9. '   ' → logprob: -13.754201889038086
    10. ')' → logprob: -14.004201889038086

Token 274: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34404492378234863
    2. ' set' → logprob: -1.4690449237823486
    3. ' ' → logprob: -2.8440449237823486
    4. 'set' → logprob: -6.3440446853637695
    5. '0' → logprob: -7.3440446853637695
    6. '_set' → logprob: -8.96904468536377
    7. '```' → logprob: -9.84404468536377
    8. ' (' → logprob: -10.21904468536377
    9. '(' → logprob: -10.84404468536377
    10. ' fixé' → logprob: -11.09404468536377

Token 275: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20365162193775177
    2. ' ' → logprob: -1.7036516666412354
    3. '0' → logprob: -6.453651428222656
    4. 'e' → logprob: -7.953651428222656
    5. 'é' → logprob: -9.078651428222656
    6. '```' → logprob: -9.703651428222656
    7. '=' → logprob: -10.828651428222656
    8. ' set' → logprob: -10.828651428222656
    9. ' bit' → logprob: -11.078651428222656
    10. 'b' → logprob: -11.703651428222656

Token 276: 'c' (ID: 66)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04860905185341835
    2. ' bit' → logprob: -3.9236090183258057
    3. '(bit' → logprob: -4.548609256744385
    4. ')' → logprob: -5.048609256744385
    5. '(' → logprob: -5.173609256744385
    6. '1' → logprob: -5.798609256744385
    7. ' )' → logprob: -7.548609256744385
    8. ' ' → logprob: -7.548609256744385
    9. ' ((' → logprob: -8.298608779907227
    10. '   ' → logprob: -8.548608779907227

Token 277: ''est' (ID: 6616)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0877275466918945
    2. 'on' → logprob: -1.8377275466918945
    3. '&' → logprob: -1.9627275466918945
    4. ' &' → logprob: -2.0877275466918945
    5. 'ont' → logprob: -2.2127275466918945
    6. ' ' → logprob: -3.5877275466918945
    7. ')' → logprob: -4.0877275466918945
    8. ''' → logprob: -4.4627275466918945
    9. '(' → logprob: -4.5877275466918945
    10. '=' → logprob: -5.4627275466918945

Token 278: '-à' (ID: 56297)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6345110535621643
    2. '1' → logprob: -2.0095109939575195
    3. '(' → logprob: -2.1345109939575195
    4. ' ' → logprob: -2.7595109939575195
    5. '-à' → logprob: -2.8845109939575195
    6. ' à' → logprob: -3.6345109939575195
    7. '   ' → logprob: -3.7595109939575195
    8. ')' → logprob: -4.5095109939575195
    9. '0' → logprob: -4.7595109939575195
    10. ' (' → logprob: -4.8845109939575195

Token 279: '-dire' (ID: 76064)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18207496404647827
    2. ' ' → logprob: -2.932075023651123
    3. 'n' → logprob: -3.807075023651123
    4. '   ' → logprob: -3.932075023651123
    5. 'set' → logprob: -4.432075023651123
    6. '       ' → logprob: -4.932075023651123
    7. '0' → logprob: -5.182075023651123
    8. '=' → logprob: -5.307075023651123
    9. '(' → logprob: -5.432075023651123
    10. 'v' → logprob: -6.057075023651123

Token 280: ' égal' (ID: 15059)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.4278377592563629
    2. ' (' → logprob: -1.1778377294540405
    3. ' bit' → logprob: -3.42783784866333
    4. '(' → logprob: -5.67783784866333
    5. 'bit' → logprob: -6.05283784866333
    6. '((' → logprob: -7.05283784866333
    7. ' ' → logprob: -8.302837371826172
    8. ' not' → logprob: -8.677837371826172
    9. ' ((' → logprob: -8.802837371826172
    10. '   ' → logprob: -8.927837371826172

Token 281: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1721424013376236
    2. 'à' → logprob: -1.9221423864364624
    3. '1' → logprob: -5.297142505645752
    4. '=' → logprob: -6.172142505645752
    5. '   ' → logprob: -6.547142505645752
    6. ' a' → logprob: -6.672142505645752
    7. ' ' → logprob: -6.797142505645752
    8. 'a' → logprob: -7.922142505645752
    9. ')' → logprob: -8.547142028808594
    10. ''à' → logprob: -8.797142028808594

Token 282: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002070802263915539
    2. ' ' → logprob: -6.252070903778076
    3. '(' → logprob: -9.752070426940918
    4. ' (' → logprob: -10.377070426940918
    5. '   ' → logprob: -10.752070426940918
    6. '((' → logprob: -10.877070426940918
    7. ')' → logprob: -12.002070426940918
    8. '0' → logprob: -12.502070426940918
    9. '```' → logprob: -14.127070426940918
    10. ' ((' → logprob: -14.627070426940918

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003619217313826084
    2. ' ' → logprob: -8.000362396240234
    3. '(' → logprob: -11.000362396240234
    4. ')' → logprob: -12.750362396240234
    5. ' (' → logprob: -12.875362396240234
    6. '   ' → logprob: -13.000362396240234
    7. '((' → logprob: -13.875362396240234
    8. '0' → logprob: -14.000362396240234
    9. '```' → logprob: -15.625362396240234
    10. '  ' → logprob: -17.375362396240234

Token 284: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5346511006355286
    2. ')' → logprob: -0.9096511006355286
    3. ' )' → logprob: -5.659651279449463
    4. '       ' → logprob: -6.034651279449463
    5. ' ):' → logprob: -6.034651279449463
    6. '):
' → logprob: -6.409651279449463
    7. '   ' → logprob: -7.034651279449463
    8. ':' → logprob: -8.409650802612305
    9. ' if' → logprob: -8.534650802612305
    10. ').' → logprob: -9.909650802612305

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007787139620631933
    2. ':' → logprob: -5.132787227630615
    3. ' if' → logprob: -7.132787227630615
    4. '           ' → logprob: -8.257786750793457
    5. '   ' → logprob: -8.382786750793457
    6. ' :' → logprob: -8.507786750793457
    7. 'if' → logprob: -9.382786750793457
    8. ':
' → logprob: -9.632786750793457
    9. ' =' → logprob: -9.757786750793457
    10. '        
' → logprob: -9.882786750793457

Token 286: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23672886192798615
    2. 'if' → logprob: -1.9867289066314697
    3. '       ' → logprob: -2.6117289066314697
    4. '   ' → logprob: -8.61172866821289
    5. '    ' → logprob: -10.48672866821289
    6. '           ' → logprob: -11.61172866821289
    7. '	if' → logprob: -11.98672866821289
    8. ' ' → logprob: -12.73672866821289
    9. ' ' → logprob: -12.73672866821289
    10. '     ' → logprob: -12.98672866821289

Token 287: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05025819316506386
    2. 'if' → logprob: -3.050258159637451
    3. '       ' → logprob: -6.425258159637451
    4. '   ' → logprob: -10.30025863647461
    5. '    ' → logprob: -11.67525863647461
    6. ' ' → logprob: -13.17525863647461
    7. ' ' → logprob: -13.42525863647461
    8. '	if' → logprob: -13.42525863647461
    9. '        
' → logprob: -14.42525863647461
    10. '           ' → logprob: -14.55025863647461

Token 288: '1' (ID: 16)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.33783212304115295
    2. '(bit' → logprob: -1.4628320932388306
    3. ' bit' → logprob: -2.96283221244812
    4. ' (' → logprob: -5.712831974029541
    5. '(' → logprob: -9.8378324508667
    6. '   ' → logprob: -10.9628324508667
    7. '((' → logprob: -10.9628324508667
    8. ' ' → logprob: -11.2128324508667
    9. '(b' → logprob: -12.7128324508667
    10. 'if' → logprob: -12.7128324508667

Token 289: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.07957138121128082
    2. '&' → logprob: -2.829571485519409
    3. ' <<' → logprob: -4.57957124710083
    4. ' &' → logprob: -5.07957124710083
    5. ')' → logprob: -7.57957124710083
    6. '<' → logprob: -8.704571723937988
    7. '>>' → logprob: -8.829571723937988
    8. '&lt' → logprob: -9.329571723937988
    9. ' ' → logprob: -11.204571723937988
    10. ')<<' → logprob: -12.329571723937988

Token 290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007108822464942932
    2. ' i' → logprob: -7.250710964202881
    3. ')' → logprob: -14.250710487365723
    4. ')i' → logprob: -15.500710487365723
    5. '   ' → logprob: -16.87571144104004
    6. '	i' → logprob: -17.00071144104004
    7. ' ' → logprob: -17.75071144104004
    8. '(i' → logprob: -18.62571144104004
    9. '
' → logprob: -18.75071144104004
    10. '```' → logprob: -18.75071144104004

Token 291: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007401806069537997
    2. '&' → logprob: -7.250740051269531
    3. ')&' → logprob: -10.625740051269531
    4. ' )' → logprob: -12.375740051269531
    5. ' &' → logprob: -14.375740051269531
    6. '）' → logprob: -14.875740051269531
    7. '&)' → logprob: -15.750740051269531
    8. '&amp' → logprob: -15.750740051269531
    9. ')
' → logprob: -16.62574005126953
    10. '```' → logprob: -16.75074005126953

Token 292: ' crée' (ID: 102256)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.03044278547167778
    2. ' &' → logprob: -3.530442714691162
    3. ')' → logprob: -7.405442714691162
    4. '&amp' → logprob: -9.90544319152832
    5. ')&' → logprob: -11.40544319152832
    6. '&
' → logprob: -11.53044319152832
    7. ' ' → logprob: -12.78044319152832
    8. '&gt' → logprob: -13.28044319152832
    9. '&s' → logprob: -13.28044319152832
    10. '&r' → logprob: -13.65544319152832

Token 293: ' un' (ID: 537)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2179681062698364
    2. ' un' → logprob: -1.2179681062698364
    3. ' bit' → logprob: -1.5929681062698364
    4. ')' → logprob: -2.967967987060547
    5. ' une' → logprob: -2.967967987060547
    6. ' a' → logprob: -2.967967987060547
    7. '(' → logprob: -3.842967987060547
    8. ' ' → logprob: -4.217967987060547
    9. '(bit' → logprob: -5.092967987060547
    10. '1' → logprob: -5.842967987060547

Token 294: ' nombre' (ID: 9733)
  Prédit: 'mas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mas' → logprob: -0.08752863854169846
    2. 'mask' → logprob: -2.837528705596924
    3. ' masque' → logprob: -4.337528705596924
    4. 'bit' → logprob: -5.087528705596924
    5. 'nombre' → logprob: -6.087528705596924
    6. 'ent' → logprob: -6.712528705596924
    7. '1' → logprob: -6.962528705596924
    8. ' mas' → logprob: -7.837528705596924
    9. '```' → logprob: -7.837528705596924
    10. ' entier' → logprob: -8.837528228759766

Token 295: ' qui' (ID: 2780)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.1402987837791443
    2. '&' → logprob: -2.640298843383789
    3. ' bit' → logprob: -3.390298843383789
    4. ')' → logprob: -4.140298843383789
    5. '   ' → logprob: -5.640298843383789
    6. ' ' → logprob: -6.265298843383789
    7. '=' → logprob: -7.140298843383789
    8. ' )' → logprob: -7.765298843383789
    9. '(bit' → logprob: -7.765298843383789
    10. '1' → logprob: -8.015298843383789

Token 296: ' n' (ID: 297)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20254531502723694
    2. 'a' → logprob: -1.7025452852249146
    3. ' possède' → logprob: -8.077545166015625
    4. ' have' → logprob: -8.577545166015625
    5. ' has' → logprob: -9.077545166015625
    6. ' est' → logprob: -9.077545166015625
    7. 'poss' → logprob: -9.202545166015625
    8. ' contient' → logprob: -9.702545166015625
    9. 'est' → logprob: -9.952545166015625
    10. ' &' → logprob: -10.577545166015625

Token 297: ''a' (ID: 10443)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9819440841674805
    2. '&' → logprob: -1.2319440841674805
    3. 'a' → logprob: -1.2319440841674805
    4. ' &' → logprob: -4.3569440841674805
    5. 'est' → logprob: -4.7319440841674805
    6. '&a' → logprob: -5.1069440841674805
    7. ')' → logprob: -5.3569440841674805
    8. ''a' → logprob: -6.3569440841674805
    9. ''est' → logprob: -6.4819440841674805
    10. ' bit' → logprob: -6.9819440841674805

Token 298: ' qu' (ID: 474)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.706899881362915
    2. ' que' → logprob: -1.206899881362915
    3. ' bit' → logprob: -2.706899881362915
    4. ' a' → logprob: -3.456899881362915
    5. ' qu' → logprob: -3.456899881362915
    6. ' ' → logprob: -3.831899881362915
    7. 'que' → logprob: -4.206899642944336
    8. 'pas' → logprob: -4.331899642944336
    9. 'a' → logprob: -5.331899642944336
    10. 'bit' → logprob: -5.706899642944336

Token 299: ''un' (ID: 9788)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -1.4293893575668335
    2. ' pas' → logprob: -1.5543893575668335
    3. 'pas' → logprob: -2.179389476776123
    4. 'un' → logprob: -2.429389476776123
    5. ' qu' → logprob: -2.429389476776123
    6. 'u' → logprob: -3.179389476776123
    7. '1' → logprob: -3.429389476776123
    8. ' bit' → logprob: -3.804389476776123
    9. 'que' → logprob: -3.929389476776123
    10. ' un' → logprob: -4.054389476776123

Token 300: ' seul' (ID: 33041)
  Prédit: ' seul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seul' → logprob: -0.7830369472503662
    2. ' ' → logprob: -1.2830369472503662
    3. ' bit' → logprob: -1.6580369472503662
    4. '1' → logprob: -2.783036947250366
    5. 'bit' → logprob: -4.533037185668945
    6. ' unique' → logprob: -6.783037185668945
    7. ' ' → logprob: -7.283037185668945
    8. 'se' → logprob: -8.158037185668945
    9. '```' → logprob: -8.908037185668945
    10. ' seule' → logprob: -9.658037185668945

Token 301: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.4966803193092346
    2. 'bit' → logprob: -1.2466802597045898
    3. '1' → logprob: -2.62168025970459
    4. ' ' → logprob: -3.49668025970459
    5. ' ' → logprob: -7.87168025970459
    6. '```' → logprob: -8.37168025970459
    7. 'bits' → logprob: -8.87168025970459
    8. 'b' → logprob: -9.99668025970459
    9. '   ' → logprob: -10.49668025970459
    10. 'un' → logprob: -10.62168025970459

Token 302: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0999058485031128
    2. ' set' → logprob: -1.3499058485031128
    3. '1' → logprob: -2.3499059677124023
    4. 'set' → logprob: -2.7249059677124023
    5. ' à' → logprob: -3.0999059677124023
    6. ' bit' → logprob: -3.4749059677124023
    7. '   ' → logprob: -4.099905967712402
    8. ' de' → logprob: -4.099905967712402
    9. ' en' → logprob: -4.724905967712402
    10. ' ' → logprob: -4.724905967712402

Token 303: ' ' (ID: 220)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.12631063163280487
    2. '1' → logprob: -2.2513105869293213
    3. 'l' → logprob: -5.5013108253479
    4. 'position' → logprob: -5.5013108253479
    5. 'i' → logprob: -5.6263108253479
    6. ' la' → logprob: -7.0013108253479
    7. '```' → logprob: -8.376310348510742
    8. ' ' → logprob: -8.501310348510742
    9. 'c' → logprob: -9.876310348510742
    10. ' ' → logprob: -10.126310348510742

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6811778545379639
    2. 'la' → logprob: -0.8061778545379639
    3. 'i' → logprob: -3.681177854537964
    4. 'position' → logprob: -4.306178092956543
    5. 'l' → logprob: -5.056178092956543
    6. ' ' → logprob: -7.056178092956543
    7. ' la' → logprob: -7.306178092956543
    8. '   ' → logprob: -8.806178092956543
    9. 'c' → logprob: -9.056178092956543
    10. '```' → logprob: -9.181178092956543

Token 305: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10047763586044312
    2. ' &' → logprob: -2.725477695465088
    3. '&' → logprob: -4.350477695465088
    4. ')&' → logprob: -4.850477695465088
    5. ' and' → logprob: -5.600477695465088
    6. 'if' → logprob: -6.600477695465088
    7. '       ' → logprob: -6.975477695465088
    8. '   ' → logprob: -7.600477695465088
    9. ' if' → logprob: -7.725477695465088
    10. '):
' → logprob: -7.975477695465088

Token 306: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1262586116790771
    2. 'if' → logprob: -1.2512586116790771
    3. ' if' → logprob: -1.3762586116790771
    4. ' &' → logprob: -3.501258611679077
    5. ' and' → logprob: -3.876258611679077
    6. '       ' → logprob: -4.001258850097656
    7. ' bit' → logprob: -4.251258850097656
    8. '&' → logprob: -4.376258850097656
    9. '   ' → logprob: -5.001258850097656
    10. ' )' → logprob: -5.376258850097656

Token 307: ' rang' (ID: 32287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1973509043455124
    2. 'position' → logprob: -2.1973509788513184
    3. 'em' → logprob: -3.5723509788513184
    4. ' i' → logprob: -4.447350978851318
    5. '```' → logprob: -4.822350978851318
    6. ' position' → logprob: -6.072350978851318
    7. ' ' → logprob: -6.072350978851318
    8. ' même' → logprob: -6.197350978851318
    9. 'shift' → logprob: -6.447350978851318
    10. 'end' → logprob: -6.572350978851318

Token 308: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4757784605026245
    2. ' i' → logprob: -0.9757784605026245
    3. '   ' → logprob: -6.600778579711914
    4. '	i' → logprob: -8.475778579711914
    5. '    ' → logprob: -10.100778579711914
    6. '       ' → logprob: -10.225778579711914
    7. ' ' → logprob: -10.725778579711914
    8. '     ' → logprob: -11.600778579711914
    9. '=i' → logprob: -11.850778579711914
    10. '           ' → logprob: -12.475778579711914

Token 309: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033928755670785904
    2. 'if' → logprob: -4.533928871154785
    3. ' &' → logprob: -4.658928871154785
    4. '&' → logprob: -5.533928871154785
    5. ')&' → logprob: -5.533928871154785
    6. ' if' → logprob: -6.408928871154785
    7. ' )' → logprob: -6.908928871154785
    8. ')
' → logprob: -7.158928871154785
    9. '):
' → logprob: -7.533928871154785
    10. '):' → logprob: -7.908928871154785

Token 310: '0' (ID: 15)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.24755428731441498
    2. ')' → logprob: -2.122554302215576
    3. 'bit' → logprob: -2.497554302215576
    4. ' )' → logprob: -4.747554302215576
    5. '(bit' → logprob: -5.997554302215576
    6. '1' → logprob: -7.247554302215576
    7. '   ' → logprob: -7.372554302215576
    8. '       ' → logprob: -7.747554302215576
    9. ' (' → logprob: -7.872554302215576
    10. ' i' → logprob: -7.997554302215576

Token 311: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8307384848594666
    2. '   ' → logprob: -1.0807385444641113
    3. ' <=' → logprob: -2.5807385444641113
    4. ' )' → logprob: -3.2057385444641113
    5. ' if' → logprob: -3.3307385444641113
    6. 'if' → logprob: -4.205738544464111
    7. '<=' → logprob: -4.705738544464111
    8. '=' → logprob: -4.705738544464111
    9. '    ' → logprob: -4.830738544464111
    10. ' ' → logprob: -5.080738544464111

Token 312: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058385204523801804
    2. ')
' → logprob: -2.933385133743286
    3. '):' → logprob: -6.183385372161865
    4. '):
' → logprob: -7.558385372161865
    5. ' )' → logprob: -8.308384895324707
    6. ').' → logprob: -8.433384895324707
    7. ')
' → logprob: -8.808384895324707
    8. '))' → logprob: -9.808384895324707
    9. '       ' → logprob: -10.058384895324707
    10. ' )
' → logprob: -10.058384895324707

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020795976743102074
    2. '   ' → logprob: -7.377079486846924
    3. ':' → logprob: -7.502079486846924
    4. '):' → logprob: -8.377079963684082
    5. ')' → logprob: -8.502079963684082
    6. ' if' → logprob: -8.752079963684082
    7. '<|end|>' → logprob: -9.502079963684082
    8. ' :' → logprob: -9.877079963684082
    9. '           ' → logprob: -10.127079963684082
    10. '        
' → logprob: -10.627079963684082

Token 314: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4539302885532379
    2. 'if' → logprob: -1.0789302587509155
    3. '       ' → logprob: -3.703930377960205
    4. '   ' → logprob: -8.453929901123047
    5. '	if' → logprob: -10.703929901123047
    6. '    ' → logprob: -11.578929901123047
    7. ' ' → logprob: -11.703929901123047
    8. '        
' → logprob: -12.078929901123047
    9. '           ' → logprob: -12.203929901123047
    10. '	   ' → logprob: -12.703929901123047

Token 315: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12694701552391052
    2. ' if' → logprob: -2.1269469261169434
    3. '   ' → logprob: -11.376947402954102
    4. '       ' → logprob: -12.251947402954102
    5. '    ' → logprob: -13.376947402954102
    6. ' ' → logprob: -14.876947402954102
    7. '	if' → logprob: -15.126947402954102
    8. '           ' → logprob: -16.2519474029541
    9. '        
' → logprob: -16.8769474029541
    10. ' ' → logprob: -17.0019474029541

Token 316: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.05792856588959694
    2. ' bit' → logprob: -2.9329285621643066
    3. '(bit' → logprob: -5.807928562164307
    4. ' (' → logprob: -10.932929039001465
    5. '(' → logprob: -12.182929039001465
    6. ' ' → logprob: -12.682929039001465
    7. ')' → logprob: -12.682929039001465
    8. '   ' → logprob: -12.807929039001465
    9. 'if' → logprob: -13.932929039001465
    10. '.bit' → logprob: -14.182929039001465

Token 317: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.47439247369766235
    2. '&' → logprob: -0.9743924736976624
    3. '>>' → logprob: -8.224392890930176
    4. ')' → logprob: -11.474392890930176
    5. '&amp' → logprob: -11.849392890930176
    6. ' ' → logprob: -12.349392890930176
    7. ' >>' → logprob: -12.349392890930176
    8. ' ' → logprob: -12.599392890930176
    9. '&gt' → logprob: -12.599392890930176
    10. '＆' → logprob: -12.849392890930176

Token 318: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2014152854681015
    2. ' (' → logprob: -1.7014153003692627
    3. ')' → logprob: -13.326415061950684
    4. ' ' → logprob: -15.326415061950684
    5. '
' → logprob: -16.701416015625
    6. '   ' → logprob: -16.701416015625
    7. '1' → logprob: -17.826416015625
    8. '>' → logprob: -18.576416015625
    9. ' ' → logprob: -18.701416015625
    10. '```' → logprob: -18.951416015625

Token 319: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02997841313481331
    2. ' (' → logprob: -3.5299785137176514
    3. '1' → logprob: -8.40497875213623
    4. ' ' → logprob: -13.15497875213623
    5. ')' → logprob: -13.90497875213623
    6. '   ' → logprob: -13.90497875213623
    7. '  ' → logprob: -16.529977798461914
    8. '           ' → logprob: -16.779977798461914
    9. '
' → logprob: -16.904977798461914
    10. '    ' → logprob: -17.029977798461914

Token 320: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.038046084344387054
    2. '<<' → logprob: -3.28804612159729
    3. ' ' → logprob: -13.538045883178711
    4. ' ' → logprob: -14.038045883178711
    5. '<' → logprob: -14.663045883178711
    6. ' <' → logprob: -14.788045883178711
    7. ' <<
' → logprob: -14.788045883178711
    8. ' <<=' → logprob: -15.163045883178711
    9. '	' → logprob: -15.538045883178711
    10. '   ' → logprob: -15.788045883178711

Token 321: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014165629632771015
    2. ' i' → logprob: -4.26416540145874
    3. ' ' → logprob: -13.639165878295898
    4. '   ' → logprob: -15.014165878295898
    5. '	i' → logprob: -15.014165878295898
    6. ')' → logprob: -15.264165878295898
    7. ')i' → logprob: -16.3891658782959
    8. ' ' → logprob: -18.1391658782959
    9. '(i' → logprob: -18.3891658782959
    10. '```' → logprob: -19.1391658782959

Token 322: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006212458945810795
    2. '))' → logprob: -5.13121223449707
    3. ' )' → logprob: -8.38121223449707
    4. ')!=' → logprob: -10.00621223449707
    5. ' ))' → logprob: -12.63121223449707
    6. ')==' → logprob: -13.13121223449707
    7. '):' → logprob: -13.50621223449707
    8. ')):' → logprob: -13.75621223449707
    9. '!=' → logprob: -13.88121223449707
    10. ')>' → logprob: -15.13121223449707

Token 323: ' est' (ID: 893)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6480590105056763
    2. ' !=' → logprob: -1.0230590105056763
    3. ')' → logprob: -2.6480588912963867
    4. '==' → logprob: -3.5230588912963867
    5. '>' → logprob: -4.898058891296387
    6. ' ==' → logprob: -5.273058891296387
    7. ')!=' → logprob: -6.148058891296387
    8. ':' → logprob: -6.648058891296387
    9. ' >' → logprob: -7.148058891296387
    10. '):' → logprob: -9.023058891296387

Token 324: ' non' (ID: 2893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9242339730262756
    2. ' >' → logprob: -1.4242339134216309
    3. ' not' → logprob: -2.049233913421631
    4. '0' → logprob: -2.674233913421631
    5. ')' → logprob: -3.049233913421631
    6. ' !=' → logprob: -3.299233913421631
    7. ' ' → logprob: -3.674233913421631
    8. '!=' → logprob: -3.924233913421631
    9. '   ' → logprob: -4.674233913421631
    10. ' une' → logprob: -4.924233913421631

Token 325: '-n' (ID: 5219)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.056588489562273026
    2. '==' → logprob: -3.5565884113311768
    3. '0' → logprob: -4.431588649749756
    4. ' ==' → logprob: -5.181588649749756
    5. ' égal' → logprob: -5.431588649749756
    6. 'zero' → logprob: -6.431588649749756
    7. ')' → logprob: -7.431588649749756
    8. '   ' → logprob: -7.431588649749756
    9. ' =' → logprob: -7.931588649749756
    10. ' ég' → logprob: -8.556588172912598

Token 326: 'ul' (ID: 361)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2559046745300293
    2. '=' → logprob: -1.5059046745300293
    3. ' ' → logprob: -6.505904674530029
    4. '==' → logprob: -6.630904674530029
    5. ' =' → logprob: -8.005905151367188
    6. 'zero' → logprob: -8.755905151367188
    7. ' égal' → logprob: -8.755905151367188
    8. ' ==' → logprob: -9.005905151367188
    9. ' zero' → logprob: -9.255905151367188
    10. 'égal' → logprob: -9.505905151367188

Token 327: ' si' (ID: 1784)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.06663671880960464
    2. '!=' → logprob: -3.316636800765991
    3. ')' → logprob: -4.441636562347412
    4. ' >' → logprob: -5.066636562347412
    5. ')!=' → logprob: -5.566636562347412
    6. '>' → logprob: -6.191636562347412
    7. ' )' → logprob: -7.066636562347412
    8. ':' → logprob: -7.441636562347412
    9. '   ' → logprob: -7.566636562347412
    10. ')>' → logprob: -7.816636562347412

Token 328: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7122254371643066
    2. '(bit' → logprob: -0.8372254371643066
    3. ' bit' → logprob: -2.5872254371643066
    4. 'bit' → logprob: -6.837225437164307
    5. ' ' → logprob: -9.337224960327148
    6. ' ((' → logprob: -10.087224960327148
    7. ' ' → logprob: -10.462224960327148
    8. '((' → logprob: -10.837224960327148
    9. '(b' → logprob: -11.087224960327148
    10. '   ' → logprob: -11.462224960327148

Token 329: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.5301382541656494
    2. 'bit' → logprob: -1.0301382541656494
    3. '(bit' → logprob: -3.0301382541656494
    4. ' (' → logprob: -5.28013801574707
    5. ' ' → logprob: -8.78013801574707
    6. ' i' → logprob: -9.28013801574707
    7. '```' → logprob: -9.28013801574707
    8. '(' → logprob: -9.40513801574707
    9. '(i' → logprob: -9.53013801574707
    10. 'i' → logprob: -9.53013801574707

Token 330: ' de' (ID: 334)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.027357904240489006
    2. '&' → logprob: -3.777357816696167
    3. '   ' → logprob: -6.652358055114746
    4. ')' → logprob: -6.652358055114746
    5. ' ' → logprob: -7.277358055114746
    6. ' i' → logprob: -8.777358055114746
    7. '       ' → logprob: -9.277358055114746
    8. '    ' → logprob: -9.402358055114746
    9. ' at' → logprob: -9.527358055114746
    10. '     ' → logprob: -9.777358055114746

Token 331: ' rang' (ID: 32287)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6408805251121521
    2. ' bit' → logprob: -0.7658805251121521
    3. ' '' → logprob: -5.640880584716797
    4. 'position' → logprob: -6.890880584716797
    5. ' position' → logprob: -7.640880584716797
    6. '(bit' → logprob: -7.765880584716797
    7. ' code' → logprob: -8.015880584716797
    8. ' ' → logprob: -8.140880584716797
    9. ''' → logprob: -8.140880584716797
    10. ' l' → logprob: -8.265880584716797

Token 332: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5246501564979553
    2. 'i' → logprob: -0.8996501564979553
    3. ' ' → logprob: -6.6496500968933105
    4. '   ' → logprob: -9.274650573730469
    5. '  ' → logprob: -9.649650573730469
    6. '    ' → logprob: -10.274650573730469
    7. '     ' → logprob: -11.274650573730469
    8. '	i' → logprob: -11.274650573730469
    9. ' ' → logprob: -12.774650573730469
    10. '         ' → logprob: -13.274650573730469

Token 333: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2819370925426483
    2. ' est' → logprob: -1.9069371223449707
    3. 'est' → logprob: -3.1569371223449707
    4. ' de' → logprob: -5.031937122344971
    5. ' ' → logprob: -5.156937122344971
    6. ' )' → logprob: -5.281937122344971
    7. ' à' → logprob: -5.406937122344971
    8. ' n' → logprob: -5.531937122344971
    9. '         ' → logprob: -5.531937122344971
    10. ' at' → logprob: -6.031937122344971

Token 334: ' '' (ID: 461)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.2519380748271942
    2. ' bit' → logprob: -1.5019381046295166
    3. ' ' → logprob: -13.251937866210938
    4. 'bitr' → logprob: -13.376937866210938
    5. '(bit' → logprob: -13.501937866210938
    6. 'b' → logprob: -13.751937866210938
    7. '   ' → logprob: -14.376937866210938
    8. ' бит' → logprob: -14.751937866210938
    9. '_bit' → logprob: -15.251937866210938
    10. '.bit' → logprob: -15.251937866210938

Token 335: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.038092900067567825
    2. ' bit' → logprob: -3.288092851638794
    3. '   ' → logprob: -10.413092613220215
    4. ' ' → logprob: -11.663092613220215
    5. '(bit' → logprob: -13.163092613220215
    6. 'bitr' → logprob: -13.288092613220215
    7. '```' → logprob: -13.538092613220215
    8. '  ' → logprob: -13.538092613220215
    9. 'b' → logprob: -13.663092613220215
    10. 'bits' → logprob: -13.913092613220215

Token 336: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7220313549041748
    2. ' est' → logprob: -1.2220313549041748
    3. ''' → logprob: -1.7220313549041748
    4. 'est' → logprob: -4.097031593322754
    5. ''est' → logprob: -5.097031593322754
    6. ')'' → logprob: -5.347031593322754
    7. ' )' → logprob: -5.472031593322754
    8. '')' → logprob: -5.847031593322754
    9. ' '' → logprob: -6.347031593322754
    10. '   ' → logprob: -6.472031593322754

Token 337: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.08809398859739304
    2. 'est' → logprob: -3.0880939960479736
    3. ' is' → logprob: -3.5880939960479736
    4. ')' → logprob: -5.3380937576293945
    5. ' n' → logprob: -6.4630937576293945
    6. ' !=' → logprob: -6.9630937576293945
    7. 'n' → logprob: -7.0880937576293945
    8. '!=' → logprob: -7.0880937576293945
    9. ''est' → logprob: -7.9630937576293945
    10. '```' → logprob: -7.9630937576293945

Token 338: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06591354310512543
    2. ' ' → logprob: -3.190913438796997
    3. ' set' → logprob: -4.190913677215576
    4. '   ' → logprob: -6.315913677215576
    5. 'set' → logprob: -6.315913677215576
    6. ' égal' → logprob: -7.315913677215576
    7. '>' → logprob: -7.565913677215576
    8. '```' → logprob: -7.690913677215576
    9. ' fixé' → logprob: -7.940913677215576
    10. ' présent' → logprob: -8.315913200378418

Token 339: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037397451233118773
    2. ' ' → logprob: -5.628739833831787
    3. 'un' → logprob: -9.378739356994629
    4. '```' → logprob: -10.253739356994629
    5. ' un' → logprob: -11.378739356994629
    6. '   ' → logprob: -13.128739356994629
    7. 'l' → logprob: -13.503739356994629
    8. 'au' → logprob: -13.878739356994629
    9. 'true' → logprob: -14.878739356994629
    10. 'True' → logprob: -14.878739356994629

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014573395310435444
    2. 'un' → logprob: -9.00014591217041
    3. ' ' → logprob: -11.12514591217041
    4. '```' → logprob: -12.37514591217041
    5. 'une' → logprob: -13.75014591217041
    6. 'true' → logprob: -15.00014591217041
    7. 'i' → logprob: -15.37514591217041
    8. 'one' → logprob: -15.37514591217041
    9. 'au' → logprob: -15.50014591217041
    10. 'True' → logprob: -15.62514591217041

Token 341: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024484211578965187
    2. ':' → logprob: -3.774484157562256
    3. ':
' → logprob: -8.149484634399414
    4. '        
' → logprob: -8.274484634399414
    5. ' if' → logprob: -8.774484634399414
    6. '           ' → logprob: -8.899484634399414
    7. '):' → logprob: -9.024484634399414
    8. '   ' → logprob: -9.774484634399414
    9. 'if' → logprob: -9.774484634399414
    10. ' :' → logprob: -9.774484634399414

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010628487507347018
    2. ' if' → logprob: -10.500105857849121
    3. '        
' → logprob: -10.625105857849121
    4. 'if' → logprob: -11.250105857849121
    5. ':' → logprob: -11.375105857849121
    6. '           ' → logprob: -11.625105857849121
    7. '   ' → logprob: -11.875105857849121
    8. '
' → logprob: -12.875105857849121
    9. '#' → logprob: -13.125105857849121
    10. ',' → logprob: -13.625105857849121

Token 343: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28441333770751953
    2. 'if' → logprob: -1.7844133377075195
    3. ' if' → logprob: -2.5344133377075195
    4. '   ' → logprob: -8.03441333770752
    5. '           ' → logprob: -12.03441333770752
    6. '	if' → logprob: -12.78441333770752
    7. '    ' → logprob: -13.65941333770752
    8. '        
' → logprob: -13.78441333770752
    9. ' ' → logprob: -14.03441333770752
    10. '	' → logprob: -14.03441333770752

Token 344: ' >' (ID: 1424)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5820435881614685
    2. ' if' → logprob: -1.2070436477661133
    3. '       ' → logprob: -1.9570436477661133
    4. '   ' → logprob: -7.082043647766113
    5. ' ' → logprob: -11.082043647766113
    6. '	if' → logprob: -11.082043647766113
    7. '    ' → logprob: -12.457043647766113
    8. '           ' → logprob: -12.957043647766113
    9. '  ' → logprob: -13.082043647766113
    10. '     ' → logprob: -13.207043647766113

Token 345: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8450447916984558
    2. '0' → logprob: -1.2200448513031006
    3. '=' → logprob: -2.4700448513031006
    4. ' if' → logprob: -2.7200448513031006
    5. ' (' → logprob: -2.7200448513031006
    6. 'if' → logprob: -3.8450448513031006
    7. ' bit' → logprob: -3.8450448513031006
    8. '(bit' → logprob: -5.2200446128845215
    9. ' =' → logprob: -6.0950446128845215
    10. '   ' → logprob: -6.7200446128845215

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026327935978770256
    2. ' ' → logprob: -3.6513278484344482
    3. '=' → logprob: -11.401328086853027
    4. '  ' → logprob: -12.526328086853027
    5. '1' → logprob: -12.901328086853027
    6. '>' → logprob: -13.026328086853027
    7. '   ' → logprob: -13.276328086853027
    8. '#' → logprob: -13.651328086853027
    9. '```' → logprob: -13.901328086853027
    10. '-' → logprob: -14.463828086853027

Token 347: ' convert' (ID: 8452)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023175938054919243
    2. ':
' → logprob: -4.1481757164001465
    3. '       ' → logprob: -5.6481757164001465
    4. '):' → logprob: -6.7731757164001465
    5. ' :' → logprob: -7.0231757164001465
    6. ' ==' → logprob: -7.1481757164001465
    7. '           ' → logprob: -8.148176193237305
    8. '==' → logprob: -8.398176193237305
    9. '   ' → logprob: -9.398176193237305
    10. '):
' → logprob: -9.773176193237305

Token 348: 'it' (ID: 278)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3143542408943176
    2. 'if' → logprob: -2.189354181289673
    3. ' =' → logprob: -2.814354181289673
    4. '   ' → logprob: -3.439354181289673
    5. ')' → logprob: -3.564354181289673
    6. '=True' → logprob: -5.564354419708252
    7. ' (' → logprob: -5.814354419708252
    8. '>' → logprob: -5.939354419708252
    9. ' if' → logprob: -5.939354419708252
    10. 'ion' → logprob: -6.064354419708252

Token 349: ' cela' (ID: 17542)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08094405382871628
    2. 'bool' → logprob: -3.705944061279297
    3. ' bool' → logprob: -4.205944061279297
    4. ' True' → logprob: -4.580944061279297
    5. '(bit' → logprob: -4.705944061279297
    6. '(bool' → logprob: -5.080944061279297
    7. '   ' → logprob: -5.205944061279297
    8. 'True' → logprob: -6.205944061279297
    9. ' ' → logprob: -6.955944061279297
    10. ')' → logprob: -7.080944061279297

Token 350: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5664624571800232
    2. ')' → logprob: -2.066462516784668
    3. ' to' → logprob: -2.191462516784668
    4. '<|end|>' → logprob: -2.816462516784668
    5. ' into' → logprob: -3.566462516784668
    6. '   ' → logprob: -3.691462516784668
    7. ' ' → logprob: -4.566462516784668
    8. ' )' → logprob: -4.941462516784668
    9. '=True' → logprob: -5.066462516784668
    10. ' ==' → logprob: -5.316462516784668

Token 351: ' une' (ID: 2463)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07933949679136276
    2. ' True' → logprob: -2.5793395042419434
    3. 'bool' → logprob: -7.954339504241943
    4. ' un' → logprob: -10.329339027404785
    5. ' bool' → logprob: -10.704339027404785
    6. 'Bool' → logprob: -11.329339027404785
    7. 'boolean' → logprob: -11.704339027404785
    8. 'un' → logprob: -12.204339027404785
    9. ' boolean' → logprob: -12.454339027404785
    10. 'Boolean' → logprob: -12.829339027404785

Token 352: ' condition' (ID: 7060)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.46363842487335205
    2. 'True' → logprob: -1.338638424873352
    3. 'boolean' → logprob: -2.7136383056640625
    4. ' bool' → logprob: -4.2136383056640625
    5. ' True' → logprob: -4.3386383056640625
    6. ' boolean' → logprob: -4.3386383056640625
    7. 'bo' → logprob: -7.4636383056640625
    8. 'Bool' → logprob: -7.4636383056640625
    9. 'Boolean' → logprob: -8.338638305664062
    10. 'b' → logprob: -9.588638305664062

Token 353: ' True' (ID: 6432)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1472909450531006
    2. ' if' → logprob: -1.1472909450531006
    3. '       ' → logprob: -1.2722909450531006
    4. '   ' → logprob: -3.3972909450531006
    5. ' :' → logprob: -4.02229118347168
    6. 'if' → logprob: -4.27229118347168
    7. '           ' → logprob: -5.02229118347168
    8. '):' → logprob: -5.77229118347168
    9. ' >' → logprob: -6.64729118347168
    10. ':
' → logprob: -6.64729118347168

Token 354: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22050806879997253
    2. ' if' → logprob: -1.845508098602295
    3. 'if' → logprob: -3.720508098602295
    4. ':' → logprob: -4.970508098602295
    5. '   ' → logprob: -5.970508098602295
    6. ' =' → logprob: -6.720508098602295
    7. '           ' → logprob: -6.845508098602295
    8. ' >' → logprob: -6.970508098602295
    9. ')' → logprob: -7.095508098602295
    10. '>' → logprob: -7.970508098602295

Token 355: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03365250304341316
    2. ' False' → logprob: -3.4086525440216064
    3. 'false' → logprob: -13.033652305603027
    4. '```' → logprob: -13.408652305603027
    5. 'True' → logprob: -13.783652305603027
    6. '=False' → logprob: -14.408652305603027
    7. ' false' → logprob: -14.408652305603027
    8. 'F' → logprob: -15.158652305603027
    9. '_false' → logprob: -15.533652305603027
    10. '(False' → logprob: -16.658653259277344

Token 356: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09138132631778717
    2. ' if' → logprob: -2.966381311416626
    3. 'if' → logprob: -3.341381311416626
    4. '   ' → logprob: -8.716381072998047
    5. ':' → logprob: -8.841381072998047
    6. '        
' → logprob: -10.341381072998047
    7. '           ' → logprob: -10.841381072998047
    8. ' =' → logprob: -10.966381072998047
    9. ' :' → logprob: -11.216381072998047
    10. ')' → logprob: -11.591381072998047

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0775257796049118
    2. ' if' → logprob: -2.7025258541107178
    3. 'if' → logprob: -4.952525615692139
    4. '        
' → logprob: -8.702526092529297
    5. '           ' → logprob: -9.827526092529297
    6. '   ' → logprob: -10.077526092529297
    7. ')' → logprob: -10.327526092529297
    8. ':' → logprob: -10.452526092529297
    9. ',' → logprob: -10.702526092529297
    10. ' =' → logprob: -11.077526092529297

Token 358: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010151022113859653
    2. ' if' → logprob: -4.760150909423828
    3. '       ' → logprob: -6.510150909423828
    4. 'is' → logprob: -10.885150909423828
    5. '   ' → logprob: -11.260150909423828
    6. 'red' → logprob: -12.135150909423828
    7. '	if' → logprob: -12.635150909423828
    8. '           ' → logprob: -13.760150909423828
    9. ' ' → logprob: -14.135150909423828
    10. '        
' → logprob: -14.260150909423828

Token 359: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3503531217575073
    2. '(bit' → logprob: -1.2253531217575073
    3. ' bit' → logprob: -6.350353240966797
    4. ' ' → logprob: -8.975353240966797
    5. 'bit' → logprob: -10.975353240966797
    6. '   ' → logprob: -11.725353240966797
    7. '  ' → logprob: -13.100353240966797
    8. ' ' → logprob: -13.475353240966797
    9. '(b' → logprob: -13.725353240966797
    10. '(' → logprob: -14.100353240966797

Token 360: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0065514747984707355
    2. ' bit' → logprob: -5.506551265716553
    3. '(bit' → logprob: -6.006551265716553
    4. '   ' → logprob: -12.381551742553711
    5. ' (' → logprob: -13.506551742553711
    6. ' ' → logprob: -14.631551742553711
    7. '1' → logprob: -15.506551742553711
    8. '.bit' → logprob: -15.631551742553711
    9. ' бит' → logprob: -15.631551742553711
    10. 'b' → logprob: -15.881551742553711

Token 361: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.16025082767009735
    2. '&' → logprob: -1.9102507829666138
    3. ' ' → logprob: -11.035250663757324
    4. ' ' → logprob: -13.035250663757324
    5. '>>' → logprob: -13.035250663757324
    6. '&gt' → logprob: -13.160250663757324
    7. '>' → logprob: -13.285250663757324
    8. '   ' → logprob: -13.785250663757324
    9. '&nbsp' → logprob: -14.660250663757324
    10. '  ' → logprob: -15.285250663757324

Token 362: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.005234475247561932
    2. '(' → logprob: -5.255234241485596
    3. ')' → logprob: -14.630234718322754
    4. ' ' → logprob: -16.005233764648438
    5. ' ' → logprob: -18.130233764648438
    6. '>' → logprob: -18.255233764648438
    7. '1' → logprob: -18.255233764648438
    8. '
' → logprob: -18.505233764648438
    9. '    ' → logprob: -18.630233764648438
    10. ' 
' → logprob: -18.755233764648438

Token 363: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06204812973737717
    2. ' (' → logprob: -2.8120481967926025
    3. '1' → logprob: -9.437047958374023
    4. ' ' → logprob: -15.062047958374023
    5. '   ' → logprob: -15.312047958374023
    6. '  ' → logprob: -16.437047958374023
    7. ')' → logprob: -16.562047958374023
    8. '0' → logprob: -17.937047958374023
    9. '    ' → logprob: -17.937047958374023
    10. '(
' → logprob: -17.937047958374023

Token 364: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.5759645700454712
    2. '<<' → logprob: -0.8259645700454712
    3. ' ' → logprob: -11.07596492767334
    4. '<' → logprob: -12.70096492767334
    5. ' ' → logprob: -13.32596492767334
    6. '1' → logprob: -13.82596492767334
    7. ')' → logprob: -13.82596492767334
    8. '   ' → logprob: -14.07596492767334
    9. ' <' → logprob: -14.07596492767334
    10. '(' → logprob: -15.45096492767334

Token 365: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0052354102954268456
    2. ' i' → logprob: -5.255235195159912
    3. '   ' → logprob: -13.63023567199707
    4. ' ' → logprob: -15.63023567199707
    5. '	i' → logprob: -16.13023567199707
    6. ')' → logprob: -16.75523567199707
    7. ')i' → logprob: -16.88023567199707
    8. '       ' → logprob: -17.38023567199707
    9. '     ' → logprob: -17.88023567199707
    10. '    ' → logprob: -18.00523567199707

Token 366: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1003073900938034
    2. '))' → logprob: -2.3503074645996094
    3. ')>' → logprob: -9.60030746459961
    4. ' )' → logprob: -10.60030746459961
    5. '>)' → logprob: -12.35030746459961
    6. ' ))' → logprob: -13.47530746459961
    7. '})' → logprob: -14.47530746459961
    8. ')
' → logprob: -14.97530746459961
    9. ')):' → logprob: -15.10030746459961
    10. ')):
' → logprob: -15.22530746459961

Token 367: ' >' (ID: 1424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020998220425099134
    2. '>' → logprob: -6.752099990844727
    3. ')>' → logprob: -7.002099990844727
    4. ' >' → logprob: -11.627099990844727
    5. ' )' → logprob: -11.752099990844727
    6. '>)' → logprob: -14.127099990844727
    7. ' ' → logprob: -14.502099990844727
    8. '">' → logprob: -15.377099990844727
    9. '   ' → logprob: -15.502099990844727
    10. '）' → logprob: -16.127099990844727

Token 368: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061967913061380386
    2. ' ' → logprob: -2.8119678497314453
    3. '=' → logprob: -15.686967849731445
    4. '   ' → logprob: -16.311967849731445
    5. '  ' → logprob: -17.186967849731445
    6. '>' → logprob: -17.436967849731445
    7. '    ' → logprob: -18.686967849731445
    8. ' ' → logprob: -18.811967849731445
    9. '     ' → logprob: -18.811967849731445
    10. '```' → logprob: -18.936967849731445

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '=' → logprob: -20.500709533691406
    4. '   ' → logprob: -20.750709533691406
    5. '  ' → logprob: -21.250709533691406
    6. '۰' → logprob: -21.375709533691406
    7. '```' → logprob: -22.250709533691406
    8. ' ' → logprob: -22.375709533691406
    9. '０' → logprob: -22.875709533691406
    10. '>' → logprob: -23.000709533691406

Token 370: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05567210912704468
    2. ':
' → logprob: -2.9306721687316895
    3. '):' → logprob: -7.9306721687316895
    4. '       ' → logprob: -8.305671691894531
    5. '):
' → logprob: -8.805671691894531
    6. ' :' → logprob: -11.180671691894531
    7. ':
' → logprob: -11.805671691894531
    8. ')' → logprob: -12.430671691894531
    9. ' :
' → logprob: -12.430671691894531
    10. '   ' → logprob: -13.430671691894531

Token 371: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5592557787895203
    2. '       ' → logprob: -1.684255838394165
    3. 'red' → logprob: -2.059255838394165
    4. ' red' → logprob: -2.184255838394165
    5. '
' → logprob: -6.684255599975586
    6. '        
' → logprob: -7.684255599975586
    7. '            
' → logprob: -8.184255599975586
    8. 's' → logprob: -9.809255599975586
    9. '               ' → logprob: -9.809255599975586
    10. ' 
' → logprob: -9.934255599975586

Token 372: ' #' (ID: 1069)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.23917944729328156
    2. 'red' → logprob: -1.6141794919967651
    3. '           ' → logprob: -4.364179611206055
    4. '               ' → logprob: -7.614179611206055
    5. '       ' → logprob: -7.864179611206055
    6. ' blue' → logprob: -10.364179611206055
    7. '   ' → logprob: -11.239179611206055
    8. ' ' → logprob: -12.239179611206055
    9. ' ' → logprob: -12.489179611206055
    10. 'blue' → logprob: -12.614179611206055

Token 373: ' Le' (ID: 2018)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.09043999761343002
    2. ' red' → logprob: -2.465440034866333
    3. '   ' → logprob: -6.840439796447754
    4. 'blue' → logprob: -8.715439796447754
    5. '       ' → logprob: -8.965439796447754
    6. '           ' → logprob: -9.465439796447754
    7. ' blue' → logprob: -10.590439796447754
    8. ' ' → logprob: -10.965439796447754
    9. '  ' → logprob: -11.715439796447754
    10. '     ' → logprob: -13.090439796447754

Token 374: ' caractère' (ID: 80509)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.2521092891693115
    2. ' red' → logprob: -1.5021092891693115
    3. '           ' → logprob: -8.87710952758789
    4. '   ' → logprob: -11.37710952758789
    5. '       ' → logprob: -11.50210952758789
    6. ' ' → logprob: -12.00210952758789
    7. ' blue' → logprob: -13.00210952758789
    8. '  ' → logprob: -13.37710952758789
    9. 's' → logprob: -13.50210952758789
    10. '          ' → logprob: -13.62710952758789

Token 375: ' s' (ID: 265)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -1.0093793869018555
    2. 's' → logprob: -1.3843793869018555
    3. ' s' → logprob: -1.3843793869018555
    4. 'red' → logprob: -2.0093793869018555
    5. '           ' → logprob: -8.759379386901855
    6. '   ' → logprob: -9.384379386901855
    7. ' =' → logprob: -9.634379386901855
    8. ' de' → logprob: -10.134379386901855
    9. ' est' → logprob: -10.259379386901855
    10. ' rouge' → logprob: -10.634379386901855

Token 376: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03426828607916832
    2. '[' → logprob: -3.534268379211426
    3. 'red' → logprob: -5.534268379211426
    4. ' red' → logprob: -7.909268379211426
    5. '           ' → logprob: -10.284268379211426
    6. ' [' → logprob: -10.284268379211426
    7. 's' → logprob: -10.784268379211426
    8. '       ' → logprob: -10.909268379211426
    9. 'i' → logprob: -11.534268379211426
    10. '   ' → logprob: -11.534268379211426

Token 377: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21466457843780518
    2. ')' → logprob: -2.0896644592285156
    3. '])' → logprob: -2.8396644592285156
    4. 'red' → logprob: -4.839664459228516
    5. ']+' → logprob: -7.464664459228516
    6. ' red' → logprob: -7.964664459228516
    7. ']==' → logprob: -7.964664459228516
    8. ' ]' → logprob: -8.214664459228516
    9. ' )' → logprob: -8.214664459228516
    10. ']+=' → logprob: -8.589664459228516

Token 378: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.0633028745651245
    2. 'red' → logprob: -1.0633028745651245
    3. ' red' → logprob: -1.8133028745651245
    4. 'est' → logprob: -2.813302993774414
    5. ' is' → logprob: -3.313302993774414
    6. ')' → logprob: -4.188302993774414
    7. '+' → logprob: -4.813302993774414
    8. ' +=' → logprob: -4.938302993774414
    9. '           ' → logprob: -5.438302993774414
    10. ' +' → logprob: -5.688302993774414

Token 379: ' ajouté' (ID: 127784)
  Prédit: ' ajouté'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajouté' → logprob: -0.7447295188903809
    2. ' red' → logprob: -1.3697295188903809
    3. 'red' → logprob: -1.4947295188903809
    4. ' added' → logprob: -3.369729518890381
    5. 'added' → logprob: -4.744729518890381
    6. ' ajout' → logprob: -6.244729518890381
    7. 'aj' → logprob: -7.494729518890381
    8. ' appended' → logprob: -7.744729518890381
    9. ' ' → logprob: -7.994729518890381
    10. ' included' → logprob: -10.369729995727539

Token 380: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.311673104763031
    2. ' red' → logprob: -1.9366731643676758
    3. 'red' → logprob: -2.186673164367676
    4. 'à' → logprob: -5.061673164367676
    5. ' to' → logprob: -5.811673164367676
    6. ' ' → logprob: -6.811673164367676
    7. ' a' → logprob: -7.561673164367676
    8. 'to' → logprob: -8.436673164367676
    9. 'a' → logprob: -10.186673164367676
    10. '   ' → logprob: -10.811673164367676

Token 381: ' la' (ID: 557)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0024976562708616257
    2. ' red' → logprob: -6.002497673034668
    3. 'blue' → logprob: -10.752497673034668
    4. ' blue' → logprob: -15.252497673034668
    5. 'green' → logprob: -15.877497673034668
    6. ' ' → logprob: -16.87749671936035
    7. 'redi' → logprob: -17.62749671936035
    8. 'reds' → logprob: -17.75249671936035
    9. 'redd' → logprob: -17.87749671936035
    10. '_red' → logprob: -18.37749671936035

Token 382: ' chaîne' (ID: 89288)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.002905085450038314
    2. ' red' → logprob: -5.877904891967773
    3. 'blue' → logprob: -9.377904891967773
    4. 'r' → logprob: -11.877904891967773
    5. ' ' → logprob: -13.127904891967773
    6. ' blue' → logprob: -13.502904891967773
    7. 're' → logprob: -13.877904891967773
    8. 'green' → logprob: -14.377904891967773
    9. 'reds' → logprob: -14.377904891967773
    10. '   ' → logprob: -14.627904891967773

Token 383: ' '' (ID: 461)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.01914590783417225
    2. ' red' → logprob: -4.019145965576172
    3. '"' → logprob: -7.144145965576172
    4. 'blue' → logprob: -9.019145965576172
    5. ''' → logprob: -9.644145965576172
    6. ' blue' → logprob: -11.769145965576172
    7. '   ' → logprob: -13.019145965576172
    8. ' ' → logprob: -13.144145965576172
    9. '(red' → logprob: -13.144145965576172
    10. '_red' → logprob: -14.144145965576172

Token 384: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -8.149051427608356e-05
    2. ' red' → logprob: -10.000081062316895
    3. 'blue' → logprob: -10.250081062316895
    4. 'green' → logprob: -15.750081062316895
    5. ' ' → logprob: -15.875081062316895
    6. '   ' → logprob: -16.75008201599121
    7. '```' → logprob: -17.12508201599121
    8. 'Red' → logprob: -17.37508201599121
    9. '_red' → logprob: -17.50008201599121
    10. 'r' → logprob: -17.87508201599121

Token 385: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.423454225063324
    2. '+' → logprob: -1.9234542846679688
    3. '+=' → logprob: -1.9234542846679688
    4. ' +' → logprob: -3.7984542846679688
    5. 'red' → logprob: -4.048454284667969
    6. ')' → logprob: -4.673454284667969
    7. '+="' → logprob: -5.798454284667969
    8. '   ' → logprob: -8.173454284667969
    9. ' red' → logprob: -9.048454284667969
    10. ')+' → logprob: -9.798454284667969

Token 386: ' si' (ID: 1784)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.6478140354156494
    2. ' +=' → logprob: -0.8978140354156494
    3. '+=' → logprob: -3.0228140354156494
    4. ' red' → logprob: -4.27281379699707
    5. '           ' → logprob: -6.14781379699707
    6. '+' → logprob: -6.52281379699707
    7. '=' → logprob: -7.27281379699707
    8. ' +' → logprob: -7.39781379699707
    9. '   ' → logprob: -7.64781379699707
    10. '       ' → logprob: -7.77281379699707

Token 387: ' le' (ID: 505)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5469899773597717
    2. ' red' → logprob: -1.296989917755127
    3. 'True' → logprob: -2.546989917755127
    4. 'red' → logprob: -3.421989917755127
    5. ' s' → logprob: -3.921989917755127
    6. ' bit' → logprob: -5.421989917755127
    7. ' ' → logprob: -5.546989917755127
    8. ' (' → logprob: -5.796989917755127
    9. 's' → logprob: -6.296989917755127
    10. ' i' → logprob: -7.046989917755127

Token 388: ' bit' (ID: 3546)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.17829950153827667
    2. ' red' → logprob: -2.1782994270324707
    3. 'bit' → logprob: -4.428299427032471
    4. 's' → logprob: -4.678299427032471
    5. ' ' → logprob: -4.803299427032471
    6. ' True' → logprob: -4.928299427032471
    7. 'True' → logprob: -5.303299427032471
    8. ' bit' → logprob: -5.928299427032471
    9. 'i' → logprob: -6.303299427032471
    10. ' s' → logprob: -6.803299427032471

Token 389: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9785115718841553
    2. '<|end|>' → logprob: -1.8535115718841553
    3. ' &' → logprob: -2.1035115718841553
    4. ' ==' → logprob: -2.6035115718841553
    5. ' is' → logprob: -2.8535115718841553
    6. ' s' → logprob: -3.1035115718841553
    7. ')' → logprob: -3.4785115718841553
    8. ' est' → logprob: -3.7285115718841553
    9. '           ' → logprob: -4.228511810302734
    10. '==' → logprob: -4.478511810302734

Token 390: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1014573872089386
    2. ' ' → logprob: -2.351457357406616
    3. ' set' → logprob: -6.976457595825195
    4. ' True' → logprob: -9.101457595825195
    5. 'set' → logprob: -9.726457595825195
    6. 'True' → logprob: -10.601457595825195
    7. '```' → logprob: -11.101457595825195
    8. '0' → logprob: -11.226457595825195
    9. ' à' → logprob: -11.351457595825195
    10. 'v' → logprob: -11.351457595825195

Token 391: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00761455949395895
    2. ' ' → logprob: -4.882614612579346
    3. 'un' → logprob: -12.507614135742188
    4. '```' → logprob: -13.257614135742188
    5. '0' → logprob: -13.632614135742188
    6. ' True' → logprob: -15.007614135742188
    7. '   ' → logprob: -15.132614135742188
    8. '  ' → logprob: -15.257614135742188
    9. '           ' → logprob: -15.882614135742188
    10. ' ' → logprob: -15.882614135742188

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '0' → logprob: -15.750051498413086
    4. '```' → logprob: -17.250051498413086
    5. '   ' → logprob: -17.375051498413086
    6. 'un' → logprob: -18.250051498413086
    7. '  ' → logprob: -18.375051498413086
    8. 'True' → logprob: -18.625051498413086
    9. '           ' → logprob: -19.500051498413086
    10. '
' → logprob: -19.625051498413086

Token 393: '
' (ID: 198)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.30163657665252686
    2. '       ' → logprob: -1.8016365766525269
    3. ' red' → logprob: -2.5516366958618164
    4. '           ' → logprob: -4.551636695861816
    5. '   ' → logprob: -5.426636695861816
    6. ')' → logprob: -7.176636695861816
    7. '        
' → logprob: -8.051636695861816
    8. '
' → logprob: -8.301636695861816
    9. ' +=' → logprob: -8.676636695861816
    10. ' +' → logprob: -8.676636695861816

Token 394: '           ' (ID: 352)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.36488378047943115
    2. 'red' → logprob: -1.4898837804794312
    3. '           ' → logprob: -2.6148838996887207
    4. '       ' → logprob: -4.989883899688721
    5. '
' → logprob: -8.364883422851562
    6. '(red' → logprob: -10.114883422851562
    7. '               ' → logprob: -10.614883422851562
    8. '.red' → logprob: -10.989883422851562
    9. '            
' → logprob: -12.364883422851562
    10. '_red' → logprob: -12.739883422851562

Token 395: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.3887311518192291
    2. ' red' → logprob: -1.1387311220169067
    3. '           ' → logprob: -6.388731002807617
    4. '       ' → logprob: -8.888731002807617
    5. '               ' → logprob: -10.638731002807617
    6. '   ' → logprob: -11.513731002807617
    7. ' ' → logprob: -13.888731002807617
    8. 'redi' → logprob: -13.888731002807617
    9. '
' → logprob: -14.263731002807617
    10. ' ' → logprob: -14.513731002807617

Token 396: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.201467826962471
    2. ' +=' → logprob: -1.7014678716659546
    3. '+' → logprob: -10.076467514038086
    4. '+="' → logprob: -11.576467514038086
    5. '+='' → logprob: -13.201467514038086
    6. ' +' → logprob: -14.326467514038086
    7. '+=(' → logprob: -14.701467514038086
    8. ']+=' → logprob: -15.701467514038086
    9. '=' → logprob: -16.326467514038086
    10. '   ' → logprob: -17.951467514038086

Token 397: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.048587486147880554
    2. ' s' → logprob: -3.0485875606536865
    3. ' ' → logprob: -17.173587799072266
    4. '	s' → logprob: -17.173587799072266
    5. '   ' → logprob: -18.923587799072266
    6. ''s' → logprob: -19.298587799072266
    7. '(s' → logprob: -19.423587799072266
    8. ' ' → logprob: -19.673587799072266
    9. '`s' → logprob: -20.298587799072266
    10. '_s' → logprob: -20.423587799072266

Token 398: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.662937372922897e-05
    2. '[' → logprob: -9.250096321105957
    3. 's' → logprob: -15.875096321105957
    4. ' [' → logprob: -16.000097274780273
    5. '[s' → logprob: -16.625097274780273
    6. '[I' → logprob: -17.500097274780273
    7. 'i' → logprob: -17.625097274780273
    8. '[n' → logprob: -19.375097274780273
    9. '[j' → logprob: -19.625097274780273
    10. ' ' → logprob: -20.000097274780273

Token 399: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4761982858181
    2. ']' → logprob: -0.9761983156204224
    3. ')
' → logprob: -6.851198196411133
    4. ']
' → logprob: -7.601198196411133
    5. '}' → logprob: -8.851198196411133
    6. '       ' → logprob: -9.226198196411133
    7. ' ]' → logprob: -9.351198196411133
    8. ' )' → logprob: -9.476198196411133
    9. '<|end|>' → logprob: -10.101198196411133
    10. '   ' → logprob: -10.726198196411133

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011769699864089489
    2. 'else' → logprob: -4.761769771575928
    3. ' else' → logprob: -5.761769771575928
    4. '```' → logprob: -13.63676929473877
    5. '<|end|>' → logprob: -13.76176929473877
    6. '	else' → logprob: -14.26176929473877
    7. '	' → logprob: -14.76176929473877
    8. '        
' → logprob: -15.51176929473877
    9. ' ' → logprob: -15.76176929473877
    10. '   ' → logprob: -16.136770248413086

Token 401: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7318626046180725
    2. '       ' → logprob: -1.2318625450134277
    3. ' else' → logprob: -1.4818625450134277
    4. '	else' → logprob: -10.856863021850586
    5. '	' → logprob: -13.606863021850586
    6. '<|end|>' → logprob: -13.981863021850586
    7. '   ' → logprob: -14.731863021850586
    8. '      ' → logprob: -14.731863021850586
    9. 'elif' → logprob: -14.731863021850586
    10. '```' → logprob: -14.731863021850586

Token 402: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24030154943466187
    2. ':
' → logprob: -1.8653016090393066
    3. '           ' → logprob: -2.8653016090393066
    4. '       ' → logprob: -6.365301609039307
    5. '   ' → logprob: -10.740301132202148
    6. ' :
' → logprob: -11.490301132202148
    7. ':
' → logprob: -11.990301132202148
    8. ' :' → logprob: -11.990301132202148
    9. '          ' → logprob: -12.115301132202148
    10. '         ' → logprob: -12.365301132202148

Token 403: '           ' (ID: 352)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.4035308361053467
    2. 'blue' → logprob: -1.4035308361053467
    3. '           ' → logprob: -3.1535308361053467
    4. '       ' → logprob: -3.1535308361053467
    5. ' ' → logprob: -8.403531074523926
    6. '   ' → logprob: -8.653531074523926
    7. '         ' → logprob: -8.903531074523926
    8. '        ' → logprob: -9.403531074523926
    9. '               ' → logprob: -10.153531074523926
    10. ' ' → logprob: -10.278531074523926

Token 404: ' #' (ID: 1069)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.3869101405143738
    2. ' blue' → logprob: -1.1369102001190186
    3. '           ' → logprob: -10.261910438537598
    4. '       ' → logprob: -13.261910438537598
    5. '   ' → logprob: -13.886910438537598
    6. ' ' → logprob: -14.261910438537598
    7. ' ' → logprob: -15.136910438537598
    8. '_blue' → logprob: -16.01190948486328
    9. '               ' → logprob: -16.13690948486328
    10. '.blue' → logprob: -16.38690948486328

Token 405: ' Sinon' (ID: 154924)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.07950004190206528
    2. ' blue' → logprob: -2.5794999599456787
    3. '           ' → logprob: -7.704500198364258
    4. '       ' → logprob: -9.204500198364258
    5. '   ' → logprob: -10.204500198364258
    6. '         ' → logprob: -12.329500198364258
    7. '    ' → logprob: -12.579500198364258
    8. '        ' → logprob: -12.829500198364258
    9. '     ' → logprob: -12.954500198364258
    10. ' ' → logprob: -12.954500198364258

Token 406: ',' (ID: 11)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.004377075005322695
    2. '           ' → logprob: -6.1293768882751465
    3. 'blue' → logprob: -6.2543768882751465
    4. ' bleu' → logprob: -9.129377365112305
    5. ' ' → logprob: -10.129377365112305
    6. '   ' → logprob: -10.254377365112305
    7. '    ' → logprob: -11.004377365112305
    8. '       ' → logprob: -11.254377365112305
    9. '            ' → logprob: -11.504377365112305
    10. ':' → logprob: -11.504377365112305

Token 407: ' le' (ID: 505)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.029782773926854134
    2. 'blue' → logprob: -3.529782772064209
    3. '           ' → logprob: -10.404783248901367
    4. '       ' → logprob: -13.904783248901367
    5. '        ' → logprob: -15.154783248901367
    6. '    ' → logprob: -15.904783248901367
    7. '            ' → logprob: -16.029783248901367
    8. ' ' → logprob: -16.029783248901367
    9. '_blue' → logprob: -16.029783248901367
    10. '   ' → logprob: -16.154783248901367

Token 408: ' caractère' (ID: 80509)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.01417702715843916
    2. ' blue' → logprob: -4.264176845550537
    3. ' bleu' → logprob: -12.014177322387695
    4. ' ' → logprob: -12.639177322387695
    5. '_blue' → logprob: -13.889177322387695
    6. '           ' → logprob: -14.139177322387695
    7. '   ' → logprob: -14.639177322387695
    8. '.blue' → logprob: -14.764177322387695
    9. 'ble' → logprob: -15.264177322387695
    10. '```' → logprob: -15.264177322387695

Token 409: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.13174675405025482
    2. 's' → logprob: -2.256746768951416
    3. ' blue' → logprob: -4.006746768951416
    4. 'blue' → logprob: -7.631746768951416
    5. ' bleu' → logprob: -10.006746292114258
    6. ' ' → logprob: -11.506746292114258
    7. 'b' → logprob: -12.256746292114258
    8. ' red' → logprob: -13.006746292114258
    9. ' ' → logprob: -13.131746292114258
    10. '           ' → logprob: -13.756746292114258

Token 410: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.825890159234405e-05
    2. '[' → logprob: -9.625068664550781
    3. 'i' → logprob: -14.875068664550781
    4. '[I' → logprob: -14.875068664550781
    5. '[j' → logprob: -15.750068664550781
    6. '+=' → logprob: -15.750068664550781
    7. 's' → logprob: -16.00006866455078
    8. '(i' → logprob: -16.00006866455078
    9. '```' → logprob: -16.37506866455078
    10. '=' → logprob: -16.37506866455078

Token 411: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002425121609121561
    2. ']+=' → logprob: -6.627425193786621
    3. '           ' → logprob: -7.127425193786621
    4. ' ]' → logprob: -9.502425193786621
    5. ']+' → logprob: -9.627425193786621
    6. ']=' → logprob: -10.377425193786621
    7. ')' → logprob: -10.502425193786621
    8. 's' → logprob: -10.627425193786621
    9. '         ' → logprob: -11.252425193786621
    10. '            ' → logprob: -11.627425193786621

Token 412: ' est' (ID: 893)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.42059534788131714
    2. '+=' → logprob: -1.170595407485962
    3. '           ' → logprob: -4.045595169067383
    4. ']+=' → logprob: -5.045595169067383
    5. ' is' → logprob: -5.920595169067383
    6. ' blue' → logprob: -6.045595169067383
    7. ' est' → logprob: -6.545595169067383
    8. '         ' → logprob: -7.795595169067383
    9. '+='' → logprob: -7.920595169067383
    10. '          ' → logprob: -8.045595169067383

Token 413: ' ajouté' (ID: 127784)
  Prédit: ' ajouté'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajouté' → logprob: -0.08041355758905411
    2. 'aj' → logprob: -2.705413579940796
    3. 'added' → logprob: -5.330413341522217
    4. ' ajout' → logprob: -6.080413341522217
    5. ' added' → logprob: -6.580413341522217
    6. 'blue' → logprob: -7.455413341522217
    7. ' blue' → logprob: -7.580413341522217
    8. ''aj' → logprob: -7.830413341522217
    9. ' aj' → logprob: -8.205413818359375
    10. '’aj' → logprob: -9.830413818359375

Token 414: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05487923324108124
    2. ' blue' → logprob: -3.0548791885375977
    3. 'à' → logprob: -5.304879188537598
    4. ' ' → logprob: -7.804879188537598
    5. ' ' → logprob: -8.054879188537598
    6. ' to' → logprob: -8.554879188537598
    7. 'blue' → logprob: -8.929879188537598
    8. ' red' → logprob: -9.429879188537598
    9. ' a' → logprob: -9.554879188537598
    10. ' au' → logprob: -10.179879188537598

Token 415: ' la' (ID: 557)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.4740927219390869
    2. ' blue' → logprob: -0.9740927219390869
    3. ' bleu' → logprob: -11.849092483520508
    4. ''' → logprob: -12.599092483520508
    5. ' ' → logprob: -12.974092483520508
    6. 'ble' → logprob: -14.349092483520508
    7. 'blu' → logprob: -14.599092483520508
    8. '"' → logprob: -15.099092483520508
    9. 'green' → logprob: -15.599092483520508
    10. '_blue' → logprob: -15.599092483520508

Token 416: ' chaîne' (ID: 89288)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.31331348419189453
    2. 'blue' → logprob: -1.3133134841918945
    3. '"' → logprob: -10.313313484191895
    4. ' bleu' → logprob: -11.938313484191895
    5. ''' → logprob: -12.313313484191895
    6. ' ' → logprob: -12.563313484191895
    7. 'blu' → logprob: -13.063313484191895
    8. 'b' → logprob: -14.688313484191895
    9. 'ble' → logprob: -14.938313484191895
    10. ' "' → logprob: -15.188313484191895

Token 417: ' '' (ID: 461)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.030142905190587044
    2. ''' → logprob: -3.6551430225372314
    3. 'blue' → logprob: -6.405142784118652
    4. ' '' → logprob: -6.405142784118652
    5. ' bleu' → logprob: -8.280142784118652
    6. '"' → logprob: -8.405142784118652
    7. ''b' → logprob: -11.030142784118652
    8. ' ' → logprob: -11.530142784118652
    9. ' red' → logprob: -11.655142784118652
    10. ' "' → logprob: -12.155142784118652

Token 418: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.0002967320033349097
    2. ' blue' → logprob: -8.125296592712402
    3. 'ble' → logprob: -15.000296592712402
    4. ' ' → logprob: -16.12529754638672
    5. ' bleu' → logprob: -16.87529754638672
    6. ''' → logprob: -17.00029754638672
    7. 'blu' → logprob: -17.00029754638672
    8. '"' → logprob: -17.75029754638672
    9. '_blue' → logprob: -17.75029754638672
    10. '```' → logprob: -17.87529754638672

Token 419: ''
' (ID: 2207)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7639731168746948
    2. ' +=' → logprob: -1.1389731168746948
    3. ']+=' → logprob: -1.7639731168746948
    4. ']+' → logprob: -4.013973236083984
    5. '+=' → logprob: -4.263973236083984
    6. '           ' → logprob: -5.763973236083984
    7. '   ' → logprob: -5.888973236083984
    8. '+' → logprob: -6.763973236083984
    9. ' ]' → logprob: -7.263973236083984
    10. ' blue' → logprob: -7.388973236083984

Token 420: '           ' (ID: 352)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.06310094147920609
    2. 'blue' → logprob: -2.938101053237915
    3. '           ' → logprob: -4.813100814819336
    4. '       ' → logprob: -10.688100814819336
    5. '   ' → logprob: -11.188100814819336
    6. '.blue' → logprob: -12.188100814819336
    7. '_blue' → logprob: -12.313100814819336
    8. ' bleu' → logprob: -12.688100814819336
    9. '          ' → logprob: -12.813100814819336
    10. ' ' → logprob: -13.063100814819336

Token 421: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.018151935189962387
    2. ' blue' → logprob: -4.018151760101318
    3. '           ' → logprob: -13.518152236938477
    4. '       ' → logprob: -15.393152236938477
    5. '   ' → logprob: -15.643152236938477
    6. ' ' → logprob: -16.518152236938477
    7. '.blue' → logprob: -16.643152236938477
    8. '_blue' → logprob: -16.643152236938477
    9. 'Blue' → logprob: -17.518152236938477
    10. '  ' → logprob: -17.518152236938477

Token 422: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20141996443271637
    2. ' +=' → logprob: -1.7014199495315552
    3. '+' → logprob: -12.951419830322266
    4. ']+=' → logprob: -13.076419830322266
    5. '+='' → logprob: -13.701419830322266
    6. '+="' → logprob: -13.951419830322266
    7. ' +' → logprob: -15.826419830322266
    8. '+=(' → logprob: -16.576419830322266
    9. '    ' → logprob: -18.451419830322266
    10. ' ' → logprob: -18.701419830322266

Token 423: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03804149478673935
    2. ' s' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.913042068481445
    4. '	s' → logprob: -17.913042068481445
    5. '(s' → logprob: -18.663042068481445
    6. '_s' → logprob: -19.663042068481445
    7. ''s' → logprob: -20.163042068481445
    8. '`s' → logprob: -20.788042068481445
    9. ' ' → logprob: -21.288042068481445
    10. '   ' → logprob: -21.538042068481445

Token 424: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.75
    3. 'i' → logprob: -17.875
    4. '[j' → logprob: -20.25
    5. '[I' → logprob: -20.25
    6. '(i' → logprob: -21.5
    7. '```' → logprob: -21.625
    8. ' [' → logprob: -21.625
    9. '[int' → logprob: -22.125
    10. '   ' → logprob: -22.5

Token 425: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001561009994475171
    2. '}' → logprob: -9.62515640258789
    3. '   ' → logprob: -10.25015640258789
    4. ']' → logprob: -10.25015640258789
    5. ' )' → logprob: -11.62515640258789
    6. '       ' → logprob: -13.25015640258789
    7. '）' → logprob: -13.25015640258789
    8. '")' → logprob: -13.37515640258789
    9. '<|end|>' → logprob: -13.37515640258789
    10. ')
' → logprob: -14.00015640258789

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4855663721391466e-05
    2. '    
' → logprob: -12.375015258789062
    3. 'key' → logprob: -12.500015258789062
    4. ' key' → logprob: -12.500015258789062
    5. 'hash' → logprob: -13.375015258789062
    6. '```' → logprob: -14.000015258789062
    7. '       ' → logprob: -14.750015258789062
    8. '   ' → logprob: -16.000015258789062
    9. 'tuple' → logprob: -16.250015258789062
    10. 'if' → logprob: -16.750015258789062

Token 427: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016493646427989006
    2. 'key' → logprob: -4.891493797302246
    3. ' key' → logprob: -5.141493797302246
    4. '    
' → logprob: -6.516493797302246
    5. 'hash' → logprob: -7.141493797302246
    6. 'if' → logprob: -8.391493797302246
    7. 'pair' → logprob: -8.891493797302246
    8. '
' → logprob: -9.016493797302246
    9. ' if' → logprob: -9.141493797302246
    10. ' pair' → logprob: -10.391493797302246

Token 428: ' On' (ID: 2160)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.08511737734079361
    2. 'if' → logprob: -3.2101173400878906
    3. 'hash' → logprob: -3.9601173400878906
    4. 'pair' → logprob: -4.335117340087891
    5. ' key' → logprob: -6.085117340087891
    6. 'tuple' → logprob: -6.085117340087891
    7. '   ' → logprob: -6.335117340087891
    8. 'clé' → logprob: -6.460117340087891
    9. 't' → logprob: -7.585117340087891
    10. 'cou' → logprob: -9.08511734008789

Token 429: ' crée' (ID: 102256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5713024735450745
    2. 'key' → logprob: -1.4463024139404297
    3. 'if' → logprob: -2.1963024139404297
    4. ' key' → logprob: -2.9463024139404297
    5. ' if' → logprob: -3.6963024139404297
    6. 'pair' → logprob: -5.07130241394043
    7. 'tuple' → logprob: -6.44630241394043
    8. 'hash' → logprob: -6.94630241394043
    9. ' pair' → logprob: -7.32130241394043
    10. ' tuple' → logprob: -7.32130241394043

Token 430: ' un' (ID: 537)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.3861357569694519
    2. '   ' → logprob: -2.1361358165740967
    3. ' key' → logprob: -2.8861358165740967
    4. 'tuple' → logprob: -3.3861358165740967
    5. 'pair' → logprob: -3.5111358165740967
    6. 'hash' → logprob: -4.011135578155518
    7. 'clé' → logprob: -4.761135578155518
    8. 'a' → logprob: -4.886135578155518
    9. '(key' → logprob: -5.011135578155518
    10. 'cle' → logprob: -5.386135578155518

Token 431: ' couple' (ID: 7167)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.29524555802345276
    2. 'tuple' → logprob: -2.67024564743042
    3. ' key' → logprob: -2.92024564743042
    4. ' couple' → logprob: -3.17024564743042
    5. 'pair' → logprob: -3.67024564743042
    6. 'cou' → logprob: -3.92024564743042
    7. 't' → logprob: -3.92024564743042
    8. 'clé' → logprob: -4.42024564743042
    9. ' tuple' → logprob: -5.17024564743042
    10. 'cle' → logprob: -6.17024564743042

Token 432: ' (' (ID: 350)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6002748608589172
    2. '(red' → logprob: -1.3502748012542725
    3. '(key' → logprob: -2.8502748012542725
    4. '(' → logprob: -3.1002748012542725
    5. '   ' → logprob: -3.8502748012542725
    6. '_key' → logprob: -4.100275039672852
    7. ' (' → logprob: -4.475275039672852
    8. ' key' → logprob: -4.725275039672852
    9. 'clé' → logprob: -4.850275039672852
    10. ' clé' → logprob: -5.100275039672852

Token 433: 'red' (ID: 1291)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.024365432560443878
    2. 'red' → logprob: -3.8993654251098633
    3. ' (' → logprob: -6.024365425109863
    4. '   ' → logprob: -7.024365425109863
    5. '(' → logprob: -7.899365425109863
    6. ' red' → logprob: -9.649365425109863
    7. ')' → logprob: -10.524365425109863
    8. '(re' → logprob: -11.524365425109863
    9. '(r' → logprob: -11.899365425109863
    10. ':red' → logprob: -12.274365425109863

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ' ,' → logprob: -12.125007629394531
    3. '   ' → logprob: -13.750007629394531
    4. ',
' → logprob: -15.750007629394531
    5. '',' → logprob: -16.25000762939453
    6. '",' → logprob: -16.37500762939453
    7. ',"' → logprob: -16.50000762939453
    8. ',b' → logprob: -17.00000762939453
    9. ',",' → logprob: -17.00000762939453
    10. 'blue' → logprob: -17.37500762939453

Token 435: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.0699453204870224
    2. ' blue' → logprob: -2.6949453353881836
    3. ' ' → logprob: -11.944945335388184
    4. ')' → logprob: -13.944945335388184
    5. '   ' → logprob: -14.194945335388184
    6. '  ' → logprob: -15.194945335388184
    7. ' bleu' → logprob: -16.319944381713867
    8. '(' → logprob: -16.444944381713867
    9. 'Blue' → logprob: -16.569944381713867
    10. '_blue' → logprob: -16.694944381713867

Token 436: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011610541259869933
    2. ')
' → logprob: -6.876161098480225
    3. '   ' → logprob: -10.376160621643066
    4. ',' → logprob: -10.376160621643066
    5. '):' → logprob: -10.376160621643066
    6. '),' → logprob: -11.251160621643066
    7. '):
' → logprob: -11.251160621643066
    8. ' )' → logprob: -13.126160621643066
    9. ']' → logprob: -13.376160621643066
    10. ')
' → logprob: -13.626160621643066

Token 437: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010864014038816094
    2. 'key' → logprob: -7.376086235046387
    3. 'pair' → logprob: -8.751086235046387
    4. 'tuple' → logprob: -8.876086235046387
    5. '
' → logprob: -9.876086235046387
    6. '    
' → logprob: -10.126086235046387
    7. ' key' → logprob: -11.126086235046387
    8. ',' → logprob: -11.376086235046387
    9. ' tuple' → logprob: -11.501086235046387
    10. ')' → logprob: -11.876086235046387

Token 438: ' on' (ID: 402)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.5753026604652405
    2. 'if' → logprob: -1.0753026008605957
    3. '   ' → logprob: -3.0753026008605957
    4. 'key' → logprob: -3.7003026008605957
    5. ' if' → logprob: -5.075302600860596
    6. 'clé' → logprob: -5.450302600860596
    7. 'tuple' → logprob: -5.575302600860596
    8. '
' → logprob: -5.950302600860596
    9. '(hash' → logprob: -6.325302600860596
    10. ' hash' → logprob: -6.450302600860596

Token 439: ' incr' (ID: 52395)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.06885918974876404
    2. 'if' → logprob: -2.943859100341797
    3. ' hash' → logprob: -5.568859100341797
    4. 'tuple' → logprob: -6.068859100341797
    5. '(hash' → logprob: -6.193859100341797
    6. 'key' → logprob: -6.443859100341797
    7. '_hash' → logprob: -6.693859100341797
    8. '#' → logprob: -7.318859100341797
    9. ' if' → logprob: -7.443859100341797
    10. '   ' → logprob: -7.943859100341797

Token 440: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.15361154079437256
    2. 'mente' → logprob: -2.153611660003662
    3. 'ément' → logprob: -4.278611660003662
    4. 'emente' → logprob: -4.653611660003662
    5. '(' → logprob: -7.153611660003662
    6. '[' → logprob: -7.403611660003662
    7. 'ém' → logprob: -7.903611660003662
    8. '#' → logprob: -8.528611183166504
    9. '=' → logprob: -9.028611183166504
    10. 'éments' → logprob: -9.153611183166504

Token 441: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.022113777697086334
    2. 'ment' → logprob: -4.022113800048828
    3. '#' → logprob: -7.147113800048828
    4. 'm' → logprob: -7.522113800048828
    5. '(' → logprob: -7.647113800048828
    6. 'mentation' → logprob: -8.397113800048828
    7. '[' → logprob: -8.522113800048828
    8. 'mental' → logprob: -8.647113800048828
    9. 'mented' → logprob: -8.897113800048828
    10. 'n' → logprob: -9.147113800048828

Token 442: ' de' (ID: 334)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.029842711985111237
    2. ' hash' → logprob: -3.6548426151275635
    3. '(hash' → logprob: -5.904842853546143
    4. '   ' → logprob: -7.154842853546143
    5. ' (' → logprob: -11.654842376708984
    6. '	hash' → logprob: -11.779842376708984
    7. ' ' → logprob: -12.654842376708984
    8. '((' → logprob: -13.279842376708984
    9. '       ' → logprob: -13.404842376708984
    10. ')' → logprob: -13.654842376708984

Token 443: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030490651726722717
    2. ' ' → logprob: -4.280490875244141
    3. 'hash' → logprob: -4.655490875244141
    4. ' hash' → logprob: -5.030490875244141
    5. '   ' → logprob: -9.40549087524414
    6. '(hash' → logprob: -10.90549087524414
    7. ')' → logprob: -11.96799087524414
    8. '```' → logprob: -12.09299087524414
    9. '	hash' → logprob: -12.15549087524414
    10. ' la' → logprob: -12.78049087524414

Token 444: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029359184205532074
    2. 'hash' → logprob: -4.654359340667725
    3. '
' → logprob: -4.779359340667725
    4. ' if' → logprob: -5.279359340667725
    5. 'if' → logprob: -6.029359340667725
    6. '    
' → logprob: -6.654359340667725
    7. '(hash' → logprob: -6.904359340667725
    8. ' hash' → logprob: -7.404359340667725
    9. ',' → logprob: -8.779358863830566
    10. '       ' → logprob: -9.404358863830566

Token 445: ' valeur' (ID: 41664)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.08224469423294067
    2. ' hash' → logprob: -2.582244634628296
    3. ' compteur' → logprob: -6.207244873046875
    4. 'count' → logprob: -7.207244873046875
    5. 'counter' → logprob: -8.957244873046875
    6. 'tuple' → logprob: -10.082244873046875
    7. 'if' → logprob: -10.082244873046875
    8. 'value' → logprob: -10.332244873046875
    9. '	hash' → logprob: -10.332244873046875
    10. 'nombre' → logprob: -10.332244873046875

Token 446: ' associ' (ID: 5516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8039206266403198
    2. 'hash' → logprob: -0.8039206266403198
    3. '(hash' → logprob: -2.6789207458496094
    4. ' hash' → logprob: -3.5539207458496094
    5. ' dans' → logprob: -6.803920745849609
    6. 'if' → logprob: -6.928920745849609
    7. 'dans' → logprob: -6.928920745849609
    8. ' in' → logprob: -7.428920745849609
    9. ' (' → logprob: -7.553920745849609
    10. '       ' → logprob: -7.678920745849609

Token 447: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.045773886144161224
    2. 'é' → logprob: -3.170773983001709
    3. '[(' → logprob: -6.295773983001709
    4. 'e' → logprob: -7.920773983001709
    5. '(' → logprob: -8.54577350616455
    6. '((' → logprob: -9.29577350616455
    7. '(e' → logprob: -9.92077350616455
    8. 'ées' → logprob: -10.42077350616455
    9. '('' → logprob: -10.67077350616455
    10. '[' → logprob: -10.67077350616455

Token 448: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003749486757442355
    2. '(hash' → logprob: -5.753749370574951
    3. 'hash' → logprob: -8.25374984741211
    4. '(key' → logprob: -9.25374984741211
    5. '
' → logprob: -9.87874984741211
    6. '(' → logprob: -10.12874984741211
    7. ',' → logprob: -10.87874984741211
    8. '[key' → logprob: -11.12874984741211
    9. ' in' → logprob: -11.37874984741211
    10. 'if' → logprob: -11.62874984741211

Token 449: ' cette' (ID: 7696)
  Prédit: '(hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(hash' → logprob: -0.6765761375427246
    2. 'hash' → logprob: -0.9265761375427246
    3. ' hash' → logprob: -3.0515761375427246
    4. ' (' → logprob: -3.0515761375427246
    5. '   ' → logprob: -7.176576137542725
    6. '(h' → logprob: -8.926576614379883
    7. ' ' → logprob: -9.551576614379883
    8. '	hash' → logprob: -10.176576614379883
    9. '(key' → logprob: -10.301576614379883
    10. ' tuple' → logprob: -10.676576614379883

Token 450: ' clé' (ID: 83188)
  Prédit: '(hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(hash' → logprob: -0.5692962408065796
    2. '(red' → logprob: -1.4442962408065796
    3. 'hash' → logprob: -2.194296360015869
    4. ' (' → logprob: -2.569296360015869
    5. '(r' → logprob: -5.569296360015869
    6. 'tuple' → logprob: -6.194296360015869
    7. ' hash' → logprob: -6.694296360015869
    8. '(' → logprob: -6.944296360015869
    9. '(tuple' → logprob: -6.944296360015869
    10. ' tuple' → logprob: -8.569295883178711

Token 451: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15816716849803925
    2. '(hash' → logprob: -2.0331671237945557
    3. 'hash' → logprob: -4.658167362213135
    4. '
' → logprob: -6.533167362213135
    5. '[(' → logprob: -6.658167362213135
    6. '[' → logprob: -7.408167362213135
    7. '(key' → logprob: -7.408167362213135
    8. '[key' → logprob: -7.533167362213135
    9. 'if' → logprob: -8.033166885375977
    10. 'key' → logprob: -8.533166885375977

Token 452: ' le' (ID: 505)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0028052295092493296
    2. ' hash' → logprob: -5.877805233001709
    3. '	hash' → logprob: -15.87780475616455
    4. '   ' → logprob: -16.377805709838867
    5. '(hash' → logprob: -16.627805709838867
    6. '```' → logprob: -16.627805709838867
    7. '_hash' → logprob: -17.127805709838867
    8. '
' → logprob: -18.377805709838867
    9. 'Hash' → logprob: -18.877805709838867
    10. 'h' → logprob: -19.002805709838867

Token 453: ' diction' (ID: 155259)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -1.747814349073451e-05
    2. ' hash' → logprob: -11.000017166137695
    3. '```' → logprob: -14.875017166137695
    4. '
' → logprob: -16.500017166137695
    5. '_hash' → logprob: -17.000017166137695
    6. 'if' → logprob: -17.000017166137695
    7. '#' → logprob: -17.125017166137695
    8. 'Hash' → logprob: -17.125017166137695
    9. '   ' → logprob: -17.250017166137695
    10. '`' → logprob: -17.375017166137695

Token 454: 'naire' (ID: 30464)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.19929499924182892
    2. 'naire' → logprob: -1.8242950439453125
    3. 'ary' → logprob: -3.9492950439453125
    4. 'ar' → logprob: -10.324295043945312
    5. 'air' → logprob: -10.574295043945312
    6. 'are' → logprob: -11.324295043945312
    7. 'a' → logprob: -12.199295043945312
    8. '```' → logprob: -13.199295043945312
    9. '#' → logprob: -13.449295043945312
    10. '{' → logprob: -13.574295043945312

Token 455: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9881300926208496
    2. 'hash' → logprob: -0.9881300926208496
    3. '(hash' → logprob: -1.4881300926208496
    4. 'if' → logprob: -4.61313009262085
    5. 'key' → logprob: -4.98813009262085
    6. '(key' → logprob: -5.36313009262085
    7. '
' → logprob: -6.11313009262085
    8. '(' → logprob: -6.86313009262085
    9. '[(' → logprob: -6.98813009262085
    10. ' (' → logprob: -7.11313009262085

Token 456: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -1.688212614681106e-05
    2. ' hash' → logprob: -11.000017166137695
    3. '(hash' → logprob: -17.125017166137695
    4. '_hash' → logprob: -18.250017166137695
    5. '
' → logprob: -18.375017166137695
    6. '	hash' → logprob: -18.500017166137695
    7. '```' → logprob: -18.875017166137695
    8. ')' → logprob: -19.500017166137695
    9. 'h' → logprob: -19.750017166137695
    10. '   ' → logprob: -19.875017166137695

Token 457: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12671010196208954
    2. ']' → logprob: -3.1267101764678955
    3. '
' → logprob: -3.6267101764678955
    4. ')' → logprob: -3.8767101764678955
    5. '[(' → logprob: -5.501709938049316
    6. '(hash' → logprob: -5.501709938049316
    7. ')
' → logprob: -5.751709938049316
    8. '):
' → logprob: -6.126709938049316
    9. 'if' → logprob: -6.251709938049316
    10. 'hash' → logprob: -6.376709938049316

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07939973473548889
    2. 'hash' → logprob: -3.204399824142456
    3. '(hash' → logprob: -4.079399585723877
    4. 'key' → logprob: -4.329399585723877
    5. 'if' → logprob: -6.454399585723877
    6. '(key' → logprob: -6.829399585723877
    7. '
' → logprob: -6.954399585723877
    8. ' key' → logprob: -7.329399585723877
    9. '    
' → logprob: -8.454400062561035
    10. '[key' → logprob: -8.579400062561035

Token 459: ' #' (ID: 1069)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.12194027751684189
    2. 'key' → logprob: -2.4969403743743896
    3. '   ' → logprob: -4.1219401359558105
    4. 'if' → logprob: -4.3719401359558105
    5. '(hash' → logprob: -6.7469401359558105
    6. 'pair' → logprob: -6.8719401359558105
    7. ' hash' → logprob: -7.6219401359558105
    8. ' key' → logprob: -8.121940612792969
    9. '(key' → logprob: -8.871940612792969
    10. ' if' → logprob: -8.871940612792969

Token 460: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.4311189353466034
    2. 'key' → logprob: -1.3061189651489258
    3. '   ' → logprob: -3.181118965148926
    4. 'if' → logprob: -3.556118965148926
    5. 'pair' → logprob: -5.056118965148926
    6. ' key' → logprob: -6.431118965148926
    7. ' hash' → logprob: -7.556118965148926
    8. ' if' → logprob: -8.306118965148926
    9. '(hash' → logprob: -8.431118965148926
    10. 'tuple' → logprob: -8.931118965148926

Token 461: '.get' (ID: 775)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.004996078088879585
    2. '.setdefault' → logprob: -5.879996299743652
    3. '[' → logprob: -6.129996299743652
    4. '[key' → logprob: -11.629996299743652
    5. '.get' → logprob: -13.754996299743652
    6. '_key' → logprob: -14.379996299743652
    7. '[((' → logprob: -15.379996299743652
    8. 'key' → logprob: -15.379996299743652
    9. '.' → logprob: -15.504996299743652
    10. ' [(' → logprob: -15.879996299743652

Token 462: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0019844253547489643
    2. '(hash' → logprob: -6.376984596252441
    3. '(' → logprob: -8.501984596252441
    4. 'hash' → logprob: -10.501984596252441
    5. '(red' → logprob: -10.626984596252441
    6. '(key' → logprob: -11.126984596252441
    7. '(c' → logprob: -12.501984596252441
    8. '[(' → logprob: -13.126984596252441
    9. ' (' → logprob: -13.876984596252441
    10. ' ((' → logprob: -14.126984596252441

Token 463: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.014272687956690788
    2. '(red' → logprob: -4.264272689819336
    3. ' red' → logprob: -9.139272689819336
    4. '   ' → logprob: -14.639272689819336
    5. ' (' → logprob: -14.639272689819336
    6. '(' → logprob: -15.639272689819336
    7. ')' → logprob: -15.889272689819336
    8. 'redd' → logprob: -15.889272689819336
    9. ' ' → logprob: -16.014272689819336
    10. '.red' → logprob: -16.889272689819336

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.542423165636137e-05
    2. ' ,' → logprob: -9.375085830688477
    3. ',
' → logprob: -15.375085830688477
    4. ',b' → logprob: -16.250085830688477
    5. '
' → logprob: -16.625085830688477
    6. '‌,' → logprob: -17.250085830688477
    7. ',color' → logprob: -18.000085830688477
    8. ' ' → logprob: -18.125085830688477
    9. '<|end|>' → logprob: -18.125085830688477
    10. '

' → logprob: -18.375085830688477

Token 465: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.012524607591331005
    2. ' blue' → logprob: -4.387524604797363
    3. ' ' → logprob: -11.512524604797363
    4. '   ' → logprob: -13.387524604797363
    5. '  ' → logprob: -14.137524604797363
    6. 'ble' → logprob: -14.512524604797363
    7. 'blu' → logprob: -14.637524604797363
    8. ' ' → logprob: -15.262524604797363
    9. ' bleu' → logprob: -15.825024604797363
    10. '_blue' → logprob: -15.887524604797363

Token 466: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033804524689912796
    2. '),' → logprob: -3.408804416656494
    3. ' ,' → logprob: -8.908804893493652
    4. ')' → logprob: -11.283804893493652
    5. ' ),' → logprob: -12.658804893493652
    6. ',),' → logprob: -12.783804893493652
    7. '},' → logprob: -13.283804893493652
    8. '],' → logprob: -14.158804893493652
    9. '   ' → logprob: -14.408804893493652
    10. '(),' → logprob: -14.658804893493652

Token 467: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. ')' → logprob: -18.750045776367188
    4. '۰' → logprob: -18.875045776367188
    5. '   ' → logprob: -19.125045776367188
    6. '1' → logprob: -19.750045776367188
    7. '  ' → logprob: -20.062545776367188
    8. '０' → logprob: -20.250045776367188
    9. ' ' → logprob: -20.312545776367188
    10. '000' → logprob: -20.500045776367188

Token 468: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. ')' → logprob: -18.3750057220459
    4. '۰' → logprob: -18.7500057220459
    5. '000' → logprob: -19.1875057220459
    6. '   ' → logprob: -19.2500057220459
    7. '1' → logprob: -19.3125057220459
    8. '00' → logprob: -19.9375057220459
    9. '０' → logprob: -20.1875057220459
    10. '  ' → logprob: -20.6875057220459

Token 469: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015205175441224128
    2. ')+' → logprob: -8.875151634216309
    3. ' )' → logprob: -11.500151634216309
    4. '   ' → logprob: -13.375151634216309
    5. '）' → logprob: -15.875151634216309
    6. ']' → logprob: -16.125152587890625
    7. '+' → logprob: -17.000152587890625
    8. '    ' → logprob: -17.000152587890625
    9. '`)' → logprob: -17.375152587890625
    10. '))' → logprob: -17.625152587890625

Token 470: ' retourne' (ID: 178818)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5036383271217346
    2. '+' → logprob: -2.00363826751709
    3. ']' → logprob: -2.25363826751709
    4. ' +' → logprob: -2.50363826751709
    5. '   ' → logprob: -3.25363826751709
    6. ')+' → logprob: -3.62863826751709
    7. '=' → logprob: -6.25363826751709
    8. ']+' → logprob: -6.37863826751709
    9. '+=' → logprob: -6.62863826751709
    10. ']+=' → logprob: -6.87863826751709

Token 471: ' la' (ID: 557)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0019258982501924038
    2. ' hash' → logprob: -6.626925945281982
    3. '0' → logprob: -7.501925945281982
    4. '(hash' → logprob: -10.751925468444824
    5. '   ' → logprob: -11.376925468444824
    6. 'the' → logprob: -12.751925468444824
    7. ' ' → logprob: -12.876925468444824
    8. 'la' → logprob: -13.126925468444824
    9. 'le' → logprob: -13.376925468444824
    10. '	hash' → logprob: -13.376925468444824

Token 472: ' valeur' (ID: 41664)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.08756598830223083
    2. 'nombre' → logprob: -2.8375658988952637
    3. 'current' → logprob: -3.9625658988952637
    4. 'val' → logprob: -5.837565898895264
    5. 'count' → logprob: -5.962565898895264
    6. 'value' → logprob: -8.462566375732422
    7. ' hash' → logprob: -8.587566375732422
    8. 'counter' → logprob: -9.712566375732422
    9. 'previous' → logprob: -9.962566375732422
    10. '0' → logprob: -9.962566375732422

Token 473: ' actuelle' (ID: 104951)
  Prédit: '(hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(hash' → logprob: -0.6379250884056091
    2. ' +' → logprob: -1.262925148010254
    3. '+' → logprob: -2.137925148010254
    4. '((' → logprob: -2.887925148010254
    5. 'hash' → logprob: -4.762925148010254
    6. '   ' → logprob: -5.762925148010254
    7. '=' → logprob: -6.262925148010254
    8. ')' → logprob: -8.137925148010254
    9. ' hash' → logprob: -8.512925148010254
    10. ' ' → logprob: -8.637925148010254

Token 474: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.049410201609134674
    2. '+' → logprob: -3.049410104751587
    3. '   ' → logprob: -8.549409866333008
    4. ')' → logprob: -8.549409866333008
    5. '(hash' → logprob: -8.549409866333008
    6. 'hash' → logprob: -9.674409866333008
    7. '((' → logprob: -9.799409866333008
    8. ',' → logprob: -9.924409866333008
    9. ')+' → logprob: -10.799409866333008
    10. '
' → logprob: -11.424409866333008

Token 475: ' ou' (ID: 2031)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.9043099880218506
    2. '1' → logprob: -1.2793099880218506
    3. ' hash' → logprob: -1.7793099880218506
    4. '   ' → logprob: -2.2793099880218506
    5. '0' → logprob: -4.27931022644043
    6. ' ' → logprob: -4.65431022644043
    7. '+' → logprob: -5.40431022644043
    8. ' +' → logprob: -5.52931022644043
    9. ')' → logprob: -5.52931022644043
    10. '       ' → logprob: -5.65431022644043

Token 476: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008739020675420761
    2. ' ' → logprob: -4.758738994598389
    3. '1' → logprob: -9.008739471435547
    4. '  ' → logprob: -14.258739471435547
    5. '   ' → logprob: -14.508739471435547
    6. '<|end|>' → logprob: -15.133739471435547
    7. '    ' → logprob: -15.758739471435547
    8. '```' → logprob: -15.883739471435547
    9. ')' → logprob: -16.008739471435547
    10. ' ' → logprob: -16.758739471435547

Token 477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002668192028068006
    2. ' ' → logprob: -8.250267028808594
    3. '1' → logprob: -12.125267028808594
    4. '   ' → logprob: -17.125267028808594
    5. '  ' → logprob: -17.500267028808594
    6. '[]' → logprob: -18.250267028808594
    7. ')' → logprob: -18.375267028808594
    8. '    ' → logprob: -18.437767028808594
    9. 'zero' → logprob: -19.000267028808594
    10. '```' → logprob: -19.000267028808594

Token 478: ' si' (ID: 1784)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.17849946022033691
    2. '+' → logprob: -2.678499460220337
    3. '   ' → logprob: -2.678499460220337
    4. '[(' → logprob: -4.178499221801758
    5. ')' → logprob: -5.053499221801758
    6. '((' → logprob: -6.178499221801758
    7. ')+' → logprob: -6.678499221801758
    8. ']' → logprob: -7.678499221801758
    9. 'hash' → logprob: -8.678499221801758
    10. ']+' → logprob: -9.303499221801758

Token 479: ' la' (ID: 557)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.005059417802840471
    2. '(hash' → logprob: -6.005059242248535
    3. '(' → logprob: -6.755059242248535
    4. ' (' → logprob: -6.880059242248535
    5. '(ret' → logprob: -9.380059242248535
    6. '(ro' → logprob: -9.630059242248535
    7. '(re' → logprob: -9.880059242248535
    8. '   ' → logprob: -10.255059242248535
    9. '(rad' → logprob: -10.255059242248535
    10. '(redis' → logprob: -11.130059242248535

Token 480: ' clé' (ID: 83188)
  Prédit: 'clé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clé' → logprob: -0.7947371006011963
    2. 'cou' → logprob: -1.1697371006011963
    3. '(' → logprob: -2.2947371006011963
    4. ' (' → logprob: -2.5447371006011963
    5. '(cl' → logprob: -3.6697371006011963
    6. '(r' → logprob: -4.669736862182617
    7. '(hash' → logprob: -5.669736862182617
    8. 'cle' → logprob: -5.794736862182617
    9. '(red' → logprob: -5.794736862182617
    10. '(c' → logprob: -5.919736862182617

Token 481: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7867751121520996
    2. ')' → logprob: -1.6617751121520996
    3. 'not' → logprob: -1.6617751121520996
    4. ' not' → logprob: -2.6617751121520996
    5. ' n' → logprob: -3.0367751121520996
    6. '(n' → logprob: -3.2867751121520996
    7. '(' → logprob: -5.6617751121521
    8. '(not' → logprob: -6.2867751121521
    9. ' (' → logprob: -6.7867751121521
    10. '(hash' → logprob: -6.9117751121521

Token 482: ''ex' (ID: 23472)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.1827386617660522
    2. 'ot' → logprob: -1.1827386617660522
    3. 'not' → logprob: -1.6827386617660522
    4. 'n' → logprob: -2.432738780975342
    5. ''est' → logprob: -3.807738780975342
    6. 'pas' → logprob: -4.307738780975342
    7. 'e' → logprob: -4.432738780975342
    8. '((' → logprob: -4.432738780975342
    9. 'o' → logprob: -4.807738780975342
    10. ')' → logprob: -4.932738780975342

Token 483: 'iste' (ID: 4872)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.3121195435523987
    2. 'iste' → logprob: -2.562119483947754
    3. 'ist' → logprob: -2.687119483947754
    4. 'ex' → logprob: -3.312119483947754
    5. ''ex' → logprob: -3.437119483947754
    6. ''est' → logprob: -4.562119483947754
    7. '(hash' → logprob: -4.812119483947754
    8. '(ex' → logprob: -5.562119483947754
    9. '```' → logprob: -5.562119483947754
    10. 'x' → logprob: -5.937119483947754

Token 484: ' pas' (ID: 2173)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13938382267951965
    2. '((' → logprob: -3.1393837928771973
    3. '   ' → logprob: -3.2643837928771973
    4. ')+' → logprob: -3.3893837928771973
    5. ',' → logprob: -4.639383792877197
    6. '[(' → logprob: -6.264383792877197
    7. '(hash' → logprob: -6.514383792877197
    8. ')
' → logprob: -8.139384269714355
    9. 'hash' → logprob: -8.264384269714355
    10. '+' → logprob: -8.639384269714355

Token 485: ' encore' (ID: 14043)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02275990881025791
    2. 'hash' → logprob: -3.8977599143981934
    3. '(hash' → logprob: -6.772759914398193
    4. '
' → logprob: -7.647759914398193
    5. ' hash' → logprob: -7.897759914398193
    6. ')' → logprob: -9.272759437561035
    7. '    
' → logprob: -10.397759437561035
    8. ')
' → logprob: -10.522759437561035
    9. '[(' → logprob: -10.647759437561035
    10. '	hash' → logprob: -11.647759437561035

Token 486: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1360187828540802
    2. 'hash' → logprob: -2.136018753051758
    3. '
' → logprob: -5.636018753051758
    4. ' hash' → logprob: -6.136018753051758
    5. '(hash' → logprob: -6.261018753051758
    6. '[(' → logprob: -7.386018753051758
    7. ')' → logprob: -7.761018753051758
    8. ')
' → logprob: -9.011018753051758
    9. '    
' → logprob: -9.511018753051758
    10. '((' → logprob: -9.761018753051758

Token 487: '   ' (ID: 271)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.3008092939853668
    2. '   ' → logprob: -1.5508092641830444
    3. ' hash' → logprob: -3.050809383392334
    4. '(hash' → logprob: -8.050808906555176
    5. '	hash' → logprob: -9.925808906555176
    6. '
' → logprob: -12.300808906555176
    7. '[(' → logprob: -12.300808906555176
    8. '  ' → logprob: -13.675808906555176
    9. '[' → logprob: -13.800808906555176
    10. '_hash' → logprob: -13.800808906555176

Token 488: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' (adapté à ' hash') → logprob: -0.0425381064414978
    2. '   ' → logprob: -3.4175381660461426
    3. ' hash' → logprob: -4.917538166046143
    4. '(hash' → logprob: -6.542538166046143
    5. '
' → logprob: -10.417537689208984
    6. '	hash' → logprob: -10.667537689208984
    7. '((' → logprob: -11.667537689208984
    8. '    
' → logprob: -12.167537689208984
    9. ')' → logprob: -12.292537689208984
    10. '(' → logprob: -12.667537689208984

Token 489: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -8.542423165636137e-05
    2. '[((' → logprob: -9.750085830688477
    3. '[' → logprob: -10.625085830688477
    4. '.setdefault' → logprob: -13.125085830688477
    5. '((' → logprob: -14.375085830688477
    6. '```' → logprob: -16.625085830688477
    7. '[get' → logprob: -16.875085830688477
    8. '[
' → logprob: -17.375085830688477
    9. ' [(' → logprob: -17.625085830688477
    10. '[...]' → logprob: -17.750085830688477

Token 490: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -7.107425062713446e-06
    2. ' red' → logprob: -12.000006675720215
    3. '(red' → logprob: -14.000006675720215
    4. ' ' → logprob: -18.62500762939453
    5. '   ' → logprob: -19.00000762939453
    6. 'redi' → logprob: -20.12500762939453
    7. 'redd' → logprob: -20.62500762939453
    8. ')' → logprob: -20.87500762939453
    9. '(' → logprob: -21.75000762939453
    10. '  ' → logprob: -22.00000762939453

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.988221684878226e-06
    2. ' ,' → logprob: -12.000006675720215
    3. ',
' → logprob: -14.125006675720215
    4. '‌,' → logprob: -18.00000762939453
    5. ',

' → logprob: -18.37500762939453
    6. '<|end|>' → logprob: -18.37500762939453
    7. '),' → logprob: -20.12500762939453
    8. ',b' → logprob: -20.12500762939453
    9. ' ' → logprob: -20.50000762939453
    10. '
' → logprob: -20.50000762939453

Token 492: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.3868827819824219
    2. ' blue' → logprob: -1.1368827819824219
    3. ' ' → logprob: -11.636882781982422
    4. ' bleu' → logprob: -13.636882781982422
    5. '  ' → logprob: -15.136882781982422
    6. '   ' → logprob: -15.386882781982422
    7. 'ble' → logprob: -15.386882781982422
    8. ' ' → logprob: -15.386882781982422
    9. 'blu' → logprob: -15.636882781982422
    10. 'Blue' → logprob: -15.886882781982422

Token 493: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006516746943816543
    2. ']' → logprob: -7.375651836395264
    3. ')' → logprob: -10.625651359558105
    4. '])' → logprob: -14.750651359558105
    5. ']]' → logprob: -15.250651359558105
    6. '")]' → logprob: -16.625652313232422
    7. ' )' → logprob: -16.875652313232422
    8. '')]' → logprob: -17.750652313232422
    9. ']=' → logprob: -18.000652313232422
    10. ' ]' → logprob: -18.125652313232422

Token 494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061970602720975876
    2. ' =' → logprob: -2.8119707107543945
    3. '+=' → logprob: -12.936970710754395
    4. ' +=' → logprob: -14.561970710754395
    5. 'hash' → logprob: -17.436969757080078
    6. '＝' → logprob: -17.561969757080078
    7. '=
' → logprob: -18.436969757080078
    8. ' ' → logprob: -18.686969757080078
    9. '   ' → logprob: -18.936969757080078
    10. '=

' → logprob: -19.436969757080078

Token 495: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.023246407508850098
    2. ' hash' → logprob: -3.7732462882995605
    3. '	hash' → logprob: -14.398246765136719
    4. '(hash' → logprob: -15.648246765136719
    5. '   ' → logprob: -15.773246765136719
    6. '_hash' → logprob: -17.39824676513672
    7. 'Hash' → logprob: -17.77324676513672
    8. ' ' → logprob: -17.77324676513672
    9. 'h' → logprob: -18.02324676513672
    10. 'hat' → logprob: -18.14824676513672

Token 496: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.2948405128554441e-05
    2. 'get' → logprob: -12.00001335144043
    3. '.' → logprob: -12.25001335144043
    4. ' .' → logprob: -13.75001335144043
    5. '[(' → logprob: -14.12501335144043
    6. '   ' → logprob: -16.37501335144043
    7. ').' → logprob: -17.62501335144043
    8. '.setdefault' → logprob: -18.12501335144043
    9. 'hash' → logprob: -18.50001335144043
    10. '.hash' → logprob: -19.00001335144043

Token 497: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.2471589798224159e-05
    2. '[(' → logprob: -11.625012397766113
    3. '(hash' → logprob: -12.875012397766113
    4. ' ((' → logprob: -14.500012397766113
    5. ')((' → logprob: -16.50001335144043
    6. '([(' → logprob: -16.50001335144043
    7. '(' → logprob: -16.87501335144043
    8. ' ' → logprob: -17.12501335144043
    9. '(red' → logprob: -17.75001335144043
    10. '   ' → logprob: -18.25001335144043

Token 498: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.006718690041452646
    2. '(red' → logprob: -5.006718635559082
    3. ' red' → logprob: -12.631718635559082
    4. 'redd' → logprob: -17.3817195892334
    5. '   ' → logprob: -17.3817195892334
    6. ' (' → logprob: -17.6317195892334
    7. ' ' → logprob: -17.7567195892334
    8. '.red' → logprob: -18.1317195892334
    9. '(' → logprob: -18.2567195892334
    10. 'redi' → logprob: -18.8817195892334

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4121114822482923e-06
    2. ' ,' → logprob: -12.750003814697266
    3. 'red' → logprob: -15.000003814697266
    4. '(red' → logprob: -16.375003814697266
    5. ',
' → logprob: -17.125003814697266
    6. ' red' → logprob: -17.500003814697266
    7. '[' → logprob: -18.625003814697266
    8. ' ' → logprob: -18.875003814697266
    9. '(' → logprob: -19.250003814697266
    10. ')' → logprob: -19.750003814697266

Token 500: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.06197473779320717
    2. ' blue' → logprob: -2.8119747638702393
    3. ' ' → logprob: -12.18697452545166
    4. 'red' → logprob: -13.81197452545166
    5. ' bleu' → logprob: -15.06197452545166
    6. 'ble' → logprob: -15.68697452545166
    7. '   ' → logprob: -15.81197452545166
    8. '_blue' → logprob: -16.061975479125977
    9. '  ' → logprob: -16.561975479125977
    10. ' red' → logprob: -17.186975479125977

Token 501: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0019646743312478065
    2. ',' → logprob: -6.251964569091797
    3. ')' → logprob: -10.626964569091797
    4. ' ),' → logprob: -12.751964569091797
    5. '},' → logprob: -13.126964569091797
    6. '(),' → logprob: -13.376964569091797
    7. ',),' → logprob: -13.376964569091797
    8. ' ' → logprob: -13.876964569091797
    9. '),(' → logprob: -14.126964569091797
    10. '],' → logprob: -14.376964569091797

Token 502: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. ')' → logprob: -20.2500057220459
    4. '   ' → logprob: -21.7500057220459
    5. '```' → logprob: -23.0000057220459
    6. '1' → logprob: -23.7500057220459
    7. '۰' → logprob: -23.8750057220459
    8. '
' → logprob: -24.5000057220459
    9. '  ' → logprob: -25.3750057220459
    10. ' ' → logprob: -25.7500057220459

Token 503: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. ')' → logprob: -20.0
    4. '   ' → logprob: -20.875
    5. '```' → logprob: -21.0
    6. '1' → logprob: -21.625
    7. '۰' → logprob: -21.875
    8. '00' → logprob: -21.875
    9. '
' → logprob: -22.625
    10. '000' → logprob: -22.75

Token 504: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.076218025758862e-05
    2. ')+' → logprob: -9.875070571899414
    3. '+' → logprob: -10.875070571899414
    4. ']' → logprob: -16.250070571899414
    5. '}' → logprob: -16.250070571899414
    6. ' +' → logprob: -16.875070571899414
    7. ' )' → logprob: -17.000070571899414
    8. '+)' → logprob: -17.250070571899414
    9. '）' → logprob: -18.125070571899414
    10. '```' → logprob: -18.500070571899414

Token 505: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004307884373702109
    2. ' +' → logprob: -7.750430583953857
    3. '()+' → logprob: -16.250431060791016
    4. ')+' → logprob: -17.625431060791016
    5. '1' → logprob: -18.125431060791016
    6. '+
' → logprob: -18.125431060791016
    7. '0' → logprob: -18.625431060791016
    8. ' plus' → logprob: -18.750431060791016
    9. '+=' → logprob: -18.750431060791016
    10. ')' → logprob: -19.000431060791016

Token 506: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -18.250030517578125
    4. '```' → logprob: -21.750030517578125
    5. '  ' → logprob: -22.000030517578125
    6. ' ' → logprob: -22.875030517578125
    7. '	' → logprob: -23.500030517578125
    8. '0' → logprob: -23.750030517578125
    9. '１' → logprob: -24.125030517578125
    10. '۱' → logprob: -24.625030517578125

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -21.75
    4. '```' → logprob: -22.125
    5. '１' → logprob: -25.625
    6. '  ' → logprob: -25.75
    7. '۱' → logprob: -26.75
    8. '`' → logprob: -27.0
    9. '
' → logprob: -27.25
    10. '``' → logprob: -27.5

Token 508: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024234311655163765
    2. 'for' → logprob: -4.149234294891357
    3. '<|end|>' → logprob: -4.899234294891357
    4. '#' → logprob: -7.649234294891357
    5. ')' → logprob: -8.899234771728516
    6. '#print' → logprob: -10.774234771728516
    7. '
' → logprob: -10.899234771728516
    8. '```' → logprob: -11.274234771728516
    9. 'result' → logprob: -11.649234771728516
    10. 'sum' → logprob: -11.774234771728516

Token 509: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11434247344732285
    2. 'print' → logprob: -2.614342451095581
    3. 'max' → logprob: -3.489342451095581
    4. 'sum' → logprob: -6.61434268951416
    5. ')' → logprob: -7.23934268951416
    6. 'len' → logprob: -7.48934268951416
    7. 'n' → logprob: -7.98934268951416
    8. 'result' → logprob: -8.48934268951416
    9. 'sorted' → logprob: -8.48934268951416
    10. ' for' → logprob: -8.73934268951416

Token 510: ' Cr' (ID: 5790)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5434507727622986
    2. 'result' → logprob: -1.7934508323669434
    3. 'count' → logprob: -2.2934508323669434
    4. 'for' → logprob: -2.6684508323669434
    5. 'ans' → logprob: -3.7934508323669434
    6. 'res' → logprob: -4.043450832366943
    7. 'answer' → logprob: -4.168450832366943
    8. 'total' → logprob: -4.543450832366943
    9. 'max' → logprob: -4.668450832366943
    10. 'cnt' → logprob: -6.918450832366943

Token 511: 'éer' (ID: 83012)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48996326327323914
    2. 'e' → logprob: -1.3649632930755615
    3. 'for' → logprob: -2.8649632930755615
    4. 'é' → logprob: -3.2399632930755615
    5. 'ep' → logprob: -4.364963054656982
    6. 'print' → logprob: -5.114963054656982
    7. 'ef' → logprob: -5.239963054656982
    8. '#print' → logprob: -6.114963054656982
    9. 'ép' → logprob: -6.489963054656982
    10. 'eft' → logprob: -7.114963054656982

Token 512: ' une' (ID: 2463)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6793245077133179
    2. 'res' → logprob: -1.4293245077133179
    3. 'count' → logprob: -1.9293245077133179
    4. 'ans' → logprob: -2.9293246269226074
    5. 'max' → logprob: -3.4293246269226074
    6. 'total' → logprob: -4.804324626922607
    7. 'answer' → logprob: -5.054324626922607
    8. 'counter' → logprob: -5.429324626922607
    9. 'un' → logprob: -7.304324626922607
    10. 'une' → logprob: -7.679324626922607

Token 513: ' nouvelle' (ID: 24562)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.960935115814209
    2. 'variable' → logprob: -1.085935115814209
    3. 'counter' → logprob: -1.585935115814209
    4. 'total' → logprob: -3.710935115814209
    5. 'count' → logprob: -3.960935115814209
    6. 'sum' → logprob: -4.585935115814209
    7. 'default' → logprob: -5.085935115814209
    8. 'set' → logprob: -5.585935115814209
    9. 'list' → logprob: -5.710935115814209
    10. 'res' → logprob: -6.210935115814209

Token 514: ' chaîne' (ID: 89288)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3416592478752136
    2. 'default' → logprob: -2.2166593074798584
    3. 'counter' → logprob: -2.5916593074798584
    4. 'hash' → logprob: -2.9666593074798584
    5. 'answer' → logprob: -4.591659069061279
    6. 'sum' → logprob: -4.716659069061279
    7. 'count' → logprob: -4.716659069061279
    8. 'res' → logprob: -5.341659069061279
    9. 'total' → logprob: -5.466659069061279
    10. 'd' → logprob: -5.716659069061279

Token 515: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1411583423614502
    2. 'res' → logprob: -3.01615834236145
    3. 'answer' → logprob: -3.01615834236145
    4. 'ans' → logprob: -3.51615834236145
    5. 'output' → logprob: -7.266158103942871
    6. 'final' → logprob: -7.391158103942871
    7. ' result' → logprob: -7.516158103942871
    8. 't' → logprob: -7.641158103942871
    9. 'max' → logprob: -7.641158103942871
    10. 'unique' → logprob: -8.016158103942871

Token 516: 't' (ID: 83)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16161197423934937
    2. 'answer' → logprob: -2.536612033843994
    3. 'res' → logprob: -3.286612033843994
    4. 'ans' → logprob: -3.536612033843994
    5. 'output' → logprob: -6.036612033843994
    6. 'r' → logprob: -8.036611557006836
    7. 'out' → logprob: -8.286611557006836
    8. 'rés' → logprob: -9.036611557006836
    9. 'red' → logprob: -9.161611557006836
    10. 'ret' → logprob: -9.286611557006836

Token 517: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016521668061614037
    2. '=' → logprob: -4.141521453857422
    3. 't' → logprob: -7.891521453857422
    4. 's' → logprob: -9.766521453857422
    5. '=""' → logprob: -11.266521453857422
    6. 'o' → logprob: -11.516521453857422
    7. 'f' → logprob: -12.391521453857422
    8. 'arget' → logprob: -12.891521453857422
    9. 'r' → logprob: -12.891521453857422
    10. 'e' → logprob: -13.266521453857422

Token 518: ' qui' (ID: 2780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3965211510658264
    2. 't' → logprob: -1.1465210914611816
    3. ' =' → logprob: -4.646521091461182
    4. '=""' → logprob: -12.02152156829834
    5. 's' → logprob: -14.02152156829834
    6. '=
' → logprob: -14.39652156829834
    7. '=t' → logprob: -14.64652156829834
    8. ' t' → logprob: -15.64652156829834
    9. '=""
' → logprob: -15.64652156829834
    10. ',' → logprob: -16.021520614624023

Token 519: ' contient' (ID: 89067)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026703495532274246
    2. 't' → logprob: -4.276703357696533
    3. '""' → logprob: -5.026703357696533
    4. '"' → logprob: -6.276703357696533
    5. ' =' → logprob: -6.526703357696533
    6. '+=' → logprob: -6.901703357696533
    7. 'for' → logprob: -7.401703357696533
    8. 'sum' → logprob: -8.151703834533691
    9. '=""' → logprob: -8.526703834533691
    10. 'max' → logprob: -8.901703834533691

Token 520: ' la' (ID: 557)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.2542816996574402
    2. '"' → logprob: -1.879281759262085
    3. 's' → logprob: -3.129281759262085
    4. 'max' → logprob: -4.629281520843506
    5. '''' → logprob: -4.879281520843506
    6. 'sum' → logprob: -5.629281520843506
    7. '"s' → logprob: -6.379281520843506
    8. '''.' → logprob: -6.379281520843506
    9. 't' → logprob: -7.129281520843506
    10. '"""' → logprob: -7.504281520843506

Token 521: ' seconde' (ID: 66204)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4900737404823303
    2. '""' → logprob: -1.4900736808776855
    3. 's' → logprob: -2.7400736808776855
    4. 'max' → logprob: -3.4900736808776855
    5. 'sum' → logprob: -3.6150736808776855
    6. '''' → logprob: -4.4900736808776855
    7. 'red' → logprob: -5.1150736808776855
    8. ''' → logprob: -5.4900736808776855
    9. '''.' → logprob: -5.6150736808776855
    10. 't' → logprob: -5.8650736808776855

Token 522: ' moitié' (ID: 93216)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5611504316329956
    2. 'chaine' → logprob: -1.9361504316329956
    3. 'part' → logprob: -2.061150550842285
    4. ' partie' → logprob: -3.311150550842285
    5. ' moitié' → logprob: -3.436150550842285
    6. ' s' → logprob: -4.436150550842285
    7. ' chaîne' → logprob: -4.811150550842285
    8. 'blue' → logprob: -4.936150550842285
    9. ' ' → logprob: -5.311150550842285
    10. ' part' → logprob: -5.311150550842285

Token 523: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5036893486976624
    2. '=' → logprob: -1.0036892890930176
    3. 's' → logprob: -3.6286892890930176
    4. 't' → logprob: -6.003689289093018
    5. '=s' → logprob: -9.503689765930176
    6. ' s' → logprob: -11.128689765930176
    7. '_' → logprob: -11.253689765930176
    8. '#' → logprob: -11.378689765930176
    9. ',' → logprob: -12.003689765930176
    10. '_s' → logprob: -12.128689765930176

Token 524: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -6.20603168499656e-05
    2. ' s' → logprob: -9.875061988830566
    3. 'hash' → logprob: -11.875061988830566
    4. '(s' → logprob: -13.500061988830566
    5. 'red' → logprob: -15.250061988830566
    6. 'n' → logprob: -15.375061988830566
    7. '#' → logprob: -15.375061988830566
    8. '```' → logprob: -15.500061988830566
    9. 'input' → logprob: -15.875061988830566
    10. 'string' → logprob: -16.000062942504883

Token 525: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00015157493180595338
    2. ' s' → logprob: -9.125151634216309
    3. 'string' → logprob: -10.500151634216309
    4. 'input' → logprob: -11.500151634216309
    5. 'n' → logprob: -13.375151634216309
    6. 'code' → logprob: -13.625151634216309
    7. 'chaine' → logprob: -14.750151634216309
    8. 'hash' → logprob: -15.000151634216309
    9. '#' → logprob: -15.125151634216309
    10. '```' → logprob: -15.625151634216309

Token 526: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017969197360798717
    2. ' =' → logprob: -6.626796722412109
    3. '=' → logprob: -7.876796722412109
    4. ' s' → logprob: -10.37679672241211
    5. 't' → logprob: -10.50179672241211
    6. '=s' → logprob: -11.00179672241211
    7. '(s' → logprob: -11.62679672241211
    8. '```' → logprob: -12.87679672241211
    9. ',' → logprob: -13.87679672241211
    10. '#' → logprob: -14.37679672241211

Token 527: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005201471503823996
    2. ' s' → logprob: -7.6255202293396
    3. 'n' → logprob: -11.500519752502441
    4. 't' → logprob: -11.875519752502441
    5. '(s' → logprob: -12.125519752502441
    6. ''s' → logprob: -12.625519752502441
    7. ''' → logprob: -14.000519752502441
    8. '`s' → logprob: -14.250519752502441
    9. '```' → logprob: -14.500519752502441
    10. '"' → logprob: -14.625519752502441

Token 528: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8096088767051697
    2. 't' → logprob: -1.0596089363098145
    3. 's' → logprob: -1.6846089363098145
    4. ' =' → logprob: -4.0596089363098145
    5. '
' → logprob: -6.0596089363098145
    6. '[n' → logprob: -6.9346089363098145
    7. '=
' → logprob: -7.1846089363098145
    8. '[len' → logprob: -8.059608459472656
    9. '[' → logprob: -8.309608459472656
    10. 'n' → logprob: -8.684608459472656

Token 529: ' (' (ID: 350)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.16682326793670654
    2. '=' → logprob: -2.666823387145996
    3. ' =' → logprob: -2.791823387145996
    4. 's' → logprob: -3.791823387145996
    5. '=s' → logprob: -9.416823387145996
    6. '
' → logprob: -9.916823387145996
    7. '=t' → logprob: -9.916823387145996
    8. '=
' → logprob: -10.166823387145996
    9. ' t' → logprob: -10.291823387145996
    10. '```' → logprob: -10.791823387145996

Token 530: 'du' (ID: 698)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6510202288627625
    2. 's' → logprob: -0.9010202288627625
    3. ')' → logprob: -3.4010202884674072
    4. 'len' → logprob: -3.7760202884674072
    5. 't' → logprob: -4.901020050048828
    6. ' n' → logprob: -6.276020050048828
    7. ' s' → logprob: -6.526020050048828
    8. ')
' → logprob: -6.776020050048828
    9. ':' → logprob: -7.026020050048828
    10. '[n' → logprob: -7.151020050048828

Token 531: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07167685031890869
    2. ' n' → logprob: -3.321676731109619
    3. 'len' → logprob: -3.446676731109619
    4. ' len' → logprob: -6.821676731109619
    5. '(len' → logprob: -9.571677207946777
    6. '(n' → logprob: -10.696677207946777
    7. 's' → logprob: -11.196677207946777
    8. ' (' → logprob: -12.196677207946777
    9. ' ' → logprob: -12.446677207946777
    10. 'length' → logprob: -12.571677207946777

Token 532: '-i' (ID: 18499)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00015264409012161195
    2. ' //' → logprob: -8.875152587890625
    3. 'n' → logprob: -11.500152587890625
    4. '#' → logprob: -13.875152587890625
    5. '```' → logprob: -14.500152587890625
    6. '
' → logprob: -14.625152587890625
    7. '[n' → logprob: -15.750152587890625
    8. 's' → logprob: -15.875152587890625
    9. ')' → logprob: -16.250152587890625
    10. ' n' → logprob: -16.375152587890625

Token 533: 'ème' (ID: 9767)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2819584906101227
    2. 'n' → logprob: -1.4069584608078003
    3. 'nt' → logprob: -7.65695858001709
    4. ' //' → logprob: -8.65695858001709
    5. ')' → logprob: -9.40695858001709
    6. 'nd' → logprob: -10.90695858001709
    7. '#' → logprob: -11.28195858001709
    8. '(n' → logprob: -11.78195858001709
    9. '```' → logprob: -11.90695858001709
    10. ' n' → logprob: -12.15695858001709

Token 534: ' caractère' (ID: 80509)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24054421484470367
    2. 'n' → logprob: -2.365544319152832
    3. 'index' → logprob: -2.865544319152832
    4. ':' → logprob: -4.240544319152832
    5. ' )' → logprob: -4.615544319152832
    6. '//' → logprob: -4.740544319152832
    7. 's' → logprob: -4.990544319152832
    8. ' index' → logprob: -5.240544319152832
    9. ' caractère' → logprob: -5.365544319152832
    10. 'au' → logprob: -5.990544319152832

Token 535: ' à' (ID: 1221)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.7404980659484863
    2. ')' → logprob: -0.9904980659484863
    3. 'n' → logprob: -2.4904980659484863
    4. ':' → logprob: -3.6154980659484863
    5. 's' → logprob: -4.240498065948486
    6. ':n' → logprob: -4.365498065948486
    7. ':)' → logprob: -4.990498065948486
    8. '#' → logprob: -5.990498065948486
    9. ' //' → logprob: -6.490498065948486
    10. ' )' → logprob: -7.490498065948486

Token 536: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6776353120803833
    2. 'n' → logprob: -1.3026353120803833
    3. 'la' → logprob: -1.9276353120803833
    4. ' la' → logprob: -3.0526351928710938
    5. ')' → logprob: -4.677635192871094
    6. 'the' → logprob: -5.302635192871094
    7. ' len' → logprob: -5.427635192871094
    8. 's' → logprob: -5.927635192871094
    9. ' n' → logprob: -6.302635192871094
    10. 'l' → logprob: -6.427635192871094

Token 537: ' fin' (ID: 2131)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.28339487314224243
    2. 'n' → logprob: -1.5333948135375977
    3. 'fin' → logprob: -3.7833948135375977
    4. 'end' → logprob: -6.283394813537598
    5. 's' → logprob: -6.783394813537598
    6. ')' → logprob: -6.908394813537598
    7. '
' → logprob: -7.533394813537598
    8. '}' → logprob: -7.658394813537598
    9. 'a' → logprob: -7.658394813537598
    10. ' len' → logprob: -8.033394813537598

Token 538: '),' (ID: 936)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.07635553181171417
    2. ')' → logprob: -3.326355457305908
    3. '[' → logprob: -3.576355457305908
    4. '[i' → logprob: -5.701355457305908
    5. 'n' → logprob: -6.076355457305908
    6. 's' → logprob: -6.326355457305908
    7. ',' → logprob: -7.576355457305908
    8. '[s' → logprob: -7.826355457305908
    9. '[t' → logprob: -8.201355934143066
    10. 't' → logprob: -8.701355934143066

Token 539: ' invers' (ID: 38721)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5099344253540039
    2. 't' → logprob: -1.384934425354004
    3. 'n' → logprob: -2.634934425354004
    4. ' s' → logprob: -3.259934425354004
    5. ' =' → logprob: -4.634934425354004
    6. ' t' → logprob: -4.884934425354004
    7. ' n' → logprob: -5.134934425354004
    8. '[' → logprob: -5.384934425354004
    9. '=' → logprob: -5.634934425354004
    10. '#' → logprob: -6.009934425354004

Token 540: 'ée' (ID: 2894)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17862890660762787
    2. '[::-' → logprob: -2.678628921508789
    3. 't' → logprob: -3.803628921508789
    4. '=' → logprob: -4.303628921508789
    5. 'e' → logprob: -4.303628921508789
    6. '[' → logprob: -4.303628921508789
    7. 'd' → logprob: -5.178628921508789
    8. ' s' → logprob: -5.178628921508789
    9. '_' → logprob: -5.428628921508789
    10. '(s' → logprob: -5.928628921508789

Token 541: '
' (ID: 198)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -6.623244553338736e-05
    2. '
' → logprob: -10.625065803527832
    3. 's' → logprob: -11.000065803527832
    4. '[::-' → logprob: -11.250065803527832
    5. '```' → logprob: -11.875065803527832
    6. ' t' → logprob: -13.625065803527832
    7. ' =' → logprob: -13.750065803527832
    8. '[' → logprob: -14.250065803527832
    9. '=' → logprob: -14.500065803527832
    10. '`t' → logprob: -15.000065803527832

Token 542: '#' (ID: 2)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.2200749754119897e-06
    2. '
' → logprob: -13.750001907348633
    3. ' t' → logprob: -14.500001907348633
    4. 's' → logprob: -14.750001907348633
    5. '```' → logprob: -15.625001907348633
    6. '[::-' → logprob: -17.125001907348633
    7. 'n' → logprob: -17.500001907348633
    8. '#' → logprob: -17.500001907348633
    9. '[' → logprob: -18.125001907348633
    10. '`t' → logprob: -18.125001907348633

Token 543: ' s' (ID: 265)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -4.842555426876061e-06
    2. ' t' → logprob: -12.500004768371582
    3. 's' → logprob: -14.250004768371582
    4. 'n' → logprob: -15.250004768371582
    5. '#' → logprob: -16.2500057220459
    6. '```' → logprob: -16.7500057220459
    7. '
' → logprob: -16.8750057220459
    8. 'reverse' → logprob: -17.6250057220459
    9. 'for' → logprob: -17.8750057220459
    10. '`t' → logprob: -17.8750057220459

Token 544: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.013849414885044098
    2. '[' → logprob: -4.763849258422852
    3. '[::-' → logprob: -6.138849258422852
    4. '[-' → logprob: -6.888849258422852
    5. '[t' → logprob: -7.638849258422852
    6. 't' → logprob: -7.763849258422852
    7. '[len' → logprob: -8.013849258422852
    8. '=' → logprob: -8.638849258422852
    9. ' =' → logprob: -8.888849258422852
    10. '[int' → logprob: -9.263849258422852

Token 545: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.06453549861907959
    2. ':' → logprob: -2.939535617828369
    3. '//' → logprob: -4.689535617828369
    4. ' :]' → logprob: -8.689535140991211
    5. '::' → logprob: -9.439535140991211
    6. '::-' → logprob: -10.564535140991211
    7. ':].' → logprob: -10.564535140991211
    8. ':]
' → logprob: -10.564535140991211
    9. ' //' → logprob: -11.189535140991211
    10. ']' → logprob: -11.189535140991211

Token 546: ' signifie' (ID: 81149)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0006445261533372104
    2. '[' → logprob: -7.500644683837891
    3. '[n' → logprob: -10.12564468383789
    4. ' [' → logprob: -10.75064468383789
    5. '[:]' → logprob: -11.37564468383789
    6. 's' → logprob: -11.75064468383789
    7. '[s' → logprob: -12.62564468383789
    8. '[:' → logprob: -13.62564468383789
    9. ')[' → logprob: -14.00064468383789
    10. 't' → logprob: -14.00064468383789

Token 547: ' :' (ID: 712)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11584972590208054
    2. ' s' → logprob: -2.240849733352661
    3. '""' → logprob: -6.240849494934082
    4. '[::-' → logprob: -7.115849494934082
    5. ' ""' → logprob: -9.365849494934082
    6. '"' → logprob: -9.865849494934082
    7. ' ' → logprob: -10.615849494934082
    8. '"s' → logprob: -10.990849494934082
    9. '[' → logprob: -11.240849494934082
    10. '''' → logprob: -11.365849494934082

Token 548: ' tous' (ID: 10688)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02364489622414112
    2. ' s' → logprob: -3.7736449241638184
    3. '""' → logprob: -8.64864444732666
    4. '[::-' → logprob: -8.64864444732666
    5. ' ' → logprob: -11.39864444732666
    6. '"' → logprob: -12.14864444732666
    7. '"s' → logprob: -12.27364444732666
    8. '''' → logprob: -12.27364444732666
    9. '	s' → logprob: -12.64864444732666
    10. ' ""' → logprob: -13.14864444732666

Token 549: ' les' (ID: 1341)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.2142401486635208
    2. 's' → logprob: -1.9642401933670044
    3. '[len' → logprob: -3.839240074157715
    4. '(n' → logprob: -4.464240074157715
    5. '[s' → logprob: -4.839240074157715
    6. '[' → logprob: -5.589240074157715
    7. '(s' → logprob: -5.839240074157715
    8. '(len' → logprob: -6.839240074157715
    9. 'len' → logprob: -6.964240074157715
    10. '[::-' → logprob: -7.464240074157715

Token 550: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.12395714223384857
    2. ' caractères' → logprob: -2.2489571571350098
    3. 'n' → logprob: -5.87395715713501
    4. ' caract' → logprob: -5.99895715713501
    5. ' caracteres' → logprob: -6.49895715713501
    6. 's' → logprob: -6.87395715713501
    7. '[::-' → logprob: -7.37395715713501
    8. 'characters' → logprob: -7.37395715713501
    9. ' car' → logprob: -7.87395715713501
    10. '[' → logprob: -8.248956680297852

Token 551: ' de' (ID: 334)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.5679543018341064
    2. '[n' → logprob: -1.0679543018341064
    3. '[' → logprob: -2.4429543018341064
    4. '[:]' → logprob: -7.192954063415527
    5. '[s' → logprob: -7.317954063415527
    6. ' [' → logprob: -7.567954063415527
    7. 's' → logprob: -8.442954063415527
    8. '[:' → logprob: -8.692954063415527
    9. '[len' → logprob: -8.817954063415527
    10. '[i' → logprob: -10.192954063415527

Token 552: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10385613888502121
    2. ' s' → logprob: -2.353856086730957
    3. ' n' → logprob: -6.103856086730957
    4. 'n' → logprob: -6.603856086730957
    5. ' ' → logprob: -10.603856086730957
    6. ' la' → logprob: -11.853856086730957
    7. ']' → logprob: -11.853856086730957
    8. ' ' → logprob: -13.103856086730957
    9. 'len' → logprob: -13.603856086730957
    10. '(s' → logprob: -13.728856086730957

Token 553: ' à' (ID: 1221)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.6709243655204773
    2. '[n' → logprob: -0.9209243655204773
    3. '[' → logprob: -2.420924425125122
    4. '[:' → logprob: -7.420924186706543
    5. ' [' → logprob: -7.670924186706543
    6. '[:]' → logprob: -8.045924186706543
    7. '[len' → logprob: -9.295924186706543
    8. '[s' → logprob: -9.670924186706543
    9. '[N' → logprob: -9.795924186706543
    10. '[-' → logprob: -9.920924186706543

Token 554: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.10327141731977463
    2. 'part' → logprob: -3.103271484375
    3. 'l' → logprob: -3.228271484375
    4. 'n' → logprob: -5.228271484375
    5. 'la' → logprob: -6.478271484375
    6. 'len' → logprob: -6.478271484375
    7. '[n' → logprob: -6.728271484375
    8. ' l' → logprob: -7.103271484375
    9. 'index' → logprob: -7.603271484375
    10. 's' → logprob: -7.603271484375

Token 555: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10856004059314728
    2. '[n' → logprob: -2.358560085296631
    3. ' n' → logprob: -4.858560085296631
    4. '(n' → logprob: -8.483559608459473
    5. 's' → logprob: -9.358559608459473
    6. 'l' → logprob: -9.858559608459473
    7. ' de' → logprob: -10.108559608459473
    8. 'de' → logprob: -10.358559608459473
    9. ',n' → logprob: -10.733559608459473
    10. '[' → logprob: -11.233559608459473

Token 556: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007403584662824869
    2. 'l' → logprob: -5.382403373718262
    3. ' n' → logprob: -6.257403373718262
    4. 'index' → logprob: -7.382403373718262
    5. 's' → logprob: -9.257403373718262
    6. 'la' → logprob: -10.382403373718262
    7. 'indice' → logprob: -10.507403373718262
    8. ' index' → logprob: -10.882403373718262
    9. '[n' → logprob: -11.257403373718262
    10. ' l' → logprob: -11.382403373718262

Token 557: ''ind' (ID: 82245)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001547479536384344
    2. '[n' → logprob: -6.751547336578369
    3. ' n' → logprob: -9.001547813415527
    4. ':n' → logprob: -9.126547813415527
    5. '[' → logprob: -10.126547813415527
    6. ']' → logprob: -10.626547813415527
    7. ':' → logprob: -10.626547813415527
    8. '_n' → logprob: -11.501547813415527
    9. 'nd' → logprob: -12.001547813415527
    10. '(n' → logprob: -12.001547813415527

Token 558: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.002590169431641698
    2. 'e' → logprob: -6.377590179443359
    3. 'ice' → logprob: -7.127590179443359
    4. 'n' → logprob: -9.75259017944336
    5. 'é' → logprob: -11.75259017944336
    6. 'x' → logprob: -12.25259017944336
    7. 'exe' → logprob: -12.50259017944336
    8. 'ce' → logprob: -13.50259017944336
    9. 'i' → logprob: -13.50259017944336
    10. 'es' → logprob: -13.62759017944336

Token 559: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019381542224436998
    2. ' n' → logprob: -6.251938343048096
    3. '(n' → logprob: -12.001937866210938
    4. '[n' → logprob: -12.876937866210938
    5. '
' → logprob: -14.876937866210938
    6. '```' → logprob: -16.376937866210938
    7. '_n' → logprob: -16.626937866210938
    8. '   ' → logprob: -16.876937866210938
    9. ':n' → logprob: -17.126937866210938
    10. ',n' → logprob: -17.126937866210938

Token 560: ' (' (ID: 350)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.012623244896531105
    2. '[' → logprob: -5.262623310089111
    3. '[n' → logprob: -5.262623310089111
    4. '[:]' → logprob: -7.012623310089111
    5. 't' → logprob: -7.637623310089111
    6. 's' → logprob: -8.137622833251953
    7. '#' → logprob: -8.512622833251953
    8. '[:' → logprob: -9.387622833251953
    9. '[t' → logprob: -10.262622833251953
    10. '+' → logprob: -10.387622833251953

Token 561: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45298054814338684
    2. '[::-' → logprob: -1.4529805183410645
    3. ')[' → logprob: -2.2029805183410645
    4. ' )' → logprob: -5.5779805183410645
    5. ':' → logprob: -5.8279805183410645
    6. '[n' → logprob: -5.9529805183410645
    7. 'n' → logprob: -6.3279805183410645
    8. ':)' → logprob: -6.4529805183410645
    9. '][' → logprob: -6.5779805183410645
    10. '])' → logprob: -6.7029805183410645

Token 562: '-based' (ID: 8235)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0695452019572258
    2. ':' → logprob: -2.819545269012451
    3. ' :]' → logprob: -4.944545269012451
    4. ':].' → logprob: -8.944544792175293
    5. ' :' → logprob: -9.319544792175293
    6. ':],' → logprob: -9.569544792175293
    7. ':n' → logprob: -9.944544792175293
    8. ']' → logprob: -10.694544792175293
    9. ':]
' → logprob: -11.069544792175293
    10. '+' → logprob: -11.319544792175293

Token 563: '),' (ID: 936)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -1.2882847785949707
    2. ')' → logprob: -1.4132847785949707
    3. '][' → logprob: -1.5382847785949707
    4. ']' → logprob: -2.1632847785949707
    5. ')[' → logprob: -2.7882847785949707
    6. '])' → logprob: -3.1632847785949707
    7. '[n' → logprob: -4.288284778594971
    8. 's' → logprob: -4.413284778594971
    9. ':' → logprob: -4.913284778594971
    10. '[' → logprob: -5.788284778594971

Token 564: ' jusqu' (ID: 21961)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.45457759499549866
    2. 's' → logprob: -1.0795775651931763
    3. ' s' → logprob: -3.704577684402466
    4. '""' → logprob: -7.829577445983887
    5. ' [' → logprob: -8.579577445983887
    6. '[' → logprob: -8.829577445983887
    7. 't' → logprob: -10.079577445983887
    8. '[s' → logprob: -10.454577445983887
    9. 'n' → logprob: -10.704577445983887
    10. '[n' → logprob: -10.829577445983887

Token 565: ''à' (ID: 33688)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05935458093881607
    2. '[:]' → logprob: -3.309354543685913
    3. ':n' → logprob: -5.184354782104492
    4. 'n' → logprob: -5.559354782104492
    5. 's' → logprob: -5.684354782104492
    6. '[n' → logprob: -5.934354782104492
    7. '=' → logprob: -6.684354782104492
    8. '[' → logprob: -7.184354782104492
    9. '(n' → logprob: -7.184354782104492
    10. 'len' → logprob: -7.559354782104492

Token 566: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1314178854227066
    2. 'None' → logprob: -2.131417989730835
    3. ' None' → logprob: -5.506417751312256
    4. 'la' → logprob: -8.256418228149414
    5. ' len' → logprob: -9.381418228149414
    6. 'the' → logprob: -10.381418228149414
    7. ' la' → logprob: -11.131418228149414
    8. 'end' → logprob: -12.006418228149414
    9. '(None' → logprob: -12.756418228149414
    10. '```' → logprob: -12.881418228149414

Token 567: ' fin' (ID: 2131)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.09039871394634247
    2. 'None' → logprob: -2.5903987884521484
    3. 'end' → logprob: -4.590398788452148
    4. ' None' → logprob: -6.715398788452148
    5. ' len' → logprob: -9.965398788452148
    6. 'fin' → logprob: -11.090398788452148
    7. 'none' → logprob: -12.215398788452148
    8. 'length' → logprob: -12.465398788452148
    9. ' end' → logprob: -12.590398788452148
    10. '[len' → logprob: -13.590398788452148

Token 568: '
' (ID: 198)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.001574971480295062
    2. '[' → logprob: -7.376574993133545
    3. '[:]' → logprob: -8.001574516296387
    4. 't' → logprob: -8.001574516296387
    5. 's' → logprob: -9.001574516296387
    6. '[n' → logprob: -10.126574516296387
    7. ' [' → logprob: -10.376574516296387
    8. '[:' → logprob: -10.626574516296387
    9. '.reverse' → logprob: -11.751574516296387
    10. '#' → logprob: -12.001574516296387

Token 569: '#' (ID: 2)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005603004829026759
    2. '[::-' → logprob: -8.250560760498047
    3. 's' → logprob: -8.375560760498047
    4. ' t' → logprob: -9.875560760498047
    5. 'reverse' → logprob: -12.000560760498047
    6. '#' → logprob: -12.250560760498047
    7. '```' → logprob: -13.500560760498047
    8. ' s' → logprob: -14.250560760498047
    9. '""' → logprob: -14.375560760498047
    10. ' =' → logprob: -14.625560760498047

Token 570: ' [' (ID: 723)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0031934010330587626
    2. ' t' → logprob: -6.253193378448486
    3. '""' → logprob: -7.378193378448486
    4. 's' → logprob: -8.128193855285645
    5. '[::-' → logprob: -8.503193855285645
    6. '"' → logprob: -10.253193855285645
    7. ' s' → logprob: -10.628193855285645
    8. '#' → logprob: -11.253193855285645
    9. 'reverse' → logprob: -11.503193855285645
    10. ' ""' → logprob: -12.003193855285645

Token 571: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.0033762650564312935
    2. '[::-' → logprob: -6.378376483917236
    3. ':' → logprob: -6.628376483917236
    4. '-' → logprob: -9.003376007080078
    5. '::' → logprob: -9.128376007080078
    6. ':]' → logprob: -10.503376007080078
    7. '<' → logprob: -10.753376007080078
    8. 's' → logprob: -11.503376007080078
    9. ' :' → logprob: -11.628376007080078
    10. ']' → logprob: -11.753376007080078

Token 572: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16025348007678986
    2. '1' → logprob: -1.9102535247802734
    3. ']' → logprob: -11.160253524780273
    4. ' -' → logprob: -11.410253524780273
    5. ' ' → logprob: -13.660253524780273
    6. '−' → logprob: -14.160253524780273
    7. '::-' → logprob: -15.035253524780273
    8. '```' → logprob: -15.160253524780273
    9. 's' → logprob: -15.660253524780273
    10. '#' → logprob: -16.035253524780273

Token 573: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.4034345187828876e-05
    2. 's' → logprob: -11.37502384185791
    3. ' ]' → logprob: -11.50002384185791
    4. ')' → logprob: -14.37502384185791
    5. ']
' → logprob: -14.62502384185791
    6. ' s' → logprob: -15.37502384185791
    7. 't' → logprob: -15.50002384185791
    8. '])' → logprob: -15.62502384185791
    9. '#' → logprob: -16.000024795532227
    10. ']

' → logprob: -16.250024795532227

Token 574: ' signifie' (ID: 81149)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5072881579399109
    2. 's' → logprob: -1.5072882175445557
    3. ' =' → logprob: -2.3822882175445557
    4. '[::-' → logprob: -2.8822882175445557
    5. '=' → logprob: -4.507287979125977
    6. '(s' → logprob: -5.132287979125977
    7. '(t' → logprob: -6.007287979125977
    8. ' s' → logprob: -6.257287979125977
    9. '(' → logprob: -6.257287979125977
    10. ' t' → logprob: -6.507287979125977

Token 575: ' :' (ID: 712)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11341997236013412
    2. ' s' → logprob: -3.113420009613037
    3. 'lambda' → logprob: -4.113420009613037
    4. '[::-' → logprob: -4.113420009613037
    5. 't' → logprob: -5.113420009613037
    6. 're' → logprob: -5.238420009613037
    7. ' lambda' → logprob: -5.363420009613037
    8. 'reverse' → logprob: -5.488420009613037
    9. '"' → logprob: -6.238420009613037
    10. '"s' → logprob: -6.613420009613037

Token 576: ' invers' (ID: 38721)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1483474224805832
    2. 'reverse' → logprob: -2.8983473777770996
    3. 't' → logprob: -3.7733473777770996
    4. '[::-' → logprob: -3.8983473777770996
    5. 're' → logprob: -4.0233473777771
    6. ' s' → logprob: -5.0233473777771
    7. 'lambda' → logprob: -5.2733473777771
    8. 'n' → logprob: -5.8983473777771
    9. ' reverse' → logprob: -6.3983473777771
    10. ' lambda' → logprob: -6.7733473777771

Token 577: 'er' (ID: 259)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20176520943641663
    2. ']' → logprob: -2.201765298843384
    3. 'e' → logprob: -3.326765298843384
    4. ' s' → logprob: -4.576765060424805
    5. 'n' → logprob: -4.951765060424805
    6. 't' → logprob: -5.576765060424805
    7. '=s' → logprob: -5.576765060424805
    8. '=' → logprob: -6.076765060424805
    9. 'er' → logprob: -6.076765060424805
    10. '1' → logprob: -6.576765060424805

Token 578: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02903454378247261
    2. ' s' → logprob: -4.279034614562988
    3. '(s' → logprob: -4.404034614562988
    4. ' (' → logprob: -6.904034614562988
    5. 't' → logprob: -7.029034614562988
    6. ']' → logprob: -7.904034614562988
    7. '(' → logprob: -8.904034614562988
    8. '[::-' → logprob: -10.279034614562988
    9. '(t' → logprob: -10.654034614562988
    10. ')' → logprob: -10.904034614562988

Token 579: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.5437596440315247
    2. 's' → logprob: -0.9187596440315247
    3. ' chaîne' → logprob: -4.293759822845459
    4. 'string' → logprob: -5.543759822845459
    5. 'cha' → logprob: -6.293759822845459
    6. ' chaine' → logprob: -7.793759822845459
    7. ' s' → logprob: -8.0437593460083
    8. 'chain' → logprob: -8.9187593460083
    9. ' string' → logprob: -10.5437593460083
    10. 'sequence' → logprob: -10.5437593460083

Token 580: ' résult' (ID: 31657)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0016617353539913893
    2. ' =' → logprob: -7.251661777496338
    3. ' t' → logprob: -7.876661777496338
    4. 's' → logprob: -8.37666130065918
    5. '[::-' → logprob: -8.37666130065918
    6. '=' → logprob: -9.25166130065918
    7. ' s' → logprob: -12.50166130065918
    8. '```' → logprob: -13.00166130065918
    9. '
' → logprob: -13.37666130065918
    10. ',' → logprob: -13.50166130065918

Token 581: 'ante' (ID: 2116)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6698194146156311
    2. ']' → logprob: -0.9198194146156311
    3. '[::-' → logprob: -2.9198193550109863
    4. 'e' → logprob: -3.6698193550109863
    5. 'de' → logprob: -5.169819355010986
    6. 'n' → logprob: -6.419819355010986
    7. '][' → logprob: -7.669819355010986
    8. '[' → logprob: -7.794819355010986
    9. 't' → logprob: -8.294819831848145
    10. ' s' → logprob: -8.419819831848145

Token 582: '
' (ID: 198)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0002198676229454577
    2. '[::-' → logprob: -9.62522029876709
    3. '
' → logprob: -10.12522029876709
    4. ' t' → logprob: -10.12522029876709
    5. ' =' → logprob: -10.37522029876709
    6. 's' → logprob: -11.37522029876709
    7. '<|end|>' → logprob: -12.12522029876709
    8. ' +' → logprob: -12.75022029876709
    9. '+' → logprob: -12.75022029876709
    10. '=' → logprob: -12.75022029876709

Token 583: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.9385402993066236e-05
    2. '#' → logprob: -11.625019073486328
    3. ' t' → logprob: -12.250019073486328
    4. 's' → logprob: -12.625019073486328
    5. '```' → logprob: -14.125019073486328
    6. '[::-' → logprob: -14.250019073486328
    7. '
' → logprob: -14.750019073486328
    8. 'if' → logprob: -15.750019073486328
    9. 'reverse' → logprob: -16.000019073486328
    10. 'n' → logprob: -16.000019073486328

Token 584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17981164157390594
    2. '=' → logprob: -1.8048115968704224
    3. 's' → logprob: -10.179811477661133
    4. '[' → logprob: -11.304811477661133
    5. 't' → logprob: -12.054811477661133
    6. ' ' → logprob: -13.054811477661133
    7. '=s' → logprob: -13.679811477661133
    8. ')' → logprob: -13.929811477661133
    9. ' +=' → logprob: -14.179811477661133
    10. '[:]' → logprob: -14.179811477661133

Token 585: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02975071594119072
    2. ' s' → logprob: -3.5297508239746094
    3. '(s' → logprob: -16.15475082397461
    4. '"s' → logprob: -17.15475082397461
    5. '`s' → logprob: -17.27975082397461
    6. ''s' → logprob: -17.27975082397461
    7. '	s' → logprob: -17.52975082397461
    8. '_s' → logprob: -18.40475082397461
    9. ' ' → logprob: -18.65475082397461
    10. ' ' → logprob: -19.40475082397461

Token 586: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0001266613689949736
    2. '[' → logprob: -9.125126838684082
    3. '[::-' → logprob: -12.250126838684082
    4. '[:' → logprob: -12.375126838684082
    5. '[len' → logprob: -12.375126838684082
    6. ' [' → logprob: -13.750126838684082
    7. '[t' → logprob: -14.125126838684082
    8. 'n' → logprob: -14.750126838684082
    9. '[N' → logprob: -14.750126838684082
    10. '[
' → logprob: -15.125126838684082

Token 587: ':' (ID: 25)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.38745394349098206
    2. ':' → logprob: -1.1374539136886597
    3. ' :]' → logprob: -8.01245403289795
    4. '::' → logprob: -9.01245403289795
    5. '::-' → logprob: -10.13745403289795
    6. ':].' → logprob: -10.26245403289795
    7. ':]
' → logprob: -10.88745403289795
    8. ' :' → logprob: -11.01245403289795
    9. '[::-' → logprob: -12.01245403289795
    10. ':],' → logprob: -12.13745403289795

Token 588: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010407903464511037
    2. ']' → logprob: -7.001040935516357
    3. ' ][' → logprob: -9.7510404586792
    4. '[::-' → logprob: -10.0010404586792
    5. '][:' → logprob: -10.8760404586792
    6. ':' → logprob: -13.5010404586792
    7. '])[' → logprob: -13.7510404586792
    8. ')][' → logprob: -14.0010404586792
    9. ']][' → logprob: -14.8760404586792
    10. ')[' → logprob: -15.0010404586792

Token 589: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.0032039734069257975
    2. ':' → logprob: -6.253203868865967
    3. '::' → logprob: -7.003203868865967
    4. '[::-' → logprob: -8.128204345703125
    5. ' :' → logprob: -10.003204345703125
    6. ']' → logprob: -11.503204345703125
    7. ' ::' → logprob: -12.003204345703125
    8. 'None' → logprob: -13.003204345703125
    9. ':]' → logprob: -13.253204345703125
    10. '-' → logprob: -14.128204345703125

Token 590: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10021303594112396
    2. '-' → logprob: -2.350213050842285
    3. ' -' → logprob: -12.975213050842285
    4. ']' → logprob: -13.475213050842285
    5. ' ' → logprob: -14.100213050842285
    6. '::-' → logprob: -14.225213050842285
    7. 'None' → logprob: -14.350213050842285
    8. '−' → logprob: -15.350213050842285
    9. '])' → logprob: -15.850213050842285
    10. '```' → logprob: -16.10021209716797

Token 591: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.873571692267433e-05
    2. ']' → logprob: -9.625068664550781
    3. ' )' → logprob: -13.500068664550781
    4. '])' → logprob: -14.875068664550781
    5. '）' → logprob: -15.250068664550781
    6. ')]' → logprob: -15.625068664550781
    7. '))' → logprob: -16.25006866455078
    8. '}' → logprob: -16.37506866455078
    9. ')#' → logprob: -16.62506866455078
    10. ')
' → logprob: -17.00006866455078

Token 592: '#' (ID: 2)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9306210279464722
    2. 'for' → logprob: -1.6806210279464722
    3. 'result' → logprob: -1.9306210279464722
    4. 'print' → logprob: -2.1806211471557617
    5. '<|end|>' → logprob: -2.4306211471557617
    6. 'counter' → logprob: -3.9306211471557617
    7. 'n' → logprob: -4.430621147155762
    8. '#' → logprob: -4.680621147155762
    9. 'total' → logprob: -4.805621147155762
    10. 'counts' → logprob: -5.180621147155762

Token 593: ' Initial' (ID: 9209)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.854554295539856
    2. 'ans' → logprob: -1.354554295539856
    3. 'result' → logprob: -1.604554295539856
    4. 'res' → logprob: -3.2295541763305664
    5. 'for' → logprob: -3.6045541763305664
    6. 'count' → logprob: -3.9795541763305664
    7. 'm' → logprob: -3.9795541763305664
    8. 'print' → logprob: -5.604554176330566
    9. 'total' → logprob: -5.854554176330566
    10. 'hash' → logprob: -6.854554176330566

Token 594: 'iser' (ID: 7466)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.15965238213539124
    2. 'i' → logprob: -3.0346524715423584
    3. 'e' → logprob: -3.5346524715423584
    4. '#' → logprob: -4.284652233123779
    5. 't' → logprob: -4.284652233123779
    6. 'izer' → logprob: -4.409652233123779
    7. 'ized' → logprob: -5.034652233123779
    8. 'iser' → logprob: -5.659652233123779
    9. 'izing' → logprob: -5.659652233123779
    10. 'hash' → logprob: -5.784652233123779

Token 595: ' un' (ID: 537)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9467787146568298
    2. 'ans' → logprob: -1.5717787742614746
    3. 'answer' → logprob: -1.5717787742614746
    4. 'count' → logprob: -2.0717787742614746
    5. 'res' → logprob: -2.6967787742614746
    6. 'counter' → logprob: -6.821778774261475
    7. 'max' → logprob: -6.946778774261475
    8. 'total' → logprob: -7.071778774261475
    9. 'cnt' → logprob: -8.321778297424316
    10. 'results' → logprob: -11.571778297424316

Token 596: ' compteur' (ID: 163344)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5312286615371704
    2. 'count' → logprob: -1.5312286615371704
    3. 'counter' → logprob: -1.9062286615371704
    4. 'answer' → logprob: -4.281228542327881
    5. 'res' → logprob: -4.906228542327881
    6. 'd' → logprob: -5.031228542327881
    7. 'default' → logprob: -5.281228542327881
    8. 'dict' → logprob: -5.406228542327881
    9. 'ans' → logprob: -5.656228542327881
    10. 'total' → logprob: -6.531228542327881

Token 597: ' '' (ID: 461)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.028759146109223366
    2. 'counter' → logprob: -4.278759002685547
    3. 'result' → logprob: -5.153759002685547
    4. 'ans' → logprob: -5.528759002685547
    5. 'answer' → logprob: -5.528759002685547
    6. 'cnt' → logprob: -7.778759002685547
    7. 'res' → logprob: -8.403759002685547
    8. 'comp' → logprob: -9.778759002685547
    9. 'total' → logprob: -9.903759002685547
    10. 'c' → logprob: -11.903759002685547

Token 598: 'cnt' (ID: 33160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6113381385803223
    2. 'result' → logprob: -1.2363381385803223
    3. 'answer' → logprob: -2.7363381385803223
    4. 'ans' → logprob: -2.7363381385803223
    5. 'res' → logprob: -3.6113381385803223
    6. 'counter' → logprob: -4.986338138580322
    7. 'total' → logprob: -6.486338138580322
    8. 'cnt' → logprob: -6.736338138580322
    9. 'comp' → logprob: -7.486338138580322
    10. 'c' → logprob: -10.736337661743164

Token 599: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693072855472565
    2. '=' → logprob: -2.1269307136535645
    3. ' ' → logprob: -14.376931190490723
    4. ')' → logprob: -14.501931190490723
    5. ',' → logprob: -14.751931190490723
    6. '}' → logprob: -15.126931190490723
    7. '  ' → logprob: -16.001930236816406
    8. 's' → logprob: -16.126930236816406
    9. 't' → logprob: -16.251930236816406
    10. '={}' → logprob: -16.501930236816406

Token 600: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889419049024582
    2. ' =' → logprob: -2.5788941383361816
    3. 'cnt' → logprob: -12.32889461517334
    4. ',' → logprob: -18.203893661499023
    5. '0' → logprob: -18.703893661499023
    6. ' cnt' → logprob: -18.828893661499023
    7. '=int' → logprob: -19.203893661499023
    8. '=
' → logprob: -19.328893661499023
    9. '=count' → logprob: -19.328893661499023
    10. ' ' → logprob: -19.578893661499023

Token 601: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '=' → logprob: -19.750003814697266
    4. '1' → logprob: -21.000003814697266
    5. '```' → logprob: -21.250003814697266
    6. '۰' → logprob: -21.625003814697266
    7. ' ' → logprob: -22.250003814697266
    8. '   ' → logprob: -22.375003814697266
    9. 'int' → logprob: -22.500003814697266
    10. '00' → logprob: -22.875003814697266

Token 602: '.' (ID: 13)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.0
    3. ' cnt' → logprob: -16.25
    4. 'count' → logprob: -18.375
    5. '
' → logprob: -19.125
    6. 'counter' → logprob: -19.875
    7. '	cnt' → logprob: -20.25
    8. 'c' → logprob: -21.0
    9. '(cnt' → logprob: -21.25
    10. '
' → logprob: -21.75

Token 603: ' Il' (ID: 5329)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: 0.0
    2. ' cnt' → logprob: -17.625
    3. 'count' → logprob: -17.75
    4. 'counter' → logprob: -18.5
    5. '
' → logprob: -19.25
    6. '	cnt' → logprob: -19.75
    7. '0' → logprob: -19.875
    8. 'c' → logprob: -21.0
    9. '
' → logprob: -21.375
    10. '(cnt' → logprob: -21.875

Token 604: ' va' (ID: 3423)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889761030673981
    2. ' =' → logprob: -2.578897714614868
    3. ' ' → logprob: -12.203897476196289
    4. ',' → logprob: -13.828897476196289
    5. 'cnt' → logprob: -14.328897476196289
    6. '=
' → logprob: -14.828897476196289
    7. '.' → logprob: -15.453897476196289
    8. ')' → logprob: -15.953897476196289
    9. '+=' → logprob: -16.07889747619629
    10. '
' → logprob: -16.20389747619629

Token 605: ' compter' (ID: 81694)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03915071859955788
    2. '0' → logprob: -3.6641507148742676
    3. 'cnt' → logprob: -4.914150714874268
    4. ' =' → logprob: -5.289150714874268
    5. ' cnt' → logprob: -8.539151191711426
    6. '+=' → logprob: -8.914151191711426
    7. ' ' → logprob: -10.664151191711426
    8. 'count' → logprob: -12.164151191711426
    9. 'comp' → logprob: -12.539151191711426
    10. '   ' → logprob: -12.664151191711426

Token 606: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3136873245239258
    2. 'cnt' → logprob: -1.3136873245239258
    3. '(cnt' → logprob: -8.688687324523926
    4. '=' → logprob: -9.188687324523926
    5. '(' → logprob: -9.563687324523926
    6. ' cnt' → logprob: -10.063687324523926
    7. ' ' → logprob: -11.313687324523926
    8. 'count' → logprob: -11.813687324523926
    9. 'c' → logprob: -12.813687324523926
    10. '#' → logprob: -12.938687324523926

Token 607: ' résultat' (ID: 62556)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09729520976543427
    2. 'nombre' → logprob: -2.5972952842712402
    3. 'total' → logprob: -4.59729528427124
    4. 'result' → logprob: -5.72229528427124
    5. 'cnt' → logprob: -6.09729528427124
    6. '=' → logprob: -7.09729528427124
    7. ' nombre' → logprob: -7.59729528427124
    8. 's' → logprob: -8.597294807434082
    9. 'sum' → logprob: -9.222294807434082
    10. 'val' → logprob: -9.222294807434082

Token 608: ' final' (ID: 1721)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.4855663721391466e-05
    2. '
' → logprob: -11.500015258789062
    3. ' cnt' → logprob: -13.250015258789062
    4. '=' → logprob: -13.750015258789062
    5. 'count' → logprob: -14.250015258789062
    6. '0' → logprob: -14.500015258789062
    7. ' =' → logprob: -14.625015258789062
    8. 'counter' → logprob: -16.000015258789062
    9. '(cnt' → logprob: -16.125015258789062
    10. '
' → logprob: -17.125015258789062

Token 609: '.
' (ID: 558)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00016146517009474337
    2. '
' → logprob: -8.750161170959473
    3. ' cnt' → logprob: -13.250161170959473
    4. 'count' → logprob: -14.250161170959473
    5. '
' → logprob: -14.750161170959473
    6. 'counter' → logprob: -17.50016212463379
    7. '

' → logprob: -17.75016212463379
    8. '	cnt' → logprob: -17.87516212463379
    9. '\
' → logprob: -18.25016212463379
    10. ' =' → logprob: -18.37516212463379

Token 610: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.9361264946837764e-07
    2. ' cnt' → logprob: -16.125
    3. '	cnt' → logprob: -19.25
    4. 'count' → logprob: -19.625
    5. 'c' → logprob: -19.875
    6. '(cnt' → logprob: -21.375
    7. 'counter' → logprob: -21.75
    8. '_cnt' → logprob: -21.875
    9. 'ct' → logprob: -22.5
    10. 'cn' → logprob: -22.625

Token 611: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022463142871857
    2. '=' → logprob: -1.9102246761322021
    3. ' ' → logprob: -14.785224914550781
    4. ' ' → logprob: -17.78522491455078
    5. ' +=' → logprob: -17.78522491455078
    6. '＝' → logprob: -17.91022491455078
    7. ')' → logprob: -18.28522491455078
    8. '  ' → logprob: -18.53522491455078
    9. ',' → logprob: -18.91022491455078
    10. '=int' → logprob: -19.41022491455078

Token 612: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. ' ' → logprob: -18.375335693359375
    4. '   ' → logprob: -18.875335693359375
    5. 'hash' → logprob: -19.125335693359375
    6. '۰' → logprob: -20.250335693359375
    7. '  ' → logprob: -20.312835693359375
    8. '1' → logprob: -20.375335693359375
    9. '=' → logprob: -20.437835693359375
    10. '```' → logprob: -20.437835693359375

Token 613: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '000' → logprob: -20.0
    4. '۰' → logprob: -20.125
    5. '０' → logprob: -20.625
    6. '1' → logprob: -20.75
    7. 'int' → logprob: -20.75
    8. '00' → logprob: -20.875
    9. '   ' → logprob: -21.3125
    10. '```' → logprob: -21.4375

Token 614: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018217725679278374
    2. '
' → logprob: -4.14321756362915
    3. ' for' → logprob: -6.14321756362915
    4. '<|end|>' → logprob: -10.768218040466309
    5. '#' → logprob: -12.268218040466309
    6. '

' → logprob: -13.143218040466309
    7. '  
' → logprob: -13.143218040466309
    8. ' 
' → logprob: -14.143218040466309
    9. '
' → logprob: -14.268218040466309
    10. '    
' → logprob: -14.393218040466309

Token 615: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015097891446202993
    2. '#' → logprob: -8.875150680541992
    3. ' for' → logprob: -11.875150680541992
    4. 'hash' → logprob: -13.250150680541992
    5. 'from' → logprob: -13.750150680541992
    6. ')' → logprob: -15.250150680541992
    7. 'n' → logprob: -15.750150680541992
    8. 'counter' → logprob: -15.875150680541992
    9. 'mask' → logprob: -16.625150680541992
    10. 'count' → logprob: -16.750150680541992

Token 616: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4855663721391466e-05
    2. 'm' → logprob: -12.125015258789062
    3. 'n' → logprob: -12.500015258789062
    4. 'hash' → logprob: -13.125015258789062
    5. '#' → logprob: -13.375015258789062
    6. 'half' → logprob: -14.125015258789062
    7. 'length' → logprob: -15.000015258789062
    8. ' for' → logprob: -15.125015258789062
    9. 'bit' → logprob: -15.500015258789062
    10. 'limit' → logprob: -15.625015258789062

Token 617: ' rép' (ID: 64372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.73183855926618e-05
    2. '=' → logprob: -9.875077247619629
    3. ' for' → logprob: -10.750077247619629
    4. '
' → logprob: -13.500077247619629
    5. ')' → logprob: -14.000077247619629
    6. 'f' → logprob: -14.125077247619629
    7. ' =' → logprob: -14.625077247619629
    8. 'or' → logprob: -14.875077247619629
    9. '#' → logprob: -15.000077247619629
    10. 'n' → logprob: -16.500078201293945

Token 618: 'ète' (ID: 28789)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.8601335287094116
    2. 'r' → logprob: -1.2351335287094116
    3. 'for' → logprob: -3.110133647918701
    4. 'ète' → logprob: -3.235133647918701
    5. 'er' → logprob: -3.360133647918701
    6. 't' → logprob: -3.360133647918701
    7. 'éter' → logprob: -3.485133647918701
    8. 'arse' → logprob: -3.610133647918701
    9. 'range' → logprob: -4.235133647918701
    10. 'arte' → logprob: -4.360133647918701

Token 619: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008623439818620682
    2. ' for' → logprob: -4.7586236000061035
    3. '(' → logprob: -12.508623123168945
    4. 'range' → logprob: -13.508623123168945
    5. 'n' → logprob: -13.758623123168945
    6. ')' → logprob: -14.258623123168945
    7. 'bit' → logprob: -14.508623123168945
    8. 'or' → logprob: -14.883623123168945
    9. '
' → logprob: -15.133623123168945
    10. '   ' → logprob: -15.258623123168945

Token 620: ' même' (ID: 9679)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022192837670445442
    2. 'range' → logprob: -3.89719295501709
    3. 'n' → logprob: -6.77219295501709
    4. '1' → logprob: -8.14719295501709
    5. '(' → logprob: -9.39719295501709
    6. '(n' → logprob: -10.02219295501709
    7. ' for' → logprob: -10.02219295501709
    8. '
' → logprob: -11.14719295501709
    9. ' range' → logprob: -11.39719295501709
    10. '(range' → logprob: -12.39719295501709

Token 621: ' méthode' (ID: 71490)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0023775463923811913
    2. ' for' → logprob: -6.127377510070801
    3. '
' → logprob: -9.0023775100708
    4. 'range' → logprob: -10.1273775100708
    5. '```' → logprob: -11.5023775100708
    6. 'n' → logprob: -11.8773775100708
    7. '#' → logprob: -12.2523775100708
    8. '...' → logprob: -13.6273775100708
    9. ' range' → logprob: -13.8773775100708
    10. ')' → logprob: -14.3773775100708

Token 622: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0031817557755857706
    2. ' for' → logprob: -5.7531819343566895
    3. '#' → logprob: -13.003181457519531
    4. '
' → logprob: -14.128181457519531
    5. 'n' → logprob: -15.503181457519531
    6. 'from' → logprob: -16.00318145751953
    7. '=' → logprob: -16.00318145751953
    8. 'pour' → logprob: -16.12818145751953
    9. '   ' → logprob: -16.37818145751953
    10. '```' → logprob: -16.62818145751953

Token 623: ''' (ID: 6)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027600524947047234
    2. 'range' → logprob: -3.7776005268096924
    3. 'e' → logprob: -5.777600288391113
    4. 'ef' → logprob: -8.277600288391113
    5. ' for' → logprob: -8.527600288391113
    6. 'or' → logprob: -8.652600288391113
    7. '#' → logprob: -8.777600288391113
    8. '`' → logprob: -9.027600288391113
    9. '```' → logprob: -9.402600288391113
    10. '(range' → logprob: -9.527600288391113

Token 624: 'én' (ID: 3289)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007683650124818087
    2. 'range' → logprob: -4.882683753967285
    3. 'bou' → logprob: -11.007683753967285
    4. 'code' → logprob: -11.132683753967285
    5. 'com' → logprob: -11.757683753967285
    6. 'count' → logprob: -12.007683753967285
    7. 'bit' → logprob: -12.132683753967285
    8. '#' → logprob: -12.257683753967285
    9. 'loop' → logprob: -12.507683753967285
    10. ' for' → logprob: -13.132683753967285

Token 625: 'um' (ID: 394)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6822395324707031
    2. 'for' → logprob: -0.8072395324707031
    3. 'age' → logprob: -3.182239532470703
    4. 'ange' → logprob: -5.932239532470703
    5. 'rage' → logprob: -6.432239532470703
    6. 'orme' → logprob: -8.307239532470703
    7. 'a' → logprob: -8.682239532470703
    8. 'ération' → logprob: -8.807239532470703
    9. 'tage' → logprob: -8.807239532470703
    10. 'ur' → logprob: -9.057239532470703

Token 626: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.003971897065639496
    2. 'er' → logprob: -6.253972053527832
    3. 'ère' → logprob: -6.628972053527832
    4. 'èr' → logprob: -8.003972053527832
    5. 'ration' → logprob: -9.503972053527832
    6. 'érer' → logprob: -9.628972053527832
    7. 'ére' → logprob: -9.753972053527832
    8. 'ér' → logprob: -9.878972053527832
    9. 'érance' → logprob: -10.503972053527832
    10. 'e' → logprob: -10.628972053527832

Token 627: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001963247312232852
    2. ' for' → logprob: -6.251963138580322
    3. '(' → logprob: -11.25196361541748
    4. 'range' → logprob: -11.37696361541748
    5. '   ' → logprob: -12.37696361541748
    6. '#' → logprob: -13.75196361541748
    7. '(range' → logprob: -13.75196361541748
    8. 'from' → logprob: -14.00196361541748
    9. ' range' → logprob: -14.25196361541748
    10. 'pour' → logprob: -15.12696361541748

Token 628: ' toutes' (ID: 17502)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04957083985209465
    2. 'for' → logprob: -3.2995707988739014
    3. 'bit' → logprob: -4.5495710372924805
    4. ' range' → logprob: -7.4245710372924805
    5. 'bits' → logprob: -8.42457103729248
    6. 'ranges' → logprob: -10.79957103729248
    7. 'i' → logprob: -11.04957103729248
    8. ' for' → logprob: -11.92457103729248
    9. '0' → logprob: -12.29957103729248
    10. '(range' → logprob: -12.42457103729248

Token 629: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013502653688192368
    2. ' for' → logprob: -4.888502597808838
    3. 'range' → logprob: -5.388502597808838
    4. '(' → logprob: -6.888502597808838
    5. ' range' → logprob: -9.013503074645996
    6. '(range' → logprob: -9.763503074645996
    7. 'bit' → logprob: -10.138503074645996
    8. '#' → logprob: -10.638503074645996
    9. '   ' → logprob: -11.263503074645996
    10. '1' → logprob: -11.513503074645996

Token 630: ' partitions' (ID: 89097)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.059192460030317307
    2. '(' → logprob: -3.559192419052124
    3. 'for' → logprob: -3.809192419052124
    4. '(range' → logprob: -5.809192657470703
    5. '1' → logprob: -7.184192657470703
    6. 'ranges' → logprob: -7.309192657470703
    7. '0' → logprob: -7.684192657470703
    8. 'bit' → logprob: -7.934192657470703
    9. '2' → logprob: -8.059192657470703
    10. 'bits' → logprob: -8.559192657470703

Token 631: ' possibles' (ID: 97753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022359013091772795
    2. ' for' → logprob: -6.3772358894348145
    3. 'pour' → logprob: -7.6272358894348145
    4. '(' → logprob: -11.377236366271973
    5. 'du' → logprob: -11.627236366271973
    6. '   ' → logprob: -12.002236366271973
    7. ' pour' → logprob: -12.002236366271973
    8. 'des' → logprob: -12.502236366271973
    9. 'de' → logprob: -12.877236366271973
    10. 'of' → logprob: -13.502236366271973

Token 632: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000340945553034544
    2. ' for' → logprob: -8.000341415405273
    3. 'pour' → logprob: -12.375341415405273
    4. '#' → logprob: -14.500341415405273
    5. '
' → logprob: -15.250341415405273
    6. '   ' → logprob: -16.375341415405273
    7. 'of' → logprob: -16.375341415405273
    8. '```' → logprob: -16.500341415405273
    9. 'from' → logprob: -16.625341415405273
    10. ' pour' → logprob: -17.500341415405273

Token 633: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5883718132972717
    2. 'bit' → logprob: -0.8383718132972717
    3. ' range' → logprob: -5.463371753692627
    4. ' bit' → logprob: -5.713371753692627
    5. 'i' → logprob: -5.838371753692627
    6. 'for' → logprob: -6.838371753692627
    7. 'n' → logprob: -8.088372230529785
    8. ' i' → logprob: -9.213372230529785
    9. '_' → logprob: -9.338372230529785
    10. 'r' → logprob: -9.463372230529785

Token 634: ' chaîne' (ID: 89288)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5300002098083496
    2. '(' → logprob: -1.4050002098083496
    3. 'n' → logprob: -2.4050002098083496
    4. 'range' → logprob: -3.0300002098083496
    5. 't' → logprob: -4.40500020980835
    6. 'for' → logprob: -4.53000020980835
    7. '(n' → logprob: -6.40500020980835
    8. 'len' → logprob: -6.53000020980835
    9. ' (' → logprob: -8.280000686645508
    10. ' range' → logprob: -8.405000686645508

Token 635: ' invers' (ID: 38721)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019320894498378038
    2. ' for' → logprob: -6.751932144165039
    3. 'range' → logprob: -7.876932144165039
    4. 'n' → logprob: -8.626932144165039
    5. '(' → logprob: -9.376932144165039
    6. '
' → logprob: -10.126932144165039
    7. 't' → logprob: -11.251932144165039
    8. '```' → logprob: -11.376932144165039
    9. '#' → logprob: -11.876932144165039
    10. '(n' → logprob: -11.876932144165039

Token 636: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.07440077513456345
    2. 'for' → logprob: -3.1994006633758545
    3. 'e' → logprob: -3.6994006633758545
    4. 'ee' → logprob: -6.199400901794434
    5. 'é' → logprob: -6.574400901794434
    6. 't' → logprob: -6.574400901794434
    7. ' for' → logprob: -7.824400901794434
    8. '   ' → logprob: -8.574400901794434
    9. 'er' → logprob: -8.949400901794434
    10. 'ed' → logprob: -9.074400901794434

Token 637: ' '' (ID: 461)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003389190824236721
    2. ' for' → logprob: -8.000338554382324
    3. 'pour' → logprob: -14.125338554382324
    4. '(' → logprob: -14.250338554382324
    5. 'm' → logprob: -14.625338554382324
    6. 'n' → logprob: -15.250338554382324
    7. '
' → logprob: -15.375338554382324
    8. '#' → logprob: -15.500338554382324
    9. '```' → logprob: -15.625338554382324
    10. 'range' → logprob: -15.875338554382324

Token 638: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00012451570364646614
    2. ' t' → logprob: -9.00012493133545
    3. 'for' → logprob: -15.25012493133545
    4. 'range' → logprob: -15.25012493133545
    5. 's' → logprob: -15.75012493133545
    6. '`t' → logprob: -15.87512493133545
    7. '```' → logprob: -16.875123977661133
    8. ' ' → logprob: -17.000123977661133
    9. '(t' → logprob: -17.000123977661133
    10. '`' → logprob: -17.250123977661133

Token 639: ''
' (ID: 2207)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.64970643306151e-05
    2. ' for' → logprob: -9.375086784362793
    3. '
' → logprob: -14.125086784362793
    4. '#' → logprob: -15.000086784362793
    5. ':' → logprob: -15.750086784362793
    6. ')' → logprob: -16.375085830688477
    7. '(' → logprob: -16.375085830688477
    8. ',' → logprob: -16.500085830688477
    9. 't' → logprob: -17.125085830688477
    10. 'n' → logprob: -17.125085830688477

Token 640: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. ' for' → logprob: -14.500000953674316
    3. '
' → logprob: -16.5
    4. 'from' → logprob: -20.125
    5. '```' → logprob: -20.375
    6. 'fo' → logprob: -20.75
    7. 'f' → logprob: -21.625
    8. '    
' → logprob: -21.75
    9. '   ' → logprob: -22.0
    10. '#' → logprob: -22.125

Token 641: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.38696587085723877
    2. ' bit' → logprob: -1.1369658708572388
    3. '(bit' → logprob: -11.13696575164795
    4. 'bitr' → logprob: -11.26196575164795
    5. 't' → logprob: -11.38696575164795
    6. 'bt' → logprob: -11.76196575164795
    7. 'b' → logprob: -12.13696575164795
    8. ' bitt' → logprob: -12.38696575164795
    9. 'rev' → logprob: -12.63696575164795
    10. ' t' → logprob: -12.76196575164795

Token 642: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007607100997120142
    2. 'in' → logprob: -4.8826069831848145
    3. ' ' → logprob: -14.882607460021973
    4. 'n' → logprob: -16.132606506347656
    5. '   ' → logprob: -16.382606506347656
    6. 'In' → logprob: -16.632606506347656
    7. '```' → logprob: -16.882606506347656
    8. '1' → logprob: -17.007606506347656
    9. 'range' → logprob: -17.132606506347656
    10. '  ' → logprob: -17.507606506347656

Token 643: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868785798549652
    2. ' range' → logprob: -1.1368786096572876
    3. '(range' → logprob: -12.261878967285156
    4. '   ' → logprob: -13.636878967285156
    5. ' ' → logprob: -14.136878967285156
    6. '(' → logprob: -14.636878967285156
    7. 'r' → logprob: -15.636878967285156
    8. '  ' → logprob: -16.636878967285156
    9. '	range' → logprob: -17.011878967285156
    10. '0' → logprob: -18.261878967285156

Token 644: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.813969957875088e-05
    2. '1' → logprob: -9.875067710876465
    3. '((' → logprob: -11.250067710876465
    4. ' (' → logprob: -12.625067710876465
    5. '(len' → logprob: -15.750067710876465
    6. '(
' → logprob: -17.12506866455078
    7. ' ' → logprob: -17.37506866455078
    8. '   ' → logprob: -17.62506866455078
    9. '```' → logprob: -18.50006866455078
    10. ')' → logprob: -18.50006866455078

Token 645: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038264848990365863
    2. '(' → logprob: -7.875382423400879
    3. ' ' → logprob: -13.250382423400879
    4. 'len' → logprob: -15.250382423400879
    5. '   ' → logprob: -15.750382423400879
    6. '(len' → logprob: -16.000383377075195
    7. ')' → logprob: -16.125383377075195
    8. ' (' → logprob: -17.250383377075195
    9. '0' → logprob: -17.375383377075195
    10. '[' → logprob: -18.250383377075195

Token 646: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.03116169013082981
    2. '<<' → logprob: -3.6561617851257324
    3. '(' → logprob: -5.406161785125732
    4. ' (' → logprob: -8.156161308288574
    5. '(n' → logprob: -10.531161308288574
    6. '(len' → logprob: -11.406161308288574
    7. '   ' → logprob: -11.656161308288574
    8. '<<(' → logprob: -12.031161308288574
    9. ')' → logprob: -12.156161308288574
    10. '1' → logprob: -12.156161308288574

Token 647: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1474500149488449
    2. '(n' → logprob: -2.7724499702453613
    3. 'len' → logprob: -2.8974499702453613
    4. '(len' → logprob: -4.397449970245361
    5. ' n' → logprob: -5.647449970245361
    6. ' (' → logprob: -6.147449970245361
    7. ' len' → logprob: -7.022449970245361
    8. '(' → logprob: -7.772449970245361
    9. ' ' → logprob: -10.14745044708252
    10. '((' → logprob: -10.77245044708252

Token 648: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31367966532707214
    2. '):
' → logprob: -1.3136796951293945
    3. '):
' → logprob: -8.063679695129395
    4. ':' → logprob: -9.563679695129395
    5. '   ' → logprob: -11.063679695129395
    6. ')' → logprob: -11.188679695129395
    7. ':
' → logprob: -13.188679695129395
    8. ' ):' → logprob: -14.188679695129395
    9. ' ):
' → logprob: -15.313679695129395
    10. '):

' → logprob: -15.813679695129395

Token 649: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.547789674485102e-05
    2. '   ' → logprob: -11.125035285949707
    3. 'red' → logprob: -11.250035285949707
    4. ' red' → logprob: -11.875035285949707
    5. ' ' → logprob: -14.750035285949707
    6. '   ' → logprob: -16.375036239624023
    7. '  ' → logprob: -16.500036239624023
    8. '       ' → logprob: -16.500036239624023
    9. '    ' → logprob: -17.625036239624023
    10. ' ' → logprob: -18.000036239624023

Token 650: ' red' (ID: 3592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1799008846282959
    2. 'red' (adapté à ' red') → logprob: -1.804900884628296
    3. ' red' → logprob: -9.554901123046875
    4. 'r' → logprob: -10.054901123046875
    5. '       ' → logprob: -11.304901123046875
    6. '   ' → logprob: -11.554901123046875
    7. 'blue' → logprob: -11.804901123046875
    8. 'reverse' → logprob: -12.304901123046875
    9. 're' → logprob: -13.429901123046875
    10. '  ' → logprob: -14.304901123046875

Token 651: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0629313588142395
    2. '=' → logprob: -2.8129312992095947
    3. 't' → logprob: -7.687931537628174
    4. '2' → logprob: -7.937931537628174
    5. '=""' → logprob: -9.437931060791016
    6. ',' → logprob: -10.937931060791016
    7. '_' → logprob: -10.937931060791016
    8. '_t' → logprob: -11.812931060791016
    9. ' ' → logprob: -11.937931060791016
    10. 's' → logprob: -12.687931060791016

Token 652: ' ""' (ID: 3216)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -7.719917630311102e-05
    2. '''' → logprob: -9.875077247619629
    3. ' ""' → logprob: -11.000077247619629
    4. '"' → logprob: -11.625077247619629
    5. '"":' → logprob: -17.625076293945312
    6. '""""' → logprob: -18.500076293945312
    7. '"""' → logprob: -18.625076293945312
    8. '"",' → logprob: -18.750076293945312
    9. ''' → logprob: -19.250076293945312
    10. '("")' → logprob: -19.250076293945312

Token 653: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.654272735118866
    2. '  ' → logprob: -1.2792727947235107
    3. '<|end|>' → logprob: -1.7792727947235107
    4. ' ' → logprob: -3.6542727947235107
    5. '	' → logprob: -5.529272556304932
    6. '    ' → logprob: -7.154272556304932
    7. '<|end|>' → logprob: -8.02927303314209
    8. '	for' → logprob: -8.52927303314209
    9. ' ' → logprob: -8.65427303314209
    10. '[' → logprob: -8.65427303314209

Token 654: ' #' (ID: 1069)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  ' → logprob: -1.1697331666946411
    2. ' ' → logprob: -1.5447331666946411
    3. 'blue' → logprob: -1.5447331666946411
    4. '   ' → logprob: -1.9197331666946411
    5. ' blue' → logprob: -3.4197330474853516
    6. 'red' → logprob: -3.5447330474853516
    7. 'for' → logprob: -3.7947330474853516
    8. '<|end|>' → logprob: -4.419733047485352
    9. '
' → logprob: -4.919733047485352
    10. '#' (adapté à ' #') → logprob: -5.794733047485352

Token 655: ' Nouvelle' (ID: 113786)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.16463136672973633
    2. '""' → logprob: -2.1646313667297363
    3. ' blue' → logprob: -3.6646313667297363
    4. '"' → logprob: -5.414631366729736
    5. 'for' → logprob: -5.664631366729736
    6. ' ""' → logprob: -6.914631366729736
    7. ' ' → logprob: -7.039631366729736
    8. 'red' → logprob: -7.664631366729736
    9. '  ' → logprob: -8.039630889892578
    10. ' for' → logprob: -8.164630889892578

Token 656: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.3494989573955536
    2. ' chaîne' → logprob: -1.349498987197876
    3. 'cha' → logprob: -3.474498987197876
    4. ' chaine' → logprob: -6.099498748779297
    5. 'for' → logprob: -6.849498748779297
    6. 'red' → logprob: -7.724498748779297
    7. '   ' → logprob: -7.849498748779297
    8. 'chain' → logprob: -8.974498748779297
    9. 'string' → logprob: -9.349498748779297
    10. 'ligne' → logprob: -9.724498748779297

Token 657: ' vide' (ID: 21835)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.05223189294338226
    2. '<|end|>' → logprob: -4.302231788635254
    3. ' =' → logprob: -4.927231788635254
    4. '   ' → logprob: -4.927231788635254
    5. 'for' → logprob: -5.302231788635254
    6. '=' → logprob: -5.427231788635254
    7. ' red' → logprob: -5.427231788635254
    8. ' ' → logprob: -6.177231788635254
    9. '    
' → logprob: -6.427231788635254
    10. '  ' → logprob: -6.552231788635254

Token 658: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 659: ' '' (ID: 461)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.03988387808203697
    2. ' red' → logprob: -3.289883852005005
    3. 'blue' → logprob: -6.914884090423584
    4. 't' → logprob: -7.289884090423584
    5. ' blue' → logprob: -9.039883613586426
    6. ' t' → logprob: -11.039883613586426
    7. ' bleu' → logprob: -12.164883613586426
    8. ' ' → logprob: -12.414883613586426
    9. 'for' → logprob: -12.414883613586426
    10. '""' → logprob: -12.789883613586426

Token 660: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0005530327325686812
    2. 't' → logprob: -7.750553131103516
    3. 'blue' → logprob: -9.250553131103516
    4. 'r' → logprob: -11.375553131103516
    5. ' red' → logprob: -11.375553131103516
    6. 's' → logprob: -14.125553131103516
    7. 're' → logprob: -14.375553131103516
    8. 'redi' → logprob: -14.750553131103516
    9. 'bit' → logprob: -15.875553131103516
    10. 'redo' → logprob: -15.875553131103516

Token 661: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.59541255235672
    2. '<|end|>' → logprob: -0.84541255235672
    3. '  ' → logprob: -5.345412731170654
    4. '
' → logprob: -5.720412731170654
    5. '    
' → logprob: -5.720412731170654
    6. ')' → logprob: -5.845412731170654
    7. '<|end|>' → logprob: -5.970412731170654
    8. '    ' → logprob: -7.220412731170654
    9. ' ' → logprob: -7.220412731170654
    10. 'for' → logprob: -7.970412731170654

Token 662: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011729047633707523
    2. 'blue' → logprob: -4.5117292404174805
    3. ' blue' → logprob: -7.3867292404174805
    4. '	' → logprob: -10.76172924041748
    5. '  ' → logprob: -11.38672924041748
    6. '    ' → logprob: -12.01172924041748
    7. 'red' → logprob: -12.13672924041748
    8. ' ' → logprob: -12.51172924041748
    9. '   ' → logprob: -12.76172924041748
    10. '    
' → logprob: -13.26172924041748

Token 663: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.000205566844670102
    2. ' blue' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.625205993652344
    4. ' ' → logprob: -14.500205993652344
    5. 'for' → logprob: -16.125205993652344
    6. '```' → logprob: -16.625205993652344
    7. '_blue' → logprob: -17.625205993652344
    8. '.blue' → logprob: -17.875205993652344
    9. ' bleu' → logprob: -17.875205993652344
    10. '  ' → logprob: -18.000205993652344

Token 664: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197217106819153
    2. '=' → logprob: -2.811972141265869
    3. '=""' → logprob: -13.186972618103027
    4. ' +=' → logprob: -13.686972618103027
    5. ' ' → logprob: -13.936972618103027
    6. '+=' → logprob: -14.936972618103027
    7. '  ' → logprob: -15.686972618103027
    8. ' ="' → logprob: -16.06197166442871
    9. '="' → logprob: -17.31197166442871
    10. '   ' → logprob: -17.68697166442871

Token 665: ' ""' (ID: 3216)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -1.7954958821064793e-05
    2. ' ""' → logprob: -11.250018119812012
    3. '''' → logprob: -12.500018119812012
    4. '"' → logprob: -13.625018119812012
    5. '""""' → logprob: -20.250017166137695
    6. '"":' → logprob: -20.375017166137695
    7. '("")' → logprob: -20.500017166137695
    8. '"""' → logprob: -21.000017166137695
    9. '	' → logprob: -21.500017166137695
    10. ' ' → logprob: -21.750017166137695

Token 666: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10643983632326126
    2. '    
' → logprob: -2.6064398288726807
    3. '<|end|>' → logprob: -3.8564398288726807
    4. '
' → logprob: -6.23144006729126
    5. '	
' → logprob: -6.73144006729126
    6. '  ' → logprob: -7.48144006729126
    7. '  
' → logprob: -7.48144006729126
    8. '<|end|>' → logprob: -8.106439590454102
    9. '    ' → logprob: -8.231439590454102
    10. '   
' → logprob: -8.356439590454102

Token 667: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8330751657485962
    2. '   ' → logprob: -0.9580751657485962
    3. '#' → logprob: -2.4580750465393066
    4. ' for' → logprob: -3.4580750465393066
    5. ' ' → logprob: -4.083075046539307
    6. '  ' → logprob: -4.083075046539307
    7. '	for' → logprob: -4.583075046539307
    8. '    
' → logprob: -4.833075046539307
    9. '	
' → logprob: -5.458075046539307
    10. '
' → logprob: -5.833075046539307

Token 668: ' Nouvelle' (ID: 113786)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.002980790799483657
    2. '"' → logprob: -5.877980709075928
    3. ' ""' → logprob: -9.752981185913086
    4. '"""' → logprob: -9.877981185913086
    5. 'New' → logprob: -10.002981185913086
    6. 'new' → logprob: -11.627981185913086
    7. '=""' → logprob: -12.502981185913086
    8. ' Nouvelle' → logprob: -12.502981185913086
    9. '''' → logprob: -13.502981185913086
    10. '""""' → logprob: -13.752981185913086

Token 669: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.04286409914493561
    2. ' chaîne' → logprob: -3.2928640842437744
    3. '""' → logprob: -5.9178643226623535
    4. ' chaine' → logprob: -6.6678643226623535
    5. 'string' → logprob: -7.9178643226623535
    6. 'chain' → logprob: -8.542863845825195
    7. '=""' → logprob: -8.667863845825195
    8. '"' → logprob: -10.667863845825195
    9. 'cha' → logprob: -10.667863845825195
    10. 'empty' → logprob: -11.667863845825195

Token 670: ' vide' (ID: 21835)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011558677069842815
    2. '=""' → logprob: -4.886558532714844
    3. '""' → logprob: -5.886558532714844
    4. 'empty' → logprob: -7.011558532714844
    5. ' =' → logprob: -9.011558532714844
    6. 'vide' → logprob: -9.136558532714844
    7. '=[]' → logprob: -11.511558532714844
    8. '="' → logprob: -11.886558532714844
    9. '+=' → logprob: -12.386558532714844
    10. '```' → logprob: -12.511558532714844

Token 671: ' pour' (ID: 1930)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.11123473942279816
    2. '   ' → logprob: -2.611234664916992
    3. '<|end|>' → logprob: -4.236234664916992
    4. 'for' → logprob: -4.986234664916992
    5. '
' → logprob: -6.111234664916992
    6. '  ' → logprob: -6.236234664916992
    7. '	
' → logprob: -6.486234664916992
    8. '   
' → logprob: -6.611234664916992
    9. ' for' → logprob: -7.111234664916992
    10. '  
' → logprob: -7.361234664916992

Token 672: ' '' (ID: 461)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.21710379421710968
    2. 'blue' → logprob: -1.9671038389205933
    3. '"' → logprob: -3.3421037197113037
    4. ' blue' → logprob: -4.092103958129883
    5. 'red' → logprob: -6.217103958129883
    6. ' ""' → logprob: -6.967103958129883
    7. ' red' → logprob: -8.592103958129883
    8. '"""' → logprob: -10.342103958129883
    9. '''' → logprob: -10.842103958129883
    10. ' bleu' → logprob: -10.842103958129883

Token 673: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.003277056384831667
    2. 'red' → logprob: -5.878276824951172
    3. ' blue' → logprob: -7.753276824951172
    4. 't' → logprob: -10.128276824951172
    5. ' red' → logprob: -13.753276824951172
    6. 's' → logprob: -14.128276824951172
    7. ' bleu' → logprob: -15.503276824951172
    8. '```' → logprob: -15.628276824951172
    9. ' ' → logprob: -15.753276824951172
    10. '"' → logprob: -16.128276824951172

Token 674: ''
' (ID: 2207)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.08001329749822617
    2. '   ' → logprob: -2.5800132751464844
    3. '<|end|>' → logprob: -7.705013275146484
    4. '
' → logprob: -7.955013275146484
    5. '	
' → logprob: -8.705013275146484
    6. '   
' → logprob: -9.705013275146484
    7. '    ' → logprob: -10.830013275146484
    8. '        
' → logprob: -10.955013275146484
    9. '  
' → logprob: -11.455013275146484
    10. '<|end|>' → logprob: -11.580013275146484

Token 675: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14849355816841125
    2. '    
' → logprob: -2.023493528366089
    3. 'for' → logprob: -5.273493766784668
    4. '<|end|>' → logprob: -8.523493766784668
    5. ' for' → logprob: -9.023493766784668
    6. '
' → logprob: -9.523493766784668
    7. '    ' → logprob: -9.648493766784668
    8. '        
' → logprob: -9.773493766784668
    9. '	
' → logprob: -10.148493766784668
    10. '   
' → logprob: -10.523493766784668

Token 676: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4749595820903778
    2. 'for' (adapté à ' for') → logprob: -0.9749596118927002
    3. ' for' → logprob: -7.224959373474121
    4. '    
' → logprob: -8.849959373474121
    5. '
' → logprob: -12.599959373474121
    6. '	for' → logprob: -12.724959373474121
    7. '       ' → logprob: -13.599959373474121
    8. '<|end|>' → logprob: -13.849959373474121
    9. '        
' → logprob: -14.099959373474121
    10. '```' → logprob: -14.849959373474121

Token 677: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519300878047943
    2. ' i' → logprob: -1.5019301176071167
    3. ' ' → logprob: -14.501930236816406
    4. '	i' → logprob: -15.501930236816406
    5. 'I' → logprob: -16.751930236816406
    6. ' in' → logprob: -17.001930236816406
    7. 'n' → logprob: -17.626930236816406
    8. '(i' → logprob: -17.626930236816406
    9. '_i' → logprob: -18.251930236816406
    10. ' ' → logprob: -18.376930236816406

Token 678: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869100511074066
    2. 'in' → logprob: -1.136910080909729
    3. '(' → logprob: -11.261910438537598
    4. '(n' → logprob: -11.636910438537598
    5. 'range' → logprob: -11.636910438537598
    6. ' ' → logprob: -12.761910438537598
    7. '(range' → logprob: -13.136910438537598
    8. 'n' → logprob: -13.386910438537598
    9. ' range' → logprob: -14.136910438537598
    10. '   ' → logprob: -14.761910438537598

Token 679: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006715370807796717
    2. ' range' → logprob: -5.006715297698975
    3. '(range' → logprob: -18.631715774536133
    4. ' ' → logprob: -20.131715774536133
    5. 'in' → logprob: -20.381715774536133
    6. '	range' → logprob: -20.756715774536133
    7. 'n' → logprob: -21.506715774536133
    8. '   ' → logprob: -21.881715774536133
    9. ' in' → logprob: -22.006715774536133
    10. '  ' → logprob: -22.881715774536133

Token 680: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.301394023466855e-05
    2. '(range' → logprob: -10.375062942504883
    3. 'range' → logprob: -11.000062942504883
    4. 'n' → logprob: -11.750062942504883
    5. '(' → logprob: -12.000062942504883
    6. ' range' → logprob: -13.875062942504883
    7. ' (' → logprob: -17.875062942504883
    8. '[n' → logprob: -18.625062942504883
    9. '<n' → logprob: -19.000062942504883
    10. ' n' → logprob: -19.375062942504883

Token 681: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07714665681123734
    2. ':' → logprob: -3.0771467685699463
    3. '):
' → logprob: -3.5771467685699463
    4. ':
' → logprob: -8.952146530151367
    5. '   ' → logprob: -10.077146530151367
    6. '):
' → logprob: -12.452146530151367
    7. '():' → logprob: -12.452146530151367
    8. '}:' → logprob: -12.577146530151367
    9. '       ' → logprob: -12.827146530151367
    10. ']:' → logprob: -13.327146530151367

Token 682: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007688377983868122
    2. ' if' → logprob: -5.132688522338867
    3. 'if' → logprob: -6.382688522338867
    4. '   ' → logprob: -10.882688522338867
    5. '    ' → logprob: -11.632688522338867
    6. '        
' → logprob: -11.632688522338867
    7. '      ' → logprob: -12.007688522338867
    8. '#' → logprob: -12.007688522338867
    9. '           ' → logprob: -12.632688522338867
    10. ' ' → logprob: -12.882688522338867

Token 683: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48206955194473267
    2. ' if' → logprob: -0.9820695519447327
    3. '       ' → logprob: -4.857069492340088
    4. '   ' → logprob: -8.607069969177246
    5. '	if' → logprob: -13.107069969177246
    6. '    ' → logprob: -13.857069969177246
    7. ' ' → logprob: -14.232069969177246
    8. '```' → logprob: -15.357069969177246
    9. '  ' → logprob: -15.482069969177246
    10. '#' (adapté à ' #') → logprob: -15.857069969177246

Token 684: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023370448499917984
    2. ' if' → logprob: -3.7733705043792725
    3. '   ' → logprob: -9.273370742797852
    4. '       ' → logprob: -10.398370742797852
    5. ' ' → logprob: -15.398370742797852
    6. '	if' → logprob: -16.14837074279785
    7. '```' → logprob: -16.39837074279785
    8. '    ' → logprob: -16.52337074279785
    9. '  ' → logprob: -17.27337074279785
    10. '           ' → logprob: -17.39837074279785

Token 685: ' utilise' (ID: 70283)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.635715663433075
    2. 'if' → logprob: -0.760715663433075
    3. ' (' → logprob: -6.010715484619141
    4. '   ' → logprob: -7.885715484619141
    5. '(bit' → logprob: -9.38571548461914
    6. ' bit' → logprob: -9.63571548461914
    7. '       ' → logprob: -10.13571548461914
    8. '(' → logprob: -10.26071548461914
    9. ' ' → logprob: -10.88571548461914
    10. 'bit' → logprob: -11.63571548461914

Token 686: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2608325183391571
    2. '(bit' → logprob: -1.7608325481414795
    3. '(t' → logprob: -3.1358325481414795
    4. 't' → logprob: -4.6358323097229
    5. '(' → logprob: -6.1358323097229
    6. 'if' → logprob: -7.1358323097229
    7. ' if' → logprob: -7.5108323097229
    8. '(len' → logprob: -8.385832786560059
    9. '   ' → logprob: -8.760832786560059
    10. ' bit' → logprob: -9.510832786560059

Token 687: ' même' (ID: 9679)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.024795226752758026
    2. 'bit' → logprob: -4.524795055389404
    3. 't' → logprob: -4.774795055389404
    4. 'if' → logprob: -5.899795055389404
    5. '(' → logprob: -6.774795055389404
    6. ' (' → logprob: -7.524795055389404
    7. 'not' → logprob: -8.149795532226562
    8. ' bit' → logprob: -8.774795532226562
    9. 'i' → logprob: -9.274795532226562
    10. '(i' → logprob: -9.899795532226562

Token 688: ' principe' (ID: 58004)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6952700018882751
    2. '(bit' → logprob: -1.32027006149292
    3. ' if' → logprob: -1.69527006149292
    4. ' (' → logprob: -3.44527006149292
    5. 'bit' → logprob: -4.94527006149292
    6. ' bit' → logprob: -5.07027006149292
    7. ' code' → logprob: -6.07027006149292
    8. '(' → logprob: -7.32027006149292
    9. 'code' → logprob: -7.69527006149292
    10. ' logic' → logprob: -8.320269584655762

Token 689: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2936477065086365
    2. ' if' → logprob: -1.4186477661132812
    3. '           ' → logprob: -5.043647766113281
    4. 'if' → logprob: -5.418647766113281
    5. '   ' → logprob: -7.293647766113281
    6. ':
' → logprob: -8.168647766113281
    7. ':' → logprob: -8.418647766113281
    8. ' :' → logprob: -9.918647766113281
    9. '	   ' → logprob: -10.293647766113281
    10. '	if' → logprob: -10.418647766113281

Token 690: ' test' (ID: 1746)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.03738093003630638
    2. 'if' → logprob: -3.9123809337615967
    3. '(' → logprob: -4.787380695343018
    4. ' (' → logprob: -5.787380695343018
    5. 'bit' → logprob: -5.787380695343018
    6. ' if' → logprob: -7.287380695343018
    7. 't' → logprob: -7.537380695343018
    8. '((' → logprob: -7.662380695343018
    9. ' bit' → logprob: -8.912381172180176
    10. '(range' → logprob: -9.162381172180176

Token 691: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24857871234416962
    2. '       ' → logprob: -1.873578667640686
    3. 'if' → logprob: -3.3735787868499756
    4. ' (' → logprob: -4.2485785484313965
    5. '   ' → logprob: -4.4985785484313965
    6. '           ' → logprob: -5.6235785484313965
    7. '(bit' → logprob: -6.8735785484313965
    8. '(' → logprob: -7.3735785484313965
    9. '    ' → logprob: -7.6235785484313965
    10. '        ' → logprob: -8.123579025268555

Token 692: ' bit' (ID: 3546)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.007296147756278515
    2. '(' → logprob: -5.257296085357666
    3. ' (' → logprob: -6.757296085357666
    4. '((' → logprob: -7.882296085357666
    5. 'bit' → logprob: -8.632296562194824
    6. '(bits' → logprob: -8.882296562194824
    7. 'if' → logprob: -9.382296562194824
    8. '(t' → logprob: -10.382296562194824
    9. 't' → logprob: -10.757296562194824
    10. '(b' → logprob: -11.132296562194824

Token 693: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12026357650756836
    2. ' if' → logprob: -2.2452635765075684
    3. 'if' → logprob: -4.995263576507568
    4. ':' → logprob: -8.370264053344727
    5. '           ' → logprob: -8.870264053344727
    6. '   ' → logprob: -9.120264053344727
    7. ':
' → logprob: -9.620264053344727
    8. ' (' → logprob: -11.120264053344727
    9. ' =' → logprob: -11.120264053344727
    10. '=' → logprob: -11.370264053344727

Token 694: ' répart' (ID: 147636)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4357157051563263
    2. '(t' → logprob: -1.185715675354004
    3. '(bit' → logprob: -3.810715675354004
    4. '(' → logprob: -4.560715675354004
    5. 'if' → logprob: -4.685715675354004
    6. 't' → logprob: -5.560715675354004
    7. ' if' → logprob: -6.685715675354004
    8. 'bit' → logprob: -8.560715675354004
    9. '((' → logprob: -8.810715675354004
    10. ' ' → logprob: -8.935715675354004

Token 695: 'ir' (ID: 380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.015064001083374
    2. 'er' → logprob: -1.390064001083374
    3. '       ' → logprob: -1.765064001083374
    4. 'ir' → logprob: -2.640064001083374
    5. 'iter' → logprob: -3.515064001083374
    6. '(i' → logprob: -3.640064001083374
    7. 'i' → logprob: -4.265064239501953
    8. 're' → logprob: -5.015064239501953
    9. 'bit' → logprob: -5.390064239501953
    10. '(' → logprob: -5.390064239501953

Token 696: ' les' (ID: 1341)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5172905325889587
    2. 't' → logprob: -1.1422905921936035
    3. ' if' → logprob: -3.2672905921936035
    4. '   ' → logprob: -3.3922905921936035
    5. 'if' → logprob: -5.1422905921936035
    6. '(t' → logprob: -5.8922905921936035
    7. ' (' → logprob: -6.0172905921936035
    8. ' ' → logprob: -7.1422905921936035
    9. '  ' → logprob: -8.017290115356445
    10. '	t' → logprob: -8.267290115356445

Token 697: ' caractères' (ID: 183106)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00661731930449605
    2. ' t' → logprob: -5.131617546081543
    3. 'bit' → logprob: -7.881617546081543
    4. 'if' → logprob: -8.881617546081543
    5. ' bit' → logprob: -9.881617546081543
    6. 'car' → logprob: -10.881617546081543
    7. '   ' → logprob: -11.006617546081543
    8. 'char' → logprob: -11.256617546081543
    9. '(t' → logprob: -11.256617546081543
    10. ' ' → logprob: -11.506617546081543

Token 698: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03672626242041588
    2. ' if' → logprob: -3.536726236343384
    3. 'if' → logprob: -6.411726474761963
    4. ' (' → logprob: -6.661726474761963
    5. '   ' → logprob: -6.786726474761963
    6. '        ' → logprob: -7.161726474761963
    7. '(' → logprob: -7.786726474761963
    8. '    ' → logprob: -7.911726474761963
    9. '           ' → logprob: -8.786725997924805
    10. ' =' → logprob: -8.786725997924805

Token 699: ' '' (ID: 461)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008615988306701183
    2. ' t' → logprob: -4.758615970611572
    3. '(t' → logprob: -14.50861644744873
    4. '`t' → logprob: -14.75861644744873
    5. '	t' → logprob: -14.75861644744873
    6. 'range' → logprob: -15.88361644744873
    7. ' range' → logprob: -17.133615493774414
    8. ' ' → logprob: -18.258615493774414
    9. '   ' → logprob: -18.758615493774414
    10. ' т' → logprob: -19.383615493774414

Token 700: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.000217006730963476
    2. ' t' → logprob: -8.75021743774414
    3. 'bit' → logprob: -9.87521743774414
    4. ' bit' → logprob: -12.25021743774414
    5. '(t' → logprob: -14.00021743774414
    6. 'range' → logprob: -14.50021743774414
    7. 'n' → logprob: -15.25021743774414
    8. ' ' → logprob: -15.37521743774414
    9. '`t' → logprob: -15.75021743774414
    10. '	t' → logprob: -16.00021743774414

Token 701: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.677358090877533
    2. ''' → logprob: -1.5523581504821777
    3. '       ' → logprob: -2.5523581504821777
    4. '   ' → logprob: -3.0523581504821777
    5. ']' → logprob: -3.3023581504821777
    6. ')' → logprob: -3.5523581504821777
    7. '[' → logprob: -3.8023581504821777
    8. ':' → logprob: -4.677358150482178
    9. ' into' → logprob: -4.927358150482178
    10. ' in' → logprob: -5.427358150482178

Token 702: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08633265644311905
    2. ' if' → logprob: -2.7113325595855713
    3. '<|end|>' → logprob: -4.71133279800415
    4. 'if' → logprob: -6.08633279800415
    5. '<|end|>' → logprob: -6.71133279800415
    6. ':' → logprob: -7.08633279800415
    7. '   ' → logprob: -7.08633279800415
    8. ' into' → logprob: -7.21133279800415
    9. ':
' → logprob: -8.086332321166992
    10. ',' → logprob: -8.336332321166992

Token 703: ' '' (ID: 461)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13551808893680573
    2. 'range' → logprob: -3.3855180740356445
    3. 'red' → logprob: -3.7605180740356445
    4. ' t' → logprob: -3.8855180740356445
    5. ' red' → logprob: -4.2605180740356445
    6. ' range' → logprob: -4.3855180740356445
    7. 'if' → logprob: -5.1355180740356445
    8. 'bit' → logprob: -5.2605180740356445
    9. ' bit' → logprob: -5.8855180740356445
    10. '(' → logprob: -6.5105180740356445

Token 704: 'red' (ID: 1291)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2825967073440552
    2. 'red' → logprob: -1.7825967073440552
    3. 'range' → logprob: -3.4075965881347656
    4. 'bit' → logprob: -3.5325965881347656
    5. 'blue' → logprob: -5.282596588134766
    6. ' red' → logprob: -5.657596588134766
    7. 'if' → logprob: -5.907596588134766
    8. ' t' → logprob: -6.782596588134766
    9. ' range' → logprob: -7.032596588134766
    10. 'i' → logprob: -7.157596588134766

Token 705: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.45853668451309204
    2. '[i' → logprob: -1.8335366249084473
    3. '       ' → logprob: -2.7085366249084473
    4. '   ' → logprob: -2.9585366249084473
    5. ')' → logprob: -3.3335366249084473
    6. ' if' → logprob: -3.9585366249084473
    7. 'if' → logprob: -4.333536624908447
    8. ' '' → logprob: -5.208536624908447
    9. ' or' → logprob: -5.833536624908447
    10. ')'' → logprob: -6.083536624908447

Token 706: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033441316336393356
    2. ' if' → logprob: -3.5334413051605225
    3. ' =' → logprob: -6.533441543579102
    4. 'if' → logprob: -7.408441543579102
    5. ' or' → logprob: -8.158441543579102
    6. ':' → logprob: -8.408441543579102
    7. '<|end|>' → logprob: -8.533441543579102
    8. '   ' → logprob: -8.783441543579102
    9. ' and' → logprob: -8.783441543579102
    10. '=' → logprob: -8.783441543579102

Token 707: ' '' (ID: 461)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.16269801557064056
    2. ' blue' → logprob: -1.9126980304718018
    3. ''' → logprob: -6.162697792053223
    4. ' ' → logprob: -8.662697792053223
    5. ' '' → logprob: -9.537697792053223
    6. ' bleu' → logprob: -9.662697792053223
    7. 'red' → logprob: -11.037697792053223
    8. ''t' → logprob: -12.287697792053223
    9. ' red' → logprob: -12.412697792053223
    10. 't' → logprob: -12.537697792053223

Token 708: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.0013373857364058495
    2. ' blue' → logprob: -6.62633752822876
    3. ' ' → logprob: -12.626337051391602
    4. 'red' → logprob: -12.876337051391602
    5. ''' → logprob: -13.001337051391602
    6. ' bleu' → logprob: -14.501337051391602
    7. '```' → logprob: -14.626337051391602
    8. '  ' → logprob: -14.751337051391602
    9. '"' → logprob: -14.751337051391602
    10. 'ble' → logprob: -15.501337051391602

Token 709: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18202079832553864
    2. ')' → logprob: -2.682020902633667
    3. '):' → logprob: -3.057020902633667
    4. '):
' → logprob: -4.182020664215088
    5. ':' → logprob: -4.557020664215088
    6. '   ' → logprob: -4.682020664215088
    7. '```' → logprob: -5.807020664215088
    8. '':' → logprob: -6.182020664215088
    9. ''' → logprob: -6.307020664215088
    10. ' if' → logprob: -6.432020664215088

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000683126098010689
    2. ' if' → logprob: -7.500683307647705
    3. '<|end|>' → logprob: -9.875682830810547
    4. 'if' → logprob: -10.000682830810547
    5. '```' → logprob: -11.375682830810547
    6. '        
' → logprob: -11.625682830810547
    7. '   ' → logprob: -12.375682830810547
    8. '<|end|>' → logprob: -13.250682830810547
    9. '           ' → logprob: -14.375682830810547
    10. '      ' → logprob: -14.375682830810547

Token 711: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13107749819755554
    2. ' if' → logprob: -2.131077527999878
    3. '       ' → logprob: -5.506077289581299
    4. '   ' → logprob: -9.506077766418457
    5. '	if' → logprob: -13.131077766418457
    6. ' ' → logprob: -13.756077766418457
    7. '```' → logprob: -14.256077766418457
    8. '    ' → logprob: -15.131077766418457
    9. '           ' → logprob: -15.881077766418457
    10. '     ' → logprob: -16.63107681274414

Token 712: ' (' (ID: 350)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.4741651117801666
    2. ' (' → logprob: -0.9741650819778442
    3. ' ' → logprob: -10.224164962768555
    4. '(' → logprob: -10.224164962768555
    5. '(t' → logprob: -12.849164962768555
    6. '(bits' → logprob: -12.974164962768555
    7. '(Bit' → logprob: -13.099164962768555
    8. '  ' → logprob: -13.724164962768555
    9. '(not' → logprob: -13.849164962768555
    10. '   ' → logprob: -13.849164962768555

Token 713: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.031210917979478836
    2. '(bit' → logprob: -3.5312108993530273
    3. ' bit' → logprob: -6.531210899353027
    4. ' (' → logprob: -14.156210899353027
    5. '.bit' → logprob: -14.781210899353027
    6. '_bit' → logprob: -15.406210899353027
    7. ' бит' → logprob: -15.656210899353027
    8. 'bitr' → logprob: -15.781210899353027
    9. '-bit' → logprob: -15.906210899353027
    10. 'Bit' → logprob: -16.531211853027344

Token 714: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.004622372332960367
    2. '&' → logprob: -5.379622459411621
    3. ' ' → logprob: -13.879622459411621
    4. ' ' → logprob: -14.004622459411621
    5. '&nbsp' → logprob: -15.754622459411621
    6. '   ' → logprob: -16.504621505737305
    7. '＆' → logprob: -17.004621505737305
    8. ' &
' → logprob: -17.129621505737305
    9. '&amp' → logprob: -17.379621505737305
    10. '  ' → logprob: -17.629621505737305

Token 715: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4740770161151886
    2. '(' → logprob: -0.9740769863128662
    3. ' ' → logprob: -17.349077224731445
    4. '((' → logprob: -18.224077224731445
    5. ')' → logprob: -18.974077224731445
    6. ',' → logprob: -19.724077224731445
    7. '1' → logprob: -19.849077224731445
    8. '  ' → logprob: -19.974077224731445
    9. '   ' → logprob: -20.099077224731445
    10. '```' → logprob: -20.349077224731445

Token 716: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.980854959692806e-05
    2. '1' → logprob: -9.750069618225098
    3. ' (' → logprob: -11.375069618225098
    4. '[' → logprob: -18.625070571899414
    5. '   ' → logprob: -18.750070571899414
    6. ' ' → logprob: -19.500070571899414
    7. '```' → logprob: -20.625070571899414
    8. '{' → logprob: -20.750070571899414
    9. ')' → logprob: -20.750070571899414
    10. '  ' → logprob: -21.125070571899414

Token 717: ' <<' (ID: 2256)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31747376918792725
    2. '(' → logprob: -1.3174737691879272
    3. '<<' → logprob: -5.692473888397217
    4. ' <<' → logprob: -7.192473888397217
    5. '1' → logprob: -9.942473411560059
    6. ')' → logprob: -11.067473411560059
    7. '>>' → logprob: -12.442473411560059
    8. ' ' → logprob: -12.442473411560059
    9. '   ' → logprob: -13.567473411560059
    10. '```' → logprob: -13.817473411560059

Token 718: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004336493439041078
    2. ' i' → logprob: -7.750433444976807
    3. ')i' → logprob: -14.000433921813965
    4. ')' → logprob: -14.250433921813965
    5. '   ' → logprob: -14.375433921813965
    6. '(i' → logprob: -15.125433921813965
    7. '	i' → logprob: -15.500433921813965
    8. '       ' → logprob: -16.00043296813965
    9. '           ' → logprob: -16.62543296813965
    10. ' (' → logprob: -17.00043296813965

Token 719: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8325677703833207e-05
    2. '))' → logprob: -11.250028610229492
    3. ')>' → logprob: -11.375028610229492
    4. '):' → logprob: -13.375028610229492
    5. ' )' → logprob: -13.625028610229492
    6. '>)' → logprob: -14.875028610229492
    7. '):
' → logprob: -15.625028610229492
    8. '")' → logprob: -16.000028610229492
    9. ')!=' → logprob: -16.375028610229492
    10. '')' → logprob: -16.625028610229492

Token 720: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3238479793071747
    2. ')' → logprob: -1.448848009109497
    3. ' >' → logprob: -3.198848009109497
    4. ')>' → logprob: -6.948847770690918
    5. ':' → logprob: -11.073847770690918
    6. ' !=' → logprob: -12.698847770690918
    7. '==' → logprob: -12.698847770690918
    8. '">' → logprob: -12.948847770690918
    9. '!=' → logprob: -13.323847770690918
    10. ' ' → logprob: -13.948847770690918

Token 721: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067167943343520164
    2. ' ' → logprob: -5.006716728210449
    3. '   ' → logprob: -14.75671672821045
    4. '>' → logprob: -15.13171672821045
    5. '=' → logprob: -15.13171672821045
    6. ' ' → logprob: -16.006717681884766
    7. '```' → logprob: -16.506717681884766
    8. '1' → logprob: -17.256717681884766
    9. '       ' → logprob: -17.444217681884766
    10. '۰' → logprob: -17.444217681884766

Token 722: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.125015258789062
    4. '=' → logprob: -18.500015258789062
    5. 'i' → logprob: -18.875015258789062
    6. '```' → logprob: -19.437515258789062
    7. '۰' → logprob: -19.687515258789062
    8. ' ' → logprob: -20.000015258789062
    9. '  ' → logprob: -20.125015258789062
    10. '1' → logprob: -20.312515258789062

Token 723: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9418876767158508
    2. ':' → logprob: -1.066887617111206
    3. '       ' → logprob: -2.191887617111206
    4. '           ' → logprob: -2.441887617111206
    5. ' red' → logprob: -2.941887617111206
    6. '):
' → logprob: -4.691887855529785
    7. ':red' → logprob: -6.191887855529785
    8. 'red' → logprob: -6.566887855529785
    9. '(red' → logprob: -7.441887855529785
    10. '   ' → logprob: -7.816887855529785

Token 724: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6757545471191406
    2. '           ' → logprob: -0.9257545471191406
    3. 'red' → logprob: -3.0507545471191406
    4. ' red' → logprob: -3.0507545471191406
    5. '               ' → logprob: -9.42575454711914
    6. 't' → logprob: -9.92575454711914
    7. '   ' → logprob: -9.92575454711914
    8. '<|end|>' → logprob: -10.05075454711914
    9. '          ' → logprob: -11.05075454711914
    10. '	       ' → logprob: -11.30075454711914

Token 725: ' #' (ID: 1069)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0015434302622452378
    2. ' red' → logprob: -6.5015435218811035
    3. '           ' → logprob: -10.126543045043945
    4. '   ' → logprob: -14.251543045043945
    5. '       ' → logprob: -14.751543045043945
    6. '               ' → logprob: -17.001543045043945
    7. 't' → logprob: -18.001543045043945
    8. 'blue' → logprob: -18.251543045043945
    9. ' ' → logprob: -18.626543045043945
    10. '_red' → logprob: -19.251543045043945

Token 726: ' Aj' (ID: 28294)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.6978645920753479
    2. ' red' → logprob: -0.6978645920753479
    3. '           ' → logprob: -5.447864532470703
    4. 't' → logprob: -8.197864532470703
    5. '       ' → logprob: -9.822864532470703
    6. '   ' → logprob: -10.572864532470703
    7. ' t' → logprob: -11.197864532470703
    8. '               ' → logprob: -12.197864532470703
    9. '(red' → logprob: -12.322864532470703
    10. ' ' → logprob: -12.447864532470703

Token 727: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.7990387082099915
    2. 'out' → logprob: -1.2990386486053467
    3. 'outer' → logprob: -1.2990386486053467
    4. 'outez' → logprob: -5.424038887023926
    5. 'red' → logprob: -8.549038887023926
    6. 'uste' → logprob: -11.424038887023926
    7. '   ' → logprob: -11.549038887023926
    8. 'ust' → logprob: -11.674038887023926
    9. 't' → logprob: -12.174038887023926
    10. 'outes' → logprob: -12.799038887023926

Token 728: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.33619624376296997
    2. ' red' → logprob: -1.4611961841583252
    3. 't' → logprob: -2.961196184158325
    4. 'red' → logprob: -6.336196422576904
    5. ' ' → logprob: -11.836195945739746
    6. '(t' → logprob: -11.961195945739746
    7. '	t' → logprob: -12.836195945739746
    8. ' ' → logprob: -13.211195945739746
    9. '(red' → logprob: -13.586195945739746
    10. ' blue' → logprob: -13.711195945739746

Token 729: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.32427939772605896
    2. '[' → logprob: -1.3242794275283813
    3. 'red' → logprob: -4.574279308319092
    4. 'bit' → logprob: -8.19927978515625
    5. ' [' → logprob: -9.32427978515625
    6. ' red' → logprob: -9.69927978515625
    7. 'i' → logprob: -9.82427978515625
    8. '=' → logprob: -10.57427978515625
    9. '   ' → logprob: -10.94927978515625
    10. '```' → logprob: -11.69927978515625

Token 730: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00030578780570067465
    2. ')' → logprob: -8.875306129455566
    3. 'red' → logprob: -9.875306129455566
    4. '])' → logprob: -10.125306129455566
    5. 'to' → logprob: -10.625306129455566
    6. ']+=' → logprob: -11.250306129455566
    7. '[i' → logprob: -11.750306129455566
    8. ' ]' → logprob: -12.250306129455566
    9. '           ' → logprob: -12.625306129455566
    10. ']+' → logprob: -12.750306129455566

Token 731: ' à' (ID: 1221)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.6106359362602234
    2. 'red' → logprob: -0.8606359362602234
    3. '           ' → logprob: -4.485635757446289
    4. ' +=' → logprob: -4.735635757446289
    5. '+=' → logprob: -4.985635757446289
    6. 'to' → logprob: -5.860635757446289
    7. ' to' → logprob: -6.485635757446289
    8. '+' → logprob: -7.235635757446289
    9. '(red' → logprob: -7.235635757446289
    10. '       ' → logprob: -7.360635757446289

Token 732: ' '' (ID: 461)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.313264936208725
    2. ' red' → logprob: -1.3132649660110474
    3. 're' → logprob: -14.063264846801758
    4. ' ' → logprob: -14.313264846801758
    5. 't' → logprob: -14.563264846801758
    6. 'blue' → logprob: -15.313264846801758
    7. ' blue' → logprob: -15.563264846801758
    8. 'r' → logprob: -15.813264846801758
    9. ' ' → logprob: -16.063264846801758
    10. ' t' → logprob: -16.188264846801758

Token 733: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -1.9504606825648807e-05
    2. ' red' → logprob: -10.875019073486328
    3. ' ' → logprob: -16.375019073486328
    4. 't' → logprob: -16.500019073486328
    5. 'r' → logprob: -16.875019073486328
    6. 'redd' → logprob: -17.000019073486328
    7. 'redi' → logprob: -17.000019073486328
    8. 'read' → logprob: -17.625019073486328
    9. 'reds' → logprob: -17.625019073486328
    10. 're' → logprob: -18.000019073486328

Token 734: ''' (ID: 6)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4873376786708832
    2. ' +=' → logprob: -1.2373377084732056
    3. '           ' → logprob: -2.737337589263916
    4. ')' → logprob: -4.487337589263916
    5. '<|end|>' → logprob: -4.862337589263916
    6. '+' → logprob: -5.237337589263916
    7. '       ' → logprob: -5.612337589263916
    8. ']+=' → logprob: -7.237337589263916
    9. '               ' → logprob: -8.112338066101074
    10. ' red' → logprob: -8.362338066101074

Token 735: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23732222616672516
    2. 'red' → logprob: -1.987322211265564
    3. ' red' → logprob: -2.6123223304748535
    4. ' +=' → logprob: -8.612321853637695
    5. '+=' → logprob: -8.612321853637695
    6. '+' → logprob: -8.737321853637695
    7. '(red' → logprob: -8.987321853637695
    8. '          ' → logprob: -9.737321853637695
    9. '=' → logprob: -10.612321853637695
    10. '.red' → logprob: -10.737321853637695

Token 736: ' le' (ID: 505)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.0006359508261084557
    2. 'red' → logprob: -7.375636100769043
    3. ' t' → logprob: -12.250636100769043
    4. ' ' → logprob: -12.500636100769043
    5. 't' → logprob: -14.875636100769043
    6. '(red' → logprob: -16.000635147094727
    7. ' ' → logprob: -16.125635147094727
    8. '_red' → logprob: -16.250635147094727
    9. ' True' → logprob: -16.375635147094727
    10. ' le' → logprob: -17.375635147094727

Token 737: ' i' (ID: 575)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.04330882802605629
    2. 'red' → logprob: -3.418308734893799
    3. ' bit' → logprob: -4.793308734893799
    4. ' red' → logprob: -6.668308734893799
    5. ' ' → logprob: -10.418309211730957
    6. '   ' → logprob: -12.043309211730957
    7. 'True' → logprob: -12.543309211730957
    8. 'b' → logprob: -12.543309211730957
    9. ' True' → logprob: -12.793309211730957
    10. '  ' → logprob: -13.043309211730957

Token 738: '-' (ID: 12)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.0036439071409404278
    2. '&' → logprob: -6.003643989562988
    3. ']' → logprob: -7.628643989562988
    4. ' bit' → logprob: -8.628643989562988
    5. ' ' → logprob: -8.878643989562988
    6. ')' → logprob: -9.253643989562988
    7. '   ' → logprob: -10.128643989562988
    8. ' (' → logprob: -10.378643989562988
    9. '[i' → logprob: -10.378643989562988
    10. ' ==' → logprob: -10.878643989562988

Token 739: 'ème' (ID: 9767)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014438609592616558
    2. ' i' → logprob: -4.264438629150391
    3. ')' → logprob: -9.26443862915039
    4. '```' → logprob: -9.51443862915039
    5. ' ' → logprob: -10.51443862915039
    6. '(i' → logprob: -11.01443862915039
    7. ')i' → logprob: -11.26443862915039
    8. '1' → logprob: -11.38943862915039
    9. '   ' → logprob: -11.63943862915039
    10. 'bit' → logprob: -12.26443862915039

Token 740: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.2531834840774536
    2. 'bit' → logprob: -1.5031834840774536
    3. ' red' → logprob: -7.503183364868164
    4. ')' → logprob: -7.878183364868164
    5. 'red' → logprob: -8.628183364868164
    6. ' ' → logprob: -10.378183364868164
    7. ' )' → logprob: -10.753183364868164
    8. 'token' → logprob: -11.253183364868164
    9. '):' → logprob: -11.503183364868164
    10. ' ' → logprob: -11.628183364868164

Token 741: ' de' (ID: 334)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.6928515434265137
    2. ' ==' → logprob: -1.1928515434265137
    3. ')' → logprob: -3.0678515434265137
    4. '==' → logprob: -3.1928515434265137
    5. 'red' → logprob: -3.1928515434265137
    6. '<|end|>' → logprob: -3.3178515434265137
    7. '           ' → logprob: -3.9428515434265137
    8. ' is' → logprob: -6.317851543426514
    9. ' ' → logprob: -6.442851543426514
    10. ']' → logprob: -6.817851543426514

Token 742: ' '' (ID: 461)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.015046229586005211
    2. ' bit' → logprob: -4.265046119689941
    3. 'red' → logprob: -7.140046119689941
    4. ' red' → logprob: -9.515046119689941
    5. '(bit' → logprob: -11.265046119689941
    6. 't' → logprob: -14.265046119689941
    7. ' ' → logprob: -14.640046119689941
    8. 'blue' → logprob: -14.640046119689941
    9. 'bits' → logprob: -15.015046119689941
    10. 'b' → logprob: -15.390046119689941

Token 743: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -4.56102097814437e-05
    2. ' bit' → logprob: -10.000045776367188
    3. '(bit' → logprob: -16.500045776367188
    4. ' ' → logprob: -18.000045776367188
    5. '   ' → logprob: -18.250045776367188
    6. 'bits' → logprob: -19.375045776367188
    7. 'bitr' → logprob: -19.375045776367188
    8. '  ' → logprob: -19.875045776367188
    9. 'b' → logprob: -19.875045776367188
    10. 'red' → logprob: -20.125045776367188

Token 744: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.992260217666626
    2. ']' → logprob: -1.117260217666626
    3. '']' → logprob: -2.367260217666626
    4. ''' → logprob: -2.492260217666626
    5. '```' → logprob: -3.742260217666626
    6. ' is' → logprob: -4.117259979248047
    7. '           ' → logprob: -4.242259979248047
    8. '')' → logprob: -4.367259979248047
    9. ' ==' → logprob: -4.867259979248047
    10. ':' → logprob: -4.992259979248047

Token 745: ' est' (ID: 893)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4235444962978363
    2. '+=' → logprob: -1.6735445261001587
    3. '           ' → logprob: -1.9235445261001587
    4. ']+=' → logprob: -5.548544406890869
    5. ' red' → logprob: -5.923544406890869
    6. '+' → logprob: -6.423544406890869
    7. '               ' → logprob: -7.173544406890869
    8. '          ' → logprob: -7.423544406890869
    9. '            ' → logprob: -8.048544883728027
    10. '==' → logprob: -8.048544883728027

Token 746: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3154464066028595
    2. ' ' → logprob: -1.315446376800537
    3. ' à' → logprob: -6.190446376800537
    4. 'à' → logprob: -9.315446853637695
    5. ' set' → logprob: -11.315446853637695
    6. '```' → logprob: -11.690446853637695
    7. ' True' → logprob: -11.940446853637695
    8. '           ' → logprob: -12.190446853637695
    9. '=' → logprob: -13.190446853637695
    10. '   ' → logprob: -13.315446853637695

Token 747: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '```' → logprob: -16.87523078918457
    4. '   ' → logprob: -18.12523078918457
    5. ' ' → logprob: -19.75023078918457
    6. '>' → logprob: -19.87523078918457
    7. 'red' → logprob: -19.87523078918457
    8. '=' → logprob: -20.12523078918457
    9. '  ' → logprob: -20.25023078918457
    10. '           ' → logprob: -20.37523078918457

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -18.625
    4. '   ' → logprob: -20.75
    5. '>' → logprob: -21.25
    6. '0' → logprob: -21.25
    7. 'red' → logprob: -21.375
    8. '
' → logprob: -21.5
    9. '１' → logprob: -21.5
    10. 'i' → logprob: -21.75

Token 749: '
' (ID: 198)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.9052436351776123
    2. ' red' → logprob: -0.9052436351776123
    3. '           ' → logprob: -1.6552436351776123
    4. '(red' → logprob: -10.280243873596191
    5. '               ' → logprob: -11.155243873596191
    6. '.red' → logprob: -11.655243873596191
    7. '       ' → logprob: -12.280243873596191
    8. '          ' → logprob: -13.155243873596191
    9. ':red' → logprob: -13.905243873596191
    10. '_red' → logprob: -14.030243873596191

Token 750: '           ' (ID: 352)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.2693825662136078
    2. 'red' → logprob: -2.0193824768066406
    3. '           ' → logprob: -2.2693824768066406
    4. '               ' → logprob: -11.51938247680664
    5. '(red' → logprob: -11.51938247680664
    6. '       ' → logprob: -12.14438247680664
    7. '          ' → logprob: -13.01938247680664
    8. ' ' → logprob: -13.14438247680664
    9. '.red' → logprob: -13.76938247680664
    10. 'redi' → logprob: -14.01938247680664

Token 751: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.20142114162445068
    2. ' red' → logprob: -1.7014211416244507
    3. '           ' → logprob: -12.076420783996582
    4. 'redi' → logprob: -13.951420783996582
    5. 't' → logprob: -14.326420783996582
    6. '.red' → logprob: -15.826420783996582
    7. '(red' → logprob: -15.951420783996582
    8. 'redd' → logprob: -16.4514217376709
    9. '_red' → logprob: -16.7014217376709
    10. 'reds' → logprob: -16.7014217376709

Token 752: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25193658471107483
    2. ' +=' → logprob: -1.5019365549087524
    3. ']+=' → logprob: -12.376936912536621
    4. '+' → logprob: -13.001936912536621
    5. '+='' → logprob: -15.001936912536621
    6. '+="' → logprob: -15.126936912536621
    7. ' +' → logprob: -15.501936912536621
    8. '=' → logprob: -16.876935958862305
    9. '           ' → logprob: -17.001935958862305
    10. '        ' → logprob: -17.001935958862305

Token 753: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.5491004129871726e-05
    2. ' t' → logprob: -10.000045776367188
    3. '	t' → logprob: -20.375045776367188
    4. '`t' → logprob: -21.000045776367188
    5. '   ' → logprob: -22.875045776367188
    6. '_t' → logprob: -23.250045776367188
    7. 's' → logprob: -23.250045776367188
    8. 'T' → logprob: -23.500045776367188
    9. ' ' → logprob: -23.750045776367188
    10. '(t' → logprob: -24.875045776367188

Token 754: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. '[I' → logprob: -18.375
    4. 'i' → logprob: -19.75
    5. ' [' → logprob: -20.375
    6. '```' → logprob: -20.75
    7. '[j' → logprob: -21.375
    8. '[t' → logprob: -21.75
    9. '[ii' → logprob: -21.875
    10. '   ' → logprob: -22.125

Token 755: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03324750065803528
    2. ')' → logprob: -3.533247470855713
    3. '       ' → logprob: -6.408247470855713
    4. '<|end|>' → logprob: -6.408247470855713
    5. '}' → logprob: -9.408247947692871
    6. '[' → logprob: -10.533247947692871
    7. ' ]' → logprob: -10.658247947692871
    8. ']
' → logprob: -10.783247947692871
    9. '   ' → logprob: -11.408247947692871
    10. '```' → logprob: -11.658247947692871

Token 756: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013277175836265087
    2. 'else' → logprob: -4.513277053833008
    3. ' else' → logprob: -6.138277053833008
    4. '<|end|>' → logprob: -9.638277053833008
    5. '```' → logprob: -14.638277053833008
    6. 'elif' → logprob: -14.888277053833008
    7. '	else' → logprob: -15.013277053833008
    8. '​' → logprob: -15.138277053833008
    9. ' ' → logprob: -15.263277053833008
    10. '    ' → logprob: -15.263277053833008

Token 757: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3875671625137329
    2. '       ' → logprob: -1.387567162513733
    3. ' else' → logprob: -2.6375670433044434
    4. '<|end|>' → logprob: -10.012567520141602
    5. '.' → logprob: -11.762567520141602
    6. ')' → logprob: -12.512567520141602
    7. '	else' → logprob: -12.887567520141602
    8. '   ' → logprob: -13.137567520141602
    9. 'elif' → logprob: -13.262567520141602
    10. ' ' → logprob: -13.387567520141602

Token 758: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5433206558227539
    2. '           ' → logprob: -0.9183206558227539
    3. ':
' → logprob: -3.918320655822754
    4. '       ' → logprob: -9.918320655822754
    5. '          ' → logprob: -10.168320655822754
    6. '               ' → logprob: -12.543320655822754
    7. '   ' → logprob: -12.668320655822754
    8. '{' → logprob: -12.668320655822754
    9. '         ' → logprob: -12.793320655822754
    10. ':

' → logprob: -12.918320655822754

Token 759: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5562852621078491
    2. 'blue' → logprob: -0.9312852621078491
    3. ' blue' → logprob: -3.4312853813171387
    4. '       ' → logprob: -9.30628490447998
    5. '          ' → logprob: -9.68128490447998
    6. '               ' → logprob: -9.93128490447998
    7. '   ' → logprob: -10.80628490447998
    8. ' ' → logprob: -11.05628490447998
    9. '         ' → logprob: -11.55628490447998
    10. '            ' → logprob: -12.30628490447998

Token 760: ' #' (ID: 1069)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.0015041481237858534
    2. ' blue' → logprob: -6.501503944396973
    3. '           ' → logprob: -13.376503944396973
    4. ' ' → logprob: -16.12650489807129
    5. '       ' → logprob: -16.25150489807129
    6. '   ' → logprob: -16.50150489807129
    7. '_blue' → logprob: -17.25150489807129
    8. '.blue' → logprob: -17.37650489807129
    9. '               ' → logprob: -18.75150489807129
    10. '         ' → logprob: -18.87650489807129

Token 761: ' Aj' (ID: 28294)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.004082554951310158
    2. ' blue' → logprob: -5.504082679748535
    3. '           ' → logprob: -12.504082679748535
    4. ' ' → logprob: -15.504082679748535
    5. '   ' → logprob: -16.37908172607422
    6. '       ' → logprob: -16.87908172607422
    7. '_blue' → logprob: -17.25408172607422
    8. '.blue' → logprob: -17.87908172607422
    9. '         ' → logprob: -18.00408172607422
    10. '               ' → logprob: -18.12908172607422

Token 762: 'oute' (ID: 3509)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.026435798034071922
    2. ' blue' → logprob: -3.6514358520507812
    3. 'red' → logprob: -9.526435852050781
    4. 'ble' → logprob: -10.151435852050781
    5. '_blue' → logprob: -11.526435852050781
    6. '           ' → logprob: -11.776435852050781
    7. 'b' → logprob: -13.651435852050781
    8. ' red' → logprob: -14.151435852050781
    9. '         ' → logprob: -14.276435852050781
    10. '          ' → logprob: -14.526435852050781

Token 763: ' t' (ID: 260)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.003184363478794694
    2. 'blue' → logprob: -5.7531843185424805
    3. 't' → logprob: -13.37818431854248
    4. 'b' → logprob: -13.50318431854248
    5. ' bleu' → logprob: -13.50318431854248
    6. ' t' → logprob: -15.00318431854248
    7. ' red' → logprob: -15.12818431854248
    8. '_blue' → logprob: -15.25318431854248
    9. 's' → logprob: -15.37818431854248
    10. ' ' → logprob: -15.62818431854248

Token 764: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00278776534833014
    2. '[' → logprob: -6.0027875900268555
    3. ' +=' → logprob: -9.002787590026855
    4. '+=' → logprob: -9.377787590026855
    5. 'blue' → logprob: -10.627787590026855
    6. 'i' → logprob: -10.877787590026855
    7. '[j' → logprob: -11.752787590026855
    8. '+' → logprob: -12.127787590026855
    9. '[++' → logprob: -12.252787590026855
    10. '```' → logprob: -12.627787590026855

Token 765: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.22759291529655457
    2. ']' → logprob: -2.477592945098877
    3. '[' → logprob: -3.102592945098877
    4. ' à' → logprob: -3.727592945098877
    5. ' ' → logprob: -3.977592945098877
    6. '           ' → logprob: -4.477592945098877
    7. '         ' → logprob: -4.977592945098877
    8. ' to' → logprob: -6.227592945098877
    9. ' +=' → logprob: -6.477592945098877
    10. '```' → logprob: -6.477592945098877

Token 766: ' à' (ID: 1221)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.19463036954402924
    2. ' to' → logprob: -2.4446303844451904
    3. '+=' → logprob: -2.8196303844451904
    4. 'to' → logprob: -4.319630146026611
    5. ' à' → logprob: -4.444630146026611
    6. ' blue' → logprob: -5.319630146026611
    7. ' red' → logprob: -9.19463062286377
    8. ' ' → logprob: -9.19463062286377
    9. 'à' → logprob: -9.31963062286377
    10. '=' → logprob: -9.56963062286377

Token 767: ' '' (ID: 461)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.005234475247561932
    2. ' blue' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.005234718322754
    4. ''' → logprob: -15.630234718322754
    5. '"' → logprob: -16.130233764648438
    6. '.blue' → logprob: -17.380233764648438
    7. '_blue' → logprob: -17.630233764648438
    8. '  ' → logprob: -18.380233764648438
    9. 'blu' → logprob: -18.505233764648438
    10. '   ' → logprob: -18.505233764648438

Token 768: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -2.935296834039036e-06
    2. ' blue' → logprob: -12.75000286102295
    3. ' ' → logprob: -19.125003814697266
    4. 'ble' → logprob: -19.250003814697266
    5. 'b' → logprob: -21.125003814697266
    6. '```' → logprob: -21.500003814697266
    7. ''' → logprob: -21.625003814697266
    8. '"' → logprob: -21.625003814697266
    9. '_blue' → logprob: -21.625003814697266
    10. 'blu' → logprob: -21.750003814697266

Token 769: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07925944030284882
    2. '+=' → logprob: -2.5792593955993652
    3. '+' → logprob: -8.954259872436523
    4. '           ' → logprob: -9.204259872436523
    5. '          ' → logprob: -9.704259872436523
    6. '         ' → logprob: -10.954259872436523
    7. '+='' → logprob: -11.079259872436523
    8. ' +' → logprob: -11.329259872436523
    9. ']+=' → logprob: -11.829259872436523
    10. '        ' → logprob: -11.954259872436523

Token 770: ' si' (ID: 1784)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4741310179233551
    2. '+=' → logprob: -0.9741309881210327
    3. '           ' → logprob: -10.224130630493164
    4. ']+=' → logprob: -12.224130630493164
    5. ' blue' → logprob: -12.474130630493164
    6. '          ' → logprob: -12.599130630493164
    7. 'blue' → logprob: -13.599130630493164
    8. '+="' → logprob: -13.974130630493164
    9. '       ' → logprob: -14.099130630493164
    10. '        ' → logprob: -14.349130630493164

Token 771: ' le' (ID: 505)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.011053244583308697
    2. 'blue' → logprob: -4.511053085327148
    3. ' bleu' → logprob: -12.386053085327148
    4. ' ' → logprob: -14.386053085327148
    5. ' ' → logprob: -15.011053085327148
    6. ' not' → logprob: -16.38605308532715
    7. '_blue' → logprob: -16.63605308532715
    8. '(' → logprob: -16.63605308532715
    9. ' (' → logprob: -17.51105308532715
    10. '  ' → logprob: -18.63605308532715

Token 772: ' bit' (ID: 3546)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.39081689715385437
    2. ' blue' → logprob: -1.1408169269561768
    3. 'bit' → logprob: -6.015816688537598
    4. ' bleu' → logprob: -6.890816688537598
    5. ' bit' → logprob: -7.765816688537598
    6. 'ble' → logprob: -10.765816688537598
    7. '```' → logprob: -11.765816688537598
    8. 'i' → logprob: -12.515816688537598
    9. ' ' → logprob: -12.515816688537598
    10. ' i' → logprob: -12.765816688537598

Token 773: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0664547011256218
    2. ' !=' → logprob: -3.1914546489715576
    3. '==' → logprob: -4.691454887390137
    4. ' +=' → logprob: -5.191454887390137
    5. ' ' → logprob: -6.191454887390137
    6. ' à' → logprob: -6.441454887390137
    7. ' est' → logprob: -7.191454887390137
    8. '!=' → logprob: -7.566454887390137
    9. ' not' → logprob: -7.691454887390137
    10. '           ' → logprob: -7.816454887390137

Token 774: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20847374200820923
    2. ' à' → logprob: -2.5834736824035645
    3. 'à' → logprob: -2.7084736824035645
    4. ' ' → logprob: -3.0834736824035645
    5. '=' → logprob: -8.958474159240723
    6. '   ' → logprob: -10.583474159240723
    7. '  ' → logprob: -10.958474159240723
    8. ' not' → logprob: -11.208474159240723
    9. ' ' → logprob: -11.583474159240723
    10. '           ' → logprob: -11.708474159240723

Token 775: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004320996522437781
    2. ' ' → logprob: -7.750432014465332
    3. '1' → logprob: -13.625432014465332
    4. '   ' → logprob: -17.50043296813965
    5. '  ' → logprob: -17.81293296813965
    6. '```' → logprob: -18.18793296813965
    7. '=' → logprob: -18.62543296813965
    8. 'else' → logprob: -18.87543296813965
    9. '۰' → logprob: -18.87543296813965
    10. ' ' → logprob: -18.93793296813965

Token 776: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3544423381972592e-05
    2. '1' → logprob: -11.25001335144043
    3. ' ' → logprob: -14.87501335144043
    4. '=' → logprob: -17.31251335144043
    5. '```' → logprob: -18.43751335144043
    6. '
' → logprob: -18.56251335144043
    7. '۰' → logprob: -18.75001335144043
    8. 'blue' → logprob: -18.87501335144043
    9. ' ' → logprob: -19.31251335144043
    10. '00' → logprob: -19.31251335144043

Token 777: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04249479994177818
    2. ' blue' → logprob: -3.542494773864746
    3. 'blue' → logprob: -4.792494773864746
    4. '       ' → logprob: -5.792494773864746
    5. '          ' → logprob: -7.167494773864746
    6. '               ' → logprob: -8.167494773864746
    7. '   ' → logprob: -9.167494773864746
    8. '         ' → logprob: -9.667494773864746
    9. '	       ' → logprob: -10.542494773864746
    10. '		' → logprob: -11.417494773864746

Token 778: '           ' (ID: 352)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.3349439203739166
    2. '           ' → logprob: -1.9599438905715942
    3. 'blue' → logprob: -1.9599438905715942
    4. '       ' → logprob: -7.084943771362305
    5. '               ' → logprob: -7.209943771362305
    6. '          ' → logprob: -7.209943771362305
    7. '         ' → logprob: -8.334943771362305
    8. '   ' → logprob: -9.334943771362305
    9. '.blue' → logprob: -9.959943771362305
    10. '_blue' → logprob: -10.084943771362305

Token 779: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.029812980443239212
    2. ' blue' → logprob: -3.529813051223755
    3. 'red' → logprob: -9.779812812805176
    4. ' ' → logprob: -13.029812812805176
    5. '   ' → logprob: -13.404812812805176
    6. 'b' → logprob: -14.529812812805176
    7. ' red' → logprob: -14.654812812805176
    8. '_blue' → logprob: -14.904812812805176
    9. '.blue' → logprob: -15.654812812805176
    10. '  ' → logprob: -15.654812812805176

Token 780: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006719871424138546
    2. ' +=' → logprob: -5.006720066070557
    3. '+' → logprob: -13.381719589233398
    4. ']+=' → logprob: -13.631719589233398
    5. '+="' → logprob: -14.006719589233398
    6. '+='' → logprob: -14.131719589233398
    7. ' +' → logprob: -16.8817195892334
    8. '+=(' → logprob: -17.3817195892334
    9. '=' → logprob: -17.5067195892334
    10. '	' → logprob: -18.3817195892334

Token 781: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.000627610192168504
    2. ' t' → logprob: -7.375627517700195
    3. '	t' → logprob: -14.125627517700195
    4. ' ' → logprob: -15.750627517700195
    5. 's' → logprob: -16.000627517700195
    6. 'red' → logprob: -16.500627517700195
    7. '   ' → logprob: -18.750627517700195
    8. '`t' → logprob: -18.875627517700195
    9. 'blue' → logprob: -18.875627517700195
    10. '(t' → logprob: -19.500627517700195

Token 782: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.18486109375953674
    2. 's' → logprob: -1.8098610639572144
    3. 'i' → logprob: -5.559861183166504
    4. 't' → logprob: -7.934861183166504
    5. '[' → logprob: -8.059861183166504
    6. '[s' → logprob: -8.684861183166504
    7. 'blue' → logprob: -9.059861183166504
    8. '```' → logprob: -9.309861183166504
    9. '[t' → logprob: -9.559861183166504
    10. ' s' → logprob: -10.059861183166504

Token 783: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07751816511154175
    2. ']' → logprob: -2.9525182247161865
    3. '       ' → logprob: -4.452517986297607
    4. '   ' → logprob: -4.577517986297607
    5. '}' → logprob: -9.202518463134766
    6. '<|end|>' → logprob: -9.327518463134766
    7. '#' → logprob: -9.577518463134766
    8. ')
' → logprob: -9.827518463134766
    9. '")' → logprob: -10.577518463134766
    10. '  ' → logprob: -10.827518463134766

Token 784: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.372916686814278e-05
    2. ' if' → logprob: -10.5000638961792
    3. '    
' → logprob: -11.2500638961792
    4. '<|end|>' → logprob: -11.6250638961792
    5. '       ' → logprob: -13.0000638961792
    6. 'if' → logprob: -13.2500638961792
    7. '```' → logprob: -13.3750638961792
    8. ')' → logprob: -13.3750638961792
    9. ',' → logprob: -13.8750638961792
    10. ' ' → logprob: -14.0000638961792

Token 785: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.22210793197155
    2. 'if' → logprob: -1.9721078872680664
    3. 'key' → logprob: -3.0971078872680664
    4. '   ' → logprob: -4.347107887268066
    5. 'count' → logprob: -6.847107887268066
    6. 'token' → logprob: -8.222107887268066
    7. ' cnt' → logprob: -8.347107887268066
    8. 'counter' → logprob: -9.347107887268066
    9. ' key' → logprob: -10.097107887268066
    10. ' if' → logprob: -10.097107887268066

Token 786: ' Pour' (ID: 13931)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.1637759655714035
    2. 'if' → logprob: -1.91377592086792
    3. 'key' → logprob: -6.28877592086792
    4. 'rev' → logprob: -7.53877592086792
    5. 'inv' → logprob: -7.78877592086792
    6. 'count' → logprob: -8.663776397705078
    7. 'com' → logprob: -8.788776397705078
    8. 'pair' → logprob: -9.288776397705078
    9. 'inverse' → logprob: -9.788776397705078
    10. 'rc' → logprob: -10.038776397705078

Token 787: ' chaque' (ID: 21194)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.5436944961547852
    2. 'red' → logprob: -1.2936944961547852
    3. '(' → logprob: -2.418694496154785
    4. '(r' → logprob: -3.668694496154785
    5. ' red' → logprob: -4.793694496154785
    6. ' (' → logprob: -5.043694496154785
    7. 'key' → logprob: -5.293694496154785
    8. '(reverse' → logprob: -5.793694496154785
    9. '(key' → logprob: -6.793694496154785
    10. 'r' → logprob: -7.043694496154785

Token 788: ' partition' (ID: 31512)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.16904741525650024
    2. 'key' → logprob: -2.6690473556518555
    3. '(key' → logprob: -3.5440473556518555
    4. 'if' → logprob: -3.7940473556518555
    5. 'red' → logprob: -4.7940473556518555
    6. '(cnt' → logprob: -4.9190473556518555
    7. '(r' → logprob: -5.4190473556518555
    8. ' (' → logprob: -5.5440473556518555
    9. '(re' → logprob: -6.1690473556518555
    10. 'cnt' → logprob: -6.4190473556518555

Token 789: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3921109139919281
    2. 'if' → logprob: -1.8921109437942505
    3. '   ' → logprob: -2.267110824584961
    4. ' if' → logprob: -3.392110824584961
    5. 'cnt' → logprob: -3.767110824584961
    6. ':
' → logprob: -5.392110824584961
    7. ',' → logprob: -6.017110824584961
    8. '(cnt' → logprob: -6.767110824584961
    9. ' cnt' → logprob: -7.017110824584961
    10. '[cnt' → logprob: -7.017110824584961

Token 790: ' la' (ID: 557)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.4571511745452881
    2. 'red' → logprob: -1.082151174545288
    3. '(' → logprob: -3.707151174545288
    4. 'blue' → logprob: -5.832151412963867
    5. ' red' → logprob: -7.957151412963867
    6. ' (' → logprob: -9.707151412963867
    7. '((' → logprob: -10.332151412963867
    8. '(reverse' → logprob: -10.457151412963867
    9. '(r' → logprob: -10.957151412963867
    10. '_red' → logprob: -11.457151412963867

Token 791: ' chaîne' (ID: 89288)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.4176773726940155
    2. 'red' → logprob: -1.417677402496338
    3. '(' → logprob: -2.417677402496338
    4. 'blue' → logprob: -4.667677402496338
    5. ' red' → logprob: -8.29267692565918
    6. ' (' → logprob: -9.04267692565918
    7. '(reverse' → logprob: -9.79267692565918
    8. '(r' → logprob: -10.79267692565918
    9. '((' → logprob: -10.79267692565918
    10. ' blue' → logprob: -11.29267692565918

Token 792: ' invers' (ID: 38721)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.311807781457901
    2. 'if' → logprob: -2.061807870864868
    3. '(' → logprob: -2.436807870864868
    4. 'red' → logprob: -3.686807870864868
    5. 'key' → logprob: -4.686807632446289
    6. '_key' → logprob: -5.311807632446289
    7. '(key' → logprob: -5.561807632446289
    8. '(r' → logprob: -5.811807632446289
    9. ' (' → logprob: -6.186807632446289
    10. '_red' → logprob: -7.061807632446289

Token 793: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.009637444280087948
    2. 'é' → logprob: -5.134637355804443
    3. 'ee' → logprob: -6.884637355804443
    4. 'aire' → logprob: -7.009637355804443
    5. '(' → logprob: -7.634637355804443
    6. 'ées' → logprob: -7.759637355804443
    7. '((' → logprob: -9.009637832641602
    8. 'rée' → logprob: -9.009637832641602
    9. 'ère' → logprob: -9.259637832641602
    10. 'es' → logprob: -9.384637832641602

Token 794: ' '' (ID: 461)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.8715411424636841
    2. ':' → logprob: -1.496541142463684
    3. ',' → logprob: -1.746541142463684
    4. 'if' → logprob: -2.3715410232543945
    5. '   ' → logprob: -3.1215410232543945
    6. ' if' → logprob: -4.2465410232543945
    7. 'red' → logprob: -4.9965410232543945
    8. ':
' → logprob: -5.2465410232543945
    9. '(cnt' → logprob: -5.2465410232543945
    10. ' cnt' → logprob: -5.4965410232543945

Token 795: 't' (ID: 83)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.5501925349235535
    2. 'red' → logprob: -0.9251925349235535
    3. 'blue' → logprob: -4.675192356109619
    4. 't' → logprob: -4.800192356109619
    5. '(' → logprob: -4.925192356109619
    6. '(t' → logprob: -6.925192356109619
    7. 's' → logprob: -7.425192356109619
    8. '(s' → logprob: -9.050192832946777
    9. ' red' → logprob: -9.550192832946777
    10. ' (' → logprob: -10.425192832946777

Token 796: '',' (ID: 787)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7962532639503479
    2. 'if' → logprob: -2.046253204345703
    3. '   ' → logprob: -2.046253204345703
    4. ',' → logprob: -2.171253204345703
    5. ')' → logprob: -2.671253204345703
    6. ' if' → logprob: -2.921253204345703
    7. '):' → logprob: -3.921253204345703
    8. '<|end|>' → logprob: -4.921253204345703
    9. '):
' → logprob: -5.296253204345703
    10. ':
' → logprob: -5.921253204345703

Token 797: ' on' (ID: 402)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.004753238055855036
    2. 'if' → logprob: -5.629753112792969
    3. ' cnt' → logprob: -7.129753112792969
    4. '   ' → logprob: -8.504753112792969
    5. 'key' → logprob: -10.379753112792969
    6. 'rev' → logprob: -10.754753112792969
    7. 'count' → logprob: -10.754753112792969
    8. '	cnt' → logprob: -11.379753112792969
    9. 'counter' → logprob: -11.629753112792969
    10. '    
' → logprob: -11.754753112792969

Token 798: ' cherche' (ID: 52345)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.007333887275308371
    2. '+=' → logprob: -5.257333755493164
    3. '[cnt' → logprob: -6.632333755493164
    4. 'if' → logprob: -7.882333755493164
    5. '_cnt' → logprob: -9.132333755493164
    6. '(cnt' → logprob: -9.882333755493164
    7. '+=(' → logprob: -10.007333755493164
    8. ' +=' → logprob: -10.132333755493164
    9. ' cnt' → logprob: -10.257333755493164
    10. '	cnt' → logprob: -10.257333755493164

Token 799: ' dans' (ID: 2671)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.052650902420282364
    2. 'if' → logprob: -3.8026509284973145
    3. '(cnt' → logprob: -4.8026509284973145
    4. 'in' → logprob: -4.8026509284973145
    5. ' if' → logprob: -5.4276509284973145
    6. ' cnt' → logprob: -5.6776509284973145
    7. ' in' → logprob: -6.4276509284973145
    8. 'the' → logprob: -6.6776509284973145
    9. ' the' → logprob: -7.8026509284973145
    10. '_cnt' → logprob: -8.302650451660156

Token 800: ' '' (ID: 461)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0004402055055834353
    2. ' hash' → logprob: -7.7504401206970215
    3. '	hash' → logprob: -12.50044059753418
    4. '(hash' → logprob: -13.12544059753418
    5. 'h' → logprob: -13.50044059753418
    6. 'ha' → logprob: -14.75044059753418
    7. '   ' → logprob: -14.87544059753418
    8. 'the' → logprob: -15.00044059753418
    9. '#' → logprob: -15.25044059753418
    10. '_hash' → logprob: -15.50044059753418

Token 801: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -4.36574100604048e-06
    2. ' hash' → logprob: -12.375004768371582
    3. 'h' → logprob: -17.375003814697266
    4. '(hash' → logprob: -17.500003814697266
    5. '	hash' → logprob: -17.875003814697266
    6. '
' → logprob: -18.750003814697266
    7. 'ha' → logprob: -19.125003814697266
    8. 'Hash' → logprob: -19.750003814697266
    9. '#' → logprob: -19.875003814697266
    10. 'has' → logprob: -20.000003814697266

Token 802: ''' (ID: 6)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.15142908692359924
    2. '[(' → logprob: -2.2764291763305664
    3. '_key' → logprob: -3.7764291763305664
    4. '.' → logprob: -5.276429176330566
    5. 'get' → logprob: -6.026429176330566
    6. 'if' → logprob: -6.151429176330566
    7. ',' → logprob: -7.401429176330566
    8. '_val' → logprob: -7.776429176330566
    9. 'cnt' → logprob: -7.776429176330566
    10. '[((' → logprob: -7.776429176330566

Token 803: ' 
' (ID: 793)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.09318356961011887
    2. 'cnt' → logprob: -2.8431835174560547
    3. '   ' → logprob: -4.593183517456055
    4. 'if' → logprob: -4.843183517456055
    5. '[cnt' → logprob: -5.468183517456055
    6. '.get' → logprob: -6.468183517456055
    7. '_cnt' → logprob: -6.468183517456055
    8. '[' → logprob: -6.718183517456055
    9. '_key' → logprob: -6.843183517456055
    10. ' if' → logprob: -7.093183517456055

Token 804: '   ' (ID: 271)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.049097783863544464
    2. '[' → logprob: -4.049098014831543
    3. '   ' → logprob: -4.424098014831543
    4. 'if' → logprob: -5.049098014831543
    5. '[cnt' → logprob: -5.049098014831543
    6. 'cnt' → logprob: -5.674098014831543
    7. ' if' → logprob: -7.549098014831543
    8. '[count' → logprob: -8.049098014831543
    9. '[counter' → logprob: -8.174098014831543
    10. '.get' → logprob: -8.799098014831543

Token 805: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.020158639177680016
    2. 'if' → logprob: -4.145158767700195
    3. '[cnt' → logprob: -5.645158767700195
    4. '(cnt' → logprob: -8.145158767700195
    5. ' cnt' → logprob: -8.895158767700195
    6. '[' → logprob: -10.145158767700195
    7. '[(' → logprob: -10.270158767700195
    8. '   ' → logprob: -10.520158767700195
    9. '_cnt' → logprob: -11.270158767700195
    10. ' if' → logprob: -11.520158767700195

Token 806: ' la' (ID: 557)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.012103172019124031
    2. 'if' → logprob: -4.637103080749512
    3. '(cnt' → logprob: -6.387103080749512
    4. '[cnt' → logprob: -8.262103080749512
    5. ' cnt' → logprob: -8.512103080749512
    6. 'key' → logprob: -9.762103080749512
    7. '[(' → logprob: -9.887103080749512
    8. '   ' → logprob: -10.387103080749512
    9. '_cnt' → logprob: -11.137103080749512
    10. 'count' → logprob: -11.137103080749512

Token 807: ' clé' (ID: 83188)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0011089015752077103
    2. '(cnt' → logprob: -7.0011091232299805
    3. '(' → logprob: -9.00110912322998
    4. ' cnt' → logprob: -10.12610912322998
    5. 'hash' → logprob: -11.25110912322998
    6. '((' → logprob: -11.25110912322998
    7. 'count' → logprob: -12.62610912322998
    8. ' (' → logprob: -13.87610912322998
    9. '[cnt' → logprob: -14.12610912322998
    10. 'if' → logprob: -14.87610912322998

Token 808: ' (' (ID: 350)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.5298718810081482
    2. '(' → logprob: -1.279871940612793
    3. '((' → logprob: -2.904871940612793
    4. '(reverse' → logprob: -3.029871940612793
    5. '_key' → logprob: -4.904871940612793
    6. '(hash' → logprob: -5.904871940612793
    7. 'reverse' → logprob: -6.029871940612793
    8. ' (' → logprob: -6.029871940612793
    9. '(red' → logprob: -6.029871940612793
    10. 'key' → logprob: -6.404871940612793

Token 809: 'blue' (ID: 18789)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.282920129597187e-05
    2. ' (' → logprob: -11.875012397766113
    3. '(red' → logprob: -13.000012397766113
    4. '((' → logprob: -13.250012397766113
    5. '(b' → logprob: -14.750012397766113
    6. '(bl' → logprob: -14.875012397766113
    7. '(hash' → logprob: -15.500012397766113
    8. '   ' → logprob: -15.750012397766113
    9. ')' → logprob: -15.750012397766113
    10. '(reverse' → logprob: -16.00001335144043

Token 810: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015681622608099133
    2. ',re' → logprob: -9.25015640258789
    3. ' ,' → logprob: -10.62515640258789
    4. ',r' → logprob: -11.25015640258789
    5. '[::-' → logprob: -12.12515640258789
    6. ',
' → logprob: -12.75015640258789
    7. ',t' → logprob: -13.62515640258789
    8. ',n' → logprob: -13.87515640258789
    9. ',key' → logprob: -13.87515640258789
    10. ',v' → logprob: -14.00015640258789

Token 811: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.021787580102682114
    2. ' red' → logprob: -4.021787643432617
    3. '(red' → logprob: -5.646787643432617
    4. ' (' → logprob: -10.146787643432617
    5. ',' → logprob: -10.646787643432617
    6. ')' → logprob: -10.646787643432617
    7. 'blue' → logprob: -11.646787643432617
    8. ' blue' → logprob: -13.771787643432617
    9. '_red' → logprob: -14.021787643432617
    10. '(' → logprob: -14.146787643432617

Token 812: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015376966446638107
    2. '])' → logprob: -4.265377044677734
    3. '),' → logprob: -7.015377044677734
    4. ' )' → logprob: -9.640377044677734
    5. ')
' → logprob: -9.765377044677734
    6. ')]' → logprob: -9.890377044677734
    7. '))' → logprob: -10.015377044677734
    8. ']' → logprob: -10.515377044677734
    9. ')])' → logprob: -10.515377044677734
    10. ',' → logprob: -11.265377044677734

Token 813: ' plutôt' (ID: 40017)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.029110312461853
    2. ':' → logprob: -1.279110312461853
    3. ')' → logprob: -2.0291104316711426
    4. '):' → logprob: -2.4041104316711426
    5. 'if' → logprob: -2.9041104316711426
    6. '   ' → logprob: -3.5291104316711426
    7. ']:' → logprob: -3.6541104316711426
    8. 'cnt' → logprob: -4.904110431671143
    9. ':
' → logprob: -5.404110431671143
    10. ',' → logprob: -5.404110431671143

Token 814: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.23741945624351501
    2. ' que' → logprob: -1.6124194860458374
    3. 'than' → logprob: -4.737419605255127
    4. ':' → logprob: -6.987419605255127
    5. ' than' → logprob: -7.112419605255127
    6. ')' → logprob: -7.487419605255127
    7. 'qu' → logprob: -8.112419128417969
    8. '   ' → logprob: -8.612419128417969
    9. 'fois' → logprob: -9.362419128417969
    10. 'that' → logprob: -9.612419128417969

Token 815: ' (' (ID: 350)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.0044953967444598675
    2. ' (' → logprob: -5.504495620727539
    3. '(' → logprob: -7.879495620727539
    4. ')' → logprob: -11.129495620727539
    5. '   ' → logprob: -11.629495620727539
    6. ':red' → logprob: -12.504495620727539
    7. ' red' → logprob: -12.754495620727539
    8. 'red' → logprob: -13.254495620727539
    9. '(r' → logprob: -13.379495620727539
    10. ' ' → logprob: -13.754495620727539

Token 816: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.014904135838150978
    2. '(red' → logprob: -4.264904022216797
    3. ' red' → logprob: -7.389904022216797
    4. 'blue' → logprob: -9.139904022216797
    5. ')' → logprob: -11.639904022216797
    6. '.red' → logprob: -13.514904022216797
    7. ' (' → logprob: -13.639904022216797
    8. '_red' → logprob: -13.639904022216797
    9. '(' → logprob: -13.764904022216797
    10. ':red' → logprob: -14.639904022216797

Token 817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8087270038668066e-05
    2. ' ,' → logprob: -11.250027656555176
    3. ',
' → logprob: -11.625027656555176
    4. ')' → logprob: -12.750027656555176
    5. ',)' → logprob: -14.125027656555176
    6. '‌,' → logprob: -14.625027656555176
    7. ',

' → logprob: -14.750027656555176
    8. ',b' → logprob: -15.375027656555176
    9. '<|end|>' → logprob: -15.875027656555176
    10. ',",' → logprob: -16.125028610229492

Token 818: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.004520907998085022
    2. ' blue' → logprob: -5.504520893096924
    3. 'red' → logprob: -7.754520893096924
    4. ' red' → logprob: -11.879521369934082
    5. 'ble' → logprob: -13.004521369934082
    6. ')' → logprob: -13.129521369934082
    7. ' bleu' → logprob: -13.879521369934082
    8. ',' → logprob: -14.504521369934082
    9. ' ' → logprob: -15.129521369934082
    10. 'blu' → logprob: -15.254521369934082

Token 819: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017057031393051147
    2. '):' → logprob: -4.642056941986084
    3. '):
' → logprob: -5.017056941986084
    4. ')
' → logprob: -7.892056941986084
    5. '):
' → logprob: -8.642057418823242
    6. '),' → logprob: -10.267057418823242
    7. ')
' → logprob: -10.517057418823242
    8. ' )' → logprob: -11.642057418823242
    9. '):

' → logprob: -11.892057418823242
    10. ')]' → logprob: -11.892057418823242

Token 820: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06754869967699051
    2. 'cnt' → logprob: -2.8175487518310547
    3. ' cnt' → logprob: -5.317548751831055
    4. ')' → logprob: -8.192548751831055
    5. 'if' → logprob: -9.192548751831055
    6. '[cnt' → logprob: -9.317548751831055
    7. '	cnt' → logprob: -9.942548751831055
    8. ' if' → logprob: -10.067548751831055
    9. ' ' → logprob: -10.817548751831055
    10. '  ' → logprob: -11.067548751831055

Token 821: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007910504005849361
    2. ':' → logprob: -6.13291072845459
    3. '):' → logprob: -6.13291072845459
    4. 'if' → logprob: -7.38291072845459
    5. '=' → logprob: -7.75791072845459
    6. ']' → logprob: -7.88291072845459
    7. '   ' → logprob: -8.00791072845459
    8. '.' → logprob: -8.00791072845459
    9. 'in' → logprob: -8.38291072845459
    10. ')
' → logprob: -8.50791072845459

Token 822: ' correspond' (ID: 11095)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8613723516464233
    2. ')' → logprob: -1.1113723516464233
    3. 'in' → logprob: -1.8613723516464233
    4. '):' → logprob: -3.111372470855713
    5. ']+=' → logprob: -3.861372470855713
    6. ']' → logprob: -4.236372470855713
    7. ':' → logprob: -5.111372470855713
    8. ']:' → logprob: -6.611372470855713
    9. 'if' → logprob: -6.861372470855713
    10. ' +=' → logprob: -6.986372470855713

Token 823: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.058120608329773
    2. '   ' → logprob: -1.183120608329773
    3. ' à' → logprob: -1.183120608329773
    4. 'to' → logprob: -3.9331207275390625
    5. ')' → logprob: -4.3081207275390625
    6. 'à' → logprob: -5.3081207275390625
    7. ' a' → logprob: -7.8081207275390625
    8. '(hash' → logprob: -7.9331207275390625
    9. ']' → logprob: -8.308120727539062
    10. '(' → logprob: -8.308120727539062

Token 824: ' éch' (ID: 74009)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.08543822169303894
    2. ' hash' → logprob: -2.5854382514953613
    3. '(hash' → logprob: -5.710438251495361
    4. ')' → logprob: -6.585438251495361
    5. ' (' → logprob: -7.710438251495361
    6. '   ' → logprob: -7.960438251495361
    7. '(' → logprob: -8.085437774658203
    8. 'cnt' → logprob: -8.585437774658203
    9. '	hash' → logprob: -9.335437774658203
    10. ' ' → logprob: -9.585437774658203

Token 825: 'anger' (ID: 5249)
  Prédit: 'anger'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anger' → logprob: -0.001777161261998117
    2. 'angé' → logprob: -7.001777172088623
    3. 'ange' → logprob: -8.626776695251465
    4. 'changer' → logprob: -8.751776695251465
    5. 'au' → logprob: -8.876776695251465
    6. 'a' → logprob: -9.376776695251465
    7. 'ang' → logprob: -9.376776695251465
    8. '#' → logprob: -10.376776695251465
    9. 'apper' → logprob: -11.001776695251465
    10. '```' → logprob: -11.251776695251465

Token 826: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24160656332969666
    2. '(red' → logprob: -1.866606593132019
    3. 'blue' → logprob: -3.3666064739227295
    4. 'red' → logprob: -4.116606712341309
    5. '   ' → logprob: -5.116606712341309
    6. 'keys' → logprob: -6.866606712341309
    7. ' (' → logprob: -7.491606712341309
    8. 'hash' → logprob: -7.741606712341309
    9. '(hash' → logprob: -8.116606712341309
    10. ')' → logprob: -8.866606712341309

Token 827: ' rô' (ID: 98138)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03707967326045036
    2. '(' → logprob: -3.6620795726776123
    3. '(red' → logprob: -4.912079811096191
    4. 'red' → logprob: -6.162079811096191
    5. 'keys' → logprob: -7.412079811096191
    6. ' (' → logprob: -8.912079811096191
    7. '<|end|>' → logprob: -9.912079811096191
    8. '(s' → logprob: -10.037079811096191
    9. '),' → logprob: -10.162079811096191
    10. 'key' → logprob: -10.287079811096191

Token 828: 'les' (ID: 1032)
  Prédit: 'anges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'anges' → logprob: -0.03184296563267708
    2. 'ANGES' → logprob: -5.156843185424805
    3. '   ' → logprob: -5.281843185424805
    4. '``' → logprob: -5.656843185424805
    5. 'changes' → logprob: -6.156843185424805
    6. 'xes' → logprob: -6.281843185424805
    7. '

' → logprob: -6.406843185424805
    8. '\' → logprob: -6.781843185424805
    9. 'ches' → logprob: -7.406843185424805
    10. 'd' → logprob: -7.406843185424805

Token 829: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3409017324447632
    2. ')' → logprob: -1.7159017324447632
    3. 'if' → logprob: -2.3409018516540527
    4. '):' → logprob: -5.215901851654053
    5. ' if' → logprob: -6.090901851654053
    6. 'cnt' → logprob: -6.090901851654053
    7. '):
' → logprob: -7.090901851654053
    8. ']' → logprob: -7.215901851654053
    9. ':' → logprob: -7.840901851654053
    10. '),' → logprob: -8.840901374816895

Token 830: ' couleurs' (ID: 54001)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.03705015033483505
    2. 'blue' → logprob: -3.662050247192383
    3. '"' → logprob: -5.162050247192383
    4. ''' → logprob: -6.037050247192383
    5. ')' → logprob: -6.912050247192383
    6. 'r' → logprob: -7.162050247192383
    7. 'ble' → logprob: -8.412050247192383
    8. 'reds' → logprob: -8.412050247192383
    9. ' red' → logprob: -9.787050247192383
    10. '(red' → logprob: -9.912050247192383

Token 831: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013044807128608227
    2. 'if' → logprob: -5.013044834136963
    3. 'cnt' → logprob: -5.138044834136963
    4. ' if' → logprob: -8.513044357299805
    5. ')' → logprob: -8.888044357299805
    6. '[cnt' → logprob: -10.013044357299805
    7. ':' → logprob: -11.388044357299805
    8. ' ' → logprob: -11.888044357299805
    9. '(cnt' → logprob: -11.888044357299805
    10. '    
' → logprob: -12.013044357299805

Token 832: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005680618807673454
    2. 'cnt' → logprob: -5.755680561065674
    3. 'if' → logprob: -6.005680561065674
    4. ' if' → logprob: -10.505681037902832
    5. ' cnt' → logprob: -12.380681037902832
    6. '[cnt' → logprob: -13.255681037902832
    7. '```' → logprob: -14.630681037902832
    8. '       ' → logprob: -15.255681037902832
    9. '	cnt' → logprob: -15.255681037902832
    10. '(cnt' → logprob: -15.380681037902832

Token 833: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12796002626419067
    2. 'cnt' → logprob: -2.127959966659546
    3. 'if' → logprob: -7.502960205078125
    4. ' cnt' → logprob: -8.377960205078125
    5. '[cnt' → logprob: -8.627960205078125
    6. ')' → logprob: -10.377960205078125
    7. ' if' → logprob: -10.877960205078125
    8. '(cnt' → logprob: -11.752960205078125
    9. '	cnt' → logprob: -12.377960205078125
    10. '):' → logprob: -13.502960205078125

Token 834: ' La' (ID: 3038)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.08477529138326645
    2. '   ' → logprob: -2.83477520942688
    3. 'if' → logprob: -3.83477520942688
    4. ' cnt' → logprob: -7.084775447845459
    5. ' if' → logprob: -9.2097749710083
    6. '	cnt' → logprob: -12.5847749710083
    7. '[cnt' → logprob: -14.4597749710083
    8. '(cnt' → logprob: -14.5847749710083
    9. 'count' → logprob: -14.8347749710083
    10. ' ' → logprob: -14.9597749710083

Token 835: ' méthode' (ID: 71490)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -3.4285862057004124e-05
    2. ' cnt' → logprob: -10.75003433227539
    3. '   ' → logprob: -12.25003433227539
    4. 'if' → logprob: -12.25003433227539
    5. 'count' → logprob: -14.00003433227539
    6. '	cnt' → logprob: -14.12503433227539
    7. '
' → logprob: -14.37503433227539
    8. 'counter' → logprob: -15.50003433227539
    9. '[cnt' → logprob: -15.75003433227539
    10. '(cnt' → logprob: -16.12503433227539

Token 836: ' get' (ID: 717)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.008560674265027046
    2. ' cnt' → logprob: -5.633560657501221
    3. 'get' → logprob: -6.883560657501221
    4. 'count' → logprob: -7.258560657501221
    5. 'value' → logprob: -7.508560657501221
    6. '[cnt' → logprob: -7.508560657501221
    7. '=' → logprob: -7.883560657501221
    8. 'val' → logprob: -8.133561134338379
    9. 'hash' → logprob: -8.383561134338379
    10. '   ' → logprob: -8.758561134338379

Token 837: ' retourne' (ID: 178818)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6495117545127869
    2. 'result' → logprob: -2.0245118141174316
    3. 'value' → logprob: -2.3995118141174316
    4. 'val' → logprob: -2.6495118141174316
    5. 'cnt' → logprob: -3.2745118141174316
    6. '_value' → logprob: -3.5245118141174316
    7. 'count' → logprob: -3.6495118141174316
    8. '_result' → logprob: -3.8995118141174316
    9. '_val' → logprob: -4.274511814117432
    10. ')' → logprob: -4.899511814117432

Token 838: ' ' (ID: 220)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.09319257736206055
    2. '(hash' → logprob: -2.4681925773620605
    3. ' hash' → logprob: -5.4681925773620605
    4. '	hash' → logprob: -11.218193054199219
    5. '((' → logprob: -12.843193054199219
    6. ' (' → logprob: -12.968193054199219
    7. '   ' → logprob: -13.093193054199219
    8. '(h' → logprob: -13.468193054199219
    9. '/hash' → logprob: -14.093193054199219
    10. ' ' → logprob: -14.343193054199219

Token 839: '0' (ID: 15)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.05541939288377762
    2. '(hash' → logprob: -2.930419445037842
    3. ' hash' → logprob: -7.555419445037842
    4. 'cnt' → logprob: -12.180418968200684
    5. '	hash' → logprob: -12.305418968200684
    6. '((' → logprob: -13.555418968200684
    7. '(h' → logprob: -14.305418968200684
    8. ' (' → logprob: -14.680418968200684
    9. 'count' → logprob: -14.680418968200684
    10. '   ' → logprob: -14.930418968200684

Token 840: ' si' (ID: 1784)
  Prédit: '(hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(hash' → logprob: -0.8719205856323242
    2. '((' → logprob: -0.9969205856323242
    3. 'cnt' → logprob: -2.621920585632324
    4. '   ' → logprob: -2.621920585632324
    5. '(cnt' → logprob: -2.871920585632324
    6. 'hash' → logprob: -4.996920585632324
    7. 'result' → logprob: -6.871920585632324
    8. 'count' → logprob: -7.246920585632324
    9. '(counter' → logprob: -8.121920585632324
    10. '(count' → logprob: -8.246920585632324

Token 841: ' la' (ID: 557)
  Prédit: '(hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(hash' → logprob: -0.32161861658096313
    2. 'hash' → logprob: -1.3216185569763184
    3. ' (' → logprob: -5.446618556976318
    4. ' hash' → logprob: -5.571618556976318
    5. 'not' → logprob: -9.696619033813477
    6. '((' → logprob: -10.321619033813477
    7. ' not' → logprob: -10.321619033813477
    8. '	hash' → logprob: -10.696619033813477
    9. ')' → logprob: -11.321619033813477
    10. '(h' → logprob: -11.821619033813477

Token 842: ' clé' (ID: 83188)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.3135305941104889
    2. '(hash' → logprob: -1.3135305643081665
    3. ' hash' → logprob: -8.313530921936035
    4. ' (' → logprob: -11.438530921936035
    5. '	hash' → logprob: -12.438530921936035
    6. '(key' → logprob: -12.563530921936035
    7. '(' → logprob: -13.313530921936035
    8. 'key' → logprob: -13.688530921936035
    9. '(h' → logprob: -14.188530921936035
    10. '(has' → logprob: -14.813530921936035

Token 843: ' n' (ID: 297)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.05944365635514259
    2. 'not' → logprob: -3.434443712234497
    3. ' not' → logprob: -4.684443473815918
    4. 'n' → logprob: -5.309443473815918
    5. '(' → logprob: -5.934443473815918
    6. '(n' → logprob: -6.309443473815918
    7. ' n' → logprob: -6.684443473815918
    8. ')' → logprob: -6.684443473815918
    9. ' (' → logprob: -6.684443473815918
    10. '[(' → logprob: -6.934443473815918

Token 844: ''est' (ID: 6616)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.04415138438344002
    2. 'n' → logprob: -4.419151306152344
    3. 'pas' → logprob: -4.794151306152344
    4. 'on' → logprob: -5.169151306152344
    5. 'o' → logprob: -5.669151306152344
    6. 'not' → logprob: -6.294151306152344
    7. '
' → logprob: -6.294151306152344
    8. 'e' → logprob: -6.544151306152344
    9. '(' → logprob: -6.794151306152344
    10. ''est' → logprob: -6.919151306152344

Token 845: ' pas' (ID: 2173)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011308228597044945
    2. 'pas' → logprob: -4.886308193206787
    3. 'Pas' → logprob: -6.761308193206787
    4. 'not' → logprob: -7.011308193206787
    5. 'abs' → logprob: -7.136308193206787
    6. ' None' → logprob: -8.261308670043945
    7. '(None' → logprob: -8.886308670043945
    8. 'none' → logprob: -9.136308670043945
    9. '0' → logprob: -10.261308670043945
    10. '不存在' → logprob: -10.511308670043945

Token 846: ' présente' (ID: 44828)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7221342921257019
    2. 'abs' → logprob: -1.2221343517303467
    3. 'pas' → logprob: -3.2221343517303467
    4. '(None' → logprob: -3.3471343517303467
    5. 'found' → logprob: -3.5971343517303467
    6. 'hash' → logprob: -3.8471343517303467
    7. '(' → logprob: -3.9721343517303467
    8. '(hash' → logprob: -4.222134113311768
    9. 'prés' → logprob: -4.597134113311768
    10. 'not' → logprob: -4.722134113311768

Token 847: '
' (ID: 198)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.17933358252048492
    2. '(cnt' → logprob: -2.1793336868286133
    3. '   ' → logprob: -3.1793336868286133
    4. '[cnt' → logprob: -4.804333686828613
    5. ')' → logprob: -7.804333686828613
    6. ' cnt' → logprob: -7.929333686828613
    7. '	cnt' → logprob: -9.054333686828613
    8. '
' → logprob: -9.179333686828613
    9. '+=' → logprob: -10.179333686828613
    10. '(' → logprob: -10.554333686828613

Token 848: '   ' (ID: 271)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.4742010235786438
    2. '   ' → logprob: -0.9742010235786438
    3. ' cnt' → logprob: -9.474201202392578
    4. '[cnt' → logprob: -10.724201202392578
    5. '	cnt' → logprob: -11.224201202392578
    6. '(cnt' → logprob: -11.599201202392578
    7. '```' → logprob: -13.224201202392578
    8. 'count' → logprob: -15.099201202392578
    9. '       ' → logprob: -15.974201202392578
    10. '_cnt' → logprob: -16.224201202392578

Token 849: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.005243833642452955
    2. '   ' → logprob: -5.25524377822876
    3. ' cnt' → logprob: -11.630244255065918
    4. '	cnt' → logprob: -14.005244255065918
    5. '[cnt' → logprob: -15.630244255065918
    6. '(cnt' → logprob: -15.880244255065918
    7. ' ' → logprob: -17.2552433013916
    8. 'count' → logprob: -17.7552433013916
    9. '  ' → logprob: -17.8802433013916
    10. '
' → logprob: -18.8802433013916

Token 850: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2014162540435791
    2. '+=' → logprob: -1.701416254043579
    3. '=' → logprob: -13.451416015625
    4. '+=(' → logprob: -14.201416015625
    5. ']+=' → logprob: -14.576416015625
    6. ' =' → logprob: -15.451416015625
    7. '+' → logprob: -16.201416015625
    8. '   ' → logprob: -18.326416015625
    9. ' -=' → logprob: -19.201416015625
    10. '	' → logprob: -19.201416015625

Token 851: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0001238004770129919
    2. ' hash' → logprob: -9.000123977661133
    3. '(hash' → logprob: -16.000123977661133
    4. '   ' → logprob: -16.125123977661133
    5. '	hash' → logprob: -16.500123977661133
    6. ' ' → logprob: -19.000123977661133
    7. '  ' → logprob: -19.750123977661133
    8. 'h' → logprob: -20.000123977661133
    9. '/hash' → logprob: -20.625123977661133
    10. 'hat' → logprob: -20.750123977661133

Token 852: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.004405074752867222
    2. '[(' → logprob: -5.7544050216674805
    3. '.' → logprob: -6.8794050216674805
    4. '((' → logprob: -8.87940502166748
    5. ' .' → logprob: -9.87940502166748
    6. '(' → logprob: -13.12940502166748
    7. '.setdefault' → logprob: -13.12940502166748
    8. '   ' → logprob: -13.62940502166748
    9. '([(' → logprob: -14.37940502166748
    10. 'get' → logprob: -14.87940502166748

Token 853: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0017030329909175634
    2. '(' → logprob: -6.376703262329102
    3. ' (' → logprob: -14.251703262329102
    4. ' ((' → logprob: -16.5017032623291
    5. ' ' → logprob: -16.7517032623291
    6. '(
' → logprob: -17.3767032623291
    7. '[(' → logprob: -17.5017032623291
    8. '  ' → logprob: -17.8767032623291
    9. '(('' → logprob: -18.2517032623291
    10. '((-' → logprob: -19.5017032623291

Token 854: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.049545541405677795
    2. '(' → logprob: -3.0495455265045166
    3. ' blue' → logprob: -7.049545764923096
    4. ' ' → logprob: -10.674545288085938
    5. '   ' → logprob: -11.049545288085938
    6. ' (' → logprob: -11.049545288085938
    7. ')' → logprob: -11.424545288085938
    8. '_blue' → logprob: -12.424545288085938
    9. '.blue' → logprob: -12.549545288085938
    10. 'ble' → logprob: -12.674545288085938

Token 855: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.319370302458992e-06
    2. ' ,' → logprob: -12.375005722045898
    3. ',
' → logprob: -13.875005722045898
    4. '‌,' → logprob: -16.6250057220459
    5. ',r' → logprob: -18.0000057220459
    6. '   ' → logprob: -18.3750057220459
    7. ',re' → logprob: -18.5000057220459
    8. ',

' → logprob: -18.8750057220459
    9. '),' → logprob: -19.0000057220459
    10. ',",' → logprob: -19.0000057220459

Token 856: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -2.15310683415737e-05
    2. ' red' → logprob: -10.750021934509277
    3. '(red' → logprob: -21.75002098083496
    4. ' ' → logprob: -22.87502098083496
    5. '_red' → logprob: -23.75002098083496
    6. 'redi' → logprob: -23.87502098083496
    7. ')' → logprob: -24.00002098083496
    8. 'reds' → logprob: -24.00002098083496
    9. 'blue' → logprob: -24.12502098083496
    10. 'read' → logprob: -24.12502098083496

Token 857: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -2.2246291337069124e-05
    2. ',' → logprob: -11.250021934509277
    3. '],' → logprob: -12.750021934509277
    4. '},' → logprob: -13.000021934509277
    5. ')' → logprob: -13.250021934509277
    6. ',),' → logprob: -13.750021934509277
    7. ' ),' → logprob: -14.375021934509277
    8. '>,' → logprob: -14.875021934509277
    9. '"),' → logprob: -16.875022888183594
    10. ' ' → logprob: -17.125022888183594

Token 858: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. ')' → logprob: -15.502185821533203
    4. '   ' → logprob: -20.127185821533203
    5. ' ' → logprob: -20.377185821533203
    6. '۰' → logprob: -20.502185821533203
    7. '  ' → logprob: -21.002185821533203
    8. '1' → logprob: -21.752185821533203
    9. '<|end|>' → logprob: -21.939685821533203
    10. '),' → logprob: -22.002185821533203

Token 859: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.73052782076411e-05
    2. ' ' → logprob: -9.625067710876465
    3. ')' → logprob: -13.625067710876465
    4. '   ' → logprob: -17.75006675720215
    5. '۰' → logprob: -19.37506675720215
    6. '  ' → logprob: -19.50006675720215
    7. '       ' → logprob: -20.06256675720215
    8. '           ' → logprob: -20.12506675720215
    9. '))' → logprob: -20.18756675720215
    10. '     ' → logprob: -20.18756675720215

Token 860: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.273621405242011e-05
    2. ')
' → logprob: -10.375032424926758
    3. ' )' → logprob: -14.875032424926758
    4. ')}' → logprob: -15.000032424926758
    5. ')

' → logprob: -15.375032424926758
    6. '())' → logprob: -16.250032424926758
    7. '}' → logprob: -16.375032424926758
    8. '))' → logprob: -16.375032424926758
    9. '<|end|>' → logprob: -16.875032424926758
    10. ')}}' → logprob: -17.250032424926758

Token 861: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002330992283532396
    2. '<|end|>' → logprob: -9.125232696533203
    3. '
' → logprob: -9.375232696533203
    4. '```' → logprob: -11.125232696533203
    5. ' print' → logprob: -11.375232696533203
    6. ')' → logprob: -12.250232696533203
    7. '#' → logprob: -12.500232696533203
    8. '#print' → logprob: -12.750232696533203
    9. '  
' → logprob: -14.500232696533203
    10. '(print' → logprob: -14.500232696533203

Token 862: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.375
    3. 'pr' → logprob: -20.0
    4. 'prin' → logprob: -20.75
    5. '#print' → logprob: -21.75
    6. '```' → logprob: -22.125
    7. '
' → logprob: -23.375
    8. 'prit' → logprob: -23.5
    9. '#' → logprob: -24.125
    10. '(print' → logprob: -24.25

Token 863: 'iche' (ID: 7509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3481481373310089
    2. 'ichage' → logprob: -2.0981481075286865
    3. 'ich' → logprob: -2.9731481075286865
    4. 'icher' → logprob: -3.0981481075286865
    5. '#' → logprob: -3.4731481075286865
    6. 'iche' → logprob: -3.4731481075286865
    7. '#print' → logprob: -5.348148345947266
    8. '```' → logprob: -5.598148345947266
    9. 'ic' → logprob: -6.348148345947266
    10. '``' → logprob: -6.848148345947266

Token 864: ' le' (ID: 505)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.00016182278341148049
    2. 'cnt' → logprob: -8.750162124633789
    3. '(' → logprob: -13.500162124633789
    4. 'print' → logprob: -13.625162124633789
    5. '[cnt' → logprob: -14.625162124633789
    6. '(count' → logprob: -16.37516212463379
    7. '(len' → logprob: -16.75016212463379
    8. '(cont' → logprob: -17.00016212463379
    9. '(print' → logprob: -17.25016212463379
    10. '(c' → logprob: -17.25016212463379

Token 865: ' résultat' (ID: 62556)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.03810839354991913
    2. '(cnt' → logprob: -3.2881083488464355
    3. 'result' → logprob: -10.413108825683594
    4. '[cnt' → logprob: -11.288108825683594
    5. 'print' → logprob: -11.538108825683594
    6. ' cnt' → logprob: -12.038108825683594
    7. 'count' → logprob: -12.413108825683594
    8. '	cnt' → logprob: -13.913108825683594
    9. 'ans' → logprob: -14.913108825683594
    10. 'nt' → logprob: -14.913108825683594

Token 866: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015538577281404287
    2. 'cnt' → logprob: -10.000155448913574
    3. '(print' → logprob: -10.000155448913574
    4. '(cnt' → logprob: -10.250155448913574
    5. '(' → logprob: -10.875155448913574
    6. '()
' → logprob: -12.375155448913574
    7. '(
' → logprob: -12.500155448913574
    8. ' print' → logprob: -13.500155448913574
    9. '()' → logprob: -14.875155448913574
    10. '
' → logprob: -15.375155448913574

Token 867: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.292907877039397e-06
    2. '```' → logprob: -12.87500286102295
    3. '(print' → logprob: -14.75000286102295
    4. ' print' → logprob: -15.87500286102295
    5. '``' → logprob: -16.625003814697266
    6. '(' → logprob: -17.500003814697266
    7. '
' → logprob: -18.875003814697266
    8. ')
' → logprob: -19.875003814697266
    9. '()
' → logprob: -19.875003814697266
    10. '#print' → logprob: -20.250003814697266

Token 868: ' c' (ID: 274)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0001217813478433527
    2. 'print' → logprob: -9.5001220703125
    3. '(cnt' → logprob: -10.0001220703125
    4. ' cnt' → logprob: -13.5001220703125
    5. '[cnt' → logprob: -17.2501220703125
    6. '	cnt' → logprob: -18.7501220703125
    7. 'cn' → logprob: -18.7501220703125
    8. 'count' → logprob: -20.7501220703125
    9. 'cout' → logprob: -20.8751220703125
    10. '_cnt' → logprob: -21.8751220703125

Token 869: ''est' (ID: 6616)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.0004236435634084046
    2. 'ont' → logprob: -8.750423431396484
    3. 'print' → logprob: -8.750423431396484
    4. 't' → logprob: -9.500423431396484
    5. 'ount' → logprob: -11.125423431396484
    6. 'cnt' → logprob: -11.625423431396484
    7. '#' → logprob: -13.250423431396484
    8. 'nts' → logprob: -14.000423431396484
    9. 'ode' → logprob: -14.000423431396484
    10. '#print' → logprob: -14.125423431396484

Token 870: '-à' (ID: 56297)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.15032018721103668
    2. '(' → logprob: -2.025320291519165
    3. 'cnt' → logprob: -5.025320053100586
    4. '()' → logprob: -7.275320053100586
    5. '(len' → logprob: -9.150320053100586
    6. '[cnt' → logprob: -9.900320053100586
    7. ')' → logprob: -10.775320053100586
    8. 'nt' → logprob: -11.025320053100586
    9. '(
' → logprob: -11.025320053100586
    10. 'e' → logprob: -11.025320053100586

Token 871: '-dire' (ID: 76064)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3421930968761444
    2. 'int' → logprob: -1.8421931266784668
    3. 'print' → logprob: -2.842193126678467
    4. 'nt' → logprob: -3.592193126678467
    5. '0' → logprob: -3.967193126678467
    6. 'len' → logprob: -5.092193126678467
    7. 'n' → logprob: -5.217193126678467
    8. 'x' → logprob: -5.842193126678467
    9. '(cnt' → logprob: -6.092193126678467
    10. '   ' → logprob: -6.092193126678467

Token 872: ' la' (ID: 557)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0019649125169962645
    2. '(cnt' → logprob: -6.251965045928955
    3. 'print' → logprob: -10.251964569091797
    4. ' cnt' → logprob: -14.501964569091797
    5. '[cnt' → logprob: -14.876964569091797
    6. '	cnt' → logprob: -16.501964569091797
    7. 'cn' → logprob: -17.376964569091797
    8. 'count' → logprob: -20.001964569091797
    9. 'cout' → logprob: -20.126964569091797
    10. '   ' → logprob: -20.251964569091797

Token 873: ' valeur' (ID: 41664)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0052866460755467415
    2. 'print' → logprob: -5.255286693572998
    3. '(cnt' → logprob: -10.75528621673584
    4. 'count' → logprob: -11.00528621673584
    5. 'len' → logprob: -12.00528621673584
    6. 'val' → logprob: -13.50528621673584
    7. 'nombre' → logprob: -13.88028621673584
    8. ' cnt' → logprob: -14.00528621673584
    9. 'counter' → logprob: -14.38028621673584
    10. 'comp' → logprob: -14.50528621673584

Token 874: ' totale' (ID: 52898)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.00044532763422466815
    2. 'cnt' → logprob: -7.750445365905762
    3. 'print' → logprob: -11.375445365905762
    4. '(
' → logprob: -13.750445365905762
    5. '[cnt' → logprob: -13.750445365905762
    6. '(' → logprob: -14.375445365905762
    7. '(count' → logprob: -15.750445365905762
    8. '(len' → logprob: -15.875445365905762
    9. '(cont' → logprob: -17.000444412231445
    10. '```' → logprob: -17.625444412231445

Token 875: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0045385886915028095
    2. '(cnt' → logprob: -5.504538536071777
    3. 'cnt' → logprob: -7.754538536071777
    4. '(print' → logprob: -10.504538536071777
    5. '(' → logprob: -12.504538536071777
    6. '[cnt' → logprob: -16.379539489746094
    7. ' print' → logprob: -16.879539489746094
    8. '#print' → logprob: -17.004539489746094
    9. 'prin' → logprob: -17.504539489746094
    10. '(
' → logprob: -17.754539489746094

Token 876: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -2.45848218582978e-06
    2. '(cnt' → logprob: -13.00000286102295
    3. ' cnt' → logprob: -16.000001907348633
    4. 'print' → logprob: -18.625001907348633
    5. '[cnt' → logprob: -19.500001907348633
    6. '	cnt' → logprob: -20.375001907348633
    7. 'cn' → logprob: -20.375001907348633
    8. 'count' → logprob: -22.500001907348633
    9. 'ct' → logprob: -22.750001907348633
    10. 'nt' → logprob: -24.000001907348633

Token 877: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6405310816480778e-05
    2. '(print' → logprob: -11.750016212463379
    3. ' print' → logprob: -12.625016212463379
    4. '
' → logprob: -12.750016212463379
    5. '(' → logprob: -13.500016212463379
    6. '```' → logprob: -14.125016212463379
    7. '()
' → logprob: -16.750017166137695
    8. '#print' → logprob: -17.500017166137695
    9. '.print' → logprob: -17.875017166137695
    10. 'println' → logprob: -18.625017166137695

Token 878: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0564331205387134e-05
    2. ' print' → logprob: -11.50001049041748
    3. ')' → logprob: -14.75001049041748
    4. ')
' → logprob: -17.625011444091797
    5. 'cnt' → logprob: -17.750011444091797
    6. '
' → logprob: -17.875011444091797
    7. '#print' → logprob: -20.625011444091797
    8. '```' → logprob: -21.250011444091797
    9. 'printf' → logprob: -21.500011444091797
    10. 'pr' → logprob: -21.500011444091797

Token 879: ' la' (ID: 557)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.6353741884231567
    2. 'print' → logprob: -1.5103741884231567
    3. '()' → logprob: -1.7603741884231567
    4. 'cnt' → logprob: -3.010374069213867
    5. '(' → logprob: -4.135374069213867
    6. 'la' → logprob: -5.760374069213867
    7. ')' → logprob: -6.010374069213867
    8. 'nt' → logprob: -6.510374069213867
    9. '(print' → logprob: -6.885374069213867
    10. 'l' → logprob: -7.010374069213867

Token 880: ' sortie' (ID: 52761)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009314591996371746
    2. 'console' → logprob: -5.50931453704834
    3. ')' → logprob: -6.25931453704834
    4. 'n' → logprob: -7.50931453704834
    5. '#' → logprob: -7.63431453704834
    6. 'terminal' → logprob: -7.88431453704834
    7. '```' → logprob: -8.00931453704834
    8. 'python' → logprob: -8.38431453704834
    9. 'range' → logprob: -8.50931453704834
    10. 'output' → logprob: -8.50931453704834

Token 881: ' standard' (ID: 7024)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.6289514303207397
    2. 'print' → logprob: -1.1289514303207397
    3. '(print' → logprob: -2.3789515495300293
    4. '(' → logprob: -3.0039515495300293
    5. '()' → logprob: -6.878951549530029
    6. '(count' → logprob: -9.503951072692871
    7. 'cnt' → logprob: -9.753951072692871
    8. '(c' → logprob: -11.378951072692871
    9. '(cont' → logprob: -11.878951072692871
    10. '("' → logprob: -12.253951072692871

Token 882: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.6537622034084052e-05
    2. '
' → logprob: -11.00002670288086
    3. ' print' → logprob: -11.62502670288086
    4. '```' → logprob: -14.50002670288086
    5. '(print' → logprob: -15.12502670288086
    6. '
' → logprob: -17.87502670288086
    7. '(' → logprob: -17.87502670288086
    8. '#print' → logprob: -19.25002670288086
    9. '()
' → logprob: -19.37502670288086
    10. '  
' → logprob: -19.62502670288086

Token 883: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.375
    3. ' print' → logprob: -20.5
    4. 'pr' → logprob: -23.375
    5. 'prin' → logprob: -24.375
    6. 'println' → logprob: -24.375
    7. '#print' → logprob: -24.625
    8. 'prit' → logprob: -25.125
    9. '``' → logprob: -25.125
    10. '
' → logprob: -26.0

Token 884: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.06197351589798927
    2. '(' → logprob: -2.8119735717773438
    3. ' (' → logprob: -13.686973571777344
    4. '(
' → logprob: -13.936973571777344
    5. '()' → logprob: -14.186973571777344
    6. '(ct' → logprob: -14.436973571777344
    7. '[cnt' → logprob: -14.561973571777344
    8. '(count' → logprob: -14.686973571777344
    9. 'cnt' → logprob: -14.936973571777344
    10. '(C' → logprob: -15.061973571777344

Token 885: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0321611613035202
    2. '())' → logprob: -3.532161235809326
    3. '()' → logprob: -6.032161235809326
    4. ' )' → logprob: -12.657160758972168
    5. '))' → logprob: -13.532160758972168
    6. '(' → logprob: -13.532160758972168
    7. ')`' → logprob: -14.407160758972168
    8. ' ())' → logprob: -15.157160758972168
    9. '```' → logprob: -15.657160758972168
    10. ')#' → logprob: -16.282161712646484


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 883
Tokens correctement prédits (1ère position, stricte): 234
Tokens correctement prédits (1ère position, avec adaptation): 246
Tokens correctement prédits (top 10): 483
Précision stricte (1ère position): 26.50%
Précision adaptée (1ère position): 27.86%
Précision (top 10): 54.70%
================================================================================
