================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import itemgetter

n = int(input())
A = list(map(int, input().split()))

indices = [i for i, (a, b) in enumerate(zip(A, range(1, n+1))) if a == b+0]
flag = bool(indices)
unused = set(range(n)) - set(indices)
ans = len(unused) if flag else -1

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.25372281670570374
    2. 'partial' → logprob: -1.7537227869033813
    3. 'reduce' → logprob: -3.503722906112671
    4. ' wraps' → logprob: -4.003722667694092
    5. 'l' → logprob: -6.753722667694092
    6. ' partial' → logprob: -7.378722667694092
    7. 'cache' → logprob: -8.37872314453125
    8. '```' → logprob: -8.62872314453125
    9. 'cached' → logprob: -9.00372314453125
    10. 'cmp' → logprob: -9.25372314453125

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005409015342593193
    2. '(lambda' → logprob: -5.880409240722656
    3. ' (' → logprob: -6.755409240722656
    4. '.' → logprob: -7.880409240722656
    5. ',' → logprob: -8.505409240722656
    6. ' ' → logprob: -8.880409240722656
    7. '\' → logprob: -8.880409240722656
    8. ''' → logprob: -9.005409240722656
    9. '(space' → logprob: -9.505409240722656
    10. '```' → logprob: -9.630409240722656

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0243254154920578
    2. 'import' → logprob: -3.899325370788574
    3. '.' → logprob: -5.774325370788574
    4. ' ' → logprob: -7.399325370788574
    5. ' .' → logprob: -10.149325370788574
    6. '	import' → logprob: -11.899325370788574
    7. '.import' → logprob: -12.774325370788574
    8. '<|end|>' → logprob: -13.274325370788574
    9. ' Import' → logprob: -13.649325370788574
    10. '_import' → logprob: -13.774325370788574

Token 8: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.11154454201459885
    2. ' import' → logprob: -2.486544609069824
    3. 'add' → logprob: -4.486544609069824
    4. ' mul' → logprob: -4.861544609069824
    5. ' ' → logprob: -6.361544609069824
    6. 'import' → logprob: -7.111544609069824
    7. ' item' → logprob: -7.986544609069824
    8. 'mul' → logprob: -8.111544609069824
    9. ' icon' → logprob: -10.611544609069824
    10. 'item' → logprob: -10.736544609069824

Token 9: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.00907126534730196
    2. 'get' → logprob: -4.759071350097656
    3. 'getitem' → logprob: -7.759071350097656
    4. 'gett' → logprob: -10.884071350097656
    5. 'g' → logprob: -12.259071350097656
    6. 'item' → logprob: -12.884071350097656
    7. '.get' → logprob: -14.134071350097656
    8. '_get' → logprob: -14.259071350097656
    9. 'ge' → logprob: -14.759071350097656
    10. 's' → logprob: -15.134071350097656

Token 10: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2662539780139923
    2. ',' → logprob: -2.64125394821167
    3. '(
' → logprob: -2.76625394821167
    4. '\' → logprob: -3.26625394821167
    5. '\n' → logprob: -3.26625394821167
    6. '.' → logprob: -4.89125394821167
    7. ',
' → logprob: -5.51625394821167
    8. '```' → logprob: -6.26625394821167
    9. 'newline' → logprob: -6.76625394821167
    10. '[' → logprob: -6.89125394821167

Token 11: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16954952478408813
    2. ',' → logprob: -2.1695494651794434
    3. '.' → logprob: -3.9195494651794434
    4. '(
' → logprob: -4.919549465179443
    5. '#' → logprob: -5.669549465179443
    6. '\' → logprob: -6.044549465179443
    7. '```' → logprob: -6.544549465179443
    8. '=' → logprob: -6.669549465179443
    9. '\n' → logprob: -6.919549465179443
    10. ',
' → logprob: -7.044549465179443

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0199167728424072
    2. '_' → logprob: -1.0199167728424072
    3. ' =' → logprob: -1.5199167728424072
    4. ' ' → logprob: -3.3949167728424072
    5. ',' → logprob: -5.019916534423828
    6. 'umber' → logprob: -5.394916534423828
    7. 'um' → logprob: -5.769916534423828
    8. '.' → logprob: -5.769916534423828
    9. 'a' → logprob: -6.144916534423828
    10. 'u' → logprob: -6.519916534423828

Token 13: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05062078684568405
    2. ' ' → logprob: -3.5506207942962646
    3. 'int' → logprob: -3.9256207942962646
    4. '10' → logprob: -7.9256205558776855
    5. '5' → logprob: -8.550621032714844
    6. '0' → logprob: -9.175621032714844
    7. ' input' → logprob: -9.300621032714844
    8. '=int' → logprob: -10.050621032714844
    9. '[int' → logprob: -10.175621032714844
    10. '1' → logprob: -11.175621032714844

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002120038407156244
    2. '('' → logprob: -9.500211715698242
    3. '(input' → logprob: -9.750211715698242
    4. '(n' → logprob: -10.000211715698242
    5. ' (' → logprob: -11.625211715698242
    6. '(
' → logprob: -12.375211715698242
    7. ''' → logprob: -12.375211715698242
    8. '()' → logprob: -12.750211715698242
    9. '(`' → logprob: -13.250211715698242
    10. '```' → logprob: -13.375211715698242

Token 15: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12797187268733978
    2. '()' → logprob: -2.502971887588501
    3. ')' → logprob: -3.502971887588501
    4. '())' → logprob: -5.502971649169922
    5. '('' → logprob: -5.627971649169922
    6. '(
' → logprob: -9.252971649169922
    7. '("("' → logprob: -9.252971649169922
    8. '(()' → logprob: -9.502971649169922
    9. '("")' → logprob: -10.002971649169922
    10. '(""))' → logprob: -10.002971649169922

Token 16: 'A' (ID: 32)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.2491992712020874
    2. 'items' → logprob: -2.249199390411377
    3. 'lst' → logprob: -2.749199390411377
    4. 'arr' → logprob: -3.999199390411377
    5. 'matrix' → logprob: -4.999199390411377
    6. 'array' → logprob: -5.124199390411377
    7. 'employees' → logprob: -6.124199390411377
    8. 'elements' → logprob: -6.249199390411377
    9. 'results' → logprob: -6.374199390411377
    10. 'a' → logprob: -6.499199390411377

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43061935901641846
    2. ' =' → logprob: -1.3056193590164185
    3. '=' → logprob: -2.930619239807129
    4. '.' → logprob: -4.055619239807129
    5. '[]' → logprob: -6.430619239807129
    6. '[i' → logprob: -6.930619239807129
    7. ',' → logprob: -6.930619239807129
    8. '[:]' → logprob: -6.930619239807129
    9. '_' → logprob: -7.055619239807129
    10. 's' → logprob: -7.305619239807129

Token 18: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.9348843097686768
    2. 'list' → logprob: -1.4348843097686768
    3. ' [' → logprob: -1.5598843097686768
    4. ' list' → logprob: -2.1848843097686768
    5. '[input' → logprob: -3.9348843097686768
    6. '[' → logprob: -3.9348843097686768
    7. '[int' → logprob: -5.684884071350098
    8. ' []' → logprob: -6.309884071350098
    9. '[]' → logprob: -6.434884071350098
    10. '[item' → logprob: -8.934884071350098

Token 19: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002678152872249484
    2. '(range' → logprob: -6.627677917480469
    3. '(input' → logprob: -7.502677917480469
    4. '(map' → logprob: -8.002677917480469
    5. '(int' → logprob: -8.752677917480469
    6. '()' → logprob: -9.377677917480469
    7. '(filter' → logprob: -10.252677917480469
    8. '(token' → logprob: -11.252677917480469
    9. '(item' → logprob: -11.377677917480469
    10. '(user' → logprob: -11.502677917480469

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004764865152537823
    2. '(' → logprob: -5.379765033721924
    3. '(lambda' → logprob: -9.754764556884766
    4. 'int' → logprob: -9.879764556884766
    5. '<int' → logprob: -11.629764556884766
    6. '(str' → logprob: -11.754764556884766
    7. '(
' → logprob: -12.004764556884766
    8. '(input' → logprob: -13.004764556884766
    9. '(eval' → logprob: -13.129764556884766
    10. ',int' → logprob: -13.254764556884766

Token 21: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6615618467330933
    2. '(input' → logprob: -0.9115618467330933
    3. ',' → logprob: -2.536561965942383
    4. '(' → logprob: -6.411561965942383
    5. 'input' → logprob: -7.286561965942383
    6. ' ,' → logprob: -7.786561965942383
    7. ')' → logprob: -10.286561965942383
    8. '=input' → logprob: -10.411561965942383
    9. ' input' → logprob: -10.786561965942383
    10. '),' → logprob: -10.911561965942383

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011724866926670074
    2. ' input' → logprob: -6.7511725425720215
    3. '(input' → logprob: -13.626172065734863
    4. ',input' → logprob: -14.376172065734863
    5. ' ' → logprob: -15.376172065734863
    6. '=input' → logprob: -16.25117301940918
    7. ')' → logprob: -16.87617301940918
    8. '	input' → logprob: -17.00117301940918
    9. '<input' → logprob: -17.62617301940918
    10. '))' → logprob: -17.75117301940918

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.374227425316349e-05
    2. '()))' → logprob: -10.375073432922363
    3. '))' → logprob: -11.375073432922363
    4. '(' → logprob: -11.500073432922363
    5. '()' → logprob: -11.875073432922363
    6. ')' → logprob: -11.875073432922363
    7. '())' → logprob: -12.375073432922363
    8. ' ().' → logprob: -14.375073432922363
    9. '()));' → logprob: -14.625073432922363
    10. '.split' → logprob: -15.125073432922363

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004564135451801121
    2. 'strip' → logprob: -7.7504563331604
    3. ' split' → logprob: -11.000456809997559
    4. 'rstrip' → logprob: -11.875456809997559
    5. '(split' → logprob: -13.250456809997559
    6. 'spl' → logprob: -15.500456809997559
    7. ')' → logprob: -16.875455856323242
    8. 's' → logprob: -17.250455856323242
    9. ' strip' → logprob: -17.625455856323242
    10. 'read' → logprob: -17.750455856323242

Token 25: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2595110535621643
    2. ')' → logprob: -1.5095109939575195
    3. ')))' → logprob: -5.2595109939575195
    4. '()))' → logprob: -6.7595109939575195
    5. '(' → logprob: -7.0095109939575195
    6. '())' → logprob: -8.75951099395752
    7. '),' → logprob: -9.88451099395752
    8. '()' → logprob: -10.00951099395752
    9. ' ))' → logprob: -12.13451099395752
    10. ''))' → logprob: -12.13451099395752

Token 26: 'indices' (ID: 30992)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9914077520370483
    2. 'dp' → logprob: -1.8664077520370483
    3. 'pairs' → logprob: -2.491407871246338
    4. 'result' → logprob: -2.616407871246338
    5. 'max' → logprob: -2.616407871246338
    6. 'res' → logprob: -3.491407871246338
    7. 'sorted' → logprob: -3.616407871246338
    8. 'counts' → logprob: -3.741407871246338
    9. 's' → logprob: -3.866407871246338
    10. 'count' → logprob: -3.991407871246338

Token 27: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07948263734579086
    2. '=' → logprob: -2.8294825553894043
    3. '_' → logprob: -5.204482555389404
    4. '.' → logprob: -5.579482555389404
    5. '[' → logprob: -5.704482555389404
    6. ' =' → logprob: -6.079482555389404
    7. ')' → logprob: -6.954482555389404
    8. '[:]' → logprob: -8.204483032226562
    9. ',' → logprob: -8.329483032226562
    10. '()' → logprob: -8.704483032226562

Token 28: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7722335457801819
    2. 'list' → logprob: -1.022233486175537
    3. ' list' → logprob: -2.772233486175537
    4. '[' → logprob: -3.022233486175537
    5. ' range' → logprob: -3.772233486175537
    6. '[]' → logprob: -4.647233486175537
    7. ' [' → logprob: -4.772233486175537
    8. 'sorted' → logprob: -5.022233486175537
    9. '[list' → logprob: -5.147233486175537
    10. '[item' → logprob: -5.397233486175537

Token 29: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0977996289730072
    2. '0' → logprob: -2.72279953956604
    3. '(i' → logprob: -4.472799777984619
    4. 'range' → logprob: -4.722799777984619
    5. ' i' → logprob: -5.847799777984619
    6. 'x' → logprob: -6.722799777984619
    7. 'item' → logprob: -6.847799777984619
    8. ')' → logprob: -7.097799777984619
    9. '(' → logprob: -8.222799301147461
    10. ' (' → logprob: -8.847799301147461

Token 30: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1271572858095169
    2. 'for' → logprob: -2.127157211303711
    3. ' ' → logprob: -9.127157211303711
    4. '+' → logprob: -9.252157211303711
    5. ')' → logprob: -11.877157211303711
    6. '	for' → logprob: -12.002157211303711
    7. ' +' → logprob: -12.502157211303711
    8. '```' → logprob: -13.252157211303711
    9. ' in' → logprob: -13.877157211303711
    10. ',' → logprob: -13.877157211303711

Token 31: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018242890015244484
    2. 'range' → logprob: -4.018242835998535
    3. ' A' → logprob: -9.768242835998535
    4. ' i' → logprob: -11.143242835998535
    5. 'A' → logprob: -11.768242835998535
    6. ' in' → logprob: -11.768242835998535
    7. ' ' → logprob: -12.643242835998535
    8. '	range' → logprob: -14.143242835998535
    9. '(range' → logprob: -14.393242835998535
    10. 'i' → logprob: -14.768242835998535

Token 32: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1834346204996109
    2. 'in' → logprob: -1.8084346055984497
    3. ' range' → logprob: -6.55843448638916
    4. 'range' → logprob: -6.55843448638916
    5. ',' → logprob: -7.30843448638916
    6. ' ' → logprob: -9.55843448638916
    7. 'n' → logprob: -10.05843448638916
    8. '(range' → logprob: -11.18343448638916
    9. ' A' → logprob: -11.55843448638916
    10. 'A' → logprob: -11.68343448638916

Token 33: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6759518384933472
    2. 'x' → logprob: -0.9259518384933472
    3. 'a' → logprob: -3.4259519577026367
    4. ' a' → logprob: -3.9259519577026367
    5. ' v' → logprob: -4.050951957702637
    6. 'v' → logprob: -4.050951957702637
    7. ' val' → logprob: -5.925951957702637
    8. '_' → logprob: -6.675951957702637
    9. ' value' → logprob: -6.675951957702637
    10. 'value' → logprob: -6.675951957702637

Token 34: 'a' (ID: 64)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1001368910074234
    2. 'a' → logprob: -2.9751369953155518
    3. 'v' → logprob: -3.8501369953155518
    4. ' x' → logprob: -4.725136756896973
    5. 'value' → logprob: -5.100136756896973
    6. '_' → logprob: -5.975136756896973
    7. 'val' → logprob: -6.475136756896973
    8. '_,' → logprob: -6.475136756896973
    9. ' val' → logprob: -7.600136756896973
    10. '_)' → logprob: -8.225136756896973

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00415010703727603
    2. ')' → logprob: -5.754149913787842
    3. ',)' → logprob: -7.129149913787842
    4. ' ,' → logprob: -10.379150390625
    5. ',a' → logprob: -10.754150390625
    6. 'a' → logprob: -10.754150390625
    7. ',b' → logprob: -11.379150390625
    8. 's' → logprob: -11.754150390625
    9. ',_' → logprob: -11.754150390625
    10. ',i' → logprob: -11.754150390625

Token 36: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9132701754570007
    2. ' idx' → logprob: -1.6632702350616455
    3. 'idx' → logprob: -2.0382702350616455
    4. ' b' → logprob: -2.1632702350616455
    5. '_)' → logprob: -3.0382702350616455
    6. 'v' → logprob: -3.7882702350616455
    7. ')' → logprob: -4.038269996643066
    8. 'a' → logprob: -4.538269996643066
    9. ' _)' → logprob: -4.788269996643066
    10. '_' → logprob: -4.913269996643066

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021867557370569557
    2. 'in' → logprob: -8.625218391418457
    3. ' in' → logprob: -10.375218391418457
    4. ' )' → logprob: -12.250218391418457
    5. ',' → logprob: -13.750218391418457
    6. 'a' → logprob: -14.875218391418457
    7. '),' → logprob: -15.625218391418457
    8. ' ' → logprob: -15.625218391418457
    9. ')
' → logprob: -15.812718391418457
    10. '）' → logprob: -16.312719345092773

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31345298886299133
    2. 'in' → logprob: -1.313452959060669
    3. ')' → logprob: -8.68845272064209
    4. ' ' → logprob: -12.06345272064209
    5. '<|end|>' → logprob: -13.06345272064209
    6. ',' → logprob: -13.31345272064209
    7. 'a' → logprob: -13.43845272064209
    8. ' )' → logprob: -13.68845272064209
    9. '```' → logprob: -13.81345272064209
    10. 's' → logprob: -14.06345272064209

Token 39: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.47434091567993164
    2. ' enumerate' → logprob: -0.9743409156799316
    3. ' zip' → logprob: -8.849340438842773
    4. 'zip' → logprob: -9.224340438842773
    5. ')' → logprob: -11.474340438842773
    6. '```' → logprob: -12.724340438842773
    7. 'A' → logprob: -13.224340438842773
    8. 'sorted' → logprob: -14.099340438842773
    9. ' ' → logprob: -14.224340438842773
    10. 'en' → logprob: -14.599340438842773

Token 40: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.009120406582951546
    2. '(en' → logprob: -5.259120464324951
    3. 'zip' → logprob: -6.134120464324951
    4. '(A' → logprob: -6.759120464324951
    5. '(' → logprob: -8.384119987487793
    6. ' zip' → logprob: -8.884119987487793
    7. '((' → logprob: -9.759119987487793
    8. 'enumer' → logprob: -10.009119987487793
    9. '(sorted' → logprob: -10.384119987487793
    10. 'A' → logprob: -11.009119987487793

Token 41: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0002060436672763899
    2. 'A' → logprob: -9.250205993652344
    3. '(' → logprob: -9.625205993652344
    4. '((' → logprob: -11.500205993652344
    5. '(range' → logprob: -12.000205993652344
    6. ')(' → logprob: -12.500205993652344
    7. '(indices' → logprob: -12.875205993652344
    8. ',' → logprob: -13.000205993652344
    9. ' (' → logprob: -13.000205993652344
    10. '(a' → logprob: -13.000205993652344

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022901371121406555
    2. '[' → logprob: -7.00229024887085
    3. ' ,' → logprob: -7.50229024887085
    4. ',A' → logprob: -8.002289772033691
    5. 'A' → logprob: -8.252289772033691
    6. '[:-' → logprob: -8.877289772033691
    7. '[::-' → logprob: -11.002289772033691
    8. ',
' → logprob: -11.502289772033691
    9. ',n' → logprob: -11.752289772033691
    10. '[:' → logprob: -12.127289772033691

Token 43: ' range' (ID: 3352)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.24018681049346924
    2. 'sorted' → logprob: -1.7401868104934692
    3. 're' → logprob: -3.3651866912841797
    4. 'range' → logprob: -6.24018669128418
    5. ' A' → logprob: -7.24018669128418
    6. ' sorted' → logprob: -8.61518669128418
    7. '[A' → logprob: -8.74018669128418
    8. '[' → logprob: -8.74018669128418
    9. 'list' → logprob: -8.99018669128418
    10. '(sorted' → logprob: -10.99018669128418

Token 44: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00891436729580164
    2. '(len' → logprob: -5.008914470672607
    3. '(' → logprob: -6.133914470672607
    4. 'n' → logprob: -10.75891399383545
    5. 'len' → logprob: -13.25891399383545
    6. '(-' → logprob: -13.63391399383545
    7. ')n' → logprob: -14.00891399383545
    8. '(i' → logprob: -14.38391399383545
    9. '(a' → logprob: -14.38391399383545
    10. ' n' → logprob: -14.88391399383545

Token 45: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.042820923030376434
    2. '1' → logprob: -3.417820930480957
    3. ' n' → logprob: -5.792820930480957
    4. '(n' → logprob: -5.917820930480957
    5. 'len' → logprob: -6.167820930480957
    6. '2' → logprob: -8.042820930480957
    7. '(' → logprob: -8.292820930480957
    8. '0' → logprob: -8.542820930480957
    9. ' ' → logprob: -9.167820930480957
    10. '100' → logprob: -9.917820930480957

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008866838761605322
    2. ' ,' → logprob: -7.625886917114258
    3. ',n' → logprob: -8.000886917114258
    4. 'n' → logprob: -10.125886917114258
    5. ',

' → logprob: -12.000886917114258
    6. ',len' → logprob: -12.375886917114258
    7. ',
' → logprob: -13.000886917114258
    8. '```' → logprob: -13.250886917114258
    9. '+' → logprob: -13.625886917114258
    10. '1' → logprob: -13.750886917114258

Token 47: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011699944734573364
    2. ' n' → logprob: -4.51170015335083
    3. 'len' → logprob: -7.51170015335083
    4. '1' → logprob: -10.886699676513672
    5. ' len' → logprob: -10.886699676513672
    6. '10' → logprob: -11.261699676513672
    7. '100' → logprob: -11.761699676513672
    8. ')' → logprob: -11.886699676513672
    9. ' ' → logprob: -11.886699676513672
    10. ')n' → logprob: -12.136699676513672

Token 48: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08912148326635361
    2. ' +' → logprob: -2.4641215801239014
    3. '))' → logprob: -8.83912181854248
    4. ')))' → logprob: -10.96412181854248
    5. ' ' → logprob: -12.33912181854248
    6. ' ))' → logprob: -12.71412181854248
    7. ')' → logprob: -12.96412181854248
    8. ',' → logprob: -13.46412181854248
    9. '+n' → logprob: -13.58912181854248
    10. '+
' → logprob: -13.96412181854248

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.250017166137695
    3. '2' → logprob: -12.875017166137695
    4. '+' → logprob: -13.875017166137695
    5. '```' → logprob: -14.500017166137695
    6. 'n' → logprob: -15.250017166137695
    7. '))' → logprob: -16.500017166137695
    8. ')' → logprob: -16.937517166137695
    9. '``' → logprob: -17.250017166137695
    10. '   ' → logprob: -17.437517166137695

Token 50: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.20148710906505585
    2. '))' → logprob: -1.7014870643615723
    3. '))))' → logprob: -10.20148754119873
    4. ')' → logprob: -10.57648754119873
    5. ' ' → logprob: -12.45148754119873
    6. ' ))' → logprob: -13.70148754119873
    7. '),' → logprob: -13.95148754119873
    8. ')));' → logprob: -13.95148754119873
    9. ')])' → logprob: -14.07648754119873
    10. '))]
' → logprob: -14.07648754119873

Token 51: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21405835449695587
    2. 'if' → logprob: -1.8390583992004395
    3. ')' → logprob: -3.4640583992004395
    4. '   ' → logprob: -6.8390583992004395
    5. ')]' → logprob: -7.2140583992004395
    6. ')])' → logprob: -8.714057922363281
    7. ' ' → logprob: -9.214057922363281
    8. '  ' → logprob: -9.589057922363281
    9. ']' → logprob: -9.964057922363281
    10. '       ' → logprob: -9.964057922363281

Token 52: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2813626229763031
    2. 'a' → logprob: -1.4063626527786255
    3. ' ' → logprob: -9.656362533569336
    4. 'b' → logprob: -10.031362533569336
    5. ' b' → logprob: -10.531362533569336
    6. '	a' → logprob: -10.531362533569336
    7. '(a' → logprob: -11.031362533569336
    8. '   ' → logprob: -12.343862533569336
    9. ')' → logprob: -12.593862533569336
    10. '>a' → logprob: -12.718862533569336

Token 53: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6985480785369873
    2. '<' → logprob: -1.3235480785369873
    3. '==' → logprob: -1.9485480785369873
    4. '>=' → logprob: -2.8235480785369873
    5. ' >' → logprob: -4.198548316955566
    6. ' <' → logprob: -5.198548316955566
    7. '<=' → logprob: -5.448548316955566
    8. ' ==' → logprob: -5.573548316955566
    9. '!=' → logprob: -5.948548316955566
    10. ' >=' → logprob: -6.573548316955566

Token 54: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.026323866099119186
    2. ' b' → logprob: -3.6513237953186035
    3. ' ' → logprob: -11.526324272155762
    4. '0' → logprob: -11.901324272155762
    5. ')b' → logprob: -13.401324272155762
    6. 'i' → logprob: -13.526324272155762
    7. '	b' → logprob: -14.526324272155762
    8. '6' → logprob: -14.526324272155762
    9. '1' → logprob: -14.651324272155762
    10. '   ' → logprob: -15.151324272155762

Token 55: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09065712243318558
    2. ')]' → logprob: -2.7156572341918945
    3. '])' → logprob: -4.4656572341918945
    4. ')' → logprob: -4.7156572341918945
    5. '])]' → logprob: -10.090657234191895
    6. ')])' → logprob: -12.340657234191895
    7. ']
' → logprob: -12.715657234191895
    8. ' ]' → logprob: -13.340657234191895
    9. '`]' → logprob: -13.590657234191895
    10. '],' → logprob: -14.090657234191895

Token 56: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009587471140548587
    2. ' ' → logprob: -7.1259589195251465
    3. '2' → logprob: -9.250958442687988
    4. '0' → logprob: -10.125958442687988
    5. '3' → logprob: -12.125958442687988
    6. '-' → logprob: -12.750958442687988
    7. ')' → logprob: -13.250958442687988
    8. ']' → logprob: -13.375958442687988
    9. '4' → logprob: -13.750958442687988
    10. '  ' → logprob: -14.000958442687988

Token 57: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7765461206436157
    2. ')]' → logprob: -0.7765461206436157
    3. '1' → logprob: -2.651546001434326
    4. ')' → logprob: -4.901546001434326
    5. '])' → logprob: -7.276546001434326
    6. '2' → logprob: -7.901546001434326
    7. ' ]' → logprob: -8.526546478271484
    8. '+' → logprob: -9.651546478271484
    9. '3' → logprob: -9.651546478271484
    10. ')]

' → logprob: -9.776546478271484

Token 58: 'flag' (ID: 17665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32320016622543335
    2. ']' → logprob: -1.6982002258300781
    3. '+' → logprob: -2.823200225830078
    4. '<|end|>' → logprob: -4.073200225830078
    5. ' ' → logprob: -5.573200225830078
    6. '0' → logprob: -5.948200225830078
    7. '(' → logprob: -6.073200225830078
    8. ':' → logprob: -6.073200225830078
    9. '[' → logprob: -6.823200225830078
    10. ')]' → logprob: -7.073200225830078

Token 59: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5291342735290527
    2. ' =' → logprob: -0.9041342735290527
    3. 's' → logprob: -5.779134273529053
    4. '_' → logprob: -6.154134273529053
    5. '=False' → logprob: -7.404134273529053
    6. '_=' → logprob: -9.779134750366211
    7. '=True' → logprob: -10.154134750366211
    8. ' ' → logprob: -10.404134750366211
    9. 'False' → logprob: -11.404134750366211
    10. ':' → logprob: -12.654134750366211

Token 60: ' bool' (ID: 3792)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.9800416231155396
    2. 'False' → logprob: -1.4800416231155396
    3. 'True' → logprob: -1.6050416231155396
    4. ' False' → logprob: -1.8550416231155396
    5. 'len' → logprob: -3.98004150390625
    6. ' len' → logprob: -4.35504150390625
    7. ' all' → logprob: -5.98004150390625
    8. ' bool' → logprob: -6.23004150390625
    9. 'bool' → logprob: -6.85504150390625
    10. 'all' → logprob: -7.10504150390625

Token 61: '(indices' (ID: 161036)
  Prédit: '(indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indices' → logprob: -0.01792585477232933
    2. '(len' → logprob: -4.64292573928833
    3. '(' → logprob: -4.89292573928833
    4. '(flag' → logprob: -8.267926216125488
    5. 'indices' → logprob: -9.517926216125488
    6. '(True' → logprob: -9.517926216125488
    7. '(False' → logprob: -10.017926216125488
    8. '([]' → logprob: -10.267926216125488
    9. '(sum' → logprob: -10.392926216125488
    10. 'len' → logprob: -10.517926216125488

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8550976164988242e-05
    2. ' )' → logprob: -11.750018119812012
    3. ')
' → logprob: -12.375018119812012
    4. '[' → logprob: -13.125018119812012
    5. '))' → logprob: -13.125018119812012
    6. ')`' → logprob: -14.625018119812012
    7. ')

' → logprob: -15.250018119812012
    8. ' and' → logprob: -15.375018119812012
    9. '),' → logprob: -15.500018119812012
    10. '])' → logprob: -15.625018119812012

Token 63: 'unused' (ID: 51140)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' =' (ID: 314)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.37715429067611694
    2. '_' → logprob: -1.7521543502807617
    3. ' =' → logprob: -2.2521543502807617
    4. '=' → logprob: -3.6271543502807617
    5. 's' → logprob: -6.252154350280762
    6. '_items' → logprob: -6.752154350280762
    7. ')' → logprob: -7.502154350280762
    8. 'indices' → logprob: -7.752154350280762
    9. '_tokens' → logprob: -7.752154350280762
    10. '_values' → logprob: -8.002154350280762

Token 65: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.0394436120986938
    2. '[n' → logprob: -1.1644436120986938
    3. '[' → logprob: -1.6644436120986938
    4. '[len' → logprob: -3.5394434928894043
    5. '{' → logprob: -3.9144434928894043
    6. '[i' → logprob: -4.039443492889404
    7. 'list' → logprob: -4.164443492889404
    8. '[A' → logprob: -4.289443492889404
    9. ' set' → logprob: -4.789443492889404
    10. '[list' → logprob: -4.789443492889404

Token 66: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.3721385598182678
    2. '(A' → logprob: -1.372138500213623
    3. '()' → logprob: -2.997138500213623
    4. '(' → logprob: -4.997138500213623
    5. '(indices' → logprob: -7.997138500213623
    6. '((' → logprob: -10.247138977050781
    7. '(i' → logprob: -10.997138977050781
    8. '(
' → logprob: -11.122138977050781
    9. 'range' → logprob: -11.497138977050781
    10. '(a' → logprob: -11.997138977050781

Token 67: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014228970743715763
    2. '(' → logprob: -4.264228820800781
    3. '(len' → logprob: -9.889228820800781
    4. 'n' → logprob: -11.514228820800781
    5. '1' → logprob: -13.389228820800781
    6. '(indices' → logprob: -13.889228820800781
    7. ')' → logprob: -14.764228820800781
    8. ' n' → logprob: -15.139228820800781
    9. ')n' → logprob: -15.389228820800781
    10. ' (' → logprob: -15.889228820800781

Token 68: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004851306148339063
    2. '))
' → logprob: -8.50048542022705
    3. ' ))' → logprob: -8.75048542022705
    4. ')' → logprob: -9.37548542022705
    5. ')))' → logprob: -11.50048542022705
    6. '))-' → logprob: -11.87548542022705
    7. '-' → logprob: -12.00048542022705
    8. '))

' → logprob: -12.37548542022705
    9. '()))' → logprob: -12.62548542022705
    10. ')).' → logprob: -13.50048542022705

Token 69: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.132612407207489
    2. '<|end|>' → logprob: -2.382612466812134
    3. ' ' → logprob: -4.757612228393555
    4. '
' → logprob: -5.757612228393555
    5. '<|end|>' → logprob: -5.882612228393555
    6. '  
' → logprob: -6.007612228393555
    7. '-' → logprob: -6.132612228393555
    8. ' 
' → logprob: -6.132612228393555
    9. '\n' → logprob: -6.257612228393555
    10. ' )' → logprob: -6.632612228393555

Token 70: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.10108766704797745
    2. ' set' → logprob: -2.3510875701904297
    3. '{' → logprob: -7.10108757019043
    4. 'indices' → logprob: -10.60108757019043
    5. ' {' → logprob: -10.85108757019043
    6. ' ' → logprob: -12.35108757019043
    7. '	set' → logprob: -12.85108757019043
    8. ' indices' → logprob: -13.35108757019043
    9. '=set' → logprob: -14.10108757019043
    10. '(set' → logprob: -14.22608757019043

Token 71: '(indices' (ID: 161036)
  Prédit: '(indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indices' → logprob: -3.531315314830863e-06
    2. 'indices' → logprob: -12.750003814697266
    3. '(' → logprob: -15.000003814697266
    4. '(ind' → logprob: -16.125003814697266
    5. '(ids' → logprob: -16.500003814697266
    6. '"indices' → logprob: -16.750003814697266
    7. '(index' → logprob: -17.500003814697266
    8. '(idx' → logprob: -18.375003814697266
    9. '(i' → logprob: -18.375003814697266
    10. ' indices' → logprob: -18.625003814697266

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.868328920158092e-05
    2. '))' → logprob: -11.375028610229492
    3. ')
' → logprob: -11.750028610229492
    4. ' )' → logprob: -12.250028610229492
    5. '())' → logprob: -13.375028610229492
    6. ')}' → logprob: -14.500028610229492
    7. ')`' → logprob: -15.000028610229492
    8. ')

' → logprob: -15.125028610229492
    9. '})' → logprob: -15.375028610229492
    10. ')))' → logprob: -15.500028610229492

Token 73: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47363385558128357
    2. ' ' → logprob: -1.598633885383606
    3. '<|end|>' → logprob: -2.4736337661743164
    4. '[' → logprob: -3.2236337661743164
    5. ':' → logprob: -4.723633766174316
    6. '=' → logprob: -4.973633766174316
    7. ']' → logprob: -4.973633766174316
    8. 'indices' → logprob: -5.223633766174316
    9. ',' → logprob: -5.598633766174316
    10. '(' → logprob: -5.848633766174316

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02327786199748516
    2. '=' → logprob: -3.773277759552002
    3. 's' → logprob: -11.27327823638916
    4. '_' → logprob: -11.64827823638916
    5. ',' → logprob: -12.77327823638916
    6. ' ' → logprob: -13.27327823638916
    7. ' +=' → logprob: -14.14827823638916
    8. '＝' → logprob: -14.52327823638916
    9. '=[]' → logprob: -14.52327823638916
    10. '_=' → logprob: -14.64827823638916

Token 75: ' len' (ID: 4631)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3914390802383423
    2. '0' → logprob: -1.8914390802383423
    3. ' len' → logprob: -2.1414389610290527
    4. ' []' → logprob: -2.2664389610290527
    5. '[]' → logprob: -2.5164389610290527
    6. 'len' → logprob: -2.6414389610290527
    7. ' flag' → logprob: -3.3914389610290527
    8. ' [' → logprob: -3.5164389610290527
    9. ' reduce' → logprob: -3.8914389610290527
    10. 'reduce' → logprob: -3.8914389610290527

Token 76: '(un' (ID: 33694)
  Prédit: '(indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indices' → logprob: -0.0038949649315327406
    2. '(un' → logprob: -6.128894805908203
    3. '(' → logprob: -6.628894805908203
    4. '(flag' → logprob: -8.128894805908203
    5. '(ans' → logprob: -10.378894805908203
    6. '(ind' → logprob: -10.753894805908203
    7. 'unused' → logprob: -11.128894805908203
    8. '(set' → logprob: -12.253894805908203
    9. '(A' → logprob: -12.503894805908203
    10. '(ids' → logprob: -13.253894805908203

Token 77: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.09149260818958282
    2. 'sed' → logprob: -2.4664926528930664
    3. 'ed' → logprob: -7.091492652893066
    4. 'indices' → logprob: -7.716492652893066
    5. 'es' → logprob: -8.091492652893066
    6. 'unused' → logprob: -8.216492652893066
    7. '_used' → logprob: -9.716492652893066
    8. '.used' → logprob: -9.716492652893066
    9. 'ased' → logprob: -9.966492652893066
    10. 'ised' → logprob: -9.966492652893066

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007549546426162124
    2. ' )' → logprob: -8.375755310058594
    3. ')
' → logprob: -8.500755310058594
    4. '+' → logprob: -8.750755310058594
    5. ' +' → logprob: -10.000755310058594
    6. '))' → logprob: -10.375755310058594
    7. ')+' → logprob: -10.750755310058594
    8. '-' → logprob: -11.000755310058594
    9. ' -' → logprob: -11.500755310058594
    10. '*' → logprob: -12.125755310058594

Token 79: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5612166523933411
    2. '<|end|>' → logprob: -1.8112165927886963
    3. '+' → logprob: -2.1862165927886963
    4. 'if' → logprob: -2.5612165927886963
    5. ' ' → logprob: -4.061216831207275
    6. ' if' → logprob: -4.186216831207275
    7. '```' → logprob: -4.436216831207275
    8. '[' → logprob: -4.811216831207275
    9. 'for' → logprob: -5.436216831207275
    10. ')' → logprob: -5.811216831207275

Token 80: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.22075502574443817
    2. 'flag' → logprob: -1.9707549810409546
    3. ' not' → logprob: -2.970755100250244
    4. ' unused' → logprob: -5.595755100250244
    5. 'unused' → logprob: -6.220755100250244
    6. 'not' → logprob: -6.970755100250244
    7. ' n' → logprob: -8.345754623413086
    8. ' len' → logprob: -8.970754623413086
    9. ' ' → logprob: -9.095754623413086
    10. ' ' → logprob: -9.345754623413086

Token 81: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.032037403434515
    2. 'else' → logprob: -3.5320374965667725
    3. '+' → logprob: -6.657037258148193
    4. '==' → logprob: -7.532037258148193
    5. '>' → logprob: -8.782037734985352
    6. ' +' → logprob: -8.782037734985352
    7. ' >' → logprob: -9.782037734985352
    8. ' ==' → logprob: -9.782037734985352
    9. ' ' → logprob: -10.782037734985352
    10. '-' → logprob: -12.282037734985352

Token 82: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.485439658164978
    2. ' n' → logprob: -1.235439658164978
    3. '0' → logprob: -2.4854397773742676
    4. ' ' → logprob: -4.985439777374268
    5. '1' → logprob: -6.360439777374268
    6. '-' → logprob: -7.110439777374268
    7. ' -' → logprob: -7.360439777374268
    8. 'len' → logprob: -8.11043930053711
    9. '2' → logprob: -9.61043930053711
    10. '(n' → logprob: -10.36043930053711

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002887490263674408
    2. '2' → logprob: -8.625288963317871
    3. 'n' → logprob: -10.000288963317871
    4. ' ' → logprob: -11.000288963317871
    5. '0' → logprob: -11.125288963317871
    6. '(' → logprob: -11.875288963317871
    7. '-' → logprob: -11.875288963317871
    8. '(n' → logprob: -12.937788963317871
    9. '+' → logprob: -13.062788963317871
    10. '.' → logprob: -13.562788963317871

Token 84: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.12693378329277039
    2. '(' → logprob: -2.1269338130950928
    3. '()' → logprob: -13.501934051513672
    4. '(len' → logprob: -14.001934051513672
    5. '(answer' → logprob: -14.376934051513672
    6. ' (' → logprob: -14.501934051513672
    7. '("("' → logprob: -14.501934051513672
    8. '(abs' → logprob: -14.876934051513672
    9. 'ans' → logprob: -14.876934051513672
    10. '('' → logprob: -15.001934051513672

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '))' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.500000953674316
    4. ')`' → logprob: -16.125
    5. '`)' → logprob: -17.0
    6. ')
' → logprob: -17.25
    7. '）' → logprob: -18.375
    8. '')' → logprob: -18.5
    9. ')#' → logprob: -18.625
    10. '),' → logprob: -18.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 85
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 77.65%
================================================================================
