================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    N, M = map(int, input().split())
    S = [read_s_row() for _ in range(M)]
    p = read_p_row()
    return N, M, S, p

def read_s_row():
    return [int(x) for x in input().split()]

def read_p_row():
    return [int(x) for x in input().split()]

def initialize_T(N):
    return [0] * N

def update_T_from_i(T, i, N):
    for j in range(N):
        if ((i >> j) & 1):
            increment_T_j(T, j)
    return T

def increment_T_j(T, j):
    T[j] += 1

def check_all_conditions(N, M, S, p, i):
    T = initialize_T(N)
    T = update_T_from_i(T, i, N)
    satisfied_count = 0
    for j in range(M):
        if check_condition(T, S[j], p[j]):
            increment_satisfied_count(&satisfied_count)
    return is_all_satisfied(satisfied_count, M)

def check_condition(T, s_row, p_j):
    connected_switches = s_row[0]
    pp = 0
    for k in range(connected_switches):
        pp += get_T_value(T, s_row, k)
    return (pp % 2) == p_j

def get_T_value(T, s_row, k):
    idx = s_row[k+1] - 1
    return T[idx]

def increment_satisfied_count(s_counter_ptr):
    s_counter_ptr[0] += 1

def is_all_satisfied(s, M):
    return s == M

def count_valid_configurations(N, M, S, p):
    ans = 0
    for i in range(2 ** N):
        if check_all_conditions_wrapper(N, M, S, p, i):
            ans = increment_ans(ans)
    return ans

def check_all_conditions_wrapper(N, M, S, p, i):
    result = [0]
    T = initialize_T(N)
    T = update_T_from_i(T, i, N)
    for j in range(M):
        if check_condition(T, S[j], p[j]):
            result[0] += 1
    return is_all_satisfied(result[0], M)

def increment_ans(ans):
    return ans + 1

def main():
    N, M, S, p = read_input()
    result = count_valid_configurations(N, M, S, p)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004457178059965372
    2. '_' → logprob: -5.754456996917725
    3. '():' → logprob: -7.629456996917725
    4. '(:' → logprob: -8.004457473754883
    5. '```' → logprob: -9.004457473754883
    6. '(_:' → logprob: -9.004457473754883
    7. ':' → logprob: -9.504457473754883
    8. ' (' → logprob: -9.879457473754883
    9. '(_' → logprob: -10.629457473754883
    10. '_:' → logprob: -12.004457473754883

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4220339059829712
    2. '\n' → logprob: -1.5470339059829712
    3. '\' → logprob: -2.2970337867736816
    4. '   ' → logprob: -4.547033786773682
    5. '``' → logprob: -5.422033786773682
    6. ':' → logprob: -5.922033786773682
    7. '    
' → logprob: -6.172033786773682
    8. '
' → logprob: -6.422033786773682
    9. ''\' → logprob: -6.547033786773682
    10. '<|end|>' → logprob: -6.672033786773682

Token 5: ' N' (ID: 478)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.618809163570404
    2. '   ' → logprob: -1.3688092231750488
    3. 'input' → logprob: -2.493809223175049
    4. 'r' → logprob: -3.618809223175049
    5. 'data' → logprob: -3.743809223175049
    6. 'x' → logprob: -4.118809223175049
    7. '```' → logprob: -4.493809223175049
    8. 'i' → logprob: -4.868809223175049
    9. 'user' → logprob: -4.993809223175049
    10. 'n' → logprob: -5.118809223175049

Token 6: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2454560995101929
    2. '_' → logprob: -1.3704560995101929
    3. ' =' → logprob: -1.7454560995101929
    4. ',' → logprob: -1.9954560995101929
    5. ')' → logprob: -3.2454562187194824
    6. '  ' → logprob: -3.7454562187194824
    7. '.' → logprob: -3.8704562187194824
    8. ' ' → logprob: -3.9954562187194824
    9. 'u' → logprob: -4.120456218719482
    10. '   ' → logprob: -4.370456218719482

Token 7: ' M' (ID: 391)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.129341721534729
    2. ' input' → logprob: -2.3793416023254395
    3. 'data' → logprob: -4.8793416023254395
    4. 'int' → logprob: -5.5043416023254395
    5. 'x' → logprob: -6.5043416023254395
    6. ' ' → logprob: -6.5043416023254395
    7. ' =' → logprob: -6.5043416023254395
    8. '=input' → logprob: -6.5043416023254395
    9. 'space' → logprob: -6.7543416023254395
    10. ')' → logprob: -6.8793416023254395

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38806793093681335
    2. '=' → logprob: -1.1380679607391357
    3. ',' → logprob: -6.763067722320557
    4. ' ,' → logprob: -10.888068199157715
    5. ')' → logprob: -12.138068199157715
    6. ' ' → logprob: -12.263068199157715
    7. '```' → logprob: -12.763068199157715
    8. ' =
' → logprob: -13.388068199157715
    9. '  ' → logprob: -13.763068199157715
    10. '   ' → logprob: -14.013068199157715

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04130098968744278
    2. 'map' → logprob: -3.4163010120391846
    3. ' input' → logprob: -5.0413007736206055
    4. 'input' → logprob: -6.7913007736206055
    5. ' list' → logprob: -10.791300773620605
    6. ' ' → logprob: -12.291300773620605
    7. ' [' → logprob: -13.041300773620605
    8. ' int' → logprob: -13.291300773620605
    9. 'int' → logprob: -13.291300773620605
    10. 'list' → logprob: -13.416300773620605

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.046167440712451935
    2. '(str' → logprob: -3.6711673736572266
    3. '(int' → logprob: -4.296167373657227
    4. '(lambda' → logprob: -5.421167373657227
    5. '<|end|>' → logprob: -7.046167373657227
    6. '('' → logprob: -9.046167373657227
    7. '()' → logprob: -9.171167373657227
    8. '```' → logprob: -9.421167373657227
    9. '(
' → logprob: -9.671167373657227
    10. ' (' → logprob: -10.421167373657227

Token 11: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7658859491348267
    2. '(input' → logprob: -0.7658859491348267
    3. ',' → logprob: -3.140885829925537
    4. 'input' → logprob: -4.515885829925537
    5. '(' → logprob: -4.640885829925537
    6. ',input' → logprob: -5.390885829925537
    7. '<|end|>' → logprob: -8.515886306762695
    8. '`' → logprob: -8.640886306762695
    9. '```' → logprob: -8.640886306762695
    10. ' input' → logprob: -8.640886306762695

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048743490129709244
    2. ' input' → logprob: -3.048743486404419
    3. ')' → logprob: -8.79874324798584
    4. ' )' → logprob: -13.54874324798584
    5. '(input' → logprob: -13.67374324798584
    6. 'raw' → logprob: -14.17374324798584
    7. ',input' → logprob: -14.17374324798584
    8. '	input' → logprob: -15.29874324798584
    9. '```' → logprob: -15.54874324798584
    10. '),' → logprob: -15.92374324798584

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.30870622396469116
    2. '().' → logprob: -1.808706283569336
    3. '()' → logprob: -2.808706283569336
    4. '()))' → logprob: -3.433706283569336
    5. ')' → logprob: -5.058706283569336
    6. '('' → logprob: -6.558706283569336
    7. '(' → logprob: -7.808706283569336
    8. '))' → logprob: -8.183706283569336
    9. '()));' → logprob: -8.933706283569336
    10. '());' → logprob: -9.058706283569336

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005550591740757227
    2. 'strip' → logprob: -7.500555038452148
    3. ')' → logprob: -13.375555038452148
    4. 'rstrip' → logprob: -14.875555038452148
    5. ' split' → logprob: -15.750555038452148
    6. 'spl' → logprob: -17.00055503845215
    7. '(split' → logprob: -17.87555503845215
    8. '())' → logprob: -18.87555503845215
    9. 'replace' → logprob: -19.12555503845215
    10. 'read' → logprob: -19.62555503845215

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5286425352096558
    2. '))' → logprob: -0.9036425352096558
    3. '()))' → logprob: -5.778642654418945
    4. '())' → logprob: -6.153642654418945
    5. '(' → logprob: -9.153642654418945
    6. '()' → logprob: -9.528642654418945
    7. ''))' → logprob: -10.528642654418945
    8. ')))' → logprob: -10.528642654418945
    9. '('' → logprob: -11.028642654418945
    10. '`)' → logprob: -11.528642654418945

Token 16: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5225959420204163
    2. '   ' → logprob: -1.5225958824157715
    3. '\' → logprob: -3.1475958824157715
    4. '
' → logprob: -3.5225958824157715
    5. '```' → logprob: -3.7725958824157715
    6. 'return' → logprob: -3.8975958824157715
    7. '\r' → logprob: -4.5225958824157715
    8. '    
' → logprob: -4.6475958824157715
    9. ':' → logprob: -4.7725958824157715
    10. '`' → logprob: -4.8975958824157715

Token 17: ' S' (ID: 336)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0211517810821533
    2. 'data' → logprob: -1.3961517810821533
    3. '   ' → logprob: -1.7711517810821533
    4. 'd' → logprob: -2.8961517810821533
    5. 'n' → logprob: -3.5211517810821533
    6. 'for' → logprob: -4.146151542663574
    7. 'result' → logprob: -4.396151542663574
    8. ' lines' → logprob: -4.396151542663574
    9. 'rows' → logprob: -4.521151542663574
    10. 'i' → logprob: -4.771151542663574

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42570051550865173
    2. '.' → logprob: -1.4257005453109741
    3. '[' → logprob: -2.8007004261016846
    4. '_' → logprob: -3.5507004261016846
    5. ' =' → logprob: -5.300700664520264
    6. 'paces' → logprob: -5.425700664520264
    7. 'p' → logprob: -5.925700664520264
    8. ',' → logprob: -6.675700664520264
    9. 'i' → logprob: -7.425700664520264
    10. '[:]' → logprob: -7.675700664520264

Token 19: ' [' (ID: 723)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.35959410667419434
    2. 'input' → logprob: -1.2345941066741943
    3. ' []' → logprob: -5.234594345092773
    4. '[input' → logprob: -5.984594345092773
    5. ' [' → logprob: -6.359594345092773
    6. '[]' → logprob: -7.484594345092773
    7. '[' → logprob: -7.734594345092773
    8. ' list' → logprob: -8.359594345092773
    9. 'list' → logprob: -9.234594345092773
    10. ' ' → logprob: -9.234594345092773

Token 20: 'read' (ID: 1293)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001055676257237792
    2. 'int' → logprob: -7.001055717468262
    3. 'list' → logprob: -9.126055717468262
    4. ' input' → logprob: -10.876055717468262
    5. 'str' → logprob: -11.126055717468262
    6. '0' → logprob: -14.251055717468262
    7. 'tuple' → logprob: -15.376055717468262
    8. ']' → logprob: -15.626055717468262
    9. '<input' → logprob: -16.001054763793945
    10. '(input' → logprob: -16.251054763793945

Token 21: '_s' (ID: 1278)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.5931592583656311
    2. '()' → logprob: -1.5931591987609863
    3. 'line' → logprob: -2.8431591987609863
    4. '_line' → logprob: -2.8431591987609863
    5. '())' → logprob: -2.9681591987609863
    6. 'input' → logprob: -3.2181591987609863
    7. '()]' → logprob: -4.593159198760986
    8. '(input' → logprob: -4.593159198760986
    9. '(' → logprob: -5.218159198760986
    10. '_' → logprob: -6.093159198760986

Token 22: '_row' (ID: 19157)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.20498007535934448
    2. 'tring' → logprob: -1.8299801349639893
    3. '()' → logprob: -4.07997989654541
    4. '())' → logprob: -6.70497989654541
    5. '_input' → logprob: -6.70497989654541
    6. '(tr' → logprob: -6.95497989654541
    7. '(' → logprob: -7.20497989654541
    8. 'trs' → logprob: -7.20497989654541
    9. '()]' → logprob: -7.45497989654541
    10. '_tr' → logprob: -7.45497989654541

Token 23: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4970094561576843
    2. '()]' → logprob: -1.247009515762329
    3. '()' → logprob: -2.622009515762329
    4. '('' → logprob: -4.49700927734375
    5. '(i' → logprob: -4.99700927734375
    6. 's' → logprob: -5.87200927734375
    7. '())' → logprob: -5.87200927734375
    8. ' (' → logprob: -6.12200927734375
    9. '(n' → logprob: -6.49700927734375
    10. ']' → logprob: -7.37200927734375

Token 24: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2197479009628296
    2. '()' → logprob: -1.7197479009628296
    3. '()]' → logprob: -4.094748020172119
    4. ']' → logprob: -6.969748020172119
    5. '[' → logprob: -8.594747543334961
    6. '(N' → logprob: -9.844747543334961
    7. '(i' → logprob: -9.969747543334961
    8. '(n' → logprob: -10.094747543334961
    9. 'for' → logprob: -10.219747543334961
    10. '('' → logprob: -10.469747543334961

Token 25: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18251752853393555
    2. ' _' → logprob: -2.1825175285339355
    3. ' range' → logprob: -2.9325175285339355
    4. 'range' → logprob: -8.182518005371094
    5. ' ' → logprob: -8.307518005371094
    6. ' i' → logprob: -8.807518005371094
    7. '_range' → logprob: -9.432518005371094
    8. ' in' → logprob: -10.182518005371094
    9. '	range' → logprob: -11.557518005371094
    10. ' xrange' → logprob: -13.307518005371094

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016217945143580437
    2. 'in' → logprob: -4.1412177085876465
    3. 'range' → logprob: -9.266218185424805
    4. ' ' → logprob: -10.266218185424805
    5. '	in' → logprob: -10.641218185424805
    6. 'i' → logprob: -11.641218185424805
    7. '  ' → logprob: -12.891218185424805
    8. ' i' → logprob: -12.891218185424805
    9. 'import' → logprob: -13.141218185424805
    10. 's' → logprob: -13.266218185424805

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804333135485649
    2. ' range' → logprob: -3.288043260574341
    3. '(range' → logprob: -13.913043022155762
    4. '	range' → logprob: -14.288043022155762
    5. '_range' → logprob: -16.288043975830078
    6. 'rang' → logprob: -16.538043975830078
    7. '```' → logprob: -16.913043975830078
    8. '.range' → logprob: -17.163043975830078
    9. 'Range' → logprob: -17.288043975830078
    10. 'ran' → logprob: -17.288043975830078

Token 28: '(M' (ID: 6103)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.033927369862794876
    2. '(' → logprob: -3.4089274406433105
    3. '(M' → logprob: -8.658926963806152
    4. ' (' → logprob: -9.408926963806152
    5. 'N' → logprob: -11.908926963806152
    6. ' N' → logprob: -12.408926963806152
    7. '(n' → logprob: -12.533926963806152
    8. ')' → logprob: -12.783926963806152
    9. '(
' → logprob: -12.908926963806152
    10. ' ' → logprob: -13.158926963806152

Token 29: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001976095838472247
    2. ']' → logprob: -6.376976013183594
    3. ')' → logprob: -8.251976013183594
    4. ' )' → logprob: -11.876976013183594
    5. ' ]' → logprob: -13.001976013183594
    6. '   ' → logprob: -13.751976013183594
    7. '')]' → logprob: -14.001976013183594
    8. '])]' → logprob: -14.751976013183594
    9. ')])' → logprob: -15.376976013183594
    10. ')],' → logprob: -15.376976013183594

Token 30: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44729167222976685
    2. '   ' → logprob: -1.822291612625122
    3. '```' → logprob: -2.197291612625122
    4. 'def' → logprob: -3.822291612625122
    5. '<|end|>' → logprob: -4.447291851043701
    6. 'return' → logprob: -4.447291851043701
    7. '    
' → logprob: -4.947291851043701
    8. ')' → logprob: -5.072291851043701
    9. '[' → logprob: -5.072291851043701
    10. ' ' → logprob: -5.447291851043701

Token 31: ' p' (ID: 275)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6330369114875793
    2. 'return' → logprob: -2.1330368518829346
    3. 'r' → logprob: -2.3830368518829346
    4. '
' → logprob: -2.5080368518829346
    5. '' → logprob: -3.3830368518829346
    6. ' ' → logprob: -3.3830368518829346
    7. '   ' → logprob: -3.7580368518829346
    8. '[' → logprob: -3.7580368518829346
    9. ']' → logprob: -4.258037090301514
    10. '```' → logprob: -4.258037090301514

Token 32: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005440551321953535
    2. 'ass' → logprob: -6.005440711975098
    3. '_r' → logprob: -6.880440711975098
    4. 'os' → logprob: -8.505440711975098
    5. '[]' → logprob: -9.005440711975098
    6. 'rocess' → logprob: -9.130440711975098
    7. '[' → logprob: -9.255440711975098
    8. 'a' → logprob: -9.255440711975098
    9. 'er' → logprob: -9.255440711975098
    10. '[:]' → logprob: -9.380440711975098

Token 33: ' read' (ID: 1729)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1023883819580078
    2. '0' → logprob: -1.8523883819580078
    3. '[' → logprob: -1.8523883819580078
    4. '[int' → logprob: -2.227388381958008
    5. ' [' → logprob: -2.352388381958008
    6. ' []' → logprob: -2.477388381958008
    7. 'int' → logprob: -3.602388381958008
    8. 'list' → logprob: -4.352388381958008
    9. ' ' → logprob: -4.852388381958008
    10. '1' → logprob: -4.977388381958008

Token 34: '_p' (ID: 1359)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.5558123588562012
    2. '_' → logprob: -1.0558123588562012
    3. '_p' → logprob: -2.930812358856201
    4. '_a' → logprob: -5.055812358856201
    5. '_input' → logprob: -5.305812358856201
    6. '_i' → logprob: -6.680812358856201
    7. '(' → logprob: -7.055812358856201
    8. 's' → logprob: -7.180812358856201
    9. '_m' → logprob: -7.305812358856201
    10. '_line' → logprob: -7.430812358856201

Token 35: '_row' (ID: 19157)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.629289448261261
    2. '(' → logprob: -1.2542893886566162
    3. '_' → logprob: -1.7542893886566162
    4. 's' → logprob: -6.504289627075195
    5. ''' → logprob: -6.754289627075195
    6. '_line' → logprob: -7.129289627075195
    7. '```' → logprob: -7.129289627075195
    8. '_row' → logprob: -8.129289627075195
    9. '_list' → logprob: -8.129289627075195
    10. '[]' → logprob: -8.254289627075195

Token 36: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20161283016204834
    2. '(' → logprob: -1.7016128301620483
    3. '()
' → logprob: -9.95161247253418
    4. '(
' → logprob: -10.32661247253418
    5. '()

' → logprob: -10.82661247253418
    6. '`()' → logprob: -11.32661247253418
    7. 's' → logprob: -11.45161247253418
    8. ' ()' → logprob: -11.70161247253418
    9. '(

' → logprob: -11.70161247253418
    10. '_' → logprob: -11.95161247253418

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30978694558143616
    2. '
' → logprob: -2.1847870349884033
    3. '<|end|>' → logprob: -2.5597870349884033
    4. ')' → logprob: -3.9347870349884033
    5. ' ' → logprob: -4.434786796569824
    6. '    
' → logprob: -4.684786796569824
    7. 'return' → logprob: -4.934786796569824
    8. '```' → logprob: -5.059786796569824
    9. '\n' → logprob: -5.184786796569824
    10. '\' → logprob: -5.434786796569824

Token 38: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04708095267415047
    2. '<|end|>' → logprob: -3.6720809936523438
    3. 'return' (adapté à ' return') → logprob: -4.672080993652344
    4. ' ' → logprob: -6.172080993652344
    5. '    
' → logprob: -6.422080993652344
    6. '
' → logprob: -6.547080993652344
    7. ')' → logprob: -6.672080993652344
    8. '  ' → logprob: -7.047080993652344
    9. '\n' → logprob: -7.172080993652344
    10. ' return' → logprob: -7.297080993652344

Token 39: ' N' (ID: 478)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.8394103050231934
    2. 'S' → logprob: -1.4644103050231934
    3. ' N' → logprob: -1.9644103050231934
    4. 'N' → logprob: -2.2144103050231934
    5. ' ' → logprob: -3.0894103050231934
    6. ' ' → logprob: -4.089410305023193
    7. ' p' → logprob: -5.339410305023193
    8. '(' → logprob: -5.714410305023193
    9. ' []' → logprob: -5.714410305023193
    10. ' (' → logprob: -5.964410305023193

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06332654505968094
    2. '<|end|>' → logprob: -2.938326597213745
    3. ' ,' → logprob: -5.438326358795166
    4. ',N' → logprob: -5.813326358795166
    5. ',M' → logprob: -7.563326358795166
    6. ',p' → logprob: -8.813326835632324
    7. '<|end|>' → logprob: -9.188326835632324
    8. ' ' → logprob: -9.813326835632324
    9. ')' → logprob: -9.938326835632324
    10. ',n' → logprob: -10.313326835632324

Token 41: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.38720834255218506
    2. 'M' → logprob: -1.137208342552185
    3. ' ' → logprob: -9.012207984924316
    4. ' ' → logprob: -9.012207984924316
    5. 'space' → logprob: -10.637207984924316
    6. '<|end|>' → logprob: -11.137207984924316
    7. ''' → logprob: -11.762207984924316
    8. 'S' → logprob: -11.887207984924316
    9. '‌' → logprob: -12.012207984924316
    10. '  ' → logprob: -12.012207984924316

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007849719258956611
    2. ',S' → logprob: -8.125784873962402
    3. ' ,' → logprob: -8.750784873962402
    4. ',p' → logprob: -9.250784873962402
    5. ',N' → logprob: -9.250784873962402
    6. ',
' → logprob: -9.250784873962402
    7. '<|end|>' → logprob: -11.125784873962402
    8. ',n' → logprob: -12.375784873962402
    9. ',M' → logprob: -12.875784873962402
    10. ')' → logprob: -13.125784873962402

Token 43: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.010408365167677402
    2. 'S' → logprob: -4.760408401489258
    3. ' p' → logprob: -7.135408401489258
    4. ' ' → logprob: -7.260408401489258
    5. ' ' → logprob: -9.010408401489258
    6. ''' → logprob: -9.885408401489258
    7. 'p' → logprob: -10.885408401489258
    8. 's' → logprob: -10.885408401489258
    9. '"' → logprob: -11.260408401489258
    10. '`' → logprob: -11.635408401489258

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003022156422957778
    2. ',p' → logprob: -5.878022193908691
    3. ' ,' → logprob: -9.253022193908691
    4. ',
' → logprob: -9.378022193908691
    5. ',n' → logprob: -11.128022193908691
    6. 'p' → logprob: -11.628022193908691
    7. '<|end|>' → logprob: -12.378022193908691
    8. '```' → logprob: -13.378022193908691
    9. ',N' → logprob: -14.128022193908691
    10. '‌,' → logprob: -14.628022193908691

Token 45: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.0037918882444500923
    2. 'p' → logprob: -5.628791809082031
    3. ' ' → logprob: -9.253791809082031
    4. ' ' → logprob: -9.378791809082031
    5. '```' → logprob: -13.378791809082031
    6. '<|end|>' → logprob: -13.378791809082031
    7. 's' → logprob: -13.628791809082031
    8. ''' → logprob: -13.878791809082031
    9. '`' → logprob: -13.878791809082031
    10. 'space' → logprob: -14.503791809082031

Token 46: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7656331658363342
    2. '
' → logprob: -1.3906331062316895
    3. '<|end|>' → logprob: -1.6406331062316895
    4. '```' → logprob: -3.3906331062316895
    5. '[' → logprob: -3.7656331062316895
    6. '#' → logprob: -4.2656331062316895
    7. '\' → logprob: -5.0156331062316895
    8. '' → logprob: -5.1406331062316895
    9. '<|end|>' → logprob: -6.6406331062316895
    10. ' ' → logprob: -6.8906331062316895

Token 47: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42148303985595703
    2. 'def' → logprob: -1.546483039855957
    3. '#' → logprob: -3.046483039855957
    4. '```' → logprob: -3.296483039855957
    5. 'd' → logprob: -4.171483039855957
    6. '<|end|>' → logprob: -4.546483039855957
    7. '\' → logprob: -4.921483039855957
    8. '' → logprob: -5.171483039855957
    9. '[' → logprob: -6.171483039855957
    10. '

' → logprob: -6.671483039855957

Token 48: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.007886147126555443
    2. ' space' → logprob: -5.882885932922363
    3. ' ' → logprob: -6.132885932922363
    4. ' process' → logprob: -7.632885932922363
    5. ' r' → logprob: -7.757885932922363
    6. '_' → logprob: -7.757885932922363
    7. ' calculate' → logprob: -7.757885932922363
    8. ' ' → logprob: -8.757885932922363
    9. ' compute' → logprob: -8.882885932922363
    10. ' main' → logprob: -9.007885932922363

Token 49: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.63597571849823
    2. '_s' → logprob: -0.76097571849823
    3. '_p' → logprob: -5.8859758377075195
    4. ' _' → logprob: -8.38597583770752
    5. 's' → logprob: -8.63597583770752
    6. ' ' → logprob: -9.63597583770752
    7. '_input' → logprob: -10.26097583770752
    8. '__' → logprob: -10.88597583770752
    9. '_a' → logprob: -11.01097583770752
    10. '_i' → logprob: -11.63597583770752

Token 50: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.6341299414634705
    2. '_' → logprob: -0.7591299414634705
    3. '_rows' → logprob: -7.509130001068115
    4. '_p' → logprob: -8.259129524230957
    5. '_r' → logprob: -9.134129524230957
    6. '_s' → logprob: -9.259129524230957
    7. '_Row' → logprob: -9.259129524230957
    8. '__' → logprob: -9.384129524230957
    9. '_t' → logprob: -9.884129524230957
    10. ' _' → logprob: -10.384129524230957

Token 51: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04697779566049576
    2. '(' → logprob: -3.1719777584075928
    3. '()' → logprob: -5.546977996826172
    4. '_' → logprob: -10.421977996826172
    5. ' ():' → logprob: -12.171977996826172
    6. '("("' → logprob: -12.171977996826172
    7. '()>' → logprob: -12.296977996826172
    8. '()(' → logprob: -12.796977996826172
    9. '(**' → logprob: -13.046977996826172
    10. '(()' → logprob: -13.171977996826172

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00395776703953743
    2. 'return' → logprob: -6.003957748413086
    3. ' return' → logprob: -6.628957748413086
    4. '    ' → logprob: -9.253957748413086
    5. 'int' → logprob: -10.128957748413086
    6. '   ' → logprob: -11.628957748413086
    7. '    
' → logprob: -13.128957748413086
    8. 'input' → logprob: -13.253957748413086
    9. '	return' → logprob: -13.378957748413086
    10. '```' → logprob: -13.753957748413086

Token 53: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09789098054170609
    2. 'input' → logprob: -3.347891092300415
    3. 'int' → logprob: -3.722891092300415
    4. ' return' → logprob: -4.472890853881836
    5. 'list' → logprob: -4.597890853881836
    6. '   ' → logprob: -4.847890853881836
    7. '[]' → logprob: -6.722890853881836
    8. '[' → logprob: -7.472890853881836
    9. 'map' → logprob: -7.472890853881836
    10. '[int' → logprob: -7.472890853881836

Token 54: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.31712526082992554
    2. ' list' → logprob: -1.4421253204345703
    3. 'input' → logprob: -4.44212532043457
    4. '[input' → logprob: -4.69212532043457
    5. '[list' → logprob: -5.19212532043457
    6. ' input' → logprob: -5.81712532043457
    7. '[' → logprob: -5.94212532043457
    8. ' [' → logprob: -5.94212532043457
    9. '[int' → logprob: -7.94212532043457
    10. '[]' → logprob: -9.56712532043457

Token 55: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01238331850618124
    2. 'input' → logprob: -5.762383460998535
    3. '0' → logprob: -6.012383460998535
    4. ' int' → logprob: -6.137383460998535
    5. 'i' → logprob: -6.262383460998535
    6. '*' → logprob: -7.262383460998535
    7. 'c' → logprob: -7.637383460998535
    8. 'False' → logprob: -7.762383460998535
    9. '1' → logprob: -8.637383460998535
    10. 'in' → logprob: -8.637383460998535

Token 56: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16586340963840485
    2. '(i' → logprob: -1.9158633947372437
    3. '(' → logprob: -5.540863513946533
    4. '(input' → logprob: -6.790863513946533
    5. '(s' → logprob: -7.665863513946533
    6. '(c' → logprob: -10.040863037109375
    7. '(a' → logprob: -10.540863037109375
    8. '(char' → logprob: -11.415863037109375
    9. '(token' → logprob: -12.040863037109375
    10. '(n' → logprob: -12.540863037109375

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04017685726284981
    2. '())' → logprob: -3.7901768684387207
    3. '()' → logprob: -4.415176868438721
    4. '(x' → logprob: -5.790176868438721
    5. '(input' → logprob: -6.915176868438721
    6. 'input' → logprob: -8.665176391601562
    7. '(' → logprob: -8.790176391601562
    8. 'for' → logprob: -8.790176391601562
    9. ' )' → logprob: -9.290176391601562
    10. ' for' → logprob: -11.290176391601562

Token 58: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12747792899608612
    2. 'for' → logprob: -2.8774778842926025
    3. ' for' → logprob: -4.002478122711182
    4. '(input' → logprob: -4.252478122711182
    5. '(' → logprob: -4.502478122711182
    6. '(i' → logprob: -4.627478122711182
    7. ')' → logprob: -5.377478122711182
    8. '()' → logprob: -5.627478122711182
    9. '(s' → logprob: -7.627478122711182
    10. '(token' → logprob: -8.127477645874023

Token 59: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0009165783412754536
    2. 'input' → logprob: -7.125916481018066
    3. ' in' → logprob: -10.000916481018066
    4. '<|end|>' → logprob: -10.375916481018066
    5. '(input' → logprob: -11.375916481018066
    6. '=input' → logprob: -12.000916481018066
    7. ' ' → logprob: -12.125916481018066
    8. ' x' → logprob: -12.375916481018066
    9. ' ' → logprob: -13.000916481018066
    10. '_input' → logprob: -13.625916481018066

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11559998244047165
    2. '.' → logprob: -2.3655998706817627
    3. 'in' → logprob: -4.615600109100342
    4. ' .' → logprob: -6.365600109100342
    5. '=input' → logprob: -6.490600109100342
    6. 'input' → logprob: -6.865600109100342
    7. '.input' → logprob: -8.615599632263184
    8. ' input' → logprob: -8.740599632263184
    9. ' ' → logprob: -8.990599632263184
    10. '	in' → logprob: -9.365599632263184

Token 61: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759412050247192
    2. ' input' → logprob: -0.8259412050247192
    3. '(input' → logprob: -13.70094108581543
    4. ' ' → logprob: -15.70094108581543
    5. '=input' → logprob: -15.70094108581543
    6. '<input' → logprob: -16.32594108581543
    7. '	input' → logprob: -16.57594108581543
    8. 'range' → logprob: -17.32594108581543
    9. '[input' → logprob: -17.45094108581543
    10. ' range' → logprob: -17.57594108581543

Token 62: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006319015519693494
    2. '()' → logprob: -7.375631809234619
    3. '()]' → logprob: -12.750632286071777
    4. '(' → logprob: -13.625632286071777
    5. ' ().' → logprob: -14.500632286071777
    6. '()].' → logprob: -15.250632286071777
    7. '())' → logprob: -15.500632286071777
    8. '().__' → logprob: -17.25063133239746
    9. '.split' → logprob: -17.87563133239746
    10. '.' → logprob: -18.25063133239746

Token 63: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043472214019857347
    2. 'strip' → logprob: -7.750434875488281
    3. 'rstrip' → logprob: -12.500434875488281
    4. 'spl' → logprob: -15.750434875488281
    5. ' split' → logprob: -16.00043487548828
    6. '(split' → logprob: -17.37543487548828
    7. '.split' → logprob: -21.75043487548828
    8. 'read' → logprob: -21.75043487548828
    9. 'startswith' → logprob: -22.00043487548828
    10. ')' → logprob: -22.12543487548828

Token 64: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.015332948416471481
    2. '())' → logprob: -4.26533317565918
    3. '()' → logprob: -6.76533317565918
    4. ')]' → logprob: -11.89033317565918
    5. '(' → logprob: -12.51533317565918
    6. '()][' → logprob: -13.26533317565918
    7. ']' → logprob: -13.64033317565918
    8. '()}' → logprob: -14.89033317565918
    9. '()]
' → logprob: -15.01533317565918
    10. ']()' → logprob: -15.01533317565918

Token 65: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.018638452515006065
    2. ']' → logprob: -4.018638610839844
    3. ')]' → logprob: -7.643638610839844
    4. ']()' → logprob: -12.268638610839844
    5. '()' → logprob: -13.518638610839844
    6. ' ]' → logprob: -13.768638610839844
    7. '])' → logprob: -14.018638610839844
    8. '()]
' → logprob: -14.893638610839844
    9. '(' → logprob: -15.143638610839844
    10. '`]' → logprob: -15.143638610839844

Token 66: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0053679910488426685
    2. '
' → logprob: -5.505367755889893
    3. '```' → logprob: -7.380367755889893
    4. '<|end|>' → logprob: -7.630367755889893
    5. '

' → logprob: -9.00536823272705
    6. ' def' → logprob: -10.88036823272705
    7. '<|end|>' → logprob: -11.25536823272705
    8. '``' → logprob: -12.25536823272705
    9. '\' → logprob: -13.00536823272705
    10. 'de' → logprob: -13.00536823272705

Token 67: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0017244421178475022
    2. 'read' → logprob: -6.3767242431640625
    3. ' main' → logprob: -11.251724243164062
    4. ' def' → logprob: -13.001724243164062
    5. '_read' → logprob: -13.376724243164062
    6. ' write' → logprob: -13.501724243164062
    7. '	read' → logprob: -13.751724243164062
    8. ' readline' → logprob: -14.126724243164062
    9. ' process' → logprob: -15.001724243164062
    10. 's' → logprob: -15.626724243164062

Token 68: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -12.125007629394531
    3. '_s' → logprob: -13.875007629394531
    4. 'p' → logprob: -14.125007629394531
    5. '__' → logprob: -16.62500762939453
    6. 's' → logprob: -17.50000762939453
    7. '_a' → logprob: -17.50000762939453
    8. ' _' → logprob: -18.00000762939453
    9. ' p' → logprob: -18.00000762939453
    10. '_c' → logprob: -19.25000762939453

Token 69: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -9.877503907773644e-05
    2. '_' → logprob: -9.500099182128906
    3. '_rows' → logprob: -11.125099182128906
    4. '()' → logprob: -12.875099182128906
    5. '_Row' → logprob: -13.000099182128906
    6. '_ROW' → logprob: -13.750099182128906
    7. '__' → logprob: -14.125099182128906
    8. '_line' → logprob: -14.250099182128906
    9. 'row' → logprob: -14.750099182128906
    10. '<Row' → logprob: -15.500099182128906

Token 70: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0087516784551553e-05
    2. ' ():' → logprob: -12.00001049041748
    3. '():
' → logprob: -12.87501049041748
    4. '()' → logprob: -13.87501049041748
    5. '()>' → logprob: -15.87501049041748
    6. '(' → logprob: -16.000009536743164
    7. '():

' → logprob: -16.500009536743164
    8. '():
' → logprob: -17.375009536743164
    9. ':' → logprob: -17.625009536743164
    10. '()">' → logprob: -18.500009536743164

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0068066720850765705
    2. 'return' → logprob: -5.00680685043335
    3. ' return' → logprob: -9.506806373596191
    4. '	return' → logprob: -12.381806373596191
    5. '   ' → logprob: -12.506806373596191
    6. '[' → logprob: -13.381806373596191
    7. '{return' → logprob: -13.381806373596191
    8. '[]' → logprob: -14.006806373596191
    9. '(' → logprob: -14.006806373596191
    10. '    ' → logprob: -14.256806373596191

Token 72: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004885758273303509
    2. '[int' → logprob: -6.129885673522949
    3. ' return' → logprob: -6.254885673522949
    4. '   ' → logprob: -7.254885673522949
    5. 'int' → logprob: -10.12988567352295
    6. '[' → logprob: -11.12988567352295
    7. '[]' → logprob: -12.00488567352295
    8. '	return' → logprob: -13.25488567352295
    9. '(int' → logprob: -13.37988567352295
    10. 'def' → logprob: -13.62988567352295

Token 73: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2000226527452469
    2. '[int' → logprob: -1.8250226974487305
    3. '[' → logprob: -4.0750226974487305
    4. '[list' → logprob: -6.0750226974487305
    5. ' list' → logprob: -7.9500226974487305
    6. '[input' → logprob: -9.07502269744873
    7. 'list' → logprob: -9.20002269744873
    8. ' ' → logprob: -9.95002269744873
    9. '[]' → logprob: -10.45002269744873
    10. '[len' → logprob: -10.82502269744873

Token 74: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.709308167453855e-05
    2. 'input' → logprob: -10.750086784362793
    3. 'float' → logprob: -11.500086784362793
    4. 'bool' → logprob: -11.500086784362793
    5. '1' → logprob: -11.875086784362793
    6. 'str' → logprob: -11.875086784362793
    7. '0' → logprob: -11.875086784362793
    8. '(int' → logprob: -12.375086784362793
    9. ' int' → logprob: -12.375086784362793
    10. 'i' → logprob: -12.625086784362793

Token 75: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.244413766078651e-05
    2. '(' → logprob: -9.750082015991211
    3. '(input' → logprob: -10.750082015991211
    4. ' (' → logprob: -13.500082015991211
    5. '(i' → logprob: -14.500082015991211
    6. '(s' → logprob: -14.625082015991211
    7. ']' → logprob: -16.50008201599121
    8. '](' → logprob: -16.87508201599121
    9. '```' → logprob: -17.25008201599121
    10. '(y' → logprob: -17.37508201599121

Token 76: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.29177549481391907
    2. '(' → logprob: -2.0417754650115967
    3. ')' → logprob: -2.2917754650115967
    4. 'for' → logprob: -5.041775703430176
    5. '(input' → logprob: -5.041775703430176
    6. ' for' → logprob: -5.291775703430176
    7. '()' → logprob: -6.791775703430176
    8. '(i' → logprob: -6.916775703430176
    9. '(in' → logprob: -7.291775703430176
    10. 'in' → logprob: -8.416775703430176

Token 77: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07299122214317322
    2. 'for' → logprob: -3.197991132736206
    3. ')' → logprob: -3.947991132736206
    4. '(' → logprob: -4.822991371154785
    5. '(input' → logprob: -7.072991371154785
    6. ' in' → logprob: -7.697991371154785
    7. ' (' → logprob: -8.072991371154785
    8. ']' → logprob: -8.197991371154785
    9. '(x' → logprob: -8.447991371154785
    10. ' ' → logprob: -11.447991371154785

Token 78: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.009479692205786705
    2. 'input' → logprob: -4.884479522705078
    3. '(input' → logprob: -6.384479522705078
    4. '(' → logprob: -8.759479522705078
    5. '_' → logprob: -11.759479522705078
    6. ' ' → logprob: -12.134479522705078
    7. ' x' → logprob: -12.384479522705078
    8. '_input' → logprob: -12.509479522705078
    9. '=input' → logprob: -13.634479522705078
    10. ' space' → logprob: -14.134479522705078

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3636695146560669
    2. 'in' → logprob: -1.238669514656067
    3. ' ' → logprob: -5.988669395446777
    4. '.' → logprob: -6.238669395446777
    5. 's' → logprob: -6.363669395446777
    6. '(input' → logprob: -6.363669395446777
    7. 'input' → logprob: -6.488669395446777
    8. '()' → logprob: -6.863669395446777
    9. 'import' → logprob: -7.488669395446777
    10. '	in' → logprob: -7.488669395446777

Token 80: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1002117469906807
    2. ' input' → logprob: -2.3502118587493896
    3. '(input' → logprob: -12.350212097167969
    4. '=input' → logprob: -15.600212097167969
    5. '	input' → logprob: -16.22521209716797
    6. '<input' → logprob: -16.47521209716797
    7. '_input' → logprob: -16.47521209716797
    8. ' ' → logprob: -16.85021209716797
    9. '[input' → logprob: -16.85021209716797
    10. '.input' → logprob: -16.97521209716797

Token 81: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02655351161956787
    2. '(' → logprob: -4.401553630828857
    3. '()' → logprob: -4.401553630828857
    4. '.' → logprob: -6.526553630828857
    5. '(.' → logprob: -8.9015531539917
    6. ')' → logprob: -10.9015531539917
    7. '().'' → logprob: -11.2765531539917
    8. '().__' → logprob: -11.9015531539917
    9. '(.)' → logprob: -11.9015531539917
    10. ' ().' → logprob: -12.0265531539917

Token 82: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. 'strip' → logprob: -15.125
    3. 'spl' → logprob: -16.875
    4. ' split' → logprob: -17.375
    5. '(split' → logprob: -18.0
    6. 'plit' → logprob: -18.625
    7. 's' → logprob: -18.75
    8. 'rstrip' → logprob: -18.875
    9. '_split' → logprob: -19.0
    10. 'read' → logprob: -19.0

Token 83: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.3802033066749573
    2. '()' → logprob: -1.6302032470703125
    3. '())' → logprob: -2.1302032470703125
    4. ')]' → logprob: -7.1302032470703125
    5. ')' → logprob: -7.3802032470703125
    6. ']()' → logprob: -9.880203247070312
    7. ']' → logprob: -10.130203247070312
    8. '(' → logprob: -10.380203247070312
    9. '()][' → logprob: -11.755203247070312
    10. '()}' → logprob: -13.005203247070312

Token 84: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ')
' → logprob: -13.750005722045898
    3. ' )' → logprob: -13.750005722045898
    4. '()' → logprob: -13.875005722045898
    5. ')]' → logprob: -14.000005722045898
    6. '))' → logprob: -14.625005722045898
    7. ']' → logprob: -14.750005722045898
    8. '）' → logprob: -15.625005722045898
    9. '())' → logprob: -15.625005722045898
    10. '])' → logprob: -16.3750057220459

Token 85: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2904162108898163
    2. 'd' → logprob: -1.5404162406921387
    3. 'def' → logprob: -4.415416240692139
    4. '
' → logprob: -5.165416240692139
    5. '\' → logprob: -5.415416240692139
    6. 'n' → logprob: -5.790416240692139
    7. '<|end|>' → logprob: -5.790416240692139
    8. '[' → logprob: -6.040416240692139
    9. '```' → logprob: -6.665416240692139
    10. '' → logprob: -6.790416240692139

Token 86: ' initialize' (ID: 18400)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.4439290761947632
    2. ' ' → logprob: -1.8189290761947632
    3. ' main' → logprob: -2.1939291954040527
    4. '_' → logprob: -3.5689291954040527
    5. ' find' → logprob: -4.068929195404053
    6. ' solve' → logprob: -4.443929195404053
    7. ' ' → logprob: -5.443929195404053
    8. '_space' → logprob: -5.693929195404053
    9. ' calculate' → logprob: -6.193929195404053
    10. ' compute' → logprob: -6.318929195404053

Token 87: '_T' (ID: 2154)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0052284253761172295
    2. '(' → logprob: -6.255228519439697
    3. ' _' → logprob: -6.255228519439697
    4. '_space' → logprob: -7.630228519439697
    5. '()' → logprob: -9.255228042602539
    6. '_array' → logprob: -9.505228042602539
    7. '(_' → logprob: -9.630228042602539
    8. '_states' → logprob: -10.380228042602539
    9. '```' → logprob: -10.380228042602539
    10. '_positions' → logprob: -10.505228042602539

Token 88: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0179838128387928
    2. '_' → logprob: -4.767983913421631
    3. '(' → logprob: -5.142983913421631
    4. '()' → logprob: -5.767983913421631
    5. ' ():' → logprob: -8.517983436584473
    6. '_:' → logprob: -9.267983436584473
    7. 's' → logprob: -12.017983436584473
    8. ' ()' → logprob: -12.142983436584473
    9. '(:' → logprob: -12.267983436584473
    10. '(_' → logprob: -12.267983436584473

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39428770542144775
    2. ',' → logprob: -1.1442877054214478
    3. ')' → logprob: -5.394287586212158
    4. ' ):' → logprob: -6.144287586212158
    5. ' ,' → logprob: -7.644287586212158
    6. ',N' → logprob: -9.894288063049316
    7. ',n' → logprob: -10.019288063049316
    8. '):
' → logprob: -10.394288063049316
    9. ' )' → logprob: -10.519288063049316
    10. '   ' → logprob: -12.019288063049316

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13941213488578796
    2. ' return' → logprob: -3.0144121646881104
    3. '[' → logprob: -3.1394121646881104
    4. ' T' → logprob: -4.264411926269531
    5. 'T' → logprob: -5.014411926269531
    6. 'return' → logprob: -5.389411926269531
    7. '    ' → logprob: -5.889411926269531
    8. ' [' → logprob: -5.889411926269531
    9. ' ' → logprob: -6.389411926269531
    10. '_' → logprob: -6.514411926269531

Token 91: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5215598344802856
    2. ' T' → logprob: -2.146559715270996
    3. 'return' (adapté à ' return') → logprob: -2.271559715270996
    4. 'T' → logprob: -2.771559715270996
    5. '   ' → logprob: -3.021559715270996
    6. ' [' → logprob: -3.271559715270996
    7. '[' → logprob: -3.521559715270996
    8. ' ' → logprob: -5.521559715270996
    9. '[T' → logprob: -7.021559715270996
    10. 'import' → logprob: -7.271559715270996

Token 92: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10152114182710648
    2. '[[' → logprob: -2.3515212535858154
    3. '[N' → logprob: -7.476521015167236
    4. '[-' → logprob: -7.601521015167236
    5. ' [' → logprob: -9.726521492004395
    6. '[n' → logprob: -10.351521492004395
    7. '[int' → logprob: -10.476521492004395
    8. ' [[' → logprob: -10.601521492004395
    9. '[list' → logprob: -10.851521492004395
    10. '{' → logprob: -11.351521492004395

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09365327656269073
    2. 'False' → logprob: -2.8436532020568848
    3. '[' → logprob: -4.343653202056885
    4. '-' → logprob: -5.218653202056885
    5. 'float' → logprob: -5.468653202056885
    6. '1' → logprob: -6.093653202056885
    7. '[]' → logprob: -6.343653202056885
    8. 'None' → logprob: -6.593653202056885
    9. 'True' → logprob: -6.593653202056885
    10. ' ' → logprob: -7.718653202056885

Token 94: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016858834773302078
    2. ']*' → logprob: -4.64185905456543
    3. ' for' → logprob: -5.14185905456543
    4. ' ]' → logprob: -7.01685905456543
    5. ']*(' → logprob: -8.39185905456543
    6. 'for' → logprob: -9.39185905456543
    7. ',' → logprob: -11.64185905456543
    8. ' ' → logprob: -11.89185905456543
    9. ')' → logprob: -13.26685905456543
    10. ']+' → logprob: -13.26685905456543

Token 95: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08190019428730011
    2. ' *' → logprob: -2.581900119781494
    3. '*N' → logprob: -7.206900119781494
    4. '0' → logprob: -7.331900119781494
    5. ' for' → logprob: -7.706900119781494
    6. ' ' → logprob: -8.081900596618652
    7. '+' → logprob: -8.206900596618652
    8. '[' → logprob: -9.206900596618652
    9. ',' → logprob: -9.331900596618652
    10. ']' → logprob: -9.831900596618652

Token 96: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0053168851882219315
    2. ' N' → logprob: -5.255316734313965
    3. '(N' → logprob: -9.630316734313965
    4. ' (' → logprob: -11.255316734313965
    5. '(' → logprob: -12.380316734313965
    6. '	N' → logprob: -16.00531768798828
    7. ' ' → logprob: -17.50531768798828
    8. ' ' → logprob: -17.63031768798828
    9. '_N' → logprob: -19.13031768798828
    10. 'Ｎ' → logprob: -19.13031768798828

Token 97: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4930989742279053
    2. 'def' → logprob: -1.1180989742279053
    3. '

' → logprob: -3.3680989742279053
    4. '<|end|>' → logprob: -4.243099212646484
    5. 'd' → logprob: -5.743099212646484
    6. '#' → logprob: -5.743099212646484
    7. '\' → logprob: -6.118099212646484
    8. '' → logprob: -6.743099212646484
    9. '```' → logprob: -7.243099212646484
    10. '[' → logprob: -7.368099212646484

Token 98: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4504026472568512
    2. '
' → logprob: -1.2004026174545288
    3. '

' → logprob: -3.4504027366638184
    4. 'd' → logprob: -3.9504027366638184
    5. '<|end|>' → logprob: -5.450402736663818
    6. '#' → logprob: -6.575402736663818
    7. '\' → logprob: -6.825402736663818
    8. '' → logprob: -7.075402736663818
    9. '```' → logprob: -7.450402736663818
    10. '[' → logprob: -8.20040225982666

Token 99: ' update' (ID: 4027)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8491083979606628
    2. ' calculate' → logprob: -1.8491084575653076
    3. ' count' → logprob: -2.0991084575653076
    4. ' update' → logprob: -2.3491084575653076
    5. ' compute' → logprob: -2.5991084575653076
    6. ' main' → logprob: -3.0991084575653076
    7. ' find' → logprob: -3.8491084575653076
    8. ' process' → logprob: -4.3491082191467285
    9. ' simulate' → logprob: -4.9741082191467285
    10. ' initialize' → logprob: -5.3491082191467285

Token 100: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.005987693555653095
    2. '_' → logprob: -5.130987644195557
    3. ' _' → logprob: -10.880988121032715
    4. '```' → logprob: -11.380988121032715
    5. '_(' → logprob: -12.130988121032715
    6. '(' → logprob: -12.380988121032715
    7. 'T' → logprob: -13.255988121032715
    8. '_P' → logprob: -13.505988121032715
    9. '__' → logprob: -13.630988121032715
    10. '_t' → logprob: -13.630988121032715

Token 101: '_from' (ID: 12526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08428846299648285
    2. '(T' → logprob: -2.9592883586883545
    3. '(N' → logprob: -3.5842883586883545
    4. ' (' → logprob: -6.834288597106934
    5. '(S' → logprob: -9.709288597106934
    6. '(_' → logprob: -11.084288597106934
    7. '(i' → logprob: -11.584288597106934
    8. '(n' → logprob: -11.834288597106934
    9. '_T' → logprob: -11.959288597106934
    10. '(I' → logprob: -11.959288597106934

Token 102: '_i' (ID: 10853)
  Prédit: '_S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.14151106774806976
    2. '_s' → logprob: -2.5165109634399414
    3. 'S' → logprob: -4.016510963439941
    4. '_p' → logprob: -4.016510963439941
    5. '_' → logprob: -4.641510963439941
    6. '(S' → logprob: -6.016510963439941
    7. '(' → logprob: -6.766510963439941
    8. '_P' → logprob: -8.016510963439941
    9. 's' → logprob: -8.016510963439941
    10. 'p' → logprob: -8.141510963439941

Token 103: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5153811573982239
    2. '(N' → logprob: -1.015381097793579
    3. '(n' → logprob: -4.015381336212158
    4. '(i' → logprob: -5.265381336212158
    5. '(T' → logprob: -5.515381336212158
    6. 'nd' → logprob: -5.890381336212158
    7. ' (' → logprob: -6.015381336212158
    8. '(nd' → logprob: -6.390381336212158
    9. '(_' → logprob: -6.640381336212158
    10. '_i' → logprob: -7.265381336212158

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.059335362166166306
    2. ',i' → logprob: -3.434335470199585
    3. '(i' → logprob: -3.934335470199585
    4. ' ,' → logprob: -5.184335231781006
    5. '(' → logprob: -9.434335708618164
    6. '(N' → logprob: -10.309335708618164
    7. ' (' → logprob: -10.309335708618164
    8. '[i' → logprob: -11.184335708618164
    9. ',N' → logprob: -11.184335708618164
    10. ' i' → logprob: -11.434335708618164

Token 105: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6176162362098694
    2. ' S' → logprob: -0.8676162362098694
    3. 'i' → logprob: -3.9926161766052246
    4. 'S' → logprob: -4.117616176605225
    5. ' p' → logprob: -6.117616176605225
    6. ' M' → logprob: -6.492616176605225
    7. ' s' → logprob: -7.117616176605225
    8. ')' → logprob: -7.742616176605225
    9. 's' → logprob: -8.367616653442383
    10. ' N' → logprob: -8.992616653442383

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002742350334301591
    2. ' ,' → logprob: -6.627742290496826
    3. '):' → logprob: -6.627742290496826
    4. ')' → logprob: -10.002742767333984
    5. ',T' → logprob: -11.627742767333984
    6. ',N' → logprob: -12.252742767333984
    7. ' ):' → logprob: -12.377742767333984
    8. ',S' → logprob: -12.627742767333984
    9. ',i' → logprob: -13.127742767333984
    10. ',n' → logprob: -13.127742767333984

Token 107: ' N' (ID: 478)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.04801477491855621
    2. ' M' → logprob: -3.9230148792266846
    3. ' p' → logprob: -4.7980146408081055
    4. 'S' → logprob: -5.0480146408081055
    5. ' j' → logprob: -6.1730146408081055
    6. ' ' → logprob: -6.4230146408081055
    7. ' s' → logprob: -6.4230146408081055
    8. ' N' → logprob: -6.4230146408081055
    9. ' value' → logprob: -7.1105146408081055
    10. ' val' → logprob: -7.7355146408081055

Token 108: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021060874685645103
    2. '):' → logprob: -3.8960609436035156
    3. ' ,' → logprob: -7.896060943603516
    4. ')' → logprob: -9.396060943603516
    5. ' ):' → logprob: -10.646060943603516
    6. '+' → logprob: -12.021060943603516
    7. ',p' → logprob: -12.521060943603516
    8. ',s' → logprob: -13.021060943603516
    9. ',S' → logprob: -13.021060943603516
    10. '   ' → logprob: -13.146060943603516

Token 109: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3646029233932495
    2. ' :' → logprob: -1.3646029233932495
    3. '   ' → logprob: -3.989603042602539
    4. ' ' → logprob: -3.989603042602539
    5. '    ' → logprob: -5.489603042602539
    6. ',' → logprob: -5.864603042602539
    7. ' :
' → logprob: -6.614603042602539
    8. ' ,' → logprob: -6.739603042602539
    9. '[' → logprob: -7.614603042602539
    10. ':
' → logprob: -7.739603042602539

Token 110: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5893884897232056
    2. 'for' (adapté à ' for') → logprob: -1.2143884897232056
    3. '   ' → logprob: -2.089388370513916
    4. ' if' → logprob: -4.339388370513916
    5. 'if' → logprob: -4.964388370513916
    6. '    ' → logprob: -6.089388370513916
    7. ' while' → logprob: -7.214388370513916
    8. 'while' → logprob: -8.214388847351074
    9. ' i' → logprob: -8.589388847351074
    10. 'j' → logprob: -8.714388847351074

Token 111: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.004264300689101219
    2. 'j' → logprob: -5.8792643547058105
    3. ' x' → logprob: -7.5042643547058105
    4. ' k' → logprob: -8.254263877868652
    5. ' _' → logprob: -8.254263877868652
    6. ' ' → logprob: -9.254263877868652
    7. '_j' → logprob: -9.879263877868652
    8. '_' → logprob: -10.004263877868652
    9. ' i' → logprob: -10.004263877868652
    10. ' range' → logprob: -10.129263877868652

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010380757041275501
    2. 'in' → logprob: -4.635380744934082
    3. ' ' → logprob: -7.760380744934082
    4. 'range' → logprob: -9.760380744934082
    5. '   ' → logprob: -10.260380744934082
    6. '	in' → logprob: -10.510380744934082
    7. '    ' → logprob: -10.885380744934082
    8. '+' → logprob: -12.010380744934082
    9. ',' → logprob: -12.135380744934082
    10. '=' → logprob: -12.197880744934082

Token 113: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31329020857810974
    2. ' range' → logprob: -1.3132902383804321
    3. '(range' → logprob: -11.1882905960083
    4. '	range' → logprob: -11.8132905960083
    5. '   ' → logprob: -12.3132905960083
    6. ' ' → logprob: -14.1882905960083
    7. ' xrange' → logprob: -14.1882905960083
    8. 'rang' → logprob: -14.8132905960083
    9. '  ' → logprob: -15.3132905960083
    10. 'ange' → logprob: -15.9382905960083

Token 114: '(N' (ID: 10564)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.016116950660943985
    2. '(' → logprob: -4.266117095947266
    3. '(N' → logprob: -6.266117095947266
    4. '(j' → logprob: -10.516117095947266
    5. '(n' → logprob: -11.141117095947266
    6. '(I' → logprob: -13.016117095947266
    7. ' (' → logprob: -13.141117095947266
    8. '(T' → logprob: -13.641117095947266
    9. ' i' → logprob: -13.766117095947266
    10. '()' → logprob: -14.016117095947266

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027550550177693367
    2. '):
' → logprob: -3.652550458908081
    3. '   ' → logprob: -7.52755069732666
    4. '-' → logprob: -8.40255069732666
    5. ' ):' → logprob: -8.90255069732666
    6. ',' → logprob: -9.27755069732666
    7. ',i' → logprob: -9.90255069732666
    8. '-i' → logprob: -10.02755069732666
    9. ':' → logprob: -10.40255069732666
    10. '[i' → logprob: -10.65255069732666

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015227762050926685
    2. ' ' → logprob: -5.140227794647217
    3. '<|end|>' → logprob: -5.765227794647217
    4. ' if' → logprob: -6.390227794647217
    5. '        ' → logprob: -7.015227794647217
    6. ':' → logprob: -7.140227794647217
    7. '    ' → logprob: -7.515227794647217
    8. ',' → logprob: -8.015227317810059
    9. '   ' → logprob: -8.265227317810059
    10. '[' → logprob: -8.765227317810059

Token 117: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6320856809616089
    2. ' T' → logprob: -1.6320856809616089
    3. ' if' → logprob: -2.1320858001708984
    4. ' ' → logprob: -2.3820858001708984
    5. 'T' → logprob: -3.7570858001708984
    6. '        ' → logprob: -4.507085800170898
    7. 'if' (adapté à ' if') → logprob: -4.757085800170898
    8. '0' → logprob: -5.882085800170898
    9. '    ' → logprob: -5.882085800170898
    10. '   ' → logprob: -6.132085800170898

Token 118: ' ((' (ID: 3536)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.7331547141075134
    2. ' T' → logprob: -1.3581547737121582
    3. ' i' → logprob: -2.108154773712158
    4. ' j' → logprob: -2.358154773712158
    5. 'j' → logprob: -4.358154773712158
    6. ' ' → logprob: -4.358154773712158
    7. 'S' → logprob: -5.108154773712158
    8. ' (' → logprob: -5.108154773712158
    9. 'T' → logprob: -6.233154773712158
    10. '    ' → logprob: -6.233154773712158

Token 119: 'i' (ID: 72)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6726624965667725
    2. 'i' → logprob: -1.4226624965667725
    3. 'T' → logprob: -2.4226624965667725
    4. ' S' → logprob: -2.5476624965667725
    5. ' i' → logprob: -3.4226624965667725
    6. ' T' → logprob: -3.5476624965667725
    7. ' (' → logprob: -5.172662734985352
    8. 'j' → logprob: -5.297662734985352
    9. '   ' → logprob: -5.922662734985352
    10. '(S' → logprob: -6.297662734985352

Token 120: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.3124684989452362
    2. ' &' → logprob: -1.9374685287475586
    3. '>>' → logprob: -2.3124685287475586
    4. '+' → logprob: -4.937468528747559
    5. ' +' → logprob: -5.312468528747559
    6. ')' → logprob: -5.937468528747559
    7. '&' → logprob: -6.187468528747559
    8. ' ==' → logprob: -6.562468528747559
    9. ' ' → logprob: -6.687468528747559
    10. '[j' → logprob: -6.937468528747559

Token 121: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004702226258814335
    2. ' j' → logprob: -5.379702091217041
    3. '   ' → logprob: -9.7547025680542
    4. '1' → logprob: -11.5047025680542
    5. '(' → logprob: -12.6297025680542
    6. '(j' → logprob: -12.8797025680542
    7. ' ' → logprob: -13.0047025680542
    8. '	j' → logprob: -13.0047025680542
    9. '    ' → logprob: -13.7547025680542
    10. ' (' → logprob: -14.3797025680542

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003123439964838326
    2. ' )' → logprob: -8.375312805175781
    3. ')&' → logprob: -9.500312805175781
    4. '&' → logprob: -12.750312805175781
    5. '1' → logprob: -13.500312805175781
    6. '))' → logprob: -14.000312805175781
    7. '&)' → logprob: -14.375312805175781
    8. '0' → logprob: -15.625312805175781
    9. ')
' → logprob: -15.750312805175781
    10. '）' → logprob: -15.750312805175781

Token 123: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004588314797729254
    2. ')&' → logprob: -5.8795881271362305
    3. ' )' → logprob: -6.5045881271362305
    4. '&' → logprob: -8.25458812713623
    5. ' &' → logprob: -11.37958812713623
    6. '&)' → logprob: -11.75458812713623
    7. '&amp' → logprob: -13.37958812713623
    8. '1' → logprob: -14.12958812713623
    9. ' &)' → logprob: -14.12958812713623
    10. '0' → logprob: -14.12958812713623

Token 124: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759801864624023
    2. ' ' → logprob: -0.8259801864624023
    3. ')' → logprob: -10.950980186462402
    4. ' ' → logprob: -11.700980186462402
    5. '0' → logprob: -11.950980186462402
    6. '
' → logprob: -12.950980186462402
    7. '   ' → logprob: -13.700980186462402
    8. '```' → logprob: -14.075980186462402
    9. '<|end|>' → logprob: -14.325980186462402
    10. ' )' → logprob: -14.388480186462402

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001830410328693688
    2. ' ' → logprob: -8.62518310546875
    3. '   ' → logprob: -13.62518310546875
    4. '0' → logprob: -13.62518310546875
    5. ')' → logprob: -15.37518310546875
    6. '```' → logprob: -15.62518310546875
    7. '  ' → logprob: -16.00018310546875
    8. '
' → logprob: -16.25018310546875
    9. '(' → logprob: -16.56268310546875
    10. '<|end|>' → logprob: -16.75018310546875

Token 126: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022146080154925585
    2. '):' → logprob: -6.627214431762695
    3. ')==' → logprob: -7.127214431762695
    4. ' )' → logprob: -9.752214431762695
    5. '):
' → logprob: -11.127214431762695
    6. '):

' → logprob: -13.002214431762695
    7. '==' → logprob: -13.252214431762695
    8. ')>' → logprob: -13.502214431762695
    9. ')=' → logprob: -13.627214431762695
    10. ')!=' → logprob: -13.627214431762695

Token 127: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07890807837247849
    2. ' ' → logprob: -3.0789079666137695
    3. '       ' → logprob: -5.0789079666137695
    4. '               ' → logprob: -5.2039079666137695
    5. '            ' → logprob: -5.9539079666137695
    6. ':' → logprob: -6.2039079666137695
    7. '        ' → logprob: -6.3289079666137695
    8. ' 
' → logprob: -6.5789079666137695
    9. '            
' → logprob: -6.5789079666137695
    10. '0' → logprob: -6.8289079666137695

Token 128: ' increment' (ID: 24032)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.13306938111782074
    2. 'T' → logprob: -2.2580692768096924
    3. ' ' → logprob: -4.5080695152282715
    4. ' continue' → logprob: -6.1330695152282715
    5. '           ' → logprob: -6.2580695152282715
    6. '            ' → logprob: -6.5080695152282715
    7. 'continue' → logprob: -7.6330695152282715
    8. ' for' → logprob: -7.7580695152282715
    9. ' 
' → logprob: -8.133069038391113
    10. '    ' → logprob: -8.258069038391113

Token 129: '_T' (ID: 2154)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.494851291179657
    2. '_T' → logprob: -1.7448513507843018
    3. '(T' → logprob: -2.8698513507843018
    4. ' =' → logprob: -2.8698513507843018
    5. '=' → logprob: -3.2448513507843018
    6. 'T' → logprob: -3.8698513507843018
    7. '_' → logprob: -4.369851112365723
    8. '(' → logprob: -4.994851112365723
    9. ')' → logprob: -5.744851112365723
    10. ' ' → logprob: -5.869851112365723

Token 130: '_j' (ID: 12021)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.20742344856262207
    2. '[T' → logprob: -2.082423448562622
    3. '(' → logprob: -3.707423448562622
    4. '[i' → logprob: -4.457423210144043
    5. '[j' → logprob: -4.707423210144043
    6. '[' → logprob: -5.082423210144043
    7. 's' → logprob: -5.457423210144043
    8. '(i' → logprob: -6.207423210144043
    9. '=' → logprob: -6.707423210144043
    10. ' =' → logprob: -7.582423210144043

Token 131: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.032112788408994675
    2. '(' → logprob: -3.9071128368377686
    3. '[T' → logprob: -4.9071125984191895
    4. '=' → logprob: -7.0321125984191895
    5. 's' → logprob: -7.2821125984191895
    6. ' (' → logprob: -7.2821125984191895
    7. ' =' → logprob: -7.4071125984191895
    8. '[' → logprob: -8.157113075256348
    9. ' ' → logprob: -8.907113075256348
    10. '()' → logprob: -9.157113075256348

Token 132: ',' (ID: 11)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.19600661098957062
    2. ',j' → logprob: -2.3210065364837646
    3. ',' → logprob: -3.1960065364837646
    4. '[j' → logprob: -4.071006774902344
    5. '(' → logprob: -4.071006774902344
    6. ')' → logprob: -5.946006774902344
    7. ' ,' → logprob: -7.071006774902344
    8. 'j' → logprob: -8.196006774902344
    9. ')(' → logprob: -8.321006774902344
    10. ' (' → logprob: -8.321006774902344

Token 133: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.018666651099920273
    2. ' j' → logprob: -4.018666744232178
    3. ')' → logprob: -7.893666744232178
    4. '<|end|>' → logprob: -9.64366626739502
    5. '	j' → logprob: -10.64366626739502
    6. ' ' → logprob: -10.89366626739502
    7. 'i' → logprob: -12.01866626739502
    8. 'N' → logprob: -12.51866626739502
    9. '_j' → logprob: -12.64366626739502
    10. ',j' → logprob: -12.83116626739502

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013908311957493424
    2. ',' → logprob: -7.0013909339904785
    3. ' )' → logprob: -8.12639045715332
    4. ')
' → logprob: -8.87639045715332
    5. ');' → logprob: -11.62639045715332
    6. ' ' → logprob: -12.25139045715332
    7. '<|end|>' → logprob: -12.25139045715332
    8. ' ,' → logprob: -12.37639045715332
    9. ')

' → logprob: -12.62639045715332
    10. ',)' → logprob: -13.25139045715332

Token 135: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35581278800964355
    2. '<|end|>' → logprob: -1.3558127880096436
    3. '\n' → logprob: -3.6058127880096436
    4. ' 
' → logprob: -4.855813026428223
    5. ' ' → logprob: -6.355813026428223
    6. '  
' → logprob: -6.605813026428223
    7. 'newline' → logprob: -7.230813026428223
    8. '    
' → logprob: -7.230813026428223
    9. '<|end|>' → logprob: -7.355813026428223
    10. '   ' → logprob: -7.980813026428223

Token 137: ' T' (ID: 353)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6465389728546143
    2. ' None' → logprob: -1.1465389728546143
    3. 'None' → logprob: -2.2715389728546143
    4. ' T' → logprob: -3.3965389728546143
    5. '<|end|>' → logprob: -4.146538734436035
    6. 'T' → logprob: -5.771538734436035
    7. ' True' → logprob: -7.021538734436035
    8. 'False' → logprob: -7.521538734436035
    9. ' False' → logprob: -7.896538734436035
    10. ' 
' → logprob: -8.146538734436035

Token 138: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' increment' (ID: 24032)
  Prédit: ' increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increment' → logprob: -0.0641990527510643
    2. 'increment' → logprob: -2.8141989707946777
    3. ' update' → logprob: -7.189198970794678
    4. ' main' → logprob: -8.564199447631836
    5. ' decrement' → logprob: -8.564199447631836
    6. ' process' → logprob: -8.689199447631836
    7. '_increment' → logprob: -8.814199447631836
    8. ' initialize' → logprob: -8.939199447631836
    9. ' calculate' → logprob: -9.189199447631836
    10. ' solve' → logprob: -9.439199447631836

Token 141: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.0010390023235231638
    2. '_' → logprob: -6.876039028167725
    3. ' _' → logprob: -12.626038551330566
    4. '```' → logprob: -14.126038551330566
    5. '##_' → logprob: -14.251038551330566
    6. '_Tis' → logprob: -14.376038551330566
    7. '_S' → logprob: -15.876038551330566
    8. '_P' → logprob: -16.251039505004883
    9. ')_' → logprob: -16.501039505004883
    10. '_t' → logprob: -16.751039505004883

Token 142: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.026411887258291245
    2. '_' → logprob: -3.651411771774292
    3. '(' → logprob: -9.651412010192871
    4. '_(' → logprob: -10.651412010192871
    5. '```' → logprob: -12.026412010192871
    6. '_t' → logprob: -12.151412010192871
    7. '(_' → logprob: -12.776412010192871
    8. '_i' → logprob: -13.276412010192871
    9. '(j' → logprob: -13.276412010192871
    10. '_js' → logprob: -13.401412010192871

Token 143: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.386875182390213
    2. '(' → logprob: -1.1368751525878906
    3. '(
' → logprob: -13.26187515258789
    4. ' (' → logprob: -13.38687515258789
    5. '(

' → logprob: -15.51187515258789
    6. '(t' → logprob: -15.76187515258789
    7. 'def' → logprob: -16.63687515258789
    8. '(Task' → logprob: -17.13687515258789
    9. '```' → logprob: -17.26187515258789
    10. '<|end|>' → logprob: -17.51187515258789

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002258277963846922
    2. ',j' → logprob: -8.750226020812988
    3. ' ,' → logprob: -9.625226020812988
    4. '‌,' → logprob: -15.250226020812988
    5. ')' → logprob: -15.500226020812988
    6. 'j' → logprob: -15.625226020812988
    7. ' ' → logprob: -15.750226020812988
    8. '<|end|>' → logprob: -15.875226020812988
    9. '[j' → logprob: -16.250225067138672
    10. ' j' → logprob: -16.750225067138672

Token 145: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4745028614997864
    2. ' j' → logprob: -0.9745028614997864
    3. '<|end|>' → logprob: -7.974503040313721
    4. ' ' → logprob: -9.474502563476562
    5. ')' → logprob: -13.599502563476562
    6. '  ' → logprob: -13.974502563476562
    7. '	j' → logprob: -14.599502563476562
    8. '   ' → logprob: -14.724502563476562
    9. '_j' → logprob: -14.974502563476562
    10. '<|end|>' → logprob: -15.099502563476562

Token 146: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013979760697111487
    2. ')' → logprob: -6.876398086547852
    3. ' ):' → logprob: -8.626398086547852
    4. '):
' → logprob: -8.626398086547852
    5. '   ' → logprob: -13.251398086547852
    6. ' )' → logprob: -13.626398086547852
    7. ' ' → logprob: -14.376398086547852
    8. '):
' → logprob: -14.501398086547852
    9. ')：' → logprob: -15.001398086547852
    10. ',' → logprob: -15.126398086547852

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29958075284957886
    2. 'T' → logprob: -2.0495808124542236
    3. ' T' → logprob: -2.0495808124542236
    4. '	T' → logprob: -6.7995805740356445
    5. ' ' → logprob: -10.174580574035645
    6. '    
' → logprob: -10.424580574035645
    7. '(T' → logprob: -10.674580574035645
    8. '       ' → logprob: -10.924580574035645
    9. '  ' → logprob: -11.299580574035645
    10. '```' → logprob: -11.549580574035645

Token 148: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -0.02992624044418335
    2. ' T' → logprob: -3.529926300048828
    3. '   ' → logprob: -8.654926300048828
    4. '	T' → logprob: -14.154926300048828
    5. ' ' → logprob: -14.779926300048828
    6. '  ' → logprob: -16.154926300048828
    7. '
' → logprob: -16.904926300048828
    8. '(T' → logprob: -16.904926300048828
    9. '1' → logprob: -17.529926300048828
    10. ' ' → logprob: -17.529926300048828

Token 149: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00010998018842656165
    2. '[' → logprob: -9.125109672546387
    3. ' [' → logprob: -14.375109672546387
    4. '```' → logprob: -15.000109672546387
    5. '[js' → logprob: -16.500110626220703
    6. '[i' → logprob: -17.625110626220703
    7. '[
' → logprob: -18.250110626220703
    8. 'j' → logprob: -18.375110626220703
    9. '\[' → logprob: -18.750110626220703
    10. '	j' → logprob: -18.875110626220703

Token 150: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002986392646562308
    2. ']+=' → logprob: -8.250298500061035
    3. ')' → logprob: -10.500298500061035
    4. ' ]' → logprob: -11.625298500061035
    5. ']+' → logprob: -14.875298500061035
    6. ')]' → logprob: -15.625298500061035
    7. '   ' → logprob: -16.00029945373535
    8. '])' → logprob: -16.00029945373535
    9. ']=' → logprob: -17.12529945373535
    10. '']' → logprob: -17.37529945373535

Token 151: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2565045952796936
    2. ' +=' → logprob: -1.5065045356750488
    3. '+' → logprob: -5.506504535675049
    4. '=' → logprob: -7.631504535675049
    5. ' =' → logprob: -11.881505012512207
    6. '<|end|>' → logprob: -12.131505012512207
    7. ']+=' → logprob: -12.631505012512207
    8. '+='' → logprob: -13.381505012512207
    9. ' ' → logprob: -14.256505012512207
    10. ' +' → logprob: -14.256505012512207

Token 152: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020616286201402545
    2. ' ' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.125205993652344
    4. '2' → logprob: -15.750205993652344
    5. '```' → logprob: -16.312705993652344
    6. '  ' → logprob: -16.500205993652344
    7. '10' → logprob: -16.937705993652344
    8. '<|end|>' → logprob: -17.312705993652344
    9. '
' → logprob: -17.750205993652344
    10. '0' → logprob: -18.250205993652344

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.375011444091797
    4. '2' → logprob: -15.250011444091797
    5. '```' → logprob: -16.625011444091797
    6. '10' → logprob: -16.875011444091797
    7. '  ' → logprob: -17.250011444091797
    8. '100' → logprob: -17.437511444091797
    9. '0' → logprob: -17.562511444091797
    10. '<|end|>' → logprob: -17.625011444091797

Token 154: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3389032185077667
    2. '#' → logprob: -1.7139031887054443
    3. '<|end|>' → logprob: -2.5889031887054443
    4. 'd' → logprob: -3.9639031887054443
    5. '```' → logprob: -6.088903427124023
    6. '\' → logprob: -6.338903427124023
    7. '<|end|>' → logprob: -6.713903427124023
    8. '[' → logprob: -6.713903427124023
    9. 'a' → logprob: -6.838903427124023
    10. 'n' → logprob: -6.838903427124023

Token 156: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07783869653940201
    2. ' solve' → logprob: -3.327838659286499
    3. 'main' → logprob: -3.577838659286499
    4. 'solve' → logprob: -5.327838897705078
    5. ' count' → logprob: -6.452838897705078
    6. ' find' → logprob: -6.827838897705078
    7. ' calculate' → logprob: -7.077838897705078
    8. ' check' → logprob: -7.327838897705078
    9. ' compute' → logprob: -7.952838897705078
    10. ' process' → logprob: -8.077838897705078

Token 157: '_all' (ID: 13305)
  Prédit: '_T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.11210813373327255
    2. '_' → logprob: -3.1121082305908203
    3. '_condition' → logprob: -4.11210823059082
    4. '_sum' → logprob: -4.73710823059082
    5. '_all' → logprob: -5.73710823059082
    6. '_S' → logprob: -5.86210823059082
    7. '_conditions' → logprob: -5.98710823059082
    8. '_constraints' → logprob: -6.23710823059082
    9. '_valid' → logprob: -6.36210823059082
    10. '_possible' → logprob: -6.48710823059082

Token 158: '_conditions' (ID: 136843)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2982196807861328
    2. '(' → logprob: -2.173219680786133
    3. '_' → logprob: -2.298219680786133
    4. '_T' → logprob: -2.298219680786133
    5. '_s' → logprob: -2.548219680786133
    6. '(T' → logprob: -2.798219680786133
    7. '_p' → logprob: -3.173219680786133
    8. '```' → logprob: -3.423219680786133
    9. '_on' → logprob: -4.048219680786133
    10. '_conditions' → logprob: -4.423219680786133

Token 159: '(N' (ID: 10564)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.07592736184597015
    2. '(' → logprob: -2.950927257537842
    3. ' (' → logprob: -3.950927257537842
    4. '():' → logprob: -6.950927257537842
    5. '(N' → logprob: -7.575927257537842
    6. ' ():' → logprob: -10.075927734375
    7. ':' → logprob: -10.575927734375
    8. '(S' → logprob: -10.825927734375
    9. '()' → logprob: -12.450927734375
    10. '((' → logprob: -12.825927734375

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007835414726287127
    2. ' ,' → logprob: -7.375783443450928
    3. '):' → logprob: -9.375783920288086
    4. ',p' → logprob: -9.750783920288086
    5. ',M' → logprob: -12.500783920288086
    6. ',S' → logprob: -12.750783920288086
    7. ',N' → logprob: -13.375783920288086
    8. ' ):' → logprob: -13.875783920288086
    9. ',T' → logprob: -14.250783920288086
    10. ')' → logprob: -14.250783920288086

Token 161: ' M' (ID: 391)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -1.2421780824661255
    2. ' M' → logprob: -1.3671780824661255
    3. 'S' → logprob: -1.7421780824661255
    4. 'M' → logprob: -2.242177963256836
    5. ' T' → logprob: -2.242177963256836
    6. 'T' → logprob: -2.867177963256836
    7. ' p' → logprob: -5.242177963256836
    8. 'p' → logprob: -5.742177963256836
    9. ' ' → logprob: -6.367177963256836
    10. '   ' → logprob: -7.117177963256836

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014966767048463225
    2. ' ,' → logprob: -9.500149726867676
    3. '):' → logprob: -9.750149726867676
    4. ',S' → logprob: -11.375149726867676
    5. ',p' → logprob: -13.500149726867676
    6. ',
' → logprob: -13.750149726867676
    7. ',T' → logprob: -14.125149726867676
    8. ')' → logprob: -14.750149726867676
    9. ',N' → logprob: -15.250149726867676
    10. '   ' → logprob: -15.625149726867676

Token 163: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6961873769760132
    2. ' S' → logprob: -0.6961873769760132
    3. ' T' → logprob: -7.321187496185303
    4. 'T' → logprob: -7.446187496185303
    5. ' p' → logprob: -7.446187496185303
    6. 'p' → logprob: -7.696187496185303
    7. ' ' → logprob: -8.071187019348145
    8. '   ' → logprob: -8.196187019348145
    9. '  ' → logprob: -10.446187019348145
    10. 'i' → logprob: -10.883687019348145

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007615071372129023
    2. ',p' → logprob: -7.37576150894165
    3. ' ,' → logprob: -9.125761032104492
    4. 'p' → logprob: -10.750761032104492
    5. ',
' → logprob: -13.375761032104492
    6. '):' → logprob: -14.000761032104492
    7. ' p' → logprob: -14.375761032104492
    8. ',T' → logprob: -15.250761032104492
    9. '   ' → logprob: -15.625761032104492
    10. '):
' → logprob: -15.750761032104492

Token 165: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2714683413505554
    2. ' p' → logprob: -1.5214684009552002
    3. 'T' → logprob: -4.271468162536621
    4. ' T' → logprob: -5.396468162536621
    5. ',' → logprob: -7.896468162536621
    6. '   ' → logprob: -8.396468162536621
    7. ' ' → logprob: -9.896468162536621
    8. ')' → logprob: -9.896468162536621
    9. ',p' → logprob: -10.271468162536621
    10. '
' → logprob: -10.521468162536621

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07640820741653442
    2. '):' → logprob: -2.7014081478118896
    3. '):
' → logprob: -5.201408386230469
    4. ',T' → logprob: -7.451408386230469
    5. ' ,' → logprob: -8.826408386230469
    6. ')' → logprob: -9.451408386230469
    7. '   ' → logprob: -9.826408386230469
    8. ',
' → logprob: -10.951408386230469
    9. '):
' → logprob: -10.951408386230469
    10. ' ):' → logprob: -11.951408386230469

Token 167: ' i' (ID: 575)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.004145118873566389
    2. ' T' → logprob: -5.50414514541626
    3. ')' → logprob: -10.254144668579102
    4. '   ' → logprob: -11.504144668579102
    5. ' ' → logprob: -12.129144668579102
    6. '  ' → logprob: -12.629144668579102
    7. '):
' → logprob: -12.879144668579102
    8. '):' → logprob: -13.254144668579102
    9. '	T' → logprob: -13.629144668579102
    10. ' )' → logprob: -13.754144668579102

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010949730640277267
    2. '):
' → logprob: -7.001094818115234
    3. ')' → logprob: -9.251094818115234
    4. ' ):' → logprob: -9.501094818115234
    5. ':' → logprob: -12.001094818115234
    6. ',' → logprob: -12.751094818115234
    7. '):
' → logprob: -13.501094818115234
    8. '   ' → logprob: -14.626094818115234
    9. '):

' → logprob: -15.126094818115234
    10. '
' → logprob: -15.876094818115234

Token 169: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04744662344455719
    2. '   ' → logprob: -3.2974467277526855
    3. ':
' → logprob: -4.7974467277526855
    4. ' :' → logprob: -7.1724467277526855
    5. ' :
' → logprob: -8.547446250915527
    6. ':return' → logprob: -10.547446250915527
    7. '):' → logprob: -10.672446250915527
    8. ' ' → logprob: -11.172446250915527
    9. '():' → logprob: -11.422446250915527
    10. ',' → logprob: -11.547446250915527

Token 170: ' T' (ID: 353)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028319712728261948
    2. '   ' → logprob: -4.278319835662842
    3. ' for' → logprob: -4.278319835662842
    4. 'total' → logprob: -9.028319358825684
    5. 'count' → logprob: -10.403319358825684
    6. 'return' → logprob: -10.528319358825684
    7. 'sum' → logprob: -12.653319358825684
    8. '	for' → logprob: -13.028319358825684
    9. ' total' → logprob: -13.278319358825684
    10. ' ' → logprob: -13.403319358825684

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326746940612793
    2. '=' → logprob: -1.313267469406128
    3. ' ' → logprob: -13.188267707824707
    4. '   ' → logprob: -13.688267707824707
    5. ',' → logprob: -14.063267707824707
    6. '＝' → logprob: -14.438267707824707
    7. ' =
' → logprob: -15.813267707824707
    8. '=
' → logprob: -15.938267707824707
    9. 'for' → logprob: -15.938267707824707
    10. ' ' → logprob: -15.938267707824707

Token 172: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.20736920833587646
    2. ' initialize' → logprob: -1.7073692083358765
    3. '[' → logprob: -5.832369327545166
    4. ' [' → logprob: -5.832369327545166
    5. '	initialize' → logprob: -10.332368850708008
    6. '   ' → logprob: -11.707368850708008
    7. '[in' → logprob: -12.082368850708008
    8. '.initialize' → logprob: -12.207368850708008
    9. '[N' → logprob: -12.332368850708008
    10. 'update' → logprob: -12.332368850708008

Token 173: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -3.128163257315464e-07
    2. '(T' → logprob: -17.0
    3. '_' → logprob: -17.125
    4. '```' → logprob: -17.125
    5. 'T' → logprob: -17.375
    6. '_N' → logprob: -18.625
    7. '(' → logprob: -19.375
    8. '_Tis' → logprob: -19.625
    9. '

' → logprob: -19.75
    10. '	T' → logprob: -20.0

Token 174: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00027456742827780545
    2. '(' → logprob: -8.250274658203125
    3. 'N' → logprob: -12.000274658203125
    4. ' (' → logprob: -12.750274658203125
    5. '
' → logprob: -13.125274658203125
    6. '(
' → logprob: -14.375274658203125
    7. '(len' → logprob: -14.625274658203125
    8. '(n' → logprob: -15.250274658203125
    9. '

' → logprob: -15.625274658203125
    10. '```' → logprob: -15.625274658203125

Token 175: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47422534227371216
    2. ')' → logprob: -0.9742253422737122
    3. ')
' → logprob: -8.974225044250488
    4. ')

' → logprob: -10.974225044250488
    5. ' )
' → logprob: -12.849225044250488
    6. ' )' → logprob: -13.849225044250488
    7. '
' → logprob: -14.474225044250488
    8. '   ' → logprob: -16.224225997924805
    9. ');' → logprob: -17.224225997924805
    10. ' ' → logprob: -17.349225997924805

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011956769041717052
    2. 'T' → logprob: -5.261956691741943
    3. ' for' → logprob: -6.136956691741943
    4. ' T' → logprob: -6.261956691741943
    5. 'i' → logprob: -6.636956691741943
    6. 'for' → logprob: -7.011956691741943
    7. '
' → logprob: -8.636957168579102
    8. ' i' → logprob: -8.886957168579102
    9. '  ' → logprob: -10.636957168579102
    10. '    
' → logprob: -11.136957168579102

Token 177: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -0.05937311053276062
    2. 'for' → logprob: -3.184373140335083
    3. 'update' → logprob: -5.059372901916504
    4. '   ' → logprob: -5.434372901916504
    5. 'i' → logprob: -5.934372901916504
    6. ' T' → logprob: -6.309372901916504
    7. ' for' → logprob: -7.184372901916504
    8. '
' → logprob: -9.059372901916504
    9. ' update' → logprob: -10.059372901916504
    10. '    
' → logprob: -10.184372901916504

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34844863414764404
    2. '=' → logprob: -1.223448634147644
    3. ',' → logprob: -14.098448753356934
    4. ' ' → logprob: -14.348448753356934
    5. 'updated' → logprob: -14.473448753356934
    6. '=
' → logprob: -14.848448753356934
    7. '
' → logprob: -15.348448753356934
    8. ' =
' → logprob: -15.598448753356934
    9. '   ' → logprob: -15.723448753356934
    10. 'Updated' → logprob: -16.223447799682617

Token 179: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.22542859613895416
    2. 'update' → logprob: -1.600428581237793
    3. '.update' → logprob: -12.350428581237793
    4. '(update' → logprob: -12.475428581237793
    5. '	update' → logprob: -12.850428581237793
    6. ' updated' → logprob: -13.225428581237793
    7. '_update' → logprob: -13.475428581237793
    8. '   ' → logprob: -14.725428581237793
    9. ':update' → logprob: -15.350428581237793
    10. 'updated' → logprob: -15.350428581237793

Token 180: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -1.0683535037969705e-05
    2. '_' → logprob: -11.62501049041748
    3. ' _' → logprob: -14.12501049041748
    4. '```' → logprob: -15.00001049041748
    5. '_Tis' → logprob: -15.00001049041748
    6. '##_' → logprob: -16.750011444091797
    7. '_S' → logprob: -16.875011444091797
    8. '

' → logprob: -17.000011444091797
    9. ')_' → logprob: -17.250011444091797
    10. '_
' → logprob: -18.000011444091797

Token 181: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0025181116070598364
    2. '_T' → logprob: -6.002518177032471
    3. 'from' → logprob: -11.377517700195312
    4. '_From' → logprob: -11.752517700195312
    5. '_f' → logprob: -12.252517700195312
    6. '_for' → logprob: -12.502517700195312
    7. '_' → logprob: -12.877517700195312
    8. 'From' → logprob: -12.877517700195312
    9. '_FROM' → logprob: -12.877517700195312
    10. '```' → logprob: -13.252517700195312

Token 182: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0007904515950940549
    2. 'i' → logprob: -7.250790596008301
    3. '_' → logprob: -10.6257905960083
    4. ' i' → logprob: -10.8757905960083
    5. '_j' → logprob: -11.5007905960083
    6. ' _' → logprob: -11.5007905960083
    7. '_T' → logprob: -11.6257905960083
    8. '```' → logprob: -13.7507905960083
    9. ' ' → logprob: -13.8757905960083
    10. '_t' → logprob: -14.2507905960083

Token 183: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.03736681491136551
    2. '(' → logprob: -3.6623668670654297
    3. ' (' → logprob: -4.53736686706543
    4. '(i' → logprob: -8.78736686706543
    5. ' ' → logprob: -9.03736686706543
    6. ' i' → logprob: -11.28736686706543
    7. '(
' → logprob: -11.78736686706543
    8. '```' → logprob: -12.41236686706543
    9. '

' → logprob: -13.78736686706543
    10. ')' → logprob: -13.91236686706543

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009966674260795116
    2. ',i' → logprob: -5.134966850280762
    3. '(i' → logprob: -5.884966850280762
    4. ' ,' → logprob: -6.759966850280762
    5. '(' → logprob: -10.009966850280762
    6. ')' → logprob: -10.884966850280762
    7. ' i' → logprob: -11.634966850280762
    8. 'i' → logprob: -12.634966850280762
    9. '
' → logprob: -12.884966850280762
    10. ' ' → logprob: -13.134966850280762

Token 185: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06203165650367737
    2. 'i' → logprob: -2.8120317459106445
    3. ')' → logprob: -10.187031745910645
    4. ')i' → logprob: -11.687031745910645
    5. '<|end|>' → logprob: -12.062031745910645
    6. ' ' → logprob: -12.562031745910645
    7. '	i' → logprob: -12.562031745910645
    8. '(i' → logprob: -14.062031745910645
    9. '_i' → logprob: -14.312031745910645
    10. ' 
' → logprob: -14.312031745910645

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008302362984977663
    2. ' ,' → logprob: -7.125830173492432
    3. ')' → logprob: -10.87583065032959
    4. ',N' → logprob: -13.25083065032959
    5. ',
' → logprob: -14.12583065032959
    6. '   ' → logprob: -14.50083065032959
    7. '),' → logprob: -14.50083065032959
    8. ',M' → logprob: -14.50083065032959
    9. '

' → logprob: -14.75083065032959
    10. ' ' → logprob: -15.06333065032959

Token 187: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6328161954879761
    2. ' N' → logprob: -0.7578161954879761
    3. ')' → logprob: -9.632816314697266
    4. ' ' → logprob: -9.757816314697266
    5. '	N' → logprob: -10.132816314697266
    6. '    ' → logprob: -11.007816314697266
    7. ' ' → logprob: -11.632816314697266
    8. '   ' → logprob: -11.757816314697266
    9. ' 
' → logprob: -12.507816314697266
    10. 'M' → logprob: -13.132816314697266

Token 188: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3145967423915863
    2. ')' → logprob: -1.3145967721939087
    3. ')
' → logprob: -7.189596652984619
    4. ')

' → logprob: -7.939596652984619
    5. '   ' → logprob: -8.814597129821777
    6. ' )
' → logprob: -10.314597129821777
    7. '
' → logprob: -10.564597129821777
    8. ' ' → logprob: -12.189597129821777
    9. ' )' → logprob: -12.189597129821777
    10. ',' → logprob: -13.814597129821777

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029974481090903282
    2. '
' → logprob: -3.9049744606018066
    3. ' for' → logprob: -4.904974460601807
    4. 'for' → logprob: -6.529974460601807
    5. '    
' → logprob: -8.404974937438965
    6. '<|end|>' → logprob: -8.529974937438965
    7. '	for' → logprob: -10.779974937438965
    8. '  
' → logprob: -10.904974937438965
    9. 'def' → logprob: -11.779974937438965
    10. ' 
' → logprob: -11.904974937438965

Token 190: ' satisfied' (ID: 23121)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0502435676753521
    2. '   ' → logprob: -3.050243616104126
    3. ' for' → logprob: -6.425243377685547
    4. '
' → logprob: -11.050243377685547
    5. '	for' → logprob: -12.050243377685547
    6. 'return' → logprob: -12.175243377685547
    7. '    
' → logprob: -12.925243377685547
    8. ' ' → logprob: -13.425243377685547
    9. '       ' → logprob: -13.550243377685547
    10. '```' → logprob: -13.675243377685547

Token 191: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10075531899929047
    2. '=' → logprob: -2.350755214691162
    3. '_' → logprob: -8.10075569152832
    4. '_conditions' → logprob: -8.97575569152832
    5. '_count' → logprob: -10.10075569152832
    6. ' ' → logprob: -10.97575569152832
    7. '   ' → logprob: -11.35075569152832
    8. 's' → logprob: -11.60075569152832
    9. '  ' → logprob: -11.72575569152832
    10. '=True' → logprob: -11.97575569152832

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005946221761405468
    2. '=' → logprob: -5.130946159362793
    3. ' ' → logprob: -11.505946159362793
    4. ' +=' → logprob: -12.130946159362793
    5. '<|end|>' → logprob: -13.880946159362793
    6. ')' → logprob: -15.130946159362793
    7. '  ' → logprob: -15.380946159362793
    8. ' ' → logprob: -15.505946159362793
    9. ' =)' → logprob: -15.755946159362793
    10. '+=' → logprob: -16.38094711303711

Token 193: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033681780099868774
    2. ' ' → logprob: -3.408681869506836
    3. 'sum' → logprob: -10.783681869506836
    4. ' sum' → logprob: -11.658681869506836
    5. '   ' → logprob: -12.533681869506836
    6. ' ' → logprob: -13.408681869506836
    7. '  ' → logprob: -15.033681869506836
    8. 's' → logprob: -15.158681869506836
    9. '(' → logprob: -16.408681869506836
    10. '1' → logprob: -16.471181869506836

Token 194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005692371050827205
    2. ' ' → logprob: -7.5005693435668945
    3. 'sum' → logprob: -11.125569343566895
    4. '   ' → logprob: -14.125569343566895
    5. ' sum' → logprob: -15.750569343566895
    6. '
' → logprob: -16.500568389892578
    7. '```' → logprob: -16.750568389892578
    8. ' ' → logprob: -16.938068389892578
    9. '1' → logprob: -17.125568389892578
    10. '  ' → logprob: -17.125568389892578

Token 195: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002888682996854186
    2. ' for' → logprob: -6.0028886795043945
    3. 'for' → logprob: -7.8778886795043945
    4. '<|end|>' → logprob: -10.502888679504395
    5. '	for' → logprob: -12.877888679504395
    6. 'def' → logprob: -14.002888679504395
    7. '
' → logprob: -14.252888679504395
    8. '    
' → logprob: -14.502888679504395
    9. '  ' → logprob: -14.752888679504395
    10. ' ' → logprob: -14.877888679504395

Token 197: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.012972217984497547
    2. '   ' → logprob: -4.512972354888916
    3. ' for' → logprob: -6.262972354888916
    4. '	for' → logprob: -11.137971878051758
    5. ' ' → logprob: -13.887971878051758
    6. 'def' → logprob: -14.137971878051758
    7. '  ' → logprob: -14.637971878051758
    8. '       ' → logprob: -15.887971878051758
    9. '
' → logprob: -16.512971878051758
    10. '    
' → logprob: -17.512971878051758

Token 198: ' j' (ID: 441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10232672095298767
    2. 'j' → logprob: -2.8523266315460205
    3. ' k' → logprob: -3.7273266315460205
    4. ' j' → logprob: -5.7273268699646
    5. 'm' → logprob: -5.8523268699646
    6. 'x' → logprob: -5.9773268699646
    7. 'idx' → logprob: -6.2273268699646
    8. 'i' → logprob: -6.6023268699646
    9. 's' → logprob: -7.1023268699646
    10. 'condition' → logprob: -7.4773268699646

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04614797607064247
    2. 'in' → logprob: -3.1711480617523193
    3. ' ' → logprob: -5.92114782333374
    4. '<|end|>' → logprob: -7.79614782333374
    5. '  ' → logprob: -11.171148300170898
    6. '	in' → logprob: -11.796148300170898
    7. ',' → logprob: -12.546148300170898
    8. '<|end|>' → logprob: -12.671148300170898
    9. '   ' → logprob: -12.796148300170898
    10. '    ' → logprob: -12.921148300170898

Token 200: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22552098333835602
    2. 'range' → logprob: -1.6005209684371948
    3. '(range' → logprob: -9.475521087646484
    4. '	range' → logprob: -11.225521087646484
    5. ' ' → logprob: -11.600521087646484
    6. ' xrange' → logprob: -12.475521087646484
    7. 'ange' → logprob: -13.975521087646484
    8. '<|end|>' → logprob: -13.975521087646484
    9. '   ' → logprob: -14.100521087646484
    10. ' M' → logprob: -14.475521087646484

Token 201: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -8.482821431243792e-05
    2. 'M' → logprob: -9.62508487701416
    3. '(' → logprob: -11.25008487701416
    4. '   ' → logprob: -13.75008487701416
    5. ' M' → logprob: -14.00008487701416
    6. ' (' → logprob: -14.37508487701416
    7. 'def' → logprob: -14.50008487701416
    8. 'range' → logprob: -14.50008487701416
    9. '(len' → logprob: -14.75008487701416
    10. ')' → logprob: -14.87508487701416

Token 202: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037591091822832823
    2. '):
' → logprob: -5.628758907318115
    3. ')' → logprob: -9.003759384155273
    4. ':' → logprob: -11.003759384155273
    5. ' ):' → logprob: -11.378759384155273
    6. '   ' → logprob: -12.378759384155273
    7. '):
' → logprob: -13.753759384155273
    8. '):

' → logprob: -14.128759384155273
    9. ',' → logprob: -14.128759384155273
    10. ' ' → logprob: -15.003759384155273

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035426935646682978
    2. ' if' → logprob: -5.753542900085449
    3. '<|end|>' → logprob: -9.37854290008545
    4. 'if' → logprob: -9.50354290008545
    5. ',' → logprob: -9.62854290008545
    6. ':' → logprob: -10.37854290008545
    7. '   ' → logprob: -10.75354290008545
    8. '    ' → logprob: -11.12854290008545
    9. '	' → logprob: -11.62854290008545
    10. '        
' → logprob: -11.75354290008545

Token 204: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07230348140001297
    2. ' if' → logprob: -2.947303533554077
    3. '       ' → logprob: -4.072303295135498
    4. 'all' → logprob: -9.447303771972656
    5. 'sum' → logprob: -9.947303771972656
    6. 'count' → logprob: -10.072303771972656
    7. '   ' → logprob: -10.572303771972656
    8. '           ' → logprob: -11.197303771972656
    9. 's' → logprob: -12.322303771972656
    10. 'total' → logprob: -12.822303771972656

Token 205: ' check' (ID: 2371)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.48789462447166443
    2. ' all' → logprob: -1.9878946542739868
    3. 'T' → logprob: -2.3628945350646973
    4. ' sum' → logprob: -2.7378945350646973
    5. 'all' → logprob: -3.4878945350646973
    6. 'sum' → logprob: -3.4878945350646973
    7. ' S' → logprob: -4.737894535064697
    8. ' (' → logprob: -5.112894535064697
    9. '   ' → logprob: -5.237894535064697
    10. 'S' → logprob: -5.737894535064697

Token 206: '_condition' (ID: 64948)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.11750127375125885
    2. '_T' → logprob: -2.9925012588500977
    3. '_s' → logprob: -3.6175012588500977
    4. '(T' → logprob: -4.617501258850098
    5. '_condition' → logprob: -5.117501258850098
    6. 'all' → logprob: -5.367501258850098
    7. '(S' → logprob: -6.367501258850098
    8. '(' → logprob: -6.367501258850098
    9. '_conditions' → logprob: -6.492501258850098
    10. '_sum' → logprob: -6.492501258850098

Token 207: '(T' (ID: 7014)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.16588108241558075
    2. '(S' → logprob: -2.0408811569213867
    3. '(' → logprob: -4.040881156921387
    4. ' (' → logprob: -5.790881156921387
    5. '(T' → logprob: -6.915881156921387
    6. '(s' → logprob: -7.540881156921387
    7. 's' → logprob: -7.665881156921387
    8. '(M' → logprob: -9.415881156921387
    9. '(
' → logprob: -10.040881156921387
    10. '```' → logprob: -10.290881156921387

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03171882405877113
    2. ' ,' → logprob: -3.9067187309265137
    3. ',j' → logprob: -5.406718730926514
    4. '[j' → logprob: -5.656718730926514
    5. ',S' → logprob: -6.156718730926514
    6. '[S' → logprob: -7.781718730926514
    7. ',s' → logprob: -9.281719207763672
    8. ' S' → logprob: -9.406719207763672
    9. '[' → logprob: -9.531719207763672
    10. '   ' → logprob: -9.906719207763672

Token 209: ' S' (ID: 336)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2104456126689911
    2. ' j' → logprob: -1.7104456424713135
    3. 'S' → logprob: -5.085445404052734
    4. ' S' → logprob: -6.210445404052734
    5. '0' → logprob: -8.460445404052734
    6. ' ' → logprob: -8.835445404052734
    7. '   ' → logprob: -9.335445404052734
    8. ',' → logprob: -9.835445404052734
    9. '    ' → logprob: -9.835445404052734
    10. '[j' → logprob: -9.960445404052734

Token 210: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.05223212018609047
    2. '[' → logprob: -3.427232027053833
    3. ',' → logprob: -4.052232265472412
    4. ',j' → logprob: -7.177232265472412
    5. ',[' → logprob: -8.552231788635254
    6. '][' → logprob: -10.927231788635254
    7. ')[' → logprob: -11.552231788635254
    8. ' [' → logprob: -11.927231788635254
    9. '[i' → logprob: -12.302231788635254
    10. '[
' → logprob: -12.427231788635254

Token 211: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0002003218833124265
    2. ']' → logprob: -9.375200271606445
    3. '][' → logprob: -10.375200271606445
    4. '])' → logprob: -10.750200271606445
    5. ' ],' → logprob: -11.125200271606445
    6. ']))' → logprob: -11.750200271606445
    7. '])):
' → logprob: -11.750200271606445
    8. '[j' → logprob: -11.875200271606445
    9. ']):' → logprob: -12.000200271606445
    10. ']):
' → logprob: -12.250200271606445

Token 212: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4741850793361664
    2. 'p' → logprob: -0.9741851091384888
    3. '   ' → logprob: -9.9741849899292
    4. ' ' → logprob: -11.2241849899292
    5. ',' → logprob: -11.4741849899292
    6. '    ' → logprob: -11.7241849899292
    7. ')' → logprob: -11.9741849899292
    8. '<p' → logprob: -11.9741849899292
    9. '	p' → logprob: -13.2241849899292
    10. '
' → logprob: -13.2866849899292

Token 213: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0003345122095197439
    2. '[' → logprob: -8.375334739685059
    3. ',' → logprob: -9.625334739685059
    4. ')' → logprob: -11.000334739685059
    5. ',j' → logprob: -11.500334739685059
    6. ' [' → logprob: -12.375334739685059
    7. 'j' → logprob: -13.000334739685059
    8. ')[' → logprob: -13.750334739685059
    9. '[i' → logprob: -14.000334739685059
    10. '[p' → logprob: -15.250334739685059

Token 214: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.0968945100903511
    2. ']):
' → logprob: -2.5968945026397705
    3. ']' → logprob: -4.84689474105835
    4. '])' → logprob: -5.22189474105835
    5. '[j' → logprob: -5.97189474105835
    6. '):' → logprob: -7.09689474105835
    7. '])):
' → logprob: -8.471894264221191
    8. ']:' → logprob: -8.596894264221191
    9. ')' → logprob: -8.721894264221191
    10. ']==' → logprob: -9.221894264221191

Token 215: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17147296667099
    2. ' :' → logprob: -2.9214730262756348
    3. '           ' → logprob: -3.4214730262756348
    4. '==' → logprob: -3.5464730262756348
    5. ':
' → logprob: -4.421473026275635
    6. '       ' → logprob: -4.796473026275635
    7. ' ==' → logprob: -5.546473026275635
    8. '<|end|>' → logprob: -5.546473026275635
    9. '):' → logprob: -6.046473026275635
    10. '        ' → logprob: -6.171473026275635

Token 216: ' increment' (ID: 24032)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0966809093952179
    2. '           ' → logprob: -2.9716808795928955
    3. ' satisfied' → logprob: -3.5966808795928955
    4. '       ' → logprob: -4.346681118011475
    5. '               ' → logprob: -8.096680641174316
    6. '   ' → logprob: -9.221680641174316
    7. '
' → logprob: -9.471680641174316
    8. ' ' → logprob: -11.221680641174316
    9. '            
' → logprob: -11.221680641174316
    10. '	s' → logprob: -11.471680641174316

Token 217: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4876005947589874
    2. '_s' → logprob: -0.987600564956665
    3. '(s' → logprob: -4.987600803375244
    4. ' satisfied' → logprob: -6.237600803375244
    5. '(' → logprob: -6.737600803375244
    6. '_T' → logprob: -6.862600803375244
    7. 'T' → logprob: -7.612600803375244
    8. '(T' → logprob: -8.237600326538086
    9. '_count' → logprob: -8.362600326538086
    10. '_' → logprob: -8.862600326538086

Token 218: 'atisfied' (ID: 65362)
  Prédit: 'atisfied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfied' → logprob: -0.014605440199375153
    2. '_count' → logprob: -4.764605522155762
    3. 'at' → logprob: -6.139605522155762
    4. 's' → logprob: -6.264605522155762
    5. 'atisf' → logprob: -6.764605522155762
    6. 'count' → logprob: -8.264605522155762
    7. 't' → logprob: -8.639605522155762
    8. 'atis' → logprob: -9.264605522155762
    9. '_' → logprob: -9.889605522155762
    10. '_at' → logprob: -10.389605522155762

Token 219: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00023214559769257903
    2. 's' → logprob: -9.875231742858887
    3. '_c' → logprob: -10.375231742858887
    4. '_condition' → logprob: -10.500231742858887
    5. '_s' → logprob: -11.000231742858887
    6. '_' → logprob: -11.125231742858887
    7. 'count' → logprob: -11.500231742858887
    8. '```' → logprob: -11.750231742858887
    9. '_co' → logprob: -11.875231742858887
    10. ' ' → logprob: -12.000231742858887

Token 220: '(&' (ID: 4366)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.23384785652160645
    2. '(' → logprob: -1.6088478565216064
    3. 's' → logprob: -5.358847618103027
    4. ' (' → logprob: -5.983847618103027
    5. '(
' → logprob: -7.858847618103027
    6. '()' → logprob: -8.108847618103027
    7. ' ' → logprob: -8.358847618103027
    8. '   ' → logprob: -9.733847618103027
    9. '_' → logprob: -10.108847618103027
    10. '_s' → logprob: -10.358847618103027

Token 221: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25357118248939514
    2. ' satisfied' → logprob: -1.5035711526870728
    3. ')' → logprob: -7.378571033477783
    4. ' s' → logprob: -8.128571510314941
    5. ')s' → logprob: -8.753571510314941
    6. ' satisf' → logprob: -8.878571510314941
    7. ' ' → logprob: -9.253571510314941
    8. ' sat' → logprob: -10.003571510314941
    9. '   ' → logprob: -10.128571510314941
    10. ' )' → logprob: -10.128571510314941

Token 222: 'atisfied' (ID: 65362)
  Prédit: 'atisfied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfied' → logprob: -0.04362521320581436
    2. '_' → logprob: -3.9186251163482666
    3. 'a' → logprob: -3.9186251163482666
    4. 'atisf' → logprob: -6.668625354766846
    5. 'at' → logprob: -6.918625354766846
    6. 'atis' → logprob: -8.293624877929688
    7. ')' → logprob: -9.418624877929688
    8. '_a' → logprob: -9.668624877929688
    9. 's' → logprob: -9.918624877929688
    10. '   ' → logprob: -10.418624877929688

Token 223: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0025685220025479794
    2. '_' → logprob: -6.50256872177124
    3. '_)' → logprob: -7.00256872177124
    4. ')' → logprob: -9.252568244934082
    5. '_,' → logprob: -11.127568244934082
    6. ')_' → logprob: -11.377568244934082
    7. '_counts' → logprob: -12.002568244934082
    8. '_s' → logprob: -12.127568244934082
    9. 's' → logprob: -12.252568244934082
    10. ' _' → logprob: -12.877568244934082

Token 224: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009869529865682125
    2. ' )' → logprob: -4.634869575500488
    3. '())' → logprob: -10.634869575500488
    4. ')
' → logprob: -10.759869575500488
    5. '<|end|>' → logprob: -11.134869575500488
    6. ' ' → logprob: -11.384869575500488
    7. '   ' → logprob: -11.759869575500488
    8. '[' → logprob: -12.009869575500488
    9. '()' → logprob: -12.009869575500488
    10. '(' → logprob: -12.259869575500488

Token 225: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6860332489013672
    2. ')' → logprob: -0.9360332489013672
    3. '(' → logprob: -2.811033248901367
    4. '<|end|>' → logprob: -3.936033248901367
    5. '   ' → logprob: -4.686033248901367
    6. '       ' → logprob: -4.811033248901367
    7. '()
' → logprob: -6.686033248901367
    8. ' ' → logprob: -6.811033248901367
    9. '(
' → logprob: -6.811033248901367
    10. ' )' → logprob: -7.311033248901367

Token 226: ' return' (ID: 622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7429864406585693
    2. ' ' → logprob: -0.9929864406585693
    3. '<|end|>' → logprob: -2.6179864406585693
    4. '(' → logprob: -4.117986679077148
    5. 'def' → logprob: -4.117986679077148
    6. ' )' → logprob: -4.242986679077148
    7. '       ' → logprob: -4.867986679077148
    8. '    ' → logprob: -4.992986679077148
    9. ' 
' → logprob: -5.492986679077148
    10. '()' → logprob: -5.992986679077148

Token 227: ' is' (ID: 382)
  Prédit: ' satisfied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' satisfied' → logprob: -0.04306188225746155
    2. 's' → logprob: -3.1680619716644287
    3. ' ' → logprob: -10.668062210083008
    4. ' ' → logprob: -11.918062210083008
    5. '_s' → logprob: -12.043062210083008
    6. 'Satisfied' → logprob: -12.293062210083008
    7. ' satisfactory' → logprob: -12.418062210083008
    8. ' satisf' → logprob: -12.543062210083008
    9. ' s' → logprob: -12.668062210083008
    10. ' satisfying' → logprob: -13.293062210083008

Token 228: '_all' (ID: 13305)
  Prédit: 'atisfied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atisfied' → logprob: -0.018746675923466682
    2. '_s' → logprob: -5.143746852874756
    3. 's' → logprob: -5.518746852874756
    4. ' satisfied' → logprob: -5.768746852874756
    5. '_' → logprob: -5.893746852874756
    6. 'atisf' → logprob: -7.143746852874756
    7. 'at' → logprob: -8.018746376037598
    8. ' _' → logprob: -8.018746376037598
    9. 'f' → logprob: -8.018746376037598
    10. 'n' → logprob: -8.393746376037598

Token 229: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.5493075847625732
    2. '_conditions' → logprob: -0.9243075847625732
    3. 's' → logprob: -4.674307823181152
    4. '_' → logprob: -4.799307823181152
    5. '(' → logprob: -6.174307823181152
    6. '()' → logprob: -6.299307823181152
    7. '_condition' → logprob: -6.424307823181152
    8. '(_' → logprob: -6.799307823181152
    9. '(s' → logprob: -8.049307823181152
    10. '```' → logprob: -8.299307823181152

Token 230: 'atisfied' (ID: 65362)
  Prédit: 'atisfied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfied' → logprob: -0.00418299064040184
    2. 'atisf' → logprob: -5.754182815551758
    3. 'at' → logprob: -7.379182815551758
    4. 'atis' → logprob: -9.129182815551758
    5. 's' → logprob: -9.504182815551758
    6. 'Satisfied' → logprob: -10.129182815551758
    7. 't' → logprob: -10.754182815551758
    8. '_' → logprob: -10.879182815551758
    9. 'a' → logprob: -10.879182815551758
    10. ' satisfied' → logprob: -11.254182815551758

Token 231: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013839775696396828
    2. '_' → logprob: -5.0138397216796875
    3. ' (' → logprob: -5.8888397216796875
    4. '[' → logprob: -6.8888397216796875
    5. '(
' → logprob: -7.2638397216796875
    6. '_s' → logprob: -7.2638397216796875
    7. '   ' → logprob: -7.5138397216796875
    8. 's' → logprob: -8.013839721679688
    9. ' ' → logprob: -8.638839721679688
    10. '(False' → logprob: -8.763839721679688

Token 232: 'atisfied' (ID: 65362)
  Prédit: 'atisfied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfied' → logprob: -7.636475493200123e-05
    2. 'atisf' → logprob: -9.625076293945312
    3. 'atis' → logprob: -13.000076293945312
    4. '(' → logprob: -13.000076293945312
    5. 'at' → logprob: -13.625076293945312
    6. '_count' → logprob: -14.000076293945312
    7. 't' → logprob: -14.375076293945312
    8. '_at' → logprob: -15.000076293945312
    9. '```' → logprob: -15.000076293945312
    10. 'atisfactory' → logprob: -15.000076293945312

Token 233: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00016539888747502118
    2. '(_' → logprob: -10.125164985656738
    3. '_s' → logprob: -10.500164985656738
    4. 's' → logprob: -10.750164985656738
    5. '_' → logprob: -11.500164985656738
    6. '_condition' → logprob: -11.500164985656738
    7. ')' → logprob: -12.250164985656738
    8. '(s' → logprob: -12.250164985656738
    9. ' _' → logprob: -12.375164985656738
    10. 'count' → logprob: -12.375164985656738

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1479829102754593
    2. ')' → logprob: -2.0229828357696533
    3. ' ,' → logprob: -6.022983074188232
    4. ',N' → logprob: -7.022983074188232
    5. '(N' → logprob: -7.397983074188232
    6. '(' → logprob: -7.772983074188232
    7. '==' → logprob: -8.147982597351074
    8. '   ' → logprob: -8.647982597351074
    9. ' )' → logprob: -9.147982597351074
    10. '>=' → logprob: -9.522982597351074

Token 235: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.08901635557413101
    2. ' M' → logprob: -2.4640164375305176
    3. '   ' → logprob: -9.83901596069336
    4. ' ' → logprob: -11.71401596069336
    5. ')' → logprob: -12.33901596069336
    6. '	M' → logprob: -13.33901596069336
    7. ' ' → logprob: -13.33901596069336
    8. '    ' → logprob: -13.33901596069336
    9. 'm' → logprob: -13.71401596069336
    10. ',' → logprob: -14.21401596069336

Token 236: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0087516784551553e-05
    2. '   ' → logprob: -11.75001049041748
    3. ' )' → logprob: -13.87501049041748
    4. ')
' → logprob: -14.37501049041748
    5. '()' → logprob: -15.75001049041748
    6. ' ' → logprob: -16.125009536743164
    7. ')`' → logprob: -16.125009536743164
    8. 'def' → logprob: -16.750009536743164
    9. '))' → logprob: -16.750009536743164
    10. ',' → logprob: -17.250009536743164

Token 237: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002767074853181839
    2. ' (' → logprob: -6.127767086029053
    3. '   ' → logprob: -8.252766609191895
    4. ' ' → logprob: -8.752766609191895
    5. '(
' → logprob: -9.752766609191895
    6. '[' → logprob: -10.127766609191895
    7. 's' → logprob: -10.877766609191895
    8. '  ' → logprob: -11.752766609191895
    9. '_' → logprob: -11.877766609191895
    10. '    ' → logprob: -12.127766609191895

Token 238: ' check' (ID: 2371)
  Prédit: ' increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increment' → logprob: -0.17347073554992676
    2. ' check' → logprob: -2.2984707355499268
    3. 'increment' → logprob: -2.9234707355499268
    4. ' incre' → logprob: -6.423470497131348
    5. '_' → logprob: -7.048470497131348
    6. 'check' → logprob: -7.548470497131348
    7. ' def' → logprob: -7.673470497131348
    8. ' space' → logprob: -8.298470497131348
    9. '_increment' → logprob: -8.298470497131348
    10. ' inc' → logprob: -8.423470497131348

Token 239: '_condition' (ID: 64948)
  Prédit: '_condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -0.00819479301571846
    2. '_all' → logprob: -5.508194923400879
    3. '_' → logprob: -5.633194923400879
    4. '_conditions' → logprob: -7.883194923400879
    5. ' _' → logprob: -9.758194923400879
    6. '_cond' → logprob: -10.758194923400879
    7. '_s' → logprob: -10.883194923400879
    8. '_a' → logprob: -11.508194923400879
    9. '__' → logprob: -11.883194923400879
    10. '(_' → logprob: -12.258194923400879

Token 240: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.015096496790647507
    2. '(' → logprob: -4.515096664428711
    3. ' (' → logprob: -5.515096664428711
    4. '(S' → logprob: -12.140096664428711
    5. '(
' → logprob: -12.890096664428711
    6. '(s' → logprob: -13.515096664428711
    7. '(t' → logprob: -13.515096664428711
    8. ' ' → logprob: -13.765096664428711
    9. '   ' → logprob: -14.390096664428711
    10. '(N' → logprob: -14.640096664428711

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004551023303065449
    2. ' ,' → logprob: -7.750454902648926
    3. ',S' → logprob: -11.250454902648926
    4. ',s' → logprob: -12.125454902648926
    5. ',j' → logprob: -13.250454902648926
    6. 's' → logprob: -14.000454902648926
    7. ',
' → logprob: -14.000454902648926
    8. '[],' → logprob: -14.125454902648926
    9. '[' → logprob: -15.125454902648926
    10. ',T' → logprob: -15.125454902648926

Token 242: ' s' (ID: 265)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.06815989315509796
    2. 's' → logprob: -3.318159818649292
    3. ' S' → logprob: -4.068160057067871
    4. 'p' → logprob: -4.568160057067871
    5. '   ' → logprob: -7.193160057067871
    6. ' s' → logprob: -7.693160057067871
    7. ' p' → logprob: -7.818160057067871
    8. ' ' → logprob: -8.818160057067871
    9. 'j' → logprob: -9.880660057067871
    10. '    ' → logprob: -9.943160057067871

Token 243: '_row' (ID: 19157)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006314247148111463
    2. ',j' → logprob: -7.625631332397461
    3. '[j' → logprob: -9.750631332397461
    4. ' ,' → logprob: -10.250631332397461
    5. '_j' → logprob: -11.250631332397461
    6. '_,' → logprob: -11.500631332397461
    7. 'j' → logprob: -11.625631332397461
    8. '[' → logprob: -12.750631332397461
    9. '[],' → logprob: -12.750631332397461
    10. ',
' → logprob: -13.250631332397461

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.576873758807778e-05
    2. ' ,' → logprob: -9.625075340270996
    3. 's' → logprob: -12.625075340270996
    4. ',
' → logprob: -13.500075340270996
    5. '[],' → logprob: -13.750075340270996
    6. ',j' → logprob: -14.250075340270996
    7. '):' → logprob: -14.375075340270996
    8. ',s' → logprob: -14.625075340270996
    9. '   ' → logprob: -15.000075340270996
    10. '‌,' → logprob: -15.125075340270996

Token 245: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005612540990114212
    2. ' p' → logprob: -7.500561237335205
    3. ' ' → logprob: -12.750561714172363
    4. '   ' → logprob: -13.000561714172363
    5. 's' → logprob: -14.500561714172363
    6. '```' → logprob: -14.875561714172363
    7. ')' → logprob: -15.250561714172363
    8. '	p' → logprob: -15.375561714172363
    9. 't' → logprob: -15.813061714172363
    10. 'j' → logprob: -16.000560760498047

Token 246: '_j' (ID: 12021)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018122203648090363
    2. '):
' → logprob: -4.26812219619751
    3. '[' → logprob: -6.64312219619751
    4. ')' → logprob: -7.26812219619751
    5. 'j' → logprob: -7.39312219619751
    6. '[]):' → logprob: -7.76812219619751
    7. '_j' → logprob: -8.018122673034668
    8. '):

' → logprob: -8.518122673034668
    9. '[j' → logprob: -8.518122673034668
    10. '):
' → logprob: -10.518122673034668

Token 247: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31349802017211914
    2. '):' → logprob: -1.3134980201721191
    3. '):

' → logprob: -8.813497543334961
    4. '):
' → logprob: -9.688497543334961
    5. ')' → logprob: -11.313497543334961
    6. ' ):' → logprob: -12.438497543334961
    7. ' ):
' → logprob: -12.938497543334961
    8. 'j' → logprob: -12.938497543334961
    9. '[]):' → logprob: -13.563497543334961
    10. '[' → logprob: -14.188497543334961

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01577402651309967
    2. ':' → logprob: -5.140774250030518
    3. ' return' → logprob: -5.515774250030518
    4. ' for' → logprob: -6.015774250030518
    5. '(' → logprob: -6.890774250030518
    6. ' if' → logprob: -7.265774250030518
    7. '    ' → logprob: -8.26577377319336
    8. ' (' → logprob: -8.39077377319336
    9. '[' → logprob: -8.51577377319336
    10. 'def' → logprob: -8.76577377319336

Token 249: ' connected' (ID: 12079)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4992983937263489
    2. ' for' → logprob: -1.249298334121704
    3. 'return' → logprob: -2.749298334121704
    4. ' return' → logprob: -3.499298334121704
    5. '   ' → logprob: -4.624298572540283
    6. 'sum' → logprob: -6.374298572540283
    7. 'total' → logprob: -7.874298572540283
    8. ' sum' → logprob: -9.124298095703125
    9. ' total' → logprob: -9.249298095703125
    10. 'all' → logprob: -11.249298095703125

Token 250: '_switch' (ID: 64715)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.695599377155304
    2. '=' → logprob: -1.4455993175506592
    3. '_tokens' → logprob: -3.320599317550659
    4. '_count' → logprob: -3.445599317550659
    5. ')' → logprob: -3.570599317550659
    6. '_nodes' → logprob: -3.695599317550659
    7. '_j' → logprob: -3.820599317550659
    8. '_' → logprob: -3.820599317550659
    9. ',' → logprob: -4.445599555969238
    10. 'ness' → logprob: -4.570599555969238

Token 251: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34186482429504395
    2. 'es' → logprob: -1.341864824295044
    3. ' =' → logprob: -4.091864585876465
    4. '_count' → logprob: -5.591864585876465
    5. '_indices' → logprob: -5.966864585876465
    6. '=' → logprob: -6.091864585876465
    7. '_states' → logprob: -6.591864585876465
    8. '_indexes' → logprob: -7.966864585876465
    9. '_s' → logprob: -8.341864585876465
    10. '_status' → logprob: -8.841864585876465

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25213977694511414
    2. ' =' → logprob: -1.5021398067474365
    3. '_count' → logprob: -9.627140045166016
    4. ')' → logprob: -9.752140045166016
    5. 's' → logprob: -10.877140045166016
    6. ' ' → logprob: -11.252140045166016
    7. ',' → logprob: -11.502140045166016
    8. 'count' → logprob: -12.002140045166016
    9. '=sum' → logprob: -12.252140045166016
    10. 'sum' → logprob: -12.502140045166016

Token 253: ' s' (ID: 265)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4331394135951996
    2. '0' → logprob: -2.0581393241882324
    3. 'sum' → logprob: -2.0581393241882324
    4. '[s' → logprob: -2.9331393241882324
    5. '[len' → logprob: -4.183139324188232
    6. '[T' → logprob: -4.433139324188232
    7. ' [' → logprob: -5.933139324188232
    8. '[t' → logprob: -6.058139324188232
    9. '[i' → logprob: -6.183139324188232
    10. '[j' → logprob: -6.433139324188232

Token 254: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.001175343873910606
    2. 'um' → logprob: -7.376175403594971
    3. 'row' → logprob: -9.251174926757812
    4. ' =' → logprob: -9.501174926757812
    5. '   ' → logprob: -9.626174926757812
    6. '_rows' → logprob: -9.751174926757812
    7. '=' → logprob: -10.251174926757812
    8. '_sum' → logprob: -10.751174926757812
    9. 'for' → logprob: -11.001174926757812
    10. 'sum' → logprob: -11.251174926757812

Token 255: '[' (ID: 58)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.002307146554812789
    2. 'count' → logprob: -6.377306938171387
    3. '<|end|>' → logprob: -8.877306938171387
    4. 'def' → logprob: -9.627306938171387
    5. ')' → logprob: -9.752306938171387
    6. ',' → logprob: -10.002306938171387
    7. '_count' → logprob: -10.252306938171387
    8. '.sum' → logprob: -10.252306938171387
    9. ' =' → logprob: -10.377306938171387
    10. 'and' → logprob: -10.377306938171387

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9507678747177124
    2. ']' → logprob: -1.0757678747177124
    3. '1' → logprob: -2.575767993927002
    4. ':' → logprob: -3.325767993927002
    5. ':]' → logprob: -3.450767993927002
    6. 'i' → logprob: -3.700767993927002
    7. ')' → logprob: -3.825767993927002
    8. '
' → logprob: -4.200767993927002
    9. '])' → logprob: -4.575767993927002
    10. ':].' → logprob: -4.825767993927002

Token 257: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0030326135456562042
    2. '+' → logprob: -6.753032684326172
    3. ']==' → logprob: -7.128032684326172
    4. ']
' → logprob: -7.628032684326172
    5. ']>' → logprob: -8.503032684326172
    6. ' ]' → logprob: -9.003032684326172
    7. ']>=' → logprob: -9.503032684326172
    8. ':]' → logprob: -10.003032684326172
    9. ' +' → logprob: -10.253032684326172
    10. ':' → logprob: -10.878032684326172

Token 258: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: ' pp' (ID: 25476)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7711679339408875
    2. 'for' → logprob: -1.6461679935455322
    3. ' for' → logprob: -2.1461679935455322
    4. ' count' → logprob: -2.2711679935455322
    5. 'on' → logprob: -3.2711679935455322
    6. ' on' → logprob: -4.271167755126953
    7. 'required' → logprob: -4.521167755126953
    8. 'total' → logprob: -4.896167755126953
    9. 'if' → logprob: -4.896167755126953
    10. 'return' → logprob: -5.271167755126953

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5836799740791321
    2. '_j' → logprob: -0.9586799740791321
    3. '[' → logprob: -3.7086799144744873
    4. '=' → logprob: -3.7086799144744873
    5. 'j' → logprob: -5.833680152893066
    6. '_' → logprob: -6.083680152893066
    7. ',' → logprob: -6.458680152893066
    8. '[j' → logprob: -6.958680152893066
    9. '   ' → logprob: -8.208680152893066
    10. ' ' → logprob: -8.208680152893066

Token 261: ' ' (ID: 220)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38047075271606445
    2. ' p' → logprob: -1.2554707527160645
    3. '0' → logprob: -3.6304707527160645
    4. ' ' → logprob: -5.7554707527160645
    5. 's' → logprob: -7.2554707527160645
    6. '1' → logprob: -7.3804707527160645
    7. ' s' → logprob: -7.8804707527160645
    8. 'int' → logprob: -10.630470275878906
    9. '   ' → logprob: -11.067970275878906
    10. ' 
' → logprob: -11.192970275878906

Token 262: '0' (ID: 15)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07171646505594254
    2. '0' → logprob: -2.946716547012329
    3. 's' → logprob: -4.44671630859375
    4. 'len' → logprob: -6.19671630859375
    5. ' p' → logprob: -6.69671630859375
    6. '1' → logprob: -7.07171630859375
    7. 'int' → logprob: -7.94671630859375
    8. 'sum' → logprob: -8.32171630859375
    9. ' ' → logprob: -9.32171630859375
    10. ' s' → logprob: -10.94671630859375

Token 263: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.057374920696020126
    2. '<|end|>' → logprob: -3.182374954223633
    3. ' 
' → logprob: -5.057374954223633
    4. ' for' → logprob: -5.807374954223633
    5. 'for' → logprob: -6.432374954223633
    6. '  
' → logprob: -7.182374954223633
    7. ' ' → logprob: -7.307374954223633
    8. '    
' → logprob: -7.807374954223633
    9. '<|end|>' → logprob: -7.932374954223633
    10. '   
' → logprob: -8.682374954223633

Token 264: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9942336678504944
    2. '<|end|>' → logprob: -1.1192336082458496
    3. ' for' → logprob: -1.4942336082458496
    4. 'for' → logprob: -2.9942336082458496
    5. '
' → logprob: -4.86923360824585
    6. ' 
' → logprob: -4.99423360824585
    7. ' while' → logprob: -5.49423360824585
    8. '<|end|>' → logprob: -6.24423360824585
    9. ',' → logprob: -6.61923360824585
    10. ' ,' → logprob: -6.61923360824585

Token 265: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2835429310798645
    2. 'for' (adapté à ' for') → logprob: -1.4085428714752197
    3. ' ' → logprob: -6.408543109893799
    4. '
' → logprob: -8.78354263305664
    5. '	for' → logprob: -8.90854263305664
    6. '+' → logprob: -8.90854263305664
    7. '<|end|>' → logprob: -9.40854263305664
    8. ' while' → logprob: -9.78354263305664
    9. '    ' → logprob: -10.28354263305664
    10. '   ' → logprob: -10.78354263305664

Token 266: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08245866000652313
    2. ' k' → logprob: -2.832458734512329
    3. 'idx' → logprob: -4.33245849609375
    4. ' idx' → logprob: -5.08245849609375
    5. 'index' → logprob: -7.95745849609375
    6. 'x' → logprob: -8.33245849609375
    7. ' index' → logprob: -9.33245849609375
    8. 'i' → logprob: -9.33245849609375
    9. '_k' → logprob: -9.95745849609375
    10. '_' → logprob: -10.45745849609375

Token 267: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018365560099482536
    2. 'in' → logprob: -4.018365383148193
    3. ' ' → logprob: -9.268365859985352
    4. ',' → logprob: -9.393365859985352
    5. '=' → logprob: -12.018365859985352
    6. '	in' → logprob: -12.143365859985352
    7. 'k' → logprob: -12.643365859985352
    8. '0' → logprob: -12.768365859985352
    9. ' ,' → logprob: -12.893365859985352
    10. 's' → logprob: -13.393365859985352

Token 268: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10022176057100296
    2. ' range' → logprob: -2.350221872329712
    3. '	range' → logprob: -11.350221633911133
    4. ' ' → logprob: -13.975221633911133
    5. '(range' → logprob: -13.975221633911133
    6. 's' → logprob: -14.475221633911133
    7. '[' → logprob: -14.850221633911133
    8. '1' → logprob: -15.725221633911133
    9. '
' → logprob: -16.100221633911133
    10. '   ' → logprob: -16.350221633911133

Token 269: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003325645811855793
    2. 'connected' → logprob: -6.378325462341309
    3. '1' → logprob: -6.878325462341309
    4. '(len' → logprob: -7.628325462341309
    5. ' (' → logprob: -10.253325462341309
    6. ' connected' → logprob: -10.378325462341309
    7. 'len' → logprob: -11.378325462341309
    8. '   ' → logprob: -11.378325462341309
    9. ' ' → logprob: -11.878325462341309
    10. '(connect' → logprob: -13.378325462341309

Token 270: 'connected' (ID: 26297)
  Prédit: 'connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.05785544589161873
    2. '1' → logprob: -2.9328553676605225
    3. 'len' → logprob: -6.307855606079102
    4. ' connected' → logprob: -6.807855606079102
    5. ' ' → logprob: -11.057855606079102
    6. '   ' → logprob: -11.932855606079102
    7. ' len' → logprob: -12.682855606079102
    8. '(' → logprob: -13.432855606079102
    9. '.connected' → logprob: -13.745355606079102
    10. '0' → logprob: -13.870355606079102

Token 271: '_switch' (ID: 64715)
  Prédit: '_switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_switch' → logprob: -0.01581990346312523
    2. 'switch' → logprob: -4.265820026397705
    3. '_s' → logprob: -8.015819549560547
    4. '_' → logprob: -8.140819549560547
    5. ' _' → logprob: -8.140819549560547
    6. ' ' → logprob: -8.765819549560547
    7. 's' → logprob: -9.140819549560547
    8. ')' → logprob: -9.265819549560547
    9. '   ' → logprob: -9.265819549560547
    10. ' switch' → logprob: -9.890819549560547

Token 272: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0030125302728265524
    2. '_s' → logprob: -6.753012657165527
    3. 'es' → logprob: -7.253012657165527
    4. 'ss' → logprob: -7.878012657165527
    5. '_count' → logprob: -8.878012657165527
    6. 'd' → logprob: -9.128012657165527
    7. 'S' → logprob: -9.503012657165527
    8. '[' → logprob: -9.878012657165527
    9. '_row' → logprob: -9.878012657165527
    10. 'switch' → logprob: -10.503012657165527

Token 273: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09088758379220963
    2. '+' → logprob: -3.0908875465393066
    3. '):
' → logprob: -3.2158875465393066
    4. ' ):' → logprob: -7.215887546539307
    5. ' +' → logprob: -8.340888023376465
    6. ':' → logprob: -9.590888023376465
    7. ')' → logprob: -9.590888023376465
    8. ',' → logprob: -9.715888023376465
    9. '   ' → logprob: -10.090888023376465
    10. ' ):
' → logprob: -10.340888023376465

Token 274: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: ' pp' (ID: 25476)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' (adapté à ' pp') → logprob: -0.39183253049850464
    2. 'if' → logprob: -2.0168325901031494
    3. ' if' → logprob: -2.1418325901031494
    4. ' pp' → logprob: -2.6418325901031494
    5. '	pp' → logprob: -6.89183235168457
    6. '(pp' → logprob: -7.64183235168457
    7. ' ' → logprob: -7.76683235168457
    8. '   ' → logprob: -9.14183235168457
    9. '    ' → logprob: -9.76683235168457
    10. '           ' → logprob: -9.89183235168457

Token 276: ' +=' (ID: 2757)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.08279626816511154
    2. '+=' → logprob: -2.832796335220337
    3. ' |=' → logprob: -4.457796096801758
    4. '^' → logprob: -4.957796096801758
    5. ' ^=' → logprob: -6.582796096801758
    6. ' +=' → logprob: -7.582796096801758
    7. '=' → logprob: -9.332796096801758
    8. ' ' → logprob: -12.957796096801758
    9. '+=(' → logprob: -13.332796096801758
    10. '	' → logprob: -13.457796096801758

Token 277: ' get' (ID: 717)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0004166105354670435
    2. ' T' → logprob: -8.25041675567627
    3. '(T' → logprob: -9.12541675567627
    4. 's' → logprob: -10.75041675567627
    5. 'S' → logprob: -11.87541675567627
    6. '(' → logprob: -12.12541675567627
    7. '1' → logprob: -12.37541675567627
    8. '(s' → logprob: -13.12541675567627
    9. 'p' → logprob: -13.25041675567627
    10. '	T' → logprob: -13.50041675567627

Token 278: '_T' (ID: 2154)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.11651379615068436
    2. '(T' → logprob: -3.366513729095459
    3. '_T' → logprob: -3.616513729095459
    4. 's' → logprob: -3.741513729095459
    5. '(' → logprob: -5.116513729095459
    6. ' T' → logprob: -5.991513729095459
    7. 'k' → logprob: -5.991513729095459
    8. '_s' → logprob: -6.116513729095459
    9. '1' → logprob: -6.241513729095459
    10. 'int' → logprob: -6.241513729095459

Token 279: '_value' (ID: 6734)
  Prédit: '[T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[T' → logprob: -0.5506159067153931
    2. '(T' → logprob: -1.425615906715393
    3. '_j' → logprob: -2.3006157875061035
    4. '[' → logprob: -3.3006157875061035
    5. '_k' → logprob: -4.0506157875061035
    6. '[j' → logprob: -4.3006157875061035
    7. '[k' → logprob: -4.5506157875061035
    8. 'j' → logprob: -6.8006157875061035
    9. 'k' → logprob: -7.3006157875061035
    10. '(k' → logprob: -7.9256157875061035

Token 280: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.0007900939672254026
    2. ' (' → logprob: -7.375790119171143
    3. '(' → logprob: -9.625789642333984
    4. '[T' → logprob: -10.250789642333984
    5. '```' → logprob: -11.500789642333984
    6. 'T' → logprob: -11.625789642333984
    7. '(
' → logprob: -11.750789642333984
    8. '   ' → logprob: -12.250789642333984
    9. '	T' → logprob: -12.250789642333984
    10. ' ' → logprob: -12.750789642333984

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09423386305570602
    2. '[s' → logprob: -2.719233751296997
    3. ',s' → logprob: -4.469233989715576
    4. ' ,' → logprob: -5.344233989715576
    5. '[' → logprob: -5.719233989715576
    6. '[k' → logprob: -6.344233989715576
    7. ',k' → logprob: -7.094233989715576
    8. '(s' → logprob: -7.594233989715576
    9. 's' → logprob: -7.969233989715576
    10. ' s' → logprob: -7.969233989715576

Token 282: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27290216088294983
    2. 'k' → logprob: -1.6479021310806274
    3. ' s' → logprob: -3.147902250289917
    4. ' k' → logprob: -6.022902011871338
    5. ')' → logprob: -8.022902488708496
    6. '   ' → logprob: -8.647902488708496
    7. '[k' → logprob: -8.772902488708496
    8. '[s' → logprob: -9.897902488708496
    9. 'int' → logprob: -10.397902488708496
    10. ')s' → logprob: -10.710402488708496

Token 283: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0004845346265938133
    2. 'row' → logprob: -8.625484466552734
    3. '[k' → logprob: -9.125484466552734
    4. 'k' → logprob: -10.125484466552734
    5. '[j' → logprob: -10.375484466552734
    6. 'Row' → logprob: -10.875484466552734
    7. '[' → logprob: -11.125484466552734
    8. '_ROW' → logprob: -11.125484466552734
    9. '_k' → logprob: -11.625484466552734
    10. '   ' → logprob: -11.625484466552734

Token 284: ',' (ID: 11)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.08232682198286057
    2. '[' → logprob: -2.582326889038086
    3. 'k' → logprob: -6.832326889038086
    4. ' [' → logprob: -7.332326889038086
    5. ',' → logprob: -7.582326889038086
    6. '1' → logprob: -8.207326889038086
    7. '[
' → logprob: -8.582326889038086
    8. '   ' → logprob: -8.707326889038086
    9. ' k' → logprob: -8.832326889038086
    10. ',k' → logprob: -9.082326889038086

Token 285: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.003748298389837146
    2. ' k' → logprob: -5.628748416900635
    3. '1' → logprob: -9.628747940063477
    4. '   ' → logprob: -10.253747940063477
    5. '(k' → logprob: -11.003747940063477
    6. '    ' → logprob: -11.753747940063477
    7. ' ' → logprob: -12.128747940063477
    8. '[k' → logprob: -13.003747940063477
    9. '  ' → logprob: -13.253747940063477
    10. '{k' → logprob: -13.253747940063477

Token 286: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2099853754043579
    2. '[' → logprob: -2.8349852561950684
    3. '[k' → logprob: -3.0849852561950684
    4. ',' → logprob: -3.2099852561950684
    5. '       ' → logprob: -4.334985256195068
    6. '+' → logprob: -4.334985256195068
    7. ' )' → logprob: -5.209985256195068
    8. ',k' → logprob: -6.084985256195068
    9. '   ' → logprob: -6.209985256195068
    10. ')]' → logprob: -6.334985256195068

Token 287: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6484367251396179
    2. '()' → logprob: -1.3984367847442627
    3. '+' → logprob: -2.8984367847442627
    4. '(' → logprob: -3.1484367847442627
    5. '   ' → logprob: -3.2734367847442627
    6. ')' → logprob: -4.148436546325684
    7. '()+' → logprob: -4.273436546325684
    8. ' def' → logprob: -4.648436546325684
    9. '<|end|>' → logprob: -4.898436546325684
    10. '[' → logprob: -5.023436546325684

Token 289: ' (' (ID: 350)
  Prédit: ' pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pp' → logprob: -0.14600156247615814
    2. 'pp' → logprob: -2.0210015773773193
    3. '(pp' → logprob: -5.77100133895874
    4. ' (' → logprob: -9.646001815795898
    5. ' p' → logprob: -10.021001815795898
    6. '(' → logprob: -10.021001815795898
    7. ' ' → logprob: -11.021001815795898
    8. 'p' → logprob: -11.271001815795898
    9. ' ' → logprob: -11.646001815795898
    10. '	pp' → logprob: -12.021001815795898

Token 290: 'pp' (ID: 654)
  Prédit: 'pp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.006722471676766872
    2. ' pp' → logprob: -5.131722450256348
    3. 'p' → logprob: -7.256722450256348
    4. ' p' → logprob: -9.881722450256348
    5. '(pp' → logprob: -10.881722450256348
    6. '   ' → logprob: -12.006722450256348
    7. '	pp' → logprob: -12.131722450256348
    8. ')' → logprob: -13.381722450256348
    9. '
' → logprob: -13.881722450256348
    10. ' ' → logprob: -14.006722450256348

Token 291: ' %' (ID: 1851)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.0797051340341568
    2. '>=' → logprob: -2.579705238342285
    3. ' ==' → logprob: -7.579705238342285
    4. ')' → logprob: -9.079705238342285
    5. '==' → logprob: -9.329705238342285
    6. ')>=' → logprob: -10.454705238342285
    7. ' ' → logprob: -10.579705238342285
    8. ' )' → logprob: -11.204705238342285
    9. ' <=' → logprob: -11.704705238342285
    10. '[' → logprob: -11.829705238342285

Token 292: ' ' (ID: 220)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0037401027511805296
    2. ' p' → logprob: -6.003740310668945
    3. '2' → logprob: -6.753740310668945
    4. '(p' → logprob: -10.378740310668945
    5. ' ' → logprob: -10.628740310668945
    6. 'pp' → logprob: -11.003740310668945
    7. '   ' → logprob: -12.128740310668945
    8. '(' → logprob: -12.503740310668945
    9. '(pp' → logprob: -13.503740310668945
    10. '100' → logprob: -13.753740310668945

Token 293: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006058432627469301
    2. 'p' → logprob: -5.131058216094971
    3. ' ' → logprob: -9.506058692932129
    4. '10' → logprob: -11.256058692932129
    5. 'pp' → logprob: -12.006058692932129
    6. '(' → logprob: -12.006058692932129
    7. '   ' → logprob: -12.506058692932129
    8. '200' → logprob: -12.506058692932129
    9. ' p' → logprob: -12.631058692932129
    10. '```' → logprob: -12.881058692932129

Token 294: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12064974009990692
    2. ')' → logprob: -2.495649814605713
    3. ')==' → logprob: -3.995649814605713
    4. ' ==' → logprob: -4.370649814605713
    5. '=' → logprob: -8.870649337768555
    6. ' )' → logprob: -10.620649337768555
    7. '==
' → logprob: -12.620649337768555
    8. '()==' → logprob: -13.245649337768555
    9. ']==' → logprob: -13.870649337768555
    10. '!=' → logprob: -13.995649337768555

Token 295: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.576022744178772
    2. ' ==' → logprob: -0.826022744178772
    3. ' ' → logprob: -10.20102310180664
    4. ' ' → logprob: -11.45102310180664
    5. '=' → logprob: -11.57602310180664
    6. '==
' → logprob: -11.95102310180664
    7. ')==' → logprob: -12.07602310180664
    8. '[]' → logprob: -12.57602310180664
    9. '0' → logprob: -13.32602310180664
    10. ')' → logprob: -13.45102310180664

Token 296: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2519404888153076
    2. ' p' → logprob: -1.5019404888153076
    3. '(p' → logprob: -12.376940727233887
    4. ' ' → logprob: -13.001940727233887
    5. '0' → logprob: -13.751940727233887
    6. ' (' → logprob: -13.876940727233887
    7. '	p' → logprob: -14.001940727233887
    8. '   ' → logprob: -14.751940727233887
    9. '(' → logprob: -15.001940727233887
    10. '<p' → logprob: -15.564440727233887

Token 297: '_j' (ID: 12021)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7478050589561462
    2. '_j' → logprob: -0.7478050589561462
    3. ')' → logprob: -3.872805118560791
    4. '[' → logprob: -4.747805118560791
    5. '[j' → logprob: -5.122805118560791
    6. ' _' → logprob: -5.122805118560791
    7. '_s' → logprob: -5.747805118560791
    8. ' ' → logprob: -6.247805118560791
    9. 's' → logprob: -6.747805118560791
    10. '   ' → logprob: -6.872805118560791

Token 298: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9616104364395142
    2. 'def' → logprob: -0.9616104364395142
    3. ' 
' → logprob: -2.8366103172302246
    4. '(
' → logprob: -3.0866103172302246
    5. ' ' → logprob: -3.3366103172302246
    6. '_' → logprob: -3.8366103172302246
    7. '[' → logprob: -4.211610317230225
    8. '  
' → logprob: -4.336610317230225
    9. '
' → logprob: -4.586610317230225
    10. ')' → logprob: -4.836610317230225

Token 299: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2949178218841553
    2. 'def' → logprob: -2.4199178218841553
    3. ' ' → logprob: -2.4199178218841553
    4. '[' → logprob: -3.1699178218841553
    5. '<|end|>' → logprob: -4.544918060302734
    6. ' (' → logprob: -5.044918060302734
    7. '   ' → logprob: -5.669918060302734
    8. '    ' → logprob: -6.044918060302734
    9. ')' → logprob: -6.169918060302734
    10. '.' → logprob: -6.544918060302734

Token 300: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.04584001749753952
    2. 'get' → logprob: -3.17084002494812
    3. ' increment' → logprob: -6.295839786529541
    4. ' def' → logprob: -7.920839786529541
    5. 'increment' → logprob: -8.0458402633667
    6. 'def' → logprob: -8.7958402633667
    7. ' check' → logprob: -9.5458402633667
    8. ' ' → logprob: -10.6708402633667
    9. ' ' → logprob: -11.6708402633667
    10. ' g' → logprob: -12.0458402633667

Token 301: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.006097892764955759
    2. 'T' → logprob: -6.506097793579102
    3. '_value' → logprob: -6.631097793579102
    4. '(T' → logprob: -6.631097793579102
    5. 'value' → logprob: -6.756097793579102
    6. ' _' → logprob: -9.131097793579102
    7. ' ' → logprob: -9.131097793579102
    8. '```' → logprob: -9.256097793579102
    9. ')' → logprob: -9.631097793579102
    10. ' value' → logprob: -9.631097793579102

Token 302: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.404745439183898e-05
    2. '_j' → logprob: -11.25003433227539
    3. 'value' → logprob: -11.37503433227539
    4. '_' → logprob: -12.62503433227539
    5. '_val' → logprob: -13.00003433227539
    6. '```' → logprob: -14.25003433227539
    7. '_VALUE' → logprob: -14.37503433227539
    8. ' value' → logprob: -14.75003433227539
    9. '[' → logprob: -14.75003433227539
    10. ' _' → logprob: -14.87503433227539

Token 303: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.06199255958199501
    2. '(' → logprob: -2.811992645263672
    3. '(
' → logprob: -10.686992645263672
    4. ' (' → logprob: -13.811992645263672
    5. '(

' → logprob: -15.186992645263672
    6. '<|end|>' → logprob: -15.311992645263672
    7. '[T' → logprob: -16.061992645263672
    8. '(t' → logprob: -16.436992645263672
    9. '((' → logprob: -16.436992645263672
    10. '[' → logprob: -16.936992645263672

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024168188974726945
    2. '<|end|>' → logprob: -9.25024127960205
    3. ',j' → logprob: -9.62524127960205
    4. ' ,' → logprob: -10.12524127960205
    5. ',T' → logprob: -11.12524127960205
    6. '[' → logprob: -12.00024127960205
    7. '[j' → logprob: -12.37524127960205
    8. ')' → logprob: -12.87524127960205
    9. ' ' → logprob: -13.37524127960205
    10. ',k' → logprob: -13.50024127960205

Token 305: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47538700699806213
    2. ' s' → logprob: -0.9753869771957397
    3. ')' → logprob: -7.600387096405029
    4. '<|end|>' → logprob: -7.725387096405029
    5. ' ' → logprob: -8.725386619567871
    6. '[' → logprob: -9.475386619567871
    7. ')s' → logprob: -10.725386619567871
    8. '[s' → logprob: -10.975386619567871
    9. 'k' → logprob: -11.225386619567871
    10. '(s' → logprob: -12.037886619567871

Token 306: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.015927376225590706
    2. '[s' → logprob: -4.515927314758301
    3. ',' → logprob: -6.640927314758301
    4. 'row' → logprob: -6.765927314758301
    5. '[' → logprob: -7.515927314758301
    6. '[row' → logprob: -8.1409273147583
    7. '_ROW' → logprob: -8.3909273147583
    8. ',s' → logprob: -8.5159273147583
    9. ',row' → logprob: -8.6409273147583
    10. 'Row' → logprob: -8.7659273147583

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000621653685811907
    2. ' ,' → logprob: -7.750621795654297
    3. ',k' → logprob: -8.875621795654297
    4. ',j' → logprob: -10.625621795654297
    5. '   ' → logprob: -11.000621795654297
    6. ',s' → logprob: -13.250621795654297
    7. '[' → logprob: -13.625621795654297
    8. '[k' → logprob: -13.875621795654297
    9. ',int' → logprob: -14.000621795654297
    10. ',index' → logprob: -14.125621795654297

Token 308: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.027225754223764e-05
    2. ' k' → logprob: -10.000060081481934
    3. '1' → logprob: -11.250060081481934
    4. 's' → logprob: -14.375060081481934
    5. '   ' → logprob: -15.250060081481934
    6. '(k' → logprob: -15.375060081481934
    7. ' ' → logprob: -15.875060081481934
    8. ')' → logprob: -16.37506103515625
    9. '	k' → logprob: -16.50006103515625
    10. '_k' → logprob: -16.50006103515625

Token 309: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9476305842399597
    2. '):' → logprob: -0.9476305842399597
    3. '):
' → logprob: -1.6976306438446045
    4. ')' → logprob: -4.072630405426025
    5. 's' → logprob: -4.072630405426025
    6. ' ,' → logprob: -6.447630405426025
    7. '[s' → logprob: -6.822630405426025
    8. ' ):' → logprob: -7.072630405426025
    9. '[' → logprob: -7.697630405426025
    10. '):

' → logprob: -7.697630405426025

Token 310: '   ' (ID: 271)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.7401887774467468
    2. ' T' → logprob: -0.7401887774467468
    3. '   ' → logprob: -3.2401888370513916
    4. ' return' → logprob: -5.8651885986328125
    5. ' s' → logprob: -6.3651885986328125
    6. 's' → logprob: -6.3651885986328125
    7. 'return' → logprob: -8.365188598632812
    8. ' ' → logprob: -9.865188598632812
    9. '    ' → logprob: -10.240188598632812
    10. ')' → logprob: -10.615188598632812

Token 311: ' idx' (ID: 14016)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0025298797991126776
    2. ' T' → logprob: -6.002530097961426
    3. 's' → logprob: -10.252530097961426
    4. '   ' → logprob: -11.752530097961426
    5. '[T' → logprob: -11.752530097961426
    6. '[' → logprob: -13.502530097961426
    7. ' s' → logprob: -14.752530097961426
    8. 'def' → logprob: -14.877530097961426
    9. ' ' → logprob: -15.752530097961426
    10. '[
' → logprob: -15.877530097961426

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3486301898956299
    2. ' =' → logprob: -1.2236301898956299
    3. 's' → logprob: -9.22362995147705
    4. '_idx' → logprob: -10.47362995147705
    5. ' ' → logprob: -11.34862995147705
    6. ')' → logprob: -11.34862995147705
    7. '=
' → logprob: -11.72362995147705
    8. 'idx' → logprob: -12.47362995147705
    9. '_' → logprob: -12.47362995147705
    10. ']' → logprob: -12.97362995147705

Token 313: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4498052223643754e-05
    2. ' s' → logprob: -11.375014305114746
    3. '   ' → logprob: -12.750014305114746
    4. '(s' → logprob: -17.125015258789062
    5. '`s' → logprob: -17.750015258789062
    6. '_s' → logprob: -19.375015258789062
    7. '[' → logprob: -19.875015258789062
    8. '[s' → logprob: -19.875015258789062
    9. '{s' → logprob: -20.000015258789062
    10. '	s' → logprob: -20.125015258789062

Token 314: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0005272957496345043
    2. 'row' → logprob: -7.625527381896973
    3. '-row' → logprob: -11.500527381896973
    4. 's' → logprob: -11.625527381896973
    5. '_Row' → logprob: -12.375527381896973
    6. 'Row' → logprob: -12.500527381896973
    7. '_ROW' → logprob: -12.750527381896973
    8. '<Row' → logprob: -13.375527381896973
    9. '[' → logprob: -13.625527381896973
    10. '   ' → logprob: -13.750527381896973

Token 315: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.008982665836811066
    2. '[' → logprob: -4.7589826583862305
    3. 'k' → logprob: -8.25898265838623
    4. '[
' → logprob: -10.50898265838623
    5. '1' → logprob: -10.75898265838623
    6. ' [' → logprob: -10.75898265838623
    7. '(k' → logprob: -11.38398265838623
    8. ' k' → logprob: -11.88398265838623
    9. '{k' → logprob: -11.88398265838623
    10. '2' → logprob: -13.13398265838623

Token 316: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04704444482922554
    2. ' +' → logprob: -3.172044515609741
    3. ']' → logprob: -5.797044277191162
    4. '1' → logprob: -7.047044277191162
    5. ']+' → logprob: -10.42204475402832
    6. '+]' → logprob: -10.42204475402832
    7. '+k' → logprob: -10.67204475402832
    8. ' ]' → logprob: -12.04704475402832
    9. '2' → logprob: -12.04704475402832
    10. ')' → logprob: -12.17204475402832

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.68022444692906e-05
    2. ' ' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.625046730041504
    4. '```' → logprob: -15.875046730041504
    5. '0' → logprob: -16.31254768371582
    6. '۱' → logprob: -16.43754768371582
    7. '  ' → logprob: -16.56254768371582
    8. '１' → logprob: -16.62504768371582
    9. '2' → logprob: -16.93754768371582
    10. '<|end|>' → logprob: -17.25004768371582

Token 318: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0753745436668396
    2. ' ]' → logprob: -2.9503746032714844
    3. ']-' → logprob: -5.075374603271484
    4. ' -' → logprob: -5.200374603271484
    5. ')' → logprob: -5.450374603271484
    6. '-' → logprob: -5.825374603271484
    7. ' )' → logprob: -6.950374603271484
    8. ')]' → logprob: -9.075374603271484
    9. ']
' → logprob: -9.825374603271484
    10. '[' → logprob: -10.450374603271484

Token 319: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25178879499435425
    2. ']' → logprob: -2.626788854598999
    3. ')' → logprob: -3.001788854598999
    4. ' -' → logprob: -3.001788854598999
    5. ' ' → logprob: -3.376788854598999
    6. ' ]' → logprob: -5.62678861618042
    7. '<|end|>' → logprob: -6.25178861618042
    8. '
' → logprob: -6.37678861618042
    9. '   ' → logprob: -6.50178861618042
    10. ' )' → logprob: -6.75178861618042

Token 320: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043138445471413434
    2. ' ' → logprob: -7.750431537628174
    3. '   ' → logprob: -15.250431060791016
    4. '<|end|>' → logprob: -15.375431060791016
    5. '```' → logprob: -16.375431060791016
    6. 'def' → logprob: -17.937931060791016
    7. '  ' → logprob: -17.937931060791016
    8. '	' → logprob: -18.000431060791016
    9. '１' → logprob: -18.187931060791016
    10. '0' → logprob: -18.187931060791016

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -14.875009536743164
    4. '```' → logprob: -17.000009536743164
    5. '   ' → logprob: -17.250009536743164
    6. 'def' → logprob: -17.937509536743164
    7. '`' → logprob: -18.625009536743164
    8. '１' → logprob: -18.625009536743164
    9. '...' → logprob: -18.812509536743164
    10. '[' → logprob: -18.875009536743164

Token 322: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6261914372444153
    2. '   ' → logprob: -1.6261913776397705
    3. ' ' → logprob: -2.1261913776397705
    4. '<|end|>' → logprob: -2.1261913776397705
    5. ' )' → logprob: -5.00119161605835
    6. ']' → logprob: -5.25119161605835
    7. '
' → logprob: -5.87619161605835
    8. '  ' → logprob: -6.12619161605835
    9. ' 
' → logprob: -6.25119161605835
    10. ' return' → logprob: -6.25119161605835

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8840413689613342
    2. 'return' → logprob: -0.8840413689613342
    3. ' return' → logprob: -2.1340413093566895
    4. ' ' → logprob: -3.3840413093566895
    5. ')' → logprob: -4.2590413093566895
    6. '  ' → logprob: -6.8840413093566895
    7. '<|end|>' → logprob: -6.8840413093566895
    8. '
' → logprob: -7.0090413093566895
    9. '	return' → logprob: -7.0090413093566895
    10. '  
' → logprob: -7.5090413093566895

Token 324: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03840704262256622
    2. ' return' → logprob: -3.28840708732605
    3. 'T' → logprob: -8.038407325744629
    4. '   ' → logprob: -10.413407325744629
    5. ' T' → logprob: -11.413407325744629
    6. '	return' → logprob: -14.038407325744629
    7. 'def' → logprob: -15.288407325744629
    8. ' ' → logprob: -15.788407325744629
    9. '
' → logprob: -16.538406372070312
    10. '```' → logprob: -16.538406372070312

Token 325: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.006716079078614712
    2. ' T' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.756715774536133
    4. '(T' → logprob: -15.756715774536133
    5. ' ' → logprob: -16.506715774536133
    6. '	T' → logprob: -17.506715774536133
    7. '[T' → logprob: -18.506715774536133
    8. ' ' → logprob: -18.631715774536133
    9. '  ' → logprob: -19.006715774536133
    10. '1' → logprob: -19.381715774536133

Token 326: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.125000953674316
    3. '[
' → logprob: -15.375000953674316
    4. ' idx' → logprob: -16.125001907348633
    5. 'idx' → logprob: -16.500001907348633
    6. ' [' → logprob: -16.625001907348633
    7. '	idx' → logprob: -16.875001907348633
    8. '[index' → logprob: -17.125001907348633
    9. '```' → logprob: -17.625001907348633
    10. '[id' → logprob: -18.000001907348633

Token 327: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11458509415388107
    2. ']' → logprob: -2.2395851612091064
    3. '<|end|>' → logprob: -7.489584922790527
    4. '}' → logprob: -7.739584922790527
    5. '[idx' → logprob: -8.364584922790527
    6. ' )' → logprob: -8.364584922790527
    7. '[' → logprob: -9.239584922790527
    8. ' ]' → logprob: -9.489584922790527
    9. '[k' → logprob: -10.114584922790527
    10. ')]' → logprob: -11.239584922790527

Token 328: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08022334426641464
    2. ')' → logprob: -3.330223321914673
    3. 'def' → logprob: -4.580223560333252
    4. '   ' → logprob: -5.205223560333252
    5. '    ' → logprob: -5.205223560333252
    6. '+' → logprob: -5.205223560333252
    7. ' )' → logprob: -5.705223560333252
    8. '(' → logprob: -5.830223560333252
    9. ' 
' → logprob: -7.080223560333252
    10. '[' → logprob: -7.080223560333252

Token 329: ' increment' (ID: 24032)
  Prédit: ' increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increment' → logprob: -0.10685686767101288
    2. 'increment' → logprob: -2.3568568229675293
    3. 'n' → logprob: -5.106856822967529
    4. 'in' → logprob: -8.981857299804688
    5. ' n' → logprob: -9.231857299804688
    6. '_increment' → logprob: -9.731857299804688
    7. ' increase' → logprob: -10.106857299804688
    8. 'i' → logprob: -10.606857299804688
    9. ' increments' → logprob: -10.606857299804688
    10. ' i' → logprob: -10.794357299804688

Token 330: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -4.394135612528771e-05
    2. '_' → logprob: -10.250043869018555
    3. 's' → logprob: -11.750043869018555
    4. '_sat' → logprob: -15.625043869018555
    5. ' _' → logprob: -16.625043869018555
    6. '(_' → logprob: -16.875043869018555
    7. '(' → logprob: -17.000043869018555
    8. '_completed' → logprob: -17.250043869018555
    9. '\' → logprob: -17.875043869018555
    10. '_t' → logprob: -18.000043869018555

Token 331: 'atisfied' (ID: 65362)
  Prédit: 'atisfied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfied' → logprob: -0.027530832216143608
    2. '_' → logprob: -4.277530670166016
    3. 'a' → logprob: -4.652530670166016
    4. '_a' → logprob: -6.152530670166016
    5. '_s' → logprob: -7.402530670166016
    6. 'at' → logprob: -8.277530670166016
    7. '_at' → logprob: -8.527530670166016
    8. 'atis' → logprob: -8.777530670166016
    9. 'atisf' → logprob: -9.527530670166016
    10. '```' → logprob: -9.652530670166016

Token 332: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.584239938296378e-06
    2. '_s' → logprob: -12.000007629394531
    3. '_counts' → logprob: -14.375007629394531
    4. '_' → logprob: -15.125007629394531
    5. '_c' → logprob: -15.750007629394531
    6. 'count' → logprob: -16.12500762939453
    7. '_counter' → logprob: -16.25000762939453
    8. '_co' → logprob: -16.50000762939453
    9. ' _' → logprob: -16.87500762939453
    10. '_status' → logprob: -18.25000762939453

Token 333: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07904015481472015
    2. '(' → logprob: -2.829040050506592
    3. ' (' → logprob: -4.079040050506592
    4. '(
' → logprob: -13.70404052734375
    5. ' ' → logprob: -13.95404052734375
    6. 's' → logprob: -14.45404052734375
    7. '_s' → logprob: -14.95404052734375
    8. '   ' → logprob: -15.45404052734375
    9. ' (
' → logprob: -15.95404052734375
    10. '(S' → logprob: -16.57904052734375

Token 334: '_counter' (ID: 35419)
  Prédit: 'atisfied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atisfied' → logprob: -0.00033045929740183055
    2. '_' → logprob: -8.250330924987793
    3. 'a' → logprob: -10.500330924987793
    4. 'at' → logprob: -11.250330924987793
    5. 'atisf' → logprob: -11.500330924987793
    6. 'atis' → logprob: -11.625330924987793
    7. '_at' → logprob: -13.125330924987793
    8. '_s' → logprob: -13.625330924987793
    9. '_a' → logprob: -13.625330924987793
    10. 'ats' → logprob: -13.875330924987793

Token 335: '_ptr' (ID: 10117)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.653417706489563
    2. ')' → logprob: -0.903417706489563
    3. ',' → logprob: -2.6534175872802734
    4. '):
' → logprob: -6.153417587280273
    5. ',s' → logprob: -7.778417587280273
    6. 's' → logprob: -8.028417587280273
    7. ' )' → logprob: -8.278417587280273
    8. ')s' → logprob: -8.403417587280273
    9. '):

' → logprob: -8.528417587280273
    10. ' ):' → logprob: -8.778417587280273

Token 336: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5286467671394348
    2. '):' → logprob: -1.15364670753479
    3. 's' → logprob: -3.27864670753479
    4. ')' → logprob: -3.27864670753479
    5. ' ,' → logprob: -4.653646945953369
    6. ',s' → logprob: -5.778646945953369
    7. '):
' → logprob: -6.028646945953369
    8. '(s' → logprob: -7.028646945953369
    9. ' ):' → logprob: -7.153646945953369
    10. '   ' → logprob: -7.403646945953369

Token 337: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007527362555265427
    2. '   ' → logprob: -5.2575273513793945
    3. '*s' → logprob: -6.7575273513793945
    4. ' s' → logprob: -7.0075273513793945
    5. '*' → logprob: -9.132527351379395
    6. '`s' → logprob: -9.632527351379395
    7. '_s' → logprob: -10.507527351379395
    8. ')' → logprob: -12.007527351379395
    9. ' *' → logprob: -12.882527351379395
    10. 'return' → logprob: -13.132527351379395

Token 338: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0017157548572868109
    2. '*s' → logprob: -6.376715660095215
    3. '*' → logprob: -12.251715660095215
    4. ' s' → logprob: -12.376715660095215
    5. '_s' → logprob: -13.001715660095215
    6. '(*' → logprob: -14.001715660095215
    7. '`s' → logprob: -15.251715660095215
    8. 'return' → logprob: -15.376715660095215
    9. '@s' → logprob: -15.626715660095215
    10. 'global' → logprob: -15.751715660095215

Token 339: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -2.9160102712921798e-05
    2. 'counter' → logprob: -11.000029563903809
    3. 'ounter' → logprob: -12.625029563903809
    4. '[_' → logprob: -13.125029563903809
    5. '_COUNTER' → logprob: -13.250029563903809
    6. '_' → logprob: -13.625029563903809
    7. '_c' → logprob: -14.125029563903809
    8. '[counter' → logprob: -14.250029563903809
    9. 's' → logprob: -14.375029563903809
    10. '_count' → logprob: -14.750029563903809

Token 340: '_ptr' (ID: 10117)
  Prédit: '_ptr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ptr' → logprob: -0.0015192650025710464
    2. '_counter' → logprob: -6.501519203186035
    3. '_pointer' → logprob: -12.626519203186035
    4. 'counter' → logprob: -12.876519203186035
    5. 'ounter' → logprob: -13.001519203186035
    6. 'ptr' → logprob: -13.626519203186035
    7. '=' → logprob: -13.626519203186035
    8. '=_' → logprob: -13.876519203186035
    9. '_p' → logprob: -14.126519203186035
    10. '_cnt' → logprob: -14.251519203186035

Token 341: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009838848374783993
    2. '+=' → logprob: -4.634839057922363
    3. ' +=' → logprob: -9.759839057922363
    4. '+' → logprob: -11.384839057922363
    5. '[]' → logprob: -12.009839057922363
    6. '[:]' → logprob: -13.509839057922363
    7. ']+=' → logprob: -13.884839057922363
    8. '.' → logprob: -14.009839057922363
    9. '.append' → logprob: -14.134839057922363
    10. '=' → logprob: -14.259839057922363

Token 342: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.750012397766113
    3. ']' → logprob: -12.750012397766113
    4. '[' → logprob: -15.125012397766113
    5. ':' → logprob: -15.875012397766113
    6. ']+=' → logprob: -15.875012397766113
    7. '
' → logprob: -16.500011444091797
    8. '-' → logprob: -17.000011444091797
    9. '```' → logprob: -17.312511444091797
    10. '   ' → logprob: -17.312511444091797

Token 343: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004911953583359718
    2. ']+=' → logprob: -7.625491142272949
    3. ' ]' → logprob: -13.50049114227295
    4. ']+' → logprob: -13.62549114227295
    5. '[' → logprob: -15.25049114227295
    6. ')' → logprob: -16.625492095947266
    7. '']' → logprob: -17.250492095947266
    8. ' ' → logprob: -17.375492095947266
    9. ']]' → logprob: -17.875492095947266
    10. '+]' → logprob: -18.000492095947266

Token 344: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01817242056131363
    2. ' +=' → logprob: -4.018172264099121
    3. ']+=' → logprob: -11.393172264099121
    4. '+' → logprob: -12.018172264099121
    5. '=' → logprob: -12.268172264099121
    6. '[' → logprob: -15.393172264099121
    7. ' ' → logprob: -16.268173217773438
    8. '+=(' → logprob: -16.893173217773438
    9. '+='' → logprob: -16.893173217773438
    10. ']' → logprob: -17.268173217773438

Token 345: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.250045776367188
    4. '```' → logprob: -19.500045776367188
    5. ' ' → logprob: -20.375045776367188
    6. '
' → logprob: -20.625045776367188
    7. '１' → logprob: -21.000045776367188
    8. '`' → logprob: -21.375045776367188
    9. '۱' → logprob: -21.500045776367188
    10. '  ' → logprob: -21.500045776367188

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -17.750001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '
' → logprob: -19.375001907348633
    6. '<|end|>' → logprob: -19.750001907348633
    7. '`' → logprob: -20.000001907348633
    8. '  ' → logprob: -20.375001907348633
    9. '۱' → logprob: -20.500001907348633
    10. 'def' → logprob: -20.875001907348633

Token 347: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0062431450933218
    2. '
' → logprob: -5.5062432289123535
    3. '

' → logprob: -7.2562432289123535
    4. ' def' → logprob: -7.5062432289123535
    5. ' ' → logprob: -8.506242752075195
    6. '<|end|>' → logprob: -8.756242752075195
    7. '    
' → logprob: -9.256242752075195
    8. ' 
' → logprob: -9.381242752075195
    9. '  
' → logprob: -9.381242752075195
    10. '(' → logprob: -9.506242752075195

Token 348: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7969611883163452
    2. ' ' → logprob: -1.6719611883163452
    3. ')' → logprob: -1.9219611883163452
    4. 'd' → logprob: -2.1719613075256348
    5. 'r' → logprob: -3.6719613075256348
    6. 'def' → logprob: -3.6719613075256348
    7. 'i' → logprob: -3.9219613075256348
    8. '[' → logprob: -5.296961307525635
    9. '.' → logprob: -5.546961307525635
    10. '_' → logprob: -6.171961307525635

Token 349: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0020372492726892233
    2. ' is' → logprob: -6.252037048339844
    3. 'check' → logprob: -9.252037048339844
    4. 'all' → logprob: -12.127037048339844
    5. 's' → logprob: -13.002037048339844
    6. 'def' → logprob: -13.627037048339844
    7. ' check' → logprob: -13.627037048339844
    8. '```' → logprob: -14.502037048339844
    9. 'increment' → logprob: -14.627037048339844
    10. '_is' → logprob: -15.127037048339844

Token 350: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.001601506257429719
    2. '_a' → logprob: -7.126601696014404
    3. '_' → logprob: -7.251601696014404
    4. '_al' → logprob: -10.001601219177246
    5. ' _' → logprob: -10.126601219177246
    6. 'all' → logprob: -13.626601219177246
    7. '__' → logprob: -15.001601219177246
    8. 'a' → logprob: -15.626601219177246
    9. ' ' → logprob: -15.751601219177246
    10. '_
' → logprob: -16.126602172851562

Token 351: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0008198728901334107
    2. 's' → logprob: -7.375819683074951
    3. ' _' → logprob: -8.87582015991211
    4. '_' → logprob: -10.00082015991211
    5. '_sat' → logprob: -12.37582015991211
    6. ' satisfied' → logprob: -13.62582015991211
    7. ' ' → logprob: -14.87582015991211
    8. '_true' → logprob: -15.00082015991211
    9. '```' → logprob: -15.12582015991211
    10. '(s' → logprob: -15.37582015991211

Token 352: 'atisfied' (ID: 65362)
  Prédit: 'atisfied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfied' → logprob: -0.009149940684437752
    2. 's' → logprob: -4.75915002822876
    3. '_s' → logprob: -8.509149551391602
    4. 'at' → logprob: -8.884149551391602
    5. 'a' → logprob: -9.509149551391602
    6. 'atisf' → logprob: -10.259149551391602
    7. 'ats' → logprob: -10.634149551391602
    8. 'atis' → logprob: -11.009149551391602
    9. 'Satisfied' → logprob: -11.384149551391602
    10. '_' → logprob: -11.884149551391602

Token 353: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.014314526692032814
    2. '(' → logprob: -4.264314651489258
    3. '(count' → logprob: -9.514314651489258
    4. ' (' → logprob: -10.014314651489258
    5. '(S' → logprob: -11.889314651489258
    6. 's' → logprob: -12.264314651489258
    7. '(N' → logprob: -12.764314651489258
    8. '(len' → logprob: -13.014314651489258
    9. '(n' → logprob: -13.264314651489258
    10. '(
' → logprob: -13.764314651489258

Token 354: ',' (ID: 11)
  Prédit: 'atisfied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atisfied' → logprob: -0.0005008471780456603
    2. '_count' → logprob: -9.250500679016113
    3. 'atisf' → logprob: -9.375500679016113
    4. '_' → logprob: -9.500500679016113
    5. 's' → logprob: -9.625500679016113
    6. 'a' → logprob: -10.375500679016113
    7. '_at' → logprob: -10.875500679016113
    8. '_counter' → logprob: -10.875500679016113
    9. '(' → logprob: -10.875500679016113
    10. 'at' → logprob: -11.125500679016113

Token 355: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.14273115992546082
    2. ' M' → logprob: -2.017731189727783
    3. 's' → logprob: -10.642730712890625
    4. ')' → logprob: -11.017730712890625
    5. ' ' → logprob: -12.267730712890625
    6. 'm' → logprob: -12.392730712890625
    7. ' s' → logprob: -12.517730712890625
    8. '```' → logprob: -14.767730712890625
    9. ' ' → logprob: -14.892730712890625
    10. '`' → logprob: -14.892730712890625

Token 356: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03549032658338547
    2. '):
' → logprob: -3.5354902744293213
    3. ')' → logprob: -5.2854905128479
    4. ')==' → logprob: -8.660490036010742
    5. ':' → logprob: -8.910490036010742
    6. ' ):' → logprob: -9.285490036010742
    7. '==' → logprob: -9.285490036010742
    8. ' ==' → logprob: -10.160490036010742
    9. ',' → logprob: -10.410490036010742
    10. '):

' → logprob: -10.535490036010742

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7318859100341797
    2. 'return' → logprob: -1.2318859100341797
    3. ' return' → logprob: -1.4818859100341797
    4. 's' → logprob: -11.23188591003418
    5. ' s' → logprob: -11.35688591003418
    6. '	return' → logprob: -11.48188591003418
    7. ' ' → logprob: -12.35688591003418
    8. '    ' → logprob: -12.60688591003418
    9. '```' → logprob: -12.60688591003418
    10. '  ' → logprob: -13.35688591003418

Token 358: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.127613827586174
    2. ' return' → logprob: -2.1276137828826904
    3. 's' → logprob: -7.3776140213012695
    4. '   ' → logprob: -10.37761402130127
    5. ' s' → logprob: -10.50261402130127
    6. '```' → logprob: -13.50261402130127
    7. '`' → logprob: -16.002613067626953
    8. '`s' → logprob: -16.127613067626953
    9. '	return' → logprob: -16.127613067626953
    10. '(s' → logprob: -17.002613067626953

Token 359: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.25193557143211365
    2. 's' → logprob: -1.501935601234436
    3. '(s' → logprob: -12.251935958862305
    4. ' (' → logprob: -14.501935958862305
    5. ' ' → logprob: -14.751935958862305
    6. '(' → logprob: -15.251935958862305
    7. ' ' → logprob: -15.626935958862305
    8. '   ' → logprob: -15.876935958862305
    9. '	s' → logprob: -16.376935958862305
    10. '_s' → logprob: -17.376935958862305

Token 360: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1004939153790474
    2. '==' → logprob: -2.350493907928467
    3. ' >=' → logprob: -8.475494384765625
    4. '>=' → logprob: -9.850494384765625
    5. '   ' → logprob: -11.975494384765625
    6. '=' → logprob: -12.100494384765625
    7. ' ' → logprob: -12.475494384765625
    8. '[' → logprob: -13.475494384765625
    9. ' ' → logprob: -13.475494384765625
    10. '	' → logprob: -13.850494384765625

Token 361: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.07889209687709808
    2. ' M' → logprob: -2.5788919925689697
    3. ' ' → logprob: -13.32889175415039
    4. ' ' → logprob: -14.45389175415039
    5. '	M' → logprob: -16.95389175415039
    6. '   ' → logprob: -17.45389175415039
    7. '[' → logprob: -17.95389175415039
    8. '```' → logprob: -18.07889175415039
    9. '  ' → logprob: -18.45389175415039
    10. '<M' → logprob: -19.07889175415039

Token 362: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 363: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3620782494544983
    2. '[' → logprob: -1.3620781898498535
    3. '(' → logprob: -3.3620781898498535
    4. ')' → logprob: -4.8620781898498535
    5. '<|end|>' → logprob: -6.6120781898498535
    6. ' )' → logprob: -7.2370781898498535
    7. '    ' → logprob: -7.6120781898498535
    8. '   ' → logprob: -7.6120781898498535
    9. ' (' → logprob: -7.8620781898498535
    10. '  ' → logprob: -7.9870781898498535

Token 364: ' count' (ID: 3605)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.044473543763160706
    2. 'main' → logprob: -3.294473648071289
    3. ' count' → logprob: -5.794473648071289
    4. ' find' → logprob: -6.294473648071289
    5. 'count' → logprob: -7.669473648071289
    6. ' solve' → logprob: -7.919473648071289
    7. ' check' → logprob: -8.044473648071289
    8. ' search' → logprob: -9.044473648071289
    9. 'solve' → logprob: -9.794473648071289
    10. ' range' → logprob: -10.919473648071289

Token 365: '_valid' (ID: 23321)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09798987209796906
    2. '_s' → logprob: -2.847989797592163
    3. '_bits' → logprob: -4.847990036010742
    4. '_all' → logprob: -5.472990036010742
    5. '_options' → logprob: -5.472990036010742
    6. '_possible' → logprob: -5.472990036010742
    7. ' _' → logprob: -5.722990036010742
    8. '_choices' → logprob: -5.847990036010742
    9. '_states' → logprob: -6.847990036010742
    10. '_candidates' → logprob: -7.472990036010742

Token 366: '_config' (ID: 11500)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22370274364948273
    2. '_s' → logprob: -2.5987026691436768
    3. '_states' → logprob: -3.2237026691436768
    4. '_com' → logprob: -4.223702907562256
    5. '_config' → logprob: -4.223702907562256
    6. '_configs' → logprob: -4.848702907562256
    7. '_sub' → logprob: -4.973702907562256
    8. '(' → logprob: -4.973702907562256
    9. '_choices' → logprob: -5.098702907562256
    10. '_codes' → logprob: -5.598702907562256

Token 367: 'urations' (ID: 90060)
  Prédit: 'urations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urations' → logprob: -0.0004303116293158382
    2. '(' → logprob: -8.8754301071167
    3. 's' → logprob: -8.8754301071167
    4. 'ations' → logprob: -9.3754301071167
    5. 'ur' → logprob: -10.2504301071167
    6. 'u' → logprob: -12.0004301071167
    7. '(u' → logprob: -12.3754301071167
    8. '_' → logprob: -12.3754301071167
    9. '()' → logprob: -12.6254301071167
    10. 'uration' → logprob: -13.3754301071167

Token 368: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06287114322185516
    2. '(' → logprob: -2.812871217727661
    3. '():' → logprob: -7.812870979309082
    4. ' (' → logprob: -7.812870979309082
    5. '(n' → logprob: -10.562870979309082
    6. 'def' → logprob: -10.937870979309082
    7. '(T' → logprob: -11.062870979309082
    8. '(
' → logprob: -11.187870979309082
    9. '```' → logprob: -12.687870979309082
    10. '(i' → logprob: -13.062870979309082

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12970292568206787
    2. '):' → logprob: -2.1297030448913574
    3. '):
' → logprob: -6.004703044891357
    4. ')' → logprob: -9.2547025680542
    5. ' ,' → logprob: -9.5047025680542
    6. ' ):' → logprob: -9.7547025680542
    7. '   ' → logprob: -10.3797025680542
    8. '):
' → logprob: -11.0047025680542
    9. ',
' → logprob: -11.8797025680542
    10. '):

' → logprob: -12.7547025680542

Token 370: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0010387639049440622
    2. ' M' → logprob: -6.876038551330566
    3. '   ' → logprob: -13.126038551330566
    4. '1' → logprob: -14.126038551330566
    5. ')' → logprob: -14.626038551330566
    6. '```' → logprob: -14.626038551330566
    7. 'def' → logprob: -14.626038551330566
    8. '2' → logprob: -14.626038551330566
    9. ' ' → logprob: -15.751038551330566
    10. 'range' → logprob: -16.001039505004883

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005789077840745449
    2. '):' → logprob: -5.255789279937744
    3. '):
' → logprob: -7.755789279937744
    4. ' ,' → logprob: -9.630788803100586
    5. ',i' → logprob: -10.630788803100586
    6. '   ' → logprob: -11.130788803100586
    7. ',
' → logprob: -11.880788803100586
    8. '):
' → logprob: -12.380788803100586
    9. ')' → logprob: -13.005788803100586
    10. ' ):' → logprob: -13.630788803100586

Token 372: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0009579126490280032
    2. 'p' → logprob: -8.000957489013672
    3. ' S' → logprob: -8.375957489013672
    4. ')' → logprob: -8.875957489013672
    5. '   ' → logprob: -9.250957489013672
    6. 'T' → logprob: -9.750957489013672
    7. '):' → logprob: -10.250957489013672
    8. 'def' → logprob: -11.000957489013672
    9. '):
' → logprob: -11.875957489013672
    10. ' ' → logprob: -12.000957489013672

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011391390580683947
    2. ',i' → logprob: -10.125113487243652
    3. ' ,' → logprob: -10.375113487243652
    4. '):' → logprob: -11.125113487243652
    5. ',
' → logprob: -11.375113487243652
    6. '   ' → logprob: -11.750113487243652
    7. '):
' → logprob: -12.375113487243652
    8. '‌,' → logprob: -14.375113487243652
    9. ')' → logprob: -14.500113487243652
    10. ',p' → logprob: -14.625113487243652

Token 374: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00034928982495330274
    2. ' p' → logprob: -8.000349044799805
    3. '   ' → logprob: -11.875349044799805
    4. ' ' → logprob: -13.500349044799805
    5. ')' → logprob: -13.625349044799805
    6. 'M' → logprob: -14.375349044799805
    7. '```' → logprob: -14.500349044799805
    8. '       ' → logprob: -14.937849044799805
    9. 'i' → logprob: -15.250349044799805
    10. '    ' → logprob: -15.312849044799805

Token 375: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04473986104130745
    2. '):
' → logprob: -3.6697399616241455
    3. '):' → logprob: -4.169739723205566
    4. ',i' → logprob: -6.044739723205566
    5. '   ' → logprob: -8.044739723205566
    6. ' ,' → logprob: -10.044739723205566
    7. '):
' → logprob: -10.544739723205566
    8. ')' → logprob: -11.294739723205566
    9. '(i' → logprob: -11.544739723205566
    10. ',
' → logprob: -11.794739723205566

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1153399795293808
    2. ' result' → logprob: -3.365339994430542
    3. ' total' → logprob: -3.990339994430542
    4. ' valid' → logprob: -3.990339994430542
    5. ' count' → logprob: -4.365339756011963
    6. ' res' → logprob: -4.615339756011963
    7. ' ans' → logprob: -5.365339756011963
    8. 'result' → logprob: -5.490339756011963
    9. 'count' → logprob: -6.115339756011963
    10. 'total' → logprob: -6.740339756011963

Token 377: ' ans' (ID: 3345)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.02937168814241886
    2. 'result' → logprob: -4.779371738433838
    3. 'valid' → logprob: -4.779371738433838
    4. '   ' → logprob: -5.029371738433838
    5. 'ans' (adapté à ' ans') → logprob: -5.904371738433838
    6. 'total' → logprob: -6.529371738433838
    7. 'cnt' → logprob: -7.529371738433838
    8. 'answer' → logprob: -7.779371738433838
    9. 'counter' → logprob: -8.40437126159668
    10. ' count' → logprob: -9.02937126159668

Token 378: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08945061266422272
    2. '=' → logprob: -2.4644505977630615
    3. ' ' → logprob: -8.08945083618164
    4. '_' → logprob: -9.58945083618164
    5. '  ' → logprob: -10.08945083618164
    6. '   ' → logprob: -10.21445083618164
    7. ')' → logprob: -10.71445083618164
    8. ',' → logprob: -11.46445083618164
    9. '[' → logprob: -12.33945083618164
    10. ' +=' → logprob: -12.96445083618164

Token 379: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043004341423511505
    2. ' ' → logprob: -3.168004274368286
    3. '[' → logprob: -13.293004035949707
    4. '   ' → logprob: -13.293004035949707
    5. ' [' → logprob: -14.355504035949707
    6. ' ' → logprob: -15.980504035949707
    7. '```' → logprob: -15.980504035949707
    8. '(' → logprob: -16.293004989624023
    9. '  ' → logprob: -16.418004989624023
    10. '1' → logprob: -16.418004989624023

Token 380: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.62501335144043
    3. '[' → logprob: -12.62501335144043
    4. 'sum' → logprob: -15.62501335144043
    5. '   ' → logprob: -15.87501335144043
    6. '(' → logprob: -15.87501335144043
    7. '```' → logprob: -15.87501335144043
    8. '1' → logprob: -16.50001335144043
    9. '
' → logprob: -16.50001335144043
    10. '2' → logprob: -16.62501335144043

Token 381: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07926978915929794
    2. ' for' → logprob: -2.9542698860168457
    3. '
' → logprob: -3.9542698860168457
    4. ' 
' → logprob: -6.204269886016846
    5. '    
' → logprob: -6.579269886016846
    6. '	for' → logprob: -7.704269886016846
    7. '    ' → logprob: -7.829269886016846
    8. 'for' → logprob: -8.704269409179688
    9. '	
' → logprob: -8.829269409179688
    10. ',' → logprob: -9.329269409179688

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05548378825187683
    2. ' for' → logprob: -2.930483818054199
    3. 'for' → logprob: -8.6804838180542
    4. '
' → logprob: -8.6804838180542
    5. '    
' → logprob: -9.0554838180542
    6. '    ' → logprob: -9.6804838180542
    7. ' 
' → logprob: -10.5554838180542
    8. '	for' → logprob: -11.0554838180542
    9. ' ' → logprob: -11.5554838180542
    10. ',' → logprob: -11.9304838180542

Token 383: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3873198926448822
    2. ' for' → logprob: -1.1373199224472046
    3. '   ' → logprob: -7.762320041656494
    4. '```' → logprob: -12.387319564819336
    5. 'range' → logprob: -12.387319564819336
    6. ' ' → logprob: -12.762319564819336
    7. ' range' → logprob: -12.887319564819336
    8. ' i' → logprob: -13.137319564819336
    9. ' 
' → logprob: -13.262319564819336
    10. 'i' → logprob: -13.512319564819336

Token 384: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3134578764438629
    2. 'i' → logprob: -1.3134578466415405
    3. '```' → logprob: -9.688457489013672
    4. '   ' → logprob: -10.438457489013672
    5. ' ' → logprob: -10.563457489013672
    6. ' mask' → logprob: -10.688457489013672
    7. '_i' → logprob: -11.563457489013672
    8. 'mask' → logprob: -11.813457489013672
    9. '	i' → logprob: -11.938457489013672
    10. '`' → logprob: -12.438457489013672

Token 385: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008649318479001522
    2. 'in' → logprob: -4.7586493492126465
    3. ' ' → logprob: -10.508648872375488
    4. 'space' → logprob: -13.633648872375488
    5. ',' → logprob: -13.883648872375488
    6. ')' → logprob: -14.258648872375488
    7. '```' → logprob: -14.258648872375488
    8. 'n' → logprob: -14.383648872375488
    9. '_' → logprob: -14.633648872375488
    10. 'range' → logprob: -15.008648872375488

Token 386: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17975807189941406
    2. 'range' → logprob: -1.804758071899414
    3. ' ' → logprob: -12.304758071899414
    4. '	range' → logprob: -12.679758071899414
    5. ')' → logprob: -13.429758071899414
    6. '```' → logprob: -13.679758071899414
    7. '   ' → logprob: -13.804758071899414
    8. '(range' → logprob: -14.054758071899414
    9. ' xrange' → logprob: -15.054758071899414
    10. ' in' → logprob: -15.554758071899414

Token 387: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2045377939939499
    2. '1' → logprob: -1.7045377492904663
    3. ' (' → logprob: -6.454537868499756
    4. ' ' → logprob: -6.704537868499756
    5. '2' → logprob: -8.454537391662598
    6. '   ' → logprob: -9.329537391662598
    7. '```' → logprob: -11.954537391662598
    8. ',' → logprob: -12.204537391662598
    9. '0' → logprob: -12.954537391662598
    10. ')' → logprob: -12.954537391662598

Token 388: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0060698105953633785
    2. '2' → logprob: -5.631069660186768
    3. '(' → logprob: -6.006069660186768
    4. ' ' → logprob: -13.006070137023926
    5. '   ' → logprob: -14.756070137023926
    6. ' (' → logprob: -15.631070137023926
    7. '0' → logprob: -16.88106918334961
    8. '```' → logprob: -17.25606918334961
    9. ')' → logprob: -17.38106918334961
    10. '[' → logprob: -18.75606918334961

Token 389: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.20214812457561493
    2. ' **' → logprob: -1.7021480798721313
    3. ' ' → logprob: -7.327147960662842
    4. '^' → logprob: -9.7021484375
    5. '
' → logprob: -12.4521484375
    6. ' **)' → logprob: -12.9521484375
    7. ' ' → logprob: -13.0771484375
    8. '```' → logprob: -13.2021484375
    9. ' )' → logprob: -13.5771484375
    10. ')' → logprob: -13.7021484375

Token 390: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.061054359131958e-06
    2. ' N' → logprob: -11.750007629394531
    3. '	N' → logprob: -16.25000762939453
    4. '   ' → logprob: -17.62500762939453
    5. ' ' → logprob: -18.87500762939453
    6. '```' → logprob: -19.12500762939453
    7. '(N' → logprob: -19.50000762939453
    8. '
' → logprob: -19.75000762939453
    9. '_N' → logprob: -19.87500762939453
    10. 'Ｎ' → logprob: -20.25000762939453

Token 391: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006859870045445859
    2. '):
' → logprob: -7.875686168670654
    3. ' ):' → logprob: -8.125685691833496
    4. ')' → logprob: -12.500685691833496
    5. ':' → logprob: -12.875685691833496
    6. '   ' → logprob: -13.125685691833496
    7. '):
' → logprob: -14.125685691833496
    8. '}:' → logprob: -15.625685691833496
    9. '():' → logprob: -15.875685691833496
    10. ' ):
' → logprob: -16.000686645507812

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011834961362183094
    2. ' if' → logprob: -4.511835098266602
    3. 'if' → logprob: -7.511835098266602
    4. '   ' → logprob: -9.511835098266602
    5. '      ' → logprob: -10.511835098266602
    6. ' ' → logprob: -10.636835098266602
    7. '    ' → logprob: -10.886835098266602
    8. ',' → logprob: -11.136835098266602
    9. '        
' → logprob: -11.261835098266602
    10. '<|end|>' → logprob: -11.261835098266602

Token 393: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20268987119197845
    2. ' if' → logprob: -1.8276898860931396
    3. '       ' → logprob: -3.8276898860931396
    4. '   ' → logprob: -7.0776896476745605
    5. '
' → logprob: -10.577690124511719
    6. '    ' → logprob: -10.952690124511719
    7. '           ' → logprob: -11.452690124511719
    8. '      ' → logprob: -12.577690124511719
    9. '	if' → logprob: -12.577690124511719
    10. '```' → logprob: -12.577690124511719

Token 394: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.20156167447566986
    2. 'check' → logprob: -1.701561689376831
    3. '(check' → logprob: -8.82656192779541
    4. '   ' → logprob: -14.07656192779541
    5. '	check' → logprob: -14.32656192779541
    6. '.check' → logprob: -16.826560974121094
    7. '_check' → logprob: -17.451560974121094
    8. '       ' → logprob: -17.576560974121094
    9. '    ' → logprob: -17.826560974121094
    10. ' (' → logprob: -17.951560974121094

Token 395: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -6.704273118884885e-07
    2. '_conditions' → logprob: -15.250000953674316
    3. '_condition' → logprob: -15.625000953674316
    4. 'all' → logprob: -16.625
    5. '_s' → logprob: -18.625
    6. '_' → logprob: -19.25
    7. '_valid' → logprob: -19.375
    8. '_out' → logprob: -19.5
    9. '_check' → logprob: -19.625
    10. '_total' → logprob: -19.75

Token 396: '_conditions' (ID: 136843)
  Prédit: '_conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_conditions' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.000000953674316
    3. 'conditions' → logprob: -16.375
    4. ' _' → logprob: -16.625
    5. '```' → logprob: -16.75
    6. '_condition' → logprob: -17.0
    7. '(_' → logprob: -17.625
    8. '_config' → logprob: -17.625
    9. '_options' → logprob: -17.75
    10. ' conditions' → logprob: -18.25

Token 397: '_wrapper' (ID: 55096)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.010181352496147156
    2. '(' → logprob: -4.760181427001953
    3. '(None' → logprob: -6.885181427001953
    4. ' (' → logprob: -8.260181427001953
    5. '(i' → logprob: -8.385181427001953
    6. '((' → logprob: -11.385181427001953
    7. '```' → logprob: -11.510181427001953
    8. '(n' → logprob: -11.760181427001953
    9. '(True' → logprob: -12.135181427001953
    10. '   ' → logprob: -12.385181427001953

Token 398: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18537752330303192
    2. '(N' → logprob: -2.185377597808838
    3. '(T' → logprob: -3.060377597808838
    4. ' (' → logprob: -5.060377597808838
    5. '(i' → logprob: -5.810377597808838
    6. '(
' → logprob: -8.06037712097168
    7. '(None' → logprob: -9.56037712097168
    8. '((' → logprob: -10.06037712097168
    9. ' ' → logprob: -10.18537712097168
    10. ':' → logprob: -10.56037712097168

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008249913225881755
    2. ' ,' → logprob: -7.750824928283691
    3. ',M' → logprob: -8.000824928283691
    4. ',
' → logprob: -10.375824928283691
    5. 'M' → logprob: -12.250824928283691
    6. '       ' → logprob: -12.375824928283691
    7. '   ' → logprob: -12.500824928283691
    8. ',

' → logprob: -13.000824928283691
    9. ')' → logprob: -13.125824928283691
    10. '‌,' → logprob: -13.500824928283691

Token 400: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0022059278562664986
    2. ' M' → logprob: -6.127205848693848
    3. '   ' → logprob: -11.752205848693848
    4. ' ' → logprob: -12.627205848693848
    5. '       ' → logprob: -13.252205848693848
    6. '  ' → logprob: -13.752205848693848
    7. ',' → logprob: -13.877205848693848
    8. 'i' → logprob: -14.002205848693848
    9. ')' → logprob: -14.127205848693848
    10. '           ' → logprob: -14.252205848693848

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004255508247297257
    2. ',S' → logprob: -7.875425338745117
    3. ' ,' → logprob: -10.375425338745117
    4. ',
' → logprob: -11.500425338745117
    5. 'S' → logprob: -13.375425338745117
    6. ')' → logprob: -14.500425338745117
    7. ',

' → logprob: -14.750425338745117
    8. '‌,' → logprob: -15.375425338745117
    9. '<|end|>' → logprob: -15.625425338745117
    10. ',
' → logprob: -15.750425338745117

Token 402: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0036067210603505373
    2. ' S' → logprob: -5.628606796264648
    3. '   ' → logprob: -12.878606796264648
    4. '       ' → logprob: -13.628606796264648
    5. ' ' → logprob: -14.253606796264648
    6. '           ' → logprob: -14.628606796264648
    7. '    ' → logprob: -15.003606796264648
    8. '  ' → logprob: -15.128606796264648
    9. '     ' → logprob: -15.378606796264648
    10. '          ' → logprob: -15.753606796264648

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.639096970204264e-05
    2. ',p' → logprob: -9.750096321105957
    3. ',i' → logprob: -10.500096321105957
    4. ' ,' → logprob: -11.875096321105957
    5. ',
' → logprob: -13.625096321105957
    6. 'p' → logprob: -14.250096321105957
    7. ')' → logprob: -14.625096321105957
    8. '   ' → logprob: -15.125096321105957
    9. ',user' → logprob: -15.500096321105957
    10. '),' → logprob: -15.750096321105957

Token 404: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02325223572552204
    2. ' p' → logprob: -3.773252248764038
    3. ' ' → logprob: -12.898252487182617
    4. '   ' → logprob: -13.148252487182617
    5. '
' → logprob: -14.773252487182617
    6. '    ' → logprob: -14.898252487182617
    7. ',' → logprob: -15.023252487182617
    8. '  ' → logprob: -15.273252487182617
    9. '       ' → logprob: -15.273252487182617
    10. '     ' → logprob: -15.898252487182617

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005172899691388011
    2. ',i' → logprob: -7.87551736831665
    3. ' ,' → logprob: -9.000516891479492
    4. '   ' → logprob: -11.875516891479492
    5. ',
' → logprob: -12.875516891479492
    6. ')' → logprob: -13.750516891479492
    7. 'i' → logprob: -14.375516891479492
    8. '):' → logprob: -14.875516891479492
    9. '       ' → logprob: -15.000516891479492
    10. '(i' → logprob: -15.375516891479492

Token 406: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011075528338551521
    2. ' i' → logprob: -4.511075496673584
    3. '   ' → logprob: -10.886075973510742
    4. ')' → logprob: -13.011075973510742
    5. ' ' → logprob: -13.386075973510742
    6. '       ' → logprob: -14.261075973510742
    7. ',' → logprob: -14.386075973510742
    8. '  ' → logprob: -14.386075973510742
    9. ')i' → logprob: -14.636075973510742
    10. '```' → logprob: -14.636075973510742

Token 407: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004108915571123362
    2. '):
' → logprob: -5.504108905792236
    3. ')' → logprob: -10.754109382629395
    4. '):
' → logprob: -12.379109382629395
    5. ' ):' → logprob: -13.379109382629395
    6. '   ' → logprob: -13.504109382629395
    7. ':' → logprob: -14.254109382629395
    8. '):

' → logprob: -14.379109382629395
    9. '       ' → logprob: -15.254109382629395
    10. '():' → logprob: -16.254108428955078

Token 408: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5932291150093079
    2. '           ' → logprob: -0.8432291150093079
    3. ':
' → logprob: -4.593229293823242
    4. '       ' → logprob: -5.843229293823242
    5. ' :' → logprob: -6.218229293823242
    6. '):' → logprob: -7.218229293823242
    7. '<|end|>' → logprob: -7.968229293823242
    8. '):
' → logprob: -8.343229293823242
    9. '=' → logprob: -9.093229293823242
    10. '<|end|>' → logprob: -9.343229293823242

Token 409: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.12695708870887756
    2. 'ans' (adapté à ' ans') → logprob: -2.1269571781158447
    3. '(ans' → logprob: -11.126956939697266
    4. '           ' → logprob: -12.251956939697266
    5. '	ans' → logprob: -12.251956939697266
    6. '       ' → logprob: -13.001956939697266
    7. '_ans' → logprob: -13.626956939697266
    8. '   ' → logprob: -14.251956939697266
    9. '
' → logprob: -14.876956939697266
    10. '               ' → logprob: -16.126956939697266

Token 410: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008615161292254925
    2. '+=' → logprob: -4.758615016937256
    3. '+' → logprob: -15.008615493774414
    4. ']+=' → logprob: -15.508615493774414
    5. ' +' → logprob: -17.633615493774414
    6. '    ' → logprob: -17.633615493774414
    7. '=' → logprob: -17.883615493774414
    8. ' ' → logprob: -17.883615493774414
    9. ')' → logprob: -18.008615493774414
    10. ' ' → logprob: -18.133615493774414

Token 411: ' increment' (ID: 24032)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5235957503318787
    2. ' ans' → logprob: -0.8985957503318787
    3. '+' → logprob: -8.398595809936523
    4. '(ans' → logprob: -8.648595809936523
    5. '	ans' → logprob: -10.898595809936523
    6. '+=' → logprob: -11.273595809936523
    7. '0' → logprob: -12.023595809936523
    8. ' ' → logprob: -12.148595809936523
    9. 'i' → logprob: -12.273595809936523
    10. ' i' → logprob: -12.398595809936523

Token 412: '_ans' (ID: 146254)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.07419747859239578
    2. 'ans' → logprob: -2.69919753074646
    3. '(' → logprob: -5.699197292327881
    4. ' (' → logprob: -7.824197292327881
    5. ' ans' → logprob: -8.199197769165039
    6. '_ans' → logprob: -9.449197769165039
    7. '	ans' → logprob: -9.574197769165039
    8. '(
' → logprob: -10.699197769165039
    9. '(answer' → logprob: -11.574197769165039
    10. '+' → logprob: -11.824197769165039

Token 413: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0011752246646210551
    2. '(' → logprob: -7.376175403594971
    3. 'ans' → logprob: -7.626175403594971
    4. ' (' → logprob: -10.501174926757812
    5. '1' → logprob: -11.501174926757812
    6. '	ans' → logprob: -12.376174926757812
    7. '(
' → logprob: -12.751174926757812
    8. ' ans' → logprob: -12.876174926757812
    9. '```' → logprob: -13.126174926757812
    10. '_ans' → logprob: -13.501174926757812

Token 414: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9407854676246643
    2. ')' → logprob: -1.0657854080200195
    3. ' +' → logprob: -1.4407854080200195
    4. ' )' → logprob: -3.8157854080200195
    5. ',' → logprob: -5.3157854080200195
    6. ')+' → logprob: -7.5657854080200195
    7. ' ,' → logprob: -8.31578540802002
    8. '1' → logprob: -8.44078540802002
    9. '   ' → logprob: -8.44078540802002
    10. '()' → logprob: -9.56578540802002

Token 415: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6433002948760986
    2. ' return' → logprob: -2.0183002948760986
    3. ' 
' → logprob: -2.3933002948760986
    4. '   ' → logprob: -2.3933002948760986
    5. 'def' → logprob: -3.3933002948760986
    6. '
' → logprob: -3.5183002948760986
    7. '    
' → logprob: -4.0183000564575195
    8. '<|end|>' → logprob: -4.1433000564575195
    9. '\' → logprob: -4.2683000564575195
    10. '1' → logprob: -4.6433000564575195

Token 417: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.10023999959230423
    2. 'ans' → logprob: -2.3502399921417236
    3. '(ans' → logprob: -10.350239753723145
    4. '	ans' → logprob: -13.850239753723145
    5. '_ans' → logprob: -15.100239753723145
    6. ' ' → logprob: -17.47524070739746
    7. 'answer' → logprob: -19.10024070739746
    8. 'Ans' → logprob: -20.10024070739746
    9. 'ANS' → logprob: -20.22524070739746
    10. 'anst' → logprob: -20.22524070739746

Token 418: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4559091031551361
    2. 'def' → logprob: -1.2059091329574585
    3. '_' → logprob: -3.205909013748169
    4. '(
' → logprob: -4.455909252166748
    5. '[' → logprob: -5.830909252166748
    6. '<|end|>' → logprob: -5.955909252166748
    7. '\' → logprob: -6.705909252166748
    8. 's' → logprob: -7.205909252166748
    9. '_n' → logprob: -7.205909252166748
    10. '()' → logprob: -7.455909252166748

Token 419: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02749081328511238
    2. ' def' → logprob: -4.902490615844727
    3. '(' → logprob: -5.152490615844727
    4. '(
' → logprob: -6.027490615844727
    5. ' ' → logprob: -6.152490615844727
    6. ' 
' → logprob: -6.277490615844727
    7. '\' → logprob: -6.402490615844727
    8. '<|end|>' → logprob: -6.527490615844727
    9. '+' → logprob: -6.902490615844727
    10. '_' → logprob: -7.402490615844727

Token 420: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.8139907121658325
    2. 'increment' → logprob: -1.3139907121658325
    3. 'check' → logprob: -1.5639907121658325
    4. ' increment' → logprob: -2.938990592956543
    5. 'count' → logprob: -3.813990592956543
    6. ' count' → logprob: -5.563990592956543
    7. ' main' → logprob: -11.313990592956543
    8. 'in' → logprob: -12.063990592956543
    9. ' ' → logprob: -12.188990592956543
    10. 'print' → logprob: -12.813990592956543

Token 421: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.0002470350591465831
    2. '_' → logprob: -8.37524700164795
    3. '_a' → logprob: -11.75024700164795
    4. ' _' → logprob: -12.62524700164795
    5. '_al' → logprob: -13.37524700164795
    6. '_ALL' → logprob: -13.87524700164795
    7. '__' → logprob: -14.00024700164795
    8. '_All' → logprob: -14.62524700164795
    9. 'All' → logprob: -14.87524700164795
    10. 'all' → logprob: -15.87524700164795

Token 422: '_conditions' (ID: 136843)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.32438865303993225
    2. '_conditions' → logprob: -1.3243886232376099
    3. '_' → logprob: -4.69938850402832
    4. '_s' → logprob: -6.32438850402832
    5. '_condition' → logprob: -9.57438850402832
    6. ' _' → logprob: -10.44938850402832
    7. '_a' → logprob: -10.94938850402832
    8. '_for' → logprob: -12.57438850402832
    9. '_options' → logprob: -12.69938850402832
    10. '_cond' → logprob: -12.69938850402832

Token 423: '_wrapper' (ID: 55096)
  Prédit: '_wrapper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wrapper' → logprob: -0.00039135036058723927
    2. '_wrap' → logprob: -8.000391006469727
    3. '(N' → logprob: -10.375391006469727
    4. '(' → logprob: -12.000391006469727
    5. '_' → logprob: -12.000391006469727
    6. '(_' → logprob: -12.500391006469727
    7. '_wr' → logprob: -12.500391006469727
    8. '_(' → logprob: -13.250391006469727
    9. '(wrapper' → logprob: -14.000391006469727
    10. '_w' → logprob: -14.750391006469727

Token 424: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00030686063109897077
    2. '(' → logprob: -8.125307083129883
    3. ' (' → logprob: -11.875307083129883
    4. '(*' → logprob: -13.000307083129883
    5. 'def' → logprob: -15.375307083129883
    6. '(...' → logprob: -15.625307083129883
    7. '(
' → logprob: -15.750307083129883
    8. '(...)' → logprob: -15.750307083129883
    9. '():' → logprob: -15.875307083129883
    10. '(n' → logprob: -16.000307083129883

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.027225754223764e-05
    2. ',M' → logprob: -10.000060081481934
    3. ' ,' → logprob: -11.250060081481934
    4. 'M' → logprob: -13.875060081481934
    5. ',
' → logprob: -15.250060081481934
    6. '_,' → logprob: -16.00006103515625
    7. '   ' → logprob: -16.25006103515625
    8. ' M' → logprob: -16.37506103515625
    9. '```' → logprob: -17.00006103515625
    10. '‌,' → logprob: -17.12506103515625

Token 426: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.014165744185447693
    2. ' M' → logprob: -4.264165878295898
    3. '   ' → logprob: -13.889165878295898
    4. ' ' → logprob: -14.264165878295898
    5. '    ' → logprob: -15.764165878295898
    6. '  ' → logprob: -15.889165878295898
    7. ')' → logprob: -16.0141658782959
    8. ',' → logprob: -16.1391658782959
    9. '```' → logprob: -16.3891658782959
    10. '       ' → logprob: -17.0141658782959

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.895480277715251e-06
    2. ' ,' → logprob: -12.125008583068848
    3. ',p' → logprob: -13.625008583068848
    4. ',
' → logprob: -13.875008583068848
    5. ',s' → logprob: -15.125008583068848
    6. ',S' → logprob: -15.250008583068848
    7. '‌,' → logprob: -15.250008583068848
    8. ',

' → logprob: -15.750008583068848
    9. ')' → logprob: -15.875008583068848
    10. '_,' → logprob: -16.875009536743164

Token 428: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0006273718317970634
    2. ' S' → logprob: -7.375627517700195
    3. ' ' → logprob: -14.500627517700195
    4. '   ' → logprob: -15.250627517700195
    5. '  ' → logprob: -17.000627517700195
    6. 'p' → logprob: -17.375627517700195
    7. '_S' → logprob: -17.625627517700195
    8. '	S' → logprob: -17.750627517700195
    9. '       ' → logprob: -17.750627517700195
    10. ')' → logprob: -18.000627517700195

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.000763510703109e-05
    2. ',p' → logprob: -10.250040054321289
    3. ' ,' → logprob: -13.000040054321289
    4. 'p' → logprob: -13.625040054321289
    5. ',
' → logprob: -14.500040054321289
    6. ',i' → logprob: -16.00004005432129
    7. '```' → logprob: -16.12504005432129
    8. '_,' → logprob: -16.50004005432129
    9. ')' → logprob: -16.62504005432129
    10. ',

' → logprob: -17.25004005432129

Token 430: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00012082771718269214
    2. 'i' → logprob: -9.250121116638184
    3. ' p' → logprob: -10.625121116638184
    4. '   ' → logprob: -15.625121116638184
    5. ' ' → logprob: -16.375120162963867
    6. ' i' → logprob: -17.250120162963867
    7. ',' → logprob: -18.000120162963867
    8. '```' → logprob: -18.000120162963867
    9. '     ' → logprob: -18.125120162963867
    10. ')' → logprob: -18.625120162963867

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001462107611587271
    2. ',i' → logprob: -8.87514591217041
    3. ' ,' → logprob: -12.12514591217041
    4. ',
' → logprob: -14.50014591217041
    5. '   ' → logprob: -16.500146865844727
    6. 'i' → logprob: -16.500146865844727
    7. ',N' → logprob: -16.625146865844727
    8. '_,' → logprob: -17.125146865844727
    9. '‌,' → logprob: -17.125146865844727
    10. '```' → logprob: -17.750146865844727

Token 432: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003178071230649948
    2. ' i' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.628177642822266
    4. ' ' → logprob: -15.878177642822266
    5. '	i' → logprob: -17.003177642822266
    6. ')' → logprob: -17.503177642822266
    7. 'I' → logprob: -18.753177642822266
    8. ')i' → logprob: -18.753177642822266
    9. '  ' → logprob: -19.253177642822266
    10. '```' → logprob: -19.628177642822266

Token 433: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017553119687363505
    2. '):
' → logprob: -9.000175476074219
    3. ')' → logprob: -9.875175476074219
    4. ':' → logprob: -15.000175476074219
    5. '):
' → logprob: -16.00017547607422
    6. ' ):' → logprob: -16.37517547607422
    7. '):

' → logprob: -16.75017547607422
    8. '():' → logprob: -17.25017547607422
    9. '   ' → logprob: -17.50017547607422
    10. '）：' → logprob: -18.62517547607422

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050896141678094864
    2. 'return' → logprob: -3.050896167755127
    3. 'check' → logprob: -6.925896167755127
    4. ' return' → logprob: -6.925896167755127
    5. 'def' → logprob: -8.050895690917969
    6. ' check' → logprob: -11.800895690917969
    7. '```' → logprob: -11.925895690917969
    8. '	return' → logprob: -12.300895690917969
    9. '   ' → logprob: -13.425895690917969
    10. '{return' → logprob: -14.550895690917969

Token 435: ' result' (ID: 1534)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0029684302862733603
    2. 'check' → logprob: -6.0029683113098145
    3. '   ' → logprob: -7.8779683113098145
    4. ' return' → logprob: -9.127968788146973
    5. 'def' → logprob: -12.502968788146973
    6. '```' → logprob: -14.002968788146973
    7. ' check' → logprob: -15.877968788146973
    8. '	return' → logprob: -16.377967834472656
    9. 'try' → logprob: -17.002967834472656
    10. '``' → logprob: -17.127967834472656

Token 436: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132673501968384
    2. ' =' → logprob: -1.3132673501968384
    3. ')' → logprob: -13.438267707824707
    4. 'def' → logprob: -13.813267707824707
    5. '   ' → logprob: -13.938267707824707
    6. ' =
' → logprob: -14.563267707824707
    7. '=
' → logprob: -14.938267707824707
    8. '=get' → logprob: -15.063267707824707
    9. ' ' → logprob: -15.438267707824707
    10. ':' → logprob: -15.563267707824707

Token 437: ' [' (ID: 723)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.16022463142871857
    2. ' check' → logprob: -1.9102246761322021
    3. '	check' → logprob: -15.160224914550781
    4. '(check' → logprob: -15.910224914550781
    5. '   ' → logprob: -16.16022491455078
    6. '_check' → logprob: -17.41022491455078
    7. 'chec' → logprob: -18.03522491455078
    8. ' ' → logprob: -18.28522491455078
    9. '.check' → logprob: -18.41022491455078
    10. 'チェック' → logprob: -20.41022491455078

Token 438: '0' (ID: 15)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.06269582360982895
    2. 'False' → logprob: -2.8126957416534424
    3. '0' → logprob: -7.4376959800720215
    4. ' check' → logprob: -9.312695503234863
    5. ' False' → logprob: -11.062695503234863
    6. 'not' → logprob: -11.437695503234863
    7. 'True' → logprob: -11.562695503234863
    8. 'None' → logprob: -12.437695503234863
    9. '(check' → logprob: -12.437695503234863
    10. ']' → logprob: -13.937695503234863

Token 439: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.09025517851114273
    2. ']' → logprob: -2.4652552604675293
    3. '0' → logprob: -7.090255260467529
    4. ']

' → logprob: -7.715255260467529
    5. ']
' → logprob: -10.715254783630371
    6. '[' → logprob: -11.965254783630371
    7. '()]
' → logprob: -13.715254783630371
    8. '1' → logprob: -13.840254783630371
    9. '];' → logprob: -13.965254783630371
    10. ' ]
' → logprob: -14.715254783630371

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6035116314888
    2. 'result' → logprob: -0.9785116314888
    3. ' result' → logprob: -3.2285115718841553
    4. ' if' → logprob: -3.9785115718841553
    5. 'if' → logprob: -4.353511810302734
    6. 'def' → logprob: -6.353511810302734
    7. ')' → logprob: -6.603511810302734
    8. 'return' → logprob: -7.478511810302734
    9. ' return' → logprob: -7.978511810302734
    10. '
' → logprob: -7.978511810302734

Token 441: ' T' (ID: 353)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.47604304552078247
    2. 'if' → logprob: -0.9760430455207825
    3. 'check' → logprob: -6.726043224334717
    4. 'def' → logprob: -7.976043224334717
    5. 'res' → logprob: -8.726042747497559
    6. 'return' → logprob: -9.226042747497559
    7. ' if' → logprob: -9.976042747497559
    8. 's' → logprob: -10.226042747497559
    9. '   ' → logprob: -10.601042747497559
    10. '
' → logprob: -11.726042747497559

Token 442: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0890556126832962
    2. ' =' → logprob: -2.4640555381774902
    3. '[' → logprob: -9.714056015014648
    4. '[:]' → logprob: -10.964056015014648
    5. ')' → logprob: -11.214056015014648
    6. '=
' → logprob: -12.339056015014648
    7. 'initialize' → logprob: -13.214056015014648
    8. ']' → logprob: -13.464056015014648
    9. '   ' → logprob: -13.464056015014648
    10. '.' → logprob: -13.464056015014648

Token 443: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.014191241934895515
    2. ' initialize' → logprob: -4.264191150665283
    3. '[' → logprob: -11.264191627502441
    4. '	initialize' → logprob: -11.639191627502441
    5. '[]' → logprob: -13.264191627502441
    6. ' [' → logprob: -13.889191627502441
    7. '_initialize' → logprob: -14.639191627502441
    8. 'initial' → logprob: -14.639191627502441
    9. '.initialize' → logprob: -14.764191627502441
    10. '[in' → logprob: -15.264191627502441

Token 444: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.01732160523533821
    2. 'T' → logprob: -4.142321586608887
    3. '[' → logprob: -7.392321586608887
    4. '[N' → logprob: -8.017321586608887
    5. '(N' → logprob: -9.017321586608887
    6. '```' → logprob: -9.767321586608887
    7. '_' → logprob: -10.142321586608887
    8. '(T' → logprob: -10.642321586608887
    9. '[T' → logprob: -10.767321586608887
    10. '(' → logprob: -10.767321586608887

Token 445: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00044437398901209235
    2. 'N' → logprob: -8.000444412231445
    3. '(' → logprob: -9.750444412231445
    4. '<|end|>' → logprob: -10.000444412231445
    5. '(len' → logprob: -13.500444412231445
    6. 'def' → logprob: -14.000444412231445
    7. '[N' → logprob: -14.125444412231445
    8. '(n' → logprob: -14.625444412231445
    9. '```' → logprob: -15.125444412231445
    10. ',N' → logprob: -15.125444412231445

Token 446: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03383034095168114
    2. ')' → logprob: -3.408830404281616
    3. '   ' → logprob: -8.783830642700195
    4. '())
' → logprob: -11.283830642700195
    5. '()
' → logprob: -11.908830642700195
    6. ')

' → logprob: -12.283830642700195
    7. '()' → logprob: -12.908830642700195
    8. ')
' → logprob: -12.908830642700195
    9. ' )
' → logprob: -14.658830642700195
    10. '[' → logprob: -14.783830642700195

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006533830892294645
    2. ' for' → logprob: -5.631533622741699
    3. 'for' → logprob: -6.381533622741699
    4. 'update' → logprob: -8.1315336227417
    5. 'result' → logprob: -8.3815336227417
    6. ' update' → logprob: -8.7565336227417
    7. '<|end|>' → logprob: -8.8815336227417
    8. 'def' → logprob: -9.0065336227417
    9. 'T' → logprob: -9.6315336227417
    10. ' result' → logprob: -10.2565336227417

Token 448: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -0.3011465072631836
    2. 'for' → logprob: -1.8011465072631836
    3. 'result' → logprob: -3.1761465072631836
    4. ' for' → logprob: -3.6761465072631836
    5. ' T' → logprob: -4.301146507263184
    6. 'update' → logprob: -5.176146507263184
    7. '   ' → logprob: -5.176146507263184
    8. 'def' → logprob: -7.176146507263184
    9. ' result' → logprob: -7.551146507263184
    10. 'updated' → logprob: -7.926146507263184

Token 449: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22541984915733337
    2. ' =' → logprob: -1.6004198789596558
    3. 'updated' → logprob: -13.100419998168945
    4. '[:]' → logprob: -13.975419998168945
    5. ' ' → logprob: -14.350419998168945
    6. '[' → logprob: -14.350419998168945
    7. '   ' → logprob: -14.725419998168945
    8. 'update' → logprob: -14.725419998168945
    9. 'Updated' → logprob: -15.350419998168945
    10. ',' → logprob: -15.600419998168945

Token 450: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.026303550228476524
    2. ' update' → logprob: -3.65130352973938
    3. '   ' → logprob: -13.6513032913208
    4. '[' → logprob: -14.7763032913208
    5. '	update' → logprob: -14.9013032913208
    6. 'increment' → logprob: -14.9013032913208
    7. ' ' → logprob: -15.4013032913208
    8. '.update' → logprob: -15.5263032913208
    9. ' [' → logprob: -16.151304244995117
    10. 'initialize' → logprob: -16.151304244995117

Token 451: '_T' (ID: 2154)
  Prédit: '_T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.00010521204239921644
    2. '_' → logprob: -10.000104904174805
    3. '_S' → logprob: -10.500104904174805
    4. '_Tab' → logprob: -12.250104904174805
    5. ' _' → logprob: -12.375104904174805
    6. '_from' → logprob: -13.000104904174805
    7. '```' → logprob: -13.000104904174805
    8. '_F' → logprob: -13.375104904174805
    9. '_tokens' → logprob: -13.750104904174805
    10. '_TC' → logprob: -13.750104904174805

Token 452: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -6.0629870858974755e-05
    2. 'from' → logprob: -9.87506103515625
    3. '_T' → logprob: -11.87506103515625
    4. '_for' → logprob: -13.75006103515625
    5. '_f' → logprob: -15.50006103515625
    6. '_FROM' → logprob: -15.87506103515625
    7. '```' → logprob: -16.25006103515625
    8. '_on' → logprob: -16.37506103515625
    9. 'From' → logprob: -16.37506103515625
    10. '_to' → logprob: -16.50006103515625

Token 453: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.11286693066358566
    2. 'i' → logprob: -2.2378668785095215
    3. ' i' → logprob: -11.36286735534668
    4. 'T' → logprob: -11.36286735534668
    5. '_T' → logprob: -11.36286735534668
    6. '```' → logprob: -12.98786735534668
    7. '_t' → logprob: -13.86286735534668
    8. '_' → logprob: -14.11286735534668
    9. 'I' → logprob: -14.36286735534668
    10. '
' → logprob: -14.61286735534668

Token 454: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.0005622077151201665
    2. '(' → logprob: -7.5005621910095215
    3. ' (' → logprob: -12.00056266784668
    4. ' T' → logprob: -13.25056266784668
    5. 'T' → logprob: -14.62556266784668
    6. '(
' → logprob: -14.87556266784668
    7. ' ' → logprob: -15.75056266784668
    8. '```' → logprob: -16.00056266784668
    9. '[T' → logprob: -16.37556266784668
    10. ')' → logprob: -16.87556266784668

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02396874874830246
    2. '(T' → logprob: -3.8989686965942383
    3. ',T' → logprob: -6.273968696594238
    4. '(' → logprob: -7.023968696594238
    5. ' ,' → logprob: -8.023968696594238
    6. ')' → logprob: -8.398968696594238
    7. ',
' → logprob: -10.773968696594238
    8. ' T' → logprob: -11.023968696594238
    9. ' (' → logprob: -11.273968696594238
    10. '[T' → logprob: -11.773968696594238

Token 456: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01251376885920763
    2. ' i' → logprob: -4.387513637542725
    3. '   ' → logprob: -13.387514114379883
    4. ' ' → logprob: -14.262514114379883
    5. ')' → logprob: -14.637514114379883
    6. '
' → logprob: -15.012514114379883
    7. 'T' → logprob: -15.762514114379883
    8. '	i' → logprob: -15.762514114379883
    9. ')i' → logprob: -15.887514114379883
    10. '
' → logprob: -16.137514114379883

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016789869405329227
    2. ')' → logprob: -6.876678943634033
    3. '   ' → logprob: -8.126679420471191
    4. ')
' → logprob: -8.751679420471191
    5. ' ,' → logprob: -9.376679420471191
    6. ',N' → logprob: -9.376679420471191
    7. ',
' → logprob: -11.376679420471191
    8. ',T' → logprob: -12.126679420471191
    9. ' ' → logprob: -13.251679420471191
    10. ',n' → logprob: -14.376679420471191

Token 458: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00033546582562848926
    2. ' N' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.375335693359375
    4. ')' → logprob: -18.625335693359375
    5. '	N' → logprob: -19.250335693359375
    6. ' ' → logprob: -19.375335693359375
    7. ',N' → logprob: -20.625335693359375
    8. '
' → logprob: -20.750335693359375
    9. '[N' → logprob: -21.375335693359375
    10. '>N' → logprob: -21.625335693359375

Token 459: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4742031693458557
    2. ')' → logprob: -0.9742031693458557
    3. '   ' → logprob: -9.599203109741211
    4. ')
' → logprob: -10.349203109741211
    5. ')

' → logprob: -10.599203109741211
    6. ' )
' → logprob: -14.849203109741211
    7. '
' → logprob: -15.099203109741211
    8. ' ' → logprob: -15.349203109741211
    9. ')return' → logprob: -15.349203109741211
    10. ' )' → logprob: -16.84920310974121

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002509687910787761
    2. ' for' → logprob: -9.625250816345215
    3. 'for' → logprob: -10.000250816345215
    4. 'def' → logprob: -10.500250816345215
    5. 'if' → logprob: -10.500250816345215
    6. ' if' → logprob: -10.625250816345215
    7. '<|end|>' → logprob: -11.000250816345215
    8. ')' → logprob: -11.250250816345215
    9. 'result' → logprob: -11.375250816345215
    10. '[' → logprob: -12.750250816345215

Token 461: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32813385128974915
    2. '   ' → logprob: -1.9531338214874268
    3. 'for' (adapté à ' for') → logprob: -2.0781338214874268
    4. ' satisfied' → logprob: -5.078134059906006
    5. ' for' → logprob: -5.828134059906006
    6. 'count' → logprob: -6.078134059906006
    7. 'result' → logprob: -7.953134059906006
    8. 'ans' → logprob: -8.828133583068848
    9. 'sat' → logprob: -8.828133583068848
    10. 'if' → logprob: -9.078133583068848

Token 462: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0033975292462855577
    2. ' j' → logprob: -5.753397464752197
    3. '_j' → logprob: -9.253397941589355
    4. 'k' → logprob: -9.628397941589355
    5. 'idx' → logprob: -11.003397941589355
    6. 'condition' → logprob: -11.128397941589355
    7. '   ' → logprob: -12.128397941589355
    8. 'i' → logprob: -12.753397941589355
    9. 'row' → logprob: -13.003397941589355
    10. 's' → logprob: -13.253397941589355

Token 463: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028218738734722137
    2. 'in' → logprob: -5.877821922302246
    3. ' ' → logprob: -11.377821922302246
    4. '(' → logprob: -13.377821922302246
    5. '<|end|>' → logprob: -13.377821922302246
    6. 'range' → logprob: -15.127821922302246
    7. '	in' → logprob: -15.377821922302246
    8. '   ' → logprob: -15.377821922302246
    9. '[' → logprob: -15.502821922302246
    10. ')' → logprob: -15.502821922302246

Token 464: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018166683614253998
    2. ' range' → logprob: -4.018166542053223
    3. '(range' → logprob: -11.143166542053223
    4. '   ' → logprob: -13.393166542053223
    5. ' ' → logprob: -15.268166542053223
    6. 'in' → logprob: -15.768166542053223
    7. ' in' → logprob: -16.51816749572754
    8. '  ' → logprob: -16.51816749572754
    9. '	range' → logprob: -16.89316749572754
    10. '
' → logprob: -17.51816749572754

Token 465: '(M' (ID: 6103)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10611151903867722
    2. ' range' → logprob: -2.356111526489258
    3. 'M' → logprob: -5.731111526489258
    4. '(M' → logprob: -6.231111526489258
    5. '(range' → logprob: -8.106111526489258
    6. ' M' → logprob: -8.481111526489258
    7. '(' → logprob: -9.231111526489258
    8. 'def' → logprob: -10.981111526489258
    9. ')' → logprob: -11.731111526489258
    10. '   ' → logprob: -11.731111526489258

Token 466: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.038197677582502365
    2. '):' → logprob: -3.2881977558135986
    3. '   ' → logprob: -9.16319751739502
    4. ':' → logprob: -10.66319751739502
    5. ':
' → logprob: -11.53819751739502
    6. '       ' → logprob: -11.53819751739502
    7. '):
' → logprob: -12.28819751739502
    8. '):

' → logprob: -13.66319751739502
    9. '():
' → logprob: -14.16319751739502
    10. ' ' → logprob: -15.03819751739502

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037848003557883203
    2. ' if' → logprob: -8.500378608703613
    3. '<|end|>' → logprob: -9.125378608703613
    4. 'if' → logprob: -10.375378608703613
    5. '   ' → logprob: -11.000378608703613
    6. ':' → logprob: -12.125378608703613
    7. ',' → logprob: -13.500378608703613
    8. '<|end|>' → logprob: -13.625378608703613
    9. ':
' → logprob: -13.875378608703613
    10. '        
' → logprob: -13.875378608703613

Token 468: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16592207551002502
    2. 'if' (adapté à ' if') → logprob: -1.9159220457077026
    3. ' if' → logprob: -5.290922164916992
    4. '   ' → logprob: -7.915922164916992
    5. 's' → logprob: -8.790922164916992
    6. '           ' → logprob: -10.165922164916992
    7. 'result' → logprob: -11.290922164916992
    8. '#' → logprob: -11.790922164916992
    9. '	if' → logprob: -11.790922164916992
    10. ':' → logprob: -11.915922164916992

Token 469: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.2103646695613861
    2. ' check' → logprob: -1.9603646993637085
    3. ' not' → logprob: -3.835364580154419
    4. 'not' → logprob: -3.835364580154419
    5. '(check' → logprob: -5.710364818572998
    6. '   ' → logprob: -6.710364818572998
    7. '((' → logprob: -8.08536434173584
    8. ' (' → logprob: -8.46036434173584
    9. ' ' → logprob: -8.58536434173584
    10. '(not' → logprob: -8.71036434173584

Token 470: '_condition' (ID: 64948)
  Prédit: '_condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -0.01842758059501648
    2. '_all' → logprob: -4.01842737197876
    3. 'condition' → logprob: -8.643427848815918
    4. 'all' → logprob: -9.268427848815918
    5. '(condition' → logprob: -13.018427848815918
    6. 'Condition' → logprob: -13.893427848815918
    7. ' condition' → logprob: -14.268427848815918
    8. '_conditions' → logprob: -14.768427848815918
    9. 'All' → logprob: -14.893427848815918
    10. '```' → logprob: -15.018427848815918

Token 471: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -8.983476436696947e-05
    2. '(' → logprob: -10.125089645385742
    3. '(
' → logprob: -10.125089645385742
    4. ' (' → logprob: -12.250089645385742
    5. '```' → logprob: -13.250089645385742
    6. '[T' → logprob: -14.125089645385742
    7. '((' → logprob: -15.125089645385742
    8. ')' → logprob: -15.250089645385742
    9. '
' → logprob: -15.500089645385742
    10. ' ' → logprob: -15.875089645385742

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007722244481556118
    2. ',S' → logprob: -7.250771999359131
    3. ' ,' → logprob: -10.125772476196289
    4. '(S' → logprob: -11.000772476196289
    5. '(' → logprob: -13.250772476196289
    6. ',
' → logprob: -13.750772476196289
    7. ')' → logprob: -14.625772476196289
    8. ',s' → logprob: -14.875772476196289
    9. '[S' → logprob: -15.125772476196289
    10. 'S' → logprob: -15.375772476196289

Token 473: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01816949062049389
    2. ' S' → logprob: -4.018169403076172
    3. '[S' → logprob: -12.018169403076172
    4. '   ' → logprob: -12.768169403076172
    5. ')' → logprob: -13.143169403076172
    6. '(S' → logprob: -13.393169403076172
    7. ',' → logprob: -13.893169403076172
    8. ',S' → logprob: -14.018169403076172
    9. ' ' → logprob: -14.143169403076172
    10. '	S' → logprob: -14.268169403076172

Token 474: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.28432056307792664
    2. ',' → logprob: -1.409320592880249
    3. ',j' → logprob: -5.90932035446167
    4. '[' → logprob: -8.909320831298828
    5. ',[' → logprob: -9.159320831298828
    6. ' ,' → logprob: -9.409320831298828
    7. 'j' → logprob: -10.284320831298828
    8. '   ' → logprob: -10.409320831298828
    9. ',
' → logprob: -11.034320831298828
    10. '(j' → logprob: -12.284320831298828

Token 475: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012534460984170437
    2. '],' → logprob: -7.376253604888916
    3. ' ,' → logprob: -7.501253604888916
    4. ',p' → logprob: -10.626253128051758
    5. ',j' → logprob: -10.751253128051758
    6. '[' → logprob: -11.751253128051758
    7. 'p' → logprob: -11.876253128051758
    8. '),' → logprob: -12.376253128051758
    9. '[],' → logprob: -12.876253128051758
    10. '[j' → logprob: -13.751253128051758

Token 476: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.020548662170767784
    2. ' p' → logprob: -3.8955485820770264
    3. '   ' → logprob: -13.770548820495605
    4. '[p' → logprob: -13.895548820495605
    5. '
' → logprob: -14.395548820495605
    6. '[' → logprob: -14.520548820495605
    7. ' ' → logprob: -14.645548820495605
    8. ')' → logprob: -14.645548820495605
    9. '0' → logprob: -15.020548820495605
    10. '           ' → logprob: -15.458048820495605

Token 477: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0008329743286594748
    2. '[' → logprob: -7.375833034515381
    3. 'j' → logprob: -8.500832557678223
    4. '_j' → logprob: -14.375832557678223
    5. '[
' → logprob: -14.500832557678223
    6. ' [' → logprob: -14.750832557678223
    7. '
' → logprob: -15.375832557678223
    8. '[u' → logprob: -15.625832557678223
    9. '```' → logprob: -15.625832557678223
    10. '[i' → logprob: -15.750832557678223

Token 478: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34865254163742065
    2. '):
' → logprob: -1.2236526012420654
    3. ')' → logprob: -9.473652839660645
    4. '):

' → logprob: -10.223652839660645
    5. ' ):' → logprob: -10.348652839660645
    6. '):
' → logprob: -10.598652839660645
    7. '[' → logprob: -11.723652839660645
    8. ' ):
' → logprob: -11.848652839660645
    9. ')==' → logprob: -12.848652839660645
    10. '[]):' → logprob: -13.098652839660645

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002294301986694336
    2. ':' → logprob: -7.002294540405273
    3. '):
' → logprob: -8.002294540405273
    4. ':
' → logprob: -8.127294540405273
    5. '):' → logprob: -8.252294540405273
    6. '[' → logprob: -9.127294540405273
    7. ' return' → logprob: -9.877294540405273
    8. ')' → logprob: -10.127294540405273
    9. ',' → logprob: -10.252294540405273
    10. 'result' → logprob: -10.377294540405273

Token 480: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.008766899816691875
    2. ' result' → logprob: -4.758767127990723
    3. '           ' → logprob: -9.008767127990723
    4. '   ' → logprob: -11.133767127990723
    5. '[result' → logprob: -12.133767127990723
    6. 'increment' → logprob: -12.633767127990723
    7. '               ' → logprob: -13.008767127990723
    8. '	result' → logprob: -13.008767127990723
    9. '       ' → logprob: -14.258767127990723
    10. '[' → logprob: -15.258767127990723

Token 481: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '=' → logprob: -16.0
    3. '][' → logprob: -16.375
    4. '```' → logprob: -16.625
    5. '[
' → logprob: -16.75
    6. '   ' → logprob: -17.375
    7. '0' → logprob: -17.5
    8. ' [' → logprob: -17.875
    9. '=[' → logprob: -18.125
    10. '
' → logprob: -18.125

Token 482: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -12.000008583068848
    3. '
' → logprob: -13.000008583068848
    4. '   ' → logprob: -16.250009536743164
    5. '

' → logprob: -16.500009536743164
    6. '-' → logprob: -17.000009536743164
    7. '۰' → logprob: -17.062509536743164
    8. '[' → logprob: -17.250009536743164
    9. '٠' → logprob: -17.312509536743164
    10. '
' → logprob: -17.312509536743164

Token 483: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011211690492928028
    2. ']+=' → logprob: -4.51121187210083
    3. '+=' → logprob: -9.761211395263672
    4. ' ]' → logprob: -9.886211395263672
    5. '[' → logprob: -10.511211395263672
    6. ']=' → logprob: -11.261211395263672
    7. ' +=' → logprob: -12.261211395263672
    8. ')' → logprob: -12.636211395263672
    9. '   ' → logprob: -13.136211395263672
    10. '=' → logprob: -13.886211395263672

Token 484: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4418063461780548
    2. '+=' → logprob: -1.0668063163757324
    3. ']' → logprob: -5.191806316375732
    4. ']+=' → logprob: -5.191806316375732
    5. '[' → logprob: -7.066806316375732
    6. ']=' → logprob: -7.441806316375732
    7. ' =' → logprob: -8.69180679321289
    8. ' +=' → logprob: -8.81680679321289
    9. '1' → logprob: -9.94180679321289
    10. '0' → logprob: -10.19180679321289

Token 485: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.250001907348633
    4. '0' → logprob: -18.500001907348633
    5. '```' → logprob: -19.562501907348633
    6. '１' → logprob: -19.687501907348633
    7. '[' → logprob: -19.750001907348633
    8. '
' → logprob: -19.875001907348633
    9. '<|end|>' → logprob: -20.250001907348633
    10. '`' → logprob: -20.500001907348633

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '0' → logprob: -16.25
    4. '   ' → logprob: -19.0
    5. '```' → logprob: -19.4375
    6. 'int' → logprob: -19.875
    7. '１' → logprob: -20.1875
    8. '`' → logprob: -20.6875
    9. '
' → logprob: -21.0
    10. '+' → logprob: -21.0

Token 487: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007139815716072917
    2. '
' → logprob: -7.62571382522583
    3. '       ' → logprob: -9.125714302062988
    4. 'return' → logprob: -9.500714302062988
    5. 'def' → logprob: -11.375714302062988
    6. ' return' → logprob: -11.500714302062988
    7. '<|end|>' → logprob: -11.875714302062988
    8. '    
' → logprob: -12.875714302062988
    9. 'from' → logprob: -13.375714302062988
    10. ')' → logprob: -13.500714302062988

Token 488: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007951545529067516
    2. 'return' → logprob: -5.507951736450195
    3. ' return' → logprob: -6.632951736450195
    4. '
' → logprob: -6.757951736450195
    5. 'def' → logprob: -6.882951736450195
    6. '       ' → logprob: -8.257951736450195
    7. ' def' → logprob: -11.132951736450195
    8. ')' → logprob: -11.507951736450195
    9. ',' → logprob: -11.507951736450195
    10. ' ' → logprob: -11.632951736450195

Token 489: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03407866880297661
    2. ' return' → logprob: -3.784078598022461
    3. '   ' → logprob: -4.534078598022461
    4. '
' → logprob: -10.534078598022461
    5. ' ' → logprob: -12.159078598022461
    6. '       ' → logprob: -13.409078598022461
    7. '	return' → logprob: -13.534078598022461
    8. 'def' → logprob: -13.784078598022461
    9. '```' → logprob: -14.034078598022461
    10. '  ' → logprob: -14.284078598022461

Token 490: ' is' (ID: 382)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1613127589225769
    2. ' result' → logprob: -1.9113128185272217
    3. 'is' → logprob: -7.036312580108643
    4. ' is' → logprob: -8.5363130569458
    5. '(result' → logprob: -11.4113130569458
    6. 'len' → logprob: -14.2863130569458
    7. '[result' → logprob: -14.5363130569458
    8. ' len' → logprob: -16.786312103271484
    9. '	result' → logprob: -17.161312103271484
    10. ' (' → logprob: -18.286312103271484

Token 491: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.250000953674316
    3. ' _' → logprob: -15.375000953674316
    4. 'all' → logprob: -16.875
    5. '_a' → logprob: -17.25
    6. '_al' → logprob: -17.625
    7. '_full' → logprob: -19.375
    8. '\' → logprob: -19.625
    9. ' all' → logprob: -19.75
    10. '_ALL' → logprob: -20.0

Token 492: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0004901225329376757
    2. 's' → logprob: -7.625490188598633
    3. '_valid' → logprob: -14.375490188598633
    4. 'Satisfied' → logprob: -14.625490188598633
    5. '\' → logprob: -14.750490188598633
    6. '```' → logprob: -15.500490188598633
    7. '_completed' → logprob: -15.625490188598633
    8. '_' → logprob: -16.875490188598633
    9. '_finished' → logprob: -16.875490188598633
    10. ' satisfied' → logprob: -17.000490188598633

Token 493: 'atisfied' (ID: 65362)
  Prédit: 'atisfied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfied' → logprob: -1.4378848391061183e-05
    2. 'atisf' → logprob: -11.500014305114746
    3. 'atis' → logprob: -13.375014305114746
    4. 'Satisfied' → logprob: -14.000014305114746
    5. 'at' → logprob: -14.125014305114746
    6. 's' → logprob: -14.500014305114746
    7. 'atisfactory' → logprob: -16.125015258789062
    8. '_' → logprob: -16.250015258789062
    9. ' satisfied' → logprob: -16.375015258789062
    10. 'a' → logprob: -16.500015258789062

Token 494: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0005549400229938328
    2. 'result' → logprob: -7.500555038452148
    3. ' (' → logprob: -13.625555038452148
    4. '[result' → logprob: -14.750555038452148
    5. ' result' → logprob: -15.500555038452148
    6. '=result' → logprob: -16.12555503845215
    7. '(' → logprob: -16.62555503845215
    8. ',result' → logprob: -16.75055503845215
    9. '```' → logprob: -18.50055503845215
    10. '$result' → logprob: -19.37555503845215

Token 495: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.9054008084349334e-05
    2. '(' → logprob: -10.500039100646973
    3. ' [' → logprob: -12.000039100646973
    4. '   ' → logprob: -13.750039100646973
    5. ',' → logprob: -14.000039100646973
    6. '```' → logprob: -14.000039100646973
    7. '0' → logprob: -14.250039100646973
    8. '([' → logprob: -14.750039100646973
    9. ')[' → logprob: -15.000039100646973
    10. '][' → logprob: -15.125039100646973

Token 496: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -11.875007629394531
    3. ' ' → logprob: -15.500007629394531
    4. '-' → logprob: -17.37500762939453
    5. '   ' → logprob: -17.87500762939453
    6. '(' → logprob: -17.87500762939453
    7. '
' → logprob: -18.00000762939453
    8. '```' → logprob: -18.12500762939453
    9. '][' → logprob: -18.50000762939453
    10. '1' → logprob: -18.87500762939453

Token 497: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008072483469732106
    2. ',M' → logprob: -7.250807285308838
    3. ' ,' → logprob: -9.25080680847168
    4. '   ' → logprob: -14.00080680847168
    5. ',m' → logprob: -15.75080680847168
    6. '‌,' → logprob: -16.50080680847168
    7. 'M' → logprob: -17.37580680847168
    8. ',p' → logprob: -17.50080680847168
    9. ' ' → logprob: -17.50080680847168
    10. ')' → logprob: -17.75080680847168

Token 498: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0002613358374219388
    2. ' M' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.750261306762695
    4. ')' → logprob: -18.750261306762695
    5. ' ' → logprob: -20.375261306762695
    6. '
' → logprob: -20.875261306762695
    7. '	M' → logprob: -21.625261306762695
    8. ' ' → logprob: -21.875261306762695
    9. '  ' → logprob: -22.000261306762695
    10. '    ' → logprob: -22.000261306762695

Token 499: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.250001907348633
    3. ' )' → logprob: -17.375001907348633
    4. '))' → logprob: -17.500001907348633
    5. ')`' → logprob: -18.375001907348633
    6. ')

' → logprob: -19.000001907348633
    7. ')return' → logprob: -19.500001907348633
    8. ')}' → logprob: -20.000001907348633
    9. ')
' → logprob: -20.125001907348633
    10. ')#' → logprob: -20.500001907348633

Token 500: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12255560606718063
    2. '<|end|>' → logprob: -2.7475554943084717
    3. '(' → logprob: -3.9975554943084717
    4. ')' → logprob: -4.747555732727051
    5. '\' → logprob: -5.122555732727051
    6. ':' → logprob: -5.247555732727051
    7. ' 
' → logprob: -5.872555732727051
    8. '
' → logprob: -6.497555732727051
    9. ' )' → logprob: -6.872555732727051
    10. '\n' → logprob: -6.997555732727051

Token 501: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.06586924940347672
    2. 'main' → logprob: -2.8158693313598633
    3. 'print' → logprob: -5.815869331359863
    4. 'count' → logprob: -7.815869331359863
    5. ' increment' → logprob: -8.565869331359863
    6. ' main' → logprob: -9.815869331359863
    7. 'read' → logprob: -10.065869331359863
    8. 'check' → logprob: -10.065869331359863
    9. 'run' → logprob: -10.190869331359863
    10. 'range' → logprob: -10.690869331359863

Token 502: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -8.661626634420827e-05
    2. 'ans' → logprob: -9.875086784362793
    3. 'def' → logprob: -11.250086784362793
    4. '(ans' → logprob: -11.750086784362793
    5. '_def' → logprob: -12.500086784362793
    6. '_an' → logprob: -13.125086784362793
    7. '_answer' → logprob: -13.125086784362793
    8. '_ann' → logprob: -13.375086784362793
    9. '_s' → logprob: -14.250086784362793
    10. '(_' → logprob: -14.375086784362793

Token 503: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -9.710618905955926e-05
    2. '(' → logprob: -9.250097274780273
    3. '(answer' → logprob: -14.500097274780273
    4. ' (' → logprob: -14.750097274780273
    5. '(
' → logprob: -16.250097274780273
    6. '(a' → logprob: -18.250097274780273
    7. '(val' → logprob: -19.000097274780273
    8. 'ans' → logprob: -19.000097274780273
    9. '	ans' → logprob: -19.875097274780273
    10. '_ans' → logprob: -19.875097274780273

Token 504: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014121392741799355
    2. '):
' → logprob: -7.1264119148254395
    3. '():' → logprob: -7.7514119148254395
    4. ')' → logprob: -8.751412391662598
    5. ' ):' → logprob: -12.001412391662598
    6. '()' → logprob: -12.001412391662598
    7. '():
' → logprob: -12.126412391662598
    8. '   ' → logprob: -14.501412391662598
    9. '):

' → logprob: -15.501412391662598
    10. '):
' → logprob: -16.00141143798828

Token 505: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0011760591296479106
    2. ' ans' → logprob: -6.751175880432129
    3. 'return' → logprob: -12.501175880432129
    4. '   ' → logprob: -13.126175880432129
    5. '(ans' → logprob: -16.626176834106445
    6. ' return' → logprob: -16.751176834106445
    7. '	ans' → logprob: -17.126176834106445
    8. 'answer' → logprob: -20.626176834106445
    9. '_ans' → logprob: -20.751176834106445
    10. '```' → logprob: -21.376176834106445

Token 506: ' return' (ID: 622)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.2729995988775045e-06
    2. ' ans' → logprob: -12.000006675720215
    3. '(ans' → logprob: -17.8750057220459
    4. 'return' (adapté à ' return') → logprob: -19.0000057220459
    5. '	ans' → logprob: -20.5000057220459
    6. '   ' → logprob: -22.5000057220459
    7. '1' → logprob: -22.6250057220459
    8. 'ann' → logprob: -22.7500057220459
    9. '_ans' → logprob: -24.2500057220459
    10. '```' → logprob: -24.6250057220459

Token 507: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00317783304490149
    2. ' ans' → logprob: -5.753177642822266
    3. '(ans' → logprob: -16.003177642822266
    4. '	ans' → logprob: -18.628177642822266
    5. '   ' → logprob: -22.003177642822266
    6. '_ans' → logprob: -22.378177642822266
    7. 'answer' → logprob: -23.878177642822266
    8. 'ann' → logprob: -24.128177642822266
    9. 'Ans' → logprob: -24.253177642822266
    10. 'anst' → logprob: -25.253177642822266

Token 508: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022412478923798
    2. ' +' → logprob: -1.9102240800857544
    3. '＋' → logprob: -18.28522491455078
    4. '+
' → logprob: -18.78522491455078
    5. ' +
' → logprob: -19.78522491455078
    6. '1' → logprob: -19.78522491455078
    7. ' plus' → logprob: -20.03522491455078
    8. '+=' → logprob: -20.16022491455078
    9. ' ' → logprob: -20.66022491455078
    10. '()+' → logprob: -20.66022491455078

Token 509: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.750024795532227
    4. '```' → logprob: -20.125024795532227
    5. '  ' → logprob: -20.625024795532227
    6. '    ' → logprob: -22.750024795532227
    7. 'def' → logprob: -23.250024795532227
    8. '       ' → logprob: -23.625024795532227
    9. '=' → logprob: -23.625024795532227
    10. '(' → logprob: -23.750024795532227

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '```' → logprob: -20.875
    4. '   ' → logprob: -21.125
    5. '１' → logprob: -24.25
    6. '۱' → logprob: -25.0
    7. 'def' → logprob: -25.625
    8. '`' → logprob: -25.625
    9. '  ' → logprob: -25.875
    10. '' → logprob: -25.875

Token 511: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4207732081413269
    2. 'print' → logprob: -2.1707732677459717
    3. 'def' → logprob: -2.1707732677459717
    4. '#' → logprob: -2.6707732677459717
    5. '<|end|>' → logprob: -3.2957732677459717
    6. '```' → logprob: -5.045773029327393
    7. ' if' → logprob: -7.670773029327393
    8. '[' → logprob: -7.670773029327393
    9. 'read' → logprob: -7.795773029327393
    10. 'N' → logprob: -8.29577350616455

Token 513: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000577696890104562
    2. ' main' → logprob: -7.500577926635742
    3. '__' → logprob: -10.625577926635742
    4. 'count' → logprob: -15.375577926635742
    5. 'solve' → logprob: -15.875577926635742
    6. '_main' → logprob: -16.750577926635742
    7. 'print' → logprob: -17.750577926635742
    8. 'def' → logprob: -17.750577926635742
    9. ' __' → logprob: -17.875577926635742
    10. 'if' → logprob: -18.500577926635742

Token 514: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.491498531133402e-06
    2. ' ():' → logprob: -12.250009536743164
    3. '():
' → logprob: -12.625009536743164
    4. '()' → logprob: -13.875009536743164
    5. '()>' → logprob: -16.000009536743164
    6. '():
' → logprob: -16.125009536743164
    7. '(' → logprob: -16.875009536743164
    8. '_' → logprob: -17.125009536743164
    9. '()">' → logprob: -17.750009536743164
    10. '().' → logprob: -18.625009536743164

Token 515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00603805435821414
    2. ' N' → logprob: -5.256038188934326
    3. 'N' → logprob: -7.131038188934326
    4. 'n' → logprob: -14.006037712097168
    5. ' ' → logprob: -14.381037712097168
    6. ' n' → logprob: -14.631037712097168
    7. '	N' → logprob: -14.756037712097168
    8. '   ' → logprob: -14.756037712097168
    9. 'def' → logprob: -15.131037712097168
    10. '    ' → logprob: -15.131037712097168

Token 516: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0002783783129416406
    2. ' N' → logprob: -8.50027847290039
    3. '   ' → logprob: -9.50027847290039
    4. ' ' → logprob: -18.12527847290039
    5. '	N' → logprob: -18.12527847290039
    6. '  ' → logprob: -19.87527847290039
    7. '```' → logprob: -20.00027847290039
    8. 'def' → logprob: -21.50027847290039
    9. 'n' → logprob: -22.25027847290039
    10. '(N' → logprob: -22.25027847290039

Token 517: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005075189401395619
    2. '=' → logprob: -7.875507354736328
    3. ',M' → logprob: -9.875507354736328
    4. ' =' → logprob: -10.500507354736328
    5. ',N' → logprob: -10.500507354736328
    6. ' ,' → logprob: -11.500507354736328
    7. '<|end|>' → logprob: -12.250507354736328
    8. '   ' → logprob: -13.625507354736328
    9. ')' → logprob: -13.750507354736328
    10. '‌,' → logprob: -15.000507354736328

Token 518: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.06196970492601395
    2. ' M' → logprob: -2.811969757080078
    3. ' ' → logprob: -14.186969757080078
    4. ',' → logprob: -14.186969757080078
    5. '    ' → logprob: -14.811969757080078
    6. ',M' → logprob: -15.436969757080078
    7. '  ' → logprob: -16.686969757080078
    8. '<|end|>' → logprob: -17.061969757080078
    9. '   ' → logprob: -17.186969757080078
    10. '=' → logprob: -18.436969757080078

Token 519: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1890176683664322
    2. ',' → logprob: -1.814017653465271
    3. ' =' → logprob: -4.6890177726745605
    4. '   ' → logprob: -10.689017295837402
    5. ',N' → logprob: -12.814017295837402
    6. ' ,' → logprob: -13.564017295837402
    7. '=input' → logprob: -13.689017295837402
    8. ')' → logprob: -13.814017295837402
    9. '=N' → logprob: -13.814017295837402
    10. '.' → logprob: -14.189017295837402

Token 520: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0015071245143190026
    2. ' S' → logprob: -6.50150728225708
    3. '*S' → logprob: -13.626506805419922
    4. '(S' → logprob: -13.751506805419922
    5. '   ' → logprob: -15.001506805419922
    6. ' =' → logprob: -15.126506805419922
    7. ' ' → logprob: -15.126506805419922
    8. '  ' → logprob: -15.376506805419922
    9. 'rest' → logprob: -15.626506805419922
    10. 'input' → logprob: -15.751506805419922

Token 521: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.676292231422849e-05
    2. '=' → logprob: -11.250017166137695
    3. ' ,' → logprob: -13.500017166137695
    4. ' =' → logprob: -13.875017166137695
    5. ',p' → logprob: -14.250017166137695
    6. ',M' → logprob: -14.625017166137695
    7. '   ' → logprob: -15.375017166137695
    8. 'p' → logprob: -17.250017166137695
    9. '‌,' → logprob: -17.875017166137695
    10. '_,' → logprob: -18.000017166137695

Token 522: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04858850687742233
    2. ' p' → logprob: -3.048588514328003
    3. '   ' → logprob: -13.923588752746582
    4. ' ' → logprob: -15.923588752746582
    5. '    ' → logprob: -16.673587799072266
    6. '  ' → logprob: -17.173587799072266
    7. 'P' → logprob: -18.173587799072266
    8. '	p' → logprob: -18.548587799072266
    9. ' ' → logprob: -20.298587799072266
    10. '_p' → logprob: -20.423587799072266

Token 523: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043003082275390625
    2. ' =' → logprob: -3.1680030822753906
    3. '()' → logprob: -12.91800308227539
    4. ')' → logprob: -14.04300308227539
    5. '   ' → logprob: -15.16800308227539
    6. '(' → logprob: -15.41800308227539
    7. ',' → logprob: -16.79300308227539
    8. '＝' → logprob: -17.04300308227539
    9. ')=' → logprob: -17.04300308227539
    10. ']' → logprob: -17.66800308227539

Token 524: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.06196768581867218
    2. ' read' → logprob: -2.811967611312866
    3. '	read' → logprob: -17.811967849731445
    4. '   ' → logprob: -20.061967849731445
    5. '(read' → logprob: -21.061967849731445
    6. '_read' → logprob: -21.561967849731445
    7. '.read' → logprob: -22.061967849731445
    8. ' ' → logprob: -23.311967849731445
    9. '  ' → logprob: -23.686967849731445
    10. 'Read' → logprob: -23.811967849731445

Token 525: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.127333340875339e-06
    2. '_inputs' → logprob: -13.000003814697266
    3. '_' → logprob: -13.500003814697266
    4. '_output' → logprob: -16.000003814697266
    5. ' _' → logprob: -16.125003814697266
    6. '_in' → logprob: -16.500003814697266
    7. '_line' → logprob: -16.625003814697266
    8. '_code' → logprob: -17.625003814697266
    9. 'input' → logprob: -17.875003814697266
    10. '```' → logprob: -18.250003814697266

Token 526: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029754308983683586
    2. '()
' → logprob: -3.529754400253296
    3. '()
' → logprob: -13.029754638671875
    4. '()\' → logprob: -14.154754638671875
    5. '()`' → logprob: -15.029754638671875
    6. '()

' → logprob: -15.404754638671875
    7. '()"' → logprob: -16.279754638671875
    8. '()<' → logprob: -16.404754638671875
    9. ' ()' → logprob: -16.779754638671875
    10. '();' → logprob: -17.279754638671875

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05688370764255524
    2. 'ans' → logprob: -2.9318838119506836
    3. '	ans' → logprob: -7.181883811950684
    4. ' ans' → logprob: -7.556883811950684
    5. 'result' → logprob: -8.181883811950684
    6. 'count' → logprob: -8.431883811950684
    7. 'answer' → logprob: -9.431883811950684
    8. '```' → logprob: -9.806883811950684
    9. '<|end|>' → logprob: -10.806883811950684
    10. '_ans' → logprob: -11.306883811950684

Token 528: ' result' (ID: 1534)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02422209084033966
    2. 'print' → logprob: -3.7742221355438232
    3. 'answer' → logprob: -7.524221897125244
    4. 'result' (adapté à ' result') → logprob: -7.774221897125244
    5. ' ans' → logprob: -11.899222373962402
    6. '   ' → logprob: -12.149222373962402
    7. 'res' → logprob: -13.399222373962402
    8. 'count' → logprob: -13.524222373962402
    9. '	ans' → logprob: -14.774222373962402
    10. '_ans' → logprob: -15.149222373962402

Token 529: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.225421741604805
    2. '=' → logprob: -1.6004217863082886
    3. '   ' → logprob: -12.225421905517578
    4. ' ' → logprob: -14.350421905517578
    5. '_' → logprob: -14.600421905517578
    6. ' ' → logprob: -14.600421905517578
    7. '<|end|>' → logprob: -14.850421905517578
    8. '=int' → logprob: -14.975421905517578
    9. ')' → logprob: -15.225421905517578
    10. ',' → logprob: -15.350421905517578

Token 530: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.2014133334159851
    2. 'count' → logprob: -1.7014133930206299
    3. '	count' → logprob: -17.951414108276367
    4. '   ' → logprob: -18.076414108276367
    5. '(count' → logprob: -18.076414108276367
    6. ' ' → logprob: -19.201414108276367
    7. '_count' → logprob: -20.451414108276367
    8. '0' → logprob: -20.451414108276367
    9. '=count' → logprob: -20.826414108276367
    10. '[count' → logprob: -20.951414108276367

Token 531: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.6240566083070007e-06
    2. 'valid' → logprob: -14.000001907348633
    3. '_' → logprob: -14.125001907348633
    4. ' valid' → logprob: -18.500001907348633
    5. '_config' → logprob: -18.625001907348633
    6. '_possible' → logprob: -18.750001907348633
    7. '_invalid' → logprob: -19.125001907348633
    8. 'Valid' → logprob: -19.500001907348633
    9. '_VALID' → logprob: -19.750001907348633
    10. '_val' → logprob: -19.750001907348633

Token 532: '_config' (ID: 11500)
  Prédit: '_config'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_config' → logprob: -5.676981345459353e-06
    2. '_configs' → logprob: -12.375005722045898
    3. '_ans' → logprob: -14.750005722045898
    4. 'config' → logprob: -15.250005722045898
    5. '_valid' → logprob: -15.500005722045898
    6. '```' → logprob: -16.0000057220459
    7. '_' → logprob: -16.3750057220459
    8. 's' → logprob: -16.7500057220459
    9. '_configuration' → logprob: -16.7500057220459
    10. '_results' → logprob: -17.5000057220459

Token 533: 'urations' (ID: 90060)
  Prédit: 'urations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urations' → logprob: -0.0010424555512145162
    2. 'ations' → logprob: -6.876042366027832
    3. 'r' → logprob: -12.376042366027832
    4. 'ur' → logprob: -12.501042366027832
    5. 't' → logprob: -14.876042366027832
    6. 's' → logprob: -15.501042366027832
    7. '   ' → logprob: -15.876042366027832
    8. 'utions' → logprob: -15.876042366027832
    9. '_' → logprob: -16.00104331970215
    10. '-' → logprob: -16.37604331970215

Token 534: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0010349531657993793
    2. '(' → logprob: -6.876034736633301
    3. ' (' → logprob: -13.3760347366333
    4. '(
' → logprob: -14.6260347366333
    5. '   ' → logprob: -16.376035690307617
    6. '```' → logprob: -16.751035690307617
    7. '(n' → logprob: -17.626035690307617
    8. '((' → logprob: -18.001035690307617
    9. '\(' → logprob: -18.626035690307617
    10. ' ' → logprob: -18.751035690307617

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006451862398535013
    2. '(N' → logprob: -5.6314520835876465
    3. ',N' → logprob: -6.0064520835876465
    4. '   ' → logprob: -8.381451606750488
    5. ' ,' → logprob: -9.381451606750488
    6. '(' → logprob: -10.006451606750488
    7. ')' → logprob: -10.881451606750488
    8. 'N' → logprob: -12.756451606750488
    9. ',
' → logprob: -12.881451606750488
    10. ' (' → logprob: -14.506451606750488

Token 536: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0005530327325686812
    2. ' M' → logprob: -7.500553131103516
    3. 'N' → logprob: -17.250553131103516
    4. '   ' → logprob: -17.375553131103516
    5. ' ' → logprob: -17.875553131103516
    6. '    ' → logprob: -19.375553131103516
    7. '  ' → logprob: -19.875553131103516
    8. ')' → logprob: -20.500553131103516
    9. 'S' → logprob: -20.500553131103516
    10. '```' → logprob: -20.875553131103516

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.084206375409849e-05
    2. ',N' → logprob: -10.625041007995605
    3. ' ,' → logprob: -11.125041007995605
    4. '   ' → logprob: -14.000041007995605
    5. 'N' → logprob: -15.125041007995605
    6. ',
' → logprob: -15.375041007995605
    7. ')' → logprob: -15.375041007995605
    8. '(N' → logprob: -16.62504005432129
    9. '```' → logprob: -17.12504005432129
    10. ',S' → logprob: -17.75004005432129

Token 538: ' S' (ID: 336)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.09020572155714035
    2. 'S' → logprob: -2.465205669403076
    3. ' M' → logprob: -6.840205669403076
    4. 'N' → logprob: -8.840206146240234
    5. ' S' → logprob: -10.465206146240234
    6. 'p' → logprob: -11.215206146240234
    7. ' ' → logprob: -12.715206146240234
    8. '   ' → logprob: -12.840206146240234
    9. ')' → logprob: -13.840206146240234
    10. '  ' → logprob: -15.090206146240234

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016396844875998795
    2. ',N' → logprob: -8.875164031982422
    3. '(N' → logprob: -11.750164031982422
    4. '   ' → logprob: -11.750164031982422
    5. ')' → logprob: -12.375164031982422
    6. ' ,' → logprob: -12.750164031982422
    7. 'N' → logprob: -15.000164031982422
    8. '(' → logprob: -15.125164031982422
    9. ',
' → logprob: -15.500164031982422
    10. ',p' → logprob: -16.125164031982422

Token 540: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00030042731668800116
    2. ' p' → logprob: -8.250300407409668
    3. 'M' → logprob: -10.250300407409668
    4. '   ' → logprob: -13.125300407409668
    5. 'N' → logprob: -14.250300407409668
    6. 'P' → logprob: -14.875300407409668
    7. 'S' → logprob: -15.500300407409668
    8. ' ' → logprob: -15.625300407409668
    9. ' M' → logprob: -16.000301361083984
    10. '    ' → logprob: -16.875301361083984

Token 541: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38967928290367126
    2. ')' → logprob: -1.1396793127059937
    3. '   ' → logprob: -5.889679431915283
    4. '())
' → logprob: -11.264678955078125
    5. '()' → logprob: -11.389678955078125
    6. ')
' → logprob: -12.264678955078125
    7. '()
' → logprob: -12.639678955078125
    8. ' )
' → logprob: -13.139678955078125
    9. '())' → logprob: -13.764678955078125
    10. ' )' → logprob: -14.889678955078125

Token 542: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004430947359651327
    2. 'print' → logprob: -5.629430770874023
    3. '
' → logprob: -7.629430770874023
    4. '```' → logprob: -8.254430770874023
    5. ' print' → logprob: -10.004430770874023
    6. '    
' → logprob: -10.504430770874023
    7. '	print' → logprob: -12.129430770874023
    8. '\n' → logprob: -13.254430770874023
    9. '``' → logprob: -13.629430770874023
    10. '`' → logprob: -14.254430770874023

Token 543: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.13388703338569e-06
    2. '   ' → logprob: -12.000009536743164
    3. ' print' → logprob: -12.750009536743164
    4. '```' → logprob: -20.250009536743164
    5. '	print' → logprob: -22.375009536743164
    6. '#print' → logprob: -23.625009536743164
    7. '_print' → logprob: -24.625009536743164
    8. '``' → logprob: -24.875009536743164
    9. 'printf' → logprob: -24.875009536743164
    10. '
' → logprob: -25.000009536743164

Token 544: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.04858850687742233
    2. '(' → logprob: -3.048588514328003
    3. '(
' → logprob: -14.673588752746582
    4. 'result' → logprob: -15.048588752746582
    5. '()' → logprob: -16.173587799072266
    6. '(results' → logprob: -16.173587799072266
    7. ' (' → logprob: -16.548587799072266
    8. '(resultado' → logprob: -16.673587799072266
    9. '(res' → logprob: -16.798587799072266
    10. '(Result' → logprob: -17.048587799072266

Token 545: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '())' → logprob: -13.875001907348633
    3. '()' → logprob: -14.875001907348633
    4. ' )' → logprob: -16.125001907348633
    5. ')`' → logprob: -16.750001907348633
    6. ')
' → logprob: -18.125001907348633
    7. '`)' → logprob: -18.125001907348633
    8. '))' → logprob: -18.500001907348633
    9. '')' → logprob: -19.000001907348633
    10. '）' → logprob: -20.000001907348633

Token 546: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0024087082128971815
    2. 'main' → logprob: -6.377408504486084
    3. '```' → logprob: -8.252408981323242
    4. '#' → logprob: -8.752408981323242
    5. '_' → logprob: -8.752408981323242
    6. ' if' → logprob: -9.502408981323242
    7. '<|end|>' → logprob: -11.127408981323242
    8. '__' → logprob: -11.252408981323242
    9. '
' → logprob: -11.752408981323242
    10. '[' → logprob: -11.877408981323242

Token 547: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 545
Tokens correctement prédits (1ère position, stricte): 243
Tokens correctement prédits (1ère position, avec adaptation): 261
Tokens correctement prédits (top 10): 462
Précision stricte (1ère position): 44.59%
Précision adaptée (1ère position): 47.89%
Précision (top 10): 84.77%
================================================================================
